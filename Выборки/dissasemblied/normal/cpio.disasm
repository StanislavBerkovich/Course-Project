das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dh,%bh
jne,pn 80481f9 <__ctype_toupper_loc@plt-0x1407>
add    %ch,(%esi)
gs
in     (%dx),%al
cmp    %ch,%ah
mov    $0x74,%al
call   bf3fcf2e <argp_program_version+0xb7391eee>
.byte 0xf
cmp    %dl,%cl
adc    %eax,(%eax)
add    %al,(%eax)
jne    80481b2 <__ctype_toupper_loc@plt-0x144e>
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,%al
add    %dl,(%edx)
and    %eax,-0x37a4ff69(%eax)
sub    0x7501c004(%eax),%ch
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
js     80481de <__ctype_toupper_loc@plt-0x1422>
add    %al,(%eax)
jl     80481e2 <__ctype_toupper_loc@plt-0x141e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jge    80481ea <__ctype_toupper_loc@plt-0x1416>
add    %al,(%eax)
jle    80481ee <__ctype_toupper_loc@plt-0x1412>
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
add    %al,0x50bd0000(%eax,%eax,1)
jbe    80481b2 <__ctype_toupper_loc@plt-0x144e>
enter  $0x8fbe,$0xeb
xchg   %eax,%edi
mov    0x2cce9789,%al
arpl   %si,-0xa(%edx)
xchg   %eax,%ecx
jecxz  8048244 <__ctype_toupper_loc@plt-0x13bc>
lods   %ds:(%esi),%al
dec    %ebx
jecxz  80481e8 <__ctype_toupper_loc@plt-0x1418>
push   %ebx
xchg   %dh,(%ebx)
mov    0x3ecc5b49,%eax
cmp    %esi,%edx
mov    (%esi,%esi,2),%ebx
fsubr  %st,%st(6)
mov    %al,0xf54162e5
lret   $0xc93e
loope  80481fa <__ctype_toupper_loc@plt-0x1406>
lahf
push   %cs
ds
addr16 push %ebp
popa
adc    %bl,%bl
cmp    0x763b96e7(%ecx),%edi
dec    %edi
.byte 0x29
.byte 0x1d
.byte 0x8c
.byte 0x1c
push   %es
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  80482a7 <__ctype_toupper_loc@plt-0x1359>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jnp    8048439 <__ctype_toupper_loc@plt-0x11c7>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%bx,%si),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,%cs:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aad    $0x1
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esp
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x2
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
icebp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
arpl   %ax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %gs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    $0x0,%al
add    %al,0x40806a9(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x2(%ebx)
add    %al,(%eax)
mov    %gs,0x40806(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
push   %edx
add    %eax,(%eax)
add    %ah,0x40806a9(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bh,%bl
add    $0x0,%al
add    %ah,0x40806a9(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,-0x1fffffff(%edi)
nop
add    $0x23f08,%eax
add    %dl,(%edx)
add    %cl,0xb00
add    %al,(%eax,%edx,1)
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
verw   %dx
add    (%eax),%al
add    %bl,-0x57(%eax)
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
cmc
add    (%eax),%eax
add    %ah,(%eax)
lods   %ds:(%esi),%eax
add    $0xd0308,%eax
add    %dl,(%edx)
add    %cl,0x31e00
add    %al,0x40806(%ecx,%ebp,4)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
roll   $0x0,(%eax,%eax,1)
push   %eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x9708,%eax
add    %dl,(%edx)
add    %cl,0x3d100
add    %al,0x40806a9(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %cl,0x40000000(%ebx)
mov    $0x6,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x3,%bh
add    %al,(%eax)
lock cmpsb %es:(%edi),%ds:(%esi)
add    $0x11f08,%eax
add    %dl,(%edx)
add    %cl,0x14500
add    %ah,0x40806(%ecx,%ebp,4)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sbb    $0x68000001,%eax
scas   %es:(%edi),%al
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
pop    %ebx
add    (%eax),%al
add    %dl,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x3c08,%eax
add    %dl,(%edx)
add    %cl,0x25400
add    %al,%al
test   $0x40806,%eax
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    8048b2b <__ctype_toupper_loc@plt-0xad5>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048b39 <__ctype_toupper_loc@plt-0xac7>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8048b47 <__ctype_toupper_loc@plt-0xab9>
imul   $0x7074735f,0x5f(%eax,%eax,1),%esp
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     8048b49 <__ctype_toupper_loc@plt-0xab7>
jo     8048b61 <__ctype_toupper_loc@plt-0xa9f>
add    %ah,0x6c(%esi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x66(%ebx)
imul   $0x6d686366,0x0(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jo     8048b70 <__ctype_toupper_loc@plt-0xa90>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048b73 <__ctype_toupper_loc@plt-0xa8d>
je     8048b0c <__ctype_toupper_loc@plt-0xaf4>
gs
js     8048b74 <__ctype_toupper_loc@plt-0xa8c>
arpl   %bp,0x66(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8048b7b <__ctype_toupper_loc@plt-0xa85>
push   $0x74657300
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048b9c <__ctype_toupper_loc@plt-0xa64>
outsl  %ds:(%esi),(%dx)
ja     8048b8e <__ctype_toupper_loc@plt-0xa72>
add    %dh,0x74(%ebx)
jb     8048b9e <__ctype_toupper_loc@plt-0xa62>
arpl   %bp,0x70(%ebp)
add    %ah,0x6e(%ebx,%eiz,2)
addr16
gs
je     8048baf <__ctype_toupper_loc@plt-0xa51>
gs
js     8048bb2 <__ctype_toupper_loc@plt-0xa4e>
add    %ah,0x72(%ecx)
addr16 jo 8048ba3 <__ctype_toupper_loc@plt-0xa5d>
jo     8048bb8 <__ctype_toupper_loc@plt-0xa48>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048bab <__ctype_toupper_loc@plt-0xa55>
insl   (%dx),%es:(%edi)
pop    %edi
jbe    8048bb3 <__ctype_toupper_loc@plt-0xa4d>
jb     8048bc3 <__ctype_toupper_loc@plt-0xa3d>
imul   $0x72747300,0x6e(%edi),%ebp
jb     8048bbc <__ctype_toupper_loc@plt-0xa44>
push   $0x66660072
insb   (%dx),%es:(%edi)
jne    8048bd4 <__ctype_toupper_loc@plt-0xa2c>
push   $0x6c6e755f
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x69(%eax)
jo     8048bd5 <__ctype_toupper_loc@plt-0xa2b>
add    %bl,0x5f(%edi)
jae    8048be9 <__ctype_toupper_loc@plt-0xa17>
jb     8048bdb <__ctype_toupper_loc@plt-0xa25>
jne    8048be9 <__ctype_toupper_loc@plt-0xa17>
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048bf4 <__ctype_toupper_loc@plt-0xa0c>
gs
js     8048bf7 <__ctype_toupper_loc@plt-0xa09>
add    %ah,0x65(%edi)
je     8048bf8 <__ctype_toupper_loc@plt-0xa08>
ja     8048bff <__ctype_toupper_loc@plt-0xa01>
imul   $0x72677465,0x67(%eax,%eax,1),%esp
imul   $0x6e676973,0x0(%si),%esp
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048c0f <__ctype_toupper_loc@plt-0x9f1>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     8048c14 <__ctype_toupper_loc@plt-0x9ec>
add    %bl,0x5f(%edi)
jae    8048c22 <__ctype_toupper_loc@plt-0x9de>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    8048c3c <__ctype_toupper_loc@plt-0x9c4>
jo     8048c39 <__ctype_toupper_loc@plt-0x9c7>
imul   $0x646b6d00,0x74(%esi),%ebp
imul   $0x70677261,0x0(%edx),%esi
pop    %edi
jo     8048c4a <__ctype_toupper_loc@plt-0x9b6>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048c3d <__ctype_toupper_loc@plt-0x9c3>
insl   (%dx),%es:(%edi)
pop    %edi
jbe    8048c45 <__ctype_toupper_loc@plt-0x9bb>
jb     8048c55 <__ctype_toupper_loc@plt-0x9ab>
imul   $0x6f6f685f,0x6e(%edi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048bf9 <__ctype_toupper_loc@plt-0xa07>
jae    8048c6f <__ctype_toupper_loc@plt-0x991>
imul   $0x636d656d,%fs:0x0(%esi),%ebp
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048c6d <__ctype_toupper_loc@plt-0x993>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048c96 <__ctype_toupper_loc@plt-0x96a>
gs
jb     8048c9a <__ctype_toupper_loc@plt-0x966>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     8048c98 <__ctype_toupper_loc@plt-0x968>
pop    %edi
addr16
gs
je     8048c97 <__ctype_toupper_loc@plt-0x969>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048cb0 <__ctype_toupper_loc@plt-0x950>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048c43 <__ctype_toupper_loc@plt-0x9bd>
jae    8048cb9 <__ctype_toupper_loc@plt-0x947>
jb     8048cbb <__ctype_toupper_loc@plt-0x945>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x68(%ebx,%eiz,2)
outsl  %ds:(%esi),(%dx)
ja     8048cbe <__ctype_toupper_loc@plt-0x942>
add    %dh,0x74(%ebx)
jb     8048cb8 <__ctype_toupper_loc@plt-0x948>
push   $0x6c756e72
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x67726100,0x6b(%esi),%ebp
jo     8048cc7 <__ctype_toupper_loc@plt-0x939>
popaw
imul   $0x65670065,0x72(%ebp,%esi,2),%ebp
je     8048ce4 <__ctype_toupper_loc@plt-0x91c>
ja     8048ce4 <__ctype_toupper_loc@plt-0x91c>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jne    8048cf7 <__ctype_toupper_loc@plt-0x909>
imul   $0x7300736e,0x65(%ebp),%ebp
je     8048cfe <__ctype_toupper_loc@plt-0x902>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048cfa <__ctype_toupper_loc@plt-0x906>
je     8048c97 <__ctype_toupper_loc@plt-0x969>
jne    8048d0d <__ctype_toupper_loc@plt-0x8f3>
imul   $0x7461736e,0x65(%ebp),%ebp
add    %dh,0x6d(%edx)
imul   $0x72655f5f,%fs:0x0(%edx),%esi
jb     8048d1b <__ctype_toupper_loc@plt-0x8e5>
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x61657200,0x6e(%edi),%ebp
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %dh,0x74(%ebx)
jb     8048d36 <__ctype_toupper_loc@plt-0x8ca>
fs
jne    8048d3b <__ctype_toupper_loc@plt-0x8c5>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     8048d34 <__ctype_toupper_loc@plt-0x8cc>
jo     8048d4c <__ctype_toupper_loc@plt-0x8b4>
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
js     8048d51 <__ctype_toupper_loc@plt-0x8af>
je     8048d41 <__ctype_toupper_loc@plt-0x8bf>
je     8048d18 <__ctype_toupper_loc@plt-0x8e8>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048d5b <__ctype_toupper_loc@plt-0x8a5>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x63,(%eax),%eax
je     8048d5e <__ctype_toupper_loc@plt-0x8a2>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     8048d63 <__ctype_toupper_loc@plt-0x89d>
jb     8048d6c <__ctype_toupper_loc@plt-0x894>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x63(%esi)
push   $0x6e776f
jae    8048d7e <__ctype_toupper_loc@plt-0x882>
outsl  %fs:(%esi),(%dx)
jne    8048d82 <__ctype_toupper_loc@plt-0x87e>
add    %ah,0x72(%ecx)
addr16 jo 8048d73 <__ctype_toupper_loc@plt-0x88d>
push   $0x706c65
data16
jo     8048d91 <__ctype_toupper_loc@plt-0x86f>
je     8048d91 <__ctype_toupper_loc@plt-0x86f>
add    %ah,0x72(%ecx)
addr16 jo 8048d83 <__ctype_toupper_loc@plt-0x87d>
jo     8048d98 <__ctype_toupper_loc@plt-0x868>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048d8b <__ctype_toupper_loc@plt-0x875>
insl   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x67(%ebp)
pop    %edi
popa
fs
fs
jb     8048d9a <__ctype_toupper_loc@plt-0x866>
jae    8048daa <__ctype_toupper_loc@plt-0x856>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048daa <__ctype_toupper_loc@plt-0x856>
add    %bl,0x5f(%edi)
jbe    8048dbd <__ctype_toupper_loc@plt-0x843>
outsb  %ds:(%esi),(%dx)
jo     8048dbf <__ctype_toupper_loc@plt-0x841>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8048dcc <__ctype_toupper_loc@plt-0x834>
popa
jae    8048dcd <__ctype_toupper_loc@plt-0x833>
add    %dh,0x74(%ebx)
jb     8048dca <__ctype_toupper_loc@plt-0x836>
popa
jae    8048dcf <__ctype_toupper_loc@plt-0x831>
arpl   %bp,0x70(%ebp)
add    %ch,0x62(%ebp)
jae    8048ddb <__ctype_toupper_loc@plt-0x825>
outsb  %ds:(%esi),(%dx)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x65(%edi)
je     8048def <__ctype_toupper_loc@plt-0x811>
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esp
je     8048df3 <__ctype_toupper_loc@plt-0x80d>
je     8048dca <__ctype_toupper_loc@plt-0x836>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048e00 <__ctype_toupper_loc@plt-0x800>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048d9e <__ctype_toupper_loc@plt-0x862>
popa
jb     8048e08 <__ctype_toupper_loc@plt-0x7f8>
jo     8048e02 <__ctype_toupper_loc@plt-0x7fe>
gs
jb     8048e18 <__ctype_toupper_loc@plt-0x7e8>
pop    %edi
gs
js     8048e13 <__ctype_toupper_loc@plt-0x7ed>
je     8048e0b <__ctype_toupper_loc@plt-0x7f5>
jae    8048e22 <__ctype_toupper_loc@plt-0x7de>
popa
je     8048e26 <__ctype_toupper_loc@plt-0x7da>
jae    8048db3 <__ctype_toupper_loc@plt-0x84d>
pop    %edi
pop    %edi
js     8048e2a <__ctype_toupper_loc@plt-0x7d6>
je     8048e1a <__ctype_toupper_loc@plt-0x7e6>
je     8048df1 <__ctype_toupper_loc@plt-0x80f>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048e34 <__ctype_toupper_loc@plt-0x7cc>
outsb  %ds:(%esi),(%dx)
jbe    8048dd2 <__ctype_toupper_loc@plt-0x82e>
jae    8048e48 <__ctype_toupper_loc@plt-0x7b8>
fs
gs
jb     8048e4a <__ctype_toupper_loc@plt-0x7b6>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
addr16
gs
je     8048e4b <__ctype_toupper_loc@plt-0x7b5>
outsl  %ds:(%esi),(%dx)
jae    8048e5a <__ctype_toupper_loc@plt-0x7a6>
bound  %edi,0x6e(%ecx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     8048e66 <__ctype_toupper_loc@plt-0x79a>
imul   $0x6c646165,0x72(%eax,%eax,1),%esp
imul   $0x735f5f00,0x6b(%esi),%ebp
je     8048e74 <__ctype_toupper_loc@plt-0x78c>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
js     8048e7c <__ctype_toupper_loc@plt-0x784>
imul   $0x64,0x6f(%esi),%ebp
add    %dh,0x74(%ebp)
imul   $0x77660073,0x65(%ebp),%ebp
jb     8048e88 <__ctype_toupper_loc@plt-0x778>
je     8048e86 <__ctype_toupper_loc@plt-0x77a>
add    %ah,0x65(%edi)
je     8048e9a <__ctype_toupper_loc@plt-0x766>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    8048e2f <__ctype_toupper_loc@plt-0x7d1>
addr16
gs
je     8048e98 <__ctype_toupper_loc@plt-0x768>
jne    8048e9e <__ctype_toupper_loc@plt-0x762>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     8048eb5 <__ctype_toupper_loc@plt-0x74b>
imul   $0x72747300,0x65(%ebp),%ebp
gs
jb     8048ebd <__ctype_toupper_loc@plt-0x743>
outsl  %ds:(%esi),(%dx)
jb     8048ead <__ctype_toupper_loc@plt-0x753>
jb     8048e50 <__ctype_toupper_loc@plt-0x7b0>
insb   (%dx),%es:(%edi)
jae    8048eb8 <__ctype_toupper_loc@plt-0x748>
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048ebf <__ctype_toupper_loc@plt-0x741>
push   $0x75660072
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x66(%ebx)
imul   $0x70677261,0x0(%ebp,%eiz,2),%ebp
pop    %edi
gs
jb     8048ee5 <__ctype_toupper_loc@plt-0x71b>
outsl  %ds:(%esi),(%dx)
jb     8048e76 <__ctype_toupper_loc@plt-0x78a>
pop    %edi
pop    %edi
jbe    8048ee0 <__ctype_toupper_loc@plt-0x720>
jo     8048eee <__ctype_toupper_loc@plt-0x712>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x70,(%eax),%eax
jb     8048ef7 <__ctype_toupper_loc@plt-0x709>
addr16 jb 8048eec <__ctype_toupper_loc@plt-0x714>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048f11 <__ctype_toupper_loc@plt-0x6ef>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x73(%ecx)
outsl  %ds:(%esi),(%dx)
jb     8048f1c <__ctype_toupper_loc@plt-0x6e4>
add    %ah,0x72(%ecx)
addr16 jo 8048f0d <__ctype_toupper_loc@plt-0x6f3>
jo     8048f11 <__ctype_toupper_loc@plt-0x6ef>
jb     8048f25 <__ctype_toupper_loc@plt-0x6db>
add    %dh,%gs:0x6c(%ebx)
gs
gs
jo     8048eba <__ctype_toupper_loc@plt-0x746>
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048f33 <__ctype_toupper_loc@plt-0x6cd>
jne    8048f36 <__ctype_toupper_loc@plt-0x6ca>
jo     8048f2d <__ctype_toupper_loc@plt-0x6d3>
jb     8048f29 <__ctype_toupper_loc@plt-0x6d7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    8048f46 <__ctype_toupper_loc@plt-0x6ba>
jb     8048f37 <__ctype_toupper_loc@plt-0x6c9>
jo     8048f4f <__ctype_toupper_loc@plt-0x6b1>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048f54 <__ctype_toupper_loc@plt-0x6ac>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048f4e <__ctype_toupper_loc@plt-0x6b2>
jb     8048f4a <__ctype_toupper_loc@plt-0x6b6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    8048f63 <__ctype_toupper_loc@plt-0x69d>
jb     8048f5e <__ctype_toupper_loc@plt-0x6a2>
outsb  %ds:(%esi),(%dx)
je     8048f5e <__ctype_toupper_loc@plt-0x6a2>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x75(%esi)
je     8048f6a <__ctype_toupper_loc@plt-0x696>
insl   (%dx),%es:(%edi)
gs
jae    8048f66 <__ctype_toupper_loc@plt-0x69a>
je     8048f07 <__ctype_toupper_loc@plt-0x6f9>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048f73 <__ctype_toupper_loc@plt-0x68d>
add    %ah,0x6f(%esi)
jo     8048f78 <__ctype_toupper_loc@plt-0x688>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8048f82 <__ctype_toupper_loc@plt-0x67e>
js     8048f93 <__ctype_toupper_loc@plt-0x66d>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x5f4f495f,0x0(%esi),%ebp
addr16
gs
je     8048f91 <__ctype_toupper_loc@plt-0x66f>
add    %dh,0x65(%ebx)
je     8048f9a <__ctype_toupper_loc@plt-0x666>
imul   $0x7274735f,0x5f(%eax,%eax,1),%esp
arpl   %sp,0x74(%ecx)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x77(%esi)
jb     8048fb0 <__ctype_toupper_loc@plt-0x650>
je     8048fae <__ctype_toupper_loc@plt-0x652>
pop    %edi
jne    8048fba <__ctype_toupper_loc@plt-0x646>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     8048fba <__ctype_toupper_loc@plt-0x646>
insl   (%dx),%es:(%edi)
jo     8048f5a <__ctype_toupper_loc@plt-0x6a6>
jae    8048fd0 <__ctype_toupper_loc@plt-0x630>
jb     8048fc3 <__ctype_toupper_loc@plt-0x63d>
jb     8048fd2 <__ctype_toupper_loc@plt-0x62e>
outsl  %ds:(%esi),(%dx)
jb     8048f63 <__ctype_toupper_loc@plt-0x69d>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048fe3 <__ctype_toupper_loc@plt-0x61d>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x70677261,0x0(%esi),%ebp
pop    %edi
jae    8048ff0 <__ctype_toupper_loc@plt-0x610>
popa
je     8048fe4 <__ctype_toupper_loc@plt-0x61c>
pop    %edi
push   $0x706c65
pop    %edi
pop    %edi
outsl  %ds:(%esi),(%dx)
jbe    8048fef <__ctype_toupper_loc@plt-0x611>
jb     8048ff2 <__ctype_toupper_loc@plt-0x60e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048f90 <__ctype_toupper_loc@plt-0x670>
data16
jo     8049008 <__ctype_toupper_loc@plt-0x5f8>
je     8049008 <__ctype_toupper_loc@plt-0x5f8>
pop    %edi
jne    8049006 <__ctype_toupper_loc@plt-0x5fa>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     804901a <__ctype_toupper_loc@plt-0x5e6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8049025 <__ctype_toupper_loc@plt-0x5db>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8049029 <__ctype_toupper_loc@plt-0x5d7>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804903c <__ctype_toupper_loc@plt-0x5c4>
popa
jb     804903f <__ctype_toupper_loc@plt-0x5c1>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x3000400,%eax
add    %al,(%esi)
add    %al,(%eax,%eax,1)
push   %es
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
pop    %es
add    %al,(%esi)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
or     %al,(%eax)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
or     %eax,(%eax)
add    $0x0,%al
add    $0x0,%al
push   %es
add    %al,(%eax,%eax,1)
or     (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
push   %es
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
or     (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x6000400,%eax
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
or     (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
or     (%eax),%al
add    $0x0,%al
or     (%eax),%al
add    $0x0,%al
or     %al,(%eax)
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    %eax,(%eax)
add    $0x0,%al
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
or     (%eax),%al
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jno    8049179 <__ctype_toupper_loc@plt-0x487>
imul   $0xb0000,(%ecx),%ecx
sbb    0x100000,%al
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xa0000,%eax
es
add    $0x100000,%eax
add    %al,(%eax)
jae    8049194 <__ctype_toupper_loc@plt-0x46c>
imul   $0x90000,(%ecx),%ecx
xor    %al,0x100000
add    %al,(%eax)
adc    $0x69,%al
imul   $0x53c,0x80000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
pop    %es
add    %al,0x5(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x60000,%eax
push   %ecx
add    $0x100000,%eax
add    %al,(%eax)
push   %ss
imul   $0x50000,0xd(%ecx),%ebp
pop    %ebx
add    $0x100000,%eax
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x40000,%eax
gs
add    $0x100000,%eax
add    %al,(%eax)
je     80491f3 <__ctype_toupper_loc@plt-0x40d>
imul   $0x30000,(%ecx),%ecx
outsl  %ds:(%esi),(%dx)
add    $0x100000,%eax
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x20000,%eax
jnp    80491f7 <__ctype_toupper_loc@plt-0x409>
add    %al,(%eax)
add    %al,(%eax)
cld
lahf
push   %es
or     %al,(%esi)
xor    (%eax),%al
add    %al,0x50806a9(%eax)
jne    8049207 <__ctype_toupper_loc@plt-0x3f9>
add    %al,0x7d050806(%ecx,%ebp,4)
add    %al,(%eax)
mov    0x50806a9,%al
js     8049217 <__ctype_toupper_loc@plt-0x3e9>
add    %ah,-0x7dfaf7fa(%ecx,%ebp,4)
add    %al,(%eax)
shrb   $0x0,-0x7afaf7fa(%ecx)
or     $0xa0,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
mov    0x2070806,%al
add    %al,(%eax)
adc    $0xa0,%al
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
mov    0x4070806,%al
add    %al,(%eax)
sbb    $0xa0,%al
push   %es
or     %al,(%edi)
add    $0xa0200000,%eax
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0xa0,%al
push   %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
sub    %ah,0x8070806(%eax)
add    %al,(%eax)
sub    $0xa0,%al
push   %es
or     %al,(%edi)
or     %eax,(%eax)
add    %dh,(%eax)
mov    0xa070806,%al
add    %al,(%eax)
xor    $0xa0,%al
push   %es
or     %al,(%edi)
or     (%eax),%eax
add    %bh,(%eax)
mov    0xc070806,%al
add    %al,(%eax)
cmp    $0xa0,%al
push   %es
or     %al,(%edi)
or     $0xa0400000,%eax
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %esp
mov    0xf070806,%al
add    %al,(%eax)
dec    %eax
mov    0x10070806,%al
add    %al,(%eax)
dec    %esp
mov    0x11070806,%al
add    %al,(%eax)
push   %eax
mov    0x12070806,%al
add    %al,(%eax)
push   %esp
mov    0x13070806,%al
add    %al,(%eax)
pop    %eax
mov    0x14070806,%al
add    %al,(%eax)
pop    %esp
mov    0x15070806,%al
add    %al,(%eax)
pusha
mov    0x16070806,%al
add    %al,(%eax)
mov    %fs:0x17070806,%al
add    %al,(%eax)
push   $0x70806a0
sbb    %al,(%eax)
add    %ch,0x6(%eax,%eiz,4)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,-0x60(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x6(%eax,%eiz,4)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x60(%eax)
push   %es
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x6(%eax,%eiz,4)
or     %al,(%edi)
sbb    $0xa0800000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
test   %ah,0x1f070806(%eax)
add    %al,(%eax)
mov    %ah,0x20070806(%eax)
add    %al,(%eax)
mov    %fs,0x21070806(%eax)
add    %al,(%eax)
nop
mov    0x22070806,%al
add    %al,(%eax)
xchg   %eax,%esp
mov    0x23070806,%al
add    %al,(%eax)
cwtl
mov    0x24070806,%al
add    %al,(%eax)
pushf
mov    0x25070806,%al
add    %al,(%eax)
mov    0x70806a0,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    0x27070806,%al
add    %al,(%eax)
test   $0xa0,%al
push   %es
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x29070806(%eax,%eiz,4)
add    %al,(%eax)
mov    $0xa0,%al
push   %es
or     %al,(%edi)
sub    (%eax),%al
add    %dh,0x2b070806(%eax,%eiz,4)
add    %al,(%eax)
mov    $0x70806a0,%eax
sub    $0x0,%al
add    %bh,0x2d070806(%eax,%eiz,4)
add    %al,(%eax)
shlb   $0x0,0x2e070806(%eax)
add    %al,%ah
mov    0x2f070806,%al
add    %al,(%eax)
enter  $0x6a0,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
mov    0x31070806,%al
add    %al,(%eax)
shlb   0x32070806(%eax)
add    %al,(%eax)
aam    $0xa0
push   %es
or     %al,(%edi)
xor    (%eax),%eax
add    %bl,%al
mov    0x34070806,%al
add    %al,(%eax)
fsubl  0x35070806(%eax)
add    %al,(%eax)
loopne 8049372 <__ctype_toupper_loc@plt-0x28e>
push   %es
or     %al,(%edi)
add    %al,%ss:(%eax)
in     $0xa0,%al
push   %es
or     %al,(%edi)
aaa
add    %al,(%eax)
call   f0c9a85 <argp_program_version+0x705ea45>
cmp    %al,(%eax)
add    %ch,%ah
mov    0x39070806,%al
add    %al,(%eax)
lock mov 0x3a070806,%al
add    %al,(%eax)
hlt
mov    0x3b070806,%al
add    %al,(%eax)
clc
mov    0x3c070806,%al
add    %al,(%eax)
cld
mov    0x3d070806,%al
add    %al,(%eax)
add    %ah,0x3e070806(%ecx)
add    %al,(%eax)
add    $0xa1,%al
push   %es
or     %al,(%edi)
aas
add    %al,(%eax)
or     %ah,0x40070806(%ecx)
add    %al,(%eax)
or     $0xa1,%al
push   %es
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
adc    %ah,0x42070806(%ecx)
add    %al,(%eax)
adc    $0xa1,%al
push   %es
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
sbb    %ah,0x44070806(%ecx)
add    %al,(%eax)
sbb    $0xa1,%al
push   %es
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
and    %ah,0x46070806(%ecx)
add    %al,(%eax)
and    $0xa1,%al
push   %es
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
sub    %ah,0x48070806(%ecx)
add    %al,(%eax)
sub    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
xor    %ah,0x4a070806(%ecx)
add    %al,(%eax)
xor    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
cmp    %ah,0x4c070806(%ecx)
add    %al,(%eax)
cmp    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
inc    %eax
mov    0x4e070806,%eax
add    %al,(%eax)
inc    %esp
mov    0x4f070806,%eax
add    %al,(%eax)
dec    %eax
mov    0x50070806,%eax
add    %al,(%eax)
dec    %esp
mov    0x51070806,%eax
add    %al,(%eax)
push   %eax
mov    0x52070806,%eax
add    %al,(%eax)
push   %esp
mov    0x53070806,%eax
add    %al,(%eax)
pop    %eax
mov    0x54070806,%eax
add    %al,(%eax)
pop    %esp
mov    0x55070806,%eax
add    %al,(%eax)
pusha
mov    0x56070806,%eax
add    %al,(%eax)
mov    %fs:0x57070806,%eax
add    %al,(%eax)
push   $0x70806a1
pop    %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    0x59070806,%eax
add    %al,(%eax)
jo     8049493 <__ctype_toupper_loc@plt-0x16d>
push   %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
je     804949b <__ctype_toupper_loc@plt-0x165>
push   %es
or     %al,(%edi)
pop    %ebx
add    %al,(%eax)
js     80494a3 <__ctype_toupper_loc@plt-0x15d>
push   %es
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
jl     80494ab <__ctype_toupper_loc@plt-0x155>
push   %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
andb   $0x0,0x5e070806(%ecx)
add    %al,0x5f070806(%ecx,%eiz,4)
add    %al,(%eax)
mov    %ah,0x60070806(%ecx)
add    %al,(%eax)
mov    %fs,0x61070806(%ecx)
add    %al,(%eax)
nop
mov    0x62070806,%eax
add    %al,(%eax)
xchg   %eax,%esp
mov    0x63070806,%eax
add    %al,(%eax)
cwtl
mov    0x64070806,%eax
add    %al,(%eax)
pushf
mov    0x65070806,%eax
add    %al,(%eax)
mov    0x70806a1,%al
data16
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    0x67070806,%eax
add    %al,(%eax)
test   $0xa1,%al
push   %es
or     %al,(%edi)
push   $0xa1ac0000
push   %es
or     %al,(%edi)
imul   $0x6a1b000,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %dh,0x6b070806(%ecx,%eiz,4)
add    %al,(%eax)
mov    $0x70806a1,%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x70806a1,%esp
insl   (%dx),%es:(%edi)
add    %al,(%eax)
shlb   $0x0,0x6e070806(%ecx)
add    %al,%ah
mov    0x6f070806,%eax
add    %al,(%eax)
enter  $0x6a1,$0x8
pop    %es
jo     80495a7 <__ctype_toupper_loc@plt-0x59>
add    %cl,%ah
mov    0x71070806,%eax
add    %al,(%eax)
shlb   0x72070806(%ecx)
add    %al,(%eax)
aam    $0xa1
push   %es
or     %al,(%edi)
jae    80495bf <__ctype_toupper_loc@plt-0x41>
add    %bl,%al
mov    0x74070806,%eax
push   %ebx
sub    $0x8,%esp
call   8049e60 <fchmod@plt+0x130>
add    $0x20a2f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     80495e6 <__ctype_toupper_loc@plt-0x1a>
call   8049910 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x806a004
jmp    *0x806a008
add    %al,(%eax)
jmp    *0x806a00c
push   $0x0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a010
push   $0x8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a014
push   $0x10
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a018
push   $0x18
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a01c
push   $0x20
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a020
push   $0x28
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a024
push   $0x30
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a028
push   $0x38
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a02c
push   $0x40
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a030
push   $0x48
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a034
push   $0x50
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a038
push   $0x58
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a03c
push   $0x60
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a040
push   $0x68
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a044
push   $0x70
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a048
push   $0x78
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a04c
push   $0x80
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a050
push   $0x88
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a054
push   $0x90
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a058
push   $0x98
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a05c
push   $0xa0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a060
push   $0xa8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a064
push   $0xb0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a068
push   $0xb8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a06c
push   $0xc0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a070
push   $0xc8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a074
push   $0xd0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a078
push   $0xd8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a07c
push   $0xe0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a080
push   $0xe8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a084
push   $0xf0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a088
push   $0xf8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a08c
push   $0x100
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a090
push   $0x108
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a094
push   $0x110
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a098
push   $0x118
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a09c
push   $0x120
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0a0
push   $0x128
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0a4
push   $0x130
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0a8
push   $0x138
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0ac
push   $0x140
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0b0
push   $0x148
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0b4
push   $0x150
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0b8
push   $0x158
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0bc
push   $0x160
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0c0
push   $0x168
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0c4
push   $0x170
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0c8
push   $0x178
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0cc
push   $0x180
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0d0
push   $0x188
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0d4
push   $0x190
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0d8
push   $0x198
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0dc
push   $0x1a0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0e0
push   $0x1a8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0e4
push   $0x1b0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0e8
push   $0x1b8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0ec
push   $0x1c0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0f0
push   $0x1c8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0f4
push   $0x1d0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0f8
push   $0x1d8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a0fc
push   $0x1e0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a100
push   $0x1e8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a104
push   $0x1f0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a108
push   $0x1f8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a10c
push   $0x200
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a110
push   $0x208
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a114
push   $0x210
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a118
push   $0x218
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a11c
push   $0x220
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a120
push   $0x228
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a124
push   $0x230
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a128
push   $0x238
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a12c
push   $0x240
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a130
push   $0x248
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a134
push   $0x250
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a138
push   $0x258
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a13c
push   $0x260
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a140
push   $0x268
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a144
push   $0x270
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a148
push   $0x278
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a14c
push   $0x280
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a150
push   $0x288
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a154
push   $0x290
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a158
push   $0x298
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a15c
push   $0x2a0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a160
push   $0x2a8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a164
push   $0x2b0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a168
push   $0x2b8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a16c
push   $0x2c0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a170
push   $0x2c8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a174
push   $0x2d0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a178
push   $0x2d8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a17c
push   $0x2e0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a180
push   $0x2e8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a184
push   $0x2f0
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a188
push   $0x2f8
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a18c
push   $0x300
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a190
push   $0x308
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a194
push   $0x310
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a198
push   $0x318
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a19c
push   $0x320
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1a0
push   $0x328
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1a4
push   $0x330
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1a8
push   $0x338
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1ac
push   $0x340
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1b0
push   $0x348
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1b4
push   $0x350
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1b8
push   $0x358
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1bc
push   $0x360
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1c0
push   $0x368
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1c4
push   $0x370
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1c8
push   $0x378
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1cc
push   $0x380
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1d0
push   $0x388
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1d4
push   $0x390
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806a1d8
push   $0x398
jmp    80495f0 <__ctype_toupper_loc@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %ebx
and    $0xfffffff0,%esp
sub    $0x10,%esp
mov    0xc(%ebp),%ebx
movl   $0x8063fbc,0x4(%esp)
movl   $0x6,(%esp)
call   8049b20 <setlocale@plt>
movl   $0x806169e,0x4(%esp)
movl   $0x80637c1,(%esp)
call   8049be0 <bindtextdomain@plt>
movl   $0x80637c1,(%esp)
call   8049800 <textdomain@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   805bb40 <argp_parse+0xe20>
movl   $0x806a890,0x4(%esp)
movl   $0x80637c1,(%esp)
call   805bab0 <argp_parse+0xd90>
mov    0x8(%ebp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80504f0 <fchmod@plt+0x67c0>
call   80515c0 <fchmod@plt+0x7890>
call   *0x806a9e4
mov    0x806b02c,%eax
test   %eax,%eax
js     8049e14 <fchmod@plt+0xe4>
cmp    $0x3fffffff,%eax
jg     8049e20 <fchmod@plt+0xf0>
mov    %eax,(%esp)
call   8049cb0 <close@plt>
add    $0x1,%eax
sete   %al
test   %al,%al
je     8049e14 <fchmod@plt+0xe4>
movl   $0x5,0x8(%esp)
movl   $0x80616b0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
call   8055680 <fchmod@plt+0xb950>
xor    %eax,%eax
mov    -0x4(%ebp),%ebx
leave
ret
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8055f70 <fchmod@plt+0xc240>
add    $0x1,%eax
sete   %al
jmp    8049dd7 <fchmod@plt+0xa7>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8060f60
push   $0x8060ef0
push   %ecx
push   %esi
push   $0x8049d40
call   8049980 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x806a96f,%eax
sub    $0x806a96c,%eax
cmp    $0x6,%eax
ja     8049e80 <fchmod@plt+0x150>
ret
mov    $0x0,%eax
test   %eax,%eax
je     8049e7f <fchmod@plt+0x14f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x806a96c,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x806a96c,%eax
sub    $0x806a96c,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049eb9 <fchmod@plt+0x189>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049eb8 <fchmod@plt+0x188>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x806a96c,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x806a9c4
jne    8049efc <fchmod@plt+0x1cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049e70 <fchmod@plt+0x140>
movb   $0x1,0x806a9c4
leave
repz ret
xchg   %ax,%ax
mov    0x8069f10,%eax
test   %eax,%eax
je     8049f28 <fchmod@plt+0x1f8>
mov    $0x0,%eax
test   %eax,%eax
je     8049f28 <fchmod@plt+0x1f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8069f10,(%esp)
call   *%eax
leave
jmp    8049ea0 <fchmod@plt+0x170>
nop
jmp    8049ea0 <fchmod@plt+0x170>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x806aa70,%ebx
lea    -0x3(%ebx),%esi
cmp    $0x1,%esi
jbe    8049fd0 <fchmod@plt+0x2a0>
cmp    $0x8,%ebx
jne    8049f98 <fchmod@plt+0x268>
mov    %ecx,%esi
sar    $0x1f,%esi
mov    %esi,0xc(%esp)
mov    %esi,%edi
xor    0xc(%esp),%edx
mov    %edx,%ebx
sub    %esi,%ebx
mov    0xc(%esp),%esi
mov    %ebx,%edx
and    $0x1,%edx
xor    %edx,%esi
sub    %esi,%edi
and    $0x1,%edi
test   %edi,%edi
je     8049f89 <fchmod@plt+0x259>
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8053960 <fchmod@plt+0x9c30>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebx
je     8049f4e <fchmod@plt+0x21e>
sub    $0x5,%ebx
cmp    $0x1,%ebx
ja     8049f89 <fchmod@plt+0x259>
mov    %ecx,%esi
sar    $0x1f,%esi
mov    %esi,0xc(%esp)
mov    %esi,%edi
xor    0xc(%esp),%edx
mov    %edx,%ebx
sub    %esi,%ebx
mov    0xc(%esp),%esi
mov    %ebx,%edx
and    $0x1ff,%edx
xor    %edx,%esi
sub    %esi,%edi
and    $0x1ff,%edi
jmp    8049f71 <fchmod@plt+0x241>
mov    %ecx,%esi
sar    $0x1f,%esi
mov    %esi,0xc(%esp)
mov    %esi,%edi
xor    0xc(%esp),%edx
mov    %edx,%ebx
sub    %esi,%ebx
mov    0xc(%esp),%esi
mov    %ebx,%edx
and    $0x3,%edx
xor    %edx,%esi
sub    %esi,%edi
and    $0x3,%edi
jmp    8049f71 <fchmod@plt+0x241>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
cmpb   $0x0,0x806a9e8
jne    804a0c0 <fchmod@plt+0x390>
cmpl   $0x1,0x18(%ebx)
mov    0x806aa70,%eax
jbe    804a200 <fchmod@plt+0x4d0>
lea    -0x3(%eax),%edx
cmp    $0x1,%edx
jbe    804a3f8 <fchmod@plt+0x6c8>
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804a210 <fchmod@plt+0x4e0>
mov    0x4(%ebx),%eax
mov    0x8(%ebx),%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   804ee40 <fchmod@plt+0x5110>
test   %eax,%eax
je     804a0a3 <fchmod@plt+0x373>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
jns    804a0c5 <fchmod@plt+0x395>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    804a4e0 <fchmod@plt+0x7b0>
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
mov    0x20(%ebx),%eax
mov    0x24(%ebx),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053960 <fchmod@plt+0x9c30>
jmp    804a1e5 <fchmod@plt+0x4b5>
xchg   %ax,%ax
mov    $0x1,%edi
mov    0x806aa3c,%ebp
movl   $0x0,0x806b028
00
mov    0x20(%ebx),%eax
mov    0x24(%ebx),%edx
test   %ebp,%ebp
je     804a0f1 <fchmod@plt+0x3c1>
test   $0x3,%al
jne    804a2f0 <fchmod@plt+0x5c0>
movl   $0x1,0x806aa38
00
mov    0x806aa40,%ecx
test   %ecx,%ecx
je     804a10d <fchmod@plt+0x3dd>
test   $0x1,%al
jne    804a348 <fchmod@plt+0x618>
movl   $0x1,0x806aa34
00
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8053a80 <fchmod@plt+0x9d50>
mov    %edi,(%esp)
call   8052140 <fchmod@plt+0x8410>
cmpb   $0x0,0x806a9e8
jne    804a1d8 <fchmod@plt+0x4a8>
mov    0x806ac20,%eax
test   %eax,%eax
jle    804a17f <fchmod@plt+0x44f>
sub    $0x1,%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
movl   $0x1,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   8049ba0 <lseek64@plt>
movl   $0x1,0x8(%esp)
movl   $0x8063fbc,0x4(%esp)
mov    %edi,(%esp)
call   8049990 <write@plt>
movl   $0x0,0x806ac20
00
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8054230 <fchmod@plt+0xa500>
mov    %edi,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
js     804a4d0 <fchmod@plt+0x7a0>
cmpl   $0x4,0x806aa70
je     804a390 <fchmod@plt+0x660>
mov    0x20(%ebx),%edx
mov    %esi,%eax
mov    0x24(%ebx),%ecx
call   8049f30 <fchmod@plt+0x200>
cmpl   $0x1,0x18(%ebx)
jbe    804a1cc <fchmod@plt+0x49c>
mov    0x806aa70,%eax
sub    $0x3,%eax
cmp    $0x1,%eax
jbe    804a420 <fchmod@plt+0x6f0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x4,0x806aa70
je     804a288 <fchmod@plt+0x558>
mov    0x20(%ebx),%edx
mov    %esi,%eax
mov    0x24(%ebx),%ecx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049f30 <fchmod@plt+0x200>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x5,%eax
cmp    $0x1,%eax
ja     804a06a <fchmod@plt+0x33a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ebx),%eax
test   %eax,%eax
je     804a06a <fchmod@plt+0x33a>
cmpb   $0x0,(%eax)
je     804a06a <fchmod@plt+0x33a>
mov    %eax,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   804ed30 <fchmod@plt+0x5000>
test   %eax,%eax
jns    804a1cc <fchmod@plt+0x49c>
mov    0x40(%ebx),%edi
mov    0x44(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8061008,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804a1cc <fchmod@plt+0x49c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%ebx),%ebp
mov    0x806b028,%edi
cmp    %edi,%ebp
je     804a1e5 <fchmod@plt+0x4b5>
mov    0x40(%ebx),%edx
movl   $0x5,0x8(%esp)
movl   $0x80611dc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
call   8049790 <dcgettext@plt>
mov    0x18(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0xc(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804a1e5 <fchmod@plt+0x4b5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%ebx),%ebp
movl   $0x5,0x8(%esp)
movl   $0x8061174,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa40,%ecx
mov    0x20(%ebx),%eax
mov    0x24(%ebx),%edx
test   %ecx,%ecx
je     804a10d <fchmod@plt+0x3dd>
jmp    804a0fb <fchmod@plt+0x3cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%ebx),%ebp
movl   $0x5,0x8(%esp)
movl   $0x80611ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x20(%ebx),%eax
mov    0x24(%ebx),%edx
jmp    804a10d <fchmod@plt+0x3dd>
xchg   %ax,%ax
mov    0x3c(%ebx),%ebp
mov    0x806b028,%edi
cmp    %edi,%ebp
je     804a1a8 <fchmod@plt+0x478>
mov    0x40(%ebx),%edx
movl   $0x5,0x8(%esp)
movl   $0x80611dc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
call   8049790 <dcgettext@plt>
mov    0x18(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0xc(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804a1a8 <fchmod@plt+0x478>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%ebx),%eax
or     0x20(%ebx),%eax
jne    804a03f <fchmod@plt+0x30f>
mov    %ebx,(%esp)
call   804f9d0 <fchmod@plt+0x5ca0>
mov    0x806a9c8,%edx
mov    %edx,(%eax)
mov    %eax,0x806a9c8
jmp    804a0a3 <fchmod@plt+0x373>
xchg   %ax,%ax
mov    0x28(%ebx),%eax
mov    0x806a9c8,%esi
mov    0x4(%ebx),%edi
mov    0x8(%ebx),%ebp
mov    %eax,%ecx
mov    0x2c(%ebx),%eax
test   %esi,%esi
mov    %eax,0x18(%esp)
je     804a1cc <fchmod@plt+0x49c>
mov    %ebx,0x1c(%esp)
mov    0x8(%esi),%eax
mov    %ecx,%ebx
mov    0xc(%esi),%ecx
xor    %edx,%edx
xor    %edi,%eax
xor    %ebp,%ecx
or     %eax,%ecx
je     804a474 <fchmod@plt+0x744>
xchg   %ax,%ax
mov    (%esi),%eax
test   %eax,%eax
je     804a1cc <fchmod@plt+0x49c>
mov    %esi,%edx
mov    %eax,%esi
mov    0xc(%esi),%ecx
mov    0x8(%esi),%eax
xor    %ebp,%ecx
xor    %edi,%eax
or     %eax,%ecx
jne    804a458 <fchmod@plt+0x728>
cmp    0x2c(%esi),%ebx
jne    804a458 <fchmod@plt+0x728>
mov    0x18(%esp),%eax
cmp    0x30(%esi),%eax
jne    804a458 <fchmod@plt+0x728>
mov    0x1c(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x40(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   804ed30 <fchmod@plt+0x5000>
mov    0x20(%esp),%edx
test   %eax,%eax
js     804a51f <fchmod@plt+0x7ef>
test   %edx,%edx
mov    (%esi),%eax
je     804a518 <fchmod@plt+0x7e8>
mov    %eax,(%edx)
mov    (%esi),%eax
mov    %esi,(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x20(%esp)
call   804fa30 <fchmod@plt+0x5d00>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
mov    %edx,%esi
jmp    804a45a <fchmod@plt+0x72a>
lea    0x0(%esi),%esi
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804a19b <fchmod@plt+0x46b>
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
jns    804a0c5 <fchmod@plt+0x395>
jmp    804a098 <fchmod@plt+0x368>
lea    0x0(%esi),%esi
mov    %eax,0x806a9c8
jmp    804a4ae <fchmod@plt+0x77e>
mov    0x1c(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x40(%eax),%ecx
mov    0x44(%esi),%eax
movl   $0x5,0x8(%esp)
movl   $0x8061008,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x20(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x24(%esp)
call   8049a20 <__errno_location@plt>
mov    0x28(%esp),%ecx
mov    %ecx,0x10(%esp)
mov    0x20(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x24(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x2c(%esp),%edx
jmp    804a4a4 <fchmod@plt+0x774>
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%edi),%ecx
mov    0x20(%eax),%eax
test   %ecx,%ecx
je     804a5e8 <fchmod@plt+0x8b8>
movl   $0x5,0x8(%esp)
mov    0x40(%edi),%ebx
movl   $0x8061208,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
xor    %ebx,%ebx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    $0xfffffffe,%eax
ja     804a5a2 <fchmod@plt+0x872>
add    $0x1,%eax
mov    %edx,%esi
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x24(%edi),%edx
mov    %esi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,%ebx
mov    0x20(%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    0x20(%edi),%eax
movb   $0x0,(%ebx,%eax,1)
mov    0x20(%edi),%edx
mov    %esi,%eax
mov    0x24(%edi),%ecx
call   8049f30 <fchmod@plt+0x200>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x5,0x10(%esp)
movl   $0x8061234,0x8(%esp)
movl   $0x8061258,0x4(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,(%esp)
call   8049ca0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x28,%esp
pop    %ebx
ret
jmp    804a6a0 <fchmod@plt+0x970>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
test   %al,%al
je     804a708 <fchmod@plt+0x9d8>
cmp    $0xc,%al
je     804a7f0 <fchmod@plt+0xac0>
jbe    804a710 <fchmod@plt+0x9e0>
cmp    $0x20,%al
je     804a7d0 <fchmod@plt+0xaa0>
lea    0x0(%esi),%esi
jbe    804a750 <fchmod@plt+0xa20>
cmp    $0x22,%al
je     804a810 <fchmod@plt+0xae0>
cmp    $0x5c,%al
lea    0x0(%esi,%eiz,1),%esi
jne    804a720 <fchmod@plt+0x9f0>
add    $0x1,%ebx
movl   $0x806101d,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
movzbl -0x1(%ebx),%eax
test   %al,%al
jne    804a6bb <fchmod@plt+0x98b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmp    $0x9,%al
je     804a790 <fchmod@plt+0xa60>
cmp    $0xa,%al
je     804a770 <fchmod@plt+0xa40>
cmp    $0x8,%al
je     804a7b0 <fchmod@plt+0xa80>
lea    -0x21(%eax),%edx
cmp    $0x5d,%dl
ja     804a830 <fchmod@plt+0xb00>
mov    0x806a9c0,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
jae    804a84d <fchmod@plt+0xb1d>
lea    0x1(%ecx),%esi
mov    %esi,0x14(%edx)
mov    %al,(%ecx)
jmp    804a6b0 <fchmod@plt+0x980>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xd,%al
jne    804a720 <fchmod@plt+0x9f0>
movl   $0x8061026,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi),%esi
movl   $0x8061020,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8061029,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8061023,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806102f,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806102c,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8061032,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
movl   $0x8061035,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a6b0 <fchmod@plt+0x980>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049b40 <__overflow@plt>
jmp    804a6b0 <fchmod@plt+0x980>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%ebx
lea    0x19(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
mov    %edi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80548c0 <fchmod@plt+0xab90>
mov    0x1c(%ebx),%eax
movb   $0x0,0x23(%esp)
mov    %eax,0x14(%esp)
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049780 <ctime@plt>
movl   $0x28,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <__strcpy_chk@plt>
mov    0x806a9dc,%eax
sub    0x14(%esp),%eax
cmp    $0xed4e00,%eax
ja     804aa38 <fchmod@plt+0xd08>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x806103b,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
movb   $0x0,0x34(%esp)
call   8049ad0 <__printf_chk@plt>
mov    0x806aa10,%edx
mov    0x14(%ebx),%eax
test   %edx,%edx
je     804aa00 <fchmod@plt+0xcd0>
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
movl   $0x8061044,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049ad0 <__printf_chk@plt>
mov    0xc(%ebx),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
jne    804a9d8 <fchmod@plt+0xca8>
mov    0x34(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x30(%ebx),%eax
movl   $0x806105e,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049ad0 <__printf_chk@plt>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8061071,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   804a6a0 <fchmod@plt+0x970>
test   %esi,%esi
je     804a9a1 <fchmod@plt+0xc71>
movl   $0x80610eb,0x4(%esp)
movl   $0x1,(%esp)
call   8049ad0 <__printf_chk@plt>
mov    %esi,(%esp)
call   804a6a0 <fchmod@plt+0x970>
mov    0x806a9c0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804aa5e <fchmod@plt+0xd2e>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    804aa59 <fchmod@plt+0xd29>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebx),%eax
mov    0x24(%ebx),%edx
movl   $0x806106a,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a95a <fchmod@plt+0xc2a>
nop
mov    %eax,(%esp)
call   8054ca0 <fchmod@plt+0xaf70>
mov    %eax,%edi
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8054ae0 <fchmod@plt+0xadb0>
mov    %edi,0xc(%esp)
movl   $0x806104f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804a925 <fchmod@plt+0xbf5>
xchg   %ax,%ax
lea    0x37(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x2f(%esp),%eax
movl   $0x1d,0x8(%esp)
mov    %eax,(%esp)
call   8049ac0 <__strcpy_chk@plt>
jmp    804a8d1 <fchmod@plt+0xba1>
call   80497a0 <__stack_chk_fail@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804a9bb <fchmod@plt+0xc8b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
add    0x54(%esp),%eax
mov    %eax,%edi
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
movzbl (%eax),%eax
cmp    $0x20,%al
jne    804ac6e <fchmod@plt+0xf3e>
cmp    %edi,0x50(%esp)
je     804ac08 <fchmod@plt+0xed8>
mov    0x50(%esp),%ebx
mov    %edi,%edx
jmp    804aac0 <fchmod@plt+0xd90>
xchg   %ax,%ax
cmp    %ebx,%edx
je     804ac08 <fchmod@plt+0xed8>
add    $0x1,%ebx
movzbl (%ebx),%eax
cmp    $0x20,%al
je     804aab8 <fchmod@plt+0xd88>
xor    %edx,%edx
xor    %ecx,%ecx
cmp    0x28(%esp),%ebx
je     804abf6 <fchmod@plt+0xec6>
test   %al,%al
je     804abf6 <fchmod@plt+0xec6>
call   8049600 <__ctype_toupper_loc@plt>
xor    %esi,%esi
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
mov    %esi,0x18(%esp)
mov    %edi,0x1c(%esp)
mov    %ebx,0x24(%esp)
mov    (%eax),%eax
mov    %eax,%ebp
movzbl (%ebx),%eax
jmp    804ab7b <fchmod@plt+0xe4b>
xchg   %ax,%ax
movzbl 0x58(%esp),%ecx
sub    $0x806a1e8,%eax
mov    %eax,%edx
shr    %cl,%edx
cmp    $0x1,%edx
ja     804ab9a <fchmod@plt+0xe6a>
xor    %edx,%edx
mov    0x28(%esp),%edi
add    0x18(%esp),%eax
adc    0x1c(%esp),%edx
addl   $0x1,0x24(%esp)
mov    0x24(%esp),%esi
cmp    %edi,%esi
je     804abea <fchmod@plt+0xeba>
movzbl (%esi),%edi
mov    %edi,%ecx
test   %cl,%cl
je     804abea <fchmod@plt+0xeba>
movzbl 0x58(%esp),%ecx
mov    %eax,%ebx
mov    %edx,%esi
xor    %edx,%edx
shld   %cl,%eax,%esi
shl    %cl,%ebx
test   $0x20,%cl
cmovne %ebx,%esi
cmovne %edx,%ebx
mov    %ebx,0x18(%esp)
shrd   %cl,%esi,%ebx
mov    %esi,0x1c(%esp)
shr    %cl,%esi
test   $0x20,%cl
cmovne %esi,%ebx
xor    %ebx,%eax
or     %eax,0x2c(%esp)
mov    %edi,%eax
movsbl %al,%edi
mov    0x0(%ebp,%edi,4),%eax
movl   $0x806a1e8,(%esp)
mov    %eax,0x4(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
jne    804ab08 <fchmod@plt+0xdd8>
movl   $0x5,0x8(%esp)
mov    0x18(%esp),%esi
movl   $0x8061075,0x4(%esp)
mov    0x1c(%esp),%edi
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x50(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    0x54(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80498b0 <error@plt>
mov    %esi,%eax
mov    %edi,%edx
mov    %edx,%ecx
mov    %eax,%edx
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    804ac18 <fchmod@plt+0xee8>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
mov    %ecx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %edx,%edx
xor    %ecx,%ecx
mov    %edx,%eax
pop    %ebx
mov    %ecx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x806127c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   8049790 <dcgettext@plt>
mov    0x50(%esp),%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edi,0x10(%esp)
mov    0x54(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edi,0xc(%esp)
call   80498b0 <error@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
jmp    804abf6 <fchmod@plt+0xec6>
mov    0x50(%esp),%ebx
jmp    804aaca <fchmod@plt+0xd9a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x84(%esp),%edi
lea    0x16(%esp),%ebx
mov    %ebx,(%esp)
mov    0x80(%esp),%esi
movl   $0x46,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
call   80538a0 <fchmod@plt+0x9b70>
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,%ecx
shrd   $0x8,%ebx,%eax
and    $0xfff,%eax
mov    %eax,0x28(%esi)
mov    %ecx,%eax
movzbl %cl,%ecx
shrd   $0xc,%ebx,%eax
xor    %ebx,%ebx
xor    %al,%al
or     %ecx,%eax
mov    %eax,0x2c(%esi)
lea    0x1c(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x4(%esi)
lea    0x22(%esp),%eax
mov    %edx,0x8(%esi)
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0xc(%esi)
lea    0x28(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x10(%esi)
lea    0x2e(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x14(%esi)
lea    0x34(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x18(%esi)
lea    0x3a(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,%ecx
shrd   $0x8,%ebx,%eax
and    $0xfff,%eax
mov    %eax,0x30(%esi)
mov    %ecx,%eax
movzbl %cl,%ecx
shrd   $0xc,%ebx,%eax
xor    %al,%al
or     %ecx,%eax
mov    %eax,0x34(%esi)
lea    0x40(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0xb,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x1c(%esi)
lea    0x4b(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x38(%esi)
lea    0x51(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0xb,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x20(%esi)
mov    0x40(%esi),%eax
mov    %edx,0x24(%esi)
test   %eax,%eax
je     804ae42 <fchmod@plt+0x1112>
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x38(%esi),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x38(%esi),%edx
mov    %eax,0x40(%esi)
mov    %edx,0x8(%esp)
sar    $0x1f,%edx
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
mov    %edi,0x4(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    0xc(%esi),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     804aeaf <fchmod@plt+0x117f>
jbe    804aea8 <fchmod@plt+0x1178>
cmp    $0x6000,%eax
je     804aeaf <fchmod@plt+0x117f>
cmp    $0xc000,%eax
je     804aeaf <fchmod@plt+0x117f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x5c(%esp),%eax
xor    %gs:0x14,%eax
jne    804af07 <fchmod@plt+0x11d7>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x1000,%eax
jne    804ae90 <fchmod@plt+0x1160>
mov    0x24(%esi),%ecx
mov    0x20(%esi),%edi
mov    %ecx,%eax
or     %edi,%eax
je     804ae90 <fchmod@plt+0x1160>
mov    0x30(%esi),%ebx
test   %ebx,%ebx
jne    804ae90 <fchmod@plt+0x1160>
cmpl   $0x1,0x34(%esi)
jne    804ae90 <fchmod@plt+0x1160>
mov    %ecx,%edx
and    $0xfffff000,%ecx
mov    %edi,%eax
mov    %ecx,%ebp
mov    %edx,%ebx
mov    %edi,%ecx
shrd   $0xc,%edx,%eax
mov    %edi,%edx
shrd   $0x8,%ebx,%ecx
xor    %al,%al
and    $0xfff,%ecx
movzbl %dl,%edi
or     %ecx,%ebp
or     %edi,%eax
mov    %ebp,0x30(%esi)
mov    %eax,0x34(%esi)
movl   $0x0,0x20(%esi)
movl   $0x0,0x24(%esi)
jmp    804ae90 <fchmod@plt+0x1160>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%ebx
lea    0x24(%esp),%edi
movl   $0x68,0x8(%esp)
mov    0xa0(%esp),%esi
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x4(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   80538a0 <fchmod@plt+0x9b70>
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %edi,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x4(%esi)
lea    0x2c(%esp),%eax
mov    %edx,0x8(%esi)
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0xc(%esi)
lea    0x34(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x10(%esi)
lea    0x3c(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x14(%esi)
lea    0x44(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x18(%esi)
lea    0x4c(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x1c(%esi)
lea    0x54(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x20(%esi)
lea    0x5c(%esp),%eax
mov    %edx,0x24(%esi)
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x28(%esi)
lea    0x64(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x2c(%esi)
lea    0x6c(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x30(%esi)
lea    0x74(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x34(%esi)
lea    0x7c(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x38(%esi)
lea    0x84(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x3c(%esi)
mov    0x40(%esi),%eax
test   %eax,%eax
je     804b0fd <fchmod@plt+0x13cd>
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x38(%esi),%edx
mov    %eax,0x40(%esi)
mov    %edx,0x8(%esp)
sar    $0x1f,%edx
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    0x38(%esi),%edx
xor    %ecx,%ecx
mov    %ebx,%eax
add    $0x6e,%edx
call   8049f30 <fchmod@plt+0x200>
mov    0x8c(%esp),%eax
xor    %gs:0x14,%eax
jne    804b14e <fchmod@plt+0x141e>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%ebx
mov    0x38(%esp),%edi
movzwl (%esi),%eax
mov    %ax,(%ebx)
lea    0x6(%esi),%eax
movl   $0x14,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80538a0 <fchmod@plt+0x9b70>
cmpw   $0xc771,(%ebx)
je     804b310 <fchmod@plt+0x15e0>
movzwl 0x2(%esi),%ecx
xor    %edx,%edx
movzwl %cx,%eax
movzbl %cl,%ecx
shrd   $0x8,%edx,%eax
xor    %edx,%edx
mov    %eax,0x28(%ebx)
movzwl 0x4(%esi),%eax
mov    %ecx,0x2c(%ebx)
movzwl 0xe(%esi),%ecx
movl   $0x0,0x8(%ebx)
mov    %eax,0x4(%ebx)
movzwl 0x6(%esi),%eax
mov    %eax,0xc(%ebx)
movzwl 0x8(%esi),%eax
mov    %eax,0x10(%ebx)
movzwl 0xa(%esi),%eax
mov    %eax,0x14(%ebx)
movzwl 0xc(%esi),%eax
mov    %eax,0x18(%ebx)
movzwl %cx,%eax
movzbl %cl,%ecx
shrd   $0x8,%edx,%eax
movzwl 0x12(%esi),%edx
mov    %eax,0x30(%ebx)
movzwl 0x10(%esi),%eax
mov    %ecx,0x34(%ebx)
movzwl 0x18(%esi),%ecx
shl    $0x10,%eax
or     %edx,%eax
movzwl 0x14(%esi),%edx
mov    %eax,0x1c(%ebx)
movzwl 0x16(%esi),%eax
movl   $0x0,0x24(%ebx)
mov    %edx,0x38(%ebx)
shl    $0x10,%eax
or     %ecx,%eax
mov    %eax,0x20(%ebx)
mov    0x40(%ebx),%eax
test   %eax,%eax
je     804b239 <fchmod@plt+0x1509>
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x38(%ebx),%edx
mov    %edx,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x38(%ebx),%edx
mov    %eax,0x40(%ebx)
mov    %edx,0x8(%esp)
sar    $0x1f,%edx
mov    %edx,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80538a0 <fchmod@plt+0x9b70>
testb  $0x1,0x38(%ebx)
jne    804b2f0 <fchmod@plt+0x15c0>
mov    0xc(%ebx),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     804b297 <fchmod@plt+0x1567>
jbe    804b290 <fchmod@plt+0x1560>
cmp    $0x6000,%eax
je     804b297 <fchmod@plt+0x1567>
cmp    $0xc000,%eax
je     804b297 <fchmod@plt+0x1567>
nop
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x1000,%eax
jne    804b288 <fchmod@plt+0x1558>
mov    0x24(%ebx),%esi
mov    0x20(%ebx),%ecx
mov    %esi,%eax
or     %ecx,%eax
je     804b288 <fchmod@plt+0x1558>
mov    0x30(%ebx),%edi
test   %edi,%edi
jne    804b288 <fchmod@plt+0x1558>
cmpl   $0x1,0x34(%ebx)
jne    804b288 <fchmod@plt+0x1558>
mov    %esi,%edx
and    $0xfffff000,%esi
mov    %ecx,%eax
mov    %esi,%ebp
mov    %edx,%edi
mov    %ecx,%esi
shrd   $0x8,%edi,%esi
movzbl %cl,%ecx
shrd   $0xc,%edx,%eax
and    $0xfff,%esi
xor    %al,%al
or     %esi,%ebp
or     %ecx,%eax
mov    %ebp,0x30(%ebx)
mov    %eax,0x34(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0x24(%ebx)
jmp    804b288 <fchmod@plt+0x1558>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   8053960 <fchmod@plt+0x9c30>
jmp    804b268 <fchmod@plt+0x1538>
lea    0x0(%esi),%esi
mov    0x806a9d8,%ebp
test   %ebp,%ebp
je     804b340 <fchmod@plt+0x1610>
lea    0x1a(%esi),%ebp
mov    %esi,%edx
nop
movzbl (%edx),%ecx
add    $0x2,%edx
movzbl -0x1(%edx),%eax
mov    %cl,-0x1(%edx)
mov    %al,-0x2(%edx)
cmp    %ebp,%edx
jne    804b320 <fchmod@plt+0x15f0>
jmp    804b1a3 <fchmod@plt+0x1473>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80612a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x1,0x806a9d8
00
jmp    804b31a <fchmod@plt+0x15ea>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    0x250(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x806aa70,%eax
test   %eax,%eax
jne    804b402 <fchmod@plt+0x16d2>
lea    0x2c(%esp),%ebx
mov    0x254(%esp),%eax
movl   $0x200,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8053ba0 <fchmod@plt+0x9e70>
cmp    $0x5,%eax
mov    %eax,%ebp
jle    804b648 <fchmod@plt+0x1918>
mov    %ebx,%esi
mov    $0x80610a4,%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b5a8 <fchmod@plt+0x1878>
movl   $0x3,0x806aa70
00
mov    $0x3,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804b5d7 <fchmod@plt+0x18a7>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
lea    0x2c(%esp),%ebx
lea    0x2d(%esp),%ebp
movl   $0x0,0x44(%eax)
mov    0x254(%esp),%eax
movl   $0x6,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80538a0 <fchmod@plt+0x9b70>
jmp    804b4dc <fchmod@plt+0x17ac>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4,%eax
je     804b560 <fchmod@plt+0x1830>
cmp    $0x7,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    804b7e5 <fchmod@plt+0x1ab5>
mov    $0x80610ab,%edi
mov    $0x6,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804b788 <fchmod@plt+0x1a58>
cmp    $0x8,%eax
jne    804b7d2 <fchmod@plt+0x1aa2>
movzwl 0x2c(%esp),%eax
cmp    $0xc771,%ax
je     804b750 <fchmod@plt+0x1a20>
cmp    $0x71c7,%ax
je     804b750 <fchmod@plt+0x1a20>
movl   $0x5,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
addl   $0x1,0x18(%esp)
call   80496c0 <memmove@plt>
mov    0x254(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x31(%esp),%eax
mov    %eax,(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    0x806aa44,%edi
test   %edi,%edi
je     804b506 <fchmod@plt+0x17d6>
mov    0x806aff8,%eax
lea    -0x6(%eax),%edx
mov    0x806b000,%eax
sub    0x806a204,%edx
sub    0x806b024,%eax
add    %edx,%eax
mov    %eax,0x806aa14
mov    0x806aa70,%eax
cmp    $0x3,%eax
jne    804b450 <fchmod@plt+0x1720>
mov    $0x80610a4,%edi
mov    $0x6,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b49c <fchmod@plt+0x176c>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804b538 <fchmod@plt+0x1808>
mov    %eax,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x1c(%esp),%eax
mov    $0x71c1,%esi
mov    0x254(%esp),%ebx
mov    %si,(%eax)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804af10 <fchmod@plt+0x11e0>
jmp    804b626 <fchmod@plt+0x18f6>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80610b2,%edi
mov    $0x6,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b49c <fchmod@plt+0x176c>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804b584 <fchmod@plt+0x1854>
mov    %eax,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x1c(%esp),%eax
mov    $0x71c2,%ebx
mov    %bx,(%eax)
mov    0x254(%esp),%ebx
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   804af10 <fchmod@plt+0x11e0>
jmp    804b626 <fchmod@plt+0x18f6>
mov    $0x80610ab,%edi
mov    %ebx,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b688 <fchmod@plt+0x1958>
mov    $0x2,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
movl   $0x2,0x806aa70
00
ja     804b410 <fchmod@plt+0x16e0>
mov    0x806aa44,%ebp
test   %ebp,%ebp
je     804b5ff <fchmod@plt+0x18cf>
mov    0x806aff8,%edx
mov    0x806b000,%eax
sub    0x806a204,%edx
sub    0x806b024,%eax
add    %edx,%eax
mov    %eax,0x806aa14
mov    0x18(%esp),%eax
test   %eax,%eax
je     804b60f <fchmod@plt+0x18df>
mov    %eax,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x254(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8051b50 <fchmod@plt+0x7e20>
mov    0x22c(%esp),%eax
xor    %gs:0x14,%eax
jne    804b7cd <fchmod@plt+0x1a9d>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806108b,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804b3df <fchmod@plt+0x16af>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80610b2,%edi
mov    %ebx,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b6b8 <fchmod@plt+0x1988>
movl   $0x4,0x806aa70
00
mov    $0x4,%eax
movl   $0x1,0x806aa48
00
jmp    804b402 <fchmod@plt+0x16d2>
xchg   %ax,%ax
movzwl 0x2c(%esp),%eax
cmp    $0xc771,%ax
jne    804b6d8 <fchmod@plt+0x19a8>
movl   $0x1,0x806aa70
00
mov    $0x1,%eax
jmp    804b402 <fchmod@plt+0x16d2>
nop
cmp    $0x71c7,%ax
je     804b6c3 <fchmod@plt+0x1993>
cmp    $0x1ff,%ebp
jle    804b710 <fchmod@plt+0x19e0>
mov    %ebx,(%esp)
call   8051f80 <fchmod@plt+0x8250>
test   %eax,%eax
je     804b710 <fchmod@plt+0x19e0>
cmp    $0x2,%eax
je     804b7bc <fchmod@plt+0x1a8c>
movl   $0x5,0x806aa70
00
mov    $0x5,%eax
jmp    804b402 <fchmod@plt+0x16d2>
nop
mov    0x254(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    0x806aa70,%eax
addl   $0x1,0x18(%esp)
test   %eax,%eax
je     804b3b9 <fchmod@plt+0x1689>
jmp    804b402 <fchmod@plt+0x16d2>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
test   %eax,%eax
je     804b760 <fchmod@plt+0x1a30>
mov    %eax,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x1c(%esp),%eax
mov    $0x71c7,%edx
mov    0x254(%esp),%esi
mov    %dx,(%eax)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804b160 <fchmod@plt+0x1430>
jmp    804b626 <fchmod@plt+0x18f6>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804b798 <fchmod@plt+0x1a68>
mov    %eax,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x1c(%esp),%eax
mov    $0x71c7,%ecx
mov    0x254(%esp),%ebx
mov    %cx,(%eax)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ac80 <fchmod@plt+0xf50>
jmp    804b626 <fchmod@plt+0x18f6>
movl   $0x6,0x806aa70
00
mov    $0x6,%al
jmp    804b402 <fchmod@plt+0x16d2>
call   80497a0 <__stack_chk_fail@plt>
cmp    $0x1,%eax
je     804b483 <fchmod@plt+0x1753>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804b49c <fchmod@plt+0x176c>
cmp    $0x2,%eax
je     804b466 <fchmod@plt+0x1736>
xchg   %ax,%ax
jmp    804b47a <fchmod@plt+0x174a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
test   %edx,%edx
lea    (%eax,%edx,2),%ebx
jle    804b824 <fchmod@plt+0x1af4>
movzbl (%eax),%ecx
add    $0x2,%eax
movzbl -0x1(%eax),%edx
mov    %cl,-0x1(%eax)
mov    %dl,-0x2(%eax)
cmp    %eax,%ebx
jne    804b810 <fchmod@plt+0x1ae0>
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x16c,%esp
movl   $0x0,(%esp)
call   8049c30 <umask@plt>
mov    %eax,0x806b004
mov    0x806aa0c,%eax
test   %eax,%eax
je     804b977 <fchmod@plt+0x1c47>
mov    0x806afec,%eax
test   %eax,%eax
js     804c610 <fchmod@plt+0x28e0>
lea    0x1(%eax),%ebp
lea    0x0(,%ebp,4),%eax
mov    %ebp,0x20(%esp)
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x806afec,%ebx
movl   $0x80,0x4(%esp)
mov    %eax,%edi
lea    0x100(%esp),%eax
mov    %eax,(%esp)
call   804fa50 <fchmod@plt+0x5d20>
mov    0x806aa0c,%eax
movl   $0x8061027,0x4(%esp)
mov    %eax,(%esp)
call   8049850 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804c77d <fchmod@plt+0x2a4d>
lea    0x0(,%ebx,4),%esi
jmp    804b8e3 <fchmod@plt+0x1bb3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x104(%esp),%eax
lea    (%edi,%esi,1),%ebp
add    $0x1,%ebx
add    $0x4,%esi
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x0(%ebp)
lea    0x100(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
test   %eax,%eax
je     804b928 <fchmod@plt+0x1bf8>
cmp    0x20(%esp),%ebx
jl     804b8c8 <fchmod@plt+0x1b98>
addl   $0x1,0x20(%esp)
mov    0x20(%esp),%eax
mov    %edi,(%esp)
shl    $0x2,%eax
mov    %eax,0x4(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    %eax,%edi
jmp    804b8c8 <fchmod@plt+0x1b98>
mov    0x24(%esp),%eax
testb  $0x20,(%eax)
je     804c012 <fchmod@plt+0x22e2>
mov    0x806aa0c,%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
mov    0x806afec,%edx
xor    %eax,%eax
test   %edx,%edx
lea    0x0(,%edx,4),%ecx
jle    804b96b <fchmod@plt+0x1c3b>
lea    0x0(%esi),%esi
mov    0x806afe8,%edx
mov    (%edx,%eax,1),%edx
mov    %edx,(%edi,%eax,1)
add    $0x4,%eax
cmp    %ecx,%eax
jne    804b958 <fchmod@plt+0x1c28>
mov    %edi,0x806afe8
mov    %ebx,0x806afec
mov    0x806aa64,%eax
movl   $0x0,0x98(%esp)
00
test   %eax,%eax
je     804c32b <fchmod@plt+0x25fb>
movl   $0x8061027,0x4(%esp)
mov    %eax,(%esp)
call   8049850 <fopen64@plt>
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804c74d <fchmod@plt+0x2a1d>
mov    0x806aa60,%edi
test   %edi,%edi
je     804b9d3 <fchmod@plt+0x1ca3>
mov    0x806aa58,%esi
test   %esi,%esi
jne    804c523 <fchmod@plt+0x27f3>
mov    0x806b02c,%ebp
cmp    $0x3fffffff,%ebp
jle    804c356 <fchmod@plt+0x2626>
movb   $0x1,0x806a9f3
movb   $0x0,0x806a9f1
movb   $0x1,0x806a9f0
lea    0x0(%esi),%esi
lea    0x58(%esp),%eax
mov    $0x806114f,%esi
mov    %eax,(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,0x806aa34
00
movl   $0x0,0x806aa38
00
call   804b380 <fchmod@plt+0x1650>
mov    0x98(%esp),%eax
mov    $0xb,%ecx
mov    %eax,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804bdf0 <fchmod@plt+0x20c0>
mov    0x806aa18,%ecx
xor    %edx,%edx
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
test   %ecx,%ecx
sete   %dl
mov    %edx,0x8(%esp)
call   8054310 <fchmod@plt+0xa5e0>
mov    0x806afec,%ebx
test   %ebx,%ebx
jle    804bb20 <fchmod@plt+0x1df0>
mov    0x806a200,%eax
movsbl %al,%edx
mov    %eax,%esi
cmp    %edx,%eax
jne    804bad3 <fchmod@plt+0x1da3>
xor    %ebx,%ebx
jmp    804ba95 <fchmod@plt+0x1d65>
mov    %esi,%eax
movsbl %al,%eax
cmp    0x806a200,%eax
jne    804bad3 <fchmod@plt+0x1da3>
mov    0x98(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806afe8,%eax
mov    (%eax,%ebx,4),%eax
mov    %eax,(%esp)
call   8049820 <fnmatch@plt>
test   %eax,%eax
jne    804bac8 <fchmod@plt+0x1d98>
mov    0x806a200,%eax
test   %eax,%eax
sete   %al
mov    %eax,%esi
add    $0x1,%ebx
cmp    %ebx,0x806afec
jg     804ba88 <fchmod@plt+0x1d58>
mov    %esi,%eax
test   %al,%al
je     804bb20 <fchmod@plt+0x1df0>
cmpl   $0x1,0x70(%esp)
jbe    804baf1 <fchmod@plt+0x1dc1>
mov    0x806aa70,%eax
sub    $0x3,%eax
cmp    $0x1,%eax
jbe    804be4d <fchmod@plt+0x211d>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
call   8053960 <fchmod@plt+0x9c30>
mov    0x78(%esp),%edx
mov    %ebp,%eax
mov    0x7c(%esp),%ecx
call   8049f30 <fchmod@plt+0x200>
jmp    804ba00 <fchmod@plt+0x1cd0>
lea    0x0(%esi),%esi
mov    0x806aa60,%eax
test   %eax,%eax
jne    804bc28 <fchmod@plt+0x1ef8>
mov    0x806aa44,%esi
test   %esi,%esi
jne    804baf1 <fchmod@plt+0x1dc1>
mov    0x806aa1c,%ebx
test   %ebx,%ebx
je     804bc90 <fchmod@plt+0x1f60>
mov    0x64(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804bb62 <fchmod@plt+0x1e32>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
ja     804baf1 <fchmod@plt+0x1dc1>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    %ebp,(%esp)
movl   $0x0,0x806b028
00
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053960 <fchmod@plt+0x9c30>
mov    0x78(%esp),%edx
mov    %ebp,%eax
mov    0x7c(%esp),%ecx
call   8049f30 <fchmod@plt+0x200>
mov    0x94(%esp),%esi
mov    0x806b028,%ebx
cmp    %ebx,%esi
je     804bbeb <fchmod@plt+0x1ebb>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%edi
movl   $0x80611dc,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa58,%edi
test   %edi,%edi
jne    804bdc0 <fchmod@plt+0x2090>
mov    0x806aa54,%esi
test   %esi,%esi
je     804ba00 <fchmod@plt+0x1cd0>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804cb39 <fchmod@plt+0x2e09>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x2e,(%edx)
jmp    804ba00 <fchmod@plt+0x1cd0>
xchg   %ax,%ax
mov    0x806aa58,%eax
test   %eax,%eax
je     804c1d2 <fchmod@plt+0x24a2>
mov    0x64(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804bf4a <fchmod@plt+0x221a>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804c534 <fchmod@plt+0x2804>
mov    %ebp,%edx
lea    0x58(%esp),%eax
call   804a590 <fchmod@plt+0x860>
test   %eax,%eax
mov    %eax,%ebx
je     804ba00 <fchmod@plt+0x1cd0>
mov    %eax,0x4(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a860 <fchmod@plt+0xb30>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
jmp    804ba00 <fchmod@plt+0x1cd0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa68,%eax
test   %eax,%eax
jne    804bca7 <fchmod@plt+0x1f77>
mov    0x806aa64,%ecx
test   %ecx,%ecx
je     804bd5d <fchmod@plt+0x202d>
mov    0x806a9d4,%edx
test   %edx,%edx
je     804c303 <fchmod@plt+0x25d3>
test   %eax,%eax
je     804bf10 <fchmod@plt+0x21e0>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%ebx
movl   $0x80610e2,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x20(%esp),%edi
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   80497f0 <fflush_unlocked@plt>
mov    0x28(%esp),%eax
movl   $0x806a9cc,0x4(%esp)
mov    %eax,(%esp)
call   804fb60 <fchmod@plt+0x5e30>
test   %eax,%eax
je     804baf1 <fchmod@plt+0x1dc1>
cmpb   $0x0,(%eax)
je     804baf1 <fchmod@plt+0x1dc1>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804c230 <fchmod@plt+0x2500>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x806a9d0,%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x98(%esp)
cmpb   $0x0,0x806a9e8
je     804c26a <fchmod@plt+0x253a>
mov    0x64(%esp),%ecx
mov    %ecx,%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     804c3ab <fchmod@plt+0x267b>
jbe    804c201 <fchmod@plt+0x24d1>
cmp    $0xa000,%eax
je     804c02c <fchmod@plt+0x22fc>
cmp    $0xc000,%eax
je     804c3ab <fchmod@plt+0x267b>
cmp    $0x8000,%eax
jne    804c167 <fchmod@plt+0x2437>
mov    %ebp,%edx
lea    0x58(%esp),%eax
call   804a000 <fchmod@plt+0x2d0>
mov    0x806aa58,%edi
test   %edi,%edi
je     804bbf9 <fchmod@plt+0x1ec9>
mov    0x98(%esp),%eax
movl   $0x8062e18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804bbf9 <fchmod@plt+0x1ec9>
lea    0x0(%esi),%esi
mov    0x806aa54,%ebx
test   %ebx,%ebx
je     804be14 <fchmod@plt+0x20e4>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804caec <fchmod@plt+0x2dbc>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
call   80546d0 <fchmod@plt+0xa9a0>
mov    0x806aa44,%ecx
test   %ecx,%ecx
jne    804be42 <fchmod@plt+0x2112>
mov    0x806aa70,%eax
sub    $0x3,%eax
cmp    $0x1,%eax
jbe    804c550 <fchmod@plt+0x2820>
mov    0x806aa20,%edx
test   %edx,%edx
je     804c0d5 <fchmod@plt+0x23a5>
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edi
mov    %eax,0x30(%esp)
mov    %edi,0x34(%esp)
or     %eax,%edi
je     804bf35 <fchmod@plt+0x2205>
mov    0x806a9c8,%ebx
mov    0x84(%esp),%edi
mov    0x5c(%esp),%ecx
mov    0x60(%esp),%esi
test   %ebx,%ebx
mov    0x80(%esp),%eax
mov    %edi,0x2c(%esp)
je     804bf35 <fchmod@plt+0x2205>
mov    %ebp,0x38(%esp)
xor    %edi,%edi
mov    %eax,%ebp
jmp    804bea6 <fchmod@plt+0x2176>
nop
mov    (%ebx),%eax
test   %eax,%eax
je     804bf31 <fchmod@plt+0x2201>
mov    %ebx,%edi
mov    %eax,%ebx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
xor    %esi,%edx
xor    %ecx,%eax
or     %eax,%edx
jne    804be98 <fchmod@plt+0x2168>
cmp    0x2c(%ebx),%ebp
jne    804be98 <fchmod@plt+0x2168>
mov    0x2c(%esp),%eax
cmp    0x30(%ebx),%eax
jne    804be98 <fchmod@plt+0x2168>
test   %edi,%edi
mov    0x38(%esp),%ebp
mov    (%ebx),%eax
je     804c8ba <fchmod@plt+0x2b8a>
mov    %eax,(%edi)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %ebx,(%esp)
mov    %eax,0x98(%esp)
call   804fa30 <fchmod@plt+0x5d00>
mov    %ebp,%edx
lea    0x58(%esp),%eax
call   804a000 <fchmod@plt+0x2d0>
jmp    804ba00 <fchmod@plt+0x1cd0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x806a9cc,0x4(%esp)
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
jmp    804bd18 <fchmod@plt+0x1fe8>
mov    0x38(%esp),%ebp
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
jmp    804bb01 <fchmod@plt+0x1dd1>
lea    0x58(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a860 <fchmod@plt+0xb30>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    %ebp,(%esp)
movl   $0x0,0x806b028
00
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053960 <fchmod@plt+0x9c30>
mov    0x78(%esp),%edx
mov    %ebp,%eax
mov    0x7c(%esp),%ecx
call   8049f30 <fchmod@plt+0x200>
mov    0x806aa1c,%edi
test   %edi,%edi
je     804ba00 <fchmod@plt+0x1cd0>
mov    0x64(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804ba00 <fchmod@plt+0x1cd0>
mov    0x94(%esp),%esi
mov    0x806b028,%ebx
cmp    %ebx,%esi
je     804ba00 <fchmod@plt+0x1cd0>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%edi
movl   $0x80611dc,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804ba00 <fchmod@plt+0x1cd0>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049710 <fclose@plt>
cmp    $0xffffffff,%eax
jne    804b942 <fchmod@plt+0x1c12>
jmp    804b935 <fchmod@plt+0x1c05>
cmpb   $0x0,0x806a9e8
jne    804bbeb <fchmod@plt+0x1ebb>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804c948 <fchmod@plt+0x2c18>
mov    %ebp,%edx
lea    0x58(%esp),%eax
call   804a590 <fchmod@plt+0x860>
test   %eax,%eax
mov    %eax,%ebx
je     804bbeb <fchmod@plt+0x1ebb>
mov    0x98(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049b70 <symlink@plt>
test   %eax,%eax
js     804c8c4 <fchmod@plt+0x2b94>
mov    0x806aa28,%eax
test   %eax,%eax
jne    804c0c6 <fchmod@plt+0x2396>
mov    0x806aa30,%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%edi
test   %eax,%eax
mov    0x806aa2c,%eax
cmovne 0x806b034,%esi
test   %eax,%eax
mov    0x98(%esp),%eax
cmovne 0x806b030,%edi
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049b50 <lchown@plt>
test   %eax,%eax
js     804c828 <fchmod@plt+0x2af8>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
xchg   %ax,%ax
jmp    804bbeb <fchmod@plt+0x1ebb>
mov    0x806a204,%ecx
mov    %ecx,%ebx
mov    %ecx,%eax
sar    $0x1f,%ebx
add    0x806aff8,%eax
mov    %ebx,%edx
adc    0x806affc,%edx
mov    %ecx,0x8(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %ebx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060ae0 <argp_parse+0x5dc0>
movl   $0x5,0x10(%esp)
movl   $0x806115a,0x8(%esp)
movl   $0x8061166,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,%ebx
call   8049ca0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x1000,%eax
je     804c3ab <fchmod@plt+0x267b>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%ebx
movl   $0x8061139,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053960 <fchmod@plt+0x9c30>
mov    0x78(%esp),%edx
mov    %ebp,%eax
mov    0x7c(%esp),%ecx
call   8049f30 <fchmod@plt+0x200>
jmp    804bbeb <fchmod@plt+0x1ebb>
movsbl 0x806a1fc,%eax
movl   $0x80610dd,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x8(%esp)
call   8049ad0 <__printf_chk@plt>
jmp    804bf5e <fchmod@plt+0x222e>
cmp    $0x2000,%eax
je     804c3ab <fchmod@plt+0x267b>
cmp    $0x4000,%eax
jne    804c15c <fchmod@plt+0x242c>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   8054730 <fchmod@plt+0xaa00>
jmp    804bbeb <fchmod@plt+0x1ebb>
mov    0x806a9d0,%eax
mov    %eax,(%esp)
call   8051ff0 <fchmod@plt+0x82c0>
test   %eax,%eax
jne    804c62c <fchmod@plt+0x28fc>
mov    0x806a9d0,%eax
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8049890 <strcpy@plt>
cmpb   $0x0,0x806a9e8
jne    804bd6a <fchmod@plt+0x203a>
lea    0x100(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x98(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    804c2eb <fchmod@plt+0x25bb>
mov    0x110(%esp),%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
je     804c5eb <fchmod@plt+0x28bb>
mov    0x806aa5c,%eax
test   %eax,%eax
jne    804c2c3 <fchmod@plt+0x2593>
mov    0x148(%esp),%eax
cmp    %eax,0x74(%esp)
jle    804cb01 <fchmod@plt+0x2dd1>
mov    0x98(%esp),%eax
cmp    $0x4000,%edx
mov    %eax,(%esp)
je     804c73e <fchmod@plt+0x2a0e>
call   80497e0 <unlink@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    804ca74 <fchmod@plt+0x2d44>
mov    0x64(%esp),%ecx
movl   $0x0,0x3c(%esp)
mov    %ecx,%eax
and    $0xf000,%eax
jmp    804bd75 <fchmod@plt+0x2045>
movl   $0x80,0x4(%esp)
movl   $0x806a9cc,(%esp)
call   804fa50 <fchmod@plt+0x5d20>
mov    0x806aa68,%eax
movl   $0x1,0x806a9d4
00
jmp    804bcb5 <fchmod@plt+0x1f85>
mov    0x806aa68,%ebp
test   %ebp,%ebp
jne    804c6ad <fchmod@plt+0x297d>
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
jmp    804b9bb <fchmod@plt+0x1c8b>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   8049870 <__fxstat64@plt>
test   %eax,%eax
jne    804c66f <fchmod@plt+0x293f>
mov    0xb0(%esp),%eax
mov    %eax,%edx
and    $0xb000,%edx
cmp    $0x2000,%edx
sete   0x806a9f3
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   0x806a9f1
jmp    804b9f3 <fchmod@plt+0x1cc3>
cmpb   $0x0,0x806a9e8
jne    804bbeb <fchmod@plt+0x1ebb>
cmpl   $0x1,0x70(%esp)
jbe    804c78f <fchmod@plt+0x2a5f>
mov    0x806aa70,%eax
cmp    $0x5,%eax
je     804c417 <fchmod@plt+0x26e7>
cmp    $0x6,%eax
je     804c79c <fchmod@plt+0x2a6c>
mov    0x5c(%esp),%eax
mov    0x60(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x84(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   804ee40 <fchmod@plt+0x5110>
test   %eax,%eax
je     804bbeb <fchmod@plt+0x1ebb>
mov    0x64(%esp),%ecx
mov    0x8c(%esp),%esi
xor    %edx,%edx
mov    0x88(%esp),%edi
mov    %ecx,0x8(%esp)
movl   $0x1,(%esp)
mov    %esi,%eax
xor    %al,%al
mov    %edi,%ebx
shld   $0xc,%eax,%edx
and    $0xfffff000,%ebx
or     %edx,%ebx
and    $0xfff,%edi
mov    %esi,%edx
shl    $0x8,%edi
movzbl %dl,%esi
shl    $0xc,%eax
or     %esi,%edi
or     %edi,%eax
mov    %eax,0x50(%esp)
lea    0x50(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x98(%esp),%eax
mov    %ebx,0x54(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <__xmknod@plt>
test   %eax,%eax
js     804c95e <fchmod@plt+0x2c2e>
mov    0x806aa28,%ecx
test   %ecx,%ecx
jne    804c4cf <fchmod@plt+0x279f>
mov    0x806aa30,%eax
mov    0x806aa2c,%edx
mov    0x68(%esp),%ebx
mov    0x6c(%esp),%esi
test   %eax,%eax
mov    0x98(%esp),%eax
cmovne 0x806b034,%ebx
test   %edx,%edx
cmovne 0x806b030,%esi
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8049690 <chown@plt>
test   %eax,%eax
js     804c888 <fchmod@plt+0x2b58>
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8049c00 <chmod@plt>
test   %eax,%eax
js     804c97c <fchmod@plt+0x2c4c>
mov    0x806aa4c,%eax
test   %eax,%eax
je     804bbeb <fchmod@plt+0x1ebb>
mov    0x74(%esp),%eax
movl   $0xffffffff,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
call   80541c0 <fchmod@plt+0xa490>
jmp    804bbeb <fchmod@plt+0x1ebb>
movl   $0x806a9dc,(%esp)
call   8049730 <time@plt>
jmp    804b9d3 <fchmod@plt+0x1ca3>
mov    0x9c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a860 <fchmod@plt+0xb30>
jmp    804ba00 <fchmod@plt+0x1cd0>
mov    0x806a9c8,%ebx
test   %ebx,%ebx
jne    804c56a <fchmod@plt+0x283a>
jmp    804be34 <fchmod@plt+0x2104>
nop
mov    (%ebx),%ebx
test   %ebx,%ebx
je     804be34 <fchmod@plt+0x2104>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    0x30(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   804ee40 <fchmod@plt+0x5110>
test   %eax,%eax
je     804c560 <fchmod@plt+0x2830>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
js     804c721 <fchmod@plt+0x29f1>
lea    0x4(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8054230 <fchmod@plt+0xa500>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
jns    804c560 <fchmod@plt+0x2830>
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804c560 <fchmod@plt+0x2830>
mov    0x64(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804c2a9 <fchmod@plt+0x2579>
movl   $0x1,0x3c(%esp)
jmp    804c217 <fchmod@plt+0x24e7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806afec
00
mov    $0x4,%eax
movl   $0x1,0x20(%esp)
jmp    804b873 <fchmod@plt+0x1b43>
movl   $0x5,0x8(%esp)
mov    0x806a9d0,%ebx
movl   $0x80610f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804bd5d <fchmod@plt+0x202d>
movl   $0x5,0x8(%esp)
movl   $0x80610c4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804c379 <fchmod@plt+0x2649>
movl   $0x8061027,0x4(%esp)
movl   $0x80610b9,(%esp)
call   8049850 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804ca50 <fchmod@plt+0x2d20>
movl   $0x80610c2,0x4(%esp)
movl   $0x80610b9,(%esp)
call   8049850 <fopen64@plt>
movl   $0x0,0x24(%esp)
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    804b9bb <fchmod@plt+0x1c8b>
call   8049a20 <__errno_location@plt>
movl   $0x80610b9,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x20(%esp),%eax
mov    %eax,0x24(%esp)
jmp    804b9bb <fchmod@plt+0x1c8b>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    804c852 <fchmod@plt+0x2b22>
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
jmp    804c560 <fchmod@plt+0x2830>
call   8049720 <rmdir@plt>
test   %eax,%eax
setne  %al
jmp    804c2e3 <fchmod@plt+0x25b3>
call   8049a20 <__errno_location@plt>
movl   $0x80610b9,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x24(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,0x28(%esp)
jmp    804b9bb <fchmod@plt+0x1c8b>
mov    0x806aa0c,%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
jmp    804b8bb <fchmod@plt+0x1b8b>
cmpl   $0x6,0x806aa70
jne    804c417 <fchmod@plt+0x26e7>
mov    0x9c(%esp),%eax
test   %eax,%eax
je     804c417 <fchmod@plt+0x26e7>
cmpb   $0x0,(%eax)
je     804c417 <fchmod@plt+0x26e7>
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   804ed30 <fchmod@plt+0x5000>
test   %eax,%eax
jns    804bbeb <fchmod@plt+0x1ebb>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%edi
movl   $0x8061008,0x4(%esp)
mov    0x9c(%esp),%esi
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804bbeb <fchmod@plt+0x1ebb>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049a20 <__errno_location@plt>
cmpl   $0x1,(%eax)
je     804c0c6 <fchmod@plt+0x2396>
mov    0x98(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8056930 <fchmod@plt+0xcc00>
jmp    804c0c6 <fchmod@plt+0x2396>
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
js     804c72e <fchmod@plt+0x29fe>
jmp    804c5b8 <fchmod@plt+0x2888>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049a20 <__errno_location@plt>
cmpl   $0x1,(%eax)
je     804c4cf <fchmod@plt+0x279f>
mov    0x98(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8056930 <fchmod@plt+0xcc00>
jmp    804c4cf <fchmod@plt+0x279f>
mov    %eax,0x806a9c8
jmp    804bed2 <fchmod@plt+0x21a2>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    804ca20 <fchmod@plt+0x2cf0>
mov    0x98(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   805d540 <argp_parse+0x2820>
mov    %ebx,(%esp)
mov    %eax,0x2c(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8061120,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049790 <dcgettext@plt>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    0x2c(%esp),%edx
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edx,0x10(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
jmp    804bbeb <fchmod@plt+0x1ebb>
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,%ebx
jmp    804c05f <fchmod@plt+0x232f>
mov    0x806aa6c,%esi
test   %esi,%esi
jne    804c998 <fchmod@plt+0x2c68>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8056ac0 <fchmod@plt+0xcd90>
jmp    804bbeb <fchmod@plt+0x1ebb>
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8056890 <fchmod@plt+0xcb60>
jmp    804c4ee <fchmod@plt+0x27be>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    0x8c(%esp),%esi
xor    %edx,%edx
mov    0x88(%esp),%edi
movl   $0x1,(%esp)
mov    %esi,%eax
xor    %al,%al
mov    %edi,%ecx
shld   $0xc,%eax,%edx
and    $0xfffff000,%ecx
shl    $0xc,%eax
or     %edx,%ecx
mov    %eax,%ebx
mov    %edi,%eax
and    $0xfff,%eax
mov    %esi,%edx
shl    $0x8,%eax
movzbl %dl,%esi
or     %esi,%eax
or     %eax,%ebx
lea    0x48(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x64(%esp),%eax
mov    %ebx,0x48(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x8(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <__xmknod@plt>
test   %eax,%eax
jns    804c481 <fchmod@plt+0x2751>
jmp    804c968 <fchmod@plt+0x2c38>
lea    0x0(%esi),%esi
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    0x98(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049b70 <symlink@plt>
test   %eax,%eax
jns    804c07a <fchmod@plt+0x234a>
jmp    804c8d1 <fchmod@plt+0x2ba1>
nop
call   8049a20 <__errno_location@plt>
movl   $0x80610b9,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804c6cd <fchmod@plt+0x299d>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%esi
movl   $0x8061107,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80498b0 <error@plt>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053960 <fchmod@plt+0x9c30>
mov    0x78(%esp),%edx
mov    %ebp,%eax
mov    0x7c(%esp),%ecx
call   8049f30 <fchmod@plt+0x200>
movl   $0x0,0x3c(%esp)
jmp    804bbeb <fchmod@plt+0x1ebb>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804be14 <fchmod@plt+0x20e4>
movl   $0x5,0x8(%esp)
mov    0x98(%esp),%ebx
movl   $0x80612d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
jmp    804caac <fchmod@plt+0x2d7c>
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804ba00 <fchmod@plt+0x1cd0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8,%esp
mov    0x4(%eax),%esi
mov    0x8(%eax),%edi
mov    0x28(%eax),%ebp
mov    0x806a9e0,%edx
mov    0x2c(%eax),%eax
mov    %eax,(%esp)
xor    %eax,%eax
test   %edx,%edx
jne    804cb7e <fchmod@plt+0x2e4e>
jmp    804cba8 <fchmod@plt+0x2e78>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%edx
test   %edx,%edx
je     804cba8 <fchmod@plt+0x2e78>
mov    0xc(%edx),%ebx
mov    0x8(%edx),%ecx
xor    %edi,%ebx
xor    %esi,%ecx
or     %ecx,%ebx
jne    804cb78 <fchmod@plt+0x2e48>
cmp    %ebp,0x2c(%edx)
jne    804cb78 <fchmod@plt+0x2e48>
mov    (%esp),%ecx
cmp    %ecx,0x30(%edx)
mov    (%edx),%edx
sete   %cl
movzbl %cl,%ecx
add    %ecx,%eax
test   %edx,%edx
jne    804cb7e <fchmod@plt+0x2e4e>
lea    0x0(%esi),%esi
add    $0x8,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061304,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x806aa70,%ecx
lea    -0x3(%ecx),%ebx
cmp    $0x1,%ebx
jbe    804cc58 <fchmod@plt+0x2f28>
lea    -0x5(%ecx),%ebx
cmp    $0x1,%ebx
jbe    804cc60 <fchmod@plt+0x2f30>
cmp    $0x7,%ecx
jne    804cc28 <fchmod@plt+0x2ef8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%ecx
je     804cc1f <fchmod@plt+0x2eef>
and    $0x1,%edx
test   %edx,%edx
je     804cc1f <fchmod@plt+0x2eef>
movl   $0x80532e0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
movl   $0x0,0x4(%esp)
call   80525c0 <fchmod@plt+0x8890>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
neg    %edx
and    $0x3,%edx
jmp    804cc30 <fchmod@plt+0x2f00>
nop
neg    %edx
and    $0x1ff,%edx
jmp    804cc30 <fchmod@plt+0x2f00>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x203c,%esp
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
test   %edx,%edx
mov    %ecx,0x18(%esp)
jle    804ccea <fchmod@plt+0x2fba>
lea    0x2c(%esp),%ebp
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
movl   $0x2000,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049680 <read@plt>
test   %eax,%eax
mov    %eax,%esi
js     804cd70 <fchmod@plt+0x3040>
je     804ccea <fchmod@plt+0x2fba>
cmp    %esi,%edi
cmovle %edi,%esi
test   %esi,%esi
jle    804cce4 <fchmod@plt+0x2fb4>
mov    %ebp,%eax
lea    (%esi,%ebp,1),%ecx
lea    0x0(%esi),%esi
movzbl (%eax),%edx
add    $0x1,%eax
add    %edx,%ebx
cmp    %ecx,%eax
jne    804ccd8 <fchmod@plt+0x2fa8>
sub    %esi,%edi
test   %edi,%edi
jg     804cca0 <fchmod@plt+0x2f70>
mov    0x14(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049ba0 <lseek64@plt>
or     %eax,%edx
je     804cd53 <fchmod@plt+0x3023>
movl   $0x5,0x8(%esp)
movl   $0x8061356,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    0x18(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x202c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    804cdbc <fchmod@plt+0x308c>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x8061356,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x1c(%esp)
call   8049a20 <__errno_location@plt>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804ccc4 <fchmod@plt+0x2f94>
call   80497a0 <__stack_chk_fail@plt>
jmp    804cdd0 <fchmod@plt+0x30a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061372,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0xc,%esp
mov    0x30(%esp),%ecx
mov    0x20(%esp),%edi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
shl    %cl,%esi
mov    0x2c(%esp),%ebx
mov    %ecx,%ebp
sub    $0x1,%esi
mov    %esi,(%esp)
sar    $0x1f,%esi
mov    %esi,0x4(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%esi
sub    $0x1,%ebx
and    %eax,%esi
movzbl 0x80614a4(%esi),%esi
mov    %esi,%ecx
xor    %esi,%esi
mov    %cl,(%edi,%ebx,1)
mov    %ebp,%ecx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
test   %ebx,%ebx
jne    804ce58 <fchmod@plt+0x3128>
mov    %eax,%edi
xor    %eax,%eax
or     %edx,%edi
setne  %al
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x44(%esp),%ebx
mov    0x40(%esp),%ecx
mov    0x30(%esp),%edi
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
mov    0x3c(%esp),%ebx
shl    %cl,%esi
mov    0x38(%esp),%edx
mov    0x48(%esp),%ebp
sub    $0x1,%esi
mov    %esi,(%esp)
sar    $0x1f,%esi
mov    %ebx,0x8(%esp)
mov    0x8(%esp),%ebx
mov    %esi,0x4(%esp)
mov    %ecx,0x8(%esp)
nop
mov    (%esp),%esi
sub    $0x1,%ebx
and    %eax,%esi
movzbl 0x80614a4(%esi),%ecx
xor    %esi,%esi
mov    %cl,(%edi,%ebx,1)
movzbl 0x8(%esp),%ecx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
test   %ebx,%ebx
jne    804cee8 <fchmod@plt+0x31b8>
mov    %edx,%edi
or     %eax,%edi
je     804cf22 <fchmod@plt+0x31f2>
testb  $0x1,0x806a9ec
jne    804cf30 <fchmod@plt+0x3200>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
add    $0x1c,%esp
mov    %ebp,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804cdd0 <fchmod@plt+0x30a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x1,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x40(%esp),%ecx
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
shl    %cl,%edx
mov    0x3c(%esp),%eax
sub    $0x1,%edx
mov    %edx,0x8(%esp)
sar    $0x1f,%edx
mov    %edx,0xc(%esp)
mov    0x8(%esp),%edx
sub    $0x1,%eax
and    %esi,%edx
movzbl 0x80614a4(%edx),%edx
shrd   %cl,%edi,%esi
shr    %cl,%edi
mov    %dl,(%ebx,%eax,1)
xor    %edx,%edx
test   $0x20,%cl
cmovne %edi,%esi
cmovne %edx,%edi
test   %eax,%eax
jne    804cf80 <fchmod@plt+0x3250>
mov    %edi,%ebx
or     %esi,%ebx
je     804cfbf <fchmod@plt+0x328f>
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   804cbb0 <fchmod@plt+0x2e80>
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
mov    0xc0(%esp),%eax
lea    0x2e(%esp),%edi
movl   $0x6e,0x8(%esp)
mov    0xc4(%esp),%esi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049960 <__stpcpy_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8061428,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x8(%esi),%edx
mov    0x4(%esi),%eax
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061384,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0xc(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x806138e,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x10(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80617ab,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061392,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x20(%ebx),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80613a2,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x1c(%esi),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x28(%ebx),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80613b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x20(%esi),%eax
mov    0x24(%esi),%edx
mov    %eax,0x4(%esp)
lea    0x30(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
je     804d270 <fchmod@plt+0x3540>
mov    $0x1,%ebp
mov    0x9c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebp,%eax
jne    804d4c0 <fchmod@plt+0x3790>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80613be,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esi),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x38(%ebx),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
jne    804d246 <fchmod@plt+0x3516>
movl   $0x5,0x8(%esp)
movl   $0x80613d2,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x2c(%esi),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x40(%ebx),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
jne    804d246 <fchmod@plt+0x3516>
movl   $0x5,0x8(%esp)
movl   $0x80613e6,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esi),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x48(%ebx),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
jne    804d246 <fchmod@plt+0x3516>
movl   $0x5,0x8(%esp)
movl   $0x80613f1,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x34(%esi),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x50(%ebx),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
jne    804d246 <fchmod@plt+0x3516>
movl   $0x5,0x8(%esp)
movl   $0x80613fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%esi),%eax
movl   $0x4,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x58(%ebx),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
mov    %eax,%ebp
jne    804d246 <fchmod@plt+0x3516>
mov    0x3c(%esi),%ecx
lea    0x60(%ebx),%eax
xor    %ebx,%ebx
mov    %eax,%edx
mov    $0x8,%eax
mov    %ebp,0x1c(%esp)
mov    %edx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edx
sub    $0x1,%eax
and    $0xf,%edx
movzbl 0x80614a4(%edx),%edx
shrd   $0x4,%ebx,%ecx
shr    $0x4,%ebx
test   %eax,%eax
mov    %dl,0x0(%ebp,%eax,1)
jne    804d440 <fchmod@plt+0x3710>
mov    0xc8(%esp),%eax
movl   $0x6e,0x8(%esp)
mov    0x1c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x38(%esi),%eax
mov    %eax,0x8(%esp)
sar    $0x1f,%eax
mov    %eax,0xc(%esp)
mov    0xc8(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x38(%esi),%edx
mov    0xc8(%esp),%eax
add    $0x6e,%edx
call   804cc00 <fchmod@plt+0x2ed0>
jmp    804d24b <fchmod@plt+0x351b>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%eax
lea    0x35(%esp),%ecx
mov    0xa4(%esp),%edx
lea    0x2f(%esp),%edi
mov    0xb0(%esp),%ebx
mov    %eax,0x20(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0x24(%esp)
mov    0xac(%esp),%edx
mov    %ebx,%ebp
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
movzwl (%ebx),%eax
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %eax,%esi
sub    $0x1,%ecx
and    $0x7,%esi
movzbl 0x80614a4(%esi),%ebx
shrd   $0x3,%edx,%eax
shr    $0x3,%edx
mov    %bl,0x1(%ecx)
cmp    %edi,%ecx
jne    804d528 <fchmod@plt+0x37f8>
movl   $0x5,0x8(%esp)
movl   $0x8061406,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
mov    %edx,0x8(%esp)
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x36(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061428,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x4(%ebp),%eax
mov    0x8(%ebp),%edx
mov    %eax,0x4(%esp)
lea    0x3c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061384,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0xc(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x42(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x806138e,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x10(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80617ab,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x4e(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061392,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x54(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x8061414,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x2c(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
mov    %edx,0x8(%esp)
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x5a(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80613a2,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0xb,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   804cea0 <fchmod@plt+0x3170>
movl   $0x5,0x8(%esp)
movl   $0x80613fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x6b(%esp),%eax
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
je     804d850 <fchmod@plt+0x3b20>
mov    $0x1,%eax
mov    0x7c(%esp),%edi
xor    %gs:0x14,%edi
jne    804d8fe <fchmod@plt+0x3bce>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80613b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x40(%ebp),%eax
movl   $0x3,0x10(%esp)
movl   $0xb,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x20(%ebp),%eax
mov    0x24(%ebp),%edx
mov    %eax,0x4(%esp)
lea    0x71(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804cf50 <fchmod@plt+0x3220>
test   %eax,%eax
jne    804d82b <fchmod@plt+0x3afb>
mov    %eax,0x20(%esp)
mov    0xb4(%esp),%eax
movl   $0x4c,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x38(%ebp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%ebp),%edx
mov    %edx,(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x20(%esp),%eax
jmp    804d830 <fchmod@plt+0x3b00>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x20(%esp),%ecx
mov    0x24(%esp),%esi
mov    0x28(%esp),%ebx
mov    0xc(%ecx),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     804d9db <fchmod@plt+0x3cab>
jbe    804d9d0 <fchmod@plt+0x3ca0>
cmp    $0x6000,%eax
je     804d9db <fchmod@plt+0x3cab>
cmp    $0xc000,%eax
je     804d9db <fchmod@plt+0x3cab>
mov    0x2c(%ecx),%eax
xor    %edx,%edx
mov    0x28(%ecx),%ebp
xor    %al,%al
shld   $0xc,%eax,%edx
mov    %ebp,%edi
mov    %edx,0x4(%esp)
movzbl 0x2c(%ecx),%edx
and    $0xfff,%ebp
and    $0xfffff000,%edi
shl    $0x8,%ebp
or     0x4(%esp),%edi
or     %edx,%ebp
xor    %edx,%edx
shl    $0xc,%eax
mov    %eax,(%esp)
or     %ebp,%eax
mov    0x30(%ecx),%ebp
mov    %eax,(%esi)
mov    %edi,0x4(%esi)
mov    0x34(%ecx),%esi
mov    %ebp,%ecx
and    $0xfffff000,%ecx
mov    %esi,%eax
xor    %al,%al
shld   $0xc,%eax,%edx
shl    $0xc,%eax
or     %edx,%ecx
mov    %eax,%edi
mov    %ebp,%eax
and    $0xfff,%eax
mov    %esi,%edx
movzbl %dl,%esi
shl    $0x8,%eax
or     %esi,%eax
or     %eax,%edi
mov    %edi,(%ebx)
mov    %ecx,0x4(%ebx)
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1000,%eax
jne    804d952 <fchmod@plt+0x3c22>
mov    0x34(%ecx),%eax
xor    %edx,%edx
mov    0x30(%ecx),%ebp
xor    %al,%al
shld   $0xc,%eax,%edx
mov    %ebp,%edi
mov    %edx,0x4(%esp)
movzbl 0x34(%ecx),%edx
and    $0xfff,%ebp
and    $0xfffff000,%edi
shl    $0x8,%ebp
or     0x4(%esp),%edi
shl    $0xc,%eax
or     %edx,%ebp
mov    %eax,(%esp)
or     %ebp,%eax
mov    %eax,0x20(%ecx)
mov    %edi,0x24(%ecx)
movl   $0x1,(%ebx)
movl   $0x0,0x4(%ebx)
movl   $0x1,(%esi)
movl   $0x0,0x4(%esi)
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x71c7,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%esi
mov    %ax,0x16(%esp)
mov    0x50(%esp),%edi
mov    0x28(%esi),%eax
movzbl 0x2c(%esi),%edx
and    $0xfff,%eax
shl    $0x8,%eax
or     %edx,%eax
testb  $0x1,0x806a9ec
mov    %ax,0x18(%esp)
je     804dc7b <fchmod@plt+0x3f4b>
mov    0x8(%esi),%edx
mov    0x4(%esi),%eax
mov    %edx,%ebx
shr    $0x10,%ebx
mov    %eax,%ecx
shrd   $0x10,%edx,%ecx
mov    %ebx,%ebp
or     %ecx,%ebp
jne    804dc40 <fchmod@plt+0x3f10>
mov    %eax,%ebx
mov    %ebx,%eax
xor    %ax,%ax
or     %eax,%edx
mov    %bx,0x1a(%esp)
jne    804dc93 <fchmod@plt+0x3f63>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
movzwl %ax,%edx
cmp    %edx,%eax
mov    %ax,0x1c(%esp)
je     804daeb <fchmod@plt+0x3dbb>
movl   $0x5,0x8(%esp)
movl   $0x8061384,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esi),%ecx
testb  $0x1,0x806a9ec
jne    804dd48 <fchmod@plt+0x4018>
mov    0x10(%esi),%eax
movzwl %ax,%edx
cmp    %edx,%eax
mov    %ax,0x1e(%esp)
je     804db26 <fchmod@plt+0x3df6>
movl   $0x5,0x8(%esp)
movl   $0x806138e,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esi),%ecx
testb  $0x1,0x806a9ec
jne    804dd58 <fchmod@plt+0x4028>
mov    0x14(%esi),%eax
movzwl %ax,%edx
cmp    %edx,%eax
mov    %ax,0x20(%esp)
je     804db61 <fchmod@plt+0x3e31>
movl   $0x5,0x8(%esp)
movl   $0x80617ab,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esi),%ecx
testb  $0x1,0x806a9ec
jne    804dd68 <fchmod@plt+0x4038>
mov    0x18(%esi),%eax
movzwl %ax,%edx
cmp    %edx,%eax
mov    %ax,0x22(%esp)
je     804db9c <fchmod@plt+0x3e6c>
movl   $0x5,0x8(%esp)
movl   $0x8061392,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esi),%ecx
testb  $0x1,0x806a9ec
jne    804dd78 <fchmod@plt+0x4048>
mov    0x1c(%esi),%eax
mov    %di,0x24(%esp)
mov    %eax,%edx
mov    %ax,0x28(%esp)
mov    0x38(%esi),%eax
sar    $0x10,%edx
mov    %dx,0x26(%esp)
movzwl %ax,%edx
cmp    %edx,%eax
mov    %ax,0x2a(%esp)
jne    804dd30 <fchmod@plt+0x4000>
mov    0x24(%esi),%ebx
xor    %edx,%edx
mov    0x20(%esi),%ecx
movzwl 0x20(%esi),%eax
shrd   $0x10,%ebx,%ecx
xor    %ebx,%ebx
mov    %cx,0x2c(%esp)
mov    %ax,0x2e(%esp)
movzwl %cx,%eax
movzwl 0x20(%esi),%ecx
shld   $0x10,%eax,%edx
shl    $0x10,%eax
mov    %edx,%ebp
mov    0x24(%esi),%edx
mov    %eax,%edi
mov    0x20(%esi),%eax
add    %ecx,%edi
adc    %ebx,%ebp
xor    %ebp,%edx
xor    %edi,%eax
or     %eax,%edx
je     804dcd0 <fchmod@plt+0x3fa0>
movl   $0x5,0x8(%esp)
movl   $0x80613b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%edx
mov    0x40(%esi),%eax
call   804cbb0 <fchmod@plt+0x2e80>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esi),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061419,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x4(%esi),%ebx
mov    0x8(%esi),%edx
mov    %ebx,%eax
xor    %ax,%ax
or     %eax,%edx
mov    %bx,0x1a(%esp)
je     804dab0 <fchmod@plt+0x3d80>
movl   $0x5,0x8(%esp)
movl   $0x8061428,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esi),%ecx
testb  $0x1,0x806a9ec
je     804dab0 <fchmod@plt+0x3d80>
mov    %eax,%edx
mov    %ecx,%eax
call   804cdd0 <fchmod@plt+0x30a0>
jmp    804dab0 <fchmod@plt+0x3d80>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%eax
movl   $0x1a,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x16(%esp),%eax
mov    %eax,(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x38(%esi),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x38(%esi),%edx
mov    0x5c(%esp),%eax
add    $0x1a,%edx
call   804cc00 <fchmod@plt+0x2ed0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x80613fc,0x4(%esp)
jmp    804dc1a <fchmod@plt+0x3eea>
lea    0x0(%esi),%esi
mov    %eax,%edx
mov    %ecx,%eax
call   804cdd0 <fchmod@plt+0x30a0>
jmp    804daeb <fchmod@plt+0x3dbb>
xchg   %ax,%ax
mov    %eax,%edx
mov    %ecx,%eax
call   804cdd0 <fchmod@plt+0x30a0>
jmp    804db26 <fchmod@plt+0x3df6>
xchg   %ax,%ax
mov    %eax,%edx
mov    %ecx,%eax
call   804cdd0 <fchmod@plt+0x30a0>
jmp    804db61 <fchmod@plt+0x3e31>
xchg   %ax,%ax
mov    %eax,%edx
mov    %ecx,%eax
call   804cdd0 <fchmod@plt+0x30a0>
jmp    804db9c <fchmod@plt+0x3e6c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpl   $0x8,0x806aa70
mov    0x50(%esp),%ebx
ja     804dfc0 <fchmod@plt+0x4290>
mov    0x806aa70,%eax
jmp    *0x8061480(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804d910 <fchmod@plt+0x3be0>
mov    0x54(%esp),%eax
mov    0x2c(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804da40 <fchmod@plt+0x3d10>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x34(%ebx),%esi
xor    %edx,%edx
mov    0x54(%esp),%eax
mov    0x30(%ebx),%edi
mov    %ebx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    %esi,%eax
xor    %al,%al
mov    %edi,%ecx
shld   $0xc,%eax,%edx
and    $0xfffff000,%ecx
shl    $0xc,%eax
or     %edx,%ecx
mov    %eax,%ebx
mov    %edi,%eax
mov    %esi,%edx
and    $0xfff,%eax
movzbl %dl,%esi
shl    $0x8,%eax
or     %esi,%eax
or     %eax,%ebx
mov    %ebx,(%esp)
mov    %ecx,0x4(%esp)
call   804da40 <fchmod@plt+0x3d10>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34(%ebx),%edi
xor    %edx,%edx
mov    0x54(%esp),%eax
mov    0x30(%ebx),%ebp
mov    0x28(%ebx),%esi
mov    0x2c(%ebx),%ecx
mov    %eax,0x14(%esp)
mov    %edi,%eax
mov    %ebx,0x10(%esp)
xor    %al,%al
mov    %ebp,%ebx
shld   $0xc,%eax,%edx
and    $0xfffff000,%ebx
or     %edx,%ebx
and    $0xfff,%ebp
mov    %edi,%edx
movzbl %dl,%edi
xor    %edx,%edx
shl    $0x8,%ebp
or     %edi,%ebp
shl    $0xc,%eax
or     %ebp,%eax
mov    %eax,0x8(%esp)
mov    %ecx,%eax
movzbl %cl,%ecx
xor    %al,%al
shld   $0xc,%eax,%edx
shl    $0xc,%eax
mov    %eax,%edi
mov    %esi,%eax
and    $0xfff,%eax
mov    %ebx,0xc(%esp)
shl    $0x8,%eax
mov    %esi,%ebx
or     %ecx,%eax
and    $0xfffff000,%ebx
or     %edx,%ebx
or     %eax,%edi
mov    %edi,(%esp)
mov    %ebx,0x4(%esp)
call   804d4d0 <fchmod@plt+0x37a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x54(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x80610a4,(%esp)
mov    %eax,0x8(%esp)
call   804cfd0 <fchmod@plt+0x32a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x54(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x80610b2,(%esp)
mov    %eax,0x8(%esp)
call   804cfd0 <fchmod@plt+0x32a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8051ff0 <fchmod@plt+0x82c0>
test   %eax,%eax
je     804dfc8 <fchmod@plt+0x4298>
mov    0x40(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80610f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    $0x1,%eax
jmp    804ddf0 <fchmod@plt+0x40c0>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804d910 <fchmod@plt+0x3be0>
mov    0x54(%esp),%eax
mov    0x2c(%esp),%edx
mov    %ebx,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d4d0 <fchmod@plt+0x37a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
mov    0x54(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051790 <fchmod@plt+0x7a60>
mov    0x1c(%esp),%eax
jmp    804ddf0 <fchmod@plt+0x40c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x71c7,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x14c,%esp
lea    0x48(%esp),%edi
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
call   804fa50 <fchmod@plt+0x5d20>
mov    0x806b02c,%eax
mov    %bp,0x50(%esp)
cmp    $0x3fffffff,%eax
mov    %eax,0x20(%esp)
jle    804e950 <fchmod@plt+0x4c20>
movb   $0x1,0x806a9f2
movb   $0x0,0x806a9f0
mov    0x806aa44,%esi
test   %esi,%esi
jne    804e938 <fchmod@plt+0x4c08>
xor    %ebp,%ebp
lea    0xe0(%esp),%esi
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x806a1fc,%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a9a4,%eax
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
test   %eax,%eax
je     804e330 <fchmod@plt+0x4600>
mov    0x4c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804e0c0 <fchmod@plt+0x4390>
movl   $0x5,0x8(%esp)
movl   $0x806144f,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804e058 <fchmod@plt+0x4328>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   *0x806aff0
test   %eax,%eax
js     804e318 <fchmod@plt+0x45e8>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    0x806aa70,%eax
mov    0x4c(%esp),%ebx
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804e640 <fchmod@plt+0x4910>
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
add    $0x1,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049890 <strcpy@plt>
mov    0x806aa18,%ebx
xor    %eax,%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
test   %ebx,%ebx
sete   %al
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8054310 <fchmod@plt+0xa5e0>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x90(%esp)
call   8049950 <strlen@plt>
add    $0x1,%eax
mov    %eax,0x88(%esp)
mov    0x5c(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     804e6a0 <fchmod@plt+0x4970>
jbe    804e298 <fchmod@plt+0x4568>
cmp    $0xa000,%eax
je     804e780 <fchmod@plt+0x4a50>
cmp    $0xc000,%eax
je     804e6a0 <fchmod@plt+0x4970>
cmp    $0x8000,%eax
jne    804e710 <fchmod@plt+0x49e0>
mov    0x806aa70,%eax
lea    -0x5(%eax),%edx
cmp    $0x1,%edx
jbe    804ea50 <fchmod@plt+0x4d20>
sub    $0x3,%eax
cmp    $0x1,%eax
jbe    804e868 <fchmod@plt+0x4b38>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804eb79 <fchmod@plt+0x4e49>
cmpl   $0x4,0x806aa70
je     804ea38 <fchmod@plt+0x4d08>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
test   %eax,%eax
jne    804e058 <fchmod@plt+0x4328>
mov    0x70(%esp),%eax
mov    0x74(%esp),%edx
mov    %ebp,0x10(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   80533a0 <fchmod@plt+0x9670>
mov    0x6c(%esp),%eax
mov    0x74(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x70(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8052920 <fchmod@plt+0x8bf0>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804ec8c <fchmod@plt+0x4f5c>
mov    0x70(%esp),%edx
mov    0x20(%esp),%eax
call   804cc00 <fchmod@plt+0x2ed0>
mov    0x806aa74,%ecx
test   %ecx,%ecx
jne    804ec65 <fchmod@plt+0x4f35>
mov    %ebx,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
jns    804e2da <fchmod@plt+0x45aa>
mov    %ebp,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804e2da <fchmod@plt+0x45aa>
lea    0x0(%esi),%esi
cmp    $0x2000,%eax
je     804e6a0 <fchmod@plt+0x4970>
cmp    $0x4000,%eax
jne    804e698 <fchmod@plt+0x4968>
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
test   %eax,%eax
jne    804e058 <fchmod@plt+0x4328>
mov    0x806aa58,%eax
test   %eax,%eax
jne    804e755 <fchmod@plt+0x4a25>
mov    0x806aa54,%ebx
test   %ebx,%ebx
je     804e058 <fchmod@plt+0x4328>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804ed10 <fchmod@plt+0x4fe0>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x2e,(%edx)
jmp    804e058 <fchmod@plt+0x4328>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8057060 <fchmod@plt+0xd330>
jmp    804e058 <fchmod@plt+0x4328>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
lea    0x98(%esp),%ebx
call   80496d0 <free@plt>
mov    0x806a9e0,%ebp
mov    %ebx,0x24(%esp)
test   %ebp,%ebp
jne    804e399 <fchmod@plt+0x4669>
jmp    804e4a0 <fchmod@plt+0x4770>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
movl   $0x0,0xb8(%esp)
00
movl   $0x0,0xbc(%esp)
00
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %eax,%ebx
call   804dd90 <fchmod@plt+0x4060>
mov    0x806a9e0,%eax
mov    (%eax),%ebp
test   %ebp,%ebp
mov    %ebp,0x806a9e0
je     804e4a0 <fchmod@plt+0x4770>
lea    0x4(%ebp),%esi
mov    %ebx,%edi
mov    %esi,%eax
call   804cb50 <fchmod@plt+0x2e20>
mov    $0x12,%ecx
rep movsl %ds:(%esi),%es:(%edi)
cmp    $0x1,%eax
jne    804e358 <fchmod@plt+0x4628>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     804e908 <fchmod@plt+0x4bd8>
cmpl   $0x4,0x806aa70
je     804e918 <fchmod@plt+0x4be8>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804dd90 <fchmod@plt+0x4060>
test   %eax,%eax
jne    804e384 <fchmod@plt+0x4654>
mov    0x44(%ebp),%eax
mov    0xbc(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0xb8(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   80533a0 <fchmod@plt+0x9670>
mov    0xb4(%esp),%eax
mov    0xbc(%esp),%edx
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   8052920 <fchmod@plt+0x8bf0>
mov    0x806aa70,%eax
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804eab0 <fchmod@plt+0x4d80>
mov    0xb8(%esp),%edx
mov    0x20(%esp),%eax
call   804cc00 <fchmod@plt+0x2ed0>
mov    0x806aa74,%ecx
test   %ecx,%ecx
jne    804e9e0 <fchmod@plt+0x4cb0>
mov    %esi,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
jns    804e384 <fchmod@plt+0x4654>
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804e384 <fchmod@plt+0x4654>
nop
mov    0x806aa70,%eax
movl   $0x0,0x54(%esp)
movl   $0x0,0x58(%esp)
movl   $0x0,0x5c(%esp)
sub    $0x5,%eax
cmp    $0x1,%eax
movl   $0x0,0x60(%esp)
movl   $0x0,0x64(%esp)
movl   $0x1,0x68(%esp)
movl   $0x0,0x78(%esp)
movl   $0x0,0x7c(%esp)
movl   $0x0,0x80(%esp)
00
movl   $0x0,0x84(%esp)
00
movl   $0x0,0x6c(%esp)
movl   $0x0,0x8c(%esp)
00
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movl   $0xb,0x88(%esp)
00
movl   $0x806114f,0x90(%esp)
08
jbe    804e9b0 <fchmod@plt+0x4c80>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
mov    0x20(%esp),%edi
mov    0x806a204,%eax
sub    0x806b018,%eax
movl   $0x80532e0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   80525c0 <fchmod@plt+0x8890>
mov    %edi,(%esp)
call   8053130 <fchmod@plt+0x9400>
mov    0x806aa54,%edx
test   %edx,%edx
je     804e5ab <fchmod@plt+0x487b>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804ecfb <fchmod@plt+0x4fcb>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    0x806aa20,%eax
test   %eax,%eax
jne    804e630 <fchmod@plt+0x4900>
mov    0x806a204,%ecx
mov    %ecx,%ebx
mov    %ecx,%eax
sar    $0x1f,%ebx
add    0x806b008,%eax
mov    %ebx,%edx
adc    0x806b00c,%edx
mov    %ecx,0x8(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %ebx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060ae0 <argp_parse+0x5dc0>
movl   $0x5,0x10(%esp)
movl   $0x806115a,0x8(%esp)
movl   $0x8061166,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,%ebx
call   8049ca0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x14c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x5c(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804e0fa <fchmod@plt+0x43ca>
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
je     804e102 <fchmod@plt+0x43d2>
lea    0x2(%eax),%edx
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   804fa70 <fchmod@plt+0x5d40>
mov    0x4c(%esp),%edx
mov    0x24(%esp),%eax
movb   $0x2f,(%edx,%eax,1)
mov    0x4c(%esp),%edx
movb   $0x0,0x1(%edx,%eax,1)
mov    0x4c(%esp),%ebx
jmp    804e0fa <fchmod@plt+0x43ca>
cmp    $0x1000,%eax
jne    804e710 <fchmod@plt+0x49e0>
nop
mov    0x806aa70,%eax
cmp    $0x5,%eax
je     804eafe <fchmod@plt+0x4dce>
cmp    $0x6,%eax
jne    804e2ae <fchmod@plt+0x457e>
cmpl   $0x1,0x68(%esp)
jbe    804e2ae <fchmod@plt+0x457e>
mov    0x7c(%esp),%eax
mov    0x58(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052b10 <fchmod@plt+0x8de0>
test   %eax,%eax
je     804ecc4 <fchmod@plt+0x4f94>
mov    0xf0(%esp),%edx
and    $0xfff,%edx
or     $0x80,%dh
mov    %edx,0x5c(%esp)
mov    %eax,0x94(%esp)
jmp    804e2be <fchmod@plt+0x458e>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8061139,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa58,%eax
test   %eax,%eax
je     804e2e7 <fchmod@plt+0x45b7>
mov    0x806a984,%eax
mov    %ebp,0xc(%esp)
movl   $0x8062e18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804e2e7 <fchmod@plt+0x45b7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10c(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %ebp,(%esp)
mov    %eax,%ebx
mov    0x10c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049810 <readlink@plt>
test   %eax,%eax
js     804ea98 <fchmod@plt+0x4d68>
mov    0x806aa18,%edx
movb   $0x0,(%ebx,%eax,1)
xor    %eax,%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
test   %edx,%edx
sete   %al
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   8054310 <fchmod@plt+0xa5e0>
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
mov    %eax,%ecx
mov    %eax,%edx
mov    %eax,0x24(%esp)
sar    $0x1f,%ecx
mov    %eax,0x70(%esp)
mov    0x806aa70,%eax
mov    %ecx,0x74(%esp)
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804e8a8 <fchmod@plt+0x4b78>
mov    0x20(%esp),%eax
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    804e058 <fchmod@plt+0x4328>
mov    0x20(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
call   804cc00 <fchmod@plt+0x2ed0>
jmp    804e8fa <fchmod@plt+0x4bca>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ebx
cmp    $0x1,%ebx
jbe    804e1c1 <fchmod@plt+0x4491>
lea    0x50(%esp),%eax
call   804cb50 <fchmod@plt+0x2e20>
add    $0x1,%eax
cmp    %eax,%ebx
je     804eb86 <fchmod@plt+0x4e56>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804f9d0 <fchmod@plt+0x5ca0>
mov    0x806a9e0,%edx
mov    %edx,(%eax)
mov    %eax,0x806a9e0
jmp    804e2da <fchmod@plt+0x45aa>
nop
cmpl   $0x63,0x24(%esp)
jle    804ea08 <fchmod@plt+0x4cd8>
mov    0x90(%esp),%edx
movl   $0x5,0x8(%esp)
movl   $0x8061462,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x24(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
jmp    804e2da <fchmod@plt+0x45aa>
nop
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
jmp    804e384 <fchmod@plt+0x4654>
mov    0x44(%ebp),%ecx
mov    0xb8(%esp),%edx
call   804cc70 <fchmod@plt+0x2f40>
mov    %eax,0xd4(%esp)
jmp    804e3e3 <fchmod@plt+0x46b3>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804b830 <fchmod@plt+0x1b00>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053640 <fchmod@plt+0x9910>
jmp    804e048 <fchmod@plt+0x4318>
xchg   %ax,%ax
lea    0xe0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049870 <__fxstat64@plt>
test   %eax,%eax
jne    804eb3b <fchmod@plt+0x4e0b>
mov    0xf0(%esp),%eax
mov    %eax,%edx
and    $0xb000,%edx
cmp    $0x2000,%edx
sete   0x806a9f2
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   0x806a9f0
jmp    804e03a <fchmod@plt+0x430a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movl   $0x80532e0,0xc(%esp)
movl   $0x400,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   80525c0 <fchmod@plt+0x8890>
jmp    804e554 <fchmod@plt+0x4824>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb4(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0xd8(%esp),%eax
mov    %eax,0x4(%esp)
call   80541c0 <fchmod@plt+0xa490>
jmp    804e47f <fchmod@plt+0x474f>
nop
mov    0x24(%esp),%eax
mov    %ebx,0x94(%esp)
movb   $0x0,(%ebx,%eax,1)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
test   %eax,%eax
jne    804e058 <fchmod@plt+0x4328>
jmp    804e8fa <fchmod@plt+0x4bca>
mov    0x70(%esp),%edx
mov    %ebp,%ecx
call   804cc70 <fchmod@plt+0x2f40>
mov    %eax,0x8c(%esp)
jmp    804e1f0 <fchmod@plt+0x44c0>
nop
cmpl   $0x1,0x68(%esp)
jbe    804e1b5 <fchmod@plt+0x4485>
mov    0x7c(%esp),%eax
mov    0x58(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052b10 <fchmod@plt+0x8de0>
test   %eax,%eax
jne    804e702 <fchmod@plt+0x49d2>
mov    0x806aa70,%eax
jmp    804e1b5 <fchmod@plt+0x4485>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8056db0 <fchmod@plt+0xd080>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
jmp    804e058 <fchmod@plt+0x4328>
lea    0x0(%esi),%esi
cmpl   $0x1,0xb0(%esp)
jbe    804e461 <fchmod@plt+0x4731>
mov    0xc4(%esp),%eax
mov    0xa0(%esp),%edx
mov    %eax,0x10(%esp)
mov    0xc0(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0xd8(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   8052b60 <fchmod@plt+0x8e30>
jmp    804e461 <fchmod@plt+0x4731>
movl   $0x5,0x8(%esp)
movl   $0x8061334,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804e058 <fchmod@plt+0x4328>
movl   $0x5,0x8(%esp)
movl   $0x8061435,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804e977 <fchmod@plt+0x4c47>
mov    %ebp,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
jmp    804e058 <fchmod@plt+0x4328>
mov    0x58(%esp),%eax
mov    0x806a9e0,%ebx
mov    0x54(%esp),%edx
mov    %eax,%ecx
mov    0x78(%esp),%eax
test   %ebx,%ebx
mov    %eax,0x28(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x30(%esp)
je     804e1c1 <fchmod@plt+0x4491>
mov    %ebp,0x34(%esp)
mov    0x8(%ebx),%eax
mov    %edx,%ebp
mov    %ecx,%edx
mov    0xc(%ebx),%ecx
movl   $0x0,0x24(%esp)
xor    %ebp,%eax
xor    %edx,%ecx
or     %eax,%ecx
je     804ebee <fchmod@plt+0x4ebe>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
test   %eax,%eax
je     804ec5c <fchmod@plt+0x4f2c>
mov    %ebx,0x24(%esp)
mov    %eax,%ebx
mov    0xc(%ebx),%ecx
mov    0x8(%ebx),%eax
xor    %edx,%ecx
xor    %ebp,%eax
or     %eax,%ecx
jne    804ebd0 <fchmod@plt+0x4ea0>
mov    0x28(%esp),%eax
cmp    0x2c(%ebx),%eax
jne    804ebd0 <fchmod@plt+0x4ea0>
mov    0x30(%esp),%eax
cmp    0x30(%ebx),%eax
jne    804ebd0 <fchmod@plt+0x4ea0>
mov    0x20(%esp),%eax
movl   $0x0,0x24(%ebx)
movl   $0x0,0x28(%ebx)
mov    %edx,0x38(%esp)
mov    %eax,0x4(%esp)
lea    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804dd90 <fchmod@plt+0x4060>
mov    0x24(%esp),%ecx
mov    (%ebx),%eax
mov    0x38(%esp),%edx
test   %ecx,%ecx
je     804ecf1 <fchmod@plt+0x4fc1>
mov    %eax,(%ecx)
mov    (%ebx),%eax
mov    %ebx,(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   804fa30 <fchmod@plt+0x5d00>
mov    0x24(%esp),%ebx
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
jmp    804ebd2 <fchmod@plt+0x4ea2>
mov    0x34(%esp),%ebp
jmp    804e1c1 <fchmod@plt+0x4491>
mov    0x128(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x120(%esp),%eax
mov    %eax,0x8(%esp)
call   80541c0 <fchmod@plt+0xa490>
jmp    804e27c <fchmod@plt+0x454c>
cmpl   $0x1,0x68(%esp)
jbe    804e261 <fchmod@plt+0x4531>
mov    0x7c(%esp),%eax
mov    0x58(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052b60 <fchmod@plt+0x8e30>
jmp    804e261 <fchmod@plt+0x4531>
mov    0x7c(%esp),%eax
mov    0x58(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052b60 <fchmod@plt+0x8e30>
jmp    804e2ae <fchmod@plt+0x457e>
mov    %eax,0x806a9e0
jmp    804ec3b <fchmod@plt+0x4f0b>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804e5ab <fchmod@plt+0x487b>
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804e058 <fchmod@plt+0x4328>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049a40 <link@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804ed70 <fchmod@plt+0x5040>
test   %ebx,%ebx
jne    804ed7e <fchmod@plt+0x504e>
mov    0x806aa58,%edx
test   %edx,%edx
jne    804edd8 <fchmod@plt+0x50a8>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa6c,%ecx
test   %ecx,%ecx
jne    804ee20 <fchmod@plt+0x50f0>
mov    0x806aa50,%eax
test   %eax,%eax
je     804ed5f <fchmod@plt+0x502f>
movl   $0x5,0x8(%esp)
movl   $0x8061008,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebp
call   8049a20 <__errno_location@plt>
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x80614b5,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049a40 <link@plt>
mov    %eax,%ebx
jmp    804ed51 <fchmod@plt+0x5021>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ebp
mov    0x48(%esp),%ebx
mov    0x4c(%esp),%esi
mov    0x50(%esp),%edi
mov    0x40(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x1c(%esp)
call   8052b10 <fchmod@plt+0x8de0>
test   %eax,%eax
je     804ee8f <fchmod@plt+0x515f>
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804ed30 <fchmod@plt+0x5000>
mov    0x1c(%esp),%eax
mov    %ebx,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
call   8052b60 <fchmod@plt+0x8e30>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x16c,%esp
movl   $0x0,(%esp)
lea    0x48(%esp),%ebx
call   8049c30 <umask@plt>
lea    0x50(%esp),%ebp
lea    0xa0(%esp),%edi
mov    %eax,0x806b004
mov    0x806a9f4,%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
movl   $0x80,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%esi
call   804fa50 <fchmod@plt+0x5d20>
lea    0x2(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
call   804fa50 <fchmod@plt+0x5d20>
mov    0x806a9f4,%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049890 <strcpy@plt>
mov    0x54(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
lea    0x1(%esi),%eax
movb   $0x1,0x806a9f0
mov    %eax,0x24(%esp)
nop
movsbl 0x806a1fc,%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a9a4,%eax
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
test   %eax,%eax
je     804f428 <fchmod@plt+0x56f8>
mov    0x4c(%esp),%eax
movzbl (%eax),%edx
test   %dl,%dl
je     804f130 <fchmod@plt+0x5400>
cmp    $0x2e,%dl
jne    804ef91 <fchmod@plt+0x5261>
movzbl 0x1(%eax),%edx
test   %dl,%dl
je     804ef48 <fchmod@plt+0x5218>
cmp    $0x2f,%dl
je     804f640 <fchmod@plt+0x5910>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *0x806aff0
test   %eax,%eax
js     804f4e8 <fchmod@plt+0x57b8>
mov    0x4c(%esp),%esi
cmpb   $0x2f,(%esi)
jne    804efb8 <fchmod@plt+0x5288>
nop
add    $0x1,%esi
cmpb   $0x2f,(%esi)
je     804efb0 <fchmod@plt+0x5280>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    %ebp,(%esp)
add    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804fa70 <fchmod@plt+0x5d40>
mov    0x24(%esp),%eax
add    0x54(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049890 <strcpy@plt>
lea    0x100(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    804f060 <fchmod@plt+0x5330>
mov    0x110(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804f500 <fchmod@plt+0x57d0>
mov    0x806aa5c,%edx
test   %edx,%edx
jne    804f03c <fchmod@plt+0x530c>
mov    0x148(%esp),%ecx
cmp    %ecx,0xe8(%esp)
jle    804f6b0 <fchmod@plt+0x5980>
cmp    $0x4000,%eax
mov    0x54(%esp),%eax
mov    %eax,(%esp)
je     804f630 <fchmod@plt+0x5900>
call   80497e0 <unlink@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    804f528 <fchmod@plt+0x57f8>
mov    0xb0(%esp),%edx
mov    %edx,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804f238 <fchmod@plt+0x5508>
cmp    $0x4000,%eax
je     804f64f <fchmod@plt+0x591f>
and    $0xb000,%edx
cmp    $0x2000,%edx
je     804f170 <fchmod@plt+0x5440>
cmp    $0x1000,%eax
je     804f170 <fchmod@plt+0x5440>
cmp    $0xc000,%eax
je     804f170 <fchmod@plt+0x5440>
cmp    $0xa000,%eax
je     804f576 <fchmod@plt+0x5846>
movl   $0x5,0x8(%esp)
mov    0x4c(%esp),%esi
movl   $0x8061139,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa58,%eax
test   %eax,%eax
jne    804f208 <fchmod@plt+0x54d8>
mov    0x806aa54,%esi
test   %esi,%esi
je     804ef48 <fchmod@plt+0x5218>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f99f <fchmod@plt+0x5c6f>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x2e,(%edx)
jmp    804ef48 <fchmod@plt+0x5218>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806144f,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804ef48 <fchmod@plt+0x5218>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa50,%eax
test   %eax,%eax
jne    804f688 <fchmod@plt+0x5958>
cmpl   $0x1,0xb4(%esp)
ja     804f748 <fchmod@plt+0x5a18>
mov    0xc0(%esp),%eax
mov    0xc4(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x38(%esp)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <__xmknod@plt>
test   %eax,%eax
js     804f7e1 <fchmod@plt+0x5ab1>
mov    0x54(%esp),%eax
lea    0x58(%esp),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x98(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    %esi,0x4(%esp)
movl   $0xffffffff,(%esp)
call   8054230 <fchmod@plt+0xa500>
mov    0x806aa58,%eax
test   %eax,%eax
je     804f100 <fchmod@plt+0x53d0>
mov    0x54(%esp),%eax
movl   $0x8062e18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804f100 <fchmod@plt+0x53d0>
lea    0x0(%esi),%esi
mov    0x806aa50,%eax
test   %eax,%eax
jne    804f6f1 <fchmod@plt+0x59c1>
cmpl   $0x1,0xb4(%esp)
jbe    804f2c5 <fchmod@plt+0x5595>
mov    0xf8(%esp),%eax
mov    0xfc(%esp),%edx
mov    0xa4(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0xa0(%esp),%eax
mov    %edx,0x10(%esp)
mov    0xa4(%esp),%edx
shrd   $0xc,%edx,%eax
movzbl 0xa0(%esp),%edx
xor    %al,%al
or     %edx,%eax
mov    0xa0(%esp),%edx
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
shrd   $0x8,%ecx,%edx
and    $0xfff,%edx
and    $0xfffff000,%eax
or     %edx,%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ee40 <fchmod@plt+0x5110>
test   %eax,%eax
jns    804f0f3 <fchmod@plt+0x53c3>
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
js     804f828 <fchmod@plt+0x5af8>
mov    0x54(%esp),%eax
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     804f839 <fchmod@plt+0x5b09>
mov    0x4c(%esp),%eax
mov    0xd0(%esp),%edx
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0xcc(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80526d0 <fchmod@plt+0x89a0>
mov    %esi,(%esp)
call   8052140 <fchmod@plt+0x8410>
mov    0x806ac20,%eax
test   %eax,%eax
jle    804f392 <fchmod@plt+0x5662>
sub    $0x1,%eax
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
movl   $0x1,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049ba0 <lseek64@plt>
movl   $0x1,0x8(%esp)
movl   $0x8063fbc,0x4(%esp)
mov    %esi,(%esp)
call   8049990 <write@plt>
movl   $0x0,0x806ac20
00
mov    0x54(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x98(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8054230 <fchmod@plt+0xa500>
mov    0x806aa74,%eax
test   %eax,%eax
jne    804f897 <fchmod@plt+0x5b67>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
js     804f8fd <fchmod@plt+0x5bcd>
mov    %esi,(%esp)
call   8049cb0 <close@plt>
test   %eax,%eax
js     804f8ec <fchmod@plt+0x5bbc>
mov    0xe8(%esp),%eax
mov    0xd0(%esp),%edx
mov    %eax,0xc(%esp)
mov    0xcc(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8052920 <fchmod@plt+0x8bf0>
jmp    804f0f3 <fchmod@plt+0x53c3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa54,%ecx
test   %ecx,%ecx
je     804f44c <fchmod@plt+0x571c>
mov    0x806a984,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f9b4 <fchmod@plt+0x5c84>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
call   80546d0 <fchmod@plt+0xa9a0>
mov    0x806aa20,%edx
test   %edx,%edx
jne    804f4d7 <fchmod@plt+0x57a7>
mov    0x806a204,%ecx
mov    %ecx,%ebx
mov    %ecx,%eax
sar    $0x1f,%ebx
add    0x806b008,%eax
mov    %ebx,%edx
adc    0x806b00c,%edx
mov    %ecx,0x8(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %ebx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060ae0 <argp_parse+0x5dc0>
movl   $0x5,0x10(%esp)
movl   $0x806115a,0x8(%esp)
movl   $0x8061166,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,%ebx
call   8049ca0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8057060 <fchmod@plt+0xd330>
jmp    804ef48 <fchmod@plt+0x5218>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
jne    804f01e <fchmod@plt+0x52ee>
mov    $0x1,%eax
jmp    804f652 <fchmod@plt+0x5922>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%edx
movl   $0x5,0x8(%esp)
movl   $0x8061107,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    0x28(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    804ef48 <fchmod@plt+0x5218>
mov    0xcc(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %eax,%esi
mov    0xcc(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8049810 <readlink@plt>
test   %eax,%eax
js     804f7c8 <fchmod@plt+0x5a98>
movb   $0x0,(%esi,%eax,1)
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049b70 <symlink@plt>
test   %eax,%eax
js     804f718 <fchmod@plt+0x59e8>
mov    0x806aa28,%eax
test   %eax,%eax
jne    804f622 <fchmod@plt+0x58f2>
mov    0x806aa30,%eax
test   %eax,%eax
mov    0xb8(%esp),%eax
cmovne 0x806b034,%eax
mov    %eax,%ecx
mov    %eax,0x28(%esp)
mov    0x806aa2c,%eax
mov    %ecx,0x4(%esp)
test   %eax,%eax
mov    0xbc(%esp),%eax
cmovne 0x806b030,%eax
mov    %eax,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049b50 <lchown@plt>
test   %eax,%eax
js     804f863 <fchmod@plt+0x5b33>
mov    %esi,(%esp)
call   80496d0 <free@plt>
jmp    804f0f3 <fchmod@plt+0x53c3>
nop
call   8049720 <rmdir@plt>
test   %eax,%eax
setne  %al
jmp    804f058 <fchmod@plt+0x5328>
nop
cmpb   $0x0,0x2(%eax)
je     804ef48 <fchmod@plt+0x5218>
jmp    804ef91 <fchmod@plt+0x5261>
xor    %ax,%ax
lea    0x58(%esp),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    0x28(%esp),%eax
mov    0x54(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x98(%esp)
call   8054730 <fchmod@plt+0xaa00>
jmp    804f0f3 <fchmod@plt+0x53c3>
xchg   %ax,%ax
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ed30 <fchmod@plt+0x5000>
test   %eax,%eax
jns    804f0f3 <fchmod@plt+0x53c3>
jmp    804f17d <fchmod@plt+0x544d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    0x54(%esp),%esi
movl   $0x80612d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804ef48 <fchmod@plt+0x5218>
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ed30 <fchmod@plt+0x5000>
test   %eax,%eax
jns    804f0f3 <fchmod@plt+0x53c3>
jmp    804f245 <fchmod@plt+0x5515>
lea    0x0(%esi),%esi
mov    0x806aa6c,%eax
test   %eax,%eax
nop
jne    804f7ff <fchmod@plt+0x5acf>
mov    0x54(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8056fc0 <fchmod@plt+0xd290>
mov    %esi,(%esp)
call   80496d0 <free@plt>
jmp    804ef48 <fchmod@plt+0x5218>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xf8(%esp),%eax
mov    0xfc(%esp),%edx
mov    0xa4(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0xa0(%esp),%eax
mov    %edx,0x10(%esp)
mov    0xa4(%esp),%edx
shrd   $0xc,%edx,%eax
movzbl 0xa0(%esp),%edx
xor    %al,%al
or     %edx,%eax
mov    0xa0(%esp),%edx
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
shrd   $0x8,%ecx,%edx
and    $0xfff,%edx
and    $0xfffff000,%eax
or     %edx,%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ee40 <fchmod@plt+0x5110>
test   %eax,%eax
jns    804f0f3 <fchmod@plt+0x53c3>
jmp    804f18b <fchmod@plt+0x545b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8056d90 <fchmod@plt+0xd060>
mov    %esi,(%esp)
call   80496d0 <free@plt>
jmp    804ef48 <fchmod@plt+0x5218>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    804f90e <fchmod@plt+0x5bde>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8056ac0 <fchmod@plt+0xcd90>
jmp    804ef48 <fchmod@plt+0x5218>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049b70 <symlink@plt>
test   %eax,%eax
jns    804f5c9 <fchmod@plt+0x5899>
jmp    804f726 <fchmod@plt+0x59f6>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
jmp    804ef48 <fchmod@plt+0x5218>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    804f968 <fchmod@plt+0x5c38>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
jmp    804ef48 <fchmod@plt+0x5218>
call   8049a20 <__errno_location@plt>
cmpl   $0x1,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804f622 <fchmod@plt+0x58f2>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8056930 <fchmod@plt+0xcc00>
jmp    804f622 <fchmod@plt+0x58f2>
mov    0xe8(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xe0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80541c0 <fchmod@plt+0xa490>
mov    0xe8(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0xe0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   80541c0 <fchmod@plt+0xa490>
jmp    804f3ce <fchmod@plt+0x569e>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804f3f2 <fchmod@plt+0x56c2>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80569a0 <fchmod@plt+0xcc70>
jmp    804f3e2 <fchmod@plt+0x56b2>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    0xc0(%esp),%eax
mov    0xc4(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x40(%esp)
lea    0x40(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x44(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <__xmknod@plt>
test   %eax,%eax
js     804f7ee <fchmod@plt+0x5abe>
jmp    804f1d0 <fchmod@plt+0x54a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
mov    0x54(%esp),%eax
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %eax,(%esp)
call   8049670 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     804f846 <fchmod@plt+0x5b16>
jmp    804f313 <fchmod@plt+0x55e3>
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804ef48 <fchmod@plt+0x5218>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    804f44c <fchmod@plt+0x571c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movl   $0x4c,(%esp)
mov    0x30(%esp),%ebx
call   805f2a0 <argp_parse+0x4580>
mov    $0x12,%ecx
mov    %ebx,%esi
lea    0x4(%eax),%edi
mov    %eax,%ebp
rep movsl %ds:(%esi),%es:(%edi)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %eax,0x44(%ebp)
mov    0x40(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049890 <strcpy@plt>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80496d0 <free@plt>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%eax
mov    %eax,(%ebx)
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %eax,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%eax
cmp    %eax,(%ebx)
jge    804fa94 <fchmod@plt+0x5d64>
mov    %eax,(%ebx)
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    %eax,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
mov    0x34(%esp),%ebx
mov    0x38(%esp),%edi
mov    (%ebx),%esi
mov    %ebp,(%esp)
call   80497b0 <_IO_getc@plt>
mov    %eax,%edx
mov    %edi,%eax
movsbl %al,%eax
cmp    %eax,%edx
mov    %eax,0x8(%esp)
je     804fb3a <fchmod@plt+0x5e0a>
cmp    $0xffffffff,%edx
je     804fb49 <fchmod@plt+0x5e19>
xor    %edi,%edi
jmp    804faf7 <fchmod@plt+0x5dc7>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%eax
add    $0x1,%edi
mov    %dl,-0x1(%eax,%edi,1)
mov    %ebp,(%esp)
call   80497b0 <_IO_getc@plt>
cmp    0x8(%esp),%eax
mov    %eax,%edx
je     804fb28 <fchmod@plt+0x5df8>
cmp    $0xffffffff,%eax
je     804fb28 <fchmod@plt+0x5df8>
lea    -0x1(%esi),%eax
cmp    %edi,%eax
jg     804fad8 <fchmod@plt+0x5da8>
lea    0x2(%esi,%esi,1),%eax
mov    (%ebx),%esi
cmp    %esi,%eax
jle    804fad8 <fchmod@plt+0x5da8>
mov    %eax,(%ebx)
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    (%ebx),%esi
mov    0xc(%esp),%edx
mov    %eax,0x4(%ebx)
jmp    804fadb <fchmod@plt+0x5dab>
mov    0x4(%ebx),%eax
movb   $0x0,(%eax,%edi,1)
mov    0x4(%ebx),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%eax
cmp    $0xffffffff,%edx
movb   $0x0,(%eax)
jne    804fb2f <fchmod@plt+0x5dff>
xor    %eax,%eax
jmp    804fb32 <fchmod@plt+0x5e02>
mov    0x4(%ebx),%eax
movb   $0x0,(%eax)
xor    %eax,%eax
jmp    804fb32 <fchmod@plt+0x5e02>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804faa0 <fchmod@plt+0x5d70>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x2,(%esp)
call   8049920 <exit@plt>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
sub    $0x30,%eax
cmp    $0xdb,%eax
ja     8050338 <fchmod@plt+0x6608>
jmp    *0x8062630(,%eax,4)
nop
mov    0x806aa28,%eax
test   %eax,%eax
jne    8050362 <fchmod@plt+0x6632>
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x806b030,0x8(%esp)
movl   $0x806b034,0x4(%esp)
mov    %eax,(%esp)
call   8055280 <fchmod@plt+0xb550>
test   %eax,%eax
je     804fc55 <fchmod@plt+0x5f25>
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
movl   $0x806358b,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
call   80498b0 <error@plt>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804fc6f <fchmod@plt+0x5f3f>
mov    %eax,(%esp)
call   80496d0 <free@plt>
movl   $0x1,0x806aa30
00
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804fc90 <fchmod@plt+0x5f60>
mov    %eax,(%esp)
call   80496d0 <free@plt>
movl   $0x1,0x806aa2c
00
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
lea    0x0(%esi),%esi
add    $0x30,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa50
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
mov    0x806a9e4,%edi
test   %edi,%edi
je     804fcf6 <fchmod@plt+0x5fc6>
movl   $0x5,0x8(%esp)
movl   $0x80614ef,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x804b830,0x806a9e4
08
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806a200
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
movl   $0x1,0x806aa6c
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa70,%eax
test   %eax,%eax
je     804fd6d <fchmod@plt+0x603d>
movl   $0x5,0x8(%esp)
movl   $0x80618c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
movl   $0x1,0x806aa40
00
xor    %ebx,%ebx
movl   $0x1,0x806aa3c
00
jmp    804fc98 <fchmod@plt+0x5f68>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa74
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%esi
mov    $0x8061504,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050342 <fchmod@plt+0x6612>
mov    0x44(%esp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8049950 <strlen@plt>
cmp    $0x2,%eax
jbe    804fe05 <fchmod@plt+0x60d5>
mov    0x44(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8061509,0x4(%esp)
mov    %eax,(%esp)
call   8049750 <memcmp@plt>
cmp    $0x1,%eax
sbb    %edi,%edi
and    $0x3,%edi
mov    0x806a220,%eax
test   %eax,%eax
je     805039d <fchmod@plt+0x666d>
mov    0x44(%esp),%esi
mov    $0x806a220,%ebx
add    %edi,%esi
jmp    804fe2d <fchmod@plt+0x60fd>
nop
add    $0x8,%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805039d <fchmod@plt+0x666d>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    804fe20 <fchmod@plt+0x60f0>
test   %edi,%edi
mov    0x4(%ebx),%eax
je     805045e <fchmod@plt+0x672e>
not    %eax
and    %eax,0x806a9ec
jmp    804fc90 <fchmod@plt+0x5f60>
lea    0x0(%esi),%esi
movl   $0x1,0x806aa54
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa3c
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806aa78
jmp    804fc98 <fchmod@plt+0x5f68>
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8053d50 <fchmod@plt+0xa020>
jmp    804fc98 <fchmod@plt+0x5f68>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8060f70,0x806aff0
08
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806aa7c
jmp    804fc98 <fchmod@plt+0x5f68>
mov    0x806aa70,%eax
test   %eax,%eax
jne    80503d6 <fchmod@plt+0x66a6>
mov    0x44(%esp),%eax
movl   $0x80617fc,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     8050351 <fchmod@plt+0x6621>
mov    0x44(%esp),%eax
movl   $0x80614d8,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     805040f <fchmod@plt+0x66df>
mov    0x44(%esp),%eax
movl   $0x80614e5,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     804fd6d <fchmod@plt+0x603d>
mov    0x44(%esp),%eax
movl   $0x80614eb,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     8050469 <fchmod@plt+0x6739>
mov    0x44(%esp),%eax
movl   $0x80614dd,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     805047a <fchmod@plt+0x674a>
mov    0x44(%esp),%eax
movl   $0x80614df,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     805048b <fchmod@plt+0x675b>
mov    0x44(%esp),%eax
movl   $0x80614e3,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
je     805049c <fchmod@plt+0x676c>
mov    0x44(%esp),%eax
movl   $0x80614e9,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
test   %eax,%eax
jne    80504ad <fchmod@plt+0x677d>
movl   $0x8,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806a9fc
jmp    804fc98 <fchmod@plt+0x5f68>
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806aa0c
jmp    804fc98 <fchmod@plt+0x5f68>
mov    0x44(%esp),%eax
xor    %ebx,%ebx
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
test   %eax,%eax
mov    %eax,0x806a204
jg     804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x8(%esp)
movl   $0x80614c5,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1400,0x806a204
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa44
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x806a1fc
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
movb   $0x1,0x806a9e8
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
mov    0x44(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
test   %eax,%eax
mov    %eax,0x806a204
jle    8050420 <fchmod@plt+0x66f0>
shl    $0x9,%eax
xor    %ebx,%ebx
mov    %eax,0x806a204
jmp    804fc98 <fchmod@plt+0x5f68>
movb   $0x1,0x806b038
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
xchg   %ax,%ax
movl   $0x1,0x806aa24
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa20
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806a9f8
jmp    804fc98 <fchmod@plt+0x5f68>
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,0x806aa64
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x1,0x806aa1c
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806aa30,%esi
test   %esi,%esi
jne    8050174 <fchmod@plt+0x6444>
mov    0x806aa2c,%ebx
test   %ebx,%ebx
je     80501a8 <fchmod@plt+0x6478>
movl   $0x5,0x8(%esp)
movl   $0x8061950,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x1,0x806aa28
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806aa18
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa18
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa58
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa5c
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa60
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa40
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa68
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806a9e4,%edx
test   %edx,%edx
je     80502a6 <fchmod@plt+0x6576>
movl   $0x5,0x8(%esp)
movl   $0x80614ef,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x804eec0,0x806a9e4
08
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
nop
mov    0x806a9e4,%ecx
test   %ecx,%ecx
je     80502f6 <fchmod@plt+0x65c6>
movl   $0x5,0x8(%esp)
movl   $0x80614ef,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x804dff0,0x806a9e4
08
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
nop
movl   $0x1,0x806aa10
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa4c
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x7,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x0,0x806a9ec
00
jmp    804fc90 <fchmod@plt+0x5f60>
movl   $0x4,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x8061980,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x8(%esp)
movl   $0x80619b0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x44(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   805a6f0 <argp_error>
jmp    804fc90 <fchmod@plt+0x5f60>
movl   $0x5,0x8(%esp)
movl   $0x80618c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804fee5 <fchmod@plt+0x61b5>
movl   $0x3,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x8(%esp)
movl   $0x80614c5,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806a204,%eax
jmp    80500d9 <fchmod@plt+0x63a9>
or     %eax,0x806a9ec
jmp    804fc90 <fchmod@plt+0x5f60>
movl   $0x1,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x6,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x7,0x806aa70
00
xor    %ebx,%ebx
jmp    804fc98 <fchmod@plt+0x5f68>
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x80618e8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x44(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    804fc98 <fchmod@plt+0x5f68>
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%ebx
lea    0x2c(%esp),%eax
mov    0x44(%esp),%esi
movl   $0x0,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x806a248,(%esp)
movl   $0x8060fa0,0x806aff0
08
call   805ad20 <argp_parse>
test   %eax,%eax
jne    80515a9 <fchmod@plt+0x7879>
mov    0x806a9e4,%eax
test   %eax,%eax
je     8050a40 <fchmod@plt+0x6d10>
cmp    $0x804b830,%eax
je     8050a57 <fchmod@plt+0x6d27>
cmp    $0x804dff0,%eax
je     8050c18 <fchmod@plt+0x6ee8>
mov    0x2c(%esp),%eax
lea    -0x1(%ebx),%edx
cmp    %eax,%edx
jg     8050950 <fchmod@plt+0x6c20>
cmp    %eax,%ebx
jle    8050a28 <fchmod@plt+0x6cf8>
mov    0x806aa70,%edx
test   %edx,%edx
jne    8050992 <fchmod@plt+0x6c62>
mov    0x806aa40,%eax
test   %eax,%eax
jne    80509d3 <fchmod@plt+0x6ca3>
mov    0x806aa3c,%eax
test   %eax,%eax
jne    80508f8 <fchmod@plt+0x6bc8>
mov    0x806aa60,%eax
test   %eax,%eax
jne    80508a0 <fchmod@plt+0x6b70>
mov    0x806aa68,%eax
test   %eax,%eax
jne    8050848 <fchmod@plt+0x6b18>
mov    0x806aa44,%eax
test   %eax,%eax
jne    80507f0 <fchmod@plt+0x6ac0>
mov    0x806aa64,%eax
test   %eax,%eax
je     805061c <fchmod@plt+0x68ec>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x8061627,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
mov    0x806aa18,%edi
test   %edi,%edi
jne    8050740 <fchmod@plt+0x6a10>
cmpb   $0x0,0x806a9e8
jne    80506e8 <fchmod@plt+0x69b8>
mov    0x2c(%esp),%eax
mov    (%esi,%eax,4),%eax
mov    %eax,0x806a9f4
mov    0x806a9fc,%ecx
test   %ecx,%ecx
je     80506ae <fchmod@plt+0x697e>
mov    0x806a9e4,%eax
cmp    $0x804b830,%eax
je     8050694 <fchmod@plt+0x6964>
cmp    $0x804dff0,%eax
je     8050694 <fchmod@plt+0x6964>
movl   $0x5,0x8(%esp)
movl   $0x8061b20,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806a9fc,%eax
mov    %eax,(%esp)
call   8052c00 <fchmod@plt+0x8ed0>
test   %eax,%eax
mov    %eax,0x806b02c
js     8050e28 <fchmod@plt+0x70f8>
mov    0x806aa30,%edx
test   %edx,%edx
jne    80506c1 <fchmod@plt+0x6991>
mov    0x806aa2c,%eax
test   %eax,%eax
je     80506c8 <fchmod@plt+0x6998>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   80497d0 <geteuid@plt>
test   %eax,%eax
je     80506c1 <fchmod@plt+0x6991>
movl   $0x1,0x806aa28
00
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x806155a,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050637 <fchmod@plt+0x6907>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x8061662,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa18,%ebx
movl   $0x2,0x806ae58
00
test   %ebx,%ebx
je     805062a <fchmod@plt+0x68fa>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x806167a,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    805062a <fchmod@plt+0x68fa>
nop
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x806154e,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    80505c5 <fchmod@plt+0x6895>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x8061579,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    80505b8 <fchmod@plt+0x6888>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x80615d7,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    80505ab <fchmod@plt+0x687b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x806160d,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    805059e <fchmod@plt+0x686e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80615bb,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa70,%edx
test   %edx,%edx
je     8050584 <fchmod@plt+0x6854>
movl   $0x5,0x8(%esp)
movl   $0x8061ad8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa40,%eax
test   %eax,%eax
je     8050591 <fchmod@plt+0x6861>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061653,0x10(%esp)
movl   $0x80615f7,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050591 <fchmod@plt+0x6861>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806163e,0x4(%esp)
jmp    8050960 <fchmod@plt+0x6c30>
lea    0x0(%esi),%esi
mov    0x806aa60,%eax
test   %eax,%eax
je     8050fe0 <fchmod@plt+0x72b0>
movl   $0x804b830,0x806a9e4
08
mov    0x806aa50,%edi
movl   $0x0,0x806b02c
00
test   %edi,%edi
jne    8050f88 <fchmod@plt+0x7258>
mov    0x806aa74,%ecx
test   %ecx,%ecx
jne    8050f30 <fchmod@plt+0x7200>
cmpl   $0x8060fa0,0x806aff0
08
je     8050ad7 <fchmod@plt+0x6da7>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061527,0x10(%esp)
movl   $0x8061540,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
mov    0x806aa44,%edx
test   %edx,%edx
jne    8050ed8 <fchmod@plt+0x71a8>
mov    0x806aa78,%eax
test   %eax,%eax
je     8050b3c <fchmod@plt+0x6e0c>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061527,0x10(%esp)
movl   $0x8061557,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
cmpb   $0x0,0x806a9e8
je     8050b94 <fchmod@plt+0x6e64>
mov    0x806aa6c,%eax
test   %eax,%eax
jne    8051510 <fchmod@plt+0x77e0>
mov    0x806aa68,%eax
test   %eax,%eax
jne    8051460 <fchmod@plt+0x7730>
mov    0x806aa28,%eax
test   %eax,%eax
jne    8051408 <fchmod@plt+0x76d8>
mov    0x806aa30,%eax
test   %eax,%eax
jne    8050e80 <fchmod@plt+0x7150>
mov    0x806aa2c,%eax
test   %eax,%eax
jne    8050e80 <fchmod@plt+0x7150>
mov    0x806aa4c,%edi
test   %edi,%edi
jne    80514b8 <fchmod@plt+0x7788>
mov    0x806a9fc,%ecx
test   %ecx,%ecx
je     8050bde <fchmod@plt+0x6eae>
mov    0x806aa7c,%edx
xor    %eax,%eax
test   %edx,%edx
je     8050be3 <fchmod@plt+0x6eb3>
movl   $0x5,0x8(%esp)
movl   $0x8061a38,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa7c,%eax
cmpl   $0x4,0x806aa70
je     8051030 <fchmod@plt+0x7300>
mov    0x2c(%esp),%edx
sub    %edx,%ebx
test   %eax,%eax
lea    (%esi,%edx,4),%edx
mov    %ebx,0x806afec
mov    %edx,0x806afe8
je     8050643 <fchmod@plt+0x6913>
mov    %eax,0x806a9fc
jmp    805064d <fchmod@plt+0x691d>
nop
cmp    %ebx,0x2c(%esp)
je     8050c52 <fchmod@plt+0x6f22>
movl   $0x5,0x8(%esp)
movl   $0x80615bb,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa6c,%eax
movl   $0x1,0x806b02c
00
test   %eax,%eax
jne    8051098 <fchmod@plt+0x7368>
mov    0x806aa68,%eax
test   %eax,%eax
jne    8051040 <fchmod@plt+0x7310>
mov    0x806aa60,%eax
test   %eax,%eax
jne    80511f8 <fchmod@plt+0x74c8>
mov    0x806aa5c,%edi
test   %edi,%edi
jne    80511a0 <fchmod@plt+0x7470>
mov    0x806aa50,%esi
test   %esi,%esi
jne    8051148 <fchmod@plt+0x7418>
mov    0x806aa24,%ebx
test   %ebx,%ebx
jne    80510f0 <fchmod@plt+0x73c0>
mov    0x806aa4c,%ecx
test   %ecx,%ecx
jne    80513b0 <fchmod@plt+0x7680>
mov    0x806aa28,%edx
test   %edx,%edx
jne    8051358 <fchmod@plt+0x7628>
mov    0x806aa40,%eax
test   %eax,%eax
jne    8051300 <fchmod@plt+0x75d0>
mov    0x806aa3c,%eax
test   %eax,%eax
jne    80512a8 <fchmod@plt+0x7578>
cmpb   $0x0,0x806a9e8
jne    8051250 <fchmod@plt+0x7520>
mov    0x806aa44,%eax
test   %eax,%eax
je     8050d06 <fchmod@plt+0x6fd6>
mov    0x806a9fc,%eax
test   %eax,%eax
je     8051563 <fchmod@plt+0x7833>
mov    0x806aa64,%eax
test   %eax,%eax
je     8050d5d <fchmod@plt+0x702d>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x8061627,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
mov    0x806aa7c,%edi
test   %edi,%edi
je     8050db5 <fchmod@plt+0x7085>
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x806163b,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
mov    0x806a9fc,%esi
test   %esi,%esi
je     8050dff <fchmod@plt+0x70cf>
mov    0x806aa78,%ebx
xor    %eax,%eax
test   %ebx,%ebx
je     8050e04 <fchmod@plt+0x70d4>
movl   $0x5,0x8(%esp)
movl   $0x8061aac,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806aa78,%eax
mov    0x806aa70,%ecx
test   %ecx,%ecx
jne    8050e18 <fchmod@plt+0x70e8>
movl   $0x1,0x806aa70
00
test   %eax,%eax
jne    8050c0d <fchmod@plt+0x6edd>
jmp    8050643 <fchmod@plt+0x6913>
lea    0x0(%esi),%esi
mov    0x806a9fc,%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x806168f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    80506ae <fchmod@plt+0x697e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806155a,0x10(%esp)
movl   $0x8061596,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050b86 <fchmod@plt+0x6e56>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061527,0x10(%esp)
movl   $0x806154e,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050ae5 <fchmod@plt+0x6db5>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061527,0x10(%esp)
movl   $0x8061538,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050a7d <fchmod@plt+0x6d4d>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8061527,0x10(%esp)
movl   $0x8061531,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050a6f <fchmod@plt+0x6d3f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    0x806ae74,%edi
movl   $0x80619d8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806a9e4,%eax
jmp    8050549 <fchmod@plt+0x6819>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806aa48
00
jmp    8050bf0 <fchmod@plt+0x6ec0>
nop
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x8061579,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050c76 <fchmod@plt+0x6f46>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x8061566,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050c69 <fchmod@plt+0x6f39>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x80615ee,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050cad <fchmod@plt+0x6f7d>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x8061531,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050c9f <fchmod@plt+0x6f6f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x80615de,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050c91 <fchmod@plt+0x6f61>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x80615d7,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050c83 <fchmod@plt+0x6f53>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x806155a,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050cf0 <fchmod@plt+0x6fc0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x806160d,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050ce3 <fchmod@plt+0x6fb3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x80615f7,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050cd6 <fchmod@plt+0x6fa6>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x8061582,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050cc9 <fchmod@plt+0x6f99>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80615ce,0x10(%esp)
movl   $0x806159e,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050cbb <fchmod@plt+0x6f8b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806155a,0x10(%esp)
movl   $0x8061582,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050b6c <fchmod@plt+0x6e3c>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806155a,0x10(%esp)
movl   $0x8061579,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050b5f <fchmod@plt+0x6e2f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806155a,0x10(%esp)
movl   $0x806159e,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050b94 <fchmod@plt+0x6e64>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806150d,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806155a,0x10(%esp)
movl   $0x8061566,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
jmp    8050b52 <fchmod@plt+0x6e22>
mov    0x806aa78,%eax
test   %eax,%eax
jne    8050d06 <fchmod@plt+0x6fd6>
movl   $0x5,0x8(%esp)
movl   $0x8061a60,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    8050d06 <fchmod@plt+0x6fd6>
movl   $0x2,(%esp)
call   8049920 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806a9e4,%eax
cmp    $0x804b830,%eax
je     8051658 <fchmod@plt+0x7928>
mov    $0x200,%ebx
cmp    $0x804dff0,%eax
cmove  0x806a204,%ebx
mov    $0x200,%esi
mov    %esi,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %ebx,(%esp)
mov    %esi,0x806b01c
movl   $0x0,0x806b014
00
movl   $0x0,0x806aff8
00
movl   $0x0,0x806affc
00
mov    %eax,0x806b024
mov    %eax,0x806b000
call   805f2a0 <argp_parse+0x4580>
movl   $0x0,0x806b018
00
movl   $0x0,0x806b008
00
movl   $0x0,0x806b00c
00
mov    %eax,0x806b010
mov    %eax,0x806b020
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x806a204,%esi
cmp    $0x1ff,%esi
jle    8051678 <fchmod@plt+0x7948>
add    %esi,%esi
mov    $0x200,%ebx
jmp    80515eb <fchmod@plt+0x78bb>
lea    0x0(%esi),%esi
mov    $0x200,%ebx
mov    $0x400,%esi
jmp    80515eb <fchmod@plt+0x78bb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x1,%edx
jmp    805169c <fchmod@plt+0x796c>
xchg   %ax,%ax
test   %edx,%edx
jle    80516b1 <fchmod@plt+0x7981>
mov    %eax,%ebx
sub    $0x1,%edx
and    $0x7,%ebx
sar    $0x3,%eax
add    $0x30,%ebx
test   %eax,%eax
mov    %bl,(%ecx,%edx,1)
jne    8051698 <fchmod@plt+0x7968>
test   %edx,%edx
jle    80516c3 <fchmod@plt+0x7993>
lea    0x0(%esi),%esi
sub    $0x1,%edx
test   %edx,%edx
movb   $0x30,(%ecx,%edx,1)
jne    80516b8 <fchmod@plt+0x7988>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %edx,%ebx
sub    $0x18,%esp
movl   $0x9b,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x806ab00,(%esp)
call   8049a50 <strncpy@plt>
movl   $0x101,0x8(%esp)
movl   $0x8063806,0x4(%esp)
movl   $0x806ab00,(%esp)
movb   $0x0,0x806ab9b
call   8049610 <__strcat_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x101,0xc(%esp)
movl   $0x64,0x8(%esp)
movl   $0x806ab00,(%esp)
call   8049bd0 <__strncat_chk@plt>
movb   $0x0,0x806abff
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%eax
lea    0x94(%eax),%ebx
cmp    %ebx,%eax
lea    0x200(%eax),%esi
jae    8051765 <fchmod@plt+0x7a35>
add    $0x1,%eax
movzbl -0x1(%eax),%ecx
add    %ecx,%edx
cmp    %ebx,%eax
jne    8051758 <fchmod@plt+0x7a28>
lea    0x8(%eax),%ecx
add    $0x100,%edx
cmp    %ecx,%esi
jbe    8051785 <fchmod@plt+0x7a55>
lea    0x0(%esi),%esi
add    $0x1,%ecx
movzbl -0x1(%ecx),%eax
add    %eax,%edx
cmp    %ecx,%esi
jne    8051778 <fchmod@plt+0x7a48>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
mov    $0x80,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x250(%esp),%ebx
lea    0x2c(%esp),%esi
mov    %esi,%edi
mov    0x40(%ebx),%ebp
rep stos %eax,%es:(%edi)
mov    %ebp,(%esp)
call   8049950 <strlen@plt>
cmp    $0x64,%eax
mov    %eax,%ecx
jle    8051a38 <fchmod@plt+0x7d08>
mov    $0x9c,%eax
cmp    $0x9b,%ecx
lea    -0x1(%ecx),%edi
cmovbe %edi,%eax
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2f,0x0(%ebp,%eax,1)
je     8051a28 <fchmod@plt+0x7cf8>
sub    $0x1,%eax
jne    80517e8 <fchmod@plt+0x7ab8>
mov    $0x1,%edi
movl   $0x0,0x18(%esp)
mov    %eax,0x8(%esp)
lea    0x185(%esp),%eax
add    %ebp,%edi
movl   $0xa7,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   8049a90 <__strncpy_chk@plt>
mov    0x1c(%esp),%ecx
sub    0x18(%esp),%ecx
movl   $0x200,0xc(%esp)
mov    %edi,0x4(%esp)
sub    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %esi,(%esp)
call   8049a90 <__strncpy_chk@plt>
mov    0xc(%ebx),%eax
lea    0x90(%esp),%ecx
mov    $0x8,%edx
and    $0xfff,%eax
call   8051690 <fchmod@plt+0x7960>
mov    0x10(%ebx),%eax
lea    0x98(%esp),%ecx
mov    $0x8,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0x14(%ebx),%eax
lea    0xa0(%esp),%ecx
mov    $0x8,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0x20(%ebx),%eax
lea    0xa8(%esp),%ecx
mov    $0xc,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0x1c(%ebx),%eax
lea    0xb4(%esp),%ecx
mov    $0xc,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0xc(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8051af0 <fchmod@plt+0x7dc0>
jbe    8051958 <fchmod@plt+0x7c28>
cmp    $0x8000,%eax
je     8051aa8 <fchmod@plt+0x7d78>
cmp    $0xa000,%eax
je     8051a68 <fchmod@plt+0x7d38>
cmp    $0x6000,%eax
je     8051a58 <fchmod@plt+0x7d28>
cmpl   $0x6,0x806aa70
je     8051980 <fchmod@plt+0x7c50>
mov    %esi,(%esp)
call   8051740 <fchmod@plt+0x7a10>
lea    0xc0(%esp),%ecx
mov    $0x8,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0x254(%esp),%eax
movl   $0x200,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x22c(%esp),%eax
xor    %gs:0x14,%eax
jne    8051b1a <fchmod@plt+0x7dea>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x1000,%eax
je     8051b00 <fchmod@plt+0x7dd0>
cmp    $0x2000,%eax
jne    80518f0 <fchmod@plt+0x7bc0>
cmpl   $0x6,0x806aa70
movb   $0x33,0xc8(%esp)
jne    80518fd <fchmod@plt+0x7bcd>
nop
mov    $0x72,%eax
mov    $0x3030,%edx
mov    %ax,0x131(%esp)
mov    0x10(%ebx),%eax
movl   $0x61747375,0x12d(%esp)
61
mov    %dx,0x133(%esp)
mov    %eax,(%esp)
call   8054ae0 <fchmod@plt+0xadb0>
test   %eax,%eax
je     80519cf <fchmod@plt+0x7c9f>
mov    %eax,0x4(%esp)
lea    0x135(%esp),%eax
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   8049ac0 <__strcpy_chk@plt>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8054ca0 <fchmod@plt+0xaf70>
test   %eax,%eax
je     80519f9 <fchmod@plt+0x7cc9>
mov    %eax,0x4(%esp)
lea    0x155(%esp),%eax
movl   $0xd7,0x8(%esp)
mov    %eax,(%esp)
call   8049ac0 <__strcpy_chk@plt>
mov    0x30(%ebx),%eax
lea    0x175(%esp),%ecx
mov    $0x8,%edx
call   8051690 <fchmod@plt+0x7960>
mov    0x34(%ebx),%eax
lea    0x17d(%esp),%ecx
mov    $0x8,%edx
call   8051690 <fchmod@plt+0x7960>
jmp    80518fd <fchmod@plt+0x7bcd>
xchg   %ax,%ax
mov    %eax,0x18(%esp)
lea    0x1(%eax),%edi
jmp    8051805 <fchmod@plt+0x7ad5>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x200,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8049a90 <__strncpy_chk@plt>
jmp    805184d <fchmod@plt+0x7b1d>
lea    0x0(%esi),%esi
movb   $0x34,0xc8(%esp)
jmp    80518f0 <fchmod@plt+0x7bc0>
lea    0x0(%esi),%esi
movl   $0x64,0x8(%esp)
mov    0x44(%ebx),%eax
movb   $0x32,0xc8(%esp)
mov    %eax,0x4(%esp)
lea    0xc9(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <strncpy@plt>
lea    0xa8(%esp),%ecx
mov    $0xc,%edx
xor    %eax,%eax
call   8051690 <fchmod@plt+0x7960>
jmp    80518f0 <fchmod@plt+0x7bc0>
xchg   %ax,%ax
mov    0x44(%ebx),%eax
test   %eax,%eax
je     8051b0d <fchmod@plt+0x7ddd>
mov    %eax,0x4(%esp)
lea    0xc9(%esp),%eax
movl   $0x64,0x8(%esp)
mov    %eax,(%esp)
call   8049a50 <strncpy@plt>
lea    0xa8(%esp),%ecx
mov    $0xc,%edx
xor    %eax,%eax
movb   $0x31,0xc8(%esp)
call   8051690 <fchmod@plt+0x7960>
jmp    80518f0 <fchmod@plt+0x7bc0>
lea    0x0(%esi),%esi
movb   $0x35,0xc8(%esp)
jmp    80518f0 <fchmod@plt+0x7bc0>
lea    0x0(%esi),%esi
movb   $0x36,0xc8(%esp)
jmp    80518f0 <fchmod@plt+0x7bc0>
movb   $0x30,0xc8(%esp)
jmp    80518f0 <fchmod@plt+0x7bc0>
call   80497a0 <__stack_chk_fail@plt>
nop
mov    0x8(%esp),%edx
xor    %eax,%eax
mov    0x4(%esp),%ecx
shr    $0x2,%edx
jmp    8051b3a <fchmod@plt+0x7e0a>
nop
add    $0x1,%eax
cmpl   $0x0,-0x4(%ecx,%eax,4)
jne    8051b48 <fchmod@plt+0x7e18>
cmp    %edx,%eax
jne    8051b30 <fchmod@plt+0x7e00>
mov    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x254(%esp),%eax
lea    0x2c(%esp),%esi
movl   $0x200,0x8(%esp)
mov    0x250(%esp),%ebx
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80538a0 <fchmod@plt+0x9b70>
mov    %esi,%eax
lea    0x22c(%esp),%edx
jmp    8051bb0 <fchmod@plt+0x7e80>
lea    0x0(%esi),%esi
cmp    %edx,%eax
je     8051f18 <fchmod@plt+0x81e8>
add    $0x4,%eax
mov    -0x4(%eax),%edi
test   %edi,%edi
je     8051ba8 <fchmod@plt+0x7e78>
movl   $0x0,0x1c(%esp)
xor    %edi,%edi
lea    0xc0(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x3c(%ebx)
mov    %eax,%ebp
mov    %esi,(%esp)
call   8051740 <fchmod@plt+0x7a10>
cmp    %eax,%ebp
je     8051c58 <fchmod@plt+0x7f28>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     8051de0 <fchmod@plt+0x80b0>
lea    0x2d(%esp),%eax
add    $0x1,%edi
movl   $0x1ff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80496c0 <memmove@plt>
mov    0x254(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x22b(%esp),%eax
mov    %eax,(%esp)
call   80538a0 <fchmod@plt+0x9b70>
movl   $0x1,0x1c(%esp)
jmp    8051bc4 <fchmod@plt+0x7e94>
lea    0x0(%esi),%esi
cmpl   $0x6,0x806aa70
je     8051e19 <fchmod@plt+0x80e9>
movl   $0x64,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x806ab00,(%esp)
call   8049a50 <strncpy@plt>
movb   $0x0,0x806ab64
movl   $0x806ab00,0x40(%ebx)
lea    0x90(%esp),%eax
movl   $0x1,0x18(%ebx)
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
and    $0xfff,%eax
cmpl   $0x6,0x806aa70
mov    %eax,0xc(%ebx)
jne    8051cd0 <fchmod@plt+0x7fa0>
mov    0x806aa10,%edx
test   %edx,%edx
je     8051f24 <fchmod@plt+0x81f4>
lea    0x98(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x10(%ebx)
cmpl   $0x6,0x806aa70
jne    8051d08 <fchmod@plt+0x7fd8>
mov    0x806aa10,%eax
test   %eax,%eax
je     8051f45 <fchmod@plt+0x8215>
lea    0xa0(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x14(%ebx)
lea    0xa8(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x20(%ebx)
lea    0xb4(%esp),%eax
mov    %edx,0x24(%ebx)
movl   $0x3,0x8(%esp)
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x1c(%ebx)
lea    0x175(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %eax,0x30(%ebx)
lea    0x17d(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
cmpb   $0x36,0xc8(%esp)
movl   $0x0,0x44(%ebx)
mov    %eax,0x34(%ebx)
ja     8051f09 <fchmod@plt+0x81d9>
movzbl 0xc8(%esp),%eax
jmp    *0x80629c0(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80629a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    8051c00 <fchmod@plt+0x7ed0>
cmpb   $0x0,0x185(%esp)
jne    8051f66 <fchmod@plt+0x8236>
movl   $0x64,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x806ab00,(%esp)
call   8049a50 <strncpy@plt>
movb   $0x0,0x806ab64
movl   $0x806ab00,0x40(%ebx)
jmp    8051c8b <fchmod@plt+0x7f5b>
orl    $0x4000,0xc(%ebx)
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8051e6c <fchmod@plt+0x813c>
mov    %edi,(%esp)
call   804a640 <fchmod@plt+0x910>
mov    0x22c(%esp),%eax
xor    %gs:0x14,%eax
jne    8051f79 <fchmod@plt+0x8249>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
orl    $0x1000,0xc(%ebx)
lea    0xc9(%esp),%eax
movl   $0x64,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x806aa80,(%esp)
call   8049a50 <strncpy@plt>
movb   $0x0,0x806aae4
movl   $0x806aa80,0x44(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0x24(%ebx)
jmp    8051e60 <fchmod@plt+0x8130>
orl    $0x6000,0xc(%ebx)
jmp    8051e92 <fchmod@plt+0x8162>
orl    $0x2000,0xc(%ebx)
jmp    8051e92 <fchmod@plt+0x8162>
orl    $0xa000,0xc(%ebx)
jmp    8051e92 <fchmod@plt+0x8162>
orl    $0x8000,0xc(%ebx)
jmp    8051e92 <fchmod@plt+0x8162>
mov    0x40(%ebx),%esi
mov    %esi,(%esp)
call   8049950 <strlen@plt>
cmpb   $0x2f,-0x1(%esi,%eax,1)
je     8051e52 <fchmod@plt+0x8122>
orl    $0x8000,0xc(%ebx)
jmp    8051e60 <fchmod@plt+0x8130>
lea    0x0(%esi),%esi
movl   $0x806114f,0x40(%ebx)
jmp    8051e6c <fchmod@plt+0x813c>
lea    0x135(%esp),%eax
mov    %eax,(%esp)
call   8054bb0 <fchmod@plt+0xae80>
test   %eax,%eax
je     8051cd0 <fchmod@plt+0x7fa0>
mov    (%eax),%eax
mov    %eax,0x10(%ebx)
jmp    8051cf2 <fchmod@plt+0x7fc2>
lea    0x155(%esp),%eax
mov    %eax,(%esp)
call   8054d70 <fchmod@plt+0xb040>
test   %eax,%eax
je     8051d08 <fchmod@plt+0x7fd8>
mov    (%eax),%eax
mov    %eax,0x14(%ebx)
jmp    8051d2a <fchmod@plt+0x7ffa>
mov    %esi,%edx
lea    0x185(%esp),%eax
call   80516d0 <fchmod@plt+0x79a0>
jmp    8051e46 <fchmod@plt+0x8116>
call   80497a0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x3,0x8(%esp)
movl   $0x8,0x4(%esp)
lea    0x94(%esi),%eax
mov    %eax,(%esp)
call   804aa80 <fchmod@plt+0xd50>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8051740 <fchmod@plt+0x7a10>
xor    %edx,%edx
cmp    %ebx,%eax
jne    8051fdf <fchmod@plt+0x82af>
add    $0x101,%esi
mov    $0x80614dd,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
setb   %dl
seta   %al
sub    %edx,%eax
movsbl %al,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
not    %edx
add    $0x2,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
xor    %edx,%edx
cmp    $0x64,%eax
jle    8052012 <fchmod@plt+0x82e2>
cmpl   $0x6,0x806aa70
mov    $0x1,%dl
je     8052020 <fchmod@plt+0x82f0>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x100,%eax
jg     8052012 <fchmod@plt+0x82e2>
mov    $0x9c,%dl
cmp    $0x9b,%eax
lea    -0x1(%eax),%ecx
cmovbe %ecx,%edx
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2f,(%ebx,%edx,1)
je     8052050 <fchmod@plt+0x8320>
sub    $0x1,%edx
jne    8052038 <fchmod@plt+0x8308>
mov    $0x1,%edx
jmp    8052012 <fchmod@plt+0x82e2>
lea    0x0(%esi),%esi
test   %edx,%edx
je     8052043 <fchmod@plt+0x8313>
sub    %edx,%eax
xor    %edx,%edx
cmp    $0x65,%eax
setg   %dl
jmp    8052012 <fchmod@plt+0x82e2>
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060d90 <argp_parse+0x6070>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    (%esi),%edx
mov    0x4(%esi),%ecx
xor    0x4(%ebx),%ecx
xor    (%ebx),%edx
or     %edx,%ecx
je     80520b0 <fchmod@plt+0x8380>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%ebx),%edx
cmp    %edx,0x8(%esi)
jne    80520aa <fchmod@plt+0x837a>
mov    0xc(%ebx),%eax
cmp    %eax,0xc(%esi)
sete   %al
jmp    80520aa <fchmod@plt+0x837a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x806b024,%ebx
cmp    $0x0,%ecx
mov    %ebx,0x806b000
jl     80520ec <fchmod@plt+0x83bc>
jle    8052128 <fchmod@plt+0x83f8>
mov    $0x200,%edx
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049680 <read@plt>
mov    $0x1,%edx
test   %eax,%eax
mov    %eax,0x806b014
je     805211a <fchmod@plt+0x83ea>
xor    %edx,%edx
add    %eax,0x806aff8
adc    %edx,0x806affc
xor    %edx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x200,%edx
jbe    80520ec <fchmod@plt+0x83bc>
jmp    80520e7 <fchmod@plt+0x83b7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x806aa38,%eax
test   %eax,%eax
jne    8052230 <fchmod@plt+0x8500>
mov    0x806aa34,%ebp
mov    0x806b010,%ebx
test   %ebp,%ebp
jne    8052348 <fchmod@plt+0x8618>
mov    0x806aa24,%ecx
mov    0x806b018,%eax
test   %ecx,%ecx
je     80522b8 <fchmod@plt+0x8588>
mov    %eax,%ebp
xor    %ecx,%ecx
mov    %eax,0x24(%esp)
and    $0x1ff,%eax
mov    %eax,0x28(%esp)
mov    0x806ac20,%eax
shr    $0x9,%ebp
test   %eax,%eax
setne  %cl
test   %ebp,%ebp
mov    %eax,0x20(%esp)
jle    80521e8 <fchmod@plt+0x84b8>
xor    %edi,%edi
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ecx
je     80523b0 <fchmod@plt+0x8680>
cmp    $0x2,%ecx
jne    8052378 <fchmod@plt+0x8648>
lea    0x200(%ebx),%esi
jmp    80521d0 <fchmod@plt+0x84a0>
lea    0x0(%esi),%esi
cmp    %esi,%ebx
je     8052430 <fchmod@plt+0x8700>
add    $0x1,%ebx
cmpb   $0x0,-0x1(%ebx)
je     80521c8 <fchmod@plt+0x8498>
add    $0x200,%edx
mov    %esi,%ebx
add    $0x1,%edi
cmp    %edi,%ebp
jne    80521a8 <fchmod@plt+0x8478>
cmp    $0x2,%ecx
je     8052468 <fchmod@plt+0x8738>
mov    0x20(%esp),%eax
mov    %eax,0x806ac20
mov    0x28(%esp),%eax
test   %eax,%eax
je     80522d0 <fchmod@plt+0x85a0>
mov    0x806ac20,%eax
test   %eax,%eax
jne    805248f <fchmod@plt+0x875f>
mov    0x28(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049990 <write@plt>
jmp    80522d0 <fchmod@plt+0x85a0>
mov    0x806b018,%esi
mov    0x806b010,%ebx
shr    $0x2,%esi
test   %esi,%esi
je     8052273 <fchmod@plt+0x8543>
mov    %esi,%eax
mov    %edx,%edi
nop
movzbl (%ebx),%edx
add    $0x4,%ebx
movzbl -0x2(%ebx),%ecx
mov    %dl,-0x2(%ebx)
movzbl -0x3(%ebx),%edx
mov    %cl,-0x4(%ebx)
movzbl -0x1(%ebx),%ecx
mov    %dl,-0x1(%ebx)
mov    %cl,-0x3(%ebx)
sub    $0x1,%eax
jne    8052248 <fchmod@plt+0x8518>
mov    0x806b010,%ebx
mov    %edi,%edx
mov    0x806aa34,%edi
test   %edi,%edi
je     8052168 <fchmod@plt+0x8438>
lea    (%esi,%esi,1),%ecx
mov    %ecx,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x20(%esp)
call   804b800 <fchmod@plt+0x1ad0>
mov    0x806aa24,%ecx
mov    0x806b010,%ebx
mov    0x20(%esp),%edx
mov    0x806b018,%eax
test   %ecx,%ecx
jne    805217b <fchmod@plt+0x844b>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049990 <write@plt>
mov    %eax,0x24(%esp)
mov    0x24(%esp),%eax
cmp    0x806b018,%eax
je     805231a <fchmod@plt+0x85ea>
movl   $0x5,0x8(%esp)
movl   $0x8062a9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x806b018,%eax
xor    %edx,%edx
add    %eax,0x806b008
mov    0x806b010,%eax
adc    %edx,0x806b00c
movl   $0x0,0x806b018
00
mov    %eax,0x806b020
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806b018,%eax
mov    %edx,0x20(%esp)
shr    %eax
mov    %eax,0x4(%esp)
mov    0x806b010,%eax
mov    %eax,(%esp)
call   804b800 <fchmod@plt+0x1ad0>
mov    0x806b010,%ebx
mov    0x20(%esp),%edx
jmp    8052168 <fchmod@plt+0x8438>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x200(%ebx),%eax
mov    %ebx,%ecx
jmp    8052390 <fchmod@plt+0x8660>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
je     8052418 <fchmod@plt+0x86e8>
add    $0x1,%ecx
cmpb   $0x0,-0x1(%ecx)
je     8052388 <fchmod@plt+0x8658>
mov    $0x2,%ecx
mov    $0x200,%edx
mov    %ebx,0x1c(%esp)
mov    %eax,%ebx
jmp    80521e1 <fchmod@plt+0x84b1>
xchg   %ax,%ax
lea    0x200(%ebx),%esi
mov    %ebx,%eax
jmp    80523c4 <fchmod@plt+0x8694>
lea    0x0(%esi),%esi
cmp    %esi,%eax
je     8052408 <fchmod@plt+0x86d8>
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
je     80523c0 <fchmod@plt+0x8690>
mov    0x20(%esp),%eax
movl   $0x1,0xc(%esp)
cltd
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049ba0 <lseek64@plt>
mov    $0x2,%ecx
mov    $0x200,%edx
mov    %ebx,0x1c(%esp)
jmp    80521df <fchmod@plt+0x84af>
lea    0x0(%esi,%eiz,1),%esi
addl   $0x200,0x20(%esp)
jmp    80521df <fchmod@plt+0x84af>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%ebx
mov    $0x1,%ecx
movl   $0x200,0x20(%esp)
jmp    80523a3 <fchmod@plt+0x8673>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049990 <write@plt>
mov    $0x1,%ecx
mov    0x2c(%esp),%edx
movl   $0x200,0x20(%esp)
jmp    80521df <fchmod@plt+0x84af>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049990 <write@plt>
movl   $0x0,0x806ac20
00
jmp    80521fa <fchmod@plt+0x84ca>
mov    %eax,0x4(%esp)
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
movl   $0x1,0xc(%esp)
mov    %eax,(%esp)
call   8049ba0 <lseek64@plt>
movl   $0x0,0x806ac20
00
jmp    8052213 <fchmod@plt+0x84e3>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%edi
mov    0x40(%esp),%ebx
mov    0x48(%esp),%esi
cmp    $0x0,%edi
jle    8052570 <fchmod@plt+0x8840>
mov    %ebx,%ebp
xchg   %ax,%ax
mov    $0x200,%eax
xor    %ebx,%ebx
sub    0x806b018,%eax
test   %eax,%eax
mov    %eax,%ecx
je     8052560 <fchmod@plt+0x8830>
cmp    $0x0,%edi
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
jl     805250e <fchmod@plt+0x87de>
jg     8052506 <fchmod@plt+0x87d6>
cmp    %eax,%esi
jbe    805250e <fchmod@plt+0x87de>
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
mov    0x10(%esp),%ecx
mov    0x806b020,%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   80496e0 <memcpy@plt>
mov    0x1c(%esp),%edx
add    %edx,0x806b020
add    %edx,0x806b018
add    %edx,%ebp
sub    0x10(%esp),%esi
sbb    0x14(%esp),%edi
cmp    $0x0,%edi
jl     8052551 <fchmod@plt+0x8821>
jg     80524e0 <fchmod@plt+0x87b0>
cmp    $0x0,%esi
ja     80524e0 <fchmod@plt+0x87b0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x8410>
jmp    8052545 <fchmod@plt+0x8815>
xchg   %ax,%ax
jl     8052551 <fchmod@plt+0x8821>
cmp    $0x0,%esi
jbe    8052551 <fchmod@plt+0x8821>
jmp    80524dc <fchmod@plt+0x87ac>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
test   %edx,%edx
jle    80525b3 <fchmod@plt+0x8883>
lea    0x0(%esi),%esi
movzbl (%eax),%ebx
add    $0x4,%eax
movzbl -0x2(%eax),%ecx
mov    %bl,-0x2(%eax)
movzbl -0x3(%eax),%ebx
mov    %cl,-0x4(%eax)
movzbl -0x1(%eax),%ecx
mov    %bl,-0x1(%eax)
mov    %cl,-0x3(%eax)
sub    $0x1,%edx
jne    8052590 <fchmod@plt+0x8860>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%eax
mov    0x54(%esp),%ebp
mov    0x50(%esp),%ecx
mov    %eax,0x1c(%esp)
mov    0x5c(%esp),%eax
sar    $0x1f,%ebp
mov    %ebp,%ebx
mov    %ebp,%edi
and    $0x1ff,%ebx
sar    $0x1f,%edi
mov    %eax,0x2c(%esp)
mov    %ebx,%eax
add    0x50(%esp),%eax
adc    0x54(%esp),%edx
xor    %ebp,%ecx
shrd   $0x9,%edx,%eax
mov    %eax,0x20(%esp)
mov    %ecx,%eax
sar    $0x9,%edx
sub    %ebp,%eax
mov    %eax,%ecx
mov    %edx,%ebx
and    $0x1ff,%ecx
mov    %edi,%edx
xor    %ebp,%ecx
mov    %ecx,%eax
sub    %ebp,%eax
sbb    %edi,%edx
cmp    $0x0,%ebx
mov    %eax,0x24(%esp)
mov    %edx,0x28(%esp)
jle    80526b8 <fchmod@plt+0x8988>
mov    0x2c(%esp),%ebp
xor    %esi,%esi
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x200,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x806ac40,(%esp)
mov    %eax,0x4(%esp)
call   *%ebp
mov    0x20(%esp),%ecx
add    $0x1,%esi
adc    $0x0,%edi
mov    %edi,%eax
xor    %ebx,%eax
xor    %esi,%ecx
or     %ecx,%eax
jne    8052640 <fchmod@plt+0x8910>
mov    0x28(%esp),%eax
or     0x24(%esp),%eax
jne    8052688 <fchmod@plt+0x8958>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x24(%esp),%eax
movl   $0x806ac40,0x50(%esp)
mov    %eax,0x58(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x5c(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x54(%esp)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    *%eax
lea    0x0(%esi),%esi
jl     8052675 <fchmod@plt+0x8945>
cmpl   $0x0,0x20(%esp)
ja     8052631 <fchmod@plt+0x8901>
jmp    8052675 <fchmod@plt+0x8945>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x7c(%esp),%edx
mov    0x80(%esp),%edi
mov    0x78(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edi,0x2c(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x4c(%esp)
xor    %edi,%edi
cmp    $0x0,%edx
mov    %eax,0x20(%esp)
jle    80528ac <fchmod@plt+0x8b7c>
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x806b014,%eax
mov    %esi,0x18(%esp)
mov    %edi,0x1c(%esp)
lea    0x0(%esi),%esi
test   %eax,%eax
mov    %eax,%esi
je     80527e8 <fchmod@plt+0x8ab8>
xor    %edi,%edi
cmp    0x1c(%esp),%edi
jl     8052742 <fchmod@plt+0x8a12>
jg     805273a <fchmod@plt+0x8a0a>
cmp    0x18(%esp),%esi
jbe    8052742 <fchmod@plt+0x8a12>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x806aa48,%eax
test   %eax,%eax
jne    80527b0 <fchmod@plt+0x8a80>
mov    0x806b000,%ebp
mov    0x74(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80524c0 <fchmod@plt+0x8790>
mov    0x806b014,%eax
sub    %esi,0x18(%esp)
sbb    %edi,0x1c(%esp)
add    %esi,0x806b000
sub    %esi,%eax
cmpl   $0x0,0x1c(%esp)
mov    %eax,0x806b014
jl     8052793 <fchmod@plt+0x8a63>
jg     8052720 <fchmod@plt+0x89f0>
cmpl   $0x0,0x18(%esp)
ja     8052720 <fchmod@plt+0x89f0>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
xchg   %ax,%ax
jne    805291a <fchmod@plt+0x8bea>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x0,%edi
jl     805274b <fchmod@plt+0x8a1b>
jle    8052810 <fchmod@plt+0x8ae0>
mov    0x806b000,%ebp
mov    0x806b028,%edx
mov    %ebp,%eax
lea    0x0(%ebp,%esi,1),%ebx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%ecx
add    $0x1,%eax
add    %ecx,%edx
cmp    %ebx,%eax
mov    %edx,0x806b028
jne    80527d0 <fchmod@plt+0x8aa0>
jmp    8052751 <fchmod@plt+0x8a21>
nop
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    0x70(%esp),%eax
call   80520d0 <fchmod@plt+0x83a0>
cmp    $0x0,%eax
jne    805281b <fchmod@plt+0x8aeb>
mov    0x806b014,%esi
jmp    805272a <fchmod@plt+0x89fa>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x0,%esi
jbe    805274b <fchmod@plt+0x8a1b>
jmp    80527b7 <fchmod@plt+0x8a87>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
jle    80528c5 <fchmod@plt+0x8b95>
lea    0x37(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   805eac0 <argp_parse+0x3da0>
movl   $0x5,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8062b18,0x8(%esp)
movl   $0x8062b48,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ca0 <dcngettext@plt>
mov    %ebx,0x10(%esp)
mov    0x2c(%esp),%ebx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x74(%esp),%eax
movl   $0x80524c0,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   80525c0 <fchmod@plt+0x8890>
jmp    8052793 <fchmod@plt+0x8a63>
jl     8052793 <fchmod@plt+0x8a63>
cmpl   $0x0,0x20(%esp)
jbe    8052793 <fchmod@plt+0x8a63>
lea    0x0(%esi),%esi
jmp    8052708 <fchmod@plt+0x89d8>
movl   $0x5,0x8(%esp)
movl   $0x8062b78,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x2c(%esp),%ebx
mov    0x20(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ebx,0x14(%esp)
mov    0x24(%esp),%ebx
sub    %esi,%ecx
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
sbb    %edi,%ebx
mov    %ebx,0x10(%esp)
call   80498b0 <error@plt>
jmp    805288b <fchmod@plt+0x8b5b>
call   80497a0 <__stack_chk_fail@plt>
nop
push   %edi
push   %esi
push   %ebx
add    $0xffffff80,%esp
mov    0x90(%esp),%ebx
lea    0x20(%esp),%eax
mov    0x94(%esp),%esi
mov    0x98(%esp),%edi
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   *0x806aff0
test   %eax,%eax
js     8052a28 <fchmod@plt+0x8cf8>
mov    0x50(%esp),%ecx
mov    0x4c(%esp),%edx
cmp    %edi,%ecx
jl     8052966 <fchmod@plt+0x8c36>
jg     80529b8 <fchmod@plt+0x8c88>
cmp    %esi,%edx
ja     80529b8 <fchmod@plt+0x8c88>
mov    0x9c(%esp),%eax
cmp    %eax,0x68(%esp)
je     80529ab <fchmod@plt+0x8c7b>
movl   $0x5,0x8(%esp)
movl   $0x8062c00,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
sub    $0xffffff80,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edx,%eax
sub    %esi,%eax
movl   $0x5,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8062bb0,0x8(%esp)
movl   $0x8062bd8,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   8049ca0 <dcngettext@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
sub    %esi,%edx
sbb    %edi,%ecx
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   80498b0 <error@plt>
sub    $0xffffff80,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8057060 <fchmod@plt+0xd330>
jmp    80529ab <fchmod@plt+0x8c7b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805c3f0 <argp_parse+0x16d0>
test   %eax,%eax
mov    %eax,%ebx
je     8052ac8 <fchmod@plt+0x8d98>
cmpb   $0x2e,(%ebx)
je     8052a90 <fchmod@plt+0x8d60>
xor    %eax,%eax
testb  $0x2,0x806a9ec
jne    8052aa8 <fchmod@plt+0x8d78>
mov    %eax,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %ebx,(%esp)
call   8054e60 <fchmod@plt+0xb130>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80496d0 <free@plt>
nop
cmpb   $0x0,0x1(%ebx)
je     8052a82 <fchmod@plt+0x8d52>
xor    %eax,%eax
testb  $0x2,0x806a9ec
je     8052a66 <fchmod@plt+0x8d36>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8062c28,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
jmp    8052a66 <fchmod@plt+0x8d36>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8062aa8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    8052a56 <fchmod@plt+0x8d26>
jmp    8052b10 <fchmod@plt+0x8de0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x3c,%esp
mov    0x806ae44,%ecx
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
test   %ecx,%ecx
je     8052b58 <fchmod@plt+0x8e28>
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %ecx,(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   805cb90 <argp_parse+0x1e70>
test   %eax,%eax
je     8052b58 <fchmod@plt+0x8e28>
mov    0x10(%eax),%eax
add    $0x3c,%esp
ret
xor    %eax,%eax
add    $0x3c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x14,(%esp)
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
call   805f2a0 <argp_parse+0x4580>
mov    %esi,(%eax)
mov    %eax,%ebx
mov    %edi,0x4(%eax)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x40(%esp),%eax
mov    %eax,0xc(%ebx)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x10(%ebx)
mov    0x806ae44,%eax
test   %eax,%eax
je     8052bc0 <fchmod@plt+0x8e90>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805d230 <argp_parse+0x2510>
test   %eax,%eax
je     8052bf5 <fchmod@plt+0x8ec5>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x0,0x10(%esp)
movl   $0x8052090,0xc(%esp)
movl   $0x8052060,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   805ce00 <argp_parse+0x20e0>
test   %eax,%eax
mov    %eax,0x806ae44
jne    8052ba7 <fchmod@plt+0x8e77>
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
cmpl   $0x804b830,0x806a9e4
08
mov    0x20(%esp),%ebx
je     8052d18 <fchmod@plt+0x8fe8>
mov    0x806aa44,%eax
test   %eax,%eax
jne    8052c68 <fchmod@plt+0x8f38>
cmpb   $0x0,0x806b038
jne    8052c4b <fchmod@plt+0x8f1b>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,0x806b03c
je     8052c4b <fchmod@plt+0x8f1b>
cmp    %eax,%ebx
jb     8052cd0 <fchmod@plt+0x8fa0>
movl   $0x1b6,0x8(%esp)
movl   $0x241,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <open64@plt>
add    $0x18,%esp
pop    %ebx
ret
cmpb   $0x0,0x806b038
jne    8052cac <fchmod@plt+0x8f7c>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,0x806b03c
je     8052cac <fchmod@plt+0x8f7c>
cmp    %eax,%ebx
jae    8052cac <fchmod@plt+0x8f7c>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049a30 <memchr@plt>
test   %eax,%eax
je     8052d9d <fchmod@plt+0x906d>
mov    %ebx,(%esp)
movl   $0x1b6,0x8(%esp)
movl   $0x2,0x4(%esp)
call   8049670 <open64@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049a30 <memchr@plt>
test   %eax,%eax
jne    8052c4b <fchmod@plt+0x8f1b>
mov    0x806a9f8,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x241,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80558e0 <fchmod@plt+0xbbb0>
jmp    8052c63 <fchmod@plt+0x8f33>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x806b038
jne    8052d80 <fchmod@plt+0x9050>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,0x806b03c
je     8052d80 <fchmod@plt+0x9050>
cmp    %eax,%ebx
jae    8052d80 <fchmod@plt+0x9050>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049a30 <memchr@plt>
test   %eax,%eax
jne    8052d80 <fchmod@plt+0x9050>
mov    0x806a9f8,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80558e0 <fchmod@plt+0xbbb0>
jmp    8052c63 <fchmod@plt+0x8f33>
xchg   %ax,%ax
mov    %ebx,(%esp)
movl   $0x1b6,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8049670 <open64@plt>
add    $0x18,%esp
pop    %ebx
ret
mov    0x806a9f8,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80558e0 <fchmod@plt+0xbbb0>
jmp    8052c63 <fchmod@plt+0x8f33>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    $0x7,%edx
mov    0x30(%esp),%eax
mov    %dx,0x18(%esp)
lea    0x18(%esp),%edx
movl   $0x1,0x1c(%esp)
mov    %edx,0x8(%esp)
cmp    $0x3fffffff,%eax
movl   $0x40086d01,0x4(%esp)
jg     8052e10 <fchmod@plt+0x90e0>
mov    %eax,(%esp)
call   8049840 <ioctl@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8056410 <fchmod@plt+0xc6e0>
add    $0x2c,%esp
ret
jmp    8052e30 <fchmod@plt+0x9100>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x28(%esp),%ebp
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
call   804fa50 <fchmod@plt+0x5d20>
movl   $0x8061027,0x4(%esp)
movl   $0x80610b9,(%esp)
call   8049850 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80530c1 <fchmod@plt+0x9391>
movl   $0x80610c2,0x4(%esp)
movl   $0x80610b9,(%esp)
call   8049850 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     80530e5 <fchmod@plt+0x93b5>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8052dd0 <fchmod@plt+0x90a0>
mov    0x50(%esp),%eax
cmpl   $0x3fffffff,0x50(%esp)
jle    8053020 <fchmod@plt+0x92f0>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8055f70 <fchmod@plt+0xc240>
mov    0x806a8a4,%eax
lea    0x1(%eax),%edx
mov    0x806aa08,%eax
mov    %edx,0x806a8a4
test   %eax,%eax
je     8053030 <fchmod@plt+0x9300>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <fputs@plt>
mov    %esi,(%esp)
call   80497f0 <fflush_unlocked@plt>
mov    0x806a9fc,%eax
mov    0x50(%esp),%edx
test   %eax,%eax
jne    8052efd <fchmod@plt+0x91cd>
jmp    8052fac <fchmod@plt+0x927c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     8052f17 <fchmod@plt+0x91e7>
mov    0x4(%ebx),%edx
cmp    0x8(%ebx),%edx
jae    805311f <fchmod@plt+0x93ef>
lea    0x1(%edx),%eax
mov    %eax,0x4(%ebx)
movzbl (%edx),%eax
cmp    $0xa,%eax
jne    8052ef8 <fchmod@plt+0x91c8>
mov    0x806a9fc,%eax
mov    %eax,(%esp)
call   8052c00 <fchmod@plt+0x8ed0>
cmp    $0xffffffff,%eax
mov    %eax,%edx
je     8053068 <fchmod@plt+0x9338>
cmp    0x50(%esp),%edx
mov    %edx,0x1c(%esp)
je     8052f7d <fchmod@plt+0x924d>
movl   $0x5,0x8(%esp)
movl   $0x8062ccc,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    0x50(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %ebx,(%esp)
call   8049710 <fclose@plt>
mov    %esi,(%esp)
call   8049710 <fclose@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jns    8052f2f <fchmod@plt+0x91ff>
test   %edx,%edx
js     8052fe6 <fchmod@plt+0x92b6>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804fb60 <fchmod@plt+0x5e30>
test   %eax,%eax
mov    %eax,%edi
je     8053113 <fchmod@plt+0x93e3>
cmpb   $0x0,(%eax)
je     8053113 <fchmod@plt+0x93e3>
mov    %eax,(%esp)
call   8052c00 <fchmod@plt+0x8ed0>
cmp    $0xffffffff,%eax
mov    %eax,%edx
jne    8052fa8 <fchmod@plt+0x9278>
mov    %edi,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
movl   $0x5,0x8(%esp)
movl   $0x8062c9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %esi,(%esp)
call   80497f0 <fflush_unlocked@plt>
jmp    8052fb0 <fchmod@plt+0x9280>
mov    %eax,(%esp)
call   8049cb0 <close@plt>
jmp    8052eb2 <fchmod@plt+0x9182>
lea    0x0(%esi),%esi
mov    0x806aa04,%eax
test   %eax,%eax
je     8053082 <fchmod@plt+0x9352>
mov    0x806aa00,%ecx
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8062ac1,0x8(%esp)
mov    %ecx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    8052ed9 <fchmod@plt+0x91a9>
mov    %eax,0x1c(%esp)
mov    0x806a9fc,%eax
mov    %eax,(%esp)
call   8056ae0 <fchmod@plt+0xcdb0>
mov    0x1c(%esp),%edx
jmp    8052f2f <fchmod@plt+0x91ff>
mov    0x806a9fc,%edx
movl   $0x5,0x8(%esp)
test   %edx,%edx
je     8053109 <fchmod@plt+0x93d9>
movl   $0x8062c50,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    8052ed9 <fchmod@plt+0x91a9>
call   8049a20 <__errno_location@plt>
movl   $0x80610b9,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    8052e69 <fchmod@plt+0x9139>
call   8049a20 <__errno_location@plt>
movl   $0x80610b9,0x8(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    8052e87 <fchmod@plt+0x9157>
movl   $0x8062c88,0x4(%esp)
jmp    805309c <fchmod@plt+0x936c>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
mov    %ebx,(%esp)
call   8049b10 <__uflow@plt>
jmp    8052f12 <fchmod@plt+0x91e2>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806b018,%eax
mov    0x20(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x806b010,%eax
cmp    $0x3fffffff,%ebx
mov    %eax,0x4(%esp)
jle    8053238 <fchmod@plt+0x9508>
lea    -0x40000000(%ebx),%eax
mov    %eax,(%esp)
call   80560a0 <fchmod@plt+0xc370>
cmp    0x806b018,%eax
je     805320d <fchmod@plt+0x94dd>
cmpb   $0x0,0x806a9f2
je     8053260 <fchmod@plt+0x9530>
test   %eax,%eax
js     8053248 <fchmod@plt+0x9518>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8052e30 <fchmod@plt+0x9100>
mov    0xc(%esp),%eax
test   %eax,%eax
je     80532c8 <fchmod@plt+0x9598>
mov    0x806b018,%esi
sub    %eax,%esi
mov    0x806b010,%eax
cmp    $0x3fffffff,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
jg     80532a8 <fchmod@plt+0x9578>
mov    %ebx,(%esp)
call   805bad0 <argp_parse+0xdb0>
cmp    %eax,%esi
je     8053299 <fchmod@plt+0x9569>
movl   $0x5,0x8(%esp)
movl   $0x8062a9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x806b018,%eax
xor    %edx,%edx
add    %eax,0x806b008
mov    0x806b010,%eax
adc    %edx,0x806b00c
movl   $0x0,0x806b018
00
mov    %eax,0x806b020
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   805bad0 <argp_parse+0xdb0>
jmp    8053165 <fchmod@plt+0x9435>
lea    0x0(%esi),%esi
call   8049a20 <__errno_location@plt>
mov    (%eax),%eax
lea    -0x5(%eax),%edx
cmp    $0x1,%edx
jbe    80532c0 <fchmod@plt+0x9590>
cmp    $0x1c,%eax
je     80532c0 <fchmod@plt+0x9590>
lea    0x0(%esi,%eiz,1),%esi
call   8049a20 <__errno_location@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062a9c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049790 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    0x806b018,%eax
jmp    805320d <fchmod@plt+0x94dd>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x40000000,%ebx
mov    %ebx,(%esp)
call   80560a0 <fchmod@plt+0xc370>
jmp    80531c7 <fchmod@plt+0x9497>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8052e30 <fchmod@plt+0x9100>
mov    0x806b018,%esi
jmp    80531a6 <fchmod@plt+0x9476>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%edi
mov    0x40(%esp),%ebx
mov    0x48(%esp),%esi
cmp    $0x0,%edi
jle    8053390 <fchmod@plt+0x9660>
mov    %ebx,%ebp
xchg   %ax,%ax
mov    0x806a204,%eax
xor    %ebx,%ebx
sub    0x806b018,%eax
test   %eax,%eax
mov    %eax,%ecx
je     8053380 <fchmod@plt+0x9650>
cmp    $0x0,%edi
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
jl     805332e <fchmod@plt+0x95fe>
jg     8053326 <fchmod@plt+0x95f6>
cmp    %eax,%esi
jbe    805332e <fchmod@plt+0x95fe>
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
mov    0x10(%esp),%ecx
mov    0x806b020,%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   80496e0 <memcpy@plt>
mov    0x1c(%esp),%edx
add    %edx,0x806b020
add    %edx,0x806b018
add    %edx,%ebp
sub    0x10(%esp),%esi
sbb    0x14(%esp),%edi
cmp    $0x0,%edi
jl     8053371 <fchmod@plt+0x9641>
jg     8053300 <fchmod@plt+0x95d0>
cmp    $0x0,%esi
ja     8053300 <fchmod@plt+0x95d0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8053130 <fchmod@plt+0x9400>
jmp    8053365 <fchmod@plt+0x9635>
xchg   %ax,%ax
jl     8053371 <fchmod@plt+0x9641>
cmp    $0x0,%esi
jbe    8053371 <fchmod@plt+0x9641>
jmp    80532fc <fchmod@plt+0x95cc>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x7c(%esp),%edx
mov    0x80(%esp),%edi
mov    0x78(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edi,0x2c(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x4c(%esp)
xor    %edi,%edi
cmp    $0x0,%edx
mov    %eax,0x20(%esp)
jle    80535ba <fchmod@plt+0x988a>
mov    0x806b014,%esi
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8053464 <fchmod@plt+0x9734>
lea    0x0(%esi),%esi
xor    %edi,%edi
cmp    0x1c(%esp),%edi
jl     8053410 <fchmod@plt+0x96e0>
jg     8053408 <fchmod@plt+0x96d8>
cmp    0x18(%esp),%esi
jbe    8053410 <fchmod@plt+0x96e0>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x806aa48,%eax
test   %eax,%eax
jne    80534c0 <fchmod@plt+0x9790>
mov    0x806b000,%ebp
mov    0x74(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    0x806b014,%eax
sub    %esi,0x18(%esp)
sbb    %edi,0x1c(%esp)
add    %esi,0x806b000
sub    %esi,%eax
cmpl   $0x0,0x1c(%esp)
mov    %eax,0x806b014
jl     80534a7 <fchmod@plt+0x9777>
jle    80534a0 <fchmod@plt+0x9770>
mov    %eax,%esi
test   %esi,%esi
jne    80533f8 <fchmod@plt+0x96c8>
mov    0x1c(%esp),%ebp
mov    0x18(%esp),%edi
cmp    $0x0,%ebp
mov    %ebp,%ecx
mov    %edi,%edx
jl     8053482 <fchmod@plt+0x9752>
jle    8053503 <fchmod@plt+0x97d3>
mov    $0x200,%edx
xor    %ecx,%ecx
mov    0x70(%esp),%eax
call   80520d0 <fchmod@plt+0x83a0>
cmp    $0x0,%eax
jne    8053521 <fchmod@plt+0x97f1>
mov    0x806b014,%esi
jmp    80533f8 <fchmod@plt+0x96c8>
nop
cmpl   $0x0,0x18(%esp)
ja     805345e <fchmod@plt+0x972e>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805362e <fchmod@plt+0x98fe>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x0,%edi
jl     805341d <fchmod@plt+0x96ed>
jle    80534f8 <fchmod@plt+0x97c8>
mov    0x806b000,%ebp
mov    0x806b028,%edx
mov    %ebp,%eax
lea    0x0(%ebp,%esi,1),%ebx
lea    0x0(%esi),%esi
movzbl (%eax),%ecx
add    $0x1,%eax
add    %ecx,%edx
cmp    %ebx,%eax
mov    %edx,0x806b028
jne    80534e0 <fchmod@plt+0x97b0>
jmp    8053423 <fchmod@plt+0x96f3>
nop
cmp    $0x0,%esi
jbe    805341d <fchmod@plt+0x96ed>
jmp    80534cb <fchmod@plt+0x979b>
cmp    $0x200,%edi
ja     805347b <fchmod@plt+0x974b>
mov    0x70(%esp),%eax
call   80520d0 <fchmod@plt+0x83a0>
cmp    $0x0,%eax
je     8053494 <fchmod@plt+0x9764>
jle    80535d5 <fchmod@plt+0x98a5>
mov    0x18(%esp),%edi
lea    0x37(%esp),%eax
mov    0x1c(%esp),%ebp
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %edi,0xc(%esp)
movl   $0x5,0x10(%esp)
movl   $0x8062b18,0x8(%esp)
movl   $0x8062b48,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ca0 <dcngettext@plt>
mov    0x2c(%esp),%edi
mov    %ebx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x74(%esp),%eax
mov    0x1c(%esp),%edx
movl   $0x80532e0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x8890>
jmp    80534a7 <fchmod@plt+0x9777>
jl     80534a7 <fchmod@plt+0x9777>
cmpl   $0x0,0x20(%esp)
jbe    80534a7 <fchmod@plt+0x9777>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    80533d8 <fchmod@plt+0x96a8>
movl   $0x5,0x8(%esp)
movl   $0x8062b78,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x2c(%esp),%edi
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
sub    0x18(%esp),%ecx
sbb    0x1c(%esp),%ebx
mov    %edi,0x14(%esp)
mov    %ecx,0xc(%esp)
mov    %ebx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80498b0 <error@plt>
jmp    8053591 <fchmod@plt+0x9861>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x806aa14,%ecx
movl   $0x0,0xc(%esp)
mov    %ecx,%eax
cltd
idivl  0x806a204
mov    0x30(%esp),%eax
mov    %eax,(%esp)
sub    %edx,%ecx
mov    %edx,%ebx
mov    %ecx,%edi
mov    %ecx,%esi
sar    $0x1f,%edi
mov    %ecx,0x4(%esp)
mov    %edi,0x8(%esp)
call   8049ba0 <lseek64@plt>
test   %edx,%edx
js     8053720 <fchmod@plt+0x99f0>
test   %ebx,%ebx
jle    80536ee <fchmod@plt+0x99be>
mov    %ebx,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049680 <read@plt>
mov    0x30(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049ba0 <lseek64@plt>
test   %edx,%edx
js     8053760 <fchmod@plt+0x9a30>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
sar    $0x1f,%ebx
mov    %ebx,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80532e0 <fchmod@plt+0x95b0>
mov    %ebp,(%esp)
call   80496d0 <free@plt>
mov    0x806b024,%eax
movl   $0x0,0x806b014
00
movl   $0x0,0x806aff8
00
movl   $0x0,0x806affc
00
mov    %eax,0x806b000
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8062ac8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebp
call   8049a20 <__errno_location@plt>
mov    %ebp,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    8053685 <fchmod@plt+0x9955>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8062ac8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    80536cb <fchmod@plt+0x999b>
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x806a204,%ecx
mov    0x806b024,%eax
cmp    %ecx,%edx
mov    %ecx,%esi
cmovle %edx,%esi
cmp    $0x3fffffff,%ebx
mov    %eax,0x806b000
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
jle    8053840 <fchmod@plt+0x9b10>
lea    -0x40000000(%ebx),%eax
mov    %eax,(%esp)
call   8055fb0 <fchmod@plt+0xc280>
test   %eax,%eax
mov    %eax,0x806b014
jne    8053827 <fchmod@plt+0x9af7>
cmpb   $0x0,0x806a9f3
jne    8053850 <fchmod@plt+0x9b20>
movl   $0x5,0x8(%esp)
movl   $0x8062ade,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x806b014,%eax
xor    %edx,%edx
add    %eax,0x806aff8
adc    %edx,0x806affc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
jmp    80537dc <fchmod@plt+0x9aac>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8052e30 <fchmod@plt+0x9100>
mov    0x806b024,%eax
cmp    $0x3fffffff,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
jle    8053890 <fchmod@plt+0x9b60>
sub    $0x40000000,%ebx
mov    %ebx,(%esp)
call   8055fb0 <fchmod@plt+0xc280>
test   %eax,%eax
mov    %eax,0x806b014
jne    8053827 <fchmod@plt+0x9af7>
jmp    80537ee <fchmod@plt+0x9abe>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
jmp    805387b <fchmod@plt+0x9b4b>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%edx
mov    0x48(%esp),%eax
mov    0x40(%esp),%ebx
cmp    $0x0,%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jle    8053950 <fchmod@plt+0x9c20>
mov    0x806b014,%esi
mov    %ebx,%ebp
test   %esi,%esi
je     8053928 <fchmod@plt+0x9bf8>
xor    %edi,%edi
cmp    0x1c(%esp),%edi
jl     80538e8 <fchmod@plt+0x9bb8>
jg     80538e0 <fchmod@plt+0x9bb0>
cmp    0x18(%esp),%esi
jbe    80538e8 <fchmod@plt+0x9bb8>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x806b000,%eax
mov    %ebp,(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <memcpy@plt>
mov    0x806b014,%eax
add    %esi,0x806b000
sub    %esi,%eax
sub    %esi,0x18(%esp)
sbb    %edi,0x1c(%esp)
cmpl   $0x0,0x1c(%esp)
mov    %eax,0x806b014
jl     8053947 <fchmod@plt+0x9c17>
jle    8053940 <fchmod@plt+0x9c10>
mov    %eax,%esi
test   %esi,%esi
jne    80538d0 <fchmod@plt+0x9ba0>
mov    0x806a204,%edx
mov    0x44(%esp),%eax
call   80537a0 <fchmod@plt+0x9a70>
mov    0x806b014,%esi
jmp    80538d0 <fchmod@plt+0x9ba0>
nop
cmpl   $0x0,0x18(%esp)
ja     8053922 <fchmod@plt+0x9bf2>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
jl     8053947 <fchmod@plt+0x9c17>
cmpl   $0x0,0x18(%esp)
jbe    8053947 <fchmod@plt+0x9c17>
jmp    80538c4 <fchmod@plt+0x9b94>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%edx
mov    0x34(%esp),%eax
cmp    $0x0,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
jle    8053a70 <fchmod@plt+0x9d40>
mov    0x806b014,%edi
mov    0x30(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8053a58 <fchmod@plt+0x9d28>
mov    0x4(%esp),%ebx
xor    %edx,%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
cmp    %ebx,%edx
jl     80539c4 <fchmod@plt+0x9c94>
jg     80539b5 <fchmod@plt+0x9c85>
mov    (%esp),%eax
cmp    %eax,0x8(%esp)
jbe    80539c4 <fchmod@plt+0x9c94>
mov    (%esp),%eax
mov    0x4(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    0x806aa48,%edx
test   %edx,%edx
je     8053a50 <fchmod@plt+0x9d20>
mov    0x806aa1c,%eax
test   %eax,%eax
je     8053a50 <fchmod@plt+0x9d20>
cmpl   $0x0,0xc(%esp)
jl     8053a50 <fchmod@plt+0x9d20>
jle    8053a48 <fchmod@plt+0x9d18>
mov    0x806b000,%esi
mov    0x8(%esp),%ebx
mov    0x806b028,%ecx
mov    %esi,%eax
add    %esi,%ebx
movzbl (%eax),%edx
add    $0x1,%eax
add    %edx,%ecx
cmp    %ebx,%eax
mov    %ecx,0x806b028
jne    80539f8 <fchmod@plt+0x9cc8>
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    %eax,%esi
sub    %eax,%edi
sub    %eax,(%esp)
sbb    %edx,0x4(%esp)
cmpl   $0x0,0x4(%esp)
mov    %esi,0x806b000
mov    %edi,0x806b014
jl     8053a40 <fchmod@plt+0x9d10>
jg     8053990 <fchmod@plt+0x9c60>
cmpl   $0x0,(%esp)
ja     8053990 <fchmod@plt+0x9c60>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x0,0x8(%esp)
ja     80539e4 <fchmod@plt+0x9cb4>
nop
mov    0x806b000,%esi
jmp    8053a0a <fchmod@plt+0x9cda>
mov    0x806a204,%edx
mov    %ebp,%eax
call   80537a0 <fchmod@plt+0x9a70>
mov    0x806b014,%edi
jmp    8053998 <fchmod@plt+0x9c68>
jl     8053a40 <fchmod@plt+0x9d10>
cmpl   $0x0,(%esp)
jbe    8053a40 <fchmod@plt+0x9d10>
jmp    805397f <fchmod@plt+0x9c4f>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%edx
mov    0x48(%esp),%eax
cmp    $0x0,%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jle    8053b83 <fchmod@plt+0x9e53>
mov    0x806b014,%esi
test   %esi,%esi
je     8053b18 <fchmod@plt+0x9de8>
lea    0x0(%esi),%esi
xor    %edi,%edi
cmp    0x1c(%esp),%edi
jl     8053ac8 <fchmod@plt+0x9d98>
jg     8053ac0 <fchmod@plt+0x9d90>
cmp    0x18(%esp),%esi
jbe    8053ac8 <fchmod@plt+0x9d98>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x806aa48,%eax
test   %eax,%eax
jne    8053b40 <fchmod@plt+0x9e10>
mov    0x806b000,%ebp
mov    0x44(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80524c0 <fchmod@plt+0x8790>
mov    0x806b014,%eax
sub    %esi,0x18(%esp)
sbb    %edi,0x1c(%esp)
add    %esi,0x806b000
sub    %esi,%eax
cmpl   $0x0,0x1c(%esp)
mov    %eax,0x806b014
jl     8053b37 <fchmod@plt+0x9e07>
jle    8053b30 <fchmod@plt+0x9e00>
mov    %eax,%esi
test   %esi,%esi
jne    8053ab0 <fchmod@plt+0x9d80>
mov    0x806a204,%edx
mov    0x40(%esp),%eax
call   80537a0 <fchmod@plt+0x9a70>
mov    0x806b014,%esi
jmp    8053ab0 <fchmod@plt+0x9d80>
nop
cmpl   $0x0,0x18(%esp)
ja     8053b12 <fchmod@plt+0x9de2>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x0,%edi
jl     8053ad1 <fchmod@plt+0x9da1>
jle    8053b78 <fchmod@plt+0x9e48>
mov    0x806b000,%ebp
mov    0x806b028,%edx
mov    %ebp,%eax
lea    0x0(%ebp,%esi,1),%ebx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%ecx
add    $0x1,%eax
add    %ecx,%edx
cmp    %ebx,%eax
mov    %edx,0x806b028
jne    8053b60 <fchmod@plt+0x9e30>
jmp    8053ad7 <fchmod@plt+0x9da7>
nop
cmp    $0x0,%esi
jbe    8053ad1 <fchmod@plt+0x9da1>
jmp    8053b47 <fchmod@plt+0x9e17>
jl     8053b37 <fchmod@plt+0x9e07>
cmpl   $0x0,0x18(%esp)
lea    0x0(%esi),%esi
jbe    8053b37 <fchmod@plt+0x9e07>
jmp    8053aa0 <fchmod@plt+0x9d70>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806b014,%edx
mov    0x48(%esp),%esi
mov    0x44(%esp),%ebx
cmp    %esi,%edx
jae    8053d10 <fchmod@plt+0x9fe0>
lea    -0x40000000(%ebx),%eax
mov    %eax,0x18(%esp)
jmp    8053c4b <fchmod@plt+0x9f1b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8055fb0 <fchmod@plt+0xc280>
mov    %eax,%ebp
test   %ebp,%ebp
jne    8053c1e <fchmod@plt+0x9eee>
cmpb   $0x0,0x806a9f3
je     8053d38 <fchmod@plt+0xa008>
mov    %ebx,(%esp)
call   8052e30 <fchmod@plt+0x9100>
mov    0x806a204,%eax
cmp    $0x3fffffff,%ebx
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
jle    8053cb8 <fchmod@plt+0x9f88>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8055fb0 <fchmod@plt+0xc280>
mov    %eax,%ebp
test   %ebp,%ebp
js     8053cca <fchmod@plt+0x9f9a>
mov    %ebp,%eax
cltd
add    %ebp,0x806aff8
adc    %edx,0x806affc
mov    0x806b014,%edx
add    %ebp,%edx
cmp    %esi,%edx
mov    %edx,0x806b014
jae    8053d10 <fchmod@plt+0x9fe0>
mov    0x806b000,%edi
mov    0x806b024,%eax
mov    0x806b01c,%ecx
add    %edx,%edi
mov    %edi,%ebp
sub    %eax,%ebp
cmp    %ecx,%ebp
jae    8053c90 <fchmod@plt+0x9f60>
mov    0x806a204,%eax
cmp    $0x3fffffff,%ebx
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
jg     8053bd0 <fchmod@plt+0x9ea0>
mov    %ebx,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
mov    %eax,%ebp
jmp    8053bde <fchmod@plt+0x9eae>
xchg   %ax,%ax
shr    %ecx
mov    %ecx,%ebp
mov    %ecx,0x8(%esp)
lea    (%eax,%ecx,1),%ecx
neg    %ebp
mov    %ecx,0x4(%esp)
add    %ebp,%edi
mov    %eax,(%esp)
call   80496c0 <memmove@plt>
add    %ebp,0x806b000
jmp    8053c66 <fchmod@plt+0x9f36>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
mov    %eax,%ebp
test   %ebp,%ebp
jns    8053c26 <fchmod@plt+0x9ef6>
movl   $0x5,0x8(%esp)
movl   $0x8062af4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x1c(%esp)
call   8049a20 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    8053c26 <fchmod@plt+0x9ef6>
xchg   %ax,%ax
mov    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x806b000,%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80496e0 <memcpy@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x806b014,%eax
cmp    %esi,%eax
jae    8053d10 <fchmod@plt+0x9fe0>
mov    %eax,%esi
jmp    8053d12 <fchmod@plt+0x9fe2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
movzbl (%esi),%eax
test   %al,%al
je     8053de0 <fchmod@plt+0xa0b0>
mov    %esi,%ebx
xor    %edx,%edx
jmp    8053d79 <fchmod@plt+0xa049>
xor    %edx,%edx
cmp    $0x25,%al
sete   %dl
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
je     8053de0 <fchmod@plt+0xa0b0>
cmp    $0x64,%al
jne    8053d68 <fchmod@plt+0xa038>
test   %edx,%edx
je     8053d68 <fchmod@plt+0xa038>
mov    %ebx,%edi
add    $0x1,%ebx
sub    %esi,%edi
mov    %edi,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x806aa04
lea    -0x1(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8049a50 <strncpy@plt>
movb   $0x0,-0x1(%ebp,%edi,1)
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x806aa00
call   8049890 <strcpy@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x806aa08
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x18(%esp),%ebx
mov    0x14(%esp),%ecx
mov    0x4(%ebx),%edx
mov    (%ebx),%eax
mov    %edx,%esi
mov    %edx,%ebp
mov    %eax,%edi
and    $0xfffff000,%esi
shrd   $0x8,%edx,%eax
mov    %edi,%edx
and    $0xfff,%eax
movzbl %dl,%edx
or     %eax,%esi
mov    %edi,%eax
shrd   $0xc,%ebp,%eax
xor    %al,%al
or     %edx,%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x2c(%ecx)
mov    0x58(%ebx),%eax
mov    %esi,0x28(%ecx)
mov    %edx,0x8(%ecx)
mov    %eax,0x4(%ecx)
mov    0x10(%ebx),%eax
mov    %eax,%edx
and    $0xf000,%eax
and    $0xfff,%edx
cmp    $0x8000,%eax
je     8053ea8 <fchmod@plt+0xa178>
cmp    $0x4000,%eax
je     8053f38 <fchmod@plt+0xa208>
cmp    $0x6000,%eax
je     8053f48 <fchmod@plt+0xa218>
cmp    $0x2000,%eax
je     8053f68 <fchmod@plt+0xa238>
cmp    $0x1000,%eax
je     8053f58 <fchmod@plt+0xa228>
cmp    $0xa000,%eax
je     8053f78 <fchmod@plt+0xa248>
cmp    $0xc000,%eax
je     8053f88 <fchmod@plt+0xa258>
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
or     $0x80,%dh
mov    %edx,0xc(%ecx)
mov    0x806aa30,%ebp
mov    0x14(%ebx),%eax
test   %ebp,%ebp
mov    %eax,0x18(%ecx)
mov    0x806b034,%eax
jne    8053ec6 <fchmod@plt+0xa196>
mov    0x18(%ebx),%eax
mov    0x806aa2c,%edi
mov    %eax,0x10(%ecx)
mov    0x806b030,%eax
test   %edi,%edi
jne    8053edb <fchmod@plt+0xa1ab>
mov    0x1c(%ebx),%eax
mov    0x24(%ebx),%edx
mov    %eax,0x14(%ecx)
mov    0x20(%ebx),%eax
mov    %edx,%esi
mov    %edx,%ebp
mov    %eax,%edi
and    $0xfffff000,%esi
shrd   $0x8,%edx,%eax
mov    %edi,%edx
and    $0xfff,%eax
movzbl %dl,%edx
or     %eax,%esi
mov    %edi,%eax
shrd   $0xc,%ebp,%eax
xor    %al,%al
or     %edx,%eax
mov    0x30(%ebx),%edx
mov    %eax,0x34(%ecx)
mov    0x48(%ebx),%eax
mov    %esi,0x30(%ecx)
mov    %eax,0x1c(%ecx)
mov    0x2c(%ebx),%eax
mov    %edx,0x24(%ecx)
movl   $0x0,0x3c(%ecx)
movl   $0x0,0x44(%ecx)
mov    %eax,0x20(%ecx)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
or     $0x40,%dh
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0x60,%dh
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0x10,%dh
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0x20,%dh
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0xa0,%dh
mov    %edx,0xc(%ecx)
jmp    8053eae <fchmod@plt+0xa17e>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0xc0,%dh
jmp    8053ea2 <fchmod@plt+0xa172>
push   %ebp
push   %edi
push   %esi
mov    $0x60,%esi
push   %ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ebx
test   $0x1,%dl
mov    %edx,%edi
jne    80540f0 <fchmod@plt+0xa3c0>
test   $0x2,%edi
jne    8054108 <fchmod@plt+0xa3d8>
mov    %esi,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%esi
rep stos %eax,%es:(%edi)
je     8053fd2 <fchmod@plt+0xa2a2>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%esi
je     8053fda <fchmod@plt+0xa2aa>
movb   $0x0,(%edi)
mov    0x2c(%ebx),%ecx
xor    %edi,%edi
mov    0x28(%ebx),%ebp
mov    %ecx,%esi
movzbl %cl,%ecx
and    $0xffffff00,%esi
mov    %ebp,%eax
shld   $0xc,%esi,%edi
and    $0xfffff000,%eax
and    $0xfff,%ebp
or     %edi,%eax
mov    0x8(%ebx),%edi
shl    $0x8,%ebp
or     %ecx,%ebp
shl    $0xc,%esi
mov    %eax,0x4(%edx)
mov    0xc(%ebx),%eax
or     %ebp,%esi
mov    %esi,(%edx)
mov    0x4(%ebx),%esi
mov    %edi,0x5c(%edx)
mov    %eax,%ecx
and    $0x1ff,%ecx
test   $0x80,%ah
mov    %esi,0x58(%edx)
je     80540b8 <fchmod@plt+0xa388>
or     $0x80,%ch
mov    %ecx,0x10(%edx)
mov    0x806aa30,%esi
mov    0x18(%ebx),%eax
test   %esi,%esi
mov    %eax,0x14(%edx)
mov    0x806b034,%eax
jne    805404d <fchmod@plt+0xa31d>
mov    0x10(%ebx),%eax
mov    0x806aa2c,%ecx
mov    %eax,0x18(%edx)
mov    0x806b030,%eax
test   %ecx,%ecx
jne    8054062 <fchmod@plt+0xa332>
mov    0x14(%ebx),%eax
mov    0x34(%ebx),%ecx
xor    %edi,%edi
mov    0x30(%ebx),%ebp
mov    %eax,0x1c(%edx)
mov    %ecx,%esi
movzbl %cl,%ecx
mov    %ebp,%eax
and    $0xffffff00,%esi
shld   $0xc,%esi,%edi
and    $0xfffff000,%eax
and    $0xfff,%ebp
or     %edi,%eax
shl    $0x8,%ebp
mov    %eax,0x24(%edx)
or     %ecx,%ebp
mov    0x1c(%ebx),%eax
mov    0x20(%ebx),%ecx
shl    $0xc,%esi
mov    0x24(%ebx),%ebx
or     %ebp,%esi
mov    %esi,0x20(%edx)
mov    %eax,0x48(%edx)
mov    %ecx,0x2c(%edx)
mov    %ebx,0x30(%edx)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   $0x40,%ah
je     80540c8 <fchmod@plt+0xa398>
or     $0x40,%ch
mov    %ecx,0x10(%edx)
jmp    8054035 <fchmod@plt+0xa305>
test   $0x60,%ah
jne    80540e0 <fchmod@plt+0xa3b0>
test   $0x20,%ah
je     8054120 <fchmod@plt+0xa3f0>
or     $0x20,%ch
mov    %ecx,0x10(%edx)
jmp    8054035 <fchmod@plt+0xa305>
lea    0x0(%esi),%esi
or     $0x60,%ch
mov    %ecx,0x10(%edx)
jmp    8054035 <fchmod@plt+0xa305>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%edi
mov    $0x5f,%si
test   $0x2,%edi
movb   $0x0,(%edx)
je     8053fb8 <fchmod@plt+0xa288>
xchg   %ax,%ax
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%esi
jmp    8053fb8 <fchmod@plt+0xa288>
lea    0x0(%esi,%eiz,1),%esi
test   $0xa0,%ah
jne    8054138 <fchmod@plt+0xa408>
test   $0xc0,%ah
je     805412d <fchmod@plt+0xa3fd>
or     $0xc0,%ch
mov    %ecx,0x10(%edx)
jmp    8054035 <fchmod@plt+0xa305>
lea    0x0(%esi),%esi
or     $0xa0,%ch
mov    %ecx,0x10(%edx)
jmp    8054035 <fchmod@plt+0xa305>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%eax
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
mov    0xc(%esp),%ebx
cmp    $0xffffffff,%eax
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
je     8054178 <fchmod@plt+0xa448>
pop    %ebx
jmp    8049970 <fchown@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8049690 <chown@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
mov    0x8(%esp),%ecx
cmp    $0xffffffff,%eax
mov    %edx,0x8(%esp)
je     80541b0 <fchmod@plt+0xa480>
jmp    8049d30 <fchmod@plt>
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
jmp    8049c00 <chmod@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x38(%esp),%edx
lea    0x10(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %edx,0x10(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x1c(%esp)
mov    %edx,0x18(%esp)
call   805f040 <argp_parse+0x4320>
test   %eax,%eax
js     8054210 <fchmod@plt+0xa4e0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049a20 <__errno_location@plt>
cmpl   $0x1e,(%eax)
je     8054204 <fchmod@plt+0xa4d4>
mov    %ebx,(%esp)
call   8057100 <fchmod@plt+0xd3d0>
add    $0x28,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x806aa28,%edi
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
test   %edi,%edi
jne    805428a <fchmod@plt+0xa55a>
mov    0x806aa30,%ecx
mov    0x806b034,%edi
test   %ecx,%ecx
jne    805425c <fchmod@plt+0xa52c>
mov    0x10(%ebx),%edi
mov    0x806aa2c,%edx
mov    0x806b030,%ebp
test   %edx,%edx
jne    805426f <fchmod@plt+0xa53f>
mov    0x14(%ebx),%ebp
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    0x40(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8054150 <fchmod@plt+0xa420>
test   %eax,%eax
js     80542d0 <fchmod@plt+0xa5a0>
mov    0xc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x40(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8054190 <fchmod@plt+0xa460>
test   %eax,%eax
js     80542f0 <fchmod@plt+0xa5c0>
mov    0x806aa4c,%eax
test   %eax,%eax
je     80542c7 <fchmod@plt+0xa597>
mov    0x1c(%ebx),%eax
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80541c0 <fchmod@plt+0xa490>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   8049a20 <__errno_location@plt>
cmpl   $0x1,(%eax)
je     805428a <fchmod@plt+0xa55a>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8056930 <fchmod@plt+0xcc00>
jmp    805428a <fchmod@plt+0xa55a>
nop
mov    0xc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8056890 <fchmod@plt+0xcb60>
jmp    80542a4 <fchmod@plt+0xa574>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movzbl 0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x2c(%esp),%edi
mov    %eax,0x8(%esp)
movzbl 0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80573d0 <fchmod@plt+0xd6a0>
mov    %eax,%ebx
mov    %edi,%eax
test   %al,%al
je     8054370 <fchmod@plt+0xa640>
cmpb   $0x2e,(%ebx)
je     8054396 <fchmod@plt+0xa666>
cmpb   $0x2e,(%ebx)
jne    8054370 <fchmod@plt+0xa640>
lea    0x0(%esi),%esi
cmpb   $0x2f,0x1(%ebx)
jne    8054370 <fchmod@plt+0xa640>
add    $0x1,%ebx
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmpb   $0x2f,(%ebx)
je     8054360 <fchmod@plt+0xa630>
cmpb   $0x2e,(%ebx)
je     8054350 <fchmod@plt+0xa620>
lea    0x0(%esi),%esi
cmp    %esi,%ebx
je     80543a6 <fchmod@plt+0xa676>
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
mov    %ebx,0x24(%esp)
mov    %esi,0x20(%esp)
add    $0x1,%eax
mov    %eax,0x28(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80496c0 <memmove@plt>
cmpb   $0x2f,0x1(%ebx)
jne    8054345 <fchmod@plt+0xa615>
cmpb   $0x0,0x2(%ebx)
jne    8054345 <fchmod@plt+0xa615>
cmp    %esi,%ebx
jne    8054374 <fchmod@plt+0xa644>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
mov    0x40(%ebp),%eax
mov    %ebp,%esi
mov    %eax,(%esp)
call   8049950 <strlen@plt>
add    $0x51,%eax
mov    %eax,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %eax,%ebx
mov    0x806ae40,%eax
lea    0x4(%ebx),%edi
test   $0x1,%edi
mov    %eax,(%ebx)
mov    $0x48,%eax
jne    8054448 <fchmod@plt+0xa718>
test   $0x2,%edi
jne    8054468 <fchmod@plt+0xa738>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     805440c <fchmod@plt+0xa6dc>
movzwl (%esi),%edx
mov    %dx,(%edi)
mov    $0x2,%edx
test   $0x1,%al
je     8054417 <fchmod@plt+0xa6e7>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
lea    0x50(%ebx),%eax
mov    %eax,0x44(%ebx)
mov    0x40(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049890 <strcpy@plt>
mov    0x34(%esp),%eax
mov    %ebx,0x806ae40
mov    %eax,0x4c(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp),%eax
lea    0x5(%ebx),%edi
test   $0x2,%edi
lea    0x1(%ebp),%esi
mov    %al,0x4(%ebx)
mov    $0x47,%eax
je     80543f4 <fchmod@plt+0xa6c4>
lea    0x0(%esi),%esi
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    80543f4 <fchmod@plt+0xa6c4>
lea    0x0(%esi),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0xc(%eax),%eax
test   $0x80,%al
jne    80544b0 <fchmod@plt+0xa780>
or     $0x80,%al
mov    %eax,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   80499f0 <mkdir@plt>
test   %eax,%eax
je     80544d0 <fchmod@plt+0xa7a0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   80499f0 <mkdir@plt>
movl   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
call   80543b0 <fchmod@plt+0xa680>
mov    0xc(%esp),%eax
movl   $0x1,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x68,%esp
mov    0x74(%esp),%eax
lea    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    0x70(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x58(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x4(%esp)
call   80543b0 <fchmod@plt+0xa680>
add    $0x68,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x806ae40,%ebx
mov    0x80(%esp),%edi
lea    0x10(%esp),%esi
test   %ebx,%ebx
jne    8054566 <fchmod@plt+0xa836>
jmp    80545e0 <fchmod@plt+0xa8b0>
mov    (%ebx),%ebx
test   %ebx,%ebx
je     80545e0 <fchmod@plt+0xa8b0>
mov    %esi,0x8(%esp)
mov    0x44(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
jne    80545f0 <fchmod@plt+0xa8c0>
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
xor    0x4(%edi),%ecx
xor    (%edi),%edx
or     %edx,%ecx
jne    8054560 <fchmod@plt+0xa830>
mov    0x68(%esp),%edx
mov    0x6c(%esp),%ecx
xor    0x5c(%edi),%ecx
xor    0x58(%edi),%edx
or     %edx,%ecx
jne    8054560 <fchmod@plt+0xa830>
lea    0x4(%ebx),%edx
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8053e00 <fchmod@plt+0xa0d0>
mov    0x806b004,%ecx
mov    0x20(%esp),%edx
xor    0x10(%edi),%edx
mov    0xc(%esp),%eax
not    %ecx
and    %ecx,%edx
and    $0x1ff,%edx
mov    %edx,0x4c(%ebx)
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x70,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8057060 <fchmod@plt+0xd330>
add    $0x70,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806ae40,%ebx
mov    0x20(%esp),%edi
test   %ebx,%ebx
je     80546c0 <fchmod@plt+0xa990>
mov    0x40(%edi),%esi
jmp    805463a <fchmod@plt+0xa90a>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     80546c0 <fchmod@plt+0xa990>
mov    0x44(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    8054630 <fchmod@plt+0xa900>
movl   $0x0,0x4c(%ebx)
mov    (%edi),%ecx
mov    %ecx,0x4(%ebx)
mov    0x4(%edi),%ecx
mov    %ecx,0x8(%ebx)
mov    0x8(%edi),%ecx
mov    %ecx,0xc(%ebx)
mov    0xc(%edi),%ecx
mov    %ecx,0x10(%ebx)
mov    0x10(%edi),%ecx
mov    %ecx,0x14(%ebx)
mov    0x14(%edi),%ecx
mov    %ecx,0x18(%ebx)
mov    0x18(%edi),%ecx
mov    %ecx,0x1c(%ebx)
mov    0x1c(%edi),%ecx
mov    %ecx,0x20(%ebx)
mov    0x20(%edi),%ecx
mov    %ecx,0x24(%ebx)
mov    0x24(%edi),%ecx
mov    %ecx,0x28(%ebx)
mov    0x28(%edi),%ecx
mov    %ecx,0x2c(%ebx)
mov    0x2c(%edi),%ecx
mov    %ecx,0x30(%ebx)
mov    0x30(%edi),%ecx
mov    %ecx,0x34(%ebx)
mov    0x34(%edi),%ecx
mov    %ecx,0x38(%ebx)
mov    0x38(%edi),%ecx
mov    %ecx,0x3c(%ebx)
mov    0x3c(%edi),%ecx
mov    %ecx,0x40(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806ae40,%ebx
test   %ebx,%ebx
jne    80546ea <fchmod@plt+0xa9ba>
jmp    805471b <fchmod@plt+0xa9eb>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x4c(%ebx),%eax
test   %eax,%eax
je     80546f4 <fchmod@plt+0xa9c4>
xor    %eax,0x10(%ebx)
lea    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0xffffffff,(%esp)
call   8054230 <fchmod@plt+0xa500>
mov    (%ebx),%esi
mov    %ebx,(%esp)
mov    %esi,0x806ae40
call   80496d0 <free@plt>
test   %esi,%esi
jne    80546e8 <fchmod@plt+0xa9b8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    8054730 <fchmod@plt+0xaa00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x88,%esp
cmpb   $0x0,0x806a9e8
mov    0x90(%esp),%ebx
movl   $0x0,0x1c(%esp)
je     8054760 <fchmod@plt+0xaa30>
xor    %eax,%eax
add    $0x88,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   805ea90 <argp_parse+0x3d70>
mov    0x40(%ebx),%eax
cmpb   $0x2e,(%eax)
je     80547a8 <fchmod@plt+0xaa78>
mov    0x94(%esp),%ecx
test   %ecx,%ecx
je     80547b8 <fchmod@plt+0xaa88>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    805474f <fchmod@plt+0xaa1f>
mov    %ebx,(%esp)
call   8054610 <fchmod@plt+0xa8e0>
test   %eax,%eax
je     805474f <fchmod@plt+0xaa1f>
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
call   8054230 <fchmod@plt+0xa500>
jmp    805474f <fchmod@plt+0xaa1f>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%eax)
jne    8054773 <fchmod@plt+0xaa43>
xchg   %ax,%ax
jmp    805474f <fchmod@plt+0xaa1f>
lea    0x0(%esi),%esi
lea    0x1c(%esp),%edx
mov    %ebx,%eax
call   8054480 <fchmod@plt+0xa750>
test   %eax,%eax
jns    805477e <fchmod@plt+0xaa4e>
mov    0x806aa6c,%edx
test   %edx,%edx
jne    8054870 <fchmod@plt+0xab40>
call   8049a20 <__errno_location@plt>
cmpl   $0x11,(%eax)
jne    8054898 <fchmod@plt+0xab68>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    80548a5 <fchmod@plt+0xab75>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     805477e <fchmod@plt+0xaa4e>
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062aff,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    $0xffffffff,%eax
jmp    8054751 <fchmod@plt+0xaa21>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8052a40 <fchmod@plt+0x8d10>
lea    0x1c(%esp),%edx
mov    %ebx,%eax
call   8054480 <fchmod@plt+0xa750>
test   %eax,%eax
js     80547d5 <fchmod@plt+0xaaa5>
jmp    805477e <fchmod@plt+0xaa4e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8056a80 <fchmod@plt+0xcd50>
jmp    805485f <fchmod@plt+0xab2f>
mov    0x40(%ebx),%eax
mov    %eax,(%esp)
call   8057060 <fchmod@plt+0xd330>
jmp    805485f <fchmod@plt+0xab2f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
and    $0xf000,%ecx
cmp    $0x6000,%ecx
je     8054a70 <fchmod@plt+0xad40>
cmp    $0x2000,%ecx
je     8054a80 <fchmod@plt+0xad50>
cmp    $0x4000,%ecx
je     8054a90 <fchmod@plt+0xad60>
cmp    $0x8000,%ecx
je     8054a60 <fchmod@plt+0xad30>
cmp    $0x1000,%ecx
je     8054aa0 <fchmod@plt+0xad70>
cmp    $0xa000,%ecx
je     8054ab0 <fchmod@plt+0xad80>
cmp    $0xc000,%ecx
mov    $0x73,%ebx
mov    $0x3f,%ecx
cmovne %ecx,%ebx
mov    %edx,%ecx
and    $0x100,%cx
cmp    $0x1,%cx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%eax)
mov    %edx,%ecx
and    $0x80,%cx
cmp    $0x1,%cx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%eax)
mov    %edx,%ecx
and    $0x40,%ecx
cmp    $0x1,%cx
sbb    %esi,%esi
and    $0xffffffb5,%esi
add    $0x78,%esi
mov    %bl,(%eax)
mov    %esi,%ebx
mov    %bl,0x3(%eax)
mov    %edx,%ebx
and    $0x38,%ebx
shl    $0x3,%ebx
mov    %ebx,%ecx
and    $0x100,%cx
cmp    $0x1,%cx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%eax)
mov    %ebx,%ecx
and    $0x80,%cx
cmp    $0x1,%cx
sbb    %ecx,%ecx
and    $0x40,%ebx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
cmp    $0x1,%bx
mov    %cl,0x5(%eax)
mov    %edx,%ecx
sbb    %ebp,%ebp
and    $0x7,%ecx
and    $0xffffffb5,%ebp
shl    $0x6,%ecx
add    $0x78,%ebp
mov    %ecx,%edi
mov    %ebp,%ebx
and    $0x100,%di
cmp    $0x1,%di
sbb    %edi,%edi
and    $0xffffffbb,%edi
add    $0x72,%edi
mov    %bl,0x6(%eax)
mov    %edi,%ebx
mov    %ecx,%edi
and    $0x80,%di
cmp    $0x1,%di
sbb    %edi,%edi
and    $0x40,%ecx
and    $0xffffffb6,%edi
add    $0x77,%edi
cmp    $0x1,%cx
sbb    %ecx,%ecx
and    $0xffffffb5,%ecx
add    $0x78,%ecx
test   $0x8,%dh
mov    %bl,0x7(%eax)
mov    %edi,%ebx
mov    %bl,0x8(%eax)
mov    %cl,0x9(%eax)
je     8054a21 <fchmod@plt+0xacf1>
mov    %esi,%ebx
mov    $0x53,%edi
cmp    $0x78,%bl
mov    $0x73,%esi
cmove  %esi,%edi
mov    %edi,%ebx
mov    %bl,0x3(%eax)
test   $0x4,%dh
je     8054a3d <fchmod@plt+0xad0d>
mov    %ebp,%ebx
mov    $0x53,%esi
cmp    $0x78,%bl
mov    $0x73,%ebx
cmove  %ebx,%esi
mov    %esi,%ebx
mov    %bl,0x6(%eax)
and    $0x2,%dh
je     8054a55 <fchmod@plt+0xad25>
cmp    $0x78,%cl
mov    $0x54,%edx
mov    $0x74,%ecx
cmove  %ecx,%edx
mov    %dl,0x9(%eax)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x2d,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    $0x62,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    $0x63,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    $0x64,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    $0x70,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    $0x6c,%ebx
jmp    805492f <fchmod@plt+0xabff>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
movzwl 0x10(%eax),%eax
mov    %eax,0x4(%esp)
jmp    80548c0 <fchmod@plt+0xab90>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x806ae54,%eax
mov    0x50(%esp),%ebx
test   %eax,%eax
jne    8054b0f <fchmod@plt+0xaddf>
jmp    8054b30 <fchmod@plt+0xae00>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
test   %eax,%eax
je     8054b30 <fchmod@plt+0xae00>
cmp    %ebx,(%eax)
jne    8054b08 <fchmod@plt+0xadd8>
mov    0x4(%eax),%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8054ba1 <fchmod@plt+0xae71>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80496a0 <getpwuid@plt>
movl   $0xc,(%esp)
mov    %eax,%edi
call   805f2a0 <argp_parse+0x4580>
test   %edi,%edi
mov    %eax,%esi
mov    %ebx,(%eax)
je     8054b6c <fchmod@plt+0xae3c>
mov    (%edi),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x4(%esi)
mov    0x806ae54,%edx
mov    %esi,0x806ae54
mov    %edx,0x8(%esi)
jmp    8054b16 <fchmod@plt+0xade6>
mov    %ebx,0x10(%esp)
lea    0x28(%esp),%ebx
movl   $0x8062d02,0xc(%esp)
movl   $0x14,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    %ebx,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x4(%esi)
jmp    8054b5b <fchmod@plt+0xae2b>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806ae54,%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
je     8054c00 <fchmod@plt+0xaed0>
movzbl (%esi),%edi
jmp    8054bd7 <fchmod@plt+0xaea7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8054c00 <fchmod@plt+0xaed0>
mov    0x4(%ebx),%eax
mov    %edi,%edx
cmp    %dl,(%eax)
jne    8054bd0 <fchmod@plt+0xaea0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    8054bd0 <fchmod@plt+0xaea0>
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ae50,%ebx
test   %ebx,%ebx
je     8054c40 <fchmod@plt+0xaf10>
movzbl (%esi),%edi
jmp    8054c17 <fchmod@plt+0xaee7>
nop
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8054c40 <fchmod@plt+0xaf10>
mov    0x4(%ebx),%eax
mov    %edi,%ecx
cmp    %cl,(%eax)
jne    8054c10 <fchmod@plt+0xaee0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    8054c10 <fchmod@plt+0xaee0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049620 <getpwnam@plt>
movl   $0xc,(%esp)
mov    %eax,%edi
call   805f2a0 <argp_parse+0x4580>
mov    %esi,(%esp)
mov    %eax,%ebx
call   805f3e0 <argp_parse+0x46c0>
test   %edi,%edi
mov    %eax,0x4(%ebx)
je     8054c7f <fchmod@plt+0xaf4f>
mov    0x8(%edi),%eax
mov    %eax,(%ebx)
mov    0x806ae54,%eax
mov    %ebx,0x806ae54
mov    %eax,0x8(%ebx)
jmp    8054bf0 <fchmod@plt+0xaec0>
mov    0x806ae50,%eax
mov    %ebx,0x806ae50
mov    %eax,0x8(%ebx)
xor    %eax,%eax
jmp    8054bf2 <fchmod@plt+0xaec2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x806ae4c,%eax
mov    0x50(%esp),%ebx
test   %eax,%eax
jne    8054ccf <fchmod@plt+0xaf9f>
jmp    8054cf0 <fchmod@plt+0xafc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
test   %eax,%eax
je     8054cf0 <fchmod@plt+0xafc0>
cmp    %ebx,(%eax)
jne    8054cc8 <fchmod@plt+0xaf98>
mov    0x4(%eax),%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8054d61 <fchmod@plt+0xb031>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049cd0 <getgrgid@plt>
movl   $0xc,(%esp)
mov    %eax,%edi
call   805f2a0 <argp_parse+0x4580>
test   %edi,%edi
mov    %eax,%esi
mov    %ebx,(%eax)
je     8054d2c <fchmod@plt+0xaffc>
mov    (%edi),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x4(%esi)
mov    0x806ae4c,%edx
mov    %esi,0x806ae4c
mov    %edx,0x8(%esi)
jmp    8054cd6 <fchmod@plt+0xafa6>
mov    %ebx,0x10(%esp)
lea    0x28(%esp),%ebx
movl   $0x8062d02,0xc(%esp)
movl   $0x14,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    %ebx,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,0x4(%esi)
jmp    8054d1b <fchmod@plt+0xafeb>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806ae4c,%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
je     8054dc0 <fchmod@plt+0xb090>
movzbl (%esi),%edi
jmp    8054d97 <fchmod@plt+0xb067>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8054dc0 <fchmod@plt+0xb090>
mov    0x4(%ebx),%eax
mov    %edi,%edx
cmp    %dl,(%eax)
jne    8054d90 <fchmod@plt+0xb060>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    8054d90 <fchmod@plt+0xb060>
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ae48,%ebx
test   %ebx,%ebx
je     8054e00 <fchmod@plt+0xb0d0>
movzbl (%esi),%edi
jmp    8054dd7 <fchmod@plt+0xb0a7>
nop
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8054e00 <fchmod@plt+0xb0d0>
mov    0x4(%ebx),%eax
mov    %edi,%ecx
cmp    %cl,(%eax)
jne    8054dd0 <fchmod@plt+0xb0a0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
jne    8054dd0 <fchmod@plt+0xb0a0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049c90 <getgrnam@plt>
movl   $0xc,(%esp)
mov    %eax,%edi
call   805f2a0 <argp_parse+0x4580>
mov    %esi,(%esp)
mov    %eax,%ebx
call   805f3e0 <argp_parse+0x46c0>
test   %edi,%edi
mov    %eax,0x4(%ebx)
je     8054e3f <fchmod@plt+0xb10f>
mov    0x8(%edi),%eax
mov    %eax,(%ebx)
mov    0x806ae4c,%eax
mov    %ebx,0x806ae4c
mov    %eax,0x8(%ebx)
jmp    8054db0 <fchmod@plt+0xb080>
mov    0x806ae48,%eax
mov    %ebx,0x806ae48
mov    %eax,0x8(%ebx)
xor    %eax,%eax
jmp    8054db2 <fchmod@plt+0xb082>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x14(%ebp),%eax
mov    0x8(%ebp),%esi
mov    %eax,-0x8c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   80497c0 <getuid@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049950 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
lea    -0x7c(%ebp),%esi
mov    %ebx,(%esp)
call   80496e0 <memcpy@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
je     8055045 <fchmod@plt+0xb315>
mov    0x806b004,%eax
movl   $0x0,-0x90(%ebp)
00
mov    %eax,-0x98(%ebp)
notl   -0x98(%ebp)
andl   $0x1ff,-0x98(%ebp)
00
test   %edi,%edi
je     8054f14 <fchmod@plt+0xb1e4>
mov    -0x98(%ebp),%eax
not    %eax
mov    %eax,-0x90(%ebp)
andl   $0xc0,-0x90(%ebp)
00
cmpb   $0x2f,(%ebx)
mov    %ebx,%edx
jne    8054f28 <fchmod@plt+0xb1f8>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmpb   $0x2f,(%edx)
je     8054f20 <fchmod@plt+0xb1f0>
mov    -0x90(%ebp),%eax
xor    -0x98(%ebp),%eax
mov    %eax,-0x94(%ebp)
lea    0x0(%esi),%esi
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     80550ad <fchmod@plt+0xb37d>
movb   $0x0,(%edi)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
jne    8054fa8 <fchmod@plt+0xb278>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8055058 <fchmod@plt+0xb328>
cmpb   $0x2f,0x1(%edi)
lea    0x1(%edi),%edx
movb   $0x2f,(%edi)
jne    8054f40 <fchmod@plt+0xb210>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmpb   $0x2f,(%edx)
je     8054f98 <fchmod@plt+0xb268>
jmp    8054f40 <fchmod@plt+0xb210>
lea    0x0(%esi),%esi
mov    -0x94(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <mkdir@plt>
test   %eax,%eax
jne    8055196 <fchmod@plt+0xb466>
mov    -0x8c(%ebp),%eax
test   %eax,%eax
je     8054fe8 <fchmod@plt+0xb2b8>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80498b0 <error@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
jne    8055033 <fchmod@plt+0xb303>
cmpl   $0xffffffff,0xc(%ebp)
je     805500c <fchmod@plt+0xb2dc>
mov    0xc(%ebp),%eax
mov    %eax,-0x64(%ebp)
cmpl   $0xffffffff,0x10(%ebp)
je     8055018 <fchmod@plt+0xb2e8>
mov    0x10(%ebp),%eax
mov    %eax,-0x60(%ebp)
mov    -0x90(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8054500 <fchmod@plt+0xa7d0>
jmp    8054f88 <fchmod@plt+0xb258>
mov    %ebx,(%esp)
call   8057060 <fchmod@plt+0xd330>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8054f88 <fchmod@plt+0xb258>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     805513f <fchmod@plt+0xb40f>
movl   $0x5,0x8(%esp)
movl   $0x8062d20,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    $0x1,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    805521e <fchmod@plt+0xb4ee>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    -0x98(%ebp),%eax
xor    -0x90(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <mkdir@plt>
test   %eax,%eax
jne    8055146 <fchmod@plt+0xb416>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
jne    8055211 <fchmod@plt+0xb4e1>
cmpl   $0xffffffff,0xc(%ebp)
je     80550f1 <fchmod@plt+0xb3c1>
mov    0xc(%ebp),%eax
mov    %eax,-0x64(%ebp)
cmpl   $0xffffffff,0x10(%ebp)
je     80550fd <fchmod@plt+0xb3cd>
mov    0x10(%ebp),%eax
mov    %eax,-0x60(%ebp)
mov    -0x90(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8054500 <fchmod@plt+0xa7d0>
mov    -0x8c(%ebp),%eax
test   %eax,%eax
je     805513f <fchmod@plt+0xb40f>
mov    -0x8c(%ebp),%eax
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
xor    %eax,%eax
jmp    8055095 <fchmod@plt+0xb365>
call   8049a20 <__errno_location@plt>
cmpl   $0x11,(%eax)
mov    %eax,%edi
je     80551dd <fchmod@plt+0xb4ad>
movl   $0x5,0x8(%esp)
movl   $0x8062d05,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    $0x1,%eax
jmp    8055095 <fchmod@plt+0xb365>
movl   $0x5,0x8(%esp)
movl   $0x8062d05,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
mov    $0x1,%eax
jmp    8055095 <fchmod@plt+0xb365>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
jne    8055156 <fchmod@plt+0xb426>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8055156 <fchmod@plt+0xb426>
jmp    8055113 <fchmod@plt+0xb3e3>
mov    %ebx,(%esp)
call   8057060 <fchmod@plt+0xd330>
jmp    8055113 <fchmod@plt+0xb3e3>
xchg   %ax,%ax
call   80497a0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4,%esp
movsbl (%eax),%ebx
test   %bl,%bl
je     8055268 <fchmod@plt+0xb538>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
jmp    8055252 <fchmod@plt+0xb522>
nop
add    $0x1,%esi
movsbl (%esi),%ebx
test   %bl,%bl
je     8055268 <fchmod@plt+0xb538>
testb  $0x8,0x1(%eax,%ebx,2)
jne    8055248 <fchmod@plt+0xb518>
add    $0x4,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0xc(%ebp),%eax
mov    0x8(%ebp),%edx
mov    0x14(%ebp),%esi
mov    0x18(%ebp),%edi
mov    %eax,-0x40(%ebp)
mov    0x10(%ebp),%eax
mov    %edx,-0x3c(%ebp)
movl   $0x0,(%edi)
movl   $0x0,(%esi)
mov    %edx,(%esp)
mov    %eax,-0x4c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   8049950 <strlen@plt>
mov    -0x3c(%ebp),%edx
lea    0x1(%eax),%ecx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x23(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,(%esp)
call   80496e0 <memcpy@plt>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,%edx
je     8055500 <fchmod@plt+0xb7d0>
movb   $0x0,(%edx)
cmpb   $0x1,(%ebx)
setb   -0x48(%ebp)
xor    %ecx,%ecx
cmpb   $0x0,(%ebx)
cmovne %ebx,%ecx
test   %edx,%edx
je     805531f <fchmod@plt+0xb5ef>
cmpb   $0x0,0x1(%edx)
jne    80553a8 <fchmod@plt+0xb678>
movb   $0x1,-0x3c(%ebp)
movl   $0x0,-0x44(%ebp)
cmpb   $0x0,-0x48(%ebp)
mov    $0x8062d44,%eax
jne    805538a <fchmod@plt+0xb65a>
test   %ecx,%ecx
je     8055369 <fchmod@plt+0xb639>
mov    %ecx,(%esp)
mov    %edx,-0x54(%ebp)
mov    %ecx,-0x50(%ebp)
call   8049620 <getpwnam@plt>
mov    -0x50(%ebp),%ecx
mov    -0x54(%ebp),%edx
test   %eax,%eax
mov    %eax,-0x48(%ebp)
je     8055438 <fchmod@plt+0xb708>
mov    -0x48(%ebp),%eax
mov    -0x40(%ebp),%ebx
cmpb   $0x0,-0x3c(%ebp)
mov    0x8(%eax),%eax
mov    %eax,(%ebx)
jne    80553c8 <fchmod@plt+0xb698>
xor    %ebx,%ebx
cmpl   $0x0,-0x44(%ebp)
jne    80554a1 <fchmod@plt+0xb771>
test   %ecx,%ecx
jne    8055550 <fchmod@plt+0xb820>
lea    0x0(%esi),%esi
test   %ebx,%ebx
jne    8055520 <fchmod@plt+0xb7f0>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    8055675 <fchmod@plt+0xb945>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edx,%eax
add    $0x1,%eax
mov    %eax,-0x44(%ebp)
sete   -0x3c(%ebp)
je     805532a <fchmod@plt+0xb5fa>
test   %ecx,%ecx
jne    8055339 <fchmod@plt+0xb609>
jmp    8055369 <fchmod@plt+0xb639>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
lea    0x0(%esi),%esi
je     8055369 <fchmod@plt+0xb639>
mov    -0x48(%ebp),%ebx
mov    %ecx,-0x3c(%ebp)
mov    -0x4c(%ebp),%ecx
mov    0xc(%ebx),%eax
mov    %eax,(%ecx)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049cd0 <getgrgid@plt>
mov    -0x3c(%ebp),%ecx
test   %eax,%eax
je     8055564 <fchmod@plt+0xb834>
mov    (%eax),%edx
mov    %ecx,-0x40(%ebp)
mov    %edx,(%esp)
mov    %edx,-0x3c(%ebp)
call   8049950 <strlen@plt>
mov    -0x3c(%ebp),%edx
mov    %eax,%ebx
add    $0x1f,%ebx
and    $0xfffffff0,%ebx
sub    %ebx,%esp
lea    0x23(%esp),%ebx
lea    0x1(%eax),%eax
and    $0xfffffff0,%ebx
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   80496e0 <memcpy@plt>
mov    -0x40(%ebp),%ecx
jmp    805536b <fchmod@plt+0xb63b>
lea    0x0(%esi),%esi
mov    %ecx,%eax
mov    %edx,-0x50(%ebp)
mov    %ecx,-0x48(%ebp)
call   8055230 <fchmod@plt+0xb500>
mov    -0x48(%ebp),%ecx
mov    -0x50(%ebp),%edx
test   %eax,%eax
je     8055632 <fchmod@plt+0xb902>
cmpb   $0x0,-0x3c(%ebp)
je     8055608 <fchmod@plt+0xb8d8>
test   %edx,%edx
je     8055608 <fchmod@plt+0xb8d8>
mov    %ecx,-0x3c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x8062d68,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    -0x3c(%ebp),%ecx
test   %eax,%eax
sete   %dl
test   %dl,%dl
je     805538a <fchmod@plt+0xb65a>
mov    -0x44(%ebp),%eax
xor    %ebx,%ebx
test   %eax,%eax
je     8055550 <fchmod@plt+0xb820>
mov    -0x44(%ebp),%eax
mov    %ecx,-0x3c(%ebp)
mov    %eax,(%esp)
call   8049c90 <getgrnam@plt>
mov    -0x3c(%ebp),%ecx
test   %eax,%eax
je     80555c9 <fchmod@plt+0xb899>
mov    0x8(%eax),%eax
mov    -0x4c(%ebp),%ebx
mov    %eax,(%ebx)
mov    -0x44(%ebp),%eax
mov    %ecx,-0x3c(%ebp)
mov    %eax,(%esp)
call   8049950 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
mov    -0x44(%ebp),%eax
lea    0x23(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80496e0 <memcpy@plt>
mov    -0x3c(%ebp),%ecx
jmp    8055375 <fchmod@plt+0xb645>
lea    0x0(%esi),%esi
movl   $0x2e,0x4(%esp)
mov    %ebx,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
mov    %eax,%edx
je     8055302 <fchmod@plt+0xb5d2>
jmp    80552ff <fchmod@plt+0xb5cf>
nop
mov    %ebx,(%esp)
call   8049a10 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%edi)
jne    8055388 <fchmod@plt+0xb658>
mov    (%esi),%eax
test   %eax,%eax
je     8055546 <fchmod@plt+0xb816>
mov    %eax,(%esp)
call   80496d0 <free@plt>
movl   $0x0,(%esi)
mov    $0x8062aa8,%eax
jmp    805538a <fchmod@plt+0xb65a>
mov    %ecx,(%esp)
call   8049a10 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%esi)
jne    8055380 <fchmod@plt+0xb650>
jmp    8055546 <fchmod@plt+0xb816>
mov    -0x48(%ebp),%eax
mov    0xc(%eax),%eax
movl   $0x8062d02,0xc(%esp)
movl   $0x15,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
lea    -0x31(%ebp),%eax
mov    %eax,(%esp)
call   8049d20 <__sprintf_chk@plt>
lea    -0x31(%ebp),%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x23(%esp),%ebx
lea    -0x31(%ebp),%eax
and    $0xfffffff0,%ebx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80496e0 <memcpy@plt>
mov    -0x3c(%ebp),%ecx
jmp    805536b <fchmod@plt+0xb63b>
mov    -0x44(%ebp),%eax
call   8055230 <fchmod@plt+0xb500>
mov    -0x3c(%ebp),%ecx
test   %eax,%eax
jne    805564a <fchmod@plt+0xb91a>
movl   $0x5,0x8(%esp)
movl   $0x8062da1,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    -0x3c(%ebp),%ecx
test   %eax,%eax
jne    805538a <fchmod@plt+0xb65a>
jmp    80554c2 <fchmod@plt+0xb792>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
xor    %ebx,%ebx
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,-0x3c(%ebp)
call   8049c60 <strtol@plt>
mov    -0x40(%ebp),%ecx
mov    %eax,(%ecx)
mov    -0x3c(%ebp),%ecx
jmp    805536b <fchmod@plt+0xb63b>
mov    %ecx,-0x3c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x8062d94,0x4(%esp)
jmp    8055478 <fchmod@plt+0xb748>
mov    -0x44(%ebp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,-0x3c(%ebp)
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
mov    -0x4c(%ebp),%ecx
mov    %eax,(%ecx)
mov    -0x3c(%ebp),%ecx
jmp    80554c2 <fchmod@plt+0xb792>
call   80497a0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x806ae58,%eax
mov    %eax,(%esp)
call   8049920 <exit@plt>
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x806a900(,%eax,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
mov    0x806a8e4(,%ebx,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
movl   $0xffffffff,0x806a900(,%ebx,8)
ff
movl   $0xffffffff,0x806a8e4(,%ebx,8)
ff
call   8049a20 <__errno_location@plt>
mov    %esi,(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %edx,(%esp)
call   8049950 <strlen@plt>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%ebx
call   8049740 <signal@plt>
mov    %esi,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,%ebp
mov    0x806a8e4(,%edi,8),%eax
mov    %eax,(%esp)
call   805bad0 <argp_parse+0xdb0>
mov    %ebp,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%esi
call   8049740 <signal@plt>
xor    %eax,%eax
cmp    %esi,%ebx
jne    8055748 <fchmod@plt+0xba18>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,%eax
mov    $0x5,%edx
call   8055690 <fchmod@plt+0xb960>
mov    $0xffffffff,%eax
jmp    805573a <fchmod@plt+0xba0a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
lea    0x40(%edx),%edi
jmp    8055784 <fchmod@plt+0xba54>
lea    0x0(%esi),%esi
cmpb   $0xa,(%ebx)
je     80557c0 <fchmod@plt+0xba90>
add    $0x1,%ebx
cmp    %edi,%ebx
je     80557a4 <fchmod@plt+0xba74>
mov    0x806a900(,%ebp,8),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
cmp    $0x1,%eax
je     8055778 <fchmod@plt+0xba48>
mov    $0x5,%edx
mov    %ebp,%eax
call   8055690 <fchmod@plt+0xb960>
xor    %ebx,%ebx
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
movzbl (%esi),%eax
test   %al,%al
jne    80557da <fchmod@plt+0xbaaa>
jmp    80557a4 <fchmod@plt+0xba74>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
test   %al,%al
je     80557a4 <fchmod@plt+0xba74>
cmp    $0x20,%al
je     80557d0 <fchmod@plt+0xbaa0>
lea    -0x45(%eax),%edx
cmp    $0x1,%dl
ja     8055854 <fchmod@plt+0xbb24>
lea    0x1f(%esp),%ebx
jmp    80557f7 <fchmod@plt+0xbac7>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0xa,0x1f(%esp)
je     8055817 <fchmod@plt+0xbae7>
mov    0x806a900(,%ebp,8),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
cmp    $0x1,%eax
je     80557f0 <fchmod@plt+0xbac0>
call   8049a20 <__errno_location@plt>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%ebx
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
mov    %eax,(%ebx)
xor    %ebx,%ebx
cmpb   $0x46,(%esi)
jne    80557b2 <fchmod@plt+0xba82>
mov    %eax,%edx
mov    %ebp,%eax
call   8055690 <fchmod@plt+0xb960>
jmp    80557b2 <fchmod@plt+0xba82>
cmp    $0x41,%al
jne    80557a4 <fchmod@plt+0xba74>
add    $0x2c,%esp
lea    0x1(%esi),%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x6c,%esp
lea    0x1c(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x5c(%esp)
xor    %ecx,%ecx
call   8055760 <fchmod@plt+0xba30>
test   %eax,%eax
je     80558ba <fchmod@plt+0xbb8a>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
test   %eax,%eax
js     80558c2 <fchmod@plt+0xbb92>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80558d4 <fchmod@plt+0xbba4>
add    $0x6c,%esp
ret
mov    $0xffffffff,%eax
nop
jmp    80558a9 <fchmod@plt+0xbb79>
call   8049a20 <__errno_location@plt>
movl   $0x5,(%eax)
mov    $0xffffffff,%eax
jmp    80558a9 <fchmod@plt+0xbb79>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpl   $0xffffffff,0x806a900(,%edi,8)
je     8055918 <fchmod@plt+0xbbe8>
add    $0x1,%edi
cmp    $0x4,%edi
jne    80558e9 <fchmod@plt+0xbbb9>
call   8049a20 <__errno_location@plt>
mov    $0xffffffff,%ebx
movl   $0x18,(%eax)
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x806a8e4(,%edi,8),%ebx
cmp    $0xffffffff,%ebx
jne    80558f3 <fchmod@plt+0xbbc3>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   805f3e0 <argp_parse+0x46c0>
mov    %eax,%ecx
mov    %eax,0x20(%esp)
movzbl (%eax),%eax
test   %al,%al
je     8055f35 <fchmod@plt+0xc205>
lea    0x1(%ecx),%edx
xor    %ebp,%ebp
xor    %esi,%esi
cmp    $0x3a,%al
je     8055af8 <fchmod@plt+0xbdc8>
cmp    $0x40,%al
je     8055ae0 <fchmod@plt+0xbdb0>
cmp    $0xa,%al
je     8055ab8 <fchmod@plt+0xbd88>
movzbl (%edx),%eax
add    $0x1,%edx
test   %al,%al
jne    8055948 <fchmod@plt+0xbc18>
mov    %ecx,0x24(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <gethostbyname@plt>
test   %eax,%eax
je     8055e7d <fchmod@plt+0xc14d>
test   %ebp,%ebp
je     8055992 <fchmod@plt+0xbc62>
cmpb   $0x0,0x0(%ebp)
mov    $0x0,%eax
cmove  %eax,%ebp
mov    0x5c(%esp),%eax
test   %eax,%eax
je     8055f46 <fchmod@plt+0xc216>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   805c350 <argp_parse+0x1630>
lea    0x0(,%edi,8),%edx
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x806a8e0(%edx),%eax
mov    %eax,(%esp)
call   8049aa0 <pipe@plt>
mov    0x28(%esp),%edx
cmp    $0xffffffff,%eax
je     8055ebe <fchmod@plt+0xc18e>
add    $0x806a900,%edx
mov    %edx,(%esp)
call   8049aa0 <pipe@plt>
cmp    $0xffffffff,%eax
je     8055ebe <fchmod@plt+0xc18e>
call   8049b00 <fork@plt>
cmp    $0xffffffff,%eax
je     8055ebe <fchmod@plt+0xc18e>
test   %eax,%eax
je     8055b10 <fchmod@plt+0xbde0>
mov    0x806a904(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
mov    0x806a8e0(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    %eax,%edx
lea    0x3e8(%eax),%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %esi,0x10(%esp)
movl   $0x8062df4,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049d20 <__sprintf_chk@plt>
mov    0x24(%esp),%edx
mov    0x54(%esp),%eax
movl   $0x8062df9,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
lea    0x2(%ebp,%edx,1),%esi
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    0x54(%esp),%eax
and    $0x3,%eax
cmp    $0x1,%eax
je     8055c1b <fchmod@plt+0xbeeb>
cmp    $0x2,%eax
je     8055d3d <fchmod@plt+0xc00d>
test   %eax,%eax
je     8055d1d <fchmod@plt+0xbfed>
call   8049c10 <abort@plt>
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
call   8049a20 <__errno_location@plt>
movl   $0x2,(%eax)
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
jne    8055960 <fchmod@plt+0xbc30>
mov    %ecx,%ebp
mov    %edx,%ecx
movb   $0x0,-0x1(%edx)
jmp    8055960 <fchmod@plt+0xbc30>
lea    0x0(%esi),%esi
test   %esi,%esi
jne    8055960 <fchmod@plt+0xbc30>
mov    %edx,%esi
movb   $0x0,-0x1(%edx)
jmp    8055960 <fchmod@plt+0xbc30>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8049cb0 <close@plt>
mov    0x806a8e0(,%edi,8),%eax
mov    %eax,(%esp)
call   80496b0 <dup@plt>
mov    0x806a8e0(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
mov    0x806a8e4(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
movl   $0x1,(%esp)
call   8049cb0 <close@plt>
mov    0x806a904(,%edi,8),%eax
mov    %eax,(%esp)
call   80496b0 <dup@plt>
mov    0x806a900(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
mov    0x806a904(,%edi,8),%eax
mov    %eax,(%esp)
call   8049cb0 <close@plt>
call   80497c0 <getuid@plt>
mov    %eax,(%esp)
call   8049b60 <setuid@plt>
call   80499c0 <getgid@plt>
mov    %eax,(%esp)
call   80498f0 <setgid@plt>
test   %ebp,%ebp
je     8055eda <fchmod@plt+0xc1aa>
mov    0x806a8c0,%eax
movl   $0x0,0x18(%esp)
mov    %ebp,0x10(%esp)
movl   $0x8062dd5,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049a80 <execl@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062dd8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%ebp
call   8049a20 <__errno_location@plt>
mov    %ebp,0x8(%esp)
mov    (%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <error@plt>
jmp    8055a01 <fchmod@plt+0xbcd1>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x52575f4f,(%eax)
movl   $0x594c4e4f,0x4(%eax)
movb   $0x0,0x8(%eax)
testl  $0x400,0x54(%esp)
jne    8055e58 <fchmod@plt+0xc128>
testb  $0x40,0x54(%esp)
jne    8055e0a <fchmod@plt+0xc0da>
testl  $0x1000,0x54(%esp)
jne    8055dea <fchmod@plt+0xc0ba>
testb  $0x80,0x54(%esp)
jne    8055dce <fchmod@plt+0xc09e>
testl  $0x8000,0x54(%esp)
jne    8055da7 <fchmod@plt+0xc077>
testl  $0x100,0x54(%esp)
jne    8055d82 <fchmod@plt+0xc052>
testl  $0x800,0x54(%esp)
jne    8055d5f <fchmod@plt+0xc02f>
testl  $0x101000,0x54(%esp)
jne    8055e2a <fchmod@plt+0xc0fa>
testl  $0x200,0x54(%esp)
je     8055cc5 <fchmod@plt+0xbf95>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %eax,%esi
movl   $0x545f4f7c,(%esi)
movl   $0x434e5552,0x4(%esi)
movb   $0x0,0x8(%esi)
mov    %ebp,(%esp)
call   8049950 <strlen@plt>
mov    $0xa,%edx
mov    %dx,0x0(%ebp,%eax,1)
mov    %ebp,%edx
mov    %edi,%eax
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     8055f0c <fchmod@plt+0xc1dc>
mov    %edi,%eax
call   8055870 <fchmod@plt+0xbb40>
cmp    $0xffffffff,%eax
je     8055f0c <fchmod@plt+0xc1dc>
mov    %ebp,(%esp)
call   80496d0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x58(%esp),%ebx
add    $0x3c,%esp
add    %edi,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x44525f4f,(%eax)
movl   $0x594c4e4f,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    8055c36 <fchmod@plt+0xbf06>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    $0x5257,%ecx
add    %esi,%eax
movl   $0x44525f4f,(%eax)
mov    %cx,0x4(%eax)
movb   $0x0,0x6(%eax)
jmp    8055c36 <fchmod@plt+0xbf06>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x4e5f4f7c,(%eax)
movl   $0x4c424e4f,0x4(%eax)
movl   $0x4b434f,0x8(%eax)
jmp    8055c92 <fchmod@plt+0xbf62>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    $0x59,%ecx
add    %esi,%eax
movl   $0x4e5f4f7c,(%eax)
movl   $0x5454434f,0x4(%eax)
mov    %cx,0x8(%eax)
jmp    8055c84 <fchmod@plt+0xbf54>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x4c5f4f7c,(%eax)
movl   $0x45475241,0x4(%eax)
movl   $0x454c4946,0x8(%eax)
movb   $0x0,0xc(%eax)
jmp    8055c76 <fchmod@plt+0xbf46>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x455f4f7c,(%eax)
movl   $0x4c4358,0x4(%eax)
jmp    8055c68 <fchmod@plt+0xbf38>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x445f4f7c,(%eax)
movl   $0x434e5953,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    8055c5d <fchmod@plt+0xbf2d>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
movl   $0x435f4f7c,(%eax)
movl   $0x54414552,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    8055c4f <fchmod@plt+0xbf1f>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
lea    (%esi,%eax,1),%edx
lea    0x8(%esi,%eax,1),%eax
movl   $0x525f4f7c,(%edx)
movl   $0x434e5953,0x4(%edx)
movl   $0x535f4f7c,(%eax)
movl   $0x434e59,0x4(%eax)
jmp    8055ca0 <fchmod@plt+0xbf70>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    $0x44,%edx
add    %esi,%eax
movl   $0x415f4f7c,(%eax)
movl   $0x4e455050,0x4(%eax)
mov    %dx,0x8(%eax)
jmp    8055c44 <fchmod@plt+0xbf14>
movl   $0x5,0x8(%esp)
movl   $0x8062db0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    8055982 <fchmod@plt+0xbc52>
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %ebp,(%esi)
jmp    805590b <fchmod@plt+0xbbdb>
mov    0x806a8c0,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049a80 <execl@plt>
jmp    8055bdd <fchmod@plt+0xbead>
call   8049a20 <__errno_location@plt>
mov    (%eax),%esi
mov    %ebp,(%esp)
call   80496d0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %esi,%edx
mov    %edi,%eax
call   8055690 <fchmod@plt+0xb960>
jmp    805590b <fchmod@plt+0xbbdb>
mov    0x20(%esp),%eax
xor    %ebp,%ebp
xor    %esi,%esi
mov    %eax,0x24(%esp)
jmp    805596e <fchmod@plt+0xbc3e>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
call   8049a20 <__errno_location@plt>
movl   $0x5,(%eax)
jmp    805590b <fchmod@plt+0xbbdb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8062dfd,%edx
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
mov    %ebx,%eax
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     8055fa3 <fchmod@plt+0xc273>
mov    %ebx,%eax
call   8055870 <fchmod@plt+0xbb40>
mov    %eax,%esi
call   8049a20 <__errno_location@plt>
mov    (%eax),%edx
mov    %ebx,%eax
call   8055690 <fchmod@plt+0xb960>
mov    %esi,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x98(%esp),%eax
lea    0x2c(%esp),%esi
mov    0x90(%esp),%ebx
movl   $0x8062e00,0xc(%esp)
mov    0x94(%esp),%edi
movl   $0x40,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    %esi,%edx
mov    %ebx,%eax
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
jne    8056028 <fchmod@plt+0xc2f8>
mov    $0xffffffff,%eax
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8056092 <fchmod@plt+0xc362>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,%eax
call   8055870 <fchmod@plt+0xbb40>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     805600e <fchmod@plt+0xc2de>
cmp    %eax,0x98(%esp)
jb     805600e <fchmod@plt+0xc2de>
test   %eax,%eax
je     805608c <fchmod@plt+0xc35c>
xor    %esi,%esi
jmp    8056050 <fchmod@plt+0xc320>
nop
add    %edx,%esi
add    %edx,%edi
cmp    %esi,%ebp
jbe    8056088 <fchmod@plt+0xc358>
mov    %ebp,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x806a900(,%ebx,8),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
mov    %eax,%edx
lea    -0x1(%eax),%eax
cmp    $0xfffffffd,%eax
jbe    8056048 <fchmod@plt+0xc318>
mov    $0x5,%edx
mov    %ebx,%eax
call   8055690 <fchmod@plt+0xb960>
jmp    805600e <fchmod@plt+0xc2de>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
jmp    8056013 <fchmod@plt+0xc2e3>
xor    %eax,%eax
xchg   %ax,%ax
jmp    8056013 <fchmod@plt+0xc2e3>
call   80497a0 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x98(%esp),%eax
lea    0x2c(%esp),%edi
mov    0x90(%esp),%ebx
movl   $0x8062e06,0xc(%esp)
mov    0x94(%esp),%ebp
movl   $0x40,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    %edi,%edx
mov    %ebx,%eax
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     8056170 <fchmod@plt+0xc440>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   8049740 <signal@plt>
mov    %ebp,0x4(%esp)
mov    %eax,%esi
mov    0x98(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x806a8e4(,%ebx,8),%eax
mov    %eax,(%esp)
call   805bad0 <argp_parse+0xdb0>
mov    %esi,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%edi
call   8049740 <signal@plt>
cmp    0x98(%esp),%edi
je     8056178 <fchmod@plt+0xc448>
mov    %ebx,%eax
mov    $0x5,%edx
call   8055690 <fchmod@plt+0xb960>
mov    %edi,%eax
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8056194 <fchmod@plt+0xc464>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805615b <fchmod@plt+0xc42b>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   8055870 <fchmod@plt+0xbb40>
test   %eax,%eax
js     8056170 <fchmod@plt+0xc440>
cmp    %eax,%edi
je     8056190 <fchmod@plt+0xc460>
mov    %eax,%edi
jmp    805614d <fchmod@plt+0xc41d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
jmp    805615b <fchmod@plt+0xc42b>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf8(%esp),%edi
mov    0xf4(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0xcc(%esp)
xor    %eax,%eax
mov    0xfc(%esp),%ebp
test   %edi,%edi
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
js     80563e8 <fchmod@plt+0xc6b8>
movb   $0x0,0x4b(%esp)
lea    0x4b(%esp),%ebx
nop
mov    0x20(%esp),%eax
sub    $0x1,%ebx
mov    0x24(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060d90 <argp_parse+0x6070>
mov    0x24(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x20(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060c60 <argp_parse+0x5f40>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jne    80561e8 <fchmod@plt+0xc4b8>
test   %edi,%edi
mov    %ebx,%eax
js     80563d0 <fchmod@plt+0xc6a0>
cmp    $0x2,%ebp
ja     80563e0 <fchmod@plt+0xc6b0>
mov    %ebx,0x10(%esp)
lea    0x4c(%esp),%ebx
mov    %ebp,0x14(%esp)
movl   $0x8062e0c,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    0xf0(%esp),%eax
mov    %ebx,%edx
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     805633c <fchmod@plt+0xc60c>
mov    0xf0(%esp),%eax
lea    0x8c(%esp),%edx
call   8055760 <fchmod@plt+0xba30>
test   %eax,%eax
je     805633c <fchmod@plt+0xc60c>
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    80562ca <fchmod@plt+0xc59a>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     80562bf <fchmod@plt+0xc58f>
cmp    $0x20,%dl
je     80562bf <fchmod@plt+0xc58f>
xor    %ebx,%ebx
cmp    $0x2d,%dl
sete   %bl
mov    $0x1,%ecx
test   %ebx,%ebx
je     80563c0 <fchmod@plt+0xc690>
add    %eax,%ecx
xor    %edx,%edx
xor    %eax,%eax
mov    %edx,%ebp
mov    %eax,%edi
xchg   %ax,%ax
add    $0x1,%ecx
movsbl -0x1(%ecx),%esi
sub    $0x30,%esi
cmp    $0x9,%esi
ja     80563a0 <fchmod@plt+0xc670>
imul   $0xa,%ebp,%eax
mov    %eax,0x2c(%esp)
mov    %edi,%eax
mov    $0xa,%edi
mul    %edi
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x24(%esp)
add    %eax,0x24(%esp)
test   %ebx,%ebx
je     8056368 <fchmod@plt+0xc638>
mov    0x20(%esp),%edi
mov    %esi,%eax
mov    0x24(%esp),%ebp
cltd
sub    %esi,%edi
sbb    %edx,%ebp
cmp    %ebp,0x24(%esp)
jge    80563a8 <fchmod@plt+0xc678>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
mov    0xcc(%esp),%edi
xor    %gs:0x14,%edi
jne    8056400 <fchmod@plt+0xc6d0>
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %esi,%edi
mov    %esi,%ebp
mov    0x24(%esp),%edx
sar    $0x1f,%ebp
add    %eax,%edi
adc    %edx,%ebp
cmp    %ebp,%edx
jl     80562f0 <fchmod@plt+0xc5c0>
jg     805633c <fchmod@plt+0xc60c>
cmp    %edi,0x20(%esp)
ja     805633c <fchmod@plt+0xc60c>
add    $0x1,%ecx
movsbl -0x1(%ecx),%esi
sub    $0x30,%esi
cmp    $0x9,%esi
jbe    8056303 <fchmod@plt+0xc5d3>
xchg   %ax,%ax
mov    %edi,%eax
mov    %ebp,%edx
jmp    8056346 <fchmod@plt+0xc616>
xchg   %ax,%ax
jg     80562f0 <fchmod@plt+0xc5c0>
cmp    %edi,0x20(%esp)
jb     805633c <fchmod@plt+0xc60c>
jmp    80562f0 <fchmod@plt+0xc5c0>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
cmp    $0x2b,%dl
sete   %cl
jmp    80562e4 <fchmod@plt+0xc5b4>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
cmp    $0x2,%ebp
movb   $0x2d,-0x1(%eax)
jbe    8056259 <fchmod@plt+0xc529>
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,%edx
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jmp    80561de <fchmod@plt+0xc4ae>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%eax
mov    %gs:0x14,%edi
mov    %edi,0x7c(%esp)
xor    %edi,%edi
mov    0xa8(%esp),%ebx
cmp    $0x801c6d02,%eax
je     8056578 <fchmod@plt+0xc848>
cmp    $0x40086d01,%eax
je     8056478 <fchmod@plt+0xc748>
call   8049a20 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
mov    0x7c(%esp),%edi
xor    %gs:0x14,%edi
jne    8056659 <fchmod@plt+0xc929>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ebp
movb   $0x0,0x3b(%esp)
mov    %ebp,%ecx
sar    $0x1f,%ecx
mov    %ecx,%edi
sar    $0x1f,%edi
mov    %edi,%esi
xor    %ebp,%edi
mov    %edi,0x18(%esp)
mov    %ecx,%edi
xor    %esi,%edi
mov    %edi,0x1c(%esp)
mov    0xa0(%esp),%edi
sub    %esi,0x18(%esp)
sbb    %esi,0x1c(%esp)
lea    0x3b(%esp),%esi
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
sub    $0x1,%esi
mov    0x1c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060d90 <argp_parse+0x6070>
mov    0x1c(%esp),%edx
add    $0x30,%eax
mov    %al,(%esi)
mov    0x18(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060c60 <argp_parse+0x5f40>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    80564b0 <fchmod@plt+0xc780>
test   %ebp,%ebp
mov    %esi,%eax
mov    %edi,0xa0(%esp)
js     8056638 <fchmod@plt+0xc908>
mov    %esi,0x14(%esp)
movswl (%ebx),%eax
lea    0x3c(%esp),%ebx
movl   $0x8062e14,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   8049d20 <__sprintf_chk@plt>
mov    0xa0(%esp),%eax
mov    %ebx,%edx
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     8056457 <fchmod@plt+0xc727>
mov    0xa0(%esp),%eax
call   8055870 <fchmod@plt+0xbb40>
jmp    8056457 <fchmod@plt+0xc727>
xchg   %ax,%ax
mov    0xa0(%esp),%eax
mov    $0x8063624,%edx
call   80556e0 <fchmod@plt+0xb9b0>
cmp    $0xffffffff,%eax
je     805664f <fchmod@plt+0xc91f>
mov    0xa0(%esp),%eax
call   8055870 <fchmod@plt+0xbb40>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     805664f <fchmod@plt+0xc91f>
cmp    $0x8,%eax
ja     8056644 <fchmod@plt+0xc914>
test   %eax,%eax
mov    0xa0(%esp),%edi
jne    80565c8 <fchmod@plt+0xc898>
jmp    8056608 <fchmod@plt+0xc8d8>
nop
sub    %eax,%esi
add    %eax,%ebx
test   %esi,%esi
jle    8056608 <fchmod@plt+0xc8d8>
mov    0x806a900(,%edi,8),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805e9d0 <argp_parse+0x3cb0>
lea    -0x1(%eax),%edx
cmp    $0xfffffffd,%edx
jbe    80565c0 <fchmod@plt+0xc890>
mov    %edi,%eax
mov    $0x5,%edx
mov    %edi,0xa0(%esp)
call   8055690 <fchmod@plt+0xb960>
mov    $0xffffffff,%eax
jmp    8056457 <fchmod@plt+0xc727>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xff,(%ebx)
jle    805662f <fchmod@plt+0xc8ff>
test   %esi,%esi
je     805662f <fchmod@plt+0xc8ff>
xor    %eax,%eax
xchg   %ax,%ax
movzbl (%ebx,%eax,1),%ecx
movzbl 0x1(%ebx,%eax,1),%edx
mov    %cl,0x1(%ebx,%eax,1)
mov    %dl,(%ebx,%eax,1)
add    $0x2,%eax
cmp    %esi,%eax
jb     8056618 <fchmod@plt+0xc8e8>
xor    %eax,%eax
jmp    8056457 <fchmod@plt+0xc727>
xchg   %ax,%ax
sub    $0x1,%esi
movb   $0x2d,-0x1(%eax)
jmp    805651f <fchmod@plt+0xc7ef>
call   8049a20 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    8056457 <fchmod@plt+0xc727>
call   80497a0 <__stack_chk_fail@plt>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
je     8056730 <fchmod@plt+0xca00>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     8056758 <fchmod@plt+0xca28>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x7(%edx)
je     8056740 <fchmod@plt+0xca10>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x8(%edx)
movb   $0x0,0x9(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80566ac <fchmod@plt+0xc97c>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x8(%edx)
movb   $0x0,0x9(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80566ea <fchmod@plt+0xc9ba>
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062e2a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062e2a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
call   804fbc0 <fchmod@plt+0x5e90>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062e38,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%edi
lea    0x22(%esp),%ebx
call   8049a20 <__errno_location@plt>
mov    (%eax),%esi
mov    0x44(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8056660 <fchmod@plt+0xc930>
mov    %edi,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062e4f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049790 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x806ae58
00
jne    8056921 <fchmod@plt+0xcbf1>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062f08,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0x10(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e6c,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e6c,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e72,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   805d540 <argp_parse+0x2820>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062e77,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e92,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e98,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062e9f,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ea5,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ea5,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ea5,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eaa,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   8049a20 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x10(%esp)
movl   $0x8062f38,0x8(%esp)
movl   $0x8062f6c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   8049ca0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x806ae58
00
jne    8056c15 <fchmod@plt+0xcee5>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   8049a20 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x10(%esp)
movl   $0x8062fa0,0x8(%esp)
movl   $0x8062fdc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   8049ca0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8056ccb <fchmod@plt+0xcf9b>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80497a0 <__stack_chk_fail@plt>
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eaa,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   8049a20 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x10(%esp)
movl   $0x8062f38,0x8(%esp)
movl   $0x8062f6c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   8049ca0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
call   804fbc0 <fchmod@plt+0x5e90>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eaf,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eaf,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eb8,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ebe,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ebe,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ec6,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   8049a20 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebp
mov    (%eax),%ebx
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8062ecb,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x806ae58
00
jne    8056eed <fchmod@plt+0xd1bd>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ec6,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   8049a20 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebp
mov    (%eax),%ebx
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   805eac0 <argp_parse+0x3da0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8063018,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8056fb3 <fchmod@plt+0xd283>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80497a0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   8049a20 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   805d540 <argp_parse+0x2820>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805e800 <argp_parse+0x3ae0>
movl   $0x5,0x8(%esp)
movl   $0x8063038,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049790 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ee1,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ee1,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ee1,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x80616c6,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x80616c6,(%esp)
mov    %eax,0x4(%esp)
call   8056830 <fchmod@plt+0xcb00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ee6,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062eed,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062ef3,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062efb,(%esp)
mov    %eax,0x4(%esp)
call   8056760 <fchmod@plt+0xca30>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     80571d8 <fchmod@plt+0xd4a8>
mov    %esi,0xc(%esp)
movl   $0x5,0x10(%esp)
movl   $0x8063058,0x8(%esp)
movl   $0x8063078,0x4(%esp)
movl   $0x0,(%esp)
call   8049ca0 <dcngettext@plt>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
movl   $0x2,0x806ae58
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x34(%esp)
movl   $0x8062efb,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8056760 <fchmod@plt+0xca30>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062efb,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8062f01,(%esp)
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xcaa0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    805cd90 <argp_parse+0x2070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x2c,%esp
test   %ecx,%ecx
mov    (%eax),%edi
je     80572c8 <fchmod@plt+0xd598>
lea    0x1(%ecx),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x1c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   80496e0 <memcpy@plt>
test   %edi,%edi
movb   $0x0,(%ebx,%esi,1)
je     80572d6 <fchmod@plt+0xd5a6>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   805d230 <argp_parse+0x2510>
test   %eax,%eax
je     805730b <fchmod@plt+0xd5db>
cmp    %ebx,%eax
je     8057310 <fchmod@plt+0xd5e0>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   805f3e0 <argp_parse+0x46c0>
test   %edi,%edi
mov    %eax,%ebx
jne    805729e <fchmod@plt+0xd56e>
movl   $0x0,0x10(%esp)
movl   $0x8057230,0xc(%esp)
movl   $0x8057250,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   805ce00 <argp_parse+0x20e0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x0(%ebp)
jne    805729e <fchmod@plt+0xd56e>
call   805c300 <argp_parse+0x15e0>
mov    0x40(%esp),%eax
test   %eax,%eax
je     8057330 <fchmod@plt+0xd600>
mov    0x40(%esp),%eax
mov    %ebx,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    80572bc <fchmod@plt+0xd58c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %ecx,%ecx
mov    0x8(%esp),%edx
movl   $0x0,0x4(%esp)
jmp    8057260 <fchmod@plt+0xd530>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x20(%esp),%edx
test   %edx,%edx
je     8057382 <fchmod@plt+0xd652>
mov    0x24(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   805cb90 <argp_parse+0x1e70>
test   %eax,%eax
setne  %al
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x806ae5c,%eax
test   %eax,%eax
je     80573ad <fchmod@plt+0xd67d>
mov    %eax,(%esp)
call   805c9c0 <argp_parse+0x1ca0>
mov    $0x1,%edx
test   %eax,%eax
jne    80573c5 <fchmod@plt+0xd695>
mov    0x806ae60,%eax
xor    %edx,%edx
test   %eax,%eax
je     80573c5 <fchmod@plt+0xd695>
mov    %eax,(%esp)
call   805c9c0 <argp_parse+0x1ca0>
test   %eax,%eax
setne  %dl
mov    %edx,%eax
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpb   $0x0,0x58(%esp)
mov    0x50(%esp),%ebx
mov    0x54(%esp),%esi
je     805743a <fchmod@plt+0xd70a>
cmpb   $0x0,(%ebx)
jne    8057522 <fchmod@plt+0xd7f2>
mov    %esi,%eax
mov    $0x8063097,%edi
movzbl %al,%esi
mov    0x8063148(,%esi,4),%eax
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049790 <dcgettext@plt>
movl   $0x8063224,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   80498b0 <error@plt>
jmp    8057485 <fchmod@plt+0xd755>
mov    %ebx,%eax
xor    %edi,%edi
xchg   %ax,%ax
movzbl (%eax),%ecx
test   %cl,%cl
je     8057466 <fchmod@plt+0xd736>
cmp    $0x2e,%cl
je     8057490 <fchmod@plt+0xd760>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x2f,%cl
je     8057440 <fchmod@plt+0xd710>
movzbl (%eax),%ecx
test   %cl,%cl
jne    8057450 <fchmod@plt+0xd720>
movzbl (%eax),%ecx
test   %cl,%cl
jne    8057447 <fchmod@plt+0xd717>
add    %ebx,%edi
cmpb   $0x2f,(%edi)
je     80574aa <fchmod@plt+0xd77a>
mov    %edi,%ecx
sub    %ebx,%ecx
jne    80574b8 <fchmod@plt+0xd788>
cmpb   $0x0,(%edi)
jne    8057485 <fchmod@plt+0xd755>
cmp    %ebx,%edi
je     80573ef <fchmod@plt+0xd6bf>
mov    $0x8063097,%edi
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0x2e,0x1(%eax)
jne    8057450 <fchmod@plt+0xd720>
movzbl 0x2(%eax),%edx
test   %dl,%dl
je     80574a3 <fchmod@plt+0xd773>
cmp    $0x2f,%dl
jne    8057450 <fchmod@plt+0xd720>
lea    0x2(%eax),%edi
sub    %ebx,%edi
jmp    8057450 <fchmod@plt+0xd720>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
je     80574aa <fchmod@plt+0xd77a>
mov    %edi,%ecx
sub    %ebx,%ecx
je     8057473 <fchmod@plt+0xd743>
mov    %esi,%eax
lea    0x2c(%esp),%edx
movzbl %al,%ebp
mov    %edx,(%esp)
lea    0x806ae5c(,%ebp,4),%eax
mov    %ebx,%edx
call   8057260 <fchmod@plt+0xd530>
test   %al,%al
je     8057473 <fchmod@plt+0xd743>
mov    0x8063150(,%ebp,4),%eax
mov    0x2c(%esp),%edx
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   8049790 <dcgettext@plt>
mov    0x1c(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <error@plt>
jmp    8057473 <fchmod@plt+0xd743>
mov    %ebx,%edi
jmp    8057485 <fchmod@plt+0xd755>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%esi
mov    %edx,0x18(%esp)
mov    (%eax),%edx
mov    %ecx,0x1c(%esp)
mov    0x8(%eax),%ecx
test   %esi,%esi
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
je     8057608 <fchmod@plt+0xd8d8>
mov    %edx,%ebx
jmp    8057564 <fchmod@plt+0xd834>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     80575a9 <fchmod@plt+0xd879>
mov    0xc(%ebx),%edi
mov    0x4(%ebx),%ebp
test   $0x8,%edi
jne    8057598 <fchmod@plt+0xd868>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8057598 <fchmod@plt+0xd868>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebp,2)
je     8057598 <fchmod@plt+0xd868>
mov    0x14(%esp),%eax
movsbl (%eax),%eax
cmp    %eax,%ebp
je     80575b8 <fchmod@plt+0xd888>
lea    0x0(%esi),%esi
mov    $0x1,%ecx
xor    %eax,%eax
add    $0x18,%ebx
sub    $0x1,%esi
test   %cl,%cl
jne    8057560 <fchmod@plt+0xd830>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
test   $0x4,%edi
mov    $0x1,%ecx
cmove  %ebx,%eax
mov    %eax,0x10(%esp)
xor    %eax,%eax
and    $0x2,%edi
je     80575e0 <fchmod@plt+0xd8b0>
addl   $0x1,0x14(%esp)
jmp    805759f <fchmod@plt+0xd86f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
call   *%eax
test   %eax,%eax
sete   %cl
jmp    80575d5 <fchmod@plt+0xd8a5>
xor    %eax,%eax
jmp    80575a9 <fchmod@plt+0xd879>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
testb  $0x8,0xc(%edx)
mov    0x4(%edx),%esi
jne    805763d <fchmod@plt+0xd90d>
lea    -0x1(%esi),%eax
cmp    $0xfe,%eax
ja     805763d <fchmod@plt+0xd90d>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%esi,2)
cmovne %esi,%ebx
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xc,%esp
mov    (%eax),%ebx
test   %ebx,%ebx
je     80576c0 <fchmod@plt+0xd990>
call   8049d00 <__ctype_b_loc@plt>
mov    %ebx,%edx
mov    %eax,%edi
jmp    8057672 <fchmod@plt+0xd942>
lea    0x0(%esi),%esi
mov    %edx,(%esi)
movzbl (%edx),%ecx
add    $0x1,%edx
mov    (%edi),%eax
movzbl %cl,%ebx
movzwl (%eax,%ebx,2),%ebx
test   $0x20,%bh
jne    8057670 <fchmod@plt+0xd940>
xor    %eax,%eax
cmp    $0x2d,%cl
setne  %al
test   %cl,%cl
je     80576b4 <fchmod@plt+0xd984>
and    $0x8,%ebx
je     80576ab <fchmod@plt+0xd97b>
jmp    80576b4 <fchmod@plt+0xd984>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebx
add    $0x1,%edx
testb  $0x8,(%ebx,%ecx,2)
jne    80576b4 <fchmod@plt+0xd984>
mov    %edx,(%esi)
movzbl (%edx),%ecx
test   %cl,%cl
jne    80576a0 <fchmod@plt+0xd970>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x4(%edi),%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
mov    %edx,-0x38(%ebp)
test   %esi,%esi
jne    8057708 <fchmod@plt+0xd9d8>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    80578c4 <fchmod@plt+0xdb94>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
mov    (%edi),%ebx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
mov    %eax,-0x2c(%ebp)
andl   $0xfffffff0,-0x2c(%ebp)
mov    -0x2c(%ebp),%eax
mov    %eax,-0x20(%ebp)
xchg   %ax,%ax
mov    0x14(%ebx),%eax
mov    $0x80588d0,%edx
mov    0x18(%eax),%ecx
lea    -0x20(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
add    $0x1c,%ebx
call   8057530 <fchmod@plt+0xd800>
sub    $0x1,%esi
jne    8057730 <fchmod@plt+0xda00>
mov    -0x20(%ebp),%eax
cmp    %eax,-0x2c(%ebp)
jb     805789c <fchmod@plt+0xdb6c>
mov    0x4(%edi),%esi
mov    (%edi),%ebx
test   %esi,%esi
je     80576f0 <fchmod@plt+0xd9c0>
mov    %edi,-0x2c(%ebp)
mov    -0x38(%ebp),%edi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebx),%eax
mov    $0x80585f0,%edx
mov    0x18(%eax),%ecx
mov    %ebx,%eax
add    $0x1c,%ebx
mov    %edi,(%esp)
call   8057530 <fchmod@plt+0xd800>
sub    $0x1,%esi
jne    8057770 <fchmod@plt+0xda40>
mov    -0x2c(%ebp),%edi
mov    (%edi),%eax
mov    %eax,-0x30(%ebp)
mov    0x4(%edi),%eax
test   %eax,%eax
mov    %eax,-0x3c(%ebp)
je     80576f0 <fchmod@plt+0xd9c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%ecx
mov    0x14(%ecx),%eax
mov    0x4(%ecx),%edi
mov    (%ecx),%esi
mov    0x18(%eax),%eax
test   %edi,%edi
mov    %esi,%ebx
mov    %eax,-0x34(%ebp)
je     8057848 <fchmod@plt+0xdb18>
mov    %edi,-0x2c(%ebp)
jmp    80577d1 <fchmod@plt+0xdaa1>
add    $0x18,%ebx
subl   $0x1,-0x2c(%ebp)
je     8057848 <fchmod@plt+0xdb18>
mov    (%ebx),%edx
test   %edx,%edx
je     80577c8 <fchmod@plt+0xda98>
mov    0xc(%ebx),%eax
test   $0x4,%al
cmove  %ebx,%esi
test   $0x2,%al
jne    80577c8 <fchmod@plt+0xda98>
mov    0x8(%ebx),%ecx
mov    0xc(%esi),%edi
or     %eax,%edi
test   %ecx,%ecx
je     8057878 <fchmod@plt+0xdb48>
test   $0x10,%edi
jne    80577c8 <fchmod@plt+0xda98>
test   $0x8,%al
jne    80577c8 <fchmod@plt+0xda98>
test   %ecx,%ecx
je     8057880 <fchmod@plt+0xdb50>
mov    -0x34(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
and    $0x1,%edi
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
mov    %eax,0x8(%esp)
je     8057860 <fchmod@plt+0xdb30>
mov    -0x38(%ebp),%eax
add    $0x18,%ebx
movl   $0x806315f,0x4(%esp)
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
subl   $0x1,-0x2c(%ebp)
jne    80577d1 <fchmod@plt+0xdaa1>
lea    0x0(%esi),%esi
addl   $0x1c,-0x30(%ebp)
subl   $0x1,-0x3c(%ebp)
jne    80577a8 <fchmod@plt+0xda78>
jmp    80576f0 <fchmod@plt+0xd9c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x38(%ebp),%eax
movl   $0x806316c,0x4(%esp)
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
jmp    80577c8 <fchmod@plt+0xda98>
mov    0x8(%esi),%ecx
jmp    80577f3 <fchmod@plt+0xdac3>
mov    -0x38(%ebp),%eax
mov    %edx,0x8(%esp)
movl   $0x8063177,0x4(%esp)
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
jmp    80577c8 <fchmod@plt+0xda98>
lea    0x1(%eax),%edx
mov    %edx,-0x20(%ebp)
movb   $0x0,(%eax)
mov    -0x2c(%ebp),%eax
movl   $0x8063158,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
jmp    805775c <fchmod@plt+0xda2c>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0xc(%eax),%edx
test   %edx,%edx
jne    80578e2 <fchmod@plt+0xdbb2>
jmp    80578f1 <fchmod@plt+0xdbc1>
mov    %ebx,%edx
mov    0x18(%edx),%ebx
mov    %edx,(%esp)
call   80496d0 <free@plt>
test   %ebx,%ebx
jne    80578e0 <fchmod@plt+0xdbb0>
mov    0x4(%esi),%eax
test   %eax,%eax
je     805790d <fchmod@plt+0xdbdd>
mov    (%esi),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %esi,(%esp)
call   80496d0 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x54(%esp),%esi
mov    0x10(%ebx),%edx
mov    0x10(%esi),%ecx
mov    0xc(%ebx),%eax
mov    0xc(%esi),%edi
cmp    %ecx,%edx
je     8057a80 <fchmod@plt+0xdd50>
test   %edx,%edx
je     80579d2 <fchmod@plt+0xdca2>
test   %ecx,%ecx
je     8057992 <fchmod@plt+0xdc62>
mov    0x14(%edx),%eax
mov    0x14(%ecx),%edi
cmp    %eax,%edi
jge    805796a <fchmod@plt+0xdc3a>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%edx),%edx
mov    0x14(%edx),%eax
cmp    %eax,%edi
jl     8057960 <fchmod@plt+0xdc30>
cmp    %eax,%edi
jle    8057a04 <fchmod@plt+0xdcd4>
lea    0x0(%esi),%esi
mov    0xc(%ecx),%ecx
cmp    0x14(%ecx),%eax
jge    8057a04 <fchmod@plt+0xdcd4>
mov    0xc(%ecx),%ecx
cmp    0x14(%ecx),%eax
jl     8057978 <fchmod@plt+0xdc48>
jmp    8057a04 <fchmod@plt+0xdcd4>
xchg   %ax,%ax
mov    %eax,%edx
mov    0xc(%edx),%eax
test   %eax,%eax
jne    8057990 <fchmod@plt+0xdc60>
mov    0x8(%edx),%eax
cmp    %eax,%edi
je     8057b3f <fchmod@plt+0xde0f>
mov    %edi,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     80579b6 <fchmod@plt+0xdc86>
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
jne    80579c6 <fchmod@plt+0xdc96>
test   %edi,%edi
js     8057a58 <fchmod@plt+0xdd28>
test   %eax,%eax
js     8057a58 <fchmod@plt+0xdd28>
sub    %edi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%ecx
mov    0xc(%ecx),%edx
test   %edx,%edx
jne    80579d0 <fchmod@plt+0xdca0>
mov    0x8(%ecx),%ebp
cmp    %ebp,%eax
je     8057b49 <fchmod@plt+0xde19>
mov    %ebp,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8057a60 <fchmod@plt+0xdd30>
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8057a60 <fchmod@plt+0xdd30>
sub    %ebp,%eax
jmp    8057a3e <fchmod@plt+0xdd0e>
lea    0x0(%esi),%esi
mov    %edi,%edx
mov    %eax,%ecx
mov    0xc(%edx),%edi
mov    0xc(%ecx),%eax
cmp    %eax,%edi
jne    8057a00 <fchmod@plt+0xdcd0>
mov    0x4(%ecx),%ebp
mov    0x8(%edx),%eax
mov    0x8(%ecx),%ecx
mov    0x4(%edx),%edi
cmp    %eax,%ecx
je     8057a48 <fchmod@plt+0xdd18>
mov    %ecx,%edx
shr    $0x1f,%edx
test   %dl,%dl
jne    8057a70 <fchmod@plt+0xdd40>
test   %ecx,%ecx
jns    8057a50 <fchmod@plt+0xdd20>
sub    %eax,%ecx
mov    %ecx,%eax
test   %eax,%eax
jne    8057a3e <fchmod@plt+0xdd0e>
mov    0x18(%esi),%eax
cmp    %eax,0x18(%ebx)
sbb    %eax,%eax
or     $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%eax
sub    %edi,%eax
jmp    8057a2f <fchmod@plt+0xdcff>
xchg   %ax,%ax
test   %eax,%eax
js     8057a2b <fchmod@plt+0xdcfb>
sub    %ecx,%eax
jmp    8057a2f <fchmod@plt+0xdcff>
sub    %eax,%edi
mov    %edi,%eax
jmp    8057a3e <fchmod@plt+0xdd0e>
xchg   %ax,%ax
test   %ebp,%ebp
js     8057a68 <fchmod@plt+0xdd38>
test   %eax,%eax
jns    80579f6 <fchmod@plt+0xdcc6>
sub    %eax,%ebp
mov    %ebp,%eax
jmp    8057a3e <fchmod@plt+0xdd0e>
xchg   %ax,%ax
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8057a27 <fchmod@plt+0xdcf7>
sub    %ecx,%eax
jmp    8057a2f <fchmod@plt+0xdcff>
lea    0x0(%esi),%esi
cmp    %edi,%eax
jne    80579a4 <fchmod@plt+0xdc74>
mov    0x14(%ebx),%eax
mov    $0x8057610,%edx
mov    0x18(%eax),%ecx
mov    %ebx,%eax
movl   $0x0,(%esp)
call   8057530 <fchmod@plt+0xd800>
mov    $0x8057610,%edx
mov    %eax,0x18(%esp)
mov    0x14(%esi),%eax
mov    0x18(%eax),%ecx
mov    %esi,%eax
movl   $0x0,(%esp)
call   8057530 <fchmod@plt+0xd800>
mov    (%ebx),%ecx
mov    (%esi),%edx
mov    0x4(%ebx),%edi
mov    0xc(%ecx),%ebp
mov    %eax,0x1c(%esp)
mov    0xc(%edx),%eax
and    $0x8,%ebp
mov    %eax,0x14(%esp)
andl   $0x8,0x14(%esp)
test   %edi,%edi
je     8057af4 <fchmod@plt+0xddc4>
nop
mov    (%ecx),%eax
test   %eax,%eax
je     8057aec <fchmod@plt+0xddbc>
testb  $0x2,0xc(%ecx)
je     8057af6 <fchmod@plt+0xddc6>
add    $0x18,%ecx
sub    $0x1,%edi
jne    8057ae0 <fchmod@plt+0xddb0>
xor    %eax,%eax
mov    %eax,0x28(%esp)
mov    0x4(%esi),%eax
test   %eax,%eax
je     8057b1c <fchmod@plt+0xddec>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%ecx
test   %ecx,%ecx
je     8057b14 <fchmod@plt+0xdde4>
testb  $0x2,0xc(%edx)
je     8057b1e <fchmod@plt+0xddee>
add    $0x18,%edx
sub    $0x1,%eax
jne    8057b08 <fchmod@plt+0xddd8>
xor    %ecx,%ecx
test   %ebp,%ebp
mov    %ecx,0x2c(%esp)
jne    8057b62 <fchmod@plt+0xde32>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    8057b53 <fchmod@plt+0xde23>
mov    0x14(%esp),%edi
cmp    %edi,%ebp
je     8057b6f <fchmod@plt+0xde3f>
mov    %ebp,%eax
sub    %edi,%eax
jmp    80579c8 <fchmod@plt+0xdc98>
mov    $0x1,%eax
jmp    8057a3e <fchmod@plt+0xdd0e>
mov    $0xffffffff,%eax
jmp    8057a3e <fchmod@plt+0xdd0e>
lea    0x2c(%esp),%eax
call   8057650 <fchmod@plt+0xd920>
mov    %eax,0x14(%esp)
jmp    8057b2e <fchmod@plt+0xddfe>
lea    0x28(%esp),%eax
call   8057650 <fchmod@plt+0xd920>
mov    %eax,%ebp
jmp    8057b26 <fchmod@plt+0xddf6>
movzbl 0x1c(%esp),%eax
or     0x18(%esp),%al
jne    8057b9b <fchmod@plt+0xde6b>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8057bf7 <fchmod@plt+0xdec7>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     8057bea <fchmod@plt+0xdeba>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <strcasecmp@plt>
jmp    8057a2f <fchmod@plt+0xdcff>
cmpb   $0x0,0x18(%esp)
je     8057c08 <fchmod@plt+0xded8>
mov    0x18(%esp),%eax
movzbl %al,%ebp
mov    %eax,%edi
shl    $0x2,%ebp
mov    0x1c(%esp),%eax
test   %al,%al
mov    %eax,%edx
je     8057bfb <fchmod@plt+0xdecb>
mov    %edx,0x14(%esp)
call   8049ce0 <__ctype_tolower_loc@plt>
mov    0x14(%esp),%edx
movzbl %dl,%edx
mov    (%eax),%ecx
mov    (%ecx,%ebp,1),%eax
sub    (%ecx,%edx,4),%eax
jne    8057a3e <fchmod@plt+0xdd0e>
mov    %edi,%eax
movzbl %al,%edi
mov    %edx,%eax
sub    %edi,%eax
je     8057a33 <fchmod@plt+0xdd03>
jmp    8057a3e <fchmod@plt+0xdd0e>
movzbl (%eax),%edi
mov    %edi,%eax
movzbl %al,%ebp
shl    $0x2,%ebp
jmp    8057bae <fchmod@plt+0xde7e>
xor    %ebp,%ebp
xor    %edi,%edi
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8057c16 <fchmod@plt+0xdee6>
movzbl (%eax),%edx
jmp    8057bb8 <fchmod@plt+0xde88>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    8057bea <fchmod@plt+0xdeba>
xor    %ebp,%ebp
xor    %edi,%edi
jmp    8057bae <fchmod@plt+0xde7e>
xor    %edx,%edx
jmp    8057bb8 <fchmod@plt+0xde88>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x1c(%eax),%eax
sub    0x18(%ebx),%eax
cmp    0x10(%ebx),%eax
ja     8057c88 <fchmod@plt+0xdf58>
mov    0x14(%ebx),%ecx
xor    %eax,%eax
test   %ecx,%ecx
cmovns 0x14(%ebx),%eax
sub    %eax,%edx
mov    %edx,%esi
jmp    8057c54 <fchmod@plt+0xdf24>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0x20,(%eax)
sub    $0x1,%esi
test   %esi,%esi
jle    8057c80 <fchmod@plt+0xdf50>
mov    0x1c(%ebx),%eax
cmp    0x20(%ebx),%eax
jb     8057c48 <fchmod@plt+0xdf18>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8057c51 <fchmod@plt+0xdf21>
mov    0x1c(%ebx),%eax
jmp    8057c48 <fchmod@plt+0xdf18>
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   805f480 <argp_parse+0x4760>
mov    0xc(%esp),%edx
jmp    8057c32 <fchmod@plt+0xdf02>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    0x14(%ecx),%eax
test   %eax,%eax
je     8057cd8 <fchmod@plt+0xdfa8>
mov    0x20(%esp),%eax
mov    %edx,%edi
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   805ba30 <argp_parse+0xd10>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   *0x14(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    8057cf0 <fchmod@plt+0xdfc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%edx),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,%ecx
mov    $0x2000003,%edx
mov    %eax,%ebp
mov    0x10(%esi),%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   8057ca0 <fchmod@plt+0xdf70>
test   %eax,%eax
mov    %eax,%ebx
je     8057e09 <fchmod@plt+0xe0d9>
cmpb   $0x0,(%eax)
je     8057dff <fchmod@plt+0xe0cf>
mov    0x8(%esi),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8057d5c <fchmod@plt+0xe02c>
mov    0x4(%esi),%edi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8057f08 <fchmod@plt+0xe1d8>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    0x4(%esi),%eax
mov    0x806a938,%edx
call   8057c20 <fchmod@plt+0xdef0>
mov    0x4(%esi),%edx
mov    0x806a938,%eax
mov    0x1c(%edx),%edi
mov    %eax,0xc(%esp)
mov    %edi,%ecx
sub    0x18(%edx),%ecx
cmp    0x10(%edx),%ecx
ja     8057e48 <fchmod@plt+0xe118>
mov    %eax,0x4(%edx)
mov    %edx,%ecx
mov    %eax,0xc(%ecx)
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   8049950 <strlen@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     8057dd6 <fchmod@plt+0xe0a6>
lea    (%edi,%eax,1),%eax
cmp    %eax,0x20(%edx)
jb     8057e20 <fchmod@plt+0xe0f0>
mov    %ecx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
call   80496e0 <memcpy@plt>
mov    0x10(%esp),%edx
mov    0xc(%esp),%ecx
add    %ecx,0x1c(%edx)
mov    0x4(%esi),%edx
mov    0x1c(%edx),%edi
mov    %edi,%eax
mov    %edx,%ecx
sub    0x18(%edx),%eax
cmp    0x10(%edx),%eax
ja     8057eb8 <fchmod@plt+0xe188>
cmp    %edi,0x20(%ecx)
movl   $0x0,0x4(%edx)
jbe    8057ede <fchmod@plt+0xe1ae>
lea    0x1(%edi),%eax
mov    %eax,0x1c(%ecx)
movb   $0xa,(%edi)
mov    0x8(%esi),%eax
movl   $0x1,0x4(%eax)
cmp    %ebp,%ebx
je     8057e15 <fchmod@plt+0xe0e5>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %ecx,0x10(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
test   %eax,%eax
je     8057dd0 <fchmod@plt+0xe0a0>
mov    0x1c(%edx),%edi
jmp    8057dad <fchmod@plt+0xe07d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x4(%esi),%ecx
mov    0x806a938,%eax
mov    0x1c(%ecx),%edi
mov    %eax,0x18(%esp)
mov    0xc(%esp),%eax
mov    %edi,%edx
sub    0x18(%ecx),%edx
mov    %edx,0x10(%esp)
mov    0x10(%ecx),%edx
mov    %edx,0x14(%esp)
mov    0x1c(%esp),%edx
mov    %eax,0x4(%edx)
mov    0x14(%esp),%edx
cmp    %edx,0x10(%esp)
mov    0x18(%esp),%eax
jbe    8057f28 <fchmod@plt+0xe1f8>
mov    %ecx,(%esp)
mov    %eax,0x10(%esp)
mov    %ecx,0xc(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x4(%esi),%edx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%eax
mov    0x1c(%edx),%edi
jmp    8057d8c <fchmod@plt+0xe05c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x4(%esi),%ecx
mov    0xc(%esp),%edx
mov    0x1c(%ecx),%edi
cmp    %edi,0x20(%ecx)
movl   $0x0,0x4(%edx)
ja     8057df6 <fchmod@plt+0xe0c6>
mov    %ecx,(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0xc(%esp),%ecx
test   %eax,%eax
je     8057dff <fchmod@plt+0xe0cf>
mov    0x1c(%ecx),%edi
jmp    8057df6 <fchmod@plt+0xe0c6>
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8057d5c <fchmod@plt+0xe02c>
mov    0x1c(%edi),%eax
jmp    8057d53 <fchmod@plt+0xe023>
mov    %ecx,%edx
jmp    8057d8c <fchmod@plt+0xe05c>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    0xc(%edx),%ebx
test   %ebx,%ebx
je     8057fd8 <fchmod@plt+0xe2a8>
mov    0x8(%edx),%eax
mov    (%edx),%edx
mov    0x4(%eax),%ecx
mov    (%eax),%ebx
mov    0x10(%edx),%ebp
test   %ecx,%ecx
je     8057f7b <fchmod@plt+0xe24b>
test   %ebx,%ebx
je     8057f7b <fchmod@plt+0xe24b>
mov    0xc(%ebx),%eax
cmp    %eax,0xc(%edx)
je     8057f7b <fchmod@plt+0xe24b>
mov    0x4(%esi),%edx
mov    0x1c(%edx),%eax
cmp    0x20(%edx),%eax
jae    8058060 <fchmod@plt+0xe330>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edx)
movb   $0xa,(%eax)
test   %ebp,%ebp
je     8058018 <fchmod@plt+0xe2e8>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8058018 <fchmod@plt+0xe2e8>
cmpb   $0x0,(%eax)
je     8058018 <fchmod@plt+0xe2e8>
test   %ebx,%ebx
je     8057fa8 <fchmod@plt+0xe278>
mov    0x10(%ebx),%ebx
cmp    %ebp,%ebx
je     8058018 <fchmod@plt+0xe2e8>
test   %ebx,%ebx
jne    805800c <fchmod@plt+0xe2dc>
xchg   %ax,%ax
mov    0x4(%esi),%edx
mov    %esi,%ecx
mov    0xc(%edx),%ebx
mov    0x10(%ebp),%edx
call   8057cf0 <fchmod@plt+0xdfc0>
mov    0x4(%esi),%ebp
mov    0x1c(%ebp),%edx
mov    %ebp,%eax
sub    0x18(%ebp),%edx
cmp    0x10(%ebp),%edx
ja     8058050 <fchmod@plt+0xe320>
mov    %ebx,0xc(%ebp)
jmp    805801b <fchmod@plt+0xe2eb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%ebx
mov    0x1c(%ebx),%eax
lea    0x2(%eax),%edx
cmp    %edx,0x20(%ebx)
jb     8058030 <fchmod@plt+0xe300>
mov    $0x202c,%edx
mov    %dx,(%eax)
addl   $0x2,0x1c(%ebx)
mov    0x4(%esi),%eax
add    $0x1c,%esp
mov    %edi,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8057c20 <fchmod@plt+0xdef0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8058013 <fchmod@plt+0xe2e3>
mov    0xc(%ebx),%ebx
cmp    %ebx,%ebp
jne    8058008 <fchmod@plt+0xe2d8>
cmp    %ebx,%ebp
jne    8057fa8 <fchmod@plt+0xe278>
nop
mov    0x4(%esi),%eax
movl   $0x0,0xc(%esi)
add    $0x1c,%esp
mov    %edi,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8057c20 <fchmod@plt+0xdef0>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8057ff2 <fchmod@plt+0xe2c2>
mov    0x1c(%ebx),%eax
jmp    8057fe6 <fchmod@plt+0xe2b6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x4(%esi),%eax
jmp    8057fcc <fchmod@plt+0xe29c>
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0xc(%esp),%edx
test   %eax,%eax
je     8057f7b <fchmod@plt+0xe24b>
mov    0x1c(%edx),%eax
jmp    8057f72 <fchmod@plt+0xe242>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x10(%eax),%esi
mov    %eax,0x1c(%esp)
mov    0xc(%eax),%eax
mov    %edx,0x14(%esp)
mov    0x58(%esp),%edi
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80583b8 <fchmod@plt+0xe688>
movl   $0xb,0x4(%esp)
mov    %eax,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
je     8058438 <fchmod@plt+0xe708>
test   %ebp,%ebp
je     8058410 <fchmod@plt+0xe6e0>
add    $0x1,%eax
mov    %eax,0x18(%esp)
movb   $0x0,0x27(%esp)
mov    0x18(%esp),%ecx
test   %ecx,%ecx
je     80583b8 <fchmod@plt+0xe688>
mov    0x18(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,0x20(%esp)
mov    0x1c(%esp),%ebx
mov    0x14(%ebx),%edx
test   %edx,%edx
je     80583d4 <fchmod@plt+0xe6a4>
mov    0x14(%esp),%edx
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   805ba30 <argp_parse+0xd10>
mov    0x14(%ebx),%edx
cmp    $0x1,%ebp
mov    0x20(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,%ecx
mov    %eax,0x2c(%esp)
sbb    %eax,%eax
add    $0x2000002,%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   *%edx
mov    %eax,%edx
test   %edx,%edx
je     80583e8 <fchmod@plt+0xe6b8>
mov    0x50(%esp),%eax
test   %eax,%eax
je     805817c <fchmod@plt+0xe44c>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8058460 <fchmod@plt+0xe730>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   8049950 <strlen@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
jne    8058338 <fchmod@plt+0xe608>
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
cmp    0x10(%edi),%ebx
ja     805838c <fchmod@plt+0xe65c>
mov    0x14(%edi),%ebx
xor    %eax,%eax
test   %ebx,%ebx
cmovns 0x14(%edi),%eax
cmp    %eax,0x4(%edi)
jb     8058318 <fchmod@plt+0xe5e8>
cmp    0x20(%esp),%edx
mov    $0x1,%ebx
je     80581cc <fchmod@plt+0xe49c>
mov    %edx,(%esp)
call   80496d0 <free@plt>
cmpb   $0x0,0x27(%esp)
jne    80583f8 <fchmod@plt+0xe6c8>
test   %ebp,%ebp
je     80582b1 <fchmod@plt+0xe581>
mov    0x1c(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     80582b1 <fchmod@plt+0xe581>
mov    0x2c(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x2000004,(%esp)
mov    %edx,0x8(%esp)
call   *%eax
test   %eax,%eax
mov    %eax,%ecx
je     80582b1 <fchmod@plt+0xe581>
or     0x50(%esp),%ebx
je     805822c <fchmod@plt+0xe4fc>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8058500 <fchmod@plt+0xe7d0>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ecx,(%esp)
mov    %ecx,0x18(%esp)
call   8049950 <strlen@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebx
je     8058270 <fchmod@plt+0xe540>
mov    0x1c(%edi),%eax
lea    (%eax,%ebx,1),%edx
cmp    %edx,0x20(%edi)
jae    80584b3 <fchmod@plt+0xe783>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    80584b0 <fchmod@plt+0xe780>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   80496d0 <free@plt>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     80584d3 <fchmod@plt+0xe7a3>
mov    0x14(%edi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
cmovns 0x14(%edi),%eax
cmp    %eax,0x4(%edi)
jae    80582ac <fchmod@plt+0xe57c>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80584e0 <fchmod@plt+0xe7b0>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    $0x1,%ebx
test   %esi,%esi
je     8058308 <fchmod@plt+0xe5d8>
mov    (%esi),%eax
test   %eax,%eax
je     8058308 <fchmod@plt+0xe5d8>
mov    0x54(%esp),%edx
test   %edx,%edx
sete   0x18(%esp)
test   $0x1,%bl
je     80582d8 <fchmod@plt+0xe5a8>
jmp    8058528 <fchmod@plt+0xe7f8>
test   %ebx,%ebx
jne    80583a8 <fchmod@plt+0xe678>
mov    0x54(%esp),%ecx
add    $0x10,%esi
xor    %edx,%edx
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %ebx,%ecx
or     0x50(%esp),%ecx
mov    %ebp,%ecx
setne  %dl
mov    %edx,(%esp)
mov    0x14(%esp),%edx
call   8058090 <fchmod@plt+0xe360>
or     %eax,%ebx
mov    (%esi),%eax
test   %eax,%eax
jne    80582d0 <fchmod@plt+0xe5a0>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8058488 <fchmod@plt+0xe758>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
movb   $0xa,(%eax)
jmp    80581b9 <fchmod@plt+0xe489>
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
lea    (%eax,%ebx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    8058362 <fchmod@plt+0xe632>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x28(%esp),%edx
test   %eax,%eax
je     8058196 <fchmod@plt+0xe466>
mov    0x1c(%edi),%eax
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   80496e0 <memcpy@plt>
mov    0x28(%esp),%edx
add    0x1c(%edi),%ebx
mov    %ebx,0x1c(%edi)
sub    0x18(%edi),%ebx
cmp    0x10(%edi),%ebx
jbe    80581a5 <fchmod@plt+0xe475>
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x28(%esp),%edx
jmp    80581a5 <fchmod@plt+0xe475>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x18(%esp)
jne    80582d8 <fchmod@plt+0xe5a8>
jmp    8058308 <fchmod@plt+0xe5d8>
mov    0x1c(%esp),%ebx
movl   $0x0,0x20(%esp)
movb   $0x0,0x27(%esp)
mov    0x14(%ebx),%edx
test   %edx,%edx
jne    8058121 <fchmod@plt+0xe3f1>
mov    0x20(%esp),%edx
movl   $0x0,0x2c(%esp)
test   %edx,%edx
jne    805815f <fchmod@plt+0xe42f>
xor    %ebx,%ebx
cmpb   $0x0,0x27(%esp)
je     80581d7 <fchmod@plt+0xe4a7>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
jmp    80581d7 <fchmod@plt+0xe4a7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edx
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %eax,%ebx
mov    %edx,(%esp)
call   8049af0 <strndup@plt>
test   %ebx,%ebx
setne  0x27(%esp)
mov    %eax,0x18(%esp)
jmp    80580e3 <fchmod@plt+0xe3b3>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
movb   $0x0,0x27(%esp)
je     80580ef <fchmod@plt+0xe3bf>
movl   $0x0,0x20(%esp)
movl   $0x0,0x18(%esp)
jmp    8058112 <fchmod@plt+0xe3e2>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x28(%esp),%edx
test   %eax,%eax
je     805817c <fchmod@plt+0xe44c>
mov    0x1c(%edi),%eax
jmp    8058173 <fchmod@plt+0xe443>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x28(%esp),%edx
test   %eax,%eax
je     80581b9 <fchmod@plt+0xe489>
mov    0x1c(%edi),%eax
jmp    8058324 <fchmod@plt+0xe5f4>
mov    0x1c(%edi),%eax
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80496e0 <memcpy@plt>
mov    0x18(%esp),%ecx
add    %ebx,0x1c(%edi)
jmp    8058270 <fchmod@plt+0xe540>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
jmp    8058287 <fchmod@plt+0xe557>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     80582ac <fchmod@plt+0xe57c>
mov    0x1c(%edi),%eax
jmp    80582a3 <fchmod@plt+0xe573>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x18(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x18(%esp),%ecx
test   %eax,%eax
je     805822c <fchmod@plt+0xe4fc>
mov    0x1c(%edi),%eax
jmp    8058223 <fchmod@plt+0xe4f3>
cmpb   $0x0,0x18(%esp)
jne    80582d8 <fchmod@plt+0xe5a8>
mov    $0x1,%ebx
jmp    8058308 <fchmod@plt+0xe5d8>
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x1c(%eax),%eax
mov    %eax,%ecx
sub    0x18(%ebx),%ecx
cmp    0x10(%ebx),%ecx
ja     8058590 <fchmod@plt+0xe860>
xor    %ecx,%ecx
cmpl   $0x0,0x14(%ebx)
cmovns 0x14(%ebx),%ecx
add    %edx,%ecx
cmp    0x8(%ebx),%ecx
jb     8058578 <fchmod@plt+0xe848>
cmp    %eax,0x20(%ebx)
jbe    80585a8 <fchmod@plt+0xe878>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0xa,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
cmp    %eax,0x20(%ebx)
jbe    80585c8 <fchmod@plt+0xe898>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0x20,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%ebx),%eax
mov    0xc(%esp),%edx
jmp    8058553 <fchmod@plt+0xe823>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8058586 <fchmod@plt+0xe856>
mov    0x1c(%ebx),%eax
jmp    8058569 <fchmod@plt+0xe839>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8058586 <fchmod@plt+0xe856>
mov    0x1c(%ebx),%eax
jmp    805857d <fchmod@plt+0xe84d>
jmp    80585f0 <fchmod@plt+0xe8c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edx
mov    0x8(%esi),%eax
mov    0xc(%edx),%ebx
or     0xc(%esi),%ebx
test   %eax,%eax
je     8058680 <fchmod@plt+0xe950>
test   $0x10,%bl
je     8058620 <fchmod@plt+0xe8f0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
and    $0x1,%ebx
mov    %eax,%edi
jne    8058690 <fchmod@plt+0xe960>
mov    %eax,(%esp)
call   8049950 <strlen@plt>
lea    0x6(%eax),%edx
mov    0x2c(%esp),%eax
call   8058540 <fchmod@plt+0xe810>
mov    %edi,0xc(%esp)
mov    0x4(%esi),%eax
movl   $0x806318a,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edx),%eax
test   %eax,%eax
jne    805860b <fchmod@plt+0xe8db>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
movl   $0x806317f,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   805fac0 <argp_parse+0x4da0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    (%ecx),%eax
mov    0x10(%edi),%ebx
movl   $0x5,0x8(%esp)
mov    0x50(%esp),%esi
mov    %edx,0x14(%esp)
mov    0x54(%esp),%ebp
mov    %eax,0x20(%esp)
mov    0x8(%edi),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    0x14(%esp),%ecx
mov    $0x2000006,%edx
mov    %ecx,(%esp)
mov    %edi,%ecx
mov    %eax,0x24(%esp)
call   8057ca0 <fchmod@plt+0xdf70>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80588a8 <fchmod@plt+0xeb78>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049a00 <strchrnul@plt>
cmpb   $0x0,(%eax)
mov    %eax,0x10(%esp)
jne    8058828 <fchmod@plt+0xeaf8>
mov    0x18(%esp),%edi
movb   $0x0,0x28(%esp)
mov    0x10(%esp),%eax
lea    0x1(%eax),%edx
mov    %ebp,%eax
sub    %edi,%edx
call   8058540 <fchmod@plt+0xe810>
mov    0x10(%esp),%edx
mov    0x1c(%ebp),%eax
sub    %edi,%edx
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%ebp)
jae    8058781 <fchmod@plt+0xea51>
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x2c(%esp)
call   805f9f0 <argp_parse+0x4cd0>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     805879c <fchmod@plt+0xea6c>
mov    0x1c(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   80496e0 <memcpy@plt>
mov    0x2c(%esp),%edx
add    %edx,0x1c(%ebp)
mov    0x18(%esp),%eax
cmp    %eax,0x24(%esp)
je     80587ae <fchmod@plt+0xea7e>
mov    %eax,(%esp)
call   80496d0 <free@plt>
test   %ebx,%ebx
je     80587ea <fchmod@plt+0xeaba>
mov    (%ebx),%eax
test   %eax,%eax
je     80587ea <fchmod@plt+0xeaba>
mov    %esi,%edx
mov    0x14(%esp),%edi
mov    %ebp,%esi
mov    0x1c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %ebp,%ecx
mov    %edi,%edx
mov    %esi,0x4(%esp)
add    $0x10,%ebx
call   80586c0 <fchmod@plt+0xe990>
xor    %edx,%edx
test   %eax,%eax
mov    (%ebx),%eax
sete   %dl
test   %eax,%eax
jne    80587c8 <fchmod@plt+0xea98>
mov    %edx,%esi
test   %esi,%esi
je     8058888 <fchmod@plt+0xeb58>
cmpb   $0x0,0x28(%esp)
je     8058888 <fchmod@plt+0xeb58>
mov    0x10(%esp),%eax
cmpb   $0x0,(%eax)
mov    0x20(%esp),%eax
jne    8058898 <fchmod@plt+0xeb68>
cmpb   $0x0,(%eax)
jle    80588ba <fchmod@plt+0xeb8a>
movb   $0x0,(%eax)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movsbl (%eax),%eax
test   %eax,%eax
mov    %eax,%ecx
jle    80588c1 <fchmod@plt+0xeb91>
mov    0x10(%esp),%eax
xor    %edx,%edx
mov    %ebx,0x28(%esp)
mov    %ecx,%ebx
mov    %esi,0x50(%esp)
mov    %edx,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edi
add    $0x1,%esi
movl   $0xa,0x4(%esp)
mov    %edi,(%esp)
call   8049a00 <strchrnul@plt>
cmp    %ebx,%esi
jl     8058850 <fchmod@plt+0xeb20>
mov    0x28(%esp),%ebx
mov    0x50(%esp),%esi
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
movb   $0x1,0x28(%esp)
addl   $0x1,(%eax)
jmp    8058745 <fchmod@plt+0xea15>
nop
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
addb   $0x1,(%eax)
add    $0x3c,%esp
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x0,0x28(%esp)
movl   $0x0,0x10(%esp)
jmp    80587ae <fchmod@plt+0xea7e>
xor    %eax,%eax
jmp    805881c <fchmod@plt+0xeaec>
mov    0x18(%esp),%edi
jmp    8058876 <fchmod@plt+0xeb46>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%eax
mov    0x8(%eax),%ecx
test   %ecx,%ecx
je     80588e0 <fchmod@plt+0xebb0>
xor    %eax,%eax
pop    %ebx
ret
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
test   %edx,%edx
jne    80588dc <fchmod@plt+0xebac>
mov    0xc(%ecx),%edx
or     0xc(%eax),%edx
and    $0x10,%edx
jne    80588dc <fchmod@plt+0xebac>
mov    0x14(%esp),%edx
mov    0x14(%esp),%ebx
mov    0x4(%eax),%eax
mov    (%edx),%edx
lea    0x1(%edx),%ecx
mov    %ecx,(%ebx)
mov    %al,(%edx)
jmp    80588dc <fchmod@plt+0xebac>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    0x30(%esp),%ebp
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
je     8058990 <fchmod@plt+0xec60>
testb  $0x1,(%edx)
jne    8058960 <fchmod@plt+0xec30>
mov    %esi,(%esp)
mov    %ecx,%edi
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049790 <dcgettext@plt>
mov    %edi,0x34(%esp)
mov    %ebx,0x30(%esp)
mov    %eax,0x38(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805fac0 <argp_parse+0x4da0>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0x34(%esp)
mov    %ebx,0x30(%esp)
mov    %eax,0x38(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805fac0 <argp_parse+0x4da0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x10(%eax),%ecx
mov    (%eax),%esi
movl   $0x10,(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
mov    %ecx,0x24(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     8058eda <fchmod@plt+0xf1aa>
mov    0x2c(%esp),%eax
test   %esi,%esi
movl   $0x0,0x4(%eax)
movl   $0x0,0xc(%eax)
je     8058b8c <fchmod@plt+0xee5c>
testb  $0x4,0xc(%esi)
jne    8058efe <fchmod@plt+0xf1ce>
xor    %edx,%edx
mov    %esi,%ebx
mov    %esi,0x18(%esp)
mov    %eax,%edi
mov    %edx,%esi
movl   $0x0,0x14(%esp)
jmp    8058a46 <fchmod@plt+0xed16>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%eax
test   $0x4,%al
jne    8058a1d <fchmod@plt+0xeced>
add    $0x1,%esi
mov    %esi,0x4(%edi)
test   $0x8,%al
jne    8058a43 <fchmod@plt+0xed13>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8058a43 <fchmod@plt+0xed13>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
movzwl (%eax,%ebp,2),%eax
and    $0x4000,%ax
cmp    $0x1,%ax
sbbl   $0xffffffff,0x14(%esp)
add    $0x18,%ebx
mov    0x4(%ebx),%ebp
test   %ebp,%ebp
jne    8058a10 <fchmod@plt+0xece0>
mov    (%ebx),%eax
test   %eax,%eax
jne    8058a10 <fchmod@plt+0xece0>
mov    0x10(%ebx),%eax
test   %eax,%eax
jne    8058a10 <fchmod@plt+0xece0>
mov    0x14(%ebx),%eax
test   %eax,%eax
jne    8058a10 <fchmod@plt+0xece0>
mov    %esi,%edx
mov    0x18(%esp),%esi
imul   $0x1c,%edx,%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   80498e0 <malloc@plt>
mov    0x2c(%esp),%edi
mov    %eax,%ebp
mov    0x14(%esp),%eax
mov    %ebp,(%edi)
add    $0x1,%eax
mov    %eax,(%esp)
call   80498e0 <malloc@plt>
test   %ebp,%ebp
mov    0x1c(%esp),%edx
mov    %eax,%ecx
mov    %eax,0x18(%esp)
mov    %ecx,0x8(%edi)
je     8058fe6 <fchmod@plt+0xf2b6>
mov    0x18(%esp),%eax
test   %eax,%eax
je     8058fe6 <fchmod@plt+0xf2b6>
cmp    $0x9249249,%edx
ja     8058fc2 <fchmod@plt+0xf292>
mov    0x4(%esi),%edx
mov    0x18(%esp),%ebx
movl   $0x0,0x14(%esp)
mov    %edx,%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jne    8058ade <fchmod@plt+0xedae>
mov    (%esi),%eax
test   %eax,%eax
je     8058f96 <fchmod@plt+0xf266>
mov    0x14(%esi),%eax
test   %eax,%eax
mov    %esi,0x0(%ebp)
movl   $0x0,0x4(%ebp)
mov    %ebx,0x8(%ebp)
je     8058f7f <fchmod@plt+0xf24f>
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
mov    $0x1,%edi
mov    0xc(%esi),%edx
mov    %ebp,0x1c(%esp)
mov    %eax,0xc(%ebp)
mov    0x3c(%esp),%eax
mov    %eax,0x10(%ebp)
mov    0x38(%esp),%eax
mov    %eax,0x14(%ebp)
mov    %ecx,%ebp
lea    0x0(%esi),%esi
and    $0x8,%edx
jne    8058b60 <fchmod@plt+0xee30>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8058b60 <fchmod@plt+0xee30>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebp,2)
je     8058b60 <fchmod@plt+0xee30>
mov    0x18(%esp),%edx
mov    %ebp,%eax
cmp    %ebx,%edx
jae    8058f48 <fchmod@plt+0xf218>
cmp    (%edx),%al
je     8058b60 <fchmod@plt+0xee30>
nop
add    $0x1,%edx
cmp    %ebx,%edx
je     8058f48 <fchmod@plt+0xf218>
cmp    (%edx),%al
jne    8058b50 <fchmod@plt+0xee20>
nop
add    $0x18,%esi
mov    0x4(%esi),%eax
test   %eax,%eax
jne    8058b74 <fchmod@plt+0xee44>
mov    (%esi),%ebp
test   %ebp,%ebp
je     8058f58 <fchmod@plt+0xf228>
mov    0xc(%esi),%edx
lea    0x1(%edi),%ecx
test   $0x4,%dl
je     8058f6e <fchmod@plt+0xf23e>
mov    %ecx,%edi
mov    %eax,%ebp
jmp    8058b20 <fchmod@plt+0xedf0>
movb   $0x0,(%ebx)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8058ca6 <fchmod@plt+0xef76>
mov    (%eax),%ecx
test   %ecx,%ecx
je     8058ca6 <fchmod@plt+0xef76>
mov    0x2c(%esp),%eax
add    $0xc,%eax
mov    %eax,0x4c(%esp)
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0xc(%eax),%edi
test   %edi,%edi
jne    8058e95 <fchmod@plt+0xf165>
mov    0x24(%esp),%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
je     8058ea4 <fchmod@plt+0xf174>
mov    0x38(%esp),%ebp
mov    0x24(%esp),%esi
sub    0x10(%ebp),%esi
movl   $0x1c,(%esp)
call   80498e0 <malloc@plt>
sar    $0x4,%esi
test   %eax,%eax
mov    %eax,%edx
je     8058c22 <fchmod@plt+0xeef2>
mov    %edi,0x8(%eax)
mov    %ebx,(%eax)
mov    %esi,0x4(%eax)
mov    0x3c(%esp),%eax
mov    %ebp,0x10(%edx)
test   %eax,%eax
mov    %eax,0xc(%edx)
je     8058e9d <fchmod@plt+0xf16d>
mov    0x14(%eax),%eax
mov    %eax,0x14(%esp)
add    $0x1,%eax
mov    0x2c(%esp),%ecx
mov    %eax,0x14(%edx)
mov    0xc(%ecx),%eax
mov    %edx,0xc(%ecx)
mov    %eax,0x18(%edx)
mov    0x24(%esp),%eax
mov    (%eax),%eax
call   80589a0 <fchmod@plt+0xec70>
mov    %eax,0x30(%esp)
mov    0x2c(%esp),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
jne    8058c4a <fchmod@plt+0xef1a>
jmp    8058ead <fchmod@plt+0xf17d>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x18(%edx),%eax
test   %eax,%eax
jne    8058c48 <fchmod@plt+0xef18>
add    $0x18,%edx
mov    0x30(%esp),%ecx
mov    0x4(%ecx),%esi
mov    0xc(%ecx),%eax
test   %esi,%esi
mov    %eax,(%edx)
movl   $0x0,0xc(%ecx)
je     8058c8a <fchmod@plt+0xef5a>
mov    0x2c(%esp),%edi
mov    0x4(%edi),%ebx
test   %ebx,%ebx
jne    8058cb2 <fchmod@plt+0xef82>
mov    (%ecx),%eax
mov    %esi,0x4(%edi)
mov    %eax,(%edi)
mov    0x8(%ecx),%eax
mov    %eax,0x8(%edi)
movl   $0x0,0x4(%ecx)
mov    0x30(%esp),%eax
call   80578d0 <fchmod@plt+0xdba0>
addl   $0x10,0x24(%esp)
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    8058bb0 <fchmod@plt+0xee80>
mov    0x2c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    (%ebx,%esi,1),%eax
mov    %eax,0x44(%esp)
imul   $0x1c,%eax,%eax
mov    %eax,(%esp)
call   80498e0 <malloc@plt>
mov    0x2c(%esp),%edi
mov    0x8(%edi),%ebp
mov    %eax,0x40(%esp)
mov    %ebp,(%esp)
call   8049950 <strlen@plt>
mov    0x30(%esp),%ecx
mov    %eax,%edi
mov    0x8(%ecx),%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
lea    0x1(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8058eb6 <fchmod@plt+0xf186>
mov    0x40(%esp),%edx
test   %edx,%edx
je     8058eb6 <fchmod@plt+0xf186>
cmpl   $0x9249249,0x44(%esp)
ja     8058f22 <fchmod@plt+0xf1f2>
mov    0x30(%esp),%eax
imul   $0x1c,%ebx,%ecx
imul   $0x1c,%esi,%esi
mov    (%eax),%edx
mov    0x2c(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edx,0x18(%esp)
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x48(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049ae0 <mempcpy@plt>
mov    0x18(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80496e0 <memcpy@plt>
mov    0x28(%esp),%esi
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80496e0 <memcpy@plt>
mov    0x40(%esp),%eax
mov    %esi,%edx
mov    0x14(%esp),%ecx
sub    %ebp,%edx
add    %edx,0x8(%eax)
add    $0x1c,%eax
sub    $0x1,%ebx
jne    8058d80 <fchmod@plt+0xf050>
mov    0x28(%esp),%eax
add    0x40(%esp),%ecx
lea    (%eax,%edi,1),%ebp
mov    0x30(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %ebp,0x1c(%esp)
mov    0x8(%eax),%ecx
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8058e1c <fchmod@plt+0xf0ec>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x4(%eax),%esi
mov    %edi,0x8(%eax)
mov    (%eax),%ebx
test   %esi,%esi
je     8058e10 <fchmod@plt+0xf0e0>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x8,0xc(%ebx)
movzbl (%ecx),%edx
mov    0x4(%ebx),%edi
jne    8058e08 <fchmod@plt+0xf0d8>
lea    -0x1(%edi),%eax
cmp    $0xfe,%eax
ja     8058e08 <fchmod@plt+0xf0d8>
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   8049d00 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%edi,2)
je     8058e08 <fchmod@plt+0xf0d8>
movsbl %dl,%eax
cmp    %edi,%eax
je     8058e60 <fchmod@plt+0xf130>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ebx
sub    $0x1,%esi
jne    8058dc8 <fchmod@plt+0xf098>
addl   $0x1c,0x20(%esp)
subl   $0x1,0x34(%esp)
jne    8058db0 <fchmod@plt+0xf080>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x2c(%esp),%edi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %edi,%eax
mov    0x40(%esp),%edi
mov    0x44(%esp),%ecx
mov    %edi,(%eax)
mov    0x28(%esp),%edi
mov    %ecx,0x4(%eax)
mov    %edi,0x8(%eax)
jmp    8058c8a <fchmod@plt+0xef5a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
cmp    %ebp,%eax
jb     8058e77 <fchmod@plt+0xf147>
jmp    8058e80 <fchmod@plt+0xf150>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ebp,%eax
je     8058e80 <fchmod@plt+0xf150>
cmp    (%eax),%dl
jne    8058e70 <fchmod@plt+0xf140>
add    $0x1,%ecx
jmp    8058e08 <fchmod@plt+0xf0d8>
mov    0x1c(%esp),%eax
add    $0x1,%ecx
mov    %dl,(%eax)
add    $0x1,%eax
mov    %eax,0x1c(%esp)
jmp    8058e08 <fchmod@plt+0xf0d8>
mov    0x8(%eax),%ebx
jmp    8058bce <fchmod@plt+0xee9e>
xor    %eax,%eax
jmp    8058c12 <fchmod@plt+0xeee2>
mov    0x3c(%esp),%edx
jmp    8058c22 <fchmod@plt+0xeef2>
mov    0x4c(%esp),%edx
jmp    8058c54 <fchmod@plt+0xef24>
movl   $0x80634e0,0xc(%esp)
movl   $0x371,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x80631c5,(%esp)
call   8049cf0 <__assert_fail@plt>
movl   $0x80634eb,0xc(%esp)
movl   $0x1bb,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x80631a9,(%esp)
call   8049cf0 <__assert_fail@plt>
movl   $0x80634eb,0xc(%esp)
movl   $0x1c5,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x80631ad,(%esp)
call   8049cf0 <__assert_fail@plt>
movl   $0x80634e0,0xc(%esp)
movl   $0x373,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x806333c,(%esp)
call   8049cf0 <__assert_fail@plt>
xchg   %ax,%ax
mov    %al,(%ebx)
add    $0x1,%ebx
jmp    8058b60 <fchmod@plt+0xee30>
lea    0x0(%esi),%esi
mov    0x10(%esi),%ecx
test   %ecx,%ecx
jne    8058b74 <fchmod@plt+0xee44>
mov    0x14(%esi),%edx
test   %edx,%edx
jne    8058b74 <fchmod@plt+0xee44>
mov    0x1c(%esp),%ebp
mov    %eax,%ecx
mov    %edi,0x4(%ebp)
add    $0x1c,%ebp
jmp    8058ad0 <fchmod@plt+0xeda0>
mov    (%esi),%eax
test   %eax,%eax
jne    8058afa <fchmod@plt+0xedca>
cmp    $0x1,%ecx
adcl   $0x0,0x14(%esp)
jmp    8058afa <fchmod@plt+0xedca>
mov    0x10(%esi),%edi
mov    0x14(%esi),%eax
test   %edi,%edi
jne    8058ae1 <fchmod@plt+0xedb1>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8058b89 <fchmod@plt+0xee59>
mov    %esi,0x0(%ebp)
movl   $0x0,0x4(%ebp)
mov    %ebx,0x8(%ebp)
jmp    8058afa <fchmod@plt+0xedca>
movl   $0x80634eb,0xc(%esp)
movl   $0x1d5,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x80632fc,(%esp)
call   8049cf0 <__assert_fail@plt>
movl   $0x80634eb,0xc(%esp)
movl   $0x1d3,0x8(%esp)
movl   $0x8063193,0x4(%esp)
movl   $0x80632d8,(%esp)
call   8049cf0 <__assert_fail@plt>
lea    0x0(%esi),%esi
test   %edx,%edx
je     8059072 <fchmod@plt+0xf342>
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %edx,0xc(%esp)
mov    0x4(%edi),%edx
mov    (%edi),%ebx
test   %edx,%edx
je     8059054 <fchmod@plt+0xf324>
mov    %edx,%ebp
xchg   %ax,%ax
mov    (%ebx),%eax
test   %eax,%eax
je     805904c <fchmod@plt+0xf31c>
testb  $0x2,0xc(%ebx)
jne    805904c <fchmod@plt+0xf31c>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
je     8059068 <fchmod@plt+0xf338>
add    $0x18,%ebx
sub    $0x1,%ebp
jne    8059030 <fchmod@plt+0xf300>
add    $0x1c,%edi
subl   $0x1,0xc(%esp)
jne    8059023 <fchmod@plt+0xf2f3>
xor    %eax,%eax
jmp    805906a <fchmod@plt+0xf33a>
lea    0x0(%esi),%esi
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
test   %eax,%eax
je     80590d8 <fchmod@plt+0xf3a8>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
test   %ebx,%ebx
je     80590cf <fchmod@plt+0xf39f>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     80590cf <fchmod@plt+0xf39f>
add    $0x10,%ebx
lea    0x0(%esi),%esi
mov    0x10(%ecx),%edx
add    $0x10,%ebx
mov    0x8(%ecx),%eax
call   8059080 <fchmod@plt+0xf350>
mov    -0x10(%ebx),%ecx
add    %eax,%esi
test   %ecx,%ecx
jne    80590b8 <fchmod@plt+0xf388>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %esi,%esi
jmp    80590a5 <fchmod@plt+0xf375>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x100(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0xdc(%esp)
xor    %eax,%eax
mov    0x10c(%esp),%edi
test   %esi,%esi
je     8059258 <argp_failure+0x178>
testb  $0x2,0x10(%esi)
jne    805922a <argp_failure+0x14a>
mov    0x2c(%esi),%ebx
test   %ebx,%ebx
je     805922a <argp_failure+0x14a>
mov    %ebx,(%esp)
call   8049b90 <flockfile@plt>
test   %esi,%esi
je     8059248 <argp_failure+0x168>
mov    0x28(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049930 <fputs_unlocked@plt>
test   %edi,%edi
je     8059190 <argp_failure+0xb0>
mov    0x14(%ebx),%eax
lea    0x110(%esp),%ebp
cmp    0x18(%ebx),%eax
jae    805930a <argp_failure+0x22a>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80592e0 <argp_failure+0x200>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049660 <__vfprintf_chk@plt>
mov    0x108(%esp),%edx
test   %edx,%edx
je     80591f8 <argp_failure+0x118>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80592cb <argp_failure+0x1eb>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80592f5 <argp_failure+0x215>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
lea    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x108(%esp),%eax
movl   $0xc8,0x8(%esp)
mov    %eax,(%esp)
call   8049a60 <strerror_r@plt>
test   %eax,%eax
je     8059278 <argp_failure+0x198>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <fputs@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80592b6 <argp_failure+0x1d6>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   80499e0 <funlockfile@plt>
mov    0x104(%esp),%eax
test   %eax,%eax
je     805922a <argp_failure+0x14a>
test   %esi,%esi
je     8059263 <argp_failure+0x183>
testb  $0x20,0x10(%esi)
je     8059263 <argp_failure+0x183>
mov    0xdc(%esp),%eax
xor    %gs:0x14,%eax
jne    80592b1 <argp_failure+0x1d1>
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x806a980,%eax
jmp    8059137 <argp_failure+0x57>
lea    0x0(%esi),%esi
mov    0x806a984,%ebx
jmp    805911c <argp_failure+0x3c>
mov    0x104(%esp),%eax
mov    %eax,(%esp)
call   8049920 <exit@plt>
lea    0x0(%esi),%esi
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   8049900 <strerror@plt>
test   %eax,%eax
jne    80591ec <argp_failure+0x10c>
movl   $0x5,0x8(%esp)
movl   $0x80631de,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
jmp    80591ec <argp_failure+0x10c>
call   80497a0 <__stack_chk_fail@plt>
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    805920d <argp_failure+0x12d>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    80591b0 <argp_failure+0xd0>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    8059178 <argp_failure+0x98>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    80591c5 <argp_failure+0xe5>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    8059163 <argp_failure+0x83>
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xc(%ebp),%esi
mov    %eax,-0x88(%ebp)
mov    %edx,-0x64(%ebp)
mov    %ecx,-0x84(%ebp)
mov    %esi,-0x6c(%ebp)
mov    %gs:0x14,%esi
mov    %esi,-0x1c(%ebp)
xor    %esi,%esi
test   %ecx,%ecx
je     8059408 <argp_failure+0x328>
mov    %ecx,(%esp)
call   8049b90 <flockfile@plt>
mov    0x806a944,%eax
test   %eax,%eax
je     805979e <argp_failure+0x6be>
mov    0x806a940,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   805f410 <argp_parse+0x46f0>
test   %eax,%eax
mov    %eax,%edi
je     805a570 <argp_failure+0x1490>
testb  $0xb,0x8(%ebp)
movl   $0x0,-0x74(%ebp)
jne    8059a98 <argp_failure+0x9b8>
xor    %ebx,%ebx
testb  $0x3,0x8(%ebp)
jne    8059b25 <argp_failure+0xa45>
testb  $0x10,0x8(%ebp)
jne    8059ca4 <argp_failure+0xbc4>
testb  $0x4,0x8(%ebp)
jne    8059c62 <argp_failure+0xb82>
testb  $0x8,0x8(%ebp)
jne    8059480 <argp_failure+0x3a0>
testb  $0x20,0x8(%ebp)
jne    8059775 <argp_failure+0x695>
testb  $0x40,0x8(%ebp)
jne    8059420 <argp_failure+0x340>
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   80499e0 <funlockfile@plt>
mov    -0x74(%ebp),%eax
test   %eax,%eax
je     8059400 <argp_failure+0x320>
call   80578d0 <fchmod@plt+0xdba0>
mov    %edi,(%esp)
call   805f9a0 <argp_parse+0x4c80>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    805a605 <argp_failure+0x1525>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x806a88c,%eax
test   %eax,%eax
je     80593e6 <argp_failure+0x306>
test   %ebx,%ebx
mov    %eax,%esi
je     805944a <argp_failure+0x36a>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a476 <argp_failure+0x1396>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    0x806a88c,%esi
mov    -0x88(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x8063269,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805fac0 <argp_parse+0x4da0>
jmp    80593e6 <argp_failure+0x306>
mov    -0x74(%ebp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     80593d6 <argp_failure+0x2f6>
test   %ebx,%ebx
je     805a390 <argp_failure+0x12b0>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a59c <argp_failure+0x14bc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    -0x74(%ebp),%eax
mov    -0x74(%ebp),%esi
mov    0x4(%eax),%eax
mov    (%esi),%esi
movl   $0x0,-0x50(%ebp)
movl   $0x0,-0x4c(%ebp)
test   %eax,%eax
mov    %esi,-0x60(%ebp)
movl   $0x0,-0x48(%ebp)
mov    %eax,-0x90(%ebp)
je     8059766 <argp_failure+0x686>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x60(%ebp),%eax
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
mov    (%eax),%esi
mov    0x8(%eax),%eax
mov    %esi,-0x5c(%ebp)
mov    0x10(%edi),%esi
mov    %eax,-0x6c(%ebp)
cmp    %esi,%ebx
ja     805a198 <argp_failure+0x10b8>
mov    0x4(%edi),%eax
movl   $0x0,0x4(%edi)
movl   $0x0,-0x80(%ebp)
mov    %eax,-0x78(%ebp)
mov    0xc(%edi),%eax
movl   $0x1,-0x38(%ebp)
mov    %edi,-0x40(%ebp)
mov    %eax,-0x7c(%ebp)
mov    -0x60(%ebp),%eax
mov    %eax,-0x44(%ebp)
lea    -0x50(%ebp),%eax
mov    %eax,-0x3c(%ebp)
mov    -0x64(%ebp),%eax
mov    %eax,-0x34(%ebp)
mov    -0x5c(%ebp),%eax
mov    0xc(%eax),%ecx
mov    %ecx,%eax
and    $0x8,%eax
mov    %eax,-0x68(%ebp)
jne    8059576 <argp_failure+0x496>
mov    -0x60(%ebp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     8059576 <argp_failure+0x496>
mov    -0x5c(%ebp),%eax
lea    0x0(%esi),%esi
cmpl   $0x0,(%eax)
je     8059567 <argp_failure+0x487>
testb  $0x2,0xc(%eax)
je     805a21a <argp_failure+0x113a>
add    $0x18,%eax
sub    $0x1,%edx
jne    8059558 <argp_failure+0x478>
movl   $0x0,-0x80(%ebp)
cmp    %esi,%ebx
mov    0x806a928,%eax
ja     805a1c0 <argp_failure+0x10e0>
mov    %eax,0xc(%edi)
mov    -0x60(%ebp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8059600 <argp_failure+0x520>
mov    -0x5c(%ebp),%eax
mov    %edi,-0x70(%ebp)
mov    %ecx,%edi
mov    %eax,%ebx
add    $0xc,%eax
mov    %eax,-0x8c(%ebp)
jmp    80595ab <argp_failure+0x4cb>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edi
test   $0x8,%edi
mov    0x4(%ebx),%edx
jne    80595e8 <argp_failure+0x508>
lea    -0x1(%edx),%eax
cmp    $0xfe,%eax
ja     80595e8 <argp_failure+0x508>
mov    %edx,-0x68(%ebp)
call   8049d00 <__ctype_b_loc@plt>
mov    -0x68(%ebp),%edx
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%edx,2)
je     80595e8 <argp_failure+0x508>
mov    -0x6c(%ebp),%eax
movsbl (%eax),%eax
cmp    %eax,%edx
je     8059f00 <argp_failure+0xe20>
lea    0x0(%esi),%esi
add    $0x18,%ebx
sub    $0x1,%esi
jne    80595a8 <argp_failure+0x4c8>
mov    -0x5c(%ebp),%eax
mov    -0x70(%ebp),%edi
mov    0xc(%eax),%eax
mov    %eax,-0x68(%ebp)
andl   $0x8,-0x68(%ebp)
mov    -0x68(%ebp),%eax
test   %eax,%eax
je     805a080 <argp_failure+0xfa0>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x806a930,%ebx
ja     805a259 <argp_failure+0x1179>
mov    -0x60(%ebp),%eax
mov    %ebx,0xc(%edi)
mov    -0x5c(%ebp),%ebx
mov    0x4(%eax),%esi
test   %esi,%esi
jne    8059644 <argp_failure+0x564>
jmp    80596d0 <argp_failure+0x5f0>
lea    0x0(%esi),%esi
add    $0x18,%ebx
sub    $0x1,%esi
je     80596d0 <argp_failure+0x5f0>
mov    (%ebx),%eax
test   %eax,%eax
je     8059638 <argp_failure+0x558>
cmpb   $0x0,(%eax)
je     8059638 <argp_failure+0x558>
testb  $0x2,0xc(%ebx)
jne    8059638 <argp_failure+0x558>
mov    0x806a930,%eax
lea    -0x44(%ebp),%edx
call   8057f30 <fchmod@plt+0xe200>
testb  $0x20,0xc(%ebx)
je     805a226 <argp_failure+0x1146>
mov    (%ebx),%eax
mov    %eax,-0x68(%ebp)
mov    -0x68(%ebp),%eax
mov    %eax,(%esp)
call   8049950 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     8059638 <argp_failure+0x558>
mov    0x1c(%edi),%eax
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    80596a6 <argp_failure+0x5c6>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x6c(%ebp)
call   805f9f0 <argp_parse+0x4cd0>
mov    -0x6c(%ebp),%edx
test   %eax,%eax
je     8059638 <argp_failure+0x558>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%ecx
add    $0x18,%ebx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x6c(%ebp)
mov    %ecx,0x4(%esp)
call   80496e0 <memcpy@plt>
mov    -0x6c(%ebp),%edx
add    %edx,0x1c(%edi)
sub    $0x1,%esi
jne    8059644 <argp_failure+0x564>
xchg   %ax,%ax
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     805a1b0 <argp_failure+0x10d0>
movl   $0x0,0x4(%edi)
mov    -0x38(%ebp),%ebx
mov    -0x5c(%ebp),%eax
test   %ebx,%ebx
je     8059f18 <argp_failure+0xe38>
testb  $0x8,0xc(%eax)
mov    0x4(%eax),%ebx
jne    8059718 <argp_failure+0x638>
lea    -0x1(%ebx),%eax
cmp    $0xfe,%eax
ja     8059718 <argp_failure+0x638>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebx,2)
jne    8059725 <argp_failure+0x645>
lea    0x0(%esi),%esi
mov    -0x5c(%ebp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     805a583 <argp_failure+0x14a3>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     805a053 <argp_failure+0xf73>
mov    -0x78(%ebp),%eax
mov    %eax,0x4(%edi)
mov    -0x7c(%ebp),%eax
addl   $0x1c,-0x60(%ebp)
subl   $0x1,-0x90(%ebp)
mov    %eax,0xc(%edi)
jne    80594e0 <argp_failure+0x400>
mov    -0x48(%ebp),%esi
test   %esi,%esi
je     8059766 <argp_failure+0x686>
mov    0x806a924,%ebx
test   %ebx,%ebx
jne    805a496 <argp_failure+0x13b6>
testb  $0x20,0x8(%ebp)
mov    $0x1,%ebx
je     80593e0 <argp_failure+0x300>
mov    -0x64(%ebp),%edx
mov    $0x1,%ecx
mov    -0x88(%ebp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8058090 <fchmod@plt+0xe360>
or     %eax,%ebx
jmp    80593e0 <argp_failure+0x300>
movl   $0x80631fc,(%esp)
call   80498c0 <getenv@plt>
mov    %eax,%esi
mov    0x806a920,%eax
test   %esi,%esi
mov    %eax,-0x44(%ebp)
mov    0x806a924,%eax
mov    %eax,-0x40(%ebp)
mov    0x806a928,%eax
mov    %eax,-0x3c(%ebp)
mov    0x806a92c,%eax
mov    %eax,-0x38(%ebp)
mov    0x806a930,%eax
mov    %eax,-0x34(%ebp)
mov    0x806a934,%eax
mov    %eax,-0x30(%ebp)
mov    0x806a938,%eax
mov    %eax,-0x2c(%ebp)
mov    0x806a93c,%eax
mov    %eax,-0x28(%ebp)
mov    0x806a940,%eax
mov    %eax,-0x24(%ebp)
mov    0x806a944,%eax
mov    %eax,-0x20(%ebp)
je     805936a <argp_failure+0x28a>
movzbl (%esi),%ecx
nop
test   %cl,%cl
mov    %ecx,-0x5c(%ebp)
je     8059970 <argp_failure+0x890>
call   8049d00 <__ctype_b_loc@plt>
mov    -0x5c(%ebp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
jmp    805982e <argp_failure+0x74e>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%ecx
movzbl %cl,%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    8059828 <argp_failure+0x748>
test   $0x4,%dh
mov    %cl,-0x68(%ebp)
je     8059968 <argp_failure+0x888>
mov    %dx,-0x5c(%ebp)
mov    %esi,%ebx
jmp    805985d <argp_failure+0x77d>
xchg   %ax,%ax
add    $0x1,%ebx
movzbl (%ebx),%ecx
movzbl %cl,%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dl
jne    8059850 <argp_failure+0x770>
cmp    $0x2d,%cl
je     8059850 <argp_failure+0x770>
cmp    $0x5f,%cl
je     8059850 <argp_failure+0x770>
mov    %dx,-0x5c(%ebp)
mov    %ebx,%edx
sub    %esi,%edx
testw  $0x2000,-0x5c(%ebp)
mov    %edx,-0x60(%ebp)
je     8059890 <argp_failure+0x7b0>
nop
add    $0x1,%ebx
movzbl (%ebx),%ecx
movzbl %cl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8059880 <argp_failure+0x7a0>
cmp    $0x2c,%cl
je     8059a58 <argp_failure+0x978>
test   %cl,%cl
je     8059a58 <argp_failure+0x978>
cmp    $0x3d,%cl
je     8059e61 <argp_failure+0xd81>
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
and    $0x8,%dh
jne    8059e03 <argp_failure+0xd23>
movl   $0x0,-0x74(%ebp)
movl   $0x0,-0x70(%ebp)
mov    $0x80631f3,%edi
mov    $0x8063500,%ecx
mov    %esi,-0x5c(%ebp)
mov    $0x8,%eax
mov    %ecx,%esi
mov    %ebx,-0x68(%ebp)
mov    %edi,%ebx
mov    -0x60(%ebp),%edi
jmp    80598fd <argp_failure+0x81d>
xchg   %ax,%ax
add    $0xc,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
je     8059a00 <argp_failure+0x920>
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
cmp    %eax,%edi
jne    80598e8 <argp_failure+0x808>
mov    -0x5c(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    80598e8 <argp_failure+0x808>
mov    -0x74(%ebp),%eax
mov    %esi,%ecx
mov    -0x68(%ebp),%ebx
mov    -0x5c(%ebp),%esi
test   %eax,%eax
jne    8059e9f <argp_failure+0xdbf>
mov    -0x70(%ebp),%edi
test   %edi,%edi
js     805a558 <argp_failure+0x1478>
mov    0x8(%ecx),%eax
mov    -0x70(%ebp),%edi
mov    %edi,-0x44(%ebp,%eax,1)
mov    (%ecx),%ecx
test   %ecx,%ecx
je     8059a06 <argp_failure+0x926>
movzbl (%ebx),%ecx
mov    %ebx,%esi
cmp    $0x2c,%cl
jne    8059808 <argp_failure+0x728>
add    $0x1,%esi
movzbl 0x1(%ebx),%ecx
jmp    8059808 <argp_failure+0x728>
lea    0x0(%esi,%eiz,1),%esi
test   %cl,%cl
jne    805a3b8 <argp_failure+0x12d8>
mov    -0x24(%ebp),%ecx
mov    $0x80631f3,%ebx
mov    $0x8063500,%eax
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8059999 <argp_failure+0x8b9>
mov    0x8(%eax),%edx
cmp    $0x20,%edx
je     8059999 <argp_failure+0x8b9>
cmp    %ecx,-0x44(%ebp,%edx,1)
jge    805a429 <argp_failure+0x1349>
add    $0xc,%eax
mov    (%eax),%ebx
test   %ebx,%ebx
jne    8059980 <argp_failure+0x8a0>
mov    -0x44(%ebp),%eax
movl   $0x1,0x806a944
00
mov    %eax,0x806a920
mov    -0x40(%ebp),%eax
mov    %eax,0x806a924
mov    -0x3c(%ebp),%eax
mov    %eax,0x806a928
mov    -0x38(%ebp),%eax
mov    %eax,0x806a92c
mov    -0x34(%ebp),%eax
mov    %eax,0x806a930
mov    -0x30(%ebp),%eax
mov    %eax,0x806a934
mov    -0x2c(%ebp),%eax
mov    %eax,0x806a938
mov    -0x28(%ebp),%eax
mov    %eax,0x806a93c
mov    -0x24(%ebp),%eax
mov    %eax,0x806a940
jmp    805936a <argp_failure+0x28a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x5c(%ebp),%esi
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%edi
movl   $0x5,0x8(%esp)
movl   $0x80633d8,0x4(%esp)
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    -0x60(%ebp),%esi
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
call   80590e0 <argp_failure>
jmp    805994a <argp_failure+0x86a>
lea    0x0(%esi),%esi
cmpb   $0x6e,-0x68(%ebp)
movl   $0x1,-0x74(%ebp)
movl   $0x1,-0x70(%ebp)
jne    80598c8 <argp_failure+0x7e8>
cmpb   $0x6f,0x1(%esi)
jne    80598c8 <argp_failure+0x7e8>
cmpb   $0x2d,0x2(%esi)
jne    80598c8 <argp_failure+0x7e8>
add    $0x3,%esi
subl   $0x3,-0x60(%ebp)
movl   $0x0,-0x70(%ebp)
jmp    80598c8 <argp_failure+0x7e8>
nop
mov    -0x88(%ebp),%eax
xor    %edx,%edx
call   80589a0 <fchmod@plt+0xec70>
mov    $0x806322f,%ecx
mov    0x4(%eax),%ebx
mov    (%eax),%esi
mov    %eax,-0x74(%ebp)
mov    %ebx,%edx
mov    %esi,%eax
call   8059010 <fchmod@plt+0xf2e0>
test   %eax,%eax
je     8059ac6 <argp_failure+0x9e6>
movl   $0xffffffff,0xc(%eax)
mov    $0x80635bd,%ecx
mov    %ebx,%edx
mov    %esi,%eax
call   8059010 <fchmod@plt+0xf2e0>
test   %eax,%eax
je     8059adf <argp_failure+0x9ff>
movl   $0xffffffff,0xc(%eax)
test   %ebx,%ebx
je     80593ac <argp_failure+0x2cc>
mov    %esi,%edx
xor    %eax,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x18(%edx)
add    $0x1,%eax
add    $0x1c,%edx
cmp    %ebx,%eax
jne    8059af0 <argp_failure+0xa10>
movl   $0x8057920,0xc(%esp)
xor    %ebx,%ebx
movl   $0x1c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049bb0 <qsort@plt>
testb  $0x3,0x8(%ebp)
je     80593b8 <argp_failure+0x2d8>
mov    -0x88(%ebp),%ebx
mov    0x10(%ebx),%edx
mov    0x8(%ebx),%eax
call   8059080 <fchmod@plt+0xf350>
lea    0x1e(%eax),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x27(%esp),%esi
mov    %esi,-0x60(%ebp)
andl   $0xfffffff0,-0x60(%ebp)
mov    %eax,0x8(%esp)
mov    -0x60(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80499d0 <memset@plt>
mov    $0x1,%edx
jmp    8059c21 <argp_failure+0xb41>
lea    0x0(%esi),%esi
movl   $0x8063234,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    -0x6c(%ebp),%esi
movl   $0x806323b,0x4(%esp)
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
call   805fac0 <argp_parse+0x4da0>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x806a93c,%edx
ja     8059d68 <argp_failure+0xc88>
testb  $0x2,0x8(%ebp)
mov    0x4(%edi),%esi
mov    %edx,0x4(%edi)
je     8059d50 <argp_failure+0xc70>
mov    -0x74(%ebp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
jne    8059d80 <argp_failure+0xca0>
mov    -0x64(%ebp),%edx
lea    -0x44(%ebp),%ecx
mov    %ebx,%eax
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   80586c0 <fchmod@plt+0xe990>
mov    0x1c(%edi),%edx
mov    %eax,%ecx
mov    %edx,%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     8059d10 <argp_failure+0xc30>
mov    -0x5c(%ebp),%eax
mov    %eax,0xc(%edi)
cmp    %edx,0x20(%edi)
mov    %esi,0x4(%edi)
jbe    8059ce8 <argp_failure+0xc08>
lea    0x1(%edx),%eax
mov    %eax,0x1c(%edi)
movb   $0xa,(%edx)
test   %ecx,%ecx
je     8059df9 <argp_failure+0xd19>
xor    %edx,%edx
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x806a93c,%esi
ja     8059cd0 <argp_failure+0xbf0>
mov    0xc(%edi),%eax
test   %edx,%edx
mov    %esi,0xc(%edi)
movl   $0x5,0x8(%esp)
mov    %eax,-0x5c(%ebp)
mov    -0x60(%ebp),%eax
mov    %eax,-0x44(%ebp)
jne    8059b70 <argp_failure+0xa90>
movl   $0x8063241,0x4(%esp)
jmp    8059b78 <argp_failure+0xa98>
mov    -0x88(%ebp),%eax
mov    $0x1,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063434,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    -0x6c(%ebp),%esi
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   805fac0 <argp_parse+0x4da0>
jmp    80593cc <argp_failure+0x2ec>
mov    -0x64(%ebp),%edx
xor    %ecx,%ecx
mov    -0x88(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   8058090 <fchmod@plt+0xe360>
or     %eax,%ebx
jmp    80593c2 <argp_failure+0x2e2>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    %edx,-0x5c(%ebp)
call   805f480 <argp_parse+0x4760>
mov    -0x5c(%ebp),%edx
jmp    8059c36 <argp_failure+0xb56>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   805f9f0 <argp_parse+0x4cd0>
mov    -0x5c(%ebp),%ecx
test   %eax,%eax
je     8059c17 <argp_failure+0xb37>
mov    0x1c(%edi),%edx
jmp    8059c0e <argp_failure+0xb2e>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    %ecx,-0x68(%ebp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%edx
mov    -0x5c(%ebp),%ecx
mov    %edx,%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %ecx,0xc(%edi)
mov    -0x68(%ebp),%ecx
jbe    8059c02 <argp_failure+0xb22>
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%edx
mov    -0x5c(%ebp),%ecx
jmp    8059c02 <argp_failure+0xb22>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x74(%ebp),%eax
mov    %edi,%edx
call   80576d0 <fchmod@plt+0xd9a0>
orl    $0x2,0x8(%ebp)
jmp    8059bd1 <argp_failure+0xaf1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    %edx,-0x68(%ebp)
call   805f480 <argp_parse+0x4760>
mov    -0x68(%ebp),%edx
jmp    8059bb3 <argp_failure+0xad3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063248,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,-0x68(%ebp)
call   8049950 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     8059bd1 <argp_failure+0xaf1>
mov    0x1c(%edi),%eax
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    8059dd8 <argp_failure+0xcf8>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x70(%ebp)
call   805f9f0 <argp_parse+0x4cd0>
mov    -0x70(%ebp),%edx
test   %eax,%eax
je     8059bd1 <argp_failure+0xaf1>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x70(%ebp)
mov    %ecx,0x4(%esp)
call   80496e0 <memcpy@plt>
mov    -0x70(%ebp),%edx
add    %edx,0x1c(%edi)
jmp    8059bd1 <argp_failure+0xaf1>
mov    $0x1,%ebx
jmp    80593b8 <argp_failure+0x2d8>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049c60 <strtol@plt>
mov    %eax,-0x70(%ebp)
mov    (%edi),%eax
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dh
je     8059e3f <argp_failure+0xd5f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dh
jne    8059e30 <argp_failure+0xd50>
and    $0x20,%dh
je     8059e55 <argp_failure+0xd75>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8059e48 <argp_failure+0xd68>
movl   $0x0,-0x74(%ebp)
jmp    80598c8 <argp_failure+0x7e8>
movzbl 0x1(%ebx),%edx
lea    0x1(%ebx),%ecx
mov    %ecx,%ebx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
je     80598b1 <argp_failure+0x7d1>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
je     80598b1 <argp_failure+0x7d1>
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    8059e78 <argp_failure+0xd98>
jmp    80598b1 <argp_failure+0x7d1>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    805992b <argp_failure+0x84b>
mov    %ecx,-0x5c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x8063378,0x4(%esp)
mov    -0x64(%ebp),%edi
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    -0x60(%ebp),%ecx
mov    %esi,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   80590e0 <argp_failure>
mov    -0x5c(%ebp),%ecx
jmp    8059940 <argp_failure+0x860>
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%edi
je     805a120 <argp_failure+0x1040>
addl   $0x1,-0x6c(%ebp)
jmp    80595e8 <argp_failure+0x508>
lea    0x0(%esi),%esi
mov    0x10(%eax),%eax
xor    %esi,%esi
test   %eax,%eax
je     8059f3f <argp_failure+0xe5f>
mov    %eax,0x4(%esp)
mov    -0x64(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    (%eax),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,%esi
mov    -0x60(%ebp),%eax
mov    0x14(%eax),%ecx
mov    -0x5c(%ebp),%eax
mov    0x4(%eax),%edx
mov    -0x64(%ebp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8057ca0 <fchmod@plt+0xdf70>
test   %eax,%eax
mov    %eax,%ebx
je     805a014 <argp_failure+0xf34>
cmpb   $0x0,(%eax)
je     805a008 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     805a326 <argp_failure+0x1246>
mov    0x14(%edi),%edx
xor    %eax,%eax
mov    0x806a934,%ecx
test   %edx,%edx
cmovns 0x14(%edi),%eax
mov    %eax,-0x5c(%ebp)
mov    %ecx,0x4(%edi)
mov    %ecx,%edx
lea    0x3(%edx),%eax
cmp    %eax,-0x5c(%ebp)
mov    %ecx,0xc(%edi)
jbe    805a2e2 <argp_failure+0x1202>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a3fd <argp_failure+0x131d>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
test   %eax,%eax
mov    %eax,%ecx
je     805a008 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
lea    (%eax,%ecx,1),%edx
cmp    %edx,0x20(%edi)
jae    8059fe9 <argp_failure+0xf09>
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   805f9f0 <argp_parse+0x4cd0>
mov    -0x5c(%ebp),%ecx
test   %eax,%eax
je     805a008 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
mov    %ecx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,-0x5c(%ebp)
call   80496e0 <memcpy@plt>
mov    -0x5c(%ebp),%ecx
add    %ecx,0x1c(%edi)
lea    0x0(%esi),%esi
cmp    %ebx,%esi
je     805a014 <argp_failure+0xf34>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
mov    0x1c(%edi),%eax
mov    %eax,%edx
sub    0x18(%edi),%edx
cmp    0x10(%edi),%edx
ja     805a286 <argp_failure+0x11a6>
cmp    %eax,0x20(%edi)
movl   $0x0,0x4(%edi)
jbe    805a266 <argp_failure+0x1186>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    -0x60(%ebp),%eax
mov    %eax,-0x50(%ebp)
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
jbe    8059734 <argp_failure+0x654>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%eax
mov    -0x78(%ebp),%esi
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %esi,0x4(%edi)
jbe    805973a <argp_failure+0x65a>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
jmp    805973a <argp_failure+0x65a>
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x806a92c,%ebx
ja     805a24c <argp_failure+0x116c>
mov    -0x60(%ebp),%eax
mov    %ebx,0xc(%edi)
mov    0x4(%eax),%esi
test   %esi,%esi
je     80596d0 <argp_failure+0x5f0>
mov    -0x5c(%ebp),%eax
mov    %eax,%ebx
add    $0xc,%eax
mov    %eax,-0x68(%ebp)
jmp    805a0c4 <argp_failure+0xfe4>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ebx
sub    $0x1,%esi
je     80596d0 <argp_failure+0x5f0>
mov    (%ebx),%eax
test   %eax,%eax
je     805a0b8 <argp_failure+0xfd8>
testb  $0x2,0xc(%ebx)
jne    805a0b8 <argp_failure+0xfd8>
mov    0x806a92c,%eax
lea    -0x44(%ebp),%edx
call   8057f30 <fchmod@plt+0xe200>
mov    (%ebx),%eax
movl   $0x806325a,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   805fac0 <argp_parse+0x4da0>
mov    -0x64(%ebp),%ecx
mov    -0x5c(%ebp),%eax
mov    0x8(%eax),%eax
mov    %edi,0x8(%esp)
mov    (%ecx),%edx
mov    $0x806325f,%ecx
mov    0x18(%edx),%edx
movl   $0x8063263,(%esp)
mov    %edx,0x4(%esp)
mov    -0x68(%ebp),%edx
call   8058910 <fchmod@plt+0xebe0>
jmp    805a0b8 <argp_failure+0xfd8>
nop
mov    0x806a928,%eax
lea    -0x44(%ebp),%edx
call   8057f30 <fchmod@plt+0xe200>
mov    -0x70(%ebp),%edi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a2bf <argp_failure+0x11df>
mov    -0x70(%ebp),%edi
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0x2d,(%eax)
mov    -0x6c(%ebp),%eax
mov    -0x70(%ebp),%edi
movzbl (%eax),%edx
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a296 <argp_failure+0x11b6>
mov    -0x70(%ebp),%edi
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
mov    %dl,(%eax)
mov    -0x80(%ebp),%ecx
mov    -0x5c(%ebp),%eax
test   %ecx,%ecx
je     805a1e8 <argp_failure+0x1108>
mov    0x806a920,%edx
test   %edx,%edx
jne    805a1e8 <argp_failure+0x1108>
mov    0x8(%eax),%eax
test   %eax,%eax
je     8059f09 <argp_failure+0xe29>
movl   $0x1,-0x48(%ebp)
jmp    8059f09 <argp_failure+0xe29>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
mov    0x10(%edi),%esi
jmp    80594ff <argp_failure+0x41f>
xchg   %ax,%ax
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
jmp    80596df <argp_failure+0x5ff>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %eax,-0x70(%ebp)
call   805f480 <argp_parse+0x4760>
mov    -0x5c(%ebp),%eax
mov    0xc(%eax),%ecx
mov    %ecx,%eax
and    $0x8,%eax
mov    %eax,-0x68(%ebp)
mov    -0x70(%ebp),%eax
jmp    8059583 <argp_failure+0x4a3>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x70(%ebp),%edi
mov    $0x8063223,%ecx
mov    0x8(%eax),%eax
mov    %edi,0x8(%esp)
mov    -0x64(%ebp),%edi
mov    (%edi),%edx
mov    0x18(%edx),%edx
movl   $0x8063255,(%esp)
mov    %edx,0x4(%esp)
mov    -0x8c(%ebp),%edx
call   8058910 <fchmod@plt+0xebe0>
jmp    8059f09 <argp_failure+0xe29>
movl   $0x1,-0x80(%ebp)
jmp    8059576 <argp_failure+0x496>
movl   $0x5,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    -0x64(%ebp),%eax
mov    (%eax),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %eax,-0x68(%ebp)
jmp    8059671 <argp_failure+0x591>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
jmp    805a095 <argp_failure+0xfb5>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
jmp    8059620 <argp_failure+0x540>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     805a03e <argp_failure+0xf5e>
mov    0x1c(%edi),%eax
jmp    805a035 <argp_failure+0xf55>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%eax
jmp    805a025 <argp_failure+0xf45>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x68(%ebp)
call   805f9f0 <argp_parse+0x4cd0>
mov    -0x68(%ebp),%edx
test   %eax,%eax
je     805a168 <argp_failure+0x1088>
mov    -0x70(%ebp),%eax
mov    0x1c(%eax),%eax
jmp    805a15d <argp_failure+0x107d>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     805a148 <argp_failure+0x1068>
mov    -0x70(%ebp),%eax
mov    0x1c(%eax),%eax
jmp    805a13c <argp_failure+0x105c>
cmp    %edx,-0x5c(%ebp)
jb     805a41d <argp_failure+0x133d>
mov    0x1c(%edi),%eax
lea    0x3(%eax),%edx
cmp    %edx,0x20(%edi)
jae    805a311 <argp_failure+0x1231>
movl   $0x3,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8059fb7 <argp_failure+0xed7>
mov    0x1c(%edi),%eax
mov    $0x2020,%edx
mov    %dx,(%eax)
movb   $0x20,0x2(%eax)
addl   $0x3,0x1c(%edi)
jmp    8059fb7 <argp_failure+0xed7>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x14(%edi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
mov    0x806a934,%ecx
cmovns 0x14(%edi),%eax
mov    %eax,-0x5c(%ebp)
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %ecx,-0x68(%ebp)
jbe    8059f8e <argp_failure+0xeae>
mov    %edi,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%edx
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x806a934,%ecx
mov    %edx,0x4(%edi)
jbe    805a5fc <argp_failure+0x151c>
mov    %edi,(%esp)
mov    %ecx,-0x68(%ebp)
call   805f480 <argp_parse+0x4760>
mov    0x806a934,%edx
mov    -0x68(%ebp),%ecx
jmp    8059f93 <argp_failure+0xeb3>
mov    -0x74(%ebp),%esi
mov    %eax,-0x90(%ebp)
mov    (%esi),%esi
movl   $0x0,-0x50(%ebp)
movl   $0x0,-0x4c(%ebp)
movl   $0x0,-0x48(%ebp)
mov    %esi,-0x60(%ebp)
jmp    80594e0 <argp_failure+0x400>
mov    -0x64(%ebp),%edi
movl   $0x5,0x8(%esp)
movl   $0x806320a,0x4(%esp)
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   80590e0 <argp_failure>
jmp    8059970 <argp_failure+0x890>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8059fb7 <argp_failure+0xed7>
mov    0x1c(%edi),%eax
jmp    8059fae <argp_failure+0xece>
mov    %edi,%eax
call   8057c20 <fchmod@plt+0xdef0>
jmp    8059fb7 <argp_failure+0xed7>
mov    -0x64(%ebp),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063400,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x8063227,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80590e0 <argp_failure>
jmp    805936a <argp_failure+0x28a>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     8059444 <argp_failure+0x364>
mov    0x1c(%edi),%eax
jmp    805943b <argp_failure+0x35b>
mov    -0x64(%ebp),%esi
movl   $0x5,0x8(%esp)
movl   $0x806346c,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    $0x2000005,%edx
mov    %esi,(%esp)
mov    (%esi),%ecx
mov    %eax,-0x5c(%ebp)
call   8057ca0 <fchmod@plt+0xdf70>
test   %eax,%eax
mov    %eax,%ebx
je     8059766 <argp_failure+0x686>
cmpb   $0x0,(%eax)
je     805a542 <argp_failure+0x1462>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    805a5bc <argp_failure+0x14dc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
mov    %eax,%esi
mov    0x1c(%edi),%eax
test   %esi,%esi
je     805a530 <argp_failure+0x1450>
lea    (%eax,%esi,1),%edx
cmp    %edx,0x20(%edi)
jae    805a518 <argp_failure+0x1438>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
mov    0x1c(%edi),%eax
je     805a530 <argp_failure+0x1450>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80496e0 <memcpy@plt>
mov    0x1c(%edi),%eax
add    %esi,%eax
mov    %eax,0x1c(%edi)
cmp    %eax,0x20(%edi)
jbe    805a5dc <argp_failure+0x14fc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
cmp    %ebx,-0x5c(%ebp)
je     8059766 <argp_failure+0x686>
mov    %ebx,(%esp)
call   80496d0 <free@plt>
jmp    8059766 <argp_failure+0x686>
mov    %ecx,-0x5c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x80633a8,0x4(%esp)
jmp    8059ebd <argp_failure+0xddd>
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   80499e0 <funlockfile@plt>
jmp    8059408 <argp_failure+0x328>
mov    -0x60(%ebp),%eax
lea    -0x44(%ebp),%ecx
mov    0x14(%eax),%edx
mov    -0x5c(%ebp),%eax
mov    0x10(%eax),%eax
call   8057cf0 <fchmod@plt+0xdfc0>
jmp    805a03e <argp_failure+0xf5e>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     80594ab <argp_failure+0x3cb>
mov    0x1c(%edi),%eax
jmp    80594a2 <argp_failure+0x3c2>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     805a4ec <argp_failure+0x140c>
mov    0x1c(%edi),%eax
jmp    805a4e3 <argp_failure+0x1403>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     805a542 <argp_failure+0x1462>
mov    0x1c(%edi),%eax
jmp    805a539 <argp_failure+0x1459>
mov    %ecx,%edx
xchg   %ax,%ax
jmp    8059f93 <argp_failure+0xeb3>
call   80497a0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %edi
xor    %eax,%eax
push   %ebx
mov    $0xe,%ecx
sub    $0x54,%esp
lea    0x18(%esp),%edx
mov    0x60(%esp),%ebx
mov    %edx,%edi
rep stos %eax,%es:(%edi)
mov    0x6c(%esp),%eax
mov    0x64(%esp),%ecx
mov    %ebx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8059320 <argp_failure+0x240>
add    $0x54,%esp
pop    %ebx
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x28(%esp),%esi
test   %ebx,%ebx
je     805a6c5 <argp_state_help+0x75>
mov    0x10(%ebx),%eax
test   $0x2,%al
jne    805a6a6 <argp_state_help+0x56>
cmpl   $0x0,0x24(%esp)
je     805a6a6 <argp_state_help+0x56>
mov    %esi,%edx
mov    0x24(%esp),%ecx
or     $0x80,%dl
test   $0x40,%al
mov    0x28(%ebx),%eax
cmovne %edx,%esi
mov    %ebx,%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
call   8059320 <argp_failure+0x240>
testb  $0x20,0x10(%ebx)
jne    805a6a6 <argp_state_help+0x56>
test   $0x100,%esi
jne    805a6b8 <argp_state_help+0x68>
and    $0x200,%esi
jne    805a6ac <argp_state_help+0x5c>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x0,(%esp)
call   8049920 <exit@plt>
mov    0x806a958,%eax
mov    %eax,(%esp)
call   8049920 <exit@plt>
cmpl   $0x0,0x24(%esp)
je     805a6a6 <argp_state_help+0x56>
mov    0x806a980,%eax
xor    %edx,%edx
mov    0x24(%esp),%ecx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8059320 <argp_failure+0x240>
jmp    805a696 <argp_state_help+0x46>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
test   %esi,%esi
je     805a7c8 <argp_error+0xd8>
testb  $0x2,0x10(%esi)
jne    805a7ad <argp_error+0xbd>
mov    0x2c(%esi),%ebx
test   %ebx,%ebx
je     805a7ad <argp_error+0xbd>
mov    %ebx,(%esp)
lea    0x28(%esp),%edi
call   8049b90 <flockfile@plt>
test   %esi,%esi
je     805a7b8 <argp_error+0xc8>
mov    0x28(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049930 <fputs_unlocked@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    805a7d3 <argp_error+0xe3>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    805a7e8 <argp_error+0xf8>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
mov    0x24(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049660 <__vfprintf_chk@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    805a7fd <argp_error+0x10d>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
movl   $0x104,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   805a650 <argp_state_help>
mov    %ebx,(%esp)
call   80499e0 <funlockfile@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806a980,%eax
jmp    805a72e <argp_error+0x3e>
lea    0x0(%esi),%esi
mov    0x806a984,%ebx
jmp    805a70f <argp_error+0x1f>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    805a74f <argp_error+0x5f>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    805a764 <argp_error+0x74>
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <__overflow@plt>
jmp    805a791 <argp_error+0xa1>
nop
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x4,%esp
mov    (%eax),%ecx
mov    0x10(%eax),%esi
test   %ecx,%ecx
je     805a858 <argp_error+0x168>
addl   $0x1,0x8(%edx)
xor    %eax,%eax
jmp    805a82b <argp_error+0x13b>
add    $0x1,%eax
add    $0x18,%ecx
mov    -0x14(%ecx),%edx
test   %edx,%edx
jne    805a828 <argp_error+0x138>
mov    -0x18(%ecx),%edx
test   %edx,%edx
jne    805a828 <argp_error+0x138>
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    805a828 <argp_error+0x138>
mov    -0x4(%ecx),%edx
test   %edx,%edx
jne    805a828 <argp_error+0x138>
lea    (%eax,%eax,2),%edx
add    %eax,0x4(%ebx)
add    %edx,(%ebx)
jmp    805a863 <argp_error+0x173>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     805a863 <argp_error+0x173>
addl   $0x1,0x8(%edx)
test   %esi,%esi
je     805a884 <argp_error+0x194>
mov    (%esi),%eax
test   %eax,%eax
je     805a884 <argp_error+0x194>
lea    0x0(%esi),%esi
mov    %ebx,%edx
add    $0x10,%esi
call   805a810 <argp_error+0x120>
addl   $0x1,0xc(%ebx)
mov    (%esi),%eax
test   %eax,%eax
jne    805a870 <argp_error+0x180>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    (%eax),%edi
mov    %eax,0x20(%esp)
mov    0x10(%eax),%ebp
mov    %edx,0x24(%esp)
mov    %ecx,0x28(%esp)
test   %edi,%edi
mov    %edi,0x14(%esp)
je     805aa64 <argp_error+0x374>
mov    %edi,%ebx
mov    0x54(%esp),%edi
mov    %ebp,0x2c(%esp)
xchg   %ax,%ax
mov    0x4(%ebx),%esi
test   %esi,%esi
jne    805a8d1 <argp_error+0x1e1>
mov    (%ebx),%eax
test   %eax,%eax
je     805aa30 <argp_error+0x340>
mov    0xc(%ebx),%eax
test   $0x4,%al
jne    805a9f8 <argp_error+0x308>
mov    %eax,%edx
mov    %ebx,0x14(%esp)
and    $0x8,%edx
jne    805a9f0 <argp_error+0x300>
test   $0x8,%al
jne    805a947 <argp_error+0x257>
lea    -0x1(%esi),%eax
cmp    $0xfe,%eax
ja     805a947 <argp_error+0x257>
call   8049d00 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%esi,2)
je     805a947 <argp_error+0x257>
mov    0x4(%edi),%eax
mov    %esi,%ecx
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
mov    %cl,(%eax)
mov    0x14(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     805a941 <argp_error+0x251>
mov    0x4(%edi),%eax
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
movb   $0x3a,(%eax)
mov    0x14(%esp),%eax
testb  $0x1,0xc(%eax)
je     805a941 <argp_error+0x251>
mov    0x4(%edi),%eax
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
movb   $0x3a,(%eax)
mov    0x4(%edi),%eax
movb   $0x0,(%eax)
mov    (%ebx),%esi
test   %esi,%esi
je     805a9f0 <argp_error+0x300>
mov    (%edi),%eax
mov    %eax,0x1c(%esp)
mov    0x8(%eax),%eax
mov    %eax,%ebp
mov    %eax,0x18(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     805a986 <argp_error+0x296>
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <strcmp@plt>
test   %eax,%eax
je     805aa08 <argp_error+0x318>
add    $0x10,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805a968 <argp_error+0x278>
mov    0x14(%esp),%ecx
mov    0x8(%edi),%eax
mov    0x8(%ecx),%edx
mov    %esi,(%eax)
test   %edx,%edx
je     805aa27 <argp_error+0x337>
mov    0xc(%ecx),%edx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
add    $0x2,%edx
mov    0x4(%ebx),%ecx
mov    %edx,0x4(%eax)
movl   $0x0,0x8(%eax)
test   %ecx,%ecx
je     805aa58 <argp_error+0x368>
mov    0x1c(%esp),%esi
and    $0xffffff,%ecx
mov    0x50(%esp),%edx
sub    0x34(%esi),%edx
sar    $0x2,%edx
imul   $0x38e38e39,%edx,%edx
add    $0x1,%edx
shl    $0x18,%edx
add    %ecx,%edx
mov    %edx,0xc(%eax)
lea    0x10(%eax),%edx
mov    %edx,0x8(%edi)
movl   $0x0,0x10(%eax)
nop
add    $0x18,%ebx
jmp    805a8c0 <argp_error+0x1d0>
mov    0x14(%esp),%ecx
mov    0xc(%ecx),%edx
jmp    805a8e2 <argp_error+0x1f2>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
sub    0x18(%esp),%edx
cmp    $0xfffffff1,%edx
jge    805a9f0 <argp_error+0x300>
mov    0x14(%esp),%ecx
mov    0x8(%edi),%eax
mov    0x8(%ecx),%edx
mov    %esi,(%eax)
test   %edx,%edx
jne    805a99a <argp_error+0x2aa>
xor    %edx,%edx
jmp    805a9a8 <argp_error+0x2b8>
xchg   %ax,%ax
mov    0x10(%ebx),%eax
test   %eax,%eax
jne    805a8d1 <argp_error+0x1e1>
mov    0x14(%ebx),%ebp
test   %ebp,%ebp
jne    805a8d1 <argp_error+0x1e1>
mov    0x20(%esp),%eax
mov    0x2c(%esp),%ebp
mov    0x4(%eax),%eax
jmp    805aa77 <argp_error+0x387>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%ecx
mov    0x4(%ecx),%ecx
jmp    805a9bd <argp_error+0x2cd>
mov    0x20(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805ab49 <argp_error+0x459>
mov    0x50(%esp),%edi
test   %ebp,%ebp
mov    %eax,(%edi)
mov    %edi,%eax
mov    0x20(%esp),%edi
mov    %edi,0x4(%eax)
mov    0x54(%esp),%eax
mov    0x50(%esp),%edi
mov    0x4(%eax),%eax
movl   $0x0,0xc(%edi)
mov    %eax,0x8(%edi)
mov    %edi,%eax
mov    0x24(%esp),%edi
movl   $0x0,0x18(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0x1c(%eax)
mov    %edi,0x10(%eax)
mov    0x28(%esp),%edi
mov    %edi,0x14(%eax)
je     805aafa <argp_error+0x40a>
mov    0x0(%ebp),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     805aae3 <argp_error+0x3f3>
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %eax,%edx
shl    $0x4,%edx
mov    0x0(%ebp,%edx,1),%edx
test   %edx,%edx
jne    805aad0 <argp_error+0x3e0>
shl    $0x2,%eax
mov    0x54(%esp),%edi
mov    0xc(%edi),%edx
mov    0x50(%esp),%edi
mov    %edx,0x1c(%edi)
add    %eax,%edx
mov    0x54(%esp),%eax
mov    %edx,0xc(%eax)
mov    0x50(%esp),%eax
mov    0x50(%esp),%esi
add    $0x24,%eax
test   %ebp,%ebp
je     805ab41 <argp_error+0x451>
mov    0x0(%ebp),%edi
test   %edi,%edi
je     805ab41 <argp_error+0x451>
mov    %eax,%edx
xor    %ecx,%ecx
mov    %edi,%eax
mov    0x54(%esp),%edi
jmp    805ab22 <argp_error+0x432>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%ecx
mov    %edx,(%esp)
mov    %esi,%edx
add    $0x10,%ebp
mov    %edi,0x4(%esp)
lea    0x1(%ecx),%ebx
call   805a890 <argp_error+0x1a0>
mov    %eax,%edx
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805ab20 <argp_error+0x430>
mov    %edx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x50(%esp),%eax
xor    %esi,%esi
jmp    805ab05 <argp_error+0x415>
jmp    805ab60 <argp_error+0x470>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    $0x7,%eax
sub    $0x18,%esp
cmpl   $0x56,0x20(%esp)
mov    0x28(%esp),%ebx
je     805ab80 <argp_error+0x490>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ae68,%eax
test   %eax,%eax
je     805aba8 <argp_error+0x4b8>
mov    %ebx,0x4(%esp)
mov    0x30(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
testb  $0x20,0x10(%ebx)
je     805ac03 <argp_error+0x513>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x806b040,%eax
test   %eax,%eax
je     805abd8 <argp_error+0x4e8>
mov    %eax,0xc(%esp)
movl   $0x8062e18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x30(%ebx),%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805ab95 <argp_error+0x4a5>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063628,0x4(%esp)
mov    (%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805a6f0 <argp_error>
jmp    805ab95 <argp_error+0x4a5>
movl   $0x0,(%esp)
call   8049920 <exit@plt>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%ebx
cmp    $0xfffffffd,%eax
je     805acf8 <argp_error+0x608>
jle    805ac88 <argp_error+0x598>
cmp    $0xfffffffe,%eax
je     805ac58 <argp_error+0x568>
cmp    $0x3f,%eax
nop
jne    805ace8 <argp_error+0x5f8>
movl   $0x27a,0x8(%esp)
mov    0x30(%ebx),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805a650 <argp_state_help>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x806a9a0
call   805c350 <argp_parse+0x1630>
mov    %eax,0x28(%ebx)
mov    %eax,0x806a980
mov    0x10(%ebx),%eax
and    $0x3,%eax
cmp    $0x1,%eax
je     805ad08 <argp_error+0x618>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
cmp    $0xfffffffc,%eax
jne    805ace8 <argp_error+0x5f8>
mov    0x24(%esp),%edx
mov    $0x8063578,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
test   %edx,%edx
cmovne 0x24(%esp),%eax
mov    %eax,(%esp)
call   8049c60 <strtol@plt>
mov    %eax,0x806ae64
jmp    805accc <argp_error+0x5dc>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8049770 <sleep@plt>
mov    0x806ae64,%eax
lea    -0x1(%eax),%edx
test   %eax,%eax
mov    %edx,0x806ae64
jg     805acc0 <argp_error+0x5d0>
xor    %eax,%eax
jmp    805ac82 <argp_error+0x592>
lea    0x0(%esi),%esi
add    $0x18,%esp
mov    $0x7,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x201,0x8(%esp)
jmp    805ac3e <argp_error+0x54e>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
mov    0x24(%esp),%ecx
mov    %ecx,(%eax)
xor    %eax,%eax
jmp    805ac82 <argp_error+0x592>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x8(%ebp),%eax
mov    %eax,-0xcc(%ebp)
mov    0x10(%ebp),%eax
mov    %eax,-0xd0(%ebp)
mov    0x18(%ebp),%eax
mov    %eax,-0xd8(%ebp)
mov    0x1c(%ebp),%eax
mov    %eax,-0xe0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
testb  $0x1,0x14(%ebp)
jne    805ad7d <argp_parse+0x5d>
mov    0x806a9a0,%ebx
test   %ebx,%ebx
je     805b32b <argp_parse+0x60b>
mov    0x806a980,%ecx
test   %ecx,%ecx
je     805b89b <argp_parse+0xb7b>
testb  $0x10,0x14(%ebp)
je     805b198 <argp_parse+0x478>
mov    0x14(%ebp),%eax
mov    -0xcc(%ebp),%esi
movl   $0x0,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
and    $0x4,%eax
mov    %eax,-0xdc(%ebp)
sete   %al
test   %esi,%esi
movzbl %al,%eax
mov    %eax,-0xbc(%ebp)
movl   $0x0,-0xb0(%ebp)
00
je     805b158 <argp_parse+0x438>
mov    -0xcc(%ebp),%eax
lea    -0xbc(%ebp),%edx
call   805a810 <argp_error+0x120>
mov    -0xb4(%ebp),%eax
mov    -0xb8(%ebp),%edi
lea    0x9(%eax,%eax,8),%esi
mov    -0xb0(%ebp),%eax
shl    $0x2,%esi
add    $0x1,%edi
shl    $0x4,%edi
lea    0x0(,%eax,4),%ecx
mov    -0xbc(%ebp),%eax
lea    (%ecx,%esi,1),%ebx
add    %ebx,%edi
lea    0x1(%eax,%edi,1),%eax
mov    %eax,(%esp)
mov    %ecx,-0xd4(%ebp)
call   80498e0 <malloc@plt>
mov    $0xc,%edx
test   %eax,%eax
mov    %eax,-0x20(%ebp)
je     805b138 <argp_parse+0x418>
mov    -0xd4(%ebp),%ecx
add    %eax,%esi
add    %eax,%ebx
add    %eax,%edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,-0x68(%ebp)
mov    %esi,-0x60(%ebp)
mov    %ebx,-0x94(%ebp)
mov    %edi,-0x98(%ebp)
movl   $0x1,-0x90(%ebp)
00
movl   $0x1,-0x8c(%ebp)
00
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,-0x80(%ebp)
movl   $0x0,-0x7c(%ebp)
movl   $0x0,-0x78(%ebp)
movl   $0x0,-0x74(%ebp)
movl   $0x0,-0x70(%ebp)
movl   $0x0,-0x6c(%ebp)
call   80499d0 <memset@plt>
lea    -0x9c(%ebp),%eax
testb  $0x8,0x14(%ebp)
mov    %eax,-0xac(%ebp)
mov    %edi,-0xa8(%ebp)
mov    %ebx,-0xa4(%ebp)
mov    %esi,-0xa0(%ebp)
je     805b170 <argp_parse+0x450>
lea    0x1(%edi),%eax
movb   $0x2d,(%edi)
mov    %eax,%edi
mov    %eax,-0xa8(%ebp)
mov    -0xcc(%ebp),%esi
movb   $0x0,(%edi)
mov    -0xa4(%ebp),%eax
test   %esi,%esi
movl   $0x0,(%eax)
mov    %esi,-0x9c(%ebp)
je     805b2f0 <argp_parse+0x5d0>
lea    -0xac(%ebp),%eax
xor    %edx,%edx
mov    %eax,0x4(%esp)
mov    -0x68(%ebp),%eax
xor    %ecx,%ecx
mov    %eax,(%esp)
mov    %esi,%eax
call   805a890 <argp_error+0x1a0>
mov    -0x68(%ebp),%ebx
mov    %eax,%edx
mov    %eax,-0x64(%ebp)
mov    -0x9c(%ebp),%eax
mov    %eax,-0xcc(%ebp)
lea    -0x58(%ebp),%esi
xor    %eax,%eax
mov    $0xe,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    -0xcc(%ebp),%eax
cmp    %edx,%ebx
movl   $0x1,-0x5c(%ebp)
mov    %eax,-0x58(%ebp)
mov    0xc(%ebp),%eax
mov    %eax,-0x54(%ebp)
mov    -0xd0(%ebp),%eax
mov    %eax,-0x50(%ebp)
mov    0x14(%ebp),%eax
mov    %eax,-0x48(%ebp)
mov    0x806a984,%eax
mov    %eax,-0x2c(%ebp)
mov    0x806a9c0,%eax
mov    %eax,-0x28(%ebp)
lea    -0x9c(%ebp),%eax
mov    %eax,-0x24(%ebp)
jb     805b248 <argp_parse+0x528>
mov    -0x48(%ebp),%eax
test   $0x2,%al
jne    805b307 <argp_parse+0x5e7>
mov    -0x50(%ebp),%eax
movl   $0x1,-0x8c(%ebp)
00
cmp    %eax,-0xd0(%ebp)
je     805b87b <argp_parse+0xb5b>
mov    0x806a980,%eax
mov    %eax,-0x30(%ebp)
mov    -0x40(%ebp),%edx
mov    -0x4c(%ebp),%eax
test   %edx,%edx
je     805afd0 <argp_parse+0x2b0>
cmp    %eax,%edx
jle    805afd0 <argp_parse+0x2b0>
movl   $0x0,-0x40(%ebp)
mov    -0x5c(%ebp),%edx
test   %edx,%edx
je     805b368 <argp_parse+0x648>
mov    -0x40(%ebp),%edi
test   %edi,%edi
jne    805b368 <argp_parse+0x648>
mov    %eax,-0x90(%ebp)
lea    -0x90(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x94(%ebp),%eax
testb  $0x40,-0x48(%ebp)
movl   $0xffffffff,-0x88(%ebp)
ff
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x54(%ebp),%eax
mov    %eax,(%esp)
je     805b5d0 <argp_parse+0x8b0>
call   805c5c0 <argp_parse+0x18a0>
mov    %eax,%ecx
mov    -0x90(%ebp),%eax
cmp    $0xffffffff,%ecx
mov    %eax,-0x4c(%ebp)
je     805b340 <argp_parse+0x620>
cmp    $0x3f,%ecx
je     805b718 <argp_parse+0x9f8>
cmp    $0x1,%ecx
je     805b740 <argp_parse+0xa20>
mov    %ecx,%edi
sar    $0x18,%edi
test   %edi,%edi
jne    805b488 <argp_parse+0x768>
mov    -0x98(%ebp),%eax
mov    %ecx,0x4(%esp)
mov    %ecx,-0xcc(%ebp)
mov    %eax,(%esp)
call   8049940 <strchr@plt>
mov    -0xcc(%ebp),%ecx
test   %eax,%eax
je     805b4f8 <argp_parse+0x7d8>
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%edx
cmp    %edx,%ebx
jb     805b0ab <argp_parse+0x38b>
jmp    805b4f8 <argp_parse+0x7d8>
add    $0x24,%ebx
cmp    %edx,%ebx
jae    805b4f8 <argp_parse+0x7d8>
cmp    0x8(%ebx),%eax
xchg   %ax,%ax
jae    805b0a0 <argp_parse+0x380>
mov    (%ebx),%eax
mov    -0x84(%ebp),%edx
test   %eax,%eax
mov    %edx,-0xcc(%ebp)
je     805b4f8 <argp_parse+0x7d8>
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %ecx,(%esp)
mov    %esi,0x8(%esp)
mov    %edx,-0x44(%ebp)
mov    -0xcc(%ebp),%edx
mov    %ecx,-0xcc(%ebp)
mov    %edx,0x4(%esp)
call   *%eax
mov    -0x34(%ebp),%edx
mov    -0xcc(%ebp),%ecx
mov    %edx,0x20(%ebx)
cmp    $0x7,%eax
je     805b99a <argp_parse+0xc7a>
test   %eax,%eax
je     805afbb <argp_parse+0x29b>
mov    %eax,%edx
jmp    805b863 <argp_parse+0xb43>
lea    0x0(%esi),%esi
cmp    $0x7,%eax
mov    %eax,%edx
je     805af8f <argp_parse+0x26f>
test   %eax,%eax
je     805af8f <argp_parse+0x26f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1c(%ebp),%esi
xor    %gs:0x14,%esi
mov    %edx,%eax
jne    805b995 <argp_parse+0xc75>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x34,%edi
mov    $0x24,%ebx
xor    %ecx,%ecx
mov    $0x24,%esi
jmp    805ae0d <argp_parse+0xed>
xchg   %ax,%ax
mov    -0xdc(%ebp),%ebx
test   %ebx,%ebx
je     805aee9 <argp_parse+0x1c9>
lea    0x1(%edi),%eax
movb   $0x2b,(%edi)
mov    %eax,%edi
mov    %eax,-0xa8(%ebp)
jmp    805aee9 <argp_parse+0x1c9>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x50,%esp
xor    %eax,%eax
lea    0x27(%esp),%edx
sub    $0x30,%esp
lea    0x27(%esp),%ebx
and    $0xfffffff0,%edx
and    $0xfffffff0,%ebx
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     805b1ae <argp_parse+0x48e>
mov    -0xcc(%ebp),%esi
xor    %eax,%eax
mov    $0x10,%ecx
mov    %edx,%edi
mov    %edx,0x10(%ebx)
rep stos %eax,%es:(%edi)
test   %esi,%esi
je     805b8cb <argp_parse+0xbab>
lea    0x10(%edx),%eax
mov    %esi,(%edx)
mov    0x806b040,%edx
movl   $0x8063710,(%eax)
test   %edx,%edx
je     805b8b5 <argp_parse+0xb95>
lea    0x20(%eax),%edx
movl   $0x80636b8,0x10(%eax)
mov    0x14(%ebp),%eax
movl   $0x0,(%edx)
movl   $0x0,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
and    $0x4,%eax
mov    %eax,-0xdc(%ebp)
sete   %al
movzbl %al,%eax
mov    %eax,-0xbc(%ebp)
movl   $0x0,-0xb0(%ebp)
00
mov    %ebx,-0xcc(%ebp)
jmp    805adcb <argp_parse+0xab>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0xe0(%ebp),%eax
mov    %eax,0x18(%ebx)
jmp    805b29c <argp_parse+0x57c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000003,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%edx
mov    %edx,0x20(%ebx)
add    $0x24,%ebx
cmp    -0x64(%ebp),%ebx
jae    805b120 <argp_parse+0x400>
cmp    $0x7,%eax
jne    805b2e0 <argp_parse+0x5c0>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     805b2af <argp_parse+0x58f>
mov    0x1c(%eax),%eax
mov    0x14(%ebx),%edx
mov    (%eax,%edx,4),%eax
mov    %eax,0x18(%ebx)
mov    (%ebx),%eax
test   %eax,%eax
jne    805b258 <argp_parse+0x538>
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     805b2d3 <argp_parse+0x5b3>
mov    (%eax),%ecx
test   %ecx,%ecx
je     805b2d3 <argp_parse+0x5b3>
mov    0x1c(%ebx),%eax
mov    0x18(%ebx),%edx
mov    %edx,(%eax)
mov    (%ebx),%eax
test   %eax,%eax
jne    805b258 <argp_parse+0x538>
mov    $0x7,%eax
jmp    805b28b <argp_parse+0x56b>
lea    0x0(%esi),%esi
test   %eax,%eax
je     805b29c <argp_parse+0x57c>
mov    %eax,%edx
jmp    805b138 <argp_parse+0x418>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x68(%ebp),%edx
movl   $0x0,-0xcc(%ebp)
00
mov    %edx,-0x64(%ebp)
mov    %edx,%ebx
jmp    805af3b <argp_parse+0x21b>
test   $0x1,%al
mov    -0x50(%ebp),%eax
movl   $0x0,-0x8c(%ebp)
00
je     805afa7 <argp_parse+0x287>
sub    $0x4,%eax
mov    %eax,-0x50(%ebp)
addl   $0x1,-0x54(%ebp)
jmp    805afa7 <argp_parse+0x287>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,0x806a9a0
jmp    805ad6f <argp_parse+0x4f>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
movl   $0x0,-0x5c(%ebp)
jle    805b368 <argp_parse+0x648>
mov    -0x50(%ebp),%edx
mov    -0x4(%edx,%eax,4),%edx
cmpb   $0x2d,(%edx)
jne    805b368 <argp_parse+0x648>
cmpb   $0x2d,0x1(%edx)
jne    805b368 <argp_parse+0x648>
cmpb   $0x0,0x2(%edx)
jne    805b368 <argp_parse+0x648>
mov    %eax,-0x40(%ebp)
nop
cmp    %eax,-0x54(%ebp)
jg     805b5e0 <argp_parse+0x8c0>
mov    -0x4c(%ebp),%eax
cmp    -0x54(%ebp),%eax
je     805b767 <argp_parse+0xa47>
mov    -0xd8(%ebp),%ecx
test   %ecx,%ecx
je     805b900 <argp_parse+0xbe0>
mov    %eax,(%ecx)
mov    -0x64(%ebp),%eax
lea    -0x24(%eax),%ebx
mov    -0x68(%ebp),%eax
cmp    %eax,%ebx
mov    %eax,%ecx
jae    805b3b1 <argp_parse+0x691>
jmp    805b974 <argp_parse+0xc54>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7,%eax
jne    805b750 <argp_parse+0xa30>
mov    (%ebx),%edi
mov    $0x7,%eax
test   %edi,%edi
je     805b3f2 <argp_parse+0x6d2>
mov    0x20(%ebx),%eax
mov    %eax,-0x34(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x3c(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x38(%ebp)
mov    0xc(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000004,(%esp)
mov    %eax,-0x44(%ebp)
call   *%edi
mov    -0x34(%ebp),%edx
mov    -0x68(%ebp),%ecx
mov    %edx,0x20(%ebx)
sub    $0x24,%ebx
cmp    %ecx,%ebx
jae    805b3a8 <argp_parse+0x688>
mov    %eax,%edx
mov    %ecx,%eax
mov    -0x64(%ebp),%ecx
cmp    $0x7,%edx
lea    -0x24(%ecx),%ebx
jne    805b410 <argp_parse+0x6f0>
xor    %dl,%dl
lea    0x0(%esi),%esi
cmp    %ebx,%eax
mov    %edx,%edi
ja     805b45b <argp_parse+0x73b>
xchg   %ax,%ax
mov    (%ebx),%eax
test   %eax,%eax
je     805b451 <argp_parse+0x731>
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000007,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%eax
mov    %eax,0x20(%ebx)
sub    $0x24,%ebx
cmp    -0x68(%ebp),%ebx
jae    805b418 <argp_parse+0x6f8>
mov    %edi,%edx
cmp    $0x7,%edx
mov    $0x16,%eax
cmove  %eax,%edx
mov    -0x20(%ebp),%eax
mov    %edx,-0xcc(%ebp)
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    -0xcc(%ebp),%edx
jmp    805b138 <argp_parse+0x418>
lea    0x0(%esi),%esi
mov    -0x68(%ebp),%eax
lea    (%edi,%edi,8),%ebx
mov    -0x84(%ebp),%edx
lea    -0x24(%eax,%ebx,4),%ebx
mov    (%ebx),%eax
mov    %edx,-0xcc(%ebp)
test   %eax,%eax
je     805b6b0 <argp_parse+0x990>
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %esi,0x8(%esp)
mov    %edx,-0x44(%ebp)
mov    -0xcc(%ebp),%edx
mov    %ecx,-0xcc(%ebp)
mov    %edx,0x4(%esp)
mov    %ecx,%edx
shl    $0x8,%edx
sar    $0x8,%edx
mov    %edx,(%esp)
call   *%eax
mov    -0x34(%ebp),%edx
mov    -0xcc(%ebp),%ecx
mov    %edx,0x20(%ebx)
jmp    805b105 <argp_parse+0x3e5>
lea    0x0(%esi),%esi
mov    %ecx,%edi
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x8063680,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x8063581,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   805a6f0 <argp_error>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edi
je     805b371 <argp_parse+0x651>
mov    $0x7,%edx
mov    -0x2c(%ebp),%eax
movl   $0x104,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   805a650 <argp_state_help>
mov    -0xcc(%ebp),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    -0x68(%ebp),%ebx
mov    %edx,%edi
mov    -0x64(%ebp),%ecx
cmp    %ecx,%ebx
jae    805b96a <argp_parse+0xc4a>
mov    (%ebx),%eax
test   %eax,%eax
je     805b5bc <argp_parse+0x89c>
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000005,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%eax
mov    -0x64(%ebp),%ecx
mov    %eax,0x20(%ebx)
add    $0x24,%ebx
cmp    %ecx,%ebx
jb     805b580 <argp_parse+0x860>
mov    %edi,%edx
mov    -0x68(%ebp),%eax
lea    -0x24(%ecx),%ebx
jmp    805b410 <argp_parse+0x6f0>
call   805c520 <argp_parse+0x1800>
mov    %eax,%ecx
jmp    805b03a <argp_parse+0x31a>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x4,-0x48(%ebp)
jne    805b371 <argp_parse+0x651>
mov    -0x50(%ebp),%edx
mov    (%edx,%eax,4),%ebx
add    $0x1,%eax
mov    %ebx,-0x84(%ebp)
mov    -0x68(%ebp),%ecx
sub    $0x1,%eax
cmp    -0x64(%ebp),%ecx
mov    %eax,-0xcc(%ebp)
mov    %eax,-0x4c(%ebp)
jae    805b871 <argp_parse+0xb51>
lea    0x24(%ecx),%edi
mov    %eax,%edx
xchg   %ax,%ax
lea    0x1(%edx),%eax
mov    %eax,-0x4c(%ebp)
mov    -0x24(%edi),%eax
test   %eax,%eax
je     805b698 <argp_parse+0x978>
mov    -0x4(%edi),%edx
mov    %edx,-0x34(%ebp)
mov    -0xc(%edi),%edx
mov    %edx,-0x3c(%ebp)
mov    -0x8(%edi),%edx
mov    %edx,-0x38(%ebp)
mov    -0x18(%edi),%edx
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%edx
mov    %edx,-0x4(%edi)
cmp    $0x7,%eax
je     805b9ad <argp_parse+0xc8d>
test   %eax,%eax
mov    -0x4c(%ebp),%edx
jne    805b67d <argp_parse+0x95d>
lea    0x0(%esi,%eiz,1),%esi
cmp    -0xcc(%ebp),%edx
jg     805b730 <argp_parse+0xa10>
movl   $0x1,-0x5c(%ebp)
xor    %eax,%eax
cmp    $0x7,%eax
mov    $0x1,%ecx
jne    805b10e <argp_parse+0x3ee>
mov    %ecx,%edi
jmp    805b538 <argp_parse+0x818>
lea    0x0(%esi),%esi
mov    %edx,-0x4c(%ebp)
cmp    %edi,-0x64(%ebp)
jbe    805b871 <argp_parse+0xb51>
add    $0x24,%edi
jmp    805b618 <argp_parse+0x8f8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edi
mov    -0x94(%ebp),%ebx
cmp    %edi,0xc(%ebx)
jne    805b6c8 <argp_parse+0x9a8>
jmp    805b6ce <argp_parse+0x9ae>
nop
add    $0x10,%ebx
cmp    %edi,0xc(%ebx)
je     805b6ce <argp_parse+0x9ae>
mov    (%ebx),%eax
test   %eax,%eax
jne    805b6c0 <argp_parse+0x9a0>
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x8063680,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    (%ebx),%ecx
mov    $0x806357d,%edx
movl   $0x8063589,0x4(%esp)
mov    %esi,(%esp)
test   %ecx,%ecx
cmovne %ecx,%edx
mov    %eax,0xc(%esp)
mov    %edx,0x8(%esp)
call   805a6f0 <argp_error>
jmp    805b538 <argp_parse+0x818>
cmpl   $0xffffffff,-0x88(%ebp)
jne    805b541 <argp_parse+0x821>
jmp    805b06b <argp_parse+0x34b>
lea    0x0(%esi),%esi
sub    -0xcc(%ebp),%edx
xor    %eax,%eax
add    %edx,-0x18(%edi)
jmp    805b67d <argp_parse+0x95d>
mov    -0x84(%ebp),%ebx
jmp    805b5f9 <argp_parse+0x8d9>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     805b3b1 <argp_parse+0x691>
mov    %eax,%edx
mov    %ecx,%eax
mov    -0x64(%ebp),%ecx
lea    -0x24(%ecx),%ebx
jmp    805b410 <argp_parse+0x6f0>
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%ecx
cmp    %ebx,%ecx
jbe    805b988 <argp_parse+0xc68>
xor    %edx,%edx
jmp    805b789 <argp_parse+0xa69>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7,%edx
jne    805b8d2 <argp_parse+0xbb2>
mov    0xc(%ebx),%edi
test   %edi,%edi
jne    805b7d4 <argp_parse+0xab4>
mov    (%ebx),%eax
mov    $0x7,%edx
test   %eax,%eax
je     805b7d4 <argp_parse+0xab4>
mov    0x20(%ebx),%edx
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
movl   $0x0,-0x44(%ebp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,-0x38(%ebp)
movl   $0x1000002,(%esp)
call   *%eax
mov    -0x64(%ebp),%ecx
mov    %eax,%edx
mov    -0x34(%ebp),%eax
mov    %eax,0x20(%ebx)
add    $0x24,%ebx
cmp    %ecx,%ebx
jb     805b780 <argp_parse+0xa60>
mov    -0x68(%ebp),%eax
lea    -0x24(%ecx),%ebx
cmp    %eax,%ebx
jb     805b841 <argp_parse+0xb21>
cmp    $0x7,%edx
je     805b7f9 <argp_parse+0xad9>
jmp    805b97b <argp_parse+0xc5b>
nop
cmp    $0x7,%eax
jne    805b8e8 <argp_parse+0xbc8>
mov    (%ebx),%ecx
mov    $0x7,%eax
test   %ecx,%ecx
je     805b837 <argp_parse+0xb17>
mov    0x20(%ebx),%eax
mov    %eax,-0x34(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x3c(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x38(%ebp)
mov    0xc(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000001,(%esp)
mov    %eax,-0x44(%ebp)
call   *%ecx
mov    -0x34(%ebp),%edx
mov    %edx,0x20(%ebx)
sub    $0x24,%ebx
cmp    -0x68(%ebp),%ebx
jae    805b7f0 <argp_parse+0xad0>
mov    %eax,%edx
cmp    $0x7,%edx
mov    $0x0,%eax
cmove  %eax,%edx
mov    -0xd8(%ebp),%ecx
test   %ecx,%ecx
je     805b85b <argp_parse+0xb3b>
mov    -0x4c(%ebp),%eax
mov    %eax,(%ecx)
test   %edx,%edx
je     805b38d <argp_parse+0x66d>
cmp    $0x7,%edx
jne    805b570 <argp_parse+0x850>
jmp    805b546 <argp_parse+0x826>
mov    $0x7,%eax
jmp    805b67d <argp_parse+0x95d>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     805afb3 <argp_parse+0x293>
mov    %eax,(%esp)
call   805c350 <argp_parse+0x1630>
mov    %eax,-0x30(%ebp)
jmp    805afbb <argp_parse+0x29b>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   805c350 <argp_parse+0x1630>
mov    %eax,0x806a980
jmp    805ad7d <argp_parse+0x5d>
mov    0x806ae68,%edi
lea    0x10(%eax),%edx
test   %edi,%edi
jne    805b1f2 <argp_parse+0x4d2>
jmp    805b1fc <argp_parse+0x4dc>
mov    %edx,%eax
jmp    805b1de <argp_parse+0x4be>
test   %edx,%edx
je     805b789 <argp_parse+0xa69>
lea    0x0(%esi),%esi
jmp    805b7db <argp_parse+0xabb>
lea    0x0(%esi),%esi
test   %eax,%eax
lea    0x0(%esi),%esi
je     805b7f9 <argp_parse+0xad9>
mov    %eax,%edx
jmp    805b84c <argp_parse+0xb2c>
lea    0x0(%esi),%esi
testb  $0x2,-0x48(%ebp)
mov    $0x7,%edx
jne    805b546 <argp_parse+0x826>
mov    -0x2c(%ebp),%eax
test   %eax,%eax
je     805b546 <argp_parse+0x826>
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    -0x30(%ebp),%ebx
movl   $0x8063592,0x4(%esp)
mov    %edx,-0xcc(%ebp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x2c(%ebp),%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    -0xcc(%ebp),%edx
jmp    805b546 <argp_parse+0x826>
mov    %ebx,%eax
lea    -0x24(%ecx),%ebx
jmp    805b410 <argp_parse+0x6f0>
xor    %edx,%edx
jmp    805b410 <argp_parse+0x6f0>
test   %edx,%edx
je     805b7f9 <argp_parse+0xad9>
jmp    805b84c <argp_parse+0xb2c>
mov    %ebx,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
jmp    805b7de <argp_parse+0xabe>
call   80497a0 <__stack_chk_fail@plt>
mov    %ecx,%eax
mov    %edi,%ecx
test   %ecx,%ecx
mov    %eax,%edi
je     805b4fa <argp_parse+0x7da>
jmp    805b6b2 <argp_parse+0x992>
mov    -0x24(%edi),%ecx
mov    -0x4c(%ebp),%eax
test   %ecx,%ecx
lea    -0x1(%eax),%edx
mov    %edx,-0x4c(%ebp)
je     805b69b <argp_parse+0x97b>
mov    -0x4(%edi),%eax
mov    %eax,-0x34(%ebp)
mov    -0xc(%edi),%eax
mov    %eax,-0x3c(%ebp)
mov    -0x8(%edi),%eax
mov    %eax,-0x38(%ebp)
mov    -0x18(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000006,(%esp)
mov    %eax,-0x44(%ebp)
call   *%ecx
mov    -0x34(%ebp),%edx
cmp    %edi,-0x64(%ebp)
mov    %edx,-0x4(%edi)
jbe    805ba10 <argp_parse+0xcf0>
cmp    $0x7,%eax
jne    805ba10 <argp_parse+0xcf0>
mov    -0x4c(%ebp),%edx
add    $0x24,%edi
jmp    805b618 <argp_parse+0x8f8>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    805b67d <argp_parse+0x95d>
mov    -0x54(%ebp),%edx
mov    %edx,-0x4c(%ebp)
jmp    805b668 <argp_parse+0x948>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%ecx
test   %eax,%eax
je     805ba60 <argp_parse+0xd40>
mov    0x34(%eax),%edx
mov    0x34(%edx),%eax
mov    0x38(%edx),%edx
cmp    %edx,%eax
jb     805ba57 <argp_parse+0xd37>
jmp    805ba60 <argp_parse+0xd40>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x24,%eax
cmp    %edx,%eax
jae    805ba60 <argp_parse+0xd40>
cmp    %ecx,0x4(%eax)
jne    805ba50 <argp_parse+0xd30>
mov    0x18(%eax),%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x806ae6c,%eax
movl   $0x80637b8,0xc(%esp)
movl   $0x80637bd,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x806ae70,%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805c160 <argp_parse+0x1440>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x805ba70,0x806ae68
08
mov    %eax,0x806ae70
mov    0x8(%esp),%eax
mov    %eax,0x806ae6c
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
jne    805bafc <argp_parse+0xddc>
jmp    805bb11 <argp_parse+0xdf1>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     805bb20 <argp_parse+0xe00>
add    %eax,%esi
add    %eax,%ebp
sub    %eax,%ebx
je     805bb11 <argp_parse+0xdf1>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   805ea30 <argp_parse+0x3d10>
cmp    $0xffffffff,%eax
jne    805baf0 <argp_parse+0xdd0>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049a20 <__errno_location@plt>
movl   $0x1c,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     805bbc3 <argp_parse+0xea3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049b30 <strrchr@plt>
test   %eax,%eax
je     805bbaf <argp_parse+0xe8f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    805bbaf <argp_parse+0xe8f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x8063800,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    805bbaf <argp_parse+0xe8f>
mov    $0x3,%ecx
mov    $0x8063808,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    805bbaf <argp_parse+0xe8f>
lea    0x4(%eax),%ebx
mov    %ebx,0x806a980
mov    %ebx,0x806ae74
mov    %ebx,0x806a9a0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x806a984,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80637c8,(%esp)
mov    %eax,0xc(%esp)
call   8049860 <fwrite@plt>
call   8049c10 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     805c0a8 <argp_parse+0x1388>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x806380c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806381f,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x7da,0x10(%esp)
movl   $0x8063b40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806388c,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049930 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     805c0d0 <argp_parse+0x13b0>
jmp    *0x8063b04(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80639f0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049790 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063a20,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049790 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063823,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049bc0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063833,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049bc0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806384a,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049bc0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063958,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049790 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805bd4f <argp_parse+0x102f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063978,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049790 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805bd4f <argp_parse+0x102f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806399c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049790 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805bd4f <argp_parse+0x102f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80639c4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049790 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805bd4f <argp_parse+0x102f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8063818,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    805bc41 <argp_parse+0xf21>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063a54,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049790 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    805bdda <argp_parse+0x10ba>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     805c17a <argp_parse+0x145a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    805c170 <argp_parse+0x1450>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805bbf0 <argp_parse+0xed0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     805c1d2 <argp_parse+0x14b2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    805c1c0 <argp_parse+0x14a0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   805bbf0 <argp_parse+0xed0>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805c1b0 <argp_parse+0x1490>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x8063866,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x806387b,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ad0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8063a90,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
movl   $0x80637c1,0xc(%esp)
movl   $0x80637bd,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ad0 <__printf_chk@plt>
mov    0x806a9c0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063ac4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049930 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8062ab0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x806a95c,%edx
movl   $0x8063224,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   80498b0 <error@plt>
call   8049c10 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    805c36b <argp_parse+0x164b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     805c360 <argp_parse+0x1640>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     805c399 <argp_parse+0x1679>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     805c399 <argp_parse+0x1679>
cmp    $0x2f,%cl
je     805c3a0 <argp_parse+0x1680>
test   %bl,%bl
je     805c378 <argp_parse+0x1658>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    805c382 <argp_parse+0x1662>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    805c378 <argp_parse+0x1658>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
cmp    $0x1,%eax
jbe    805c3cf <argp_parse+0x16af>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     805c3d8 <argp_parse+0x16b8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    805c3c5 <argp_parse+0x16a5>
nop
jmp    805c3cf <argp_parse+0x16af>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805c460 <argp_parse+0x1740>
test   %eax,%eax
je     805c407 <argp_parse+0x16e7>
add    $0x1c,%esp
ret
call   805c300 <argp_parse+0x15e0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   805c350 <argp_parse+0x1630>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    805c458 <argp_parse+0x1738>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     805c44c <argp_parse+0x172c>
jmp    805c458 <argp_parse+0x1738>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    805c450 <argp_parse+0x1730>
mov    %eax,%edx
cmp    %edx,%esi
jb     805c440 <argp_parse+0x1720>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    805c450 <argp_parse+0x1730>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805c410 <argp_parse+0x16f0>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     805c4c8 <argp_parse+0x17a8>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    805c4c0 <argp_parse+0x17a0>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    805c4ac <argp_parse+0x178c>
xor    %eax,%eax
jmp    805c4b2 <argp_parse+0x1792>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80609b0 <argp_parse+0x5c90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x44(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805fc30 <argp_parse+0x4f10>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0x1,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80609b0 <argp_parse+0x5c90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x44(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x1,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805fc30 <argp_parse+0x4f10>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     805c686 <argp_parse+0x1966>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805c67f <argp_parse+0x195f>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     805c670 <argp_parse+0x1950>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805c65d <argp_parse+0x193d>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     805c670 <argp_parse+0x1950>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     805c650 <argp_parse+0x1930>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    805c678 <argp_parse+0x1958>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    805c628 <argp_parse+0x1908>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    805c666 <argp_parse+0x1946>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    805c61e <argp_parse+0x18fe>
jmp    805c678 <argp_parse+0x1958>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%ebx
mov    0x8(%eax),%eax
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
mov    0xc(%esp),%ecx
lea    (%ebx,%eax,8),%ebx
cmp    0x4(%esi),%ebx
jae    805c798 <argp_parse+0x1a78>
mov    %ebx,(%ecx)
mov    (%ebx),%eax
test   %eax,%eax
je     805c75e <argp_parse+0x1a3e>
cmp    %eax,%edi
je     805c70e <argp_parse+0x19ee>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     805c757 <argp_parse+0x1a37>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805c734 <argp_parse+0x1a14>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     805c790 <argp_parse+0x1a70>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
cmp    %edi,%eax
je     805c76d <argp_parse+0x1a4d>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    805c768 <argp_parse+0x1a48>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    805c740 <argp_parse+0x1a20>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805c734 <argp_parse+0x1a14>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    805c734 <argp_parse+0x1a14>
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x8063bdc,%edx
je     805c848 <argp_parse+0x1b28>
flds   0x8(%edx)
flds   0x8063bf0
fxch   %st(1)
fucomi %st(1),%st
jbe    805c808 <argp_parse+0x1ae8>
flds   0x8063bf4
fucomip %st(1),%st
jbe    805c810 <argp_parse+0x1af0>
flds   0xc(%edx)
flds   0x8063bf8
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805c818 <argp_parse+0x1af8>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805c820 <argp_parse+0x1b00>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    805c828 <argp_parse+0x1b08>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     805c830 <argp_parse+0x1b10>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    805c838 <argp_parse+0x1b18>
jmp    805c84d <argp_parse+0x1b2d>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    805c838 <argp_parse+0x1b18>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    805c838 <argp_parse+0x1b18>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    805c838 <argp_parse+0x1b18>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805c838 <argp_parse+0x1b18>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805c838 <argp_parse+0x1b18>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8063bdc,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    %cl,0x1b(%esp)
mov    (%edx),%ecx
cmp    0x4(%edx),%ecx
mov    %edx,0x14(%esp)
mov    %ecx,0x10(%esp)
jae    805c906 <argp_parse+0x1be6>
mov    0x10(%esp),%eax
mov    (%eax),%edx
test   %edx,%edx
je     805c8f0 <argp_parse+0x1bd0>
mov    0x4(%eax),%ebx
test   %ebx,%ebx
jne    805c897 <argp_parse+0x1b77>
jmp    805c8de <argp_parse+0x1bbe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     805c8d8 <argp_parse+0x1bb8>
mov    %edx,%ebx
mov    (%ebx),%edi
mov    0x8(%esi),%eax
mov    (%esi),%ebp
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
lea    0x0(%ebp,%eax,8),%eax
cmp    0x4(%esi),%eax
jae    805c993 <argp_parse+0x1c73>
mov    (%eax),%ecx
mov    0x4(%ebx),%edx
test   %ecx,%ecx
jne    805c888 <argp_parse+0x1b68>
mov    %edi,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,(%ebx)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805c895 <argp_parse+0x1b75>
nop
mov    0x10(%esp),%eax
mov    (%eax),%edx
mov    0x10(%esp),%eax
cmpb   $0x0,0x1b(%esp)
movl   $0x0,0x4(%eax)
je     805c918 <argp_parse+0x1bf8>
mov    0x14(%esp),%eax
addl   $0x8,0x10(%esp)
mov    0x10(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     805c870 <argp_parse+0x1b50>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    (%esi),%ebx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
lea    (%ebx,%eax,8),%ebx
cmp    0x4(%esi),%ebx
jae    805c993 <argp_parse+0x1c73>
mov    (%ebx),%eax
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805c969 <argp_parse+0x1c49>
mov    0x24(%esi),%eax
test   %eax,%eax
je     805c971 <argp_parse+0x1c51>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    %edx,(%eax)
mov    0x4(%ebx),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    0x10(%esp),%eax
movl   $0x0,(%eax)
mov    0x14(%esp),%eax
subl   $0x1,0xc(%eax)
jmp    805c8f0 <argp_parse+0x1bd0>
mov    %edx,(%ebx)
addl   $0x1,0xc(%esi)
jmp    805c955 <argp_parse+0x1c35>
movl   $0x8,(%esp)
mov    %edx,0x1c(%esp)
call   80498e0 <malloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    805c94a <argp_parse+0x1c2a>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049c10 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    805ca16 <argp_parse+0x1cf6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     805ca0f <argp_parse+0x1cef>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     805ca0a <argp_parse+0x1cea>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    805ca00 <argp_parse+0x1ce0>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     805c9e8 <argp_parse+0x1cc8>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    805ca61 <argp_parse+0x1d41>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805ca5a <argp_parse+0x1d3a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     805ca5a <argp_parse+0x1d3a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805ca50 <argp_parse+0x1d30>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     805ca38 <argp_parse+0x1d18>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     805ca6c <argp_parse+0x1d4c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    805cade <argp_parse+0x1dbe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805cad7 <argp_parse+0x1db7>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     805cad2 <argp_parse+0x1db2>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805cac8 <argp_parse+0x1da8>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     805cab0 <argp_parse+0x1d90>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x8063b6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x8063b87,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x8063bb8,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x8063bfc
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x8063b9f,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049bc0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    0x8(%edi),%eax
mov    (%edi),%ebx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
lea    (%ebx,%eax,8),%ebx
cmp    0x4(%edi),%ebx
jae    805cbf1 <argp_parse+0x1ed1>
mov    (%ebx),%eax
test   %eax,%eax
jne    805cbc2 <argp_parse+0x1ea2>
jmp    805cbdb <argp_parse+0x1ebb>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
cmp    %eax,%esi
je     805cbdd <argp_parse+0x1ebd>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805cbe8 <argp_parse+0x1ec8>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805cbc0 <argp_parse+0x1ea0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     805cc31 <argp_parse+0x1f11>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     805cc27 <argp_parse+0x1f07>
jmp    805cc37 <argp_parse+0x1f17>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    805cc37 <argp_parse+0x1f17>
mov    (%edx),%eax
test   %eax,%eax
je     805cc20 <argp_parse+0x1f00>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   8049c10 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
mov    0x8(%esi),%eax
mov    (%esi),%edi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
mov    0x4(%esi),%ecx
lea    (%edi,%eax,8),%edx
cmp    %ecx,%edx
jae    805cc9e <argp_parse+0x1f7e>
test   %edx,%edx
mov    %edx,%eax
jne    805cc74 <argp_parse+0x1f54>
jmp    805cc8e <argp_parse+0x1f6e>
nop
test   %eax,%eax
je     805cc8e <argp_parse+0x1f6e>
cmp    %ebx,(%eax)
mov    0x4(%eax),%eax
jne    805cc70 <argp_parse+0x1f50>
test   %eax,%eax
je     805cc8e <argp_parse+0x1f6e>
mov    (%eax),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%edx),%eax
test   %eax,%eax
jne    805cc81 <argp_parse+0x1f61>
add    $0x8,%edx
cmp    %edx,%ecx
ja     805cc88 <argp_parse+0x1f68>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    805cd08 <argp_parse+0x1fe8>
mov    (%edi),%edx
test   %edx,%edx
je     805ccfc <argp_parse+0x1fdc>
cmp    %eax,%ebx
jbe    805cd08 <argp_parse+0x1fe8>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     805ccfc <argp_parse+0x1fdc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     805cd08 <argp_parse+0x1fe8>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    805cce8 <argp_parse+0x1fc8>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     805ccca <argp_parse+0x1faa>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    805cd78 <argp_parse+0x2058>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805cd4b <argp_parse+0x202b>
jmp    805cd62 <argp_parse+0x2042>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     805cd78 <argp_parse+0x2058>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    805cd48 <argp_parse+0x2028>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     805cd34 <argp_parse+0x2014>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     805cdc2 <argp_parse+0x20a2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    805cda8 <argp_parse+0x2088>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x805c6a0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x805c6b0,%eax
cmove  %eax,%esi
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805cf38 <argp_parse+0x2218>
test   %ebx,%ebx
mov    $0x8063bdc,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   805c7a0 <argp_parse+0x1a80>
test   %al,%al
je     805cf21 <argp_parse+0x2201>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    805ceb0 <argp_parse+0x2190>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x8063c00
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805cf18 <argp_parse+0x21f8>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x40(%esp)
jmp    805ceb2 <argp_parse+0x2192>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   805c610 <argp_parse+0x18f0>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     805cf1a <argp_parse+0x21fa>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     805cf21 <argp_parse+0x2201>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     805cf21 <argp_parse+0x2201>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   80496d0 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805cf0c <argp_parse+0x21ec>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    805cfb6 <argp_parse+0x2296>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     805cfae <argp_parse+0x228e>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    805cf72 <argp_parse+0x2252>
jmp    805cf96 <argp_parse+0x2276>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     805cf80 <argp_parse+0x2260>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805cf70 <argp_parse+0x2250>
test   %edx,%edx
je     805cfa1 <argp_parse+0x2281>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     805cf58 <argp_parse+0x2238>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     805cfe8 <argp_parse+0x22c8>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    805d05a <argp_parse+0x233a>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    805d021 <argp_parse+0x2301>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    805d00a <argp_parse+0x22ea>
jmp    805d019 <argp_parse+0x22f9>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80496d0 <free@plt>
test   %ebx,%ebx
jne    805d008 <argp_parse+0x22e8>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     805cff8 <argp_parse+0x22d8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    805d032 <argp_parse+0x2312>
jmp    805d041 <argp_parse+0x2321>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80496d0 <free@plt>
test   %ebx,%ebx
jne    805d030 <argp_parse+0x2310>
mov    (%esi),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80496d0 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    805d021 <argp_parse+0x2301>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    805d07a <argp_parse+0x235a>
jmp    805d087 <argp_parse+0x2367>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805d078 <argp_parse+0x2358>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     805d068 <argp_parse+0x2348>
jmp    805cfeb <argp_parse+0x22cb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    805d100 <argp_parse+0x23e0>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x8063c00
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805d1d0 <argp_parse+0x24b0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    805d102 <argp_parse+0x23e2>
xchg   %ax,%ax
fstp   %st(0)
call   805c610 <argp_parse+0x18f0>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     805d1d2 <argp_parse+0x24b2>
cmp    %ebx,0x8(%esi)
je     805d1e0 <argp_parse+0x24c0>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   8049d10 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805d1d2 <argp_parse+0x24b2>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   805c850 <argp_parse+0x1b30>
test   %al,%al
mov    %eax,%ebx
jne    805d1f0 <argp_parse+0x24d0>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   805c850 <argp_parse+0x1b30>
test   %al,%al
je     805d225 <argp_parse+0x2505>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   805c850 <argp_parse+0x1b30>
test   %al,%al
je     805d225 <argp_parse+0x2505>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    (%esi),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
test   %edi,%edi
je     805d390 <argp_parse+0x2670>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   805c6c0 <argp_parse+0x19a0>
test   %eax,%eax
je     805d268 <argp_parse+0x2548>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d2a8 <argp_parse+0x2588>
jmp    805d2e0 <argp_parse+0x25c0>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805d398 <argp_parse+0x2678>
mov    0x24(%esi),%eax
test   %eax,%eax
je     805d3b0 <argp_parse+0x2690>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    %edi,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x14(%esi),%eax
call   805c7a0 <argp_parse+0x1a80>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d2a0 <argp_parse+0x2580>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    805d330 <argp_parse+0x2610>
fmulp  %st,%st(1)
jmp    805d332 <argp_parse+0x2612>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(1)
flds   0x8063c00
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805d3c6 <argp_parse+0x26a6>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   805d0a0 <argp_parse+0x2380>
test   %al,%al
je     805d3c8 <argp_parse+0x26a8>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   805c6c0 <argp_parse+0x19a0>
test   %eax,%eax
je     805d2a8 <argp_parse+0x2588>
call   8049c10 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    %edi,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    805d25e <argp_parse+0x253e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
jne    805d2c7 <argp_parse+0x25a7>
jmp    805d3c8 <argp_parse+0x26a8>
fstp   %st(0)
xor    %eax,%eax
jmp    805d25e <argp_parse+0x253e>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   805c6c0 <argp_parse+0x19a0>
test   %eax,%eax
mov    %eax,%edi
je     805d508 <argp_parse+0x27e8>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    805d418 <argp_parse+0x26f8>
jmp    805d428 <argp_parse+0x2708>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d418 <argp_parse+0x26f8>
lea    0x14(%esi),%eax
call   805c7a0 <argp_parse+0x1a80>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    805d410 <argp_parse+0x26f0>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     805d510 <argp_parse+0x27f0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   805d0a0 <argp_parse+0x2380>
test   %al,%al
jne    805d418 <argp_parse+0x26f8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    805d4ea <argp_parse+0x27ca>
lea    0x0(%esi,%eiz,1),%esi
jmp    805d4f9 <argp_parse+0x27d9>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80496d0 <free@plt>
test   %ebx,%ebx
jne    805d4e8 <argp_parse+0x27c8>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    805d418 <argp_parse+0x26f8>
nop
xor    %ebp,%ebp
jmp    805d418 <argp_parse+0x26f8>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    805d4bf <argp_parse+0x279f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x6,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805e560 <argp_parse+0x3840>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   805e560 <argp_parse+0x3840>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049880 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     805dec8 <argp_parse+0x31a8>
mov    0x94(%esp),%eax
jmp    *0x8063c40(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     805dcd0 <argp_parse+0x2fb0>
test   %al,%al
je     805dce3 <argp_parse+0x2fc3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     805dcb8 <argp_parse+0x2f98>
cmpb   $0x0,0x58(%esp)
je     805dcb8 <argp_parse+0x2f98>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     805dcb8 <argp_parse+0x2f98>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049750 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    805dd50 <argp_parse+0x3030>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     805da18 <argp_parse+0x2cf8>
movzbl %bl,%eax
jmp    *0x8063c64(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     805d858 <argp_parse+0x2b38>
cmpl   $0x3,0x94(%esp)
jne    805d7b8 <argp_parse+0x2a98>
testb  $0x4,0x98(%esp)
je     805d7b8 <argp_parse+0x2a98>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    805d7b8 <argp_parse+0x2a98>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    805d7b8 <argp_parse+0x2a98>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     805d7b8 <argp_parse+0x2a98>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     805d7b8 <argp_parse+0x2a98>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmp    %edi,%ebp
jae    805d77e <argp_parse+0x2a5e>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    805d78e <argp_parse+0x2a6e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805d79e <argp_parse+0x2a7e>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    805d7ae <argp_parse+0x2a8e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     805d7c6 <argp_parse+0x2aa6>
cmpb   $0x0,0x5a(%esp)
jne    805d7eb <argp_parse+0x2acb>
mov    0x34(%esp),%edx
test   %edx,%edx
je     805d7eb <argp_parse+0x2acb>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    805d7f2 <argp_parse+0x2ad2>
cmpb   $0x0,0x24(%esp)
je     805d808 <argp_parse+0x2ae8>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmp    %edi,%ebp
jae    805d805 <argp_parse+0x2ae5>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    805d816 <argp_parse+0x2af6>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    805d658 <argp_parse+0x2938>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     805deb8 <argp_parse+0x3198>
test   %al,%al
jne    805d7b8 <argp_parse+0x2a98>
test   %esi,%esi
jne    805d7b8 <argp_parse+0x2a98>
cmpl   $0x2,0x94(%esp)
jne    805d7b8 <argp_parse+0x2a98>
nop
cmpb   $0x0,0x2f(%esp)
je     805d7b8 <argp_parse+0x2a98>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   805d5a0 <argp_parse+0x2880>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    805dfdd <argp_parse+0x32bd>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     805df2b <argp_parse+0x320b>
cmpb   $0x0,0x58(%esp)
je     805d7b8 <argp_parse+0x2a98>
mov    %eax,%ebx
jmp    805d7f2 <argp_parse+0x2ad2>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    805d8e3 <argp_parse+0x2bc3>
nop
mov    $0x66,%eax
jmp    805d8e3 <argp_parse+0x2bc3>
nop
mov    $0x76,%eax
jmp    805d8e3 <argp_parse+0x2bc3>
nop
mov    $0x6e,%eax
jmp    805d8d5 <argp_parse+0x2bb5>
nop
mov    $0x74,%eax
jmp    805d8d5 <argp_parse+0x2bb5>
nop
cmpb   $0x0,0x58(%esp)
je     805dea0 <argp_parse+0x3180>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmp    %edi,%ebp
jae    805d942 <argp_parse+0x2c22>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    805d988 <argp_parse+0x2c68>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     805d988 <argp_parse+0x2c68>
cmp    %eax,%edi
ja     805df40 <argp_parse+0x3220>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805d97e <argp_parse+0x2c5e>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    805d7c6 <argp_parse+0x2aa6>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    805d8e3 <argp_parse+0x2bc3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     805d9be <argp_parse+0x2c9e>
cmpb   $0x0,0x2f(%esp)
je     805d9be <argp_parse+0x2c9e>
test   %dl,%dl
jne    805d808 <argp_parse+0x2ae8>
mov    %ebx,%eax
jmp    805d8d5 <argp_parse+0x2bb5>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    805d7b8 <argp_parse+0x2a98>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmp    %edi,%ebp
jae    805d9ed <argp_parse+0x2ccd>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    805d9fd <argp_parse+0x2cdd>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805da0d <argp_parse+0x2ced>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    805d7b8 <argp_parse+0x2a98>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    805dd60 <argp_parse+0x3040>
call   8049d00 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     805d7b8 <argp_parse+0x2a98>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    805dac4 <argp_parse+0x2da4>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmp    %edi,%ebp
jae    805da73 <argp_parse+0x2d53>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    805da86 <argp_parse+0x2d66>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    805da9c <argp_parse+0x2d7c>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    805d80b <argp_parse+0x2aeb>
cmp    %edi,%ebp
jae    805dab9 <argp_parse+0x2d99>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    805da60 <argp_parse+0x2d40>
cmpb   $0x0,0x24(%esp)
je     805daa5 <argp_parse+0x2d85>
cmp    %edi,%ebp
jae    805dad7 <argp_parse+0x2db7>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    805daa5 <argp_parse+0x2d85>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    805dffe <argp_parse+0x32de>
test   %edi,%edi
je     805deed <argp_parse+0x31cd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8061033,0x3c(%esp)
movb   $0x22,(%eax)
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8061033,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi,%eiz,1),%esi
je     805dbfb <argp_parse+0x2edb>
movl   $0x5,0x8(%esp)
movl   $0x8063c04,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
cmpl   $0x7,0x94(%esp)
sete   %bl
cmp    $0x8063c04,%eax
mov    %eax,%edx
mov    %eax,0x48(%esp)
jne    805dbc4 <argp_parse+0x2ea4>
test   %bl,%bl
mov    $0x8061033,%eax
cmove  %edx,%eax
mov    %eax,0x48(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8062d1e,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
cmp    $0x8062d1e,%eax
mov    %eax,%edx
mov    %eax,0x44(%esp)
jne    805dbfb <argp_parse+0x2edb>
test   %bl,%bl
mov    $0x8061033,%eax
cmove  %edx,%eax
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    805dc2a <argp_parse+0x2f0a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805dc2a <argp_parse+0x2f0a>
mov    0x30(%esp),%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    805dc1f <argp_parse+0x2eff>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    805dc18 <argp_parse+0x2ef8>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    805d638 <argp_parse+0x2918>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8062d1e,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    805dfe2 <argp_parse+0x32c2>
test   %edi,%edi
je     805df0c <argp_parse+0x31ec>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8062d1e,0x3c(%esp)
movb   $0x27,(%eax)
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    805d6f0 <argp_parse+0x29d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    805d678 <argp_parse+0x2958>
test   %ebp,%ebp
jne    805dcfc <argp_parse+0x2fdc>
cmpl   $0x2,0x94(%esp)
jne    805dcfc <argp_parse+0x2fdc>
cmpb   $0x0,0x2f(%esp)
jne    805d868 <argp_parse+0x2b48>
cmpb   $0x0,0x2f(%esp)
jne    805dd32 <argp_parse+0x3012>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     805dd32 <argp_parse+0x3012>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805dd32 <argp_parse+0x3012>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    805dd27 <argp_parse+0x3007>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    805dd20 <argp_parse+0x3000>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    805d8b2 <argp_parse+0x2b92>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    805d8b2 <argp_parse+0x2b92>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    805d6f0 <argp_parse+0x29d0>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     805decd <argp_parse+0x31ad>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   80498a0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805df4d <argp_parse+0x322d>
cmp    $0xffffffff,%eax
je     805dfc2 <argp_parse+0x32a2>
cmp    $0xfffffffe,%eax
je     805df68 <argp_parse+0x3248>
cmpb   $0x0,0x2f(%esp)
je     805de2f <argp_parse+0x310f>
cmpl   $0x2,0x94(%esp)
jne    805de2f <argp_parse+0x310f>
cmp    $0x1,%eax
je     805de2f <argp_parse+0x310f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     805de28 <argp_parse+0x3108>
movzbl %al,%eax
jmp    *0x8063e60(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    805de10 <argp_parse+0x30f0>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049830 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   80496f0 <mbsinit@plt>
test   %eax,%eax
je     805dda1 <argp_parse+0x3081>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    805da43 <argp_parse+0x2d23>
and    0x58(%esp),%dl
jmp    805da4d <argp_parse+0x2d2d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    805d868 <argp_parse+0x2b48>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     805d7b8 <argp_parse+0x2a98>
add    $0x1,%esi
jmp    805d658 <argp_parse+0x2938>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    805d839 <argp_parse+0x2b19>
call   8049c10 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8049950 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    805dd7e <argp_parse+0x305e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8061033,0x3c(%esp)
jmp    805d638 <argp_parse+0x2918>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8062d1e,0x3c(%esp)
jmp    805d638 <argp_parse+0x2918>
cmpb   $0x0,0x2f(%esp)
je     805d8e3 <argp_parse+0x2bc3>
jmp    805d868 <argp_parse+0x2b48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    805d96e <argp_parse+0x2c4e>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    805de75 <argp_parse+0x3155>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    805dfb8 <argp_parse+0x3298>
cmpb   $0x0,(%eax)
je     805dfb8 <argp_parse+0x3298>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    805dfa6 <argp_parse+0x3286>
cmpb   $0x0,(%ecx,%eax,1)
je     805dfb0 <argp_parse+0x3290>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     805dfa0 <argp_parse+0x3280>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    805de75 <argp_parse+0x3155>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    805de75 <argp_parse+0x3155>
call   80497a0 <__stack_chk_fail@plt>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8062d1e,0x3c(%esp)
jmp    805d638 <argp_parse+0x2918>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8061033,0x3c(%esp)
jmp    805d638 <argp_parse+0x2918>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049a20 <__errno_location@plt>
test   %edi,%edi
mov    0x806a948,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     805e1ac <argp_parse+0x348c>
cmp    0x806a954,%edi
jb     805e0b8 <argp_parse+0x3398>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     805e1b1 <argp_parse+0x3491>
cmp    $0x806a94c,%esi
lea    0x0(,%ebp,8),%eax
je     805e180 <argp_parse+0x3460>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    %eax,%esi
mov    %eax,0x806a948
mov    0x806a954,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80499d0 <memset@plt>
mov    %ebp,0x806a954
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805d5a0 <argp_parse+0x2880>
cmp    %eax,%ebp
ja     805e167 <argp_parse+0x3447>
lea    0x1(%eax),%ebp
cmp    $0x806ae80,%esi
mov    %ebp,(%edi)
je     805e122 <argp_parse+0x3402>
mov    %esi,(%esp)
call   80496d0 <free@plt>
mov    %ebp,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805d5a0 <argp_parse+0x2880>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805f2d0 <argp_parse+0x45b0>
mov    0x806a950,%edx
mov    %eax,%esi
mov    %eax,0x806a948
mov    0x806a94c,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805e08f <argp_parse+0x336f>
call   8049c10 <abort@plt>
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049a20 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x806af80,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   805f3b0 <argp_parse+0x4690>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x806af80,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    805e220 <argp_parse+0x3500>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x806af80,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x806af80,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x806af80,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x806af80,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     805e2d3 <argp_parse+0x35b3>
test   %ecx,%ecx
je     805e2d3 <argp_parse+0x35b3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049c10 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x806af80,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   805d5a0 <argp_parse+0x2880>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x806af80,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049a20 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   805d5a0 <argp_parse+0x2880>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   805d5a0 <argp_parse+0x2880>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     805e408 <argp_parse+0x36e8>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805e340 <argp_parse+0x3620>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x806a954,%edi
mov    0x806a948,%esi
cmp    $0x1,%edi
jbe    805e483 <argp_parse+0x3763>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   80496d0 <free@plt>
cmp    %edi,%ebx
jne    805e470 <argp_parse+0x3750>
mov    0x4(%esi),%eax
cmp    $0x806ae80,%eax
je     805e4a9 <argp_parse+0x3789>
mov    %eax,(%esp)
call   80496d0 <free@plt>
movl   $0x100,0x806a94c
00
movl   $0x806ae80,0x806a950
08
cmp    $0x806a94c,%esi
je     805e4c3 <argp_parse+0x37a3>
mov    %esi,(%esp)
call   80496d0 <free@plt>
movl   $0x806a94c,0x806a948
08
movl   $0x1,0x806a954
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x806af80,0x4(%esp)
jmp    805e020 <argp_parse+0x3300>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x806af80,0x4(%esp)
jmp    805e020 <argp_parse+0x3300>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x806af80,0x4(%esp)
jmp    805e020 <argp_parse+0x3300>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x806af80,0x4(%esp)
jmp    805e020 <argp_parse+0x3300>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x7c,%esp
mov    0x84(%esp),%eax
movl   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
xor    %eax,%eax
movl   $0x0,0x48(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     805e578 <argp_parse+0x3858>
mov    0x40(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x88(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0x10(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   805e020 <argp_parse+0x3300>
add    $0x7c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x7c,%esp
mov    0x84(%esp),%eax
movl   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
xor    %eax,%eax
movl   $0x0,0x48(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     805e628 <argp_parse+0x3908>
mov    0x40(%esp),%eax
mov    0x8c(%esp),%ecx
mov    0x88(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0x10(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   805e020 <argp_parse+0x3300>
add    $0x7c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   805e560 <argp_parse+0x3840>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   805e610 <argp_parse+0x38f0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x806af80,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x806af84,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x806af88,%eax
mov    %eax,0x18(%esp)
mov    0x806af8c,%eax
mov    %eax,0x1c(%esp)
mov    0x806af90,%eax
mov    %eax,0x20(%esp)
mov    0x806af94,%eax
mov    %eax,0x24(%esp)
mov    0x806af98,%eax
mov    %eax,0x28(%esp)
mov    0x806af9c,%eax
mov    %eax,0x2c(%esp)
mov    0x806afa0,%eax
mov    %eax,0x30(%esp)
mov    0x806afa4,%eax
mov    %eax,0x34(%esp)
mov    0x806afa8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x806afac,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   805e020 <argp_parse+0x3300>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805e720 <argp_parse+0x3a00>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   805e720 <argp_parse+0x3a00>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805e720 <argp_parse+0x3a00>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x806af80,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x806af84,%eax
mov    %eax,0x14(%esp)
mov    0x806af88,%eax
mov    %eax,0x18(%esp)
mov    0x806af8c,%eax
mov    %eax,0x1c(%esp)
mov    0x806af90,%eax
mov    %eax,0x20(%esp)
mov    0x806af94,%eax
mov    %eax,0x24(%esp)
mov    0x806af98,%eax
mov    %eax,0x28(%esp)
mov    0x806af9c,%eax
mov    %eax,0x2c(%esp)
mov    0x806afa0,%eax
mov    %eax,0x30(%esp)
mov    0x806afa4,%eax
mov    %eax,0x34(%esp)
mov    0x806afa8,%eax
mov    %eax,0x38(%esp)
mov    0x806afac,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   805e2a0 <argp_parse+0x3580>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   805e020 <argp_parse+0x3300>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805e860 <argp_parse+0x3b40>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   805e860 <argp_parse+0x3b40>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   805e860 <argp_parse+0x3b40>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049680 <read@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    805ea20 <argp_parse+0x3d00>
call   8049a20 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     805e9e8 <argp_parse+0x3cc8>
cmp    $0x16,%edx
jne    805ea20 <argp_parse+0x3d00>
cmp    $0x7fffe000,%ebx
jbe    805ea20 <argp_parse+0x3d00>
mov    $0x7fffe000,%ebx
jmp    805e9e8 <argp_parse+0x3cc8>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049990 <write@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    805ea80 <argp_parse+0x3d60>
call   8049a20 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     805ea48 <argp_parse+0x3d28>
cmp    $0x16,%edx
jne    805ea80 <argp_parse+0x3d60>
cmp    $0x7fffe000,%ebx
jbe    805ea80 <argp_parse+0x3d60>
mov    $0x7fffe000,%ebx
jmp    805ea48 <argp_parse+0x3d28>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   805c350 <argp_parse+0x1630>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   805c3b0 <argp_parse+0x1690>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
lea    0x14(%eax),%edi
movb   $0x0,0x14(%eax)
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8060d90 <argp_parse+0x6070>
add    $0x30,%eax
mov    %al,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8060c60 <argp_parse+0x5f40>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    805eae0 <argp_parse+0x3dc0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    (%edx),%ebx
mov    0x4(%ebx),%ecx
cmp    $0x3ffffffe,%ecx
je     805eb98 <argp_parse+0x3e78>
cmp    $0x3fffffff,%ecx
je     805eb78 <argp_parse+0x3e58>
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     805ebd0 <argp_parse+0x3eb0>
xor    %eax,%eax
cmp    $0x3fffffff,%edx
je     805ebb8 <argp_parse+0x3e98>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0xc(%ebx)
je     805ebf8 <argp_parse+0x3ed8>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8060a90 <argp_parse+0x5d70>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
jmp    805eb5c <argp_parse+0x3e3c>
xchg   %ax,%ax
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     805ebe8 <argp_parse+0x3ec8>
mov    0x40(%eax),%ecx
mov    0x44(%eax),%eax
mov    %ecx,(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
cmp    $0x3fffffff,%edx
jne    805eb6e <argp_parse+0x3e4e>
add    $0x8,%ebx
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8060a90 <argp_parse+0x5d70>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
mov    0x48(%eax),%edx
mov    0x4c(%eax),%eax
mov    %edx,0x8(%ebx)
mov    %eax,0xc(%ebx)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    805eb6e <argp_parse+0x3e4e>
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
xor    %eax,%eax
jmp    805eb6e <argp_parse+0x3e4e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
je     805ecc6 <argp_parse+0x3fa6>
mov    0x4(%eax),%ebp
lea    -0x3ffffffe(%ebp),%edx
cmp    $0x1,%edx
ja     805ec98 <argp_parse+0x3f78>
mov    0xc(%eax),%esi
lea    -0x3ffffffe(%esi),%ecx
cmp    $0x1,%ecx
ja     805ecb8 <argp_parse+0x3f98>
xor    %ebx,%ebx
xor    %edi,%edi
cmp    $0x1,%edx
jbe    805ec60 <argp_parse+0x3f40>
cmp    $0x1,%ecx
jbe    805ec7a <argp_parse+0x3f5a>
xor    %eax,%eax
cmp    $0x1,%ebx
sete   %al
add    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
cmp    $0x3ffffffe,%ebp
sete   %bl
cmp    $0x1,%ecx
movl   $0x0,(%eax)
mov    $0x1,%di
ja     805ec49 <argp_parse+0x3f29>
movl   $0x0,0x8(%eax)
xor    %eax,%eax
cmp    $0x3ffffffe,%esi
sete   %al
mov    $0x1,%edi
add    %eax,%ebx
jmp    805ec49 <argp_parse+0x3f29>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%ebp
jbe    805ec2d <argp_parse+0x3f0d>
call   8049a20 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805ec53 <argp_parse+0x3f33>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%esi
jbe    805ec3b <argp_parse+0x3f1b>
jmp    805eca0 <argp_parse+0x3f80>
movl   $0x8063f61,0xc(%esp)
movl   $0x5b,0x8(%esp)
movl   $0x8063f44,0x4(%esp)
movl   $0x8063f58,(%esp)
call   8049cf0 <__assert_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc8(%esp),%edx
mov    0xc0(%esp),%esi
mov    0xc4(%esp),%ebx
test   %edx,%edx
je     805ef58 <argp_parse+0x4238>
mov    (%edx),%edi
lea    0x20(%esp),%eax
mov    0x4(%edx),%ebp
mov    %eax,0x1c(%esp)
mov    %edi,0x20(%esp)
mov    0x8(%edx),%edi
mov    %ebp,0x24(%esp)
mov    0xc(%edx),%ebp
mov    %edi,0x28(%esp)
mov    %ebp,0x2c(%esp)
call   805ec10 <argp_parse+0x3ef0>
test   %eax,%eax
mov    %eax,%edi
js     805ef8c <argp_parse+0x426c>
test   %esi,%esi
je     805ef70 <argp_parse+0x4250>
mov    0x806afb4,%edx
test   %edx,%edx
js     805ed92 <argp_parse+0x4072>
cmp    $0x2,%edi
je     805ef00 <argp_parse+0x41e0>
mov    0x1c(%esp),%eax
test   %ebx,%ebx
js     805ee98 <argp_parse+0x4178>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049b80 <futimens@plt>
cmp    $0x0,%eax
mov    %eax,%ebp
jle    805eec0 <argp_parse+0x41a0>
call   8049a20 <__errno_location@plt>
movl   $0x26,(%eax)
test   %edi,%edi
movl   $0xffffffff,0x806afb4
ff
movl   $0xffffffff,0x806afb0
ff
jne    805ee38 <argp_parse+0x4118>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     805efb8 <argp_parse+0x4298>
mov    (%ecx),%eax
mov    $0x10624dd3,%edi
mov    0x4(%ecx),%ebp
mov    %eax,0x30(%esp)
mov    %ebp,%eax
imul   %edi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ecx
sar    $0x1f,%ebp
sar    $0x6,%edx
sub    %ebp,%edx
mov    %eax,0x38(%esp)
mov    %ecx,%eax
mov    %edx,0x34(%esp)
imul   %edi
sar    $0x1f,%ecx
lea    0x30(%esp),%edi
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,0x3c(%esp)
test   %ebx,%ebx
mov    %edi,0x8(%esp)
js     805ef98 <argp_parse+0x4278>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049cc0 <futimesat@plt>
test   %eax,%eax
je     805ee2b <argp_parse+0x410b>
test   %esi,%esi
mov    $0xffffffff,%eax
je     805ee2b <argp_parse+0x410b>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80499b0 <utimes@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x3,%edi
je     805ee6a <argp_parse+0x414a>
lea    0x40(%esp),%eax
test   %ebx,%ebx
mov    %eax,0x8(%esp)
js     805eee0 <argp_parse+0x41c0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049870 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    805ef8c <argp_parse+0x426c>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     805efb8 <argp_parse+0x4298>
lea    0x1c(%esp),%edx
lea    0x40(%esp),%eax
call   805eb40 <argp_parse+0x3e20>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     805edae <argp_parse+0x408e>
jmp    805ee2b <argp_parse+0x410b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8049640 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%ebp
jg     805ed87 <argp_parse+0x4067>
nop
jne    805f026 <argp_parse+0x4306>
movl   $0x1,0x806afb4
00
add    $0xac,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    805ee62 <argp_parse+0x4142>
lea    0x0(%esi),%esi
lea    0x40(%esp),%eax
test   %ebx,%ebx
mov    %eax,0x8(%esp)
js     805efc0 <argp_parse+0x42a0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049870 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    805ef8c <argp_parse+0x426c>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     805efe0 <argp_parse+0x42c0>
cmpl   $0x3ffffffe,0xc(%eax)
je     805eff8 <argp_parse+0x42d8>
mov    $0x3,%edi
jmp    805ed68 <argp_parse+0x4048>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
test   %esi,%esi
movl   $0x0,0x1c(%esp)
jne    805ed51 <argp_parse+0x4031>
lea    0x0(%esi),%esi
test   %ebx,%ebx
js     805f011 <argp_parse+0x42f1>
mov    %ebx,0x4(%esp)
mov    %ebx,(%esp)
call   8049630 <dup2@plt>
cmp    %ebx,%eax
je     805ed51 <argp_parse+0x4031>
mov    $0xffffffff,%eax
jmp    805ee2b <argp_parse+0x410b>
xchg   %ax,%ax
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8049cc0 <futimesat@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    805edf6 <argp_parse+0x40d6>
nop
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049c20 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    805ef25 <argp_parse+0x4205>
lea    0x0(%esi),%esi
mov    0x84(%esp),%edx
mov    0x80(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    805ef47 <argp_parse+0x4227>
mov    0x8c(%esp),%edx
mov    0x88(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    805ef47 <argp_parse+0x4227>
call   8049a20 <__errno_location@plt>
movl   $0x9,(%eax)
mov    $0xffffffff,%eax
jmp    805ee2b <argp_parse+0x410b>
call   8049a20 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    805eec6 <argp_parse+0x41a6>
jmp    805ed92 <argp_parse+0x4072>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
jmp    805ecf0 <argp_parse+0x3fd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805ecf0 <argp_parse+0x3fd0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ebx
test   %edx,%edx
je     805f180 <argp_parse+0x4460>
mov    (%edx),%esi
lea    0x20(%esp),%eax
mov    0x4(%edx),%edi
mov    0xc(%edx),%ecx
mov    0x8(%edx),%edx
mov    %esi,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   805ec10 <argp_parse+0x3ef0>
test   %eax,%eax
mov    %eax,%esi
js     805f23f <argp_parse+0x451f>
mov    0x806afb0,%edi
test   %edi,%edi
js     805f12a <argp_parse+0x440a>
cmp    $0x2,%esi
je     805f1f8 <argp_parse+0x44d8>
mov    0x1c(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8049640 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%edi
jle    805f248 <argp_parse+0x4528>
call   8049a20 <__errno_location@plt>
movl   $0x26,(%eax)
test   %esi,%esi
movl   $0xffffffff,0x806afb0
ff
je     805f1a8 <argp_parse+0x4488>
cmp    $0x3,%esi
je     805f15d <argp_parse+0x443d>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    805f23f <argp_parse+0x451f>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     805f1c4 <argp_parse+0x44a4>
lea    0x1c(%esp),%edx
lea    0x30(%esp),%eax
call   805eb40 <argp_parse+0x3e20>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     805f1c4 <argp_parse+0x44a4>
jmp    805f1ec <argp_parse+0x44cc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806afb0,%edx
xor    %eax,%eax
xor    %esi,%esi
movl   $0x0,0x1c(%esp)
test   %edx,%edx
jns    805f0f8 <argp_parse+0x43d8>
movl   $0xffffffff,0x806afb0
ff
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    805f23f <argp_parse+0x451f>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     805f234 <argp_parse+0x4514>
mov    0x1c(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   805ecf0 <argp_parse+0x3fd0>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049c80 <__lxstat64@plt>
test   %eax,%eax
jne    805f23f <argp_parse+0x451f>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     805f270 <argp_parse+0x4550>
cmpl   $0x3ffffffe,0xc(%eax)
je     805f280 <argp_parse+0x4560>
mov    $0x3,%esi
jmp    805f0f8 <argp_parse+0x43d8>
call   8049a20 <__errno_location@plt>
movl   $0x26,(%eax)
mov    $0xffffffff,%eax
jmp    805f1ec <argp_parse+0x44cc>
xchg   %ax,%ax
jne    805f290 <argp_parse+0x4570>
movl   $0x1,0x806afb4
00
mov    %edi,%eax
movl   $0x1,0x806afb0
00
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    805f22a <argp_parse+0x450a>
nop
mov    0x7c(%esp),%edx
mov    0x78(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    805f22a <argp_parse+0x450a>
call   8049a20 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    805f24a <argp_parse+0x452a>
jmp    805f12a <argp_parse+0x440a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
je     805f2b9 <argp_parse+0x4599>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805f2b4 <argp_parse+0x4594>
lea    0x0(%esi),%esi
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80498d0 <realloc@plt>
test   %eax,%eax
je     805f2f1 <argp_parse+0x45d1>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805f2ec <argp_parse+0x45cc>
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     805f338 <argp_parse+0x4618>
cmp    $0xaaaaaaa9,%eax
ja     805f344 <argp_parse+0x4624>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    805f2d0 <argp_parse+0x45b0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    805f320 <argp_parse+0x4600>
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80499d0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049d10 <calloc@plt>
test   %eax,%eax
je     805f39f <argp_parse+0x467f>
add    $0x1c,%esp
ret
nop
call   805c300 <argp_parse+0x15e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   805f2a0 <argp_parse+0x4580>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80496e0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   805f3b0 <argp_parse+0x4690>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x24,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805f46d <argp_parse+0x474d>
mov    0x20(%esp),%eax
movl   $0x0,0x14(%ebx)
movl   $0x0,0x10(%ebx)
mov    %eax,(%ebx)
mov    0x24(%esp),%eax
mov    %eax,0x4(%ebx)
mov    0x28(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%ebx)
movl   $0xc8,(%esp)
call   80498e0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%ebx)
je     805f474 <argp_parse+0x4754>
mov    %eax,0x1c(%ebx)
add    $0xc8,%eax
mov    %eax,0x20(%ebx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   80496d0 <free@plt>
jmp    805f46d <argp_parse+0x474d>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x1c(%ebp),%eax
mov    0x18(%ebp),%esi
add    0x10(%ebp),%esi
mov    %eax,0x10(%esp)
cmp    0x10(%esp),%esi
jae    805f556 <argp_parse+0x4836>
lea    0x0(%esi),%esi
mov    0x14(%ebp),%ebx
test   %ebx,%ebx
jne    805f4f9 <argp_parse+0x47d9>
mov    0x4(%ebp),%ebx
mov    0x10(%esp),%eax
test   %ebx,%ebx
je     805f758 <argp_parse+0x4a38>
add    %ebx,%eax
xor    %edi,%edi
cmp    %eax,0x20(%ebp)
ja     805f898 <argp_parse+0x4b78>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805f966 <argp_parse+0x4c46>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x20,(%edx)
add    $0x1,%edi
cmp    %ebx,%edi
jne    805f4d0 <argp_parse+0x47b0>
mov    0x1c(%ebp),%eax
mov    %ebx,0x14(%ebp)
mov    %eax,0x10(%esp)
mov    0x10(%esp),%eax
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %eax,0x14(%esp)
call   8049a30 <memchr@plt>
test   %ebx,%ebx
mov    %eax,%ecx
jns    805f526 <argp_parse+0x4806>
movl   $0x0,0x14(%ebp)
xor    %ebx,%ebx
test   %ecx,%ecx
je     805f77e <argp_parse+0x4a5e>
mov    0x8(%ebp),%edi
mov    %ecx,%eax
sub    %esi,%eax
add    %ebx,%eax
cmp    %edi,%eax
jge    805f568 <argp_parse+0x4848>
lea    0x1(%ecx),%esi
mov    0x1c(%ebp),%ecx
movl   $0x0,0x14(%ebp)
mov    %ecx,0x10(%esp)
cmp    0x10(%esp),%esi
jb     805f4a8 <argp_parse+0x4788>
mov    0x10(%esp),%eax
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%ebp),%eax
lea    -0x1(%edi),%edx
test   %eax,%eax
mov    %eax,0x18(%esp)
js     805f828 <argp_parse+0x4b08>
lea    0x1(%edx),%edi
sub    %ebx,%edi
add    %esi,%edi
jb     805f7b0 <argp_parse+0x4a90>
mov    %ecx,0x1c(%esp)
call   8049d00 <__ctype_b_loc@plt>
mov    %edi,%edx
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
jmp    805f5ab <argp_parse+0x488b>
lea    0x0(%esi),%esi
sub    $0x1,%edx
cmp    %esi,%edx
jb     805f7b8 <argp_parse+0x4a98>
movzbl (%edx),%ebx
testb  $0x1,(%eax,%ebx,2)
je     805f5a0 <argp_parse+0x4880>
lea    0x1(%edx),%ebx
cmp    %esi,%ebx
jbe    805f7c8 <argp_parse+0x4aa8>
cmp    %edx,%esi
mov    %ebx,%edi
jbe    805f6b9 <argp_parse+0x4999>
mov    0x14(%esp),%eax
lea    0x1(%esi,%eax,1),%eax
cmp    %ebx,%eax
je     805f6d3 <argp_parse+0x49b3>
lea    0x1(%edi),%edx
mov    %ebx,%eax
sub    %edx,%eax
cmp    0x18(%esp),%eax
jge    805f6e9 <argp_parse+0x49c9>
cmp    0x10(%esp),%ebx
jae    805f6e2 <argp_parse+0x49c2>
mov    0x18(%esp),%edx
mov    0x20(%ebp),%eax
sub    0x10(%esp),%eax
add    $0x1,%edx
cmp    %edx,%eax
jg     805f8e5 <argp_parse+0x4bc5>
mov    0x18(%ebp),%eax
cmp    %eax,%edi
jbe    805f62e <argp_parse+0x490e>
mov    0x0(%ebp),%edx
sub    %eax,%edi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   8049ab0 <fwrite_unlocked@plt>
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805f97b <argp_parse+0x4c5b>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    0x18(%ebp),%eax
mov    %eax,%ecx
sub    %eax,%esi
mov    %eax,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,%eax
add    %esi,0x14(%esp)
sub    %ecx,%eax
mov    %ecx,%esi
mov    0xc(%ebp),%edx
cmp    %eax,%edx
jg     805f701 <argp_parse+0x49e1>
test   %edx,%edx
mov    %esi,%eax
jle    805f682 <argp_parse+0x4962>
add    $0x1,%eax
mov    %eax,%edx
movb   $0x20,-0x1(%eax)
sub    %esi,%edx
cmp    %edx,0xc(%ebp)
jg     805f670 <argp_parse+0x4950>
mov    %eax,%esi
cmp    %ebx,%esi
jb     805f878 <argp_parse+0x4b58>
mov    0x10(%esp),%ecx
mov    $0xffffffff,%edi
mov    0xc(%ebp),%eax
sub    %ebx,%ecx
add    0x14(%esp),%ecx
add    %esi,%ecx
test   %eax,%eax
cmove  %edi,%eax
mov    %ecx,0x1c(%ebp)
mov    %eax,0x14(%ebp)
jmp    805f548 <argp_parse+0x4828>
xchg   %ax,%ax
movzbl (%edx),%ecx
testb  $0x1,(%eax,%ecx,2)
je     805f6c0 <argp_parse+0x49a0>
sub    $0x1,%edx
cmp    %esi,%edx
jae    805f6b0 <argp_parse+0x4990>
mov    0x14(%esp),%eax
lea    0x1(%edx),%edi
lea    0x1(%esi,%eax,1),%eax
cmp    %ebx,%eax
jne    805f5d9 <argp_parse+0x48b9>
mov    0x20(%ebp),%eax
sub    %edi,%eax
cmp    0x18(%esp),%eax
jle    805f5ea <argp_parse+0x48ca>
lea    0x1(%edi),%edx
mov    %ebx,%eax
sub    %edx,%eax
movb   $0xa,(%edi)
mov    %esi,0x10(%esp)
mov    %esi,0x18(%esp)
mov    %edx,%esi
mov    0xc(%ebp),%edx
cmp    %eax,%edx
jle    805f66a <argp_parse+0x494a>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
lea    0x1(%eax,%ecx,1),%eax
cmp    %eax,%ebx
je     805f8cf <argp_parse+0x4baf>
xor    %edi,%edi
test   %edx,%edx
jg     805f735 <argp_parse+0x4a15>
jmp    805f682 <argp_parse+0x4962>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x20,(%edx)
add    $0x1,%edi
cmp    %edi,0xc(%ebp)
jle    805f682 <argp_parse+0x4962>
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jb     805f720 <argp_parse+0x4a00>
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    805f729 <argp_parse+0x4a09>
lea    0x0(%esi),%esi
sub    %esi,%eax
xor    %ebx,%ebx
mov    %eax,0x8(%esp)
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
call   8049a30 <memchr@plt>
mov    %eax,%ecx
test   %ecx,%ecx
jne    805f52e <argp_parse+0x480e>
mov    0x14(%esp),%eax
mov    0x8(%ebp),%edx
add    %ebx,%eax
cmp    %edx,%eax
jb     805f952 <argp_parse+0x4c32>
mov    0xc(%ebp),%edi
sub    $0x1,%edx
test   %edi,%edi
mov    %edi,0x18(%esp)
js     805f936 <argp_parse+0x4c16>
mov    0x10(%esp),%ecx
jmp    805f57a <argp_parse+0x485a>
lea    0x0(%esi),%esi
mov    %edi,%edx
lea    0x0(%esi),%esi
lea    0x1(%edx),%ebx
cmp    %esi,%ebx
ja     805f990 <argp_parse+0x4c70>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%edi
jae    805f800 <argp_parse+0x4ae0>
mov    %ecx,%ebx
jmp    805f7e0 <argp_parse+0x4ac0>
call   8049d00 <__ctype_b_loc@plt>
movzbl (%edi),%edx
mov    (%eax),%eax
testb  $0x1,(%eax,%edx,2)
jne    805f802 <argp_parse+0x4ae2>
add    $0x1,%edi
cmp    %ebx,%edi
jne    805f7d0 <argp_parse+0x4ab0>
movl   $0x0,0x14(%ebp)
lea    0x1(%edi),%esi
mov    0x1c(%ebp),%ecx
jmp    805f548 <argp_parse+0x4828>
lea    0x0(%esi,%eiz,1),%esi
je     805f7e7 <argp_parse+0x4ac7>
call   8049d00 <__ctype_b_loc@plt>
mov    %edi,%ebx
mov    (%eax),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%eax
testb  $0x1,(%edx,%eax,2)
jne    805f810 <argp_parse+0x4af0>
jmp    805f5c9 <argp_parse+0x48a9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
cmp    %ecx,%eax
jbe    805f930 <argp_parse+0x4c10>
sub    %ecx,%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
sub    %ebx,%eax
add    %esi,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
call   80496c0 <memmove@plt>
mov    0x10(%esp),%edx
sub    0x14(%ebp),%edx
mov    0x14(%esp),%ecx
add    0x1c(%ebp),%ecx
add    %esi,%edx
add    %edi,%esi
movl   $0x0,0x14(%ebp)
sub    %edx,%ecx
mov    %ecx,0x1c(%ebp)
jmp    805f548 <argp_parse+0x4828>
nop
mov    0x18(%esp),%eax
add    0x14(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
call   80496c0 <memmove@plt>
jmp    805f68a <argp_parse+0x496a>
nop
mov    0x10(%esp),%ecx
lea    (%esi,%ebx,1),%edi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
sub    %esi,%ecx
mov    %ecx,0x8(%esp)
call   80496c0 <memmove@plt>
add    %ebx,0x1c(%ebp)
mov    %esi,(%esp)
mov    %edi,%esi
mov    %ebx,0x8(%esp)
movl   $0x20,0x4(%esp)
call   80499d0 <memset@plt>
jmp    805f4ef <argp_parse+0x47cf>
mov    0x20(%ebp),%eax
sub    %ebx,%eax
cmp    %eax,%edx
jle    805f66a <argp_parse+0x494a>
lea    0x0(%esi,%eiz,1),%esi
jmp    805f715 <argp_parse+0x49f5>
mov    0x10(%esp),%ecx
add    %edi,%edx
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
sub    %ebx,%ecx
mov    %ecx,0x8(%esp)
mov    %ecx,0x10(%esp)
call   80496c0 <memmove@plt>
mov    0xc(%ebp),%eax
lea    0x1(%edi),%edx
mov    0x10(%esp),%ecx
mov    %esi,0x18(%esp)
mov    %esi,0x10(%esp)
lea    0x1(%edi,%eax,1),%ebx
lea    (%ebx,%ecx,1),%eax
mov    %eax,0x14(%esp)
mov    %ebx,%eax
sub    %esi,0x14(%esp)
sub    %edx,%eax
mov    %edx,%esi
movb   $0xa,(%edi)
jmp    805f65f <argp_parse+0x493f>
mov    0x14(%esp),%eax
add    %ebx,%eax
mov    %eax,0x14(%ebp)
sub    %eax,%edx
mov    0x10(%esp),%eax
add    %edx,%eax
mov    %eax,0x1c(%ebp)
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x14(%ebp)
mov    0x1c(%ebp),%eax
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    805f4e8 <argp_parse+0x47c8>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <__overflow@plt>
jmp    805f646 <argp_parse+0x4926>
mov    %ebx,%edi
jmp    805f5c9 <argp_parse+0x48a9>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   805f480 <argp_parse+0x4760>
mov    0x1c(%ebx),%edx
mov    0x18(%ebx),%eax
cmp    %eax,%edx
jbe    805f9d9 <argp_parse+0x4cb9>
mov    (%ebx),%ecx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   8049ab0 <fwrite_unlocked@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   80496d0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80496d0 <free@plt>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x20(%ebx),%eax
sub    0x1c(%ebx),%eax
cmp    %esi,%eax
jb     805fa18 <argp_parse+0x4cf8>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805f480 <argp_parse+0x4760>
mov    (%ebx),%eax
mov    0x18(%ebx),%edx
mov    %eax,0xc(%esp)
mov    0x1c(%ebx),%eax
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
sub    %edx,%eax
mov    %eax,0x8(%esp)
call   8049ab0 <fwrite_unlocked@plt>
mov    0x1c(%ebx),%ecx
mov    0x18(%ebx),%edx
mov    %ecx,%edi
sub    %edx,%edi
cmp    %edi,%eax
jne    805fa78 <argp_parse+0x4d58>
mov    0x20(%ebx),%eax
mov    %edx,0x1c(%ebx)
movl   $0x0,0x10(%ebx)
sub    %edx,%eax
cmp    %eax,%esi
jbe    805fa08 <argp_parse+0x4ce8>
add    %eax,%esi
jae    805faa0 <argp_parse+0x4d80>
call   8049a20 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    805fa0d <argp_parse+0x4ced>
xchg   %ax,%ax
sub    %eax,0x10(%ebx)
sub    %eax,%ecx
add    %edx,%eax
mov    %ecx,0x1c(%ebx)
sub    %edx,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80496c0 <memmove@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   80498d0 <realloc@plt>
test   %eax,%eax
je     805fa67 <argp_parse+0x4d47>
add    %eax,%esi
mov    %eax,0x18(%ebx)
mov    %esi,0x20(%ebx)
mov    %eax,0x1c(%ebx)
jmp    805fa08 <argp_parse+0x4ce8>
push   %ebp
mov    $0x96,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
lea    0x48(%esp),%edi
mov    %eax,0x4(%esp)
mov    0x44(%esp),%ebp
mov    %esi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
je     805fb2b <argp_parse+0x4e0b>
mov    0x1c(%esi),%eax
mov    0x20(%esi),%ebx
mov    %edi,0x14(%esp)
mov    %ebp,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
sub    %eax,%ebx
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <__vsnprintf_chk@plt>
cmp    %eax,%ebx
ja     805fb38 <argp_parse+0x4e18>
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   805f9f0 <argp_parse+0x4cd0>
test   %eax,%eax
jne    805fae8 <argp_parse+0x4dc8>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    %eax,0x1c(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%edx),%edi
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    0x24(%edx),%esi
mov    %edx,0x14(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %eax,(%esp)
lea    0x0(%esi),%esi
cmp    %edi,%esi
jle    805fbbd <argp_parse+0x4e9d>
cmp    %esi,(%esp)
jle    805fbbd <argp_parse+0x4e9d>
mov    (%esp),%edx
mov    %esi,%ebp
sub    %edi,%ebp
sub    %esi,%edx
cmp    %ebp,%edx
jg     805fbe0 <argp_parse+0x4ec0>
test   %edx,%edx
jle    805fc1d <argp_parse+0x4efd>
mov    0x4(%esp),%ebx
lea    (%ebx,%edi,4),%eax
add    %edx,%edi
lea    (%ebx,%edi,4),%edx
lea    0x0(%esi),%esi
mov    (%eax),%ecx
mov    (%eax,%ebp,4),%ebx
mov    %ebx,(%eax)
mov    %ecx,(%eax,%ebp,4)
add    $0x4,%eax
cmp    %edx,%eax
jne    805fba8 <argp_parse+0x4e88>
cmp    %edi,%esi
jg     805fb7c <argp_parse+0x4e5c>
mov    0x10(%esp),%edi
mov    %edi,%eax
sub    %esi,%eax
mov    0x14(%esp),%esi
add    0xc(%esp),%eax
mov    %edi,0x24(%esi)
mov    %eax,0x20(%esi)
add    $0x18,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
jle    805fc15 <argp_parse+0x4ef5>
mov    0x4(%esp),%ebx
lea    0x0(%ebp,%edi,1),%edx
mov    %esi,0x8(%esp)
lea    (%ebx,%edi,4),%eax
lea    (%ebx,%edx,4),%ebx
mov    (%esp),%edx
sub    %esi,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
mov    (%eax,%edx,4),%esi
mov    %esi,(%eax)
mov    %ecx,(%eax,%edx,4)
add    $0x4,%eax
cmp    %ebx,%eax
jne    805fc00 <argp_parse+0x4ee0>
mov    0x8(%esp),%esi
sub    %ebp,(%esp)
jmp    805fb78 <argp_parse+0x4e58>
add    %edx,%edi
jmp    805fb78 <argp_parse+0x4e58>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x88(%esp),%ebp
mov    0x4(%ebp),%eax
mov    %eax,%ecx
mov    0x78(%esp),%eax
cmpb   $0x3a,(%eax)
mov    $0x0,%eax
cmovne %ecx,%eax
mov    0x70(%esp),%ecx
mov    %eax,0x30(%esp)
test   %ecx,%ecx
jle    805fe78 <argp_parse+0x5158>
mov    0x0(%ebp),%eax
movl   $0x0,0xc(%ebp)
test   %eax,%eax
je     805fde0 <argp_parse+0x50c0>
mov    0x10(%ebp),%edx
test   %edx,%edx
jne    805fcc5 <argp_parse+0x4fa5>
mov    0x8c(%esp),%edi
mov    %eax,0x24(%ebp)
mov    %eax,0x20(%ebp)
mov    $0x1,%eax
movl   $0x0,0x14(%ebp)
test   %edi,%edi
je     805fea8 <argp_parse+0x5188>
mov    0x78(%esp),%ecx
mov    %eax,0x1c(%ebp)
movzbl (%ecx),%edx
cmp    $0x2d,%dl
je     805fecf <argp_parse+0x51af>
cmp    $0x2b,%dl
je     80601a8 <argp_parse+0x5488>
xor    $0x1,%eax
mov    %eax,0x18(%ebp)
movl   $0x1,0x10(%ebp)
mov    0x14(%ebp),%eax
test   %eax,%eax
je     805fdf8 <argp_parse+0x50d8>
cmpb   $0x0,(%eax)
je     805fdf8 <argp_parse+0x50d8>
mov    %eax,0x24(%esp)
mov    0x7c(%esp),%edx
test   %edx,%edx
je     805fd48 <argp_parse+0x5028>
mov    0x0(%ebp),%eax
lea    0x0(,%eax,4),%ecx
mov    %ecx,0x48(%esp)
mov    0x74(%esp),%ecx
mov    %eax,0x34(%esp)
mov    (%ecx,%eax,4),%eax
mov    %eax,0x38(%esp)
movzbl 0x1(%eax),%eax
cmp    $0x2d,%al
mov    %al,0x3c(%esp)
je     805ff70 <argp_parse+0x5250>
mov    0x84(%esp),%eax
test   %eax,%eax
je     805fd48 <argp_parse+0x5028>
mov    0x38(%esp),%eax
cmpb   $0x0,0x2(%eax)
jne    805ff70 <argp_parse+0x5250>
movsbl 0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
je     805ff70 <argp_parse+0x5250>
mov    0x24(%esp),%eax
lea    0x1(%eax),%esi
mov    %esi,0x14(%ebp)
movzbl (%eax),%edi
mov    %edi,%eax
movsbl %al,%ebx
mov    0x78(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049940 <strchr@plt>
cmpb   $0x0,(%esi)
jne    805fd73 <argp_parse+0x5053>
addl   $0x1,0x0(%ebp)
mov    %edi,%ecx
cmp    $0x3a,%cl
jne    805ff10 <argp_parse+0x51f0>
mov    0x30(%esp),%eax
test   %eax,%eax
je     805fdc9 <argp_parse+0x50a9>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063fa1,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %ebx,0x8(%ebp)
add    $0x5c,%esp
mov    $0x3f,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x0(%ebp)
mov    $0x1,%eax
jmp    805fc7b <argp_parse+0x4f5b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%edx
cmp    %edx,0x24(%ebp)
jle    805fe03 <argp_parse+0x50e3>
mov    %edx,0x24(%ebp)
cmp    0x20(%ebp),%edx
jge    805fe0b <argp_parse+0x50eb>
mov    %edx,0x20(%ebp)
cmpl   $0x1,0x18(%ebp)
je     8060130 <argp_parse+0x5410>
cmp    %edx,0x70(%esp)
je     8060190 <argp_parse+0x5470>
mov    0x74(%esp),%eax
mov    (%eax,%edx,4),%eax
cmpb   $0x2d,(%eax)
jne    805fe88 <argp_parse+0x5168>
cmpb   $0x2d,0x1(%eax)
jne    805fee0 <argp_parse+0x51c0>
cmpb   $0x0,0x2(%eax)
jne    805fee0 <argp_parse+0x51c0>
mov    0x20(%ebp),%eax
add    $0x1,%edx
mov    0x24(%ebp),%ecx
mov    %edx,0x0(%ebp)
cmp    %ecx,%eax
je     8060300 <argp_parse+0x55e0>
cmp    %ecx,%edx
je     805fe65 <argp_parse+0x5145>
mov    0x74(%esp),%eax
mov    %ebp,%edx
call   805fb50 <argp_parse+0x4e30>
mov    0x20(%ebp),%eax
mov    0x70(%esp),%ecx
mov    %ecx,0x24(%ebp)
mov    %ecx,%edx
mov    %ecx,0x0(%ebp)
cmp    %eax,%edx
je     805fe78 <argp_parse+0x5158>
mov    %eax,0x0(%ebp)
add    $0x5c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x18(%ebp),%esi
test   %esi,%esi
je     805fe78 <argp_parse+0x5158>
add    $0x1,%edx
mov    $0x1,%ebx
mov    %edx,0x0(%ebp)
mov    %eax,0xc(%ebp)
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x8063f73,(%esp)
call   80498c0 <getenv@plt>
mov    0x78(%esp),%ecx
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x1c(%ebp)
movzbl (%ecx),%edx
cmp    $0x2d,%dl
jne    805fcaf <argp_parse+0x4f8f>
movl   $0x2,0x18(%ebp)
addl   $0x1,0x78(%esp)
jmp    805fcbe <argp_parse+0x4f9e>
movzbl 0x1(%eax),%ecx
test   %cl,%cl
je     805fe88 <argp_parse+0x5168>
mov    0x7c(%esp),%ebx
test   %ebx,%ebx
je     80602e0 <argp_parse+0x55c0>
xor    %edx,%edx
cmp    $0x2d,%cl
sete   %dl
add    $0x1,%edx
add    %edx,%eax
mov    %eax,0x14(%ebp)
mov    %eax,0x24(%esp)
jmp    805fcdd <argp_parse+0x4fbd>
lea    0x0(%esi),%esi
test   %eax,%eax
je     805fd7e <argp_parse+0x505e>
cmpb   $0x57,(%eax)
movzbl 0x1(%eax),%edx
je     806030a <argp_parse+0x55ea>
cmp    $0x3a,%dl
jne    805fe9d <argp_parse+0x517d>
cmpb   $0x3a,0x2(%eax)
je     80604c7 <argp_parse+0x57a7>
cmpb   $0x0,(%esi)
jne    8060401 <argp_parse+0x56e1>
mov    0x0(%ebp),%eax
cmp    0x70(%esp),%eax
je     806065b <argp_parse+0x593b>
mov    0x74(%esp),%esi
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%esi,%eax,4),%eax
mov    %eax,0xc(%ebp)
movl   $0x0,0x14(%ebp)
jmp    805fe9d <argp_parse+0x517d>
lea    0x0(%esi),%esi
mov    0x24(%esp),%esi
movzbl (%esi),%eax
test   %al,%al
mov    %al,0x4f(%esp)
je     80603f8 <argp_parse+0x56d8>
cmp    $0x3d,%al
jne    805ff94 <argp_parse+0x5274>
jmp    80603f8 <argp_parse+0x56d8>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805ff9e <argp_parse+0x527e>
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x3d,%al
jne    805ff90 <argp_parse+0x5270>
mov    0x7c(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     806040d <argp_parse+0x56ed>
mov    %esi,%eax
xor    %ecx,%ecx
mov    0x7c(%esp),%ebx
sub    0x24(%esp),%eax
mov    %esi,0x40(%esp)
mov    %ecx,%esi
mov    %ebp,0x88(%esp)
movl   $0xffffffff,0x44(%esp)
mov    %eax,%ebp
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
jmp    8060017 <argp_parse+0x52f7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
jne    8060003 <argp_parse+0x52e3>
mov    0x28(%esp),%eax
mov    0x4(%ebx),%ecx
cmp    %ecx,0x4(%eax)
je     8060108 <argp_parse+0x53e8>
movl   $0x1,0x2c(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
add    $0x1,%esi
test   %edi,%edi
je     8060060 <argp_parse+0x5340>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    806000b <argp_parse+0x52eb>
mov    %edi,(%esp)
call   8049950 <strlen@plt>
cmp    %ebp,%eax
je     8060288 <argp_parse+0x5568>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    805ffe8 <argp_parse+0x52c8>
mov    %ebx,0x28(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
mov    %esi,0x44(%esp)
add    $0x1,%esi
test   %edi,%edi
jne    8060017 <argp_parse+0x52f7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x40(%esp),%esi
mov    0x88(%esp),%ebp
test   %eax,%eax
je     80601c0 <argp_parse+0x54a0>
mov    0x30(%esp),%eax
mov    0x24(%esp),%ebx
test   %eax,%eax
je     80600d4 <argp_parse+0x53b4>
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8063f83,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x38(%esp),%esi
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x0(%ebp),%eax
mov    0x14(%ebp),%ebx
mov    %eax,0x34(%esp)
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
add    %eax,%ebx
mov    %ebx,0x14(%ebp)
mov    0x34(%esp),%eax
mov    $0x3f,%ebx
movl   $0x0,0x8(%ebp)
add    $0x1,%eax
mov    %eax,0x0(%ebp)
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ecx
cmp    %ecx,0x8(%eax)
jne    8060003 <argp_parse+0x52e3>
mov    0xc(%ebx),%edi
cmp    %edi,0xc(%eax)
mov    $0x1,%eax
cmove  0x2c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    806000b <argp_parse+0x52eb>
lea    0x0(%esi),%esi
mov    0x20(%ebp),%ecx
mov    0x24(%ebp),%eax
cmp    %eax,%ecx
je     80602f0 <argp_parse+0x55d0>
cmp    %eax,%edx
je     8060150 <argp_parse+0x5430>
mov    0x74(%esp),%eax
mov    %ebp,%edx
call   805fb50 <argp_parse+0x4e30>
mov    0x0(%ebp),%edx
cmp    %edx,0x70(%esp)
mov    %edx,%eax
jle    8060183 <argp_parse+0x5463>
mov    0x70(%esp),%ebx
mov    0x74(%esp),%ecx
jmp    8060172 <argp_parse+0x5452>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ebx,%eax
mov    %eax,0x0(%ebp)
je     80601a0 <argp_parse+0x5480>
mov    (%ecx,%eax,4),%edx
cmpb   $0x2d,(%edx)
jne    8060168 <argp_parse+0x5448>
cmpb   $0x0,0x1(%edx)
je     8060168 <argp_parse+0x5448>
mov    0x0(%ebp),%edx
mov    %eax,0x24(%ebp)
cmp    %edx,0x70(%esp)
jne    805fe1f <argp_parse+0x50ff>
mov    0x24(%ebp),%edx
mov    0x20(%ebp),%eax
jmp    805fe71 <argp_parse+0x5151>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,0x24(%ebp)
jmp    8060186 <argp_parse+0x5466>
nop
movl   $0x0,0x18(%ebp)
addl   $0x1,0x78(%esp)
jmp    805fcbe <argp_parse+0x4f9e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     806040d <argp_parse+0x56ed>
mov    0x44(%esp),%eax
mov    %eax,%edi
mov    0x34(%esp),%eax
add    $0x1,%eax
mov    %eax,0x0(%ebp)
cmpb   $0x0,(%esi)
je     806029a <argp_parse+0x557a>
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    8060494 <argp_parse+0x5774>
mov    0x30(%esp),%ecx
mov    0x24(%esp),%esi
test   %ecx,%ecx
je     8060268 <argp_parse+0x5548>
mov    0x74(%esp),%eax
mov    0x48(%esp),%esi
mov    (%ebx),%edi
mov    (%eax,%esi,1),%eax
cmpb   $0x2d,0x1(%eax)
je     8060610 <argp_parse+0x58f0>
movsbl (%eax),%edx
mov    0x74(%esp),%eax
mov    %edx,0x24(%esp)
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063ff0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%edx
mov    %esi,0xc(%esp)
mov    %edi,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %eax,%esi
mov    0xc(%ebx),%eax
mov    $0x3f,%ebx
mov    %esi,0x14(%ebp)
mov    %eax,0x8(%ebp)
jmp    805fe9d <argp_parse+0x517d>
lea    0x0(%esi),%esi
mov    %esi,%edi
mov    0x88(%esp),%ebp
mov    0x40(%esp),%esi
jmp    80601d2 <argp_parse+0x54b2>
cmpl   $0x1,0x4(%ebx)
je     806049f <argp_parse+0x577f>
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %esi,%eax
mov    %eax,0x14(%ebp)
mov    0x80(%esp),%eax
test   %eax,%eax
je     80602c9 <argp_parse+0x55a9>
mov    0x80(%esp),%eax
mov    %edi,(%eax)
mov    0x8(%ebx),%eax
test   %eax,%eax
je     806056f <argp_parse+0x584f>
mov    0xc(%ebx),%edx
xor    %ebx,%ebx
mov    %edx,(%eax)
jmp    805fe9d <argp_parse+0x517d>
mov    $0x1,%edx
jmp    805feff <argp_parse+0x51df>
lea    0x0(%esi),%esi
cmp    %ecx,%edx
je     8060150 <argp_parse+0x5430>
mov    %edx,0x20(%ebp)
jmp    8060150 <argp_parse+0x5430>
mov    %edx,0x20(%ebp)
mov    %edx,%eax
jmp    805fe65 <argp_parse+0x5145>
cmp    $0x3b,%dl
jne    805ff25 <argp_parse+0x5205>
cmpb   $0x0,(%esi)
je     80605b1 <argp_parse+0x5891>
addl   $0x1,0x0(%ebp)
mov    %esi,0xc(%ebp)
mov    %esi,0x24(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x14(%ebp)
movzbl (%eax),%ebx
cmp    $0x3d,%bl
je     80608ee <argp_parse+0x5bce>
test   %bl,%bl
je     80608ee <argp_parse+0x5bce>
mov    %eax,%esi
jmp    806034c <argp_parse+0x562c>
xchg   %ax,%ax
test   %bl,%bl
je     8060357 <argp_parse+0x5637>
add    $0x1,%esi
movzbl (%esi),%ebx
cmp    $0x3d,%bl
jne    8060348 <argp_parse+0x5628>
mov    0x7c(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     80608dd <argp_parse+0x5bbd>
mov    %esi,%eax
xor    %ecx,%ecx
sub    0x24(%esp),%eax
mov    %bl,0x38(%esp)
mov    0x7c(%esp),%ebx
mov    %esi,0x3c(%esp)
mov    %ecx,%esi
mov    %ebp,0x88(%esp)
mov    %eax,%ebp
movl   $0x0,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
jmp    80603b8 <argp_parse+0x5698>
xchg   %ax,%ax
movl   $0x1,0x2c(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
add    $0x1,%esi
test   %edi,%edi
je     80604dc <argp_parse+0x57bc>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    80603a8 <argp_parse+0x5688>
mov    %edi,(%esp)
call   8049950 <strlen@plt>
cmp    %eax,%ebp
je     8060719 <argp_parse+0x59f9>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    80603a0 <argp_parse+0x5680>
mov    %esi,0x34(%esp)
mov    %ebx,0x28(%esp)
jmp    80603a8 <argp_parse+0x5688>
lea    0x0(%esi),%esi
mov    0x24(%esp),%esi
jmp    805ff9e <argp_parse+0x527e>
mov    %esi,0xc(%ebp)
addl   $0x1,0x0(%ebp)
jmp    805ff5e <argp_parse+0x523e>
mov    0x84(%esp),%eax
test   %eax,%eax
jne    80605d7 <argp_parse+0x58b7>
mov    0x30(%esp),%eax
test   %eax,%eax
je     8060488 <argp_parse+0x5768>
cmpb   $0x2d,0x3c(%esp)
je     806073f <argp_parse+0x5a1f>
mov    0x38(%esp),%eax
movsbl (%eax),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064068,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%edi
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x0(%ebp),%eax
mov    %eax,0x34(%esp)
movl   $0x8063fbc,0x14(%ebp)
jmp    80600e1 <argp_parse+0x53c1>
add    $0x1,%esi
mov    %esi,0xc(%ebp)
jmp    80602a4 <argp_parse+0x5584>
cmp    %eax,0x70(%esp)
jle    8060577 <argp_parse+0x5857>
mov    0x34(%esp),%eax
mov    0x48(%esp),%esi
add    $0x2,%eax
mov    %eax,0x0(%ebp)
mov    0x74(%esp),%eax
mov    0x4(%eax,%esi,1),%eax
mov    %eax,0xc(%ebp)
jmp    80602a4 <argp_parse+0x5584>
cmpb   $0x0,(%esi)
jne    8060401 <argp_parse+0x56e1>
movl   $0x0,0xc(%ebp)
jmp    805ff5e <argp_parse+0x523e>
mov    0x2c(%esp),%edi
movzbl 0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x88(%esp),%ebp
test   %edi,%edi
je     806067f <argp_parse+0x595f>
mov    0x30(%esp),%esi
mov    0x24(%esp),%ebx
test   %esi,%esi
je     8060554 <argp_parse+0x5834>
mov    0x0(%ebp),%eax
mov    0x74(%esp),%esi
mov    (%esi,%eax,4),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80640b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%ebx
mov    %ebx,(%esp)
call   8049950 <strlen@plt>
addl   $0x1,0x0(%ebp)
add    %eax,%ebx
mov    %ebx,0x14(%ebp)
mov    $0x3f,%ebx
jmp    805fe9d <argp_parse+0x517d>
mov    0xc(%ebx),%ebx
jmp    805fe9d <argp_parse+0x517d>
mov    0x30(%esp),%edx
mov    0x24(%esp),%esi
test   %edx,%edx
jne    8060792 <argp_parse+0x5a72>
mov    %esi,(%esp)
call   8049950 <strlen@plt>
add    %eax,%esi
mov    0xc(%ebx),%eax
mov    %esi,0x14(%ebp)
mov    %eax,0x8(%ebp)
mov    0x78(%esp),%eax
cmpb   $0x3a,(%eax)
jne    805fdcc <argp_parse+0x50ac>
mov    $0x3a,%ebx
jmp    805fe9d <argp_parse+0x517d>
mov    0x0(%ebp),%eax
cmp    0x70(%esp),%eax
je     8060832 <argp_parse+0x5b12>
mov    0x74(%esp),%esi
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%esi,%eax,4),%eax
mov    %eax,0xc(%ebp)
mov    %eax,0x24(%esp)
jmp    8060327 <argp_parse+0x5607>
cmpb   $0x2d,0x3c(%esp)
je     8060734 <argp_parse+0x5a14>
movsbl 0x4f(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8049940 <strchr@plt>
test   %eax,%eax
jne    805fd48 <argp_parse+0x5028>
cmpl   $0x0,0x30(%esp)
jne    806042f <argp_parse+0x570f>
jmp    8060488 <argp_parse+0x5768>
nop
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8063fc0,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%esi
jmp    8060268 <argp_parse+0x5548>
mov    0x30(%esp),%eax
test   %eax,%eax
jne    8060895 <argp_parse+0x5b75>
mov    0x78(%esp),%eax
mov    %ebx,0x8(%ebp)
xor    %ebx,%ebx
cmpb   $0x3a,(%eax)
setne  %bl
lea    0x3a(%ebx,%ebx,4),%ebx
jmp    805ff5e <argp_parse+0x523e>
mov    0x28(%esp),%eax
test   %eax,%eax
je     80608dd <argp_parse+0x5bbd>
mov    0x34(%esp),%edi
mov    %eax,0x7c(%esp)
test   %bl,%bl
mov    0x7c(%esp),%eax
je     80607e4 <argp_parse+0x5ac4>
mov    0x4(%eax),%ecx
test   %ecx,%ecx
jne    8060915 <argp_parse+0x5bf5>
cmpl   $0x0,0x30(%esp)
je     80606fa <argp_parse+0x59da>
mov    0x7c(%esp),%eax
mov    (%eax),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80640d8,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    $0x3f,%ebx
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%edx,%ecx,1),%eax
mov    %eax,0x14(%ebp)
jmp    805fe9d <argp_parse+0x517d>
mov    %esi,%edi
mov    0x88(%esp),%ebp
mov    %ebx,0x7c(%esp)
mov    0x3c(%esp),%esi
movzbl 0x38(%esp),%ebx
jmp    8060693 <argp_parse+0x5973>
cmpl   $0x0,0x30(%esp)
je     8060488 <argp_parse+0x5768>
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064048,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    0x24(%esp),%esi
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x0(%ebp),%eax
mov    %eax,0x34(%esp)
jmp    8060488 <argp_parse+0x5768>
mov    0x74(%esp),%eax
mov    0x48(%esp),%esi
mov    (%eax,%esi,1),%edi
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8064020,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%esi
jmp    8060587 <argp_parse+0x5867>
cmpl   $0x1,0x4(%eax)
je     80608f7 <argp_parse+0x5bd7>
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   8049950 <strlen@plt>
mov    0x80(%esp),%edx
add    %esi,%eax
test   %edx,%edx
mov    %eax,0x14(%ebp)
je     8060813 <argp_parse+0x5af3>
mov    0x80(%esp),%eax
mov    %edi,(%eax)
mov    0x7c(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     8060999 <argp_parse+0x5c79>
mov    0x7c(%esp),%esi
xor    %ebx,%ebx
mov    0xc(%esi),%edx
mov    %edx,(%eax)
jmp    805fe9d <argp_parse+0x517d>
mov    0x30(%esp),%eax
test   %eax,%eax
je     806087d <argp_parse+0x5b5d>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8064088,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x78(%esp),%eax
mov    %ebx,0x8(%ebp)
xor    %ebx,%ebx
cmpb   $0x3a,(%eax)
setne  %bl
lea    0x3a(%ebx,%ebx,4),%ebx
jmp    805fe9d <argp_parse+0x517d>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8064088,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    8060667 <argp_parse+0x5947>
movl   $0x0,0x14(%ebp)
mov    $0x57,%ebx
jmp    805fe9d <argp_parse+0x517d>
mov    0x24(%esp),%esi
jmp    8060357 <argp_parse+0x5637>
mov    0x0(%ebp),%eax
cmp    %eax,0x70(%esp)
jle    8060920 <argp_parse+0x5c00>
mov    0x74(%esp),%esi
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%esi,%eax,4),%eax
mov    %eax,0xc(%ebp)
jmp    80607ee <argp_parse+0x5ace>
add    $0x1,%esi
mov    %esi,0xc(%ebp)
jmp    80607ee <argp_parse+0x5ace>
cmpl   $0x0,0x30(%esp)
je     8060972 <argp_parse+0x5c52>
mov    0x74(%esp),%esi
mov    -0x4(%esi,%eax,4),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064020,0x4(%esp)
movl   $0x0,(%esp)
call   8049790 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806a984,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x14(%ebp),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%edx,%ecx,1),%eax
mov    %eax,0x14(%ebp)
mov    0x78(%esp),%eax
cmpb   $0x3a,(%eax)
jne    805fdcc <argp_parse+0x50ac>
jmp    80605a7 <argp_parse+0x5887>
mov    0x7c(%esp),%eax
mov    0xc(%eax),%ebx
jmp    805fe9d <argp_parse+0x517d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x806a968,%eax
movl   $0x806afc0,0x18(%esp)
mov    %eax,0x806afc0
mov    0x806a964,%eax
mov    %eax,0x806afc4
mov    0x48(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805fc30 <argp_parse+0x4f10>
mov    0x806afc0,%edx
mov    %edx,0x806a968
mov    0x806afcc,%edx
mov    %edx,0x806b044
mov    0x806afc8,%edx
mov    %edx,0x806a960
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x1,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80609b0 <argp_parse+0x5c90>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   8049700 <clock_gettime@plt>
test   %eax,%eax
je     8060ad1 <argp_parse+0x5db1>
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049760 <gettimeofday@plt>
mov    0x18(%esp),%eax
mov    %eax,(%ebx)
imul   $0x3e8,0x1c(%esp),%eax
mov    %eax,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     8060ba8 <argp_parse+0x5e88>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     8060bc4 <argp_parse+0x5ea4>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    8060b40 <argp_parse+0x5e20>
cmp    %ebp,%esi
jbe    8060b68 <argp_parse+0x5e48>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    8060b48 <argp_parse+0x5e28>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    8060b88 <argp_parse+0x5e68>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     8060b5a <argp_parse+0x5e3a>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    8060b77 <argp_parse+0x5e57>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    8060b48 <argp_parse+0x5e28>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    8060bd8 <argp_parse+0x5eb8>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    8060b9e <argp_parse+0x5e7e>
cmp    %ebp,%eax
jae    8060b44 <argp_parse+0x5e24>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    8060b48 <argp_parse+0x5e28>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    8060b1b <argp_parse+0x5dfb>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    8060b1b <argp_parse+0x5dfb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     8060c48 <argp_parse+0x5f28>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8060c3d <argp_parse+0x5f1d>
cmp    0x4(%esp),%ebp
je     8060c48 <argp_parse+0x5f28>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    8060b48 <argp_parse+0x5e28>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    8060b48 <argp_parse+0x5e28>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    8060cb0 <argp_parse+0x5f90>
cmp    %ebp,%ecx
ja     8060ce8 <argp_parse+0x5fc8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8060c98 <argp_parse+0x5f78>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8060cd8 <argp_parse+0x5fb8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8060cf8 <argp_parse+0x5fd8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    8060d68 <argp_parse+0x6048>
cmp    %edx,%eax
jb     8060d68 <argp_parse+0x6048>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     8060d78 <argp_parse+0x6058>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8060d59 <argp_parse+0x6039>
cmp    (%esp),%esi
je     8060d78 <argp_parse+0x6058>
mov    %edi,%eax
xor    %edx,%edx
jmp    8060cdc <argp_parse+0x5fbc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    8060cdc <argp_parse+0x5fbc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8060dd8 <argp_parse+0x60b8>
cmp    %edi,%esi
jbe    8060e10 <argp_parse+0x60f0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     8060e30 <argp_parse+0x6110>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8060e40 <argp_parse+0x6120>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8060ed8 <argp_parse+0x61b8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    8060e21 <argp_parse+0x6101>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    8060dcb <argp_parse+0x60ab>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8060ec4 <argp_parse+0x61a4>
cmp    %eax,0xc(%esp)
jb     8060ec0 <argp_parse+0x61a0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    8060e9e <argp_parse+0x617e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    8060e9e <argp_parse+0x617e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8060df1 <argp_parse+0x60d1>
jmp    8060e01 <argp_parse+0x60e1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049e60 <fchmod@plt+0x130>
add    $0x9105,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   80495c8 <__ctype_toupper_loc@plt-0x38>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8060f49 <argp_parse+0x6229>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8060f28 <argp_parse+0x6208>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8060f60 <argp_parse+0x6240>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   8049e60 <fchmod@plt+0x130>
add    $0x9083,%ebx
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c20 <__xstat64@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   8049e60 <fchmod@plt+0x130>
add    $0x9053,%ebx
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c80 <__lxstat64@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x8,%esp
call   8049e60 <fchmod@plt+0x130>
add    $0x9027,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806102f <_IO_stdin_used+0x2b>
insb   (%dx),%es:(%edi)
imul   $0x20732520,0x6b(%esi),%ebp
je     8061088 <_IO_stdin_used+0x84>
and    %ah,0x5c5c0073
add    %bl,0x0(%esi,%ebp,2)
pop    %esp
bound  %eax,(%eax)
pop    %esp
jb     8061029 <_IO_stdin_used+0x25>
pop    %esp
je     806102c <_IO_stdin_used+0x28>
pop    %esp
data16
add    %bl,0x0(%eax,%eiz,1)
pop    %esp
and    (%eax),%al
pop    %esp
and    $0x6f3330,%eax
and    $0x33252073,%eax
insb   (%dx),%es:(%edi)
jne    8061063 <_IO_stdin_used+0x5f>
add    %ah,0x2075382d
and    $0x2075382d,%eax
add    %ah,0x382e382d
jae    8061076 <_IO_stdin_used+0x72>
and    $0x382e382d,%eax
jae    806107d <_IO_stdin_used+0x79>
add    %ah,0x2c756c33
and    %ah,0x20756c33
add    %ah,0x756c6c38
and    %al,(%eax)
and    $0x4d002073,%eax
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80610e9 <_IO_stdin_used+0xe5>
gs and %ch,%fs:%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,0x732a2e
jo     80610ff <_IO_stdin_used+0xfb>
gs
insl   (%dx),%es:(%edi)
popa
je     8061107 <_IO_stdin_used+0x103>
jb     80610f9 <_IO_stdin_used+0xf5>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061108 <_IO_stdin_used+0x104>
add    %dh,(%eax)
aaa
xor    %dh,(%edi)
xor    %dh,(%ecx)
add    %dh,(%eax)
aaa
xor    %dh,(%edi)
xor    %dh,(%edi)
add    %dh,(%eax)
aaa
xor    %dh,(%edi)
xor    %dh,(%edx)
add    %ch,(%edi)
fs
gs
jbe    80610ed <_IO_stdin_used+0xe9>
je     8061134 <_IO_stdin_used+0x130>
jns    80610c2 <_IO_stdin_used+0xbe>
ja     80610c4 <_IO_stdin_used+0xc0>
jae    806113a <_IO_stdin_used+0x136>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8061130 <_IO_stdin_used+0x12c>
and    %ch,0x6e(%ecx)
jo     8061146 <_IO_stdin_used+0x142>
je     80610f3 <_IO_stdin_used+0xef>
imul   $0x736f6c63,0x20(%ebx),%esi
gs add %ah,%fs:%gs:0x632573
jb     8061149 <_IO_stdin_used+0x145>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x3e2d2073
and    %al,(%eax)
and    $0x66203a73,%eax
imul   $0x656d616e,0x20(%ebp,%eiz,2),%ebp
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %ah,0x61(%bp,%di)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806112e <_IO_stdin_used+0x12a>
jb     8061175 <_IO_stdin_used+0x171>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8061179 <_IO_stdin_used+0x175>
and    %ah,0x75(%ebx)
jb     806118b <_IO_stdin_used+0x187>
outsb  %gs:(%esi),(%dx)
je     806113d <_IO_stdin_used+0x139>
and    $0x73250073,%eax
cmp    (%eax),%ah
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806114b <_IO_stdin_used+0x147>
jae    80611a6 <_IO_stdin_used+0x1a2>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
and    $0x73250073,%eax
cmp    (%eax),%ah
jne    80611ad <_IO_stdin_used+0x1a9>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
add    %dl,%gs:0x41(%edx,%edx,2)
dec    %ecx
dec    %esp
inc    %ebp
push   %edx
and    %esp,(%ecx)
and    %eax,(%eax)
and    $0x6220756c,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
or     (%eax),%al
and    $0x6220756c,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0xa(%ebx)
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806119b <_IO_stdin_used+0x197>
jae    80611f4 <_IO_stdin_used+0x1f0>
popa
jo     80611a0 <_IO_stdin_used+0x19c>
push   $0x77666c61
outsl  %ds:(%esi),(%dx)
jb     80611ec <_IO_stdin_used+0x1e8>
jae    80611aa <_IO_stdin_used+0x1a6>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f203a73
fs and %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ch,0x61(%eax)
insb   (%dx),%es:(%edi)
data16
ja     8061214 <_IO_stdin_used+0x210>
jb     806120b <_IO_stdin_used+0x207>
jae    80611a9 <_IO_stdin_used+0x1a5>
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80611d3 <_IO_stdin_used+0x1cf>
jae    806122c <_IO_stdin_used+0x228>
popa
jo     80611d8 <_IO_stdin_used+0x1d4>
bound  %edi,0x74(%ecx)
gs
jae    80611de <_IO_stdin_used+0x1da>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f203a73
fs and %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x79(%edx)
je     806123c <_IO_stdin_used+0x238>
jae    80611d9 <_IO_stdin_used+0x1d5>
add    %al,(%eax)
add    %ah,0x63203a73
push   $0x736b6365
jne    8061255 <_IO_stdin_used+0x251>
and    %ah,0x72(%ebp)
jb     806125c <_IO_stdin_used+0x258>
jb     806120f <_IO_stdin_used+0x20b>
sub    %dh,(%eax)
js     8061218 <_IO_stdin_used+0x214>
insb   (%dx),%es:(%edi)
js     8061222 <_IO_stdin_used+0x21e>
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    8061268 <_IO_stdin_used+0x264>
and    %ah,%fs:0x65(%edx)
and    %dh,(%eax)
js     8061229 <_IO_stdin_used+0x225>
insb   (%dx),%es:(%edi)
js     8061230 <_IO_stdin_used+0x22c>
add    %ah,0x73203a73
je     806127e <_IO_stdin_used+0x27a>
jb     8061276 <_IO_stdin_used+0x272>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je 806128a <_IO_stdin_used+0x286>
and    %ch,0x73(%ecx)
and    %ch,0x75(%edi)
je     806124a <_IO_stdin_used+0x246>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
ja     8061297 <_IO_stdin_used+0x293>
jb     80612a6 <_IO_stdin_used+0x2a2>
imul   $0x6b73203a,0x67(%esi),%ebp
imul   $0x25206465,0x70(%eax),%esi
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x79(%edx)
je     80612b2 <_IO_stdin_used+0x2ae>
jae    806126f <_IO_stdin_used+0x26b>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x75(%edx)
outsb  %ds:(%esi),(%dx)
imul   $0x0,(%eax),%eax
ja     80612bb <_IO_stdin_used+0x2b7>
jb     80612ca <_IO_stdin_used+0x2c6>
imul   $0x6b73203a,0x67(%esi),%ebp
imul   $0x25206465,0x70(%eax),%esi
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x79(%edx)
je     80612d6 <_IO_stdin_used+0x2d2>
and    %ch,0x66(%edi)
and    %ch,0x75(%edx)
outsb  %ds:(%esi),(%dx)
imul   $0x0,(%eax),%eax
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80612e8 <_IO_stdin_used+0x2e4>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80612ee <_IO_stdin_used+0x2ea>
and    %ah,0x20732a2e
imul   $0x2074756f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
ja     8061303 <_IO_stdin_used+0x2ff>
jb     8061312 <_IO_stdin_used+0x30e>
imul   $0x7261203a,0x67(%esi),%ebp
arpl   %bp,0x69(%eax)
jbe    8061315 <_IO_stdin_used+0x311>
and    %ch,0x65(%eax)
popa
fs
gs
jb     80612d8 <_IO_stdin_used+0x2d4>
push   $0x72207361
gs
jbe    8061325 <_IO_stdin_used+0x321>
jb     8061335 <_IO_stdin_used+0x331>
and    %ah,%gs:0x79(%edx)
je     806132d <_IO_stdin_used+0x329>
sub    $0x6564726f,%eax
jb     80612cf <_IO_stdin_used+0x2cb>
add    %ah,0x6f6e2073
je     80612f7 <_IO_stdin_used+0x2f3>
arpl   %si,0x65(%edx)
popa
je     8061342 <_IO_stdin_used+0x33e>
cmp    %fs:(%eax),%ah
outsb  %ds:(%esi),(%dx)
gs
ja     8061349 <_IO_stdin_used+0x345>
jb     8061306 <_IO_stdin_used+0x302>
outsl  %ds:(%esi),(%dx)
jb     8061309 <_IO_stdin_used+0x305>
jae    806134c <_IO_stdin_used+0x348>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x67(%ecx)
and    %dh,%gs:0x65(%esi)
jb     8061369 <_IO_stdin_used+0x365>
imul   $0x69786520,0x6e(%edi),%ebp
jae    8061373 <_IO_stdin_used+0x36f>
jae    8061301 <_IO_stdin_used+0x2fd>
add    %al,(%eax)
add    %ah,0x66203a73
imul   $0x69772064,0x6c(%ebp),%esp
fs
je     806137b <_IO_stdin_used+0x377>
and    %ch,0x6f(%esi)
je     8061338 <_IO_stdin_used+0x334>
jae    806138f <_IO_stdin_used+0x38b>
data32 imul $0x6e65,0x69(%ebx),%sp
je     8061343 <_IO_stdin_used+0x33f>
outsw  %ds:(%esi),(%dx)
jb     8061347 <_IO_stdin_used+0x343>
jae    806139d <_IO_stdin_used+0x399>
outsl  %ds:(%esi),(%dx)
jb     8061395 <_IO_stdin_used+0x391>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    8061332 <_IO_stdin_used+0x32e>
add    %al,(%eax)
and    $0x6f6e2073,%eax
je     806135b <_IO_stdin_used+0x357>
fs
jne    80613ab <_IO_stdin_used+0x3a7>
jo     80613a5 <_IO_stdin_used+0x3a1>
cmp    %fs:(%eax),%ah
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8061367 <_IO_stdin_used+0x363>
popa
and    %dh,0x65(%edx)
addr16 jne 80613ba <_IO_stdin_used+0x3b6>
popa
jb     8061371 <_IO_stdin_used+0x36d>
imul   $0x6163,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806137d <_IO_stdin_used+0x379>
jb     80613c4 <_IO_stdin_used+0x3c0>
popa
and    %ah,%fs:0x68(%ebx)
arpl   %bp,%gs:0x73(%ebx)
jne    80613d7 <_IO_stdin_used+0x3d3>
and    %ah,0x6f(%esi)
jb     806138f <_IO_stdin_used+0x38b>
and    $0x73250073,%eax
cmp    (%eax),%ah
je     80613ea <_IO_stdin_used+0x3e6>
jne    80613e8 <_IO_stdin_used+0x3e4>
arpl   %sp,0x74(%ecx)
imul   $0x732520,0x67(%esi),%ebp
imul   $0x6f6d,0x20(%ebp,%eiz,2),%bp
fs add %dh,%fs:%gs:0x69(%ebp)
add    %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x6d,0x0(%ebx),%esi
outsl  %ds:(%esi),(%dx)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ecx,%ebp,2)
add    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
jp     8061422 <_IO_stdin_used+0x41e>
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x6a616d20,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jb     80613eb <_IO_stdin_used+0x3e7>
outsb  %ds:(%esi),(%dx)
jne    806143b <_IO_stdin_used+0x437>
bound  %esp,0x72(%ebp)
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x6e696d20,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jb     80613ff <_IO_stdin_used+0x3fb>
outsb  %ds:(%esi),(%dx)
jne    806144f <_IO_stdin_used+0x44b>
bound  %esp,0x72(%ebp)
add    %dh,0x64(%edx)
gs
jbe    806140b <_IO_stdin_used+0x407>
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     80613f1 <_IO_stdin_used+0x3ed>
jb     8061457 <_IO_stdin_used+0x453>
gs
jbe    8061416 <_IO_stdin_used+0x412>
insl   (%dx),%es:(%edi)
imul   $0x616e0072,0x6f(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
jp     806146a <_IO_stdin_used+0x466>
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x6d756e20,0x65(%ebx),%esp
bound  %esp,0x72(%ebp)
add    %dh,0x64(%edx)
gs
jbe    8061419 <_IO_stdin_used+0x415>
and    $0x74203a73,%eax
jb     8061495 <_IO_stdin_used+0x491>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ch,%fs:%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     80614a1 <_IO_stdin_used+0x49d>
and    %ch,0x75(%edi)
je     80614b2 <_IO_stdin_used+0x4ae>
jne    80614b8 <_IO_stdin_used+0x4b4>
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    80614b2 <_IO_stdin_used+0x4ae>
add    %ah,%fs:0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x6c,(%eax),%esp
imul   $0x6e676920,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     80614c5 <_IO_stdin_used+0x4c1>
add    %ah,%fs:0x73203a73
jns    80614d6 <_IO_stdin_used+0x4d2>
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %al,(%bx,%si)
add    %al,(%eax)
rcr    $0x4,%bh
or     %bh,%al
fldl   (%eax,%ecx,1)
push   %eax
fiadd  (%eax,%ecx,1)
fcomp  %st(6)
add    $0x8,%al
clc
fiadd  (%eax,%ecx,1)
sbb    %bl,%bh
add    $0x8,%al
sbb    %bl,%bh
add    $0x8,%al
jo     806147d <_IO_stdin_used+0x479>
add    $0x8,%al
mov    $0x300804dd,%eax
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
inc    %ecx
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
add    %ah,0x696c2073
outsb  %ds:(%esi),(%dx)
imul   $0x20,0x64(%ebp),%esp
je     8061530 <_IO_stdin_used+0x52c>
and    %ah,0x6e690073
jbe    806152a <_IO_stdin_used+0x526>
insb   (%dx),%es:(%edi)
imul   $0x6b636f6c,0x62(%eax,%eiz,1),%esp
and    %dh,0x69(%ebx)
jp     806153c <_IO_stdin_used+0x538>
add    %ch,0x65(%esi)
ja     806153f <_IO_stdin_used+0x53b>
add    %dh,0x73(%ebp)
je     8061542 <_IO_stdin_used+0x53e>
jb     80614e3 <_IO_stdin_used+0x4df>
push   $0x63646f70
add    %ch,0x70(%eax)
bound  %ebp,0x6e(%ecx)
add    %cl,0x6f(%ebp)
fs and %ah,%fs:%gs:0x6c(%ecx)
jb     806155d <_IO_stdin_used+0x559>
popa
fs
jns    806151c <_IO_stdin_used+0x518>
fs imul $0x64,%fs:%gs:0x65(%esi),%bp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x6f(%esi)
sub    $0x20732500,%eax
imul   $0x6e61656d,0x20(%ebx),%esi
imul   $0x7373656c,0x67(%esi),%ebp
and    %dh,0x69(%edi)
je     806158b <_IO_stdin_used+0x587>
and    %ah,0x2d2d0073
gs
js     80615a0 <_IO_stdin_used+0x59c>
jb     806158f <_IO_stdin_used+0x58b>
arpl   %si,0x2d(%eax,%eax,1)
sub    $0x6b6e696c,%eax
add    %ch,0x7365722d
gs
je     8061540 <_IO_stdin_used+0x53c>
sub    $0x7265642d,%eax
gs
data16
gs
jb     80615af <_IO_stdin_used+0x5ab>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
sub    $0x7070612d,%eax
outsb  %gs:(%esi),(%dx)
add    %ch,%fs:0x2d2d004f
je     80615cd <_IO_stdin_used+0x5c9>
sub    $0x6f647473,%eax
jne    80615d9 <_IO_stdin_used+0x5d5>
add    %ch,0x6b616d2d
gs
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
imul   $0x722d2d00,0x73(%ebp),%esp
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x2d6f6e2d
jo     80615fb <_IO_stdin_used+0x5f7>
gs
jae    80615f1 <_IO_stdin_used+0x5ed>
jb     8061604 <_IO_stdin_used+0x600>
gs
sub    $0x656e776f,%eax
jb     8061596 <_IO_stdin_used+0x592>
sub    $0x6e776f2d,%eax
gs
jb     806159e <_IO_stdin_used+0x59a>
sub    $0x6572702d,%eax
jae    806160a <_IO_stdin_used+0x606>
jb     806161d <_IO_stdin_used+0x619>
gs
sub    $0x69646f6d,%eax
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x656d6974,%eax
add    %dl,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    80615e4 <_IO_stdin_used+0x5e0>
popa
jb     806162e <_IO_stdin_used+0x62a>
jne    8061636 <_IO_stdin_used+0x632>
outsb  %gs:(%esi),(%dx)
je     8061640 <_IO_stdin_used+0x63c>
add    %ch,0x6572632d
popa
je     806163b <_IO_stdin_used+0x637>
add    %ch,0x73696c2d
je     80615de <_IO_stdin_used+0x5da>
sub    $0x636e752d,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c616e,%fs:0x6f(%ecx,%ebp,2),%esi
00
sub    $0x6170732d,%eax
jb     8061668 <_IO_stdin_used+0x664>
add    %ch,%gs:0x6177732d
jo     806162b <_IO_stdin_used+0x627>
bound  %edi,0x74(%ecx)
gs
jae    8061624 <_IO_stdin_used+0x620>
sub    %ch,0x6177732d
jo     8061635 <_IO_stdin_used+0x631>
add    %ch,0x6177732d
jo     8061641 <_IO_stdin_used+0x63d>
push   $0x77666c61
outsl  %ds:(%esi),(%dx)
jb     8061680 <_IO_stdin_used+0x67c>
jae    806163e <_IO_stdin_used+0x63a>
sub    %ch,0x6177732d
jo     806164f <_IO_stdin_used+0x64b>
add    %ch,0x6e65722d
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x63746162,%eax
push   $0x6c69662d
add    %ch,%gs:0x6f4e0049
je     8061662 <_IO_stdin_used+0x65e>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    80616ae <_IO_stdin_used+0x6aa>
push   $0x67726120
jne    80616bb <_IO_stdin_used+0x6b7>
outsb  %gs:(%esi),(%dx)
je     80616c5 <_IO_stdin_used+0x6c1>
add    %ch,0x7361702d
jae    8061687 <_IO_stdin_used+0x683>
je     80616c4 <_IO_stdin_used+0x6c0>
jb     80616cd <_IO_stdin_used+0x6c9>
jne    80616c7 <_IO_stdin_used+0x6c3>
push   $0x6e2d2d00
outsl  %ds:(%esi),(%dx)
sub    $0x6f736261,%eax
insb   (%dx),%es:(%edi)
jne    80616e2 <_IO_stdin_used+0x6de>
gs
sub    $0x68746170,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806167a <_IO_stdin_used+0x676>
sub    $0x7362612d,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    80616f7 <_IO_stdin_used+0x6f3>
gs
sub    $0x68746170,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806168f <_IO_stdin_used+0x68b>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80616b6 <_IO_stdin_used+0x6b2>
outsl  %ds:(%esi),(%dx)
jo     80616fe <_IO_stdin_used+0x6fa>
outsb  %ds:(%esi),(%dx)
and    %ah,0x752f0073
jae    8061714 <_IO_stdin_used+0x710>
das
jae    806170d <_IO_stdin_used+0x709>
popa
jb     806170d <_IO_stdin_used+0x709>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x72(%ebp)
jb     8061723 <_IO_stdin_used+0x71f>
jb     80616d6 <_IO_stdin_used+0x6d2>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x63726120,0x67(%esi),%ebp
push   $0x657669
je     806173a <_IO_stdin_used+0x736>
jne    8061738 <_IO_stdin_used+0x734>
arpl   %sp,0x74(%ecx)
add    %ah,%gs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %ch,0x6e(%ecx)
je     806173c <_IO_stdin_used+0x738>
jb     806173d <_IO_stdin_used+0x739>
imul   $0x7365645b,0x0(%edx),%esi
je     806174b <_IO_stdin_used+0x747>
outsb  %ds:(%esi),(%dx)
popa
je     806174f <_IO_stdin_used+0x74b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    8061750 <_IO_stdin_used+0x74c>
add    %cl,0x61(%ebp)
imul   $0x7265706f,0x20(%esi),%ebp
popa
je     8061769 <_IO_stdin_used+0x765>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%eax),%al
push   %edx
jne    806177a <_IO_stdin_used+0x776>
and    %ch,0x6e(%ecx)
and    %ah,0x6f(%ebx)
jo     806178d <_IO_stdin_used+0x789>
sub    $0x73736170,%eax
and    %ch,0x6f(%ebp)
fs add %bl,%fs:%gs:0x5b(%ebx)
push   %ebp
push   %ebx
inc    %ebp
push   %edx
inc    %eax
pop    %ebp
dec    %eax
dec    %edi
push   %ebx
push   %esp
cmp    0x46(%ebp),%bl
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x454d414e,%eax
add    %ah,0x6f(%esi)
jb     806179e <_IO_stdin_used+0x79a>
gs
sub    $0x61636f6c,%eax
insb   (%dx),%es:(%edi)
add    %ah,0x6f(%esi)
jb     80617b4 <_IO_stdin_used+0x7b0>
popa
je     806174a <_IO_stdin_used+0x746>
push   %ebp
jae    80617b2 <_IO_stdin_used+0x7ae>
and    %ah,0x69(%edi)
jbe    80617b7 <_IO_stdin_used+0x7b3>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80617c0 <_IO_stdin_used+0x7bc>
and    %al,0x4f(%esi)
push   %edx
dec    %ebp
inc    %ecx
push   %esp
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2d(%ebx)
jae    80617d4 <_IO_stdin_used+0x7d0>
jp     80617d2 <_IO_stdin_used+0x7ce>
add    %al,0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
sub    $0x455a4953,%eax
add    %ah,0x74(%edi,%ebp,2)
add    %ch,0x6f(%ecx)
sub    $0x657a6973,%eax
add    %cl,0x55(%esi)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
add    %dl,0x54(%ebx)
push   %edx
dec    %ecx
dec    %esi
inc    %edi
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     80617fd <_IO_stdin_used+0x7f9>
push   $0x676e69
outsb  %ds:(%esi),(%dx)
jne    806180f <_IO_stdin_used+0x80b>
gs
jb     806180e <_IO_stdin_used+0x80a>
arpl   %bp,0x2d646975
imul   $0x2d687372,0x0(%si),%esp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
add    %dh,0x75(%ecx)
imul   $0x72657600,0x74(%ebp),%esp
bound  %ebp,0x73(%edi)
add    %dh,%gs:0x61(%edi)
jb     8061843 <_IO_stdin_used+0x83f>
imul   $0x414c4600,0x67(%esi),%ebp
inc    %edi
add    %dh,0x61(%eax)
je     8061856 <_IO_stdin_used+0x852>
gs
jb     8061853 <_IO_stdin_used+0x84f>
sub    $0x656c6966,%eax
add    %al,0x49(%esi)
dec    %esp
inc    %ebp
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8061822 <_IO_stdin_used+0x81e>
jbe    806185c <_IO_stdin_used+0x858>
jb     8061862 <_IO_stdin_used+0x85e>
data16
jns    8061829 <_IO_stdin_used+0x825>
arpl   %si,0x63(%edx)
add    %cl,0x6e(%ecx)
je     8061869 <_IO_stdin_used+0x865>
jb     8061867 <_IO_stdin_used+0x863>
arpl   %si,0x76(%ecx,%ebp,2)
gs
insb   (%dx),%es:(%edi)
jns    806182e <_IO_stdin_used+0x82a>
jb     8061875 <_IO_stdin_used+0x871>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806181b <_IO_stdin_used+0x817>
jae    8061894 <_IO_stdin_used+0x890>
popa
jo     8061820 <_IO_stdin_used+0x81c>
jae    8061899 <_IO_stdin_used+0x895>
popa
jo     8061852 <_IO_stdin_used+0x84e>
bound  %edi,0x74(%ecx)
gs
jae    806182b <_IO_stdin_used+0x827>
jae    80618a4 <_IO_stdin_used+0x8a0>
popa
jo     806185d <_IO_stdin_used+0x859>
push   $0x77666c61
outsl  %ds:(%esi),(%dx)
jb     806189c <_IO_stdin_used+0x898>
jae    806183a <_IO_stdin_used+0x836>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6f736261,%eax
insb   (%dx),%es:(%edi)
jne    80618b8 <_IO_stdin_used+0x8b4>
gs
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    8061850 <_IO_stdin_used+0x84c>
outsb  %ds:(%esi),(%dx)
jne    80618bf <_IO_stdin_used+0x8bb>
insb   (%dx),%es:(%edi)
add    %bl,0x55(%ebx)
push   %ebx
inc    %ebp
push   %edx
pop    %ebp
pop    %ebx
cmp    (%esi),%ch
pop    %ebp
pop    %ebx
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
pop    %ebp
add    %dh,0x65(%edx)
jae    80618d0 <_IO_stdin_used+0x8cc>
je     806189a <_IO_stdin_used+0x896>
popa
arpl   %sp,0x65(%ebx)
jae    80618e6 <_IO_stdin_used+0x8e2>
sub    $0x656d6974,%eax
add    %bh,(%edx,%eiz,2)
jne    80618e4 <_IO_stdin_used+0x8e0>
sub    $0x6f697063,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    80618b5 <_IO_stdin_used+0x8b1>
outsl  %ds:(%esi),(%dx)
jb     80618f1 <_IO_stdin_used+0x8ed>
add    %dl,%ds:0x68(%eax)
imul   $0x6f736c65,0x4e(%eax,%eiz,1),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,0x76(%ecx,%eiz,2)
imul   $0x654b6361,0x4d(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jp     806190f <_IO_stdin_used+0x90b>
add    %cl,%gs:0x6f(%edx)
push   $0x6c4f206e
gs
jns    8061920 <_IO_stdin_used+0x91c>
imul   $0x72655300,0x6b(%ebx),%esp
addr16
gs
jns    80618dd <_IO_stdin_used+0x8d9>
push   %eax
outsl  %ds:(%esi),(%dx)
jp     806192f <_IO_stdin_used+0x92b>
jns    8061924 <_IO_stdin_used+0x920>
imul   $0x66,0x66(%edi),%ebp
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061934 <_IO_stdin_used+0x930>
and    %ah,0x6f(%esi)
jb     8061941 <_IO_stdin_used+0x93d>
popa
je     80618f7 <_IO_stdin_used+0x8f3>
insl   (%dx),%es:(%edi)
jne    8061946 <_IO_stdin_used+0x942>
je     8061945 <_IO_stdin_used+0x941>
jo     806194a <_IO_stdin_used+0x946>
jns    8061900 <_IO_stdin_used+0x8fc>
fs imul $0x64,%fs:%gs:0x65(%esi),%bp
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806195c <_IO_stdin_used+0x958>
and    %ah,0x6f(%esi)
jb     8061969 <_IO_stdin_used+0x965>
popa
je     806191f <_IO_stdin_used+0x91b>
pusha
and    $0x203b2773,%eax
jbe    8061968 <_IO_stdin_used+0x964>
insb   (%dx),%es:(%edi)
imul   $0x616d726f,0x66(%eax,%eiz,1),%esp
je     8061985 <_IO_stdin_used+0x981>
and    %ah,0x72(%ecx)
cmp    %gs:(%edx),%cl
arpl   %si,0x63(%edx)
and    %ch,0x65(%esi)
ja     8061983 <_IO_stdin_used+0x97f>
and    %ch,0x64(%edi)
arpl   %sp,(%eax)
bound  %ebp,0x6e(%ecx)
and    %dh,0x73(%ebp)
je     806198e <_IO_stdin_used+0x98a>
jb     806194f <_IO_stdin_used+0x94b>
je     8061992 <_IO_stdin_used+0x98e>
jb     8061953 <_IO_stdin_used+0x94f>
sub    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
sub    $0x73706163,%eax
and    %ah,0x6c(%ecx)
jae    80619b0 <_IO_stdin_used+0x9ac>
and    %dh,0x65(%edx)
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x2964,0x65(%edx),%edi
add    %ch,0x2d6f6e2d
jo     80619c9 <_IO_stdin_used+0x9c5>
gs
jae    80619bf <_IO_stdin_used+0x9bb>
jb     80619d2 <_IO_stdin_used+0x9ce>
gs
sub    $0x656e776f,%eax
jb     8061984 <_IO_stdin_used+0x980>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806198b <_IO_stdin_used+0x987>
bound  %esp,0x20(%ebp)
jne    80619e3 <_IO_stdin_used+0x9df>
gs and %dh,%fs:%gs:0x69(%edi)
je     80619df <_IO_stdin_used+0x9db>
and    %ch,0x6e776f2d
gs
jb     8061980 <_IO_stdin_used+0x97c>
sub    $0x6e776f2d,%eax
gs
jb     80619a8 <_IO_stdin_used+0x9a4>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80619af <_IO_stdin_used+0x9ab>
bound  %esp,0x20(%ebp)
jne    8061a07 <_IO_stdin_used+0xa03>
gs and %dh,%fs:%gs:0x69(%edi)
je     8061a03 <_IO_stdin_used+0x9ff>
and    %ch,0x2d6f6e2d
jo     8061a15 <_IO_stdin_used+0xa11>
gs
jae    8061a0b <_IO_stdin_used+0xa07>
jb     8061a1e <_IO_stdin_used+0xa1a>
gs
sub    $0x656e776f,%eax
jb     80619b0 <_IO_stdin_used+0x9ac>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8061a15 <_IO_stdin_used+0xa11>
insb   (%dx),%es:(%edi)
imul   $0x65756c61,0x76(%eax,%eiz,1),%esp
and    %ah,0x6f(%esi)
jb     80619e2 <_IO_stdin_used+0x9de>
sub    $0x7261772d,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x74706f20,0x67(%esi),%ebp
imul   $0x7325203a,0x6e(%edi),%ebp
add    %al,(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    80619fc <_IO_stdin_used+0x9f8>
insl   (%dx),%es:(%edi)
jne    8061a52 <_IO_stdin_used+0xa4e>
je     8061a01 <_IO_stdin_used+0x9fd>
jae    8061a53 <_IO_stdin_used+0xa4f>
arpl   %bp,%gs:0x66(%ecx)
jns    8061a09 <_IO_stdin_used+0xa05>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x66(%edi)
and    %ch,0x7470696f
and    %ch,0x70(%edi)
je     8061a63 <_IO_stdin_used+0xa5f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8061a2c <_IO_stdin_used+0xa28>
or     0x79(%edx,%esi,2),%dl
and    %ah,0x25(%eax)
jae    8061a27 <_IO_stdin_used+0xa23>
sub    $0x6c65682d,%eax
jo     8061a35 <_IO_stdin_used+0xa31>
and    %ch,0x72(%edi)
and    %ah,0x25(%eax)
jae    8061a36 <_IO_stdin_used+0xa32>
sub    $0x6173752d,%eax
addr16
gs
daa
and    %ah,0x6f(%esi)
jb     8061a43 <_IO_stdin_used+0xa3f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8061a8c <_IO_stdin_used+0xa88>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8061a9b <_IO_stdin_used+0xa97>
popa
je     8061a9a <_IO_stdin_used+0xa96>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %al,(%eax)
inc    %edx
outsl  %ds:(%esi),(%dx)
je     8061aa4 <_IO_stdin_used+0xaa0>
and    %ch,0x6e612049
and    %ch,%fs:0x72612046
and    %dh,%gs:0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ah,0x6f(%ebx)
jo     8061ad0 <_IO_stdin_used+0xacc>
sub    $0x6d206e69,%eax
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x7070612d
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx)
and    %dh,0x73(%ebp)
gs and %ah,%fs:%gs:0x75(%edx)
je     8061a95 <_IO_stdin_used+0xa91>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061ae4 <_IO_stdin_used+0xae0>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ah,0x69(%edi)
jbe    8061af6 <_IO_stdin_used+0xaf2>
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
jne    8061b09 <_IO_stdin_used+0xb05>
and    %ch,%gs:0x726f2046
and    %ch,0x706f204f
je     8061b0e <_IO_stdin_used+0xb0a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8061ad2 <_IO_stdin_used+0xace>
add    %al,(%eax)
add    %al,0x6f(%edx)
je     8061b18 <_IO_stdin_used+0xb14>
and    %ch,0x6e61204f
and    %ch,%fs:0x72612046
and    %dh,%gs:0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ah,0x6f(%ebx)
jo     8061b44 <_IO_stdin_used+0xb40>
sub    $0x2074756f,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
inc    %ecx
jb     8061b3e <_IO_stdin_used+0xb3a>
push   $0x20657669
outsw  %ds:(%esi),(%dx)
jb     8061b51 <_IO_stdin_used+0xb4d>
popa
je     8061b07 <_IO_stdin_used+0xb03>
imul   $0x20746f6e,0x20(%ebx),%esi
jae    8061b60 <_IO_stdin_used+0xb5c>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x206e6920,0x64(%ebp),%esp
arpl   %bp,0x70(%edi)
jns    8061b2d <_IO_stdin_used+0xb29>
jo     8061b63 <_IO_stdin_used+0xb5f>
jae    8061b77 <_IO_stdin_used+0xb73>
and    %ch,0x6f(%ebp)
fs and %ch,%fs:%gs:(%eax)
jne    8061b80 <_IO_stdin_used+0xb7c>
and    %ch,%gs:0x726f662d
insl   (%dx),%es:(%edi)
popa
je     8061b38 <_IO_stdin_used+0xb34>
outsl  %ds:(%esi),(%dx)
jo     8061b8f <_IO_stdin_used+0xb8b>
imul   $0x462d0029,0x6e(%edi),%ebp
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8061b54 <_IO_stdin_used+0xb50>
ja     8061b9f <_IO_stdin_used+0xb9b>
je     8061ba0 <_IO_stdin_used+0xb9c>
and    %ch,0x6572632d
popa
je     8061ba6 <_IO_stdin_used+0xba2>
and    %ch,0x72(%edi)
and    %ch,0x7478652d
jb     8061bad <_IO_stdin_used+0xba9>
arpl   %si,0x0(%eax,%eax,1)
inc    %ebx
jb     8061bb8 <_IO_stdin_used+0xbb4>
popa
je     8061bbb <_IO_stdin_used+0xbb7>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061bc7 <_IO_stdin_used+0xbc3>
and    %ch,(%eax)
jb     8061bdb <_IO_stdin_used+0xbd7>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %ah,0x6f(%ebx)
jo     8061be8 <_IO_stdin_used+0xbe4>
sub    $0x2074756f,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %eax,%fs:%gs:(%eax)
add    %al,(%eax)
inc    %ebp
js     8061bf3 <_IO_stdin_used+0xbef>
jb     8061be2 <_IO_stdin_used+0xbde>
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x6f726620,0x73(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061bfe <_IO_stdin_used+0xbfa>
and    %ch,(%eax)
jb     8061c12 <_IO_stdin_used+0xc0e>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %ah,0x6f(%ebx)
jo     8061c1f <_IO_stdin_used+0xc1b>
sub    $0x6d206e69,%eax
outsl  %ds:(%esi),(%dx)
fs sub %eax,%fs:%gs:(%eax)
push   %eax
jb     8061c1c <_IO_stdin_used+0xc18>
outsb  %ds:(%esi),(%dx)
je     8061bd6 <_IO_stdin_used+0xbd2>
popa
and    %dh,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8061c2b <_IO_stdin_used+0xc27>
outsb  %ds:(%esi),(%dx)
je     8061c3c <_IO_stdin_used+0xc38>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6e(%ecx)
jo     8061c4a <_IO_stdin_used+0xc46>
je     8061bd7 <_IO_stdin_used+0xbd3>
add    %cl,0x70(%edi)
gs
jb     8061c3e <_IO_stdin_used+0xc3a>
je     8061c48 <_IO_stdin_used+0xc44>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    8061c4f <_IO_stdin_used+0xc4b>
insb   (%dx),%es:(%edi)
imul   $0x6e61206e,0x69(%eax,%eiz,1),%esp
jns    8061c19 <_IO_stdin_used+0xc15>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%al
add    %dl,0x73(%ebp)
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    8061c29 <_IO_stdin_used+0xc25>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x454d414e,%eax
and    %ch,0x6e(%ecx)
jae    8061c8b <_IO_stdin_used+0xc87>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8061c8a <_IO_stdin_used+0xc86>
and    %ch,0x6e(%ecx)
jo     8061ca0 <_IO_stdin_used+0xc9c>
je     8061c4d <_IO_stdin_used+0xc49>
outsl  %ds:(%esi),(%dx)
jb     8061c50 <_IO_stdin_used+0xc4c>
outsl  %ds:(%esi),(%dx)
jne    8061ca7 <_IO_stdin_used+0xca3>
jo     8061caa <_IO_stdin_used+0xca6>
je     8061c65 <_IO_stdin_used+0xc61>
and    %cl,0x70(%edi)
je     8061ca5 <_IO_stdin_used+0xca1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dl,0x53(%ebp)
inc    %ebp
push   %edx
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x4f(%eax)
push   %ebx
push   %esp
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    8061c77 <_IO_stdin_used+0xc73>
je     8061cc1 <_IO_stdin_used+0xcbd>
and    %dh,%gs:0x73(%ebp)
gs
jb     8061c80 <_IO_stdin_used+0xc7c>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%eax)
jae    8061cdc <_IO_stdin_used+0xcd8>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8061c8f <_IO_stdin_used+0xc8b>
imul   $0x65736163,0x20(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
jb     8061ce3 <_IO_stdin_used+0xcdf>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     8061ce7 <_IO_stdin_used+0xce3>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8061cef <_IO_stdin_used+0xceb>
add    %al,(%eax)
inc    %ecx
jb     8061cf2 <_IO_stdin_used+0xcee>
push   $0x20657669
imul   $0x7369,0x20(%ebp,%eiz,2),%bp
and    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
sub    $0x20,%al
gs
jbe    8061d0b <_IO_stdin_used+0xd07>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x74(%ecx)
jae    8061ccf <_IO_stdin_used+0xccb>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8061d1a <_IO_stdin_used+0xd16>
imul   $0x6c6f6320,0x73(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8061cc4 <_IO_stdin_used+0xcc0>
push   %ebx
gs
je     8061ce8 <_IO_stdin_used+0xce4>
je     8061d32 <_IO_stdin_used+0xd2e>
and    %cl,%gs:0x2f(%ecx)
dec    %edi
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
jae    8061d41 <_IO_stdin_used+0xd3d>
jp     8061d3f <_IO_stdin_used+0xd3b>
and    %dh,0x20(%edi,%ebp,2)
xor    $0x20303231,%eax
bound  %edi,0x74(%ecx)
gs
jae    8061ce9 <_IO_stdin_used+0xce5>
add    %al,(%eax)
add    %dl,0x65(%ebx)
je     8061d10 <_IO_stdin_used+0xd0c>
je     8061d5a <_IO_stdin_used+0xd56>
and    %cl,%gs:0x2f(%ecx)
dec    %edi
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
jae    8061d69 <_IO_stdin_used+0xd65>
jp     8061d67 <_IO_stdin_used+0xd63>
and    %dh,0x20(%edi,%ebp,2)
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
sub    $0x455a4953,%eax
and    %ch,(%edx)
and    %dh,0x62203231
jns    8061d8e <_IO_stdin_used+0xd8a>
gs
jae    8061d1d <_IO_stdin_used+0xd19>
add    %al,(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x6c(%edi)
and    %dh,%fs:0x6f(%eax)
jb     8061da4 <_IO_stdin_used+0xda0>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
sub    %al,0x53(%ecx)
inc    %ebx
dec    %ecx
dec    %ecx
sub    %esp,(%eax)
popa
jb     8061da3 <_IO_stdin_used+0xd9f>
push   $0x20657669
outsw  %ds:(%esi),(%dx)
jb     8061db6 <_IO_stdin_used+0xdb2>
popa
je     8061d4c <_IO_stdin_used+0xd48>
push   %eax
jb     8061db8 <_IO_stdin_used+0xdb4>
outsb  %ds:(%esi),(%dx)
je     8061d72 <_IO_stdin_used+0xd6e>
popa
and    %ah,(%edx)
and    %cs:(%eax),%ah
outsw  %ds:(%esi),(%dx)
jb     8061d7c <_IO_stdin_used+0xd78>
gs
popa
arpl   %bp,0x20(%eax)
imul   $0x7270,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8061dd3 <_IO_stdin_used+0xdcf>
add    %dl,%fs:0x65(%ebx)
je     8061d94 <_IO_stdin_used+0xd90>
je     8061dde <_IO_stdin_used+0xdda>
and    %cl,%gs:0x2f(%ecx)
dec    %edi
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
jae    8061ded <_IO_stdin_used+0xde9>
jp     8061deb <_IO_stdin_used+0xde7>
and    %dh,0x20(%edi,%ebp,2)
je     8061df4 <_IO_stdin_used+0xdf0>
and    %ah,%gs:0x69(%edi)
jbe    8061df7 <_IO_stdin_used+0xdf3>
outsb  %ds:(%esi),(%dx)
and    %cl,0x55(%esi)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
and    %ch,0x66(%edi)
and    %ah,0x79(%edx)
je     8061e07 <_IO_stdin_used+0xe03>
jae    8061da4 <_IO_stdin_used+0xda0>
push   %eax
jb     8061e10 <_IO_stdin_used+0xe0c>
outsb  %ds:(%esi),(%dx)
je     8061dca <_IO_stdin_used+0xdc6>
push   %ebx
push   %esp
push   %edx
dec    %ecx
dec    %esi
inc    %edi
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x20(%ecx)
jbe    8061e34 <_IO_stdin_used+0xe30>
insb   (%dx),%es:(%edi)
jne    8061e35 <_IO_stdin_used+0xe31>
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8061df8 <_IO_stdin_used+0xdf4>
insl   (%dx),%es:(%edi)
gs imul $0x72207369,%fs:%gs:0x20(%ecx),%esp
72
gs
popa
arpl   %bp,0x65(%eax)
add    %al,%fs:(%eax)
add    %al,(%eax)
dec    %edi
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8061e11 <_IO_stdin_used+0xe0d>
arpl   %bp,0x70(%edi)
jns    8061e16 <_IO_stdin_used+0xe12>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
push   $0x64207461
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8061e28 <_IO_stdin_used+0xe24>
insl   (%dx),%es:(%edi)
popa
je     8061e6f <_IO_stdin_used+0xe6b>
push   $0x796e6120
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    8061e82 <_IO_stdin_used+0xe7e>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
je     8061e97 <_IO_stdin_used+0xe93>
gs
jb     8061e94 <_IO_stdin_used+0xe90>
jae    8061e28 <_IO_stdin_used+0xe24>
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%esi)
jb     8061e95 <_IO_stdin_used+0xe91>
outsl  %ds:(%esi),(%dx)
jae    8061e9b <_IO_stdin_used+0xe97>
and    %dh,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8061eaa <_IO_stdin_used+0xea6>
outsb  %ds:(%esi),(%dx)
je     8061ebb <_IO_stdin_used+0xeb7>
and    %ch,0x73(%ecx,%ebp,2)
je     8061eb7 <_IO_stdin_used+0xeb3>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x20,%al
jae    8061ebc <_IO_stdin_used+0xeb8>
outsl  %ds:(%esi),(%dx)
ja     8061e77 <_IO_stdin_used+0xe73>
outsb  %ds:(%esi),(%dx)
jne    8061ec7 <_IO_stdin_used+0xec3>
gs
jb     8061ec6 <_IO_stdin_used+0xec2>
arpl   %sp,(%eax)
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x6e(%ecx)
and    %al,%fs:0x49(%edi)
inc    %esp
add    %al,(%eax)
push   %ebp
jae    8061ed4 <_IO_stdin_used+0xed0>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     8061edb <_IO_stdin_used+0xed7>
and    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %ch,0x6e(%ecx)
jae    8061ef7 <_IO_stdin_used+0xef3>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x73(%edx)
push   $0x44000000
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8061eb7 <_IO_stdin_used+0xeb3>
jo     8061f0b <_IO_stdin_used+0xf07>
imul   $0x65687420,0x74(%esi),%ebp
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %ah,0x6f(%ebx)
jo     8061f1f <_IO_stdin_used+0xf1b>
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
push   %esi
gs
jb     8061f22 <_IO_stdin_used+0xf1e>
outsl  %ds:(%esi),(%dx)
jae    8061f28 <_IO_stdin_used+0xf24>
insb   (%dx),%es:(%edi)
jns    8061ee6 <_IO_stdin_used+0xee2>
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x74(%ebx),%esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8061ef5 <_IO_stdin_used+0xef1>
jo     8061f49 <_IO_stdin_used+0xf45>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8061f42 <_IO_stdin_used+0xf3e>
add    %al,%fs:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8061f57 <_IO_stdin_used+0xf53>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%edi)
jb     8061f5a <_IO_stdin_used+0xf56>
imul   $0x73696420,0x67(%esi),%ebp
jo     8061f61 <_IO_stdin_used+0xf5d>
popa
jns    8061f26 <_IO_stdin_used+0xf22>
and    %al,0x75(%ebx)
jb     8061f6f <_IO_stdin_used+0xf6b>
outsb  %gs:(%esi),(%dx)
je     8061f6d <_IO_stdin_used+0xf69>
jns    8061f23 <_IO_stdin_used+0xf1f>
inc    %esi
dec    %esp
inc    %ecx
inc    %edi
and    %ch,0x73(%ecx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
daa
sub    $0x20,%al
daa
je     8061f8f <_IO_stdin_used+0xf8b>
jne    8061f8d <_IO_stdin_used+0xf89>
arpl   %sp,0x74(%ecx)
gs
daa
sub    $0x20,%al
daa
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
daa
and    %cl,%cs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     8061f9b <_IO_stdin_used+0xf97>
jo     8061fa0 <_IO_stdin_used+0xf9c>
and    %ch,%gs:0x70(%edi)
je     8061fa3 <_IO_stdin_used+0xf9f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8061f5e <_IO_stdin_used+0xf5a>
popa
arpl   %sp,0x75(%ebx)
insl   (%dx),%es:(%edi)
jne    8061fb1 <_IO_stdin_used+0xfad>
popa
je     8061fad <_IO_stdin_used+0xfa9>
add    %al,%cs:(%eax)
add    %cl,0x70(%edi)
gs
jb     8061fb2 <_IO_stdin_used+0xfae>
je     8061fbc <_IO_stdin_used+0xfb8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    8061fc3 <_IO_stdin_used+0xfbf>
insb   (%dx),%es:(%edi)
imul   $0x20796c6e,0x6f(%eax,%eiz,1),%esp
imul   $0x79706f63,0x20(%esi),%ebp
sub    $0x6d206e69,%eax
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%al
push   %edx
gs
popa
and    %ah,%fs:0x64(%ecx)
imul   $0x206c616e,%fs:0x6f(%ecx,%ebp,2),%esi
20
jo     8061fef <_IO_stdin_used+0xfeb>
je     8062004 <_IO_stdin_used+0x1000>
gs
jb     8062001 <_IO_stdin_used+0xffd>
jae    8061fb5 <_IO_stdin_used+0xfb1>
jae    8062007 <_IO_stdin_used+0x1003>
arpl   %bp,%gs:0x66(%ecx)
jns    8062006 <_IO_stdin_used+0x1002>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    8061fca <_IO_stdin_used+0xfc6>
je     806201b <_IO_stdin_used+0x1017>
and    %ah,0x78(%ebp)
je     8062023 <_IO_stdin_used+0x101f>
popa
arpl   %si,0x6f(%eax,%eiz,1)
jb     8061fd8 <_IO_stdin_used+0xfd4>
insb   (%dx),%es:(%edi)
imul   $0x6f726620,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
add    %al,(%eax)
push   %edi
push   $0x72206e65
gs
popa
imul   $0x43206120,%fs:0x67(%esi),%ebp
push   %edx
inc    %ebx
and    %ah,0x6f(%esi)
jb     806204c <_IO_stdin_used+0x1048>
popa
je     8062002 <_IO_stdin_used+0xffe>
popa
jb     8062048 <_IO_stdin_used+0x1044>
push   $0x2c657669
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8062010 <_IO_stdin_used+0x100c>
jbe    8062057 <_IO_stdin_used+0x1053>
jb     806205d <_IO_stdin_used+0x1059>
data16
jns    8062017 <_IO_stdin_used+0x1013>
je     8062061 <_IO_stdin_used+0x105d>
and    %al,%gs:0x52(%ebx)
inc    %ebx
daa
jae    8062021 <_IO_stdin_used+0x101d>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
imul   $0x6e69,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8062081 <_IO_stdin_used+0x107d>
sub    $0x20,%al
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     8062044 <_IO_stdin_used+0x1040>
popa
arpl   %si,0x61(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    806204d <_IO_stdin_used+0x1049>
gs
js     80620a4 <_IO_stdin_used+0x10a0>
jb     8062093 <_IO_stdin_used+0x108f>
arpl   %si,0x74(%eax,%eiz,1)
push   $0x69662065
insb   (%dx),%es:(%edi)
gs
jae    806203f <_IO_stdin_used+0x103b>
add    %dl,0x77(%ebx)
popa
jo     8062065 <_IO_stdin_used+0x1061>
bound  %ebp,0x74(%edi)
push   $0x6c616820
data16
ja     80620bf <_IO_stdin_used+0x10bb>
jb     80620b6 <_IO_stdin_used+0x10b2>
jae    8062074 <_IO_stdin_used+0x1070>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x6f(%edi)
jb     80620bf <_IO_stdin_used+0x10bb>
jae    806207d <_IO_stdin_used+0x1079>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x79(%edx)
je     80620ca <_IO_stdin_used+0x10c6>
jae    8062087 <_IO_stdin_used+0x1083>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%eax)
insb   (%dx),%es:(%edi)
data16
ja     80620df <_IO_stdin_used+0x10db>
jb     80620d6 <_IO_stdin_used+0x10d2>
jae    8062094 <_IO_stdin_used+0x1090>
imul   $0x20656874,0x20(%esi),%ebp
fs
popa
je     80620e0 <_IO_stdin_used+0x10dc>
and    %al,%cs:0x71(%ebp)
jne    80620ee <_IO_stdin_used+0x10ea>
jbe    80620e8 <_IO_stdin_used+0x10e4>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80620ac <_IO_stdin_used+0x10a8>
je     80620fd <_IO_stdin_used+0x10f9>
and    %ch,0x5373
push   %ebx
ja     80620f8 <_IO_stdin_used+0x10f4>
jo     80620b9 <_IO_stdin_used+0x10b5>
je     8062103 <_IO_stdin_used+0x10ff>
and    %ah,%gs:0x79(%edx)
je     8062106 <_IO_stdin_used+0x1102>
jae    80620c3 <_IO_stdin_used+0x10bf>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
push   $0x77666c61
outsl  %ds:(%esi),(%dx)
jb     8062117 <_IO_stdin_used+0x1113>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80620c1 <_IO_stdin_used+0x10bd>
add    %al,(%eax)
add    %dl,0x77(%ebx)
popa
jo     80620e9 <_IO_stdin_used+0x10e5>
je     8062133 <_IO_stdin_used+0x112f>
and    %ch,%gs:0x61(%eax)
insb   (%dx),%es:(%edi)
data16
ja     8062142 <_IO_stdin_used+0x113e>
jb     8062139 <_IO_stdin_used+0x1135>
jae    80620f7 <_IO_stdin_used+0x10f3>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
ja     8062150 <_IO_stdin_used+0x114c>
jb     8062147 <_IO_stdin_used+0x1143>
and    %ch,(%eax)
xor    $0x20,%al
bound  %edi,0x74(%ecx)
gs
jae    8062116 <_IO_stdin_used+0x1112>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80620fb <_IO_stdin_used+0x10f7>
add    %al,0x78(%ebp)
je     8062172 <_IO_stdin_used+0x116e>
popa
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x206f7420,0x73(%ebp,%eiz,2),%ebp
jae    8062183 <_IO_stdin_used+0x117f>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8062179 <_IO_stdin_used+0x1175>
and    %ch,0x75(%edi)
je     806218a <_IO_stdin_used+0x1186>
jne    8062190 <_IO_stdin_used+0x118c>
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
jo     8062188 <_IO_stdin_used+0x1184>
jb     8062186 <_IO_stdin_used+0x1182>
je     8062190 <_IO_stdin_used+0x118c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    8062197 <_IO_stdin_used+0x1193>
insb   (%dx),%es:(%edi)
imul   $0x20796c6e,0x6f(%eax,%eiz,1),%esp
imul   $0x79706f63,0x20(%esi),%ebp
sub    $0x2074756f,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %al,0x70(%ecx)
jo     80621bd <_IO_stdin_used+0x11b9>
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x20(%edi,%ebp,2)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
popa
jb     80621d0 <_IO_stdin_used+0x11cc>
push   $0x2e657669
add    %al,(%eax)
inc    %ecx
jb     80621da <_IO_stdin_used+0x11d6>
push   $0x20657669
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
and    %dh,%gs:0x20(%edi,%ebp,2)
jne    80621fd <_IO_stdin_used+0x11f9>
and    %ch,%gs:0x6e(%ecx)
jae    8062204 <_IO_stdin_used+0x1200>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8062203 <_IO_stdin_used+0x11ff>
and    %ch,0x75(%edi)
je     8062214 <_IO_stdin_used+0x1210>
jne    806221a <_IO_stdin_used+0x1216>
and    %cl,%cs:0x70(%edi)
je     8062215 <_IO_stdin_used+0x1211>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dl,0x53(%ebp)
inc    %ebp
push   %edx
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x4f(%eax)
push   %ebx
push   %esp
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    80621e7 <_IO_stdin_used+0x11e3>
je     8062231 <_IO_stdin_used+0x122d>
and    %dh,%gs:0x73(%ebp)
gs
jb     80621f0 <_IO_stdin_used+0x11ec>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%eax)
jae    806224c <_IO_stdin_used+0x1248>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    80621ff <_IO_stdin_used+0x11fb>
imul   $0x65736163,0x20(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
jb     8062253 <_IO_stdin_used+0x124f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     8062257 <_IO_stdin_used+0x1253>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806225f <_IO_stdin_used+0x125b>
add    %al,(%eax)
dec    %edi
jo     8062264 <_IO_stdin_used+0x1260>
jb     8062262 <_IO_stdin_used+0x125e>
je     806226c <_IO_stdin_used+0x1268>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    8062273 <_IO_stdin_used+0x126f>
insb   (%dx),%es:(%edi)
imul   $0x20796c6e,0x6f(%eax,%eiz,1),%esp
imul   $0x79706f63,0x20(%esi),%ebp
sub    $0x73736170,%eax
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%eax),%al
add    %al,(%eax)
dec    %esp
imul   $0x6c696620,0x6b(%esi),%ebp
gs
jae    806225b <_IO_stdin_used+0x1257>
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
jo     80622c3 <_IO_stdin_used+0x12bf>
imul   $0x65687420,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
sub    $0x20,%al
ja     80622be <_IO_stdin_used+0x12ba>
outsb  %gs:(%esi),(%dx)
and    %ah,(%eax)
jo     80622cb <_IO_stdin_used+0x12c7>
jae    80622d1 <_IO_stdin_used+0x12cd>
imul   $0x4f000065,0x6c(%edx),%esp
jo     80622cc <_IO_stdin_used+0x12c8>
jb     80622ca <_IO_stdin_used+0x12c6>
je     80622d4 <_IO_stdin_used+0x12d0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    80622db <_IO_stdin_used+0x12d7>
insb   (%dx),%es:(%edi)
imul   $0x6f63206e,0x69(%eax,%eiz,1),%esp
jo     80622fe <_IO_stdin_used+0x12fa>
sub    $0x61206e69,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
jo     806230a <_IO_stdin_used+0x1306>
sub    $0x2074756f,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80622d6 <_IO_stdin_used+0x12d2>
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     80622c7 <_IO_stdin_used+0x12c3>
jae    806231d <_IO_stdin_used+0x1319>
jb     8062314 <_IO_stdin_used+0x1310>
jo     80622cd <_IO_stdin_used+0x12c9>
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    806232a <_IO_stdin_used+0x1326>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
imul   $0x6f63,%gs:0x20(%eax),%di
insl   (%dx),%es:(%edi)
jo     8062334 <_IO_stdin_used+0x1330>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     806233d <_IO_stdin_used+0x1339>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    80622df <_IO_stdin_used+0x12db>
add    %al,0x72(%ebx)
gs
popa
je     806234b <_IO_stdin_used+0x1347>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8062311 <_IO_stdin_used+0x130d>
jb     8062358 <_IO_stdin_used+0x1354>
insb   (%dx),%es:(%edi)
popa
je     8062360 <_IO_stdin_used+0x135c>
jbe    806235e <_IO_stdin_used+0x135a>
and    %dh,0x20(%edi,%ebp,2)
je     8062367 <_IO_stdin_used+0x1363>
and    %ah,%gs:0x75(%ebx)
jb     8062377 <_IO_stdin_used+0x1373>
outsb  %gs:(%esi),(%dx)
je     8062329 <_IO_stdin_used+0x1325>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8062313 <_IO_stdin_used+0x130f>
add    %cl,0x70(%edi)
gs
jb     806237a <_IO_stdin_used+0x1376>
je     8062384 <_IO_stdin_used+0x1380>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    806238b <_IO_stdin_used+0x1387>
insb   (%dx),%es:(%edi)
imul   $0x6f63206e,0x69(%eax,%eiz,1),%esp
jo     80623ae <_IO_stdin_used+0x13aa>
sub    $0x2074756f,%eax
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
jo     80623bb <_IO_stdin_used+0x13b7>
sub    $0x73736170,%eax
and    %ch,0x6f(%ebp)
fs
gs
jae    8062388 <_IO_stdin_used+0x1384>
add    %al,(%eax)
inc    %ecx
and    %ch,0x73(%ecx,%ebp,2)
je     8062377 <_IO_stdin_used+0x1373>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    8062384 <_IO_stdin_used+0x1380>
imul   $0x6d726574,0x20(%ebx),%esi
imul   $0x20646574,0x61(%esi),%ebp
bound  %edi,0x20(%ecx)
popa
and    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     80623e2 <_IO_stdin_used+0x13de>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ch,0x6e(%ecx)
jae    80623fe <_IO_stdin_used+0x13fa>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     8062403 <_IO_stdin_used+0x13ff>
imul   $0x72410000,0x65(%esi),%ebp
arpl   %bp,0x69(%eax)
jbe    8062408 <_IO_stdin_used+0x1404>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jne    8062425 <_IO_stdin_used+0x1421>
and    %ch,%gs:0x6e(%ecx)
jae    806242c <_IO_stdin_used+0x1428>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806242b <_IO_stdin_used+0x1427>
and    %ch,0x6e(%ecx)
jo     8062441 <_IO_stdin_used+0x143d>
je     80623fc <_IO_stdin_used+0x13f8>
and    %cl,0x70(%edi)
je     806243c <_IO_stdin_used+0x1438>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dl,0x53(%ebp)
inc    %ebp
push   %edx
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x4f(%eax)
push   %ebx
push   %esp
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    806240e <_IO_stdin_used+0x140a>
je     8062458 <_IO_stdin_used+0x1454>
and    %dh,%gs:0x73(%ebp)
gs
jb     8062417 <_IO_stdin_used+0x1413>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%eax)
jae    8062473 <_IO_stdin_used+0x146f>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8062426 <_IO_stdin_used+0x1422>
imul   $0x65736163,0x20(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
jb     806247a <_IO_stdin_used+0x1476>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     806247e <_IO_stdin_used+0x147a>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8062486 <_IO_stdin_used+0x1482>
add    %al,(%eax)
add    %al,0x72(%ebp,%eiz,2)
gs
data16
gs
jb     8062491 <_IO_stdin_used+0x148d>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6e696c20,0x20(%ebx),%esp
imul   $0x20,0x20(%ebx),%esi
sub    %ah,0x6f(%ebx)
jo     80624c0 <_IO_stdin_used+0x14bc>
and    %ah,(%eax)
je     80624b3 <_IO_stdin_used+0x14af>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8062473 <_IO_stdin_used+0x146f>
je     80624bd <_IO_stdin_used+0x14b9>
popa
je     8062478 <_IO_stdin_used+0x1474>
je     80624c2 <_IO_stdin_used+0x14be>
gs
jns    806247d <_IO_stdin_used+0x1479>
jo     80624ce <_IO_stdin_used+0x14ca>
imul   $0x206f7420,0x74(%esi),%ebp
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
jo     80624ee <_IO_stdin_used+0x14ea>
imul   $0x65687420,0x67(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x2e,0x29(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
gs
je     80624ac <_IO_stdin_used+0x14a8>
je     80624f6 <_IO_stdin_used+0x14f2>
and    %ch,%gs:0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     8062509 <_IO_stdin_used+0x1505>
push   $0x6f207069
data16
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80624c7 <_IO_stdin_used+0x14c3>
arpl   %si,0x65(%edx)
popa
je     8062512 <_IO_stdin_used+0x150e>
and    %dh,%fs:0x20(%edi,%ebp,2)
je     806251c <_IO_stdin_used+0x1518>
and    %dh,%gs:0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x45535520,0x64(%ebp),%esp
push   %edx
and    %ah,0x6e(%ecx)
fs
das
outsl  %ds:(%esi),(%dx)
jb     80624ec <_IO_stdin_used+0x14e8>
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %al,(%eax)
add    %dl,0x65(%edx)
jae    806253d <_IO_stdin_used+0x1539>
je     80624fa <_IO_stdin_used+0x14f6>
je     8062544 <_IO_stdin_used+0x1540>
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    8062505 <_IO_stdin_used+0x1501>
je     8062550 <_IO_stdin_used+0x154c>
insl   (%dx),%es:(%edi)
gs
jae    806250b <_IO_stdin_used+0x1507>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8062514 <_IO_stdin_used+0x1510>
popa
data16
je     806255d <_IO_stdin_used+0x1559>
jb     806251a <_IO_stdin_used+0x1516>
jb     8062561 <_IO_stdin_used+0x155d>
popa
imul   $0x65687420,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
add    %al,(%eax)
dec    %edi
jo     8062570 <_IO_stdin_used+0x156c>
jb     806256e <_IO_stdin_used+0x156a>
je     8062578 <_IO_stdin_used+0x1574>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
jbe    806257f <_IO_stdin_used+0x157b>
insb   (%dx),%es:(%edi)
imul   $0x6f63206e,0x69(%eax,%eiz,1),%esp
jo     80625a2 <_IO_stdin_used+0x159e>
sub    $0x61206e69,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
jo     80625ae <_IO_stdin_used+0x15aa>
sub    $0x73736170,%eax
and    %ch,0x6f(%ebp)
fs
gs
jae    806257b <_IO_stdin_used+0x1577>
add    %al,(%eax)
add    %dl,0x65(%edx)
je     80625a9 <_IO_stdin_used+0x15a5>
imul   $0x76657270,0x20(%esi),%ebp
imul   $0x69662073,0x75(%edi),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    806258c <_IO_stdin_used+0x1588>
ja     80625d6 <_IO_stdin_used+0x15d2>
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     80625e0 <_IO_stdin_used+0x15dc>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
gs
jae    8062580 <_IO_stdin_used+0x157c>
inc    %ebx
jb     80625e8 <_IO_stdin_used+0x15e4>
popa
je     80625eb <_IO_stdin_used+0x15e7>
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x72696420,%fs:0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x65687720,0x73(%ebp),%esp
jb     8062605 <_IO_stdin_used+0x1601>
and    %ch,0x65(%esi)
gs fs gs add %al,%fs:%gs:0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80625cf <_IO_stdin_used+0x15cb>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x68(%si)
and    %ch,%gs:0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     8062633 <_IO_stdin_used+0x162f>
push   $0x6f207069
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80625d1 <_IO_stdin_used+0x15cd>
add    %al,(%eax)
add    %dl,0x65(%edx)
jo     8062644 <_IO_stdin_used+0x1640>
popa
arpl   %sp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8062606 <_IO_stdin_used+0x1602>
jne    8062656 <_IO_stdin_used+0x1652>
arpl   %bp,0x6e(%edi)
imul   $0x6c6c616e,%fs:0x6f(%ecx,%ebp,2),%esi
6c
jns    80625f6 <_IO_stdin_used+0x15f2>
add    %al,(%eax)
push   %edi
jb     8062664 <_IO_stdin_used+0x1660>
je     8062662 <_IO_stdin_used+0x165e>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8062624 <_IO_stdin_used+0x1620>
ja     806266f <_IO_stdin_used+0x166b>
je     8062670 <_IO_stdin_used+0x166c>
and    %ch,0x72(%ecx,%eiz,2)
and    %ah,%gs:0x6c(%bp,%si)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %ch,0x66(%edi)
and    %bh,0x65(%edx)
jb     806268c <_IO_stdin_used+0x1688>
jae    806263f <_IO_stdin_used+0x163b>
popa
jae    8062642 <_IO_stdin_used+0x163e>
jae    8062694 <_IO_stdin_used+0x1690>
popa
jb     806269a <_IO_stdin_used+0x1696>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806262f <_IO_stdin_used+0x162b>
add    %dl,0x38080500(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,0x0(%eax)
add    $0x5006008,%eax
or     %bh,%al
incl   (%eax,%ecx,1)
cmp    %al,(%ebx)
add    $0x4ffe808,%eax
or     %bl,%al
incl   (%eax,%ecx,1)
cmp    %al,(%ebx)
add    $0x4fed808,%eax
or     %cl,%al
incb   (%eax,%ecx,1)
cmp    %al,(%ebx)
add    $0x5033808,%eax
or     %dh,-0x67f7fb02(%eax)
incb   (%eax,%ecx,1)
cmp    %al,(%ebx)
add    $0x4fe8808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %dh,%al
sti
add    $0x8,%al
jo     80626bc <_IO_stdin_used+0x16b8>
add    $0x8,%al
cmp    %al,(%ebx)
add    $0x5033808,%eax
or     %bl,-0x2(%eax)
add    $0x8,%al
mov    $0x380804fd,%eax
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x4fda008,%eax
or     %al,0x300804fd(%eax)
std
add    $0x8,%al
sbb    %bh,%ch
add    $0x8,%al
cmp    %al,(%ebx)
add    $0x4fd0808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,0x380804fc(%eax)
add    0x4fc9008,%eax
or     %ch,0x200804fc(%eax)
add    0x5030808,%eax
or     %bh,0x68080502(%eax)
add    0x5033808,%al
or     %dl,0x2(%eax)
add    $0x5023808,%eax
or     %ah,(%eax)
add    0x5020808,%al
or     %dh,%al
add    %eax,0x5033808
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bh,(%eax)
add    0x5033808,%eax
or     %bl,%al
add    %eax,0x501c008
or     %ah,0x1(%eax)
add    $0x5014808,%eax
or     %bh,(%eax)
add    %eax,0x5012808
or     %dl,(%eax)
add    %eax,0x500f808
or     %ch,%al
add    %al,0x5033808
or     %dh,-0x5ff7fb00(%eax)
add    %al,0x766e6908
popa
insb   (%dx),%es:(%edi)
imul   $0x65646165,0x68(%eax,%eiz,1),%esp
jb     80629e9 <_IO_stdin_used+0x19e5>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x73(%ebx)
jne    8062a25 <_IO_stdin_used+0x1a21>
and    %ah,0x72(%ebp)
jb     8062a2c <_IO_stdin_used+0x1a28>
jb     80629bf <_IO_stdin_used+0x19bb>
add    %dh,%bl
push   %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51f0908,%eax
or     %cl,(%ecx)
pop    %ds
add    $0x51eea08,%eax
or     %ah,%cl
push   %ds
add    $0x51ed808,%eax
or     %cl,%bh
push   %ds
add    $0x51e5208,%eax
or     %cl,0x7708051e(%ebx)
jb     8062b08 <_IO_stdin_used+0x1b04>
je     8062b06 <_IO_stdin_used+0x1b02>
and    %ah,0x72(%ebp)
jb     8062b15 <_IO_stdin_used+0x1b11>
jb     8062aa8 <_IO_stdin_used+0x1aa4>
jbe    8062b13 <_IO_stdin_used+0x1b0f>
jb     8062b20 <_IO_stdin_used+0x1b1c>
jne    8062b0f <_IO_stdin_used+0x1b0b>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8062b2f <_IO_stdin_used+0x1b2b>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ah,%fs:%gs:0x25642573
jae    8062ac8 <_IO_stdin_used+0x1ac4>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062aef <_IO_stdin_used+0x1aeb>
jae    8062b36 <_IO_stdin_used+0x1b32>
imul   $0x6f,%gs:(%eax),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%edi)
je     8062b4b <_IO_stdin_used+0x1b47>
jne    8062b51 <_IO_stdin_used+0x1b4d>
add    %dh,0x72(%eax)
gs
insl   (%dx),%es:(%edi)
popa
je     8062b5a <_IO_stdin_used+0x1b56>
jb     8062b4c <_IO_stdin_used+0x1b48>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%edx)
popa
and    %ah,%fs:0x72(%ebp)
jb     8062b6c <_IO_stdin_used+0x1b68>
jb     8062aff <_IO_stdin_used+0x1afb>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     8062b29 <_IO_stdin_used+0x1b25>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8062b15 <_IO_stdin_used+0x1b11>
add    %al,(%eax)
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x68732073
jb     8062b99 <_IO_stdin_used+0x1b95>
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    8062b4a <_IO_stdin_used+0x1b46>
and    $0x79622073,%eax
je     8062b96 <_IO_stdin_used+0x1b92>
jae    8062b5f <_IO_stdin_used+0x1b5b>
and    %dh,0x61(%eax)
fs imul $0x74697720,%fs:0x67(%esi),%ebp
74
push   $0x72657a20
outsl  %ds:(%esi),(%dx)
jae    8062b47 <_IO_stdin_used+0x1b43>
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x68732073
jb     8062bc9 <_IO_stdin_used+0x1bc5>
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    8062b7a <_IO_stdin_used+0x1b76>
and    $0x79622073,%eax
je     8062bc6 <_IO_stdin_used+0x1bc2>
sub    $0x20,%al
jo     8062bc6 <_IO_stdin_used+0x1bc2>
fs imul $0x74697720,%fs:0x67(%esi),%ebp
74
push   $0x72657a20
outsl  %ds:(%esi),(%dx)
jae    8062b76 <_IO_stdin_used+0x1b72>
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     8062bf0 <_IO_stdin_used+0x1bec>
jb     8062ba3 <_IO_stdin_used+0x1b9f>
popa
je     8062ba6 <_IO_stdin_used+0x1ba2>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x20646c6c
imul   $0x656c6966,0x20(%esi),%ebp
and    %ah,0x70202c73
popa
fs imul $0x74697720,%fs:0x67(%esi),%ebp
74
push   $0x72657a20
outsl  %ds:(%esi),(%dx)
jae    8062baf <_IO_stdin_used+0x1bab>
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72672073
gs
ja     8062be9 <_IO_stdin_used+0x1be5>
and    %ah,0x20756c6c
outsb  %ds:(%esi),(%dx)
gs
ja     8062be7 <_IO_stdin_used+0x1be3>
bound  %edi,0x74(%ecx)
gs
jae    8062bed <_IO_stdin_used+0x1be9>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062bf1 <_IO_stdin_used+0x1bed>
arpl   %bp,0x70(%edi)
imul   $0x6c694600,0x64(%ebp),%esp
and    %ah,%gs:0x72672073
gs
ja     8062c11 <_IO_stdin_used+0x1c0d>
and    %ah,0x20756c6c
outsb  %ds:(%esi),(%dx)
gs
ja     8062c0f <_IO_stdin_used+0x1c0b>
bound  %edi,0x74(%ecx)
and    %ch,%gs:0x6f(%esi)
je     8062c18 <_IO_stdin_used+0x1c14>
arpl   %bp,0x70(%edi)
imul   $0x69460000,0x64(%ebp),%esp
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x61772073
jae    8062c2c <_IO_stdin_used+0x1c28>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x77206465,%fs:0x69(%esi),%esp
push   $0x20656c69
bound  %esp,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jo     8062c8e <_IO_stdin_used+0x1c8a>
gs add %al,%fs:%gs:0x72(%ebx)
gs
popa
je     8062c97 <_IO_stdin_used+0x1c93>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
je     8062c9a <_IO_stdin_used+0x1c96>
jb     8062ca4 <_IO_stdin_used+0x1ca0>
gs imul $0x69642065,%fs:%gs:0x74(%ecx),%esp
69
jb     8062ca7 <_IO_stdin_used+0x1ca3>
arpl   %si,0x72(%edi,%ebp,2)
jns    8062c68 <_IO_stdin_used+0x1c64>
pusha
and    $0x2773,%eax
add    %al,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jne    8062cc2 <_IO_stdin_used+0x1cbe>
and    %ah,%fs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x70(%ecx,%eiz,2)
gs and %ah,%cs:%gs:(%eax)
dec    %esp
outsl  %ds:(%esi),(%dx)
popa
and    %ch,%fs:0x65(%esi)
js     8062ce1 <_IO_stdin_used+0x1cdd>
and    %dh,0x70(%ecx,%eiz,2)
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x72(%eax)
gs
jae    8062cef <_IO_stdin_used+0x1ceb>
and    %dl,0x45(%edx)
push   %esp
push   %ebp
push   %edx
dec    %esi
and    %al,%cs:(%eax)
add    %al,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jne    8062cfa <_IO_stdin_used+0x1cf6>
and    %ah,%fs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x70(%ecx,%eiz,2)
gs and %ah,%cs:%gs:(%eax)
push   %esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8062d0d <_IO_stdin_used+0x1d09>
outsb  %ds:(%esi),(%dx)
jne    8062d0c <_IO_stdin_used+0x1d08>
sub    $0x20,%al
je     8062d24 <_IO_stdin_used+0x1d20>
jo     8062d12 <_IO_stdin_used+0x1d0e>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6c69662f,0x65(%ebx),%esp
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
fs
jns    8062cf8 <_IO_stdin_used+0x1cf4>
or     (%eax),%al
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8062d48 <_IO_stdin_used+0x1d44>
jb     8062d15 <_IO_stdin_used+0x1d11>
and    %dh,0x70(%ecx,%eiz,2)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8062d5d <_IO_stdin_used+0x1d59>
outsl  %ds:(%esi),(%dx)
jb     8062d0c <_IO_stdin_used+0x1d08>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f742064
and    %ah,0x75250064
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062d2c <_IO_stdin_used+0x1d28>
insl   (%dx),%es:(%edi)
popa
imul   $0x64,0x20(%ebp),%esp
imul   $0x726f7463,0x65(%edx),%esi
jns    8062d3b <_IO_stdin_used+0x1d37>
pusha
and    $0x60002773,%eax
and    $0x65202773,%eax
js     8062d91 <_IO_stdin_used+0x1d8d>
jae    8062d9e <_IO_stdin_used+0x1d9a>
jae    8062d4c <_IO_stdin_used+0x1d48>
bound  %esi,0x74(%ebp)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     8062d57 <_IO_stdin_used+0x1d53>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8062d43 <_IO_stdin_used+0x1d3f>
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8062d6c <_IO_stdin_used+0x1d68>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x2068746f,0x62(%eax,%eiz,1),%esi
jne    8062dcb <_IO_stdin_used+0x1dc7>
gs
jb     8062d7b <_IO_stdin_used+0x1d77>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8062dd4 <_IO_stdin_used+0x1dd0>
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062d8f <_IO_stdin_used+0x1d8b>
addr16
gs
je     8062d93 <_IO_stdin_used+0x1d8f>
je     8062ddd <_IO_stdin_used+0x1dd9>
and    %ch,%gs:0x67(%edi,%ebp,2)
imul   $0x756f7267,0x20(%esi),%ebp
jo     8062da3 <_IO_stdin_used+0x1d9f>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
jne    8062df8 <_IO_stdin_used+0x1df4>
gs
jb     8062df7 <_IO_stdin_used+0x1df3>
arpl   %sp,(%eax)
push   %ebp
dec    %ecx
inc    %esp
add    %ch,0x6e(%ecx)
jbe    8062df9 <_IO_stdin_used+0x1df5>
insb   (%dx),%es:(%edi)
imul   $0x726573,0x75(%eax,%eiz,1),%esp
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8062e1e <_IO_stdin_used+0x1e1a>
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062dd7 <_IO_stdin_used+0x1dd3>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
and    %ah,0x72203a73
gs
jae    8062e39 <_IO_stdin_used+0x1e35>
insb   (%dx),%es:(%edi)
jbe    8062e32 <_IO_stdin_used+0x1e2e>
and    %ah,0x61(%esi)
imul   $0x6c2d00,0x64(%ebp,%eiz,2),%ebp
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062dff <_IO_stdin_used+0x1dfb>
gs
js     8062e47 <_IO_stdin_used+0x1e43>
arpl   %si,0x74(%ebp)
and    %dh,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     8062e52 <_IO_stdin_used+0x1e4e>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %cl,0x25(%edi)
jae    8062e02 <_IO_stdin_used+0x1dfe>
add    %ah,0x43002064
or     (%eax),%al
push   %edx
and    $0xa756c,%eax
push   %edi
and    $0xa756c,%eax
dec    %esp
and    $0x64250a73,%eax
or     (%eax),%al
dec    %ecx
and    $0x73250a64,%eax
or     (%eax),%al
das
jne    8062e92 <_IO_stdin_used+0x1e8e>
jb     8062e50 <_IO_stdin_used+0x1e4c>
jae    8062e85 <_IO_stdin_used+0x1e81>
imul   $0x746d72,0x2f(%esi),%ebp
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062e55 <_IO_stdin_used+0x1e51>
and    $0x73250073,%eax
cmp    (%eax),%ah
push   %edi
popa
jb     8062eae <_IO_stdin_used+0x1eaa>
imul   $0x6143203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062e6c <_IO_stdin_used+0x1e68>
and    $0x73250073,%eax
cmp    (%eax),%ah
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062e7a <_IO_stdin_used+0x1e76>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x6f(%di)
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
and    $0x6c630073,%eax
outsl  %ds:(%esi),(%dx)
jae    8062ed6 <_IO_stdin_used+0x1ed2>
add    %ah,0x78(%ebp)
arpl   %ax,%gs:(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062ea2 <_IO_stdin_used+0x1e9e>
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
and    $0x6b6d0073,%eax
imul   $0x69666b6d,%fs:0x0(%edx),%esi
outsw  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,%fs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
add    %dh,%fs:0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x646d7200,0x6b(%esi),%ebp
imul   $0x65766173,0x0(%edx),%esi
imul   $0x6b656573,%fs:0x0(%edx),%esi
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062ef6 <_IO_stdin_used+0x1ef2>
jae    8062f3d <_IO_stdin_used+0x1f39>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x74730073
popa
je     8062ee6 <_IO_stdin_used+0x1ee2>
jne    8062f56 <_IO_stdin_used+0x1f52>
insb   (%dx),%es:(%edi)
imul   $0x69747500,0x6b(%esi),%ebp
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x61(%edi)
imul   $0x72770064,0x69(%eax,%esi,2),%esi
imul   $0x69646863,0x0(%ebp,%eiz,2),%esi
jb     8062f07 <_IO_stdin_used+0x1f03>
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062f33 <_IO_stdin_used+0x1f2f>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x77(%bx)
outsb  %ds:(%esi),(%dx)
gs
jb     8062f93 <_IO_stdin_used+0x1f8f>
push   $0x74207069
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%ebp)
and    %ah,%fs:0x202c756c
imul   $0x756c25,0x20(%si),%esp
and    $0x52203a73,%eax
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     8062fb4 <_IO_stdin_used+0x1fb0>
jb     8062f67 <_IO_stdin_used+0x1f63>
popa
je     8062f6a <_IO_stdin_used+0x1f66>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     8062fc0 <_IO_stdin_used+0x1fbc>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     8062fce <_IO_stdin_used+0x1fca>
jae    8062f6b <_IO_stdin_used+0x1f67>
add    %ah,0x52203a73
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     8062fe8 <_IO_stdin_used+0x1fe4>
jb     8062f9b <_IO_stdin_used+0x1f97>
popa
je     8062f9e <_IO_stdin_used+0x1f9a>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     8062ff4 <_IO_stdin_used+0x1ff0>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     8063002 <_IO_stdin_used+0x1ffe>
add    %al,(%eax)
add    %ah,0x57203a73
popa
jb     8063016 <_IO_stdin_used+0x2012>
imul   $0x6552203a,0x67(%esi),%ebp
popa
and    %ah,%fs:0x72(%ebp)
jb     8063025 <_IO_stdin_used+0x2021>
jb     8062fd8 <_IO_stdin_used+0x1fd4>
popa
je     8062fdb <_IO_stdin_used+0x1fd7>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     8063031 <_IO_stdin_used+0x202d>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     806303f <_IO_stdin_used+0x203b>
jae    8062fdc <_IO_stdin_used+0x1fd8>
and    $0x57203a73,%eax
popa
jb     8063052 <_IO_stdin_used+0x204e>
imul   $0x6552203a,0x67(%esi),%ebp
popa
and    %ah,%fs:0x72(%ebp)
jb     8063061 <_IO_stdin_used+0x205d>
jb     8063014 <_IO_stdin_used+0x2010>
popa
je     8063017 <_IO_stdin_used+0x2013>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     806306d <_IO_stdin_used+0x2069>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     806307b <_IO_stdin_used+0x2077>
add    %al,(%eax)
and    $0x57203a73,%eax
popa
jb     806308e <_IO_stdin_used+0x208a>
imul   $0x6143203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806304c <_IO_stdin_used+0x2048>
jae    8063093 <_IO_stdin_used+0x208f>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x25000073
jae    8063075 <_IO_stdin_used+0x2071>
and    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8063063 <_IO_stdin_used+0x205f>
arpl   %si,0x65(%edx)
popa
je     80630ae <_IO_stdin_used+0x20aa>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
and    $0x73250073,%eax
cmp    (%eax),%ah
push   %edi
jb     80630ce <_IO_stdin_used+0x20ca>
je     80630c6 <_IO_stdin_used+0x20c2>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8063087 <_IO_stdin_used+0x2083>
and    $0x6f20756c,%eax
data16
and    %ah,0x6220756c
jns    80630e9 <_IO_stdin_used+0x20e5>
gs
jae    8063078 <_IO_stdin_used+0x2074>
and    $0x57203a73,%eax
jb     80630ee <_IO_stdin_used+0x20ea>
je     80630e6 <_IO_stdin_used+0x20e2>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    80630a7 <_IO_stdin_used+0x20a3>
and    $0x6f20756c,%eax
data16
and    %ah,0x6220756c
jns    8063109 <_IO_stdin_used+0x2105>
add    %ch,%gs:(%esi)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
jne    8063101 <_IO_stdin_used+0x20fd>
jae    8063115 <_IO_stdin_used+0x2111>
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
pusha
cs
daa
and    %ah,0x6f(%esi)
jb     80630d1 <_IO_stdin_used+0x20cd>
gs
insl   (%dx),%es:(%edi)
jo     8063129 <_IO_stdin_used+0x2125>
jns    80630d7 <_IO_stdin_used+0x20d3>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
push   %ebx
jne    8063129 <_IO_stdin_used+0x2125>
jae    806313d <_IO_stdin_used+0x2139>
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
pusha
cs
daa
and    %ah,0x6f(%esi)
jb     80630f9 <_IO_stdin_used+0x20f5>
gs
insl   (%dx),%es:(%edi)
jo     8063151 <_IO_stdin_used+0x214d>
jns    80630ff <_IO_stdin_used+0x20fb>
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x72617420,0x6b(%esi),%ebp
addr16
gs
je     80630f0 <_IO_stdin_used+0x20ec>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    806315f <_IO_stdin_used+0x215b>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
popa
imul   $0x73256020,%fs:0x67(%esi),%ebp
daa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8063118 <_IO_stdin_used+0x2114>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8063187 <_IO_stdin_used+0x2183>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
popa
imul   $0x73256020,%fs:0x67(%esi),%ebp
daa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x61(%eax)
jb     806319b <_IO_stdin_used+0x2197>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,(%eax),%esp
popa
jb     80631a8 <_IO_stdin_used+0x21a4>
gs
je     80631b7 <_IO_stdin_used+0x21b3>
add    %al,(%eax)
add    %al,(%eax)
pushf
xor    %al,(%esi)
or     %al,%ah
xor    %al,(%esi)
or     %dh,%al
xor    %al,(%esi)
or     %bl,(%eax)
xor    %eax,(%esi)
or     %ah,(%eax)
pop    %ebx
sub    $0x5d7325,%eax
and    %bl,0x2d(%ebx)
sub    $0x3d5b7325,%eax
and    $0x5d5d73,%eax
and    %bl,0x2d(%ebx)
sub    $0x253d7325,%eax
jae    80631d3 <_IO_stdin_used+0x21cf>
add    %ah,(%eax)
pop    %ebx
sub    $0x5d73252d,%eax
add    %ah,(%eax)
pop    %ebx
sub    $0x255b6325,%eax
jae    80631e5 <_IO_stdin_used+0x21e1>
pop    %ebp
add    %bl,0x2d(%ebx)
and    $0x73252063,%eax
pop    %ebp
add    %ch,(%esi)
cs
das
cs
cs
das
outsb  %ds:(%si),(%dx)
jne    80631cc <_IO_stdin_used+0x21c8>
popa
jb     8063207 <_IO_stdin_used+0x2203>
jo     80631cf <_IO_stdin_used+0x21cb>
push   $0x2e706c65
arpl   %ax,(%eax)
push   $0x21006c6f
and    %ch,(%eax)
sub    %ch,0x70(%edi)
je     8063228 <_IO_stdin_used+0x2224>
sub    %ebp,0x616c663e
addr16 jae 80631de <_IO_stdin_used+0x21da>
and    %dh,%es:(%eax)
js     80631f7 <_IO_stdin_used+0x21f3>
sub    %eax,(%eax)
outsb  %gs:(%esi),(%dx)
je     806323b <_IO_stdin_used+0x2237>
imul   $0x20262620,0x73(%ebp),%esp
jae    806323a <_IO_stdin_used+0x2236>
outsl  %ds:(%esi),(%dx)
jb     8063249 <_IO_stdin_used+0x2245>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     806324d <_IO_stdin_used+0x2249>
imul   $0x6e550073,0x6e(%edi),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
jae    806325e <_IO_stdin_used+0x225a>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8063260 <_IO_stdin_used+0x225c>
jb     80631f3 <_IO_stdin_used+0x21ef>
fs
jne    8063266 <_IO_stdin_used+0x2262>
sub    $0x73677261,%eax
add    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
add    %al,0x61(%edi)
jb     8063270 <_IO_stdin_used+0x226c>
popa
and    %ch,%gs:0x6e(%bx,%di)
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
cmp    (%eax),%ah
and    $0x6d720073,%eax
popa
jb     8063293 <_IO_stdin_used+0x228f>
imul   $0x706c6568,0x0(%esi),%ebp
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%al
and    $0x73252073,%eax
add    %ah,(%eax)
and    %ch,0x72(%edi)
cmp    (%eax),%ah
add    %ah,(%eax)
pop    %ebx
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
cs
cs
cs
pop    %ebp
add    %bl,0x25(%ebx)
jae    80632b6 <_IO_stdin_used+0x22b2>
add    %ch,0x73252d
cmp    $0x5b007325,%eax
cmp    $0x5d7325,%eax
push   %edx
gs
jo     80632dc <_IO_stdin_used+0x22d8>
jb     80632e3 <_IO_stdin_used+0x22df>
and    %ah,0x75(%edx)
addr16 jae 8063295 <_IO_stdin_used+0x2291>
je     80632e6 <_IO_stdin_used+0x22e2>
and    %ah,0xa2e73
fs
jne    80632f0 <_IO_stdin_used+0x22ec>
sub    $0x73677261,%eax
sub    $0x65746f6e,%eax
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jb     8063304 <_IO_stdin_used+0x2300>
sub    $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ch,0x6e(%edi,%ebp,2)
addr16 sub $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ah,0x63(%edi,%ebp,2)
sub    $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ch,0x70(%edi)
je     80632e3 <_IO_stdin_used+0x22df>
outsl  %fs:(%esi),(%dx)
arpl   %bp,0x6c6f63
push   $0x65646165
jb     80632f2 <_IO_stdin_used+0x22ee>
arpl   %bp,0x6c(%edi)
add    %dh,0x73(%ebp)
popa
addr16
gs
sub    $0x65646e69,%eax
outsb  %ds:(%esi),(%dx)
je     80632d6 <_IO_stdin_used+0x22d2>
add    %al,(%eax)
push   $0x3e2d6c6f
outsb  %gs:(%esi),(%dx)
je     8063353 <_IO_stdin_used+0x234f>
imul   $0x20262620,0x73(%ebp),%esp
push   $0x3e2d6c6f
jae    8063357 <_IO_stdin_used+0x2353>
outsl  %ds:(%esi),(%dx)
jb     8063366 <_IO_stdin_used+0x2362>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     806336a <_IO_stdin_used+0x2366>
imul   $0x68000073,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
sub    $0x6d756e3e,%eax
pop    %edi
outsb  %gs:(%esi),(%dx)
je     806337b <_IO_stdin_used+0x2377>
imul   $0x203d3c20,0x73(%ebp),%esp
sub    %ch,(%eax)
jae    806337d <_IO_stdin_used+0x2379>
jp     806337b <_IO_stdin_used+0x2377>
pop    %edi
je     8063342 <_IO_stdin_used+0x233e>
and    %ch,0x2f202931
and    %dh,0x69(%ebx)
jp     8063389 <_IO_stdin_used+0x2385>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
jae    806339e <_IO_stdin_used+0x239a>
jb     80633a1 <_IO_stdin_used+0x239d>
arpl   %si,0x68(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     80633a9 <_IO_stdin_used+0x23a5>
jns    8063362 <_IO_stdin_used+0x235e>
add    %al,(%eax)
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     80633b6 <_IO_stdin_used+0x23b2>
imul   $0x203d3c20,0x73(%ebp),%esp
sub    %ch,(%eax)
jae    80633b8 <_IO_stdin_used+0x23b4>
jp     80633b6 <_IO_stdin_used+0x23b2>
pop    %edi
je     806337d <_IO_stdin_used+0x2379>
and    %ch,0x2f202931
and    %dh,0x69(%ebx)
jp     80633c4 <_IO_stdin_used+0x23c0>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
jae    80633d9 <_IO_stdin_used+0x23d5>
jb     80633dc <_IO_stdin_used+0x23d8>
arpl   %si,0x68(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     80633e4 <_IO_stdin_used+0x23e0>
jns    806339d <_IO_stdin_used+0x2399>
add    %al,(%eax)
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     80633f1 <_IO_stdin_used+0x23ed>
insl   (%dx),%es:(%edi)
gs
je     80633f9 <_IO_stdin_used+0x23f5>
jb     80633b6 <_IO_stdin_used+0x23b2>
jb     80633fd <_IO_stdin_used+0x23f9>
jno    806340f <_IO_stdin_used+0x240b>
imul   $0x20612073,0x65(%edx),%esi
jbe    8063404 <_IO_stdin_used+0x2400>
insb   (%dx),%es:(%edi)
jne    806340b <_IO_stdin_used+0x2407>
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     8063421 <_IO_stdin_used+0x241d>
insl   (%dx),%es:(%edi)
gs
je     8063429 <_IO_stdin_used+0x2425>
jb     80633e6 <_IO_stdin_used+0x23e2>
insl   (%dx),%es:(%edi)
jne    806343c <_IO_stdin_used+0x2438>
je     80633eb <_IO_stdin_used+0x23e7>
bound  %esp,0x20(%ebp)
jo     806343f <_IO_stdin_used+0x243b>
jae    806343b <_IO_stdin_used+0x2437>
je     806343d <_IO_stdin_used+0x2439>
jbe    806343b <_IO_stdin_used+0x2437>
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     8063459 <_IO_stdin_used+0x2455>
insl   (%dx),%es:(%edi)
gs
je     8063461 <_IO_stdin_used+0x245d>
jb     80633fe <_IO_stdin_used+0x23fa>
add    %al,(%eax)
inc    %ecx
push   %edx
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
cmp    (%eax),%ah
and    $0x61762073,%eax
insb   (%dx),%es:(%edi)
jne    806347c <_IO_stdin_used+0x2478>
and    %ch,0x73(%ecx)
and    %ch,0x73(%ebp,%eiz,2)
jae    8063440 <_IO_stdin_used+0x243c>
je     806348a <_IO_stdin_used+0x2486>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
and    %ah,0x71(%ebp)
jne    806348d <_IO_stdin_used+0x2489>
insb   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
and    $0x72540073,%eax
jns    8063458 <_IO_stdin_used+0x2454>
pusha
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ch,0x72(%edi)
and    %ah,0x25(%eax)
jae    806346b <_IO_stdin_used+0x2467>
sub    $0x6173752d,%eax
addr16
gs
daa
and    %ah,0x6f(%esi)
jb     8063478 <_IO_stdin_used+0x2474>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80634c1 <_IO_stdin_used+0x24bd>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     80634d0 <_IO_stdin_used+0x24cc>
popa
je     80634cf <_IO_stdin_used+0x24cb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %cl,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     80634e2 <_IO_stdin_used+0x24de>
jb     80634ee <_IO_stdin_used+0x24ea>
and    %ch,0x72(%edi)
and    %ch,0x70(%edi)
je     80634e6 <_IO_stdin_used+0x24e2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
addr16 jne 80634f4 <_IO_stdin_used+0x24f0>
outsb  %gs:(%esi),(%dx)
je     80634fe <_IO_stdin_used+0x24fa>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     8063501 <_IO_stdin_used+0x24fd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80634bc <_IO_stdin_used+0x24b8>
popa
jb     8063504 <_IO_stdin_used+0x2500>
and    %ah,0x6c(%ecx)
jae    8063513 <_IO_stdin_used+0x250f>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     806351b <_IO_stdin_used+0x2517>
jb     8063527 <_IO_stdin_used+0x2523>
and    %ch,0x72(%edi)
and    %ch,0x70(%edi)
je     806351f <_IO_stdin_used+0x251b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     80634df <_IO_stdin_used+0x24db>
popa
outsb  %ds:(%esi),(%dx)
jns    80634e3 <_IO_stdin_used+0x24df>
arpl   %bp,0x72(%edi)
jb     806352d <_IO_stdin_used+0x2529>
jae    806353a <_IO_stdin_used+0x2536>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6f687320,%fs:0x67(%esi),%ebp
jb     806354a <_IO_stdin_used+0x2546>
and    %ch,0x70(%edi)
je     8063544 <_IO_stdin_used+0x2540>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    806350d <_IO_stdin_used+0x2509>
add    %ch,0x6f(%eax)
insb   (%dx),%es:(%edi)
pop    %edi
popa
jo     8063557 <_IO_stdin_used+0x2553>
outsb  %gs:(%esi),(%dx)
add    %ch,%fs:0x61(%ebp)
imul   $0x68,0x5f(%ebp),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %dh,%bl
xor    %eax,(%esi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x32(%ebp)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
mov    (%edx),%esi
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,0x80632(%ecx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
xor    (%esi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x80632(%edx)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x80632,%esi
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,%cl
xor    (%esi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
daa
xor    (%esi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%ebx)
xor    %dh,%ss:(%eax)
add    %bh,(%edi)
aas
aas
add    %ch,0x203a6325
and    $0x2d2d0073,%eax
and    $0x25203a73,%eax
jae    8063592 <_IO_stdin_used+0x258e>
and    $0x54203a73,%eax
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    80635bf <_IO_stdin_used+0x25bb>
popa
jb     8063609 <_IO_stdin_used+0x2605>
jne    8063611 <_IO_stdin_used+0x260d>
outsb  %gs:(%esi),(%dx)
je     806361b <_IO_stdin_used+0x2617>
or     (%eax),%al
insb   (%dx),%es:(%edi)
imul   $0x69727000,0x63(%edx),%esp
outsb  %ds:(%esi),(%dx)
je     80635d5 <_IO_stdin_used+0x25d1>
jo     8063629 <_IO_stdin_used+0x2625>
outsl  %ds:(%esi),(%dx)
addr16 jb 806361c <_IO_stdin_used+0x2618>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%esi)
jb     8063634 <_IO_stdin_used+0x2630>
imul   $0x76696700,0x6e(%edi),%ebp
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    80635ef <_IO_stdin_used+0x25eb>
push   $0x20706c65
insb   (%dx),%es:(%edi)
imul   $0x61737500,0x74(%ebx),%esi
add    %ah,%gs:0x69(%bx)
jbe    8063648 <_IO_stdin_used+0x2644>
and    %ah,0x20(%ecx)
jae    8063650 <_IO_stdin_used+0x264c>
outsl  %ds:(%esi),(%dx)
jb     806365f <_IO_stdin_used+0x265b>
and    %dh,0x73(%ebp)
popa
and    %ch,%gs:0x65(%di)
jae    8063669 <_IO_stdin_used+0x2665>
popa
add    %dh,%gs:0x72(%bx,%si)
outsl  %ds:(%esi),(%dx)
addr16 jb 8063661 <_IO_stdin_used+0x265d>
insl   (%dx),%es:(%edi)
sub    $0x656d616e,%eax
add    %dh,0x65(%ebx)
je     806362b <_IO_stdin_used+0x2627>
je     8063675 <_IO_stdin_used+0x2671>
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 8063676 <_IO_stdin_used+0x2672>
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x41(%eax)
dec    %esi
inc    %edi
add    %dl,0x45(%ebx)
inc    %ebx
push   %ebx
add    %al,(%eax)
add    %ch,(%eax)
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
sub    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%esi)
jb     80636b2 <_IO_stdin_used+0x26ae>
imul   $0x6f6e6b20,0x6e(%edi),%ebp
ja     80636b6 <_IO_stdin_used+0x26b2>
and    %edi,(%edi)
add    %al,(%eax)
push   $0x20676e61
outsw  %ds:(%esi),(%dx)
jb     8063675 <_IO_stdin_used+0x2671>
push   %ebx
inc    %ebp
inc    %ebx
push   %ebx
and    %dh,0x65(%ebx)
arpl   %bp,0x6e(%edi)
fs
jae    8063682 <_IO_stdin_used+0x267e>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    80636d5 <_IO_stdin_used+0x26d1>
je     806368b <_IO_stdin_used+0x2687>
xor    (%esi),%esi
xor    %dh,(%eax)
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
sub    %esp,(%eax)
dec    %edi
jo     8063707 <_IO_stdin_used+0x2703>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    8063708 <_IO_stdin_used+0x2704>
and    %ch,%fs:0x61(%eax)
jbe    8063707 <_IO_stdin_used+0x2703>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x3f2164,0x65(%edx),%edi
add    %al,(%eax)
add    %ah,%al
ss
push   %es
or     %ah,-0x55(%eax)
add    $0x8,%eax
add    %ch,0x80635(%edx)
add    %al,(%eax)
add    %bh,0x56080635(%ebp)
add    %al,(%eax)
add    %ch,-0xf7f9cb(%edi)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0x37(%eax)
push   %es
or     %dl,(%eax)
lods   %ds:(%esi),%al
add    $0x8,%eax
add    %ch,0x80635(%edx)
add    %al,(%eax)
add    %ch,(%edi)
xor    (%esi),%al
or     %bh,(%edi)
add    %al,(%eax)
add    %al,%ch
xor    $0xffff0806,%eax
(bad)
(bad)
fnstenv 0xfffd0806
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%bh
xor    $0x806,%eax
add    %al,(%eax)
cli
xor    $0xfffe0806,%eax
(bad)
pushl  (%edx)
pop    %ss
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%edi)
ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%esi,%esi,1)
push   %es
or     %bh,%ah
(bad)
(bad)
jmp    *(%ecx)
ss
push   %es
or     %al,(%ebx)
add    %al,(%eax)
add    %cl,0x6(%esi,%esi,1)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,(%edx)
xor    %esi,%cs:(%ecx)
add    %al,0x4e(%edi)
push   %ebp
and    %ah,0x70(%ebx)
imul   $0x20410000,0x0(%edi),%ebp
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 806382f <_IO_stdin_used+0x282b>
xor    %bl,0x20(%ebp)
ja     806383a <_IO_stdin_used+0x2836>
jae    80637fb <_IO_stdin_used+0x27f7>
jo     806383e <_IO_stdin_used+0x283a>
jae    8063852 <_IO_stdin_used+0x284e>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    806384f <_IO_stdin_used+0x284b>
push   $0x206e6120
gs
js     8063855 <_IO_stdin_used+0x2851>
arpl   %sp,(%eax)
jae    806386d <_IO_stdin_used+0x2869>
jae    806386a <_IO_stdin_used+0x2866>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x20732500,%eax
sub    %ah,0x25202973
jae    8063821 <_IO_stdin_used+0x281d>
add    %ah,0x73252073
or     (%eax),%al
sub    %al,0x29(%ebx)
add    %dl,0x72(%edi)
imul   $0x7962206e,0x65(%esp,%esi,2),%esi
and    %ah,0xa2e73
push   %edi
jb     806389f <_IO_stdin_used+0x289b>
je     80638ac <_IO_stdin_used+0x28a8>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     80638b6 <_IO_stdin_used+0x28b2>
je     80638c3 <_IO_stdin_used+0x28bf>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063888 <_IO_stdin_used+0x2884>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     80638da <_IO_stdin_used+0x28d6>
jb     80638e1 <_IO_stdin_used+0x28dd>
and    %ah,0x75(%edx)
addr16 jae 8063893 <_IO_stdin_used+0x288f>
je     80638e4 <_IO_stdin_used+0x28e0>
cmp    (%eax),%ah
and    $0x62000a73,%eax
jne    80638e5 <_IO_stdin_used+0x28e1>
sub    $0x6f697063,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    80638b6 <_IO_stdin_used+0x28b2>
outsl  %ds:(%esi),(%dx)
jb     80638f2 <_IO_stdin_used+0x28ee>
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    80638cd <_IO_stdin_used+0x28c9>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     806391c <_IO_stdin_used+0x2918>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     80638d2 <_IO_stdin_used+0x28ce>
insb   (%dx),%es:(%edi)
popa
je     806391b <_IO_stdin_used+0x2917>
jb     80638d8 <_IO_stdin_used+0x28d4>
cmp    $0x68,%al
je     8063930 <_IO_stdin_used+0x292c>
jo     80638f8 <_IO_stdin_used+0x28f4>
das
das
outsb  %ds:(%si),(%dx)
jne    80638f2 <_IO_stdin_used+0x28ee>
outsl  %ds:(%esi),(%dx)
jb     806392e <_IO_stdin_used+0x292a>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8063940 <_IO_stdin_used+0x293c>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8063901 <_IO_stdin_used+0x28fd>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     8063965 <_IO_stdin_used+0x2961>
popa
jb     8063956 <_IO_stdin_used+0x2952>
cmp    (%eax),%ah
jns    8063964 <_IO_stdin_used+0x2960>
jne    8063917 <_IO_stdin_used+0x2913>
popa
jb     806395f <_IO_stdin_used+0x295b>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     806397f <_IO_stdin_used+0x297b>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8063989 <_IO_stdin_used+0x2985>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     80639a6 <_IO_stdin_used+0x29a2>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     80639a5 <_IO_stdin_used+0x29a1>
outsb  %ds:(%esi),(%dx)
je     8063963 <_IO_stdin_used+0x295f>
jo     80639aa <_IO_stdin_used+0x29a6>
jb     80639b4 <_IO_stdin_used+0x29b0>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     80639c4 <_IO_stdin_used+0x29c0>
je     80639d1 <_IO_stdin_used+0x29cd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063996 <_IO_stdin_used+0x2992>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80639e4 <_IO_stdin_used+0x29e0>
je     80639f1 <_IO_stdin_used+0x29ed>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80639b6 <_IO_stdin_used+0x29b2>
and    %ah,0x250a2c73
jae    80639be <_IO_stdin_used+0x29ba>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8063a08 <_IO_stdin_used+0x2a04>
je     8063a15 <_IO_stdin_used+0x2a11>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80639da <_IO_stdin_used+0x29d6>
and    %ah,0x250a2c73
jae    80639e2 <_IO_stdin_used+0x29de>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8063a30 <_IO_stdin_used+0x2a2c>
je     8063a3d <_IO_stdin_used+0x2a39>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063a02 <_IO_stdin_used+0x29fe>
and    %ah,0x250a2c73
jae    8063a0a <_IO_stdin_used+0x2a06>
and    %ah,0x25202c73
jae    8063a12 <_IO_stdin_used+0x2a0e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8063a5c <_IO_stdin_used+0x2a58>
je     8063a69 <_IO_stdin_used+0x2a65>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063a2e <_IO_stdin_used+0x2a2a>
and    %ah,0x250a2c73
jae    8063a36 <_IO_stdin_used+0x2a32>
and    %ah,0x25202c73
jae    8063a3e <_IO_stdin_used+0x2a3a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8063a8c <_IO_stdin_used+0x2a88>
je     8063a99 <_IO_stdin_used+0x2a95>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063a5e <_IO_stdin_used+0x2a5a>
and    %ah,0x250a2c73
jae    8063a66 <_IO_stdin_used+0x2a62>
and    %ah,0x25202c73
jae    8063a6e <_IO_stdin_used+0x2a6a>
and    %ah,0x250a2c73
jae    8063a76 <_IO_stdin_used+0x2a72>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8063ac0 <_IO_stdin_used+0x2abc>
je     8063acd <_IO_stdin_used+0x2ac9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8063a92 <_IO_stdin_used+0x2a8e>
and    %ah,0x250a2c73
jae    8063a9a <_IO_stdin_used+0x2a96>
and    %ah,0x25202c73
jae    8063aa2 <_IO_stdin_used+0x2a9e>
and    %ah,0x250a2c73
jae    8063aaa <_IO_stdin_used+0x2aa6>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
and    $0x6f682073,%eax
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x68,%al
je     8063b16 <_IO_stdin_used+0x2b12>
jo     8063ade <_IO_stdin_used+0x2ada>
das
das
ja     8063b1f <_IO_stdin_used+0x2b1b>
ja     8063ad8 <_IO_stdin_used+0x2ad4>
outsb  %ds:(%si),(%dx)
jne    8063adc <_IO_stdin_used+0x2ad8>
outsl  %ds:(%esi),(%dx)
jb     8063b18 <_IO_stdin_used+0x2b14>
das
jae    8063b23 <_IO_stdin_used+0x2b1f>
data16
je     8063b2e <_IO_stdin_used+0x2b2a>
popa
jb     8063b1f <_IO_stdin_used+0x2b1b>
das
and    $0xa3e2f73,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     8063b2b <_IO_stdin_used+0x2b27>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8063af1 <_IO_stdin_used+0x2aed>
jne    8063b46 <_IO_stdin_used+0x2b42>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     8063b57 <_IO_stdin_used+0x2b53>
popa
jb     8063b48 <_IO_stdin_used+0x2b44>
cmp    (%eax),%ah
cmp    $0x68,%al
je     8063b5d <_IO_stdin_used+0x2b59>
jo     8063b25 <_IO_stdin_used+0x2b21>
das
das
ja     8063b66 <_IO_stdin_used+0x2b62>
ja     8063b1f <_IO_stdin_used+0x2b1b>
outsb  %ds:(%si),(%dx)
jne    8063b23 <_IO_stdin_used+0x2b1f>
outsl  %ds:(%esi),(%dx)
jb     8063b5f <_IO_stdin_used+0x2b5b>
das
addr16
gs
je     8063b65 <_IO_stdin_used+0x2b61>
gs
insb   (%dx),%es:(%edi)
jo     8063b30 <_IO_stdin_used+0x2b2c>
or     %ds:(%eax),%al
add    %bh,-0x41f7f7fb(%esi)
add    $0x5be4808,%eax
or     %dl,-0x17f7fa42(%eax)
mov    $0xbf400805,%esi
add    $0x5bfa808,%eax
or     %ah,(%eax)
rolb   $0x8,0x5bcc008
pop    %eax
mov    $0x805,%ebp
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     8063bbd <_IO_stdin_used+0x2bb9>
jb     8063baf <_IO_stdin_used+0x2bab>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8063bd1 <_IO_stdin_used+0x2bcd>
popa
jb     8063bc2 <_IO_stdin_used+0x2bbe>
and    %al,0x6f(%esi)
jne    8063bd0 <_IO_stdin_used+0x2bcc>
fs
popa
je     8063bcf <_IO_stdin_used+0x2bcb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ah,(%ebx)
and    %ah,0x6e(%ebp)
je     8063be7 <_IO_stdin_used+0x2be3>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     8063bc3 <_IO_stdin_used+0x2bbf>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8063c18 <_IO_stdin_used+0x2c14>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %ah,(%ebx)
and    %ah,0x75(%edx)
arpl   %bp,0x65(%ebx)
je     8063c34 <_IO_stdin_used+0x2c30>
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x0,0x60(%edi)
insb   (%dx),%es:(%edi)
imul   $0x73006c61,0x72(%ebp,%eiz,2),%esi
push   $0x2d6c6c65
popa
insb   (%dx),%es:(%edi)
ja     8063c79 <_IO_stdin_used+0x2c75>
jns    8063c8d <_IO_stdin_used+0x2c89>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    8063c83 <_IO_stdin_used+0x2c7f>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %bl,(%eax)
(bad)
add    $0x5dc4808,%eax
or     %bh,-0x24(%eax)
add    $0x5dae808,%eax
or     %ch,(%eax)
fildl  0x5db5808
or     %al,-0x7ff7fa25(%eax)
fildl  0x5db8008
or     %ah,(%eax)
flds   0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5d99808
or     %bh,%al
fadds  0x5d91808
or     %dl,(%eax)
flds   0x5d90808
or     %al,(%eax)
flds   0x5d8d008
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %bl,(%eax)
fiaddl 0x5da1808
or     %cl,-0x28(%ecx)
add    $0x5d84908,%eax
or     %cl,-0x28(%ecx)
add    $0x5d84108,%eax
or     %cl,-0x28(%ecx)
add    $0x5d7b808,%eax
or     %cl,-0x28(%ecx)
add    $0x5d9c808,%eax
or     %cl,-0x28(%ecx)
add    $0x5d84908,%eax
or     %cl,-0x28(%ecx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %cl,-0x28(%ecx)
add    $0x5d84908,%eax
or     %cl,-0x28(%ecx)
add    $0x5d84908,%eax
or     %cl,(%eax)
xlat   %ds:(%ebx)
add    $0x5da1808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d84908,%eax
or     %ch,-0x47f7fa27(%eax)
xlat   %ds:(%ebx)
add    $0x5d84908,%eax
or     %bh,0x490805d7(%eax)
fadds  0x5d7b808
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,-0x47f7fa29(%eax)
xlat   %ds:(%ebx)
add    $0x5d7b808,%eax
or     %bh,0x200805d7(%eax)
fadds  0x5d84908
or     %ah,(%eax)
fadds  0x5d84108
or     %dl,-0x6ff7fa22(%eax)
fiadd  0x5de2808
or     %dl,0x280805de(%eax)
fiadd  0x5de9008
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de2808
or     %ch,(%eax)
fiadd  0x5de9008
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%esi)
cmp    $0x6,%al
or     %ch,%dh
sub    $0x3c0e0806,%eax
push   %es
or     %ah,%al
adc    %al,(%esi)
or     %bl,(%ebx)
cmp    $0x6,%al
or     %ah,(%ebx)
cmp    $0x6,%al
or     %ch,0x2a080616(%ecx)
cmp    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%esi)
cs
das
cs
cs
das
outsb  %ds:(%si),(%dx)
jne    8063f7d <_IO_stdin_used+0x2f79>
jne    8063fc4 <_IO_stdin_used+0x2fc0>
imul   $0x632e736e,0x65(%ebp),%ebp
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    8063fce <_IO_stdin_used+0x2fca>
arpl   %ax,%gs:(%eax)
jbe    8063fc4 <_IO_stdin_used+0x2fc0>
insb   (%dx),%es:(%edi)
imul   $0x69745f65,0x74(%ecx,%eiz,2),%esp
insl   (%dx),%es:(%edi)
gs
jae    8063fe0 <_IO_stdin_used+0x2fdc>
arpl   %ax,%gs:(%eax)
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %ah,0x6f203a73
jo     8063ffe <_IO_stdin_used+0x2ffa>
imul   $0x73252720,0x6e(%edi),%ebp
daa
and    %ch,0x73(%ecx)
and    %ah,0x6d(%ecx)
bound  %ebp,0x67(%ecx)
jne    806400c <_IO_stdin_used+0x3008>
jne    8064012 <_IO_stdin_used+0x300e>
or     (%eax),%al
and    $0x69203a73,%eax
outsb  %ds:(%esi),(%dx)
jbe    806400a <_IO_stdin_used+0x3006>
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,0x2527202d
arpl   %sp,(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f203a73
jo     806403b <_IO_stdin_used+0x3037>
imul   $0x2d2d2720,0x6e(%edi),%ebp
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    8064045 <_IO_stdin_used+0x3041>
daa
je     8063ffa <_IO_stdin_used+0x2ff6>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8064000 <_IO_stdin_used+0x2ffc>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8064055 <_IO_stdin_used+0x3051>
outsb  %gs:(%esi),(%dx)
je     8063ff6 <_IO_stdin_used+0x2ff2>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     806406b <_IO_stdin_used+0x3067>
imul   $0x63252720,0x6e(%edi),%ebp
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    8064075 <_IO_stdin_used+0x3071>
daa
je     806402a <_IO_stdin_used+0x3026>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8064030 <_IO_stdin_used+0x302c>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8064085 <_IO_stdin_used+0x3081>
outsb  %gs:(%esi),(%dx)
je     8064026 <_IO_stdin_used+0x3022>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     806409b <_IO_stdin_used+0x3097>
imul   $0x73252720,0x6e(%edi),%ebp
daa
and    %dh,0x65(%edx)
jno    80640a9 <_IO_stdin_used+0x30a5>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 80640ae <_IO_stdin_used+0x30aa>
outsb  %gs:(%esi),(%dx)
je     806404f <_IO_stdin_used+0x304b>
add    %al,(%eax)
add    %ah,0x75203a73
outsb  %ds:(%esi),(%dx)
jb     80640b5 <_IO_stdin_used+0x30b1>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x706f2064,0x65(%edx),%edi
je     80640c6 <_IO_stdin_used+0x30c2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
sub    $0x2773252d,%eax
or     (%eax),%al
and    $0x75203a73,%eax
outsb  %ds:(%esi),(%dx)
jb     80640d5 <_IO_stdin_used+0x30d1>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x706f2064,0x65(%edx),%edi
je     80640e6 <_IO_stdin_used+0x30e2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x27732563,%eax
or     (%eax),%al
and    $0x6f203a73,%eax
jo     8064103 <_IO_stdin_used+0x30ff>
imul   $0x71657220,0x6e(%edi),%ebp
jne    8064101 <_IO_stdin_used+0x30fd>
jb     80640ff <_IO_stdin_used+0x30fb>
jae    80640bc <_IO_stdin_used+0x30b8>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8064111 <_IO_stdin_used+0x310d>
outsb  %gs:(%esi),(%dx)
je     80640c8 <_IO_stdin_used+0x30c4>
sub    $0x2527202d,%eax
arpl   %sp,(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f203a73
jo     806412f <_IO_stdin_used+0x312b>
imul   $0x572d2720,0x6e(%edi),%ebp
and    %ah,0x69202773
jae    80640ea <_IO_stdin_used+0x30e6>
popa
insl   (%dx),%es:(%edi)
bound  %ebp,0x67(%ecx)
jne    8064140 <_IO_stdin_used+0x313c>
jne    8064146 <_IO_stdin_used+0x3142>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f203a73
jo     8064153 <_IO_stdin_used+0x314f>
imul   $0x572d2720,0x6e(%edi),%ebp
and    %ah,0x64202773
outsl  %ds:(%esi),(%dx)
gs
jae    806415e <_IO_stdin_used+0x315a>
daa
je     8064113 <_IO_stdin_used+0x310f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8064119 <_IO_stdin_used+0x3115>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 806416e <_IO_stdin_used+0x316a>
outsb  %gs:(%esi),(%dx)
je     806410f <_IO_stdin_used+0x310b>
add    %al,(%eax)
add    %ebx,(%ebx)
add    (%ebx),%edi
pop    %eax
or     %eax,(%eax)
add    %ch,(%edx)
add    %eax,(%eax)
add    %ch,%al
push   %esp
(bad)
pushl  0x0(%ecx,%ecx,1)
add    %bh,(%eax)
pop    %esp
(bad)
jmp    *0x5e280000(%ebx,%edx,1)
(bad)
lcall  *-0x7fffff7(%eax)
pop    %esi
(bad)
(bad)
fmuls  (%ecx)
add    %al,(%eax)
mov    %ah,-0x1(%esi,%edi,8)
xor    %cl,(%edx)
add    %al,(%eax)
cmp    %ah,-0x2(%ebp)
(bad)
js     806414c <_IO_stdin_used+0x3148>
add    %al,(%eax)
cwtl
gs
(bad)
lcall  *0x67580000(%edx,%ecx,1)
(bad)
dec    %esp
or     (%eax),%al
add    %bh,0x69(%eax)
(bad)
incl   (%ebx,%ecx,1)
add    %al,(%eax)
js     80641c9 <_IO_stdin_used+0x31c5>
(bad)
lcall  *0x0(%ebx,%ecx,1)
add    %cl,(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
jmp    *0x5800000b(%eax)
jo     806416d <_IO_stdin_used+0x3169>
(bad)
fmuls  (%ebx)
add    %al,(%eax)
js     80641e8 <_IO_stdin_used+0x31e4>
(bad)
lcall  *(%eax)
or     $0x0,%al
add    %bh,%al
jbe    806417d <_IO_stdin_used+0x3179>
lcall  *0x0(%esp,%ecx,1)
add    %ch,(%eax)
ja     8064185 <_IO_stdin_used+0x3181>
(bad)
js     8064196 <_IO_stdin_used+0x3192>
add    %al,(%eax)
dec    %eax
mov    %dh,%bh
call   *%esp
or     $0x0,%al
add    %ch,0x10fffe8a(%eax)
or     $0x8af80000,%eax
(bad)
(bad)
cmp    $0xd,%al
add    %al,(%eax)
push   $0x6cfffe8b
or     $0x8cc80000,%eax
(bad)
ljmp   *-0x72e80000(%ebp,%ecx,1)
(bad)
(bad)
fmuls  0x8d980000
(bad)
call   *(%esi,%ecx,1)
add    %al,(%eax)
dec    %eax
mov    %esi,%?
ljmp   *0xe(%eax)
add    %al,(%eax)
enter  $0xfe8e,$0xff
movsb  %ds:(%esi),%es:(%edi)
push   %cs
add    %al,(%eax)
enter  $0xfe93,$0xff
call   100641eb <argp_program_version+0x7ff91ab>
cwtl
(bad)
ljmp   *(%edi,%ecx,1)
add    %al,(%eax)
cmp    %bl,0xf80fffe(%ecx)
add    %al,(%eax)
mov    %bl,0xfd8ff(%esi,%edi,8)
add    %ch,%al
sahf
(bad)
decl   0x28000010(%eax)
lods   %ds:(%esi),%al
(bad)
dec    %esp
adc    %al,(%eax)
add    %bh,(%eax)
lods   %ds:(%esi),%eax
(bad)
(bad)
cmp    %dl,(%ecx)
add    %al,(%eax)
mov    $0x8cfffead,%eax
adc    %eax,(%eax)
add    %cl,%al
mov    $0x11d0fffe,%eax
add    %al,(%eax)
sub    %bh,0x120cfffe(%ecx)
add    %al,(%eax)
dec    %eax
mov    $0x122cfffe,%ecx
add    %al,(%eax)
push   $0x4cfffeb9
adc    (%eax),%al
add    %bl,0x6cfffeb9(%eax)
adc    (%eax),%al
add    %bl,-0x46(%eax)
(bad)
ljmp   *-0x45780000(%edx,%edx,1)
(bad)
inc    %esp
adc    (%eax),%al
add    %bh,-0x23000146(%eax)
adc    (%eax),%al
add    %cl,%al
mov    $0x12f0fffe,%edx
add    %al,(%eax)
call   31064124 <argp_program_version+0x28ff90e4>
adc    (%eax),%eax
add    %bh,0x74fffed4(%eax)
adc    (%eax),%eax
add    %cl,-0x3300012b(%eax)
adc    (%eax),%eax
add    %cl,%al
aad    $0xfe
(bad)
call   40064290 <argp_program_version+0x37ff9250>
(bad)
(bad)
decl   (%esp,%edx,1)
add    %al,(%eax)
mov    %dl,%dh
(bad)
pushl  (%eax)
adc    $0x0,%al
add    %bl,(%eax)
(bad)
pushl  0x0(%esp,%edx,1)
add    %cl,-0x26(%eax)
(bad)
decl   0x78000014(%eax)
fdivrp %st,%st(6)
dec    %esp
adc    $0x0,%al
add    %ch,%al
fdivrp %st,%st(6)
incl   (%eax)
adc    $0xdf580000,%eax
(bad)
jmp    *-0x20780000(,%edx,1)
(bad)
(bad)
cmp    $0x15,%al
add    %al,(%eax)
enter  $0xfedf,$0xff
fs
adc    $0xe0380000,%eax
(bad)
decl   -0x47ffffeb(%eax)
jecxz  80642cd <_IO_stdin_used+0x32c9>
dec    %eax
adc    $0xe4780000,%eax
(bad)
decl   (%eax)
push   %ss
add    %al,(%eax)
mov    $0x24fffee4,%eax
push   %ss
add    %al,(%eax)
enter  $0xfee5,$0xff
jl     8064300 <_IO_stdin_used+0x32fc>
add    %al,(%eax)
sbb    %ch,%al
(bad)
(bad)
mov    $0x38000016,%esp
jmp    1f0f42f8 <argp_program_version+0x170892b8>
add    %al,(%eax)
or     %ch,%dl
(bad)
ljmp   *(%edi,%edx,1)
add    %al,(%eax)
pop    %eax
ljmp   $0x0,$0x174cfffe
clc
ljmp   $0x0,$0x1784fffe
enter  $0xfeec,$0xff
rclb   $0x0,(%edi)
add    %ch,(%eax)
in     (%dx),%eax
(bad)
jmp    *%eax
pop    %ss
add    %al,(%eax)
sub    %dh,%al
(bad)
jmp    *(%eax)
sbb    %al,(%eax)
add    %bl,%al
icebp
(bad)
call   *0x18(%eax)
add    %al,(%eax)
cwtl
repnz (bad)
call   *0x38000018(%eax)
cmc
(bad)
call   *%eax
sbb    %al,(%eax)
add    %bl,0x10fffef6(%eax)
sbb    %eax,(%eax)
add    %bl,0x40fffef7(%eax)
sbb    %eax,(%eax)
add    %bl,-0x8(%eax)
(bad)
incl   0x78000019(%eax)
stc
(bad)
inc    %eax
sbb    %eax,(%eax)
add    %bl,0xfffefa(%eax)
sbb    (%eax),%al
add    %cl,-0x4(%eax)
(bad)
incl   0x1a(%eax)
add    %al,(%eax)
clc
cld
(bad)
call   *-0x1780000(%edx,%ebx,1)
(bad)
call   *%eax
sbb    (%eax),%al
add    %cl,0x0(%eax)
(bad)
decl   (%ebx,%ebx,1)
add    %al,(%eax)
mov    %al,(%eax)
(bad)
pushl  (%eax)
sbb    (%eax),%eax
add    %bh,0x44ffff00(%eax)
sbb    (%eax),%eax
add    %ch,(%eax)
add    %edi,%edi
pushl  0x1b(%eax)
add    %al,(%eax)
or     %al,(%edx)
(bad)
pushl  -0x57ffffe5(%eax)
add    %bh,%bh
(bad)
clc
sbb    (%eax),%eax
add    %bh,0x3(%eax)
(bad)
(bad)
cmp    %bl,(%eax,%eax,1)
add    %bh,%al
add    %edi,%edi
incl   0x3800001c(%eax)
add    $0xff,%al
jmp    *0x800001c(%eax)
add    $0x1cf8ffff,%eax
add    %al,(%eax)
enter  $0xff05,$0xff
inc    %eax
sbb    $0x6280000,%eax
(bad)
ljmp   *0x0(%ebp,%ebx,1)
add    %bh,-0x6f0000f9(%eax)
sbb    $0x9b80000,%eax
(bad)
dec    %esp
sbb    $0x9d80000,%eax
(bad)
jmp    *%eax
sbb    $0xaa80000,%eax
(bad)
lcall  *(%eax)
push   %ds
add    %al,(%eax)
cwtl
or     %edi,%edi
jmp    *0x1e(%eax)
add    %al,(%eax)
push   $0x98ffff0c
push   %ds
add    %al,(%eax)
pop    %eax
or     $0x1ee0ffff,%eax
add    %al,(%eax)
sub    %dl,(%ecx)
(bad)
call   *(%eax)
pop    %ds
add    %al,(%eax)
js     8064437 <_IO_stdin_used+0x3433>
(bad)
decl   0x1f(%eax)
add    %al,(%eax)
js     8064443 <_IO_stdin_used+0x343f>
(bad)
(bad)
js     8064451 <_IO_stdin_used+0x344d>
add    %al,(%eax)
mov    %dl,0x1f8cffff
add    %al,(%eax)
fcoms  0x1fb8ffff
add    %al,(%eax)
pop    %eax
push   %ss
(bad)
(bad)
clc
pop    %ds
add    %al,(%eax)
push   $0x4cffff17
and    %al,(%eax)
add    %bl,%al
pop    %ss
(bad)
ljmp   *0x20(%eax)
add    %al,(%eax)
push   $0xd8ffff1e
and    %al,(%eax)
add    %ch,0x4ffff1e(%eax)
and    %eax,(%eax)
add    %bl,0x44ffff1f(%eax)
and    %eax,(%eax)
add    %bl,-0x7b0000e0(%eax)
and    %eax,(%eax)
add    %cl,(%eax)
and    %edi,%edi
dec    %eax
and    %eax,(%eax)
add    %bl,0x25(%eax)
(bad)
decl   (%eax)
and    (%eax),%al
add    %bl,0x26(%eax)
(bad)
lcall  *(%edx,%eiz,1)
add    %al,(%eax)
enter  $0xff26,$0xff
dec    %eax
and    (%eax),%al
add    %ch,(%eax)
daa
(bad)
ljmp   *0x22(%eax)
add    %al,(%eax)
mov    %ah,(%edi)
(bad)
call   *0x28280000(%edx,%eiz,1)
(bad)
dec    %esp
and    (%eax),%al
add    %bl,-0x70000d8(%eax)
and    (%eax),%al
add    %bh,0x10ffff28(%eax)
and    (%eax),%eax
add    %bl,%al
sub    %bh,%bh
ljmp   *(%eax)
and    (%eax),%eax
add    %bh,%al
sub    %bh,%bh
(bad)
cmp    $0x23,%al
add    %al,(%eax)
js     80644ff <_IO_stdin_used+0x34fb>
(bad)
pushl  0x23(%eax)
add    %al,(%eax)
cwtl
sub    %edi,%edi
decl   -0x47ffffdd(%eax)
sub    %edi,%edi
jmp    *-0x27ffffdd(%eax)
sub    %edi,%edi
(bad)
mov    $0xf8000023,%eax
sub    %edi,%edi
call   *%eax
and    (%eax),%eax
add    %bl,(%eax)
sub    %bh,%bh
jmp    *%esp
and    (%eax),%eax
add    %bh,(%eax)
sub    %bh,%bh
(bad)
cld
and    (%eax),%eax
add    %bl,0x2a(%eax)
(bad)
call   *(%esp)
add    %al,(%eax)
sbb    %ch,(%ebx)
(bad)
call   *0x0(%esp)
add    %cl,%al
sub    %edi,%edi
call   *0x2be80000(%esp)
(bad)
ljmp   *-0x77ffffdc(%eax)
sub    $0xff,%al
call   *%eax
and    $0x0,%al
add    %ch,-0x170000d4(%eax)
and    $0x0,%al
add    %cl,%al
sub    $0xff,%al
incl   (%eax)
and    $0x2ce80000,%eax
(bad)
lcall  *(%eax)
and    $0x2d080000,%eax
(bad)
pushl  (%eax)
and    $0x2d280000,%eax
(bad)
decl   0x25(%eax)
add    %al,(%eax)
dec    %eax
sub    $0x2560ffff,%eax
add    %al,(%eax)
clc
sub    $0x25a0ffff,%eax
add    %al,(%eax)
sbb    %ch,(%esi)
(bad)
(bad)
mov    $0xb8000025,%eax
cs
(bad)
(bad)
clc
and    $0x2f380000,%eax
(bad)
ljmp   *(%esi,%eiz,1)
add    %al,(%eax)
pop    %eax
das
(bad)
incl   0x26(%eax)
add    %al,(%eax)
js     80645bd <_IO_stdin_used+0x35b9>
(bad)
lcall  *0x26(%eax)
add    %al,(%eax)
cwtl
das
(bad)
pushl  0x26(%eax)
add    %al,(%eax)
mov    $0x88ffff2f,%eax
add    %al,%es:(%eax)
fsubrs (%edi)
(bad)
jmp    *-0x7ffffda(%eax)
das
(bad)
(bad)
mov    $0x18000026,%eax
xor    %bh,%bh
call   *%eax
add    %al,%es:(%eax)
cmp    %dh,(%eax)
(bad)
(bad)
call   600645eb <argp_program_version+0x57ff95ab>
xor    %bh,%bh
incl   (%eax)
daa
add    %al,(%eax)
call   51064501 <argp_program_version+0x48ff94c1>
daa
add    %al,(%eax)
or     %dh,(%ecx)
(bad)
lcall  *0x0(%edi,%eiz,1)
add    %ch,(%eax)
xor    %edi,%edi
pushl  0x27(%eax)
add    %al,(%eax)
dec    %eax
xor    %edi,%edi
decl   0x58000027(%eax)
xor    %edi,%edi
lcall  *0x32380000(%edi,%eiz,1)
(bad)
push   %esp
daa
add    %al,(%eax)
pop    %eax
xor    %bh,%bh
decl   (%eax)
sub    %al,(%eax)
add    %cl,0x20ffff32(%eax)
sub    %al,(%eax)
add    %cl,%al
xor    %bh,%bh
(bad)
cmp    %ch,(%eax)
add    %al,(%eax)
sub    %dh,(%edi,%edi,8)
(bad)
js     8064642 <_IO_stdin_used+0x363e>
add    %al,(%eax)
or     %dh,0x28b8ffff
add    %al,(%eax)
dec    %eax
xor    $0x28e4ffff,%eax
add    %al,(%eax)
enter  $0xff35,$0xff
cmp    %ch,(%ecx)
add    %al,(%eax)
enter  $0xff37,$0xff
push   $0x18000029
cmp    %bh,%bh
call   *0x3b180000(%ecx,%ebp,1)
(bad)
(bad)
in     (%dx),%al
sub    %eax,(%eax)
add    %bl,0x1cffff3b(%eax)
sub    (%eax),%al
add    %ch,%al
cmp    %edi,%edi
jmp    *0x2a(%eax)
add    %al,(%eax)
sub    %bh,(%esi)
(bad)
jmp    *-0x77ffffd6(%eax)
aas
(bad)
(bad)
clc
sub    (%eax),%al
add    %bh,(%eax)
inc    %esp
(bad)
(bad)
cmp    %ch,(%ebx)
add    %al,(%eax)
call   710645bd <argp_program_version+0x68ff957d>
sub    (%eax),%eax
add    %bh,-0x2b0000bb(%eax)
sub    (%eax),%eax
add    %cl,%al
inc    %edi
(bad)
incl   0x0(%esp,%ebp,1)
add    %cl,(%eax)
dec    %eax
(bad)
jmp    *0x0(%esp,%ebp,1)
add    %bl,-0x330000b8(%eax)
sub    $0x0,%al
add    %cl,(%eax)
dec    %edi
(bad)
decl   0x4f780000(,%ebp,1)
(bad)
decl   0x2d(%eax)
add    %al,(%eax)
fmuls  -0x1(%edi)
(bad)
js     80646df <_IO_stdin_used+0x36db>
add    %al,(%eax)
sbb    %dl,-0x1(%edx)
(bad)
mov    $0x800002d,%esp
gs
(bad)
(bad)
in     (%dx),%al
sub    $0x65480000,%eax
(bad)
lcall  *(%eax)
add    %al,%cs:(%eax)
call   51064636 <argp_program_version+0x48ff95f6>
add    %al,%cs:(%eax)
or     %ah,-0x1(%edi)
incl   -0x77ffffd2(%eax)
addr16 (bad)
ljmp   *0x6a580000(%esi,%ebp,1)
(bad)
(bad)
in     (%dx),%al
add    %al,%cs:(%eax)
or     %ch,-0x1(%ebx)
lcall  *(%edi,%ebp,1)
add    %al,(%eax)
sbb    %ch,-0x1(%edi,%edi,8)
push   %esp
das
add    %al,(%eax)
sub    %bh,-0x1(%ecx)
incl   0x79680000(%edi,%ebp,1)
(bad)
lcall  *-0x57ffffd1(%eax)
jns    806470e <_IO_stdin_used+0x370a>
pushl  -0x37ffffd1(%eax)
jns    8064716 <_IO_stdin_used+0x3712>
inc    %esp
das
add    %al,(%eax)
cmp    %bh,-0x1(%edx)
lcall  *(%eax)
xor    %al,(%eax)
add    %ch,%al
jp     8064726 <_IO_stdin_used+0x3722>
lcall  *0x30(%eax)
add    %al,(%eax)
pop    %eax
cmp    $0xff,%bh
hlt
xor    %al,(%eax)
add    %ch,0xcffff80(%eax)
xor    %eax,(%eax)
add    %cl,(%eax)
cmp    $0x3130ff,%edi
add    %cl,-0x7f(%eax)
(bad)
decl   0x31(%eax)
add    %al,(%eax)
clc
cmp    $0x316cff,%edi
add    %cl,-0x7e(%eax)
(bad)
incl   -0x57ffffcf(%eax)
(bad)
(bad)
jmp    *-0x17ffffcf(%eax)
(bad)
(bad)
inc    %esp
xor    %eax,(%eax)
add    %cl,(%eax)
cmp    $0xffffffff,%edi
loopne 80647a3 <_IO_stdin_used+0x379f>
add    %al,(%eax)
pop    %eax
cmp    $0xffffffff,%edi
or     $0x32,%al
add    %al,(%eax)
enter  $0xff83,$0xff
dec    %esp
xor    (%eax),%al
add    %bl,(%eax)
test   %bh,%bh
jmp    *0x0(%edx,%esi,1)
add    %ch,-0x7c(%eax)
(bad)
(bad)
jl     80647c4 <_IO_stdin_used+0x37c0>
add    %al,(%eax)
mov    $0x94ffff84,%eax
xor    (%eax),%al
add    %cl,(%eax)
test   %edi,%edi
ljmp   *-0x7a680000(%edx,%esi,1)
(bad)
(bad)
call   b00647df <argp_program_version+0xa7ff979f>
test   %edi,%edi
(bad)
cld
xor    (%eax),%al
add    %bh,0x10ffff85(%eax)
xor    (%eax),%eax
add    %bl,0x7cffff86(%eax)
xor    (%eax),%eax
add    %cl,-0x79(%eax)
(bad)
call   *-0x67ffffcd(%eax)
mov    %bh,%bh
(bad)
call   b0064808 <argp_program_version+0xa7ff97c8>
mov    %bh,%bh
(bad)
cld
xor    (%eax),%eax
add    %bh,0x10ffff88(%eax)
xor    $0x0,%al
add    %cl,%al
mov    %bh,%bh
jmp    *(%esp,%esi,1)
add    %al,(%eax)
sbb    %cl,0x3448ffff(%ecx)
add    %al,(%eax)
js     806477f <_IO_stdin_used+0x377b>
(bad)
incl   -0x75780000(%esp,%esi,1)
(bad)
inc    %eax
xor    $0x0,%al
add    %bh,%al
mov    %bh,%bh
decl   (%eax)
xor    $0x8b380000,%eax
(bad)
ljmp   *(%eax)
xor    $0x8ba80000,%eax
(bad)
pushl  0x35(%eax)
add    %al,(%eax)
or     %cl,0x35a8ff(%edi,%edi,8)
add    %cl,-0x1b000074(%eax)
xor    $0x8cc80000,%eax
(bad)
decl   (%eax)
add    %al,%ss:(%eax)
clc
mov    %?,%edi
lcall  *(%esi,%esi,1)
add    %al,(%eax)
cmp    %cl,0x3674ffff(%esi)
add    %al,(%eax)
enter  $0xff8e,$0xff
test   $0x36,%al
add    %al,(%eax)
cwtl
(bad)
(bad)
jmp    *%eax
add    %al,%ss:(%eax)
sub    %dl,0x3750ffff(%ecx)
add    %al,(%eax)
enter  $0xff92,$0xff
cwtl
aaa
add    %al,(%eax)
cmp    %dl,0x37d8ff(%edi,%edi,8)
add    %ch,-0x6c(%eax)
(bad)
push   %eax
aaa
add    %al,(%eax)
cwtl
xchg   %eax,%esp
(bad)
decl   (%eax)
cmp    %al,(%eax)
add    %bl,(%eax)
lahf
(bad)
decl   0x0(%eax,%edi,1)
add    %bh,-0x73000060(%eax)
cmp    %al,(%eax)
add    %bh,%al
mov    0x38c0ffff,%al
add    %al,(%eax)
sbb    %ah,0x38d4ffff(%ecx)
add    %al,(%eax)
cmp    %ah,0x38e8ffff(%ecx)
add    %al,(%eax)
js     8064847 <_IO_stdin_used+0x3843>
(bad)
decl   (%ecx,%edi,1)
add    %al,(%eax)
cwtl
mov    0x3920ffff,%eax
add    %al,(%eax)
fsubs  0x3944ffff(%ecx)
add    %al,(%eax)
cmp    %ah,0x3978ffff(%edx)
add    %al,(%eax)
sbb    %ah,0x39b4ffff(%ebx)
add    %al,(%eax)
dec    %eax
mov    %eax,0x39ccffff
add    %al,(%eax)
fsubs  0x3a00ffff(%ebx)
add    %al,(%eax)
clc
mov    %eax,0x3a14ffff
add    %al,(%eax)
sbb    %ah,0x3a28ff(%edi,%edi,8)
add    %bh,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
cmp    $0x3a,%al
add    %al,(%eax)
pop    %eax
movsb  %ds:(%esi),%es:(%edi)
(bad)
call   *0x3a(%eax)
add    %al,(%eax)
or     %ah,0x3a6cffff(%ebp)
add    %al,(%eax)
mov    $0x88ffffa5,%eax
cmp    (%eax),%al
add    %ch,%al
movsl  %ds:(%esi),%es:(%edi)
(bad)
jmp    *0x1800003a(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
(bad)
mov    $0xc800003a,%eax
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
(bad)
fdivrl (%edx)
add    %al,(%eax)
clc
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
push   %esp
cmp    (%eax),%al
add    %ch,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
decl   (%ebx,%edi,1)
add    %al,(%eax)
pop    %eax
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
jmp    *(%ebx,%edi,1)
add    %al,(%eax)
or     %ch,0x3b48ffff(%eax)
add    %al,(%eax)
dec    %eax
test   $0xff,%al
jmp    *0x3b(%eax)
add    %al,(%eax)
mov    %ch,0x3b78ffff(%eax)
add    %al,(%eax)
enter  $0xffa8,$0xff
nop
cmp    (%eax),%eax
add    %ch,(%eax)
test   $0x3bccffff,%eax
add    %al,(%eax)
mov    %ch,0x3c08ffff(%ecx)
add    %al,(%eax)
mov    $0x28ffffa9,%eax
cmp    $0x0,%al
add    %bh,(%eax)
stos   %al,%es:(%edi)
(bad)
lcall  *0x0(%esp,%edi,1)
add    %cl,(%eax)
stos   %eax,%es:(%edi)
(bad)
call   *-0x54180000(%esp,%edi,1)
(bad)
call   *%esp
cmp    $0x0,%al
add    %bh,(%eax)
scas   %es:(%edi),%eax
(bad)
incl   0x0(%ebp,%edi,1)
add    %bl,-0x51(%eax)
(bad)
lcall  *0x3d(%eax)
add    %al,(%eax)
mov    %ch,0x3d70ffff(%edi)
add    %al,(%eax)
cwtl
mov    $0xff,%cl
(bad)
mov    $0xc800003d,%esp
mov    $0xff,%cl
jmp    *%eax
cmp    $0xb1f80000,%eax
(bad)
incl   (%esi,%edi,1)
add    %al,(%eax)
dec    %eax
mov    $0xff,%dl
ljmp   *(%eax)
add    %al,%ds:(%eax)
js     8064978 <_IO_stdin_used+0x3974>
(bad)
decl   0x3e(%eax)
add    %al,(%eax)
test   $0xb2,%al
(bad)
jmp    *0x0(%esi,%edi,1)
add    %bl,%al
mov    $0xff,%dl
incl   -0x4cf80000(%esi,%edi,1)
(bad)
jmp    *-0x4c880000(%esi,%edi,1)
(bad)
dec    %eax
add    %al,%ds:(%eax)
cwtl
mov    $0x3f38ffff,%eax
add    %al,(%eax)
call   650649b1 <argp_program_version+0x5cff9971>
aas
add    %al,(%eax)
mov    $0xa4ffffb9,%eax
aas
add    %al,(%eax)
dec    %eax
mov    $0x3ff8ffff,%edx
add    %al,(%eax)
sub    %bh,0x4038ffff(%ebx)
add    %al,(%eax)
test   $0xc8,%al
(bad)
inc    %eax
inc    %eax
add    %al,(%eax)
cmp    %cl,%cl
(bad)
(bad)
fadds  0x0(%eax)
add    %cl,-0xf000037(%eax)
inc    %eax
add    %al,(%eax)
fmul   %st(1),%st
(bad)
call   *(%ecx,%eax,2)
add    %al,(%eax)
pop    %eax
lret
(bad)
decl   0x0(%ecx,%eax,2)
add    %cl,-0x47000034(%eax)
inc    %ecx
add    %al,(%eax)
call   2d064a16 <argp_program_version+0x24ff99d6>
inc    %edx
add    %al,(%eax)
pop    %eax
into
(bad)
jmp    *0x42(%eax)
add    %al,(%eax)
push   $0x74ffffce
inc    %edx
add    %al,(%eax)
cwtl
into
(bad)
.byte 0xff
xchg   %eax,%esp
inc    %edx
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8064a7b <_IO_stdin_used+0x3a77>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
dec    %ebx
(bad)
call   *0x7(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8064a9b <_IO_stdin_used+0x3a97>
js     8064a99 <_IO_stdin_used+0x3a95>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x370001ac(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x55,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,0x18000000(%eax)
push   %ebp
(bad)
decl   0x5(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffc4,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bl,%al
add    %al,(%eax)
add    %dl,0x5a(%eax)
(bad)
jmp    *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %bh,0x51fffe5a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %eax,(%eax)
add    %dh,%ah
pop    %edx
(bad)
(bad)
mov    $0x1,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
je     8064bdb <_IO_stdin_used+0x3bd7>
add    %al,(%eax)
test   %bl,-0x1(%esi,%edi,8)
adc    (%edx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    0x1(%ecx),%ebp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,0x5e6c0000(%ecx,%eax,1)
(bad)
push   %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x47,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
add    $0x2,%al
add    %al,(%eax)
adc    $0x60,%al
(bad)
decl   0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
sbb    %eax,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %ah,0x62(%eax)
(bad)
incl   0x2(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
xor    %eax,(%edx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
addb   $0x0,(%edx)
add    %bh,0x64(%eax)
(bad)
jmp    *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x24,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %bl,0x66(%eax)
(bad)
pushl  0x4(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4d00e46
mov    $0x2,%dh
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
xchg   %eax,%esp
push   $0xfffffffe
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec36402(%ebx)
add    $0x0,%al
add    %bl,0x0(%eax)
add    %al,(%eax)
and    %al,(%ebx)
add    %al,(%eax)
test   $0x6a,%al
(bad)
lcall  *(%esi)
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3800e46
push   %cs
push   %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ebx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
jl     8064de5 <_IO_stdin_used+0x3de1>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jge    8064de5 <_IO_stdin_used+0x3de1>
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x21c0e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,-0x6ffffffd(%eax)
jge    8064e21 <_IO_stdin_used+0x3e1d>
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
mov    $0x7d,%ah
(bad)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adc    $0x4,%al
add    %al,(%eax)
hlt
jge    8064e7d <_IO_stdin_used+0x3e79>
call   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x40d00e48
in     (%dx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,0x0(%esp,%eax,1)
add    %dl,(%edi,%edi,2)
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax,%eax,1)
cmp    %bh,-0x2(%edi)
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x62,0x2200e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %bh,0x7f7c0000(%esp,%eax,1)
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x79,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    $0x7fd80000,%eax
(bad)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%eax,1)
add    %bl,(%eax,%eax,4)
(bad)
push   %ebp
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
lea    (%edx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,-0x27fffffb(%eax)
test   %bh,%dh
pushl  (%ebx)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
insl   (%dx),%es:(%edi)
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,%ah
add    $0x88d40000,%eax
(bad)
ljmp   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaf,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
arpl   %cx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,(%eax)
push   %es
add    %al,(%eax)
mov    $0x89,%al
(bad)
incl   0x3(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe7,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
call   4b1a5ed8 <argp_program_version+0x4313ae98>
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %al,-0x57fffffa(%eax)
mov    %?,%esi
call   *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
xor    %al,(%edi)
add    %al,(%eax)
pop    %eax
mov    %esi,%?
pushl  0xd
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2e00e46
aaa
push   %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x74000000
pop    %es
add    %al,(%eax)
push   %esp
fwait
(bad)
decl   (%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,%al
pop    %es
add    %al,(%eax)
clc
fwait
(bad)
(bad)
js     806524e <_IO_stdin_used+0x424a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edi),%ebx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%eax,%ecx,1)
add    %al,(%eax)
and    $0x9c,%al
(bad)
decl   (%ecx)
or     (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3800e46
adc    (%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
js     80652e6 <_IO_stdin_used+0x42e2>
add    %al,(%eax)
lock cmpsb %es:(%edi),%ds:(%esi)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x49,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,-0x58ec0000(%eax,%ecx,1)
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%ah
or     %al,(%eax)
add    %dl,(%edi,%eiz,4)
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,%ah
or     %al,(%eax)
add    %dl,(%edi,%eiz,4)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,(%ecx,%ecx,1)
add    %al,(%eax)
and    $0xa7,%al
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
push   %esp
or     %eax,(%eax)
add    %ah,0x23fffe(%edi,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %eax,(%eax)
add    %bh,0x23fffe(%edi,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   %cl,(%ecx)
add    %al,(%eax)
aam    $0xa7
(bad)
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
or     %eax,(%eax)
add    %dl,%al
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
jmp    *(%eax)
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    %ch,%al
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %cl,0x0(%eax)
add    %al,(%eax)
rorb   (%ecx)
add    %al,(%eax)
mov    $0xc5fffeb0,%eax
adc    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    %esi,%ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
sbb    $0xa,%al
add    %al,(%eax)
cmp    $0xc1,%al
(bad)
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
(bad)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
dec    %esp
or     (%eax),%al
add    %cl,0xf5fffe(%eax,%ecx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edi
addl   $0x2,(%ebx)
aad    $0xa
(bad)
add    $0x4,%al
inc    %ecx
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx,%ecx,1)
add    %dh,0x35fffe(%ecx,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec37302(%ebx)
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,-0x27fffff6(%eax)
sar    $0xff,%esi
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    0xe(%ebp),%ah
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0xa,%ah
add    %al,(%eax)
and    $0xc2,%al
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x2,(%ebx)
inc    %esp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bl,%al
or     (%eax),%al
add    %dl,-0x3e(%eax)
(bad)
decl   0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4d00e46
mov    $0x1,%ah
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0xb,%al
add    %al,(%eax)
pushf
(bad)
sub    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%eax)
or     (%eax),%eax
add    %bh,0x2efffec5(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4d00e46
sub    $0x3,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
je     80655e5 <_IO_stdin_used+0x45e1>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
leave
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%bl
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
test   $0xb,%al
add    %al,(%eax)
loopne 80655db <_IO_stdin_used+0x45d7>
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
int3
or     (%eax),%eax
add    %ch,(%edx,%ecx,8)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
in     $0xb,%al
add    %al,(%eax)
inc    %esp
lret   $0xfffe
xor    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x57,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%esp,%ecx,1)
add    %al,(%eax)
pop    %esp
lret   $0xfffe
bound  %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xor    %cl,(%eax,%eax,1)
add    %ch,0x7dfffeca(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
jo     80656e2 <_IO_stdin_used+0x46de>
add    %al,(%eax)
call   c50655aa <argp_program_version+0xbcffa56a>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0xc,%al
add    %al,(%eax)
push   $0x35fffece
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec37302(%ebx)
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %cl,%ah
or     $0x0,%al
add    %cl,0x107fffe(%esi,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb9,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    $0xd,%al
add    %al,(%eax)
inc    %esp
iret
(bad)
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %ah,0x0(%ebp,%ecx,1)
add    %dl,-0x2(%ecx,%edx,8)
call   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x6ff1bcfc(%ebx)
add    %eax,(%edx)
mov    %cl,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
or     0x4110,%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x2800000d(%eax)
sar    %cl,%dh
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
aam    $0xd
add    %al,(%eax)
aam    $0xd2
(bad)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%edx,%ecx,1),%al
add    $0x41,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
hlt
or     $0xd3040000,%eax
(bad)
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,(%esi,%ecx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %cl,%esi
inc    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
lret
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   $0xe
aad    $0xfe
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %cl,(%esi)
add    %al,(%eax)
inc    %eax
aad    $0xfe
(bad)
cld
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
enter  $0xe,$0x0
add    %bl,%al
(bad)
jmp    *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
std
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
clc
push   %cs
add    %al,(%eax)
sbb    $0xfe,%cl
(bad)
mov    $0x0,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%edi)
add    %al,(%eax)
add    %bl,%dl
(bad)
call   *0x2(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
js     80659ed <_IO_stdin_used+0x49e9>
add    %al,(%eax)
pusha
fdivr  %st,%st(6)
lcall  *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    $0x8000000f,%eax
(bad)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
xchg   %eax,%ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
call   58065a60 <argp_program_version+0x4fffaa20>
fdivrp %st,%st(6)
(bad)
mov    $0x0,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    %dl,(%eax)
add    %al,(%eax)
rcr    %dh
(bad)
lcall  *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdc,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
push   $0xb0000010
(bad)
call   *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   $0x10,%al
add    %al,(%eax)
nop
loopne 8065b11 <_IO_stdin_used+0x4b0d>
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%edx
add    %al,(%eax)
call   8065b61 <_IO_stdin_used+0x4b5d>
loop   8065b51 <_IO_stdin_used+0x4b4d>
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,(%ecx,%edx,1)
add    %al,(%eax)
pop    %esp
loop   8065ba5 <_IO_stdin_used+0x4ba1>
call   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0xa012d03
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,0x11(%eax)
add    %al,(%eax)
mov    $0xe3,%al
(bad)
pushl  0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xffffffc3,0xa011503
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,-0x1acc0000(%ecx,%edx,1)
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf5a1fe(%ebx)
push   %cs
add    $0x49,%al
or     -0x3d(%ebp),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fcoms  (%ecx)
add    %al,(%eax)
push   %eax
in     $0xfe,%eax
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,%ah
adc    %eax,(%eax)
add    %ch,-0x2(%ebp,%eiz,8)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    %dl,(%edx)
add    %al,(%eax)
mov    $0xe5,%al
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff93,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bl,0x12(%eax)
add    %al,(%eax)
push   %eax
out    %al,$0xfe
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    0xa8000012,%al
out    %al,$0xfe
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ah,%al
adc    (%eax),%al
add    %bh,(%eax)
out    %eax,$0xfe
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%esp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    %dl,(%ebx)
add    %al,(%eax)
jo     8065d79 <_IO_stdin_used+0x4d75>
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x700e4302(%ebx)
outsl  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x13(%eax)
add    %al,(%eax)
nop
out    %eax,$0xfe
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
xchg   %eax,%edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%esi),%ecx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ah,0x8000013(%eax)
call   8c35e0c <argp_program_version+0xbcadcc>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%eax),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
call   88065e64 <argp_program_version+0x7fffae24>
call   8585e54 <argp_program_version+0x51ae14>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%esp,%edx,1)
add    %al,(%eax)
mov    $0xe8,%ah
(bad)
incl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,-0x6ff1b9fe(%ebx)
add    %esp,0xa(%eax)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,(%eax)
adc    $0x0,%al
add    %ah,(%eax)
ljmp   $0x0,$0x1fafffe
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0xa019203
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esp,%edx,1)
add    %ah,%ah
jmp    8065edd <_IO_stdin_used+0x4ed9>
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    %dl,(%eax,%eax,1)
add    %dh,%al
jmp    8065ef1 <_IO_stdin_used+0x4eed>
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %al,%al
adc    $0x0,%al
add    %cl,-0x1b000114(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     8065f4f <_IO_stdin_used+0x4f4b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
or     %dl,0xed300000
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %al,0x15(%eax)
add    %al,(%eax)
enter  $0xfeed,$0xff
in     $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     8065fcf <_IO_stdin_used+0x4fcb>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    %dl,0xee700000
(bad)
inc    %ebp
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa023d03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    $0x10000015,%eax
repnz (bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ah,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
lock adc $0xf2280000,%eax
(bad)
(bad)
cli
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa011503,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,(%eax)
push   %ss
add    %al,(%eax)
clc
cmc
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%edx,1)
add    %al,(%eax)
hlt
cmc
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pusha
push   %ss
add    %al,(%eax)
sbb    %dh,%dh
(bad)
(bad)
jnp    80660ce <_IO_stdin_used+0x50ca>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x52,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,0x58000016(%eax)
idiv   %dh
decl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x48,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
lahf
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
hlt
push   %ss
add    %al,(%eax)
adc    $0xf7,%al
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
jo     806616b <_IO_stdin_used+0x5167>
inc    %esi
or     (%esi),%cl
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,(%eax)
pop    %ss
add    %al,(%eax)
push   $0x82fffef7
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x65500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
mov    $0x140e0a01,%edx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
xor    $0x2,%al
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %al,-0x77ffffe9(%eax)
std
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %ss
add    %al,(%eax)
pushf
std
(bad)
jmp    *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     (%dx),%al
pop    %ss
add    %al,(%eax)
dec    %esp
(bad)
(bad)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
les    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
sub    $0x18,%al
add    %al,(%eax)
or     $0xff,%al
(bad)
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e46
mov    $0x1,%dh
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     80662ee <_IO_stdin_used+0x52ea>
add    %al,(%eax)
cmp    %al,(%ecx)
(bad)
decl   0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,0x48000018(%eax)
add    %edi,%edi
incl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%ah
sbb    %al,(%eax)
add    %dh,(%esp,%eax,1)
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
lock sbb %al,(%eax)
add    %bh,0x4(%eax)
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
sbb    %eax,(%eax)
add    %bh,0x5cffff04(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
push   %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x19,%al
add    %al,(%eax)
in     (%dx),%al
add    $0xff,%al
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%edi),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx,%ebx,1)
add    %dl,-0x1(%ebp,%eax,1)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pushw  %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    0x98000019,%al
add    $0x1bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0xa0000019,%eax
add    $0x1bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
rcrb   (%ecx)
add    %al,(%eax)
test   $0x5,%al
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,(%eax)
add    %al,(%eax)
add    %ah,%ah
sbb    %eax,(%eax)
add    %dh,0x7affff(%ebp,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    %bl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    %bl,(%edx)
add    %al,(%eax)
or     %al,(%esi)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
sbb    (%eax),%al
add    %dl,(%eax)
push   %es
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
sbb    (%eax),%al
add    %bl,(%eax)
push   %es
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
js     80664f8 <_IO_stdin_used+0x54f4>
add    %al,(%eax)
and    %al,(%esi)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    %ds,(%edx)
add    %al,(%eax)
sub    $0x6,%al
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    (%eax),%al
add    %dh,(%esi,%eax,1)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x3c00001a,%esp
push   %es
(bad)
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cld
sbb    (%eax),%al
add    %bh,0xb0ffff(%esi,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x1b,%al
add    %al,(%eax)
sub    $0x7,%al
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
sbb    (%eax),%eax
add    %bh,(%eax)
pop    %es
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x14600e43
add    %al,(%eax)
js     80665f9 <_IO_stdin_used+0x55f5>
add    %al,(%eax)
mov    $0x7,%al
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
sbb    (%eax),%eax
add    %bh,0x1bffff07(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
test   $0x1b,%al
add    %al,(%eax)
rolb   $0xff,(%edi)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rcrb   $0x0,(%ebx)
add    %cl,%al
pop    %es
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fcomps (%ebx)
add    %al,(%eax)
rolb   (%edi)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock sbb (%eax),%eax
add    %bl,%al
pop    %es
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     %bl,(%eax,%eax,1)
add    %ah,%al
pop    %es
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
sbb    $0x0,%al
add    %dl,0x8(%eax)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pusha
sbb    $0x0,%al
add    %bl,0x8(%eax)
(bad)
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
mov    0xb800001c,%al
or     %bh,%bh
(bad)
jp     806670e <_IO_stdin_used+0x570a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
aam    $0x1c
add    %al,(%eax)
add    $0x9,%al
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
call   1806676d <argp_program_version+0xfffb72d>
or     %edi,%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    %bl,0x9180000
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    %bl,0x9200000
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    %bl,0x9280000
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
sbb    $0x9300000,%eax
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
sbb    $0x9380000,%eax
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
js     80667fb <_IO_stdin_used+0x57f7>
add    %al,(%eax)
inc    %eax
or     %edi,%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
sbb    $0x9480000,%eax
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ch,0x5000001d(%eax)
or     %edi,%edi
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lock sbb $0x9980000,%eax
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %al,(%esi,%ebx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %edi,%edi
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %bl,(%esi)
add    %al,(%eax)
mov    $0x9,%al
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   %ds
add    %al,(%eax)
mov    $0x5ffff09,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,0x0(%esi,%ebx,1)
add    %dh,0xd7ffff(%ecx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0xa3c0000(%esi,%ebx,1)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x1e,%al
add    %al,(%eax)
dec    %eax
or     %bh,%bh
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
enter  $0x1e,$0x0
pusha
or     %bh,%bh
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
loopne 8066964 <_IO_stdin_used+0x5960>
add    %al,(%eax)
mov    %cl,(%edx)
(bad)
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb1,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
and    %bl,(%edi)
add    %al,(%eax)
test   $0xb,%al
(bad)
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pusha
pop    %ds
add    %al,(%eax)
dec    %eax
or     $0xff,%al
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %ch,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,0xc5c0000(%edi,%ebx,1)
(bad)
(bad)
jge    80669fa <_IO_stdin_used+0x59f6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5e,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
loopne 8066a65 <_IO_stdin_used+0x5a61>
add    %al,(%eax)
mov    %cl,(%edi,%edi,8)
(bad)
stc
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a69,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
adc    %ah,(%eax)
add    %al,(%eax)
pop    %eax
push   %cs
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax,%eiz,1)
add    %al,(%eax)
jl     8066ab4 <_IO_stdin_used+0x5ab0>
(bad)
(bad)
cli
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jno    8066ae8 <_IO_stdin_used+0x5ae4>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
and    %al,(%eax)
add    %ah,(%ecx,%edx,1)
(bad)
(bad)
jp     8066b02 <_IO_stdin_used+0x5afe>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
pop    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%ah
and    %al,(%eax)
add    %dh,-0x1(%ecx,%edx,1)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
push   $0xa
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,(%eax)
and    %eax,(%eax)
add    %al,0x3fffff11(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x1d,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,0x21(%eax)
add    %al,(%eax)
adcb   $0xff,(%ebx)
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbd,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    0x88000021,%al
adc    $0xff,%al
ljmp   *0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
loopne 8066c67 <_IO_stdin_used+0x5c63>
add    %al,(%eax)
clc
sbb    %bh,%bh
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x10000000
and    (%eax),%al
add    %bh,0x19(%eax)
(bad)
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,0x0(%edx,%eiz,1)
add    %bl,%ah
sbb    %edi,%edi
incl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   $0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
and    (%eax),%al
add    %bh,-0x1(%ebx,%ebx,1)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5b1fe(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %cl,(%ebx,%eiz,1)
add    %al,(%eax)
pushf
sbb    %edi,%edi
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%ebx),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
je     8066dfd <_IO_stdin_used+0x5df9>
add    %al,(%eax)
les    (%ebx),%ebx
(bad)
ljmp   *0x6(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6,0x3700e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x21f40000(%ebx,%eiz,1)
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebp)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4e,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %dh,%al
and    (%eax),%eax
add    %ch,(%eax)
and    %bh,%bh
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,(%eax)
and    $0x0,%al
add    %bl,0x22(%eax)
(bad)
(bad)
aas
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
push   %esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fs
and    $0x0,%al
add    %dl,-0x1(%esp)
(bad)
ljmp   $0xe41,$0x12
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30af002,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
and    $0x0,%al
add    %dl,(%edi,%esi,1)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
addl   $0x48,(%ebx)
push   %cs
pusha
insl   (%dx),%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
shlb   $0x0,(%eax,%eax,1)
sub    %dh,(%edi)
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
lock and $0x0,%al
add    %bl,0x1fffff37(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%edx),%bh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
and    $0x38800000,%eax
(bad)
(bad)
jp     8066f96 <_IO_stdin_used+0x5f92>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %al,(%edx)
jo     8066fb7 <_IO_stdin_used+0x5fb3>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
and    $0x38d40000,%eax
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
xchg   %eax,%esp
and    $0x3b640000,%eax
(bad)
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ebx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
les    0x3be40000,%esp
(bad)
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jl     8067049 <_IO_stdin_used+0x6045>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
cld
and    $0x3cbc0000,%eax
(bad)
incl   (%ebx)
or     $0x41000000,%eax
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa042203,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,(%esi,%eiz,1)
add    %al,(%eax)
pushf
dec    %ecx
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
add    %al,%es:(%eax)
enter  $0xff49,$0xff
xor    $0x0,%eax
inc    %ebx
push   %cs
xor    %dh,0xe(%ecx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    %al,%es:(%eax)
lock dec %ecx
(bad)
lcall  *0x0
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,%es:(%eax)
cld
dec    %ecx
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
shlb   $0x0,(%esi)
add    %bl,(%eax)
dec    %edx
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cwtl
add    %al,(%eax)
add    %al,(%eax)
daa
add    %al,(%eax)
mov    %cl,-0x1(%edx)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pushf
daa
add    %al,(%eax)
pop    %esp
dec    %edi
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,0x4f940000(%edi,%eiz,1)
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
fsubs  (%edi)
add    %al,(%eax)
rorb   -0x1(%edi)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
lock daa
add    %al,(%eax)
clc
dec    %edi
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x28,%al
add    %al,(%eax)
test   %dl,-0x1(%eax)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %ch,(%eax)
add    %al,(%eax)
rclb   $0xff,-0x1(%eax)
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x28(%eax)
add    %al,(%eax)
add    %dl,-0x1(%ecx)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    %al,(%eax)
add    %bl,(%ecx,%edx,2)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x20000028(%eax)
push   %ecx
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x28,%ah
add    %al,(%eax)
inc    %esp
push   %ecx
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
hlt
sub    %al,(%eax)
add    %dh,-0x1(%ecx,%edx,2)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     $0x29,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %ecx
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,(%ecx,%ebp,1)
add    %al,(%eax)
in     $0x51,%al
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    $0x29,%al
add    %al,(%eax)
sbb    $0x52,%al
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dl,0x0(%ecx,%ebp,1)
add    %dl,-0x1(%edx,%edx,2)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
nop
sub    %eax,(%eax)
add    %ch,0x10ffff52(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x52a40000(%ecx,%ebp,1)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0xb8000000
sub    %eax,(%eax)
add    %ah,-0x220000ae(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
and    $0x2a,%al
add    %al,(%eax)
adc    $0x53,%al
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
sub    (%eax),%al
add    %dh,0x48ffff53(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
je     80674e4 <_IO_stdin_used+0x64e0>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x57ffffd6(%eax)
push   %esp
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x54a40000(%edx,%ebp,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x5fffffd6(%eax)
push   %esp
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%ah
sub    (%eax),%al
add    %bl,0x49ffff(%esp,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,%al
sub    (%eax),%al
add    %cl,%al
push   %esp
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %ch,(%ebx,%ebp,1)
add    %al,(%eax)
in     (%dx),%al
push   %esp
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,0x2b(%eax)
add    %al,(%eax)
rclb   $0xff,-0x1(%ebp)
data16
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x2b,%al
add    %al,(%eax)
call   45067572 <argp_program_version+0x3cffc532>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,%al
sub    (%eax),%eax
add    %cl,(%eax)
push   %esi
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jle    806765f <_IO_stdin_used+0x665b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sbb    %ch,(%eax,%eax,1)
add    %dh,(%eax)
push   %esi
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,0x2c(%eax)
add    %al,(%eax)
pop    %eax
push   %esi
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,0x569c0000(%esp,%ebp,1)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x2c,%al
add    %al,(%eax)
mov    $0x24ffff56,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,%ah
sub    $0x0,%al
add    %dl,%ah
push   %esi
(bad)
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,0x57bc0000(,%ebp,1)
(bad)
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
push   %eax
sub    $0x58180000,%eax
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,-0x4fffffd3(%eax)
pop    %eax
(bad)
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,%al
sub    $0x59d00000,%eax
(bad)
lcall  *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jae    806789a <_IO_stdin_used+0x6896>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
inc    %eax
add    %al,%cs:(%eax)
sub    %bl,-0x1(%ebx)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
subb   $0x0,(%esi)
add    %bl,0x5c(%eax)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cwtl
add    %al,%cs:(%eax)
jo     806795e <_IO_stdin_used+0x695a>
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %dh,-0x77ffffd2(%eax)
pop    %esp
(bad)
(bad)
jp     8067928 <_IO_stdin_used+0x6924>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
hlt
add    %al,%cs:(%eax)
les    -0x1(%esi),%esp
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dh,(%edi,%ebp,1)
add    %al,(%eax)
and    $0x68,%al
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x2f(%eax)
add    %al,(%eax)
xor    %ch,-0x1(%eax)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edi,%ebp,1)
add    %bh,(%eax,%ebp,2)
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x4800002f(%eax)
push   $0x3fffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x2f,%ah
add    %al,(%eax)
fs
push   $0x19ffff
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
enter  $0x2f,$0x0
jo     8067a9a <_IO_stdin_used+0x6a96>
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
das
add    %al,(%eax)
mov    %gs,-0x1(%eax)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
and    %dh,(%eax)
add    %al,(%eax)
mov    $0xd4ffff68,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,0x0(%eax,%esi,1)
add    %bl,-0x1(%ecx,%ebp,2)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
je     8067b0a <_IO_stdin_used+0x6b06>
add    %al,(%eax)
je     8067b47 <_IO_stdin_used+0x6b43>
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   $0x30,%al
add    %al,(%eax)
shrb   -0x1(%ecx)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x69dc0000(%eax,%esi,1)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
xor    %al,(%eax)
add    %ch,%al
imul   $0x18ff,%edi,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
xor    %al,(%eax)
add    %dh,%ah
imul   $0x17ff,%edi,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,%al
xor    %al,(%eax)
add    %al,(%eax)
push   $0xffffffff
ljmp   *0x0(%ebx)
inc    %ebx
push   %cs
addb   $0x2,(%ecx)
cmpsl  %es:(%edi),%ds:(%esi)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
adc    $0x31,%al
add    %al,(%eax)
xchg   %eax,%esp
push   $0xffffffff
ljmp   *0x0(%ebp)
inc    %ebx
push   %cs
addb   $0x2,(%ecx)
test   $0x40e,%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    %dh,(%ecx)
add    %al,(%eax)
sub    %ch,-0x1(%ebx)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
xor    %eax,(%eax)
add    %al,0x6b(%eax)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pusha
xor    %eax,(%eax)
add    %bl,0x6b(%eax)
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
test   %dh,(%ecx)
add    %al,(%eax)
in     $0x6b,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pushf
xor    %eax,(%eax)
add    %bh,%ah
imul   $0xffffffff,%edi,%edi
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x31,%ah
add    %al,(%eax)
adc    $0x6c,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
int3
xor    %eax,(%eax)
add    %ch,(%esp,%ebp,2)
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
lock xor %eax,(%eax)
add    %bh,0x33ffff6c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %dh,(%edx)
add    %al,(%eax)
loopne 8067cde <_IO_stdin_used+0x6cda>
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    %dh,(%edx)
add    %al,(%eax)
or     %ch,-0x1(%ebp)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cmp    %dh,(%edx)
add    %al,(%eax)
xor    %ch,-0x1(%ebp)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,0x0(%edx,%esi,1)
add    %dl,-0x1(%ebp,%ebp,2)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,0x78000032(%eax)
insl   (%dx),%es:(%edi)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dl,%al
xor    (%eax),%al
add    %cl,0x73ffff6d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
add    $0x33,%al
add    %al,(%eax)
aam    $0x6d
(bad)
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cmp    $0x33,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
(bad)
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %bh,0x0(%ebx,%esi,1)
add    %cl,(%edi,%ebp,2)
(bad)
decl   0x3(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
aaa
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
into
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
xor    (%eax),%eax
add    %ch,%ah
jno    8067e56 <_IO_stdin_used+0x6e52>
call   *0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %bh,%al
jno    8067e6a <_IO_stdin_used+0x6e66>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %bl,(%eax)
xor    $0x0,%al
add    %dl,(%eax)
jb     8067e82 <_IO_stdin_used+0x6e7e>
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
fs
xor    $0x0,%al
add    %dl,%ah
jae    8067ece <_IO_stdin_used+0x6eca>
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    %dh,(%eax,%eax,1)
add    %ah,%al
jae    8067ef2 <_IO_stdin_used+0x6eee>
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
xor    $0x0,%al
add    %ch,%ah
jae    8067f16 <_IO_stdin_used+0x6f12>
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
(bad)
xor    $0x0,%al
add    %bl,(%eax)
je     8067f3a <_IO_stdin_used+0x6f36>
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %dh,%al
xor    $0x0,%al
add    %ch,(%eax)
je     8067f5a <_IO_stdin_used+0x6f56>
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
or     $0x35,%al
add    %al,(%eax)
cmp    $0x74,%al
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x744c0000(,%esi,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%esi,1)
add    %bl,-0x1(%esp,%esi,2)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%bl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,0x35(%eax)
add    %al,(%eax)
test   $0x74,%al
(bad)
call   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
in     $0x3,%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
loopne 806807b <_IO_stdin_used+0x7077>
add    %al,(%eax)
pop    %eax
jns    806804a <_IO_stdin_used+0x7046>
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%al
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,(%esi,%esi,1)
add    %al,(%eax)
test   %bh,-0x1(%ecx)
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jg     80680a6 <_IO_stdin_used+0x70a2>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%edx
add    %al,(%eax)
dec    %esp
add    %al,%ss:(%eax)
or     $0x7a,%al
(bad)
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    0x48000036,%al
jp     806810a <_IO_stdin_used+0x7106>
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x22c0e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
test   %al,(%eax)
add    %al,(%eax)
loopne 806817c <_IO_stdin_used+0x7178>
add    %al,(%eax)
call   7e0680c7 <argp_program_version+0x75ffd087>
or     $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
fwait
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
push   %edx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
push   $0xe0000037
xchg   %edi,%edi
incl   0x0(%ebx)
inc    %ebx
push   %cs
xor    %al,(%edx)
jg     80681ed <_IO_stdin_used+0x71e9>
add    $0x14,%al
add    %al,(%eax)
add    %al,0x58000037(%eax)
mov    %bh,%bh
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cwtl
aaa
add    %al,(%eax)
nop
mov    %bh,%bh
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0xbc000037,%esp
mov    %bh,%bh
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
hlt
aaa
add    %al,(%eax)
add    $0x8a,%al
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
pusha
cmp    %al,(%eax)
add    %cl,%al
mov    %bh,%bh
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     80682ef <_IO_stdin_used+0x72eb>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8068326 <_IO_stdin_used+0x7322>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,%ah
cmp    %al,(%eax)
add    %bh,0x61ffff(%ebx,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,(%eax)
cmp    %eax,(%eax)
add    %dh,%al
mov    %edi,%edi
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x39,%al
add    %al,(%eax)
in     (%dx),%al
mov    %edi,%edi
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,(%ecx,%edi,1)
add    %al,(%eax)
cld
mov    %edi,%edi
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
.byte 0x0
lahf
add    $0x8,%al
loopne 8069eac <_IO_stdin_used+0x8ea8>
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
enter  $0x495,$0x8
or     $0xd0000000,%eax
clts
or     %bl,(%ecx)
add    %al,(%eax)
add    %cl,(%eax)
lahf
push   %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x9f,%al
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
mov    $0x8a,%ah
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %dl,0x4(%edx,%eax,4)
or     %cl,(%edx)
add    %al,(%eax)
add    %al,0xb000005(%ebp)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
mov    0x20806,%al
add    %al,(%eax)
mov    0x14000003,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %ch,(%eax)
xchg   %eax,%edx
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
clc
xchg   %eax,%ecx
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x48(%edi)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x3a(%edi)
nop
add    $0x8,%al
add    %al,(%eax)
adc    $0x9f,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
xchg   %eax,%esi
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8069fc0 <_IO_stdin_used+0x8fbc>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    806a001 <_IO_stdin_used+0x8ffd>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    806a042 <_IO_stdin_used+0x903e>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    806a083 <_IO_stdin_used+0x907f>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    806a0c4 <_IO_stdin_used+0x90c0>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    806a105 <_IO_stdin_used+0x9101>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    806a146 <_IO_stdin_used+0x9142>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
inc    %ecx
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    $0x15,%al
push   %es
or     %bh,%bh
(bad)
(bad)
inc    %esi
push   %ss
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,%bh
push   %ss
push   %es
or     %bh,%bh
(bad)
(bad)
call   *%ebx
push   %ss
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,-0x2ff7f95e(%eax)
sti
add    $0x8,%al
fcoml  (%esi)
push   %es
or     %ah,-0x59(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%ah
push   %ss
push   %es
or     %cl,(%edx)
add    %al,(%eax)
add    %dl,%al
adc    $0x6f0806,%eax
add    %al,(%eax)
push   %eax
sbb    (%esi),%eax
or     %cl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
adc    $0x690806,%eax
add    %al,(%eax)
jl     806a2dd <_IO_stdin_used+0x92d9>
push   %es
or     %cl,(%edx)
add    %al,(%eax)
add    %dl,0x16(%ebp)
push   %es
or     %dh,0x0(%eax)
add    %al,(%eax)
or     %edx,(%edi)
push   %es
or     %cl,(%edx)
add    %al,(%eax)
add    %dl,%ah
xor    $0x740806,%eax
add    %al,(%eax)
mov    $0x1b,%al
push   %es
or     %cl,(%edx)
add    %al,(%eax)
add    %bl,%al
sbb    (%esi),%eax
or     %ah,0x0(%eax,%eax,1)
add    %ch,%bh
sub    (%esi),%al
or     %al,0x0(%esi)
add    %al,(%eax)
pop    %ds
pop    %ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x6,%al
or     %ah,0x0(%ebp)
add    %al,(%eax)
aaa
pop    %ss
push   %es
or     %cl,(%eax)
add    %eax,(%eax)
add    %cl,0x650806(%esp,%ebx,1)
add    %al,(%eax)
inc    %ebx
pop    %ss
push   %es
or     %cl,0x0(%eax)
add    %al,(%eax)
pop    %esp
pop    %ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x17(%edx)
push   %es
or     %ah,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %edx
add    %al,(%eax)
add    %al,%ah
sbb    $0x6,%al
or     %ah,0x0(%ebp)
add    %al,(%eax)
arpl   %dx,(%edi)
push   %es
or     %cl,(%edx)
add    %eax,(%eax)
add    %ch,0x17(%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%ah
sbb    $0x6,%al
or     %ah,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
and    %bl,0x650806
add    %al,(%eax)
jns    806a3b9 <_IO_stdin_used+0x93b5>
push   %es
or     %dl,0x0(%esi)
add    %al,(%eax)
dec    %esp
sbb    $0x650806,%eax
add    %al,(%eax)
jge    806a3d1 <_IO_stdin_used+0x93cd>
push   %es
or     %al,0x0(%ebx)
add    %al,(%eax)
test   %edx,(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x1d(%eax)
push   %es
or     %ah,0x0(%ebp)
add    %al,(%eax)
repnz xor $0x4d0806,%eax
add    %al,(%eax)
mov    %ss,(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x650806(%ebp,%ebx,1)
add    %al,(%eax)
xchg   %eax,%ebx
pop    %ss
push   %es
or     %ah,0x0(%esi)
add    %al,(%eax)
in     (%dx),%al
sbb    $0x650806,%eax
add    %al,(%eax)
lahf
pop    %ss
push   %es
or     %ch,0x0(%esi)
add    %al,(%eax)
sub    %bl,(%esi)
push   %es
or     %ah,0x0(%ebp)
add    %al,(%eax)
scas   %es:(%edi),%eax
pop    %ss
push   %es
or     %al,0xbb000001
pop    %ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x6(%esi,%ebx,1)
or     %ah,0x0(%ebp)
add    %al,(%eax)
ret
pop    %ss
push   %es
or     %al,(%esi)
add    %eax,(%eax)
add    %dl,0x6508061e(%eax)
add    %al,(%eax)
add    %cl,%cl
pop    %ss
push   %es
or     %dh,0x0(%esi)
add    %al,(%eax)
mov    $0x6508061e,%esp
add    %al,(%eax)
add    %dl,%cl
pop    %ss
push   %es
or     %dl,0x0(%edi)
add    %al,(%eax)
fsts   (%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%al
push   %ds
push   %es
or     %ah,0x0(%ebp)
add    %al,(%eax)
dec    %esp
pop    %ds
push   %es
or     %cl,%al
add    %al,(%eax)
add    %bl,%dh
pop    %ss
push   %es
or     %al,0x0(%ebp)
add    %al,(%eax)
jmp    806a4b1 <_IO_stdin_used+0x94ad>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x6(%edi,%ebx,1)
or     %dl,%dl
add    %al,(%eax)
add    %dh,%al
pop    %ss
push   %es
or     %al,(%ebx)
add    %eax,(%eax)
add    %cl,%al
pop    %ds
push   %es
or     %dl,%dl
add    %al,(%eax)
add    %bh,0x15(%ebx)
push   %es
or     %dh,0x0(%edx)
add    %al,(%eax)
add    %bl,(%eax)
push   %es
or     %cl,%cl
add    %al,(%eax)
add    %ch,(%ecx)
push   %ss
push   %es
or     %al,(%ecx,%eax,1)
add    %al,(%eax)
jmp    806a4f9 <_IO_stdin_used+0x94f5>
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %bh,0xc90806(%edi,%edi,1)
add    %al,(%eax)
sbb    (%eax),%ebx
push   %es
or     %ah,0x0(%edx)
add    %al,(%eax)
inc    %eax
and    %al,(%esi)
or     %cl,%cl
add    %al,(%eax)
add    %ah,(%eax)
sbb    %al,(%esi)
or     %dh,0x0(%ebx)
add    %al,(%eax)
xchg   %eax,%esp
and    %al,(%esi)
or     %cl,%cl
add    %al,(%eax)
add    %ch,(%ebx)
sbb    %al,(%esi)
or     %dl,0x0(%ebx)
add    %al,(%eax)
les    (%eax),%esp
push   %es
or     %cl,%cl
add    %al,(%eax)
add    %bl,0x6(%ebp,%edx,1)
or     %cl,(%ebx)
add    %eax,(%eax)
add    %bh,%ah
and    %al,(%esi)
or     %cl,%cl
add    %al,(%eax)
add    %ah,(%eax)
and    %eax,(%esi)
or     %ch,(%ecx,%eax,1)
add    %al,(%eax)
push   %eax
adc    $0x410806,%eax
add    %al,(%eax)
push   %esp
and    %eax,(%esi)
or     %ch,0x1
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
pop    %ds
pop    %ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x6(%ecx,%eiz,1)
or     %ch,0x1
add    %al,(%eax)
add    %bh,%ah
and    %eax,(%esi)
or     %dl,0x33000001(%eax)
adc    $0x6c0806,%eax
add    %al,(%eax)
xor    %ah,(%edx)
push   %es
or     %dl,0x1(%ecx)
add    %al,(%eax)
add    %ah,0x6(%edx,%eiz,1)
or     %dh,%ah
add    %eax,(%eax)
add    %bh,0x1080618
add    %eax,(%eax)
add    %ah,-0xaf7f9de(%eax)
add    %eax,(%eax)
add    %bh,(%edx)
sbb    %al,(%esi)
or     %al,(%eax)
add    %eax,(%eax)
add    %ah,%al
and    (%esi),%al
or     %dh,%ch
add    %eax,(%eax)
add    %dl,(%ebx,%eiz,1)
push   %es
or     %bl,0x2(%eax)
add    %al,(%eax)
push   %eax
sbb    %al,(%esi)
or     %dh,(%eax)
add    %al,(%eax)
add    %dl,0x23(%eax)
push   %es
or     %bl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
add    %al,(%eax)
add    %bl,(%edi)
pop    %ss
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x2590806(%ebx,%eiz,1)
add    %al,(%eax)
inc    %edx
adc    $0x4c0806,%eax
add    %al,(%eax)
and    $0x24,%al
push   %es
or     %bl,0x2(%ecx)
add    %al,(%eax)
cwtl
adc    $0x520806,%eax
add    %al,(%eax)
push   %ebp
sbb    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x59080624(%eax)
add    (%eax),%al
add    %ah,0x18(%edi)
push   %es
or     %ah,0x0(%ecx)
add    %al,(%eax)
aam    $0x24
push   %es
or     %bl,0x2(%ecx)
add    %al,(%eax)
or     %ah,0x2bc0806
add    %al,(%eax)
mov    0x6d080615,%al
add    %al,(%eax)
add    %al,0x6(%ebp,%eiz,1)
or     %bh,0x68000002(%ebp)
adc    $0x640806,%eax
add    %al,(%eax)
andb   $0x0,0x2bd0806
add    %al,0x1020806(%ebp,%edx,1)
add    %al,(%eax)
test   $0x25,%al
push   %es
or     %bh,-0x1ffffffe(%ebp)
adc    $0x750806,%eax
add    %al,(%eax)
aam    $0x25
push   %es
or     %bh,-0xffffffe(%ebp)
adc    $0x1070806,%eax
add    %al,(%eax)
clc
and    $0x2bd0806,%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x63(%eax)
jo     806a7d1 <_IO_stdin_used+0x97cd>
outsl  %ds:(%esi),(%dx)
daa
and    %ah,0x6f(%ebx)
jo     806a7d8 <_IO_stdin_used+0x97d4>
gs
jae    806a792 <_IO_stdin_used+0x978e>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806a7f0 <_IO_stdin_used+0x97ec>
jae    806a797 <_IO_stdin_used+0x9793>
or     0x78(%ebp),%al
popa
insl   (%dx),%es:(%edi)
jo     806a800 <_IO_stdin_used+0x97fc>
gs
jae    806a7d1 <_IO_stdin_used+0x97cd>
or     (%eax),%ah
and    %ah,(%ebx)
and    %al,0x6f(%ebx)
jo     806a819 <_IO_stdin_used+0x9815>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806a7c7 <_IO_stdin_used+0x97c3>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x7473696c,%eax
and    %dh,0x20(%edi,%ebp,2)
je     806a827 <_IO_stdin_used+0x9823>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806a82d <_IO_stdin_used+0x9829>
or     (%eax),%ah
and    %ah,0x70(%ebx)
imul   $0x3c206f2d,0x20(%edi),%ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x7473696c,%eax
and    %bl,0x3e(%ebx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806a84e <_IO_stdin_used+0x984a>
pop    %ebp
or     (%eax),%ah
and    %ah,(%ebx)
and    %al,0x78(%ebp)
je     806a865 <_IO_stdin_used+0x9861>
popa
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x6f726620,0x73(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    806a872 <_IO_stdin_used+0x986e>
or     (%eax),%ah
and    %ah,0x70(%ebx)
imul   $0x5b20692d,0x20(%edi),%ebp
cmp    $0x20,%al
popa
jb     806a881 <_IO_stdin_used+0x987d>
push   $0x5d657669
or     (%eax),%ah
and    %ah,(%ebx)
and    %al,0x6f(%ebx)
jo     806a8a5 <argp_program_bug_address+0x19>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806a853 <_IO_stdin_used+0x984f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x7473696c,%eax
and    %dh,0x20(%edi,%ebp,2)
fs
gs
jae    806a8c1 <argp_program_bug_address+0x35>
imul   $0x6e6f6974,0x61(%esi),%ebp
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    806a869 <_IO_stdin_used+0x9865>
and    %ah,(%eax)
arpl   %si,0x69(%eax)
outsl  %ds:(%esi),(%dx)
and    %ch,0x65642070
jae    806a8e1 <argp_program_bug_address+0x55>
imul   $0x6e6f6974,0x61(%esi),%ebp
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    806a89f <argp_program_bug_address+0x13>
cmp    $0x20,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x7473696c,%eax
or     (%eax),%al
jns    806a8a6 <argp_program_bug_address+0x1a>
push   %es
or     %cl,0x18980806(%eax,%ebx,1)
push   %es
or     %ch,-0x49f7f9e8(%eax)
sbb    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,(%esi,%ebp,1)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bl,0x1000000
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x6(%ecx,%ebp,4)
or     %al,(%eax)
add    %eax,(%eax)
add    %al,0x10806ae(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
