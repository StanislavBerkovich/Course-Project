das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,-0x693c8a1(%eax)
in     (%dx),%al
call   4fc2280f <_end+0x4fc1371b>
scas   %es:(%edi),%al
sub    %edx,0x8(%esi,%ecx,4)
dec    %ebx
.byte 0xbb
clc
.byte 0x31
adc    %eax,(%eax)
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%eax)
add    $0x80,%al
add    %al,%ah
imul   $0x48021,-0x6afbe7b3(%ecx),%edx
00
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
mov    %eax,(%eax)
add    %al,(%eax)
mov    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
mov    (%eax),%es
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
add    %dl,-0x6a000000(%ebp)
add    %al,(%eax)
add    %dl,-0x68000000(%edi)
add    %al,(%eax)
add    %ch,%dl
shr    %cl,%edi
push   %cs
imul   $0x7c,-0x66(%edi),%edi
mov    $0xd90ef18d,%ecx
jno    277 <_init-0x1c11>
sbb    $0xac,%al
dec    %ebx
jecxz  1e4 <_init-0x1ca4>
mov    $0x8a7c92e3,%ebx
sub    %edi,%esp
lock inc %ebp
lds    (%eax),%edx
fisubrl (%esi)
xchg   %eax,%ebx
cmc
ds
inc    %ebx
inc    %ebp
aad    $0xec
cmp    -0x7c(%ebx),%ah
ret    $0xcbdd
shl    $0xab,%eax
push   %ebx
cmc
and    $0xecede858,%eax
sub    %ebp,%edi
add    0x53efb823(%edx),%ebx
cmp    %edx,%ecx
sbb    -0x77d505af(%eax),%ebx
dec    %ebx
.byte 0x69
xchg   %dl,%ch
push   %ss
push   %es
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
push   %edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x7(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incl   (%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edi,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bh,(%eax)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ah
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   (%ecx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
call   385 <_init-0x1b03>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ch
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x6
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x6(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,%dl
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aad    $0x7
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x2
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x7(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
pop    %es
add    %al,(%eax)
and    (%eax),%al
add    %al,(%eax)
jp     535 <_init-0x1953>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%bl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x7,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    6a3 <_init-0x17e5>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x7(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    6f5 <_init-0x1793>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%bx,%si)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x4
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%al
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     75e <_init-0x172a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     781 <_init-0x1707>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x1,$0x0
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%esi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    7e4 <_init-0x16a4>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int    $0x6
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esp,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cs
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %gs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
testl  $0x0,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sti
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x7,%ch
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
or     (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%esi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebp)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
je     9e2 <_init-0x14a6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%edi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%edi)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
push   $0x7
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
gs
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%esi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incb   (%ebx)
add    %al,(%eax)
adc    $0xac,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %dl,%al
pop    %es
add    %al,(%eax)
push   %eax
add    %al,%es:(%eax)
sub    $0x12,%al
add    %al,(%eax)
adc    (%eax),%al
or     $0x40400,%eax
add    %cl,0x1e(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %bh,%dl
pop    %es
add    %al,(%eax)
fdiv   %st(0),%st
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%ecx
push   %es
add    %al,(%eax)
sub    $0xac,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sldt   (%esi)
or     %al,(%eax)
add    %dh,%ah
lock add %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
and    $0x8,%al
add    %al,(%eax)
aam    $0xf0
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
or     %al,%cs:(%eax)
add    %ch,0x60000(%eax,%eax,8)
add    %al,(%eax)
adc    %eax,(%eax)
str    (%ebx)
or     %al,(%eax)
add    %bh,0x0(%eax,%eax,8)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
repz pop %es
add    %al,(%eax)
fdiv   %st(0),%st
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
inc    %eax
or     %al,(%eax)
add    %cl,0x40000(%eax,%eax,8)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jo     b76 <_init-0x1312>
add    %al,(%eax)
nop
rolb   $0x0,(%eax)
or     (%eax),%al
add    %al,(%eax)
adc    %eax,(%eax)
verr   -0x4dfffff8(%edx)
rolb   $0x0,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    0x28000008(%ebx)
lods   %ds:(%esi),%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
str    %edi
or     %al,(%eax)
add    %bl,0x40000(%eax,%eax,8)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    0x8(%edx)
add    %al,(%eax)
test   $0xc0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sldt   %esp
or     %al,(%eax)
add    %al,0x340000ea(%eax)
add    (%eax),%al
add    %dl,(%ecx)
add    %dl,0x88600
add    %al,0x90000c0(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %dh,-0x5ffffff8(%eax)
rolb   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
.byte 0xf
add    %ch,0x62(%ecx,%ebp,2)
data16
jne    c66 <_init-0x1222>
gs
jae,pn c66 <_init-0x1222>
xor    %cs:(%eax),%al
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     c68 <_init-0x1220>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    c93 <_init-0x11f5>
popa
jb     c96 <_init-0x11f2>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    c88 <_init-0x1200>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    ca9 <_init-0x11df>
gs
jae    c39 <_init-0x124f>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     ca5 <_init-0x11e3>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
data16
jne    cc9 <_init-0x11bf>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     ccf <_init-0x11b9>
pop    %edi
popa
fs
fs
pop    %edi
popa
jb     cca <_init-0x11be>
add    %ah,0x75(%esi)
jae    ccd <_init-0x11bb>
pop    %edi
jae    cd0 <_init-0x11b8>
je     ccc <_init-0x11bc>
jae    cd8 <_init-0x11b0>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x6c646e61
gs
jb     cef <_init-0x1199>
add    %ah,0x75(%esi)
jae    ce6 <_init-0x11a2>
pop    %edi
jne    cf2 <_init-0x1196>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    cf6 <_init-0x1192>
je     c8a <_init-0x11fe>
data16
jne    d00 <_init-0x1188>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     c93 <_init-0x11f5>
data16
jne    d09 <_init-0x117f>
gs
pop    %edi
addr16
gs
je     cfb <_init-0x118d>
jae    d03 <_init-0x1185>
jae    d13 <_init-0x1175>
imul   $0x73756600,0x6e(%edi),%ebp
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     d20 <_init-0x1168>
pop    %edi
data16
jb     d15 <_init-0x1173>
gs
pop    %edi
popa
jb     d1c <_init-0x116c>
jae    cb7 <_init-0x11d1>
data16
jne    d2d <_init-0x115b>
gs
pop    %edi
addr16
gs
je     d1f <_init-0x1169>
arpl   %bp,0x6e(%edi)
je     d2a <_init-0x115e>
js     d3b <_init-0x114d>
add    %ah,0x75(%esi)
jae    d31 <_init-0x1157>
pop    %edi
fs
gs
jae    d45 <_init-0x1143>
jb     d42 <_init-0x1146>
jns    cd5 <_init-0x11b3>
data16
jne    d4b <_init-0x113d>
gs
pop    %edi
jbe    d41 <_init-0x1147>
jb     d51 <_init-0x1137>
imul   $0x73756600,0x6e(%edi),%ebp
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    d59 <_init-0x112f>
je     ced <_init-0x119b>
data16
jne    d63 <_init-0x1125>
gs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     cf7 <_init-0x1191>
insb   (%dx),%es:(%edi)
imul   $0x2d736674,0x6e(%edx),%esp
xor    0x2e(%edi),%esp
jae    d73 <_init-0x1115>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %ch,0x74(%esi)
data16
jae    d6d <_init-0x111b>
popa
je     d85 <_init-0x1103>
jb     d72 <_init-0x1116>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    d88 <_init-0x1100>
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
jae    d96 <_init-0x10f2>
arpl   %si,0x72(%ebp)
add    %ch,%gs:0x74(%esi)
data16
jae    d9a <_init-0x10ee>
jb     da9 <_init-0x10df>
pop    %edi
jbe    da3 <_init-0x10e5>
outsb  %ds:(%esi),(%dx)
pop    %edi
je     db3 <_init-0x10d5>
pop    %edi
insb   (%dx),%es:(%edi)
arpl   %bp,0x0(%esi)
outsb  %ds:(%esi),(%dx)
je     db2 <_init-0x10d6>
jae    dad <_init-0x10db>
imul   $0x755f6564,0x6f(%esi),%ebp
jo     dbb <_init-0x10cd>
popa
je     dbf <_init-0x10c9>
pop    %edi
je     dc6 <_init-0x10c2>
insl   (%dx),%es:(%edi)
gs
jae    d61 <_init-0x1127>
outsb  %ds:(%esi),(%dx)
je     dca <_init-0x10be>
jae    dc5 <_init-0x10c3>
popa
je     ddd <_init-0x10ab>
jb     dca <_init-0x10be>
jo     de4 <_init-0x10a4>
jb     dd8 <_init-0x10b0>
je     dd6 <_init-0x10b2>
add    %ch,0x74(%esi)
data16
jae    dd6 <_init-0x10b2>
popa
je     dee <_init-0x109a>
jb     ddb <_init-0x10ad>
jo     df3 <_init-0x1095>
je     ddf <_init-0x10a9>
jae    de7 <_init-0x10a1>
popa
jb     de8 <_init-0x10a0>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    def <_init-0x1099>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    dfb <_init-0x108d>
je     df7 <_init-0x1091>
push   $0x6c646e61
gs
jb     da0 <_init-0x10e8>
outsb  %ds:(%esi),(%dx)
je     e09 <_init-0x107f>
jae    e04 <_init-0x1084>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     e10 <_init-0x1078>
fs
pop    %edi
arpl   %si,0x65(%edx)
popa
je     e18 <_init-0x1070>
add    %ch,0x74(%esi)
data16
jae    e18 <_init-0x1070>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     e24 <_init-0x1064>
jae    e3b <_init-0x104d>
fs
gs
jb     e3d <_init-0x104b>
add    %ch,0x74(%esi)
data16
jae    e30 <_init-0x1058>
arpl   %si,0x65(%edx)
popa
je     e3c <_init-0x104c>
pop    %edi
fs
gs
jbe    e45 <_init-0x1043>
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
je     e48 <_init-0x1040>
jae    e43 <_init-0x1045>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     e4f <_init-0x1039>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     e5a <_init-0x102e>
jae    e55 <_init-0x1033>
popa
je     e6d <_init-0x101b>
jb     e5a <_init-0x102e>
addr16
gs
je     e5e <_init-0x102a>
data16
jb     e67 <_init-0x1021>
gs
pop    %edi
bound  %ebp,0x74(%ecx)
jae    e09 <_init-0x107f>
outsb  %ds:(%esi),(%dx)
je     e72 <_init-0x1016>
jae    e6d <_init-0x101b>
jbe    e7f <_init-0x1009>
insb   (%dx),%es:(%edi)
jne    e80 <_init-0x1008>
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
push   $0x72656269
imul   $0x746e,0x0(%ebp,%eiz,2),%bp
data16
jae    e89 <_init-0xfff>
js     e8d <_init-0xffb>
je     ea2 <_init-0xfe6>
jb     e8f <_init-0xff9>
jae    eab <_init-0xfdd>
jae    ea8 <_init-0xfe0>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jb     e9e <_init-0xfea>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    ea2 <_init-0xfe6>
js     ea0 <_init-0xfe8>
je     eb5 <_init-0xfd3>
jb     e43 <_init-0x1045>
outsb  %ds:(%esi),(%dx)
je     eac <_init-0xfdc>
jae    ea7 <_init-0xfe1>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    eb2 <_init-0xfd6>
jae    e51 <_init-0x1037>
outsb  %ds:(%esi),(%dx)
je     eba <_init-0xfce>
jae    eb5 <_init-0xfd3>
fs
gs
jbe    ec3 <_init-0xfc5>
arpl   %sp,0x5f(%ebp)
jae    ed8 <_init-0xfb0>
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     ecb <_init-0xfbd>
jae    ec6 <_init-0xfc2>
jae    ece <_init-0xfba>
je     eca <_init-0xfbe>
jae    ed5 <_init-0xfb3>
outsl  %ds:(%esi),(%dx)
ja     ede <_init-0xfaa>
pop    %edi
imul   $0x6e00,0x73(%ebp,%eiz,2),%bp
je     ee0 <_init-0xfa8>
jae    edb <_init-0xfad>
popa
je     ef3 <_init-0xf95>
jb     ee0 <_init-0xfa8>
insl   (%dx),%es:(%edi)
popa
jo     ee4 <_init-0xfa4>
ja     eef <_init-0xf99>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
jb     f02 <_init-0xf86>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x74(%ebx),%esi
jae    ef7 <_init-0xf91>
jne    f07 <_init-0xf81>
outsl  %ds:(%esi),(%dx)
jne    f0b <_init-0xf7d>
je     e9f <_init-0xfe9>
outsb  %ds:(%esi),(%dx)
je     f08 <_init-0xf80>
jae    f03 <_init-0xf85>
jae    f0b <_init-0xf7d>
je     f07 <_init-0xf81>
outsl  %ds:(%esi),(%dx)
ja     f19 <_init-0xf6f>
gs
jb     eae <_init-0xfda>
outsb  %ds:(%esi),(%dx)
je     f17 <_init-0xf71>
jae    f12 <_init-0xf76>
outsw  %ds:(%esi),(%dx)
jb     f19 <_init-0xf6f>
imul   $0x68635f6e,0x65(%esp,%eiz,2),%esp
popa
jb     f35 <_init-0xf53>
add    %ch,0x74(%esi)
data16
jae    f27 <_init-0xf61>
insl   (%dx),%es:(%edi)
popa
imul   $0x73,0x5f(%ebp),%esp
jns    f3d <_init-0xf4b>
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    f39 <_init-0xf4f>
jbe    f4b <_init-0xf3d>
insb   (%dx),%es:(%edi)
jne    f4c <_init-0xf3c>
gs
pop    %edi
gs
jb     f56 <_init-0xf32>
outsl  %ds:(%esi),(%dx)
jb     ee7 <_init-0xfa1>
outsb  %ds:(%esi),(%dx)
je     f50 <_init-0xf38>
jae    f4b <_init-0xf3d>
jae    f53 <_init-0xf35>
je     f4f <_init-0xf39>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x74(%esi)
data16
jae    f5b <_init-0xf2d>
arpl   %si,0x65(%edx)
popa
je     f67 <_init-0xf21>
pop    %edi
jae    f7e <_init-0xf0a>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    f6f <_init-0xf19>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     f7b <_init-0xf0d>
jae    f97 <_init-0xef1>
jae    f8c <_init-0xefc>
outsl  %ds:(%esi),(%dx)
add    %ch,0x74(%bp)
data16
jae    f87 <_init-0xf01>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    f98 <_init-0xef0>
add    %ch,0x74(%esi)
data16
jae    f98 <_init-0xef0>
addr16
gs
je     f9c <_init-0xeec>
outsl  %ds:(%esi),(%dx)
ja     fae <_init-0xeda>
gs
jb     fa2 <_init-0xee6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x74(%esi)
data16
jae    fac <_init-0xedc>
jb     fb4 <_init-0xed4>
popa
insb   (%dx),%es:(%edi)
jo     fb4 <_init-0xed4>
je     fbd <_init-0xecb>
pop    %edi
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ch,0x74(%esi)
data16
jae    fc7 <_init-0xec1>
jae    fcf <_init-0xeb9>
je     fcb <_init-0xebd>
arpl   %bp,0x61(%eax)
jb     fd0 <_init-0xeb8>
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x64(%edi)
imul   $0x66746e00,0x67(%esi),%ebp
jae    fde <_init-0xeaa>
js     fe2 <_init-0xea6>
je     ff7 <_init-0xe91>
jb     fe4 <_init-0xea4>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     fff <_init-0xe89>
imul   $0x66746e00,0x67(%esi),%ebp
jae    ff7 <_init-0xe91>
popa
je     100f <_init-0xe79>
jb     ffc <_init-0xe8c>
je     1011 <_init-0xe77>
jne    100f <_init-0xe79>
arpl   %sp,0x74(%ecx)
add    %ch,%gs:0x74(%esi)
data16
jae    100a <_init-0xe7e>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    101b <_init-0xe6d>
pop    %edi
imul   $0x726964,0x5f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     1027 <_init-0xe61>
jae    1022 <_init-0xe66>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     1033 <_init-0xe55>
jae    102e <_init-0xe5a>
popa
je     1046 <_init-0xe42>
jb     1033 <_init-0xe55>
outsl  %ds:(%esi),(%dx)
jo     103c <_init-0xe4c>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    103d <_init-0xe4b>
outsl  %ds:(%esi),(%dx)
jo     1046 <_init-0xe42>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    104a <_init-0xe3e>
arpl   %si,0x72(%ebp)
add    %bl,%gs:0x66(%edi)
imul   $0x6e695f00,0x69(%esi),%ebp
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
imul   $0x74697265,0x68(%esi),%ebp
gs
fs
pop    %edi
imul   $0x5f736674,0x6e(%eax,%eax,1),%esp
js     1070 <_init-0xe18>
je     1085 <_init-0xe03>
jb     1072 <_init-0xe16>
jae    108e <_init-0xdfa>
jae    108b <_init-0xdfd>
gs
insl   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     1096 <_init-0xdf2>
popa
je     1095 <_init-0xdf3>
jb     1023 <_init-0xe65>
outsb  %ds:(%esi),(%dx)
je     108c <_init-0xdfc>
jae    1087 <_init-0xe01>
js     108b <_init-0xdfd>
je     10a0 <_init-0xde8>
jb     108d <_init-0xdfb>
jae    10a9 <_init-0xddf>
jae    10a6 <_init-0xde2>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jae    109c <_init-0xdec>
je     10b1 <_init-0xdd7>
popa
je     10b0 <_init-0xdd8>
jb     103e <_init-0xe4a>
outsb  %ds:(%esi),(%dx)
je     10a7 <_init-0xde1>
jae    10a2 <_init-0xde6>
popa
je     10ba <_init-0xdce>
jb     10a7 <_init-0xde1>
popa
fs add %ch,%fs:0x74(%esi)
data16
jae    10b0 <_init-0xdd8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    10bc <_init-0xdcc>
je     10b8 <_init-0xdd0>
insb   (%dx),%es:(%edi)
gs
jbe    10c2 <_init-0xdc6>
insb   (%dx),%es:(%edi)
jae    1060 <_init-0xe28>
outsb  %ds:(%esi),(%dx)
je     10c9 <_init-0xdbf>
jae    10c4 <_init-0xdc4>
popa
je     10dc <_init-0xdac>
jb     10c9 <_init-0xdbf>
addr16
gs
je     10cd <_init-0xdbb>
jae    10d5 <_init-0xdb3>
popa
jb     10d6 <_init-0xdb2>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    10dd <_init-0xdab>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     10e9 <_init-0xd9f>
fs
pop    %edi
popa
jae    10e8 <_init-0xda0>
outsl  %ds:(%esi),(%dx)
ja     10fa <_init-0xd8e>
gs
jb     108f <_init-0xdf9>
outsb  %ds:(%esi),(%dx)
je     10f8 <_init-0xd90>
jae    10f3 <_init-0xd95>
js     10f7 <_init-0xd91>
je     110c <_init-0xd7c>
jb     10f9 <_init-0xd8f>
data16
jb     1102 <_init-0xd86>
gs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     1113 <_init-0xd75>
imul   $0x66746e00,0x67(%esi),%ebp
jae    110b <_init-0xd7d>
jae    1113 <_init-0xd75>
je     110f <_init-0xd79>
imul   $0x74697265,0x68(%esi),%ebp
gs
fs
pop    %edi
jo     112b <_init-0xd5d>
jae    1127 <_init-0xd61>
js     10c0 <_init-0xdc8>
outsb  %ds:(%esi),(%dx)
je     1129 <_init-0xd5f>
jae    1124 <_init-0xd64>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1130 <_init-0xd58>
fs
pop    %edi
popa
arpl   %sp,0x65(%ebx)
jae    1146 <_init-0xd42>
add    %ch,0x74(%esi)
data16
jae    1138 <_init-0xd50>
jb     1140 <_init-0xd48>
popa
fs imul $0x7366746e,%fs:0x0(%edx),%esi
73
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     1156 <_init-0xd32>
jae    1151 <_init-0xd37>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    1164 <_init-0xd24>
je     1157 <_init-0xd31>
gs
jb     116d <_init-0xd1b>
outsl  %ds:(%esi),(%dx)
jb     10fe <_init-0xd8a>
outsb  %ds:(%esi),(%dx)
je     1167 <_init-0xd21>
jae    1162 <_init-0xd26>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bx,0x73(%edi)
arpl   %si,%gs:0x72(%ebp)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esp
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     1190 <_init-0xcf8>
imul   $0x66746e00,0x67(%esi),%ebp
jae    1188 <_init-0xd00>
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    1192 <_init-0xcf6>
js     1196 <_init-0xcf2>
je     11ab <_init-0xcdd>
jb     1198 <_init-0xcf0>
jae    11b4 <_init-0xcd4>
jae    11b1 <_init-0xcd7>
gs
insl   (%dx),%es:(%edi)
pop    %edi
je     11bb <_init-0xccd>
jo     11a9 <_init-0xcdf>
add    %ch,0x74(%esi)
data16
jae    11a9 <_init-0xcdf>
arpl   %si,0x65(%edx)
popa
je     11b5 <_init-0xcd3>
add    %ch,0x74(%esi)
data16
jae    11b5 <_init-0xcd3>
popa
je     11cd <_init-0xcbb>
jb     11ba <_init-0xcce>
jb     11c2 <_init-0xcc6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    11c6 <_init-0xcc2>
add    %ch,0x74(%esi)
data16
jae    11c6 <_init-0xcc2>
jo     11ca <_init-0xcbe>
je     11d3 <_init-0xcb5>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     11e1 <_init-0xca7>
pop    %edi
imul   $0x6e006564,0x6f(%esi),%ebp
je     11e2 <_init-0xca6>
jae    11dd <_init-0xcab>
popa
je     11f5 <_init-0xc93>
jb     11e2 <_init-0xca6>
jo     11e8 <_init-0xca0>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    11ee <_init-0xc9a>
add    %ch,0x74(%esi)
data16
jae    11ee <_init-0xc9a>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    1201 <_init-0xc87>
je     1195 <_init-0xcf3>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    1208 <_init-0xc80>
gs
data16
jae    120c <_init-0xc7c>
imul   $0x5f70,0x75(%eax),%di
popa
je     122a <_init-0xc5e>
jb     1221 <_init-0xc67>
bound  %esi,0x74(%ebp)
add    %ch,%gs:0x74(%esi)
data16
jae    1221 <_init-0xc67>
popa
je     1239 <_init-0xc4f>
jb     1226 <_init-0xc62>
jo     123b <_init-0xc4d>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    1231 <_init-0xc57>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     1246 <_init-0xc42>
add    %ch,%fs:0x74(%esi)
data16
jae    1247 <_init-0xc41>
popa
je     125f <_init-0xc29>
jb     124c <_init-0xc3c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     125d <_init-0xc2b>
jae    1258 <_init-0xc30>
jae    1260 <_init-0xc28>
je     125c <_init-0xc2c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x74(%esi)
data16
jae    1266 <_init-0xc22>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     1275 <_init-0xc13>
jae    1270 <_init-0xc18>
jne    1276 <_init-0xc12>
jae    1289 <_init-0xbff>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     1283 <_init-0xc05>
jae    127e <_init-0xc0a>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     128a <_init-0xbfe>
add    %ch,0x74(%esi)
data16
jae    128a <_init-0xbfe>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
gs
insl   (%dx),%es:(%edi)
jo     12a9 <_init-0xbdf>
jns    1296 <_init-0xbf2>
imul   $0x7062696c,%fs:0x0(%edx),%esi
je     12a9 <_init-0xbdf>
jb     12a8 <_init-0xbe0>
popa
fs
jae,pn 12b7 <_init-0xbd1>
xor    %al,%cs:(%eax)
ja     12ae <_init-0xbda>
imul   $0x6f660064,0x69(%eax,%esi,2),%esi
jb     12c2 <_init-0xbc6>
add    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    12ca <_init-0xbbe>
gs
gs
jo     1262 <_init-0xc26>
pop    %edi
pop    %edi
gs
jb     12d9 <_init-0xbaf>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x62696c00,0x6e(%edi),%ebp
arpl   %bp,(%esi)
jae    12e9 <_init-0xb9f>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    12f7 <_init-0xb91>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     12f3 <_init-0xb95>
jo     130b <_init-0xb7d>
add    %ah,0x78(%ebp)
arpl   %bp,%gs:0x73(%eax,%eax,1)
je     130e <_init-0xb7a>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     130e <_init-0xb7a>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     131e <_init-0xb6a>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jae    1328 <_init-0xb60>
jb     131a <_init-0xb6e>
jne    1328 <_init-0xb60>
add    %dh,0x74(%ebx)
jb     132b <_init-0xb5d>
arpl   %si,0x79(%eax)
add    %ah,0x65(%ecx,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
gs
js     133d <_init-0xb4b>
je     12d6 <_init-0xbb2>
data16
addr16
gs
je     134e <_init-0xb3a>
add    %dh,0x74(%ebx)
jb     134c <_init-0xb3c>
outsb  %gs:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     1362 <_init-0xb26>
je     1363 <_init-0xb25>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    1364 <_init-0xb24>
add    %dh,0x74(%ebx)
jb     1367 <_init-0xb21>
popa
je     1307 <_init-0xb81>
jne    1376 <_init-0xb12>
popa
jae    1377 <_init-0xb11>
add    %ah,0x65(%edi)
je     1378 <_init-0xb10>
imul   $0x7473785f,0x5f(%eax,%eax,1),%esp
popa
je     1352 <_init-0xb36>
xor    $0x0,%al
jae    1393 <_init-0xaf5>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     138a <_init-0xafe>
jb     1392 <_init-0xaf6>
add    %bl,0x5f(%edi)
jae    139e <_init-0xaea>
jo     13a4 <_init-0xae4>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     13b4 <_init-0xad4>
imul   $0x67657465,0x67(%eax,%eax,1),%esp
imul   $0x706f7465,0x67(%eax,%eax,1),%esp
je     13b0 <_init-0xad8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
js     13c7 <_init-0xac1>
imul   $0x64,0x6f(%esi),%ebp
add    %ah,0x65(%edi)
je     13c6 <_init-0xac2>
ja     13c9 <_init-0xabf>
add    %ah,0x77(%esi)
jb     13d3 <_init-0xab5>
je     13d1 <_init-0xab7>
add    %ah,0x65(%edi)
je     13d6 <_init-0xab2>
jne    13dc <_init-0xaac>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     13f3 <_init-0xa95>
imul   $0x72747300,0x65(%ebp),%ebp
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     13fd <_init-0xa8b>
add    %ah,0x6f(%esi)
jo     1402 <_init-0xa86>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     1418 <_init-0xa70>
gs
jb     1419 <_init-0xa6f>
add    %dh,0x74(%ebx)
jb     140f <_init-0xa79>
insl   (%dx),%es:(%edi)
jo     13af <_init-0xad9>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     142f <_init-0xa59>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x63737973,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jae    1446 <_init-0xa42>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    1462 <_init-0xa26>
popa
jb     1465 <_init-0xa23>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    145c <_init-0xa2c>
je     1471 <_init-0xa17>
jne    1474 <_init-0xa14>
je     1468 <_init-0xa20>
fs
pop    %edi
jo     1479 <_init-0xa0f>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %al,0x58(%ebp)
inc    %ebp
inc    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ch,0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    147f <_init-0xa09>
jne    1495 <_init-0x9f3>
gs
jb     1484 <_init-0xa04>
jo     1499 <_init-0x9ef>
imul   $0x666e,%gs:0x0(%eax),%di
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    1491 <_init-0x9f7>
jae    1499 <_init-0x9ef>
arpl   %si,0x72(%ebp)
imul   $0x66657270,0x5f(%ecx,%edi,2),%esi
imul   $0x6e656c,0x5f(%eax),%edi
outsb  %ds:(%esi),(%dx)
pop    %di
outsb  %ds:(%esi),(%dx)
jae    14ab <_init-0x9dd>
jne    14c1 <_init-0x9c7>
gs
jb     14b0 <_init-0x9d8>
jo     14c5 <_init-0x9c3>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %ch,0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    14c1 <_init-0x9c7>
jae    14c9 <_init-0x9bf>
arpl   %si,0x72(%ebp)
imul   $0x66657270,0x5f(%ecx,%edi,2),%esi
imul   $0x6e5f666e,0x0(%eax),%edi
jae    14d7 <_init-0x9b1>
je     14ec <_init-0x99c>
jne    14ef <_init-0x999>
je     14e3 <_init-0x9a5>
fs
pop    %edi
jo     14f4 <_init-0x994>
imul   $0x665f,%gs:0x0(%eax),%di
jo     14ea <_init-0x99e>
push   $0x61780077
je     1506 <_init-0x982>
jb     14f3 <_init-0x995>
outsb  %ds:(%esi),(%dx)
je     14fd <_init-0x98b>
jae    14f8 <_init-0x990>
xor    0x0(%edi),%esp
outsb  %ds:(%esi),(%dx)
pop    %di
outsb  %ds:(%esi),(%dx)
jae    1501 <_init-0x987>
jae    151d <_init-0x96b>
jae    151a <_init-0x96e>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jo     151d <_init-0x96b>
imul   $0x706f,%gs:0x0(%eax),%di
je     151d <_init-0x96b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x5f666e00,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
jae    1520 <_init-0x968>
jae    153c <_init-0x94c>
jae    1539 <_init-0x94f>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jo     153c <_init-0x94c>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
xor    $0x53554600,%eax
inc    %ebp
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x55(%esi)
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x55(%esi)
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    $0x6000000,%eax
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,0x3000900
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
or     $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
or     $0xc00,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    (%eax),%al
dec    %edi
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xd0000,%eax
out    %eax,$0x8
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0xa0000,%eax
icebp
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,0x100
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
mov    %al,0xa7b21
add    %cl,(%esi)
add    %bh,%bl
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0xa7b21(%ebp)
add    %cl,(%eax,%eax,1)
add    $0x9,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
and    %edi,0xa(%ebx)
add    %al,(%eax)
or     (%eax),%eax
or     $0x10000009,%eax
add    %al,(%eax)
add    %ah,0xa7b21(%esi)
add    %cl,(%eax)
add    %dl,(%esi)
or     %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0xa7b21(%eax)
add    %al,(%esi)
add    %bl,(%edi)
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%edi)
add    %al,0x10000006(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0xf0000,0xd(%ecx),%ebp
out    %eax,$0x8
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    1751 <_init-0x737>
imul   $0x90000,(%ecx),%ecx
sub    %cl,(%ecx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x934,0x70000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
or     %eax,%ds:(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x69691(%edi)
add    %al,(%eax,%eax,1)
dec    %eax
or     %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
icebp
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %dl,0x9(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    $0xea,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
ljmp   $0x0,$0x80000
push   %eax
ljmp   $0x0,$0x80000
pusha
ljmp   $0x0,$0x80000
sub    $0x0,%dl
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,0x80000(%edx,%ebp,8)
add    %al,(%eax)
cwtl
ljmp   $0x0,$0x80000
movsb  %ds:(%esi),%es:(%edi)
ljmp   $0x0,$0x80000
mov    $0xea,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80000ea,%esp
add    %al,(%eax)
add    %cl,%al
ljmp   $0x0,$0x80000
aam    $0xea
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
loopne 17f4 <_init-0x694>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
ljmp   $0x0,$0x80000
clc
ljmp   $0x0,$0x80000
add    $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
jmp    184b <_init-0x63d>
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebx,%ebp,8)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,-0x15(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fs
jmp    1863 <_init-0x625>
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x15(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     185d <_init-0x62b>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
jmp    1883 <_init-0x605>
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,0x80000eb(%eax)
add    %al,(%eax)
add    %ch,0x80000(%ebx,%ebp,8)
add    %al,(%eax)
mov    $0x80000eb,%eax
add    %al,(%eax)
add    %al,%ah
jmp    18a3 <_init-0x5e5>
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
jmp    18ab <_init-0x5dd>
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%ah
jmp    18b3 <_init-0x5d5>
add    %cl,(%eax)
add    %al,(%eax)
add    %ch,%al
jmp    18bb <_init-0x5cd>
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%ah
jmp    18c3 <_init-0x5c5>
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %ch,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %esp
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     1906 <_init-0x582>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
test   %ch,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
nop
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pushf
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fsubr  %st,%st(7)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lock add %al,%fs:(%eax)
or     %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jo     19c2 <_init-0x4c6>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
je     19ca <_init-0x4be>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     19d2 <_init-0x4b6>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     19da <_init-0x4ae>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x80000(%eax,%esi,8)
add    %al,(%eax)
mov    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
nop
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cwtl
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pushf
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    0x80000f0,%al
add    %al,(%eax)
add    %ah,0x80000(%eax,%esi,8)
add    %al,(%eax)
mov    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xf0,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
aam    $0xf0
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xef,%ah
add    %al,(%eax)
push   %es
add    %eax,(%eax)
add    %bh,0x60000ef(%eax)
or     (%eax),%al
add    %bh,0xd060000(%edi,%ebp,8)
add    %al,(%eax)
shr    $0x0,%bh
add    %al,(%esi)
adc    %al,(%eax)
add    %al,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sbb    $0xefc80000,%eax
add    %al,(%eax)
push   %es
and    (%eax),%eax
add    %cl,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sub    %al,(%eax)
add    %dl,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sub    $0x0,%al
add    %dl,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
inc    %edx
add    %al,(%eax)
fsubr  %st(7),%st
add    %al,(%eax)
push   %es
push   %esp
add    %al,(%eax)
loopne 1a91 <_init-0x3f7>
add    %al,(%eax)
push   %es
insl   (%dx),%es:(%edi)
add    %al,(%eax)
in     $0xef,%al
add    %al,(%eax)
push   %es
jno    1aaf <_init-0x3d9>
add    %ch,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
ja     1ab7 <_init-0x3d1>
add    %ch,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
jge    1abf <_init-0x3c9>
shr    %ch
add    %al,(%eax)
pop    %es
add    (%eax),%al
add    %dl,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
add    (%eax),%eax
add    %bl,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %bl,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
add    $0xede00000,%eax
add    %al,(%eax)
pop    %es
push   %es
add    %al,(%eax)
in     $0xed,%al
add    %al,(%eax)
pop    %es
pop    %es
add    %al,(%eax)
call   7001be2 <_end+0x6ff2aee>
or     %al,(%eax)
add    %ch,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
or     %eax,(%eax)
add    %dh,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
or     (%eax),%eax
add    %dh,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
or     $0x0,%al
add    %bh,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
cld
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sldt   (%eax)
add    %ch,%dh
add    %al,(%eax)
pop    %es
adc    %eax,(%eax)
add    %al,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
adc    (%eax),%al
add    %cl,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
adc    (%eax),%eax
add    %cl,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
adc    $0x0,%al
add    %dl,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
adc    $0xee140000,%eax
add    %al,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
sbb    %ch,%dh
add    %al,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
sbb    $0xee,%al
add    %al,(%eax)
pop    %es
sbb    %al,(%eax)
add    %ah,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %ah,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
sbb    (%eax),%al
add    %ch,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %ch,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %dh,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
xor    $0xee,%al
add    %al,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
cmp    %ch,%dh
add    %al,(%eax)
pop    %es
and    %al,(%eax)
add    %bh,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %al,-0x12(%eax)
add    %al,(%eax)
pop    %es
and    (%eax),%al
add    %al,0x0(%esi,%ebp,8)
add    %al,(%edi)
and    $0x0,%al
add    %cl,-0x12(%eax)
add    %al,(%eax)
pop    %es
and    $0xee4c0000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
push   %eax
out    %al,(%dx)
add    %al,(%eax)
pop    %es
daa
add    %al,(%eax)
push   %esp
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sub    %eax,(%eax)
add    %bl,-0x12(%eax)
add    %al,(%eax)
pop    %es
sub    (%eax),%al
add    %bl,0x0(%esi,%ebp,8)
add    %al,(%edi)
sub    (%eax),%eax
add    %ah,-0x12(%eax)
add    %al,(%eax)
pop    %es
sub    $0x0,%al
add    %ah,0x0(%esi,%ebp,8)
add    %al,(%edi)
sub    $0xee680000,%eax
add    %al,(%eax)
pop    %es
add    %al,%cs:(%eax)
insb   (%dx),%es:(%edi)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
jo     1bf0 <_init-0x298>
add    %al,(%eax)
pop    %es
xor    %al,(%eax)
add    %dh,0x0(%esi,%ebp,8)
add    %al,(%edi)
xor    %eax,(%eax)
add    %bh,-0x12(%eax)
add    %al,(%eax)
pop    %es
xor    (%eax),%al
add    %bh,0x0(%esi,%ebp,8)
add    %al,(%edi)
xor    (%eax),%eax
add    %al,0x70000ee(%eax)
xor    $0x0,%al
add    %al,0x35070000(%esi,%ebp,8)
add    %al,(%eax)
mov    %ch,%dh
add    %al,(%eax)
pop    %es
add    %al,%ss:(%eax)
mov    %gs,%esi
add    %al,(%eax)
pop    %es
aaa
add    %al,(%eax)
nop
out    %al,(%dx)
add    %al,(%eax)
pop    %es
cmp    %al,(%eax)
add    %dl,0x39070000(%esi,%ebp,8)
add    %al,(%eax)
cwtl
out    %al,(%dx)
add    %al,(%eax)
pop    %es
cmp    (%eax),%al
add    %bl,0x3b070000(%esi,%ebp,8)
add    %al,(%eax)
mov    0x70000ee,%al
cmp    $0x0,%al
add    %ah,0x3d070000(%esi,%ebp,8)
add    %al,(%eax)
test   $0xee,%al
add    %al,(%eax)
pop    %es
add    %al,%ds:(%eax)
lods   %ds:(%esi),%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
aas
add    %al,(%eax)
mov    $0xee,%al
add    %al,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
mov    $0xee,%ah
add    %al,(%eax)
pop    %es
inc    %ecx
add    %al,(%eax)
mov    $0x70000ee,%eax
inc    %edx
add    %al,(%eax)
mov    $0x70000ee,%esp
inc    %ebx
add    %al,(%eax)
shr    $0x0,%dh
add    %al,(%edi)
inc    %esp
add    %al,(%eax)
(bad)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
inc    %ebp
add    %al,(%eax)
enter  $0xee,$0x0
pop    %es
inc    %esi
add    %al,(%eax)
int3
out    %al,(%dx)
add    %al,(%eax)
pop    %es
inc    %edi
add    %al,(%eax)
shr    %dh
add    %al,(%eax)
pop    %es
dec    %eax
add    %al,(%eax)
aam    $0xee
add    %al,(%eax)
pop    %es
dec    %ecx
add    %al,(%eax)
fsubr  %st(6),%st
add    %al,(%eax)
pop    %es
dec    %edx
add    %al,(%eax)
fsubr  %st,%st(6)
add    %al,(%eax)
pop    %es
dec    %ebx
add    %al,(%eax)
loopne 1cd0 <_init-0x1b8>
add    %al,(%eax)
pop    %es
dec    %esp
add    %al,(%eax)
in     $0xee,%al
add    %al,(%eax)
pop    %es
dec    %ebp
add    %al,(%eax)
call   7001de3 <_end+0x6ff2cef>
dec    %esi
add    %al,(%eax)
in     (%dx),%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %edi
add    %al,(%eax)
lock out %al,(%dx)
add    %al,(%eax)
pop    %es
push   %eax
add    %al,(%eax)
hlt
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %ecx
add    %al,(%eax)
clc
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %edx
add    %al,(%eax)
cld
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %ebx
add    %al,(%eax)
add    %ch,%bh
add    %al,(%eax)
pop    %es
push   %ebp
add    %al,(%eax)
add    $0xef,%al
add    %al,(%eax)
pop    %es
push   %esi
add    %al,(%eax)
or     %ch,%bh
add    %al,(%eax)
pop    %es
push   %edi
add    %al,(%eax)
or     $0xef,%al
add    %al,(%eax)
pop    %es
pop    %eax
add    %al,(%eax)
adc    %ch,%bh
add    %al,(%eax)
pop    %es
pop    %ecx
add    %al,(%eax)
adc    $0xef,%al
add    %al,(%eax)
pop    %es
pop    %edx
add    %al,(%eax)
sbb    %ch,%bh
add    %al,(%eax)
pop    %es
pop    %ebx
add    %al,(%eax)
sbb    $0xef,%al
add    %al,(%eax)
pop    %es
pop    %esp
add    %al,(%eax)
and    %ch,%bh
add    %al,(%eax)
pop    %es
pop    %ebp
add    %al,(%eax)
and    $0xef,%al
add    %al,(%eax)
pop    %es
pop    %esi
add    %al,(%eax)
sub    %ch,%bh
add    %al,(%eax)
pop    %es
pop    %edi
add    %al,(%eax)
sub    $0xef,%al
add    %al,(%eax)
pop    %es
pusha
add    %al,(%eax)
xor    %ch,%bh
add    %al,(%eax)
pop    %es
popa
add    %al,(%eax)
xor    $0xef,%al
add    %al,(%eax)
pop    %es
bound  %eax,(%eax)
add    %bh,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
arpl   %ax,(%eax)
add    %bh,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
add    %al,%fs:(%eax)
inc    %eax
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
add    %al,%gs:(%eax)
inc    %esp
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
data16
add    %al,(%eax)
dec    %eax
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
add    %al,(%bx,%si)
dec    %esp
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
push   $0xef500000
add    %al,(%eax)
pop    %es
imul   $0xef5400,(%eax),%eax
add    %al,(%edi)
push   $0x0
add    %bl,-0x11(%eax)
add    %al,(%eax)
pop    %es
imul   $0x0,(%eax),%eax
pop    %esp
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
pusha
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
fs
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
push   $0x70000ef
jo     1df7 <_init-0x91>
add    %ch,0x0(%edi,%ebp,8)
add    %al,(%edi)
jb     1dff <_init-0x89>
add    %dh,-0x11(%eax)
add    %al,(%eax)
pop    %es
jae    1e07 <_init-0x81>
add    %dh,0x0(%edi,%ebp,8)
add    %al,(%edi)
je     1e0f <_init-0x79>
add    %bh,-0x11(%eax)
add    %al,(%eax)
pop    %es
jne    1e17 <_init-0x71>
add    %bh,0x0(%edi,%ebp,8)
add    %al,(%edi)
jbe    1e1f <_init-0x69>
add    %al,0x70000ef(%eax)
js     1e27 <_init-0x61>
add    %al,0x79070000(%edi,%ebp,8)
add    %al,(%eax)
mov    %ch,%bh
add    %al,(%eax)
pop    %es
jp     1e37 <_init-0x51>
add    %cl,0x7b070000(%edi,%ebp,8)
add    %al,(%eax)
nop
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
jl     1e47 <_init-0x41>
add    %dl,0x7e070000(%edi,%ebp,8)
add    %al,(%eax)
cwtl
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
jg     1e57 <_init-0x31>
add    %bl,-0x7ff90000(%edi,%ebp,8)
add    %al,(%eax)
mov    0x70000ef,%al
addl   $0xefa400,(%eax)
add    %al,(%edi)
(bad)
add    %al,(%eax)
test   $0xef,%al
add    %al,(%eax)
pop    %es
addl   $0x0,(%eax)
lods   %ds:(%esi),%al
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
test   %al,(%eax)
add    %dh,0x70000ef(%eax)
test   %eax,(%eax)
push   %ebx
sub    $0x8,%esp
call   38c0 <main+0x1270>
add    $0xcf33,%ebx
mov    0x210(%ebx),%eax
test   %eax,%eax
je     1ea6 <_init+0x1e>
call   2260 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    1eb0 <_init+0x28>
jmp    *0x10(%ebx)
push   $0x8
jmp    1eb0 <_init+0x28>
jmp    *0x14(%ebx)
push   $0x10
jmp    1eb0 <_init+0x28>
jmp    *0x18(%ebx)
push   $0x18
jmp    1eb0 <_init+0x28>
jmp    *0x1c(%ebx)
push   $0x20
jmp    1eb0 <_init+0x28>
jmp    *0x20(%ebx)
push   $0x28
jmp    1eb0 <_init+0x28>
jmp    *0x24(%ebx)
push   $0x30
jmp    1eb0 <_init+0x28>
jmp    *0x28(%ebx)
push   $0x38
jmp    1eb0 <_init+0x28>
jmp    *0x2c(%ebx)
push   $0x40
jmp    1eb0 <_init+0x28>
jmp    *0x30(%ebx)
push   $0x48
jmp    1eb0 <_init+0x28>
jmp    *0x34(%ebx)
push   $0x50
jmp    1eb0 <_init+0x28>
jmp    *0x38(%ebx)
push   $0x58
jmp    1eb0 <_init+0x28>
jmp    *0x3c(%ebx)
push   $0x60
jmp    1eb0 <_init+0x28>
jmp    *0x40(%ebx)
push   $0x68
jmp    1eb0 <_init+0x28>
jmp    *0x44(%ebx)
push   $0x70
jmp    1eb0 <_init+0x28>
jmp    *0x48(%ebx)
push   $0x78
jmp    1eb0 <_init+0x28>
jmp    *0x4c(%ebx)
push   $0x80
jmp    1eb0 <_init+0x28>
jmp    *0x50(%ebx)
push   $0x88
jmp    1eb0 <_init+0x28>
jmp    *0x54(%ebx)
push   $0x90
jmp    1eb0 <_init+0x28>
jmp    *0x58(%ebx)
push   $0x98
jmp    1eb0 <_init+0x28>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    1eb0 <_init+0x28>
jmp    *0x60(%ebx)
push   $0xa8
jmp    1eb0 <_init+0x28>
jmp    *0x64(%ebx)
push   $0xb0
jmp    1eb0 <_init+0x28>
jmp    *0x68(%ebx)
push   $0xb8
jmp    1eb0 <_init+0x28>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    1eb0 <_init+0x28>
jmp    *0x70(%ebx)
push   $0xc8
jmp    1eb0 <_init+0x28>
jmp    *0x74(%ebx)
push   $0xd0
jmp    1eb0 <_init+0x28>
jmp    *0x78(%ebx)
push   $0xd8
jmp    1eb0 <_init+0x28>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    1eb0 <_init+0x28>
jmp    *0x80(%ebx)
push   $0xe8
jmp    1eb0 <_init+0x28>
jmp    *0x84(%ebx)
push   $0xf0
jmp    1eb0 <_init+0x28>
jmp    *0x88(%ebx)
push   $0xf8
jmp    1eb0 <_init+0x28>
jmp    *0x8c(%ebx)
push   $0x100
jmp    1eb0 <_init+0x28>
jmp    *0x90(%ebx)
push   $0x108
jmp    1eb0 <_init+0x28>
jmp    *0x94(%ebx)
push   $0x110
jmp    1eb0 <_init+0x28>
jmp    *0x98(%ebx)
push   $0x118
jmp    1eb0 <_init+0x28>
jmp    *0x9c(%ebx)
push   $0x120
jmp    1eb0 <_init+0x28>
jmp    *0xa0(%ebx)
push   $0x128
jmp    1eb0 <_init+0x28>
jmp    *0xa4(%ebx)
push   $0x130
jmp    1eb0 <_init+0x28>
jmp    *0xa8(%ebx)
push   $0x138
jmp    1eb0 <_init+0x28>
jmp    *0xac(%ebx)
push   $0x140
jmp    1eb0 <_init+0x28>
jmp    *0xb0(%ebx)
push   $0x148
jmp    1eb0 <_init+0x28>
jmp    *0xb4(%ebx)
push   $0x150
jmp    1eb0 <_init+0x28>
jmp    *0xb8(%ebx)
push   $0x158
jmp    1eb0 <_init+0x28>
jmp    *0xbc(%ebx)
push   $0x160
jmp    1eb0 <_init+0x28>
jmp    *0xc0(%ebx)
push   $0x168
jmp    1eb0 <_init+0x28>
jmp    *0xc4(%ebx)
push   $0x170
jmp    1eb0 <_init+0x28>
jmp    *0xc8(%ebx)
push   $0x178
jmp    1eb0 <_init+0x28>
jmp    *0xcc(%ebx)
push   $0x180
jmp    1eb0 <_init+0x28>
jmp    *0xd0(%ebx)
push   $0x188
jmp    1eb0 <_init+0x28>
jmp    *0xd4(%ebx)
push   $0x190
jmp    1eb0 <_init+0x28>
jmp    *0xd8(%ebx)
push   $0x198
jmp    1eb0 <_init+0x28>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    1eb0 <_init+0x28>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    1eb0 <_init+0x28>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    1eb0 <_init+0x28>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    1eb0 <_init+0x28>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    1eb0 <_init+0x28>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    1eb0 <_init+0x28>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    1eb0 <_init+0x28>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    1eb0 <_init+0x28>
jmp    *0xfc(%ebx)
push   $0x1e0
jmp    1eb0 <_init+0x28>
jmp    *0x100(%ebx)
push   $0x1e8
jmp    1eb0 <_init+0x28>
jmp    *0x104(%ebx)
push   $0x1f0
jmp    1eb0 <_init+0x28>
jmp    *0x108(%ebx)
push   $0x1f8
jmp    1eb0 <_init+0x28>
jmp    *0x10c(%ebx)
push   $0x200
jmp    1eb0 <_init+0x28>
jmp    *0x110(%ebx)
push   $0x208
jmp    1eb0 <_init+0x28>
jmp    *0x114(%ebx)
push   $0x210
jmp    1eb0 <_init+0x28>
jmp    *0x118(%ebx)
push   $0x218
jmp    1eb0 <_init+0x28>
jmp    *0x11c(%ebx)
push   $0x220
jmp    1eb0 <_init+0x28>
jmp    *0x120(%ebx)
push   $0x228
jmp    1eb0 <_init+0x28>
jmp    *0x124(%ebx)
push   $0x230
jmp    1eb0 <_init+0x28>
jmp    *0x128(%ebx)
push   $0x238
jmp    1eb0 <_init+0x28>
jmp    *0x12c(%ebx)
push   $0x240
jmp    1eb0 <_init+0x28>
jmp    *0x130(%ebx)
push   $0x248
jmp    1eb0 <_init+0x28>
jmp    *0x134(%ebx)
push   $0x250
jmp    1eb0 <_init+0x28>
jmp    *0x138(%ebx)
push   $0x258
jmp    1eb0 <_init+0x28>
jmp    *0x13c(%ebx)
push   $0x260
jmp    1eb0 <_init+0x28>
jmp    *0x140(%ebx)
push   $0x268
jmp    1eb0 <_init+0x28>
jmp    *0x144(%ebx)
push   $0x270
jmp    1eb0 <_init+0x28>
jmp    *0x148(%ebx)
push   $0x278
jmp    1eb0 <_init+0x28>
jmp    *0x14c(%ebx)
push   $0x280
jmp    1eb0 <_init+0x28>
jmp    *0x150(%ebx)
push   $0x288
jmp    1eb0 <_init+0x28>
jmp    *0x154(%ebx)
push   $0x290
jmp    1eb0 <_init+0x28>
jmp    *0x158(%ebx)
push   $0x298
jmp    1eb0 <_init+0x28>
jmp    *0x15c(%ebx)
push   $0x2a0
jmp    1eb0 <_init+0x28>
jmp    *0x160(%ebx)
push   $0x2a8
jmp    1eb0 <_init+0x28>
jmp    *0x164(%ebx)
push   $0x2b0
jmp    1eb0 <_init+0x28>
jmp    *0x168(%ebx)
push   $0x2b8
jmp    1eb0 <_init+0x28>
jmp    *0x16c(%ebx)
push   $0x2c0
jmp    1eb0 <_init+0x28>
jmp    *0x170(%ebx)
push   $0x2c8
jmp    1eb0 <_init+0x28>
jmp    *0x174(%ebx)
push   $0x2d0
jmp    1eb0 <_init+0x28>
jmp    *0x178(%ebx)
push   $0x2d8
jmp    1eb0 <_init+0x28>
jmp    *0x17c(%ebx)
push   $0x2e0
jmp    1eb0 <_init+0x28>
jmp    *0x180(%ebx)
push   $0x2e8
jmp    1eb0 <_init+0x28>
jmp    *0x184(%ebx)
push   $0x2f0
jmp    1eb0 <_init+0x28>
jmp    *0x188(%ebx)
push   $0x2f8
jmp    1eb0 <_init+0x28>
jmp    *0x18c(%ebx)
push   $0x300
jmp    1eb0 <_init+0x28>
jmp    *0x190(%ebx)
push   $0x308
jmp    1eb0 <_init+0x28>
jmp    *0x194(%ebx)
push   $0x310
jmp    1eb0 <_init+0x28>
jmp    *0x198(%ebx)
push   $0x318
jmp    1eb0 <_init+0x28>
jmp    *0x19c(%ebx)
push   $0x320
jmp    1eb0 <_init+0x28>
jmp    *0x1a0(%ebx)
push   $0x328
jmp    1eb0 <_init+0x28>
jmp    *0x1a4(%ebx)
push   $0x330
jmp    1eb0 <_init+0x28>
jmp    *0x1a8(%ebx)
push   $0x338
jmp    1eb0 <_init+0x28>
jmp    *0x1ac(%ebx)
push   $0x340
jmp    1eb0 <_init+0x28>
jmp    *0x1b0(%ebx)
push   $0x348
jmp    1eb0 <_init+0x28>
jmp    *0x1b4(%ebx)
push   $0x350
jmp    1eb0 <_init+0x28>
jmp    *0x1b8(%ebx)
push   $0x358
jmp    1eb0 <_init+0x28>
jmp    *0x1bc(%ebx)
push   $0x360
jmp    1eb0 <_init+0x28>
jmp    *0x1c0(%ebx)
push   $0x368
jmp    1eb0 <_init+0x28>
jmp    *0x1c4(%ebx)
push   $0x370
jmp    1eb0 <_init+0x28>
jmp    *0x1c8(%ebx)
push   $0x378
jmp    1eb0 <_init+0x28>
jmp    *0x1cc(%ebx)
push   $0x380
jmp    1eb0 <_init+0x28>
jmp    *0x1d0(%ebx)
push   $0x388
jmp    1eb0 <_init+0x28>
jmp    *0x1d4(%ebx)
push   $0x390
jmp    1eb0 <_init+0x28>
jmp    *0x1d8(%ebx)
push   $0x398
jmp    1eb0 <_init+0x28>
jmp    *0x1dc(%ebx)
push   $0x3a0
jmp    1eb0 <_init+0x28>
jmp    *0x1e0(%ebx)
push   $0x3a8
jmp    1eb0 <_init+0x28>
jmp    *0x1e4(%ebx)
push   $0x3b0
jmp    1eb0 <_init+0x28>
jmp    *0x1e8(%ebx)
push   $0x3b8
jmp    1eb0 <_init+0x28>
jmp    *0x1ec(%ebx)
push   $0x3c0
jmp    1eb0 <_init+0x28>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xc769,%ebx
and    $0xfffffff0,%esp
sub    $0x180,%esp
mov    0xc(%ebp),%eax
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
lea    -0x40ad(%ebx),%esi
mov    %gs:0x14,%eax
mov    %eax,0x17c(%esp)
xor    %eax,%eax
jmp    2695 <main+0x45>
cmp    $0x2,%edi
ja     26b9 <main+0x69>
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   2330 <open64@plt>
cmp    $0x2,%eax
mov    %eax,%edi
jle    2690 <main+0x40>
mov    %eax,(%esp)
call   2610 <close@plt>
cmp    $0x2,%edi
jbe    2695 <main+0x45>
call   2060 <getuid@plt>
mov    %eax,%esi
call   20b0 <geteuid@plt>
cmp    %eax,%esi
je     2714 <main+0xc4>
mov    0x1fc(%ebx),%eax
mov    (%eax),%eax
movl   $0x135,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3b00(%ebx),%eax
mov    %eax,(%esp)
call   2110 <fwrite@plt>
mov    $0x16,%eax
mov    0x17c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    3104 <main+0xab4>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   2390 <getgid@plt>
mov    %eax,%esi
call   20e0 <getegid@plt>
cmp    %eax,%esi
jne    26c9 <main+0x79>
call   2510 <ntfs_set_locale@plt>
mov    0x214(%ebx),%eax
lea    0x320(%ebx),%esi
mov    %eax,(%esp)
call   2200 <ntfs_log_set_handler@plt>
mov    0x5c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x8(%ebp),%eax
mov    %eax,0x8(%esp)
lea    -0xb274(%ebx),%eax
mov    %eax,0x4(%esp)
call   a110 <main+0x7ac0>
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     2772 <main+0x122>
call   3b50 <main+0x1500>
mov    $0xb,%eax
jmp    26f8 <main+0xa8>
movl   $0xb4,(%esp)
call   24d0 <ntfs_calloc@plt>
test   %eax,%eax
mov    %eax,0x31c(%ebx)
mov    %eax,0x50(%esp)
je     360d <main+0xfbd>
call   2060 <getuid@plt>
mov    %eax,0x58(%esp)
call   2390 <getgid@plt>
mov    0x50(%esp),%edx
mov    $0x2d,%ecx
mov    %edx,%edi
mov    %eax,0x54(%esp)
mov    0x5c(%esp),%eax
rep stos %eax,%es:(%edi)
mov    0x58(%esp),%ecx
mov    0x54(%esp),%eax
movl   $0x1,0x14(%edx)
movl   $0x2,0x18(%edx)
mov    %ecx,0x4(%edx)
mov    %eax,0x8(%edx)
movl   $0x1,0x44(%edx)
movl   $0x1,0x48(%edx)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   9590 <main+0x6f40>
test   %eax,%eax
mov    %eax,0x60(%esp)
je     35fb <main+0xfab>
lea    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x328(%ebx),%eax
mov    %eax,(%esp)
call   20a0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
jne    28ca <main+0x27a>
mov    0x64(%esp),%eax
test   $0x1,%al
je     28ca <main+0x27a>
test   $0x4,%al
je     283b <main+0x1eb>
mov    0x31c(%ebx),%edx
cmpl   $0x0,0x24(%edx)
jne    28d0 <main+0x280>
mov    $0x10,%edi
movl   $0x0,0x5c(%esp)
mov    0x320(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x328(%ebx),%eax
mov    %eax,(%esp)
call   22b0 <ntfs_mount_error@plt>
mov    0x31c(%ebx),%eax
mov    0x80(%eax),%eax
test   %eax,%eax
je     287c <main+0x22c>
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   23f0 <ntfs_xattr_free_mapping@plt>
call   4150 <main+0x1b00>
mov    0x31c(%ebx),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x324(%ebx),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x328(%ebx),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %edi,%eax
jmp    26f8 <main+0xa8>
mov    0x31c(%ebx),%edx
mov    0x320(%ebx),%eax
mov    %edx,0x5c(%esp)
cmpb   $0x2f,(%eax)
je     35e4 <main+0xf94>
movl   $0x1000,(%esp)
call   1fa0 <ntfs_malloc@plt>
mov    0x5c(%esp),%edx
mov    0x31c(%ebx),%esi
mov    %eax,0x80(%edx)
mov    0x80(%esi),%edx
test   %edx,%edx
je     35d2 <main+0xf82>
mov    0x320(%ebx),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    %edx,(%esp)
lea    0x1001(%ecx),%eax
mov    %eax,0x4(%esp)
call   22d0 <getcwd@plt>
test   %eax,%eax
je     2960 <main+0x310>
mov    0x80(%esi),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
movw   $0x2f,-0x1(%edx,%ecx,1)
mov    0x80(%esi),%eax
mov    0x320(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   2140 <strcat@plt>
mov    0x31c(%ebx),%esi
cmpl   $0x0,0x80(%esi)
je     35d2 <main+0xf82>
mov    0x320(%ebx),%eax
movl   $0x0,0x98(%esi)
00
movl   $0x0,0x9c(%esi)
00
cmpb   $0x2f,(%eax)
je     343f <main+0xdef>
call   4310 <main+0x1cc0>
lea    0xdc(%esp),%edx
mov    %edx,0x58(%esp)
cmp    $0x1,%eax
mov    %eax,0x54(%esp)
jbe    33db <main+0xd8b>
mov    0x58(%esp),%eax
lea    -0x4094(%ebx),%esi
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   25b0 <__xstat64@plt>
test   %eax,%eax
je     29e5 <main+0x395>
call   23b0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%edi
je     347e <main+0xe2e>
lea    0x7c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x328(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <__xstat64@plt>
test   %eax,%eax
jne    3385 <main+0xd35>
mov    0x8c(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     36c5 <main+0x1075>
call   2060 <getuid@plt>
test   %eax,%eax
je     36a8 <main+0x1058>
mov    0x31c(%ebx),%esi
cmpl   $0x0,0x60(%esi)
jne    365a <main+0x100a>
mov    0x328(%ebx),%edi
mov    $0x8000000,%eax
mov    %eax,%edx
or     $0x1,%edx
cmpl   $0x0,0x24(%esi)
cmovne %edx,%eax
mov    %eax,%edx
or     $0x10000000,%edx
cmpl   $0x0,0x48(%esi)
cmovne %edx,%eax
mov    %eax,%edx
or     $0x20000000,%edx
cmpl   $0x0,0x4c(%esi)
mov    %edi,(%esp)
cmovne %edx,%eax
mov    %eax,0x4(%esp)
call   2460 <ntfs_mount@plt>
mov    %eax,(%esi)
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     3617 <main+0xfc7>
cmpl   $0x0,0x50(%eax)
je     2aa2 <main+0x452>
mov    (%edx),%ecx
test   %ecx,%ecx
je     2aa2 <main+0x452>
orl    $0x10,0x4(%ecx)
cmpl   $0x0,0x3c(%eax)
je     37c6 <main+0x1176>
orl    $0x40,0x8(%edx)
cmpl   $0x0,0x68(%eax)
je     2abd <main+0x46d>
movl   $0x0,0x2c(%eax)
mov    0x30(%eax),%esi
mov    0x28(%eax),%ecx
mov    %esi,0xc(%esp)
cmpl   $0x0,0x2c(%eax)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
sete   %al
movzbl %al,%eax
mov    %eax,0x8(%esp)
call   1f50 <ntfs_set_shown_files@plt>
test   %eax,%eax
je     36e2 <main+0x1092>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   24e0 <ntfs_volume_error@plt>
movl   $0x0,0x5c(%esp)
test   %eax,%eax
mov    %eax,%edi
jne    2848 <main+0x1f8>
mov    0x31c(%ebx),%edx
cmpl   $0x0,0x24(%edx)
je     3345 <main+0xcf5>
cmpl   $0x0,0x60(%edx)
je     2b93 <main+0x543>
mov    (%edx),%eax
mov    0x18(%eax),%esi
movl   $0x1e,(%esp)
call   2050 <sysconf@plt>
mov    $0x1000,%edx
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
test   %eax,%eax
cmovle %edx,%eax
cmp    %esi,%eax
cmova  %esi,%eax
mov    %eax,0x14(%esp)
lea    0x13c(%esp),%esi
lea    -0x401b(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   1ed0 <__snprintf_chk@plt>
lea    0x60(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    2840 <main+0x1f0>
mov    0x31c(%ebx),%edx
mov    (%edx),%eax
mov    0x78(%edx),%ecx
mov    %eax,0x88(%edx)
mov    0x68(%edx),%edx
mov    %ecx,0x90(%eax)
mov    %edx,0xcc(%eax)
mov    %eax,(%esp)
call   25e0 <ntfs_open_secure@plt>
mov    0x31c(%ebx),%edx
test   %eax,%eax
jne    332a <main+0xcda>
movl   $0x0,0x48(%esp)
mov    (%edx),%eax
mov    0x90(%eax),%ecx
xor    %eax,%eax
test   $0x5,%cl
je     2be5 <main+0x595>
mov    %ecx,%eax
shr    $0x5,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    0x7c(%edx),%ecx
add    $0x88,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
call   2400 <ntfs_build_mapping@plt>
mov    0x31c(%ebx),%edx
test   %eax,%eax
jne    32c7 <main+0xc77>
mov    (%edx),%eax
testb  $0x1,0x90(%eax)
je     32b8 <main+0xc68>
lea    -0x3b28(%ebx),%eax
mov    %eax,0x50(%esp)
mov    0x7c(%edx),%eax
test   %eax,%eax
je     2c3c <main+0x5ec>
mov    %eax,(%esp)
mov    %edx,0x5c(%esp)
call   1fb0 <free@plt>
mov    0x5c(%esp),%edx
mov    0x6c(%edx),%ecx
mov    (%edx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   2210 <ntfs_xattr_build_mapping@plt>
mov    0x31c(%ebx),%edx
mov    %edx,0x4c(%esp)
mov    %eax,%ecx
mov    %eax,0x5c(%esp)
mov    (%edx),%eax
mov    %ecx,0xd0(%eax)
mov    0x6c(%edx),%eax
test   %eax,%eax
je     2c74 <main+0x624>
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x310(%ebx),%eax
mov    0x60(%esp),%esi
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x78(%esp)
movl   $0x0,0xdc(%esp)
00
movl   $0x0,0xe0(%esp)
00
mov    %eax,(%esp)
movl   $0x0,0xe4(%esp)
00
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     3277 <main+0xc27>
lea    -0x3fd6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     3277 <main+0xc27>
mov    %esi,0x4(%esp)
mov    0x58(%esp),%esi
mov    %esi,(%esp)
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     3277 <main+0xc27>
mov    0x320(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2150 <fuse_mount@plt>
mov    %eax,%esi
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   2290 <fuse_opt_free_args@plt>
mov    0x4c(%esp),%eax
mov    %esi,0x70(%eax)
mov    0x31c(%ebx),%eax
cmpl   $0x0,0x70(%eax)
je     326d <main+0xc1d>
lea    -0x415b(%ebx),%eax
lea    0x70(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x34(%esp)
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     321e <main+0xbce>
lea    -0x3774(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     321e <main+0xbce>
mov    0x31c(%ebx),%edx
cmpl   $0x0,0x58(%edx)
jne    324b <main+0xbfb>
mov    0x70(%edx),%eax
lea    0x25c(%ebx),%edx
movl   $0x0,0x10(%esp)
movl   $0xb4,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2080 <fuse_new@plt>
test   %eax,%eax
mov    %eax,0x4c(%esp)
je     321e <main+0xbce>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   2180 <fuse_get_session@plt>
mov    %eax,(%esp)
call   2340 <fuse_set_signal_handlers@plt>
test   %eax,%eax
jne    3212 <main+0xbc2>
mov    %esi,(%esp)
call   2290 <fuse_opt_free_args@plt>
mov    0x8c(%esp),%eax
mov    0x31c(%ebx),%edx
and    $0xf000,%eax
cmp    $0x6000,%eax
movl   $0x1,0x64(%edx)
je     31b4 <main+0xb64>
lea    -0x33b6(%ebx),%eax
lea    -0x4178(%ebx),%esi
mov    %eax,0x54(%esp)
mov    0x60(%esp),%eax
cmpl   $0x0,0x5c(%edx)
mov    %eax,0x44(%esp)
je     3115 <main+0xac5>
lea    -0x3459(%ebx),%eax
mov    %eax,0x58(%esp)
movl   $0x0,0x84(%edx)
00
call   2190 <fuse_version@plt>
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xe4c,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x20(%esp)
lea    -0x4194(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x4186(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3fb5(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x328(%ebx),%edx
mov    0x32c(%ebx),%ecx
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0x3c(%esp)
mov    %ecx,0x40(%esp)
call   1f00 <strcmp@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
test   %eax,%eax
je     2efb <main+0x8ab>
lea    -0x3520(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xe4f,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x328(%ebx),%edx
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
movzbl 0x11(%eax),%ecx
mov    %ecx,0x40(%esp)
movzbl 0x10(%eax),%ecx
mov    0x4(%eax),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
mov    0x31c(%ebx),%eax
cmpl   $0x0,0x24(%eax)
je     3109 <main+0xab9>
lea    -0x40c2(%ebx),%eax
mov    0x40(%esp),%ecx
mov    %eax,0x1c(%esp)
lea    -0x34f4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xe53,0x8(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x324(%ebx),%edx
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0x18(%esp)
lea    -0x3fa3(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
movl   $0xe54,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
lea    -0x3f8e(%ebx),%eax
mov    0x44(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0xe55,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
je     303f <main+0x9ef>
mov    %eax,0x18(%esp)
lea    -0x3f92(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xf41,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%eax
movl   $0x7,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3f7b(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0xf44,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
testb  $0x2,0x90(%edx)
je     30d0 <main+0xa80>
cmpl   $0x0,0x4(%eax)
jne    30d0 <main+0xa80>
cmpl   $0x0,0x8(%eax)
je     30d0 <main+0xa80>
lea    -0x34c8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf47,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%esi
mov    %esi,(%esp)
call   2550 <fuse_loop@plt>
mov    0x31c(%ebx),%eax
mov    0x70(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x320(%ebx),%eax
mov    %eax,(%esp)
call   20d0 <fuse_unmount@plt>
mov    %esi,(%esp)
call   25f0 <fuse_destroy@plt>
jmp    2848 <main+0x1f8>
call   ac00 <main+0x85b0>
lea    -0x40b8(%ebx),%eax
nop
jmp    2f30 <main+0x8e0>
mov    0x58(%edx),%eax
movl   $0x0,(%esp)
mov    %edx,0x58(%esp)
mov    %eax,0x4(%esp)
call   21b0 <daemon@plt>
mov    0x58(%esp),%edx
test   %eax,%eax
jne    3171 <main+0xb21>
cmpl   $0x0,0x58(%edx)
jne    3166 <main+0xb16>
mov    0x208(%ebx),%eax
mov    %eax,(%esp)
call   2200 <ntfs_log_set_handler@plt>
mov    0x310(%ebx),%eax
movl   $0x18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   2500 <openlog@plt>
mov    0x31c(%ebx),%edx
jmp    2e2c <main+0x7dc>
lea    -0x3fcb(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3459(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe40,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x58(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x31c(%ebx),%edx
jmp    2e36 <main+0x7e6>
cmpl   $0x2,0x54(%esp)
jne    2e0a <main+0x7ba>
lea    -0x374c(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x4143(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%esi
lea    -0x33b6(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xf3d,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x54(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x31c(%ebx),%edx
jmp    2e1a <main+0x7ca>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   25f0 <fuse_destroy@plt>
mov    0x31c(%ebx),%eax
mov    $0x15,%edi
mov    0x70(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x320(%ebx),%eax
mov    %eax,(%esp)
call   20d0 <fuse_unmount@plt>
mov    %esi,(%esp)
call   2290 <fuse_opt_free_args@plt>
jmp    2848 <main+0x1f8>
lea    -0x3fd3(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   22e0 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     321e <main+0xbce>
mov    0x31c(%ebx),%edx
jmp    2d8d <main+0x73d>
mov    $0x15,%edi
jmp    2848 <main+0x1f8>
lea    -0x3ff3(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%esi
lea    -0x344b(%ebx),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xdf7,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    2d1c <main+0x6cc>
lea    -0x3ba0(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    2c25 <main+0x5d5>
mov    0x4(%edx),%eax
movl   $0x0,0x8c(%edx)
00
movl   $0x0,0x90(%edx)
00
mov    %eax,0x98(%edx)
mov    0x8(%edx),%eax
mov    %eax,0x9c(%edx)
mov    (%edx),%eax
mov    0x90(%eax),%ecx
and    $0x21,%ecx
cmp    $0x20,%ecx
je     37e7 <main+0x1197>
mov    (%edx),%eax
mov    0x90(%eax),%ecx
test   $0x1,%cl
je     37cf <main+0x117f>
or     $0x2,%ecx
mov    %ecx,0x90(%eax)
lea    -0x3b78(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    2c25 <main+0x5d5>
mov    (%edx),%eax
cmpb   $0x2,0x10(%eax)
jbe    2bc3 <main+0x573>
lea    -0x40de(%ebx),%eax
mov    %eax,0x48(%esp)
jmp    2bcb <main+0x57b>
mov    (%edx),%eax
testb  $0x1,0x8(%eax)
je     2b1a <main+0x4ca>
lea    -0x401f(%ebx),%eax
movl   $0x1,0x24(%edx)
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   93c0 <main+0x6d70>
mov    %edi,0x5c(%esp)
test   %eax,%eax
jne    2848 <main+0x1f8>
mov    0x31c(%ebx),%edx
jmp    2b1a <main+0x4ca>
mov    0x328(%ebx),%eax
mov    $0x13,%edi
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xec3,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x4074(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33b6(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
movl   $0x0,0x5c(%esp)
jmp    2848 <main+0x1f8>
lea    -0x40a3(%ebx),%esi
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
movl   $0x0,0x70(%esp)
movl   $0x5f5e100,0x74(%esp)
call   25b0 <__xstat64@plt>
test   %eax,%eax
je     34d3 <main+0xe83>
mov    $0xa,%edi
lea    0x70(%esp),%esi
jmp    341d <main+0xdcd>
sub    $0x1,%edi
je     3436 <main+0xde6>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   2570 <nanosleep@plt>
call   4310 <main+0x1cc0>
test   %eax,%eax
je     3418 <main+0xdc8>
mov    %eax,0x54(%esp)
jmp    29b3 <main+0x363>
lea    0x7c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   25b0 <__xstat64@plt>
test   %eax,%eax
jne    2996 <main+0x346>
mov    0x94(%esp),%eax
mov    %eax,0x98(%esi)
mov    0x98(%esp),%eax
mov    %eax,0x9c(%esi)
jmp    2996 <main+0x346>
movl   $0x0,(%esp)
call   25c0 <umask@plt>
movl   $0x21b6,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
movl   $0xae5,0x68(%esp)
movl   $0x0,0x6c(%esp)
mov    %eax,0x5c(%esp)
lea    0x68(%esp),%eax
mov    %eax,0xc(%esp)
call   25d0 <__xmknod@plt>
test   %eax,%eax
jne    351c <main+0xecc>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   25c0 <umask@plt>
jmp    29e5 <main+0x395>
call   20b0 <geteuid@plt>
test   %eax,%eax
lea    0x0(%esi),%esi
jne    340d <main+0xdbd>
call   2450 <fork@plt>
test   %eax,%eax
lea    0x0(%esi),%esi
je     35a8 <main+0xf58>
cmp    $0xffffffff,%eax
je     340d <main+0xdbd>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2130 <waitpid@plt>
jmp    340d <main+0xdbd>
lea    -0x4178(%ebx),%edx
mov    %esi,0x18(%esp)
lea    -0x408a(%ebx),%eax
lea    -0x33db(%ebx),%esi
mov    %edx,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xd99,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x50(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%edx
cmpl   $0x1,(%edi)
jne    34c2 <main+0xe72>
lea    -0x39c8(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x4143(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xd9b,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    34c2 <main+0xe72>
lea    -0x408f(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %esi,(%esp)
call   23e0 <execl@plt>
movl   $0x1,(%esp)
call   1f80 <_exit@plt>
mov    $0x14,%edi
movl   $0x0,0x5c(%esp)
jmp    2848 <main+0x1f8>
mov    %eax,(%esp)
call   23a0 <__strdup@plt>
mov    0x5c(%esp),%edx
mov    %eax,0x80(%edx)
jmp    2960 <main+0x310>
mov    $0xb,%edi
movl   $0x0,0x5c(%esp)
jmp    2848 <main+0x1f8>
mov    $0x14,%edi
jmp    2888 <main+0x238>
lea    -0x405e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%esi
lea    -0x33e5(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xd4d,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    2ae9 <main+0x499>
lea    -0x38b0(%ebx),%eax
mov    $0x13,%edi
mov    %eax,0x18(%esp)
lea    -0x4143(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33b6(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xed0,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    2888 <main+0x238>
mov    0x31c(%ebx),%esi
xor    %eax,%eax
mov    0x328(%ebx),%edi
cmpl   $0x0,0x60(%esi)
jne    2a4a <main+0x3fa>
jmp    2a45 <main+0x3f5>
cmpl   $0x2,0x54(%esp)
je     2a22 <main+0x3d2>
mov    0x31c(%ebx),%eax
movl   $0x1,0x60(%eax)
jmp    2a22 <main+0x3d2>
mov    0x31c(%ebx),%eax
mov    (%eax),%esi
mov    0x68(%esi),%eax
mov    %eax,(%esp)
call   2440 <ntfs_attr_get_free_bits@plt>
mov    %eax,0xbc(%esi)
mov    0x31c(%ebx),%eax
mov    %edx,0xc0(%esi)
mov    (%eax),%eax
cmpl   $0x0,0xc0(%eax)
mov    %eax,0x5c(%esp)
js     3787 <main+0x1137>
mov    0x5c(%esp),%eax
mov    0x7c(%eax),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x50(%esp)
call   2440 <ntfs_attr_get_free_bits@plt>
test   %edx,%edx
js     3748 <main+0x10f8>
mov    0x50(%esp),%ecx
mov    0x1c(%ecx),%esi
mov    0x20(%ecx),%edi
sub    0x24(%ecx),%esi
sbb    0x28(%ecx),%edi
shld   $0x3,%esi,%edi
shl    $0x3,%esi
add    %esi,%eax
adc    %edi,%edx
mov    0x5c(%esp),%ecx
mov    %edx,0xc8(%ecx)
mov    0x31c(%ebx),%edx
mov    %eax,0xc4(%ecx)
mov    (%edx),%eax
cmpl   $0x0,0xc8(%eax)
js     3855 <main+0x1205>
cmpl   $0x0,0x4c(%edx)
jne    3817 <main+0x11c7>
call   23b0 <__errno_location@plt>
movl   $0x0,(%eax)
jmp    2ae9 <main+0x499>
lea    -0x4049(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xd61,0x8(%esp)
lea    -0x4178(%ebx),%esi
lea    -0x33e5(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    2ae9 <main+0x499>
andl   $0xffffffbf,0x8(%edx)
jmp    2ab0 <main+0x460>
and    $0xfffffffd,%ecx
mov    %ecx,0x90(%eax)
lea    -0x3b4c(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    2c25 <main+0x5d5>
orl    $0x1,0x90(%eax)
lea    -0x4008(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   93c0 <main+0x6d70>
test   %eax,%eax
jne    35fb <main+0xfab>
mov    0x31c(%ebx),%edx
jmp    3301 <main+0xcb1>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2600 <ntfs_volume_check_hiberfile@plt>
test   %eax,%eax
je     3777 <main+0x1127>
call   23b0 <__errno_location@plt>
cmpl   $0x1,(%eax)
jne    2ae9 <main+0x499>
lea    -0x402d(%ebx),%eax
call   4460 <main+0x1e10>
test   %eax,%eax
je     3777 <main+0x1127>
jmp    2ae9 <main+0x499>
lea    -0x379c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xd67,0x8(%esp)
jmp    37a9 <main+0x1159>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   38ae <main+0x125e>
add    $0xb538,%ebx
lea    -0x41d4(%ebx),%eax
push   %eax
lea    -0x4244(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x218(%ebx)
call   2310 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   38c0 <main+0x1270>
add    $0xb4eb,%ebx
sub    $0x14,%esp
lea    0x317(%ebx),%eax
lea    0x314(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     38fb <main+0x12ab>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x1f4(%ebx),%eax
test   %eax,%eax
je     38f5 <main+0x12a5>
mov    %edx,(%esp)
call   *%eax
jmp    38f5 <main+0x12a5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   38c0 <main+0x1270>
add    $0xb4ab,%ebx
sub    $0x14,%esp
lea    0x314(%ebx),%eax
lea    0x314(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    3944 <main+0x12f4>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x224(%ebx),%ecx
test   %ecx,%ecx
je     393e <main+0x12ee>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    393e <main+0x12ee>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   38c0 <main+0x1270>
add    $0xb45b,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x314(%ebx)
jne    399f <main+0x134f>
mov    0x20c(%ebx),%eax
test   %eax,%eax
je     3993 <main+0x1343>
mov    0x240(%ebx),%eax
mov    %eax,(%esp)
call   2100 <__cxa_finalize@plt>
call   38d0 <main+0x1280>
movb   $0x1,0x314(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   38c0 <main+0x1270>
add    $0xb40b,%ebx
sub    $0x14,%esp
mov    -0x3b8(%ebx),%eax
test   %eax,%eax
je     39e1 <main+0x1391>
mov    0x21c(%ebx),%eax
test   %eax,%eax
je     39e1 <main+0x1391>
lea    -0x3b8(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    3910 <main+0x12c0>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xb3cb,%ebx
mov    0x31c(%ebx),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     3ae6 <main+0x1496>
mov    0x18(%ebp),%eax
mov    0x18(%esp),%edi
mov    0xc0(%ebp),%ecx
mov    0x60(%ebp),%edx
mov    %eax,(%edi)
mov    %eax,0x4(%edi)
mov    0x5c(%ebp),%eax
mov    %edx,0xc(%edi)
mov    %eax,0x8(%edi)
mov    %ecx,%eax
cltd
mov    %edx,%eax
not    %eax
sar    $0x1f,%eax
mov    %eax,%edx
and    0xbc(%ebp),%eax
and    %edx,%ecx
mov    %ecx,%edi
mov    %eax,%esi
mov    0x18(%esp),%eax
mov    %esi,0x10(%eax)
mov    %ecx,0x14(%eax)
mov    %esi,0x18(%eax)
mov    %ecx,0x1c(%eax)
movzbl 0x24(%ebp),%ecx
movzbl 0x25(%ebp),%eax
sub    %eax,%ecx
js     3ac8 <main+0x1478>
shld   %cl,%esi,%edi
xor    %eax,%eax
shl    %cl,%esi
and    $0x20,%ecx
cmovne %esi,%edi
cmovne %eax,%esi
mov    0x7c(%ebp),%eax
mov    0x18(%esp),%ecx
mov    0x20(%eax),%edx
mov    0x1c(%eax),%eax
shld   $0x3,%eax,%edx
shl    $0x3,%eax
add    %esi,%eax
adc    %edi,%edx
add    0xc4(%ebp),%esi
adc    0xc8(%ebp),%edi
mov    %eax,0x20(%ecx)
mov    %edx,0x24(%ecx)
mov    %esi,%edx
test   %edi,%edi
mov    %edi,%eax
js     3ae0 <main+0x1490>
mov    0x18(%esp),%edi
mov    %eax,0x34(%edi)
mov    %eax,0x2c(%edi)
xor    %eax,%eax
mov    %edx,0x30(%edi)
mov    %edx,0x28(%edi)
movl   $0xff,0x44(%edi)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
neg    %ecx
shrd   %cl,%edi,%esi
sar    %cl,%edi
mov    %edi,%eax
sar    $0x1f,%eax
and    $0x20,%ecx
cmovne %edi,%esi
cmovne %eax,%edi
jmp    3a71 <main+0x1421>
nop
xor    %edx,%edx
xor    %eax,%eax
jmp    3aa3 <main+0x1453>
mov    $0xffffffed,%eax
jmp    3abc <main+0x146c>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
call   38c0 <main+0x1270>
add    $0xb2c8,%ebx
mov    0x18(%esi),%edi
mov    %edi,%eax
or     $0x40,%eax
mov    %eax,0x18(%esi)
mov    0x31c(%ebx),%eax
mov    0x54(%eax),%edx
test   %edx,%edx
je     3b3c <main+0x14ec>
mov    (%eax),%eax
movzbl 0x24(%eax),%ecx
mov    0x60(%eax),%edx
mov    0x5c(%eax),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     3b32 <main+0x14e2>
mov    %eax,%edx
test   %edx,%edx
jle    3b3c <main+0x14ec>
or     $0x60,%edi
mov    %edi,0x18(%esi)
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xb26d,%ebx
sub    $0x44,%esp
mov    0x1f0(%ebx),%eax
mov    (%eax),%esi
call   2190 <fuse_version@plt>
mov    0x310(%ebx),%edx
movl   $0x7,0x28(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0x30(%esp)
mov    %edx,0x2c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x24(%esp)
lea    -0x4194(%ebx),%eax
mov    %eax,0x20(%esp)
lea    -0x4186(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3f58(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33bc(%ebx),%eax
movl   $0x8,0xc(%esp)
movl   $0xd7c,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
nop
push   %esi
mov    %eax,%esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xb1db,%ebx
sub    $0x4,%esp
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
add    $0x84,%eax
mov    %edx,(%esi)
mov    0x8(%eax),%edx
mov    %edx,0x4(%esi)
mov    0xc(%eax),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x8(%esi)
call   2030 <fuse_get_context@plt>
mov    0x4(%eax),%edx
mov    %edx,0x10(%esi)
mov    0x8(%eax),%edx
mov    %edx,0x14(%esi)
mov    0xc(%eax),%edx
mov    0x14(%eax),%eax
mov    %edx,0x18(%esi)
mov    %eax,0x1c(%esi)
mov    0x31c(%ebx),%eax
mov    0x8c(%eax),%eax
test   %eax,%eax
setne  %al
add    $0x4,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x8c,%esp
mov    (%eax),%eax
call   38c0 <main+0x1270>
add    $0xb15c,%ebx
testb  $0x1,0x90(%eax)
jne    3d0f <main+0x16bf>
mov    0xa0(%esp),%ecx
test   %ecx,%ecx
je     3d30 <main+0x16e0>
mov    0xa8(%esp),%eax
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x4(%esp)
call   2320 <ntfs_allowed_access@plt>
mov    0x18(%esp),%edx
cmp    $0x2,%eax
mov    %eax,%esi
sete   %al
cmpl   $0x2c0,0xa8(%esp)
00
sete   %cl
and    %ecx,%eax
test   %al,%al
je     3d0f <main+0x16bf>
mov    0xa4(%esp),%ebp
test   %ebp,%ebp
je     3dd8 <main+0x1788>
lea    0x20(%esp),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   2430 <ntfs_get_owner_mode@plt>
test   %eax,%eax
js     3d04 <main+0x16b4>
mov    0x10(%edi),%eax
cmp    %eax,0x38(%esp)
sete   %al
movzbl %al,%eax
mov    %eax,%esi
mov    0xa4(%esp),%eax
test   %eax,%eax
je     3d20 <main+0x16d0>
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
jmp    3d0f <main+0x16bf>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
xor    %esi,%esi
mov    %edx,0x18(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebp
je     3d0f <main+0x16bf>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   2490 <strrchr@plt>
movb   $0x0,(%eax)
mov    (%edi),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     3e33 <main+0x17e3>
mov    (%edi),%eax
mov    $0x1,%si
testb  $0x1,0x90(%eax)
je     3e05 <main+0x17b5>
mov    %ecx,(%esp)
mov    %edx,0x18(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
jne    3dff <main+0x17af>
cmp    $0x2,%esi
sete   %al
cmpl   $0x2c0,0xa8(%esp)
00
sete   %cl
and    %ecx,%eax
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   1fb0 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
jmp    3cc8 <main+0x1678>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    3cdb <main+0x168b>
xor    %esi,%esi
jmp    3d0f <main+0x16bf>
xor    %eax,%eax
xor    %esi,%esi
jmp    3db4 <main+0x1764>
mov    0xa8(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
call   2320 <ntfs_allowed_access@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
mov    %eax,%esi
jmp    3d8a <main+0x173a>
xor    %eax,%eax
jmp    3db4 <main+0x1764>
lea    0x0(%esi),%esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xaf7e,%ebx
sub    $0x18,%esp
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   22c0 <strchr@plt>
test   %eax,%eax
je     3e78 <main+0x1828>
mov    0x31c(%ebx),%eax
cmpl   $0x3,0x14(%eax)
sete   %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xaf3d,%ebx
sub    $0x14,%esp
mov    0x31c(%ebx),%ecx
mov    0x18(%ecx),%ecx
cmp    $0x1,%ecx
je     3eb8 <main+0x1868>
cmp    $0x2,%ecx
je     3ec0 <main+0x1870>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   21d0 <ntfs_inode_update_times@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
and    $0xfffffffe,%edx
jmp    3ea3 <main+0x1853>
lea    0x0(%esi),%esi
cmp    $0x1,%edx
jne    3ea3 <main+0x1853>
mov    0x54(%eax),%ecx
cmp    0x44(%eax),%ecx
mov    0x50(%eax),%esi
jb     3ea3 <main+0x1853>
ja     3ed7 <main+0x1887>
cmp    0x40(%eax),%esi
jb     3ea3 <main+0x1853>
cmp    0x4c(%eax),%ecx
ja     3eaf <main+0x185f>
lea    0x0(%esi,%eiz,1),%esi
jb     3ea3 <main+0x1853>
cmp    0x48(%eax),%esi
jae    3eaf <main+0x185f>
jmp    3ea3 <main+0x1853>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xdc(%esp),%eax
call   38c0 <main+0x1270>
add    $0xaebc,%ebx
mov    0xd8(%esp),%esi
cmpl   $0x2,0xcc(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x2c(%esp)
je     3ffe <main+0x19ae>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc8(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   2220 <ntfs_ucstombs@plt>
test   %eax,%eax
js     40f4 <main+0x1aa4>
mov    0x3c(%esp),%ebp
mov    %ebp,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    4010 <main+0x19c0>
lea    0x40(%esp),%edx
mov    $0x18,%ecx
mov    %edx,%edi
rep stos %eax,%es:(%edi)
movzwl 0x2c(%esp),%eax
cmpl   $0xc,0xe0(%esp)
mov    %esi,0x98(%esp)
mov    %eax,0x9c(%esp)
ja     40d8 <main+0x1a88>
mov    0xe0(%esp),%eax
mov    -0x3498(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc000,0x50(%esp)
mov    0xc0(%esp),%esi
mov    0xc0(%esp),%eax
mov    0x4(%esi),%ecx
mov    (%eax),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,(%esp)
call   *%eax
mov    %eax,%edi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0xac,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
mov    %ebp,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
lea    -0x3d04(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33f6(%ebx),%eax
movl   $0x80,0xc(%esp)
movl   $0x3f6,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0xac,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa1ff,0x50(%esp)
jmp    3fc0 <main+0x1970>
lea    0x0(%esi),%esi
movl   $0x6000,0x50(%esp)
jmp    3fc0 <main+0x1970>
lea    0x0(%esi),%esi
mov    0x31c(%ebx),%eax
mov    0x10(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x40,%ah
mov    %eax,0x50(%esp)
jmp    3fc0 <main+0x1970>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2000,0x50(%esp)
jmp    3fc0 <main+0x1970>
lea    0x0(%esi),%esi
movl   $0x1000,0x50(%esp)
jmp    3fc0 <main+0x1970>
lea    0x0(%esi),%esi
mov    0x31c(%ebx),%eax
mov    0xc(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x80,%ah
mov    %eax,0x50(%esp)
jmp    3fc0 <main+0x1970>
movzwl 0x2c(%esp),%eax
mov    $0xffffffff,%edi
mov    %esi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x3d2c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33f6(%ebx),%eax
movl   $0x3ef,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    3ffe <main+0x19ae>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xac6b,%ebx
sub    $0x6c,%esp
mov    0x31c(%ebx),%eax
test   %eax,%eax
je     4199 <main+0x1b49>
mov    (%eax),%edx
test   %edx,%edx
je     4199 <main+0x1b49>
mov    0x64(%eax),%eax
test   %eax,%eax
jne    41f0 <main+0x1ba0>
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   1f20 <ntfs_umount@plt>
test   %eax,%eax
jne    41a8 <main+0x1b58>
mov    0x31c(%ebx),%eax
movl   $0x0,(%eax)
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x328(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xce2,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x415a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3464(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    418d <main+0x1b3d>
xchg   %ax,%ax
mov    0x4(%edx),%eax
lea    -0x4178(%ebx),%ebp
lea    -0x3464(%ebx),%edi
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x8,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x328(%ebx),%eax
movl   $0xcd1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x416e(%ebx),%eax
mov    %eax,0x14(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    %esi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
je     4261 <main+0x1c11>
mov    0x31c(%ebx),%eax
mov    0x84(%eax),%eax
test   %eax,%eax
je     4261 <main+0x1c11>
mov    0x8(%eax),%ecx
test   %ecx,%ecx
jne    4278 <main+0x1c28>
mov    %esi,(%esp)
call   21c0 <ntfs_close_secure@plt>
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
jmp    4179 <main+0x1b29>
xchg   %ax,%ax
mov    0xc(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x34(%esp)
mov    %eax,0x38(%esp)
imul   $0x3e8,%edx,%eax
xor    %edx,%edx
movl   $0x8,0xc(%esp)
movl   $0xcdb,0x8(%esp)
mov    %ebp,0x4(%esp)
div    %ecx
mov    $0xcccccccd,%edx
mov    %edi,(%esp)
mov    %eax,0x3c(%esp)
mul    %edx
shr    $0x3,%edx
lea    (%edx,%edx,4),%eax
mov    0x3c(%esp),%edx
add    %eax,%eax
sub    %eax,%edx
imul   $0x64,0x34(%esp),%eax
mov    %edx,0x24(%esp)
xor    %edx,%edx
div    %ecx
mov    %eax,0x20(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x3cb0(%ebx),%eax
mov    %eax,0x14(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    4261 <main+0x1c11>
lea    0x0(%esi,%eiz,1),%esi
jmp    4150 <main+0x1b00>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xaaab,%ebx
sub    $0x13c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
lea    -0x3398(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x4140(%ebx),%eax
mov    %eax,(%esp)
call   20f0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebp
je     43dc <main+0x1d8c>
lea    -0x412e(%ebx),%eax
xor    %edi,%edi
lea    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
jmp    4398 <main+0x1d48>
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1ee0 <strstr@plt>
test   %eax,%eax
jne    43d5 <main+0x1d85>
lea    -0x4125(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1ee0 <strstr@plt>
test   %eax,%eax
mov    $0x2,%eax
cmovne %eax,%edi
mov    %ebp,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   2000 <fgets@plt>
test   %eax,%eax
jne    4368 <main+0x1d18>
mov    %ebp,(%esp)
call   2010 <fclose@plt>
mov    %edi,%eax
mov    0x12c(%esp),%edx
xor    %gs:0x14,%edx
jne    441d <main+0x1dcd>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%edi
jmp    43b0 <main+0x1d60>
lea    -0x3c74(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33cc(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xdba,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    $0x1,%eax
jmp    43ba <main+0x1d6a>
call   ac00 <main+0x85b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xa98b,%ebx
sub    $0x4,%esp
call   23b0 <__errno_location@plt>
mov    (%eax),%edx
neg    %edx
mov    %edx,(%esi)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xa959,%ebx
sub    $0x6c,%esp
mov    %eax,(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     45e8 <main+0x1f98>
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     4600 <main+0x1fb0>
cmpl   $0x0,0x4(%eax)
jbe    4578 <main+0x1f28>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   2490 <strrchr@plt>
mov    %eax,%edx
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1(%edx),%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   2520 <ntfs_mbstoucs@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
mov    %eax,0x28(%esp)
js     4600 <main+0x1fb0>
mov    0x31c(%ebx),%eax
movb   $0x0,(%edx)
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     4680 <main+0x2030>
lea    0x40(%esp),%eax
mov    %eax,0x2c(%esp)
call   3be0 <main+0x1590>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     4618 <main+0x1fc8>
mov    0x2c(%esp),%eax
mov    %ebp,%edx
mov    %ecx,(%esp)
movl   $0x2c0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x24(%esp)
call   3c50 <main+0x1600>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    4618 <main+0x1fc8>
movl   $0xfffffff3,0x3c(%esp)
jmp    4596 <main+0x1f46>
nop
cmpl   $0xf,(%eax)
ja     44c6 <main+0x1e76>
call   23b0 <__errno_location@plt>
xor    %ecx,%ecx
movl   $0xffffffff,0x3c(%esp)
movl   $0x1,(%eax)
mov    %ecx,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     45ae <main+0x1f5e>
mov    0x3c(%esp),%edx
test   %edx,%edx
je     4670 <main+0x2020>
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     45c6 <main+0x1f76>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     4660 <main+0x2010>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %esi,(%esp)
call   1fb0 <free@plt>
mov    0x3c(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
xor    %ecx,%ecx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    4596 <main+0x1f46>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x28(%esp),%edx
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x14(%esp)
mov    0x38(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   2470 <ntfs_delete@plt>
test   %eax,%eax
je     4656 <main+0x2006>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
xor    %edi,%edi
xor    %ecx,%ecx
jmp    4596 <main+0x1f46>
nop
lea    0x3c(%esp),%eax
call   4430 <main+0x1de0>
jmp    45c6 <main+0x1f76>
xchg   %ax,%ax
lea    0x3c(%esp),%eax
call   4430 <main+0x1de0>
jmp    45ae <main+0x1f5e>
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
mov    0x24(%esp),%ecx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    4596 <main+0x1f46>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    46c0 <main+0x2070>
add    $0x8,%esp
mov    %esi,%eax
pop    %esi
jmp    4460 <main+0x1e10>
xchg   %ax,%ax
add    $0x8,%esp
mov    $0xffffffea,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0xa6eb,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edi
movl   $0x0,0x3c(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%esi
mov    0x18(%esi),%ebp
cmp    0x64(%esp),%ebp
jb     47d8 <main+0x2188>
mov    %edi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    47d8 <main+0x2188>
mov    %esi,(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     47c0 <main+0x2170>
mov    0x1f8(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     47e8 <main+0x2198>
movzwl 0xc(%eax),%eax
test   $0x40ff,%eax
je     4798 <main+0x2148>
movl   $0xffffffea,0x3c(%esp)
mov    %edi,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x3c(%esp),%eax
je     478b <main+0x213b>
test   %eax,%eax
je     47f8 <main+0x21a8>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x2,0x18(%edi)
je     4767 <main+0x2117>
mov    %edi,(%esp)
call   2480 <ntfs_attr_map_whole_runlist@plt>
test   %eax,%eax
je     4808 <main+0x21b8>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    476f <main+0x211f>
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4c,%esp
mov    $0xffffffea,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    4777 <main+0x2127>
nop
lea    0x3c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x3c(%esp),%eax
jmp    478b <main+0x213b>
nop
mov    %ebp,%eax
xor    %edx,%edx
mov    (%edi),%ebp
divl   0x64(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ecx
mov    %eax,0x18(%esp)
sar    $0x1f,%ecx
mov    %eax,0x20(%esp)
mov    0x68(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %ecx,0x24(%esp)
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   a8f0 <main+0x82a0>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   2020 <ntfs_rl_vcn_to_lcn@plt>
cmp    $0x0,%edx
mov    %eax,%ecx
mov    %edx,%ebp
jl     48ce <main+0x227e>
jle    48c9 <main+0x2279>
mov    0x18(%esp),%eax
imul   0x18(%esp),%ebp
cltd
mov    %edx,%eax
imul   %ecx,%eax
add    %eax,%ebp
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x68(%esp),%eax
mov    %edx,0x1c(%esp)
add    %ebp,0x1c(%esp)
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x2c(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x28(%esp)
mov    0x20(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   aa20 <main+0x83d0>
add    0x18(%esp),%eax
adc    0x1c(%esp),%edx
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    %edx,0x4(%ecx)
jmp    476f <main+0x211f>
cmp    $0x0,%eax
ja     485b <main+0x220b>
xor    %eax,%eax
xor    %edx,%edx
jmp    48bb <main+0x226b>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   38c0 <main+0x1270>
add    $0xa4d8,%ebx
mov    0x60(%esp),%edi
movl   $0x0,0x1c(%esp)
mov    %edi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
mov    %eax,%esi
jne    4a28 <main+0x23d8>
lea    0x20(%esp),%ebp
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    4940 <main+0x22f0>
mov    0x31c(%ebx),%eax
mov    0x44(%eax),%eax
test   %eax,%eax
mov    $0xffffffa1,%eax
cmove  %eax,%esi
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x40,0x8(%esp)
mov    %edi,%edx
mov    %ebp,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    4978 <main+0x2328>
call   23b0 <__errno_location@plt>
mov    (%eax),%esi
add    $0x4c,%esp
pop    %ebx
neg    %esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     4964 <main+0x2314>
testb  $0x7,0x64(%esp)
je     49f8 <main+0x23a8>
mov    0x64(%esp),%edx
and    $0x1,%edx
neg    %edx
and    $0x40,%edx
testb  $0x2,0x64(%esp)
lea    0x80(%edx),%eax
cmovne %eax,%edx
testb  $0x4,0x64(%esp)
lea    0x100(%edx),%eax
cmovne %eax,%edx
mov    0x20(%esp),%eax
testb  $0x1,0x90(%eax)
jne    49f8 <main+0x23a8>
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    49f8 <main+0x23a8>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
nop
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x1c(%esp),%esi
test   %eax,%eax
je     4931 <main+0x22e1>
test   %esi,%esi
jne    4931 <main+0x22e1>
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%esi
jmp    4931 <main+0x22e1>
xchg   %ax,%ax
mov    $0xffffffea,%esi
jmp    4931 <main+0x22e1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   38c0 <main+0x1270>
add    $0xa378,%ebx
mov    0x70(%esp),%esi
movl   $0x0,0x2c(%esp)
mov    0x74(%esp),%edi
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    4c98 <main+0x2648>
lea    0x30(%esp),%ebp
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    4b08 <main+0x24b8>
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     4b30 <main+0x24e0>
cmpl   $0x3ffffffe,0x4(%edi)
je     4b48 <main+0x24f8>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
jne    4b98 <main+0x2548>
cmpl   $0x3fffffff,0x4(%edi)
je     4b68 <main+0x2518>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     4afd <main+0x24ad>
test   %eax,%eax
je     4c80 <main+0x2630>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x40,0x8(%esp)
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    4a84 <main+0x2434>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3ffffffe,0xc(%edi)
je     4ae5 <main+0x2495>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
je     4acb <main+0x247b>
jmp    4b98 <main+0x2548>
nop
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
jne    4c70 <main+0x2620>
movl   $0x80,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
je     4ad8 <main+0x2488>
lea    0x0(%esi),%esi
mov    0x4(%edi),%ecx
cmp    $0x3fffffff,%ecx
je     4c70 <main+0x2620>
cmp    $0x3ffffffe,%ecx
mov    $0x4,%ebp
je     4bfd <main+0x25ad>
mov    $0x989680,%eax
imull  (%edi)
mov    %eax,0x18(%esp)
mov    %ecx,%eax
addl   $0xd53e8000,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    $0x51eb851f,%edx
adcl   $0x19db1de,0x1c(%esp)
imul   %edx
sar    $0x1f,%ecx
sar    $0x5,%edx
sub    %ecx,%edx
mov    %edx,%eax
cltd
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x50(%esi)
mov    %edx,0x54(%esi)
mov    0xc(%edi),%ecx
cmp    $0x3fffffff,%ecx
je     4c78 <main+0x2628>
cmp    $0x3ffffffe,%ecx
je     4c5a <main+0x260a>
mov    $0x989680,%eax
imull  0x8(%edi)
mov    %eax,0x18(%esp)
mov    %ecx,%eax
addl   $0xd53e8000,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    $0x51eb851f,%edx
adcl   $0x19db1de,0x1c(%esp)
imul   %edx
sar    $0x1f,%ecx
sar    $0x5,%edx
sub    %ecx,%edx
mov    %edx,%eax
cltd
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x40(%esi)
mov    %edx,0x44(%esi)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   21d0 <ntfs_inode_update_times@plt>
jmp    4ae5 <main+0x2495>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x5,%ebp
jmp    4bfd <main+0x25ad>
nop
or     $0x2,%ebp
jmp    4c5a <main+0x260a>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x2c(%esp),%eax
jmp    4afd <main+0x24ad>
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    4afd <main+0x24ad>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x48(%esp),%eax
call   38c0 <main+0x1270>
add    $0xa106,%ebx
mov    0x40(%esp),%edx
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,0x2c(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     4d68 <main+0x2718>
lea    -0xaed4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1f90 <ntfs_readdir@plt>
test   %eax,%eax
je     4d41 <main+0x26f1>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
mov    $0x1,%edx
mov    %esi,%eax
call   3e80 <main+0x1830>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     4d61 <main+0x2711>
test   %eax,%eax
je     4d78 <main+0x2728>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
neg    %eax
ret
nop
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   38c0 <main+0x1270>
add    $0xa028,%ebx
mov    0x60(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    4ef0 <main+0x28a0>
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     4e58 <main+0x2808>
lea    0x20(%esp),%ebp
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
je     4e34 <main+0x27e4>
mov    0x64(%esp),%eax
mov    $0x80,%ecx
mov    (%eax),%eax
test   $0x1,%al
je     4eb8 <main+0x2868>
cmpb   $0x2f,(%esi)
jne    4e70 <main+0x2820>
cmpb   $0x0,0x1(%esi)
jne    4e70 <main+0x2820>
or     $0x40,%ecx
mov    %esi,%edx
mov    %ecx,0x8(%esp)
mov    %ebp,%eax
mov    %edi,0x4(%esp)
mov    %edi,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
sete   %al
test   %al,%al
je     4e34 <main+0x27e4>
movl   $0xfffffff3,0x1c(%esp)
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     4e4c <main+0x27fc>
test   %eax,%eax
je     4ed8 <main+0x2888>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0xc(%esp)
call   3c50 <main+0x1600>
mov    $0x1,%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
je     4eac <main+0x285c>
mov    0x20(%esp),%eax
xor    %edx,%edx
testb  $0x1,0x90(%eax)
je     4f00 <main+0x28b0>
mov    %edx,%eax
jmp    4e28 <main+0x27d8>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%eax
cmp    $0x1,%eax
sbb    %ecx,%ecx
and    $0xffffff80,%ecx
add    $0x180,%ecx
cmpb   $0x2f,(%esi)
jne    4e70 <main+0x2820>
jmp    4e06 <main+0x27b6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%eax
jmp    4e4c <main+0x27fc>
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    4e4c <main+0x27fc>
lea    0x0(%esi),%esi
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
sete   %dl
mov    %edx,%eax
jmp    4e28 <main+0x27d8>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x9e9c,%ebx
sub    $0x50,%esp
lea    0x30(%esp),%edi
mov    0x60(%esp),%esi
mov    %edi,%eax
movl   $0x0,0x2c(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
je     4f74 <main+0x2924>
movl   $0x40,0x8(%esp)
mov    %esi,%edx
mov    %edi,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
je     5030 <main+0x29e0>
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     5030 <main+0x29e0>
testl  $0x404,0x14(%eax)
je     4fc8 <main+0x2978>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     4fbb <main+0x296b>
test   %eax,%eax
je     5070 <main+0x2a20>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
je     5040 <main+0x29f0>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   2580 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     5088 <main+0x2a38>
mov    0x31c(%ebx),%eax
mov    0x14(%eax),%eax
lea    -0x1(%eax),%edx
cmp    $0x1,%edx
jbe    50a0 <main+0x2a50>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
je     5016 <main+0x29c6>
neg    %eax
mov    %eax,0x2c(%esp)
mov    %edi,(%esp)
call   2300 <ntfs_attr_put_search_ctx@plt>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
jne    4fb3 <main+0x2963>
jmp    4fbb <main+0x296b>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
ret
movl   $0x100,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    4fd5 <main+0x2985>
movl   $0xfffffff3,0x2c(%esp)
jmp    4fa3 <main+0x2953>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x2c(%esp),%eax
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    4fa3 <main+0x2953>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x10(%esp)
mov    0x68(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x8(%esp)
call   a4a0 <main+0x7e50>
test   %eax,%eax
mov    %eax,0x2c(%esp)
jns    5004 <main+0x29b4>
jmp    5016 <main+0x29c6>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x9cdc,%ebx
sub    $0x40,%esp
mov    0x50(%esp),%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
mov    %eax,%esi
jne    5198 <main+0x2b48>
lea    0x20(%esp),%edi
mov    %edi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    5140 <main+0x2af0>
mov    0x31c(%ebx),%eax
mov    0x44(%eax),%edx
test   %edx,%edx
jne    5156 <main+0x2b06>
mov    0x54(%esp),%ecx
cmp    %ecx,0x4(%eax)
jne    5132 <main+0x2ae2>
mov    0x58(%esp),%edx
cmp    %edx,0x8(%eax)
je     5156 <main+0x2b06>
mov    $0xffffffa1,%esi
jmp    5156 <main+0x2b06>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x54(%esp)
movl   $0x0,0x1c(%esp)
jne    5160 <main+0x2b10>
cmpl   $0xffffffff,0x58(%esp)
jne    5160 <main+0x2b10>
add    $0x40,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x50(%esp),%edx
mov    %edi,%eax
movl   $0x40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    51a0 <main+0x2b50>
call   23b0 <__errno_location@plt>
mov    (%eax),%esi
add    $0x40,%esp
pop    %ebx
neg    %esi
mov    %esi,%eax
pop    %esi
pop    %edi
ret
mov    $0xffffffea,%esi
jmp    5156 <main+0x2b06>
nop
mov    0x31c(%ebx),%eax
mov    0x50(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     5186 <main+0x2b36>
mov    0x58(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x8(%esp)
call   2120 <ntfs_set_owner@plt>
test   %eax,%eax
je     5221 <main+0x2bd1>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x1c(%esp),%esi
test   %eax,%eax
je     5156 <main+0x2b06>
test   %esi,%esi
jne    5156 <main+0x2b06>
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%esi
jmp    5156 <main+0x2b06>
mov    $0x4,%edx
mov    %esi,%eax
call   3e80 <main+0x1830>
jmp    51f3 <main+0x2ba3>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   38c0 <main+0x1270>
add    $0x9b88,%ebx
mov    0x60(%esp),%edi
movl   $0x0,0x1c(%esp)
mov    %edi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
mov    %eax,%esi
jne    5348 <main+0x2cf8>
lea    0x20(%esp),%ebp
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    5290 <main+0x2c40>
mov    0x31c(%ebx),%eax
mov    0x44(%eax),%eax
test   %eax,%eax
mov    $0xffffffa1,%eax
cmove  %eax,%esi
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x40,0x8(%esp)
mov    %edi,%edx
mov    %ebp,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    52c8 <main+0x2c78>
call   23b0 <__errno_location@plt>
mov    (%eax),%esi
add    $0x4c,%esp
pop    %ebx
neg    %esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     52b4 <main+0x2c64>
mov    0x64(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   24f0 <ntfs_set_mode@plt>
test   %eax,%eax
je     5358 <main+0x2d08>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
orl    $0x1,0x10(%esi)
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x1c(%esp),%esi
test   %eax,%eax
je     5281 <main+0x2c31>
test   %esi,%esi
jne    5281 <main+0x2c31>
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%esi
jmp    5281 <main+0x2c31>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%esi
jmp    5281 <main+0x2c31>
lea    0x0(%esi),%esi
mov    $0x4,%edx
mov    %esi,%eax
call   3e80 <main+0x1830>
jmp    530f <main+0x2cbf>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x9a4b,%ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
movl   $0x0,0x28(%esp)
mov    0x74(%esp),%esi
movl   $0x0,0x2c(%esp)
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    55e0 <main+0x2f90>
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    55e0 <main+0x2f90>
mov    %esi,(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     5580 <main+0x2f30>
mov    0x31c(%ebx),%eax
mov    0x70(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     5520 <main+0x2ed0>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   2490 <strrchr@plt>
mov    %eax,%ebp
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1(%ebp),%eax
mov    %eax,(%esp)
call   2520 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
js     5520 <main+0x2ed0>
mov    0x31c(%ebx),%eax
mov    0x34(%eax),%ecx
test   %ecx,%ecx
je     5452 <main+0x2e02>
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   20c0 <ntfs_forbidden_chars@plt>
test   %eax,%eax
jne    5520 <main+0x2ed0>
mov    0x31c(%ebx),%eax
movb   $0x0,0x0(%ebp)
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     55c9 <main+0x2f79>
mov    %esi,(%esp)
call   22f0 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   2590 <strncmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    54ac <main+0x2e5c>
mov    0x70(%esp),%eax
cmpb   $0x2f,(%eax,%edx,1)
je     5591 <main+0x2f41>
lea    0x30(%esp),%eax
mov    %eax,0x1c(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
je     55a8 <main+0x2f58>
mov    0x70(%esp),%edx
mov    0x1c(%esp),%eax
movl   $0xc0,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
je     5516 <main+0x2ec6>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
jne    55a8 <main+0x2f58>
mov    0x1c(%esp),%eax
movl   $0xc0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    55a8 <main+0x2f58>
movl   $0xfffffff3,0x2c(%esp)
jmp    552f <main+0x2edf>
call   23b0 <__errno_location@plt>
xor    %ebp,%ebp
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     5547 <main+0x2ef7>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     5628 <main+0x2fd8>
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     555f <main+0x2f0f>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     5618 <main+0x2fc8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %esi,(%esp)
call   1fb0 <free@plt>
mov    0x2c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x30(%esp),%eax
mov    %eax,0x1c(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
jne    54e5 <main+0x2e95>
xchg   %ax,%ax
movzbl 0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
call   1f60 <ntfs_link@plt>
test   %eax,%eax
je     55f0 <main+0x2fa0>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    552f <main+0x2edf>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
mov    $0xffffffea,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
orl    $0x20,0x14(%edi)
mov    %edi,%eax
mov    $0x4,%edx
call   3e80 <main+0x1830>
mov    $0x6,%edx
mov    %ebp,%eax
call   3e80 <main+0x1830>
jmp    552f <main+0x2edf>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
jmp    555f <main+0x2f0f>
xchg   %ax,%ax
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
jmp    5547 <main+0x2ef7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x977c,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     56a8 <main+0x3058>
movl   $0x2f,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   2490 <strrchr@plt>
test   %eax,%eax
je     5696 <main+0x3046>
movb   $0x0,(%eax)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
mov    %eax,%edi
mov    %esi,(%esp)
call   1fb0 <free@plt>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   23b0 <__errno_location@plt>
xor    %edi,%edi
movl   $0xc,(%eax)
jmp    569e <main+0x304e>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   38c0 <main+0x1270>
add    $0x96f2,%ebx
cmp    $0x4,%edx
movl   $0x0,(%eax)
jg     5790 <main+0x3140>
cmp    $0x2,%edx
jge    5718 <main+0x30c8>
cmp    $0x1,%edx
jne    57b0 <main+0x3160>
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2d1c(%ebx),%eax
mov    (%eax),%ecx
add    %esi,%ecx
mov    %ecx,(%esp)
call   2520 <ntfs_mbstoucs@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x2d12(%ebx),%eax
mov    %eax,(%esp)
call   22f0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
call   22f0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   1fa0 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     57b0 <main+0x3160>
lea    -0x2d12(%ebx),%eax
mov    %ebp,0x8(%esp)
add    %edi,%ebp
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1fe0 <memcpy@plt>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2160 <strcpy@plt>
mov    0x30(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2520 <ntfs_mbstoucs@plt>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   1fb0 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x5,%edx
jne    57b0 <main+0x3160>
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2520 <ntfs_mbstoucs@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x95f9,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
mov    0x30(%esp),%edi
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     583b <main+0x31eb>
mov    0x31c(%ebx),%eax
cmpl   $0x3,0x14(%eax)
je     5808 <main+0x31b8>
mov    0x1f8(%ebx),%eax
mov    %esi,0x0(%ebp)
mov    %eax,(%edi)
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   22c0 <strchr@plt>
test   %eax,%eax
je     57f2 <main+0x31a2>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %esi,0x0(%ebp)
movl   $0x0,(%edi)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2520 <ntfs_mbstoucs@plt>
test   %eax,%eax
jns    57ff <main+0x31af>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x956b,%ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edi
lea    0x3c(%esp),%ecx
mov    0x84(%esp),%ebp
lea    0x38(%esp),%edx
mov    %ecx,(%esp)
movl   $0x0,0x38(%esp)
mov    %edi,0x20(%esp)
mov    %ebp,0x24(%esp)
call   57c0 <main+0x3170>
mov    %eax,%esi
test   %esi,%esi
js     59f3 <main+0x33a3>
mov    0x31c(%ebx),%eax
mov    0x38(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     5a68 <main+0x3418>
cmpl   $0x0,0x4(%eax)
jbe    59a0 <main+0x3350>
mov    0x3c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     5990 <main+0x3340>
lea    0x40(%esp),%eax
mov    %eax,0x28(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
jne    5a88 <main+0x3438>
mov    0x24(%ebp),%eax
cmpb   $0x0,0xc(%ebp)
mov    %eax,0x28(%esp)
mov    0x28(%ebp),%eax
mov    %eax,0x2c(%esp)
je     5a00 <main+0x33b0>
mov    0x24(%esp),%eax
cmp    %eax,0x30(%ebp)
jg     5a00 <main+0x33b0>
jl     593d <main+0x32ed>
mov    0x20(%esp),%eax
cmp    %eax,0x2c(%ebp)
jae    5a00 <main+0x33b0>
lea    0x34(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movb   $0x0,0x34(%esp)
call   1f30 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jl     5990 <main+0x3340>
jg     5a20 <main+0x33d0>
cmp    $0x0,%eax
ja     5a20 <main+0x33d0>
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    59bb <main+0x336b>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xf,(%eax)
ja     58ce <main+0x327e>
call   23b0 <__errno_location@plt>
xor    %ebp,%ebp
movl   $0x1,(%eax)
mov    $0xffffffff,%eax
mov    %ebp,(%esp)
mov    %eax,0x34(%esp)
call   2240 <ntfs_attr_close@plt>
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     59df <main+0x338f>
mov    0x34(%esp),%eax
test   %eax,%eax
je     5a78 <main+0x3428>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
jne    5a58 <main+0x3408>
mov    0x34(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   2090 <ntfs_attr_truncate@plt>
test   %eax,%eax
jne    5990 <main+0x3340>
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
xor    0x24(%esp),%edx
xor    0x20(%esp),%eax
or     %eax,%edx
je     5a38 <main+0x33e8>
orl    $0x20,0x14(%edi)
mov    0x4(%ebp),%eax
mov    $0x6,%edx
call   3e80 <main+0x1830>
call   23b0 <__errno_location@plt>
movl   $0x0,(%eax)
xor    %eax,%eax
jmp    59bb <main+0x336b>
nop
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    59ef <main+0x339f>
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
xor    %ebp,%ebp
mov    (%eax),%eax
neg    %eax
jmp    59bb <main+0x336b>
lea    0x34(%esp),%eax
call   4430 <main+0x1de0>
jmp    59df <main+0x338f>
xchg   %ax,%ax
mov    0x38(%esp),%edx
mov    0x28(%esp),%eax
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    5ac8 <main+0x3478>
call   23b0 <__errno_location@plt>
movl   $0xd,(%eax)
mov    $0xfffffff3,%eax
jmp    59bb <main+0x336b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x88(%esp),%edx
test   %edx,%edx
je     5909 <main+0x32b9>
mov    0x40(%esp),%eax
testb  $0x1,0x90(%eax)
jne    5909 <main+0x32b9>
mov    0x28(%esp),%eax
movl   $0x80,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
je     5aac <main+0x345c>
jmp    5909 <main+0x32b9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
mov    0x4(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
jmp    5850 <main+0x3200>
jmp    5b40 <main+0x34f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
mov    0x4(%esp),%eax
movl   $0x1,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
jmp    5850 <main+0x3200>
jmp    5b70 <main+0x3520>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   38c0 <main+0x1270>
add    $0x9248,%ebx
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
mov    0x70(%esp),%eax
lea    0x28(%esp),%edx
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
call   57c0 <main+0x3170>
mov    %eax,%esi
test   %esi,%esi
js     5cf8 <main+0x36a8>
mov    0x31c(%ebx),%eax
mov    0x28(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     5d00 <main+0x36b0>
mov    0x2c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     5d50 <main+0x3700>
lea    0x30(%esp),%eax
mov    %eax,0x18(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
je     5c72 <main+0x3622>
mov    0x74(%esp),%eax
mov    $0x80,%ecx
mov    (%eax),%eax
test   $0x1,%al
jne    5c31 <main+0x35e1>
and    $0x2,%eax
cmp    $0x1,%eax
sbb    %ecx,%ecx
and    $0xffffff80,%ecx
add    $0x180,%ecx
mov    0x28(%esp),%edx
mov    0x18(%esp),%eax
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   3c50 <main+0x1600>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     5d88 <main+0x3738>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
je     5d68 <main+0x3718>
mov    0x24(%esp),%eax
test   %eax,%eax
js     5cc8 <main+0x3678>
mov    0x74(%esp),%eax
testb  $0x3,(%eax)
je     5cc8 <main+0x3678>
movzwl 0xc(%ebp),%edx
test   %dl,%dl
je     5c93 <main+0x3643>
orl    $0x1,0x10(%eax)
orl    $0x0,0x14(%eax)
mov    0x31c(%ebx),%eax
mov    0x68(%eax),%ecx
test   %ecx,%ecx
je     5ca9 <main+0x3659>
and    $0x40,%dh
je     5d98 <main+0x3748>
mov    0x20(%eax),%edx
or     0x1c(%eax),%edx
je     5cbd <main+0x366d>
mov    0x74(%esp),%eax
orl    $0x4,0x10(%eax)
orl    $0x0,0x14(%eax)
cmpl   $0x0,0x4(%edi)
ja     5cc8 <main+0x3678>
cmpl   $0xf,(%edi)
jbe    5d40 <main+0x36f0>
mov    %ebp,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     5ce4 <main+0x3694>
mov    0x24(%esp),%eax
test   %eax,%eax
je     5d30 <main+0x36e0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
jne    5d1d <main+0x36cd>
mov    0x24(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
je     5cf4 <main+0x36a4>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    5cf4 <main+0x36a4>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
call   4430 <main+0x1de0>
jmp    5ce4 <main+0x3694>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x24(%esp)
jmp    5cc8 <main+0x3678>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x24(%esp)
jmp    5cd0 <main+0x3680>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    5c72 <main+0x3622>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffffff3,0x24(%esp)
jmp    5cc8 <main+0x3678>
lea    0x0(%esi),%esi
testb  $0x40,0x15(%edi)
je     5ca9 <main+0x3659>
mov    0x74(%esp),%ecx
orl    $0x2,0x10(%ecx)
orl    $0x0,0x14(%ecx)
jmp    5ca9 <main+0x3659>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x8ff9,%ebx
sub    $0x8c,%esp
mov    %edx,0x28(%esp)
mov    0xa0(%esp),%eax
mov    0xa4(%esp),%edx
mov    %edi,(%esp)
movl   $0x0,0x44(%esp)
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x5c(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     60a0 <main+0x3a50>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   2490 <strrchr@plt>
mov    %eax,%ebp
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1(%ebp),%eax
mov    %eax,(%esp)
call   2520 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     6044 <main+0x39f4>
mov    0x31c(%ebx),%eax
mov    0x34(%eax),%ecx
test   %ecx,%ecx
jne    6028 <main+0x39d8>
lea    0x58(%esp),%eax
mov    %eax,(%esp)
lea    0x4c(%esp),%edx
mov    %edi,%eax
call   57c0 <main+0x3170>
test   %eax,%eax
js     60b8 <main+0x3a68>
mov    0x31c(%ebx),%eax
movb   $0x0,0x0(%ebp)
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     61f8 <main+0x3ba8>
lea    0x60(%esp),%eax
mov    %eax,0x38(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
jne    6108 <main+0x3ab8>
mov    0x28(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     6240 <main+0x3bf0>
mov    0x31c(%ebx),%ecx
mov    0xc(%ecx),%ebp
not    %ebp
and    $0x1ff,%ebp
and    0x28(%esp),%ebp
mov    0x8c(%ecx),%edx
test   %edx,%edx
je     62c0 <main+0x3c70>
mov    0x74(%ecx),%edx
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
test   %edx,%edx
je     60d0 <main+0x3a80>
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2530 <ntfs_inherited_id@plt>
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
and    $0xfffff000,%eax
cmp    $0x6000,%eax
je     61a0 <main+0x3b50>
cmp    $0xa000,%eax
je     6148 <main+0x3af8>
cmp    $0x2000,%eax
je     61a0 <main+0x3b50>
mov    %eax,0x10(%esp)
movzbl 0x2c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   2620 <ntfs_create@plt>
mov    %eax,%ecx
test   %ecx,%ecx
je     6130 <main+0x3ae0>
mov    0x31c(%ebx),%eax
mov    0x8c(%eax),%eax
test   %eax,%eax
je     5f90 <main+0x3940>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     6268 <main+0x3c18>
mov    0x14(%ecx),%edx
mov    %edx,%eax
or     $0x20,%eax
mov    %eax,0x14(%ecx)
mov    0xac(%esp),%eax
test   %eax,%eax
je     5fe7 <main+0x3997>
test   $0x8,%dh
je     5fba <main+0x396a>
mov    0xac(%esp),%eax
orl    $0x1,0x10(%eax)
orl    $0x0,0x14(%eax)
mov    0x31c(%ebx),%eax
mov    0x68(%eax),%ebp
test   %ebp,%ebp
je     5fdb <main+0x398b>
and    $0x40,%dh
je     5fdb <main+0x398b>
mov    0xac(%esp),%edx
orl    $0x2,0x10(%edx)
orl    $0x0,0x14(%edx)
mov    0x20(%eax),%edx
or     0x1c(%eax),%edx
jne    61e0 <main+0x3b90>
orl    $0x1,0x10(%ecx)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   1f10 <ntfs_inode_close_in_dir@plt>
test   %eax,%eax
je     6007 <main+0x39b7>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     6230 <main+0x3be0>
mov    $0x6,%edx
mov    %edi,%eax
call   3e80 <main+0x1830>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    6053 <main+0x3a03>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   20c0 <ntfs_forbidden_chars@plt>
test   %eax,%eax
je     5e5d <main+0x380d>
call   23b0 <__errno_location@plt>
xor    %edi,%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x5c(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     6073 <main+0x3a23>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     60c0 <main+0x3a70>
mov    0x48(%esp),%eax
test   %eax,%eax
je     6083 <main+0x3a33>
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %esi,(%esp)
call   1fb0 <free@plt>
mov    0x5c(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x5c(%esp)
xor    %edi,%edi
jmp    6053 <main+0x3a03>
lea    0x5c(%esp),%eax
call   4430 <main+0x1de0>
jmp    6073 <main+0x3a23>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   2070 <ntfs_alloc_securid@plt>
mov    %eax,0x3c(%esp)
jmp    5f1b <main+0x38cb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x54(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1f70 <ntfs_allowed_create@plt>
test   %eax,%eax
jne    5eb6 <main+0x3866>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x5c(%esp)
jmp    6013 <main+0x39c3>
lea    0x0(%esi),%esi
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   2520 <ntfs_mbstoucs@plt>
test   %eax,%eax
js     6218 <main+0x3bc8>
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
movzbl 0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   2370 <ntfs_create_symlink@plt>
mov    %eax,%ecx
jmp    5f6c <main+0x391c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x10(%esp)
movzbl 0x2c(%esp),%eax
mov    0x34(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   1f40 <ntfs_create_device@plt>
mov    %eax,%ecx
jmp    5f6c <main+0x391c>
lea    0x0(%esi,%eiz,1),%esi
mov    0xac(%esp),%eax
orl    $0x4,0x10(%eax)
orl    $0x0,0x14(%eax)
jmp    5fe7 <main+0x3997>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x5c(%esp)
jmp    6053 <main+0x3a03>
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x5c(%esp)
jmp    6053 <main+0x3a03>
lea    0x0(%esi),%esi
lea    0x5c(%esp),%eax
call   4430 <main+0x1de0>
jmp    6007 <main+0x39b7>
xchg   %ax,%ax
mov    0x31c(%ebx),%ecx
mov    0x54(%esp),%edx
mov    0x10(%ecx),%ebp
and    $0x400,%edx
not    %ebp
and    $0x1ff,%ebp
and    0x28(%esp),%ebp
or     %edx,%ebp
jmp    5edf <main+0x388f>
xchg   %ax,%ax
mov    0x50(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x70(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   2230 <ntfs_set_inherited_posix@plt>
mov    0x28(%esp),%ecx
test   %eax,%eax
jns    5f90 <main+0x3940>
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    5f90 <main+0x3940>
lea    0x5c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x28(%esp),%ecx
jmp    5f90 <main+0x3940>
xchg   %ax,%ax
movl   $0x0,0x3c(%esp)
jmp    5f1b <main+0x38cb>
lea    0x0(%esi),%esi
push   %esi
sub    $0x18,%esp
mov    0x24(%esp),%esi
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    6318 <main+0x3cc8>
mov    0x20(%esp),%eax
mov    $0xa000,%edx
movl   $0x0,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,%eax
call   5dc0 <main+0x3770>
add    $0x18,%esp
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    630e <main+0x3cbe>
nop
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    %esi,%eax
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    6370 <main+0x3d20>
mov    0x24(%esp),%edx
mov    %esi,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
and    $0xfff,%edx
or     $0x40,%dh
movl   $0x0,0x4(%esp)
call   5dc0 <main+0x3770>
add    $0x18,%esp
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    6366 <main+0x3d16>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x8a37,%ebx
sub    $0x3c,%esp
movl   $0x0,0x2c(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     6490 <main+0x3e40>
movzbl 0x50(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
call   1ec0 <ntfs_attr_add@plt>
test   %eax,%eax
jne    6438 <main+0x3de8>
orl    $0x20,0x14(%esi)
mov    0x2c(%esp),%eax
test   %eax,%eax
js     6411 <main+0x3dc1>
mov    0x54(%esp),%ecx
test   %ecx,%ecx
jne    6448 <main+0x3df8>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     6429 <main+0x3dd9>
test   %eax,%eax
je     64e0 <main+0x3e90>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    6405 <main+0x3db5>
nop
mov    0x54(%esp),%eax
testb  $0x3,(%eax)
je     6411 <main+0x3dc1>
mov    0x14(%esi),%ecx
test   $0x8,%ch
je     6461 <main+0x3e11>
orl    $0x1,0x10(%eax)
orl    $0x0,0x14(%eax)
mov    0x31c(%ebx),%eax
mov    0x68(%eax),%edx
test   %edx,%edx
je     6477 <main+0x3e27>
and    $0x40,%ch
jne    64f8 <main+0x3ea8>
mov    0x20(%eax),%ecx
or     0x1c(%eax),%ecx
je     6411 <main+0x3dc1>
mov    0x54(%esp),%eax
orl    $0x4,0x10(%eax)
orl    $0x0,0x14(%eax)
jmp    6411 <main+0x3dc1>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
neg    %eax
cmp    $0xfffffffe,%eax
mov    %eax,0x2c(%esp)
jne    6429 <main+0x3dd9>
movl   $0x0,0xc(%esp)
mov    $0x8000,%edx
mov    %edi,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   5dc0 <main+0x3770>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     6510 <main+0x3ec0>
mov    (%esi),%eax
neg    %eax
jmp    6429 <main+0x3dd9>
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%edx
orl    $0x2,0x10(%edx)
orl    $0x0,0x14(%edx)
jmp    6477 <main+0x3e27>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %ebp,%edx
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   6380 <main+0x3d30>
jmp    6429 <main+0x3dd9>
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x8889,%ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%ecx
mov    0x50(%esp),%esi
lea    0x28(%esp),%edx
mov    0x54(%esp),%edi
mov    %ecx,(%esp)
movl   $0x0,0x28(%esp)
call   57c0 <main+0x3170>
test   %eax,%eax
mov    %eax,%edx
js     6599 <main+0x3f49>
je     65a8 <main+0x3f58>
and    $0xf000,%ebp
cmp    $0x8000,%ebp
je     65e8 <main+0x3f98>
mov    $0xffffffea,%esi
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   1fb0 <free@plt>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   1fb0 <free@plt>
mov    %esi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movzwl %bp,%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
call   5dc0 <main+0x3770>
mov    %eax,%esi
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x31c(%ebx),%eax
mov    0x34(%eax),%eax
test   %eax,%eax
jne    6618 <main+0x3fc8>
mov    0x58(%esp),%eax
mov    %edx,(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
call   6380 <main+0x3d30>
mov    %eax,%esi
jmp    657f <main+0x3f2f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   20c0 <ntfs_forbidden_chars@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    657a <main+0x3f2a>
jmp    65f5 <main+0x3fa5>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
jmp    6530 <main+0x3ee0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
mov    0xc(%esp),%eax
mov    0x10(%esp),%edx
movl   $0x0,0x14(%esp)
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
pop    %esi
pop    %edi
jmp    6530 <main+0x3ee0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   38c0 <main+0x1270>
add    $0x8728,%ebx
lea    0x18(%esp),%eax
mov    %eax,(%esp)
mov    0x60(%esp),%eax
lea    0x14(%esp),%edx
movl   $0x0,0x14(%esp)
call   57c0 <main+0x3170>
test   %eax,%eax
mov    %eax,%esi
js     6792 <main+0x4142>
je     67a0 <main+0x4150>
lea    0x20(%esp),%edi
mov    %edi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
je     6707 <main+0x40b7>
mov    0x14(%esp),%edx
mov    %edi,%eax
movl   $0x2c0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
je     67c8 <main+0x4178>
mov    0x31c(%ebx),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ebp
movl   $0x0,0x1c(%esp)
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     67c8 <main+0x4178>
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   2630 <ntfs_attr_remove@plt>
test   %eax,%eax
je     6766 <main+0x4116>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x1c(%esp),%esi
test   %eax,%eax
je     677a <main+0x412a>
test   %esi,%esi
je     67d8 <main+0x4188>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
call   4460 <main+0x1e10>
mov    %eax,%esi
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    677a <main+0x412a>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%esi
jmp    677a <main+0x412a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x98(%esp),%esi
call   38c0 <main+0x1270>
add    $0x85bf,%ebx
mov    0x9c(%esp),%edi
mov    0xa0(%esp),%ebp
movl   $0x0,0x64(%esp)
test   %esi,%esi
jne    6830 <main+0x41e0>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x68(%esp),%eax
mov    %eax,(%esp)
mov    0x90(%esp),%eax
lea    0x64(%esp),%edx
call   57c0 <main+0x3170>
mov    %eax,%ecx
test   %ecx,%ecx
mov    %eax,0x54(%esp)
js     6825 <main+0x41d5>
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
mov    0x64(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     6a50 <main+0x4400>
mov    0x54(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x50(%esp)
je     6a50 <main+0x4400>
mov    0x31c(%ebx),%ecx
mov    0x50(%esp),%eax
mov    0x68(%ecx),%ecx
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
test   %ecx,%ecx
mov    %edx,0x44(%esp)
mov    %eax,0x40(%esp)
je     6918 <main+0x42c8>
mov    %edx,%ecx
mov    %eax,%edx
mov    %ecx,%eax
or     %edx,%eax
je     6918 <main+0x42c8>
mov    0x50(%esp),%eax
testb  $0x40,0xd(%eax)
je     6918 <main+0x42c8>
testb  $0x2,0x18(%eax)
je     6918 <main+0x42c8>
mov    %edx,%eax
mov    %ecx,%edx
add    $0x1ff,%eax
mov    %eax,0x38(%esp)
mov    0x38(%esp),%ecx
adc    $0x0,%edx
mov    %edx,0x3c(%esp)
mov    0x3c(%esp),%edx
and    $0xfffffe00,%ecx
mov    %ecx,%eax
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x40(%esp)
mov    %edx,0x44(%esp)
mov    %esi,%eax
xor    %edx,%edx
add    %edi,%eax
mov    %edx,0x3c(%esp)
adc    %ebp,%edx
cmp    %edx,0x44(%esp)
mov    %esi,0x38(%esp)
jl     6b02 <main+0x44b2>
jle    6af8 <main+0x44a8>
lea    -0x3c50(%ebx),%eax
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
mov    %eax,0x58(%esp)
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
add    0x94(%esp),%eax
mov    0x50(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %edi,0x48(%esp)
mov    %ebp,0x4c(%esp)
mov    %esi,%ebp
call   2350 <ntfs_attr_pread@plt>
mov    0x48(%esp),%edi
mov    %edx,%ecx
mov    %eax,%edx
xor    %edx,%ebp
or     %ecx,%ebp
mov    0x4c(%esp),%ebp
je     6aa8 <main+0x4458>
mov    0x38(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %edx,0x48(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x30(%esp)
mov    %eax,0x24(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x1c(%esp)
mov    %edx,0x28(%esp)
mov    %ebp,0x20(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x4ea,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3405(%ebx),%eax
mov    %eax,(%esp)
mov    %ecx,0x4c(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
cmp    $0x0,%ecx
jl     6ad9 <main+0x4489>
jle    6ad0 <main+0x4480>
cmp    %ecx,0x3c(%esp)
jge    6aa0 <main+0x4450>
mov    $0xfffffffb,%eax
mov    %eax,0x6c(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    6a5d <main+0x440d>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x6c(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     6a79 <main+0x4429>
mov    0x6c(%esp),%edx
test   %edx,%edx
je     6b70 <main+0x4520>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x54(%esp),%eax
test   %eax,%eax
jne    6b50 <main+0x4500>
mov    0x6c(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     6aa8 <main+0x4458>
cmp    %edx,0x38(%esp)
jb     6a33 <main+0x43e3>
add    %edx,%edi
adc    %ecx,%ebp
add    %edx,0x40(%esp)
adc    %ecx,0x44(%esp)
sub    %edx,%esi
je     6b80 <main+0x4530>
mov    %esi,0x38(%esp)
movl   $0x0,0x3c(%esp)
jmp    6958 <main+0x4308>
lea    0x0(%esi),%esi
cmp    $0x0,%edx
ja     6a2d <main+0x43dd>
mov    %ecx,%esi
mov    $0xfffffffb,%eax
or     %edx,%esi
je     6a38 <main+0x43e8>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    6a38 <main+0x43e8>
xchg   %ax,%ax
cmp    %eax,0x40(%esp)
jae    6938 <main+0x42e8>
cmp    %ebp,0x44(%esp)
jl     6b68 <main+0x4518>
jg     6b12 <main+0x44c2>
cmp    %edi,0x40(%esp)
xchg   %ax,%ax
jb     6b68 <main+0x4518>
mov    0x40(%esp),%esi
movl   $0x0,0x3c(%esp)
sub    %edi,%esi
test   %esi,%esi
mov    %esi,0x38(%esp)
jne    6938 <main+0x42e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    $0x1,%edx
mov    0x4(%eax),%eax
call   3e80 <main+0x1830>
mov    %esi,0x6c(%esp)
jmp    6a3c <main+0x43ec>
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    6a91 <main+0x4441>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    6b30 <main+0x44e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x6c(%esp),%eax
call   4430 <main+0x1de0>
jmp    6a79 <main+0x4429>
xchg   %ax,%ax
mov    0x40(%esp),%esi
jmp    6b30 <main+0x44e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   38c0 <main+0x1270>
add    $0x8222,%ebx
movl   $0x0,0x24(%esp)
testb  $0x7,0x10(%esi)
jne    6bc0 <main+0x4570>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x50(%esp),%eax
lea    0x24(%esp),%edx
call   57c0 <main+0x3170>
mov    %eax,%edi
test   %edi,%edi
js     6bb6 <main+0x4566>
mov    0x31c(%ebx),%eax
mov    0x24(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     6c90 <main+0x4640>
mov    0x28(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     6c90 <main+0x4640>
mov    0x10(%esi),%edx
movl   $0x0,0x2c(%esp)
test   $0x4,%dl
jne    6ca0 <main+0x4650>
test   $0x1,%dl
jne    6cf0 <main+0x46a0>
and    $0x2,%edx
jne    6cc8 <main+0x4678>
mov    %ecx,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     6c68 <main+0x4618>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     6d10 <main+0x46c0>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %edi,%edi
je     6c84 <main+0x4634>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    6c50 <main+0x4600>
nop
mov    0x4(%eax),%eax
movl   $0x6,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   21d0 <ntfs_inode_update_times@plt>
mov    0x10(%esi),%edx
mov    0x1c(%esp),%ecx
jmp    6c36 <main+0x45e6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   2170 <ntfs_efs_fixup_attribute@plt>
mov    0x1c(%esp),%ecx
mov    %eax,0x2c(%esp)
jmp    6c48 <main+0x45f8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
mov    %ecx,0x1c(%esp)
call   23d0 <ntfs_attr_pclose@plt>
mov    0x10(%esi),%edx
mov    0x1c(%esp),%ecx
mov    %eax,0x2c(%esp)
jmp    6c3f <main+0x45ef>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
jmp    6c68 <main+0x4618>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   38c0 <main+0x1270>
add    $0x8098,%ebx
lea    0x40(%esp),%eax
mov    0x78(%esp),%esi
mov    %eax,(%esp)
mov    0x70(%esp),%eax
lea    0x3c(%esp),%edx
mov    0x7c(%esp),%edi
mov    0x80(%esp),%ebp
movl   $0x0,0x3c(%esp)
call   57c0 <main+0x3170>
mov    %eax,%edx
test   %edx,%edx
mov    %eax,0x2c(%esp)
js     6e9d <main+0x484d>
mov    0x31c(%ebx),%eax
mov    (%eax),%edx
mov    0x3c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     6e50 <main+0x4800>
mov    0x2c(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     6e50 <main+0x4800>
test   %esi,%esi
movl   $0x0,0x20(%esp)
jne    6de8 <main+0x4798>
jmp    6f69 <main+0x4919>
add    %eax,%edi
adc    %edx,%ebp
add    %eax,0x20(%esp)
sub    %eax,%esi
je     6ea8 <main+0x4858>
mov    0x20(%esp),%eax
add    0x74(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   1f30 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jg     6dd8 <main+0x4788>
jl     6e22 <main+0x47d2>
cmp    $0x0,%eax
xchg   %ax,%ax
ja     6dd8 <main+0x4788>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x44(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    0x20(%esp),%eax
test   %eax,%eax
je     6e5d <main+0x480d>
mov    0x28(%esp),%eax
orl    $0x20,0x14(%eax)
jmp    6e5d <main+0x480d>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x44(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     6e79 <main+0x4829>
mov    0x44(%esp),%ecx
test   %ecx,%ecx
je     6f50 <main+0x4900>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     6e99 <main+0x4849>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x44(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
test   %eax,%eax
mov    %eax,0x44(%esp)
jle    6e2f <main+0x47df>
mov    0x31c(%ebx),%esi
mov    0x20(%esi),%eax
or     0x1c(%esi),%eax
je     6f26 <main+0x48d6>
lea    0x48(%esp),%eax
mov    $0x989680,%edi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   1ff0 <clock_gettime@plt>
mov    %edi,%eax
mov    0x4c(%esp),%ecx
imull  0x48(%esp)
mov    %eax,%edi
mov    %edx,%ebp
add    $0xd53e8000,%edi
mov    %ecx,%eax
mov    $0x51eb851f,%edx
adc    $0x19db1de,%ebp
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x5,%edx
sub    %eax,%edx
mov    %edx,%eax
cltd
add    %eax,%edi
mov    0x28(%esp),%eax
adc    %edx,%ebp
mov    0x44(%eax),%edx
mov    0x40(%eax),%eax
sub    %eax,%edi
sbb    %edx,%ebp
cmp    0x20(%esi),%ebp
jbe    6f5e <main+0x490e>
mov    0x24(%esp),%eax
mov    $0x6,%edx
mov    0x4(%eax),%eax
call   3e80 <main+0x1830>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    0x28(%esp),%eax
orl    $0x20,0x14(%eax)
jmp    6e5d <main+0x480d>
lea    0x44(%esp),%eax
call   4430 <main+0x1de0>
jmp    6e79 <main+0x4829>
xchg   %ax,%ax
jb     6f37 <main+0x48e7>
cmp    0x1c(%esi),%edi
ja     6f26 <main+0x48d6>
jmp    6f37 <main+0x48e7>
mov    0x24(%esp),%eax
movl   $0x0,0x44(%esp)
mov    %eax,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    6e5d <main+0x480d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x7e2b,%ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
lea    0x38(%esp),%edi
lea    0x3c(%esp),%ebp
mov    %edi,%edx
mov    %ebp,(%esp)
movl   $0x0,0x38(%esp)
call   57c0 <main+0x3170>
mov    %eax,%esi
test   %esi,%esi
js     703e <main+0x49ee>
mov    0x31c(%ebx),%eax
mov    0x38(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
je     71f8 <main+0x4ba8>
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   2640 <ntfs_check_empty_dir@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,0x34(%esp)
js     7048 <main+0x49f8>
mov    (%edx),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edx),%eax
mov    %edx,(%esp)
mov    %eax,0x2c(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     7090 <main+0x4a40>
mov    0x34(%esp),%eax
test   %eax,%eax
je     7080 <main+0x4a30>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
jne    7071 <main+0x4a21>
mov    0x34(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
mov    0x28(%esp),%edx
mov    (%eax),%eax
mov    %edx,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
call   2420 <ntfs_inode_close@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
je     703a <main+0x49ea>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    703a <main+0x49ea>
nop
lea    0x34(%esp),%eax
call   4430 <main+0x1de0>
jmp    702a <main+0x49da>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
movl   $0x0,0x38(%esp)
jne    7268 <main+0x4c18>
mov    0x80(%esp),%eax
mov    %edi,%edx
mov    %ebp,(%esp)
call   57c0 <main+0x3170>
mov    %eax,%esi
test   %esi,%esi
js     703e <main+0x49ee>
mov    0x31c(%ebx),%eax
mov    0x38(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
je     7250 <main+0x4c00>
mov    (%eax),%ebp
mov    0x4(%eax),%edi
mov    %eax,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
jne    7250 <main+0x4c00>
xor    0x2c(%esp),%edi
xor    0x28(%esp),%ebp
or     %ebp,%edi
je     702a <main+0x49da>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   22f0 <strlen@plt>
lea    0x14(%eax),%edx
mov    %eax,%ebp
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   1fa0 <ntfs_malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     7388 <main+0x4d38>
mov    0x318(%ebx),%eax
add    $0x13,%ebp
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x318(%ebx)
mov    %eax,0x1c(%esp)
lea    -0x411f(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x84(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
lea    -0x4115(%ebx),%eax
mov    %eax,0x10(%esp)
call   1ed0 <__snprintf_chk@plt>
cmp    %ebp,%eax
je     7279 <main+0x4c29>
mov    %eax,0x18(%esp)
lea    -0x410b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3424(%ebx),%eax
mov    %ebp,0x1c(%esp)
mov    $0xffffffb5,%ebp
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x866,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1fb0 <free@plt>
mov    %ebp,0x34(%esp)
jmp    702a <main+0x49da>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   5370 <main+0x2d20>
test   %eax,%eax
mov    %eax,0x34(%esp)
jne    702a <main+0x49da>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   6690 <main+0x4040>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     702a <main+0x49da>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   6690 <main+0x4040>
jmp    702a <main+0x49da>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x34(%esp)
jmp    702a <main+0x49da>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    70ac <main+0x4a5c>
lea    0x40(%esp),%ebp
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
je     72ba <main+0x4c6a>
mov    0x84(%esp),%edx
mov    %ebp,%eax
mov    $0xfffffff3,%ebp
movl   $0x2c0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
je     71e2 <main+0x4b92>
mov    0x84(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   5370 <main+0x2d20>
test   %eax,%eax
mov    %eax,%ebp
jne    71e2 <main+0x4b92>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   6690 <main+0x4040>
test   %eax,%eax
mov    %eax,%ebp
jne    7325 <main+0x4cd5>
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   5370 <main+0x2d20>
test   %eax,%eax
mov    %eax,%ebp
jne    73a9 <main+0x4d59>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   6690 <main+0x4040>
test   %eax,%eax
mov    %eax,%ebp
jne    7396 <main+0x4d46>
mov    %edi,(%esp)
call   6690 <main+0x4040>
test   %eax,%eax
jns    71e2 <main+0x4b92>
mov    0x84(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3bd8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x84f,0x8(%esp)
lea    -0x4178(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x343c(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    71e2 <main+0x4b92>
nop
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%ebp
neg    %ebp
jmp    71ea <main+0x4b9a>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   6690 <main+0x4040>
test   %eax,%eax
jne    73c4 <main+0x4d74>
mov    0x84(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   5370 <main+0x2d20>
test   %eax,%eax
je     7325 <main+0x4cd5>
mov    0x84(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3c10(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x844,0x8(%esp)
jmp    7366 <main+0x4d16>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   38c0 <main+0x1270>
add    $0x79b8,%ebx
lea    0x34(%esp),%eax
mov    %eax,(%esp)
mov    0x60(%esp),%eax
lea    0x30(%esp),%edx
movl   $0x0,0x38(%esp)
call   57c0 <main+0x3170>
test   %eax,%eax
mov    %eax,%esi
js     7460 <main+0x4e10>
je     74a0 <main+0x4e50>
movl   $0xffffffea,0x38(%esp)
xor    %edi,%edi
mov    %edi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
jne    7468 <main+0x4e18>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
jne    7490 <main+0x4e40>
mov    0x38(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x38(%esp),%eax
test   %eax,%eax
jne    744c <main+0x4dfc>
lea    0x38(%esp),%eax
call   4430 <main+0x1de0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
test   %esi,%esi
je     745c <main+0x4e0c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    745c <main+0x4e0c>
xchg   %ax,%ax
mov    0x31c(%ebx),%eax
mov    0x30(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edi
je     7596 <main+0x4f46>
mov    0x14(%eax),%eax
test   $0x4,%ah
jne    7530 <main+0x4ee0>
test   $0x4,%al
jne    74e3 <main+0x4e93>
movl   $0xffffffea,0x38(%esp)
jmp    7440 <main+0x4df0>
mov    0x1f8(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     7596 <main+0x4f46>
mov    0x24(%eax),%eax
cmp    $0x8,%eax
ja     75a8 <main+0x4f58>
movl   $0xffffffea,0x38(%esp)
mov    %ebp,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    7440 <main+0x4df0>
call   23b0 <__errno_location@plt>
lea    0x3c(%esp),%ecx
movl   $0x0,0x38(%esp)
movl   $0x0,(%eax)
mov    %eax,0x24(%esp)
mov    0x31c(%ebx),%eax
mov    0x80(%eax),%eax
mov    %ecx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2560 <ntfs_make_symlink@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     75bc <main+0x4f6c>
mov    0x68(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   23c0 <strncpy@plt>
mov    %ebp,(%esp)
call   1fb0 <free@plt>
jmp    7440 <main+0x4df0>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x38(%esp)
jmp    7440 <main+0x4df0>
cmp    $0x2008,%eax
jbe    75fe <main+0x4fae>
movl   $0xffffffdc,0x38(%esp)
jmp    7523 <main+0x4ed3>
mov    (%edx),%eax
cmp    $0x5f,%eax
jne    759d <main+0x4f4d>
mov    0x64(%esp),%eax
mov    $0x74,%ebp
movl   $0x75736e75,(%eax)
movl   $0x726f7070,0x4(%eax)
movl   $0x20646574,0x8(%eax)
movl   $0x61706572,0xc(%eax)
movl   $0x20657372,0x10(%eax)
movl   $0x6e696f70,0x14(%eax)
mov    %bp,0x18(%eax)
jmp    7440 <main+0x4df0>
mov    %eax,(%esp)
call   1fa0 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     7676 <main+0x5026>
mov    0x24(%ebp),%eax
mov    0x28(%ebp),%edx
mov    0x24(%esp),%ecx
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
call   2350 <ntfs_attr_pread@plt>
mov    %edx,0x2c(%esp)
mov    0x2c(%esp),%ecx
xor    0x28(%ebp),%ecx
mov    %eax,0x28(%esp)
mov    %ecx,%eax
mov    0x28(%esp),%ecx
xor    0x24(%ebp),%ecx
or     %ecx,%eax
je     7688 <main+0x5038>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x38(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    7523 <main+0x4ed3>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x38(%esp)
jmp    7523 <main+0x4ed3>
mov    0x24(%esp),%eax
cmpl   $0x14b4e4c,0x4(%eax)
je     769f <main+0x504f>
movl   $0xffffffea,0x38(%esp)
jmp    7665 <main+0x5015>
cmpl   $0x78746e49,(%eax)
jne    7695 <main+0x5045>
mov    0x68(%esp),%eax
lea    0x64(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
add    $0xfffffff8,%eax
adc    $0xffffffff,%edx
mov    %edx,%ecx
shr    $0x1f,%ecx
mov    %eax,0x28(%esp)
mov    %ecx,%eax
mov    %edx,0x2c(%esp)
xor    %edx,%edx
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
shrd   $0x1,%edx,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
add    $0x8,%eax
mov    %eax,(%esp)
call   2220 <ntfs_ucstombs@plt>
test   %eax,%eax
jns    7665 <main+0x5015>
jmp    7658 <main+0x5008>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
call   38c0 <main+0x1270>
add    $0x76a8,%ebx
mov    0x90(%esp),%esi
lea    0x48(%esp),%eax
mov    %eax,(%esp)
lea    0x44(%esp),%edx
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
mov    %esi,%eax
call   57c0 <main+0x3170>
mov    %eax,%edi
test   %edi,%edi
mov    %eax,0x24(%esp)
js     7851 <main+0x5201>
mov    0x94(%esp),%edi
mov    $0x60,%edx
test   $0x1,%edi
jne    7d00 <main+0x56b0>
test   $0x2,%edi
jne    7ce8 <main+0x5698>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    7868 <main+0x5218>
and    $0x1,%edx
jne    7860 <main+0x5210>
mov    0x31c(%ebx),%eax
mov    0x44(%esp),%edx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     7810 <main+0x51c0>
lea    0x50(%esp),%eax
mov    %eax,0x28(%esp)
call   3be0 <main+0x1590>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     7880 <main+0x5230>
cmpb   $0x2f,(%esi)
je     7bc0 <main+0x5570>
xor    %eax,%eax
mov    %eax,(%esp)
mov    0x44(%esp),%edx
mov    0x28(%esp),%eax
movl   $0x40,0x8(%esp)
mov    %ebp,0x4(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    7880 <main+0x5230>
movl   $0xfffffff3,0x40(%esp)
jmp    781d <main+0x51cd>
lea    0x0(%esi,%eiz,1),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x40(%esp)
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     7835 <main+0x51e5>
mov    0x40(%esp),%edx
test   %edx,%edx
je     7c58 <main+0x5608>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    7c40 <main+0x55f0>
mov    0x40(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
jmp    7798 <main+0x5148>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     7798 <main+0x5148>
jmp    7860 <main+0x5210>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%ecx
mov    0x14(%ebp),%edi
testb  $0x2,0x16(%ecx)
je     7a60 <main+0x5410>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    7a6c <main+0x541c>
and    $0x400,%edi
jne    7e08 <main+0x57b8>
mov    0x31c(%ebx),%eax
mov    0x94(%esp),%edi
mov    0x10(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x40,%ah
testb  $0x40,0x10(%ebp)
mov    %eax,0x10(%edi)
je     7ea0 <main+0x5850>
mov    0x28(%ebp),%eax
mov    0x2c(%ebp),%edx
mov    0x94(%esp),%esi
mov    %eax,0x2c(%esi)
mov    0x30(%ebp),%eax
mov    %edx,0x30(%esi)
mov    0x34(%ebp),%edx
movl   $0x1,0x14(%esi)
shrd   $0x9,%edx,%eax
sar    $0x9,%edx
mov    %eax,0x38(%esi)
mov    %edx,0x3c(%esi)
mov    0x2c(%esp),%esi
test   %esi,%esi
jne    7c68 <main+0x5618>
mov    0x31c(%ebx),%eax
mov    0x94(%esp),%edi
mov    0x4(%eax),%edx
mov    0x8(%eax),%eax
mov    %edx,0x18(%edi)
mov    %eax,0x1c(%edi)
mov    0x94(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0xa000,%edx
je     7ca8 <main+0x5658>
mov    0x50(%ebp),%esi
mov    0x54(%ebp),%edi
mov    0x0(%ebp),%eax
mov    0x4(%ebp),%edx
mov    0x94(%esp),%ecx
add    $0x2ac18000,%esi
adc    $0xfe624e21,%edi
mov    %eax,0x58(%ecx)
mov    %edx,0x5c(%ecx)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    $0x0,%edi
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
call   a770 <main+0x8120>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
add    %esi,%eax
mov    0x94(%esp),%esi
imul   $0x64,%eax,%eax
mov    %ecx,0x40(%esi)
cmp    $0x3b9ac9ff,%eax
cmova  %edi,%eax
mov    0x4c(%ebp),%edi
mov    %eax,0x44(%esi)
mov    0x48(%ebp),%esi
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
add    $0x2ac18000,%esi
adc    $0xfe624e21,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    $0x0,%edi
call   a770 <main+0x8120>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
add    %esi,%eax
mov    0x94(%esp),%esi
imul   $0x64,%eax,%eax
mov    %ecx,0x50(%esi)
cmp    $0x3b9ac9ff,%eax
cmova  %edi,%eax
mov    0x44(%ebp),%edi
mov    %eax,0x54(%esi)
mov    0x40(%ebp),%esi
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
add    $0x2ac18000,%esi
adc    $0xfe624e21,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    $0x0,%edi
call   a770 <main+0x8120>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
add    %esi,%eax
mov    0x94(%esp),%esi
imul   $0x64,%eax,%eax
mov    %ecx,0x48(%esi)
cmp    $0x3b9ac9ff,%eax
cmova  %edi,%eax
mov    %eax,0x4c(%esi)
jmp    781d <main+0x51cd>
lea    0x0(%esi,%eiz,1),%esi
test   $0x400,%edi
jne    7890 <main+0x5240>
mov    0x94(%esp),%eax
mov    0x94(%esp),%esi
mov    0x2c(%ebp),%edx
movl   $0x8000,0x10(%eax)
mov    0x28(%ebp),%eax
mov    %edx,0x30(%esi)
mov    %eax,0x2c(%esi)
mov    0x31c(%ebx),%esi
mov    %esi,0x30(%esp)
mov    0x68(%esi),%esi
test   %esi,%esi
je     7ae0 <main+0x5490>
test   $0x4000,%edi
je     7ae0 <main+0x5490>
mov    %edx,%esi
or     %eax,%esi
je     7ae0 <main+0x5490>
add    $0x1ff,%eax
mov    %eax,0x38(%esp)
mov    0x38(%esp),%esi
adc    $0x0,%edx
mov    %edx,0x3c(%esp)
mov    0x3c(%esp),%edx
and    $0xfffffe00,%esi
mov    %esi,%eax
mov    0x94(%esp),%esi
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x2c(%esi)
mov    %edx,0x30(%esi)
nop
mov    0x30(%ebp),%eax
mov    0x34(%ebp),%edx
mov    0x94(%esp),%esi
add    $0x1ff,%eax
adc    $0x0,%edx
shrd   $0x9,%edx,%eax
mov    %eax,0x38(%esi)
movzwl 0x12(%ecx),%eax
sar    $0x9,%edx
and    $0x4,%edi
mov    %edx,0x3c(%esi)
mov    %eax,0x14(%esi)
jne    7bd8 <main+0x5588>
mov    0x24(%esp),%eax
test   %eax,%eax
je     7cc0 <main+0x5670>
mov    0x24(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7f04 <main+0x58b4>
mov    0x24(%esi),%eax
mov    0x28(%esi),%edx
mov    0x94(%esp),%edi
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
mov    %eax,0x2c(%edi)
mov    0x1c(%esi),%eax
mov    %edx,0x30(%edi)
mov    0x20(%esi),%edx
shrd   $0x9,%edx,%eax
mov    %eax,0x38(%edi)
mov    0x31c(%ebx),%eax
sar    $0x9,%edx
mov    %edx,0x3c(%edi)
mov    0x68(%eax),%edi
test   %edi,%edi
jne    7d18 <main+0x56c8>
mov    0x24(%esi),%ecx
lea    -0x9(%ecx),%eax
cmp    $0x1fff,%eax
ja     7ba0 <main+0x5550>
mov    0x24(%esp),%edi
test   %edi,%edi
je     7d38 <main+0x56e8>
mov    %esi,(%esp)
call   2240 <ntfs_attr_close@plt>
mov    0x94(%esp),%eax
mov    0x31c(%ebx),%esi
mov    0x10(%eax),%edx
jmp    7cc9 <main+0x5679>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%esi)
jne    77e0 <main+0x5190>
mov    %ebp,%eax
jmp    77e2 <main+0x5192>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7ef8 <main+0x58a8>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    7b48 <main+0x54f8>
testb  $0x2,0x14(%ebp)
jne    8049 <main+0x59f9>
mov    0x28(%esi),%eax
mov    0x24(%esi),%ecx
mov    %eax,%edi
or     %ecx,%edi
jne    7f11 <main+0x58c1>
mov    0x94(%esp),%eax
movl   $0x1000,0x10(%eax)
jmp    7d27 <main+0x56d7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
jmp    784d <main+0x51fd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
call   4430 <main+0x1de0>
jmp    7835 <main+0x51e5>
xchg   %ax,%ax
mov    0x94(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2430 <ntfs_get_owner_mode@plt>
test   %eax,%eax
jns    7921 <main+0x52d1>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    7921 <main+0x52d1>
lea    0x40(%esp),%eax
call   4430 <main+0x1de0>
jmp    7921 <main+0x52d1>
lea    0x0(%esi),%esi
mov    0x94(%esp),%esi
or     $0x1ff,%eax
mov    %eax,0x10(%esi)
jmp    793f <main+0x52ef>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%esi
mov    $0x8000,%edx
mov    0xc(%esi),%eax
mov    0x94(%esp),%edi
not    %eax
and    $0x1ff,%eax
or     %edx,%eax
mov    %eax,0x10(%edi)
jmp    78fc <main+0x52ac>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    777d <main+0x512d>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
mov    0x94(%esp),%eax
mov    $0x5f,%dl
lea    0x1(%eax),%edi
jmp    7771 <main+0x5121>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
test   %eax,%eax
jne    7db0 <main+0x5760>
mov    0x24(%esi),%ecx
lea    -0x9(%ecx),%eax
cmp    $0x1fff,%eax
ja     7ba0 <main+0x5550>
lea    0x0(%esi),%esi
mov    %ecx,(%esp)
call   1fa0 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     7fae <main+0x595e>
mov    0x24(%esi),%eax
mov    0x28(%esi),%edx
mov    %edi,0x14(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   2350 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0x24(%esi),%eax
mov    %edx,0x30(%esp)
xor    0x28(%esi),%edx
xor    %ecx,%eax
or     %eax,%edx
je     7f31 <main+0x58e1>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
mov    %edi,(%esp)
neg    %eax
mov    %eax,0x40(%esp)
call   1fb0 <free@plt>
mov    %esi,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    781d <main+0x51cd>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x40,0xd(%esi)
je     7ba0 <main+0x5550>
testb  $0x2,0x18(%esi)
xchg   %ax,%ax
je     7ba0 <main+0x5550>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
add    $0x1ff,%eax
mov    %eax,0x30(%esp)
mov    0x30(%esp),%ecx
adc    $0x0,%edx
mov    %edx,0x34(%esp)
mov    0x34(%esp),%edx
and    $0xfffffe00,%ecx
mov    %ecx,%eax
mov    0x94(%esp),%ecx
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x2c(%ecx)
mov    %edx,0x30(%ecx)
jmp    7ba0 <main+0x5550>
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
mov    0x31c(%ebx),%eax
mov    0x80(%eax),%edx
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   2560 <ntfs_make_symlink@plt>
test   %eax,%eax
mov    %eax,%edx
je     7f82 <main+0x5932>
mov    0x4c(%esp),%eax
mov    0x94(%esp),%ecx
mov    %eax,0x2c(%ecx)
sar    $0x1f,%eax
mov    %eax,0x30(%ecx)
mov    0x30(%ebp),%esi
mov    0x34(%ebp),%edi
mov    0x94(%esp),%eax
add    $0x1ff,%esi
adc    $0x0,%edi
shrd   $0x9,%edi,%esi
sar    $0x9,%edi
mov    %esi,0x38(%eax)
mov    %edi,0x3c(%eax)
mov    0x8(%ebp),%eax
mov    0x94(%esp),%edi
movzwl 0x12(%eax),%eax
movl   $0xa000,0x10(%edi)
mov    %eax,0x14(%edi)
mov    %edx,(%esp)
call   1fb0 <free@plt>
jmp    78fc <main+0x52ac>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x204(%ebx),%eax
movl   $0x4,0xc(%esp)
movl   $0xa0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
je     78cf <main+0x527f>
mov    0x24(%eax),%esi
mov    0x28(%eax),%edi
mov    %esi,0x28(%ebp)
mov    0x1c(%eax),%esi
mov    %edi,0x2c(%ebp)
mov    0x20(%eax),%edi
orl    $0x40,0x10(%ebp)
mov    %esi,0x30(%ebp)
mov    %edi,0x34(%ebp)
mov    %eax,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    78cf <main+0x527f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
test   %eax,%eax
je     793f <main+0x52ef>
movl   $0xfffffffe,0x40(%esp)
jmp    781d <main+0x51cd>
mov    %ecx,%edx
xor    $0x1,%edx
or     %eax,%edx
jne    7d27 <main+0x56d7>
mov    0x94(%esp),%eax
movl   $0xc000,0x10(%eax)
jmp    7d27 <main+0x56d7>
mov    0x4(%edi),%eax
mov    (%edi),%edx
mov    %eax,0x38(%esp)
xor    $0x4b4c42,%eax
xor    $0x78746e49,%edx
or     %edx,%eax
je     7fc8 <main+0x5978>
mov    0x38(%esp),%eax
xor    $0x524843,%eax
or     %edx,%eax
je     802a <main+0x59da>
mov    0x38(%esp),%eax
xor    $0x14b4e4c,%eax
or     %edx,%eax
jne    7f75 <main+0x5925>
mov    0x94(%esp),%eax
movl   $0xa000,0x10(%eax)
mov    %edi,(%esp)
call   1fb0 <free@plt>
jmp    7ba0 <main+0x5550>
mov    (%esi),%eax
cmp    $0x5f,%eax
je     7f94 <main+0x5944>
neg    %eax
mov    %eax,0x40(%esp)
jmp    781d <main+0x51cd>
mov    0x94(%esp),%eax
movl   $0x1a,0x2c(%eax)
movl   $0x0,0x30(%eax)
jmp    7e53 <main+0x5803>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x40(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    781d <main+0x51cd>
mov    0x30(%esp),%eax
xor    $0x18,%ecx
or     %ecx,%eax
jne    7f75 <main+0x5925>
mov    0x94(%esp),%eax
movl   $0x6000,0x10(%eax)
mov    0x8(%edi),%eax
xor    %edx,%edx
and    $0xfffff000,%eax
mov    %eax,0x30(%esp)
mov    0x10(%edi),%eax
xor    %al,%al
shld   $0xc,%eax,%edx
shl    $0xc,%eax
mov    %eax,%ecx
mov    0x8(%edi),%eax
or     %edx,0x30(%esp)
movzbl 0x10(%edi),%edx
and    $0xfff,%eax
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%ecx
mov    0x94(%esp),%eax
mov    %ecx,0x20(%eax)
mov    0x30(%esp),%ecx
mov    %ecx,0x24(%eax)
jmp    7f75 <main+0x5925>
mov    0x30(%esp),%eax
xor    $0x18,%ecx
or     %ecx,%eax
jne    7f75 <main+0x5925>
mov    0x94(%esp),%eax
movl   $0x2000,0x10(%eax)
jmp    7fe1 <main+0x5991>
mov    0x31c(%ebx),%eax
cmpl   $0x0,0x68(%eax)
jne    7d24 <main+0x56d4>
jmp    7b87 <main+0x5537>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x6d5c,%ebx
sub    $0x10,%esp
mov    0x31c(%ebx),%edx
cmpl   $0x1,0x14(%edx)
je     8090 <main+0x5a40>
mov    $0x5,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
lea    -0x2d1c(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2d18(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2590 <strncmp@plt>
test   %eax,%eax
jne    80c7 <main+0x5a77>
mov    %esi,(%esp)
call   22f0 <strlen@plt>
mov    %eax,%edx
mov    $0x1,%eax
cmp    %edx,%edi
jne    8082 <main+0x5a32>
lea    -0x2d28(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2d24(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2590 <strncmp@plt>
test   %eax,%eax
jne    8100 <main+0x5ab0>
mov    %esi,(%esp)
call   22f0 <strlen@plt>
mov    %eax,%edx
mov    $0x2,%eax
cmp    %edx,%edi
jne    8082 <main+0x5a32>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2d38(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2d34(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2590 <strncmp@plt>
test   %eax,%eax
je     8160 <main+0x5b10>
lea    -0x2d48(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2d44(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2590 <strncmp@plt>
test   %eax,%eax
jne    8180 <main+0x5b30>
mov    %esi,(%esp)
call   22f0 <strlen@plt>
cmp    %eax,%edi
je     8180 <main+0x5b30>
mov    $0x4,%eax
jmp    8082 <main+0x5a32>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   22f0 <strlen@plt>
mov    %eax,%edx
mov    $0x3,%eax
cmp    %edx,%edi
jne    8082 <main+0x5a32>
jmp    8122 <main+0x5ad2>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8082 <main+0x5a32>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   38c0 <main+0x1270>
add    $0x6c2e,%ebx
sub    $0x18,%esp
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   24b0 <ntfs_device_sync@plt>
test   %eax,%eax
je     81be <main+0x5b6e>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%eax
push   %esi
mov    %edx,%esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x6be5,%ebx
sub    $0x2c,%esp
call   3e40 <main+0x17f0>
test   %eax,%eax
jne    8348 <main+0x5cf8>
mov    0x40(%esp),%eax
lea    -0xc(%eax),%edi
mov    %ebp,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    82d0 <main+0x5c80>
cmp    $0x1,%edi
jbe    8388 <main+0x5d38>
cmpl   $0x7,0x40(%esp)
je     82eb <main+0x5c9b>
movl   $0x40,0x18(%esp)
mov    %esi,(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     8338 <main+0x5ce8>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   2490 <strrchr@plt>
movb   $0x0,(%eax)
mov    0x0(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%edx
je     8330 <main+0x5ce0>
mov    0x0(%ebp),%eax
movl   $0x1,0x1c(%esp)
testb  $0x1,0x90(%eax)
je     8360 <main+0x5d10>
mov    %edx,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
jne    8330 <main+0x5ce0>
mov    %edi,(%esp)
call   1fb0 <free@plt>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8338 <main+0x5ce8>
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x31c(%ebx),%eax
testb  $0x3,0x78(%eax)
jne    820b <main+0x5bbb>
cmpl   $0x7,0x40(%esp)
jne    821f <main+0x5bcf>
mov    0x44(%esp),%edx
test   %edx,%edx
setne  %al
cmp    $0x1,%al
sbb    %eax,%eax
mov    %eax,0x18(%esp)
andl   $0xffffff80,0x18(%esp)
addl   $0xc0,0x18(%esp)
cmpb   $0x2f,(%esi)
jne    8227 <main+0x5bd7>
cmpb   $0x0,0x1(%esi)
jne    8227 <main+0x5bd7>
call   23b0 <__errno_location@plt>
movl   $0x1,(%eax)
xor    %eax,%eax
jmp    82c5 <main+0x5c75>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1fb0 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
call   2320 <ntfs_allowed_access@plt>
mov    0x18(%esp),%edx
mov    %eax,0x1c(%esp)
jmp    8285 <main+0x5c35>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
movl   $0x5f,(%eax)
xor    %eax,%eax
jmp    82c5 <main+0x5c75>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x6a1b,%ebx
sub    $0x4c,%esp
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   24a0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%edi
je     8480 <main+0x5e30>
lea    -0x1(%eax),%ecx
cmp    $0xa,%ecx
jbe    8560 <main+0x5f10>
mov    0x60(%esp),%edx
lea    0x20(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %esi,%eax
mov    %edi,(%esp)
call   81d0 <main+0x5b80>
test   %eax,%eax
mov    %eax,%ebp
je     8622 <main+0x5fd2>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
je     844b <main+0x5dfb>
xor    %eax,%eax
cmp    $0x7,%edi
je     86d8 <main+0x6088>
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1fd0 <ntfs_xattr_system_removexattr@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8458 <main+0x5e08>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
cmp    $0x7,%edi
je     854f <main+0x5eff>
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
jne    853e <main+0x5eee>
lea    0x0(%esi),%esi
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x31c(%ebx),%eax
mov    0x14(%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
ja     85e8 <main+0x5f98>
mov    0x64(%esp),%eax
call   8060 <main+0x5a10>
test   %eax,%eax
mov    %eax,%edi
je     85e8 <main+0x5f98>
lea    0x20(%esp),%esi
mov    %esi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    85f8 <main+0x5fa8>
lea    -0x3(%edi),%eax
cmp    $0x1,%eax
jbe    8580 <main+0x5f30>
mov    0x31c(%ebx),%eax
mov    0x60(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8622 <main+0x5fd2>
cmp    $0x2,%edi
je     8638 <main+0x5fe8>
jl     8598 <main+0x5f48>
cmp    $0x4,%edi
jg     8598 <main+0x5f48>
mov    0x30(%esp),%eax
test   %eax,%eax
nop
je     85b6 <main+0x5f66>
movl   $0xffffffff,0x1c(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     8478 <main+0x5e28>
test   %eax,%eax
jne    8478 <main+0x5e28>
lea    0x1c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x1c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%edx
mov    $0xffffffff,%eax
shl    %cl,%edx
and    $0x78f,%edx
jne    8478 <main+0x5e28>
jmp    83f0 <main+0x5da0>
lea    0x0(%esi),%esi
mov    0x30(%esp),%edx
test   %edx,%edx
je     84c7 <main+0x5e77>
mov    $0xfffffff3,%eax
jmp    8478 <main+0x5e28>
xchg   %ax,%ax
testl  $0x404,0x14(%ebp)
jne    8516 <main+0x5ec6>
mov    0x20(%esp),%eax
testb  $0x1,0x90(%eax)
je     86b0 <main+0x6060>
lea    0x18(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    0x64(%esp),%eax
call   56c0 <main+0x3070>
cmp    $0xffffffff,%eax
jne    8660 <main+0x6010>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    851e <main+0x5ece>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffa1,%eax
jmp    8478 <main+0x5e28>
lea    0x0(%esi),%esi
mov    0x60(%esp),%edx
mov    %esi,%eax
movl   $0x40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    84bb <main+0x5e6b>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
jne    85b6 <main+0x5f66>
movl   $0xfffffff3,0x1c(%esp)
jmp    851e <main+0x5ece>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   2630 <ntfs_attr_remove@plt>
test   %eax,%eax
je     8692 <main+0x6042>
call   23b0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x2,%edx
je     86f0 <main+0x60a0>
neg    %edx
mov    %edx,0x1c(%esp)
mov    0x14(%ebp),%eax
test   $0x20,%al
jne    851e <main+0x5ece>
or     $0x20,%eax
mov    %eax,0x14(%ebp)
orl    $0x8,0x10(%ebp)
jmp    851e <main+0x5ece>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    85b6 <main+0x5f66>
jmp    864c <main+0x5ffc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
lea    0x0(%esi,%eiz,1),%esi
call   5640 <main+0x2ff0>
jmp    842f <main+0x5ddf>
lea    0x0(%esi),%esi
movl   $0x3d,(%eax)
mov    $0xffffffc3,%edx
jmp    868e <main+0x603e>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x66bb,%ebx
sub    $0x7c,%esp
movl   $0x0,0x44(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   24a0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    88b8 <main+0x6268>
mov    0x31c(%ebx),%eax
mov    0x14(%eax),%eax
cmp    $0x3,%eax
je     8a30 <main+0x63e0>
test   %eax,%eax
je     8a20 <main+0x63d0>
mov    0x94(%esp),%eax
call   8060 <main+0x5a10>
test   %eax,%eax
mov    %eax,%ebp
je     8a20 <main+0x63d0>
lea    0x50(%esp),%edi
mov    %edi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    8968 <main+0x6318>
cmp    $0x4,%ebp
jne    8793 <main+0x6143>
mov    0x60(%esp),%esi
test   %esi,%esi
jne    8d79 <main+0x6729>
mov    0x31c(%ebx),%eax
mov    0x90(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%esi
je     8995 <main+0x6345>
testl  $0x404,0x14(%eax)
jne    8930 <main+0x62e0>
mov    0x50(%esp),%eax
testb  $0x1,0x90(%eax)
je     89a8 <main+0x6358>
lea    0x44(%esp),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    0x94(%esp),%eax
call   56c0 <main+0x3070>
cmp    $0xffffffff,%eax
je     89c4 <main+0x6374>
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8930 <main+0x62e0>
mov    0x24(%eax),%eax
mov    0x28(%ebp),%edx
mov    %eax,0x30(%esp)
mov    0x31c(%ebx),%eax
mov    %edx,0x34(%esp)
mov    0x68(%eax),%ecx
test   %ecx,%ecx
je     8888 <main+0x6238>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     8888 <main+0x6238>
testb  $0x40,0xd(%ebp)
je     8888 <main+0x6238>
testb  $0x2,0x18(%ebp)
je     8888 <main+0x6238>
add    $0x1ff,%eax
mov    %eax,0x30(%esp)
mov    0x30(%esp),%ecx
adc    $0x0,%edx
mov    %edx,0x34(%esp)
mov    0x34(%esp),%edx
and    $0xfffffe00,%ecx
mov    %ecx,%eax
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
lea    0x0(%esi),%esi
mov    0x9c(%esp),%edx
mov    0x30(%esp),%eax
test   %edx,%edx
je     8b00 <main+0x64b0>
cmp    %eax,0x9c(%esp)
jae    8d17 <main+0x66c7>
movl   $0xffffffde,0x4c(%esp)
jmp    8b04 <main+0x64b4>
lea    0x0(%esi),%esi
mov    0x90(%esp),%edx
lea    0x50(%esp),%edi
mov    %eax,(%esp)
mov    %edi,%eax
movl   $0x0,0x4(%esp)
call   81d0 <main+0x5b80>
test   %eax,%eax
mov    %eax,%esi
je     8995 <main+0x6345>
mov    0x50(%esp),%eax
testb  $0x1,0x90(%eax)
je     89d8 <main+0x6388>
cmp    $0x7,%ebp
je     8b50 <main+0x6500>
mov    0x9c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   2410 <ntfs_xattr_system_getxattr@plt>
mov    %eax,0x4c(%esp)
jmp    8944 <main+0x62f4>
lea    0x0(%esi),%esi
movl   $0xffffffc3,0x4c(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %esi,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x4c(%esp),%eax
je     895c <main+0x630c>
test   %eax,%eax
je     8a08 <main+0x63b8>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%edx
mov    %edi,%eax
movl   $0x40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    8782 <main+0x6132>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x100,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    87de <main+0x618e>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x4c(%esp)
jmp    8938 <main+0x62e8>
xchg   %ax,%ax
movl   $0x100,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    88f0 <main+0x62a0>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x4c(%esp)
jmp    8944 <main+0x62f4>
xchg   %ax,%ax
lea    0x4c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x4c(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0xffffffa1,%eax
jmp    895c <main+0x630c>
lea    0x0(%esi),%esi
mov    0x94(%esp),%esi
mov    $0x12,%ecx
movl   $0x0,0x48(%esp)
lea    -0x40f0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8a20 <main+0x63d0>
lea    0x50(%esp),%edi
mov    %edi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    8b18 <main+0x64c8>
mov    0x31c(%ebx),%eax
mov    0x90(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     8995 <main+0x6345>
mov    0x50(%esp),%eax
testb  $0x1,0x90(%eax)
jne    8bc8 <main+0x6578>
mov    0x3c(%esp),%eax
movl   $0x100,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    8bc8 <main+0x6578>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x48(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x48(%esp),%eax
je     895c <main+0x630c>
test   %eax,%eax
jne    895c <main+0x630c>
lea    0x48(%esp),%eax
call   4430 <main+0x1de0>
mov    0x48(%esp),%eax
jmp    895c <main+0x630c>
mov    %eax,0x4c(%esp)
mov    %ebp,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    8938 <main+0x62e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%edx
mov    %edi,%eax
movl   $0x40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    8a61 <main+0x6411>
jmp    8995 <main+0x6345>
lea    0x0(%esi),%esi
mov    0x90(%esp),%eax
call   5640 <main+0x2ff0>
mov    %esi,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%ebp
mov    0x9c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x10(%esp)
call   2410 <ntfs_xattr_system_getxattr@plt>
test   %ebp,%ebp
mov    %eax,0x4c(%esp)
je     8944 <main+0x62f4>
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
je     8944 <main+0x62f4>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    8944 <main+0x62f4>
lea    0x4c(%esp),%eax
call   4430 <main+0x1de0>
jmp    8944 <main+0x62f4>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2580 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     8ac1 <main+0x6471>
mov    0x98(%esp),%ebp
lea    0x4c(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x0(%esi),%esi
mov    %edi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
call   2540 <ntfs_attr_lookup@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8cf8 <main+0x66a8>
movl   $0x0,0x4c(%esp)
mov    0x4(%edi),%eax
movzbl 0x9(%eax),%edx
test   %dl,%dl
je     8bf8 <main+0x65a8>
mov    0x38(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
movzwl 0xa(%eax),%edx
add    %edx,%eax
mov    %eax,(%esp)
call   2220 <ntfs_ucstombs@plt>
test   %eax,%eax
mov    %eax,%edx
js     8d83 <main+0x6733>
mov    0x48(%esp),%eax
test   %eax,%eax
lea    0x1(%eax),%ecx
mov    0x9c(%esp),%eax
cmovne %ecx,%esi
add    %edx,%esi
mov    %esi,0x48(%esp)
test   %eax,%eax
je     8cf0 <main+0x66a0>
cmp    %esi,0x9c(%esp)
jb     8d95 <main+0x6745>
cmp    %ebp,0x98(%esp)
je     8cc3 <main+0x6673>
movb   $0x0,0x0(%ebp)
add    $0x1,%ebp
mov    0x4c(%esp),%esi
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x30(%esp)
mov    %esi,0x4(%esp)
call   23c0 <strncpy@plt>
mov    0x30(%esp),%edx
add    %edx,%ebp
mov    %esi,(%esp)
call   1fb0 <free@plt>
jmp    8bf8 <main+0x65a8>
xchg   %ax,%ax
mov    0x4c(%esp),%esi
jmp    8ce1 <main+0x6691>
xchg   %ax,%ax
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
je     8d0a <main+0x66ba>
neg    %eax
mov    %eax,0x48(%esp)
mov    %edi,(%esp)
call   2300 <ntfs_attr_put_search_ctx@plt>
jmp    8ace <main+0x647e>
mov    0x98(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x10(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   2350 <ntfs_attr_pread@plt>
mov    0x34(%esp),%edi
cltd
mov    %eax,%ecx
xor    %edx,%edi
mov    0x30(%esp),%edx
mov    %eax,0x4c(%esp)
mov    %edi,%eax
xor    %ecx,%edx
or     %edx,%eax
je     8b04 <main+0x64b4>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x4c(%esp)
jmp    8b04 <main+0x64b4>
mov    $0xffffffc3,%eax
jmp    895c <main+0x630c>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x48(%esp)
jmp    8d0a <main+0x66ba>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
movl   $0xffffffde,0x48(%esp)
jmp    8d0a <main+0x66ba>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x600b,%ebx
sub    $0x5c,%esp
movl   $0x0,0x28(%esp)
mov    0x31c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   24a0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8f18 <main+0x68c8>
mov    0x31c(%ebx),%eax
mov    0x14(%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
ja     9140 <main+0x6af0>
mov    0x74(%esp),%eax
call   8060 <main+0x5a10>
test   %eax,%eax
mov    %eax,%esi
je     9140 <main+0x6af0>
lea    0x30(%esp),%edi
mov    %edi,%eax
call   3be0 <main+0x1590>
test   %eax,%eax
jne    8ed8 <main+0x6888>
lea    -0x3(%esi),%eax
cmp    $0x1,%eax
jbe    8ec0 <main+0x6870>
mov    0x31c(%ebx),%eax
mov    0x70(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2280 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8f02 <main+0x68b2>
cmp    $0x2,%esi
je     9118 <main+0x6ac8>
jl     8fa8 <main+0x6958>
cmp    $0x4,%esi
nop
jg     8fa8 <main+0x6958>
mov    0x40(%esp),%edi
test   %edi,%edi
je     8fc6 <main+0x6976>
movl   $0xffffffff,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    %ebp,(%esp)
call   2420 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     8f0b <main+0x68bb>
test   %eax,%eax
jne    8f0b <main+0x68bb>
lea    0x2c(%esp),%eax
call   4430 <main+0x1de0>
mov    0x2c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x40(%esp),%ebp
test   %ebp,%ebp
je     8e33 <main+0x67e3>
mov    $0xffffffff,%eax
jmp    8f0b <main+0x68bb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%edx
mov    %edi,%eax
movl   $0x40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   3c50 <main+0x1600>
test   %eax,%eax
jne    8e27 <main+0x67d7>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%edx
lea    0x30(%esp),%edi
mov    %eax,(%esp)
mov    %edi,%eax
movl   $0x1,0x4(%esp)
call   81d0 <main+0x5b80>
test   %eax,%eax
mov    %eax,%ebp
je     8f02 <main+0x68b2>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
je     8f8a <main+0x693a>
xor    %eax,%eax
cmp    $0x7,%esi
je     91f1 <main+0x6ba1>
mov    0x80(%esp),%ecx
mov    0x7c(%esp),%edx
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x78(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x10(%esp)
call   2250 <ntfs_xattr_system_setxattr@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     8f97 <main+0x6947>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
cmp    $0x7,%esi
jne    8e96 <main+0x6846>
jmp    8eb3 <main+0x6863>
lea    0x0(%esi),%esi
testl  $0x404,0x14(%ebp)
jne    8e82 <main+0x6832>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
je     91d0 <main+0x6b80>
lea    0x28(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x74(%esp),%eax
call   56c0 <main+0x3070>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     90c8 <main+0x6a78>
mov    0x31c(%ebx),%eax
mov    0x34(%eax),%ecx
test   %ecx,%ecx
je     9008 <main+0x69b8>
mov    0x28(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   20c0 <ntfs_forbidden_chars@plt>
test   %eax,%eax
jne    90c8 <main+0x6a78>
mov    0x28(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     90e0 <main+0x6a90>
cmpl   $0x1,0x80(%esp)
jne    90e0 <main+0x6a90>
movl   $0xffffffef,0x2c(%esp)
mov    %edi,(%esp)
call   2240 <ntfs_attr_close@plt>
jmp    8e8a <main+0x683a>
mov    %esi,%eax
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
call   1ec0 <ntfs_attr_add@plt>
test   %eax,%eax
jne    90c8 <main+0x6a78>
mov    0x14(%ebp),%eax
test   $0x20,%al
jne    909f <main+0x6a4f>
orl    $0x8,0x10(%ebp)
or     $0x20,%eax
mov    %eax,0x14(%ebp)
mov    0x28(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   2380 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
jne    9170 <main+0x6b20>
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    8e8a <main+0x683a>
lea    0x0(%esi),%esi
test   %edi,%edi
je     9150 <main+0x6b00>
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   2090 <ntfs_attr_truncate@plt>
test   %eax,%eax
je     9170 <main+0x6b20>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    9044 <main+0x69f4>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   1fc0 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
jne    8fc6 <main+0x6976>
movl   $0xfffffff3,0x2c(%esp)
jmp    8e8a <main+0x683a>
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
mov    $0xffffffa1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0x2,0x80(%esp)
jne    9051 <main+0x6a01>
movl   $0xffffffc3,0x2c(%esp)
jmp    8e8a <main+0x683a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x7c(%esp),%edx
movl   $0x0,0x2c(%esp)
test   %edx,%edx
jne    921e <main+0x6bce>
mov    %edi,(%esp)
call   23d0 <ntfs_attr_pclose@plt>
test   %eax,%eax
jne    920f <main+0x6bbf>
mov    0x31c(%ebx),%eax
mov    0x68(%eax),%eax
test   %eax,%eax
je     91a7 <main+0x6b57>
testb  $0x40,0x15(%ebp)
jne    9262 <main+0x6c12>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    9044 <main+0x69f4>
mov    0x14(%ebp),%eax
test   $0x20,%al
jne    9044 <main+0x69f4>
or     $0x20,%eax
mov    %eax,0x14(%ebp)
orl    $0x8,0x10(%ebp)
jmp    9044 <main+0x69f4>
lea    0x0(%esi),%esi
movl   $0x80,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   2320 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    8fc6 <main+0x6976>
jmp    912c <main+0x6adc>
mov    0x70(%esp),%eax
call   5640 <main+0x2ff0>
jmp    8f53 <main+0x6903>
nop
cmp    $0x0,%eax
ja     9257 <main+0x6c07>
cmp    0x7c(%esp),%esi
je     9184 <main+0x6b34>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    91ab <main+0x6b5b>
xor    %esi,%esi
mov    0x78(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,0x8(%esp)
add    %esi,%eax
mov    %eax,0x14(%esp)
mov    0x7c(%esp),%eax
mov    %edi,(%esp)
sub    %esi,%eax
mov    %eax,0xc(%esp)
call   1f30 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jl     9205 <main+0x6bb5>
jle    9200 <main+0x6bb0>
add    %eax,%esi
cmp    %esi,0x7c(%esp)
ja     9220 <main+0x6bd0>
nop
jmp    9205 <main+0x6bb5>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   2170 <ntfs_efs_fixup_attribute@plt>
test   %eax,%eax
jne    920f <main+0x6bbf>
jmp    91a7 <main+0x6b57>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   38c0 <main+0x1270>
add    $0x5b34,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     9381 <main+0x6d31>
test   %edi,%edi
je     9320 <main+0x6cd0>
mov    %edi,(%esp)
call   22f0 <strlen@plt>
mov    (%esi),%ebp
test   %ebp,%ebp
mov    %eax,%edx
je     9318 <main+0x6cc8>
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   22f0 <strlen@plt>
mov    0x1c(%esp),%edx
cmp    $0x2000,%eax
mov    %eax,%ecx
ja     9330 <main+0x6ce0>
cmp    $0x2000,%edx
ja     9330 <main+0x6ce0>
lea    0x1(%ecx,%edx,1),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
call   21e0 <realloc@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     9388 <main+0x6d38>
lea    (%eax,%ecx,1),%edx
mov    %eax,(%esi)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   2160 <strcpy@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ecx,%ecx
jmp    92cf <main+0x6c7f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
movl   $0x4b,(%eax)
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x8f,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x33b1(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d6e(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    930a <main+0x6cba>
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x95,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3385(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    9369 <main+0x6d19>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   38c0 <main+0x1270>
add    $0x59f4,%ebx
test   %esi,%esi
je     9551 <main+0x6f01>
mov    0x44(%esp),%eax
test   %eax,%eax
je     94f0 <main+0x6ea0>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   22f0 <strlen@plt>
mov    (%esi),%ebp
test   %ebp,%ebp
mov    %eax,%edi
je     94b0 <main+0x6e60>
mov    %ebp,(%esp)
call   22f0 <strlen@plt>
cmp    $0x2000,%eax
mov    %eax,0x1c(%esp)
ja     9500 <main+0x6eb0>
cmp    $0x2000,%edi
ja     9500 <main+0x6eb0>
mov    0x1c(%esp),%eax
lea    0x1(%eax,%edi,1),%eax
mov    %eax,(%esp)
call   21f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     955b <main+0x6f0b>
mov    %ebp,0x4(%esp)
lea    -0x3367(%ebx),%ebp
mov    %eax,(%esp)
call   2160 <strcpy@plt>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   1ee0 <strstr@plt>
test   %eax,%eax
je     94c0 <main+0x6e70>
mov    0x44(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   2160 <strcpy@plt>
mov    (%esi),%edx
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   1ee0 <strstr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     9499 <main+0x6e49>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2140 <strcat@plt>
mov    (%esi),%edx
mov    %edx,(%esp)
call   1fb0 <free@plt>
xor    %eax,%eax
mov    %edi,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
jmp    9419 <main+0x6dc9>
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x44(%esp),%eax
mov    %edi,(%esi)
add    0x1c(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2160 <strcpy@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   23b0 <__errno_location@plt>
movl   $0x4b,(%eax)
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xb5,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x33b1(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d7d(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    94a5 <main+0x6e55>
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xbb,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x311c(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    9539 <main+0x6ee9>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
call   38c0 <main+0x1270>
add    $0x5821,%ebx
movl   $0x0,0x58(%esp)
mov    0x4(%eax),%edx
mov    0x80(%esp),%eax
test   %edx,%edx
movl   $0x0,0x78(%eax)
movl   $0x0,0x68(%eax)
movl   $0x1,0x3c(%eax)
lea    -0x415b(%ebx),%eax
cmovne %edx,%eax
mov    %eax,(%esp)
call   23a0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x38(%esp)
je     a06a <main+0x7a1a>
lea    -0x3342(%ebx),%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x34(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%esi)
je     97a7 <main+0x7157>
movl   $0x2c,0x4(%esp)
mov    %esi,(%esp)
call   22c0 <strchr@plt>
test   %eax,%eax
je     99a8 <main+0x7358>
lea    0x1(%eax),%ecx
mov    %ecx,0x30(%esp)
movb   $0x0,(%eax)
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   22c0 <strchr@plt>
test   %eax,%eax
je     9998 <main+0x7348>
lea    0x1(%eax),%edi
mov    %edi,0x2c(%esp)
movb   $0x0,(%eax)
lea    -0x401e(%ebx),%eax
lea    -0x344(%ebx),%ebp
jmp    9696 <main+0x7046>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     9838 <main+0x71e8>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1f00 <strcmp@plt>
test   %eax,%eax
jne    9688 <main+0x7038>
mov    0x8(%ebp),%eax
test   $0x1,%al
mov    %eax,0x28(%esp)
jne    98a0 <main+0x7250>
testb  $0x4,0x28(%esp)
je     96f5 <main+0x70a5>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     98b7 <main+0x7267>
lea    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x334c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   24c0 <sscanf@plt>
test   %eax,%eax
je     98b7 <main+0x7267>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
testb  $0x8,0x28(%esp)
je     9740 <main+0x70f0>
testb  $0x40,0x28(%esp)
je     9958 <main+0x7308>
mov    0x2c(%esp),%edi
test   %edi,%edi
je     99b5 <main+0x7365>
lea    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x3349(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   24c0 <sscanf@plt>
test   %eax,%eax
je     9966 <main+0x7316>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
testb  $0x2,0x28(%esp)
jne    98e8 <main+0x7298>
cmpl   $0x2c,0x4(%ebp)
ja     9e52 <main+0x7802>
mov    0x4(%ebp),%eax
mov    -0x2e80(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    9f27 <main+0x78d7>
movl   $0x3c,0x5c(%esp)
mov    $0x23c34600,%eax
xor    %edx,%edx
mov    0x80(%esp),%ecx
mov    %eax,0x1c(%ecx)
mov    %edx,0x20(%ecx)
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x10,0x28(%esp)
jne    9938 <main+0x72e8>
mov    0x30(%esp),%esi
test   %esi,%esi
jne    9628 <main+0x6fd8>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     9f04 <main+0x78b4>
lea    0x58(%esp),%esi
mov    0x48(%esp),%eax
test   %eax,%eax
jne    99d9 <main+0x7389>
mov    0x40(%esp),%eax
test   %eax,%eax
je     99cd <main+0x737d>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
cmp    $0x2,%eax
je     9fec <main+0x799c>
test   %eax,%eax
je     9e98 <main+0x7848>
cmp    $0x1,%eax
je     9f35 <main+0x78e5>
lea    -0x3366(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
je     9f54 <main+0x7904>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
lea    0x58(%esp),%esi
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     9880 <main+0x7230>
lea    -0x3360(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
je     979b <main+0x714b>
jmp    9810 <main+0x71c0>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    9ec1 <main+0x7871>
testb  $0x4,0x28(%esp)
je     96f5 <main+0x70a5>
lea    -0x30d8(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x107,0x8(%esp)
jmp    9e7b <main+0x782b>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    974b <main+0x70fb>
lea    -0x30b4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2db9(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xdb,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    9810 <main+0x71c0>
nop
mov    0x0(%ebp),%eax
lea    0x58(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
je     9880 <main+0x7230>
jmp    9810 <main+0x71c0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
xchg   %ax,%ax
jne    9713 <main+0x70c3>
lea    -0x3090(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x112,0x8(%esp)
jmp    9e7b <main+0x782b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
jmp    9675 <main+0x7025>
lea    0x0(%esi),%esi
movl   $0x0,0x30(%esp)
jmp    9653 <main+0x7003>
testb  $0x2,0x28(%esp)
movl   $0x0,0x5c(%esp)
je     974b <main+0x70fb>
jmp    98f4 <main+0x72a4>
mov    0x4c(%esp),%ebp
test   %ebp,%ebp
je     97cf <main+0x717f>
lea    -0x3329(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
cmp    $0x2,%eax
jne    97e2 <main+0x7192>
jmp    9fec <main+0x799c>
mov    0x2c(%esp),%esi
mov    $0x6,%ecx
lea    -0x3185(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    9fc6 <main+0x7976>
mov    0x80(%esp),%eax
movl   $0x1,0x14(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x58(%eax)
movl   $0x1,(%esp)
call   25a0 <ntfs_log_set_levels@plt>
movl   $0x2,(%esp)
call   25a0 <ntfs_log_set_levels@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x5c(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x4c(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
lea    0x58(%esp),%esi
movl   $0x1,0x50(%eax)
lea    -0x3346(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
je     9a5b <main+0x740b>
jmp    9810 <main+0x71c0>
lea    0x0(%esi),%esi
mov    0x80(%esp),%eax
movl   $0x1,0x54(%eax)
jmp    9790 <main+0x7140>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2360 <ntfs_set_char_encoding@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    9790 <main+0x7140>
lea    -0x301c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1b8,0x8(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d91(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    9810 <main+0x71c0>
lea    -0x2fb8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d91(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1bc,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x74(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
orl    $0x8,0x78(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
orl    $0x10,0x78(%eax)
jmp    9790 <main+0x7140>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   23a0 <__strdup@plt>
mov    0x80(%esp),%edx
test   %eax,%eax
mov    %eax,0x7c(%edx)
jne    9a5b <main+0x740b>
lea    -0x2f70(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1d7,0x8(%esp)
jmp    9b0d <main+0x74bd>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   23a0 <__strdup@plt>
mov    0x80(%esp),%edx
test   %eax,%eax
mov    %eax,0x6c(%edx)
jne    9a5b <main+0x740b>
lea    -0x2f40(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1e1,0x8(%esp)
jmp    9b0d <main+0x74bd>
lea    0x0(%esi),%esi
mov    0x80(%esp),%eax
movl   $0x1,0x68(%eax)
jmp    9790 <main+0x7140>
movl   $0x1,0x40(%esp)
jmp    9790 <main+0x7140>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0xc(%edx)
mov    %eax,0x10(%edx)
jmp    9790 <main+0x7140>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0xc(%edx)
jmp    9790 <main+0x7140>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x10(%edx)
jmp    9790 <main+0x7140>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x4(%edx)
jmp    9790 <main+0x7140>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x8(%edx)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x28(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x2c(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x30(%eax)
jmp    9790 <main+0x7140>
mov    0x88(%esp),%eax
test   %eax,%eax
je     a0b7 <main+0x7a67>
mov    0x80(%esp),%eax
movl   $0x1,0x38(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x34(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x3c(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x0,0x3c(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x44(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x48(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x0,0x48(%eax)
jmp    9790 <main+0x7140>
mov    0x2c(%esp),%esi
mov    $0x5,%ecx
lea    -0x3340(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    9a0b <main+0x73bb>
mov    0x80(%esp),%eax
movl   $0x0,0x14(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x24(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x18(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x0,0x18(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x2,0x18(%eax)
jmp    9790 <main+0x7140>
mov    0x80(%esp),%eax
movl   $0x1,0x3c(%esp)
movl   $0x0,0x44(%eax)
jmp    9790 <main+0x7140>
movl   $0x1,0x4c(%esp)
jmp    9790 <main+0x7140>
movl   $0x1,0x48(%esp)
jmp    9790 <main+0x7140>
mov    0x0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1f2,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x306c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d91(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    9810 <main+0x71c0>
lea    -0x3311(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
jmp    97ea <main+0x719a>
lea    -0x30fc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2da4(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xd2,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    9810 <main+0x71c0>
lea    -0x2d5f(%ebx),%eax
lea    0x58(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
jmp    97b7 <main+0x7167>
mov    $0x989680,%edx
imul   %edx
xchg   %ax,%ax
jmp    977e <main+0x712e>
lea    -0x330a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
jmp    97f3 <main+0x71a3>
mov    0x84(%esp),%eax
mov    0x8(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x40(%esp),%edi
test   %edi,%edi
je     a015 <main+0x79c5>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
je     9f91 <main+0x7941>
mov    0x80(%esp),%eax
orl    $0x4,0x78(%eax)
mov    0x44(%esp),%edx
test   %edx,%edx
je     9fa4 <main+0x7954>
mov    0x80(%esp),%eax
orl    $0x20,0x78(%eax)
mov    0x80(%esp),%eax
mov    0x24(%eax),%eax
test   %eax,%eax
je     9fbd <main+0x796d>
mov    0x80(%esp),%eax
andl   $0xfffffff7,0x78(%eax)
mov    0x58(%esp),%esi
jmp    981e <main+0x71ce>
mov    0x2c(%esp),%esi
mov    $0xa,%ecx
lea    -0x333b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    a031 <main+0x79e1>
mov    0x80(%esp),%eax
movl   $0x2,0x14(%eax)
jmp    9790 <main+0x7140>
lea    -0x3314(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
jne    9810 <main+0x71c0>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
jmp    97e2 <main+0x7192>
mov    0x4c(%esp),%esi
test   %esi,%esi
je     9f7e <main+0x792e>
mov    0x80(%esp),%eax
orl    $0x1,0x78(%eax)
jmp    9f91 <main+0x7941>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    a0e5 <main+0x7a95>
mov    0x2c(%esp),%esi
mov    $0x8,%ecx
lea    -0x3331(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    a0e5 <main+0x7a95>
mov    0x80(%esp),%eax
movl   $0x3,0x14(%eax)
jmp    9790 <main+0x7140>
lea    0x310(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xf5,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x335e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2d91(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    982a <main+0x71da>
mov    0x0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x161,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x306c(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    9e7b <main+0x782b>
lea    -0x304c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1a3,0x8(%esp)
jmp    9b0d <main+0x74bd>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x4cab,%ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%esi
mov    0x220(%ebx),%eax
lea    -0x3a4(%ebx),%ebp
lea    -0x32da(%ebx),%edi
movl   $0x0,(%eax)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   22a0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     a318 <main+0x7cc8>
cmp    $0x68,%eax
je     a300 <main+0x7cb0>
jg     a1f8 <main+0x7ba8>
cmp    $0x1,%eax
je     a278 <main+0x7c28>
cmp    $0x56,%eax
jne    a213 <main+0x7bc3>
call   2190 <fuse_version@plt>
lea    0x310(%ebx),%edx
mov    (%edx),%edx
movl   $0x0,0x10(%esp)
mov    %eax,0x24(%esp)
lea    -0x4194(%ebx),%eax
mov    %eax,0x20(%esp)
lea    -0x4186(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3301(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2dcc(%ebx),%eax
mov    %edx,0x18(%esp)
movl   $0x8,0xc(%esp)
movl   $0x271,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
movl   $0x0,(%esp)
call   2270 <exit@plt>
nop
cmp    $0x6f,%eax
je     a2a8 <main+0x7c58>
cmp    $0x76,%eax
je     a13e <main+0x7aee>
cmp    $0x6e,%eax
je     a13e <main+0x7aee>
mov    0x200(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%edx
lea    0x310(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x32f4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2dcc(%ebx),%eax
movl   $0x275,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     a340 <main+0x7cf0>
mov    0x50(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    a3f0 <main+0x7da0>
mov    0x228(%ebx),%eax
mov    0x50(%esp),%ecx
mov    (%eax),%eax
mov    %eax,(%ecx)
jmp    a13e <main+0x7aee>
mov    0x50(%esp),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     a310 <main+0x7cc0>
lea    -0x3342(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
lea    0x4(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   9280 <main+0x6c30>
mov    0x2c(%esp),%edx
test   %eax,%eax
jne    a2f4 <main+0x7ca4>
mov    0x228(%ebx),%eax
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   9280 <main+0x6c30>
test   %eax,%eax
je     a13e <main+0x7aee>
mov    $0xffffffff,%eax
jmp    a26e <main+0x7c1e>
xchg   %ax,%ax
call   *0x54(%esp)
movl   $0x9,(%esp)
call   2270 <exit@plt>
lea    0x4(%eax),%edx
jmp    a2d8 <main+0x7c88>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     a46b <main+0x7e1b>
mov    0x50(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     a43b <main+0x7deb>
xor    %eax,%eax
jmp    a26e <main+0x7c1e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1001,(%esp)
call   1fa0 <ntfs_malloc@plt>
mov    0x50(%esp),%ecx
test   %eax,%eax
mov    %eax,0x8(%ecx)
je     a2f4 <main+0x7ca4>
mov    0x228(%ebx),%ecx
mov    (%ecx),%edx
mov    0x50(%esp),%ecx
mov    %edx,0xc(%ecx)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   21a0 <ntfs_realpath_canonicalize@plt>
test   %eax,%eax
jne    a13e <main+0x7aee>
mov    0x228(%ebx),%eax
mov    (%eax),%edx
lea    0x310(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2f10(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2dcc(%ebx),%eax
movl   $0x24c,0x8(%esp)
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   1fb0 <free@plt>
mov    0x50(%esp),%eax
movl   $0x0,0x8(%eax)
or     $0xffffffff,%eax
jmp    a26e <main+0x7c1e>
xchg   %ax,%ax
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x256,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2eec(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3396(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2dcc(%ebx),%eax
mov    %eax,(%esp)
call   1ef0 <ntfs_log_redirect@plt>
jmp    a2f4 <main+0x7ca4>
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x27f,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2ea4(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    a41e <main+0x7dce>
lea    0x310(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x27b,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x32d2(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    a41e <main+0x7dce>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x491b,%ebx
sub    $0x5c,%esp
mov    0x74(%esp),%ebp
lea    0x4c(%esp),%eax
movl   $0x0,0x30(%esp)
mov    %eax,0x38(%esp)
xchg   %ax,%ax
mov    %ebp,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
call   2540 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    a650 <main+0x8000>
mov    0x4(%ebp),%eax
movl   $0x0,0x4c(%esp)
movzbl 0x9(%eax),%edx
test   %dl,%dl
je     a4c8 <main+0x7e78>
mov    0x38(%esp),%edi
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
movzwl 0xa(%eax),%edx
add    %edx,%eax
mov    %eax,(%esp)
call   2220 <ntfs_ucstombs@plt>
test   %eax,%eax
mov    %eax,%edx
js     a71f <main+0x80cf>
mov    0x80(%esp),%eax
test   %eax,%eax
je     a5b0 <main+0x7f60>
mov    0x4c(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   22f0 <strlen@plt>
mov    0x3c(%esp),%edx
cmp    $0x9,%eax
jbe    a618 <main+0x7fc8>
mov    0x34(%esp),%esi
mov    $0x8,%ecx
lea    -0x2d12(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    a618 <main+0x7fc8>
mov    0x34(%esp),%esi
xchg   %ax,%ax
mov    %esi,(%esp)
call   1fb0 <free@plt>
jmp    a4c8 <main+0x7e78>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    0x4c(%esp),%esi
lea    0x1(%eax,%edx,1),%eax
mov    %eax,0x30(%esp)
test   %edx,%edx
je     a5a0 <main+0x7f50>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     a5a0 <main+0x7f50>
mov    0x30(%esp),%eax
cmp    %eax,0x7c(%esp)
jb     a73a <main+0x80ea>
mov    0x80(%esp),%edi
test   %edi,%edi
jne    a630 <main+0x7fe0>
mov    0x78(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x34(%esp)
mov    %eax,(%esp)
call   23c0 <strncpy@plt>
mov    0x34(%esp),%edx
add    0x78(%esp),%edx
lea    0x1(%edx),%eax
movb   $0x0,(%edx)
mov    %eax,0x78(%esp)
jmp    a5a0 <main+0x7f50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    0x34(%esp),%esi
lea    0x6(%eax,%edx,1),%eax
mov    %eax,0x30(%esp)
jmp    a5c0 <main+0x7f70>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
mov    $0x2e,%ecx
addl   $0x5,0x78(%esp)
movl   $0x72657375,(%eax)
mov    %cx,0x4(%eax)
jmp    a5e5 <main+0x7f95>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
mov    0xc(%eax),%eax
mov    0xd0(%eax),%esi
test   %esi,%esi
je     a6f0 <main+0x80a0>
mov    0x30(%esp),%edi
mov    0x70(%esp),%ebp
jmp    a683 <main+0x8033>
nop
mov    0x14(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
test   %eax,%eax
jne    a690 <main+0x8040>
mov    (%esi),%esi
test   %esi,%esi
je     a6ec <main+0x809c>
mov    0x4(%esi),%eax
cmp    $0x4,%eax
je     a700 <main+0x80b0>
cmp    $0x5,%eax
je     a670 <main+0x8020>
lea    0x8(%esi),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x30(%esp)
call   22f0 <strlen@plt>
mov    0x30(%esp),%ecx
mov    %eax,%edx
lea    0x1(%edi,%eax,1),%edi
mov    0x7c(%esp),%eax
test   %eax,%eax
je     a67d <main+0x802d>
cmp    %edi,0x7c(%esp)
jb     a756 <main+0x8106>
lea    0x1(%edx),%eax
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %eax,(%esp)
call   1fe0 <memcpy@plt>
mov    0x78(%esp),%eax
mov    0x30(%esp),%edx
mov    (%esi),%esi
lea    0x1(%eax,%edx,1),%eax
test   %esi,%esi
mov    %eax,0x78(%esp)
jne    a683 <main+0x8033>
mov    %edi,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebp),%eax
mov    0xcc(%eax),%edx
test   %edx,%edx
je     a67d <main+0x802d>
mov    0x14(%ebp),%eax
shr    $0xe,%eax
and    $0x1,%eax
jmp    a679 <main+0x8029>
call   23b0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x30(%esp)
negl   0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   1fb0 <free@plt>
movl   $0xffffffde,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffde,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     a838 <main+0x81e8>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     a854 <main+0x8204>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    a7d0 <main+0x8180>
cmp    %ebp,%esi
jbe    a7f8 <main+0x81a8>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    a7d8 <main+0x8188>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    a818 <main+0x81c8>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     a7ea <main+0x819a>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    a807 <main+0x81b7>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    a7d8 <main+0x8188>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    a868 <main+0x8218>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    a82e <main+0x81de>
cmp    %ebp,%eax
jae    a7d4 <main+0x8184>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    a7d8 <main+0x8188>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    a7ab <main+0x815b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    a7ab <main+0x815b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     a8d8 <main+0x8288>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    a8cd <main+0x827d>
cmp    0x4(%esp),%ebp
je     a8d8 <main+0x8288>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    a7d8 <main+0x8188>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    a7d8 <main+0x8188>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    a940 <main+0x82f0>
cmp    %ebp,%ecx
ja     a978 <main+0x8328>
test   %ecx,%ecx
mov    %ecx,%esi
jne    a928 <main+0x82d8>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     a968 <main+0x8318>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    a988 <main+0x8338>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    a9f8 <main+0x83a8>
cmp    %edx,%eax
jb     a9f8 <main+0x83a8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     aa08 <main+0x83b8>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    a9e9 <main+0x8399>
cmp    (%esp),%esi
je     aa08 <main+0x83b8>
mov    %edi,%eax
xor    %edx,%edx
jmp    a96c <main+0x831c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    a96c <main+0x831c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    aa68 <main+0x8418>
cmp    %edi,%esi
jbe    aaa0 <main+0x8450>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     aac0 <main+0x8470>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    aad0 <main+0x8480>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     ab68 <main+0x8518>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    aab1 <main+0x8461>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    aa5b <main+0x840b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     ab54 <main+0x8504>
cmp    %eax,0xc(%esp)
jb     ab50 <main+0x8500>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    ab2e <main+0x84de>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    ab2e <main+0x84de>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     aa81 <main+0x8431>
jmp    aa91 <main+0x8441>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   38c0 <main+0x1270>
add    $0x4239,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x3bc(%ebx),%esi
call   1e88 <_init>
lea    -0x3c0(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     abdb <main+0x858b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x3c0(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    abb8 <main+0x8568>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   38c0 <main+0x1270>
add    $0x41be,%ebx
sub    $0x8,%esp
call   2040 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   38c0 <main+0x1270>
add    $0x41a7,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
gs
js     aca7 <_IO_stdin_used+0x7b>
gs
jb     aca4 <_IO_stdin_used+0x78>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
add    %dh,(%edx)
xor    %dh,(%ecx)
xor    (%esi),%ebp
xor    %ebp,(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     acb5 <_IO_stdin_used+0x89>
jae    ac7e <_IO_stdin_used+0x52>
xor    0x2e(%edi),%esp
arpl   %ax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    acca <_IO_stdin_used+0x9e>
je     acc7 <_IO_stdin_used+0x9b>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    ac84 <_IO_stdin_used+0x58>
sub    %ah,0xa2973
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    acec <_IO_stdin_used+0xc0>
and    %ah,%gs:0x702f0073
jb     acf7 <_IO_stdin_used+0xcb>
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     acf8 <_IO_stdin_used+0xcc>
insl   (%dx),%es:(%edi)
jae    ac96 <_IO_stdin_used+0x6a>
data16
jne    ad0c <_IO_stdin_used+0xe0>
bound  %ebp,%gs:0xa(%ebx,%ebp,2)
add    %ah,0x75(%esi)
jae    ad08 <_IO_stdin_used+0xdc>
or     (%eax),%al
outsb  %cs:(%esi),(%dx)
je     ad0f <_IO_stdin_used+0xe3>
jae    acd8 <_IO_stdin_used+0xac>
xor    0x2d(%edi),%esp
add    %ah,0x25732573
xor    %dh,(%ecx)
xor    %ah,0x73(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
jo     ad2f <_IO_stdin_used+0x103>
imul   $0x61662066,0x74(%esi),%ebp
imul   $0x6425203a,0x64(%ebp,%eiz,2),%ebp
and    %ah,(%ecx)
cmp    $0xa642520,%eax
add    %ch,0x74(%esi)
data16
jae    ad07 <_IO_stdin_used+0xdb>
jae    ad4f <_IO_stdin_used+0x123>
jb     ad42 <_IO_stdin_used+0x116>
popa
insl   (%dx),%es:(%edi)
jae    ad0f <_IO_stdin_used+0xe3>
insb   (%dx),%es:(%edi)
imul   $0x756f4300,0x74(%ebx),%esi
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     ad10 <_IO_stdin_used+0xe4>
outsl  %ds:(%esi),(%dx)
jo     ad58 <_IO_stdin_used+0x12c>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%ebx,%edx,2)
arpl   %si,%gs:0x72(%ebp)
add    %dl,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e4f,%eax
add    %dl,0x65(%edx)
popa
fs
sub    $0x74697257,%eax
add    %ch,%gs:(%edi)
fs
gs
jbe    ad4b <_IO_stdin_used+0x11f>
outsb  %ds:(%esi),(%dx)
jne    ad8b <_IO_stdin_used+0x15f>
insb   (%dx),%es:(%edi)
add    %ch,(%edi)
jae    ad86 <_IO_stdin_used+0x15a>
imul   $0x70646f6d,0x2f(%esi),%ebp
jb     ad9c <_IO_stdin_used+0x170>
bound  %esp,0x0(%ebp)
das
fs
gs
jbe    ad64 <_IO_stdin_used+0x138>
data16
jne    adab <_IO_stdin_used+0x17f>
add    %al,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     adaf <_IO_stdin_used+0x183>
and    %ah,(%edi)
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    add3 <_IO_stdin_used+0x1a7>
and    %ah,(%edi)
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    ade2 <_IO_stdin_used+0x1b6>
je     ad96 <_IO_stdin_used+0x16a>
daa
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     adec <_IO_stdin_used+0x1c0>
popa
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
and    %ah,(%edx,%eax,2)
imul   $0x682f0070,0x61(%ebp,%ebp,2),%esi
imul   $0x6c696672,0x65(%edx),%esp
jae,pn ae1c <_IO_stdin_used+0x1f0>
jae    ada5 <_IO_stdin_used+0x179>
sub    $0x72,%al
outsl  %ds:(%esi),(%dx)
add    %ch,(%edx,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x2c,0x76(%ebp,%eiz,2),%esp
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x75253d,0x65(%edx),%edi
sub    $0x64,%al
gs
popaw
jne    ae2f <_IO_stdin_used+0x203>
je     ae24 <_IO_stdin_used+0x1f8>
jo     ae2c <_IO_stdin_used+0x200>
jb     ae36 <_IO_stdin_used+0x20a>
imul   $0x736e6f69,0x73(%ebx),%esi
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    ae42 <_IO_stdin_used+0x216>
je     adff <_IO_stdin_used+0x1d3>
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
and    %ch,0x70(%edi)
je     ae51 <_IO_stdin_used+0x225>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    ae1a <_IO_stdin_used+0x1ee>
or     (%eax),%al
sub    $0x6f2d006f,%eax
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x56000a2e,0x65(%edx),%edi
gs
jb     ae86 <_IO_stdin_used+0x25a>
imul   $0x20732520,0x6e(%edi),%ebp
and    $0x64252073,%eax
or     (%eax),%al
inc    %ebx
insl   (%dx),%es:(%edi)
fs
insb   (%dx),%es:(%edi)
imul   $0x74706f20,0x65(%esi),%ebp
imul   $0x25203a73,0x6e(%edi),%ebp
jae    ae3f <_IO_stdin_used+0x213>
add    %cl,0x6f(%ebp)
jne    aea8 <_IO_stdin_used+0x27c>
je     ae5c <_IO_stdin_used+0x230>
outsl  %ds:(%esi),(%dx)
jo     aeb3 <_IO_stdin_used+0x287>
imul   $0x25203a73,0x6e(%edi),%ebp
jae    ae52 <_IO_stdin_used+0x226>
add    %ah,0x63202c73
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     aec1 <_IO_stdin_used+0x295>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x6e000a64
je     aecd <_IO_stdin_used+0x2a1>
jae    ae96 <_IO_stdin_used+0x26a>
xor    0x0(%edi),%esp
or     0x73252073,%ah
and    %ah,0x64252073
and    %ch,0x69685420
jb     aee4 <_IO_stdin_used+0x2b8>
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     aee8 <_IO_stdin_used+0x2bc>
je     aef2 <_IO_stdin_used+0x2c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %al,0x69(%edx,%esi,2)
jbe    aefb <_IO_stdin_used+0x2cf>
jb     aea2 <_IO_stdin_used+0x276>
or     %ecx,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     af0e <_IO_stdin_used+0x2e2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x58202c64
inc    %ecx
push   %esp
push   %esp
push   %edx
push   %ebx
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
sub    $0x20,%al
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
and    %al,0x43(%ecx)
dec    %esp
push   %ebx
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
or     (%edx),%cl
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     af50 <_IO_stdin_used+0x324>
jb     af42 <_IO_stdin_used+0x316>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,0x3030322d
aaa
and    %bl,0x75(%ecx)
jb     af50 <_IO_stdin_used+0x324>
and    %dl,0x61(%eax)
imul   $0x63,0x75(%eax),%ebp
push   $0x430a7969
outsl  %ds:(%esi),(%dx)
jo     af77 <_IO_stdin_used+0x34b>
jb     af69 <_IO_stdin_used+0x33d>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%esi)
sub    $0x39303032,%eax
and    %dl,0x7a(%ebx)
popa
bound  %ebp,0x6c(%edi)
arpl   %si,0x20(%ebx)
push   %ebx
jp     af7f <_IO_stdin_used+0x353>
imul   $0x73,0x63(%ecx),%esp
imul   $0x79706f43,0xa(%ebx,%esi,2),%esi
jb     af95 <_IO_stdin_used+0x369>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edi)
sub    $0x32313032,%eax
and    %cl,0x65(%edx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x72656950,%eax
jb     afae <_IO_stdin_used+0x382>
and    %al,0x6e(%ecx)
fs
jb     afb4 <_IO_stdin_used+0x388>
or     0x6f(%ebx),%al
jo     afcd <_IO_stdin_used+0x3a1>
jb     afbf <_IO_stdin_used+0x393>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %bh,(%ecx)
and    %al,0x72(%ebp)
imul   $0x7372614c,0x20(%ebx),%ebp
jae    afdd <_IO_stdin_used+0x3b1>
outsb  %ds:(%esi),(%dx)
or     (%edx),%cl
push   %ebp
jae    afd5 <_IO_stdin_used+0x3a9>
cmp    %gs:(%bx,%si),%ah
and    %ah,(%eax)
and    %ah,0x2d5b2073
outsl  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     afef <_IO_stdin_used+0x3c3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %ebx
sub    $0x2e,%al
cs
cs
pop    %ebp
pop    %ebp
and    %bh,(%esp,%eiz,2)
gs
jbe    affe <_IO_stdin_used+0x3d2>
arpl   %sp,0x7c(%ebp)
imul   $0x665f6567,0x61(%ebp),%ebp
imul   $0x6f6d3c20,0x3e(%ebp,%eiz,2),%ebp
jne    b017 <_IO_stdin_used+0x3eb>
je     b00a <_IO_stdin_used+0x3de>
jo     b01c <_IO_stdin_used+0x3f0>
imul   $0x4f0a0a3e,0x74(%esi),%ebp
jo     b02a <_IO_stdin_used+0x3fe>
imul   $0x20203a73,0x6e(%edi),%ebp
jb     b02e <_IO_stdin_used+0x402>
and    %ch,(%eax)
jb     b028 <_IO_stdin_used+0x3fc>
popa
fs
sub    $0x796c6e6f,%eax
and    %ch,0x6f(%ebp)
jne    b03d <_IO_stdin_used+0x411>
je     affa <_IO_stdin_used+0x3ce>
sub    $0x20,%al
ja     b03e <_IO_stdin_used+0x412>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     b04d <_IO_stdin_used+0x421>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    b00d <_IO_stdin_used+0x3e1>
and    %dh,0x69(%ebp)
fs
cmp    $0x6967202c,%eax
fs
cmp    $0x20200a2c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    b067 <_IO_stdin_used+0x43b>
popa
jae    b068 <_IO_stdin_used+0x43c>
cmp    $0x6d66202c,%eax
popa
jae    b070 <_IO_stdin_used+0x444>
cmp    $0x6d64202c,%eax
popa
jae    b078 <_IO_stdin_used+0x44c>
cmp    $0x7473202c,%eax
jb     b079 <_IO_stdin_used+0x44d>
popa
insl   (%dx),%es:(%edi)
jae    b077 <_IO_stdin_used+0x44b>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x3d(%ebp)
or     %cs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6c(%eax)
gs
popa
jae    b099 <_IO_stdin_used+0x46d>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x74(%ebp,%eiz,2)
popa
imul   $0x74206e69,0x20(%ebx,%esi,2),%ebp
push   $0x616d2065
outsb  %ds:(%esi),(%dx)
jne    b0b2 <_IO_stdin_used+0x486>
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
je     b0cf <_IO_stdin_used+0x4a3>
jo     b0bd <_IO_stdin_used+0x491>
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%esi)
data16
jae    b090 <_IO_stdin_used+0x464>
xor    0x29(%edi),%esp
or     %cs:(%edx),%cl
inc    %ebp
js     b0cd <_IO_stdin_used+0x4a1>
insl   (%dx),%es:(%edi)
jo     b0db <_IO_stdin_used+0x4af>
cmp    %gs:(%eax),%ah
outsb  %ds:(%esi),(%dx)
je     b0db <_IO_stdin_used+0x4af>
jae    b0a4 <_IO_stdin_used+0x478>
xor    0x20(%edi),%esp
das
fs
gs
jbe    b0ae <_IO_stdin_used+0x482>
jae    b0e5 <_IO_stdin_used+0x4b9>
popa
xor    %esp,(%eax)
das
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     b0b8 <_IO_stdin_used+0x48c>
ja     b0f4 <_IO_stdin_used+0x4c8>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     b103 <_IO_stdin_used+0x4d7>
or     (%edx),%cl
and    $0x73,%eax
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
imul   $0x69616620,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    b0e6 <_IO_stdin_used+0x4ba>
add    %al,(%eax)
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     b138 <_IO_stdin_used+0x50c>
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    b0f1 <_IO_stdin_used+0x4c5>
daa
and    $0x28202773,%eax
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    b10b <_IO_stdin_used+0x4df>
and    %dh,0x69(%edi)
je     b14f <_IO_stdin_used+0x523>
and    %ah,0x75(%ebx)
jb     b15e <_IO_stdin_used+0x532>
outsb  %gs:(%esi),(%dx)
je     b110 <_IO_stdin_used+0x4e4>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x74(%ebx)
jb     b15f <_IO_stdin_used+0x533>
popa
insl   (%dx),%es:(%edi)
jae    b11e <_IO_stdin_used+0x4f2>
popa
arpl   %sp,0x65(%ebx)
jae    b177 <_IO_stdin_used+0x54b>
and    %ch,0x6e(%ecx)
je     b16e <_IO_stdin_used+0x542>
jb     b171 <_IO_stdin_used+0x545>
popa
arpl   %sp,0x2e(%ebp)
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x65(%eax)
jb     b185 <_IO_stdin_used+0x559>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x61(%ebx)
arpl   %bp,0x65(%eax)
and    %bh,(%edx)
and    %ah,0x7720756c
jb     b198 <_IO_stdin_used+0x56c>
je     b196 <_IO_stdin_used+0x56a>
jae    b15f <_IO_stdin_used+0x533>
and    %ah,0x7220756c
gs
popa
fs
jae    b16a <_IO_stdin_used+0x53e>
and    %ah,0x252e756c
xor    %ebp,0x25(%ebp,%esi,2)
and    $0x74696820,%eax
jae    b159 <_IO_stdin_used+0x52d>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     b1c2 <_IO_stdin_used+0x596>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
jo     b1d4 <_IO_stdin_used+0x5a8>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     b1d3 <_IO_stdin_used+0x5a7>
insl   (%dx),%es:(%edi)
jae    b171 <_IO_stdin_used+0x545>
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    b1d8 <_IO_stdin_used+0x5ac>
popa
je     b1f0 <_IO_stdin_used+0x5c4>
jb     b1dd <_IO_stdin_used+0x5b1>
jo     b1f2 <_IO_stdin_used+0x5c6>
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     b1f7 <_IO_stdin_used+0x5cb>
jb     b1aa <_IO_stdin_used+0x57e>
jb     b1f1 <_IO_stdin_used+0x5c5>
popa
imul   $0x73252720,%fs:0x67(%esi),%ebp
daa
and    %ah,0x74(%ecx)
and    %ch,0x66(%edi)
data16
jae    b204 <_IO_stdin_used+0x5d8>
je     b1c1 <_IO_stdin_used+0x595>
and    $0x3a646c6c,%eax
and    %ah,0x20646c6c
cmp    $0x3e,%al
and    %ah,0x646c6c
push   %edx
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%esi)
imul   $0x7845202e,0x64(%ebp,%eiz,2),%ebp
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    b1fc <_IO_stdin_used+0x5d0>
and    %dh,0x61(%edi)
jae    b1fa <_IO_stdin_used+0x5ce>
jb     b241 <_IO_stdin_used+0x615>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
daa
and    $0x2773,%eax
add    %dl,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%esi)
imul   $0x7845202e,0x64(%ebp,%eiz,2),%ebp
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    b234 <_IO_stdin_used+0x608>
and    %dh,0x74(%ebx)
imul   $0x73657270,0x20(%esp,%ebp,2),%ebp
outsb  %gs:(%esi),(%dx)
je     b23c <_IO_stdin_used+0x610>
popa
jae    b23f <_IO_stdin_used+0x613>
daa
and    $0x55002773,%eax
jae    b28c <_IO_stdin_used+0x660>
jb     b249 <_IO_stdin_used+0x61d>
insl   (%dx),%es:(%edi)
popa
jo     b29d <_IO_stdin_used+0x671>
imul   $0x69756220,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
je     b263 <_IO_stdin_used+0x637>
and    %dl,0x6f(%eax)
jae    b2a5 <_IO_stdin_used+0x679>
js     b25e <_IO_stdin_used+0x632>
inc    %ecx
inc    %ebx
dec    %esp
jae    b263 <_IO_stdin_used+0x637>
imul   $0x657375,0x20(%esi),%ebp
add    %al,(%eax)
inc    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     b2cc <_IO_stdin_used+0x6a0>
push   $0x61207069
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     b2d2 <_IO_stdin_used+0x6a6>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6e(%ebp)
outsw  %ds:(%esi),(%dx)
jb     b2d6 <_IO_stdin_used+0x6aa>
gs add %al,%fs:%gs:(%eax)
add    %cl,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     b2f1 <_IO_stdin_used+0x6c5>
push   $0x61207069
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     b2f7 <_IO_stdin_used+0x6cb>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %al,(%eax)
push   %ebp
jae    b304 <_IO_stdin_used+0x6d8>
jb     b2c1 <_IO_stdin_used+0x695>
insl   (%dx),%es:(%edi)
popa
jo     b315 <_IO_stdin_used+0x6e9>
imul   $0x69756220,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
je     b2db <_IO_stdin_used+0x6af>
and    %dl,0x6f(%eax)
jae    b31d <_IO_stdin_used+0x6f1>
js     b2d6 <_IO_stdin_used+0x6aa>
inc    %ecx
inc    %ebx
dec    %esp
jae    b2db <_IO_stdin_used+0x6af>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     b2df <_IO_stdin_used+0x6b3>
jne    b334 <_IO_stdin_used+0x708>
gs add %cl,%fs:%gs:0x6f(%ebp)
jne    b336 <_IO_stdin_used+0x70a>
je     b2ea <_IO_stdin_used+0x6be>
imul   $0x696e6564,0x20(%ebx),%esi
gs and %ah,%fs:%gs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    b340 <_IO_stdin_used+0x714>
and    %dh,0x65(%ebx)
je     b355 <_IO_stdin_used+0x729>
imul   $0x7320646e,0x61(%eax,%eiz,1),%esp
gs
je     b352 <_IO_stdin_used+0x726>
imul   $0x20746f6f,0x72(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
je     b35c <_IO_stdin_used+0x730>
jae    b325 <_IO_stdin_used+0x6f9>
xor    0x20(%edi),%esp
imul   $0x65736e69,0x20(%ebx),%esi
arpl   %si,0x72(%ebp)
and    %dh,%gs:0x69(%edi)
je     b373 <_IO_stdin_used+0x747>
and    %dh,0x65(%eax,%ebp,2)
or     0x78(%ebp),%ah
je     b379 <_IO_stdin_used+0x74d>
jb     b384 <_IO_stdin_used+0x758>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
and    %ch,0x62(%ecx,%ebp,2)
jb     b384 <_IO_stdin_used+0x758>
jb     b39e <_IO_stdin_used+0x772>
and    %al,%cs:0x69(%ebp)
je     b393 <_IO_stdin_used+0x767>
gs
jb     b34e <_IO_stdin_used+0x722>
jb     b395 <_IO_stdin_used+0x769>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    b399 <_IO_stdin_used+0x76d>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
je     b3b2 <_IO_stdin_used+0x786>
imul   $0x69677465,0x73(%edi,%ebp,1),%esp
and    %ah,%fs:0x69(%edx)
je     b36b <_IO_stdin_used+0x73f>
data16
jb     b3bd <_IO_stdin_used+0x791>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     b3d3 <_IO_stdin_used+0x7a7>
or     0x72(%edi),%ch
and    %dh,0x65(%edx)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
sub    $0x77204733,%eax
imul   $0x65746e69,0x20(%eax,%ebp,2),%esi
addr16 jb b3db <_IO_stdin_used+0x7af>
je     b3e1 <_IO_stdin_used+0x7b5>
and    %al,%fs:0x55(%esi)
push   %ebx
inc    %ebp
and    %dh,0x75(%ebx)
jo     b3f7 <_IO_stdin_used+0x7cb>
outsl  %ds:(%esi),(%dx)
jb     b3fe <_IO_stdin_used+0x7d2>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x61(%ebp)
imul   $0x69,0x20(%ebp),%esp
je     b3b7 <_IO_stdin_used+0x78b>
jae    b3fe <_IO_stdin_used+0x7d2>
je     b410 <_IO_stdin_used+0x7e4>
imul   $0x2e746f6f,0x72(%eax,%eiz,1),%esp
or     0x6c(%eax),%dl
gs
popa
jae    b40f <_IO_stdin_used+0x7e3>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x6f(%ebp)
jb     b418 <_IO_stdin_used+0x7ec>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     b427 <_IO_stdin_used+0x7fb>
popa
je     b426 <_IO_stdin_used+0x7fa>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
or     0x74(%eax),%ch
je     b437 <_IO_stdin_used+0x80b>
cmp    (%edi),%ch
das
je     b441 <_IO_stdin_used+0x815>
js     b433 <_IO_stdin_used+0x807>
jb     b431 <_IO_stdin_used+0x805>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    b449 <_IO_stdin_used+0x81d>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    b41a <_IO_stdin_used+0x7ee>
and    0x6e(%ebp),%esi
jo     b462 <_IO_stdin_used+0x836>
imul   $0x6567656c,0x69(%esi),%esi
or     %fs:(%eax),%al
add    %al,(%eax)
dec    %eax
dec    %ecx
dec    %esi
push   %esp
cmp    (%eax),%ah
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    b426 <_IO_stdin_used+0x7fa>
jae    b470 <_IO_stdin_used+0x844>
outsl  %ds:(%esi),(%dx)
jne    b477 <_IO_stdin_used+0x84b>
and    %ah,%fs:0x65(%edx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     b441 <_IO_stdin_used+0x815>
and    %ch,0x72(%edi)
and    %ch,0x61(%ebp)
imul   $0x6e,0x20(%ebp),%esp
je     b487 <_IO_stdin_used+0x85b>
jae    b450 <_IO_stdin_used+0x824>
xor    0x20(%edi),%esp
jae    b48d <_IO_stdin_used+0x861>
je     b49f <_IO_stdin_used+0x873>
imul   $0x2c746f6f,0x72(%eax,%eiz,1),%esp
and    %ch,0x72(%edi)
and    %ch,0x61(%edi,%ebp,2)
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%ebx)
jb     b4bc <_IO_stdin_used+0x890>
gs
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    b4c2 <_IO_stdin_used+0x896>
and    %ah,%gs:0x73(%ecx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     b480 <_IO_stdin_used+0x854>
sub    %ah,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     b4d9 <_IO_stdin_used+0x8ad>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
data16
jne    b4e1 <_IO_stdin_used+0x8b5>
gs
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
imul   $0x20646f6d,0x73(%esi),%ebp
cmp    $0x70,%al
popa
je     b4e9 <_IO_stdin_used+0x8bd>
pop    %edi
je     b4f3 <_IO_stdin_used+0x8c7>
ds
das
data16
jne    b4fc <_IO_stdin_used+0x8d0>
gs imul $0x20,%cs:%gs:0x27(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x72(%edi)
and    %ch,0x6e(%ecx)
jae    b508 <_IO_stdin_used+0x8dc>
outsl  %ds:(%esi),(%dx)
and    %bh,%fs:(%eax,%esi,2)
popa
je     b50b <_IO_stdin_used+0x8df>
pop    %edi
je     b515 <_IO_stdin_used+0x8e9>
ds
das
data16
jne    b51e <_IO_stdin_used+0x8f2>
gs outsl %cs:%gs:(%esi),(%dx)
daa
sub    %ebp,(%esi)
and    %cl,0x61(%ebp)
imul   $0x61,0x20(%ebp),%esp
insb   (%dx),%es:(%edi)
jae    b52a <_IO_stdin_used+0x8fe>
and    %dh,0x75(%ebx)
jb     b525 <_IO_stdin_used+0x8f9>
and    %dh,0x61(%eax,%ebp,2)
je     b4e6 <_IO_stdin_used+0x8ba>
je     b530 <_IO_stdin_used+0x904>
and    %ah,%gs:0x75(%esi)
jae    b533 <_IO_stdin_used+0x907>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20202020,0x65(%ebx),%esp
and    %ah,(%eax)
gs
js     b547 <_IO_stdin_used+0x91b>
jae    b554 <_IO_stdin_used+0x928>
jae    b510 <_IO_stdin_used+0x8e4>
and    %cl,0x74(%ecx)
daa
jae    b508 <_IO_stdin_used+0x8dc>
jne    b55d <_IO_stdin_used+0x931>
jne    b54d <_IO_stdin_used+0x921>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    b510 <_IO_stdin_used+0x8e4>
imul   $0x642f2072,%gs:0x65(%eax,%ebp,2),%esi
64
gs
jbe    b52b <_IO_stdin_used+0x8ff>
data16
jne    b572 <_IO_stdin_used+0x946>
and    %ch,%gs:0x72(%edi)
and    %ch,(%edi)
fs
gs
jbe    b538 <_IO_stdin_used+0x90c>
insl   (%dx),%es:(%edi)
imul   $0x7375662f,0x63(%ebx),%esi
gs add %dl,%cs:%gs:0x6e(%ebp)
jo     b58a <_IO_stdin_used+0x95e>
imul   $0x6567656c,0x69(%esi),%esi
and    %dh,%fs:0x73(%ebp)
gs
jb     b546 <_IO_stdin_used+0x91a>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%esi)
je     b54e <_IO_stdin_used+0x922>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b5a0 <_IO_stdin_used+0x974>
je     b554 <_IO_stdin_used+0x928>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    b5ac <_IO_stdin_used+0x980>
arpl   %sp,0x73(%ebp)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x78(%ebp)
je     b5ba <_IO_stdin_used+0x98e>
jb     b5c5 <_IO_stdin_used+0x999>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
or     0x62(%ecx,%ebp,2),%ch
jb     b5c5 <_IO_stdin_used+0x999>
jb     b5df <_IO_stdin_used+0x9b3>
and    %al,%cs:0x69(%ebp)
je     b5d4 <_IO_stdin_used+0x9a8>
gs
jb     b58f <_IO_stdin_used+0x963>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b5e1 <_IO_stdin_used+0x9b5>
je     b595 <_IO_stdin_used+0x969>
je     b5df <_IO_stdin_used+0x9b3>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    b5eb <_IO_stdin_used+0x9bf>
and    %ah,%gs:0x73(%ecx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     b5b4 <_IO_stdin_used+0x988>
and    %ch,0x72(%edi)
and    %dh,0x65(%edx)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
sub    $0x77204733,%eax
imul   $0x65746e69,0x20(%eax,%ebp,2),%esi
addr16 jb b609 <_IO_stdin_used+0x9dd>
je     b60f <_IO_stdin_used+0x9e3>
or     %fs:0x55(%esi),%al
push   %ebx
inc    %ebp
and    %dh,0x75(%ebx)
jo     b625 <_IO_stdin_used+0x9f9>
outsl  %ds:(%esi),(%dx)
jb     b62c <_IO_stdin_used+0xa00>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x61(%ebp)
imul   $0x69,0x20(%ebp),%esp
je     b5e5 <_IO_stdin_used+0x9b9>
jae    b62c <_IO_stdin_used+0xa00>
je     b63e <_IO_stdin_used+0xa12>
imul   $0x2e746f6f,0x72(%eax,%eiz,1),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    b63d <_IO_stdin_used+0xa11>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x6f(%ebp)
jb     b646 <_IO_stdin_used+0xa1a>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     b655 <_IO_stdin_used+0xa29>
popa
je     b654 <_IO_stdin_used+0xa28>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
or     0x74(%eax),%ch
je     b665 <_IO_stdin_used+0xa39>
cmp    (%edi),%ch
das
je     b66f <_IO_stdin_used+0xa43>
js     b661 <_IO_stdin_used+0xa35>
jb     b65f <_IO_stdin_used+0xa33>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    b677 <_IO_stdin_used+0xa4b>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    b648 <_IO_stdin_used+0xa1c>
and    0x6e(%ebp),%esi
jo     b690 <_IO_stdin_used+0xa64>
imul   $0x6567656c,0x69(%esi),%esi
or     %fs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     b6a0 <_IO_stdin_used+0xa74>
and    %ah,0x72(%esi)
gs and %cl,%gs:0x46(%ebp)
push   %esp
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
fs
jae    b64d <_IO_stdin_used+0xa21>
add    %al,(%eax)
add    %ch,0x6573756f
pop    %edi
imul   $0x72656b2c,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %sp,0x63(%ecx)
push   $0x74612c65
je     b6dd <_IO_stdin_used+0xab1>
pop    %edi
je     b6d7 <_IO_stdin_used+0xaab>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    b6e7 <_IO_stdin_used+0xabb>
cmp    $0x30,%eax
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6e65,%gs:0x69(%ebx),%sp
je     b6ab <_IO_stdin_used+0xa7f>
dec    %esp
imul   $0x656b2078,0x75(%esi),%ebp
jb     b703 <_IO_stdin_used+0xad7>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dl,%cs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%edx,%esi,2)
jbe    b711 <_IO_stdin_used+0xae5>
jb     b6ce <_IO_stdin_used+0xaa2>
data16
gs
popa
je     b728 <_IO_stdin_used+0xafc>
jb     b71a <_IO_stdin_used+0xaee>
jae    b6d7 <_IO_stdin_used+0xaab>
popa
jb     b71f <_IO_stdin_used+0xaf3>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     b6e8 <_IO_stdin_used+0xabc>
popa
jbe    b72c <_IO_stdin_used+0xb00>
imul   $0x2820656c,0x62(%ecx,%eiz,2),%ebp
jae    b74c <_IO_stdin_used+0xb20>
popa
jo     b6f8 <_IO_stdin_used+0xacc>
imul   $0x6e6f,0x20(%ebp,%eiz,2),%bp
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
sub    $0x20,%al
bound  %ebp,0x6f(%edi)
je     b70b <_IO_stdin_used+0xadf>
data16
jb     b75d <_IO_stdin_used+0xb31>
insl   (%dx),%es:(%edi)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %cl,0x4c(%ecx,%ecx,2)
dec    %edi
sub    %ebp,(%eax,%eiz,1)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    b77c <_IO_stdin_used+0xb50>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b780 <_IO_stdin_used+0xb54>
je     b734 <_IO_stdin_used+0xb08>
imul   $0x20746f6e,0x20(%ebx),%esi
jae    b77e <_IO_stdin_used+0xb52>
data16
and    %dh,%gs:0x6e(%ebp)
insb   (%dx),%es:(%edi)
gs
jae    b799 <_IO_stdin_used+0xb6d>
and    %ch,0x74(%ecx)
daa
jae    b74c <_IO_stdin_used+0xb20>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x75(%ebx)
jb     b79a <_IO_stdin_used+0xb6e>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%esi)
data16
jae    b76c <_IO_stdin_used+0xb40>
xor    0x20(%edi),%esp
jo     b7b6 <_IO_stdin_used+0xb8a>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    b754 <_IO_stdin_used+0xb28>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%esi)
je     b7cc <_IO_stdin_used+0xba0>
jb     b7ba <_IO_stdin_used+0xb8e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    b77d <_IO_stdin_used+0xb51>
je     b7c4 <_IO_stdin_used+0xb98>
jb     b7ce <_IO_stdin_used+0xba2>
imul   $0x20736574,0x61(%esi),%ebp
popa
data16
je     b7d1 <_IO_stdin_used+0xba5>
jb     b78e <_IO_stdin_used+0xb62>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x6d752720,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    b7ea <_IO_stdin_used+0xbbe>
je     b7a5 <_IO_stdin_used+0xb79>
and    %cl,%cs:0x66(%ecx)
and    %bh,0x6f(%ecx)
jne    b7a7 <_IO_stdin_used+0xb7b>
ja     b7f2 <_IO_stdin_used+0xbc6>
jae    b7f3 <_IO_stdin_used+0xbc7>
and    %dh,0x69(%eax,%ebp,2)
jae    b79b <_IO_stdin_used+0xb6f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%ebp)
jae    b811 <_IO_stdin_used+0xbe5>
popa
and    %dh,%gs:0x6f(%si)
and    %ah,0x73(%ecx,%ebp,2)
popa
jo     b81b <_IO_stdin_used+0xbef>
gs
popa
jb     b7cf <_IO_stdin_used+0xba3>
je     b819 <_IO_stdin_used+0xbed>
outsb  %gs:(%esi),(%dx)
and    %bh,0x6f(%ecx)
jne    b7d8 <_IO_stdin_used+0xbac>
jae    b822 <_IO_stdin_used+0xbf6>
outsl  %ds:(%esi),(%dx)
jne    b829 <_IO_stdin_used+0xbfd>
and    %dh,%fs:0x70(%ebp)
addr16 jb b825 <_IO_stdin_used+0xbf9>
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
popa
je     b7ed <_IO_stdin_used+0xbc1>
insb   (%dx),%es:(%edi)
gs
popa
jae    b846 <_IO_stdin_used+0xc1a>
and    %ch,0x65(%ebx)
jb     b845 <_IO_stdin_used+0xc19>
gs
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jbe    b84a <_IO_stdin_used+0xc1e>
jb     b85a <_IO_stdin_used+0xc2e>
imul   $0x362e3220,0x6e(%edi),%ebp
xor    %cs:(%eax),%dh
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     b816 <_IO_stdin_used+0xbea>
jb     b85d <_IO_stdin_used+0xc31>
jno    b86f <_IO_stdin_used+0xc43>
gs
jae    b871 <_IO_stdin_used+0xc45>
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     b823 <_IO_stdin_used+0xbf7>
data16
jb     b875 <_IO_stdin_used+0xc49>
insl   (%dx),%es:(%edi)
and    %bh,0x6f(%ecx)
jne    b87e <_IO_stdin_used+0xc52>
and    %ah,0x73(%ecx,%ebp,2)
je     b884 <_IO_stdin_used+0xc58>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2020,0xa(%eax),%di
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     b8a0 <_IO_stdin_used+0xc74>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dl,%cs:0x65(%eax,%ebp,2)
and    %ah,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     b868 <_IO_stdin_used+0xc3c>
ja     b8af <_IO_stdin_used+0xc83>
bound  %esp,(%eax)
jo     b8af <_IO_stdin_used+0xc83>
and    %ch,%gs:0x61(%bx,%si)
jae    b875 <_IO_stdin_used+0xc49>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     b8be <_IO_stdin_used+0xc92>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     b8cd <_IO_stdin_used+0xca1>
popa
je     b8cc <_IO_stdin_used+0xca0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x74(%eax)
je     b8e4 <_IO_stdin_used+0xcb8>
cmp    (%edi),%ch
das
je     b8ee <_IO_stdin_used+0xcc2>
js     b8e0 <_IO_stdin_used+0xcb4>
jb     b8de <_IO_stdin_used+0xcb2>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    b8f6 <_IO_stdin_used+0xcca>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    b8c7 <_IO_stdin_used+0xc9b>
and    0x75(%esi),%esp
jae    b902 <_IO_stdin_used+0xcd6>
xor    (%esi),%dh
or     (%edx),%cl
add    %al,(%eax)
add    %dl,0x65(%edx)
jno    b91d <_IO_stdin_used+0xcf1>
gs
jae    b91f <_IO_stdin_used+0xcf3>
gs and %ah,%fs:%gs:0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,%fs:0x73(%ecx)
and    %ah,0xa73
add    %al,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jne    b942 <_IO_stdin_used+0xd16>
je     b93b <_IO_stdin_used+0xd0f>
and    %ah,%fs:0x25282073
jae    b90b <_IO_stdin_used+0xcdf>
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,(%edx)
and    $0x202c2273,%eax
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x64252e64
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %edi
popa
jb     b96e <_IO_stdin_used+0xd42>
imul   $0x75203a20,0x67(%esi),%ebp
jae    b972 <_IO_stdin_used+0xd46>
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%bx,%si)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
popa
je     b97f <_IO_stdin_used+0xd53>
arpl   %sp,(%eax)
jne    b983 <_IO_stdin_used+0xd57>
fs
cmp    $0x6120303d,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x69(%edi)
and    %edi,%fs:0xa30
adc    $0x53,%al
(bad)
incl   (%ebx,%edx,2)
(bad)
push   %esp
push   %edx
(bad)
call   *(%ebx,%edx,2)
(bad)
call   *%esp
push   %edx
(bad)
call   *(%ebx,%edx,2)
(bad)
inc    %esp
push   %edx
(bad)
call   *(%ebx,%edx,2)
(bad)
call   *(%ebx,%edx,2)
(bad)
call   *(%ebx,%edx,2)
(bad)
pushl  0x5314ffff(%edx,%edx,2)
(bad)
push   %esp
push   %ecx
(bad)
ljmp   *0x74(%esi)
data16
jae    b9c4 <_IO_stdin_used+0xd98>
arpl   %bp,0x73(%edi,%ebp,2)
add    %dh,%gs:0x65(%ebx)
je     b9e4 <_IO_stdin_used+0xdb8>
jo     b9d0 <_IO_stdin_used+0xda4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr32 imul $0x79727400,0x67(%bp),%ebp
79
pop    %edi
data16
jne    b9f3 <_IO_stdin_used+0xdc7>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b9f4 <_IO_stdin_used+0xdc8>
je     b988 <_IO_stdin_used+0xd5c>
outsb  %ds:(%esi),(%dx)
je     b9f1 <_IO_stdin_used+0xdc5>
jae    b9ec <_IO_stdin_used+0xdc0>
data16
jne    ba03 <_IO_stdin_used+0xdd7>
gs
pop    %edi
jae    b9f5 <_IO_stdin_used+0xdc9>
data16
gs
pop    %edi
jb     b9fe <_IO_stdin_used+0xdd2>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ch,0x74(%esi)
data16
jae    ba04 <_IO_stdin_used+0xdd8>
data16
jne    ba1b <_IO_stdin_used+0xdef>
gs
pop    %edi
jb     ba11 <_IO_stdin_used+0xde5>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
gs
js     ba1d <_IO_stdin_used+0xdf1>
jae    ba2a <_IO_stdin_used+0xdfe>
imul   $0x7365645f,0x67(%esi),%ebp
je     b9bf <_IO_stdin_used+0xd93>
outsb  %ds:(%esi),(%dx)
je     ba28 <_IO_stdin_used+0xdfc>
jae    ba23 <_IO_stdin_used+0xdf7>
data16
jne    ba3a <_IO_stdin_used+0xe0e>
gs
pop    %edi
jb     ba30 <_IO_stdin_used+0xe04>
popa
add    %ch,%fs:0x74(%esi)
data16
jae    ba32 <_IO_stdin_used+0xe06>
data16
jne    ba49 <_IO_stdin_used+0xe1d>
gs
pop    %edi
imul   $0x72,0x65(%esp,%ebp,2),%bp
outsb  %ds:(%esi),(%dx)
je     ba48 <_IO_stdin_used+0xe1c>
jae    ba43 <_IO_stdin_used+0xe17>
outsl  %ds:(%esi),(%dx)
jo     ba4c <_IO_stdin_used+0xe20>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
fs
gs
jbe    ba52 <_IO_stdin_used+0xe26>
data16
jne    ba69 <_IO_stdin_used+0xe3d>
add    %ah,%gs:0x65(%edi)
je     ba5b <_IO_stdin_used+0xe2f>
data16
jne    ba72 <_IO_stdin_used+0xe46>
gs
pop    %edi
data16
jae    ba78 <_IO_stdin_used+0xe4c>
jns    ba76 <_IO_stdin_used+0xe4a>
add    %dh,%gs:0x73(%ebp)
popa
add    %ch,%gs:0x61(%di)
imul   $0x203a7325,0x0(%esi),%ebp
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x72(%ecx,%eiz,2)
and    %ch,%gs:0x6e(%bx,%di)
jo     ba9a <_IO_stdin_used+0xe6e>
je     ba47 <_IO_stdin_used+0xe1b>
bound  %esi,0x66(%ebp)
data16
gs
jb     ba2e <_IO_stdin_used+0xe02>
outsb  %ds:(%esi),(%dx)
je     ba97 <_IO_stdin_used+0xe6b>
jae    ba60 <_IO_stdin_used+0xe34>
xor    0x5f(%edi),%esp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
and    $0x4d203a73,%eax
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     bac2 <_IO_stdin_used+0xe96>
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x73662c00,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x3a732500,%eax
and    %dh,0x74(%ebx)
jb     bad2 <_IO_stdin_used+0xea6>
jne    bae0 <_IO_stdin_used+0xeb4>
and    %ah,0x61(%esi)
imul   $0x6f2500,0x64(%ebp,%eiz,2),%ebp
and    $0x79730069,%eax
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
js     baf0 <_IO_stdin_used+0xec4>
je     bb05 <_IO_stdin_used+0xed9>
jb     ba93 <_IO_stdin_used+0xe67>
ja     bafe <_IO_stdin_used+0xed2>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bb0d <_IO_stdin_used+0xee1>
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    bb0d <_IO_stdin_used+0xee1>
je     bb02 <_IO_stdin_used+0xed6>
jo     bb0a <_IO_stdin_used+0xede>
jb     bb14 <_IO_stdin_used+0xee8>
imul   $0x736e6f69,0x73(%ebx),%esi
sub    $0x0,%al
jb     bb17 <_IO_stdin_used+0xeeb>
insb   (%dx),%es:(%edi)
popa
je     bb1f <_IO_stdin_used+0xef3>
insl   (%dx),%es:(%edi)
gs
sub    $0x0,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popa
je     bb28 <_IO_stdin_used+0xefc>
insl   (%dx),%es:(%edi)
gs
sub    $0x0,%al
and    $0x73252073,%eax
and    %ah,0x64252073
or     (%eax),%al
and    $0x55203a73,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     bb49 <_IO_stdin_used+0xf1d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x6e683a6f
jbe    bb47 <_IO_stdin_used+0xf1b>
add    %ah,0x4e203a73
outsl  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20736920,0x65(%ebx),%esp
jae    bb75 <_IO_stdin_used+0xf49>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6f000a2e,0x64(%ebp),%esp
jo     bb86 <_IO_stdin_used+0xf5a>
imul   $0x65680073,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
jo     bb1c <_IO_stdin_used+0xef0>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6261746d,%eax
add    %dh,0x65(%esi)
jb     bb8a <_IO_stdin_used+0xf5e>
outsl  %ds:(%esi),(%dx)
jae    bb90 <_IO_stdin_used+0xf64>
add    %dh,0x65(%esi)
jb     bba3 <_IO_stdin_used+0xf77>
imul   $0x616f6e00,0x6e(%edi),%ebp
je     bba2 <_IO_stdin_used+0xf76>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     bbab <_IO_stdin_used+0xf7f>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6c(%ebp,%eiz,2)
popa
jns    bbaa <_IO_stdin_used+0xf7e>
insl   (%dx),%es:(%edi)
je     bbb7 <_IO_stdin_used+0xf8b>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x61(%esi)
imul   $0x72,0x5f(%ebp),%esp
ja     bb59 <_IO_stdin_used+0xf2d>
data16
jae    bbca <_IO_stdin_used+0xf9e>
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
pop    %edi
fs
gs
pop    %di
outsl  %ds:(%esi),(%dx)
jo     bbde <_IO_stdin_used+0xfb2>
jae    bb6c <_IO_stdin_used+0xf40>
popa
arpl   %bp,0x75(%eax,%eax,1)
insl   (%dx),%es:(%edi)
popa
jae    bbe0 <_IO_stdin_used+0xfb4>
add    %ah,0x6d(%esi)
popa
jae    bbe6 <_IO_stdin_used+0xfba>
add    %ah,0x61(%ebp,%ebp,2)
jae    bbec <_IO_stdin_used+0xfc0>
add    %dh,0x69(%ebp)
add    %ah,%fs:0x69(%edi)
add    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     bbee <_IO_stdin_used+0xfc2>
jae    bc0a <_IO_stdin_used+0xfde>
jae    bbf2 <_IO_stdin_used+0xfc6>
imul   $0x6800,0x73(%ebp,%eiz,2),%bp
imul   $0x5f646968,0x5f(%ebp,%eiz,2),%esp
imul   $0x6800,0x73(%ebp,%eiz,2),%bp
imul   $0x5f746f64,0x5f(%ebp,%eiz,2),%esp
imul   $0x6900,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     bc22 <_IO_stdin_used+0xff6>
pop    %edi
arpl   %sp,0x73(%ecx)
add    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bc3d <_IO_stdin_used+0x1011>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    bbd1 <_IO_stdin_used+0xfa5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6d(%edi)
jo     bc4a <_IO_stdin_used+0x101e>
gs
jae    bc4e <_IO_stdin_used+0x1022>
imul   $0x6c697300,0x6e(%edi),%ebp
outsb  %gs:(%esi),(%dx)
je     bbe6 <_IO_stdin_used+0xfba>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     bc4f <_IO_stdin_used+0x1023>
arpl   %bp,0x76(%edi)
gs
jb     bbf0 <_IO_stdin_used+0xfc4>
jb     bc57 <_IO_stdin_used+0x102b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    bc5b <_IO_stdin_used+0x102f>
pop    %edi
push   $0x72656269
imul   $0x7973,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    bc81 <_IO_stdin_used+0x1055>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ecx)
add    %ah,0x69(%edx)
addr16 pop %edi
ja     bc85 <_IO_stdin_used+0x1059>
imul   $0x636f6c00,0x73(%ebp,%eiz,2),%esi
popa
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
data16
arpl   %bp,0x6e(%edi)
jbe    bc28 <_IO_stdin_used+0xffc>
jae    bc9e <_IO_stdin_used+0x1072>
jb     bc91 <_IO_stdin_used+0x1065>
popa
insl   (%dx),%es:(%edi)
jae    bc8f <_IO_stdin_used+0x1063>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
jne    bcaf <_IO_stdin_used+0x1083>
gs
jb     bc9e <_IO_stdin_used+0x1072>
js     bca2 <_IO_stdin_used+0x1076>
je     bcb7 <_IO_stdin_used+0x108b>
jb     bc45 <_IO_stdin_used+0x1019>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popa
jne    bcbe <_IO_stdin_used+0x1092>
outsl  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
pop    %edi
fs
gs
je     bcb4 <_IO_stdin_used+0x1088>
arpl   %bp,0x0(%eax)
jb     bcbd <_IO_stdin_used+0x1091>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    bcca <_IO_stdin_used+0x109e>
je     bc5e <_IO_stdin_used+0x1032>
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x686e6900,0x65(%edx),%edi
gs
jb     bcd5 <_IO_stdin_used+0x10a9>
je     bc6e <_IO_stdin_used+0x1042>
popa
fs
fs
jae    bcd8 <_IO_stdin_used+0x10ac>
arpl   %si,0x72(%ebp)
imul   $0x74617473,0x0(%ebx,%esi,2),%esp
imul   $0x737072,0x67(%ebx),%esp
jne    bcfa <_IO_stdin_used+0x10ce>
gs
jb     bcf7 <_IO_stdin_used+0x10cb>
popa
jo     bcfd <_IO_stdin_used+0x10d1>
imul   $0x74617800,0x67(%esi),%ebp
je     bd08 <_IO_stdin_used+0x10dc>
insl   (%dx),%es:(%edi)
popa
jo     bd0a <_IO_stdin_used+0x10de>
imul   $0x73666500,0x67(%esi),%ebp
pop    %edi
jb     bd05 <_IO_stdin_used+0x10d9>
ja     bca6 <_IO_stdin_used+0x107a>
add    %al,(%eax)
and    $0x4d203a73,%eax
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     bd2b <_IO_stdin_used+0x10ff>
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x69616620,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
gs add %al,%fs:%gs:(%eax)
daa
and    $0x6f202773,%eax
jo     bd44 <_IO_stdin_used+0x1118>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    bd45 <_IO_stdin_used+0x1119>
outsb  %fs:(%esi),(%dx)
daa
je     bcfe <_IO_stdin_used+0x10d2>
push   $0x20657661
jbe    bd46 <_IO_stdin_used+0x111a>
insb   (%dx),%es:(%edi)
jne    bd4d <_IO_stdin_used+0x1121>
or     %cs:(%eax),%al
add    %ah,(%edi)
and    $0x6f202773,%eax
jo     bd68 <_IO_stdin_used+0x113c>
imul   $0x65656e20,0x6e(%edi),%ebp
fs
jae    bd1e <_IO_stdin_used+0x10f2>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x63(%edi)
je     bd66 <_IO_stdin_used+0x113a>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    bd71 <_IO_stdin_used+0x1145>
or     (%eax),%al
add    %al,(%eax)
daa
and    $0x6f202773,%eax
jo     bd8c <_IO_stdin_used+0x1160>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    bd8d <_IO_stdin_used+0x1161>
and    %ch,%fs:0x61(%eax)
jbe    bd8c <_IO_stdin_used+0x1160>
and    %ah,0x20(%ecx)
jbe    bd8d <_IO_stdin_used+0x1161>
insb   (%dx),%es:(%edi)
jne    bd94 <_IO_stdin_used+0x1168>
or     %cs:(%eax),%al
add    %al,(%eax)
daa
and    $0x6f202773,%eax
jo     bdb0 <_IO_stdin_used+0x1184>
imul   $0x65656e20,0x6e(%edi),%ebp
fs
jae    bd66 <_IO_stdin_used+0x113a>
popa
and    %ah,0x63(%ebp,%eiz,2)
imul   $0x6176206c,0x61(%ebp),%ebp
insb   (%dx),%es:(%edi)
jne    bdba <_IO_stdin_used+0x118e>
or     (%eax),%al
add    %ah,(%edi)
and    $0x69202773,%eax
jae    bd80 <_IO_stdin_used+0x1154>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
jae    bddc <_IO_stdin_used+0x11b0>
jo     bdd9 <_IO_stdin_used+0x11ad>
outsl  %ds:(%esi),(%dx)
jb     bde0 <_IO_stdin_used+0x11b4>
gs and %ch,%fs:%gs:0x70(%edi)
je     bddc <_IO_stdin_used+0x11b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    bddd <_IO_stdin_used+0x11b1>
insb   (%dx),%es:(%edi)
imul   $0x64656d61,0x6e(%eax,%eiz,1),%esp
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %dh,0x74(%ebx)
jb     bdf4 <_IO_stdin_used+0x11c8>
popa
insl   (%dx),%es:(%edi)
jae    bdb3 <_IO_stdin_used+0x1187>
popa
arpl   %sp,0x65(%ebx)
jae    be0c <_IO_stdin_used+0x11e0>
and    %ch,0x6e(%ecx)
je     be03 <_IO_stdin_used+0x11d7>
jb     be06 <_IO_stdin_used+0x11da>
popa
arpl   %sp,0x2e(%ebp)
or     (%eax),%al
add    %al,(%eax)
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    be1c <_IO_stdin_used+0x11f0>
je     be19 <_IO_stdin_used+0x11ed>
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%bx,%di)
and    %ch,0x6f(%esi)
je     bdda <_IO_stdin_used+0x11ae>
jae    be31 <_IO_stdin_used+0x1205>
jo     be2e <_IO_stdin_used+0x1202>
outsl  %ds:(%esi),(%dx)
jb     be35 <_IO_stdin_used+0x1209>
gs and %ah,%fs:%gs:0x74(%ecx)
and    %dh,0x72(%eax)
gs
jae    be31 <_IO_stdin_used+0x1205>
outsb  %ds:(%esi),(%dx)
je     bdfd <_IO_stdin_used+0x11d1>
and    %bl,0x6f(%ecx)
jne    bdf4 <_IO_stdin_used+0x11c8>
push   $0x20657661
je     be4a <_IO_stdin_used+0x121e>
and    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    be4f <_IO_stdin_used+0x1223>
je     be03 <_IO_stdin_used+0x11d7>
jbe    be54 <_IO_stdin_used+0x1228>
insb   (%dx),%es:(%edi)
jne    be55 <_IO_stdin_used+0x1229>
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jne    be65 <_IO_stdin_used+0x1239>
je     be19 <_IO_stdin_used+0x11ed>
imul   $0x2065636e,0x6f(%eax,%eiz,1),%esi
popa
addr16 popa
imul   $0xa,0x2e(%esi),%ebp
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x74706f20,0x65(%edx),%edi
imul   $0x20736920,0x6e(%edi),%ebp
imul   $0x6465726f,0x6e(%edi),%esp
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    be9b <_IO_stdin_used+0x126f>
and    %ch,0x74(%esi)
data16
jae    be69 <_IO_stdin_used+0x123d>
xor    0x20(%edi),%esp
insl   (%dx),%es:(%edi)
jne    beb5 <_IO_stdin_used+0x1289>
je     be64 <_IO_stdin_used+0x1238>
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     beb2 <_IO_stdin_used+0x1286>
and    %ch,0x74(%ecx)
or     %cs:(%eax),%al
add    %ch,0x6f(%esi)
and    %ch,0x6f(%ebp)
jb     bec0 <_IO_stdin_used+0x1294>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     bedb <_IO_stdin_used+0x12af>
and    %dh,0x20(%edi,%ebp,2)
jae    bedc <_IO_stdin_used+0x12b0>
outsl  %ds:(%esi),(%dx)
jb     bed0 <_IO_stdin_used+0x12a4>
and    %ah,(%edi)
jne    bee2 <_IO_stdin_used+0x12b6>
gs
jb     bedf <_IO_stdin_used+0x12b3>
popa
jo     bee5 <_IO_stdin_used+0x12b9>
imul   $0x706f2027,0x67(%esi),%ebp
je     bee7 <_IO_stdin_used+0x12bb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ch,0x6f(%esi)
and    %ch,0x6f(%ebp)
jb     bef0 <_IO_stdin_used+0x12c4>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     bf0b <_IO_stdin_used+0x12df>
and    %dh,0x20(%edi,%ebp,2)
jae    bf0c <_IO_stdin_used+0x12e0>
outsl  %ds:(%esi),(%dx)
jb     bf00 <_IO_stdin_used+0x12d4>
and    %ah,(%edi)
js     bf00 <_IO_stdin_used+0x12d4>
je     bf15 <_IO_stdin_used+0x12e9>
jb     bf10 <_IO_stdin_used+0x12e4>
popa
jo     bf16 <_IO_stdin_used+0x12ea>
imul   $0x706f2027,0x67(%esi),%ebp
je     bf18 <_IO_stdin_used+0x12ec>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
and    $0x46203a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    bf3b <_IO_stdin_used+0x130f>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    bf3b <_IO_stdin_used+0x130f>
and    %ah,%gs:(%edi)
and    $0x2773,%eax
add    %al,(%eax)
and    $0x59203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    bf00 <_IO_stdin_used+0x12d4>
insl   (%dx),%es:(%edi)
jne    bf56 <_IO_stdin_used+0x132a>
je     bf05 <_IO_stdin_used+0x12d9>
jae    bf57 <_IO_stdin_used+0x132b>
arpl   %bp,%gs:0x66(%ecx)
jns    bf0d <_IO_stdin_used+0x12e1>
gs
js     bf51 <_IO_stdin_used+0x1325>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x646e6120,0x65(%ebx),%esp
and    %ah,0x78(%ebp)
popa
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6f(%ebp)
jne    bf82 <_IO_stdin_used+0x1356>
je     bf36 <_IO_stdin_used+0x130a>
jo     bf87 <_IO_stdin_used+0x135b>
imul   $0xa2e,0x74(%esi),%ebp
add    %ah,0x4e203a73
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jne    bf99 <_IO_stdin_used+0x136d>
je     bf9d <_IO_stdin_used+0x1371>
outsl  %ds:(%esi),(%dx)
imul   $0x20736920,0x74(%esi),%ebp
jae    bfa7 <_IO_stdin_used+0x137b>
arpl   %bp,%gs:0x66(%ecx)
imul   $0xa2e,0x64(%ebp),%esp
add    %al,(%eax)
or     $0x20ffffb0,%eax
mov    $0xff,%al
pushl  (%ebx)
mov    $0xff,%al
incl   -0x50(%esi)
(bad)
lcall  *0xdffffa9(%edi)
mov    $0xff,%al
decl   0x59ffffb0(%esi)
mov    $0xff,%al
incl   0x74ffffb0(%ecx)
mov    $0xff,%al
(bad)
jg     bf1c <_IO_stdin_used+0x12f0>
(bad)
decl   -0x51550001(%esi,%ebp,4)
(bad)
inc    %ebp
scas   %es:(%edi),%al
(bad)
jmp    *%eax
scas   %es:(%edi),%al
(bad)
(bad)
sti
scas   %es:(%edi),%al
(bad)
call   *(%esi)
scas   %es:(%edi),%eax
(bad)
ljmp   *(%ecx)
scas   %es:(%edi),%eax
(bad)
(bad)
cmp    $0xaf,%al
(bad)
decl   -0x51(%edi)
(bad)
pushl  -0x51(%ecx)
(bad)
incl   -0x50680001(%edi,%ebp,4)
(bad)
ljmp   *-0x42000051(%edx)
scas   %es:(%edi),%eax
(bad)
call   *%eax
scas   %es:(%edi),%eax
(bad)
pushl  -0x36000054(%esi)
lods   %ds:(%esi),%al
(bad)
(bad)
cld
lods   %ds:(%esi),%al
(bad)
decl   (%edi)
lods   %ds:(%esi),%eax
(bad)
decl   -0x71000050(%esi)
mov    $0xff,%al
jmp    *%ebx
scas   %es:(%edi),%eax
(bad)
lcall  *-0x54(%esi)
(bad)
dec    %esp
test   $0xac71ffff,%eax
(bad)
jmp    *0x27ffffac(%ebx)
lods   %ds:(%esi),%eax
(bad)
jmp    *-0x53(%esi)
(bad)
ljmp   *-0x52400001(%ebp,%ebp,4)
(bad)
dec    %edi
lods   %ds:(%esi),%eax
(bad)
(bad)
fildll -0x51db0001(%ebp)
(bad)
ljmp   *-0x1(%esi,%ebp,4)
ljmp   *0x74(%esi)
data16
jae    c05c <_IO_stdin_used+0x1430>
jo     c060 <_IO_stdin_used+0x1434>
jb     c074 <_IO_stdin_used+0x1448>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     c07a <_IO_stdin_used+0x144e>
imul   $0x696d0073,0x6e(%edi),%ebp
jae    c082 <nf_ns_trusted_prefix+0x2>
imul   $0x74706f5f,0x67(%esi),%ebp
imul   $0x6c61765f,0x6e(%edi),%ebp
jne    c084 <nf_ns_trusted_prefix+0x4>
add    %ah,0x6f(%edx)
addr16 jne c098 <nf_ns_security_prefix+0x8>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     c09d <nf_ns_system_prefix_len+0x1>
imul   $0x6c61765f,0x6e(%edi),%ebp
jne    c097 <nf_ns_security_prefix+0x7>
add    %dh,0x61(%eax)
jb     c0aa <nf_ns_user_prefix_len+0x2>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c0ab <nf_ns_user_prefix_len+0x3>
je     c09e <nf_ns_system_prefix_len+0x2>
outsl  %ds:(%esi),(%dx)
jo     c0b6 <xattr_ntfs_3g+0x4>
imul   $0x746e0073,0x6e(%edi),%ebp
data16
jae    c0ab <nf_ns_user_prefix_len+0x3>
jae    c0c2 <xattr_ntfs_3g+0x10>
jb     c0b9 <xattr_ntfs_3g+0x7>
outsb  %ds:(%esi),(%dx)
jae    c0b8 <xattr_ntfs_3g+0x6>
jb     c0c9 <xattr_ntfs_3g+0x17>
add    %ch,0x74(%esi)
data16
jae    c0ba <xattr_ntfs_3g+0x8>
jae    c0d1 <xattr_ntfs_3g+0x1f>
jb     c0c0 <xattr_ntfs_3g+0xe>
jo     c0d1 <xattr_ntfs_3g+0x1f>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     c0ca <xattr_ntfs_3g+0x18>
outsl  %ds:(%esi),(%dx)
je     c0d6 <xattr_ntfs_3g+0x24>
gs
jb     c09d <nf_ns_system_prefix_len+0x1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insl   (%dx),%es:(%edi)
jo     c0ec <xattr_ntfs_3g+0x3a>
jns    c0a6 <nf_ns_system_prefix+0x6>
or     %al,(%eax)
je     c0f4 <xattr_ntfs_3g+0x42>
jne    c0f7 <xattr_ntfs_3g+0x45>
je     c0eb <xattr_ntfs_3g+0x39>
fs add %al,%cs:%fs:(%eax)
or     %eax,(%eax)
jae    c0f7 <xattr_ntfs_3g+0x45>
arpl   %si,0x72(%ebp)
imul   $0x7000000,0x2e(%ecx,%edi,2),%esi
pop    %es
add    %al,(%eax)
jae    c11b <xattr_ntfs_3g+0x69>
jae    c118 <xattr_ntfs_3g+0x66>
gs
insl   (%dx),%es:(%edi)
add    %al,%cs:0x75000000
add    $0x75000000,%eax
jne    c121 <xattr_ntfs_3g+0x6f>
gs
jb     c0df <xattr_ntfs_3g+0x2d>
outsb  %ds:(%esi),(%dx)
je     c11b <xattr_ntfs_3g+0x69>
jae    c0e4 <xattr_ntfs_3g+0x32>
xor    0x2e(%edi),%esp
add    %ebx,(%ebx)
add    (%ebx),%edi
add    %al,(%edx)
add    %al,(%eax)
aas
add    %al,(%eax)
add    %dh,%ah
pop    %ebp
(bad)
lcall  *(%edx,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
gs
(bad)
inc    %eax
sldt   (%eax)
xor    $0x79,%al
(bad)
incl   0x2(%eax)
add    %al,(%eax)
xor    $0x7a,%al
(bad)
(bad)
jl     c0e8 <xattr_ntfs_3g+0x36>
add    %al,(%eax)
xchg   %eax,%esp
jp     c0ea <xattr_ntfs_3g+0x38>
ljmp   *0x7b240000(%edx,%eax,1)
(bad)
(bad)
fadds  (%edx)
add    %al,(%eax)
xchg   %eax,%esp
jnp    c0fa <xattr_ntfs_3g+0x48>
incl   (%ebx,%eax,1)
add    %al,(%eax)
test   %bh,-0x1(%ebp)
incl   0x0(%ebx,%eax,1)
add    %al,%ah
jge    c10a <xattr_ntfs_3g+0x58>
pushl  0x3(%eax)
add    %al,(%eax)
xor    $0x7e,%al
(bad)
lcall  *-0x7f6c0000(%ebx,%eax,1)
(bad)
push   %esp
add    (%eax),%eax
add    %al,-0x1(%edx,%eax,4)
pushl  (%esp,%eax,1)
add    %al,(%eax)
push   %esp
(bad)
(bad)
decl   0x4(%eax)
add    %al,(%eax)
je     c0b5 <xattr_ntfs_3g+0x3>
(bad)
decl   -0x5bfffffc(%eax)
cmp    $0xffffffff,%edi
mov    $0x4,%ah
add    %al,(%eax)
in     $0x85,%al
(bad)
decl   -0x79ec0000(,%eax,1)
(bad)
(bad)
cmp    %al,0x88240000
(bad)
jmp    *-0x767c0000(%ebp,%eax,1)
(bad)
(bad)
cld
add    $0x8bf40000,%eax
(bad)
call   *0x0(%esi,%eax,1)
add    %dl,%ah
mov    %?,%edi
lcall  *-0x719c0000(%esi,%eax,1)
(bad)
push   %esp
push   %es
add    %al,(%eax)
and    $0x90,%al
(bad)
call   *0x7(%eax)
add    %al,(%eax)
je     c113 <xattr_ntfs_3g+0x61>
(bad)
lcall  *-0x4bfffff9(%eax)
xchg   %eax,%edx
(bad)
push   %eax
pop    %es
add    %al,(%eax)
test   %dl,0x860ffff(%ebp)
add    %al,(%eax)
add    $0x96,%al
(bad)
lcall  *0x4000008(%eax)
xchg   %eax,%edi
(bad)
lcall  *(%eax)
or     %eax,(%eax)
add    %dl,0x96cffff(%edi,%edx,4)
add    %al,(%eax)
push   %esp
lcall  $0x0,$0x9b0ffff
test   %bl,0x9c4ffff(%edx)
add    %al,(%eax)
mov    $0x9a,%ah
(bad)
(bad)
fmuls  (%ecx)
add    %al,(%eax)
add    $0x9d,%al
(bad)
lcall  *(%eax)
or     (%eax),%al
add    %dl,(%edx,%eiz,4)
(bad)
pushl  0xa(%eax)
add    %al,(%eax)
mov    %al,%fs:0xa94ffff
add    %al,(%eax)
les    0xab8ffff(%edx),%esp
add    %al,(%eax)
je     c18e <xattr_ntfs_3g+0xdc>
(bad)
call   *(%eax)
or     (%eax),%eax
add    %al,0xb68ffff(%ebp,%eiz,4)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
movsl  %ds:(%esi),%es:(%edi)
(bad)
(bad)
jl     c209 <xattr_ntfs_3g+0x157>
add    %al,(%eax)
aam    $0xa5
(bad)
jmp    *0x3400000b(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
(bad)
clc
or     (%eax),%eax
add    %dl,%ah
stos   %al,%es:(%edi)
(bad)
call   *0xc(%eax)
add    %al,(%eax)
lods   %fs:(%esi),%al
(bad)
ljmp   *-0x2bfffff4(%eax)
scas   %es:(%edi),%al
(bad)
(bad)
call   4400c235 <_end+0x43ffd141>
mov    $0xff,%bl
ljmp   *(%eax)
or     $0xb6540000,%eax
(bad)
ljmp   *0xd(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0xdacffff,%edi
add    %al,(%eax)
aam    $0xc0
(bad)
jmp    *%esp
or     $0xc1140000,%eax
(bad)
incl   (%esi,%ecx,1)
add    %al,(%eax)
in     $0xc2,%al
(bad)
pushl  0xe(%eax)
add    %al,(%eax)
inc    %esp
(bad)
(bad)
jmp    *%eax
push   %cs
add    %al,(%eax)
hlt
int3
(bad)
call   *0xf(%eax)
add    %al,(%eax)
(bad)
sar    %edi
push   %eax
sldt   (%eax)
add    $0xd3,%al
(bad)
decl   0x10(%eax)
add    %al,(%eax)
aam    $0xd4
(bad)
pushl  -0x1fac0000(%eax,%edx,1)
(bad)
(bad)
clc
adc    %al,(%eax)
add    %ah,%ah
jecxz  c28a <xattr_ntfs_3g+0x1d8>
(bad)
cmp    %dl,(%ecx)
add    %al,(%eax)
mov    $0xe6,%ah
(bad)
(bad)
mov    $0x34000011,%eax
call   11f1c29d <_end+0x11f0d1a9>
add    %al,(%eax)
fs
jmp    125dc2a5 <_end+0x125cd1b1>
add    %al,(%eax)
(bad)
ljmp   $0x0,$0x12c8ffff
xor    $0xeb,%al
(bad)
incl   (%ebx,%edx,1)
add    %al,(%eax)
inc    %esp
jmp    c2ba <xattr_ntfs_3g+0x208>
lcall  *(%eax)
adc    (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     c2d7 <xattr_ntfs_3g+0x225>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
rcrb   -0x1(%ebx)
jmp    *0x7(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     c2f7 <xattr_ntfs_3g+0x245>
js     c2f5 <xattr_ntfs_3g+0x243>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%ah
jbe    c306 <xattr_ntfs_3g+0x254>
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30ac902
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
jl     c33e <xattr_ntfs_3g+0x28c>
add    %al,(%eax)
mov    $0x77,%al
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cb5fdfc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %ah,%al
ja     c372 <xattr_ntfs_3g+0x2c0>
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
push   %eax
add    0xc(%esi,%ecx,1),%bh
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %al,-0x1(%eax,%edi,2)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %al,(%edx)
dec    %edi
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
add    $0x1,%al
add    %al,(%eax)
mov    %bh,-0x1(%eax)
(bad)
ljmp   $0xe41,$0x1
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x2,0x1a00e46
mov    $0xa,%ah
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %bh,(%eax)
jp     c40a <xattr_ntfs_3g+0x358>
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
or     %fs:(%esi),%cl
or     %al,0xe(%ebx,%eax,8)
add    $0x41,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
dec    %esp
jp     c436 <xattr_ntfs_3g+0x384>
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,0x7a900000(%ecx,%eax,1)
(bad)
call   *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
or     %al,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pop    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
hlt
add    %eax,(%eax)
add    %bl,-0x56000084(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x1800e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
xor    $0x2,%al
add    %al,(%eax)
or     %bh,-0x1(%esi)
incl   0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %al,(%esi,%edi,2)
(bad)
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2d00e51
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,-0x1bfffffe(%eax)
jle    c54e <xattr_ntfs_3g+0x49c>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %cl,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x7ee80000(%edx,%eax,1)
(bad)
pushl  (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
insl   (%dx),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
or     $0x3,%al
add    %al,(%eax)
rolb   0x2affff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%esi)
push   %edx
or     (%esi),%cl
or     %al,-0x3a(%ebx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     %al,-0x3a(%esi)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
cmp    %al,(%ebx)
add    %al,(%eax)
aam    $0x80
(bad)
incl   (%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,-0x7d880000(%ebx,%eax,1)
(bad)
call   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%eax
add    %al,0x62ffff83(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb9,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x0(%esp,%eax,1)
add    %bl,-0x2400007b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x410c0e0a(%edi),%ch
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bl,-0x79d00000(%esp,%eax,1)
(bad)
decl   0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dh,%ah
add    $0x0,%al
add    %ch,-0x79(%eax)
(bad)
(bad)
mov    $0x1,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4e04(%ebx)
add    0x41100e0a(%ebp),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jb     c7f3 <xattr_ntfs_3g+0x741>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,0x5(%eax)
add    %al,(%eax)
int3
mov    %bh,%bh
decl   0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4e04(%ebx)
add    0xa(%eax),%ch
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,-0x2bfffffb(%eax)
mov    %edi,%edi
pushl  (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dh,%al
add    $0x8abc0000,%eax
(bad)
inc    %esi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x3700e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
pusha
push   %es
add    %al,(%eax)
sbb    $0x8d,%al
(bad)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,0x0(%eax,%eax,1)
add    %bl,0x64000006(%eax)
(bad)
(bad)
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x49,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
jno    c9a0 <xattr_ntfs_3g+0x8ee>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %bl,(%eax)
pop    %es
add    %al,(%eax)
in     $0x8d,%al
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6e300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x0(%edi,%eax,1)
add    %ah,(%eax)
mov    %edi,%?
(bad)
mov    $0x2,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
xchg   %eax,%esp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x7,%al
add    %al,(%eax)
pushf
nop
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
pop    %es
add    %al,(%eax)
mov    $0x21ffff90,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
fadds  (%edi)
add    %al,(%eax)
aam    $0x90
(bad)
incl   0x2(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff84,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,(%eax)
or     %al,(%eax)
add    %ah,%ah
xchg   %eax,%edx
(bad)
decl   0x5
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e51
mov    $0x140e0a02,%esi
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jo     cb3a <xattr_ntfs_3g+0xa88>
add    %al,(%eax)
pushf
xchg   %eax,%edi
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
jge    cb51 <xattr_ntfs_3g+0xa9f>
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     %al,(%eax)
add    %cl,%al
xchg   %eax,%edi
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,0x4000008(%eax)
cwtl
(bad)
ljmp   *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
mov    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%eax)
or     %eax,(%eax)
add    %bl,-0x1(%ecx,%ebx,4)
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x58,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%esi
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   $0x14000009
lcall  $0x0,$0x1dffff
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jl     cc47 <xattr_ntfs_3g+0xb95>
add    %al,(%eax)
and    %bl,0x29ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
popa
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,0x2c000009(%eax)
lcall  $0x0,$0x157ffff
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffe,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%al
or     %eax,(%eax)
add    %dh,(%ebx,%ebx,4)
(bad)
call   *0x3(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6f,0x1900e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
push   $0x140e0a02
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,0xa(%eax)
add    %al,(%eax)
jl     ccb4 <xattr_ntfs_3g+0xc02>
(bad)
decl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x60500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
lret
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   $0xa,%al
add    %al,(%eax)
mov    $0x9f,%ah
(bad)
jmp    *0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
call   e400cdb7 <_end+0xe3ffdcc3>
mov    0x46affff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e4e
lahf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    %cl,(%ebx)
add    %al,(%eax)
adc    $0xa6,%al
(bad)
incl   (%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,0xb(%eax)
add    %al,(%eax)
in     $0xa8,%al
(bad)
decl   0x9(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
cmp    $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
or     (%eax),%eax
add    %dh,%al
mov    $0xff,%cl
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
push   %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
in     $0xb,%al
add    %al,(%eax)
call   3400ce5f <_end+0x33ffdd6b>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %al,(%esp,%ecx,1)
add    %al,(%eax)
or     %dh,0x1caffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffe0,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,0xc(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0xff,%ah
lcall  *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
int3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,%al
or     $0x0,%al
add    %bl,-0x1(%edi,%esi,4)
ljmp   *0x6(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e4e
dec    %ebp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
jo     d000 <xattr_ntfs_3g+0xf4e>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %dl,0xd(%eax)
add    %al,(%eax)
pushf
mov    $0x4cbffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x2700e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
sub    (%edx),%eax
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
rorb   $0xff,0x55cc0000
ljmp   *(%edx,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30aba02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,%al
or     $0xc1cc0000,%eax
(bad)
(bad)
cmp    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x48000000
push   %cs
add    %al,(%eax)
mov    $0xc2,%ah
(bad)
dec    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe1,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,-0x3be80000(%esi,%ecx,1)
(bad)
(bad)
jl     d189 <xattr_ntfs_3g+0x10d7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
xchg   %eax,%esi
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
clc
push   %cs
add    %al,(%eax)
push   %esp
iret
(bad)
decl   0x3(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edi
add    %bh,(%eax)
sldt   (%eax)
movsb  %ds:(%esi),%es:(%edi)
sar    %cl,%bh
dec    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x45,0x3700e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
mov    $0xf400000f,%eax
aam    $0xff
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
lock sldt (%eax)
cmp    $0xd6,%al
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
pop    %esp
adc    %al,(%eax)
add    %al,(%eax)
xlat   %ds:(%ebx)
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     d347 <xattr_ntfs_3g+0x1295>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    d37e <xattr_ntfs_3g+0x12cc>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,%al
adc    %al,(%eax)
add    %dh,%ah
xlat   %ds:(%ebx)
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,(%ecx,%edx,1)
add    %al,(%eax)
sub    %bl,%al
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
adc    %eax,(%eax)
add    %ah,(%eax,%ebx,8)
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x39,%al
pusha
cmp    %eax,(%eax)
add    %al,(%eax)
btc    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
pop    %ss
mov    $0x0,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x1c000000
mov    $0x0,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,(%ebx,%edi,4)
add    %al,(%eax)
jbe    ea5e <xattr_ntfs_3g+0x29ac>
add    %al,(%eax)
sub    $0xbb,%al
add    %al,(%eax)
push   %esi
cmpsb  %es:(%edi),%ds:(%esi)
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
xor    $0xbb,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
aas
mov    $0x20000,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
cmp    $0xbb,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebp
mov    $0x40000,%ebx
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %dl,-0x45(%ecx)
add    %al,(%eax)
add    $0x1000000,%eax
add    %al,(%eax)
add    %bl,-0x45(%ecx)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,-0x45(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,0x80000ad(%ebp)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,%ch
lods   %ds:(%esi),%eax
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0xa0000,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jo     eac1 <optionlist+0x41>
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
jbe    eacd <optionlist+0x4d>
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
jl     ead9 <optionlist+0x59>
add    %al,(%eax)
or     $0x4000000,%eax
add    %al,(%eax)
add    %al,0xe0000bb(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0xf0000bb(%esi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,0x100000bb(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,0x110000bb(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,0x120000bb(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,0x130000bb(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,%bl
mov    $0x140000,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sarl   %cl,0x150000(%ebx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sarl   0x160000(%ebx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
fistpll 0x170000(%ebx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
call   1800ec60 <_end+0x17fffb6c>
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,%dh
mov    $0x190000,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
lock mov $0x1a0000,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %edi,0x1b00(%eax,%eax,1)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
mov    $0x1b0000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x1c0000bc,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,(%eax)
mov    $0x1d0000,%esp
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
and    %edi,0x1e00(%eax,%eax,1)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,(%edi)
mov    $0x1f0000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sub    %bh,0x2000(%eax,%eax,1)
add    %al,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
mov    $0x210000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebp
mov    $0x220000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
rep lods %ds:(%esi),%eax
add    %al,(%eax)
and    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x240000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %esi
mov    $0x250000,%esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
pop    %esi
mov    $0x260000,%esp
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
mov    $0x0,%sp
daa
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,-0x44(%esi)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jp     ec36 <optionlist+0x1b6>
add    %al,(%eax)
sub    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
test   %edi,0x2a00(%eax,%eax,1)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,0x2b0000bc(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bl,0x2c0000bc(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
dec    %edi
push   %es
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
xchg   %eax,(%esi)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
mov    %bl,(%esi)
add    %al,(%eax)
or     $0x14000000,%eax
lods   %ds:(%esi),%al
add    %al,(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
add    $0xea,%al
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     %ch,%dl
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0xec000000
or     (%eax),%eax
add    %al,(%esi)
add    %al,(%eax)
add    %bl,0x0(%edx,%eax,1)
add    %cl,(%edx)
add    %al,(%eax)
add    %bl,0x9(%edi)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,%ah
in     (%dx),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
enter  $0x3,$0x0
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,%al
sbb    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,0x12000017(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%eax
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x80(%edi)
push   %ss
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x4c(%edi)
adc    $0xfffa0000,%eax
ljmp   *0x58(%edi)
mov    $0xec,%ah
add    %al,(%eax)
(bad)
push   %ds
add    %al,(%eax)
(bad)
push   %ds
add    %al,(%eax)
out    %al,$0x1e
add    %al,(%eax)
negb   (%esi)
add    %al,(%eax)
push   %es
pop    %ds
add    %al,(%eax)
push   %ss
pop    %ds
add    %al,(%eax)
es
pop    %ds
add    %al,(%eax)
ss
pop    %ds
add    %al,(%eax)
inc    %esi
pop    %ds
add    %al,(%eax)
push   %esi
pop    %ds
add    %al,(%eax)
popw   %ds
add    %al,(%eax)
jbe    ee1d <optionlist+0x39d>
add    %al,(%eax)
xchg   %bl,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
pop    %ds
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
pop    %ds
add    %al,(%eax)
mov    $0x1f,%dh
add    %al,(%eax)
(bad)
pop    %ds
add    %al,(%eax)
(bad)
pop    %ds
add    %al,(%eax)
out    %al,$0x1f
add    %al,(%eax)
negb   (%edi)
add    %al,(%eax)
push   %es
and    %al,(%eax)
add    %dl,(%esi)
and    %al,(%eax)
add    %ah,(%esi)
and    %al,(%eax)
add    %dh,(%esi)
and    %al,(%eax)
add    %al,0x20(%esi)
add    %al,(%eax)
push   %esi
and    %al,(%eax)
add    %ah,0x20(%esi)
add    %al,(%eax)
jbe    ee5e <optionlist+0x3de>
add    %al,(%eax)
xchg   %ah,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
and    %al,(%eax)
add    %ah,-0x49ffffe0(%esi)
and    %al,(%eax)
add    %al,%dh
and    %al,(%eax)
add    %dl,%dh
and    %al,(%eax)
add    %ah,%dh
and    %al,(%eax)
add    %dh,%dh
and    %al,(%eax)
add    %al,(%esi)
and    %eax,(%eax)
add    %dl,(%esi)
and    %eax,(%eax)
add    %ah,(%esi)
and    %eax,(%eax)
add    %dh,(%esi)
and    %eax,(%eax)
add    %al,0x21(%esi)
add    %al,(%eax)
push   %esi
and    %eax,(%eax)
add    %ah,0x21(%esi)
add    %al,(%eax)
jbe    ee9f <optionlist+0x41f>
add    %al,(%eax)
xchg   %ah,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
and    %eax,(%eax)
add    %ah,-0x49ffffdf(%esi)
and    %eax,(%eax)
add    %al,%dh
and    %eax,(%eax)
add    %dl,%dh
and    %eax,(%eax)
add    %ah,%dh
and    %eax,(%eax)
add    %dh,%dh
and    %eax,(%eax)
add    %al,(%esi)
and    (%eax),%al
add    %dl,(%esi)
and    (%eax),%al
add    %ah,(%esi)
and    (%eax),%al
add    %dh,(%esi)
and    (%eax),%al
add    %al,0x22(%esi)
add    %al,(%eax)
push   %esi
and    (%eax),%al
add    %ah,0x22(%esi)
add    %al,(%eax)
jbe    eee0 <optionlist+0x460>
add    %al,(%eax)
xchg   %ah,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
and    (%eax),%al
add    %ah,-0x49ffffde(%esi)
and    (%eax),%al
add    %al,%dh
and    (%eax),%al
add    %dl,%dh
and    (%eax),%al
add    %ah,%dh
and    (%eax),%al
add    %dh,%dh
and    (%eax),%al
add    %al,(%esi)
and    (%eax),%eax
add    %dl,(%esi)
and    (%eax),%eax
add    %ah,(%esi)
and    (%eax),%eax
add    %dh,(%esi)
and    (%eax),%eax
add    %al,0x23(%esi)
add    %al,(%eax)
push   %esi
and    (%eax),%eax
add    %ah,0x23(%esi)
add    %al,(%eax)
jbe    ef21 <optionlist+0x4a1>
add    %al,(%eax)
xchg   %ah,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
and    (%eax),%eax
add    %ah,-0x49ffffdd(%esi)
and    (%eax),%eax
add    %al,%dh
and    (%eax),%eax
add    %dl,%dh
and    (%eax),%eax
add    %ah,%dh
and    (%eax),%eax
add    %dh,%dh
and    (%eax),%eax
add    %al,(%esi)
and    $0x0,%al
add    %dl,(%esi)
and    $0x0,%al
add    %ah,(%esi)
and    $0x0,%al
add    %dh,(%esi)
and    $0x0,%al
add    %al,0x24(%esi)
add    %al,(%eax)
push   %esi
and    $0x0,%al
add    %ah,0x24(%esi)
add    %al,(%eax)
jbe    ef62 <optionlist+0x4e2>
add    %al,(%eax)
xchg   %ah,(%eax,%eax,1)
add    %dl,-0x59ffffdc(%esi)
and    $0x0,%al
add    %dh,-0x39ffffdc(%esi)
and    $0x0,%al
add    %dl,%dh
and    $0x0,%al
add    %ah,%dh
and    $0x0,%al
add    %dh,%dh
and    $0x0,%al
add    %al,(%esi)
and    $0x25160000,%eax
add    %al,(%eax)
es
and    $0x25360000,%eax
add    %al,(%eax)
inc    %esi
and    $0x25560000,%eax
add    %al,(%eax)
and    $0x0,%ax
jbe    efa3 <optionlist+0x523>
add    %al,(%eax)
xchg   %ah,0x25960000
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
and    $0x25b60000,%eax
add    %al,(%eax)
(bad)
and    $0x25d60000,%eax
add    %al,(%eax)
out    %al,$0x25
add    %al,(%eax)
mulb   0x26060000
add    %al,(%eax)
push   %ss
add    %al,%es:(%eax)
es add %al,%es:(%eax)
ss add %al,%ss:%es:(%eax)
inc    %esi
add    %al,%es:(%eax)
push   %eax
add    %al,%es:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0xf0,%al
add    %al,(%eax)
adc    %dh,0x0(%edi)
add    %al,(%eax)
je     f027 <optionlist+0x5a7>
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x66(%eax)
add    %al,(%eax)
and    %ah,0x0(%ebx)
add    %dl,-0x5fffff9a(%eax)
inc    %esi
add    %al,(%eax)
shlb   0x0(%edx)
add    %dl,0x7000006f(%eax)
push   %ebx
add    %al,(%eax)
xor    %dl,0x0(%edx)
add    %ah,%al
push   %eax
add    %al,(%eax)
inc    %eax
pop    %ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     f0b5 <optionlist+0x635>
add    %al,(%eax)
lock add %al,(%bx,%si)
and    %ch,0x0(%ebp)
add    %dh,%al
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x6fffff95(%eax)
addl   $0x8db000,(%eax)
add    %al,(%eax)
xchg   %eax,(%eax)
add    %ah,(%eax)
dec    %edi
add    %al,(%eax)
mov    0x90000083,%al
dec    %ebp
add    %al,(%eax)
mov    $0x4c,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
nop
addl   $0x3af000,(%eax)
add    %al,(%eax)
inc    %ebx
add    %al,(%eax)
loopne f0e6 <_edata+0xe>
add    %al,(%eax)
inc    %eax
data16
add    %al,(%eax)
adc    %bl,0x0(%ebx)
add    %al,0x4a(%eax)
add    %al,(%eax)
rolb   0x0(%esi)
add    %al,(%eax,%eax,1)
fs
scas   %es:(%edi),%al
xor    $0x36373366,%eax
arpl   %sp,0x39(%esi)
arpl   %sp,%gs:0x38(%ebp)
arpl   %si,%ss:(%edx)
arpl   %si,%ss:(%edx)
xor    $0x66,%al
popa
xor    %gs:(%ecx),%bh
xor    $0x30653834,%eax
cmp    %dh,(%edx,%eiz,2)
bound  %esp,0x66(%edx)
cmp    %dh,(%ebx)
xor    %ebp,(%esi)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
pop    %ebp
adc    (%ebx),%ebx
