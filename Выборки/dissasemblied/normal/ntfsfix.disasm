das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dh,(%esi)
fldl   (%edx)
dec    %ebx
jl     18a <_init-0xe06>
movb   $0x9b,%es:(%ebx)
subl   $0x1d,(%edi)
inc    %edx
pop    %ss
sarl   $0x25,(%edi,%ebp,8)
pop    %ds
add    (%eax),%eax
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %eax,0x0(%esi)
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xdf0>
pop    %eax
call   71d8eed3 <_end+0x71d83a73>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
fildl  (%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
bound  %eax,(%ecx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
bound  %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     2fc <_init-0xc94>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x0,%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    35d <_init-0xc33>
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
add    %ss:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    (%eax),%al
add    %al,(%eax)
sub    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%esp,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    45e <_init-0xb32>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jge    46e <_init-0xb22>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pushf
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    55d <_init-0xa33>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x2,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x28000004(%edi)
mov    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %cl,%dl
add    $0x0,%al
add    %ah,-0x4c(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
iret
add    $0x0,%al
add    %ah,(%eax)
mov    $0x0,%al
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
std
add    (%eax),%eax
add    %cl,%ah
jb     68f <_init-0x901>
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    %ax
add    $0x0,%al
add    %cl,%al
jb     69f <_init-0x8f1>
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
mov    $0x28000004,%esi
mov    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %bl,%bh
add    $0x0,%al
add    %ah,(%eax,%esi,4)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
test   $0x90000004,%eax
adc    (%eax),%eax
add    %ah,0x1200003a(%esi)
add    %cl,0x2a500
add    %dl,0xf(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %dl,-0x4bfffffe(%edx)
jb     6ef <_init-0x8a1>
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     765 <_init-0x82b>
jae    72e <_init-0x862>
xor    0x2e(%edi),%esp
jae    775 <_init-0x81b>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     779 <_init-0x817>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    7a4 <_init-0x7ec>
popa
jb     7a7 <_init-0x7e9>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    799 <_init-0x7f7>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    7ba <_init-0x7d6>
gs
jae    74a <_init-0x846>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     7b6 <_init-0x7da>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     7cd <_init-0x7c3>
jae    7c8 <_init-0x7c8>
popa
je     7e0 <_init-0x7b0>
jb     7cd <_init-0x7c3>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    7e3 <_init-0x7ad>
popa
je     7fb <_init-0x795>
jb     7e8 <_init-0x7a8>
jo     802 <_init-0x78e>
jb     7f6 <_init-0x79a>
je     7f4 <_init-0x79c>
add    %ch,0x74(%esi)
data16
jae    7f4 <_init-0x79c>
bound  %ebp,0x6f(%edi)
je     7f9 <_init-0x797>
jae    801 <_init-0x78f>
arpl   %si,0x72(%edi,%ebp,2)
pop    %edi
imul   $0x7366746e,0x5f(%ebx),%esi
add    %ch,0x74(%esi)
data16
jae    80d <_init-0x783>
fs
gs
jbe    81b <_init-0x775>
arpl   %sp,0x5f(%ebp)
jae    820 <_init-0x770>
jp     81e <_init-0x772>
pop    %edi
addr16
gs
je     7be <_init-0x7d2>
outsb  %ds:(%esi),(%dx)
je     827 <_init-0x769>
jae    822 <_init-0x76e>
insl   (%dx),%es:(%edi)
jae    83a <_init-0x756>
pop    %edi
jo     83b <_init-0x755>
gs
pop    %edi
ja     83f <_init-0x751>
imul   $0x75786966,0x5f(%ebp,%eiz,2),%esi
jo     7d7 <_init-0x7b9>
outsb  %ds:(%esi),(%dx)
je     840 <_init-0x750>
jae    83b <_init-0x755>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     84a <_init-0x746>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    84b <_init-0x745>
insl   (%dx),%es:(%edi)
jae    863 <_init-0x72d>
pop    %edi
jo     861 <_init-0x72f>
jae    868 <_init-0x728>
pop    %edi
jb     85c <_init-0x734>
popa
fs
pop    %edi
imul   $0x70,0x75(%eax),%di
outsb  %ds:(%esi),(%dx)
je     869 <_init-0x727>
jae    864 <_init-0x72c>
popa
je     87c <_init-0x714>
jb     869 <_init-0x727>
jo     881 <_init-0x70f>
je     86d <_init-0x723>
jae    875 <_init-0x71b>
popa
jb     876 <_init-0x71a>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    87d <_init-0x713>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    889 <_init-0x707>
je     885 <_init-0x70b>
push   $0x6c646e61
gs
jb     82e <_init-0x762>
outsb  %ds:(%esi),(%dx)
je     897 <_init-0x6f9>
jae    892 <_init-0x6fe>
popa
je     8aa <_init-0x6e6>
jb     897 <_init-0x6f9>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     8b7 <_init-0x6d9>
jb     8a9 <_init-0x6e7>
gs
data16
add    %ch,0x74(%esi)
data16
jae    8ac <_init-0x6e4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     8b8 <_init-0x6d8>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     8c3 <_init-0x6cd>
jae    8be <_init-0x6d2>
fs
gs
jbe    8cc <_init-0x6c4>
arpl   %sp,0x5f(%ebp)
jne    8d6 <_init-0x6ba>
imul   $0x6f5f6f69,0x5f(%eax),%edi
jo     8e4 <_init-0x6ac>
add    %ch,0x74(%esi)
data16
jae    8d6 <_init-0x6ba>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    8e1 <_init-0x6af>
jae    880 <_init-0x710>
outsb  %ds:(%esi),(%dx)
je     8e9 <_init-0x6a7>
jae    8e4 <_init-0x6ac>
popa
je     8fc <_init-0x694>
jb     8e9 <_init-0x6a7>
insl   (%dx),%es:(%edi)
popa
jo     8ed <_init-0x6a3>
ja     8f8 <_init-0x698>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
jb     90b <_init-0x685>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x74(%ebx),%esi
jae    900 <_init-0x690>
jne    910 <_init-0x680>
outsl  %ds:(%esi),(%dx)
jne    914 <_init-0x67c>
je     8a8 <_init-0x6e8>
outsb  %ds:(%esi),(%dx)
je     911 <_init-0x67f>
jae    90c <_init-0x684>
jbe    91e <_init-0x672>
insb   (%dx),%es:(%edi)
jne    91f <_init-0x671>
gs
pop    %edi
ja     928 <_init-0x668>
imul   $0x67616c66,0x5f(%ebp,%eiz,2),%esi
jae    8c0 <_init-0x6d0>
outsb  %ds:(%esi),(%dx)
je     929 <_init-0x667>
jae    924 <_init-0x66c>
fs
gs
jbe    932 <_init-0x65e>
arpl   %sp,0x5f(%ebp)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     93b <_init-0x655>
jae    936 <_init-0x65a>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    947 <_init-0x649>
add    %ch,0x74(%esi)
data16
jae    947 <_init-0x649>
jo     961 <_init-0x62f>
jb     955 <_init-0x63b>
je     953 <_init-0x63d>
add    %ch,0x74(%esi)
data16
jae    953 <_init-0x63d>
jne    966 <_init-0x62a>
arpl   %sp,0x73(%ecx)
gs
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
fs
gs
popaw
jne    973 <_init-0x61d>
je     909 <_init-0x687>
outsb  %ds:(%esi),(%dx)
je     972 <_init-0x61e>
jae    96d <_init-0x623>
jbe    975 <_init-0x61b>
jb     985 <_init-0x60b>
imul   $0x5f73695f,0x6e(%edi),%ebp
jae    990 <_init-0x600>
jo     98d <_init-0x603>
outsl  %ds:(%esi),(%dx)
jb     994 <_init-0x5fc>
gs add %ch,%fs:%gs:0x74(%esi)
data16
jae    987 <_init-0x609>
jo     99c <_init-0x5f4>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    992 <_init-0x5fe>
popa
je     9aa <_init-0x5e6>
jb     997 <_init-0x5f9>
je     9ac <_init-0x5e4>
jne    9aa <_init-0x5e6>
arpl   %sp,0x74(%ecx)
add    %ch,%gs:0x74(%esi)
data16
jae    9a5 <_init-0x5eb>
imul   $0x6572,0x5f(%ebp,%eiz,2),%bp
arpl   %bp,0x72(%edi)
fs
pop    %edi
jb     9b9 <_init-0x5d7>
popa
add    %ch,%fs:0x74(%esi)
data16
jae    9bb <_init-0x5d5>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     9cc <_init-0x5c4>
jae    9c7 <_init-0x5c9>
popa
je     9df <_init-0x5b1>
jb     9cc <_init-0x5c4>
outsl  %ds:(%esi),(%dx)
jo     9d5 <_init-0x5bb>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    9d6 <_init-0x5ba>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     9e2 <_init-0x5ae>
outsl  %ds:(%esi),(%dx)
jne    9fa <_init-0x596>
gs
jb     9fb <_init-0x595>
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    9f4 <_init-0x59c>
jne    9fa <_init-0x596>
jae    a07 <_init-0x589>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x725f,0x65(%si),%bp
gs
jae    a19 <_init-0x577>
je     9b6 <_init-0x5da>
outsb  %ds:(%esi),(%dx)
je     a1f <_init-0x571>
jae    a1a <_init-0x576>
popa
je     a32 <_init-0x55e>
jb     a1f <_init-0x571>
addr16
gs
je     a23 <_init-0x56d>
jae    a2b <_init-0x565>
popa
jb     a2c <_init-0x564>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    a33 <_init-0x55d>
insl   (%dx),%es:(%edi)
popa
jo     a48 <_init-0x548>
imul   $0x6961705f,0x67(%esi),%ebp
jb     a54 <_init-0x53c>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     a5b <_init-0x535>
gs
jae    a5f <_init-0x531>
add    %ch,0x74(%esi)
data16
jae    a51 <_init-0x53f>
bound  %ebp,0x6f(%edi)
je     a56 <_init-0x53a>
jae    a5e <_init-0x532>
arpl   %si,0x72(%edi,%ebp,2)
pop    %edi
jo     a61 <_init-0x52f>
jb     a75 <_init-0x51b>
add    %ch,%gs:0x74(%esi)
data16
jae    a68 <_init-0x528>
jbe    a7a <_init-0x516>
insb   (%dx),%es:(%edi)
jne    a7b <_init-0x515>
gs
pop    %edi
jae    a86 <_init-0x50a>
popa
jb     a89 <_init-0x507>
jne    a87 <_init-0x509>
add    %ch,0x74(%esi)
data16
jae    a7c <_init-0x514>
jbe    a8e <_init-0x502>
insb   (%dx),%es:(%edi)
jne    a8f <_init-0x501>
gs
pop    %edi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     a93 <_init-0x4fd>
jae    a8e <_init-0x502>
fs
gs
jbe    a9c <_init-0x4f4>
arpl   %sp,0x5f(%ebp)
jae    a9d <_init-0x4f3>
arpl   %si,0x72(%edi,%ebp,2)
pop    %edi
jae    aa8 <_init-0x4e8>
jp     aa6 <_init-0x4ea>
pop    %edi
addr16
gs
je     a46 <_init-0x54a>
outsb  %ds:(%esi),(%dx)
je     aaf <_init-0x4e1>
jae    aaa <_init-0x4e6>
fs
gs
jbe    ab8 <_init-0x4d8>
arpl   %sp,0x5f(%ebp)
data16
jb     aba <_init-0x4d6>
add    %ch,%gs:0x74(%esi)
data16
jae    abb <_init-0x4d5>
popa
je     ad3 <_init-0x4bd>
jb     ac0 <_init-0x4d0>
insl   (%dx),%es:(%edi)
jae    ad8 <_init-0x4b8>
pop    %edi
jo     ad9 <_init-0x4b7>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    acf <_init-0x4c1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    ae2 <_init-0x4ae>
je     a76 <_init-0x51a>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    ae9 <_init-0x4a7>
popa
je     b01 <_init-0x48f>
jb     aee <_init-0x4a2>
jo     b03 <_init-0x48d>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    af9 <_init-0x497>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     b0e <_init-0x482>
add    %ch,%fs:0x74(%esi)
data16
jae    b0f <_init-0x481>
popa
je     b27 <_init-0x469>
jb     b14 <_init-0x47c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     b25 <_init-0x46b>
jae    b20 <_init-0x470>
insl   (%dx),%es:(%edi)
data16
je     b24 <_init-0x46c>
jb     b2c <_init-0x464>
arpl   %bp,0x72(%edi)
fs
jae    b2c <_init-0x464>
ja     b41 <_init-0x44f>
imul   $0x7366746e,0x0(%ebp,%eiz,2),%esi
pop    %edi
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     b46 <_init-0x44a>
jae    b41 <_init-0x44f>
jne    b47 <_init-0x449>
jae    b5a <_init-0x436>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    b6f <_init-0x421>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x78(%ebp)
imul   $0x6f6c7465,0x73(%eax,%eax,1),%esi
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x70(%edi)
je     b80 <_init-0x410>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    b98 <_init-0x3f8>
jb     b9a <_init-0x3f6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
gs
jb     ba8 <_init-0x3e8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     bc7 <_init-0x3c9>
je     bb7 <_init-0x3d9>
je     b8e <_init-0x402>
xor    $0x0,%al
pop    %edi
pop    %edi
jae    bcc <_init-0x3c4>
jo     bd2 <_init-0x3be>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     bdc <_init-0x3b4>
jo     be3 <_init-0x3ad>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     bdc <_init-0x3b4>
push   $0x5f5f0072
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     bef <_init-0x3a1>
add    %dh,0x74(%ebx)
jb     bf4 <_init-0x39c>
jb     c03 <_init-0x38d>
outsl  %ds:(%esi),(%dx)
jb     b94 <_init-0x3fc>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     c14 <_init-0x37c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x655f0066,0x74(%esi),%ebp
fs
popa
je     c16 <_init-0x37a>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    c32 <_init-0x35e>
popa
jb     c35 <_init-0x35b>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    c2b <_init-0x365>
addr16 jo c3b <_init-0x355>
add    %bl,0x66(%edi)
jo     c33 <_init-0x35d>
push   $0x746e0077
data16
jae    c3b <_init-0x355>
bound  %esi,0x67(%ebp)
jae    be1 <_init-0x3af>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%eax
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x0,%al
repz add (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x50000,0xd(%ecx),%ebp
jmp    10000cd1 <_end+0xfff5871>
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x40000,(%ecx),%ecx
repz add $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
incl   (%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %cl,(%ecx)
add    $0x0,%eax
inc    %eax
lods   %ds:(%esi),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
lods   %ds:(%esi),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
lods   %ds:(%esi),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jo     cc7 <_init-0x2c9>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
subb   $0x0,0x80000(%ebp)
add    %dl,0x80000ad(%eax)
add    %al,(%eax)
add    %ah,0x80000ad(%eax)
add    %al,(%eax)
add    %ah,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0xb0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %dh,0x80000(%eax)
add    %al,(%eax)
and    $0xb0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x60000af,%esp
add    %eax,(%eax)
add    %al,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
add    (%eax),%al
add    %al,%ah
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
or     %al,(%eax)
add    %cl,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
or     %eax,(%eax)
add    %cl,%ah
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
adc    %al,(%eax)
add    %dl,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
adc    $0x0,%al
add    %dl,%ah
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
push   %ss
add    %al,(%eax)
fsubrs 0x19060000(%edi)
add    %al,(%eax)
fsubrl 0x24060000(%edi)
add    %al,(%eax)
in     $0xaf,%al
add    %al,(%eax)
push   %es
cmp    (%eax),%eax
add    %ch,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
push   %es
aas
int3
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
add    (%eax),%eax
add    %dl,%al
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %dl,%ah
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
add    $0xaed80000,%eax
add    %al,(%eax)
pop    %es
push   %es
add    %al,(%eax)
fsubrl 0x7070000(%esi)
add    %al,(%eax)
loopne d88 <_init-0x208>
add    %al,(%eax)
pop    %es
or     (%eax),%al
add    %ah,%ah
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
or     (%eax),%eax
add    %ch,%al
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
or     $0x0,%al
add    %ch,%ah
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
or     $0xaef00000,%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
hlt
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
sldt   (%eax)
clc
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
adc    %eax,(%eax)
add    %bh,%ah
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %es
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
adc    (%eax),%eax
add    %al,(%edi,%ebp,4)
add    %al,(%eax)
pop    %es
adc    $0xaf080000,%eax
add    %al,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
or     $0xaf,%al
add    %al,(%eax)
pop    %es
sbb    %al,(%eax)
add    %dl,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %dl,(%edi,%ebp,4)
add    %al,(%eax)
pop    %es
sbb    (%eax),%al
add    %bl,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %bl,(%edi,%ebp,4)
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %ah,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
sbb    $0xaf240000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
sub    %ch,0x1f070000(%edi)
add    %al,(%eax)
sub    $0xaf,%al
add    %al,(%eax)
pop    %es
and    %al,(%eax)
add    %dh,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %dh,(%edi,%ebp,4)
add    %al,(%eax)
pop    %es
and    (%eax),%al
add    %bh,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
and    (%eax),%eax
add    %bh,(%edi,%ebp,4)
add    %al,(%eax)
pop    %es
and    $0x0,%al
add    %al,-0x51(%eax)
add    %al,(%eax)
pop    %es
and    $0xaf440000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
dec    %eax
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
daa
add    %al,(%eax)
dec    %esp
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
sub    %al,(%eax)
add    %dl,-0x51(%eax)
add    %al,(%eax)
pop    %es
sub    %eax,(%eax)
add    %dl,0x0(%edi,%ebp,4)
add    %al,(%edi)
sub    (%eax),%al
add    %bl,-0x51(%eax)
add    %al,(%eax)
pop    %es
sub    (%eax),%eax
add    %bl,0x0(%edi,%ebp,4)
add    %al,(%edi)
sub    $0x0,%al
add    %ah,-0x51(%eax)
add    %al,(%eax)
pop    %es
sub    $0xaf640000,%eax
add    %al,(%eax)
pop    %es
add    %al,%cs:(%eax)
push   $0x70000af
das
add    %al,(%eax)
insb   (%dx),%es:(%edi)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
xor    %al,(%eax)
add    %dh,-0x51(%eax)
add    %al,(%eax)
pop    %es
xor    %eax,(%eax)
add    %dh,0x0(%edi,%ebp,4)
add    %al,(%edi)
xor    (%eax),%al
add    %bh,-0x51(%eax)
add    %al,(%eax)
pop    %es
xor    (%eax),%eax
add    %bh,0x0(%edi,%ebp,4)
add    %al,(%edi)
xor    $0x0,%al
add    %al,0x70000af(%eax)
xor    $0xaf840000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ss:(%eax)
mov    %ch,0x37070000(%edi)
add    %al,(%eax)
mov    %gs,0x38070000(%edi)
add    %al,(%eax)
nop
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
cmp    %eax,(%eax)
add    %dl,0x3a070000(%edi,%ebp,4)
add    %al,(%eax)
cwtl
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
cmp    $0x0,%al
add    %bl,0x3d070000(%edi,%ebp,4)
add    %al,(%eax)
mov    0x70000af,%al
add    %al,%ds:(%eax)
movsb  %ds:(%esi),%es:(%edi)
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
test   $0xaf,%al
add    %al,(%eax)
pop    %es
inc    %ecx
add    %al,(%eax)
lods   %ds:(%esi),%al
scas   %es:(%edi),%eax
add    %al,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
mov    $0xaf,%al
add    %al,(%eax)
pop    %es
inc    %ebx
add    %al,(%eax)
mov    $0xaf,%ah
add    %al,(%eax)
pop    %es
inc    %esp
add    %al,(%eax)
mov    $0x70000af,%eax
inc    %ebp
push   %ebx
sub    $0x8,%esp
call   4e70 <main+0x3ae0>
add    $0x9f27,%ebx
mov    0x11c(%ebx),%eax
test   %eax,%eax
je     fae <_init+0x1e>
call   1190 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    fc0 <_init+0x30>
jmp    *0x10(%ebx)
push   $0x8
jmp    fc0 <_init+0x30>
jmp    *0x14(%ebx)
push   $0x10
jmp    fc0 <_init+0x30>
jmp    *0x18(%ebx)
push   $0x18
jmp    fc0 <_init+0x30>
jmp    *0x1c(%ebx)
push   $0x20
jmp    fc0 <_init+0x30>
jmp    *0x20(%ebx)
push   $0x28
jmp    fc0 <_init+0x30>
jmp    *0x24(%ebx)
push   $0x30
jmp    fc0 <_init+0x30>
jmp    *0x28(%ebx)
push   $0x38
jmp    fc0 <_init+0x30>
jmp    *0x2c(%ebx)
push   $0x40
jmp    fc0 <_init+0x30>
jmp    *0x30(%ebx)
push   $0x48
jmp    fc0 <_init+0x30>
jmp    *0x34(%ebx)
push   $0x50
jmp    fc0 <_init+0x30>
jmp    *0x38(%ebx)
push   $0x58
jmp    fc0 <_init+0x30>
jmp    *0x3c(%ebx)
push   $0x60
jmp    fc0 <_init+0x30>
jmp    *0x40(%ebx)
push   $0x68
jmp    fc0 <_init+0x30>
jmp    *0x44(%ebx)
push   $0x70
jmp    fc0 <_init+0x30>
jmp    *0x48(%ebx)
push   $0x78
jmp    fc0 <_init+0x30>
jmp    *0x4c(%ebx)
push   $0x80
jmp    fc0 <_init+0x30>
jmp    *0x50(%ebx)
push   $0x88
jmp    fc0 <_init+0x30>
jmp    *0x54(%ebx)
push   $0x90
jmp    fc0 <_init+0x30>
jmp    *0x58(%ebx)
push   $0x98
jmp    fc0 <_init+0x30>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    fc0 <_init+0x30>
jmp    *0x60(%ebx)
push   $0xa8
jmp    fc0 <_init+0x30>
jmp    *0x64(%ebx)
push   $0xb0
jmp    fc0 <_init+0x30>
jmp    *0x68(%ebx)
push   $0xb8
jmp    fc0 <_init+0x30>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    fc0 <_init+0x30>
jmp    *0x70(%ebx)
push   $0xc8
jmp    fc0 <_init+0x30>
jmp    *0x74(%ebx)
push   $0xd0
jmp    fc0 <_init+0x30>
jmp    *0x78(%ebx)
push   $0xd8
jmp    fc0 <_init+0x30>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    fc0 <_init+0x30>
jmp    *0x80(%ebx)
push   $0xe8
jmp    fc0 <_init+0x30>
jmp    *0x84(%ebx)
push   $0xf0
jmp    fc0 <_init+0x30>
jmp    *0x88(%ebx)
push   $0xf8
jmp    fc0 <_init+0x30>
jmp    *0x8c(%ebx)
push   $0x100
jmp    fc0 <_init+0x30>
jmp    *0x90(%ebx)
push   $0x108
jmp    fc0 <_init+0x30>
jmp    *0x94(%ebx)
push   $0x110
jmp    fc0 <_init+0x30>
jmp    *0x98(%ebx)
push   $0x118
jmp    fc0 <_init+0x30>
jmp    *0x9c(%ebx)
push   $0x120
jmp    fc0 <_init+0x30>
jmp    *0xa0(%ebx)
push   $0x128
jmp    fc0 <_init+0x30>
jmp    *0xa4(%ebx)
push   $0x130
jmp    fc0 <_init+0x30>
jmp    *0xa8(%ebx)
push   $0x138
jmp    fc0 <_init+0x30>
jmp    *0xac(%ebx)
push   $0x140
jmp    fc0 <_init+0x30>
jmp    *0xb0(%ebx)
push   $0x148
jmp    fc0 <_init+0x30>
jmp    *0xb4(%ebx)
push   $0x150
jmp    fc0 <_init+0x30>
jmp    *0xb8(%ebx)
push   $0x158
jmp    fc0 <_init+0x30>
jmp    *0xbc(%ebx)
push   $0x160
jmp    fc0 <_init+0x30>
jmp    *0xc0(%ebx)
push   $0x168
jmp    fc0 <_init+0x30>
jmp    *0xc4(%ebx)
push   $0x170
jmp    fc0 <_init+0x30>
jmp    *0xc8(%ebx)
push   $0x178
jmp    fc0 <_init+0x30>
jmp    *0xcc(%ebx)
push   $0x180
jmp    fc0 <_init+0x30>
jmp    *0xd0(%ebx)
push   $0x188
jmp    fc0 <_init+0x30>
jmp    *0xd4(%ebx)
push   $0x190
jmp    fc0 <_init+0x30>
jmp    *0xd8(%ebx)
push   $0x198
jmp    fc0 <_init+0x30>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    fc0 <_init+0x30>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    fc0 <_init+0x30>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    fc0 <_init+0x30>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    fc0 <_init+0x30>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    fc0 <_init+0x30>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    fc0 <_init+0x30>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    fc0 <_init+0x30>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    fc0 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x9b25,%ebx
and    $0xfffffff0,%esp
sub    $0x100,%esp
mov    0x10c(%ebx),%eax
lea    -0x160(%ebx),%edi
lea    -0x3b5e(%ebx),%esi
mov    %eax,(%esp)
call   1150 <ntfs_log_set_handler@plt>
movl   $0x0,0x184(%ebx)
00
movl   $0x0,0x188(%ebx)
00
movl   $0x0,0x18c(%ebx)
00
movl   $0x0,0x190(%ebx)
00
mov    0xc(%ebp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   11b0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     159b <main+0x20b>
cmp    $0x62,%eax
je     158c <main+0x1fc>
jg     1488 <main+0xf8>
cmp    $0x3f,%eax
je     1483 <main+0xf3>
cmp    $0x56,%eax
je     14aa <main+0x11a>
sub    $0x1,%eax
nop
je     1565 <main+0x1d5>
mov    0x110(%ebx),%eax
mov    0xc(%ebp),%edx
mov    (%eax),%eax
mov    -0x4(%edx,%eax,4),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xcf,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3b7b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2c0f(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   5000 <main+0x3c70>
cmp    $0x68,%eax
je     1483 <main+0xf3>
cmp    $0x6e,%eax
je     1556 <main+0x1c6>
cmp    $0x64,%eax
jne    1436 <main+0xa6>
movl   $0x1,0x190(%ebx)
00
jmp    13ec <main+0x5c>
lea    -0x3be8(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3bf0(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3bda(%ebx),%edi
lea    -0x35ac(%ebx),%eax
lea    -0x2c17(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x9e,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xfc(%ebx),%eax
mov    (%eax),%ecx
lea    0x164(%ebx),%eax
mov    (%eax),%edx
lea    0x160(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x3b83(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x9f,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x1,(%esp)
call   11a0 <exit@plt>
movl   $0x1,0x188(%ebx)
00
jmp    13ec <main+0x5c>
cmpl   $0x0,0x184(%ebx)
jne    3343 <main+0x1fb3>
mov    0x110(%ebx),%eax
mov    0xc(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x184(%ebx)
jmp    13ec <main+0x5c>
movl   $0x1,0x18c(%ebx)
00
jmp    13ec <main+0x5c>
mov    0x184(%ebx),%eax
test   %eax,%eax
je     3b8b <main+0x27fb>
lea    0xcc(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   10d0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
jne    17d7 <main+0x447>
mov    0xcc(%esp),%eax
and    $0x5,%eax
sub    $0x1,%eax
je     3bb2 <main+0x2822>
lea    -0x3bda(%ebx),%eax
mov    %eax,0xbc(%esp)
lea    -0x2c01(%ebx),%eax
mov    %eax,0xb8(%esp)
xor    %eax,%eax
mov    0xbc(%esp),%edi
cmpl   $0x0,0x188(%ebx)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
setne  %al
mov    %eax,%esi
lea    -0x3b57(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xb8(%esp),%eax
movl   $0x629,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x184(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   12b0 <ntfs_mount@plt>
test   %eax,%eax
mov    %eax,%esi
je     1974 <main+0x5e4>
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xb8(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x62c,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x344c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xb8(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x62e,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movzwl 0x14(%esi),%edi
mov    %edi,(%esp)
call   1140 <malloc@plt>
mov    %edi,(%esp)
mov    %eax,0xb0(%esp)
call   1140 <malloc@plt>
test   %eax,%eax
mov    %eax,0xa8(%esp)
je     2614 <main+0x1284>
cmpl   $0x0,0xb0(%esp)
je     2614 <main+0x1284>
mov    (%esi),%eax
mov    0xb0(%esp),%ecx
mov    %edi,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_pread@plt>
movzwl 0x14(%esi),%ecx
test   %edx,%edx
je     182e <main+0x49e>
lea    -0x2ed4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x555,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2ce7(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
lea    -0x2ea4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x63d,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x1,(%esp)
call   11a0 <exit@plt>
mov    0x184(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x626,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3478(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0xbc(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c01(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0xb8(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    15f1 <main+0x261>
cmp    %ecx,%eax
jne    1736 <main+0x3a6>
mov    0xb0(%esp),%ecx
mov    0x28(%ecx),%edx
mov    0x2c(%ecx),%edi
mov    %edx,0xa0(%esp)
mov    (%esi),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   12a0 <ntfs_device_size_get@plt>
cmp    %edx,%edi
jg     1e8f <main+0xaff>
jl     186f <main+0x4df>
cmp    %eax,0xa0(%esp)
jae    1e8f <main+0xaff>
movzbl 0x16(%esi),%ecx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
xor    %edi,%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
mov    0xbc(%esp),%ecx
cmovne %eax,%edx
cmovne %edi,%eax
mov    %eax,0xa0(%esp)
lea    -0x2ce7(%ebx),%edi
lea    -0x2f20(%ebx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x535,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0xa4(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xa8(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,0x14(%esp)
movzwl 0x14(%esi),%edx
mov    0xa4(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
mov    0xa0(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   1110 <ntfs_pread@plt>
test   %edx,%edx
mov    %eax,0x9c(%esp)
js     1eca <main+0xb3a>
movzwl 0x14(%esi),%eax
mov    $0x0,%ecx
mov    %eax,%edx
je     2181 <main+0xdf1>
cmpl   $0x0,0x188(%ebx)
je     1f5c <main+0xbcc>
lea    -0x38cd(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x541,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1771 <main+0x3e1>
lea    -0x2bf5(%ebx),%eax
mov    0xbc(%esp),%esi
mov    %eax,0xa0(%esp)
mov    %eax,0x14(%esp)
mov    0xb8(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x630,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3410(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2c27(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x5de,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x78(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x100(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x184(%ebx),%eax
mov    %eax,(%esp)
call   1100 <ntfs_device_alloc@plt>
test   %eax,%eax
mov    %eax,0xa8(%esp)
je     4948 <main+0x35b8>
cmpl   $0x0,0x188(%ebx)
setne  %al
mov    %eax,%esi
movzbl %al,%eax
mov    %eax,0x5c(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   11f0 <ntfs_volume_startup@plt>
test   %eax,%eax
mov    %eax,0xb0(%esp)
je     2de9 <main+0x1a59>
movl   $0x0,0x9c(%esp)
00
lea    -0x3310(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
lea    -0x2c81(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x19f,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
movzbl 0x25(%eax),%ecx
mov    0x94(%eax),%edx
shl    %cl,%edx
mov    %edx,(%esp)
mov    %edx,0xa8(%esp)
call   1140 <malloc@plt>
mov    0xa8(%esp),%edx
test   %eax,%eax
mov    %eax,0x98(%esp)
je     490e <main+0x357e>
mov    %edx,(%esp)
call   1140 <malloc@plt>
test   %eax,%eax
mov    %eax,0x88(%esp)
je     48c5 <main+0x3535>
lea    -0x3a8d(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1ae,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edi
mov    0x98(%esp),%ecx
mov    0x1c(%edi),%edx
mov    0x78(%edi),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    0x94(%edi),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
sar    $0x1f,%edx
mov    %edx,0x10(%esp)
call   1310 <ntfs_attr_mst_pread@plt>
mov    %eax,0xa8(%esp)
mov    0xb0(%esp),%eax
mov    %edx,%edi
mov    0x94(%eax),%ecx
mov    %ecx,%eax
cltd
cmp    %edx,%edi
je     2722 <main+0x1392>
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1b2,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x1,%edi
je     2c71 <main+0x18e1>
call   1250 <__errno_location@plt>
movl   $0x5,(%eax)
lea    -0x3a7c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1b5,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
cmpl   $0x0,0x188(%ebx)
je     1f3f <main+0xbaf>
movl   $0xffffffff,0x9c(%esp)
ff
mov    0xb0(%esp),%eax
movl   $0xa,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   1340 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x80(%esp)
je     1f04 <main+0xb74>
mov    0x108(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   1230 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x90(%esp)
je     395b <main+0x25cb>
mov    0x90(%esp),%eax
mov    0x28(%eax),%edi
mov    0x24(%eax),%esi
test   $0xfffffffe,%edi
jne    37a5 <main+0x2415>
mov    %esi,%edx
shrd   $0x1,%edi,%edx
mov    %esi,(%esp)
mov    %edx,0xa8(%esp)
call   1030 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x98(%esp)
je     3b3b <main+0x27ab>
mov    0x90(%esp),%ecx
mov    0x28(%ecx),%edx
mov    0x24(%ecx),%eax
mov    %edi,0x14(%esp)
mov    %ecx,%edi
mov    %ecx,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   1210 <ntfs_attr_pread@plt>
mov    0x28(%edi),%esi
mov    0x24(%edi),%ecx
cmp    %esi,%edx
je     2940 <main+0x15b0>
mov    %eax,0x18(%esp)
lea    -0x3160(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %esi,0x24(%esp)
or     $0xffffffff,%esi
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x293,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
movl   $0x5,(%eax)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
test   %eax,%eax
je     1ddc <main+0xa4c>
lea    -0x3967(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2b6,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x1,%esi
je     1f3f <main+0xbaf>
cmpl   $0x0,0x9c(%esp)
jne    1f3f <main+0xbaf>
mov    0xb0(%esp),%eax
testb  $0x1,0x12(%eax)
je     1fe3 <main+0xc53>
cmpl   $0x0,0x9c(%esp)
jne    2164 <main+0xdd4>
mov    0xb0(%esp),%eax
testb  $0x4,0x8(%eax)
je     2654 <main+0x12c4>
mov    0xb0(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   ff0 <ntfs_umount@plt>
cmpl   $0xffffffff,0x9c(%esp)
je     25e0 <main+0x1250>
mov    0x184(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12b0 <ntfs_mount@plt>
test   %eax,%eax
mov    %eax,%esi
jne    16c1 <main+0x331>
lea    -0x38dc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x638,0x8(%esp)
jmp    17b1 <main+0x421>
lea    -0x2ef8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
lea    -0x2ce7(%ebx),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x539,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x2bf5(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x552,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1771 <main+0x3e1>
lea    -0x31bc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x275,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
cmpl   $0x0,0x188(%ebx)
je     2164 <main+0xdd4>
movl   $0xffffffff,0x9c(%esp)
ff
jmp    1df3 <main+0xa63>
mov    (%esi),%eax
mov    %edx,0xc(%esp)
mov    0xa0(%esp),%edx
mov    %ecx,0x10(%esp)
mov    0xa4(%esp),%ecx
mov    %eax,0x9c(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   1050 <ntfs_pwrite@plt>
movzwl 0x14(%esi),%ecx
test   %edx,%edx
je     26e0 <main+0x1350>
lea    -0x2bf5(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x54a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1771 <main+0x3e1>
lea    -0x3098(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x12e,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2caa(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x98(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
movzwl 0x12(%eax),%eax
mov    %ax,0xa8(%esp)
orw    $0x1,0xa8(%esp)
01
cmpl   $0x0,0x188(%ebx)
jne    28ec <main+0x155c>
lea    0xd0(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x3,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0xd0(%esp)
00
call   1260 <ntfs_file_record_read@plt>
test   %eax,%eax
jne    3b4b <main+0x27bb>
mov    0xd0(%esp),%eax
testb  $0x1,0x16(%eax)
jne    2cc6 <main+0x1936>
lea    -0x3070(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2cc4(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
movl   $0x5,(%eax)
mov    0xd0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0xbc(%esp),%esi
mov    0x98(%esp),%edi
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x135,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3922(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x136,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
cmpl   $0x0,0x188(%ebx)
je     25c9 <main+0x1239>
movl   $0xffffffff,0x9c(%esp)
ff
jmp    1e12 <main+0xa82>
cmp    %eax,0x9c(%esp)
jne    192d <main+0x59d>
mov    %eax,0x90(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x94(%esp)
mov    %eax,0x8(%esp)
mov    0xa8(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1090 <memcmp@plt>
mov    0x90(%esp),%edx
mov    0x94(%esp),%ecx
test   %eax,%eax
jne    192d <main+0x59d>
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x54e,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
cmpl   $0x0,0x190(%ebx)
je     232c <main+0xf9c>
andw   $0xfffe,0x12(%esi)
cmpl   $0x0,0x188(%ebx)
je     2379 <main+0xfe9>
movzbl 0x11(%esi),%eax
mov    %eax,0x1c(%esp)
movzbl 0x10(%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x658,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2e40(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   12c0 <ntfs_version_is_supported@plt>
test   %eax,%eax
jne    2336 <main+0xfa6>
cmpl   $0x0,0x18c(%ebx)
je     22bb <main+0xf2b>
cmpl   $0x0,0x188(%ebx)
je     2402 <main+0x1072>
mov    (%esi),%eax
xor    %edi,%edi
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x66c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2da4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   ff0 <ntfs_umount@plt>
test   %eax,%eax
jne    23ed <main+0x105d>
test   %edi,%edi
jne    17cb <main+0x43b>
lea    -0xc(%ebp),%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
orw    $0x1,0x12(%esi)
jmp    223c <main+0xeac>
lea    -0x38c1(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x65a,0x8(%esp)
mov    0xbc(%esp),%eax
mov    $0x1,%edi
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    2302 <main+0xf72>
movzwl 0x12(%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1070 <ntfs_volume_write_flags@plt>
test   %eax,%eax
je     2249 <main+0xeb9>
call   1250 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   1180 <strerror@plt>
mov    (%edi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x653,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
lea    -0x2e74(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    2249 <main+0xeb9>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   ff0 <ntfs_umount@plt>
jmp    231a <main+0xf8a>
lea    -0x2e20(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x165,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2cf5(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0xb0(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x8,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   1340 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0xa8(%esp)
je     2c85 <main+0x18f5>
lea    0x148(%ebx),%eax
movl   $0x4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ecx,(%esp)
call   1230 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     2557 <main+0x11c7>
mov    %eax,(%esp)
call   12d0 <ntfs_attr_map_whole_runlist@plt>
test   %eax,%eax
jne    2557 <main+0x11c7>
mov    (%edi),%eax
test   %eax,%eax
je     24c3 <main+0x1133>
mov    0x14(%eax),%edx
or     0x10(%eax),%edx
je     24c3 <main+0x1133>
mov    0x2c(%eax),%edx
or     0x28(%eax),%edx
jne    325e <main+0x1ece>
lea    -0x38a3(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x185,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x191,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    22bb <main+0xf2b>
lea    -0x3890(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x18a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
lea    -0x2d1c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x65f,0x8(%esp)
jmp    2358 <main+0xfc8>
mov    0xb0(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   ff0 <ntfs_umount@plt>
cmpl   $0x0,0x188(%ebx)
je     17cb <main+0x43b>
lea    -0x38ec(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x633,0x8(%esp)
jmp    17b1 <main+0x421>
lea    -0x2f44(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x528,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2ce7(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    178f <main+0x3ff>
lea    -0x2f70(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
lea    -0x2cd2(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x14d,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1220 <ntfs_logfile_reset@plt>
test   %eax,%eax
jne    3c69 <main+0x28d9>
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x153,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1e23 <main+0xa93>
cmp    %ecx,%eax
jne    1fa9 <main+0xc19>
lea    -0x38c8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x547,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    220c <main+0xe7c>
cmp    %ecx,0xa8(%esp)
jne    1b8b <main+0x7fb>
mov    0xbc(%esp),%edi
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x1b8,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x70(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3a68(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1ba,0x8(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edi
mov    0x88(%esp),%ecx
mov    0x1c(%edi),%edx
mov    0xa4(%edi),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    0x94(%edi),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
sar    $0x1f,%edx
mov    %edx,0x10(%esp)
call   1310 <ntfs_attr_mst_pread@plt>
mov    %eax,0xa8(%esp)
mov    0xb0(%esp),%eax
mov    %edx,%edi
mov    0x94(%eax),%ecx
mov    %ecx,%eax
cltd
cmp    %edx,%edi
je     3395 <main+0x2005>
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1be,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x1,%edi
je     3382 <main+0x1ff2>
call   1250 <__errno_location@plt>
movl   $0x5,(%eax)
lea    -0x3a53(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1c1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
movzwl 0xa8(%esp),%eax
mov    %ax,0xa(%ecx)
mov    0xb0(%esp),%ecx
mov    %ax,0x12(%ecx)
mov    %edx,0x14(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x3,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,(%esp)
call   1200 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    489e <main+0x350e>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   11d0 <ntfs_attr_put_search_ctx@plt>
mov    0xd0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
movzwl 0xa8(%esp),%eax
mov    0xb0(%esp),%edx
mov    %ax,0x12(%edx)
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x142,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1e04 <main+0xa74>
cmp    %ecx,%eax
jne    1d26 <main+0x996>
mov    $0x20,%eax
mov    0x98(%esp),%edi
jmp    2976 <main+0x15e6>
cmp    %eax,0xa8(%esp)
jbe    297b <main+0x15eb>
movzwl (%edi,%eax,2),%edx
lea    -0x61(%eax),%esi
cmp    $0x19,%esi
lea    -0x20(%eax),%ecx
cmova  %eax,%ecx
cmp    %ecx,%edx
jne    29b6 <main+0x1626>
add    $0x1,%eax
cmp    $0x7e,%eax
jbe    2956 <main+0x15c6>
cmp    $0x7e,%eax
jbe    29b6 <main+0x1626>
mov    0xb0(%esp),%esi
mov    0xa8(%esi),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x98(%esp),%eax
mov    %eax,0xa8(%esi)
mov    0xa8(%esp),%eax
mov    %eax,0xac(%esi)
xor    %esi,%esi
jmp    1d7f <main+0x9ef>
lea    -0x39ce(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29f,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
cmpl   $0x0,0x188(%ebx)
jne    3b24 <main+0x2794>
mov    0xb0(%esp),%esi
movl   $0x6,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   1340 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x64(%esi)
je     399e <main+0x260e>
mov    0x108(%ebx),%ecx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   1230 <ntfs_attr_open@plt>
mov    0xb0(%esp),%ecx
test   %eax,%eax
mov    %eax,0x68(%ecx)
je     37f3 <main+0x2463>
mov    0x24(%eax),%edx
mov    0x28(%eax),%ecx
mov    %edx,0xa8(%esp)
mov    %ecx,0xac(%esp)
shld   $0x3,%edx,%ecx
shl    $0x3,%edx
mov    %ecx,%edi
mov    %edx,0x88(%esp)
mov    0xb0(%esp),%edx
mov    %ecx,0x8c(%esp)
mov    0x60(%edx),%ecx
mov    0x5c(%edx),%edx
cmp    %ecx,%edi
jl     2bf4 <main+0x1864>
jg     2aab <main+0x171b>
cmp    %edx,0x88(%esp)
jb     2bf4 <main+0x1864>
mov    %edx,%esi
mov    %ecx,%edi
add    %edx,%esi
adc    %ecx,%edi
cmp    %edi,0x8c(%esp)
mov    %esi,0x78(%esp)
mov    %edi,0x7c(%esp)
jg     2bf4 <main+0x1864>
jl     2adb <main+0x174b>
mov    0x78(%esp),%esi
cmp    %esi,0x88(%esp)
jae    2bf4 <main+0x1864>
mov    0xac(%esp),%esi
cmp    0x20(%eax),%esi
jge    2be2 <main+0x1852>
lea    -0x399a(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
lea    -0x2c9b(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x24b,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edi
mov    0xa8(%edi),%eax
mov    %eax,0x14(%esp)
mov    0xac(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
add    %eax,%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   1000 <ntfs_attr_pwrite@plt>
mov    0xac(%edi),%ecx
add    %ecx,%ecx
test   %edx,%edx
je     389a <main+0x250a>
lea    -0x3982(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x24f,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%esi
mov    0x68(%esi),%eax
mov    %eax,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0x64(%esi),%eax
movl   $0x0,0x68(%esi)
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
movl   $0x0,0x64(%esi)
or     $0xffffffff,%esi
jmp    1d7f <main+0x9ef>
jg     2bf4 <main+0x1864>
mov    0xa8(%esp),%esi
cmp    0x1c(%eax),%esi
jbe    2aeb <main+0x175b>
mov    0x1c(%eax),%esi
mov    0x20(%eax),%edi
mov    %edx,%eax
mov    %ecx,%edx
add    $0x7,%eax
adc    $0x0,%edx
shrd   $0x3,%edx,%eax
mov    %eax,0x28(%esp)
mov    0xa8(%esp),%eax
sar    $0x3,%edx
mov    %edx,0x2c(%esp)
mov    0xac(%esp),%edx
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
mov    %eax,0x18(%esp)
lea    -0x30fc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c9b(%ebx),%eax
movl   $0x249,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    2baf <main+0x181f>
cmpl   $0xffffffff,0xa8(%esp)
jne    1bca <main+0x83a>
nop
jmp    1bd5 <main+0x845>
lea    -0x2dc8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x18e,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    25a2 <main+0x1212>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   1330 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x90(%esp)
je     20ea <main+0xd5a>
mov    %eax,0x20(%esp)
mov    0x108(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x70,(%esp)
call   1320 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    3c29 <main+0x2899>
mov    0x90(%esp),%eax
mov    0x4(%eax),%esi
cmpb   $0x0,0x8(%esi)
jne    3c02 <main+0x2872>
mov    0x10(%esi),%edx
movzwl 0x14(%esi),%eax
mov    %edx,%edi
mov    0xd0(%esp),%edx
lea    (%esi,%eax,1),%ecx
mov    %eax,0x88(%esp)
lea    (%ecx,%edi,1),%eax
mov    %eax,0x80(%esp)
mov    0x18(%edx),%eax
add    %edx,%eax
cmp    %eax,0x80(%esp)
ja     2d8f <main+0x19ff>
mov    0x88(%esp),%eax
add    %edi,%eax
cmp    0x4(%esi),%eax
jbe    2883 <main+0x14f3>
lea    -0x2fa8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x111,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2cc4(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
movl   $0x5,(%eax)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   11d0 <ntfs_attr_put_search_ctx@plt>
jmp    20ea <main+0xd5a>
mov    0xa0(%esp),%eax
mov    0xbc(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x78(%esp),%eax
movl   $0x5ea,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3b29(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x78(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x5eb,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,0x88(%esp)
mov    0xa8(%esp),%eax
cmpl   $0x0,(%eax)
je     46ad <main+0x331d>
cmpl   $0x0,0x8(%eax)
je     46ad <main+0x331d>
call   1270 <ntfs_volume_alloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     43fd <main+0x306d>
lea    0xa8(%eax),%eax
mov    %eax,(%esp)
call   1290 <ntfs_upcase_build_default@plt>
test   %eax,%eax
mov    %eax,0xac(%edi)
je     43fd <main+0x306d>
cmpl   $0x0,0xa8(%edi)
je     43fd <main+0x306d>
mov    0x8(%edi),%eax
mov    %esi,%ecx
movl   $0x0,0xb0(%edi)
00
and    $0xffffffdf,%eax
test   %cl,%cl
jne    3253 <main+0x1ec3>
or     $0x1a,%eax
mov    %eax,0x8(%edi)
mov    0xa8(%esp),%ecx
mov    (%ecx),%eax
mov    (%eax),%edx
mov    0x8(%edi),%eax
mov    %ecx,(%esp)
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
call   *%edx
test   %eax,%eax
mov    0xa8(%esp),%eax
jne    43a9 <main+0x3019>
mov    %eax,(%edi)
mov    %eax,(%esp)
call   1080 <ntfs_device_sector_size_get@plt>
test   %eax,%eax
mov    %eax,%esi
mov    $0x200,%eax
cmovle %eax,%esi
mov    %esi,(%esp)
call   1140 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0x9c(%esp)
je     439f <main+0x300f>
mov    %esi,%eax
cltd
mov    0xa8(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,0xb0(%esp)
mov    %edx,0xb4(%esp)
call   1110 <ntfs_pread@plt>
cmp    %edx,0xb4(%esp)
je     3142 <main+0x1db2>
cmp    $0xffffffff,%edx
je     3112 <main+0x1d82>
mov    0x88(%esp),%ecx
or     %eax,%edx
movl   $0x16,(%ecx)
jne    311b <main+0x1d8b>
lea    -0x33ec(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x5a6,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2c33(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    $0x1,%edx
mov    0x88(%esp),%eax
mov    (%eax),%esi
cmp    $0xc,%esi
je     3d6b <main+0x29db>
cmp    $0x16,%esi
jne    3049 <main+0x1cb9>
lea    -0x3abc(%ebx),%eax
mov    %edx,0xb0(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x5c1,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2c33(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x88(%esp),%eax
mov    0xb0(%esp),%edx
mov    (%eax),%esi
mov    0x9c(%esp),%eax
mov    %edx,0x90(%esp)
mov    %esi,0xb0(%esp)
or     $0xffffffff,%esi
mov    %eax,(%esp)
call   1040 <free@plt>
test   %edi,%edi
mov    0x90(%esp),%edx
je     3098 <main+0x1d08>
mov    0xa8(%edi),%eax
mov    %edx,0x9c(%esp)
mov    %eax,(%esp)
call   1040 <free@plt>
mov    %edi,(%esp)
call   1040 <free@plt>
mov    0x9c(%esp),%edx
test   %edx,%edx
je     30ad <main+0x1d1d>
mov    0xa8(%esp),%ecx
mov    (%ecx),%eax
mov    0x4(%eax),%eax
mov    %ecx,(%esp)
call   *%eax
mov    0x88(%esp),%eax
test   %esi,%esi
mov    0xb0(%esp),%ecx
mov    %ecx,(%eax)
je     384f <main+0x24bf>
lea    -0x333c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x5f6,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   10b0 <ntfs_device_free@plt>
jmp    25e0 <main+0x1250>
cmp    $0xffffffff,%eax
jne    2f8b <main+0x1bfb>
lea    -0x3af0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x5a8,0x8(%esp)
jmp    2fc2 <main+0x1c32>
cmp    %eax,%esi
jne    2f82 <main+0x1bf2>
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   12e0 <ntfs_boot_sector_is_ntfs@plt>
test   %eax,%eax
jne    4515 <main+0x3185>
mov    0x9c(%esp),%eax
mov    0x28(%eax),%ecx
mov    0x2c(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x4d6,0x8(%esp)
mov    %eax,0x98(%esp)
lea    -0x33c8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %ecx,0x90(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c46(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    (%edi),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   12a0 <ntfs_device_size_get@plt>
mov    %eax,0xb0(%esp)
addl   $0xffffffff,0xb0(%esp)
mov    %edx,0xb4(%esp)
adcl   $0xffffffff,0xb4(%esp)
cmpl   $0x0,0xb4(%esp)
jle    440f <main+0x307f>
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%eax
mov    %esi,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %edx,0x4(%esp)
mov    0x9c(%esp),%edx
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
mov    %edi,%eax
call   50c0 <main+0x3d30>
test   %eax,%eax
jne    441f <main+0x308f>
mov    0x88(%esp),%eax
xor    %esi,%esi
mov    (%eax),%eax
mov    %eax,0xb0(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    $0x1,%edx
jmp    3074 <main+0x1ce4>
or     $0x1b,%eax
mov    %eax,0x8(%edi)
jmp    2ed9 <main+0x1b49>
mov    0x1c(%edi),%eax
mov    0x20(%edi),%edx
mov    %eax,0x24(%edi)
mov    %edx,0x28(%edi)
mov    %eax,0x2c(%edi)
mov    %edx,0x30(%edi)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   10c0 <ntfs_attr_truncate@plt>
test   %eax,%eax
jne    32eb <main+0x1f5b>
movzbl 0x24(%esi),%ecx
mov    0x5c(%esi),%eax
mov    0x60(%esi),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     32a4 <main+0x1f14>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   10c0 <ntfs_attr_truncate@plt>
test   %eax,%eax
jne    32eb <main+0x1f5b>
mov    0xa8(%esp),%eax
movl   $0x0,0x24(%edi)
movl   $0x0,0x28(%edi)
movl   $0x0,0x2c(%edi)
movl   $0x0,0x30(%edi)
orl    $0x200,0x14(%eax)
orl    $0x8,0x10(%eax)
jmp    24ff <main+0x116f>
lea    -0x2dec(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x182,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
jmp    25a2 <main+0x1212>
lea    -0x3b9f(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xbb,0x8(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2c0f(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   5000 <main+0x3c70>
cmpl   $0xffffffff,0xa8(%esp)
jne    283e <main+0x14ae>
jmp    2849 <main+0x14b9>
cmp    %ecx,0xa8(%esp)
jne    27ff <main+0x146f>
mov    0xbc(%esp),%edi
mov    0x70(%esp),%eax
mov    %esi,(%esp)
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1c4,0x8(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x32ec(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1d2,0x8(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %ecx,%ecx
mov    0xb0(%esp),%edi
lea    -0x3a6d(%ebx),%eax
mov    %esi,0xa8(%esp)
mov    %ecx,%esi
movl   $0x0,0x78(%esp)
movl   $0x0,0x7c(%esp)
movl   $0x0,0x80(%esp)
00
mov    %eax,0x6c(%esp)
jmp    34ee <main+0x215e>
mov    0xd0(%esp,%esi,4),%eax
mov    %eax,0x90(%esp)
mov    0x1c(%edi),%ecx
mov    0x98(%esp),%eax
imul   %esi,%ecx
lea    (%eax,%ecx,1),%edx
movzwl 0x16(%edx),%eax
and    $0x1,%eax
mov    %eax,0xb0(%esp)
je     3485 <main+0x20f5>
mov    (%edx),%eax
cmp    $0x44414142,%eax
je     479a <main+0x340a>
cmp    $0x454c4946,%eax
jne    4718 <main+0x3388>
add    0x88(%esp),%ecx
testb  $0x1,0x16(%ecx)
je     35b4 <main+0x2224>
mov    (%ecx),%eax
cmp    $0x44414142,%eax
je     481c <main+0x348c>
cmp    $0x454c4946,%eax
jne    3ce9 <main+0x2959>
cmpl   $0x0,0xb0(%esp)
movl   $0x0,0x90(%esp)
00
jne    34d5 <main+0x2145>
xor    %eax,%eax
cmpl   $0x454c4946,(%edx)
setne  %al
mov    %eax,0x90(%esp)
cmpl   $0x454c4946,(%edx)
je     35d6 <main+0x2246>
add    $0x1,%esi
addl   $0x1,0x78(%esp)
adcl   $0x0,0x7c(%esp)
cmp    0x94(%edi),%esi
jge    39e1 <main+0x2651>
mov    0x6c(%esp),%eax
cmp    $0xb,%esi
mov    %eax,0xd0(%esp)
lea    -0x3a44(%ebx),%eax
mov    %eax,0xd4(%esp)
lea    -0x38f5(%ebx),%eax
mov    %eax,0xd8(%esp)
lea    -0x3940(%ebx),%eax
mov    %eax,0xdc(%esp)
lea    -0x3a3b(%ebx),%eax
mov    %eax,0xe0(%esp)
lea    -0x3a32(%ebx),%eax
mov    %eax,0xe4(%esp)
lea    -0x2af8(%ebx),%eax
mov    %eax,0xe8(%esp)
lea    -0x3a23(%ebx),%eax
mov    %eax,0xec(%esp)
lea    -0x3a1d(%ebx),%eax
mov    %eax,0xf0(%esp)
lea    -0x3a14(%ebx),%eax
mov    %eax,0xf4(%esp)
lea    -0x3957(%ebx),%eax
mov    %eax,0xf8(%esp)
lea    -0x3a0c(%ebx),%eax
mov    %eax,0xfc(%esp)
jle    343f <main+0x20af>
cmp    $0xf,%esi
jg     35c4 <main+0x2234>
lea    -0x3bb6(%ebx),%eax
mov    %eax,0x90(%esp)
jmp    344d <main+0x20bd>
movl   $0x0,0x90(%esp)
00
jmp    34d5 <main+0x2145>
lea    -0x3baa(%ebx),%eax
mov    %eax,0x90(%esp)
jmp    344d <main+0x20bd>
mov    0x18(%edx),%eax
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %ecx,0x60(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xb0(%esp)
call   1090 <memcmp@plt>
test   %eax,%eax
je     34e1 <main+0x2151>
cmpl   $0x0,0x80(%esp)
mov    0xb0(%esp),%edx
mov    0x60(%esp),%ecx
je     374d <main+0x23bd>
cmpl   $0x0,0x90(%esp)
je     36f0 <main+0x2360>
lea    -0x2b87(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x2d4c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
movl   $0x211,0x8(%esp)
mov    %ecx,0xb0(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%ecx
mov    %ecx,%edx
mov    %edx,0x14(%esp)
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   1200 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    3a92 <main+0x2702>
mov    0x70(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x21a,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    34e1 <main+0x2151>
lea    -0x3a40(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x2d4c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
movl   $0x211,0x8(%esp)
mov    %edx,0xb0(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edx
jmp    367d <main+0x22ed>
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x20d,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x60(%esp),%ecx
movl   $0x1,0x80(%esp)
00
mov    0xb0(%esp),%edx
jmp    3615 <main+0x2285>
lea    -0x3198(%ebx),%eax
or     $0xffffffff,%esi
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x286,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    1d7f <main+0x9ef>
lea    -0x3124(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x23c,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c9b(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%esi
mov    0x64(%esi),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
movl   $0x0,0x64(%esi)
or     $0xffffffff,%esi
jmp    1d7f <main+0x9ef>
cmpl   $0x0,0x188(%ebx)
je     3918 <main+0x2588>
lea    -0x3378(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x5f1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    30c5 <main+0x1d35>
cmp    %ecx,%eax
jne    2b7a <main+0x17ea>
lea    -0x30bc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x251,0x8(%esp)
mov    %eax,0x4(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edi
mov    0x68(%edi),%eax
mov    %eax,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0x64(%edi),%eax
movl   $0x0,0x68(%edi)
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
mov    0x98(%esp),%eax
movl   $0x0,0x64(%edi)
mov    %eax,(%esp)
call   1040 <free@plt>
jmp    1d7f <main+0x9ef>
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   11f0 <ntfs_volume_startup@plt>
test   %eax,%eax
mov    %eax,0xb0(%esp)
je     30c5 <main+0x1d35>
cmpl   $0x0,0x188(%ebx)
je     1a5b <main+0x6cb>
movl   $0xffffffff,0x9c(%esp)
ff
jmp    1a66 <main+0x6d6>
lea    -0x39ec(%ebx),%eax
or     $0xffffffff,%esi
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x27b,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c8c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1d8e <main+0x9fe>
lea    -0x39b6(%ebx),%eax
or     $0xffffffff,%esi
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x237,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c9b(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1d7f <main+0x9ef>
cmpl   $0x0,0x80(%esp)
mov    %edi,0xb0(%esp)
mov    0xa8(%esp),%esi
jne    3a2c <main+0x269c>
mov    0x70(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x21e,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x344c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x220,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
cmpl   $0x0,0x9c(%esp)
je     1c40 <main+0x8b0>
jmp    1c28 <main+0x898>
mov    0xa0(%esp),%eax
mov    0xa8(%esp),%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x215,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0xb0(%esp)
mov    %eax,0x4(%esp)
call   fe0 <ntfs_log_redirect@plt>
cmpl   $0x0,0x90(%esp)
je     3b43 <main+0x27b3>
lea    -0x2b87(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3a04(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x217,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
mov    0x98(%esp),%eax
or     $0xffffffff,%esi
mov    %eax,(%esp)
call   1040 <free@plt>
jmp    1d7f <main+0x9ef>
or     $0xffffffff,%esi
jmp    1d7f <main+0x9ef>
lea    -0x3a40(%ebx),%eax
jmp    3ae6 <main+0x2756>
lea    -0x394f(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xea,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2cc4(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    20f9 <main+0xd69>
lea    -0x34d4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xd5,0x8(%esp)
jmp    3365 <main+0x1fd5>
mov    0x184(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x621,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x34b0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2c01(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x1,(%esp)
call   11a0 <exit@plt>
lea    -0x2fe8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x105,0x8(%esp)
jmp    2db1 <main+0x1a21>
lea    -0x3024(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xfe,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2cc4(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    2dd5 <main+0x1a45>
mov    0xbc(%esp),%edi
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x14f,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3905(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x150,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   ff0 <ntfs_umount@plt>
jmp    25e0 <main+0x1250>
mov    0xa8(%esp),%esi
mov    %edi,0xb0(%esp)
mov    0xa0(%esp),%eax
mov    0xbc(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x200,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x90(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x202,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x31e8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
lea    -0x3ad7(%ebx),%eax
mov    %edx,0xb0(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x5be,0x8(%esp)
jmp    3020 <main+0x1c90>
mov    0x84(%esp),%eax
cmp    0xc(%edx),%eax
jne    4b7c <main+0x37ec>
mov    0x80(%esp),%eax
cmp    0x8(%edx),%eax
jne    4b7c <main+0x37ec>
cmpb   $0x0,0x6(%edx)
mov    %edx,0x70(%esp)
jne    4636 <main+0x32a6>
mov    0x70(%esp),%eax
mov    0x10(%eax),%edx
mov    0x14(%eax),%eax
mov    %edx,0x58(%esp)
test   %ax,%ax
mov    %eax,0x3c(%esp)
jne    3de7 <main+0x2a57>
cmp    $0xf,%edx
jbe    4636 <main+0x32a6>
mov    0x58(%esp),%eax
xor    %esi,%esi
mov    0x70(%edi),%edx
mov    %eax,0x60(%esp)
movzwl 0x3c(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x6c(%edi),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
movzbl 0x25(%edi),%ecx
cmovne %eax,%edx
cmovne %esi,%eax
mov    %eax,0x80(%esp)
mov    0x60(%esp),%eax
xor    %esi,%esi
mov    %edx,0x84(%esp)
mov    0x64(%esp),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
mov    (%edi),%ecx
cmovne %eax,%edx
cmovne %esi,%eax
add    %eax,0x80(%esp)
mov    0x80(%esp),%eax
adc    %edx,0x84(%esp)
mov    0x84(%esp),%edx
mov    %ecx,(%esp)
mov    %eax,0x38(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edx,0x34(%esp)
mov    0x84(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
mov    %eax,0x4(%esp)
call   1110 <ntfs_pread@plt>
mov    0x1c(%edi),%ecx
test   %edx,%edx
jne    4636 <main+0x32a6>
cmp    %ecx,%eax
jne    4636 <main+0x32a6>
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1010 <ntfs_mst_post_read_fixup@plt>
test   %eax,%eax
jne    4636 <main+0x32a6>
mov    0x1c(%edi),%esi
mov    $0x80,%edx
movzbl 0x24(%edi),%ecx
mov    0xb0(%esp),%eax
movl   $0x0,0x54(%esp)
shl    $0x4,%esi
shr    %cl,%esi
mov    %esi,0x50(%esp)
call   4fa0 <main+0x3c10>
test   %eax,%eax
je     4636 <main+0x32a6>
mov    0xb0(%esp),%ecx
testb  $0x1,0x16(%ecx)
je     4636 <main+0x32a6>
mov    0x54(%esp),%ecx
cmp    0x14(%eax),%ecx
jne    4636 <main+0x32a6>
cmp    0x10(%eax),%esi
jne    4636 <main+0x32a6>
mov    0xb0(%esp),%ecx
mov    0x40(%esp),%edx
cmp    0x24(%ecx),%edx
jne    4636 <main+0x32a6>
xor    %edx,%edx
cmp    0x20(%ecx),%edx
jne    4636 <main+0x32a6>
mov    0x3c(%esp),%edx
shr    $0x10,%edx
cmp    %dx,0x10(%ecx)
jne    4636 <main+0x32a6>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   1130 <ntfs_mapping_pairs_decompress@plt>
cmpl   $0xffffffff,0xc(%eax)
mov    %eax,0x80(%esp)
jne    4636 <main+0x32a6>
cmpl   $0xfffffffe,0x8(%eax)
jne    4636 <main+0x32a6>
mov    0x4(%eax),%edx
mov    %eax,%ecx
or     (%eax),%edx
jne    4636 <main+0x32a6>
mov    0x54(%esp),%eax
cmp    0x14(%ecx),%eax
jne    4636 <main+0x32a6>
cmp    0x10(%ecx),%esi
jne    4636 <main+0x32a6>
mov    0x54(%esp),%eax
cmp    0x1c(%ecx),%eax
jne    4636 <main+0x32a6>
cmp    0x18(%ecx),%esi
jne    4636 <main+0x32a6>
mov    0x20(%ecx),%edx
xor    %esi,%esi
mov    0x24(%ecx),%ecx
mov    %edx,%eax
mov    %ecx,0x54(%esp)
mov    %ecx,%edx
movzbl 0x24(%edi),%ecx
mov    %eax,0x50(%esp)
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
cmp    %edx,0x34(%esp)
mov    %eax,0x40(%esp)
mov    %edx,0x44(%esp)
jb     4636 <main+0x32a6>
ja     3ffd <main+0x2c6d>
mov    0x40(%esp),%eax
cmp    %eax,0x38(%esp)
jb     4636 <main+0x32a6>
mov    0x80(%esp),%esi
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
add    0x28(%esi),%eax
adc    0x2c(%esi),%edx
xor    %esi,%esi
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
cmp    %edx,0x34(%esp)
jb     4038 <main+0x2ca8>
ja     4636 <main+0x32a6>
cmp    %eax,0x38(%esp)
jae    4636 <main+0x32a6>
mov    0x90(%esp),%eax
mov    (%edi),%esi
mov    %eax,0x14(%esp)
mov    0x1c(%edi),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x6c(%edi),%eax
mov    0x70(%edi),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     4068 <main+0x2cd8>
mov    %eax,%edx
xor    %eax,%eax
movzbl 0x25(%edi),%ecx
mov    %eax,0x80(%esp)
mov    $0xf,%eax
mov    %edx,0x84(%esp)
xor    %edx,%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     408f <main+0x2cff>
mov    %eax,%edx
xor    %eax,%eax
add    %eax,0x80(%esp)
adc    %edx,0x84(%esp)
mov    0x80(%esp),%eax
mov    0x84(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   1110 <ntfs_pread@plt>
mov    0x1c(%edi),%ecx
test   %edx,%edx
jne    4636 <main+0x32a6>
cmp    %ecx,%eax
jne    4636 <main+0x32a6>
mov    0x90(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1010 <ntfs_mst_post_read_fixup@plt>
test   %eax,%eax
jne    4636 <main+0x32a6>
mov    0x24(%esi),%eax
or     0x20(%esi),%eax
jne    4636 <main+0x32a6>
testb  $0x1,0x16(%esi)
je     4636 <main+0x32a6>
mov    0x90(%esp),%eax
mov    $0x20,%edx
call   4fa0 <main+0x3c10>
test   %eax,%eax
jne    4636 <main+0x32a6>
mov    0x90(%esp),%eax
mov    $0x30,%edx
call   4fa0 <main+0x3c10>
test   %eax,%eax
jne    4636 <main+0x32a6>
lea    -0x2bfc(%ebx),%eax
mov    0xbc(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x476,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x2d74(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x477,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%eax
cmpw   $0x2f,0x4(%eax)
jbe    41b8 <main+0x2e28>
mov    0xb0(%esp),%eax
movl   $0xf,0x2c(%eax)
mov    0xb0(%esp),%eax
mov    $0x80,%edx
movw   $0xf,0x10(%eax)
call   4fa0 <main+0x3c10>
test   %eax,%eax
je     4c5e <main+0x38ce>
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
movl   $0x0,0x30(%eax)
movl   $0x0,0x34(%eax)
movl   $0x0,0x38(%eax)
movl   $0x0,0x3c(%eax)
xor    %eax,%eax
mov    0x90(%esp),%ecx
cmpw   $0x2f,0x4(%ecx)
jbe    4218 <main+0x2e88>
mov    0x58(%esp),%edx
mov    %edx,0x2c(%ecx)
mov    0x70(%esp),%ecx
test   %eax,%eax
movl   $0xf,0x10(%ecx)
movl   $0xf0000,0x14(%ecx)
jne    4321 <main+0x2f91>
cmpl   $0x0,0x188(%ebx)
jne    4dc6 <main+0x3a36>
movzbl 0x24(%edi),%esi
mov    0x6c(%edi),%eax
mov    0x70(%edi),%edx
mov    %esi,%ecx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     4259 <main+0x2ec9>
mov    %eax,%edx
xor    %eax,%eax
movzbl 0x25(%edi),%ecx
mov    %eax,0x80(%esp)
mov    $0xf,%eax
mov    %edx,0x84(%esp)
xor    %edx,%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     4280 <main+0x2ef0>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x70(%esp)
mov    0x80(%esp),%eax
add    %eax,0x70(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x74(%esp)
mov    0x84(%esp),%edx
adc    %edx,0x74(%esp)
mov    0x64(%esp),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     42b4 <main+0x2f24>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x60(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x64(%esp)
mov    0x84(%esp),%edx
add    %eax,0x60(%esp)
adc    %edx,0x64(%esp)
cmpb   $0x0,0x33(%esp)
jne    4dd3 <main+0x3a43>
mov    0x98(%edi),%eax
mov    %esi,%ecx
xor    %esi,%esi
mov    0x9c(%edi),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
mov    %eax,0x50(%esp)
mov    0x1c(%edi),%eax
mov    %edx,0x54(%esp)
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1370 <ntfs_mst_pre_write_fixup@plt>
test   %eax,%eax
je     4c66 <main+0x38d6>
mov    0xa0(%esp),%eax
or     $0xffffffff,%esi
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x479,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
test   %esi,%esi
je     3228 <main+0x1e98>
mov    $0x1,%edx
jmp    2fe0 <main+0x1c50>
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x593,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3b03(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2c33(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %edx,%edx
movl   $0x0,0x9c(%esp)
00
jmp    2fe0 <main+0x1c50>
movl   $0x0,0x9c(%esp)
00
xor    %edx,%edx
jmp    2fe0 <main+0x1c50>
jl     441f <main+0x308f>
cmpl   $0x0,0xb0(%esp)
ja     31f1 <main+0x1e61>
cmpl   $0x0,0x98(%esp)
jle    44fe <main+0x316e>
mov    0xb4(%esp),%eax
cmp    %eax,0x98(%esp)
jg     44a8 <main+0x3118>
jl     444f <main+0x30bf>
mov    0xb0(%esp),%eax
cmp    %eax,0x90(%esp)
jae    4486 <main+0x30f6>
mov    0x90(%esp),%eax
mov    0x98(%esp),%ecx
mov    0x9c(%esp),%edx
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
mov    %edi,%eax
mov    %ecx,0xc(%esp)
mov    %ecx,0x4(%esp)
call   50c0 <main+0x3d30>
test   %eax,%eax
je     3228 <main+0x1e98>
mov    0xb4(%esp),%eax
cmp    %eax,0x98(%esp)
jg     44a8 <main+0x3118>
jl     44e7 <main+0x3157>
mov    0xb0(%esp),%eax
cmp    %eax,0x90(%esp)
jbe    44e7 <main+0x3157>
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%eax
mov    %esi,0x10(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    0x9c(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edi,%eax
movl   $0x0,0x4(%esp)
call   50c0 <main+0x3d30>
test   %eax,%eax
je     3228 <main+0x1e98>
mov    0x88(%esp),%eax
mov    $0x1,%edx
movl   $0x16,(%eax)
jmp    2fe0 <main+0x1c50>
jl     4486 <main+0x30f6>
cmpl   $0x0,0x90(%esp)
ja     442d <main+0x309d>
xchg   %ax,%ax
jmp    4486 <main+0x30f6>
mov    0x9c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1360 <ntfs_boot_sector_parse@plt>
test   %eax,%eax
js     3161 <main+0x1dd1>
lea    -0x33a4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x469,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c75(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x68(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x1c(%edi),%esi
mov    %esi,(%esp)
call   1140 <malloc@plt>
mov    %esi,(%esp)
mov    %eax,0x98(%esp)
call   1140 <malloc@plt>
mov    %esi,(%esp)
mov    %eax,0xb0(%esp)
call   1140 <malloc@plt>
mov    %eax,0x90(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   1140 <malloc@plt>
mov    0x98(%esp),%ecx
test   %ecx,%ecx
mov    %eax,0x6c(%esp)
je     439f <main+0x300f>
cmpl   $0x0,0xb0(%esp)
je     439f <main+0x300f>
cmpl   $0x0,0x90(%esp)
je     439f <main+0x300f>
test   %eax,%eax
je     439f <main+0x300f>
mov    (%edi),%eax
mov    %esi,0xc(%esp)
xor    %esi,%esi
mov    %ecx,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x24(%edi),%ecx
mov    0x70(%edi),%edx
mov    %eax,0x80(%esp)
mov    0x6c(%edi),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_pread@plt>
mov    0x1c(%edi),%ecx
test   %edx,%edx
je     49b5 <main+0x3625>
lea    -0x2bed(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x47b,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
jmp    3228 <main+0x1e98>
mov    0x88(%esp),%eax
lea    -0x3b10(%ebx),%edx
xor    %edi,%edi
mov    0xbc(%esp),%ecx
movl   $0x16,(%eax)
mov    0xa8(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x2c33(%ebx),%eax
mov    %eax,0x18(%esp)
movl   $0x577,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %edx,%edx
movl   $0x0,0x9c(%esp)
00
jmp    2fe0 <main+0x1c50>
mov    0xa8(%esp),%esi
mov    %edi,0xb0(%esp)
mov    0xa0(%esp),%eax
mov    0xbc(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x1ef,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x90(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1f2,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3270(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
mov    0xa8(%esp),%esi
mov    %edi,0xb0(%esp)
mov    0xa0(%esp),%eax
mov    0xbc(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x1e7,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x90(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1eb,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x32cc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
mov    0xa8(%esp),%esi
mov    %edi,0xb0(%esp)
mov    0xa0(%esp),%eax
mov    0xbc(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x1f9,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x90(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1fc,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x322c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c0a <main+0x87a>
lea    -0x3938(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x118,0x8(%esp)
jmp    3c4b <main+0x28bb>
lea    -0x3aa7(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1a9,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
jmp    1c28 <main+0x898>
lea    -0x3aa7(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1a4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    1c28 <main+0x898>
mov    0xbc(%esp),%edi
mov    0x78(%esp),%esi
mov    0xa0(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x5e3,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x3b43(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x5e4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    25e0 <main+0x1250>
cmp    %ecx,%eax
jne    4636 <main+0x32a6>
mov    %eax,0x4(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   1010 <ntfs_mst_post_read_fixup@plt>
test   %eax,%eax
jne    4636 <main+0x32a6>
mov    0x98(%esp),%eax
mov    $0x80,%edx
call   4fa0 <main+0x3c10>
test   %eax,%eax
mov    %eax,%esi
je     4636 <main+0x32a6>
cmpb   $0x0,0x8(%eax)
je     4636 <main+0x32a6>
mov    0x18(%eax),%eax
mov    0x1c(%esi),%edx
movzbl 0x24(%edi),%ecx
add    $0x1,%eax
adc    $0x0,%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     4a1b <main+0x368b>
mov    %eax,%edx
xor    %eax,%eax
mov    0x1c(%edi),%ecx
shl    $0x4,%ecx
test   %edx,%edx
jne    4636 <main+0x32a6>
cmp    %ecx,%eax
jne    4636 <main+0x32a6>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   1130 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,0x80(%esp)
je     4636 <main+0x32a6>
cmpl   $0x0,0xc(%eax)
js     4a95 <main+0x3705>
mov    0x14(%eax),%ecx
xor    %esi,%esi
mov    0x10(%eax),%edx
mov    %ecx,0x74(%esp)
mov    %edx,%eax
mov    %ecx,%edx
movzbl 0x24(%edi),%ecx
mov    %eax,0x70(%esp)
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
mov    %edx,0x64(%esp)
mov    0x1c(%edi),%edx
mov    %eax,0x60(%esp)
shl    $0x4,%edx
cmpl   $0x0,0x64(%esp)
je     4aa9 <main+0x3719>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
jmp    4636 <main+0x32a6>
cmp    %edx,0x60(%esp)
jne    4a95 <main+0x3705>
mov    0x80(%esp),%edx
mov    0x74(%esp),%eax
cmp    0x1c(%edx),%eax
jne    4a95 <main+0x3705>
mov    0x70(%esp),%eax
cmp    0x18(%edx),%eax
jne    4a95 <main+0x3705>
cmpl   $0xffffffff,0x24(%edx)
jne    4a95 <main+0x3705>
cmpl   $0xfffffffe,0x20(%edx)
jne    4a95 <main+0x3705>
mov    0x98(%esp),%esi
movzwl 0x10(%esi),%eax
mov    %edx,(%esp)
mov    %eax,0x40(%esp)
shll   $0x10,0x40(%esp)
call   1040 <free@plt>
mov    %esi,%eax
mov    $0x20,%edx
call   4fa0 <main+0x3c10>
test   %eax,%eax
mov    %eax,%esi
je     4636 <main+0x32a6>
movzbl 0x8(%eax),%eax
test   %al,%al
mov    %al,0x33(%esp)
jne    4b89 <main+0x37f9>
movzwl 0x14(%esi),%eax
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
add    %esi,%eax
mov    %eax,0x70(%esp)
mov    0x10(%esi),%eax
test   %eax,%eax
je     4636 <main+0x32a6>
mov    0x1c(%edi),%ecx
mov    0x70(%esp),%edx
movl   $0x0,0x84(%esp)
00
mov    %eax,0x60(%esp)
mov    %ecx,%esi
mov    %ecx,0x50(%esp)
movzbl 0x24(%edi),%ecx
shl    $0x4,%esi
shr    %cl,%esi
mov    %esi,0x80(%esp)
movzwl 0x4(%edx),%esi
test   %si,%si
je     4636 <main+0x32a6>
cmpl   $0x80,(%edx)
je     3d99 <main+0x2a09>
add    %esi,%edx
sub    %esi,0x60(%esp)
jne    4b63 <main+0x37d3>
jmp    4636 <main+0x32a6>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   1130 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,0x80(%esp)
je     4636 <main+0x32a6>
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
test   %edx,%edx
mov    %eax,0x70(%esp)
mov    %edx,0x74(%esp)
js     4636 <main+0x32a6>
cmpl   $0x0,0x34(%esi)
mov    0x18(%edi),%ecx
ja     4636 <main+0x32a6>
cmp    %ecx,0x30(%esi)
jae    4636 <main+0x32a6>
mov    (%edi),%eax
mov    0x6c(%esp),%edx
mov    %ecx,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x60(%esp)
mov    0x70(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x74(%esp),%edx
movzbl 0x24(%edi),%ecx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     4c0c <main+0x387c>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_pread@plt>
test   %edx,%edx
mov    %eax,0x70(%esp)
mov    0x18(%edi),%eax
jne    4636 <main+0x32a6>
cmp    %eax,0x70(%esp)
jne    4636 <main+0x32a6>
mov    0x80(%esp),%eax
mov    0x6c(%esp),%ecx
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ecx,0x70(%esp)
mov    %edx,0x4c(%esp)
mov    %eax,0x48(%esp)
mov    0x30(%esi),%eax
jmp    4b2f <main+0x379f>
or     $0xffffffff,%eax
jmp    4203 <main+0x2e73>
mov    0x98(%esp),%ecx
mov    (%edi),%eax
mov    0x80(%esp),%edx
mov    %ecx,0x14(%esp)
mov    0x1c(%edi),%ecx
movl   $0x0,0x10(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
mov    0x84(%esp),%ecx
mov    %ecx,0x8(%esp)
call   1050 <ntfs_pwrite@plt>
mov    %edx,%esi
mov    0x1c(%edi),%edx
test   %esi,%esi
jne    4321 <main+0x2f91>
cmp    %edx,%eax
jne    4321 <main+0x2f91>
mov    (%edi),%esi
mov    0x98(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x54(%esp),%edx
mov    0x50(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   1050 <ntfs_pwrite@plt>
test   %edx,%edx
mov    %eax,%esi
mov    0x1c(%edi),%eax
jne    4321 <main+0x2f91>
cmp    %eax,%esi
jne    4321 <main+0x2f91>
mov    0x1c(%edi),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   1370 <ntfs_mst_pre_write_fixup@plt>
test   %eax,%eax
jne    4321 <main+0x2f91>
mov    0x1c(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   1370 <ntfs_mst_pre_write_fixup@plt>
test   %eax,%eax
jne    4321 <main+0x2f91>
mov    0xb0(%esp),%ecx
mov    (%edi),%eax
mov    0x70(%esp),%edx
mov    %ecx,0x14(%esp)
mov    0x1c(%edi),%ecx
movl   $0x0,0x10(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
mov    0x74(%esp),%ecx
mov    %ecx,0x8(%esp)
call   1050 <ntfs_pwrite@plt>
mov    %edx,%esi
mov    0x1c(%edi),%edx
test   %esi,%esi
jne    4321 <main+0x2f91>
cmp    %edx,%eax
jne    4321 <main+0x2f91>
mov    (%edi),%esi
mov    0x90(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x64(%esp),%edx
mov    0x60(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   1050 <ntfs_pwrite@plt>
test   %edx,%edx
mov    %eax,%esi
mov    0x1c(%edi),%eax
jne    4321 <main+0x2f91>
cmp    %eax,%esi
jne    4321 <main+0x2f91>
xor    %esi,%esi
lea    -0x2bed(%ebx),%eax
jmp    432b <main+0x2f9b>
mov    0x6c(%esp),%ecx
mov    (%edi),%eax
mov    0x4c(%esp),%edx
mov    %ecx,0x14(%esp)
mov    0x18(%edi),%ecx
mov    %eax,0x80(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %esi,%ecx
xor    %esi,%esi
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1050 <ntfs_pwrite@plt>
test   %edx,%edx
mov    %eax,%esi
mov    0x18(%edi),%eax
jne    4321 <main+0x2f91>
jmp    4cf3 <main+0x3963>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   4e68 <main+0x3ad8>
add    $0x607a,%ebx
lea    -0x3c10(%ebx),%eax
push   %eax
lea    -0x3c80(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x120(%ebx)
call   11e0 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x6037,%ebx
sub    $0x14,%esp
lea    0x16b(%ebx),%eax
lea    0x168(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     4eab <main+0x3b1b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x104(%ebx),%eax
test   %eax,%eax
je     4ea5 <main+0x3b15>
mov    %edx,(%esp)
call   *%eax
jmp    4ea5 <main+0x3b15>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x5ff7,%ebx
sub    $0x14,%esp
lea    0x168(%ebx),%eax
lea    0x168(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    4ef4 <main+0x3b64>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x128(%ebx),%ecx
test   %ecx,%ecx
je     4eee <main+0x3b5e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    4eee <main+0x3b5e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x5fa7,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x180(%ebx)
jne    4f4f <main+0x3bbf>
mov    0x118(%ebx),%eax
test   %eax,%eax
je     4f43 <main+0x3bb3>
mov    0x144(%ebx),%eax
mov    %eax,(%esp)
call   10e0 <__cxa_finalize@plt>
call   4e80 <main+0x3af0>
movb   $0x1,0x180(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x5f57,%ebx
sub    $0x14,%esp
mov    -0x178(%ebx),%eax
test   %eax,%eax
je     4f91 <main+0x3c01>
mov    0x124(%ebx),%eax
test   %eax,%eax
je     4f91 <main+0x3c01>
lea    -0x178(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    4ec0 <main+0x3b30>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
movzwl 0x14(%eax),%ecx
lea    (%eax,%ecx,1),%esi
mov    (%esi),%edi
cmp    $0xffffffff,%edi
jne    4fca <main+0x3c3a>
jmp    4fe0 <main+0x3c50>
lea    0x0(%esi),%esi
cmp    %ecx,0x18(%eax)
jbe    4fe0 <main+0x3c50>
add    0x4(%esi),%ecx
lea    (%eax,%ecx,1),%esi
mov    (%esi),%edi
cmp    $0xffffffff,%edi
je     4fe0 <main+0x3c50>
cmp    %edx,%edi
jne    4fb8 <main+0x3c28>
cmpb   $0x0,0x9(%esi)
jne    4fb8 <main+0x3c28>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    %edx,%edi
jne    4ff2 <main+0x3c62>
cmpb   $0x0,0x9(%esi)
mov    $0x0,%eax
cmovne %eax,%esi
jmp    4fd8 <main+0x3c48>
xor    %esi,%esi
jmp    4fd8 <main+0x3c48>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x5eb8,%ebx
sub    $0x30,%esp
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x8d,0x8(%esp)
lea    -0x3bf0(%ebx),%eax
lea    -0x3be8(%ebx),%edx
mov    %eax,0x24(%esp)
lea    -0x3bda(%ebx),%edi
mov    %eax,0x20(%esp)
lea    -0x2c1d(%ebx),%esi
mov    %eax,0x18(%esp)
lea    -0x383c(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xfc(%ebx),%eax
mov    (%eax),%edx
lea    0x164(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3b80(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x8e,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x1,(%esp)
call   11a0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ecx
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x6c,%esp
mov    (%eax),%eax
mov    0x88(%esp),%edi
mov    %ecx,0x40(%esp)
mov    0x80(%esp),%ecx
mov    0x84(%esp),%edx
imul   0x90(%esp),%edx
mov    %edi,0x48(%esp)
mov    0x8c(%esp),%edi
mov    %eax,0x3c(%esp)
mov    0x80(%esp),%eax
call   4e70 <main+0x3ae0>
add    $0x5db7,%ebx
mov    %esi,0x14(%esp)
mov    %edi,0x44(%esp)
mov    0x90(%esp),%edi
mov    %edi,%ebp
sar    $0x1f,%ebp
imul   %ebp,%ecx
mov    %edi,0xc(%esp)
mov    %edi,0x30(%esp)
mov    %ebp,0x10(%esp)
mov    %ecx,%edi
add    %edx,%edi
mull   0x90(%esp)
mov    %ebp,0x34(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
add    %edi,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_pread@plt>
mov    0x40(%esp),%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    0x90(%esp),%eax
mov    0x34(%esp),%edx
xor    %edi,%eax
xor    %ebp,%edx
or     %eax,%edx
je     51f9 <main+0x3e69>
mov    %edi,%eax
and    %ebp,%eax
cmp    $0xffffffff,%eax
je     51d5 <main+0x3e45>
call   1250 <__errno_location@plt>
or     %edi,%ebp
movl   $0x16,(%eax)
jne    51d5 <main+0x3e45>
lea    -0x36c0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x4a2,0x8(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2c53(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3690(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x4a4,0x8(%esp)
jmp    51b0 <main+0x3e20>
mov    0x48(%esp),%eax
mov    0x28(%esi),%ebp
mov    0x2c(%esi),%edi
mov    %ecx,0x3c(%esp)
mov    %eax,0x28(%esi)
mov    0x44(%esp),%eax
mov    %eax,0x2c(%esi)
movzwl 0x90(%esp),%eax
movl   $0x2,0x8(%esp)
mov    %ax,0x5e(%esp)
lea    0xb(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x5e(%esp),%eax
mov    %eax,(%esp)
call   1090 <memcmp@plt>
test   %eax,%eax
je     5242 <main+0x3eb2>
or     $0xffffffff,%eax
jmp    51cd <main+0x3e3d>
mov    %esi,(%esp)
call   12e0 <ntfs_boot_sector_is_ntfs@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
je     523d <main+0x3ead>
mov    %ecx,(%esp)
mov    %esi,0x4(%esp)
call   1360 <ntfs_boot_sector_parse@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
jne    523d <main+0x3ead>
lea    -0x366c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3bda(%ebx),%eax
mov    %eax,0x3c(%esp)
mov    %eax,0x4(%esp)
lea    -0x2c53(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x4ae,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x40(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
cmp    %edi,0x44(%esp)
je     53df <main+0x404f>
mov    0x48(%esp),%eax
mov    %ebp,0x20(%esp)
mov    %edi,0x24(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
movl   $0x8,0xc(%esp)
movl   $0x4b2,0x8(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x1c(%esp)
lea    -0x3648(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
cmpl   $0x0,0x188(%ebx)
je     5320 <main+0x3f90>
xor    %eax,%eax
jmp    51cd <main+0x3e3d>
lea    -0x3bd0(%ebx),%eax
mov    (%ecx),%ebp
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
lea    -0x2c60(%ebx),%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2c8,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %esi,0x14(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   1050 <ntfs_pwrite@plt>
cmp    %edx,0x34(%esp)
mov    %eax,%esi
mov    %edx,%ebp
je     5431 <main+0x40a1>
cmp    $0xffffffff,%ebp
je     53f5 <main+0x4065>
call   1250 <__errno_location@plt>
or     %esi,%ebp
movl   $0x16,(%eax)
jne    53fa <main+0x406a>
lea    -0x361c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2d0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    523d <main+0x3ead>
cmp    %ebp,0x48(%esp)
jne    52ba <main+0x3f2a>
lea    0x0(%esi,%eiz,1),%esi
jmp    5310 <main+0x3f80>
cmp    $0xffffffff,%esi
jne    5399 <main+0x4009>
lea    -0x35f0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2d2,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    523d <main+0x3ead>
cmp    %eax,0x90(%esp)
jne    5394 <main+0x4004>
cmpl   $0x0,0x188(%ebx)
jne    5319 <main+0x3f89>
lea    -0x35d0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x4bb,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    51cd <main+0x3e3d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x5a2a,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x2b87(%ebx),%eax
mov    %eax,0x4(%esp)
call   12f0 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     54c8 <main+0x4138>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   12f0 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2a4c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1d9e(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x5980,%ebx
test   %esi,%esi
je     55e7 <main+0x4257>
mov    (%esi),%eax
test   %eax,%eax
je     55c8 <main+0x4238>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   1300 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     55a2 <main+0x4212>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    55b0 <main+0x4220>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1060 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1120 <realloc@plt>
test   %eax,%eax
je     55e0 <main+0x4250>
mov    %eax,(%esi)
jmp    5582 <main+0x41f2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1300 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    5596 <main+0x4206>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    55a4 <main+0x4214>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x58aa,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     5730 <main+0x43a0>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   1350 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     56d0 <main+0x4340>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   10d0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    5768 <main+0x43d8>
testb  $0x1,0x2c(%esp)
je     5750 <main+0x43c0>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     5818 <main+0x4488>
lea    -0x2bc4(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1db1(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1250 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     57f0 <main+0x4460>
lea    -0x2a20(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x2be9(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x1db1(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1250 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x3478(%ebx),%eax
lea    -0x2be9(%ebx),%edi
lea    -0x1db1(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    5890 <main+0x4500>
lea    -0x29fc(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    571e <main+0x438e>
lea    0x0(%esi),%esi
lea    -0x2be1(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    5704 <main+0x4374>
nop
lea    -0x29d0(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x2be9(%ebx),%ebp
lea    -0x39ef(%ebx),%eax
lea    -0x1db1(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x28f8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    571e <main+0x438e>
nop
lea    -0x2bc4(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    571e <main+0x438e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x55e0,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     5a78 <main+0x46e8>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   5600 <main+0x4270>
test   %eax,%eax
je     59f8 <main+0x4668>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   12b0 <ntfs_mount@plt>
test   %eax,%eax
je     5978 <main+0x45e8>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     5968 <main+0x45d8>
test   %edi,%edi
je     5a88 <main+0x46f8>
lea    -0x221c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dc4(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x2baf(%ebx),%eax
lea    -0x2be9(%ebx),%ebp
lea    -0x1dc4(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    5a08 <main+0x4678>
lea    -0x288c(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     5ae3 <main+0x4753>
cmp    $0x1,%eax
je     5b22 <main+0x4792>
cmp    $0x5f,%eax
je     5ba0 <main+0x4810>
cmp    $0x10,%eax
je     5b61 <main+0x47d1>
cmp    $0x6,%eax
nop
jne    59f8 <main+0x4668>
lea    -0x2490(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    5968 <main+0x45d8>
lea    0x0(%esi,%eiz,1),%esi
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    5968 <main+0x45d8>
lea    -0x23bc(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dc4(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   ff0 <ntfs_umount@plt>
jmp    5968 <main+0x45d8>
lea    -0x27d8(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    5968 <main+0x45d8>
lea    -0x272c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    5968 <main+0x45d8>
lea    -0x29d0(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    5968 <main+0x45d8>
lea    -0x26b4(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    5968 <main+0x45d8>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x52d1,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    5c18 <main+0x4888>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     5c01 <main+0x4871>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   10f0 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     5d30 <main+0x49a0>
call   1250 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     5d30 <main+0x49a0>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     5e60 <main+0x4ad0>
mov    0x58(%esp),%edx
test   %edx,%edx
je     5d00 <main+0x4970>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     5cbe <main+0x492e>
jle    5d78 <main+0x49e8>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     5cdd <main+0x494d>
jg     5dc0 <main+0x4a30>
cmp    $0x54,%cl
xchg   %ax,%ax
je     5dd0 <main+0x4a40>
cmp    $0x67,%cl
jne    5d97 <main+0x4a07>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    5d0d <main+0x497d>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    5df8 <main+0x4a68>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x2b9a(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dd5(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     5d0d <main+0x497d>
jle    5e50 <main+0x4ac0>
mov    %esi,%ecx
cmp    $0x47,%cl
je     5c9f <main+0x490f>
cmp    $0x4b,%cl
je     5cdd <main+0x494d>
mov    %eax,0x18(%esp)
lea    -0x21a0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    5d56 <main+0x49c6>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     5cbe <main+0x492e>
cmp    $0x74,%cl
jne    5d97 <main+0x4a07>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    5c9f <main+0x490f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     5d0d <main+0x497d>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x2b86(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dd5(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    5c0e <main+0x487e>
nop
test   %cl,%cl
je     5d0d <main+0x497d>
jmp    5d97 <main+0x4a07>
lea    0x0(%esi),%esi
lea    -0x21d4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dd5(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    5c0e <main+0x487e>
jmp    5eb0 <main+0x4b20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x5001,%ebx
test   %esi,%esi
je     5f48 <main+0x4bb8>
mov    0x34(%esp),%edx
test   %edx,%edx
je     5f48 <main+0x4bb8>
mov    0x38(%esp),%eax
test   %eax,%eax
je     5f48 <main+0x4bb8>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   11c0 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     5f60 <main+0x4bd0>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   5be0 <main+0x4850>
test   %eax,%eax
je     5f88 <main+0x4bf8>
test   %edi,%edi
je     5f78 <main+0x4be8>
cmpb   $0x0,0x1(%edi)
jne    5f98 <main+0x4c08>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    5f0f <main+0x4b7f>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    5f28 <main+0x4b98>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   5be0 <main+0x4850>
test   %eax,%eax
je     5f88 <main+0x4bf8>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    5f28 <main+0x4b98>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x4ee2,%ebx
test   %esi,%esi
je     6048 <main+0x4cb8>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1320 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    6040 <main+0x4cb0>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    6037 <main+0x4ca7>
lea    0x0(%esi,%eiz,1),%esi
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    6037 <main+0x4ca7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   4e70 <main+0x3ae0>
add    $0x4e51,%ebx
test   %eax,%eax
je     60b8 <main+0x4d28>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   1330 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     60c8 <main+0x4d38>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   5fd0 <main+0x4c40>
mov    %esi,(%esp)
mov    %eax,%edi
call   11d0 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    60ab <main+0x4d1b>
nop
lea    -0x2170(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dea(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    60ab <main+0x4d1b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   4e70 <main+0x3ae0>
add    $0x4d9a,%ebx
test   %ecx,%ecx
jne    6148 <main+0x4db8>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     6130 <main+0x4da0>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x214c(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1330 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     64b5 <main+0x5125>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   5fd0 <main+0x4c40>
test   %eax,%eax
je     62d8 <main+0x4f48>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     61c8 <main+0x4e38>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     6215 <main+0x4e85>
mov    %eax,(%esp)
call   1040 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1160 <ntfs_ucstombs@plt>
test   %eax,%eax
js     6240 <main+0x4eb0>
mov    %ebp,0x20(%esp)
jmp    61c8 <main+0x4e38>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dff(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   1030 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     638b <main+0x4ffb>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x2b6e(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    6238 <main+0x4ea8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   11d0 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     6305 <main+0x4f75>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     63da <main+0x504a>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   1340 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     6398 <main+0x5008>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    6198 <main+0x4e08>
lea    -0x211c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dff(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x2b64(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dff(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x2b49(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     6446 <main+0x50b6>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   fd0 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    6479 <main+0x50e9>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    63f8 <main+0x5068>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   1040 <free@plt>
cmp    %edi,%esi
jne    6458 <main+0x50c8>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x2b44(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dff(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    644f <main+0x50bf>
lea    -0x2170(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1dff(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    613d <main+0x4dad>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x49b0,%ebx
test   %esi,%esi
jne    6530 <main+0x51a0>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     651a <main+0x518a>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   1020 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     66e8 <main+0x5358>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   10a0 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1160 <ntfs_ucstombs@plt>
test   %eax,%eax
js     66c0 <main+0x5330>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x39ef(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1240 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    6678 <main+0x52e8>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     6525 <main+0x5195>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   1160 <ntfs_ucstombs@plt>
test   %eax,%eax
js     6750 <main+0x53c0>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x2b21(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   fd0 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1040 <free@plt>
cmp    %esi,%ebp
jg     6525 <main+0x5195>
lea    -0x2028(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    669a <main+0x530a>
lea    0x0(%esi),%esi
lea    -0x2080(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e13(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x20d8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    669a <main+0x530a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x20a0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e13(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x2b2b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1240 <snprintf@plt>
jmp    65b6 <main+0x5226>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2060(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e13(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
lea    -0x2b2b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   1240 <snprintf@plt>
jmp    6525 <main+0x5195>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   4e70 <main+0x3ae0>
add    $0x46f8,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     692e <main+0x559e>
mov    0x15c(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x158(%ebx),%eax
jle    68b8 <main+0x5528>
mov    0x64(%ecx),%eax
mov    0x108(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1230 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     6943 <main+0x55b3>
lea    0x3a0(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x158(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x15c(%ebx)
call   1210 <ntfs_attr_pread@plt>
test   %edx,%edx
js     68e5 <main+0x5555>
mov    %esi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x3a0(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     68c4 <main+0x5534>
cmp    0x18(%esp),%eax
ja     67f4 <main+0x5464>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     6887 <main+0x54f7>
jg     67f4 <main+0x5464>
cmp    %eax,0x18(%esp)
jbe    6887 <main+0x54f7>
xchg   %ax,%ax
jmp    67f4 <main+0x5464>
lea    -0x2b06(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e28(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    68b0 <main+0x5520>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    68b0 <main+0x5520>
lea    -0x2b1c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e28(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    68b0 <main+0x5520>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   4e70 <main+0x3ae0>
add    $0x4518,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     6aa5 <main+0x5715>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x154(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x150(%ebx),%eax
cmp    %edx,%ecx
jge    6a78 <main+0x56e8>
lea    0x1a0(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x154(%ebx)
sar    $0x3,%edx
mov    %esi,0x150(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   1210 <ntfs_attr_pread@plt>
test   %edx,%edx
js     6ab7 <main+0x5727>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x1a0(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     6a82 <main+0x56f2>
cmp    %eax,%esi
jb     69e4 <main+0x5654>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     6a41 <main+0x56b1>
jg     69e4 <main+0x5654>
cmp    %eax,%esi
jbe    6a41 <main+0x56b1>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    69e4 <main+0x5654>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    6a6a <main+0x56da>
lea    -0x2af0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e3c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    6a6a <main+0x56da>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   4e70 <main+0x3ae0>
add    $0x43b0,%ebx
test   %eax,%eax
je     6bef <main+0x585f>
mov    0xc(%eax),%esi
test   %esi,%esi
je     6be8 <main+0x5858>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     6b38 <main+0x57a8>
cmp    $0xa,%edi
jbe    6ba8 <main+0x5818>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     6bd8 <main+0x5848>
mov    0x8(%eax),%eax
test   %eax,%eax
je     6b70 <main+0x57e0>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     6b70 <main+0x57e0>
and    $0xffff,%edx
je     6bd0 <main+0x5840>
cmp    $0x3,%cl
jne    6b70 <main+0x57e0>
xor    $0xb,%edi
or     %edx,%edi
je     6ba8 <main+0x5818>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   6060 <main+0x4cd0>
test   %eax,%eax
je     6be8 <main+0x5858>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     6bad <main+0x581d>
cmp    $0x0,%edx
ja     6bb8 <main+0x5828>
cmp    $0xa,%ecx
ja     6bb8 <main+0x5828>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    6bad <main+0x581d>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    6bad <main+0x581d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    6ba8 <main+0x5818>
jmp    6b60 <main+0x57d0>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    6b45 <main+0x57b5>
jmp    6ba8 <main+0x5818>
mov    $0xffffffff,%eax
jmp    6bad <main+0x581d>
nop
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    6bad <main+0x581d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x4292,%ebx
test   %esi,%esi
je     6c68 <main+0x58d8>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   1380 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    6c5d <main+0x58cd>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x4232,%ebx
test   %esi,%esi
je     6caf <main+0x591f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     6ca7 <main+0x5917>
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   1040 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   4e70 <main+0x3ae0>
add    $0x41f0,%ebx
test   %esi,%esi
je     722a <main+0x5e9a>
mov    0x8(%esi),%eax
test   %eax,%eax
je     6cf4 <main+0x5964>
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    70c0 <main+0x5d30>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   6990 <main+0x5600>
cmp    $0xffffffff,%eax
je     70d8 <main+0x5d48>
test   %eax,%eax
je     6ee0 <main+0x5b50>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   1340 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     7060 <main+0x5cd0>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   6060 <main+0x4cd0>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   6060 <main+0x4cd0>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   6060 <main+0x4cd0>
test   %ebp,%ebp
je     70b0 <main+0x5d20>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     6de7 <main+0x5a57>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     6def <main+0x5a5f>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     6e6b <main+0x5adb>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1330 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     7206 <main+0x5e76>
mov    %eax,0x20(%esp)
mov    0x114(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   1320 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    6e63 <main+0x5ad3>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   11d0 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   6b00 <main+0x5770>
test   %eax,%eax
je     7050 <main+0x5cc0>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    7040 <main+0x5cb0>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    6eca <main+0x5b3a>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1280 <ntfs_inode_close@plt>
test   %eax,%eax
jne    7130 <main+0x5da0>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    7028 <main+0x5c98>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   1380 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     7189 <main+0x5df9>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   1030 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     71d0 <main+0x5e40>
mov    0xc(%esi),%eax
mov    0x108(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   1230 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     71e2 <main+0x5e52>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   1210 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     7014 <main+0x5c84>
jge    7010 <main+0x5c80>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2a86(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e4c(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    6ed4 <main+0x5b44>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     6fb0 <main+0x5c20>
mov    %edi,(%esp)
call   1170 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    6e90 <main+0x5b00>
lea    0x0(%esi,%eiz,1),%esi
jg     7036 <main+0x5ca6>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    6eca <main+0x5b3a>
mov    0xc(%esi),%edi
jmp    6d40 <main+0x59b0>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    6e90 <main+0x5b00>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    6e90 <main+0x5b00>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2ad5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e4c(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
jmp    6eae <main+0x5b1e>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    6ddf <main+0x5a4f>
lea    0x0(%esi,%eiz,1),%esi
jl     6eca <main+0x5b3a>
cmp    %eax,0x28(%esp)
ja     6d40 <main+0x59b0>
jmp    6eca <main+0x5b3a>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2008(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e4c(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2a68(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e4c(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
call   1250 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x2aba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x2be9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1e4c(%ebx),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   1040 <free@plt>
mov    $0xffffffff,%eax
jmp    6ed4 <main+0x5b44>
lea    -0x2a9f(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    71ab <main+0x5e1b>
lea    -0x2170(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    71ab <main+0x5e1b>
call   1250 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    6ed4 <main+0x5b44>
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   4e70 <main+0x3ae0>
add    $0x3c75,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x17c(%ebx),%esi
call   f90 <_init>
lea    -0x180(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     729b <main+0x5f0b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x180(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    7278 <main+0x5ee8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
push   %ebx
sub    $0x8,%esp
call   4e70 <main+0x3ae0>
add    $0x3c03,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
outsb  %ds:(%esi),(%dx)
je     7339 <_IO_stdin_used+0x6d>
jae    733b <_IO_stdin_used+0x6f>
imul   $0x33313032,0x0(%eax),%edi
xor    %ebp,%cs:(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     734f <_IO_stdin_used+0x83>
jae    7351 <_IO_stdin_used+0x85>
imul   $0x65520063,0x2e(%eax),%edi
ja     7366 <_IO_stdin_used+0x9a>
imul   $0x68742067,0x6e(%ecx,%ebp,2),%esi
and    %ah,%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     7376 <_IO_stdin_used+0xaa>
arpl   %si,%gs:0x72(%edi,%ebp,2)
or     (%eax),%al
jae    7385 <_IO_stdin_used+0xb9>
jae    7382 <_IO_stdin_used+0xb6>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x66(%ebp)
je     733a <_IO_stdin_used+0x6e>
jb     7381 <_IO_stdin_used+0xb5>
arpl   %bp,0x72(%edi)
add    %al,%fs:0x52(%ebp)
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    7351 <_IO_stdin_used+0x85>
popa
jb     739b <_IO_stdin_used+0xcf>
jne    73a3 <_IO_stdin_used+0xd7>
outsb  %gs:(%esi),(%dx)
je     73ad <_IO_stdin_used+0xe1>
or     %cs:(%eax),%al
and    $0x73250a73,%eax
and    $0x52450073,%eax
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     73c1 <_IO_stdin_used+0xf5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x6e686462
push   %esi
add    %cl,0x6f(%ebp)
jne    73db <_IO_stdin_used+0x10f>
je     73d8 <_IO_stdin_used+0x10c>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%bp)
insb   (%dx),%es:(%edi)
jne    73e4 <_IO_stdin_used+0x118>
gs cs cs and %al,%cs:%gs:(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x69614600,0x65(%ebx),%esp
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jae    7417 <_IO_stdin_used+0x14b>
popa
jb     741a <_IO_stdin_used+0x14e>
jne    7418 <_IO_stdin_used+0x14c>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    741b <_IO_stdin_used+0x14f>
add    %ah,%gs:0x64203a73
gs
jbe    73d8 <_IO_stdin_used+0x10c>
cmp    $0x702520,%eax
inc    %ebp
jb     7432 <_IO_stdin_used+0x166>
outsl  %ds:(%esi),(%dx)
jb     73e3 <_IO_stdin_used+0x117>
outsl  %ds:(%esi),(%dx)
jo     742b <_IO_stdin_used+0x15f>
outsb  %ds:(%esi),(%dx)
imul   $0x73252720,0x67(%esi),%ebp
daa
add    %al,0x72(%ebp)
jb     7443 <_IO_stdin_used+0x177>
jb     73f6 <_IO_stdin_used+0x12a>
jb     743d <_IO_stdin_used+0x171>
popa
imul   $0x6f6f6220,%fs:0x67(%esi),%ebp
je     7456 <_IO_stdin_used+0x18a>
arpl   %si,%gs:0x72(%edi,%ebp,2)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     747b <_IO_stdin_used+0x1af>
or     (%eax),%al
push   %ebp
outsb  %ds:(%esi),(%dx)
jb     746d <_IO_stdin_used+0x1a1>
arpl   %bp,0x76(%edi)
gs
jb     746f <_IO_stdin_used+0x1a3>
bound  %ebp,0x20(%ebp,%eiz,2)
gs
jb     7487 <_IO_stdin_used+0x1bb>
outsl  %ds:(%esi),(%dx)
jb     7422 <_IO_stdin_used+0x156>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     74ab <_IO_stdin_used+0x1df>
add    %dl,0x65(%edx)
popa
imul   $0x464d2420,%fs:0x67(%esi),%ebp
push   %esp
cs cs and %al,%cs:(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     74b5 <_IO_stdin_used+0x1e9>
popa
and    %ah,%fs:0x52005446(,%ecx,2)
gs
popa
imul   $0x464d2420,%fs:0x67(%esi),%ebp
push   %esp
dec    %ebp
imul   $0x202e2e2e,0x72(%edx),%esi
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     74de <_IO_stdin_used+0x212>
popa
and    %ah,%fs:0x694d5446(,%ecx,2)
jb     74f6 <_IO_stdin_used+0x22a>
add    %ah,(%ecx,%eax,2)
je     74fd <_IO_stdin_used+0x231>
jb     74cf <_IO_stdin_used+0x203>
gs
data16
add    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     74b3 <_IO_stdin_used+0x1e7>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    749d <_IO_stdin_used+0x1d1>
and    $0x42,%al
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     74a3 <_IO_stdin_used+0x1d7>
and    $0x42,%al
popa
fs
inc    %ebx
insb   (%dx),%es:(%edi)
jne    751e <_IO_stdin_used+0x252>
add    %ah,(%ebx,%edx,2)
arpl   %si,%gs:0x72(%ebp)
add    %ah,%gs:0x6e657478(,%eax,2)
add    %al,%fs:0x72(%ebp)
jb     752f <_IO_stdin_used+0x263>
jb     74e2 <_IO_stdin_used+0x216>
arpl   %bp,0x72(%edi)
jb     752c <_IO_stdin_used+0x260>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ah,(%si)
dec    %ebp
inc    %esi
push   %esp
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     7546 <_IO_stdin_used+0x27a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%esi)
data16
jae    7508 <_IO_stdin_used+0x23c>
popa
je     755f <_IO_stdin_used+0x293>
jb     7556 <_IO_stdin_used+0x28a>
bound  %esi,0x74(%ebp)
add    %al,%gs:0x6f(%ebx)
jb     7568 <_IO_stdin_used+0x29c>
jne    7568 <_IO_stdin_used+0x29c>
je     755f <_IO_stdin_used+0x293>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73614370(,%edx,2)
or     %gs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     757c <_IO_stdin_used+0x2b0>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%edx)
je     758a <_IO_stdin_used+0x2be>
popa
jo     7540 <_IO_stdin_used+0x274>
imul   $0x52006564,0x6f(%esi),%ebp
gs
ja     759c <_IO_stdin_used+0x2d0>
imul   $0x55242067,0x6e(%ecx,%ebp,2),%esi
jo     7577 <_IO_stdin_used+0x2ab>
popa
jae    759c <_IO_stdin_used+0x2d0>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     75af <_IO_stdin_used+0x2e3>
ja     75be <_IO_stdin_used+0x2f2>
imul   $0x43705524,0x20(%ebp,%eiz,2),%esi
popa
jae    75bc <_IO_stdin_used+0x2f0>
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x73614370(,%edx,2)
add    %al,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     75e2 <_IO_stdin_used+0x316>
popa
and    %ah,%fs:(%esi,%edx,2)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    75f3 <_IO_stdin_used+0x327>
add    %al,%gs:0x72(%ebp)
jb     75fb <_IO_stdin_used+0x32f>
jb     75ae <_IO_stdin_used+0x2e2>
ja     7602 <_IO_stdin_used+0x336>
imul   $0x56242067,0x6e(%ecx,%ebp,2),%esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    7609 <_IO_stdin_used+0x33d>
add    %al,%gs:0x72(%ebp)
jb     7611 <_IO_stdin_used+0x345>
jb     75c4 <_IO_stdin_used+0x2f8>
jae    760b <_IO_stdin_used+0x33f>
je     761c <_IO_stdin_used+0x350>
imul   $0x6c6f7620,0x67(%esi),%ebp
jne    761e <_IO_stdin_used+0x352>
and    %ah,%gs:0x6c(%esi)
popa
addr16 jae 75e7 <_IO_stdin_used+0x31b>
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     762c <_IO_stdin_used+0x360>
jae    762e <_IO_stdin_used+0x362>
je     75eb <_IO_stdin_used+0x31f>
and    $0x4c,%al
outsl  %ds:(%esi),(%dx)
addr16 inc %esi
imul   $0x63206f4e,0x0(%ebp,%eiz,2),%ebp
push   $0x65676e61
and    %ch,0x61(%ebp)
fs or  %fs:%gs:(%eax),%al
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    7658 <_IO_stdin_used+0x38c>
je     760c <_IO_stdin_used+0x340>
popaw
imul   $0x44414200,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
inc    %esi
dec    %ecx
pop    %eax
inc    %ebp
inc    %esp
or     (%eax),%al
inc    %ebp
jb     7674 <_IO_stdin_used+0x3a8>
outsl  %ds:(%esi),(%dx)
jb     763f <_IO_stdin_used+0x373>
and    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x65(%esi)
jb     768a <_IO_stdin_used+0x3be>
imul   $0x4e000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%edx)
and    %ah,%fs:0x6c(%ebx)
jne    769b <_IO_stdin_used+0x3cf>
je     768f <_IO_stdin_used+0x3c3>
jb     769f <_IO_stdin_used+0x3d3>
cs cs add %al,%cs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     76a2 <_IO_stdin_used+0x3d6>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
popa
fs
inc    %ebx
insb   (%dx),%es:(%edi)
jne    76ba <_IO_stdin_used+0x3ee>
cmp    (%edx),%bh
and    $0x42,%al
popa
add    %ch,%fs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     7653 <_IO_stdin_used+0x387>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x69746361,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%ebx)
gs
popa
jb     7690 <_IO_stdin_used+0x3c4>
bound  %esp,0x64(%ecx)
sub    $0x74636573,%eax
outsl  %ds:(%esi),(%dx)
jb     76e1 <_IO_stdin_used+0x415>
add    %ah,0x6c(%ebx)
gs
popa
jb     76a2 <_IO_stdin_used+0x3d6>
imul   $0x65760079,%fs:0x74(%edx),%esi
jb     76f2 <_IO_stdin_used+0x426>
imul   $0x73250000,0x6e(%edi),%ebp
and    %dh,0x25(%esi)
jae    76ab <_IO_stdin_used+0x3df>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     76f8 <_IO_stdin_used+0x42c>
jae    76c1 <_IO_stdin_used+0x3f5>
xor    0x29(%edi),%esp
or     (%edx),%cl
push   %ebp
jae    76fd <_IO_stdin_used+0x431>
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     771b <_IO_stdin_used+0x44f>
imul   $0x64205d73,0x6e(%edi),%ebp
gs
jbe    771a <_IO_stdin_used+0x44e>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
je     772f <_IO_stdin_used+0x463>
gs
insl   (%dx),%es:(%edi)
jo     7733 <_IO_stdin_used+0x467>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6e61,0x20(%eax),%di
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     7747 <_IO_stdin_used+0x47b>
imul   $0xa0a2e6e,0x6f(%ecx,%ebp,2),%esi
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c62,%eax
sub    $0x61656c63,%eax
jb     7718 <_IO_stdin_used+0x44c>
bound  %esp,0x64(%ecx)
sub    $0x74636573,%eax
outsl  %ds:(%esi),(%dx)
jb     7769 <_IO_stdin_used+0x49d>
and    %al,0x6c(%ebx)
gs
popa
jb     771d <_IO_stdin_used+0x451>
je     7767 <_IO_stdin_used+0x49b>
and    %ah,%gs:0x61(%edx)
and    %dh,%fs:0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
and    %ch,0x73(%ecx,%ebp,2)
je     771b <_IO_stdin_used+0x44f>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c64,%eax
sub    $0x61656c63,%eax
jb     774e <_IO_stdin_used+0x482>
imul   $0x20202079,%fs:0x74(%edx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
gs
popa
jb     7753 <_IO_stdin_used+0x487>
je     779d <_IO_stdin_used+0x4d1>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    77a9 <_IO_stdin_used+0x4dd>
and    %ah,%gs:0x72(%ecx,%ebp,2)
je     77bc <_IO_stdin_used+0x4f0>
and    %ah,0x6c(%esi)
popa
or     (%bx,%si),%ah
and    %ah,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
je     77d7 <_IO_stdin_used+0x50b>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c6e
sub    $0x612d6f6e,%eax
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     77ba <_IO_stdin_used+0x4ee>
ja     780e <_IO_stdin_used+0x542>
imul   $0x74796e61,0x20(%ebp,%eiz,2),%esi
push   $0xa676e69
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     7836 <_IO_stdin_used+0x56a>
popa
jns    77ed <_IO_stdin_used+0x521>
jbe    7834 <_IO_stdin_used+0x568>
jb     7844 <_IO_stdin_used+0x578>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     7848 <_IO_stdin_used+0x57c>
popa
je     7847 <_IO_stdin_used+0x57b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%edx),%cl
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     7806 <_IO_stdin_used+0x53a>
gs
js     784a <_IO_stdin_used+0x57e>
insl   (%dx),%es:(%edi)
jo     7858 <_IO_stdin_used+0x58c>
cmp    %gs:(%eax),%ah
and    $0x642f2073,%eax
gs
jbe    7826 <_IO_stdin_used+0x55a>
push   $0xa366164
or     (%eax),%al
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     7871 <_IO_stdin_used+0x5a5>
popa
and    %ah,%fs:0x6c(%ecx)
je     7878 <_IO_stdin_used+0x5ac>
jb     7883 <_IO_stdin_used+0x5b7>
popa
je     787d <_IO_stdin_used+0x5b1>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     7891 <_IO_stdin_used+0x5c5>
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %ch,(%eax)
jae    7890 <_IO_stdin_used+0x5c4>
jp     788e <_IO_stdin_used+0x5c2>
cmp    $0xa2930,%eax
add    %al,(%eax)
inc    %ebp
jb     78a5 <_IO_stdin_used+0x5d9>
outsl  %ds:(%esi),(%dx)
jb     7856 <_IO_stdin_used+0x58a>
jb     789d <_IO_stdin_used+0x5d1>
popa
imul   $0x746c6120,%fs:0x67(%esi),%ebp
gs
jb     78b2 <_IO_stdin_used+0x5e6>
popa
je     78ac <_IO_stdin_used+0x5e0>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     78c0 <_IO_stdin_used+0x5f4>
arpl   %si,%gs:0x72(%edi,%ebp,2)
add    %al,(%eax)
push   %esp
push   $0x6c612065
je     78c1 <_IO_stdin_used+0x5f5>
jb     78cc <_IO_stdin_used+0x600>
popa
je     78c6 <_IO_stdin_used+0x5fa>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     78da <_IO_stdin_used+0x60e>
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %ch,0x73(%ecx)
and    %dh,0x73(%ebp)
popa
bound  %ebp,0xa(%ebp,%eiz,2)
add    %dl,0x65(%ebx)
je     789c <_IO_stdin_used+0x5d0>
jae    78e3 <_IO_stdin_used+0x617>
arpl   %si,0x72(%edi,%ebp,2)
and    %ah,0x6f(%ebx)
jne    78f5 <_IO_stdin_used+0x629>
je     78a9 <_IO_stdin_used+0x5dd>
je     78fa <_IO_stdin_used+0x62e>
and    %ah,0x20646c6c
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0xa646c6c
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     7915 <_IO_stdin_used+0x649>
ja     7924 <_IO_stdin_used+0x658>
imul   $0x20656874,0x20(%ebp,%eiz,2),%esi
bound  %ebp,0x6f(%edi)
je     7932 <_IO_stdin_used+0x666>
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %ch,(%eax)
jae    7931 <_IO_stdin_used+0x665>
jp     792f <_IO_stdin_used+0x663>
cmp    $0xa2930,%eax
add    %al,0x72(%ebp)
jb     7943 <_IO_stdin_used+0x677>
jb     78f6 <_IO_stdin_used+0x62a>
jb     793d <_IO_stdin_used+0x671>
ja     794c <_IO_stdin_used+0x680>
imul   $0x68742067,0x6e(%ecx,%ebp,2),%esi
and    %ah,%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     795c <_IO_stdin_used+0x690>
arpl   %si,%gs:0x72(%edi,%ebp,2)
add    %al,(%eax)
push   %esp
push   $0x6f622065
outsl  %ds:(%esi),(%dx)
je     7919 <_IO_stdin_used+0x64d>
jae    7960 <_IO_stdin_used+0x694>
arpl   %si,0x72(%edi,%ebp,2)
and    %ch,0x61(%eax)
jae    7924 <_IO_stdin_used+0x658>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
ja     797f <_IO_stdin_used+0x6b3>
imul   $0x25000a6e,0x65(%esp,%esi,2),%esi
jae    7937 <_IO_stdin_used+0x66b>
jbe    793e <_IO_stdin_used+0x672>
jae    7925 <_IO_stdin_used+0x659>
or     0x74(%ecx),%al
je     7985 <_IO_stdin_used+0x6b9>
insl   (%dx),%es:(%edi)
jo     7997 <_IO_stdin_used+0x6cb>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6e61,0x20(%eax),%di
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     79ab <_IO_stdin_used+0x6df>
imul   $0xa0a2e6e,0x6f(%ecx,%ebp,2),%esi
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     79bc <_IO_stdin_used+0x6f0>
jb     79ae <_IO_stdin_used+0x6e2>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%eax)
sub    $0x36303032,%eax
and    %al,0x6e(%ecx)
je     79ca <_IO_stdin_used+0x6fe>
outsb  %ds:(%esi),(%dx)
and    %al,0x6c(%ecx)
je     79c2 <_IO_stdin_used+0x6f6>
jo     79c4 <_IO_stdin_used+0x6f8>
jb     79d2 <_IO_stdin_used+0x706>
popa
imul   $0xa,0x76(%edi),%ebp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     79e7 <_IO_stdin_used+0x71b>
jb     79d9 <_IO_stdin_used+0x70d>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x36303032,%eax
and    %dl,0x7a(%ebx)
popa
bound  %ebp,0x6c(%edi)
arpl   %si,0x20(%ebx)
push   %ebx
jp     79ef <_IO_stdin_used+0x723>
imul   $0x73,0x63(%ecx),%esp
imul   $0x79706f43,0xa(%ebx,%esi,2),%esi
jb     7a05 <_IO_stdin_used+0x739>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
pop    %ecx
jne    7a23 <_IO_stdin_used+0x757>
popa
and    %dl,0x61(%eax)
imul   $0x63,0x75(%eax),%ebp
push   $0xa0a7969
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     7a3b <_IO_stdin_used+0x76f>
jb     7a2d <_IO_stdin_used+0x761>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %esi,(%ecx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %edx
gs
popa
outsb  %ds:(%esi),(%dx)
sub    $0x72656950,%eax
jb     7a46 <_IO_stdin_used+0x77a>
and    %al,0x6e(%ecx)
fs
jb     7a4c <_IO_stdin_used+0x780>
or     (%edx),%cl
add    %al,(%eax)
add    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    7a17 <_IO_stdin_used+0x74b>
insl   (%dx),%es:(%edi)
jne    7a6d <_IO_stdin_used+0x7a1>
je     7a1c <_IO_stdin_used+0x750>
jae    7a6e <_IO_stdin_used+0x7a2>
arpl   %bp,%gs:0x66(%ecx)
jns    7a24 <_IO_stdin_used+0x758>
popa
and    %ah,0x76(%ebp,%eiz,2)
imul   $0xa2e,0x65(%ebx),%esp
push   %edx
gs
data16
jne    7a88 <_IO_stdin_used+0x7bc>
imul   $0x206f7420,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jo     7a84 <_IO_stdin_used+0x7b8>
jb     7a82 <_IO_stdin_used+0x7b6>
je     7a88 <_IO_stdin_used+0x7bc>
and    %ch,0x6e(%edi)
and    %dh,0x65(%edx)
popa
fs
sub    $0x74697277,%eax
and    %ch,%gs:0x6f(%ebp)
jne    7aa4 <_IO_stdin_used+0x7d8>
je     7a9d <_IO_stdin_used+0x7d1>
and    %ah,%fs:0x76(%ebp,%eiz,2)
imul   $0x2e732520,0x65(%ebx),%esp
or     (%eax),%al
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     7abb <_IO_stdin_used+0x7ef>
jb     7ac5 <_IO_stdin_used+0x7f9>
imul   $0x65687720,0x65(%esi),%ebp
je     7ac9 <_IO_stdin_used+0x7fd>
gs
jb     7a84 <_IO_stdin_used+0x7b8>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    7adc <_IO_stdin_used+0x810>
je     7ad5 <_IO_stdin_used+0x809>
add    %al,%fs:(%eax)
add    %dl,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    7ae5 <_IO_stdin_used+0x819>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%bx)
and    %ah,0x61205446(,%ecx,2)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x694d5446(,%ecx,2)
jb     7b05 <_IO_stdin_used+0x839>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     7b05 <_IO_stdin_used+0x839>
gs
je     7b01 <_IO_stdin_used+0x835>
and    %dh,%fs:0x75(%ebx)
arpl   %sp,0x65(%ebx)
jae    7b18 <_IO_stdin_used+0x84c>
data16
jne    7b14 <_IO_stdin_used+0x848>
insb   (%dx),%es:(%edi)
jns    7ad9 <_IO_stdin_used+0x80d>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x74(%ecx)
je     7b19 <_IO_stdin_used+0x84d>
insl   (%dx),%es:(%edi)
jo     7b2b <_IO_stdin_used+0x85f>
imul   $0x206f7420,0x67(%esi),%ebp
arpl   %bp,0x72(%edi)
jb     7b28 <_IO_stdin_used+0x85c>
arpl   %si,0x65(%eax,%eiz,1)
jb     7b3b <_IO_stdin_used+0x86f>
outsl  %ds:(%esi),(%dx)
jb     7b3f <_IO_stdin_used+0x873>
cs cs and %al,%cs:(%eax)
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     7b45 <_IO_stdin_used+0x879>
popa
and    %ah,%fs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     7b5b <_IO_stdin_used+0x88f>
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %ch,(%eax)
jae    7b5a <_IO_stdin_used+0x88e>
jp     7b58 <_IO_stdin_used+0x88c>
cmp    $0xa2930,%eax
push   %esp
jb     7b74 <_IO_stdin_used+0x8a8>
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x6c(%ecx)
je     7b6c <_IO_stdin_used+0x8a0>
jb     7b77 <_IO_stdin_used+0x8ab>
popa
je     7b71 <_IO_stdin_used+0x8a5>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     7b32 <_IO_stdin_used+0x866>
jae    7b79 <_IO_stdin_used+0x8ad>
arpl   %si,0x72(%edi,%ebp,2)
or     (%eax),%al
add    %al,(%eax)
inc    %ebx
push   $0x696b6365
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp)
jb     7b49 <_IO_stdin_used+0x87d>
jae    7b90 <_IO_stdin_used+0x8c4>
insb   (%dx),%es:(%edi)
sub    $0x6f6c,%ax
arpl   %sp,0x74(%ecx)
gs and %cl,%fs:%gs:0x46(%ebp)
push   %esp
and    %dh,0x65(%ebx)
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     7b70 <_IO_stdin_used+0x8a4>
cs and %al,%cs:(%eax)
add    %al,(%eax)
push   %esp
push   $0x74732065
popa
jb     7bc5 <_IO_stdin_used+0x8f9>
jne    7bc3 <_IO_stdin_used+0x8f7>
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %ah,0x69(%esi)
js     7bc9 <_IO_stdin_used+0x8fd>
fs
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ch,0x6f(%esi)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x61(%bx)
jae    7b99 <_IO_stdin_used+0x8cd>
jb     7be0 <_IO_stdin_used+0x914>
jno    7bf2 <_IO_stdin_used+0x926>
gs
jae    7bf4 <_IO_stdin_used+0x928>
gs or  %fs:%gs:(%eax),%al
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    7bf6 <_IO_stdin_used+0x92a>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6f(%ebx)
jb     7c04 <_IO_stdin_used+0x938>
jne    7c04 <_IO_stdin_used+0x938>
je     7bc4 <_IO_stdin_used+0x8f8>
and    %bl,0x6f(%ecx)
jne    7bbb <_IO_stdin_used+0x8ef>
jae    7c05 <_IO_stdin_used+0x939>
outsl  %ds:(%esi),(%dx)
jne    7c0c <_IO_stdin_used+0x940>
and    %dh,%fs:0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x2e,0x6b(%ebx,%esi,2),%esp
or     (%eax),%al
add    %cl,(%edx)
push   %eax
jb     7c23 <_IO_stdin_used+0x957>
arpl   %sp,0x73(%ebp)
jae    7c22 <_IO_stdin_used+0x956>
outsb  %ds:(%esi),(%dx)
and    %ah,(%si)
dec    %ebp
inc    %esi
push   %esp
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x694d5446(,%ecx,2)
jb     7c3f <_IO_stdin_used+0x973>
cs cs or %cs:(%eax),%al
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     7c3a <_IO_stdin_used+0x96e>
jb     7c44 <_IO_stdin_used+0x978>
outsb  %ds:(%esi),(%dx)
and    %ah,(%si)
dec    %ebp
inc    %esi
push   %esp
dec    %ebp
imul   $0x206f7420,0x72(%edx),%esi
and    $0x4d,%al
inc    %esi
push   %esp
cs cs and %al,%cs:(%eax)
add    %ah,0x65205446(,%ecx,2)
jb     7c6e <_IO_stdin_used+0x9a2>
outsl  %ds:(%esi),(%dx)
jb     7c39 <_IO_stdin_used+0x96d>
and    %cl,0x6e(%ecx)
arpl   %bp,0x6d(%edi)
jo     7c73 <_IO_stdin_used+0x9a7>
gs
je     7c6f <_IO_stdin_used+0x9a3>
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     7c79 <_IO_stdin_used+0x9ad>
and    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    7c84 <_IO_stdin_used+0x9b8>
gs
jb     7c41 <_IO_stdin_used+0x975>
fs
gs
je     7c8a <_IO_stdin_used+0x9be>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x6e(%ecx)
and    %ah,0x430a2e73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     7c58 <_IO_stdin_used+0x98c>
push   $0x6c646e61
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    7c64 <_IO_stdin_used+0x998>
jns    7cab <_IO_stdin_used+0x9df>
je     7c76 <_IO_stdin_used+0x9aa>
and    %ch,(%ecx)
sub    $0xa3a,%eax
add    %ah,0x65205446(,%ecx,2)
jb     7cca <_IO_stdin_used+0x9fe>
outsl  %ds:(%esi),(%dx)
jb     7c95 <_IO_stdin_used+0x9c9>
and    %cl,0x6e(%ecx)
jbe    7cc1 <_IO_stdin_used+0x9f5>
insb   (%dx),%es:(%edi)
imul   $0x72207466,0x6d(%eax,%eiz,1),%esp
arpl   %bp,%gs:0x72(%edi)
and    %ah,%fs:0x6f(%esi)
jb     7c93 <_IO_stdin_used+0x9c7>
and    $0x430a2e73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     7c9e <_IO_stdin_used+0x9d2>
push   $0x6c646e61
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    7caa <_IO_stdin_used+0x9de>
jns    7cf1 <_IO_stdin_used+0xa25>
je     7cbc <_IO_stdin_used+0x9f0>
and    %ch,(%ecx)
sub    $0x24000a3a,%eax
dec    %ebp
inc    %esi
push   %esp
dec    %ebp
imul   $0x72726520,0x72(%edx),%esi
outsl  %ds:(%esi),(%dx)
jb     7cdd <_IO_stdin_used+0xa11>
and    %cl,0x6e(%ecx)
arpl   %bp,0x6d(%edi)
jo     7d17 <_IO_stdin_used+0xa4b>
gs
je     7d13 <_IO_stdin_used+0xa47>
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     7d1d <_IO_stdin_used+0xa51>
and    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    7d28 <_IO_stdin_used+0xa5c>
gs
jb     7ce5 <_IO_stdin_used+0xa19>
fs
gs
je     7d2e <_IO_stdin_used+0xa62>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x6e(%ecx)
and    %ah,0xa2e73
add    %al,(%eax)
and    $0x4d,%al
inc    %esi
push   %esp
dec    %ebp
imul   $0x72726520,0x72(%edx),%esi
outsl  %ds:(%esi),(%dx)
jb     7d21 <_IO_stdin_used+0xa55>
and    %cl,0x6e(%ecx)
jbe    7d4d <_IO_stdin_used+0xa81>
insb   (%dx),%es:(%edi)
imul   $0x72207466,0x6d(%eax,%eiz,1),%esp
arpl   %bp,%gs:0x72(%edi)
and    %ah,%fs:0x6f(%esi)
jb     7d1f <_IO_stdin_used+0xa53>
and    $0xa2e73,%eax
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     7d76 <_IO_stdin_used+0xaaa>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %al,%fs:%gs:0x49(%esi)
dec    %esp
inc    %ebp
pop    %edi
push   %ebp
jo     7d64 <_IO_stdin_used+0xa98>
popa
jae    7d89 <_IO_stdin_used+0xabd>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
jb     7d9d <_IO_stdin_used+0xad1>
outsl  %ds:(%esi),(%dx)
jb     7d68 <_IO_stdin_used+0xa9c>
and    %dl,0x70(%ebp)
arpl   %sp,0x73(%ecx)
and    %dh,%gs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x69(%edx)
and    %ch,(%bx,%si)
insl   (%dx),%es:(%edi)
popa
js     7d6c <_IO_stdin_used+0xaa0>
xor    (%edx),%esi
sub    $0x20746962,%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     7dbe <_IO_stdin_used+0xaf2>
sub    %ebp,%fs:(%esi)
or     (%eax),%al
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     7dd1 <_IO_stdin_used+0xb05>
popa
and    %ah,%fs:0x73614370(,%edx,2)
gs
sub    $0x20,%al
jne    7de8 <_IO_stdin_used+0xb1c>
gs
js     7ded <_IO_stdin_used+0xb21>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 7df1 <_IO_stdin_used+0xb25>
and    %ch,(%eax)
and    $0x20646c6c,%eax
and    %edi,0x6c6c2520
sub    %ebp,%fs:(%esi)
or     (%eax),%al
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     7e0e <_IO_stdin_used+0xb42>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%edx)
je     7e1c <_IO_stdin_used+0xb50>
popa
jo     7dd2 <_IO_stdin_used+0xb06>
fs
popa
je     7e17 <_IO_stdin_used+0xb4b>
and    %ah,0x74(%ecx)
je     7e2d <_IO_stdin_used+0xb61>
imul   $0x6574,0x75(%edx),%esp
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jb     7e3a <_IO_stdin_used+0xb6e>
jne    7e3a <_IO_stdin_used+0xb6e>
je     7dec <_IO_stdin_used+0xb20>
arpl   %bp,0x73(%ebp,%esi,2)
je     7e37 <_IO_stdin_used+0xb6b>
jb     7df4 <_IO_stdin_used+0xb28>
insl   (%dx),%es:(%edi)
popa
jo     7df8 <_IO_stdin_used+0xb2c>
jae    7e43 <_IO_stdin_used+0xb77>
jp     7e41 <_IO_stdin_used+0xb75>
and    %ah,0x20646c6c
sub    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:0x20646c6c
insl   (%dx),%es:(%edi)
imul   $0x206d756d,0x69(%esi),%ebp
and    $0x29646c6c,%eax
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x73614370(,%edx,2)
and    %ch,%gs:0x61(%eax)
jae    7e30 <_IO_stdin_used+0xb64>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
je     7e39 <_IO_stdin_used+0xb6d>
je     7e8a <_IO_stdin_used+0xbbe>
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    7e8e <_IO_stdin_used+0xbc2>
je     7e2e <_IO_stdin_used+0xb62>
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
gs
je     7ea0 <_IO_stdin_used+0xbd4>
imul   $0x71657220,0x67(%esi),%ebp
jne    7e9e <_IO_stdin_used+0xbd2>
jb     7e9c <_IO_stdin_used+0xbd0>
and    %ah,%fs:0x6c(%esi)
popa
addr16 jae 7e5f <_IO_stdin_used+0xb93>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
jb     7eba <_IO_stdin_used+0xbee>
imul   $0x2e2e2e6e,0x6f(%ecx,%ebp,2),%esi
and    %al,(%eax)
and    $0x56,%al
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    7ec3 <_IO_stdin_used+0xbf7>
and    %ch,%gs:0x61(%eax)
jae    7e7c <_IO_stdin_used+0xbb0>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp,%eiz,2)
gs
je     7ecc <_IO_stdin_used+0xc00>
fs and %al,%cs:%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     7e91 <_IO_stdin_used+0xbc5>
push   $0x6c646e61
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    7e9d <_IO_stdin_used+0xbd1>
jns    7ee4 <_IO_stdin_used+0xc18>
je     7eaf <_IO_stdin_used+0xbe3>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
je     7efe <_IO_stdin_used+0xc32>
and    %ah,0x69(%esi)
js     7eb4 <_IO_stdin_used+0xbe8>
je     7efe <_IO_stdin_used+0xc32>
imul   $0x4100000a,0x2e(%ebx),%esi
je     7f13 <_IO_stdin_used+0xc47>
jb     7f0a <_IO_stdin_used+0xc3e>
bound  %esi,0x74(%ebp)
and    %ah,%gs:(%esi,%edx,2)
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %dh,0x61(%edi)
jae    7ede <_IO_stdin_used+0xc12>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     7ee2 <_IO_stdin_used+0xc16>
outsw  %ds:(%esi),(%dx)
jne    7f34 <_IO_stdin_used+0xc68>
and    %ch,%fs:0x6e(%ecx)
and    %ah,(%esi,%edx,2)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    7f3e <_IO_stdin_used+0xc72>
and    %ecx,%gs:(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
je     7f4f <_IO_stdin_used+0xc83>
jb     7f46 <_IO_stdin_used+0xc7a>
bound  %esi,0x74(%ebp)
and    %ah,%gs:(%esi,%edx,2)
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x75(%ebp)
jae    7f6e <_IO_stdin_used+0xca2>
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
jae    7f6b <_IO_stdin_used+0xc9f>
fs outsb %fs:%gs:(%esi),(%dx)
je     7f27 <_IO_stdin_used+0xc5b>
sub    %ah,0x6e(%ecx)
and    %ch,%fs:0x74(%ecx)
and    %ch,0x73(%ecx)
outsb  %ds:(%esi),(%dx)
daa
je     7f3e <_IO_stdin_used+0xc72>
and    %ecx,(%edx)
add    %al,0x74(%ecx)
je     7f8e <_IO_stdin_used+0xcc2>
imul   $0x24206574,0x75(%edx),%esp
push   %esi
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x6e(%ecx)
and    %ah,(%esi,%edx,2)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    7fac <_IO_stdin_used+0xce0>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6f(%ebx)
jb     7fba <_IO_stdin_used+0xcee>
jne    7fba <_IO_stdin_used+0xcee>
je     7f6d <_IO_stdin_used+0xca1>
or     (%eax),%al
add    %al,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
imul   $0x206f7420,0x67(%esi),%ebp
gs
insl   (%dx),%es:(%edi)
jo     7fd1 <_IO_stdin_used+0xd05>
jns    7f7f <_IO_stdin_used+0xcb3>
je     7fc9 <_IO_stdin_used+0xcfd>
and    %ch,%gs:0x6f(%edx)
jne    7fd9 <_IO_stdin_used+0xd0d>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
and    $0x4c,%al
outsl  %ds:(%esi),(%dx)
addr16 inc %esi
imul   $0x202e2e2e,0x29(%ebp,%eiz,2),%ebp
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     7fef <_IO_stdin_used+0xd23>
jb     7fa2 <_IO_stdin_used+0xcd6>
cmp    (%eax),%ah
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8016 <_IO_stdin_used+0xd4a>
or     (%eax),%al
add    %al,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x6c(%ecx)
je     8016 <_IO_stdin_used+0xd4a>
jb     8021 <_IO_stdin_used+0xd55>
popa
je     801b <_IO_stdin_used+0xd4f>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     7fdc <_IO_stdin_used+0xd10>
jae    8023 <_IO_stdin_used+0xd57>
arpl   %si,0x72(%edi,%ebp,2)
cs cs and %al,%cs:(%eax)
add    %al,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    804e <_IO_stdin_used+0xd82>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x76(%edi)
gs
jb     8048 <_IO_stdin_used+0xd7c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8014 <_IO_stdin_used+0xd48>
cs and %al,%cs:(%eax)
add    %al,(%eax)
inc    %ebp
jb     8061 <_IO_stdin_used+0xd95>
outsl  %ds:(%esi),(%dx)
jb     8012 <_IO_stdin_used+0xd46>
cmp    (%eax),%ah
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     801e <_IO_stdin_used+0xd52>
jb     8065 <_IO_stdin_used+0xd99>
popa
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     802c <_IO_stdin_used+0xd60>
jae    8073 <_IO_stdin_used+0xda7>
arpl   %si,0x72(%edi,%ebp,2)
and    %ah,0x67(%ecx)
popa
imul   $0x45000000,0xa(%esi),%ebp
jb     8091 <_IO_stdin_used+0xdc5>
outsl  %ds:(%esi),(%dx)
jb     805c <_IO_stdin_used+0xd90>
and    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6874,0x20(%eax),%di
and    %ah,%gs:0x6c(%ecx)
je     809e <_IO_stdin_used+0xdd2>
jb     80a9 <_IO_stdin_used+0xddd>
popa
je     80a3 <_IO_stdin_used+0xdd7>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8064 <_IO_stdin_used+0xd98>
jae    80ab <_IO_stdin_used+0xddf>
arpl   %si,0x72(%edi,%ebp,2)
or     (%eax),%al
inc    %ebp
jb     80c1 <_IO_stdin_used+0xdf5>
outsl  %ds:(%esi),(%dx)
jb     808c <_IO_stdin_used+0xdc0>
and    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80c4 <_IO_stdin_used+0xdf8>
je     8081 <_IO_stdin_used+0xdb5>
jbe    80d2 <_IO_stdin_used+0xe06>
insb   (%dx),%es:(%edi)
jne    80d3 <_IO_stdin_used+0xe07>
and    %ah,%gs:0x72(%ecx,%ebp,2)
je     80e6 <_IO_stdin_used+0xe1a>
and    %ah,0x6c(%esi)
popa
and    %ch,(%bx,%si)
and    $0x25282064,%eax
jae    80a4 <_IO_stdin_used+0xdd8>
sub    %esp,(%ecx)
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    80f7 <_IO_stdin_used+0xe2b>
and    %dh,%gs:0x65(%esi)
jb     8103 <_IO_stdin_used+0xe37>
imul   $0x20736920,0x6e(%edi),%ebp
and    $0x69252e69,%eax
or     %cs:(%eax),%al
add    %al,0x6f(%edi)
imul   $0x206f7420,0x67(%esi),%ebp
jne    8119 <_IO_stdin_used+0xe4d>
sub    $0x6b72616d,%eax
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x61(%edx)
and    %ah,%fs:0x6c(%ebx)
jne    8130 <_IO_stdin_used+0xe64>
je     8124 <_IO_stdin_used+0xe58>
jb     8134 <_IO_stdin_used+0xe68>
and    %ch,(%eax)
and    $0x42,%al
popa
fs
inc    %ebx
insb   (%dx),%es:(%edi)
jne    813e <_IO_stdin_used+0xe72>
sub    %ebp,(%esi)
cs and %al,%cs:(%eax)
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jne    814e <_IO_stdin_used+0xe82>
sub    $0x6b72616d,%eax
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x61(%edx)
and    %ah,%fs:0x6c(%ebx)
jne    8165 <_IO_stdin_used+0xe99>
je     8159 <_IO_stdin_used+0xe8d>
jb     8169 <_IO_stdin_used+0xe9d>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     816a <_IO_stdin_used+0xe9e>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %al,%fs:%gs:0x49(%esi)
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
popa
fs
inc    %ebx
insb   (%dx),%es:(%edi)
jne    818c <_IO_stdin_used+0xec0>
add    %al,(%eax)
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     8199 <_IO_stdin_used+0xecd>
imul   $0x7325206e,0x6f(%ecx,%ebp,2),%esi
and    %dh,0x61(%edi)
jae    8152 <_IO_stdin_used+0xe86>
jo     81a6 <_IO_stdin_used+0xeda>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    819f <_IO_stdin_used+0xed3>
and    %dh,%fs:0x75(%ebx)
arpl   %sp,0x65(%ebx)
jae    81b6 <_IO_stdin_used+0xeea>
data16
jne    81b2 <_IO_stdin_used+0xee6>
insb   (%dx),%es:(%edi)
jns    8177 <_IO_stdin_used+0xeab>
or     (%eax),%al
add    %al,0x69(%esi)
js     81b9 <_IO_stdin_used+0xeed>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %dh,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
sub    $0x6f6c,%ax
arpl   %sp,0x74(%ecx)
gs and %cl,%fs:%gs:0x46(%ebp)
push   %esp
and    %dh,0x65(%ebx)
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     819e <_IO_stdin_used+0xed2>
cs and %al,%cs:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jb     81ea <_IO_stdin_used+0xf1e>
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %ah,0x69(%si)
data16
data16
gs
jb     81eb <_IO_stdin_used+0xf1f>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %ch,0x6e(%ecx)
and    %ah,0x73255446(,%ecx,2)
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x2e2e2e64
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     8217 <_IO_stdin_used+0xf4b>
jb     81e4 <_IO_stdin_used+0xf18>
and    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jne    8225 <_IO_stdin_used+0xf59>
sub    $0x6b72616d,%eax
and    %ah,0x61(%edx)
and    %dh,%fs:0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    81f7 <_IO_stdin_used+0xf2b>
or     (%eax),%al
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8230 <_IO_stdin_used+0xf64>
bound  %esp,0x64(%ecx)
arpl   %bp,0x73(%ebp,%esi,2)
add    %ah,0x68(%ebx)
arpl   %bp,%gs:0x5f(%ebx)
popa
insb   (%dx),%es:(%edi)
je     8248 <_IO_stdin_used+0xf7c>
jb     8253 <_IO_stdin_used+0xf87>
popa
je     824d <_IO_stdin_used+0xf81>
pop    %edi
bound  %ebp,0x6f(%edi)
je     81ee <_IO_stdin_used+0xf22>
gs
insl   (%dx),%es:(%edi)
jo     8266 <_IO_stdin_used+0xf9a>
jns    8253 <_IO_stdin_used+0xf87>
push   $0x6f
jne    826a <_IO_stdin_used+0xf9e>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %cl,0x4c(%edi)
inc    %esp
pop    %edi
outsb  %ds:(%esi),(%dx)
je     8269 <_IO_stdin_used+0xf9d>
jae    8264 <_IO_stdin_used+0xf98>
jbe    8276 <_IO_stdin_used+0xfaa>
insb   (%dx),%es:(%edi)
jne    8277 <_IO_stdin_used+0xfab>
gs
pop    %edi
jae    8273 <_IO_stdin_used+0xfa7>
je     826f <_IO_stdin_used+0xfa3>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8216 <_IO_stdin_used+0xf4a>
jae    827d <_IO_stdin_used+0xfb1>
je     8279 <_IO_stdin_used+0xfad>
imul   $0x6c665f79,%fs:0x74(%edx),%esi
popa
add    %dh,0x65(%bp,%si)
ja     829b <_IO_stdin_used+0xfcf>
imul   $0x61637075,0x5f(%ebp,%eiz,2),%esi
jae    8298 <_IO_stdin_used+0xfcc>
add    %ah,0x69(%esi)
js     8297 <_IO_stdin_used+0xfcb>
jne    82aa <_IO_stdin_used+0xfde>
arpl   %sp,0x73(%ecx)
add    %ah,%gs:0x69(%esi)
js     82a2 <_IO_stdin_used+0xfd6>
insl   (%dx),%es:(%edi)
data16
je     82b4 <_IO_stdin_used+0xfe8>
imul   $0x78696600,0x72(%edx),%esi
pop    %edi
jae    82b6 <_IO_stdin_used+0xfea>
insb   (%dx),%es:(%edi)
pop    %di
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
pop    %edi
insl   (%dx),%es:(%edi)
data16
je     8260 <_IO_stdin_used+0xf94>
jb     82c7 <_IO_stdin_used+0xffb>
ja     82d6 <_IO_stdin_used+0x100a>
imul   $0x746f6f62,0x5f(%ebp,%eiz,2),%esi
add    %dh,0x79(%edx,%esi,2)
pop    %edi
imul   $0x6f62,0x5f(%eax),%di
outsl  %ds:(%esi),(%dx)
je     827a <_IO_stdin_used+0xfae>
je     82ee <_IO_stdin_used+0x1022>
jns    82dd <_IO_stdin_used+0x1011>
popa
insb   (%dx),%es:(%edi)
je     82e7 <_IO_stdin_used+0x101b>
jb     82f2 <_IO_stdin_used+0x1026>
popa
je     82ec <_IO_stdin_used+0x1020>
pop    %edi
bound  %ebp,0x6f(%edi)
je     828d <_IO_stdin_used+0xfc1>
imul   $0x7473,0x5f(%eax),%di
popa
jb     830a <_IO_stdin_used+0x103e>
jne    8308 <_IO_stdin_used+0x103c>
add    %ah,0x69(%esi)
js     82fc <_IO_stdin_used+0x1030>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    830f <_IO_stdin_used+0x1043>
je     82a3 <_IO_stdin_used+0xfd7>
jne    8318 <_IO_stdin_used+0x104c>
popa
add    %dh,%gs:0x65(%bp)
jb     8320 <_IO_stdin_used+0x1054>
imul   $0x72617000,0x6e(%edi),%ebp
jae    831b <_IO_stdin_used+0x104f>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     832e <_IO_stdin_used+0x1062>
imul   $0x616d0073,0x6e(%edi),%ebp
imul   $0x4e554f46,0x0(%esi),%ebp
inc    %esp
or     (%eax),%al
inc    %esi
inc    %ecx
dec    %ecx
dec    %esp
inc    %ebp
inc    %esp
or     (%eax),%al
dec    %edi
dec    %ebx
or     (%eax),%al
jne    834d <_IO_stdin_used+0x1081>
imul   $0x68540063,0x2e(%ebx,%esi,2),%ebp
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
outsl  %fs:(%esi),(%dx)
gs
jae    8360 <_IO_stdin_used+0x1094>
daa
je     8315 <_IO_stdin_used+0x1049>
gs
js     8361 <_IO_stdin_used+0x1095>
jae    836e <_IO_stdin_used+0x10a2>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     8363 <_IO_stdin_used+0x1097>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     8374 <_IO_stdin_used+0x10a8>
outsb  %ds:(%esi),(%dx)
jne    8373 <_IO_stdin_used+0x10a7>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    838d <_IO_stdin_used+0x10c1>
je     8341 <_IO_stdin_used+0x1075>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    838b <_IO_stdin_used+0x10bf>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    839f <_IO_stdin_used+0x10d3>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     8369 <_IO_stdin_used+0x109d>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    83cc <_IO_stdin_used+0x1100>
outsb  %fs:(%esi),(%dx)
daa
je     8385 <_IO_stdin_used+0x10b9>
outsl  %ds:(%esi),(%dx)
jo     83cd <_IO_stdin_used+0x1101>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     83e8 <_IO_stdin_used+0x111c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    83a9 <_IO_stdin_used+0x10dd>
je     83fd <_IO_stdin_used+0x1131>
jne    83fb <_IO_stdin_used+0x112f>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    8414 <_IO_stdin_used+0x1148>
outsb  %fs:(%esi),(%dx)
daa
je     83cd <_IO_stdin_used+0x1101>
outsl  %ds:(%esi),(%dx)
jo     8415 <_IO_stdin_used+0x1149>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    842a <_IO_stdin_used+0x115e>
outsb  %fs:(%esi),(%dx)
daa
je     83e3 <_IO_stdin_used+0x1117>
jb     842a <_IO_stdin_used+0x115e>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    8440 <_IO_stdin_used+0x1174>
outsb  %fs:(%esi),(%dx)
daa
je     83f9 <_IO_stdin_used+0x112d>
jb     8440 <_IO_stdin_used+0x1174>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     845e <_IO_stdin_used+0x1192>
jb     8411 <_IO_stdin_used+0x1145>
jb     8458 <_IO_stdin_used+0x118c>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    847d <_IO_stdin_used+0x11b1>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     848c <_IO_stdin_used+0x11c0>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     8485 <_IO_stdin_used+0x11b9>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8491 <_IO_stdin_used+0x11c5>
outsb  %fs:(%esi),(%dx)
daa
je     844a <_IO_stdin_used+0x117e>
outsl  %ds:(%esi),(%dx)
jo     8492 <_IO_stdin_used+0x11c6>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    84aa <_IO_stdin_used+0x11de>
outsb  %fs:(%esi),(%dx)
daa
je     8463 <_IO_stdin_used+0x1197>
jb     84aa <_IO_stdin_used+0x11de>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     84cd <_IO_stdin_used+0x1201>
outsl  %ds:(%esi),(%dx)
jb     847e <_IO_stdin_used+0x11b2>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    84e5 <_IO_stdin_used+0x1219>
je     84a2 <_IO_stdin_used+0x11d6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    84ff <_IO_stdin_used+0x1233>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    8502 <_IO_stdin_used+0x1236>
je     84b8 <_IO_stdin_used+0x11ec>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     8515 <_IO_stdin_used+0x1249>
outsl  %ds:(%esi),(%dx)
jb     84c6 <_IO_stdin_used+0x11fa>
addr16
gs
je     851e <_IO_stdin_used+0x1252>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8521 <_IO_stdin_used+0x1255>
popa
je     8520 <_IO_stdin_used+0x1254>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    8533 <_IO_stdin_used+0x1267>
and    %ah,0x55000073
jae    852c <_IO_stdin_used+0x1260>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     8533 <_IO_stdin_used+0x1267>
and    %ch,%gs:0x70(%edi)
je     853f <_IO_stdin_used+0x1273>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     854d <_IO_stdin_used+0x1281>
imul   $0x6f727265,0x20(%ebx),%esi
jb     851c <_IO_stdin_used+0x1250>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    8569 <_IO_stdin_used+0x129d>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    857a <_IO_stdin_used+0x12ae>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8584 <_IO_stdin_used+0x12b8>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     8585 <_IO_stdin_used+0x12b9>
popa
fs
jns    8544 <_IO_stdin_used+0x1278>
gs
js     858a <_IO_stdin_used+0x12be>
insb   (%dx),%es:(%edi)
jne    859d <_IO_stdin_used+0x12d1>
imul   $0x6f20796c,0x65(%esi),%esi
jo     8598 <_IO_stdin_used+0x12cc>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    85ae <_IO_stdin_used+0x12e2>
and    %ch,%gs:0x61(%ebp)
jns    8567 <_IO_stdin_used+0x129b>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     85b3 <_IO_stdin_used+0x12e7>
popa
fs
jns    8572 <_IO_stdin_used+0x12a6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    85c4 <_IO_stdin_used+0x12f8>
je     85bd <_IO_stdin_used+0x12f1>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     857e <_IO_stdin_used+0x12b2>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     85cb <_IO_stdin_used+0x12ff>
gs
jb     8586 <_IO_stdin_used+0x12ba>
jae    85d7 <_IO_stdin_used+0x130b>
data16
je     85e2 <_IO_stdin_used+0x1316>
popa
jb     85d3 <_IO_stdin_used+0x1307>
and    %ch,0x61(%ebp)
jns    8593 <_IO_stdin_used+0x12c7>
jne    85e8 <_IO_stdin_used+0x131c>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     85f8 <_IO_stdin_used+0x132c>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     85b8 <_IO_stdin_used+0x12ec>
gs
js     85fc <_IO_stdin_used+0x1330>
insl   (%dx),%es:(%edi)
jo     860a <_IO_stdin_used+0x133e>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     85cc <_IO_stdin_used+0x1300>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    862a <_IO_stdin_used+0x135e>
gs
jb     85e1 <_IO_stdin_used+0x1315>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    85ec <_IO_stdin_used+0x1320>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     863b <_IO_stdin_used+0x136f>
and    %ch,%gs:0x70(%edi)
je     8647 <_IO_stdin_used+0x137b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    8656 <_IO_stdin_used+0x138a>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     861a <_IO_stdin_used+0x134e>
je     8664 <_IO_stdin_used+0x1398>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     8626 <_IO_stdin_used+0x135a>
jb     866d <_IO_stdin_used+0x13a1>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    863a <_IO_stdin_used+0x136e>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     8687 <_IO_stdin_used+0x13bb>
and    %ah,0x6f(%ebx)
jb     869d <_IO_stdin_used+0x13d1>
jne    869d <_IO_stdin_used+0x13d1>
je     8698 <_IO_stdin_used+0x13cc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    86a5 <_IO_stdin_used+0x13d9>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    86b7 <_IO_stdin_used+0x13eb>
daa
je     866c <_IO_stdin_used+0x13a0>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    86c5 <_IO_stdin_used+0x13f9>
and    %bh,%gs:0x6f(%ecx)
jne    8689 <_IO_stdin_used+0x13bd>
jae    86d0 <_IO_stdin_used+0x1404>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    86e9 <_IO_stdin_used+0x141d>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    870e <_IO_stdin_used+0x1442>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     8706 <_IO_stdin_used+0x143a>
jb     871b <_IO_stdin_used+0x144f>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    86e7 <_IO_stdin_used+0x141b>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     86e1 <_IO_stdin_used+0x1415>
das
fs
gs
jbe    86f5 <_IO_stdin_used+0x1429>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    86fe <_IO_stdin_used+0x1432>
popa
jb     8750 <_IO_stdin_used+0x1484>
jne    8751 <_IO_stdin_used+0x1485>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    8760 <_IO_stdin_used+0x1494>
jae    876d <_IO_stdin_used+0x14a1>
outsb  %gs:(%esi),(%dx)
je     872b <_IO_stdin_used+0x145f>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8789 <_IO_stdin_used+0x14bd>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     8743 <_IO_stdin_used+0x1477>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     87a6 <_IO_stdin_used+0x14da>
insl   (%dx),%es:(%edi)
gs
je     87ae <_IO_stdin_used+0x14e2>
jb     876b <_IO_stdin_used+0x149f>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    877c <_IO_stdin_used+0x14b0>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    87a7 <_IO_stdin_used+0x14db>
jae    87f8 <_IO_stdin_used+0x152c>
data16
je     8803 <_IO_stdin_used+0x1537>
popa
jb     87f4 <_IO_stdin_used+0x1528>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     8815 <_IO_stdin_used+0x1549>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     8818 <_IO_stdin_used+0x154c>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    8821 <_IO_stdin_used+0x1555>
and    %dh,0x65(%edx)
jae    8836 <_IO_stdin_used+0x156a>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     883e <_IO_stdin_used+0x1572>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     8849 <_IO_stdin_used+0x157d>
jb     8852 <_IO_stdin_used+0x1586>
jns    8814 <_IO_stdin_used+0x1548>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    885e <_IO_stdin_used+0x1592>
je     885b <_IO_stdin_used+0x158f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    8865 <_IO_stdin_used+0x1599>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    8838 <_IO_stdin_used+0x156c>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    8885 <_IO_stdin_used+0x15b9>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    8896 <_IO_stdin_used+0x15ca>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    88a4 <_IO_stdin_used+0x15d8>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    88d0 <_IO_stdin_used+0x1604>
outsl  %fs:(%esi),(%dx)
ja     88ce <_IO_stdin_used+0x1602>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     88db <_IO_stdin_used+0x160f>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     88d3 <_IO_stdin_used+0x1607>
jb     88dc <_IO_stdin_used+0x1610>
jns    88a0 <_IO_stdin_used+0x15d4>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    88a9 <_IO_stdin_used+0x15dd>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    88f4 <_IO_stdin_used+0x1628>
and    %cl,0x61(%eax)
jb     88f8 <_IO_stdin_used+0x162c>
ja     88f7 <_IO_stdin_used+0x162b>
jb     88fd <_IO_stdin_used+0x1631>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8920 <_IO_stdin_used+0x1654>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     8927 <_IO_stdin_used+0x165b>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     8937 <_IO_stdin_used+0x166b>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    8959 <_IO_stdin_used+0x168d>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     896f <_IO_stdin_used+0x16a3>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     897c <_IO_stdin_used+0x16b0>
and    %al,0x78(%ebp)
jo     897a <_IO_stdin_used+0x16ae>
outsl  %ds:(%esi),(%dx)
jb     8976 <_IO_stdin_used+0x16aa>
jb     8933 <_IO_stdin_used+0x1667>
je     8984 <_IO_stdin_used+0x16b8>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    893d <_IO_stdin_used+0x1671>
jb     8984 <_IO_stdin_used+0x16b8>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8988 <_IO_stdin_used+0x16bc>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    895b <_IO_stdin_used+0x168f>
jb     899e <_IO_stdin_used+0x16d2>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     89ba <_IO_stdin_used+0x16ee>
gs
jbe    89b4 <_IO_stdin_used+0x16e8>
outsl  %ds:(%esi),(%dx)
jne    89c1 <_IO_stdin_used+0x16f5>
insb   (%dx),%es:(%edi)
jns    8971 <_IO_stdin_used+0x16a5>
je     89bb <_IO_stdin_used+0x16ef>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     897b <_IO_stdin_used+0x16af>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     89eb <_IO_stdin_used+0x171f>
insl   (%dx),%es:(%edi)
popa
je     89e9 <_IO_stdin_used+0x171d>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    89a6 <_IO_stdin_used+0x16da>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    8a0b <_IO_stdin_used+0x173f>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    8a07 <_IO_stdin_used+0x173b>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     8a1e <_IO_stdin_used+0x1752>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8a40 <_IO_stdin_used+0x1774>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     89f7 <_IO_stdin_used+0x172b>
jb     8a3e <_IO_stdin_used+0x1772>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     8a52 <_IO_stdin_used+0x1786>
jae    8a5b <_IO_stdin_used+0x178f>
outsl  %ds:(%esi),(%dx)
jne    8a5f <_IO_stdin_used+0x1793>
je     8a2d <_IO_stdin_used+0x1761>
and    %cl,0x6f(%ebp)
jne    8a66 <_IO_stdin_used+0x179a>
je     8a1a <_IO_stdin_used+0x174e>
je     8a64 <_IO_stdin_used+0x1798>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8a70 <_IO_stdin_used+0x17a4>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     8a8e <_IO_stdin_used+0x17c2>
daa
and    %ch,0x6f(%ebp)
jne    8a93 <_IO_stdin_used+0x17c7>
je     8a47 <_IO_stdin_used+0x177b>
outsl  %ds:(%esi),(%dx)
jo     8a9e <_IO_stdin_used+0x17d2>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    8a54 <_IO_stdin_used+0x1788>
jae    8a9b <_IO_stdin_used+0x17cf>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     8a9a <_IO_stdin_used+0x17ce>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     8abd <_IO_stdin_used+0x17f1>
ja     8abc <_IO_stdin_used+0x17f0>
jb     8ac2 <_IO_stdin_used+0x17f6>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    8ada <_IO_stdin_used+0x180e>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     8adb <_IO_stdin_used+0x180f>
jbe    8ad5 <_IO_stdin_used+0x1809>
je     8adb <_IO_stdin_used+0x180f>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     8aa3 <_IO_stdin_used+0x17d7>
fs
gs
jbe    8af0 <_IO_stdin_used+0x1824>
arpl   %sp,0x20(%ebp)
jne    8afa <_IO_stdin_used+0x182e>
fs
gs
jb     8ab0 <_IO_stdin_used+0x17e4>
das
fs
gs
jbe    8ac4 <_IO_stdin_used+0x17f8>
insl   (%dx),%es:(%edi)
popa
jo     8b09 <_IO_stdin_used+0x183d>
gs
jb     8ac8 <_IO_stdin_used+0x17fc>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    8ad7 <_IO_stdin_used+0x180b>
insl   (%dx),%es:(%edi)
popa
jo     8b1c <_IO_stdin_used+0x1850>
gs
jb     8ade <_IO_stdin_used+0x1812>
outsb  %ds:(%esi),(%dx)
jbe    8b1b <_IO_stdin_used+0x184f>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8b36 <_IO_stdin_used+0x186a>
je     8aea <_IO_stdin_used+0x181e>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    8b3b <_IO_stdin_used+0x186f>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     8b45 <_IO_stdin_used+0x1879>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8b52 <_IO_stdin_used+0x1886>
je     8b5c <_IO_stdin_used+0x1890>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     8b1a <_IO_stdin_used+0x184e>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8b76 <_IO_stdin_used+0x18aa>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     8b3c <_IO_stdin_used+0x1870>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    8b8e <_IO_stdin_used+0x18c2>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8b4f <_IO_stdin_used+0x1883>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8bae <_IO_stdin_used+0x18e2>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8b66 <_IO_stdin_used+0x189a>
jne    8bbb <_IO_stdin_used+0x18ef>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     8bb6 <_IO_stdin_used+0x18ea>
gs
daa
and    %ch,0x70(%edi)
je     8bc3 <_IO_stdin_used+0x18f7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    8b8b <_IO_stdin_used+0x18bf>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     8b93 <_IO_stdin_used+0x18c7>
jae    8bd8 <_IO_stdin_used+0x190c>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     8bac <_IO_stdin_used+0x18e0>
je     8bf7 <_IO_stdin_used+0x192b>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    8bfd <_IO_stdin_used+0x1931>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    8bbf <_IO_stdin_used+0x18f3>
jbe    8c10 <_IO_stdin_used+0x1944>
insb   (%dx),%es:(%edi)
jne    8c11 <_IO_stdin_used+0x1945>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    8c1e <_IO_stdin_used+0x1952>
outsl  %ds:(%esi),(%dx)
jne    8c22 <_IO_stdin_used+0x1956>
je     8bd6 <_IO_stdin_used+0x190a>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    8c32 <_IO_stdin_used+0x1966>
outsl  %fs:(%esi),(%dx)
ja     8c30 <_IO_stdin_used+0x1964>
and    %dh,0x79(%ebx)
jae    8c3b <_IO_stdin_used+0x196f>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     8c34 <_IO_stdin_used+0x1968>
jb     8c3d <_IO_stdin_used+0x1971>
jns    8bff <_IO_stdin_used+0x1933>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     8c58 <_IO_stdin_used+0x198c>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    8c5f <_IO_stdin_used+0x1993>
or     0x73(%ecx,%ebp,2),%ah
je     8c65 <_IO_stdin_used+0x1999>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    8c72 <_IO_stdin_used+0x19a6>
and    %dh,0x65(%edx)
jo     8c81 <_IO_stdin_used+0x19b5>
jb     8c88 <_IO_stdin_used+0x19bc>
and    %dh,0x20(%edi,%ebp,2)
jns    8c89 <_IO_stdin_used+0x19bd>
jne    8c8e <_IO_stdin_used+0x19c2>
and    %ah,0x73(%ecx,%ebp,2)
je     8c94 <_IO_stdin_used+0x19c8>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     8c97 <_IO_stdin_used+0x19cb>
jb     8ca7 <_IO_stdin_used+0x19db>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    8cb2 <_IO_stdin_used+0x19e6>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     8c67 <_IO_stdin_used+0x199b>
imul   $0x63732074,0x69(%esi),%ebp
jb     8cb9 <_IO_stdin_used+0x19ed>
jo     8cc6 <_IO_stdin_used+0x19fa>
jae    8c74 <_IO_stdin_used+0x19a8>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    8ccb <_IO_stdin_used+0x19ff>
outsl  %ds:(%esi),(%dx)
jne    8ccf <_IO_stdin_used+0x1a03>
je     8c83 <_IO_stdin_used+0x19b7>
outsl  %ds:(%esi),(%dx)
jb     8c86 <_IO_stdin_used+0x19ba>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8cd8 <_IO_stdin_used+0x1a0c>
je     8c9a <_IO_stdin_used+0x19ce>
outsb  %ds:(%esi),(%dx)
je     8cd5 <_IO_stdin_used+0x1a09>
jae    8c9e <_IO_stdin_used+0x19d2>
data16
jne    8ce7 <_IO_stdin_used+0x1a1b>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     8ce6 <_IO_stdin_used+0x1a1a>
outsl  %ds:(%esi),(%dx)
ja     8cf3 <_IO_stdin_used+0x1a27>
and    %ch,0x6e(%ecx)
jae    8cfe <_IO_stdin_used+0x1a32>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     8cfb <_IO_stdin_used+0x1a2f>
jb     8cb8 <_IO_stdin_used+0x19ec>
jne    8d07 <_IO_stdin_used+0x1a3b>
outsl  %ds:(%esi),(%dx)
jne    8d0b <_IO_stdin_used+0x1a3f>
je     8ccd <_IO_stdin_used+0x1a01>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    8d25 <_IO_stdin_used+0x1a59>
and    %ch,%gs:0x6f(%ebp)
jne    8d2c <_IO_stdin_used+0x1a60>
je     8ce0 <_IO_stdin_used+0x1a14>
ja     8d23 <_IO_stdin_used+0x1a57>
jae    8ce4 <_IO_stdin_used+0x1a18>
outsw  %ds:(%esi),(%dx)
jb     8d2b <_IO_stdin_used+0x1a5f>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     8d3a <_IO_stdin_used+0x1a6e>
gs
daa
and    %ch,0x6f(%ebp)
jne    8d4c <_IO_stdin_used+0x1a80>
je     8d00 <_IO_stdin_used+0x1a34>
outsl  %ds:(%esi),(%dx)
jo     8d57 <_IO_stdin_used+0x1a8b>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     8d55 <_IO_stdin_used+0x1a89>
jb     8d60 <_IO_stdin_used+0x1a94>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8d68 <_IO_stdin_used+0x1a9c>
jb     8d27 <_IO_stdin_used+0x1a5b>
and    %dh,0x74(%ebx)
jb     8d74 <_IO_stdin_used+0x1aa8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     8d2b <_IO_stdin_used+0x1a5f>
jb     8d72 <_IO_stdin_used+0x1aa6>
je     8d84 <_IO_stdin_used+0x1ab8>
jb     8d7f <_IO_stdin_used+0x1ab3>
and    %ah,0x20(%ecx)
jae    8d8b <_IO_stdin_used+0x1abf>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    8d85 <_IO_stdin_used+0x1ab9>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    8da4 <_IO_stdin_used+0x1ad8>
data32 imul $0x2527,0x20(%eax),%di
jae    8d5f <_IO_stdin_used+0x1a93>
and    %ah,%cs:(%eax)
push   %ebp
jae    8da3 <_IO_stdin_used+0x1ad7>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8d6b <_IO_stdin_used+0x1a9f>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    8dc0 <_IO_stdin_used+0x1af4>
outsb  %fs:(%esi),(%dx)
daa
je     8d79 <_IO_stdin_used+0x1aad>
arpl   %si,0x65(%edx)
popa
je     8dc4 <_IO_stdin_used+0x1af8>
and    %ah,0x20(%ecx)
jae    8dc9 <_IO_stdin_used+0x1afd>
popa
jb     8dca <_IO_stdin_used+0x1afe>
push   $0x6e6f6320
je     8dd3 <_IO_stdin_used+0x1b07>
js     8de4 <_IO_stdin_used+0x1b18>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    8de4 <_IO_stdin_used+0x1b18>
outsb  %fs:(%esi),(%dx)
daa
je     8d9d <_IO_stdin_used+0x1ad1>
je     8df1 <_IO_stdin_used+0x1b25>
popa
outsb  %ds:(%esi),(%dx)
jae    8def <_IO_stdin_used+0x1b23>
popa
je     8deb <_IO_stdin_used+0x1b1f>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     8dfd <_IO_stdin_used+0x1b31>
outsb  %ds:(%esi),(%dx)
je     8dbb <_IO_stdin_used+0x1aef>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     8e11 <_IO_stdin_used+0x1b45>
arpl   %si,0x72(%edi,%ebp,2)
jns    8dd2 <_IO_stdin_used+0x1b06>
jae    8e28 <_IO_stdin_used+0x1b5c>
jb     8e2b <_IO_stdin_used+0x1b5f>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     8de8 <_IO_stdin_used+0x1b1c>
sub    %ch,0x76(%edi)
gs
jb     8dee <_IO_stdin_used+0x1b22>
and    $0x6e202964,%eax
gs
jae    8e4a <_IO_stdin_used+0x1b7e>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8e58 <_IO_stdin_used+0x1b8c>
outsb  %fs:(%esi),(%dx)
daa
je     8e11 <_IO_stdin_used+0x1b45>
je     8e65 <_IO_stdin_used+0x1b99>
popa
outsb  %ds:(%esi),(%dx)
jae    8e63 <_IO_stdin_used+0x1b97>
popa
je     8e5f <_IO_stdin_used+0x1b93>
and    %ah,0x74(%ecx)
je     8e71 <_IO_stdin_used+0x1ba5>
imul   $0x74206574,0x75(%edx),%esp
jns    8e78 <_IO_stdin_used+0x1bac>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     8e77 <_IO_stdin_used+0x1bab>
outsb  %ds:(%esi),(%dx)
je     8e35 <_IO_stdin_used+0x1b69>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     8e9e <_IO_stdin_used+0x1bd2>
imul   $0x74206574,0x75(%edx),%esp
jns    8ea5 <_IO_stdin_used+0x1bd9>
and    %dh,%gs:(%eax)
js     8e5f <_IO_stdin_used+0x1b93>
xor    %dh,(%edx)
js     8e48 <_IO_stdin_used+0x1b7c>
add    %al,(%eax)
inc    %ecx
je     8eb7 <_IO_stdin_used+0x1beb>
jb     8eae <_IO_stdin_used+0x1be2>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    8e73 <_IO_stdin_used+0x1ba7>
je     8ec7 <_IO_stdin_used+0x1bfb>
jne    8ec5 <_IO_stdin_used+0x1bf9>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    8ed0 <_IO_stdin_used+0x1c04>
outsb  %fs:(%esi),(%dx)
daa
je     8e89 <_IO_stdin_used+0x1bbd>
je     8edd <_IO_stdin_used+0x1c11>
popa
outsb  %ds:(%esi),(%dx)
jae    8edb <_IO_stdin_used+0x1c0f>
popa
je     8ed7 <_IO_stdin_used+0x1c0b>
and    %ah,0x74(%ecx)
je     8ee9 <_IO_stdin_used+0x1c1d>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     8eef <_IO_stdin_used+0x1c23>
outsb  %ds:(%esi),(%dx)
je     8ead <_IO_stdin_used+0x1be1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     8f0f <_IO_stdin_used+0x1c43>
jb     8f06 <_IO_stdin_used+0x1c3a>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    8ecb <_IO_stdin_used+0x1bff>
je     8f1f <_IO_stdin_used+0x1c53>
jne    8f1d <_IO_stdin_used+0x1c51>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     8f2b <_IO_stdin_used+0x1c5f>
jb     8ede <_IO_stdin_used+0x1c12>
jb     8f25 <_IO_stdin_used+0x1c59>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     8f42 <_IO_stdin_used+0x1c76>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     8f57 <_IO_stdin_used+0x1c8b>
addr16 jb 8f4c <_IO_stdin_used+0x1c80>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     8f71 <_IO_stdin_used+0x1ca5>
popa
jb     8f62 <_IO_stdin_used+0x1c96>
sub    $0x20,%al
jb     8f66 <_IO_stdin_used+0x1c9a>
insb   (%dx),%es:(%edi)
gs
popa
jae    8f6b <_IO_stdin_used+0x1c9f>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     8f2e <_IO_stdin_used+0x1c62>
je     8f78 <_IO_stdin_used+0x1cac>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     8f7d <_IO_stdin_used+0x1cb1>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    8f91 <_IO_stdin_used+0x1cc5>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    8f55 <_IO_stdin_used+0x1c89>
popa
jb     8f9d <_IO_stdin_used+0x1cd1>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     8fab <_IO_stdin_used+0x1cdf>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8fb5 <_IO_stdin_used+0x1ce9>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     8f7a <_IO_stdin_used+0x1cae>
arpl   %sp,0x72(%ebp)
je     8fc0 <_IO_stdin_used+0x1cf4>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    8f98 <_IO_stdin_used+0x1ccc>
ja     8fe3 <_IO_stdin_used+0x1d17>
je     8fe4 <_IO_stdin_used+0x1d18>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     8fb9 <_IO_stdin_used+0x1ced>
fs
gs
je     8ffe <_IO_stdin_used+0x1d32>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     9015 <_IO_stdin_used+0x1d49>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    9029 <_IO_stdin_used+0x1d5d>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    903d <_IO_stdin_used+0x1d71>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     9056 <_IO_stdin_used+0x1d8a>
and    %dh,%fs:0x69(%edi)
je     905f <_IO_stdin_used+0x1d93>
and    %dh,0x69(%eax,%ebp,2)
jae    901d <_IO_stdin_used+0x1d51>
jo     9071 <_IO_stdin_used+0x1da5>
outsl  %ds:(%esi),(%dx)
addr16 jb 9064 <_IO_stdin_used+0x1d98>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     9029 <_IO_stdin_used+0x1d5d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     9088 <_IO_stdin_used+0x1dbc>
cmp    (%edi),%ch
das
ja     9094 <_IO_stdin_used+0x1dc8>
ja     904d <_IO_stdin_used+0x1d81>
outsb  %ds:(%si),(%dx)
jne    9051 <_IO_stdin_used+0x1d85>
outsl  %ds:(%esi),(%dx)
jb     908d <_IO_stdin_used+0x1dc1>
das
arpl   %bp,0x70(%edi)
jns    9098 <_IO_stdin_used+0x1dcc>
gs
data16
je     905f <_IO_stdin_used+0x1d93>
addr16 jo 909f <_IO_stdin_used+0x1dd3>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     90a9 <_IO_stdin_used+0x1ddd>
jb     90b9 <_IO_stdin_used+0x1ded>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    90c8 <_IO_stdin_used+0x1dfc>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     90c0 <_IO_stdin_used+0x1df4>
jae    9089 <_IO_stdin_used+0x1dbd>
xor    0x2d(%edi),%esp
fs
gs
jbe    90c8 <_IO_stdin_used+0x1dfc>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     907c <_IO_stdin_used+0x1db0>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     90d7 <_IO_stdin_used+0x1e0b>
outsb  %ds:(%esi),(%dx)
gs
js     90f0 <_IO_stdin_used+0x1e24>
pop    %edi
jb     90e4 <_IO_stdin_used+0x1e18>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    9109 <_IO_stdin_used+0x1e3d>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     9109 <_IO_stdin_used+0x1e3d>
jb     9105 <_IO_stdin_used+0x1e39>
imul   $0x657375,0x5f(%esi),%ebp
jne    9123 <_IO_stdin_used+0x1e57>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     911b <_IO_stdin_used+0x1e4f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     9130 <_IO_stdin_used+0x1e64>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     9158 <_IO_stdin_used+0x1e8c>
jb     914f <_IO_stdin_used+0x1e83>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    9162 <_IO_stdin_used+0x1e96>
jp     9160 <_IO_stdin_used+0x1e94>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     9167 <_IO_stdin_used+0x1e9b>
jbe    9179 <_IO_stdin_used+0x1ead>
insb   (%dx),%es:(%edi)
jne    917a <_IO_stdin_used+0x1eae>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    9188 <_IO_stdin_used+0x1ebc>
arpl   %sp,0x0(%ebp)
jne    9198 <_IO_stdin_used+0x1ecc>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
enter  $0x0,$0x0
sbb    %al,(%eax)
add    %al,(%eax)
mov    %?,-0x1(%esi)
jmp    *%esp
add    %al,(%eax)
add    %bl,-0x1(%edx,%eax,4)
lcall  *0x6c000001(%eax)
mov    $0x108ffff,%esi
add    %al,(%eax)
int3
mov    $0x130ffff,%esi
add    %al,(%eax)
mov    %?,0x154ffff(%edi)
add    %al,(%eax)
pop    %esp
ret
(bad)
dec    %eax
add    %eax,(%eax)
add    %bh,%ah
ret
(bad)
push   %esp
add    %eax,(%eax)
add    %cl,%ah
(bad)
(bad)
decl   0x0(%edx,%eax,1)
add    %bl,0x2d0ffff(%edi,%eax,8)
add    %al,(%eax)
lods   %ds:(%esi),%al
lret   $0xffff
sub    %al,(%ebx)
add    %al,(%eax)
jl     915f <_IO_stdin_used+0x1e93>
(bad)
incl   -0x31640000(%ebx,%eax,1)
(bad)
jmp    *%eax
add    (%eax),%eax
add    %ch,(%edi,%ecx,8)
(bad)
call   *(%eax)
add    $0x0,%al
add    %bl,%ah
iret
(bad)
decl   0x4(%eax)
add    %al,(%eax)
int3
sar    %cl,%edi
(bad)
mov    $0x7c000004,%eax
(bad)
(bad)
call   *(%eax)
add    $0xd85c0000,%eax
(bad)
call   *0x5(%eax)
add    %al,(%eax)
int3
fcos
call   *-0x23fffffb(%eax)
(bad)
call   *%eax
add    $0xdaec0000,%eax
(bad)
jmp    *%esp
add    $0xdb4c0000,%eax
(bad)
call   *(%eax)
push   %es
add    %al,(%eax)
mov    %ds,%ebx
(bad)
(bad)
cmp    $0x6,%al
add    %al,(%eax)
or     $0xe1,%al
(bad)
inc    %esp
push   %es
add    %al,(%eax)
jl     91db <_IO_stdin_used+0x1f0f>
(bad)
incl   (%eax)
pop    %es
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     9217 <_IO_stdin_used+0x1f4b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    0xd0ffff7d,%al
add    (%eax),%eax
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     9237 <_IO_stdin_used+0x1f6b>
js     9235 <_IO_stdin_used+0x1f69>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
and    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,-0x1(%ebp,%edi,4)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jns    9263 <_IO_stdin_used+0x1f97>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xb9ffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
xor    %bh,0x3c8ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x1800e43
add    $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
rolb   (%eax)
add    %al,(%eax)
mov    $0xa6ffff80,%esp
cmp    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa0f9203,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %cl,0x96ffff(%ecx,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,(%ecx,%eax,1)
add    %al,(%eax)
add    %al,%dl
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,-0x3d880000(%ecx,%eax,1)
(bad)
dec    %eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %al,%ah
(bad)
(bad)
decl   (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
pusha
add    (%eax),%al
add    %bh,-0x1(%edi,%eax,8)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
mov    $0xf0000002,%esp
leave
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,(%ebx)
add    %al,(%eax)
mov    $0xca,%ah
(bad)
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %dl,(%ebx,%ecx,8)
(bad)
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %al,-0x73fffffd(%eax)
lret
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,%al
add    (%eax),%eax
add    %cl,(%edi,%ecx,8)
(bad)
jmp    *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
add    $0x0,%al
add    %ah,-0x1(%ecx,%edx,8)
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    %al,(%eax,%eax,1)
add    %al,(%ebx,%edx,8)
(bad)
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
enter  $0x4,$0x0
xor    $0xd4,%al
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
or     %al,0xd5040000
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,-0x2b000000(,%eax,1)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,0x5(%eax)
add    %al,(%eax)
xor    $0xd5,%al
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
je     977b <_IO_stdin_used+0x24af>
add    %al,(%eax)
dec    %eax
aad    $0xff
(bad)
jg     9783 <_IO_stdin_used+0x24b7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cld
add    $0xda400000,%eax
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
push   %es
add    %al,(%eax)
je     9818 <_IO_stdin_used+0x254c>
(bad)
incl   (%edx)
pusha
dec    %edi
adc    %cl,0x0(%edi)
add    %al,(%eax)
dec    %esi
jbe    ad63 <_IO_stdin_used+0x3a97>
add    %ch,0x0(%eax)
add    %al,(%eax)
push   %ebx
jbe    ad73 <_IO_stdin_used+0x3aa7>
add    %ch,0x0(%esi)
add    %al,(%eax)
pop    %ebp
jbe    ad83 <_IO_stdin_used+0x3ab7>
add    %ah,0x0(%edx)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jbe    ad93 <_IO_stdin_used+0x3ac7>
add    %ah,0x0(%eax,%eax,1)
add    %bh,0x76(%ebx)
add    %al,(%eax)
push   %esi
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
repz add (%eax),%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
nop
sldt   (%eax)
or     $0xb4000000,%eax
jb     addf <_IO_stdin_used+0x3b13>
add    %bl,(%ecx)
add    %al,(%eax)
add    %al,-0x53(%eax)
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
inc    %esp
lods   %ds:(%esi),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0xf8000000
push   %es
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dl,0xb000005
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,%al
scas   %es:(%edi),%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
loopne ae3f <_IO_stdin_used+0x3b73>
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dh,0x1100000d(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     $0x120000,%eax
add    %al,(%eax)
mov    $0x0,%al
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sti
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x50(%edi)
or     $0x0,%al
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0xe(%edi)
or     $0x0,%al
add    %bh,%dl
(bad)
ljmp   *0xb(%edi)
shrb   $0x0,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%dh
sldt   (%eax)
out    %al,$0xf
add    %al,(%eax)
(bad)
sldt   (%eax)
push   %es
adc    %al,(%eax)
add    %dl,(%esi)
adc    %al,(%eax)
add    %ah,(%esi)
adc    %al,(%eax)
add    %dh,(%esi)
adc    %al,(%eax)
add    %al,0x10(%esi)
add    %al,(%eax)
push   %esi
adc    %al,(%eax)
add    %ah,0x10(%esi)
add    %al,(%eax)
jbe    af06 <_IO_stdin_used+0x3c3a>
add    %al,(%eax)
xchg   %dl,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
adc    %al,(%eax)
add    %ah,-0x49fffff0(%esi)
adc    %al,(%eax)
add    %al,%dh
adc    %al,(%eax)
add    %dl,%dh
adc    %al,(%eax)
add    %ah,%dh
adc    %al,(%eax)
add    %dh,%dh
adc    %al,(%eax)
add    %al,(%esi)
adc    %eax,(%eax)
add    %dl,(%esi)
adc    %eax,(%eax)
add    %ah,(%esi)
adc    %eax,(%eax)
add    %dh,(%esi)
adc    %eax,(%eax)
add    %al,0x11(%esi)
add    %al,(%eax)
push   %esi
adc    %eax,(%eax)
add    %ah,0x11(%esi)
add    %al,(%eax)
jbe    af47 <_IO_stdin_used+0x3c7b>
add    %al,(%eax)
xchg   %dl,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
adc    %eax,(%eax)
add    %ah,-0x49ffffef(%esi)
adc    %eax,(%eax)
add    %al,%dh
adc    %eax,(%eax)
add    %dl,%dh
adc    %eax,(%eax)
add    %ah,%dh
adc    %eax,(%eax)
add    %dh,%dh
adc    %eax,(%eax)
add    %al,(%esi)
adc    (%eax),%al
add    %dl,(%esi)
adc    (%eax),%al
add    %ah,(%esi)
adc    (%eax),%al
add    %dh,(%esi)
adc    (%eax),%al
add    %al,0x12(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%al
add    %ah,0x12(%esi)
add    %al,(%eax)
jbe    af88 <_IO_stdin_used+0x3cbc>
add    %al,(%eax)
xchg   %dl,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%al
add    %ah,-0x49ffffee(%esi)
adc    (%eax),%al
add    %al,%dh
adc    (%eax),%al
add    %dl,%dh
adc    (%eax),%al
add    %ah,%dh
adc    (%eax),%al
add    %dh,%dh
adc    (%eax),%al
add    %al,(%esi)
adc    (%eax),%eax
add    %dl,(%esi)
adc    (%eax),%eax
add    %ah,(%esi)
adc    (%eax),%eax
add    %dh,(%esi)
adc    (%eax),%eax
add    %al,0x13(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%eax
add    %ah,0x13(%esi)
add    %al,(%eax)
jbe    afc9 <_IO_stdin_used+0x3cfd>
add    %al,(%eax)
xchg   %dl,(%ebx)
add    %al,(%eax)
nop
adc    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0xb0,%al
add    %al,(%eax)
and    $0x0,%al
inc    %edx
add    %ah,0x0(%ecx)
fs
add    %bh,%bh
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
loopne afb0 <_IO_stdin_used+0x3ce4>
cmp    $0x90,%al
fs xor %dh,%fs:(%edx)
xor    $0x62,%al
aaa
arpl   %sp,0x63(%ebp)
xor    (%esi),%dh
arpl   %si,(%esi)
xor    %dh,(%ebx)
cmp    %esp,0x38(%edx)
xor    (%edx),%esi
xor    %sp,0x32(%esp,%esi,1)
xor    %esi,(%edi)
arpl   %si,(%ecx)
xor    0x65(%ebx),%esp
data16
xor    0x642e6631,%dh
bound  %esi,%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
pop    %ebp
dec    %bh
.byte 0x1d
