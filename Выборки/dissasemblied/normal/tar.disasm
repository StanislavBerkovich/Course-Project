das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,-0x6927a446(%ebp)
sbb    %dh,0x17(%eax)
loope  8048150 <_init-0x21c8>
xchg   %edi,0x67(%edx)
insl   (%dx),%es:(%edi)
pop    %ebp
outsb  %ds:(%esi),(%dx)
.byte 0xba
or     $0x99,%al
.byte 0x11
adc    %eax,(%eax)
add    %al,(%eax)
lds    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    $0x22,%al
push   $0x80080802
add    %ah,-0x3eff7ef0(%eax)
or     %bl,0x28(%eax)
add    %edi,0x4b025bf2(%ecx)
and    $0x4,%al
dec    %edx
add    %al,%ch
add    %al,(%eax)
add    %al,%dh
add    %al,(%eax)
add    %al,%bh
add    %al,(%eax)
add    %cl,%cl
add    %al,(%eax)
add    %cl,%ch
add    %al,(%eax)
add    %dl,%dl
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,%ch
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %bl,%dl
add    %al,(%eax)
add    %bl,%ch
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%dh
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %ah,%cl
add    %al,(%eax)
add    %bh,-0x146189b0(%ebp)
shr    %cl,%edi
push   %cs
(bad)
loope  8048221 <_init-0x20f7>
mov    $0xb9,%bh
(bad)
icebp
push   %cs
xchg   %dh,%al
xchg   %eax,%esi
jl     80481fd <_init-0x211b>
mov    $0x71d8eb8f,%esi
pop    %eax
sbb    $0x97,%al
mov    0x2cce9789,%al
arpl   %si,-0xa(%edx)
xchg   %eax,%ecx
jecxz  8048268 <_init-0x20b0>
lods   %ds:(%esi),%al
dec    %ebx
jecxz  804820c <_init-0x210c>
mov    $0x537c92e3,%edx
xchg   %dh,(%ebx)
mov    0x3de00ec6,%eax
dec    %ecx
pop    %ebx
int3
lds    %ds:-0xdc7bf64(%ecx),%edi
mov    (%edx,%eax,2),%ebx
inc    %ebp
aad    $0xec
lds    -0x23896ffb(%ecx),%ecx
out    %al,(%dx)
mov    %al,0xf54162e5
lret   $0xc93e
loope  8048231 <_init-0x20e7>
lahf
push   %cs
cmpsl  %es:(%edi),%ds:(%esi)
frstor 0x6155676b(%ebx)
adc    %bl,%bl
cmp    0x39ad3ce7(%ecx),%edi
or     $0x91c3d0a5,%eax
xchg   %eax,%esi
cmp    0x4f(%esi),%esi
.byte 0x29
.byte 0x1d
.byte 0x8c
.byte 0x1c
and    $0x7,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x3
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%bh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fwait
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x6(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fldl   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%esi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    80484cc <_init-0x1e4c>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addb   $0x0,(%esi)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fwait
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%esi)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x7(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%esi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x2,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x7
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cs
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x6(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
into
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x6(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x6(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x2
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fildl  (%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     8048941 <_init-0x19d7>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     804894a <_init-0x19ce>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x3
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cwtl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
call   8048a4e <_init-0x18ca>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%bx,%si),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x7,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %es:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x8(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
leave
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x6(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%edi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     8048d0e <_init-0x160a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x7(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048db1 <_init-0x1567>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edi
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x5,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x7(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %al,(%eax)
add    %al,-0x28(%eax)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
data16
add    %al,(%eax)
add    %ah,0x808(%esp,%eiz,2)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %bh,0x0(%ecx,%eax,1)
add    %dl,%al
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x18000000,%al
mov    %eax,0x804
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
xchg   %eax,%edx
push   %es
add    %al,(%eax)
shlb   $0x0,0x8(%esp,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    $0x0,%al
add    %ch,(%eax)
(bad)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
cwtl
or     %al,(%eax)
add    %dh,(%eax)
fmuls  (%ecx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %al,(%ebx)
add    (%eax),%eax
add    %al,0x40809d8(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %al,-0x7ffffff8(%ecx)
fmuls  (%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
js     8048f7d <_init-0x139b>
add    %al,(%eax)
lock bound %eax,(%edi)
or     %bh,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x12600
add    %al,%ah
or     %cl,%fs:(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verr   -0x1a9c0000(%eax,%ecx,1)
or     %ecx,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
inc    %ecx
add    $0xd8200000,%eax
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
ret
add    (%eax),%al
add    %ah,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%edi),%eax
add    %al,(%eax)
inc    %eax
jg     8048fd6 <_init-0x1342>
or     %ah,%ch
or     $0x0,%al
add    %dl,(%edx)
add    %cl,0x87700
add    %ah,-0x28(%eax)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jge    8048fef <_init-0x1329>
add    %al,(%eax)
fmuls  %fs:(%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%ecx
or     %al,(%eax)
add    %dh,(%eax)
fmuls  (%ecx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %bh,0x8(%eax)
add    %al,(%eax)
pusha
fmuls  (%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
aaa
or     %al,(%eax)
add    %ah,0x78(%eax)
pop    %es
or     %dl,0x12000000(%edi)
add    %cl,0x6d300
add    %al,-0x28(%eax)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x2c000001,%ebx
(bad)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
lods   %ds:(%esi),%al
push   %es
add    %al,(%eax)
add    %bh,0x7(%ecx)
or     %bl,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x87900
add    %ah,-0x28(%eax)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%al
add    %al,0x40809(%eax,%ebx,8)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
test   $0x9c000002,%eax
loopne 8049088 <_init-0x1290>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
loop   804908e <_init-0x128a>
add    %al,(%eax)
add    %ch,0x804(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    %eax,(%eax)
add    %al,-0x58(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esi
add    $0x0,%al
add    %ah,(%eax)
js     80490b6 <_init-0x1262>
or     %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x45700,%eax
add    %ah,0x40809d8(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
popa
arpl   %bp,0x73(%esi,%ebp,1)
outsl  %ds:(%esi),(%dx)
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8049143 <_init-0x11d5>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804916e <_init-0x11aa>
popa
jb     8049171 <_init-0x11a7>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8049163 <_init-0x11b5>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8049184 <_init-0x1194>
gs
jae    8049114 <_init-0x1204>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8049180 <_init-0x1198>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x6100,0x69(%esi),%bp
arpl   %bp,0x74(%edi,%ebx,2)
outsl  %ds:(%esi),(%dx)
pop    %edi
je     80491a2 <_init-0x1176>
js     80491b3 <_init-0x1165>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     80491a7 <_init-0x1171>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     80491c3 <_init-0x1155>
insl   (%dx),%es:(%edi)
pop    %edi
je     80491bd <_init-0x115b>
js     80491ce <_init-0x114a>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    80491c6 <_init-0x1152>
je     80491c2 <_init-0x1156>
imul   $0x695f,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
imul   $0x665f6c63,0x61(%eax,%eax,1),%esi
jb     80491da <_init-0x113e>
add    %ah,%gs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     80491de <_init-0x113a>
outsb  %gs:(%esi),(%dx)
je     80491f5 <_init-0x1123>
jns    8049185 <_init-0x1193>
popa
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     80491ec <_init-0x112c>
je     80491f0 <_init-0x1128>
addr16 pop %edi
je     804920c <_init-0x110c>
jo     80491fa <_init-0x111e>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
gs
js     8049211 <_init-0x1107>
outsb  %gs:(%esi),(%dx)
fs
gs
fs
pop    %edi
imul   $0x696c,0x0(%ebp,%eiz,2),%bp
bound  %esi,0x65(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
data16
addr16
gs
je     8049223 <_init-0x10f5>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jb     804922c <_init-0x10ec>
arpl   %bp,%gs:0x6e(%edi)
add    %ch,0x65(%edi,%eiz,2)
je     8049237 <_init-0x10e1>
imul   $0x6c006e6f,0x63(%ebp,%eiz,2),%ebp
jae    8049240 <_init-0x10d8>
je     8049243 <_init-0x10d5>
imul   $0x6c006e6f,0x63(%ebp,%eiz,2),%ebp
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8049268 <_init-0x10b0>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8049276 <_init-0x10a2>
imul   $0x7074735f,0x5f(%eax,%eax,1),%esp
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x6b(%ebp)
fs
je     804927b <_init-0x109d>
insl   (%dx),%es:(%edi)
jo     8049219 <_init-0x10ff>
jae    804928f <_init-0x1089>
jb     8049280 <_init-0x1098>
jo     8049298 <_init-0x1080>
add    %ah,0x6c(%esi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x66(%ebx)
imul   $0x6d686366,0x0(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jo     80492a7 <_init-0x1071>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     80492a6 <_init-0x1072>
arpl   %bp,0x66(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     80492ad <_init-0x106b>
push   $0x74617000
push   $0x666e6f63
add    %dh,0x65(%ebx)
je     80492c5 <_init-0x1053>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     80492d7 <_init-0x1041>
outsl  %ds:(%esi),(%dx)
ja     80492c9 <_init-0x104f>
add    %dh,0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80492d3 <_init-0x1045>
jb     8049270 <_init-0x10a8>
jae    80492e6 <_init-0x1032>
jb     80492e2 <_init-0x1036>
arpl   %bp,0x70(%ebp)
add    %ah,0x6e(%ebx,%eiz,2)
addr16
gs
je     80492f3 <_init-0x1025>
gs
js     80492f6 <_init-0x1022>
add    %ah,0x72(%ecx)
addr16 jo 80492e7 <_init-0x1031>
jo     80492fc <_init-0x101c>
outsl  %ds:(%esi),(%dx)
addr16 jb 80492ef <_init-0x1029>
insl   (%dx),%es:(%edi)
pop    %edi
jbe    80492f7 <_init-0x1021>
jb     8049307 <_init-0x1011>
imul   $0x72747300,0x6e(%edi),%ebp
jb     8049300 <_init-0x1018>
push   $0x66660072
insb   (%dx),%es:(%edi)
jne    8049318 <_init-0x1000>
push   $0x6c6e755f
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x65(%edx)
addr16
gs
js     804931b <_init-0xffd>
arpl   %ax,(%eax)
jo     8049323 <_init-0xff5>
jo     8049321 <_init-0xff7>
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x5f007461,0x6b(%esi),%ebp
pop    %edi
jae    8049340 <_init-0xfd8>
jb     8049332 <_init-0xfe6>
jne    8049340 <_init-0xfd8>
add    %dh,0x70(%edx)
insl   (%dx),%es:(%edi)
popa
je     804933a <_init-0xfde>
push   $0x67636400
gs
je     8049353 <_init-0xfc5>
gs
js     8049356 <_init-0xfc2>
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jo     804934d <_init-0xfcb>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
data16
je     8049363 <_init-0xfb5>
jne    8049361 <_init-0xfb7>
arpl   %sp,0x74(%ecx)
gs
ss
xor    $0x0,%al
addr16
gs
je     804936e <_init-0xfaa>
ja     8049375 <_init-0xfa3>
imul   $0x7378665f,0x5f(%eax,%eax,1),%esp
je     804936b <_init-0xfad>
je     804936d <_init-0xfab>
je     8049344 <_init-0xfd4>
xor    $0x0,%al
jne    8049380 <_init-0xf98>
insb   (%dx),%es:(%edi)
imul   $0x63007461,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8049383 <_init-0xf95>
imul   $0x64686366,%fs:0x0(%edx),%esi
imul   $0x67746567,0x0(%edx),%esi
jb     8049396 <_init-0xf82>
imul   $0x6669666b,0x6d(%eax,%eax,1),%esp
outsl  %ds:(%esi),(%dx)
popa
je     804933b <_init-0xfdd>
jae    80493a6 <_init-0xf72>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     80493b4 <_init-0xf64>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     80493b9 <_init-0xf5f>
add    %bl,0x5f(%edi)
jae    80493c7 <_init-0xf51>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x68637475,0x70(%eax,%eax,1),%ebp
popa
jb     8049368 <_init-0xfb0>
imul   $0x6e697270,0x77(%ebx),%esi
je     8049371 <_init-0xfa7>
popa
jb     80493db <_init-0xf3d>
jo     80493d5 <_init-0xf43>
jo     80493ea <_init-0xf2e>
outsl  %ds:(%esi),(%dx)
addr16 jb 80493dd <_init-0xf3b>
insl   (%dx),%es:(%edi)
pop    %edi
jbe    80493e5 <_init-0xf33>
jb     80493f5 <_init-0xf23>
imul   $0x6f6f685f,0x6e(%edi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jae    804940f <_init-0xf09>
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     804939f <_init-0xf79>
jae    8049415 <_init-0xf03>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     80493ab <_init-0xf6d>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     804941a <_init-0xefe>
push   $0x736c0072
gs
je     8049437 <_init-0xee1>
popa
je     8049436 <_init-0xee2>
jb     80493c4 <_init-0xf54>
addr16
gs
je     8049438 <_init-0xee0>
imul   $0x72676f72,0x70(%eax,%eax,1),%esp
popa
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %ah,%gs:0x72(%ebx)
gs
popa
je     804941f <_init-0xef9>
xor    $0x0,%al
pop    %edi
pop    %edi
popa
jae    8049463 <_init-0xeb5>
gs
jb     8049467 <_init-0xeb1>
pop    %edi
popaw
imul   $0x6d69746d,0x67(%eax,%eax,1),%ebp
add    %bl,%gs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     804946b <_init-0xead>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8049484 <_init-0xe94>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8049417 <_init-0xf01>
jae    804948d <_init-0xe8b>
jb     804948f <_init-0xe89>
outsl  %ds:(%esi),(%dx)
imul   $0x73,(%eax),%eax
je     8049493 <_init-0xe85>
je     8049492 <_init-0xe86>
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     804948c <_init-0xe8c>
push   $0x6c756e72
add    %ah,0x67(%esi)
gs
je     80494ac <_init-0xe6c>
popa
je     80494ab <_init-0xe6d>
jb     8049439 <_init-0xedf>
gs
js     80494a1 <_init-0xe77>
arpl   %bp,0x0(%eax,%esi,2)
popa
jb     80494aa <_init-0xe6e>
jo     80494a4 <_init-0xe74>
popaw
imul   $0x5f5f0065,0x72(%ebp,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     80494b7 <_init-0xe61>
outsb  %ds:(%esi),(%dx)
popa
je     804948c <_init-0xe8c>
xor    $0x5f,%al
xor    (%eax),%al
addr16
gs
je     80494ce <_init-0xe4a>
ja     80494ce <_init-0xe4a>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jb     80494d1 <_init-0xe47>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
popa
je     8049473 <_init-0xea5>
data16
jne    80494ea <_init-0xe2e>
imul   $0x7300736e,0x65(%ebp),%ebp
je     80494f1 <_init-0xe27>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     80494ec <_init-0xe2c>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    80494f4 <_init-0xe24>
je     8049491 <_init-0xe87>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
arpl   %bp,%gs:0x6e(%edi)
jbe    804949c <_init-0xe7c>
jne    8049512 <_init-0xe06>
imul   $0x7461736e,0x65(%ebp),%ebp
add    %bl,0x5f(%edi)
gs
jb     804951d <_init-0xdfb>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x61657200,0x6e(%edi),%ebp
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8049537 <_init-0xde1>
popa
addr16
gs
jae    8049535 <_init-0xde3>
jp     8049533 <_init-0xde5>
add    %dh,0x74(%ebx)
jb     8049541 <_init-0xdd7>
fs
jne    8049546 <_init-0xdd2>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     804953f <_init-0xdd9>
jo     8049557 <_init-0xdc1>
add    %ah,0x63(%esi)
push   $0x61646f6d
je     80494e8 <_init-0xe30>
fs
jne    804955b <_init-0xdbd>
xor    (%eax),%al
jne    804955d <_init-0xdbb>
jae    8049556 <_init-0xdc2>
je     8049558 <_init-0xdc0>
outsb  %ds:(%esi),(%dx)
jbe    80494f6 <_init-0xe22>
pop    %edi
pop    %edi
data16
js     804956e <_init-0xdaa>
je     804955e <_init-0xdba>
je     8049535 <_init-0xde3>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8049578 <_init-0xda0>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     804957a <_init-0xd9e>
jb     8049583 <_init-0xd95>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x63(%esi)
push   $0x6e776f
jae    8049595 <_init-0xd83>
outsl  %fs:(%esi),(%dx)
jne    8049599 <_init-0xd7f>
add    %ah,0x72(%ecx)
addr16 jo 804958a <_init-0xd8e>
push   $0x706c65
data16
jo     80495a8 <_init-0xd70>
je     8049598 <_init-0xd80>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %bl,0x5f(%edi)
jae    80495b7 <_init-0xd61>
jb     80495b9 <_init-0xd5f>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x70(%esi)
jne    80495ca <_init-0xd4e>
jae    8049558 <_init-0xdc0>
jb     80495bf <_init-0xd59>
addr16
gs
jb     80495d0 <_init-0xd48>
outsl  %ds:(%esi),(%dx)
jb     8049561 <_init-0xdb7>
popa
jb     80495cb <_init-0xd4d>
jo     80495c5 <_init-0xd53>
jo     80495da <_init-0xd3e>
outsl  %ds:(%esi),(%dx)
addr16 jb 80495cd <_init-0xd4b>
insl   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x67(%ebp)
pop    %edi
popa
fs
fs
jb     80495dc <_init-0xd3c>
jae    80495ec <_init-0xd2c>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80495ec <_init-0xd2c>
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x5f007461,0x6b(%esi),%ebp
pop    %edi
jbe    8049609 <_init-0xd0f>
outsb  %ds:(%esi),(%dx)
jo     804960b <_init-0xd0d>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8049617 <_init-0xd01>
je     8049616 <_init-0xd02>
jne    8049615 <_init-0xd03>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8049620 <_init-0xcf8>
popa
jae    8049621 <_init-0xcf7>
add    %dh,0x74(%ebx)
jb     804961e <_init-0xcfa>
popa
jae    8049623 <_init-0xcf5>
arpl   %bp,0x70(%ebp)
add    %ah,0x74(%esi)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
outsw  %fs:(%esi),(%dx)
jo     8049635 <_init-0xce3>
outsb  %ds:(%esi),(%dx)
imul   $0x73696172,%fs:0x0(%edx),%esi
add    %ch,%gs:0x62(%ebp)
jae    8049648 <_init-0xcd0>
outsb  %ds:(%esi),(%dx)
imul   $0x69677465,0x67(%eax,%eax,1),%esi
add    %bl,%fs:0x5f(%edi)
insb   (%dx),%es:(%edi)
js     8049662 <_init-0xcb6>
je     8049652 <_init-0xcc6>
je     8049629 <_init-0xcef>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    804965f <_init-0xcb9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80495fd <_init-0xd1b>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x7261006f,0x66(%bp),%ebp
addr16 jo 804966d <_init-0xcab>
gs
jb     8049683 <_init-0xc95>
pop    %edi
gs
js     804967e <_init-0xc9a>
je     8049676 <_init-0xca2>
jae    804968d <_init-0xc8b>
popa
je     8049691 <_init-0xc87>
jae    804961e <_init-0xcfa>
pop    %edi
pop    %edi
js     8049695 <_init-0xc83>
je     8049685 <_init-0xc93>
je     804965c <_init-0xcbc>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     804969f <_init-0xc79>
outsb  %ds:(%esi),(%dx)
jbe    804963d <_init-0xcdb>
jb     80496a4 <_init-0xc74>
arpl   %bp,0x6d(%bx)
jo     8049645 <_init-0xcd3>
jae    80496bb <_init-0xc5d>
fs
gs
jb     80496bd <_init-0xc5b>
add    %dh,0x63(%edi)
ja     80496b9 <_init-0xc5f>
fs
je     80496bb <_init-0xc5d>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
data16
arpl   %bp,0x6f(%eax)
ja     80496ce <_init-0xc4a>
popa
je     8049663 <_init-0xcb5>
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
outsb  %ds:(%esi),(%dx)
gs
ja     80496d3 <_init-0xc45>
push   $0x6b6e75
addr16
gs
je     80496e1 <_init-0xc37>
outsl  %ds:(%esi),(%dx)
jae    80496f0 <_init-0xc28>
bound  %edi,0x6e(%ecx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jae    80496f5 <_init-0xc23>
jo     80496fb <_init-0xc1d>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
imul   $0x61,0x72(%ecx,%ebp,2),%esp
je     804969a <_init-0xc7e>
addr16
gs
je     8049713 <_init-0xc05>
imul   $0x6e616373,0x66(%eax,%eax,1),%esp
data16
add    %ah,0x78(%ebp)
arpl   %si,%gs:0x70(%esi)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp)
imul   $0x65670073,0x65(%ebp),%ebp
je     8049724 <_init-0xbf4>
ja     8049727 <_init-0xbf1>
add    %bl,0x5f(%edi)
addr16
gs
je     804972e <_init-0xbea>
gs
insb   (%dx),%es:(%edi)
imul   $0x7465676c,0x0(%ebp),%ebp
js     8049736 <_init-0xbe2>
je     804974b <_init-0xbcd>
jb     80496d9 <_init-0xc3f>
data16
ja     804974e <_init-0xbca>
imul   $0x74746567,0x0(%ebp,%eiz,2),%esi
imul   $0x6164666f,0x65(%ebp),%ebp
jns    80496ed <_init-0xc2b>
addr16
gs
je     8049756 <_init-0xbc2>
jne    804975c <_init-0xbbc>
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     8049780 <_init-0xb98>
imul   $0x69617700,0x65(%ebp),%ebp
je     8049785 <_init-0xb93>
imul   $0x6570665f,0x5f(%eax,%eax,1),%esp
outsb  %ds:(%esi),(%dx)
imul   $0x72747300,%fs:0x67(%esi),%ebp
gs
jb     804979b <_init-0xb7d>
outsl  %ds:(%esi),(%dx)
jb     804978b <_init-0xb8d>
jb     804972e <_init-0xbea>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
je     804979e <_init-0xb7a>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%ebx,%esi,2)
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     80497a7 <_init-0xb71>
push   $0x6c660072
imul   $0x74746178,0x74(%ebx),%esi
jb     8049752 <_init-0xbc6>
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
data16
jb     80497c2 <_init-0xb56>
add    %ch,%gs:0x73(%ecx)
ja     80497c6 <_init-0xb52>
outsb  %ds:(%esi),(%dx)
je     80497d8 <_init-0xb40>
insb   (%dx),%es:(%edi)
add    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x66(%ebx)
imul   $0x70677261,0x0(%ebp,%eiz,2),%ebp
pop    %edi
gs
jb     80497ee <_init-0xb2a>
outsl  %ds:(%esi),(%dx)
jb     804977f <_init-0xb99>
pop    %edi
pop    %edi
jbe    80497e9 <_init-0xb2f>
jo     80497f7 <_init-0xb21>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
imul   $0x65,0x6d(%ecx,%ebp,2),%esi
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    804979b <_init-0xb7d>
jo     804980f <_init-0xb09>
outsl  %ds:(%esi),(%dx)
addr16 jb 8049802 <_init-0xb16>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8049827 <_init-0xaf1>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8049823 <_init-0xaf5>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     8049843 <_init-0xad5>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8049835 <_init-0xae3>
outsl  %ds:(%esi),(%dx)
jo     804983e <_init-0xada>
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%ecx)
addr16 jo 804983f <_init-0xad9>
jo     8049843 <_init-0xad5>
jb     8049857 <_init-0xac1>
add    %dh,%gs:0x6c(%ebx)
gs
gs
jo     80497ec <_init-0xb2c>
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8049865 <_init-0xab3>
jne    8049868 <_init-0xab0>
jo     804985f <_init-0xab9>
jb     804985b <_init-0xabd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    8049878 <_init-0xaa0>
jb     8049869 <_init-0xaaf>
jo     8049881 <_init-0xa97>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8049886 <_init-0xa92>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049880 <_init-0xa98>
jb     804987c <_init-0xa9c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x74746178,0x74(%ebx),%esi
jb     804982c <_init-0xaec>
pop    %edi
pop    %edi
jbe    8049891 <_init-0xa87>
jae    80498a2 <_init-0xa76>
jb     804989d <_init-0xa7b>
outsb  %ds:(%esi),(%dx)
je     804989d <_init-0xa7b>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     80498ad <_init-0xa6b>
add    %bl,0x5f(%edi)
jae    80498b6 <_init-0xa62>
jb     80498b1 <_init-0xa67>
outsb  %ds:(%esi),(%dx)
je     80498b1 <_init-0xa67>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x75(%esi)
je     80498bd <_init-0xa5b>
insl   (%dx),%es:(%edi)
gs
jae    80498b9 <_init-0xa5f>
je     804985a <_init-0xabe>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80498c6 <_init-0xa52>
add    %ah,0x6f(%esi)
jo     80498cb <_init-0xa4d>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
bound  %esp,0x67(%ebp)
imul   $0x646e6962,0x0(%esi),%ebp
je     80498e4 <_init-0xa34>
js     80498f5 <_init-0xa23>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8049901 <_init-0xa17>
add    %dh,0x65(%ebx)
je     80498fa <_init-0xa1e>
imul   $0x7274735f,0x5f(%eax,%eax,1),%esp
arpl   %sp,0x74(%ecx)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     80498e0 <_init-0xa38>
xor    $0x0,%al
data16
ja     8049921 <_init-0x9f7>
imul   $0x6f6c6e75,0x5f(%ebp,%eiz,2),%esi
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     8049923 <_init-0x9f5>
insl   (%dx),%es:(%edi)
jo     80498c3 <_init-0xa55>
pop    %edi
pop    %edi
jae    804993b <_init-0x9dd>
jb     804993d <_init-0x9db>
outsl  %ds:(%esi),(%dx)
jne    8049938 <_init-0x9e0>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8049940 <_init-0x9d8>
jb     804994f <_init-0x9c9>
outsl  %ds:(%esi),(%dx)
jb     80498e0 <_init-0xa38>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049960 <_init-0x9b8>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %dh,%fs:0x74(%ebx)
jo     804995f <_init-0x9b9>
jo     8049977 <_init-0x9a1>
add    %ah,0x72(%ecx)
addr16 jo 8049963 <_init-0x9b5>
jae    804997a <_init-0x99e>
popa
je     804996e <_init-0x9aa>
pop    %edi
push   $0x706c65
pop    %edi
pop    %edi
outsl  %ds:(%esi),(%dx)
jbe    8049979 <_init-0x99f>
jb     804997c <_init-0x99c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804991a <_init-0x9fe>
pop    %edi
pop    %edi
js     804998b <_init-0x98d>
imul   $0x64,0x6f(%esi),%ebp
popa
je     8049925 <_init-0x9f3>
data16
jo     804999d <_init-0x97b>
je     804999d <_init-0x97b>
pop    %edi
jne    804999b <_init-0x97d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x5f(%edi)
jo     80499aa <_init-0x96e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    80499ae <_init-0x96a>
jb     80499b6 <_init-0x962>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
jo     80499bf <_init-0x959>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    80499c3 <_init-0x955>
insb   (%dx),%es:(%edi)
add    %bl,0x65(%edi)
fs
popa
je     80499c0 <_init-0x958>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    80499dc <_init-0x93c>
popa
jb     80499df <_init-0x939>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x43(%ecx)
dec    %esp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x6000300,%eax
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,0x3000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%edi)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
or     (%eax),%eax
add    (%eax),%eax
or     $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
or     (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0xb00,%eax
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
pop    %es
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,0x3000d00
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
or     (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
pop    %es
add    %al,(%eax,%eax,1)
add    $0x4000500,%eax
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0xc000600
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    $0x5000200,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %cl,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    $0xc000700,%eax
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
or     $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
or     (%eax),%al
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%eax
add    $0x3000100,%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %eax
and    $0x82,%al
add    $0xb0000,%eax
test   $0x8,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %cl,(%eax,%eax,1)
sbb    $0x1,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jno    8049c11 <_init-0x707>
imul   $0xe0000,(%ecx),%ecx
mov    $0x8,%cl
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %ch,0x69(%ecx)
or     $0xd0000,%eax
mov    $0x10000008,%ebp
add    %al,(%eax)
add    %dl,(%edx)
imul   $0xc0000,0xd(%ecx),%ebp
(bad)
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1a(%ebx)
imul   $0xa0000,(%ecx),%ecx
rorl   (%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
or     %eax,(%eax)
fisttpll (%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %ss
imul   $0x80000,0xd(%ecx),%ebp
call   18049c55 <_end+0xffab6f1>
add    %al,(%eax)
add    %dl,(%ecx)
imul   $0x70000,0xd(%ecx),%ebp
repnz or %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
imul   $0x60000,0xd(%ecx),%ebp
cld
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x906,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
je     8049c9b <_init-0x67d>
imul   $0x40000,(%ecx),%ecx
adc    %cl,(%ecx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
sbb    $0x9,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x20000,%eax
or     %eax,%es:(%eax)
add    %al,(%eax)
add    %al,(%eax)
cld
mov    $0x51060809,%edi
add    %al,(%eax)
inc    %eax
fmuls  (%ecx)
or     %al,0x600000c5
fmuls  (%ecx)
or     %al,0x640000d4
fmuls  (%ecx)
or     %al,0x800000d5
fmuls  (%ecx)
or     %al,0x840000cd
fmuls  (%ecx)
or     %al,0xa00000dd
fmuls  (%ecx)
.byte 0x8
.byte 0x5
loop   8049ce7 <_init-0x631>
or     $0xc0,%al
or     %ecx,(%eax)
pop    %es
add    %eax,(%eax)
add    %dl,(%eax)
rorb   $0x8,(%ecx)
pop    %es
add    (%eax),%al
add    %dl,(%eax,%eax,8)
or     %ecx,(%eax)
pop    %es
add    (%eax),%eax
add    %bl,(%eax)
rorb   $0x8,(%ecx)
pop    %es
add    $0x0,%al
add    %bl,(%eax,%eax,8)
or     %ecx,(%eax)
pop    %es
add    $0xc0200000,%eax
or     %ecx,(%eax)
pop    %es
push   %es
add    %al,(%eax)
and    $0xc0,%al
or     %ecx,(%eax)
pop    %es
pop    %es
add    %al,(%eax)
sub    %al,%al
or     %ecx,(%eax)
pop    %es
or     %al,(%eax)
add    %ch,(%eax,%eax,8)
or     %ecx,(%eax)
pop    %es
or     %eax,(%eax)
add    %dh,(%eax)
rorb   $0x8,(%ecx)
pop    %es
or     (%eax),%al
add    %dh,(%eax,%eax,8)
or     %ecx,(%eax)
pop    %es
or     (%eax),%eax
add    %bh,(%eax)
rorb   $0x8,(%ecx)
pop    %es
or     $0x0,%al
add    %bh,(%eax,%eax,8)
or     %ecx,(%eax)
pop    %es
or     $0xc0400000,%eax
or     %ecx,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
inc    %esp
rorb   $0x8,(%ecx)
pop    %es
adc    %al,(%eax)
add    %cl,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
adc    %eax,(%eax)
add    %cl,0x9(%eax,%eax,8)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
adc    (%eax),%eax
add    %dl,0x9(%eax,%eax,8)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
adc    $0xc05c0000,%eax
or     %ecx,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
pusha
rorb   $0x8,(%ecx)
pop    %es
pop    %ss
add    %al,(%eax)
rorb   $0x8,%fs:(%ecx)
pop    %es
sbb    %al,(%eax)
add    %ch,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
leave
add    %al,(%eax)
insb   (%dx),%es:(%edi)
rorb   $0x8,(%ecx)
pop    %es
sbb    %eax,(%eax)
add    %dh,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
sbb    (%eax),%al
add    %dh,0x9(%eax,%eax,8)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x40(%eax)
or     %ecx,(%eax)
pop    %es
sbb    $0x0,%al
add    %bh,0x9(%eax,%eax,8)
or     %al,(%edi)
sbb    $0xc0800000,%eax
or     %ecx,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
test   %al,%al
or     %ecx,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
mov    %al,%al
or     %ecx,(%eax)
pop    %es
and    %al,(%eax)
add    %cl,0x21070809(%eax,%eax,8)
add    %al,(%eax)
nop
rorb   $0x8,(%ecx)
pop    %es
and    (%eax),%al
add    %dl,0x23070809(%eax,%eax,8)
add    %al,(%eax)
cwtl
rorb   $0x8,(%ecx)
pop    %es
and    $0x0,%al
add    %bl,0x25070809(%eax,%eax,8)
add    %al,(%eax)
mov    0x70809c0,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
rorb   $0x8,(%ecx)
pop    %es
daa
add    %al,(%eax)
test   $0xc0,%al
or     %ecx,(%eax)
pop    %es
sub    %al,(%eax)
add    %ch,0x29070809(%eax,%eax,8)
add    %al,(%eax)
mov    $0xc0,%al
or     %ecx,(%eax)
pop    %es
sub    (%eax),%al
add    %dh,0x2b070809(%eax,%eax,8)
add    %al,(%eax)
mov    $0x70809c0,%eax
sub    $0x0,%al
add    %bh,0x2d070809(%eax,%eax,8)
add    %al,(%eax)
rol    $0x9,%al
or     %al,(%edi)
add    %al,%cs:(%eax)
(bad)
rorb   $0x8,(%ecx)
pop    %es
das
add    %al,(%eax)
enter  $0x9c0,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
rorb   $0x8,(%ecx)
pop    %es
xor    %eax,(%eax)
add    %dl,%al
rorb   $0x8,(%ecx)
pop    %es
xor    (%eax),%al
add    %dl,%ah
rorb   $0x8,(%ecx)
pop    %es
xor    (%eax),%eax
add    %bl,%al
rorb   $0x8,(%ecx)
pop    %es
xor    $0x0,%al
add    %bl,%ah
rorb   $0x8,(%ecx)
pop    %es
xor    $0xc0e00000,%eax
or     %ecx,(%eax)
pop    %es
add    %al,%ss:(%eax)
in     $0xc0,%al
or     %ecx,(%eax)
pop    %es
aaa
add    %al,(%eax)
call   f0ca865 <_end+0x702c301>
cmp    %al,(%eax)
add    %ch,%ah
rorb   $0x8,(%ecx)
pop    %es
movl   $0x9c0f000,(%eax)
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dh,%ah
rorb   $0x8,(%ecx)
pop    %es
cmp    (%eax),%al
add    %bh,%al
rorb   $0x8,(%ecx)
pop    %es
cmp    (%eax),%eax
add    %bh,%ah
rorb   $0x8,(%ecx)
pop    %es
cmp    $0x0,%al
add    %al,(%eax)
rorl   $0x8,(%ecx)
pop    %es
cmp    $0xc1040000,%eax
or     %ecx,(%eax)
pop    %es
add    %al,%ds:(%eax)
or     %al,%cl
or     %ecx,(%eax)
pop    %es
aas
add    %al,(%eax)
or     $0xc1,%al
or     %ecx,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
adc    %al,%cl
or     %ecx,(%eax)
pop    %es
inc    %ecx
add    %al,(%eax)
adc    $0xc1,%al
or     %ecx,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
sbb    %al,%cl
or     %ecx,(%eax)
pop    %es
inc    %ebx
add    %al,(%eax)
sbb    $0xc1,%al
or     %ecx,(%eax)
pop    %es
inc    %esp
add    %al,(%eax)
and    %al,%cl
or     %ecx,(%eax)
pop    %es
inc    %ebp
add    %al,(%eax)
and    $0xc1,%al
or     %ecx,(%eax)
pop    %es
inc    %esi
add    %al,(%eax)
sub    %al,%cl
or     %ecx,(%eax)
pop    %es
inc    %edi
add    %al,(%eax)
sub    $0xc1,%al
or     %ecx,(%eax)
pop    %es
dec    %eax
add    %al,(%eax)
xor    %al,%cl
or     %ecx,(%eax)
pop    %es
rolb   %cl,(%eax)
add    %dh,(%ecx,%eax,8)
or     %ecx,(%eax)
pop    %es
dec    %ecx
add    %al,(%eax)
cmp    %al,%cl
or     %ecx,(%eax)
pop    %es
fild   (%eax)
add    %bh,(%ecx,%eax,8)
or     %ecx,(%eax)
pop    %es
dec    %edx
add    %al,(%eax)
inc    %eax
rorl   $0x8,(%ecx)
pop    %es
dec    %ebx
add    %al,(%eax)
inc    %esp
rorl   $0x8,(%ecx)
pop    %es
dec    %esp
add    %al,(%eax)
dec    %eax
rorl   $0x8,(%ecx)
pop    %es
loopne 8049f67 <_init-0x3b1>
add    %cl,0x9(%ecx,%eax,8)
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
push   %eax
rorl   $0x8,(%ecx)
pop    %es
dec    %esi
add    %al,(%eax)
push   %esp
rorl   $0x8,(%ecx)
pop    %es
dec    %edi
add    %al,(%eax)
pop    %eax
rorl   $0x8,(%ecx)
pop    %es
push   %eax
add    %al,(%eax)
pop    %esp
rorl   $0x8,(%ecx)
pop    %es
push   %ecx
add    %al,(%eax)
pusha
rorl   $0x8,(%ecx)
pop    %es
push   %edx
add    %al,(%eax)
rorl   $0x8,%fs:(%ecx)
pop    %es
push   %ebx
add    %al,(%eax)
push   $0x70809c1
push   %esp
add    %al,(%eax)
insb   (%dx),%es:(%edi)
rorl   $0x8,(%ecx)
pop    %es
push   %ebp
add    %al,(%eax)
jo     8049f73 <_init-0x3a5>
or     %ecx,(%eax)
pop    %es
push   %esi
add    %al,(%eax)
je     8049f7b <_init-0x39d>
or     %ecx,(%eax)
pop    %es
push   %edi
add    %al,(%eax)
js     8049f83 <_init-0x395>
or     %ecx,(%eax)
pop    %es
pop    %eax
add    %al,(%eax)
jl     8049f8b <_init-0x38d>
or     %ecx,(%eax)
pop    %es
pop    %ecx
add    %al,(%eax)
add    $0x9,%cl
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
test   %al,%cl
or     %ecx,(%eax)
pop    %es
pop    %ebx
add    %al,(%eax)
mov    %al,%cl
or     %ecx,(%eax)
pop    %es
pop    %esp
add    %al,(%eax)
mov    %es,%ecx
or     %ecx,(%eax)
pop    %es
pop    %ebp
add    %al,(%eax)
nop
rorl   $0x8,(%ecx)
pop    %es
pop    %esi
add    %al,(%eax)
xchg   %eax,%esp
rorl   $0x8,(%ecx)
pop    %es
pop    %edi
add    %al,(%eax)
cwtl
rorl   $0x8,(%ecx)
pop    %es
pusha
add    %al,(%eax)
pushf
rorl   $0x8,(%ecx)
pop    %es
popa
add    %al,(%eax)
mov    0x70809c1,%al
bound  %eax,(%eax)
add    %ah,0x63070809(%ecx,%eax,8)
add    %al,(%eax)
test   $0xc1,%al
or     %ecx,(%eax)
pop    %es
add    %al,%fs:(%eax)
lods   %ds:(%esi),%al
rorl   $0x8,(%ecx)
pop    %es
add    %al,%gs:(%eax)
mov    $0xc1,%al
or     %ecx,(%eax)
pop    %es
data16
add    %al,(%eax)
mov    $0xc1,%ah
or     %ecx,(%eax)
pop    %es
add    %al,(%bx,%si)
mov    $0x70809c1,%eax
push   $0xc1bc0000
or     %ecx,(%eax)
pop    %es
imul   $0x9c1c000,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %al,%ah
rorl   $0x8,(%ecx)
pop    %es
imul   $0x0,(%eax),%eax
enter  $0x9c1,$0x8
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
int3
rorl   $0x8,(%ecx)
pop    %es
insl   (%dx),%es:(%edi)
add    %al,(%eax)
rol    %cl
or     %ecx,(%eax)
pop    %es
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
aam    $0xc1
or     %ecx,(%eax)
pop    %es
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
fadd   %st(1),%st
or     %ecx,(%eax)
pop    %es
jo     804a087 <_init-0x291>
add    %bl,%ah
rorl   $0x8,(%ecx)
pop    %es
jno    804a08f <_init-0x289>
add    %ah,%al
rorl   $0x8,(%ecx)
pop    %es
jb     804a097 <_init-0x281>
add    %ah,%ah
rorl   $0x8,(%ecx)
pop    %es
jae    804a09f <_init-0x279>
add    %ch,%al
rorl   $0x8,(%ecx)
pop    %es
je     804a0a7 <_init-0x271>
add    %ch,%ah
rorl   $0x8,(%ecx)
pop    %es
jne    804a0af <_init-0x269>
add    %dh,%al
rorl   $0x8,(%ecx)
pop    %es
jbe    804a0b7 <_init-0x261>
add    %dh,%ah
rorl   $0x8,(%ecx)
pop    %es
ja     804a0bf <_init-0x259>
add    %bh,%al
rorl   $0x8,(%ecx)
pop    %es
js     804a0c7 <_init-0x251>
add    %bh,%ah
rorl   $0x8,(%ecx)
pop    %es
jns    804a0cf <_init-0x249>
add    %al,(%eax)
ret    $0x809
pop    %es
jp     804a0d7 <_init-0x241>
add    %al,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
jnp    804a0df <_init-0x239>
add    %cl,(%eax)
ret    $0x809
pop    %es
jl     804a0e7 <_init-0x231>
add    %cl,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
jge    804a0ef <_init-0x229>
add    %dl,(%eax)
ret    $0x809
pop    %es
jle    804a0f7 <_init-0x221>
add    %dl,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
jg     804a0ff <_init-0x219>
add    %bl,(%eax)
ret    $0x809
pop    %es
addb   $0x0,(%eax)
sbb    $0xc2,%al
or     %ecx,(%eax)
pop    %es
addl   $0x9c22000,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
and    $0xc2,%al
or     %ecx,(%eax)
pop    %es
addl   $0x0,(%eax)
sub    %al,%dl
or     %ecx,(%eax)
pop    %es
test   %al,(%eax)
add    %ch,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
test   %eax,(%eax)
add    %dh,(%eax)
ret    $0x809
pop    %es
xchg   %al,(%eax)
add    %dh,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
xchg   %eax,(%eax)
add    %bh,(%eax)
ret    $0x809
pop    %es
mov    %al,(%eax)
add    %bh,(%edx,%eax,8)
or     %ecx,(%eax)
pop    %es
mov    %eax,(%eax)
add    %al,-0x3e(%eax)
or     %ecx,(%eax)
pop    %es
mov    (%eax),%al
add    %al,0x9(%edx,%eax,8)
or     %al,(%edi)
mov    (%eax),%eax
add    %cl,-0x3e(%eax)
or     %ecx,(%eax)
pop    %es
mov    %es,(%eax)
add    %cl,0x9(%edx,%eax,8)
or     %al,(%edi)
lea    (%eax),%eax
add    %dl,-0x3e(%eax)
or     %ecx,(%eax)
pop    %es
mov    (%eax),%es
add    %dl,0x9(%edx,%eax,8)
or     %al,(%edi)
popl   (%eax)
add    %bl,-0x3e(%eax)
or     %ecx,(%eax)
pop    %es
nop
add    %al,(%eax)
pop    %esp
ret    $0x809
pop    %es
xchg   %eax,%ecx
add    %al,(%eax)
pusha
ret    $0x809
pop    %es
xchg   %eax,%edx
add    %al,(%eax)
fs
ret    $0x809
pop    %es
xchg   %eax,%ebx
add    %al,(%eax)
push   $0x70809c2
xchg   %eax,%esp
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ret    $0x809
pop    %es
xchg   %eax,%ebp
add    %al,(%eax)
jo     804a174 <_init-0x1a4>
or     %ecx,(%eax)
pop    %es
xchg   %eax,%esi
add    %al,(%eax)
je     804a17c <_init-0x19c>
or     %ecx,(%eax)
pop    %es
xchg   %eax,%edi
add    %al,(%eax)
js     804a184 <_init-0x194>
or     %ecx,(%eax)
pop    %es
cltd
add    %al,(%eax)
jl     804a18c <_init-0x18c>
or     %ecx,(%eax)
pop    %es
lcall  $0x809,$0xc2800000
pop    %es
fwait
add    %al,(%eax)
test   %al,%dl
or     %ecx,(%eax)
pop    %es
pushf
add    %al,(%eax)
mov    %al,%dl
or     %ecx,(%eax)
pop    %es
popf
add    %al,(%eax)
mov    %es,%edx
or     %ecx,(%eax)
pop    %es
sahf
add    %al,(%eax)
nop
ret    $0x809
pop    %es
lahf
add    %al,(%eax)
xchg   %eax,%esp
ret    $0x809
pop    %es
mov    0xc2980000,%al
or     %ecx,(%eax)
pop    %es
mov    0xc29c0000,%eax
or     %ecx,(%eax)
pop    %es
mov    %al,0xc2a00000
or     %ecx,(%eax)
pop    %es
mov    %eax,0xc2a40000
or     %ecx,(%eax)
pop    %es
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
test   $0xc2,%al
or     %ecx,(%eax)
pop    %es
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
lods   %ds:(%esi),%al
ret    $0x809
pop    %es
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
mov    $0xc2,%al
or     %ecx,(%eax)
pop    %es
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
mov    $0xc2,%ah
or     %ecx,(%eax)
pop    %es
test   $0x0,%al
add    %bh,0x70809c2(%eax)
test   $0xc2bc0000,%eax
or     %ecx,(%eax)
pop    %es
stos   %al,%es:(%edi)
add    %al,(%eax)
rol    $0x9,%dl
or     %al,(%edi)
lods   %ds:(%esi),%al
add    %al,(%eax)
(bad)
or     %ecx,(%eax)
pop    %es
lods   %ds:(%esi),%eax
add    %al,(%eax)
enter  $0x9c2,$0x8
pop    %es
scas   %es:(%edi),%al
add    %al,(%eax)
int3
ret    $0x809
pop    %es
scas   %es:(%edi),%eax
add    %al,(%eax)
rol    %dl
or     %ecx,(%eax)
pop    %es
mov    $0x0,%al
add    %dl,%ah
ret    $0x809
pop    %es
mov    $0x0,%cl
add    %bl,%al
ret    $0x809
pop    %es
mov    $0x0,%dl
add    %bl,%ah
ret    $0x809
pop    %es
mov    $0x0,%bl
add    %ah,%al
ret    $0x809
pop    %es
mov    $0x0,%ah
add    %ah,%ah
ret    $0x809
pop    %es
mov    $0x0,%ch
add    %ch,%al
ret    $0x809
pop    %es
mov    $0x0,%dh
add    %ch,%ah
ret    $0x809
pop    %es
mov    $0x0,%bh
add    %dh,%al
ret    $0x809
pop    %es
mov    $0xc2f40000,%eax
or     %ecx,(%eax)
pop    %es
mov    $0xc2f80000,%ecx
or     %ecx,(%eax)
pop    %es
mov    $0xc2fc0000,%edx
or     %ecx,(%eax)
pop    %es
mov    $0xc3000000,%ebx
or     %ecx,(%eax)
pop    %es
mov    $0xc3040000,%esp
or     %ecx,(%eax)
pop    %es
mov    $0xc3080000,%ebp
or     %ecx,(%eax)
pop    %es
mov    $0xc30c0000,%esi
or     %ecx,(%eax)
pop    %es
mov    $0xc3100000,%edi
or     %ecx,(%eax)
pop    %es
rolb   $0x0,(%eax)
adc    $0xc3,%al
or     %ecx,(%eax)
pop    %es
roll   $0x0,(%eax)
sbb    %al,%bl
or     %ecx,(%eax)
pop    %es
ret    $0x0
sbb    $0xc3,%al
or     %ecx,(%eax)
pop    %es
ret
add    %al,(%eax)
and    %al,%bl
or     %ecx,(%eax)
pop    %es
les    (%eax),%eax
push   %ebx
sub    $0x8,%esp
call   804c040 <fchmod@plt+0x10a0>
add    $0x51cdf,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804a336 <_init+0x1e>
call   804a890 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x809c004
jmp    *0x809c008
add    %al,(%eax)
jmp    *0x809c00c
push   $0x0
jmp    804a340 <_init+0x28>
jmp    *0x809c010
push   $0x8
jmp    804a340 <_init+0x28>
jmp    *0x809c014
push   $0x10
jmp    804a340 <_init+0x28>
jmp    *0x809c018
push   $0x18
jmp    804a340 <_init+0x28>
jmp    *0x809c01c
push   $0x20
jmp    804a340 <_init+0x28>
jmp    *0x809c020
push   $0x28
jmp    804a340 <_init+0x28>
jmp    *0x809c024
push   $0x30
jmp    804a340 <_init+0x28>
jmp    *0x809c028
push   $0x38
jmp    804a340 <_init+0x28>
jmp    *0x809c02c
push   $0x40
jmp    804a340 <_init+0x28>
jmp    *0x809c030
push   $0x48
jmp    804a340 <_init+0x28>
jmp    *0x809c034
push   $0x50
jmp    804a340 <_init+0x28>
jmp    *0x809c038
push   $0x58
jmp    804a340 <_init+0x28>
jmp    *0x809c03c
push   $0x60
jmp    804a340 <_init+0x28>
jmp    *0x809c040
push   $0x68
jmp    804a340 <_init+0x28>
jmp    *0x809c044
push   $0x70
jmp    804a340 <_init+0x28>
jmp    *0x809c048
push   $0x78
jmp    804a340 <_init+0x28>
jmp    *0x809c04c
push   $0x80
jmp    804a340 <_init+0x28>
jmp    *0x809c050
push   $0x88
jmp    804a340 <_init+0x28>
jmp    *0x809c054
push   $0x90
jmp    804a340 <_init+0x28>
jmp    *0x809c058
push   $0x98
jmp    804a340 <_init+0x28>
jmp    *0x809c05c
push   $0xa0
jmp    804a340 <_init+0x28>
jmp    *0x809c060
push   $0xa8
jmp    804a340 <_init+0x28>
jmp    *0x809c064
push   $0xb0
jmp    804a340 <_init+0x28>
jmp    *0x809c068
push   $0xb8
jmp    804a340 <_init+0x28>
jmp    *0x809c06c
push   $0xc0
jmp    804a340 <_init+0x28>
jmp    *0x809c070
push   $0xc8
jmp    804a340 <_init+0x28>
jmp    *0x809c074
push   $0xd0
jmp    804a340 <_init+0x28>
jmp    *0x809c078
push   $0xd8
jmp    804a340 <_init+0x28>
jmp    *0x809c07c
push   $0xe0
jmp    804a340 <_init+0x28>
jmp    *0x809c080
push   $0xe8
jmp    804a340 <_init+0x28>
jmp    *0x809c084
push   $0xf0
jmp    804a340 <_init+0x28>
jmp    *0x809c088
push   $0xf8
jmp    804a340 <_init+0x28>
jmp    *0x809c08c
push   $0x100
jmp    804a340 <_init+0x28>
jmp    *0x809c090
push   $0x108
jmp    804a340 <_init+0x28>
jmp    *0x809c094
push   $0x110
jmp    804a340 <_init+0x28>
jmp    *0x809c098
push   $0x118
jmp    804a340 <_init+0x28>
jmp    *0x809c09c
push   $0x120
jmp    804a340 <_init+0x28>
jmp    *0x809c0a0
push   $0x128
jmp    804a340 <_init+0x28>
jmp    *0x809c0a4
push   $0x130
jmp    804a340 <_init+0x28>
jmp    *0x809c0a8
push   $0x138
jmp    804a340 <_init+0x28>
jmp    *0x809c0ac
push   $0x140
jmp    804a340 <_init+0x28>
jmp    *0x809c0b0
push   $0x148
jmp    804a340 <_init+0x28>
jmp    *0x809c0b4
push   $0x150
jmp    804a340 <_init+0x28>
jmp    *0x809c0b8
push   $0x158
jmp    804a340 <_init+0x28>
jmp    *0x809c0bc
push   $0x160
jmp    804a340 <_init+0x28>
jmp    *0x809c0c0
push   $0x168
jmp    804a340 <_init+0x28>
jmp    *0x809c0c4
push   $0x170
jmp    804a340 <_init+0x28>
jmp    *0x809c0c8
push   $0x178
jmp    804a340 <_init+0x28>
jmp    *0x809c0cc
push   $0x180
jmp    804a340 <_init+0x28>
jmp    *0x809c0d0
push   $0x188
jmp    804a340 <_init+0x28>
jmp    *0x809c0d4
push   $0x190
jmp    804a340 <_init+0x28>
jmp    *0x809c0d8
push   $0x198
jmp    804a340 <_init+0x28>
jmp    *0x809c0dc
push   $0x1a0
jmp    804a340 <_init+0x28>
jmp    *0x809c0e0
push   $0x1a8
jmp    804a340 <_init+0x28>
jmp    *0x809c0e4
push   $0x1b0
jmp    804a340 <_init+0x28>
jmp    *0x809c0e8
push   $0x1b8
jmp    804a340 <_init+0x28>
jmp    *0x809c0ec
push   $0x1c0
jmp    804a340 <_init+0x28>
jmp    *0x809c0f0
push   $0x1c8
jmp    804a340 <_init+0x28>
jmp    *0x809c0f4
push   $0x1d0
jmp    804a340 <_init+0x28>
jmp    *0x809c0f8
push   $0x1d8
jmp    804a340 <_init+0x28>
jmp    *0x809c0fc
push   $0x1e0
jmp    804a340 <_init+0x28>
jmp    *0x809c100
push   $0x1e8
jmp    804a340 <_init+0x28>
jmp    *0x809c104
push   $0x1f0
jmp    804a340 <_init+0x28>
jmp    *0x809c108
push   $0x1f8
jmp    804a340 <_init+0x28>
jmp    *0x809c10c
push   $0x200
jmp    804a340 <_init+0x28>
jmp    *0x809c110
push   $0x208
jmp    804a340 <_init+0x28>
jmp    *0x809c114
push   $0x210
jmp    804a340 <_init+0x28>
jmp    *0x809c118
push   $0x218
jmp    804a340 <_init+0x28>
jmp    *0x809c11c
push   $0x220
jmp    804a340 <_init+0x28>
jmp    *0x809c120
push   $0x228
jmp    804a340 <_init+0x28>
jmp    *0x809c124
push   $0x230
jmp    804a340 <_init+0x28>
jmp    *0x809c128
push   $0x238
jmp    804a340 <_init+0x28>
jmp    *0x809c12c
push   $0x240
jmp    804a340 <_init+0x28>
jmp    *0x809c130
push   $0x248
jmp    804a340 <_init+0x28>
jmp    *0x809c134
push   $0x250
jmp    804a340 <_init+0x28>
jmp    *0x809c138
push   $0x258
jmp    804a340 <_init+0x28>
jmp    *0x809c13c
push   $0x260
jmp    804a340 <_init+0x28>
jmp    *0x809c140
push   $0x268
jmp    804a340 <_init+0x28>
jmp    *0x809c144
push   $0x270
jmp    804a340 <_init+0x28>
jmp    *0x809c148
push   $0x278
jmp    804a340 <_init+0x28>
jmp    *0x809c14c
push   $0x280
jmp    804a340 <_init+0x28>
jmp    *0x809c150
push   $0x288
jmp    804a340 <_init+0x28>
jmp    *0x809c154
push   $0x290
jmp    804a340 <_init+0x28>
jmp    *0x809c158
push   $0x298
jmp    804a340 <_init+0x28>
jmp    *0x809c15c
push   $0x2a0
jmp    804a340 <_init+0x28>
jmp    *0x809c160
push   $0x2a8
jmp    804a340 <_init+0x28>
jmp    *0x809c164
push   $0x2b0
jmp    804a340 <_init+0x28>
jmp    *0x809c168
push   $0x2b8
jmp    804a340 <_init+0x28>
jmp    *0x809c16c
push   $0x2c0
jmp    804a340 <_init+0x28>
jmp    *0x809c170
push   $0x2c8
jmp    804a340 <_init+0x28>
jmp    *0x809c174
push   $0x2d0
jmp    804a340 <_init+0x28>
jmp    *0x809c178
push   $0x2d8
jmp    804a340 <_init+0x28>
jmp    *0x809c17c
push   $0x2e0
jmp    804a340 <_init+0x28>
jmp    *0x809c180
push   $0x2e8
jmp    804a340 <_init+0x28>
jmp    *0x809c184
push   $0x2f0
jmp    804a340 <_init+0x28>
jmp    *0x809c188
push   $0x2f8
jmp    804a340 <_init+0x28>
jmp    *0x809c18c
push   $0x300
jmp    804a340 <_init+0x28>
jmp    *0x809c190
push   $0x308
jmp    804a340 <_init+0x28>
jmp    *0x809c194
push   $0x310
jmp    804a340 <_init+0x28>
jmp    *0x809c198
push   $0x318
jmp    804a340 <_init+0x28>
jmp    *0x809c19c
push   $0x320
jmp    804a340 <_init+0x28>
jmp    *0x809c1a0
push   $0x328
jmp    804a340 <_init+0x28>
jmp    *0x809c1a4
push   $0x330
jmp    804a340 <_init+0x28>
jmp    *0x809c1a8
push   $0x338
jmp    804a340 <_init+0x28>
jmp    *0x809c1ac
push   $0x340
jmp    804a340 <_init+0x28>
jmp    *0x809c1b0
push   $0x348
jmp    804a340 <_init+0x28>
jmp    *0x809c1b4
push   $0x350
jmp    804a340 <_init+0x28>
jmp    *0x809c1b8
push   $0x358
jmp    804a340 <_init+0x28>
jmp    *0x809c1bc
push   $0x360
jmp    804a340 <_init+0x28>
jmp    *0x809c1c0
push   $0x368
jmp    804a340 <_init+0x28>
jmp    *0x809c1c4
push   $0x370
jmp    804a340 <_init+0x28>
jmp    *0x809c1c8
push   $0x378
jmp    804a340 <_init+0x28>
jmp    *0x809c1cc
push   $0x380
jmp    804a340 <_init+0x28>
jmp    *0x809c1d0
push   $0x388
jmp    804a340 <_init+0x28>
jmp    *0x809c1d4
push   $0x390
jmp    804a340 <_init+0x28>
jmp    *0x809c1d8
push   $0x398
jmp    804a340 <_init+0x28>
jmp    *0x809c1dc
push   $0x3a0
jmp    804a340 <_init+0x28>
jmp    *0x809c1e0
push   $0x3a8
jmp    804a340 <_init+0x28>
jmp    *0x809c1e4
push   $0x3b0
jmp    804a340 <_init+0x28>
jmp    *0x809c1e8
push   $0x3b8
jmp    804a340 <_init+0x28>
jmp    *0x809c1ec
push   $0x3c0
jmp    804a340 <_init+0x28>
jmp    *0x809c1f0
push   $0x3c8
jmp    804a340 <_init+0x28>
jmp    *0x809c1f4
push   $0x3d0
jmp    804a340 <_init+0x28>
jmp    *0x809c1f8
push   $0x3d8
jmp    804a340 <_init+0x28>
jmp    *0x809c1fc
push   $0x3e0
jmp    804a340 <_init+0x28>
jmp    *0x809c200
push   $0x3e8
jmp    804a340 <_init+0x28>
jmp    *0x809c204
push   $0x3f0
jmp    804a340 <_init+0x28>
jmp    *0x809c208
push   $0x3f8
jmp    804a340 <_init+0x28>
jmp    *0x809c20c
push   $0x400
jmp    804a340 <_init+0x28>
jmp    *0x809c210
push   $0x408
jmp    804a340 <_init+0x28>
jmp    *0x809c214
push   $0x410
jmp    804a340 <_init+0x28>
jmp    *0x809c218
push   $0x418
jmp    804a340 <_init+0x28>
jmp    *0x809c21c
push   $0x420
jmp    804a340 <_init+0x28>
jmp    *0x809c220
push   $0x428
jmp    804a340 <_init+0x28>
jmp    *0x809c224
push   $0x430
jmp    804a340 <_init+0x28>
jmp    *0x809c228
push   $0x438
jmp    804a340 <_init+0x28>
jmp    *0x809c22c
push   $0x440
jmp    804a340 <_init+0x28>
jmp    *0x809c230
push   $0x448
jmp    804a340 <_init+0x28>
jmp    *0x809c234
push   $0x450
jmp    804a340 <_init+0x28>
jmp    *0x809c238
push   $0x458
jmp    804a340 <_init+0x28>
jmp    *0x809c23c
push   $0x460
jmp    804a340 <_init+0x28>
jmp    *0x809c240
push   $0x468
jmp    804a340 <_init+0x28>
jmp    *0x809c244
push   $0x470
jmp    804a340 <_init+0x28>
jmp    *0x809c248
push   $0x478
jmp    804a340 <_init+0x28>
jmp    *0x809c24c
push   $0x480
jmp    804a340 <_init+0x28>
jmp    *0x809c250
push   $0x488
jmp    804a340 <_init+0x28>
jmp    *0x809c254
push   $0x490
jmp    804a340 <_init+0x28>
jmp    *0x809c258
push   $0x498
jmp    804a340 <_init+0x28>
jmp    *0x809c25c
push   $0x4a0
jmp    804a340 <_init+0x28>
jmp    *0x809c260
push   $0x4a8
jmp    804a340 <_init+0x28>
jmp    *0x809c264
push   $0x4b0
jmp    804a340 <_init+0x28>
jmp    *0x809c268
push   $0x4b8
jmp    804a340 <_init+0x28>
jmp    *0x809c26c
push   $0x4c0
jmp    804a340 <_init+0x28>
jmp    *0x809c270
push   $0x4c8
jmp    804a340 <_init+0x28>
jmp    *0x809c274
push   $0x4d0
jmp    804a340 <_init+0x28>
jmp    *0x809c278
push   $0x4d8
jmp    804a340 <_init+0x28>
jmp    *0x809c27c
push   $0x4e0
jmp    804a340 <_init+0x28>
jmp    *0x809c280
push   $0x4e8
jmp    804a340 <_init+0x28>
jmp    *0x809c284
push   $0x4f0
jmp    804a340 <_init+0x28>
jmp    *0x809c288
push   $0x4f8
jmp    804a340 <_init+0x28>
jmp    *0x809c28c
push   $0x500
jmp    804a340 <_init+0x28>
jmp    *0x809c290
push   $0x508
jmp    804a340 <_init+0x28>
jmp    *0x809c294
push   $0x510
jmp    804a340 <_init+0x28>
jmp    *0x809c298
push   $0x518
jmp    804a340 <_init+0x28>
jmp    *0x809c29c
push   $0x520
jmp    804a340 <_init+0x28>
jmp    *0x809c2a0
push   $0x528
jmp    804a340 <_init+0x28>
jmp    *0x809c2a4
push   $0x530
jmp    804a340 <_init+0x28>
jmp    *0x809c2a8
push   $0x538
jmp    804a340 <_init+0x28>
jmp    *0x809c2ac
push   $0x540
jmp    804a340 <_init+0x28>
jmp    *0x809c2b0
push   $0x548
jmp    804a340 <_init+0x28>
jmp    *0x809c2b4
push   $0x550
jmp    804a340 <_init+0x28>
jmp    *0x809c2b8
push   $0x558
jmp    804a340 <_init+0x28>
jmp    *0x809c2bc
push   $0x560
jmp    804a340 <_init+0x28>
jmp    *0x809c2c0
push   $0x568
jmp    804a340 <_init+0x28>
jmp    *0x809c2c4
push   $0x570
jmp    804a340 <_init+0x28>
jmp    *0x809c2c8
push   $0x578
jmp    804a340 <_init+0x28>
jmp    *0x809c2cc
push   $0x580
jmp    804a340 <_init+0x28>
jmp    *0x809c2d0
push   $0x588
jmp    804a340 <_init+0x28>
jmp    *0x809c2d4
push   $0x590
jmp    804a340 <_init+0x28>
jmp    *0x809c2d8
push   $0x598
jmp    804a340 <_init+0x28>
jmp    *0x809c2dc
push   $0x5a0
jmp    804a340 <_init+0x28>
jmp    *0x809c2e0
push   $0x5a8
jmp    804a340 <_init+0x28>
jmp    *0x809c2e4
push   $0x5b0
jmp    804a340 <_init+0x28>
jmp    *0x809c2e8
push   $0x5b8
jmp    804a340 <_init+0x28>
jmp    *0x809c2ec
push   $0x5c0
jmp    804a340 <_init+0x28>
jmp    *0x809c2f0
push   $0x5c8
jmp    804a340 <_init+0x28>
jmp    *0x809c2f4
push   $0x5d0
jmp    804a340 <_init+0x28>
jmp    *0x809c2f8
push   $0x5d8
jmp    804a340 <_init+0x28>
jmp    *0x809c2fc
push   $0x5e0
jmp    804a340 <_init+0x28>
jmp    *0x809c300
push   $0x5e8
jmp    804a340 <_init+0x28>
jmp    *0x809c304
push   $0x5f0
jmp    804a340 <_init+0x28>
jmp    *0x809c308
push   $0x5f8
jmp    804a340 <_init+0x28>
jmp    *0x809c30c
push   $0x600
jmp    804a340 <_init+0x28>
jmp    *0x809c310
push   $0x608
jmp    804a340 <_init+0x28>
jmp    *0x809c314
push   $0x610
jmp    804a340 <_init+0x28>
jmp    *0x809c318
push   $0x618
jmp    804a340 <_init+0x28>
jmp    *0x809c31c
push   $0x620
jmp    804a340 <_init+0x28>
jmp    *0x809c320
push   $0x628
jmp    804a340 <_init+0x28>
sub    $0x1c,%esp
test   %edx,%edx
je     804afd4 <fchmod@plt+0x34>
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
je     804afdc <fchmod@plt+0x3c>
call   8056010 <fchmod@plt+0xb070>
mov    %eax,(%esp)
call   804a360 <unsetenv@plt>
add    $0x1c,%esp
ret
push   %ebx
mov    %eax,%ebx
sub    $0x48,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x1c(%esp),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8062a30 <fchmod@plt+0x17a90>
movl   $0x1,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
je     804b023 <fchmod@plt+0x83>
call   8056010 <fchmod@plt+0xb070>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
je     804b035 <fchmod@plt+0x95>
call   804a610 <__stack_chk_fail@plt>
add    $0x48,%esp
pop    %ebx
ret
push   %ebx
mov    %eax,%ebx
sub    $0x38,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
lea    0x17(%esp),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
je     804b07d <fchmod@plt+0xdd>
call   8056010 <fchmod@plt+0xb070>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
je     804b08f <fchmod@plt+0xef>
call   804a610 <__stack_chk_fail@plt>
add    $0x38,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8089fec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x40,%esp
mov    0xc(%ebp),%ebx
call   804c7d0 <fchmod@plt+0x1830>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   807f510 <argp_parse+0x75d0>
movl   $0x808d3ee,0x4(%esp)
movl   $0x6,(%esp)
call   804aca0 <setlocale@plt>
movl   $0x8089464,0x4(%esp)
movl   $0x8087ec8,(%esp)
call   804ae10 <bindtextdomain@plt>
movl   $0x8087ec8,(%esp)
call   804a690 <textdomain@plt>
movl   $0x5,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x2,0x809d7cc
00
movl   $0x0,0x809e084
00
movb   $0xa,0x809dfe4
call   80803d0 <argp_parse+0x8490>
call   806a0f0 <fchmod@plt+0x1f150>
call   806a130 <fchmod@plt+0x1f190>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80710d0 <fchmod@plt+0x26130>
movl   $0x28,(%esp)
movl   $0xa,0x809dfec
00
call   8081640 <argp_parse+0x9700>
movl   $0x0,0x4(%esp)
movl   $0x11,(%esp)
movl   $0x0,0x809e4f8
00
mov    %eax,0x809e488
call   804a570 <signal@plt>
mov    0x8(%ebp),%eax
movl   $0x809c400,0x4(%esp)
movl   $0x8087ec8,(%esp)
mov    %ebx,0x38(%esp)
mov    %eax,0x34(%esp)
call   8078cb0 <argp_parse+0xd70>
movl   $0x8089476,(%esp)
movl   $0x0,0x809dfc0
00
movl   $0x0,0x809dfc4
00
movl   $0x0,0x809dfc8
00
movl   $0x40000000,0x809dfcc
40
movb   $0x0,0x809dfd0
movb   $0x0,0x809dfd1
call   804a7d0 <getenv@plt>
movl   $0x0,0x809dfd8
00
movb   $0x0,0x809dfdc
movl   $0x0,0x809dfe0
00
movl   $0x0,0x809e500
00
movl   $0x0,0x809e4e4
00
mov    %eax,0x809dfd4
movl   $0x14,0x809e4b0
00
movl   $0x2800,0x809e524
00
call   8079860 <argp_parse+0x1920>
mov    0x34(%esp),%edx
movl   $0x80000000,0x809e2e4
80
movl   $0xffffffff,0x809e2e8
ff
movl   $0x8,0x809e480
00
cmp    $0x1,%edx
movb   $0x1,0x809e4b8
mov    %eax,0x809e2f0
movl   $0x1,0x809e450
00
movl   $0x0,0x809e304
00
movl   $0xffffffff,0x809e4d4
ff
movl   $0x0,0x809e444
00
movl   $0xffffffff,0x809e494
ff
movl   $0x0,0x809e414
00
movb   $0x1,0x809e2e0
movl   $0xffffffff,0x809e4d0
ff
movl   $0xffffffff,0x809e2f4
ff
jle    804b3fd <fchmod@plt+0x45d>
mov    0x38(%esp),%eax
mov    0x4(%eax),%edi
cmpb   $0x2d,(%edi)
je     804b3fd <fchmod@plt+0x45d>
xor    %eax,%eax
or     $0xffffffff,%ecx
movb   $0x2d,0x3c(%esp)
movb   $0x0,0x3e(%esp)
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x2(%edx,%ecx,1),%eax
mov    %eax,0x1c(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x38(%esp),%ecx
mov    %eax,%esi
mov    %eax,0x18(%esp)
lea    0x4(%eax),%edi
mov    (%ecx),%eax
mov    %eax,(%esi)
mov    0x4(%ecx),%edx
lea    0x8(%ecx),%esi
movzbl (%edx),%eax
test   %al,%al
je     804bde5 <fchmod@plt+0xe45>
lea    0x3c(%esp),%ebx
mov    %ebx,0x24(%esp)
mov    %edx,%ebx
mov    %al,0x3d(%esp)
lea    0x4(%edi),%eax
mov    %eax,0x20(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%edi)
mov    $0x809c440,%eax
movsbl (%ebx),%edx
jmp    804b383 <fchmod@plt+0x3e3>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%edx
je     804bb68 <fchmod@plt+0xbc8>
add    $0x18,%eax
mov    (%eax),%ecx
test   %ecx,%ecx
mov    0x4(%eax),%ecx
jne    804b378 <fchmod@plt+0x3d8>
test   %ecx,%ecx
jne    804b378 <fchmod@plt+0x3d8>
cmpl   $0x0,0x8(%eax)
jne    804b378 <fchmod@plt+0x3d8>
cmpl   $0x0,0xc(%eax)
jne    804b378 <fchmod@plt+0x3d8>
cmpl   $0x0,0x10(%eax)
jne    804b378 <fchmod@plt+0x3d8>
mov    0x20(%esp),%edi
xchg   %ax,%ax
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
jne    804b350 <fchmod@plt+0x3b0>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%eax
lea    (%ecx,%eax,4),%ecx
cmp    %ecx,%esi
jae    804b3e5 <fchmod@plt+0x445>
mov    %esi,%eax
mov    %edi,%edx
lea    0x0(%esi),%esi
add    $0x4,%eax
mov    -0x4(%eax),%ebx
add    $0x4,%edx
cmp    %ecx,%eax
mov    %ebx,-0x4(%edx)
jb     804b3c8 <fchmod@plt+0x428>
mov    %esi,%eax
not    %eax
add    %ecx,%eax
shr    $0x2,%eax
lea    0x4(%edi,%eax,4),%edi
mov    0x1c(%esp),%eax
movl   $0x0,(%edi)
mov    %eax,0x34(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x38(%esp)
jmp    804b405 <fchmod@plt+0x465>
lea    0x3c(%esp),%eax
mov    %eax,0x24(%esp)
movl   $0x808948b,(%esp)
call   804a7d0 <getenv@plt>
lea    0x38(%esp),%edx
mov    %edx,0x8(%esp)
lea    0x34(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8070020 <fchmod@plt+0x25080>
mov    0x24(%esp),%eax
movl   $0x809dfc0,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x809c40c,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8077f40 <argp_parse>
test   %eax,%eax
jne    804bea1 <fchmod@plt+0xf01>
cmpb   $0x0,0x809dfd0
je     804b485 <fchmod@plt+0x4e5>
cmpl   $0x3,0x809e500
je     804bd87 <fchmod@plt+0xde7>
movl   $0xffffffff,0x809e548
ff
mov    0x3c(%esp),%edx
xor    %esi,%esi
mov    $0x10000000,%ebx
cmp    0x34(%esp),%edx
jge    804b4e2 <fchmod@plt+0x542>
xchg   %ax,%ax
cmpl   $0x2,0x809dfc4
mov    %ebx,%ecx
mov    0x809dfc8,%eax
cmovne %esi,%ecx
or     0x809dfcc,%eax
or     0x809e480,%eax
or     %ecx,%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    (%eax,%edx,4),%eax
mov    %eax,(%esp)
call   8064a90 <fchmod@plt+0x19af0>
mov    0x3c(%esp),%eax
movb   $0x1,0x809dfdc
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
mov    %edx,0x3c(%esp)
jl     804b498 <fchmod@plt+0x4f8>
mov    0x809dfc4,%ecx
mov    0x809e4e4,%ebx
test   %ecx,%ecx
sete   0x809e48d
test   %ebx,%ebx
jne    804b50f <fchmod@plt+0x56f>
cmpb   $0x1,0x809dfd1
sbb    %eax,%eax
and    $0x2,%eax
add    $0x4,%eax
mov    %eax,0x809e4e4
mov    0x809e470,%edx
test   %edx,%edx
je     804b522 <fchmod@plt+0x582>
cmpl   $0x3,0x809e500
je     804b52f <fchmod@plt+0x58f>
cmpb   $0x0,0x809e2e1
je     804babd <fchmod@plt+0xb1d>
mov    0x809e4e4,%ecx
mov    $0x1,%eax
shl    %cl,%eax
test   $0x54,%al
je     804bfb0 <fchmod@plt+0x1010>
mov    0x809e4c4,%eax
or     0x809e4c0,%eax
je     804b571 <fchmod@plt+0x5d1>
cmpb   $0x0,0x809dfdc
je     804becc <fchmod@plt+0xf2c>
mov    0x809e500,%eax
testb  $0x10,0x808c540(,%eax,4)
je     804bead <fchmod@plt+0xf0d>
mov    0x809e4f8,%eax
test   %eax,%eax
je     804bbcd <fchmod@plt+0xc2d>
cmp    $0x1,%eax
jbe    804b590 <fchmod@plt+0x5f0>
cmpb   $0x0,0x809e2f8
je     804bf86 <fchmod@plt+0xfe6>
mov    0x809e4f0,%eax
test   %eax,%eax
je     804bf40 <fchmod@plt+0xfa0>
mov    0x809e2e8,%eax
test   %eax,%eax
jns    804bf0b <fchmod@plt+0xf6b>
mov    0x809e470,%edx
test   %edx,%edx
je     804b5c5 <fchmod@plt+0x625>
mov    0x809e4e4,%eax
and    $0xfffffffb,%eax
cmp    $0x2,%eax
je     804ba59 <fchmod@plt+0xab9>
cmpb   $0x0,0x809e4f6
je     804ba0c <fchmod@plt+0xa6c>
cmpb   $0x0,0x809e2f8
jne    804bef6 <fchmod@plt+0xf56>
mov    0x809e51c,%ebx
test   %ebx,%ebx
jne    804bf9b <fchmod@plt+0xffb>
mov    0x809e500,%eax
testb  $0x2,0x808c540(,%eax,4)
mov    %eax,%ecx
je     804bdf2 <fchmod@plt+0xe52>
cmpb   $0x0,0x809dfd1
je     804b622 <fchmod@plt+0x682>
cmpl   $0x4,0x809e4e4
je     804b622 <fchmod@plt+0x682>
testb  $0x1,0x808c540(,%ecx,4)
je     804bfc5 <fchmod@plt+0x1025>
mov    0x809e518,%eax
test   %eax,%eax
jle    804b642 <fchmod@plt+0x6a2>
cmpl   $0x4,0x809e4e4
je     804b642 <fchmod@plt+0x6a2>
testb  $0x1,0x808c540(,%ecx,4)
je     804be8c <fchmod@plt+0xeec>
mov    0x809e54c,%eax
test   %eax,%eax
jle    804b662 <fchmod@plt+0x6c2>
cmpl   $0x4,0x809e4e4
je     804b662 <fchmod@plt+0x6c2>
testb  $0x1,0x808c540(,%ecx,4)
je     804be77 <fchmod@plt+0xed7>
mov    0x809e474,%eax
test   %eax,%eax
jle    804b682 <fchmod@plt+0x6e2>
cmpl   $0x4,0x809e4e4
je     804b682 <fchmod@plt+0x6e2>
testb  $0x1,0x808c540(,%ecx,4)
je     804be62 <fchmod@plt+0xec2>
movzbl 0x809e484,%edx
test   %dl,%dl
jne    804b8ae <fchmod@plt+0x90e>
cmpb   $0x0,0x809e468
jne    804b8ae <fchmod@plt+0x90e>
cmpb   $0x0,0x809e2e2
je     804b6b1 <fchmod@plt+0x711>
movl   $0x3,0x809e4b4
00
movzbl 0x809e438,%edx
mov    $0x40000,%eax
mov    $0x0,%edi
cmp    $0x1,%dl
sbb    %esi,%esi
and    $0x20000,%esi
add    $0x80900,%esi
cmpl   $0x2,0x809e430
cmovne %edi,%eax
or     %esi,%eax
mov    %eax,0x809e498
or     $0x10000,%eax
cmp    $0x1,%dl
mov    %eax,0x809e490
sbb    %eax,%eax
and    $0x100,%eax
cmp    $0x9,%ecx
mov    %eax,0x809e434
je     804bc20 <fchmod@plt+0xc80>
cmpb   $0x0,0x809e42d
jne    804badc <fchmod@plt+0xb3c>
fldl   0x809e460
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jp     804b925 <fchmod@plt+0x985>
jne    804b925 <fchmod@plt+0x985>
fstp   %st(0)
cmpb   $0x0,0x809e468
je     804b745 <fchmod@plt+0x7a5>
cmpl   $0x0,0x809e4f0
jne    804be40 <fchmod@plt+0xea0>
sub    $0x1,%ecx
cmp    $0x8,%ecx
ja     804b795 <fchmod@plt+0x7f5>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x83,%al
je     804bafa <fchmod@plt+0xb5a>
mov    0x809e488,%eax
mov    0x809e4f8,%edx
mov    %eax,0x809e4a8
lea    (%eax,%edx,4),%ecx
cmp    %ecx,%eax
jae    804b795 <fchmod@plt+0x7f5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
cmpb   $0x2d,(%edx)
jne    804b789 <fchmod@plt+0x7e9>
cmpb   $0x0,0x1(%edx)
je     804bff1 <fchmod@plt+0x1051>
add    $0x4,%eax
cmp    %ecx,%eax
mov    %eax,0x809e4a8
jb     804b778 <fchmod@plt+0x7d8>
mov    0x809e538,%eax
test   %eax,%eax
je     804bc03 <fchmod@plt+0xc63>
movl   $0x80892d7,0x4(%esp)
mov    %eax,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x809e248
je     804be55 <fchmod@plt+0xeb5>
mov    0x809e488,%eax
mov    %eax,0x809e4a8
mov    0x809dfd4,%eax
test   %eax,%eax
je     804b7df <fchmod@plt+0x83f>
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x809d7c8
cmpb   $0x0,0x809e4b9
jne    804bb96 <fchmod@plt+0xbf6>
call   8050040 <fchmod@plt+0x50a0>
mov    0x809dfc0,%esi
test   %esi,%esi
jne    804b81d <fchmod@plt+0x87d>
jmp    804b958 <fchmod@plt+0x9b8>
mov    0x10(%esi),%edi
mov    %edi,(%esp)
call   804a4c0 <free@plt>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
je     804b958 <fchmod@plt+0x9b8>
mov    %ebx,%esi
mov    0x809e46c,%edi
mov    (%esi),%ebx
test   %edi,%edi
je     804b800 <fchmod@plt+0x860>
movl   $0x1,0x8(%esp)
mov    0x8(%esi),%edx
mov    0x4(%esi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060db0 <fchmod@plt+0x15e10>
mov    0x10(%esi),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x24(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     804b803 <fchmod@plt+0x863>
mov    0xc(%esi),%ecx
movl   $0x5,0x8(%esp)
movl   $0x808a5e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x20(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x24(%esp),%edx
mov    0x20(%esp),%ecx
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
jmp    804b800 <fchmod@plt+0x860>
testb  $0x1,0x808c540(,%ecx,4)
jne    804b69e <fchmod@plt+0x6fe>
mov    %ecx,(%esp)
mov    $0x808944b,%ebx
mov    %edx,0x24(%esp)
call   806a070 <fchmod@plt+0x1f0d0>
mov    0x24(%esp),%edx
movl   $0x5,0x8(%esp)
movl   $0x808a4f4,0x4(%esp)
movl   $0x0,(%esp)
test   %dl,%dl
mov    %eax,%esi
mov    $0x8089459,%eax
cmove  %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
mov    0x809e524,%eax
xor    %edx,%edx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
fildll 0x28(%esp)
fucomip %st(1),%st
fstp   %st(0)
jbe    804b72f <fchmod@plt+0x78f>
movl   $0x5,0x8(%esp)
movl   $0x808a518,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
nop
call   8064b20 <fchmod@plt+0x19b80>
mov    0x809e478,%eax
test   %eax,%eax
je     804b96b <fchmod@plt+0x9cb>
call   804da10 <fchmod@plt+0x2a70>
cmpl   $0x9,0x809e500
ja     804b985 <fchmod@plt+0x9e5>
mov    0x809e500,%eax
jmp    *0x808c4ac(,%eax,4)
call   8062120 <fchmod@plt+0x17180>
cmpb   $0x0,0x809e48e
jne    804bc4e <fchmod@plt+0xcae>
mov    0x809dff0,%ecx
test   %ecx,%ecx
jne    804bc5a <fchmod@plt+0xcba>
mov    0x809e478,%edx
test   %edx,%edx
je     804b9af <fchmod@plt+0xa0f>
call   804db20 <fchmod@plt+0x2b80>
mov    0x809e488,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
call   806e8c0 <fchmod@plt+0x23920>
call   8064b70 <fchmod@plt+0x19bd0>
cmpl   $0x2,0x809e084
je     804bd96 <fchmod@plt+0xdf6>
mov    0x809d8a0,%eax
cmp    %eax,0x809e248
je     804bdda <fchmod@plt+0xe3a>
mov    0x809d864,%eax
testb  $0x20,(%eax)
je     804bc39 <fchmod@plt+0xc99>
cmpl   $0x1,0x809e084
jle    804baeb <fchmod@plt+0xb4b>
mov    0x809e084,%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x809e51c,%ebx
test   %ebx,%ebx
je     804bf20 <fchmod@plt+0xf80>
cmpb   $0x0,0x809e2f8
jne    804bf2b <fchmod@plt+0xf8b>
mov    0x809e500,%ecx
testb  $0x4,0x808c540(,%ecx,4)
jne    804c006 <fchmod@plt+0x1066>
cmp    $0x2,%ecx
jne    804b602 <fchmod@plt+0x662>
movl   $0x5,0x8(%esp)
movl   $0x808a414,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
cmpb   $0x1,0x809e2f8
mov    %edx,%edi
sbb    %ebx,%ebx
xor    %eax,%eax
or     $0xffffffff,%ecx
and    $0x12,%ebx
repnz scas %es:(%edi),%al
add    $0x51,%ebx
not    %ecx
sub    $0x1,%ecx
cmp    %ebx,%ecx
jbe    804b5c5 <fchmod@plt+0x625>
mov    %edx,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x808a318,0x8(%esp)
movl   $0x808a34c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804aee0 <dcngettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
jmp    804b901 <fchmod@plt+0x961>
cmpb   $0x0,0x809e2f8
jne    804b52f <fchmod@plt+0x58f>
cmpb   $0x0,0x809e520
je     804b544 <fchmod@plt+0x5a4>
jmp    804b52f <fchmod@plt+0x58f>
movl   $0x2,0x809e46c
00
jmp    804b713 <fchmod@plt+0x773>
movl   $0x2,0x809e084
00
jmp    804b9ff <fchmod@plt+0xa5f>
test   $0x170,%eax
je     804bc6a <fchmod@plt+0xcca>
mov    0x809e488,%edx
mov    0x809e4f8,%ebx
mov    %edx,0x809e4a8
lea    (%edx,%ebx,4),%eax
cmp    %eax,%edx
jae    804b795 <fchmod@plt+0x7f5>
mov    %edx,%eax
mov    (%eax),%eax
cmpb   $0x2d,(%eax)
jne    804bb49 <fchmod@plt+0xba9>
cmpb   $0x0,0x1(%eax)
jne    804bb49 <fchmod@plt+0xba9>
movl   $0x808949c,(%esp)
call   806a1b0 <fchmod@plt+0x1f210>
mov    0x809e4f8,%ebx
mov    0x809e488,%edx
mov    0x809e4a8,%eax
lea    (%edx,%ebx,4),%ecx
add    $0x4,%eax
cmp    %ecx,%eax
mov    %eax,0x809e4a8
jb     804bb24 <fchmod@plt+0xb84>
jmp    804b795 <fchmod@plt+0x7f5>
lea    0x0(%esi),%esi
mov    0x8(%eax),%eax
test   %eax,%eax
je     804b3a2 <fchmod@plt+0x402>
mov    0x38(%esp),%eax
mov    0x34(%esp),%ecx
lea    (%eax,%ecx,4),%eax
cmp    %eax,%esi
jae    804bfda <fchmod@plt+0x103a>
mov    (%esi),%eax
add    $0x8,%edi
add    $0x4,%esi
mov    %eax,-0x4(%edi)
jmp    804b3a8 <fchmod@plt+0x408>
mov    0x809dfd8,%eax
movl   $0x808949f,(%esp)
mov    %eax,0x4(%esp)
call   8079090 <argp_parse+0x1150>
test   %eax,%eax
mov    %eax,0x809e4a4
je     804bbc1 <fchmod@plt+0xc21>
cmpb   $0x0,0x809e45d
je     804bd17 <fchmod@plt+0xd77>
movb   $0x0,0x809e4b9
jmp    804b7ec <fchmod@plt+0x84c>
movl   $0x8089497,(%esp)
mov    0x809e488,%ebx
movl   $0x1,0x809e4f8
00
call   804a7d0 <getenv@plt>
mov    %eax,(%ebx)
mov    0x809e488,%eax
cmpl   $0x0,(%eax)
je     804bdcf <fchmod@plt+0xe2f>
mov    0x809e4f8,%eax
jmp    804b57e <fchmod@plt+0x5de>
mov    0x809d864,%eax
cmpb   $0x0,0x809e45d
cmove  0x809d8a0,%eax
mov    %eax,0x809e248
jmp    804b7bf <fchmod@plt+0x81f>
cmpb   $0x0,0x809dfdc
jne    804b713 <fchmod@plt+0x773>
addl   $0x1,0x809e46c
jmp    804b713 <fchmod@plt+0x773>
mov    %eax,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
jne    804b9f2 <fchmod@plt+0xa52>
jmp    804b9ff <fchmod@plt+0xa5f>
xchg   %ax,%ax
call   804c990 <fchmod@plt+0x19f0>
jmp    804b992 <fchmod@plt+0x9f2>
lea    0x0(%esi),%esi
call   8053730 <fchmod@plt+0x8790>
jmp    804b9a0 <fchmod@plt+0xa00>
test   $0x4,%al
lea    0x0(%esi,%eiz,1),%esi
je     804b795 <fchmod@plt+0x7f5>
cmpb   $0x0,0x809dfdc
jne    804bc8c <fchmod@plt+0xcec>
cmpb   $0x0,0x809dfe5
je     804bee1 <fchmod@plt+0xf41>
cmpl   $0x0,0x809dfe0
je     804b795 <fchmod@plt+0x7f5>
cmpl   $0x0,0x809e4f8
je     804b795 <fchmod@plt+0x7f5>
mov    0x809e488,%eax
mov    (%eax),%eax
cmpb   $0x2d,(%eax)
jne    804bcbc <fchmod@plt+0xd1c>
cmpb   $0x0,0x1(%eax)
je     804b795 <fchmod@plt+0x7f5>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068070 <fchmod@plt+0x1d0d0>
jmp    804b795 <fchmod@plt+0x7f5>
call   806d240 <fchmod@plt+0x222a0>
jmp    804b985 <fchmod@plt+0x9e5>
movl   $0x5,0x8(%esp)
movl   $0x808a608,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
cmpl   $0x0,0x809e458
jne    804bbc1 <fchmod@plt+0xc21>
jmp    804b7ec <fchmod@plt+0x84c>
call   8053ab0 <fchmod@plt+0x8b10>
xchg   %ax,%ax
jmp    804b985 <fchmod@plt+0x9e5>
call   80557c0 <fchmod@plt+0xa820>
lea    0x0(%esi),%esi
jmp    804b985 <fchmod@plt+0x9e5>
call   8050410 <fchmod@plt+0x5470>
movl   $0x80507c0,(%esp)
call   8061ba0 <fchmod@plt+0x16c00>
jmp    804b985 <fchmod@plt+0x9e5>
call   80585a0 <fchmod@plt+0xd600>
movl   $0x8058610,(%esp)
call   8061ba0 <fchmod@plt+0x16c00>
call   8057140 <fchmod@plt+0xc1a0>
jmp    804b985 <fchmod@plt+0x9e5>
movl   $0x8062070,(%esp)
call   8061ba0 <fchmod@plt+0x16c00>
jmp    804b985 <fchmod@plt+0x9e5>
mov    $0x80899f0,%eax
call   806a5b0 <fchmod@plt+0x1f610>
jmp    804b485 <fchmod@plt+0x4e5>
movl   $0x5,0x8(%esp)
movl   $0x808a658,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    804b9d3 <fchmod@plt+0xa33>
movl   $0x808cc2d,(%eax)
jmp    804bbf9 <fchmod@plt+0xc59>
call   8079100 <argp_parse+0x11c0>
nop
jmp    804b9ff <fchmod@plt+0xa5f>
lea    0x3c(%esp),%eax
mov    %eax,0x24(%esp)
jmp    804b3b6 <fchmod@plt+0x416>
mov    %eax,(%esp)
call   806a070 <fchmod@plt+0x1f0d0>
movl   $0x5,0x8(%esp)
movl   $0x808a3c8,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
movl   $0x5,0x8(%esp)
movl   $0x808a548,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
mov    0x809e538,%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
movl   $0x5,0x8(%esp)
movl   $0x808a4c8,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a498,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a46c,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x2,(%esp)
call   804a8a0 <exit@plt>
mov    %eax,(%esp)
call   806a070 <fchmod@plt+0x1f0d0>
movl   $0x5,0x8(%esp)
movl   $0x808a260,0x4(%esp)
mov    %eax,%ebx
jmp    804be0c <fchmod@plt+0xe6c>
movl   $0x5,0x8(%esp)
movl   $0x808a230,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a588,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a380,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a2b0,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
mov    0x809e500,%ecx
jmp    804b602 <fchmod@plt+0x662>
movl   $0x5,0x8(%esp)
movl   $0x808a3e8,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
cmpl   $0xffffffff,0x809e4d0
je     804b5aa <fchmod@plt+0x60a>
movl   $0x5,0x8(%esp)
movl   $0x808a2e4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    804b5aa <fchmod@plt+0x60a>
movl   $0x5,0x8(%esp)
movl   $0x808a284,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a3a4,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a1fc,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x808a43c,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
mov    %edx,%ebx
movl   $0x5,0x8(%esp)
movl   $0x808a1d4,0x4(%esp)
jmp    804be0c <fchmod@plt+0xe6c>
movl   $0x5,0x8(%esp)
movl   $0x808a5b8,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
movl   $0x5,0x8(%esp)
movl   $0x8086b04,0x4(%esp)
jmp    804bce7 <fchmod@plt+0xd47>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x80864a0
push   $0x8086430
push   %ecx
push   %esi
push   $0x804b0e0
call   804a9c0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x809d833,%eax
sub    $0x809d830,%eax
cmp    $0x6,%eax
ja     804c060 <fchmod@plt+0x10c0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804c05f <fchmod@plt+0x10bf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x809d830,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x809d830,%eax
sub    $0x809d830,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804c099 <fchmod@plt+0x10f9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804c098 <fchmod@plt+0x10f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x809d830,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x809d8a4
jne    804c0dc <fchmod@plt+0x113c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804c050 <fchmod@plt+0x10b0>
movb   $0x1,0x809d8a4
leave
repz ret
xchg   %ax,%ax
mov    0x809bf00,%eax
test   %eax,%eax
je     804c108 <fchmod@plt+0x1168>
mov    $0x0,%eax
test   %eax,%eax
je     804c108 <fchmod@plt+0x1168>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x809bf00,(%esp)
call   *%eax
leave
jmp    804c080 <fchmod@plt+0x10e0>
nop
jmp    804c080 <fchmod@plt+0x10e0>
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x809d9dc,%ebx
cmp    %eax,%ebx
je     804c178 <fchmod@plt+0x11d8>
test   %ebx,%ebx
jne    804c134 <fchmod@plt+0x1194>
jmp    804c178 <fchmod@plt+0x11d8>
test   %esi,%esi
lea    0x0(%esi),%esi
je     804c14d <fchmod@plt+0x11ad>
mov    %esi,%ebx
mov    0x8(%ebx),%edx
mov    (%ebx),%esi
mov    %edx,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
cmp    %esi,%edi
jne    804c128 <fchmod@plt+0x1188>
test   %esi,%esi
mov    %esi,0x809d9dc
je     804c160 <fchmod@plt+0x11c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x0,0x809d9d8
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
jmp    804c14d <fchmod@plt+0x11ad>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
call   804c110 <fchmod@plt+0x1170>
test   %ebx,%ebx
je     804c1a1 <fchmod@plt+0x1201>
lea    0x0(%esi),%esi
add    %esi,0x4(%ebx)
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    804c198 <fchmod@plt+0x11f8>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x5ac,%esp
fldl   0x5c0(%esp)
lea    0x44(%esp),%ebx
fstl   0x10(%esp)
movl   $0x80864c8,0xc(%esp)
fstpl  0x28(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x59c(%esp)
xor    %eax,%eax
call   804af90 <__sprintf_chk@plt>
fldl   0x809d8d0
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
fldl   0x28(%esp)
jbe    804c228 <fchmod@plt+0x1288>
fdiv   %st,%st(1)
flds   0x8086bcc
fucomip %st(2),%st
ja     804c328 <fchmod@plt+0x1388>
fstp   %st(1)
jmp    804c22a <fchmod@plt+0x128a>
fstp   %st(1)
mov    $0x808d99f,%ebp
flds   0x8086bd0
fxch   %st(1)
lea    0x84(%esp),%eax
fucomi %st(1),%st
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x1b0,0xc(%esp)
mov    %eax,0x8(%esp)
jae    804c2e8 <fchmod@plt+0x1348>
fstp   %st(1)
fnstcw 0x3e(%esp)
movzwl 0x3e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x3c(%esp)
fldcw  0x3c(%esp)
fistpll 0x30(%esp)
fldcw  0x3e(%esp)
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807b000 <argp_parse+0x30c0>
mov    %ebp,0x18(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x80864cd,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x59c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c3e2 <fchmod@plt+0x1442>
add    $0x5ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
fnstcw 0x3e(%esp)
fsubp  %st,%st(1)
movzwl 0x3e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x3c(%esp)
fldcw  0x3c(%esp)
fistpll 0x30(%esp)
fldcw  0x3e(%esp)
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %eax,%ecx
lea    -0x80000000(%edx),%eax
mov    %eax,0x28(%esp)
mov    %ecx,%eax
mov    0x28(%esp),%edx
jmp    804c294 <fchmod@plt+0x12f4>
lea    0x0(%esi),%esi
flds   0x8086bd0
fxch   %st(2)
lea    0x310(%esp),%eax
fucomi %st(2),%st
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x1b0,0xc(%esp)
mov    %eax,0x8(%esp)
jae    804c3b0 <fchmod@plt+0x1410>
fstp   %st(2)
fxch   %st(1)
fnstcw 0x3e(%esp)
movzwl 0x3e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x3c(%esp)
fldcw  0x3c(%esp)
fistpll 0x30(%esp)
fldcw  0x3e(%esp)
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %eax,(%esp)
fstpl  0x28(%esp)
mov    %edx,0x4(%esp)
call   807b000 <argp_parse+0x30c0>
mov    %eax,%ebp
fldl   0x28(%esp)
jmp    804c22f <fchmod@plt+0x128f>
lea    0x0(%esi),%esi
fnstcw 0x3e(%esp)
fsubp  %st,%st(2)
fxch   %st(1)
movzwl 0x3e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x3c(%esp)
fldcw  0x3c(%esp)
fistpll 0x30(%esp)
fldcw  0x3e(%esp)
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
lea    -0x80000000(%edx),%ecx
mov    %ecx,%edx
jmp    804c38f <fchmod@plt+0x13ef>
call   804a610 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   8050090 <fchmod@plt+0x50f0>
fldl   0x809e460
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jp     804c4d8 <fchmod@plt+0x1538>
jne    804c4d8 <fchmod@plt+0x1538>
fstp   %st(0)
cmpb   $0x0,0x809e418
mov    0x809e524,%esi
je     804c500 <fchmod@plt+0x1560>
test   %esi,%esi
je     804c4ce <fchmod@plt+0x152e>
cmpb   $0x0,0x809e2f8
je     804c4ce <fchmod@plt+0x152e>
mov    0x809d9d4,%eax
test   %eax,%eax
jne    804c4ce <fchmod@plt+0x152e>
mov    0x809d9dc,%ecx
test   %ecx,%ecx
je     804c4ce <fchmod@plt+0x152e>
mov    (%ecx),%eax
test   %eax,%eax
je     804c51c <fchmod@plt+0x157c>
mov    0x4(%eax),%edx
shl    $0x9,%edx
cmp    %edx,%esi
jae    804c484 <fchmod@plt+0x14e4>
jmp    804c51c <fchmod@plt+0x157c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%ecx
shl    $0x9,%ecx
cmp    %ecx,%esi
jb     804c48a <fchmod@plt+0x14ea>
mov    %edx,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    804c478 <fchmod@plt+0x14d8>
mov    0x4(%eax),%edx
mov    %esi,%ebx
mov    0x18(%eax),%ebp
mov    0x14(%eax),%edi
mov    %edx,%ecx
shl    $0x9,%ecx
sub    %ecx,%ebx
mov    %ebx,0xc(%esp)
mov    %ebx,%ecx
xor    %ebx,%ebx
cmp    %ebp,%ebx
jg     804c516 <fchmod@plt+0x1576>
jge    804c510 <fchmod@plt+0x1570>
sub    %ecx,%edi
sbb    %ebx,%ebp
mov    %edi,%ecx
mov    %edi,0x14(%eax)
mov    %ebp,%edi
or     %ecx,%edi
mov    %ebp,0x18(%eax)
jne    804c4c7 <fchmod@plt+0x1527>
mov    (%eax),%eax
xor    %edx,%edx
test   %eax,%eax
je     804c4c9 <fchmod@plt+0x1529>
mov    0x4(%eax),%edx
neg    %edx
call   804c180 <fchmod@plt+0x11e0>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
fldl   0x809da18
fucomip %st(1),%st
fstp   %st(0)
jb     804c41f <fchmod@plt+0x147f>
call   804aaf0 <__errno_location@plt>
xor    %esi,%esi
movl   $0x1c,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   8068900 <fchmod@plt+0x1d960>
mov    %eax,%esi
jmp    804c432 <fchmod@plt+0x1492>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,0xc(%esp)
jbe    804c4aa <fchmod@plt+0x150a>
mov    %edi,%ecx
xor    %ebx,%ebx
jmp    804c4aa <fchmod@plt+0x150a>
mov    %ecx,%eax
jmp    804c48a <fchmod@plt+0x14ea>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x809da00,%ebx
mov    0x809da04(,%ebx,4),%eax
test   %eax,%eax
je     804c568 <fchmod@plt+0x15c8>
mov    0x809e4b0,%edx
mov    %eax,0x809e274
mov    %eax,0x809e288
shl    $0x9,%edx
add    %edx,%eax
mov    %eax,0x809e258
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e524,%eax
mov    %eax,0x4(%esp)
lea    0x809da0c(,%ebx,4),%eax
mov    %eax,(%esp)
call   80636a0 <fchmod@plt+0x18700>
mov    %eax,0x809da04(,%ebx,4)
mov    0x809da00,%eax
mov    0x809da04(,%eax,4),%eax
jmp    804c545 <fchmod@plt+0x15a5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
cmpl   $0x4,0x809e500
je     804c5e0 <fchmod@plt+0x1640>
mov    0x809e2f4,%eax
cmp    $0xffffffff,%eax
je     804c5c0 <fchmod@plt+0x1620>
test   %eax,%eax
setne  0x809e528
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e2f8
jne    804c5d2 <fchmod@plt+0x1632>
mov    0x809e51c,%eax
test   %eax,%eax
je     804c5f0 <fchmod@plt+0x1650>
movb   $0x0,0x809e528
ret
lea    0x0(%esi),%esi
movb   $0x0,0x809e528
jmp    804c5a9 <fchmod@plt+0x1609>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809e544,%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    804c62d <fchmod@plt+0x168d>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   0x809e528
add    $0x7c,%esp
ret
movb   $0x0,0x809e528
jmp    804c629 <fchmod@plt+0x1689>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
addl   $0x1,0x809c3e4
js     804c651 <fchmod@plt+0x16b1>
addl   $0x1,0x809c3e8
ret
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x80864e0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%esp),%eax
mov    0x30(%esp),%edx
cmpb   $0x0,0x809e2f8
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
jne    804c6c0 <fchmod@plt+0x1720>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x1c,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebx
mov    0x809d9d8,%eax
test   %eax,%eax
je     804c720 <fchmod@plt+0x1780>
mov    %ebx,(%eax)
mov    0x809e288,%eax
sub    0x809e274,%eax
mov    %ebx,0x809d9d8
movl   $0x0,(%ebx)
sar    $0x9,%eax
mov    %eax,0x4(%ebx)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0xc(%esp),%edx
mov    %esi,0xc(%ebx)
mov    %edi,0x10(%ebx)
mov    %edx,0x18(%ebx)
mov    %eax,0x8(%ebx)
mov    0x8(%esp),%eax
mov    %eax,0x14(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ebx,0x809d9dc
jmp    804c6d9 <fchmod@plt+0x1739>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x809d9ac,(%esp)
call   805b500 <fchmod@plt+0x10560>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%ecx
mov    0x58(%ecx),%eax
mov    0x5c(%ecx),%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   804c690 <fchmod@plt+0x16f0>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e2f8
jne    804c790 <fchmod@plt+0x17f0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804c110 <fchmod@plt+0x1170>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809d9dc,%ecx
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
test   %ecx,%ecx
je     804c7b8 <fchmod@plt+0x1818>
mov    %eax,0x14(%ecx)
mov    %edx,0x18(%ecx)
repz ret
lea    0x0(%esi),%esi
movl   $0x0,0x809d9ec
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x809e49c,(%esp)
call   807a050 <argp_parse+0x2110>
mov    0x809e49c,%eax
mov    0x809e4a0,%edx
mov    %eax,0x809e52c
mov    %edx,0x809e530
mov    %eax,0x809e504
mov    %edx,0x809e508
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   807a050 <argp_parse+0x2110>
mov    0x18(%esp),%eax
sub    0x809e504,%eax
movl   $0x809e504,(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
sub    0x809e508,%eax
fildl  0xc(%esp)
mov    %eax,0xc(%esp)
fildl  0xc(%esp)
fdivs  0x8086bd4
faddp  %st,%st(1)
faddl  0x809d8d0
fstpl  0x809d8d0
call   807a050 <argp_parse+0x2110>
add    $0x2c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809e51c,%eax
test   %eax,%eax
je     804c880 <fchmod@plt+0x18e0>
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x809d8c8,%ebx
test   %ebx,%ebx
je     804c8c6 <fchmod@plt+0x1926>
mov    0x8(%esp),%eax
movl   $0x0,(%eax)
mov    0x809c360,%eax
test   %eax,%eax
je     804c8ed <fchmod@plt+0x194d>
cmp    %eax,%ebx
je     804c8f1 <fchmod@plt+0x1951>
mov    $0x809c36c,%eax
xor    %ecx,%ecx
jmp    804c8b7 <fchmod@plt+0x1917>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%eax
cmp    %edx,%ebx
je     804c8d0 <fchmod@plt+0x1930>
mov    (%eax),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    804c8b0 <fchmod@plt+0x1910>
mov    0x8(%esp),%eax
mov    %ecx,(%eax)
pop    %ebx
xor    %eax,%eax
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%ebx
lea    (%ecx,%ecx,2),%eax
add    $0x1,%ecx
lea    0x809c360(,%eax,4),%eax
test   %eax,%eax
mov    %ecx,(%ebx)
je     804c8c6 <fchmod@plt+0x1926>
mov    0x4(%eax),%eax
pop    %ebx
jmp    804c8c9 <fchmod@plt+0x1929>
xor    %ecx,%ecx
jmp    804c8c0 <fchmod@plt+0x1920>
mov    0x8(%esp),%eax
movl   $0x1,(%eax)
mov    $0x809c360,%eax
jmp    804c8e7 <fchmod@plt+0x1947>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809e51c,%eax
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
test   %eax,%eax
jne    804c964 <fchmod@plt+0x19c4>
mov    (%edi),%ebx
mov    0x809d8c8,%esi
lea    (%ebx,%ebx,2),%eax
mov    0x809c360(,%eax,4),%eax
test   %eax,%eax
je     804c962 <fchmod@plt+0x19c2>
cmp    %eax,%esi
je     804c970 <fchmod@plt+0x19d0>
lea    0x1(%ebx),%eax
lea    (%eax,%eax,2),%edx
lea    0x809c360(,%edx,4),%edx
jmp    804c95a <fchmod@plt+0x19ba>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%edx
cmp    %ecx,%esi
je     804c970 <fchmod@plt+0x19d0>
add    $0x1,%eax
mov    (%edx),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    804c950 <fchmod@plt+0x19b0>
mov    %ebx,(%edi)
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x1(%ebx),%eax
mov    %eax,(%edi)
lea    (%ebx,%ebx,2),%eax
lea    0x809c360(,%eax,4),%eax
test   %eax,%eax
je     804c964 <fchmod@plt+0x19c4>
pop    %ebx
mov    0x4(%eax),%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x54,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x809e500,%eax
lea    -0x1(%eax),%ecx
cmp    $0x7,%ecx
ja     804cc00 <fchmod@plt+0x1c60>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x87,%al
jne    804cb80 <fchmod@plt+0x1be0>
test   $0x70,%al
jne    804cbc8 <fchmod@plt+0x1c28>
test   $0x8,%al
je     804cc00 <fchmod@plt+0x1c60>
mov    0x809e524,%eax
mov    0x809e254,%ecx
movl   $0x5,0x8(%esp)
movl   $0x808650b,0x4(%esp)
movl   $0x0,(%esp)
imul   %eax,%ecx
mull   0x809e250
add    %ecx,%edx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
fildll 0x28(%esp)
fstpl  0x18(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%edx
mov    0x809d864,%eax
fldl   0x18(%esp)
fstpl  (%esp)
call   804c1b0 <fchmod@plt+0x1210>
movl   $0x5,0x8(%esp)
movl   $0x80864f7,0x4(%esp)
movl   $0x0,(%esp)
fldl   0x809da20
faddl  0x809da18
fstpl  0x18(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%edx
mov    0x809d864,%eax
fldl   0x18(%esp)
fstpl  (%esp)
call   804c1b0 <fchmod@plt+0x1210>
lea    0x37(%esp),%eax
mov    0x809e254,%edx
mov    %eax,0x8(%esp)
mov    0x809e250,%eax
sub    0x809e2a0,%eax
mov    0x809e524,%ecx
sbb    0x809e2a4,%edx
mov    %edx,%esi
imul   %ecx,%esi
mul    %ecx
add    %esi,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
fildll 0x28(%esp)
fldl   0x809da20
faddl  0x809da18
fsubrp %st,%st(1)
flds   0x8086bd0
fxch   %st(1)
fucomi %st(1),%st
jae    804cb48 <fchmod@plt+0x1ba8>
fstp   %st(1)
fnstcw 0x26(%esp)
movzwl 0x26(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x24(%esp)
fldcw  0x24(%esp)
fistpll 0x28(%esp)
fldcw  0x26(%esp)
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x808651c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    804cc05 <fchmod@plt+0x1c65>
add    $0x54,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
fnstcw 0x26(%esp)
fsubp  %st,%st(1)
movzwl 0x26(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x24(%esp)
fldcw  0x24(%esp)
fistpll 0x28(%esp)
fldcw  0x26(%esp)
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
lea    -0x80000000(%edx),%ecx
mov    %ecx,%edx
jmp    804cae3 <fchmod@plt+0x1b43>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   0x809da20
faddl  0x809da18
movl   $0x5,0x8(%esp)
movl   $0x80864f7,0x4(%esp)
fstpl  0x18(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%edx
mov    0x809d864,%eax
fldl   0x18(%esp)
fstpl  (%esp)
call   804c1b0 <fchmod@plt+0x1210>
jmp    804cb2a <fchmod@plt+0x1b8a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e524,%eax
mov    0x809e254,%ecx
movl   $0x5,0x8(%esp)
movl   $0x808650b,0x4(%esp)
imul   %eax,%ecx
mull   0x809e250
add    %ecx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
fildll 0x28(%esp)
fstpl  0x18(%esp)
jmp    804cba0 <fchmod@plt+0x1c00>
call   804ae30 <abort@plt>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
mov    0x809e288,%eax
sub    0x809e274,%eax
sar    $0x9,%eax
cltd
add    0x809d9f8,%eax
adc    0x809d9fc,%edx
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809d9e9
je     804cc65 <fchmod@plt+0x1cc5>
mov    0x809e4b0,%eax
mov    0x809e274,%edx
movb   $0x0,0x809d9e9
movl   $0x1,0x809e268
00
shl    $0x9,%eax
add    %edx,%eax
mov    %edx,0x809e288
mov    %eax,0x809e258
repz ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x809e288,%eax
mov    0x10(%esp),%edx
cmp    %eax,%edx
jb     804cc94 <fchmod@plt+0x1cf4>
sub    %eax,%edx
and    $0xfffffe00,%edx
lea    0x200(%eax,%edx,1),%eax
mov    %eax,0x809e288
cmp    %eax,0x809e258
jb     804cca0 <fchmod@plt+0x1d00>
add    $0xc,%esp
ret
call   804ae30 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x809d8e0,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
movl   $0x0,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x1,%eax
je     804cd28 <fchmod@plt+0x1d88>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    $0x1,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0x809e258,%eax
sub    0x4(%esp),%eax
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    804cd68 <fchmod@plt+0x1dc8>
add    $0x1c,%esp
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x8086535,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    806f480 <fchmod@plt+0x244e0>
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x809e48e
jne    804cdbe <fchmod@plt+0x1e1e>
mov    0x809e524,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   80635e0 <fchmod@plt+0x18640>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
call   804c990 <fchmod@plt+0x19f0>
mov    %esi,(%ebx)
jmp    804cd9e <fchmod@plt+0x1dfe>
sub    $0x1c,%esp
call   804c3f0 <fchmod@plt+0x1450>
cmp    0x809e524,%eax
jne    804ce06 <fchmod@plt+0x1e66>
mov    %eax,0xc(%esp)
fildl  0xc(%esp)
faddl  0x809da18
addl   $0x1,0x809e260
adcl   $0x0,0x809e264
fstpl  0x809da18
add    $0x1c,%esp
ret
mov    %eax,(%esp)
call   804cd90 <fchmod@plt+0x1df0>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f620 <fchmod@plt+0x24680>
mov    0x809d9fc,%eax
or     0x809d9f8,%eax
je     804ce46 <fchmod@plt+0x1ea6>
mov    0x809d9ec,%eax
lea    0x1(%eax),%edx
cmp    $0xa,%eax
mov    %edx,0x809d9ec
jg     804ce7f <fchmod@plt+0x1edf>
add    $0x1c,%esp
ret
movl   $0x5,0x8(%esp)
movl   $0x80866f4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x808653c,0x4(%esp)
jmp    804ce56 <fchmod@plt+0x1eb6>
jmp    804cea0 <fchmod@plt+0x1f00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x8c,%esp
mov    0x809e274,%edi
mov    0x809e524,%esi
add    %eax,%edi
sub    %eax,%esi
je     804ceca <fchmod@plt+0x1f2a>
test   $0x1ff,%esi
je     804cf7d <fchmod@plt+0x1fdd>
test   $0x1ff,%esi
jne    804cf49 <fchmod@plt+0x1fa9>
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     804cf4d <fchmod@plt+0x1fad>
test   %esi,%esi
je     804cf4d <fchmod@plt+0x1fad>
cmpb   $0x0,0x809d9e8
jne    804cf09 <fchmod@plt+0x1f69>
jmp    804cf4d <fchmod@plt+0x1fad>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070a20 <fchmod@plt+0x25a80>
mov    %eax,%ebx
cmp    $0xffffffff,%ebx
jne    804cf2c <fchmod@plt+0x1f8c>
call   804ce10 <fchmod@plt+0x1e70>
mov    0x809e544,%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
cmp    $0x3fffffff,%eax
jg     804cef0 <fchmod@plt+0x1f50>
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
mov    %eax,%ebx
cmp    $0xffffffff,%ebx
je     804cf04 <fchmod@plt+0x1f64>
test   %ebx,%ebx
je     804cf4d <fchmod@plt+0x1fad>
cmpb   $0x0,0x809d9e8
je     804d030 <fchmod@plt+0x2090>
sub    %ebx,%esi
add    %ebx,%edi
test   $0x1ff,%esi
je     804ced8 <fchmod@plt+0x1f38>
test   %ebx,%ebx
jne    804cf09 <fchmod@plt+0x1f69>
mov    0x809e524,%eax
sub    %esi,%eax
and    $0xfffffe00,%eax
add    0x809e274,%eax
addl   $0x1,0x809e250
adcl   $0x0,0x809e254
mov    %eax,0x809e258
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
testb  $0x40,0x809d642
je     804ceca <fchmod@plt+0x1f2a>
mov    0x809d9fc,%eax
or     0x809d9f8,%eax
jne    804ceca <fchmod@plt+0x1f2a>
test   %ebx,%ebx
je     804ceca <fchmod@plt+0x1f2a>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809e544,%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    804d081 <fchmod@plt+0x20e1>
mov    0x30(%esp),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
jne    804ceca <fchmod@plt+0x1f2a>
mov    %ebx,%ebp
shr    $0x9,%ebp
movl   $0x5,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x8086556,0x8(%esp)
movl   $0x808656f,0x4(%esp)
movl   $0x0,(%esp)
call   804aee0 <dcngettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    804ceca <fchmod@plt+0x1f2a>
lea    0x0(%esi),%esi
mov    0x809e524,%ebx
movl   $0x5,0x10(%esp)
movl   $0x8086718,0x8(%esp)
movl   $0x8086740,0x4(%esp)
sub    %esi,%ebx
mov    %ebx,0xc(%esp)
movl   $0x0,(%esp)
call   804aee0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8063530 <fchmod@plt+0x18590>
jmp    804ceca <fchmod@plt+0x1f2a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8050090 <fchmod@plt+0x50f0>
cmpb   $0x0,0x809e278
movl   $0x0,0x809d9ec
00
je     804d0cf <fchmod@plt+0x212f>
mov    0x809d9fc,%eax
or     0x809d9f8,%eax
jne    804d138 <fchmod@plt+0x2198>
mov    0x809e544,%edx
mov    0x809e524,%eax
mov    %eax,0x8(%esp)
mov    0x809e274,%eax
cmp    $0x3fffffff,%edx
mov    %eax,0x4(%esp)
jle    804d118 <fchmod@plt+0x2178>
sub    $0x40000000,%edx
mov    %edx,(%esp)
call   8070a20 <fchmod@plt+0x25a80>
cmp    0x809e524,%eax
je     804d160 <fchmod@plt+0x21c0>
cmp    $0xffffffff,%eax
je     804d128 <fchmod@plt+0x2188>
add    $0x1c,%esp
jmp    804cea0 <fchmod@plt+0x1f00>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   8080b00 <argp_parse+0x8bc0>
jmp    804d0fd <fchmod@plt+0x215d>
lea    0x0(%esi),%esi
call   804ce10 <fchmod@plt+0x1e70>
lea    0x0(%esi),%esi
jmp    804d0cf <fchmod@plt+0x212f>
lea    0x0(%esi),%esi
movl   $0x1,0x809e544
00
call   8068900 <fchmod@plt+0x1d960>
movl   $0x0,0x809e544
00
cmp    0x809e524,%eax
jne    804d172 <fchmod@plt+0x21d2>
xor    %edx,%edx
jmp    804d0da <fchmod@plt+0x213a>
addl   $0x1,0x809e250
adcl   $0x0,0x809e254
add    $0x1c,%esp
ret
mov    %eax,(%esp)
call   804cd90 <fchmod@plt+0x1df0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e274,%esi
mov    0x809e258,%eax
mov    0x809e288,%edi
mov    %esi,0x809e288
sub    %esi,%eax
sar    $0x9,%eax
cltd
add    %eax,0x809d9f8
mov    0x809e4b0,%eax
adc    %edx,0x809d9fc
shl    $0x9,%eax
add    %esi,%eax
mov    %eax,0x809e258
mov    0x809e268,%eax
test   %eax,%eax
jne    804d32e <fchmod@plt+0x238e>
cmpb   $0x0,0x809e550
jne    804d1e8 <fchmod@plt+0x2248>
call   *0x809d9e0
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4,%eax
mov    %ax,0x18(%esp)
mov    0x809e544,%eax
lea    0x18(%esp),%ebx
movl   $0x1,0x809e268
00
movb   $0x0,0x809e550
movl   $0x1,0x1c(%esp)
cmp    $0x3fffffff,%eax
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
jle    804d360 <fchmod@plt+0x23c0>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
not    %eax
shr    $0x1f,%eax
test   %al,%al
jne    804d329 <fchmod@plt+0x2389>
call   804aaf0 <__errno_location@plt>
cmpl   $0x5,(%eax)
je     804d3b8 <fchmod@plt+0x2418>
mov    0x809e544,%eax
cmp    $0x3fffffff,%eax
jg     804d378 <fchmod@plt+0x23d8>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
mov    0x809e524,%ecx
xor    %ebx,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,%ebp
test   %edx,%edx
mov    %edx,%ebx
js     804d3f0 <fchmod@plt+0x2450>
mov    0x809e544,%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,0x8(%esp)
cmp    $0x3fffffff,%eax
jle    804d3a8 <fchmod@plt+0x2408>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
xor    %edx,%ebx
xor    %eax,%ebp
or     %ebp,%ebx
je     804d329 <fchmod@plt+0x2389>
movl   $0x5,0x8(%esp)
movl   $0x8086768,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809e274,%eax
mov    0x809e554,%edx
cmp    %edx,%eax
je     804d329 <fchmod@plt+0x2389>
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    0x809e268,%eax
cmp    $0x1,%eax
je     804d348 <fchmod@plt+0x23a8>
jb     804d1d5 <fchmod@plt+0x2235>
cmp    $0x2,%eax
jne    804d1db <fchmod@plt+0x223b>
call   804ae30 <abort@plt>
nop
sub    %esi,%edi
mov    %edi,(%esp)
call   *0x809d9e4
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
not    %eax
shr    $0x1f,%eax
jmp    804d23d <fchmod@plt+0x229d>
lea    0x0(%esi),%esi
sub    $0x40000000,%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
jmp    804d283 <fchmod@plt+0x22e3>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
jmp    804d2c8 <fchmod@plt+0x2328>
lea    0x0(%esi),%esi
mov    0x809e544,%eax
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
cmp    $0x3fffffff,%eax
jle    804d400 <fchmod@plt+0x2460>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
not    %eax
shr    $0x1f,%eax
test   %al,%al
je     804d253 <fchmod@plt+0x22b3>
jmp    804d329 <fchmod@plt+0x2389>
nop
xor    %ebp,%ebp
xor    %ebx,%ebx
jmp    804d29b <fchmod@plt+0x22fb>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
not    %eax
shr    $0x1f,%eax
jmp    804d3e2 <fchmod@plt+0x2442>
nop
mov    0x809e288,%eax
cmp    0x809e258,%eax
je     804d420 <fchmod@plt+0x2480>
ret
xchg   %ax,%ax
xor    %eax,%eax
cmpb   $0x0,0x809d9e9
jne    804d41d <fchmod@plt+0x247d>
sub    $0x1c,%esp
mov    %eax,0xc(%esp)
call   804d180 <fchmod@plt+0x21e0>
mov    0x809e288,%edx
cmp    0x809e258,%edx
mov    0xc(%esp),%eax
je     804d44f <fchmod@plt+0x24af>
mov    %edx,%eax
add    $0x1c,%esp
ret
movb   $0x1,0x809d9e9
jmp    804d44b <fchmod@plt+0x24ab>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
cmpl   $0x4,0x809e4e4
je     804d560 <fchmod@plt+0x25c0>
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%ebx
mov    %eax,%edi
jne    804d580 <fchmod@plt+0x25e0>
test   $0x2,%edi
jne    804d590 <fchmod@plt+0x25f0>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    804d548 <fchmod@plt+0x25a8>
and    $0x1,%edx
jne    804d540 <fchmod@plt+0x25a0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x64,0x8(%esp)
call   804abe0 <__strcpy_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x809e324,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   80793f0 <argp_parse+0x14b0>
movb   $0x56,0x9c(%ebx)
movl   $0xc,0x8(%esp)
mov    %al,0x809e328
lea    0x88(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x809e49c,%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x71a0>
mov    %ebx,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x809e320,(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movb   $0x0,(%edi)
jmp    804d4b2 <fchmod@plt+0x2512>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804d4b2 <fchmod@plt+0x2512>
jmp    804d540 <fchmod@plt+0x25a0>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
movl   $0x8086587,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
jmp    804d48b <fchmod@plt+0x24eb>
nop
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804d497 <fchmod@plt+0x24f7>
jmp    804d5b0 <fchmod@plt+0x2610>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x44,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x27(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809c3e8,%eax
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%esi
mov    0x809e470,%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   804a950 <strlen@plt>
lea    0x9(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %esi,0x18(%esp)
movl   $0x8086598,0x14(%esp)
movl   $0x808659f,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    0x809e470,%eax
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %ebx,%eax
call   804d460 <fchmod@plt+0x24c0>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    804d65b <fchmod@plt+0x26bb>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
test   %ebx,%ebx
movzbl 0x809d9e8,%esi
lea    0x1f(%esp),%eax
cmove  %eax,%ebx
mov    0x809e274,%eax
movb   $0x1,0x809d9e8
mov    %eax,0x809e258
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %esi,%eax
mov    %al,0x809d9e8
mov    0x809e274,%eax
sete   (%ebx)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8060060 <fchmod@plt+0x150c0>
cmp    $0x1,%eax
je     804d700 <fchmod@plt+0x2760>
mov    0x809e274,%esi
mov    $0x8086b78,%ebx
xchg   %ax,%ax
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
je     804d710 <fchmod@plt+0x2770>
add    $0xc,%ebx
cmp    $0x8086bcc,%ebx
jb     804d6d0 <fchmod@plt+0x2730>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x24,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809d9f8,%edi
mov    0x809e288,%esi
sub    0x809e274,%esi
mov    0x44(%esp),%edx
mov    %edi,0x10(%esp)
mov    0x809e4b0,%edi
mov    %esi,%ecx
mov    0x809d9fc,%ebp
sar    $0x9,%ecx
mov    0x40(%esp),%eax
sub    %ecx,%edi
shl    $0x9,%edi
mov    %edi,%ebx
sar    $0x1f,%ebx
cmp    %edx,%ebx
mov    %ebp,0x14(%esp)
jg     804d8a0 <fchmod@plt+0x2900>
mov    %edi,%ecx
jge    804d898 <fchmod@plt+0x28f8>
mov    0x809e524,%edi
xor    %ebp,%ebp
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
mov    %edx,0x4(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    %edx,%ebx
or     %eax,%ebx
je     804d8a0 <fchmod@plt+0x2900>
mov    %edx,%ebx
mov    0x809e544,%ecx
mul    %edi
imul   %edi,%ebx
movl   $0x1,0xc(%esp)
mov    %eax,0x4(%esp)
add    %ebx,%edx
cmp    $0x3fffffff,%ecx
mov    %edx,0x8(%esp)
jg     804d8b0 <fchmod@plt+0x2910>
mov    %ecx,(%esp)
call   804ada0 <lseek64@plt>
mov    %eax,%edi
mov    %edx,%ebp
test   %ebp,%ebp
js     804d8c8 <fchmod@plt+0x2928>
mov    0x809e524,%ebx
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,0x8(%esp)
call   8085fd0 <argp_parse+0xe090>
or     %eax,%edx
jne    804d8ce <fchmod@plt+0x292e>
sar    $0x9,%esi
mov    %edi,%ecx
mov    %ebp,%ebx
mov    %esi,%edi
shrd   $0x9,%ebp,%ecx
sar    $0x9,%ebx
mov    %ecx,%eax
sar    $0x1f,%edi
mov    %ebx,%edx
add    0x10(%esp),%esi
adc    0x14(%esp),%edi
mov    %ecx,0x18(%esp)
sub    %esi,%eax
mov    0x809e4b0,%esi
sbb    %edi,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
add    %eax,0x809e250
mov    0x809e258,%eax
adc    %edx,0x809e254
sub    %esi,%ecx
sbb    %edi,%ebx
mov    0x14(%esp),%edx
mov    %ebx,0x809d9fc
mov    %eax,0x809e288
mov    0x10(%esp),%eax
mov    %ecx,0x809d9f8
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%edi
jb     804d774 <fchmod@plt+0x27d4>
xor    %eax,%eax
xor    %edx,%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x40000000,%ecx
mov    %ecx,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
mov    %eax,%edi
mov    %edx,%ebp
jmp    804d7d5 <fchmod@plt+0x2835>
nop
mov    %edi,%eax
mov    %ebp,%edx
jmp    804d8a4 <fchmod@plt+0x2904>
movl   $0x5,0x8(%esp)
movl   $0x80867a8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
cmpb   $0x0,0x809e550
jne    804d9c8 <fchmod@plt+0x2a28>
cmpl   $0x1,0x809e268
je     804d9c8 <fchmod@plt+0x2a28>
call   804c810 <fchmod@plt+0x1870>
cmpb   $0x0,0x809e4f6
jne    804d9f8 <fchmod@plt+0x2a58>
mov    0x809e544,%eax
cmp    $0x3fffffff,%eax
jle    804d9b8 <fchmod@plt+0x2a18>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   80709e0 <fchmod@plt+0x25a40>
test   %eax,%eax
setne  %al
test   %al,%al
je     804d970 <fchmod@plt+0x29d0>
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
movzbl 0x809d9e9,%eax
mov    %eax,0x4(%esp)
mov    0x809d9f0,%eax
mov    %eax,(%esp)
call   80686c0 <fchmod@plt+0x1d720>
movl   $0x809e320,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
mov    0x809da0c,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809da10,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
jmp    804c110 <fchmod@plt+0x1170>
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
setne  %al
jmp    804d95d <fchmod@plt+0x29bd>
nop
call   804d180 <fchmod@plt+0x21e0>
mov    0x809e274,%eax
cmp    %eax,0x809e288
jbe    804d92d <fchmod@plt+0x298d>
call   804d180 <fchmod@plt+0x21e0>
call   804c810 <fchmod@plt+0x1870>
cmpb   $0x0,0x809e4f6
je     804d93f <fchmod@plt+0x299f>
lea    0x0(%esi),%esi
call   80510c0 <fchmod@plt+0x6120>
jmp    804d93f <fchmod@plt+0x299f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x809e478,%eax
movl   $0x8089290,0x4(%esp)
mov    %eax,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804daa8 <fchmod@plt+0x2b08>
movl   $0x809c3e4,0x8(%esp)
movl   $0x808903e,0x4(%esp)
mov    %eax,(%esp)
call   804a940 <fscanf@plt>
cmp    $0x1,%eax
jne    804dacc <fchmod@plt+0x2b2c>
mov    0x809c3e4,%eax
test   %eax,%eax
js     804dacc <fchmod@plt+0x2b2c>
testb  $0x20,(%ebx)
jne    804da88 <fchmod@plt+0x2ae8>
mov    %ebx,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
jne    804da70 <fchmod@plt+0x2ad0>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806f620 <fchmod@plt+0x24680>
mov    %ebx,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
je     804da6a <fchmod@plt+0x2aca>
jmp    804da70 <fchmod@plt+0x2ad0>
nop
lea    0x0(%esi,%eiz,1),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     804da6a <fchmod@plt+0x2aca>
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
add    $0x18,%esp
pop    %ebx
ret
mov    0x809e478,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80867d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x809e478,%eax
movl   $0x80892d7,0x4(%esp)
mov    %eax,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804dba8 <fchmod@plt+0x2c08>
mov    0x809c3e4,%eax
movl   $0x808d2b7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   804adf0 <__fprintf_chk@plt>
testb  $0x20,(%ebx)
jne    804db78 <fchmod@plt+0x2bd8>
mov    %ebx,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
jne    804db91 <fchmod@plt+0x2bf1>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806fc20 <fchmod@plt+0x24c80>
mov    %ebx,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
je     804db71 <fchmod@plt+0x2bd1>
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e478,%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
mov    0x809d8c4,%edi
test   %edi,%edi
je     804e2b8 <fchmod@plt+0x3318>
cmpb   $0x0,0x809e298
jne    804e048 <fchmod@plt+0x30a8>
cmpb   $0x0,0x809e4f6
jne    804e178 <fchmod@plt+0x31d8>
movl   $0x0,0x4(%esp)
movl   $0x809e26c,(%esp)
call   8062250 <fchmod@plt+0x172b0>
movl   $0x0,0x4(%esp)
movl   $0x809e270,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809e274,%eax
movl   $0x0,0x809e290
00
movl   $0x0,0x809e294
00
movl   $0x0,0x809e280
00
mov    %eax,0x809e288
mov    0x809e544,%eax
movl   $0x0,0x809e284
00
cmp    $0x3fffffff,%eax
jg     804dd18 <fchmod@plt+0x2d78>
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    804dd32 <fchmod@plt+0x2d92>
mov    0x809e4a8,%eax
mov    0x809e488,%edx
mov    0x809e4f8,%ecx
add    $0x4,%eax
mov    %eax,0x809e4a8
lea    (%edx,%ecx,4),%ecx
cmp    %ecx,%eax
je     804e2e0 <fchmod@plt+0x3340>
mov    0x809d8c0,%eax
test   %eax,%eax
lea    0x28(%esp),%ebp
je     804dce5 <fchmod@plt+0x2d45>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e4c8,%edx
test   %edx,%edx
je     804ddc0 <fchmod@plt+0x2e20>
mov    0x809e478,%eax
test   %eax,%eax
je     804dcc4 <fchmod@plt+0x2d24>
call   804db20 <fchmod@plt+0x2b80>
mov    0x809c3e4,%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x809e4a8,%eax
mov    %eax,(%esp)
call   80694d0 <fchmod@plt+0x1e530>
test   %eax,%eax
jne    804e366 <fchmod@plt+0x33c6>
mov    0x809e4a8,%esi
mov    (%esi),%eax
cmpb   $0x2d,(%eax)
jne    804dd48 <fchmod@plt+0x2da8>
cmpb   $0x0,0x1(%eax)
jne    804dd48 <fchmod@plt+0x2da8>
movb   $0x1,0x809d9e8
mov    $0x1,%eax
movl   $0x0,0x809e544
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   80709e0 <fchmod@plt+0x25a40>
test   %eax,%eax
setne  %al
test   %al,%al
je     804dc70 <fchmod@plt+0x2cd0>
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
jmp    804dc70 <fchmod@plt+0x2cd0>
xchg   %ax,%ax
cmpb   $0x0,0x809e4f6
jne    804df08 <fchmod@plt+0x2f68>
cmp    $0x1,%ebx
je     804dfd0 <fchmod@plt+0x3030>
jb     804df78 <fchmod@plt+0x2fd8>
cmp    $0x2,%ebx
je     804df08 <fchmod@plt+0x2f68>
mov    0x809e544,%eax
test   %eax,%eax
jns    804e3dc <fchmod@plt+0x343c>
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f600 <fchmod@plt+0x24660>
cmpb   $0x0,0x809e4f6
jne    804dca8 <fchmod@plt+0x2d08>
cmp    $0x1,%ebx
jne    804dca8 <fchmod@plt+0x2d08>
cmpb   $0x0,0x809e4b9
je     804dca8 <fchmod@plt+0x2d08>
call   8062fc0 <fchmod@plt+0x18020>
mov    0x809e4c8,%edx
test   %edx,%edx
jne    804dcb6 <fchmod@plt+0x2d16>
nop
mov    0x809d8c4,%eax
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x1c(%esp)
mov    0x809d864,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804e3c7 <fchmod@plt+0x3427>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x7,(%edx)
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80867f8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
mov    0x809c3e4,%eax
lea    0x1(%eax),%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804a670 <fflush_unlocked@plt>
mov    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   804a6e0 <__getdelim@plt>
test   %eax,%eax
jle    804e3b2 <fchmod@plt+0x3412>
mov    0x28(%esp),%edx
movzbl (%edx),%eax
cmp    $0xa,%al
je     804e10f <fchmod@plt+0x316f>
mov    %eax,%ecx
and    $0xffffffdf,%ecx
cmp    $0x59,%cl
je     804e10f <fchmod@plt+0x316f>
cmp    $0x3f,%al
je     804e120 <fchmod@plt+0x3180>
jle    804e058 <fchmod@plt+0x30b8>
cmp    $0x6e,%al
nop
lea    0x0(%esi,%eiz,1),%esi
je     804e0a8 <fchmod@plt+0x3108>
cmp    $0x71,%al
jne    804e069 <fchmod@plt+0x30c9>
movl   $0x5,0x8(%esp)
movl   $0x80865c3,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809e500,%eax
sub    $0x5,%eax
cmp    $0x2,%eax
ja     804e203 <fchmod@plt+0x3263>
call   8055fc0 <fchmod@plt+0xb020>
cmpb   $0x0,0x809e558
jne    804df70 <fchmod@plt+0x2fd0>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%esi
je     804df4e <fchmod@plt+0x2fae>
cmp    %esi,%eax
jbe    804df4e <fchmod@plt+0x2fae>
sub    %esi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804e2fa <fchmod@plt+0x335a>
movl   $0x1b6,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %esi,(%esp)
call   804a410 <open64@plt>
mov    %eax,0x809e544
jmp    804dd72 <fchmod@plt+0x2dd2>
mov    %eax,%esi
jmp    804df4e <fchmod@plt+0x2fae>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e558
jne    804e288 <fchmod@plt+0x32e8>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%esi
je     804dfa8 <fchmod@plt+0x3008>
cmp    %esi,%eax
ja     804e188 <fchmod@plt+0x31e8>
movl   $0x1b6,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a410 <open64@plt>
mov    %eax,0x809e544
call   804c5a0 <fchmod@plt+0x1600>
jmp    804dd6d <fchmod@plt+0x2dcd>
nop
cmpb   $0x0,0x809e4b9
mov    %eax,%edx
jne    804e298 <fchmod@plt+0x32f8>
cmpb   $0x0,0x809e558
jne    804e02d <fchmod@plt+0x308d>
mov    %edx,(%esp)
movl   $0x3a,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%edx
je     804e02d <fchmod@plt+0x308d>
cmp    %edx,%eax
jbe    804e02d <fchmod@plt+0x308d>
sub    %edx,%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %edx,0x1c(%esp)
call   804ab00 <memchr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804e327 <fchmod@plt+0x3387>
movl   $0x1b6,0x4(%esp)
mov    %edx,(%esp)
call   804ae50 <creat64@plt>
jmp    804df66 <fchmod@plt+0x2fc6>
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x21,%al
jne    804e069 <fchmod@plt+0x30c9>
cmpb   $0x0,0x809e4cc
je     804e276 <fchmod@plt+0x32d6>
movl   $0x5,0x8(%esp)
movl   $0x808695c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    804ddd9 <fchmod@plt+0x2e39>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
movzbl 0x1(%edx),%edx
cmp    $0x9,%dl
jne    804e0c3 <fchmod@plt+0x3123>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     804e0b8 <fchmod@plt+0x3118>
cmp    $0x20,%dl
je     804e0b8 <fchmod@plt+0x3118>
test   %dl,%dl
je     804e320 <fchmod@plt+0x3380>
cmp    $0xa,%dl
je     804e320 <fchmod@plt+0x3380>
mov    %eax,%edx
jmp    804e0e4 <fchmod@plt+0x3144>
lea    0x0(%esi),%esi
test   %cl,%cl
je     804e0ef <fchmod@plt+0x314f>
add    $0x1,%edx
movzbl (%edx),%ecx
cmp    $0xa,%cl
jne    804e0e0 <fchmod@plt+0x3140>
movb   $0x0,(%edx)
cmpb   $0x0,(%eax)
je     804e1d0 <fchmod@plt+0x3230>
mov    %eax,(%esp)
mov    0x809e4a8,%esi
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esi)
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   804a4c0 <free@plt>
jmp    804dce5 <fchmod@plt+0x2d45>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086868,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
cmpb   $0x0,0x809e4cc
je     804e23c <fchmod@plt+0x329c>
movl   $0x5,0x8(%esp)
movl   $0x8086914,0x4(%esp)
jmp    804e079 <fchmod@plt+0x30d9>
nop
call   80510c0 <fchmod@plt+0x6120>
jmp    804dbf1 <fchmod@plt+0x2c51>
lea    0x0(%esi),%esi
sub    %esi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
jne    804dfa8 <fchmod@plt+0x3008>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804dfc0 <fchmod@plt+0x3020>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086934,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x809d864,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804aeb0 <fputs@plt>
jmp    804ddd9 <fchmod@plt+0x2e39>
movl   $0x5,0x8(%esp)
movl   $0x8086848,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    804df03 <fchmod@plt+0x2f63>
movl   $0x5,0x8(%esp)
movl   $0x80868f0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    804e162 <fchmod@plt+0x31c2>
call   8068790 <fchmod@plt+0x1d7f0>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804ddd9 <fchmod@plt+0x2e39>
lea    0x0(%esi),%esi
mov    %eax,%esi
lea    0x0(%esi),%esi
jmp    804dfa8 <fchmod@plt+0x3008>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8062d60 <fchmod@plt+0x17dc0>
mov    0x809e4a8,%esi
mov    (%esi),%edx
jmp    804dfdf <fchmod@plt+0x303f>
lea    0x0(%esi),%esi
mov    0x809e4c8,%esi
test   %esi,%esi
jne    804dbd7 <fchmod@plt+0x2c37>
mov    0x809e544,%ecx
mov    0x809d884,%eax
test   %ecx,%ecx
je     804e34d <fchmod@plt+0x33ad>
mov    %eax,0x809d8c4
jmp    804dbd7 <fchmod@plt+0x2c37>
nop
mov    %edx,0x809e4a8
mov    $0x1,%eax
movl   $0x1,0x809d8c0
00
jmp    804dc99 <fchmod@plt+0x2cf9>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804df66 <fchmod@plt+0x2fc6>
mov    %eax,%edx
jmp    804e0ef <fchmod@plt+0x314f>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804df66 <fchmod@plt+0x2fc6>
movl   $0x8089290,0x4(%esp)
movl   $0x80865a8,(%esp)
call   804a710 <fopen64@plt>
jmp    804e2d5 <fchmod@plt+0x3335>
mov    0x809e4c8,%eax
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80865b1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x8086824,0x4(%esp)
jmp    804dece <fchmod@plt+0x2f2e>
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    804ddf3 <fchmod@plt+0x2e53>
mov    $0x1,%eax
jmp    804dd0e <fchmod@plt+0x2d6e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x12c,%esp
movl   $0x804cdd0,0x809d9e4
08
call   804c3f0 <fchmod@plt+0x1450>
mov    %eax,%esi
mov    0x809e524,%eax
cmp    %eax,%esi
je     804e421 <fchmod@plt+0x3481>
cmpb   $0x0,0x809e2f8
je     804e4d4 <fchmod@plt+0x3534>
test   %esi,%esi
je     804e433 <fchmod@plt+0x3493>
addl   $0x1,0x809e260
adcl   $0x0,0x809e264
mov    %esi,0x1c(%esp)
cmp    %eax,%esi
fildl  0x1c(%esp)
faddl  0x809da18
fstpl  0x809da18
je     804e4a8 <fchmod@plt+0x3508>
mov    0x809d9dc,%edx
test   %edx,%edx
je     804e926 <fchmod@plt+0x3986>
mov    (%edx),%ebx
test   %ebx,%ebx
je     804e839 <fchmod@plt+0x3899>
mov    0x4(%ebx),%eax
shl    $0x9,%eax
cmp    %eax,%esi
jae    804e484 <fchmod@plt+0x34e4>
jmp    804e839 <fchmod@plt+0x3899>
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
shl    $0x9,%edx
cmp    %edx,%esi
jb     804e48a <fchmod@plt+0x34ea>
mov    %eax,%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    804e478 <fchmod@plt+0x34d8>
test   $0x1ff,%esi
jne    804e94d <fchmod@plt+0x39ad>
test   %esi,%esi
js     804e4c0 <fchmod@plt+0x3520>
mov    $0x1,%eax
call   804dbc0 <fchmod@plt+0x2c20>
test   %al,%al
jne    804e4e0 <fchmod@plt+0x3540>
movl   $0x804e3f0,0x809d9e4
08
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x1c,%eax
je     804e49a <fchmod@plt+0x34fa>
sub    $0x5,%eax
cmp    $0x1,%eax
jbe    804e49a <fchmod@plt+0x34fa>
mov    %esi,(%esp)
call   804cd90 <fchmod@plt+0x1df0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
call   804c640 <fchmod@plt+0x16a0>
mov    0x140(%esp),%eax
mov    0x809da00,%edi
mov    0x809e274,%ebp
sub    %esi,%eax
fldl   0x809da20
add    %esi,%ebp
mov    %eax,%esi
faddl  0x809da18
xor    %eax,%eax
test   %edi,%edi
sete   %al
mov    %eax,0x809da00
fstpl  0x809da20
fldz
fstpl  0x809da18
call   804c530 <fchmod@plt+0x1590>
mov    0x809e470,%eax
movl   $0x1,0x809d9d4
00
test   %eax,%eax
je     804e54d <fchmod@plt+0x35ad>
call   804d5b0 <fchmod@plt+0x2610>
test   %ebx,%ebx
je     804e7a0 <fchmod@plt+0x3800>
cmpl   $0x4,0x809e4e4
je     804e7ce <fchmod@plt+0x382e>
call   804d410 <fchmod@plt+0x2470>
mov    0x8(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   804a950 <strlen@plt>
cmp    $0x64,%eax
jbe    804e5bd <fchmod@plt+0x361d>
mov    %edi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80869a8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x10(%esp),%eax
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%edi
jne    804e93e <fchmod@plt+0x399e>
test   $0x2,%edi
jne    804e92d <fchmod@plt+0x398d>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     804e5f3 <fchmod@plt+0x3653>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804e5fb <fchmod@plt+0x365b>
movb   $0x0,(%edi)
mov    0x10(%esp),%edi
movl   $0x64,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804ab20 <strncpy@plt>
mov    %edi,%eax
add    $0x7c,%eax
movb   $0x4d,0x9c(%edi)
movl   $0xc,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%ebx),%edx
mov    0x14(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
mov    %edi,%eax
add    $0x171,%eax
movl   $0xc,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0xc(%ebx),%eax
mov    0x10(%ebx),%edx
sub    0x14(%ebx),%eax
sbb    0x18(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8052100 <fchmod@plt+0x7160>
mov    0x10(%esp),%eax
movl   $0xffffffff,0x8(%esp)
mov    0x809e46c,%edi
movl   $0xffffffff,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,0x809e46c
00
call   8052590 <fchmod@plt+0x75f0>
mov    0x10(%esp),%eax
mov    %edi,0x809e46c
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
movl   $0x809d8e0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80523c0 <fchmod@plt+0x7420>
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
cmpl   $0x4,0x809e4e4
je     804e840 <fchmod@plt+0x38a0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%edx
mov    %eax,%edi
sub    0x809e274,%edx
mov    %ebx,%eax
sar    $0x9,%edx
call   804c180 <fchmod@plt+0x11e0>
mov    0x809e258,%ebx
movl   $0x0,0x809d9d4
00
sub    %edi,%ebx
cmp    %ebx,%esi
jbe    804e75a <fchmod@plt+0x37ba>
lea    0x0(%esi),%esi
mov    %ebx,0x8(%esp)
sub    %ebx,%esi
mov    %ebp,0x4(%esp)
add    %ebx,%ebp
sub    $0x1,%ebx
and    $0xfffffe00,%ebx
add    %edi,%ebx
mov    %edi,(%esp)
call   804a4e0 <memcpy@plt>
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    0x809e258,%ebx
sub    %eax,%ebx
mov    %eax,%edi
cmp    %ebx,%esi
ja     804e720 <fchmod@plt+0x3780>
mov    %esi,0x8(%esp)
sub    %esi,%ebx
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804a4e0 <memcpy@plt>
lea    (%edi,%esi,1),%eax
sub    $0x1,%esi
and    $0xfffffe00,%esi
mov    %ebx,0x8(%esp)
add    %edi,%esi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    %esi,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
jmp    804e4a8 <fchmod@plt+0x3508>
call   804d410 <fchmod@plt+0x2470>
movl   $0x809d8e0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80523c0 <fchmod@plt+0x7420>
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
jmp    804e6eb <fchmod@plt+0x374b>
mov    0xc(%ebx),%eax
sub    0x14(%ebx),%eax
mov    0x10(%ebx),%edx
sbb    0x18(%ebx),%edx
mov    %eax,0x28(%esp)
mov    0x8(%ebx),%eax
movl   $0x809d8e0,0x4(%esp)
movl   $0x80865dc,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x8(%esp)
call   805b0f0 <fchmod@plt+0x10150>
lea    0x14(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
movl   $0x80865f0,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
movl   $0x8086600,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
jmp    804e6b5 <fchmod@plt+0x3715>
mov    %edx,%ebx
jmp    804e48a <fchmod@plt+0x34ea>
xor    %eax,%eax
mov    $0x3d,%ecx
lea    0x28(%esp),%edi
rep stos %eax,%es:(%edi)
mov    0x8(%ebx),%eax
movl   $0x81a4,0x64(%esp)
mov    %eax,0x2c(%esp)
mov    %eax,0x28(%esp)
call   804a630 <getuid@plt>
mov    %eax,0x6c(%esp)
call   804aa60 <getgid@plt>
movl   $0x8086612,0x4(%esp)
mov    %eax,0x70(%esp)
mov    0x809c3e8,%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   805a930 <fchmod@plt+0xf990>
mov    0x18(%ebx),%edx
mov    %eax,0x28(%esp)
mov    %eax,0x2c(%esp)
mov    0x14(%ebx),%eax
mov    %edx,0x84(%esp)
mov    %edx,0xd0(%esp)
mov    0x809e288,%edx
sub    0x809e274,%edx
mov    %eax,0x80(%esp)
mov    %eax,0xcc(%esp)
lea    0x28(%esp),%eax
sar    $0x9,%edx
mov    %edx,%ecx
sar    $0x1f,%ecx
add    0x809d9f8,%edx
adc    0x809d9fc,%ecx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
test   %eax,%eax
je     804e990 <fchmod@plt+0x39f0>
mov    %eax,0x4(%esp)
lea    0x28(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    804e6eb <fchmod@plt+0x374b>
xor    %ebx,%ebx
jmp    804e48a <fchmod@plt+0x34ea>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804e5dc <fchmod@plt+0x363c>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
jmp    804e5d0 <fchmod@plt+0x3630>
movl   $0x5,0x8(%esp)
movl   $0x8086980,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    804e4d4 <fchmod@plt+0x3534>
call   804ae30 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
movl   $0x804d0a0,0x809d9e0
08
call   8050090 <fchmod@plt+0x50f0>
cmpb   $0x0,0x809e278
movl   $0x0,0x809d9ec
00
je     804e9f0 <fchmod@plt+0x3a50>
mov    0x809d9fc,%eax
or     0x809d9f8,%eax
jne    804ec90 <fchmod@plt+0x3cf0>
mov    0x809e544,%edx
mov    0x809e524,%eax
mov    %eax,0x8(%esp)
mov    0x809e274,%eax
cmp    $0x3fffffff,%edx
mov    %eax,0x4(%esp)
jle    804ea70 <fchmod@plt+0x3ad0>
sub    $0x40000000,%edx
mov    %edx,(%esp)
call   8070a20 <fchmod@plt+0x25a80>
cmp    %eax,0x809e524
je     804ed38 <fchmod@plt+0x3d98>
test   %eax,%eax
jne    804ea80 <fchmod@plt+0x3ae0>
cmpb   $0x0,0x809e2f8
jne    804ebff <fchmod@plt+0x3c5f>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804cea0 <fchmod@plt+0x1f00>
mov    0x7c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x804e9a0,0x809d9e0
08
jne    804f01b <fchmod@plt+0x407b>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   8080b00 <argp_parse+0x8bc0>
jmp    804ea1e <fchmod@plt+0x3a7e>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%eax
jne    804ea40 <fchmod@plt+0x3aa0>
call   804aaf0 <__errno_location@plt>
cmpl   $0x1c,(%eax)
je     804f028 <fchmod@plt+0x4088>
call   804ce10 <fchmod@plt+0x1e70>
jmp    804e9f0 <fchmod@plt+0x3a50>
lea    0x0(%esi),%esi
cmp    0x809e524,%eax
je     804eaad <fchmod@plt+0x3b0d>
call   804cea0 <fchmod@plt+0x1f00>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     804ebff <fchmod@plt+0x3c5f>
movzbl 0x9c(%eax),%eax
cmp    $0x56,%al
je     804edc8 <fchmod@plt+0x3e28>
cmp    $0x67,%al
je     804ed50 <fchmod@plt+0x3db0>
cmp    $0x4d,%al
jne    804eb58 <fchmod@plt+0x3bb8>
lea    0x0(%esi,%eiz,1),%esi
call   804ccb0 <fchmod@plt+0x1d10>
test   %al,%al
je     804ebff <fchmod@plt+0x3c5f>
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
mov    0x809e2b8,%eax
movl   $0x809e270,(%esp)
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809e2b8,%eax
movl   $0xc,0x4(%esp)
add    $0x7c,%eax
mov    %eax,(%esp)
call   8060d60 <fchmod@plt+0x15dc0>
movl   $0xc,0x4(%esp)
mov    %eax,0x809e280
mov    0x809e2b8,%eax
mov    %edx,0x809e284
add    $0x171,%eax
mov    %eax,(%esp)
call   8060d60 <fchmod@plt+0x15dc0>
mov    %eax,0x809e290
mov    %edx,0x809e294
xchg   %ax,%ax
mov    0x809d9dc,%esi
test   %esi,%esi
je     804ed2c <fchmod@plt+0x3d8c>
mov    0x809e270,%ebx
mov    0x8(%esi),%edi
test   %ebx,%ebx
je     804eb87 <fchmod@plt+0x3be7>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     804ecc0 <fchmod@plt+0x3d20>
mov    0x809e4e4,%eax
and    $0xfffffffb,%eax
cmp    $0x2,%eax
jne    804ebbd <fchmod@plt+0x3c1d>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmp    $0x63,%eax
jbe    804ebbd <fchmod@plt+0x3c1d>
movl   $0x64,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
je     804ef18 <fchmod@plt+0x3f78>
mov    %edi,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8086a3c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809e500,%eax
lea    -0x1(%eax),%ecx
xor    %eax,%eax
cmp    $0x7,%ecx
ja     804ec21 <fchmod@plt+0x3c81>
mov    $0x1,%al
shl    %cl,%eax
and    $0x83,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
not    %eax
and    $0x2,%eax
call   804dbc0 <fchmod@plt+0x2c20>
test   %al,%al
jne    804ec63 <fchmod@plt+0x3cc3>
mov    0x809e258,%eax
cmp    %eax,0x809e288
jne    804ea45 <fchmod@plt+0x3aa5>
call   804d180 <fchmod@plt+0x21e0>
jmp    804ea45 <fchmod@plt+0x3aa5>
lea    0x0(%esi),%esi
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070a20 <fchmod@plt+0x25a80>
cmp    $0xffffffff,%eax
jne    804eaa0 <fchmod@plt+0x3b00>
call   804ce10 <fchmod@plt+0x1e70>
mov    0x809e524,%edx
mov    0x809e544,%eax
mov    %edx,0x8(%esp)
mov    0x809e274,%edx
cmp    $0x3fffffff,%eax
mov    %edx,0x4(%esp)
jg     804ec48 <fchmod@plt+0x3ca8>
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
jmp    804ec55 <fchmod@plt+0x3cb5>
lea    0x0(%esi),%esi
movl   $0x1,0x809e544
00
call   8068900 <fchmod@plt+0x1d960>
movl   $0x0,0x809e544
00
cmp    0x809e524,%eax
jne    804f020 <fchmod@plt+0x4080>
xor    %edx,%edx
jmp    804e9fb <fchmod@plt+0x3a5b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x28(%esp)
mov    0x28(%esp),%ebx
mov    0x809e290,%eax
mov    0x809e294,%edx
mov    0xc(%ebx),%ecx
mov    %eax,%esi
mov    0x10(%ebx),%ebx
add    0x809e280,%esi
mov    %edx,%edi
adc    0x809e284,%edi
mov    %edi,%ebp
xor    %ebx,%ebp
mov    %ebp,0x2c(%esp)
mov    %esi,%ebp
xor    %ecx,%ebp
or     0x2c(%esp),%ebp
jne    804ee20 <fchmod@plt+0x3e80>
cmp    %edi,%edx
jb     804ed16 <fchmod@plt+0x3d76>
ja     804ee20 <fchmod@plt+0x3e80>
cmp    %esi,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
ja     804ee20 <fchmod@plt+0x3e80>
mov    0x28(%esp),%edi
sub    0x14(%edi),%ecx
sbb    0x18(%edi),%ebx
xor    %eax,%ecx
xor    %edx,%ebx
or     %ecx,%ebx
jne    804ef6d <fchmod@plt+0x3fcd>
call   804c640 <fchmod@plt+0x16a0>
jmp    804ec2a <fchmod@plt+0x3c8a>
xchg   %ax,%ax
addl   $0x1,0x809e250
adcl   $0x0,0x809e254
jmp    804ea45 <fchmod@plt+0x3aa5>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x809d8e0,(%esp)
lea    0x38(%esp),%ebx
call   806bdf0 <fchmod@plt+0x20e50>
movl   $0x2,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
mov    %ebx,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x2,%eax
je     804eed1 <fchmod@plt+0x3f31>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    804ebff <fchmod@plt+0x3c5f>
lea    0x0(%esi,%eiz,1),%esi
call   804ccb0 <fchmod@plt+0x1d10>
test   %al,%al
je     804ebff <fchmod@plt+0x3c5f>
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
mov    0x809e2b8,%eax
movl   $0x809e26c,(%esp)
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
cmpb   $0x4d,0x9c(%eax)
mov    %eax,0x38(%esp)
jne    804eb58 <fchmod@plt+0x3bb8>
jmp    804ead9 <fchmod@plt+0x3b39>
lea    0x0(%esi),%esi
lea    0x67(%esp),%edi
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x809e280,%ecx
mov    0x809e284,%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%esi
lea    0x52(%esp),%eax
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%ebp
lea    0x3d(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809d9dc,%eax
mov    0xc(%eax),%ecx
mov    0x10(%eax),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edi
mov    0x809e270,%eax
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8086a60,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x18(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
jmp    804ebff <fchmod@plt+0x3c5f>
movl   $0x809d8e0,(%esp)
call   805afd0 <fchmod@plt+0x10030>
movl   $0x809d8e0,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
movl   $0x0,0x8(%esp)
movl   $0x809d8e0,0x4(%esp)
mov    %ebx,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x1,%eax
je     804f00a <fchmod@plt+0x406a>
cmp    $0x5,%eax
je     804eb58 <fchmod@plt+0x3bb8>
jmp    804ed81 <fchmod@plt+0x3de1>
mov    %edi,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80869f4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809d9dc,%eax
mov    %eax,0x28(%esp)
jmp    804ecc4 <fchmod@plt+0x3d24>
lea    0x67(%esp),%edi
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%esi
lea    0x52(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809d9dc,%eax
mov    0x14(%eax),%ecx
mov    0x18(%eax),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edi
lea    0x3d(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809d9dc,%eax
mov    0xc(%eax),%ecx
mov    0x10(%eax),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8086a88,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    804ebff <fchmod@plt+0x3c5f>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
jmp    804eb58 <fchmod@plt+0x3bb8>
call   804a610 <__stack_chk_fail@plt>
mov    %eax,(%esp)
call   804cd90 <fchmod@plt+0x1df0>
cmpb   $0x0,0x809e2f8
je     804ea93 <fchmod@plt+0x3af3>
jmp    804ebff <fchmod@plt+0x3c5f>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
je     804f0d0 <fchmod@plt+0x4130>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
jae    804f0d0 <fchmod@plt+0x4130>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%edx
jmp    804f06f <fchmod@plt+0x40cf>
nop
sub    $0x1,%ebx
cmp    %esi,%ebx
je     804f0d0 <fchmod@plt+0x4130>
movzbl (%ebx),%eax
testb  $0x8,0x1(%edx,%eax,2)
jne    804f068 <fchmod@plt+0x40c8>
cmp    %ebx,%esi
jae    804f0d0 <fchmod@plt+0x4130>
sub    $0x7,%ebx
cmp    %ebx,%esi
jae    804f0d0 <fchmod@plt+0x4130>
movl   $0x8,0x8(%esp)
movl   $0x808662b,0x4(%esp)
mov    %ebx,(%esp)
call   804a580 <memcmp@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804f0d2 <fchmod@plt+0x4132>
sub    %esi,%ebx
lea    0x1(%ebx),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    %edi,%edx
movb   $0x0,(%edi,%ebx,1)
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %edx,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809d9e0,%eax
jmp    *%eax
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809e524,%eax
mov    %eax,(%esp)
call   *0x809d9e4
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x12c,%esp
mov    0x809e524,%eax
mov    0x140(%esp),%ebx
movl   $0x804e9a0,0x809d9e0
08
movl   $0x804e3f0,0x809d9e4
08
test   %eax,%eax
je     804fa02 <fchmod@plt+0x4a62>
mov    0x809e4f8,%eax
test   %eax,%eax
je     804fa17 <fchmod@plt+0x4a77>
movl   $0x809e320,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
movl   $0x0,0x809da00
00
call   804c530 <fchmod@plt+0x1590>
cmp    $0x2,%ebx
je     804fb11 <fchmod@plt+0x4b71>
movzbl 0x809e4f5,%eax
mov    %ebx,0x809e268
movl   $0x0,0x809e250
00
movl   $0x0,0x809e254
00
mov    %al,0x809d9e8
mov    0x809e51c,%eax
test   %eax,%eax
je     804f400 <fchmod@plt+0x4460>
test   %ebx,%ebx
je     804f3c8 <fchmod@plt+0x4428>
cmp    $0x1,%ebx
je     804f268 <fchmod@plt+0x42c8>
mov    0x809e544,%eax
xor    %esi,%esi
test   %eax,%eax
js     804f239 <fchmod@plt+0x4299>
cmp    $0x3fffffff,%eax
jle    804f230 <fchmod@plt+0x4290>
call   8068610 <fchmod@plt+0x1d670>
call   80685a0 <fchmod@plt+0x1d600>
test   %ebx,%ebx
je     804f310 <fchmod@plt+0x4370>
cmp    $0x2,%ebx
xchg   %ax,%ax
jbe    804f2b8 <fchmod@plt+0x4318>
cmp    $0x1,%ebx
je     804f2d5 <fchmod@plt+0x4335>
nop
jb     804f315 <fchmod@plt+0x4375>
cmp    $0x2,%ebx
je     804f315 <fchmod@plt+0x4375>
movl   $0x809e52c,(%esp)
call   807a050 <argp_parse+0x2110>
mov    0x809e52c,%eax
mov    0x809e530,%edx
mov    %eax,0x809e504
mov    %edx,0x809e508
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8068520 <fchmod@plt+0x1d580>
test   %al,%al
jne    804f1c9 <fchmod@plt+0x4229>
call   804aaf0 <__errno_location@plt>
test   %esi,%esi
mov    (%eax),%ebx
je     804f251 <fchmod@plt+0x42b1>
mov    %eax,0x1c(%esp)
call   8062fc0 <fchmod@plt+0x18020>
mov    0x1c(%esp),%eax
mov    %ebx,(%eax)
mov    0x809e488,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
lea    0x0(%esi),%esi
call   8068950 <fchmod@plt+0x1d9b0>
mov    0x809e538,%ebp
xor    %esi,%esi
test   %ebp,%ebp
mov    %eax,0x809d9f0
mov    0x809e544,%eax
jne    804f1be <fchmod@plt+0x421e>
mov    0x809e488,%edx
mov    (%edx),%edx
cmpb   $0x2d,(%edx)
jne    804f1b7 <fchmod@plt+0x4217>
cmpb   $0x0,0x1(%edx)
jne    804f1b7 <fchmod@plt+0x4217>
mov    0x809d864,%edx
mov    %edx,0x809e248
jmp    804f1be <fchmod@plt+0x421e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebx
movl   $0x0,0x809e260
00
movl   $0x0,0x809e264
00
jne    804f1ef <fchmod@plt+0x424f>
mov    0x809e470,%eax
movl   $0x0,0x809e260
00
movl   $0x0,0x809e264
00
test   %eax,%eax
je     804f1ff <fchmod@plt+0x425f>
cmpb   $0x0,0x809e2f8
jne    804f3f0 <fchmod@plt+0x4450>
call   804d460 <fchmod@plt+0x24c0>
jmp    804f1ff <fchmod@plt+0x425f>
lea    0x0(%esi),%esi
call   804d410 <fchmod@plt+0x2470>
mov    0x809e470,%eax
test   %eax,%eax
je     804f1ff <fchmod@plt+0x425f>
mov    0x809e26c,%ebx
test   %ebx,%ebx
je     804f7c8 <fchmod@plt+0x4828>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a6d0 <fnmatch@plt>
test   %eax,%eax
je     804f1ff <fchmod@plt+0x425f>
cmpb   $0x0,0x809e2f8
jne    804f6c0 <fchmod@plt+0x4720>
mov    0x809e470,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x809e26c,%eax
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x5,0x8(%esp)
movl   $0x8086668,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
call   8068cd0 <fchmod@plt+0x1dd30>
xor    %esi,%esi
movb   $0x1,0x809d9e8
mov    %eax,0x809d9f0
mov    0x809e274,%eax
mov    %eax,0x809e258
mov    0x809e544,%eax
jmp    804f1be <fchmod@plt+0x421e>
nop
call   804d5b0 <fchmod@plt+0x2610>
jmp    804f1ff <fchmod@plt+0x425f>
lea    0x0(%esi),%esi
mov    0x809e488,%esi
mov    (%esi),%eax
cmpb   $0x2d,(%eax)
jne    804f478 <fchmod@plt+0x44d8>
cmpb   $0x0,0x1(%eax)
jne    804f478 <fchmod@plt+0x44d8>
cmpb   $0x0,0x809e4f6
movb   $0x1,0x809d9e8
jne    804fbf7 <fchmod@plt+0x4c57>
cmp    $0x1,%ebx
je     804f708 <fchmod@plt+0x4768>
jb     804f640 <fchmod@plt+0x46a0>
cmp    $0x2,%ebx
jne    804f1b7 <fchmod@plt+0x4217>
mov    0x809e274,%eax
mov    0x809e538,%ecx
movl   $0x0,0x809e544
00
movb   $0x1,0x809e278
mov    %eax,0x809e258
xor    %eax,%eax
test   %ecx,%ecx
je     804f6aa <fchmod@plt+0x470a>
xor    %esi,%esi
jmp    804f1c2 <fchmod@plt+0x4222>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebx
je     804f738 <fchmod@plt+0x4798>
jb     804f540 <fchmod@plt+0x45a0>
cmp    $0x2,%ebx
jne    804f1b7 <fchmod@plt+0x4217>
cmpb   $0x0,0x809e558
jne    804f8df <fchmod@plt+0x493f>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%esi
je     804f4da <fchmod@plt+0x453a>
cmp    %esi,%eax
jbe    804f4da <fchmod@plt+0x453a>
sub    %esi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804fa2c <fchmod@plt+0x4a8c>
movl   $0x1b6,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %esi,(%esp)
call   804a410 <open64@plt>
mov    %eax,0x809e544
xor    %eax,%eax
call   804d670 <fchmod@plt+0x26d0>
cmp    $0x1,%eax
jbe    804f1b7 <fchmod@plt+0x4217>
movl   $0x5,0x8(%esp)
movl   $0x8086b04,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
cmpb   $0x0,0x809e558
jne    804f8b5 <fchmod@plt+0x4915>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%esi
je     804f58a <fchmod@plt+0x45ea>
cmp    %esi,%eax
jbe    804f58a <fchmod@plt+0x45ea>
sub    %esi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804fa52 <fchmod@plt+0x4ab2>
movl   $0x1b6,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a410 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x809e544
je     804f8a4 <fchmod@plt+0x4904>
cmpb   $0x0,0x809e2f8
jne    804f5fc <fchmod@plt+0x465c>
mov    0x809e51c,%edx
test   %edx,%edx
je     804f979 <fchmod@plt+0x49d9>
cmp    $0x3fffffff,%eax
jle    804f8e6 <fchmod@plt+0x4946>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   80709e0 <fchmod@plt+0x25a40>
movb   $0x0,0x809d9e9
call   8068cd0 <fchmod@plt+0x1dd30>
movb   $0x1,0x809d9e8
mov    %eax,0x809d9f0
mov    0x809e544,%eax
mov    0x809e274,%edx
movl   $0x0,0x809e250
00
movl   $0x0,0x809e254
00
mov    %edx,0x809e258
test   %eax,%eax
mov    %eax,0x809e544
js     804f8a4 <fchmod@plt+0x4904>
call   804c5a0 <fchmod@plt+0x1600>
xor    %esi,%esi
mov    0x809e544,%eax
jmp    804f1be <fchmod@plt+0x421e>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
movl   $0x0,0x809e544
00
call   804d670 <fchmod@plt+0x26d0>
cmp    $0x1,%eax
ja     804fbdd <fchmod@plt+0x4c3d>
cmpb   $0x0,0x2c(%esp)
je     804f1b7 <fchmod@plt+0x4217>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    804f1b7 <fchmod@plt+0x4217>
mov    0x809d864,%edx
xor    %esi,%esi
mov    %edx,0x809e248
jmp    804f1c2 <fchmod@plt+0x4222>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804f040 <fchmod@plt+0x40a0>
test   %eax,%eax
mov    %eax,%ebx
je     804f359 <fchmod@plt+0x43b9>
mov    0x809e470,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a6d0 <fnmatch@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a4c0 <free@plt>
test   %esi,%esi
je     804f1ff <fchmod@plt+0x425f>
jmp    804f359 <fchmod@plt+0x43b9>
lea    0x0(%esi),%esi
mov    0x809e538,%edi
xor    %esi,%esi
movl   $0x1,0x809e544
00
test   %edi,%edi
jne    804f230 <fchmod@plt+0x4290>
mov    0x809d864,%eax
xor    %esi,%esi
mov    %eax,0x809e248
mov    $0x1,%eax
jmp    804f1c2 <fchmod@plt+0x4222>
cmpb   $0x0,0x809e4b9
jne    804f8bc <fchmod@plt+0x491c>
mov    %esi,%ebp
mov    %eax,%edi
xor    %esi,%esi
cmpb   $0x0,0x809e4f6
je     804f848 <fchmod@plt+0x48a8>
cmpb   $0x0,0x809e558
jne    804f79f <fchmod@plt+0x47ff>
mov    %edi,(%esp)
movl   $0x3a,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    0x0(%ebp),%edi
je     804f79f <fchmod@plt+0x47ff>
cmp    %edi,%eax
jbe    804f79f <fchmod@plt+0x47ff>
sub    %edi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804fa9e <fchmod@plt+0x4afe>
movl   $0x1b6,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %edi,(%esp)
call   804a410 <open64@plt>
mov    %eax,0x809e544
jmp    804f1be <fchmod@plt+0x421e>
lea    0x0(%esi,%eiz,1),%esi
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%ebx
je     804fbd3 <fchmod@plt+0x4c33>
movzbl 0x9c(%eax),%eax
cmp    $0x56,%al
je     804f8f5 <fchmod@plt+0x4955>
cmp    $0x67,%al
je     804f92a <fchmod@plt+0x498a>
mov    0x809e26c,%ebx
mov    0x809e470,%eax
test   %ebx,%ebx
jne    804f330 <fchmod@plt+0x4390>
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8086b28,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
cmpb   $0x0,0x809e558
jne    804f88f <fchmod@plt+0x48ef>
mov    %edi,(%esp)
movl   $0x3a,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    0x0(%ebp),%edi
je     804f88f <fchmod@plt+0x48ef>
cmp    %edi,%eax
jbe    804f88f <fchmod@plt+0x48ef>
sub    %edi,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804fa78 <fchmod@plt+0x4ad8>
movl   $0x1b6,0x4(%esp)
mov    %edi,(%esp)
call   804ae50 <creat64@plt>
jmp    804f7b7 <fchmod@plt+0x4817>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804f251 <fchmod@plt+0x42b1>
mov    %eax,%esi
jmp    804f58a <fchmod@plt+0x45ea>
movl   $0x1,0x4(%esp)
mov    $0x1,%esi
mov    %eax,(%esp)
call   8062d60 <fchmod@plt+0x17dc0>
mov    0x809e488,%ebp
mov    0x0(%ebp),%edi
jmp    804f74b <fchmod@plt+0x47ab>
mov    %eax,%esi
jmp    804f4da <fchmod@plt+0x453a>
mov    %eax,(%esp)
call   804aef0 <close@plt>
xchg   %ax,%ax
jmp    804f5df <fchmod@plt+0x463f>
movl   $0x64,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     804f9a8 <fchmod@plt+0x4a08>
mov    %ebx,0x4(%esp)
movl   $0x809e26c,(%esp)
call   8062250 <fchmod@plt+0x172b0>
jmp    804f7ee <fchmod@plt+0x484e>
lea    0x2c(%esp),%esi
mov    %esi,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
lea    0x7c(%ebx),%eax
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   805b180 <fchmod@plt+0x101e0>
mov    %esi,(%esp)
call   805afd0 <fchmod@plt+0x10030>
mov    %esi,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
jmp    804f7ee <fchmod@plt+0x484e>
lea    0x2c(%esp),%eax
call   804d670 <fchmod@plt+0x26d0>
test   %eax,%eax
je     804fad3 <fchmod@plt+0x4b33>
cmp    $0x1,%eax
jne    804fac4 <fchmod@plt+0x4b24>
cmpb   $0x0,0x2c(%esp)
jne    804fb90 <fchmod@plt+0x4bf0>
mov    0x809e544,%eax
jmp    804f61c <fchmod@plt+0x467c>
movl   $0x65,(%esp)
mov    %ebx,%esi
call   8081640 <argp_parse+0x9700>
mov    $0x64,%edx
test   $0x1,%al
mov    %eax,%edi
mov    %eax,0x809e26c
jne    804fb09 <fchmod@plt+0x4b69>
test   $0x2,%edi
jne    804faff <fchmod@plt+0x4b5f>
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     804f9ed <fchmod@plt+0x4a4d>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%dl
je     804f9f9 <fchmod@plt+0x4a59>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
movb   $0x0,0x64(%eax)
jmp    804f7ee <fchmod@plt+0x484e>
movl   $0x5,0x8(%esp)
movl   $0x8086634,0x4(%esp)
jmp    804f517 <fchmod@plt+0x4577>
movl   $0x5,0x8(%esp)
movl   $0x8086652,0x4(%esp)
jmp    804f517 <fchmod@plt+0x4577>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804f4f2 <fchmod@plt+0x4552>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804f5a2 <fchmod@plt+0x4602>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804f7b7 <fchmod@plt+0x4817>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x42,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    804f7b7 <fchmod@plt+0x4817>
mov    %eax,0x809d8c8
mov    0x809e544,%eax
jmp    804f5c7 <fchmod@plt+0x4627>
cmpb   $0x0,0x2c(%esp)
jne    804fb4d <fchmod@plt+0x4bad>
mov    0x809e488,%eax
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8068070 <fchmod@plt+0x1d0d0>
cmpl   $0x0,0x809e51c
jne    804fac9 <fchmod@plt+0x4b29>
jmp    804f99e <fchmod@plt+0x49fe>
movsw  %ds:(%esi),%es:(%edi)
sub    $0x2,%edx
jmp    804f9d6 <fchmod@plt+0x4a36>
movsb  %ds:(%esi),%es:(%edi)
mov    $0x63,%dl
jmp    804f9ca <fchmod@plt+0x4a2a>
movzbl 0x809e4f5,%eax
cmpl   $0x0,0x809e51c
movl   $0x0,0x809e268
00
movl   $0x0,0x809e250
00
mov    %al,0x809d9e8
movl   $0x0,0x809e254
00
je     804f400 <fchmod@plt+0x4460>
call   804ae30 <abort@plt>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    804fada <fchmod@plt+0x4b3a>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    804f99e <fchmod@plt+0x49fe>
mov    0x809e470,%eax
jmp    804f801 <fchmod@plt+0x4861>
xor    %ecx,%ecx
jmp    804fbe8 <fchmod@plt+0x4c48>
cmp    %ebx,%eax
je     804fc0c <fchmod@plt+0x4c6c>
add    $0x1,%ecx
imul   $0xc,%ecx,%edx
mov    0x809c360(%edx),%ebx
test   %ebx,%ebx
jne    804fbe1 <fchmod@plt+0x4c41>
jmp    804fc17 <fchmod@plt+0x4c77>
movl   $0x5,0x8(%esp)
movl   $0x8086ab8,0x4(%esp)
jmp    804f517 <fchmod@plt+0x4577>
add    $0x809c360,%edx
je     804fc2c <fchmod@plt+0x4c8c>
mov    0x8(%edx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8086adc,0x4(%esp)
jmp    804f81b <fchmod@plt+0x487b>
xor    %ebx,%ebx
jmp    804fc17 <fchmod@plt+0x4c77>
push   %esi
push   %ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a950 <strlen@plt>
movzbl (%ebx),%edx
cmp    $0x27,%dl
mov    %eax,%esi
jne    804fc68 <fchmod@plt+0x4cc8>
cmp    -0x1(%ebx,%esi,1),%dl
je     804fc73 <fchmod@plt+0x4cd3>
mov    %ebx,(%esp)
call   8062280 <fchmod@plt+0x172e0>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
cmp    $0x22,%dl
jne    804fc57 <fchmod@plt+0x4cb7>
cmp    -0x1(%ebx,%esi,1),%dl
jne    804fc57 <fchmod@plt+0x4cb7>
lea    -0x2(%esi),%eax
mov    %eax,0x8(%esp)
lea    0x1(%ebx),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a4b0 <memmove@plt>
mov    %ebx,(%esp)
movb   $0x0,-0x2(%ebx,%esi,1)
call   8062280 <fchmod@plt+0x172e0>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0xc,(%esp)
call   80817f0 <argp_parse+0x98b0>
mov    0x809da28,%ecx
test   %ecx,%ecx
je     804fcd0 <fchmod@plt+0x4d30>
mov    %eax,(%ecx)
mov    %ebx,0x4(%eax)
mov    %eax,0x809da28
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%eax)
mov    %eax,0x809da2c
mov    %eax,0x809da28
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
test   %dl,%dl
movl   $0x5,0x8(%esp)
je     804fe40 <fchmod@plt+0x4ea0>
movl   $0x808cd5f,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%edi
lea    0x27(%esp),%eax
sub    $0x2,%edi
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   804a950 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
sub    $0x2,%esi
mov    %eax,%ebp
mov    %ebx,%eax
jmp    804fd85 <fchmod@plt+0x4de5>
nop
lea    0x0(%ebp,%esi,1),%ecx
cmp    $0x75,%dl
cmove  %ecx,%ebp
add    $0x1,%eax
movl   $0x25,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     804fda8 <fchmod@plt+0x4e08>
movzbl 0x1(%eax),%edx
cmp    $0x73,%dl
jne    804fd78 <fchmod@plt+0x4dd8>
add    %edi,%ebp
jmp    804fd82 <fchmod@plt+0x4de2>
xchg   %ax,%ax
add    $0x1,%ebp
mov    %ebp,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%esi
movzbl (%ebx),%edx
test   %dl,%dl
je     804fdd1 <fchmod@plt+0x4e31>
cmp    $0x25,%dl
je     804fdf0 <fchmod@plt+0x4e50>
add    $0x1,%ebx
add    $0x1,%eax
mov    %dl,-0x1(%eax)
movzbl (%ebx),%edx
test   %dl,%dl
jne    804fdbc <fchmod@plt+0x4e1c>
mov    0x3c(%esp),%edi
xor    %gs:0x14,%edi
movb   $0x0,(%eax)
mov    %esi,%eax
jne    804fe5d <fchmod@plt+0x4ebd>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebx),%edx
cmp    $0x73,%dl
je     804fe18 <fchmod@plt+0x4e78>
cmp    $0x75,%dl
jne    804fe30 <fchmod@plt+0x4e90>
mov    0x1c(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804a600 <stpcpy@plt>
add    $0x2,%ebx
jmp    804fdb5 <fchmod@plt+0x4e15>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804a600 <stpcpy@plt>
jmp    804fe0e <fchmod@plt+0x4e6e>
lea    0x0(%esi),%esi
movb   $0x25,(%eax)
movzbl 0x1(%ebx),%edx
add    $0x2,%eax
mov    %dl,-0x1(%eax)
jmp    804fe0e <fchmod@plt+0x4e6e>
nop
movl   $0x8086517,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x18(%esp)
jmp    804fd2f <fchmod@plt+0x4d8f>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
movzbl (%ebx),%eax
cmp    $0x2e,%eax
jne    804ff48 <fchmod@plt+0x4fa8>
cmpb   $0x0,0x1(%ebx)
je     804ff6f <fchmod@plt+0x4fcf>
mov    $0x8086bd8,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804ff80 <fchmod@plt+0x4fe0>
mov    $0x8086bdd,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804ff98 <fchmod@plt+0x4ff8>
mov    $0x8086be2,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804ffa8 <fchmod@plt+0x5008>
mov    $0x8086be8,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804ffc8 <fchmod@plt+0x5028>
mov    $0x8086bee,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804ffd0 <fchmod@plt+0x5030>
mov    $0x8086bf6,%edi
mov    $0x6,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050026 <fchmod@plt+0x5086>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x6(%ebx),%eax
movl   $0xa,0x8(%esp)
mov    %eax,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804ffe9 <fchmod@plt+0x5049>
mov    $0x4,%eax
call   804fca0 <fchmod@plt+0x4d00>
mov    %esi,0x8(%eax)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
cmp    $0x64,%eax
jne    804fe90 <fchmod@plt+0x4ef0>
cmpb   $0x6f,0x1(%ebx)
jne    804fe90 <fchmod@plt+0x4ef0>
cmpb   $0x74,0x2(%ebx)
jne    804fe90 <fchmod@plt+0x4ef0>
cmpb   $0x0,0x3(%ebx)
jne    804fe90 <fchmod@plt+0x4ef0>
xor    %eax,%eax
call   804fca0 <fchmod@plt+0x4d00>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
call   804fca0 <fchmod@plt+0x4d00>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%eax
call   804fca0 <fchmod@plt+0x4d00>
jmp    804ff76 <fchmod@plt+0x4fd6>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%eax
call   804fca0 <fchmod@plt+0x4d00>
mov    %eax,%esi
lea    0x5(%ebx),%eax
call   804fc30 <fchmod@plt+0x4c90>
mov    %eax,0x8(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    $0x5,%eax
jmp    804ffad <fchmod@plt+0x500d>
nop
mov    $0x3,%eax
call   804fca0 <fchmod@plt+0x4d00>
mov    %eax,%esi
lea    0x7(%ebx),%eax
call   804fc30 <fchmod@plt+0x4c90>
mov    %eax,0x8(%esi)
jmp    804ff76 <fchmod@plt+0x4fd6>
movl   $0x5,0x8(%esp)
movl   $0x8086bfd,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x8086c15,0x4(%esp)
jmp    804fff9 <fchmod@plt+0x5059>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e4fc,%ecx
test   %ecx,%ecx
je     8050058 <fchmod@plt+0x50b8>
mov    0x809da2c,%edx
test   %edx,%edx
je     8050070 <fchmod@plt+0x50d0>
ret
lea    0x0(%esi),%esi
mov    0x809da2c,%eax
test   %eax,%eax
je     8050054 <fchmod@plt+0x50b4>
movl   $0xa,0x809e4fc
00
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x8086bdd,(%esp)
call   804fe70 <fchmod@plt+0x4ed0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e4fc,%ecx
movzbl 0x40(%esp),%edi
test   %ecx,%ecx
je     80500bb <fchmod@plt+0x511b>
mov    0x809da30,%eax
xor    %edx,%edx
add    $0x1,%eax
mov    %eax,0x809da30
div    %ecx
test   %edx,%edx
je     80500c8 <fchmod@plt+0x5128>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809da2c,%ebx
test   %ebx,%ebx
je     80500bb <fchmod@plt+0x511b>
mov    %edi,%eax
xor    %esi,%esi
movzbl %al,%ebp
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x5,0x4(%ebx)
ja     8050100 <fchmod@plt+0x5160>
mov    0x4(%ebx),%eax
jmp    *0x8086c5c(,%eax,4)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804a5a0 <sleep@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    80500e0 <fchmod@plt+0x5140>
test   %esi,%esi
je     80500bb <fchmod@plt+0x511b>
mov    %esi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a540 <fclose@plt>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805029e <fchmod@plt+0x52fe>
mov    0x809da30,%ecx
mov    %ebp,%edx
mov    0x8(%ebx),%eax
call   804fcf0 <fchmod@plt+0x4d50>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   804aeb0 <fputs@plt>
mov    %esi,(%esp)
call   804a670 <fflush_unlocked@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   804a4c0 <free@plt>
jmp    8050100 <fchmod@plt+0x5160>
xchg   %ax,%ax
mov    0x8(%ebx),%eax
test   %eax,%eax
je     8050238 <fchmod@plt+0x5298>
mov    0x809da30,%ecx
mov    %ebp,%edx
call   804fcf0 <fchmod@plt+0x4d50>
movl   $0x808d587,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x1c(%esp)
call   804a7c0 <error@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    8050100 <fchmod@plt+0x5160>
lea    0x0(%esi),%esi
test   %esi,%esi
je     8050279 <fchmod@plt+0x52d9>
mov    0x14(%esi),%eax
cmp    0x18(%esi),%eax
xchg   %ax,%ax
jae    80502d8 <fchmod@plt+0x5338>
lea    0x1(%eax),%edx
mov    %edx,0x14(%esi)
movb   $0x7,(%eax)
mov    %esi,(%esp)
call   804a670 <fflush_unlocked@plt>
jmp    8050100 <fchmod@plt+0x5160>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809da30,%eax
mov    %eax,0x8(%esp)
mov    0x809e4a8,%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80697a0 <fchmod@plt+0x1e800>
jmp    8050100 <fchmod@plt+0x5160>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e248,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    80502c3 <fchmod@plt+0x5323>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x2e,(%edx)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804a670 <fflush_unlocked@plt>
jmp    8050100 <fchmod@plt+0x5160>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
test   %al,%al
movl   $0x5,0x8(%esp)
je     8050260 <fchmod@plt+0x52c0>
movl   $0x8086c33,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
jmp    805016b <fchmod@plt+0x51cb>
nop
movl   $0x8086c47,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
jmp    805016b <fchmod@plt+0x51cb>
movl   $0x80892d7,0x4(%esp)
movl   $0x80865a8,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
jne    80501b8 <fchmod@plt+0x5218>
xor    %esi,%esi
jmp    8050100 <fchmod@plt+0x5160>
movl   $0x80892d7,0x4(%esp)
movl   $0x80865a8,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8050128 <fchmod@plt+0x5188>
xor    %esi,%esi
jmp    8050100 <fchmod@plt+0x5160>
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    8050222 <fchmod@plt+0x5282>
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   804acc0 <__overflow@plt>
jmp    80501cf <fchmod@plt+0x522f>
xchg   %ax,%ax
nop
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e37c,%edi
mov    0x809e378,%esi
movl   $0x809e320,(%esp)
call   804c750 <fchmod@plt+0x17b0>
mov    %edi,%eax
or     %esi,%eax
jne    80503a3 <fchmod@plt+0x5403>
jmp    80503f8 <fchmod@plt+0x5458>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804cd40 <fchmod@plt+0x1da0>
movl   $0x0,0x14(%esp)
cmp    %edi,0x14(%esp)
mov    %eax,%edx
mov    %eax,0x10(%esp)
jl     8050362 <fchmod@plt+0x53c2>
jg     8050354 <fchmod@plt+0x53b4>
cmp    %esi,0x10(%esp)
jbe    8050362 <fchmod@plt+0x53c2>
mov    %esi,%edx
mov    %esi,0x10(%esp)
movl   $0x0,0x14(%esp)
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ebx,0x4(%esp)
call   *%ebp
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    $0x80502f0,%eax
cmove  %eax,%ebp
lea    -0x1(%ebx,%edx,1),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
sub    0x10(%esp),%esi
sbb    0x14(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
mov    %edi,%eax
or     %esi,%eax
je     80503f8 <fchmod@plt+0x5458>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%ebx
jne    8050330 <fchmod@plt+0x5390>
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804c780 <fchmod@plt+0x17e0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x809e524,%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80636a0 <fchmod@plt+0x18700>
mov    %eax,0x809da34
mov    0x809e4f0,%eax
test   %eax,%eax
je     805043b <fchmod@plt+0x549b>
call   805db90 <fchmod@plt+0x12bf0>
add    $0x2c,%esp
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
test   %ebx,%ebx
je     80504b2 <fchmod@plt+0x5512>
mov    0x20(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x80885db,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a400 <__vfprintf_chk@plt>
mov    0x809e248,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804acd0 <fputc@plt>
movl   $0x1,(%esp)
call   806c040 <fchmod@plt+0x210a0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x809da34,%eax
mov    0x30(%esp),%ebx
mov    %eax,0x4(%esp)
mov    0x809da38,%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8063150 <fchmod@plt+0x181b0>
cmp    %ebx,%eax
mov    %eax,%esi
je     8050550 <fchmod@plt+0x55b0>
cmp    $0xffffffff,%eax
je     80505a8 <fchmod@plt+0x5608>
movl   $0x5,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x8086d50,0x8(%esp)
movl   $0x8086d74,0x4(%esp)
movl   $0x0,(%esp)
call   804aee0 <dcngettext@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
mov    0x809da34,%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
je     8050544 <fchmod@plt+0x55a4>
movl   $0x5,0x8(%esp)
movl   $0x8086c8e,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    0x809e324,%eax
mov    %eax,(%esp)
call   806f620 <fchmod@plt+0x24680>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
jmp    80505e0 <fchmod@plt+0x5640>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
je     8050628 <fchmod@plt+0x5688>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %ebx,(%esp)
je     8050638 <fchmod@plt+0x5698>
call   806fb40 <fchmod@plt+0x24ba0>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   806fb60 <fchmod@plt+0x24bc0>
jmp    8050608 <fchmod@plt+0x5668>
nop
push   %ebp
mov    %esp,%ebp
push   %esi
push   %ebx
sub    $0x20,%esp
mov    %gs:0x14,%eax
mov    %eax,-0xc(%ebp)
xor    %eax,%eax
mov    0x809e32c,%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
lea    0x1f(%esi),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1(%eax),%eax
mov    %eax,0xc(%esp)
mov    0x809e324,%eax
lea    0x1f(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a840 <readlinkat@plt>
test   %eax,%eax
js     8050700 <fchmod@plt+0x5760>
cmp    %esi,%eax
je     80506e0 <fchmod@plt+0x5740>
movl   $0x5,0x8(%esp)
movl   $0x8086c9e,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
mov    -0xc(%ebp),%eax
xor    %gs:0x14,%eax
jne    8050737 <fchmod@plt+0x5797>
lea    -0x8(%ebp),%esp
pop    %ebx
pop    %esi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x809e32c,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    805069a <fchmod@plt+0x56fa>
jmp    80506c6 <fchmod@plt+0x5726>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    0x809e324,%eax
mov    %eax,(%esp)
je     8050730 <fchmod@plt+0x5790>
call   806f870 <fchmod@plt+0x248d0>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    80506c6 <fchmod@plt+0x5726>
lea    0x0(%esi),%esi
call   806f890 <fchmod@plt+0x248f0>
jmp    8050717 <fchmod@plt+0x5777>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x7c,%esp
mov    0x809e324,%eax
lea    0x10(%esp),%edx
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050795 <fchmod@plt+0x57f5>
mov    0x20(%esp),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
je     80507a0 <fchmod@plt+0x5800>
movl   $0x5,0x8(%esp)
movl   $0x8086cae,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
add    $0x7c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    0x809e35c,%eax
test   $0xfff,%eax
je     8050795 <fchmod@plt+0x57f5>
movl   $0x5,0x8(%esp)
movl   $0x8086cc0,0x4(%esp)
jmp    8050779 <fchmod@plt+0x57d9>
nop
push   %edi
push   %esi
push   %ebx
sub    $0xe0,%esp
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x809e46c,%edx
test   %edx,%edx
je     8050812 <fchmod@plt+0x5872>
cmpb   $0x0,0x809e298
jne    8050bb0 <fchmod@plt+0x5c10>
mov    0x809e2b8,%eax
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   80618c0 <fchmod@plt+0x16920>
mov    0x809e2b8,%eax
movsbl 0x9c(%eax),%ebx
cmp    $0x56,%bl
ja     8050830 <fchmod@plt+0x5890>
movzbl %bl,%eax
jmp    *0x8086eb8(,%eax,4)
lea    0x0(%esi),%esi
mov    0x809e324,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8086d94,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
cmpb   $0x0,0x809e328
jne    8050ba0 <fchmod@plt+0x5c00>
mov    0x809e324,%ebx
lea    0x80(%esp),%edx
mov    %ebx,%eax
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050e24 <fchmod@plt+0x5e84>
mov    0x90(%esp),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0x8000,%edx
jne    8050df8 <fchmod@plt+0x5e58>
xor    0x809e35c,%eax
test   $0xfff,%eax
je     8050902 <fchmod@plt+0x5962>
movl   $0x5,0x8(%esp)
movl   $0x8086cc0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
lea    0x80(%esp),%eax
movl   $0x809e34c,0x4(%esp)
mov    %eax,(%esp)
call   8068830 <fchmod@plt+0x1d890>
test   %al,%al
jne    8050949 <fchmod@plt+0x59a9>
movl   $0x5,0x8(%esp)
movl   $0x8086cd5,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
lea    0x80(%esp),%eax
movl   $0x809e34c,0x4(%esp)
mov    %eax,(%esp)
call   8068850 <fchmod@plt+0x1d8b0>
test   %al,%al
jne    8050990 <fchmod@plt+0x59f0>
movl   $0x5,0x8(%esp)
movl   $0x8086ce1,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
mov    0x809e3b4,%eax
mov    0x809e3b8,%edx
mov    %eax,0x8(%esp)
mov    0xc8(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
mov    0xcc(%esp),%eax
mov    %eax,0x4(%esp)
call   806bff0 <fchmod@plt+0x21050>
test   %eax,%eax
je     80509ed <fchmod@plt+0x5a4d>
movl   $0x5,0x8(%esp)
movl   $0x8086ced,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
mov    0x809e2b8,%eax
cmpb   $0x53,0x9c(%eax)
je     8050a1d <fchmod@plt+0x5a7d>
mov    0xac(%esp),%eax
mov    0xb0(%esp),%edx
xor    0x809e37c,%edx
xor    0x809e378,%eax
or     %eax,%edx
jne    8050d38 <fchmod@plt+0x5d98>
mov    0x809e498,%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,0x809da38
js     8050fc4 <fchmod@plt+0x6024>
cmpb   $0x0,0x809e3cc
je     8050e48 <fchmod@plt+0x5ea8>
movl   $0x809e320,0x4(%esp)
mov    %eax,(%esp)
call   8067f30 <fchmod@plt+0x1cf90>
cmpl   $0x1,0x809e430
je     8050ee0 <fchmod@plt+0x5f40>
mov    0x809da38,%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
mov    %ebx,(%esp)
call   806f480 <fchmod@plt+0x244e0>
nop
add    $0xe0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x809e320,(%esp)
call   805eb00 <fchmod@plt+0x13b60>
test   %al,%al
je     8050ba0 <fchmod@plt+0x5c00>
mov    0x809e410,%eax
test   %eax,%eax
jne    8050b04 <fchmod@plt+0x5b64>
mov    0x809e498,%eax
mov    %eax,0x8(%esp)
mov    0x809e320,%eax
mov    %eax,0x4(%esp)
mov    0x809e408,%eax
mov    %eax,(%esp)
call   80537d0 <fchmod@plt+0x8830>
test   %eax,%eax
mov    %eax,%ebx
js     8050eb8 <fchmod@plt+0x5f18>
movl   $0x809e34c,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    8050fa8 <fchmod@plt+0x6008>
mov    %ebx,0x809e410
movl   $0x809e320,(%esp)
call   805d1f0 <fchmod@plt+0x12250>
mov    %eax,(%esp)
call   805d750 <fchmod@plt+0x127b0>
test   %eax,%eax
mov    %eax,%esi
je     8050fb5 <fchmod@plt+0x6015>
mov    0x809e404,%edi
mov    $0x1,%ebx
movzbl (%edi),%eax
jmp    8050b63 <fchmod@plt+0x5bc3>
lea    0x0(%esi),%esi
lea    -0x44(%eax),%ecx
cmp    $0x15,%cl
ja     8050b3b <fchmod@plt+0x5b9b>
mov    %ebx,%edx
shl    %cl,%edx
test   $0x114000,%edx
mov    %edx,%ecx
jne    8050b67 <fchmod@plt+0x5bc7>
test   $0x200400,%edx
jne    8050f40 <fchmod@plt+0x5fa0>
and    $0x1,%ecx
jne    8050f8c <fchmod@plt+0x5fec>
test   %al,%al
jne    8050b38 <fchmod@plt+0x5b98>
movsbl (%esi),%eax
test   %eax,%eax
je     8050ba0 <fchmod@plt+0x5c00>
movl   $0x5,0x8(%esp)
movl   $0x8086c8e,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
lea    0x0(%esi),%esi
call   8050740 <fchmod@plt+0x57a0>
add    $0xe0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x8086ccd,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    80507ed <fchmod@plt+0x584d>
lea    0x0(%esi),%esi
mov    0x809e324,%eax
lea    0x20(%esp),%edx
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
mov    0x809e32c,%eax
lea    0x80(%esp),%edx
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   8068870 <fchmod@plt+0x1d8d0>
test   %al,%al
jne    8050a88 <fchmod@plt+0x5ae8>
mov    0x809e32c,%eax
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8086d0b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    8050a88 <fchmod@plt+0x5ae8>
lea    0x0(%esi),%esi
call   8050640 <fchmod@plt+0x56a0>
add    $0xe0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmpb   $0x0,0x809e328
jne    8050ba0 <fchmod@plt+0x5c00>
mov    0x809e324,%eax
lea    0x80(%esp),%edx
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
mov    0x90(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    8050df8 <fchmod@plt+0x5e58>
mov    0x809e2b8,%eax
movl   $0xc,0x4(%esp)
add    $0x171,%eax
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
test   %edx,%edx
mov    %eax,%esi
mov    %edx,%edi
js     8050d38 <fchmod@plt+0x5d98>
mov    0x809e37c,%ebx
mov    $0xffffffff,%eax
mov    $0x7fffffff,%edx
sub    %esi,%eax
mov    0x809e378,%ecx
sbb    %edi,%edx
cmp    %ebx,%edx
jl     8050d38 <fchmod@plt+0x5d98>
jg     8050d1b <fchmod@plt+0x5d7b>
cmp    %ecx,%eax
jb     8050d38 <fchmod@plt+0x5d98>
mov    0xb0(%esp),%eax
add    %esi,%ecx
adc    %edi,%ebx
xor    0xac(%esp),%ecx
xor    %ebx,%eax
or     %ecx,%eax
je     8050fee <fchmod@plt+0x604e>
nop
movl   $0x5,0x8(%esp)
movl   $0x8086cfe,0x4(%esp)
jmp    8050e08 <fchmod@plt+0x5e68>
lea    0x0(%esi),%esi
mov    0x809e324,%eax
lea    0x80(%esp),%edx
call   80505e0 <fchmod@plt+0x5640>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
mov    0x809e2b8,%eax
mov    0x90(%esp),%edx
movzbl 0x9c(%eax),%eax
mov    %edx,%ecx
and    $0xf000,%ecx
cmp    $0x33,%al
je     8050e38 <fchmod@plt+0x5e98>
cmp    $0x34,%al
je     8050e70 <fchmod@plt+0x5ed0>
cmp    $0x1000,%ecx
setne  %cl
test   %cl,%cl
jne    8050e58 <fchmod@plt+0x5eb8>
sub    $0x33,%eax
cmp    $0x1,%al
jbe    8050e80 <fchmod@plt+0x5ee0>
xor    0x809e35c,%edx
and    $0xfff,%edx
je     8050a88 <fchmod@plt+0x5ae8>
movl   $0x5,0x8(%esp)
movl   $0x8086cc0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    8050a88 <fchmod@plt+0x5ae8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086cae,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   8050440 <fchmod@plt+0x54a0>
call   8062100 <fchmod@plt+0x17160>
add    $0xe0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2000,%ecx
setne  %cl
jmp    8050d9d <fchmod@plt+0x5dfd>
xchg   %ax,%ax
mov    $0x80504d0,%eax
call   8050300 <fchmod@plt+0x5360>
jmp    8050a61 <fchmod@plt+0x5ac1>
nop
movl   $0x5,0x8(%esp)
movl   $0x8086cae,0x4(%esp)
jmp    8050dd2 <fchmod@plt+0x5e32>
lea    0x0(%esi),%esi
cmp    $0x6000,%ecx
setne  %cl
jmp    8050d9d <fchmod@plt+0x5dfd>
xchg   %ax,%ax
mov    0x809e36c,%eax
mov    0x809e370,%ecx
xor    0xa4(%esp),%ecx
xor    0xa0(%esp),%eax
or     %eax,%ecx
je     8050db0 <fchmod@plt+0x5e10>
movl   $0x5,0x8(%esp)
movl   $0x8086d1c,0x4(%esp)
jmp    8050dd2 <fchmod@plt+0x5e32>
xchg   %ax,%ax
mov    $0x8063460,%eax
mov    %eax,0x8(%esp)
mov    0x809e320,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8063550 <fchmod@plt+0x185b0>
jmp    8050ba0 <fchmod@plt+0x5c00>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%eax
or     0xac(%esp),%eax
je     8050a6e <fchmod@plt+0x5ace>
mov    0xc0(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0xc4(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
mov    0x809da38,%eax
mov    %eax,(%esp)
call   8063270 <fchmod@plt+0x182d0>
test   %eax,%eax
je     8050a6e <fchmod@plt+0x5ace>
mov    %ebx,(%esp)
call   806fbe0 <fchmod@plt+0x24c40>
jmp    8050a6e <fchmod@plt+0x5ace>
lea    0x0(%esi,%eiz,1),%esi
movsbl (%esi),%eax
movl   $0x8086d32,(%esp)
mov    %eax,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8050b6e <fchmod@plt+0x5bce>
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x1(%edi),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    8050b6e <fchmod@plt+0x5bce>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    $0x1,%eax
add    %eax,%edi
add    %eax,%esi
movzbl (%edi),%eax
jmp    8050b63 <fchmod@plt+0x5bc3>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     8050f75 <fchmod@plt+0x5fd5>
jmp    8050b6e <fchmod@plt+0x5bce>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8063530,%eax
lea    0x0(%esi),%esi
jmp    8050ebd <fchmod@plt+0x5f1d>
mov    $0x80502f0,%eax
call   8050300 <fchmod@plt+0x5360>
jmp    8050ba0 <fchmod@plt+0x5c00>
mov    %ebx,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
lea    0x0(%esi,%eiz,1),%esi
call   8062100 <fchmod@plt+0x17160>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    8050a88 <fchmod@plt+0x5ae8>
mov    0x809e498,%eax
mov    %eax,0x8(%esp)
mov    0x809e324,%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%ebx
js     805105b <fchmod@plt+0x60bb>
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
call   804ada0 <lseek64@plt>
test   %edx,%edx
js     8051086 <fchmod@plt+0x60e6>
mov    $0x80504d0,%eax
call   8050300 <fchmod@plt+0x5360>
mov    %ebx,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
je     8050a88 <fchmod@plt+0x5ae8>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
jmp    8050a88 <fchmod@plt+0x5ae8>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
call   8062100 <fchmod@plt+0x17160>
jmp    8050a88 <fchmod@plt+0x5ae8>
mov    0x809e324,%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   806f930 <fchmod@plt+0x24990>
movl   $0x0,0x4(%esp)
movl   $0x809e320,(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    8050a88 <fchmod@plt+0x5ae8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x54,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   806fd20 <fchmod@plt+0x24d80>
test   %al,%al
jne    80513c7 <fchmod@plt+0x6427>
call   806cf90 <fchmod@plt+0x21ff0>
test   %al,%al
jne    8051404 <fchmod@plt+0x6464>
nop
lea    0x0(%esi,%eiz,1),%esi
call   805d110 <fchmod@plt+0x12170>
mov    0x809da34,%edx
test   %edx,%edx
je     80514d2 <fchmod@plt+0x6532>
mov    0x809e544,%eax
lea    0x2c(%esp),%ebx
mov    %eax,(%esp)
call   804a970 <fsync@plt>
mov    0x809e544,%eax
movl   $0x24b,0x4(%esp)
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
mov    $0x2,%eax
mov    %ax,0x2c(%esp)
mov    0x809e544,%eax
movl   $0x1,0x30(%esp)
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
cmp    $0x3fffffff,%eax
jle    8051358 <fchmod@plt+0x63b8>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
test   %eax,%eax
js     8051368 <fchmod@plt+0x63c8>
movl   $0x0,0x809e268
00
movb   $0x1,0x809e298
call   804f0e0 <fchmod@plt+0x4140>
lea    0x0(%esi),%esi
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x5,%eax
mov    %eax,%ebx
je     80511f8 <fchmod@plt+0x6258>
cmp    $0x4,%ebx
je     8051290 <fchmod@plt+0x62f0>
cmp    $0x3,%ebx
je     80512b8 <fchmod@plt+0x6318>
mov    0x809e2b8,%eax
movl   $0x1,0xc(%esp)
movl   $0x809e2ac,0x8(%esp)
movl   $0x809e320,0x4(%esp)
mov    %eax,(%esp)
call   8060130 <fchmod@plt+0x15190>
call   80507c0 <fchmod@plt+0x5820>
movl   $0x809e320,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
jmp    8051188 <fchmod@plt+0x61e8>
lea    0x0(%esi),%esi
xor    %esi,%esi
lea    0x0(%esi),%esi
mov    0x809e2b8,%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x5,%eax
mov    %eax,%ebx
je     8051200 <fchmod@plt+0x6260>
movl   $0x5,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8086e60,0x8(%esp)
movl   $0x8086e8c,0x4(%esp)
movl   $0x0,(%esp)
call   804aee0 <dcngettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
cmp    $0x4,%ebx
movl   $0x2,0x809e084
00
jne    80511b4 <fchmod@plt+0x6214>
lea    0x0(%esi),%esi
movl   $0x1,0x809e268
00
movb   $0x0,0x809e298
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    80514e7 <fchmod@plt+0x6547>
add    $0x54,%esp
pop    %ebx
pop    %esi
ret
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmpb   $0x0,0x809e2f9
jne    8051188 <fchmod@plt+0x61e8>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x3,%eax
je     8051290 <fchmod@plt+0x62f0>
testb  $0x1,0x809d640
je     8051188 <fchmod@plt+0x61e8>
call   804cc10 <fchmod@plt+0x1c70>
lea    0x37(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8086d35,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8051188 <fchmod@plt+0x61e8>
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
test   %eax,%eax
jns    805116c <fchmod@plt+0x61cc>
call   804aaf0 <__errno_location@plt>
cmpl   $0x5,(%eax)
je     80514a0 <fchmod@plt+0x6500>
mov    0x809e544,%eax
cmp    $0x3fffffff,%eax
jg     8051471 <fchmod@plt+0x64d1>
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
or     %edx,%eax
setne  %al
test   %al,%al
je     805116c <fchmod@plt+0x61cc>
mov    0x809e488,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f9e0 <fchmod@plt+0x24a40>
jmp    80512a1 <fchmod@plt+0x6301>
movl   $0x5,0x8(%esp)
movl   $0x8086dc8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   806cf90 <fchmod@plt+0x21ff0>
test   %al,%al
je     8051438 <fchmod@plt+0x6498>
movl   $0x5,0x8(%esp)
movl   $0x8086e04,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x5,0x8(%esp)
movl   $0x8086e30,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    80510eb <fchmod@plt+0x614b>
sub    $0x40000000,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
or     %edx,%eax
setne  %al
jmp    80513ab <fchmod@plt+0x640b>
mov    0x809e544,%eax
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
cmp    $0x3fffffff,%eax
jle    80514dc <fchmod@plt+0x653c>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
test   %eax,%eax
jns    805116c <fchmod@plt+0x61cc>
jmp    8051376 <fchmod@plt+0x63d6>
call   8050410 <fchmod@plt+0x5470>
jmp    8051103 <fchmod@plt+0x6163>
mov    %eax,(%esp)
nop
call   804a700 <ioctl@plt>
jmp    80514c5 <fchmod@plt+0x6525>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x8(%eax),%ecx
mov    0xc(%eax),%edx
xor    (%eax),%ecx
xor    0x4(%eax),%edx
mov    0x24(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
call   80862d0 <argp_parse+0xe390>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    0x10(%esp),%ebx
mov    0xc(%esp),%ecx
mov    0x8(%ebx),%edx
mov    0xc(%ebx),%eax
mov    (%ebx),%esi
mov    0x4(%ebx),%ebx
xor    (%ecx),%esi
xor    0x4(%ecx),%ebx
xor    0x8(%ecx),%edx
xor    0xc(%ecx),%eax
or     %esi,%edx
or     %ebx,%eax
or     %eax,%edx
sete   %al
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0xac,%esp
mov    0xc4(%esp),%eax
mov    0xc8(%esp),%ebp
mov    %eax,0x28(%esp)
mov    0xd0(%esp),%eax
mov    %eax,0x2c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
mov    0x809e4e4,%eax
and    $0xfffffffb,%eax
cmp    $0x2,%eax
sete   %al
test   %edi,%edi
movzbl %al,%eax
mov    %eax,0x20(%esp)
je     8051690 <fchmod@plt+0x66f0>
cmpl   $0x0,0x20(%esp)
je     80518a2 <fchmod@plt+0x6902>
mov    %ebx,%edx
mov    %esi,%eax
not    %edx
not    %eax
mov    %edx,0x34(%esp)
mov    %eax,0x30(%esp)
mov    0xcc(%esp),%eax
lea    -0x8(,%eax,8),%ecx
cmp    $0x3f,%ecx
ja     8051628 <fchmod@plt+0x6688>
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
mov    %eax,0x38(%esp)
add    $0xffffffff,%eax
mov    %edx,0x3c(%esp)
adc    $0xffffffff,%edx
cmp    %edx,0x30(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
ja     8051718 <fchmod@plt+0x6778>
jb     8051628 <fchmod@plt+0x6688>
mov    0x20(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8051718 <fchmod@plt+0x6778>
cmp    $0x1,%edi
mov    %edi,%ecx
mov    0xcc(%esp),%edi
sbb    %eax,%eax
neg    %ecx
and    $0xffffff81,%eax
mov    %esi,%edx
sub    $0x1,%eax
add    %ebp,%edi
add    $0x1,%ebp
mov    %al,-0x1(%ebp)
shl    $0x18,%ecx
mov    %ebx,%eax
mov    %edi,%ebx
nop
mov    %edx,%edi
mov    %eax,%esi
mov    %al,-0x1(%ebx)
shr    $0x8,%edi
sub    $0x1,%ebx
shrd   $0x8,%edx,%esi
or     %ecx,%edi
cmp    %ebp,%ebx
mov    %esi,%eax
mov    %edi,%edx
jne    8051650 <fchmod@plt+0x66b0>
mov    $0x1,%eax
mov    0x9c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    8051acb <fchmod@plt+0x6b2b>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0xcc(%esp),%eax
lea    -0x3(%eax,%eax,2),%ecx
cmp    $0x3f,%ecx
jbe    80516e0 <fchmod@plt+0x6740>
mov    0xcc(%esp),%ecx
mov    0xcc(%esp),%eax
movb   $0x0,-0x1(%ebp,%ecx,1)
mov    %ebx,%ecx
mov    %esi,%ebx
sub    $0x1,%eax
lea    0x0(%esi),%esi
mov    %ecx,%edx
sub    $0x1,%eax
and    $0x7,%edx
add    $0x30,%edx
shrd   $0x3,%ebx,%ecx
shr    $0x3,%ebx
test   %eax,%eax
mov    %dl,0x0(%ebp,%eax,1)
jne    80516c0 <fchmod@plt+0x6720>
jmp    805166b <fchmod@plt+0x66cb>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    %esi,%edx
jae    80519a8 <fchmod@plt+0x6a08>
cmpl   $0x0,0x20(%esp)
je     80519bb <fchmod@plt+0x6a1b>
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
jmp    80515d4 <fchmod@plt+0x6634>
nop
test   %edi,%edi
jne    8051920 <fchmod@plt+0x6980>
lea    0x45(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x3c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,0x34(%esp)
lea    0x71(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
test   %edi,%edi
lea    -0x1(%eax),%ecx
mov    %ecx,0x30(%esp)
movb   $0x2d,-0x1(%eax)
je     80518fe <fchmod@plt+0x695e>
lea    0x5b(%esp),%eax
mov    %esi,%edx
mov    %eax,0x8(%esp)
mov    %ebx,%eax
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    -0x1(%eax),%ebx
movb   $0x2d,-0x1(%eax)
mov    0x28(%esp),%edi
test   %edi,%edi
je     80519f0 <fchmod@plt+0x6a50>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   *%edi
and    0x20(%esp),%eax
mov    %edx,%esi
mov    %eax,%edx
mov    0x24(%esp),%eax
and    %esi,%eax
mov    %eax,%ecx
xor    %eax,%eax
cmpl   $0x6,0x809e4e4
sete   %al
and    %eax,0x40(%esp)
je     80517d3 <fchmod@plt+0x6833>
neg    %edx
adc    $0x0,%ecx
neg    %ecx
lea    0x87(%esp),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x24(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    %eax,%esi
mov    0x40(%esp),%eax
test   %eax,%eax
je     805180b <fchmod@plt+0x686b>
movb   $0x2d,-0x1(%esi)
sub    $0x1,%esi
movl   $0x5,0x8(%esp)
movl   $0x8087160,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x24(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x34(%esp),%ecx
mov    0x2c(%esp),%edi
mov    %esi,0x1c(%esp)
mov    0x30(%esp),%esi
mov    %ebx,0xc(%esp)
mov    %ecx,0x18(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x14(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
mov    0xcc(%esp),%eax
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    %edi,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0xc0(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x40(%esp),%eax
call   8051560 <fchmod@plt+0x65c0>
jmp    8051670 <fchmod@plt+0x66d0>
mov    0xcc(%esp),%eax
lea    -0x3(%eax,%eax,2),%ecx
cmp    $0x3f,%ecx
jbe    80519c8 <fchmod@plt+0x6a28>
movl   $0xffffffff,0x20(%esp)
movl   $0xffffffff,0x24(%esp)
lea    0x45(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
test   %edi,%edi
movl   $0x0,0x28(%esp)
movl   $0x808dcb8,0x30(%esp)
mov    %eax,0x34(%esp)
jne    805176f <fchmod@plt+0x67cf>
lea    0x5a(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%ebx
jmp    8051795 <fchmod@plt+0x67f5>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc0(%esp),%eax
lea    0x0(,%eax,8),%ecx
mov    0xcc(%esp),%eax
lea    -0x3(%eax,%eax,2),%eax
cmp    %eax,%ecx
ja     8051720 <fchmod@plt+0x6780>
mov    0x809da48,%eax
test   %eax,%eax
je     8051a80 <fchmod@plt+0x6ae0>
mov    0xcc(%esp),%eax
cmp    $0x3f,%ecx
movl   $0xffffffff,0x20(%esp)
movl   $0xffffffff,0x24(%esp)
lea    -0x1(%eax),%edi
movb   $0x0,-0x1(%ebp,%eax,1)
jbe    8051a58 <fchmod@plt+0x6ab8>
mov    0x20(%esp),%ecx
and    %ebx,%ecx
mov    %ecx,%eax
mov    0x24(%esp),%ecx
and    %esi,%ecx
mov    %ecx,%edx
xchg   %ax,%ax
mov    %eax,%ecx
sub    $0x1,%edi
and    $0x7,%ecx
add    $0x30,%ecx
shrd   $0x3,%edx,%eax
shr    $0x3,%edx
test   %edi,%edi
mov    %cl,0x0(%ebp,%edi,1)
jne    8051988 <fchmod@plt+0x69e8>
jmp    805166b <fchmod@plt+0x66cb>
nop
ja     80516a0 <fchmod@plt+0x6700>
cmp    %ebx,%eax
jb     80516ff <fchmod@plt+0x675f>
jmp    80516a0 <fchmod@plt+0x6700>
imul   $0x3,0xcc(%esp),%ecx
sub    $0x3,%ecx
xchg   %ax,%ax
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
mov    %eax,0x20(%esp)
addl   $0xffffffff,0x20(%esp)
mov    %edx,0x24(%esp)
adcl   $0xffffffff,0x24(%esp)
jmp    80518c6 <fchmod@plt+0x6926>
movl   $0x5,0x8(%esp)
movl   $0x8087194,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x34(%esp),%esi
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %esi,0x18(%esp)
mov    0x30(%esp),%esi
mov    %eax,0x8(%esp)
mov    %esi,0x14(%esp)
mov    0x2c(%esp),%esi
mov    %esi,0x10(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
jmp    8051670 <fchmod@plt+0x66d0>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
mov    %eax,0x20(%esp)
addl   $0xffffffff,0x20(%esp)
mov    %edx,0x24(%esp)
adcl   $0xffffffff,0x24(%esp)
jmp    8051976 <fchmod@plt+0x69d6>
movl   $0x5,0x8(%esp)
movl   $0x808713c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x20(%esp)
movl   $0x1,0x809da48
00
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x20(%esp),%ecx
jmp    805194e <fchmod@plt+0x69ae>
call   804a610 <__stack_chk_fail@plt>
sub    $0x1c,%esp
mov    0x809da44,%eax
test   %eax,%eax
je     8051af0 <fchmod@plt+0x6b50>
mov    0x20(%esp),%ecx
xor    %edx,%edx
movl   $0x0,(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x809da44,0x4(%esp)
movl   $0x8087014,(%esp)
call   8064950 <fchmod@plt+0x199b0>
test   %eax,%eax
jne    8051b20 <fchmod@plt+0x6b80>
movl   $0xfffffffe,0x809da44
ff
mov    $0xfffffffe,%eax
jmp    8051adc <fchmod@plt+0x6b3c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
xor    %edx,%edx
mov    0x809da44,%eax
movl   $0x0,(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809da40,%eax
test   %eax,%eax
je     8051b60 <fchmod@plt+0x6bc0>
mov    0x20(%esp),%ecx
xor    %edx,%edx
movl   $0x0,(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x809da40,0x4(%esp)
movl   $0x8087014,(%esp)
call   80649f0 <fchmod@plt+0x19a50>
test   %eax,%eax
jne    8051b90 <fchmod@plt+0x6bf0>
movl   $0xfffffffe,0x809da40
ff
mov    $0xfffffffe,%eax
jmp    8051b4c <fchmod@plt+0x6bac>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
xor    %edx,%edx
mov    0x809da40,%eax
movl   $0x0,(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   804aaf0 <__errno_location@plt>
cmpl   $0x18,(%eax)
je     8051bc8 <fchmod@plt+0x6c28>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
test   %ebx,%ebx
je     8051bc0 <fchmod@plt+0x6c20>
mov    0xe8(%ebx),%eax
test   %eax,%eax
je     8051bc0 <fchmod@plt+0x6c20>
mov    0xe8(%eax),%ecx
test   %ecx,%ecx
je     8051bc0 <fchmod@plt+0x6c20>
mov    0xf0(%ecx),%edx
mov    0xe8(%ecx),%eax
test   %edx,%edx
jle    8051c0a <fchmod@plt+0x6c6a>
test   %eax,%eax
je     8051c18 <fchmod@plt+0x6c78>
mov    0xf0(%eax),%edx
test   %edx,%edx
jle    8051c18 <fchmod@plt+0x6c78>
mov    %eax,%ecx
test   %edx,%edx
mov    0xe8(%ecx),%eax
jg     8051bf0 <fchmod@plt+0x6c50>
test   %eax,%eax
je     8051bc0 <fchmod@plt+0x6c20>
mov    0xf0(%eax),%edx
mov    %eax,%ecx
jmp    8051c00 <fchmod@plt+0x6c60>
mov    %ecx,(%esp)
call   806be50 <fchmod@plt+0x20eb0>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
je     8051ca5 <fchmod@plt+0x6d05>
cmpb   $0x2f,-0x1(%esi,%eax,1)
lea    -0x1(%eax),%ebx
je     8051c64 <fchmod@plt+0x6cc4>
jmp    8051ca9 <fchmod@plt+0x6d09>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2f,-0x1(%esi,%ebx,1)
lea    -0x1(%ebx),%edx
jne    8051ca0 <fchmod@plt+0x6d00>
mov    %edx,%ebx
test   %ebx,%ebx
jne    8051c58 <fchmod@plt+0x6cb8>
mov    $0x1,%ebp
lea    (%esi,%ebx,1),%eax
cmpb   $0x2f,(%eax)
je     8051c88 <fchmod@plt+0x6ce8>
lea    0x2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,(%edi)
add    %ebx,%eax
movb   $0x2f,(%eax)
mov    (%edi),%eax
movb   $0x0,(%eax,%ebp,1)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ebx),%ebp
jmp    8051c6d <fchmod@plt+0x6ccd>
xor    %ebx,%ebx
jmp    8051c68 <fchmod@plt+0x6cc8>
lea    0x1(%eax),%ebp
mov    %eax,%ebx
jmp    8051c6d <fchmod@plt+0x6ccd>
push   %ebx
sub    $0x18,%esp
testb  $0x20,0x809d640
jne    8051cd8 <fchmod@plt+0x6d38>
cmpb   $0x0,0x809e535
jne    8051cd2 <fchmod@plt+0x6d32>
movl   $0x2,(%esp)
call   806c040 <fchmod@plt+0x210a0>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80871b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8051cbd <fchmod@plt+0x6d1d>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    $0x200,%ebx
call   804d410 <fchmod@plt+0x2470>
test   $0x1,%al
mov    %eax,%edx
mov    %eax,%edi
jne    8051d9c <fchmod@plt+0x6dfc>
test   $0x2,%edi
jne    8051d8e <fchmod@plt+0x6dee>
mov    %ebx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%bl
rep stos %eax,%es:(%edi)
je     8051d56 <fchmod@plt+0x6db6>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%ebx
je     8051d5e <fchmod@plt+0x6dbe>
movb   $0x0,(%edi)
mov    (%esi),%ebx
xor    %eax,%eax
jmp    8051d70 <fchmod@plt+0x6dd0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x64,%eax
je     8051d7b <fchmod@plt+0x6ddb>
movzbl (%ebx,%eax,1),%ecx
test   %cl,%cl
mov    %cl,(%edx,%eax,1)
jne    8051d68 <fchmod@plt+0x6dc8>
cmpl   $0x2,0x809e4e4
jne    8051d88 <fchmod@plt+0x6de8>
movb   $0x0,0x63(%edx)
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%ebx
jmp    8051d3f <fchmod@plt+0x6d9f>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%bx
jmp    8051d37 <fchmod@plt+0x6d97>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e300
jne    8051dcf <fchmod@plt+0x6e2f>
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x34,%esp
mov    0x809da50,%eax
cmp    %eax,0x40(%ebx)
ja     8051dd8 <fchmod@plt+0x6e38>
add    $0x34,%esp
pop    %ebx
pop    %esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
lea    0x2c(%esp),%esi
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %esi,(%esp)
movl   $0x2,0x4(%esp)
call   806cf60 <fchmod@plt+0x21fc0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    $0x15,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x88(%ebx),%edx
mov    %eax,%esi
mov    0x84(%ebx),%eax
mov    %edx,0xc(%esi)
mov    0x30(%ebx),%edx
mov    %eax,0x8(%esi)
mov    0x2c(%ebx),%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
mov    0x40(%ebx),%eax
mov    0x2c(%esp),%ebx
mov    %eax,0x10(%esi)
lea    0x14(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x809da4c,%eax
test   %eax,%eax
je     8051e88 <fchmod@plt+0x6ee8>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ae50 <argp_parse+0x2f10>
test   %eax,%eax
je     8051ebd <fchmod@plt+0x6f1d>
cmp    %eax,%esi
jne    8051ec2 <fchmod@plt+0x6f22>
subl   $0x1,0x10(%esi)
add    $0x34,%esp
pop    %ebx
pop    %esi
jmp    8051dcf <fchmod@plt+0x6e2f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x8051530,0xc(%esp)
movl   $0x80514f0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807a840 <argp_parse+0x2900>
test   %eax,%eax
mov    %eax,0x809da4c
jne    8051e62 <fchmod@plt+0x6ec2>
call   8056010 <fchmod@plt+0xb070>
call   804ae30 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %edx,%ebx
sub    $0x28,%esp
mov    0x809e4e4,%ecx
lea    -0x3(%ecx),%edx
cmp    $0x1,%edx
ja     8051f20 <fchmod@plt+0x6f80>
and    $0xfff,%eax
mov    %eax,%ecx
mov    %eax,%edx
sar    $0x1f,%ecx
mov    %ebx,0x8(%esp)
xor    %eax,%eax
movl   $0x808701b,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
add    $0x28,%esp
pop    %ebx
ret
nop
cmp    $0x6,%ecx
je     8051ee4 <fchmod@plt+0x6f44>
mov    %eax,%edx
xor    %ecx,%ecx
jmp    8051ef0 <fchmod@plt+0x6f50>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ecx
sub    $0x28,%esp
mov    %edx,%ebx
mov    %ebx,0x8(%esp)
mov    %eax,%edx
movl   $0x8087022,0x10(%esp)
sar    $0x1f,%ecx
movl   $0x8,0xc(%esp)
shr    $0x1f,%eax
movl   $0x0,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ecx
sub    $0x28,%esp
mov    %edx,%ebx
mov    %ebx,0x8(%esp)
mov    %eax,%edx
movl   $0x808702a,0x10(%esp)
sar    $0x1f,%ecx
movl   $0x8,0xc(%esp)
shr    $0x1f,%eax
movl   $0x0,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x14,(%esp)
mov    0x20(%esp),%esi
call   8081640 <argp_parse+0x9700>
mov    %esi,(%esp)
mov    %eax,%ebx
mov    0x809da54,%eax
mov    %esi,(%ebx)
mov    %eax,0x10(%ebx)
mov    0x24(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x28(%esp),%eax
mov    %eax,0xc(%ebx)
call   804a950 <strlen@plt>
mov    %ebx,0x809da54
mov    %eax,0x4(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809e46c,%eax
test   %eax,%eax
je     8052012 <fchmod@plt+0x7072>
testb  $0x4,0x809d640
jne    8052018 <fchmod@plt+0x7078>
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080690 <argp_parse+0x8750>
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80871d8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x50(%esp),%eax
lea    0x11(%esp),%ebx
movl   $0x2b,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a420 <read@plt>
xor    %edx,%edx
cmp    $0x2b,%eax
je     80520d8 <fchmod@plt+0x7138>
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edx,%eax
jne    80520f7 <fchmod@plt+0x7157>
add    $0x48,%esp
pop    %ebx
ret
nop
movl   $0x2b,0x8(%esp)
movl   $0x8087204,0x4(%esp)
mov    %ebx,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    80520c3 <fchmod@plt+0x7123>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x3c(%esp),%edx
mov    0x34(%esp),%ecx
movl   $0x8087032,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0xc(%esp)
mov    0x38(%esp),%edx
mov    %ecx,%eax
movl   $0x8,(%esp)
shr    $0x1f,%eax
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
call   8051560 <fchmod@plt+0x65c0>
add    $0x2c,%esp
ret
push   %ebx
sub    $0x28,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%eax
movl   $0x8087038,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,0xc(%esp)
mov    0x34(%esp),%ebx
mov    %eax,%ecx
mov    %eax,%edx
movl   $0x4,(%esp)
sar    $0x1f,%ecx
shr    $0x1f,%eax
mov    %ebx,0x8(%esp)
call   8051560 <fchmod@plt+0x65c0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %ebx
sub    $0x14,%esp
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%ebx
mov    %eax,%edi
jne    8052208 <fchmod@plt+0x7268>
test   $0x2,%edi
jne    8052220 <fchmod@plt+0x7280>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     80521c6 <fchmod@plt+0x7226>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     80521ce <fchmod@plt+0x722e>
movb   $0x0,(%edi)
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804cd40 <fchmod@plt+0x1da0>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   804aa80 <memset@plt>
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
add    $0x14,%esp
pop    %ebx
pop    %edi
ret
nop
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
test   $0x2,%edi
movb   $0x0,(%eax)
je     80521af <fchmod@plt+0x720f>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    80521af <fchmod@plt+0x720f>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebp
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%ebx
mov    %eax,%edi
jne    80523a2 <fchmod@plt+0x7402>
test   $0x2,%edi
jne    8052391 <fchmod@plt+0x73f1>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8052278 <fchmod@plt+0x72d8>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
and    $0x1,%edx
je     8052280 <fchmod@plt+0x72e0>
movb   $0x0,(%edi)
xor    %eax,%eax
jmp    8052290 <fchmod@plt+0x72f0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x64,%eax
je     805229b <fchmod@plt+0x72fb>
movzbl (%esi,%eax,1),%edx
test   %dl,%dl
mov    %dl,(%ebx,%eax,1)
jne    8052288 <fchmod@plt+0x72e8>
cmpl   $0x2,0x809e4e4
je     8052388 <fchmod@plt+0x73e8>
lea    0x7c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
movl   $0xc,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
xor    %eax,%eax
test   %ebp,%ebp
cmovns %ebp,%eax
lea    0x88(%ebx),%edx
mov    %edx,0x4(%esp)
movl   $0xc,0x8(%esp)
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x71a0>
lea    0x64(%ebx),%edx
mov    $0x81a4,%eax
call   8051ed0 <fchmod@plt+0x6f30>
lea    0x6c(%ebx),%eax
xor    %edx,%edx
mov    %eax,0x8(%esp)
xor    %ecx,%ecx
xor    %eax,%eax
movl   $0x808703f,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x8051ad0,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
lea    0x74(%ebx),%eax
xor    %edx,%edx
mov    %eax,0x8(%esp)
xor    %ecx,%ecx
xor    %eax,%eax
movl   $0x8087045,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x8051b40,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
mov    $0x72,%eax
mov    $0x3030,%edx
mov    %ax,0x105(%ebx)
mov    %ebx,%eax
movl   $0x61747375,0x101(%ebx)
61
mov    %dx,0x107(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movb   $0x0,0x63(%ebx)
jmp    80522a8 <fchmod@plt+0x7308>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    8052261 <fchmod@plt+0x72c1>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
jmp    8052255 <fchmod@plt+0x72b5>
jmp    80523c0 <fchmod@plt+0x7420>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    0x254(%esp),%ebx
mov    0x258(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x250(%esp),%ebp
mov    0xd4(%ebx),%ecx
mov    %esi,%eax
test   %ecx,%ecx
je     8052420 <fchmod@plt+0x7480>
mov    0x22c(%esp),%edi
xor    %gs:0x14,%edi
jne    8052503 <fchmod@plt+0x7563>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xcc(%ebx),%edx
test   %edx,%edx
je     80523fa <fchmod@plt+0x745a>
lea    0xcc(%ebx),%eax
mov    %eax,(%esp)
lea    0x2c(%esp),%edi
mov    %eax,0x1c(%esp)
call   805b2a0 <fchmod@plt+0x10300>
mov    %ebp,%eax
mov    $0x80,%ecx
test   %al,%al
rep movsl %ds:(%esi),%es:(%edi)
je     80524c8 <fchmod@plt+0x7528>
call   805ac80 <fchmod@plt+0xfce0>
mov    0x809e49c,%edx
mov    %eax,%esi
mov    $0x67,%eax
mov    0x1c(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,0xc(%esp)
call   805b380 <fchmod@plt+0x103e0>
mov    %esi,(%esp)
lea    0x2c(%esp),%esi
call   804a4c0 <free@plt>
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%edi
jne    80524dc <fchmod@plt+0x753c>
test   $0x2,%edi
jne    80524f1 <fchmod@plt+0x7551>
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     80524b2 <fchmod@plt+0x7512>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%edx
je     80523fa <fchmod@plt+0x745a>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
jmp    80523fa <fchmod@plt+0x745a>
nop
mov    %ebx,(%esp)
call   805ac30 <fchmod@plt+0xfc90>
mov    0x74(%ebx),%edx
mov    %eax,%esi
mov    $0x78,%eax
jmp    805245f <fchmod@plt+0x74bf>
movzbl 0x2c(%esp),%edx
lea    0x1(%eax),%edi
lea    0x2d(%esp),%esi
mov    %dl,(%eax)
mov    $0x1ff,%edx
jmp    8052493 <fchmod@plt+0x74f3>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %cx,-0x2(%edi)
jmp    805249b <fchmod@plt+0x74fb>
call   804a610 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x94(%ebx),%esi
mov    %ebx,%eax
movl   $0x20202020,0x94(%ebx)
20
lea    0x200(%ebx),%edi
movl   $0x20202020,0x4(%esi)
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl -0x1(%eax),%ecx
add    %ecx,%edx
cmp    %edi,%eax
jne    8052540 <fchmod@plt+0x75a0>
mov    %edx,%ecx
xor    %eax,%eax
mov    %esi,0x8(%esp)
sar    $0x1f,%ecx
movl   $0x808704b,0x10(%esp)
movl   $0x7,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x8,(%esp)
call   8051560 <fchmod@plt+0x65c0>
mov    %ebx,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804cc70 <fchmod@plt+0x1cd0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
mov    %eax,0x18(%esp)
mov    0x809e46c,%eax
mov    %edx,0x1c(%esp)
test   %eax,%eax
je     80525f9 <fchmod@plt+0x7659>
movzbl 0x9c(%ebx),%ecx
lea    -0x4b(%ecx),%edi
mov    %edi,%eax
cmp    $0x1,%al
jbe    80525f9 <fchmod@plt+0x7659>
cmp    $0x78,%cl
je     80525f9 <fchmod@plt+0x7659>
cmp    $0x67,%cl
je     80525f9 <fchmod@plt+0x7659>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x809e4e4,%ecx
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %esi,(%esp)
mov    %ecx,0x809e2ac
call   80618c0 <fchmod@plt+0x16920>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   80523c0 <fchmod@plt+0x7420>
mov    %eax,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8052510 <fchmod@plt+0x7570>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x14(%esp)
call   804a950 <strlen@plt>
movl   $0x0,0x8(%esp)
movl   $0x8087055,(%esp)
lea    0x1(%eax),%esi
mov    %esi,0x4(%esp)
call   8052230 <fchmod@plt+0x7290>
mov    0x809e428,%ebx
test   %ebx,%ebx
jne    80527e0 <fchmod@plt+0x7840>
mov    %eax,0x1c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8064830 <fchmod@plt+0x19890>
mov    0x1c(%esp),%eax
xor    %ecx,%ecx
mov    0x2c(%esp),%edx
lea    0x109(%eax),%ebp
jmp    8052698 <fchmod@plt+0x76f8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    $0x20,%ecx
je     80526a4 <fchmod@plt+0x7704>
movzbl (%edx,%ecx,1),%ebx
test   %bl,%bl
mov    %bl,0x0(%ebp,%ecx,1)
jne    8052690 <fchmod@plt+0x76f0>
mov    0x2c(%esp),%edx
movb   $0x0,0x128(%eax)
mov    %eax,0x1c(%esp)
mov    %edx,(%esp)
call   804a4c0 <free@plt>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80648c0 <fchmod@plt+0x19920>
mov    0x1c(%esp),%eax
xor    %edx,%edx
mov    0x2c(%esp),%ebx
lea    0x129(%eax),%ebp
jmp    80526f0 <fchmod@plt+0x7750>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmp    $0x20,%edx
je     80526fc <fchmod@plt+0x775c>
movzbl (%ebx,%edx,1),%ecx
test   %cl,%cl
mov    %cl,0x0(%ebp,%edx,1)
jne    80526e8 <fchmod@plt+0x7748>
mov    0x2c(%esp),%edx
movb   $0x0,0x148(%eax)
mov    %eax,0x1c(%esp)
mov    %edx,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%eax
movzbl 0x18(%esp),%edx
movl   $0x61747375,0x101(%eax)
61
mov    %dl,0x9c(%eax)
movl   $0x202072,0x105(%eax)
00
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,(%esp)
call   8052590 <fchmod@plt+0x75f0>
jmp    805277f <fchmod@plt+0x77df>
mov    %edi,0x4(%esp)
sub    %ebx,%esi
add    %ebx,%edi
sub    $0x1,%ebx
and    $0xfffffe00,%ebx
mov    %eax,0x8(%esp)
add    %ebp,%ebx
mov    %ebp,(%esp)
call   804a4e0 <memcpy@plt>
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,(%esp)
mov    %eax,%ebp
call   804cd40 <fchmod@plt+0x1da0>
cmp    %eax,%esi
mov    %eax,%ebx
ja     8052758 <fchmod@plt+0x77b8>
mov    %esi,0x8(%esp)
sub    %esi,%ebx
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804a4e0 <memcpy@plt>
lea    0x0(%ebp,%esi,1),%eax
sub    $0x1,%esi
and    $0xfffffe00,%esi
mov    %ebx,0x8(%esp)
add    %ebp,%esi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    %esi,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x3030,%edx
mov    $0x3030,%ecx
movl   $0x30303030,0x88(%eax)
30
movl   $0x30303030,0x8c(%eax)
30
mov    %dx,0x90(%eax)
movb   $0x30,0x92(%eax)
movb   $0x0,0x93(%eax)
movl   $0x30303030,0x64(%eax)
mov    %cx,0x68(%eax)
movb   $0x30,0x6a(%eax)
movb   $0x0,0x6b(%eax)
jmp    8052662 <fchmod@plt+0x76c2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x809e4e4,%ebx
mov    0x50(%esp),%esi
cmp    $0x4,%ebx
je     80530a0 <fchmod@plt+0x8100>
cmp    $0x2,%ebx
mov    0x4(%esi),%ebp
je     8052fc8 <fchmod@plt+0x8028>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    0x809e43c,%edx
add    %eax,%edx
cmp    $0x64,%edx
ja     8052d70 <fchmod@plt+0x7dd0>
lea    0x4(%esi),%eax
call   8051d20 <fchmod@plt+0x6d80>
mov    %eax,%edi
test   %edi,%edi
je     8052d60 <fchmod@plt+0x7dc0>
mov    0x809e4d4,%eax
cmp    $0xffffffff,%eax
je     805288e <fchmod@plt+0x78ee>
mov    %eax,0x44(%esi)
mov    0x809e494,%eax
cmp    $0xffffffff,%eax
je     805289b <fchmod@plt+0x78fb>
mov    %eax,0x48(%esi)
mov    0x809e44c,%eax
test   %eax,%eax
je     8052e48 <fchmod@plt+0x7ea8>
mov    0x3c(%esi),%ebx
mov    %eax,0xc(%esp)
mov    0x809e2fc,%eax
movl   $0x0,0x10(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
and    $0xfffff000,%ebx
movzbl %al,%eax
mov    %eax,0x4(%esp)
call   807d1b0 <argp_parse+0x5270>
or     %ebx,%eax
mov    %eax,0x3c(%esi)
mov    0x809e4e4,%edx
and    $0xfffffffd,%edx
cmp    $0x1,%edx
lea    0x64(%edi),%edx
je     8052cb8 <fchmod@plt+0x7d18>
call   8051ed0 <fchmod@plt+0x6f30>
mov    0x44(%esi),%edx
cmpl   $0x4,0x809e4e4
je     8052cd2 <fchmod@plt+0x7d32>
lea    0x6c(%edi),%eax
xor    %ecx,%ecx
mov    %eax,0x8(%esp)
xor    %eax,%eax
movl   $0x808703f,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x8051ad0,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
cmpl   $0x4,0x809e4e4
mov    0x48(%esi),%edx
je     8052e58 <fchmod@plt+0x7eb8>
lea    0x74(%edi),%eax
xor    %ecx,%ecx
mov    %eax,0x8(%esp)
xor    %eax,%eax
movl   $0x8087045,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x8051b40,0x4(%esp)
movl   $0x4,(%esp)
call   8051560 <fchmod@plt+0x65c0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
cmpl   $0x4,0x809e4e4
mov    0x58(%esi),%edx
mov    0x5c(%esi),%ecx
je     8052e88 <fchmod@plt+0x7ee8>
mov    %ecx,%eax
shr    $0x1f,%eax
lea    0x7c(%edi),%ebx
movl   $0x8087032,0x10(%esp)
movl   $0xc,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x8,(%esp)
call   8051560 <fchmod@plt+0x65c0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
cmpb   $0x0,0x809e2ec
je     8052d98 <fchmod@plt+0x7df8>
mov    0x809e4d8,%eax
mov    0x809e4dc,%edx
cmpl   $0x4,0x809e4e4
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x2c(%esp)
je     8052dbd <fchmod@plt+0x7e1d>
lea    0x88(%edi),%edx
movl   $0xc,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x71a0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
mov    0x3c(%esi),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
jne    8052e00 <fchmod@plt+0x7e60>
mov    0x4c(%esi),%eax
mov    0x50(%esi),%edx
mov    0x50(%esi),%ebp
mov    0x50(%esi),%ebx
mov    0x4c(%esi),%ecx
shrd   $0x8,%edx,%eax
and    $0xfff,%eax
and    $0xfffff000,%ebp
or     %eax,%ebp
movzbl 0x4c(%esi),%eax
shrd   $0xc,%ebx,%ecx
mov    %ecx,%ebx
xor    %bl,%bl
or     %eax,%ebx
cmpl   $0x4,0x809e4e4
mov    %ebx,0x18(%esp)
je     80530c0 <fchmod@plt+0x8120>
lea    0x149(%edi),%edx
mov    %ebp,%eax
call   8051f70 <fchmod@plt+0x6fd0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
cmpl   $0x4,0x809e4e4
je     8053000 <fchmod@plt+0x8060>
mov    0x18(%esp),%eax
lea    0x151(%edi),%edx
call   8051f30 <fchmod@plt+0x6f90>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
mov    0x809e4e4,%eax
cmp    $0x4,%eax
je     80530f0 <fchmod@plt+0x8150>
cmpb   $0x0,0x809e2e1
je     8052adf <fchmod@plt+0x7b3f>
mov    %eax,%edx
and    $0xfffffffb,%edx
cmp    $0x2,%edx
je     8053038 <fchmod@plt+0x8098>
cmp    $0x1,%eax
je     8053088 <fchmod@plt+0x80e8>
cmp    $0x4,%eax
movb   $0x30,0x9c(%edi)
ja     8052d80 <fchmod@plt+0x7de0>
cmp    $0x3,%eax
jae    8052eb8 <fchmod@plt+0x7f18>
cmp    $0x2,%eax
jne    8052d89 <fchmod@plt+0x7de9>
movl   $0x61747375,0x101(%edi)
61
mov    %eax,%edx
movl   $0x202072,0x105(%edi)
00
cmp    $0x1,%eax
je     8052d62 <fchmod@plt+0x7dc2>
cmpb   $0x0,0x809e47c
jne    8052bd8 <fchmod@plt+0x7c38>
mov    0x809e444,%eax
test   %eax,%eax
je     8053260 <fchmod@plt+0x82c0>
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x10(%esi)
mov    0x809e414,%eax
test   %eax,%eax
je     8053248 <fchmod@plt+0x82a8>
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x14(%esi)
cmpl   $0x4,0x809e4e4
je     80531e0 <fchmod@plt+0x8240>
lea    0x109(%edi),%ebx
mov    0x10(%esi),%ecx
xor    %eax,%eax
jmp    8052b88 <fchmod@plt+0x7be8>
add    $0x1,%eax
cmp    $0x20,%eax
je     8052b93 <fchmod@plt+0x7bf3>
movzbl (%ecx,%eax,1),%edx
test   %dl,%dl
mov    %dl,(%ebx,%eax,1)
jne    8052b80 <fchmod@plt+0x7be0>
cmpl   $0x4,0x809e4e4
movb   $0x0,0x128(%edi)
je     80531a0 <fchmod@plt+0x8200>
lea    0x129(%edi),%ebx
mov    0x14(%esi),%ecx
xor    %eax,%eax
jmp    8052bc0 <fchmod@plt+0x7c20>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x20,%eax
je     8052bcb <fchmod@plt+0x7c2b>
movzbl (%ecx,%eax,1),%edx
test   %dl,%dl
mov    %dl,(%ebx,%eax,1)
jne    8052bb8 <fchmod@plt+0x7c18>
mov    0x809e4e4,%edx
movb   $0x0,0x148(%edi)
cmp    $0x4,%edx
jne    8052d62 <fchmod@plt+0x7dc2>
mov    0x809e518,%eax
test   %eax,%eax
jle    8052c28 <fchmod@plt+0x7c88>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     8052c09 <fchmod@plt+0x7c69>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087095,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x24(%esi),%eax
test   %eax,%eax
je     8052c28 <fchmod@plt+0x7c88>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80870a7,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x809e54c,%ebp
test   %ebp,%ebp
jle    8052c51 <fchmod@plt+0x7cb1>
mov    0x18(%esi),%ebx
test   %ebx,%ebx
je     8052c51 <fchmod@plt+0x7cb1>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80870ba,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x809e474,%ecx
test   %ecx,%ecx
jle    8052d62 <fchmod@plt+0x7dc2>
mov    0xc4(%esi),%edx
xor    %eax,%eax
movl   $0x0,0x28(%esp)
mov    0xc8(%esi),%ebp
lea    0x28(%esp),%ebx
test   %edx,%edx
je     8052d62 <fchmod@plt+0x7dc2>
lea    0x0(%esi,%eiz,1),%esi
lea    (%eax,%eax,2),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x0(%ebp,%eax,4),%eax
mov    %eax,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x28(%esp),%eax
add    $0x1,%eax
cmp    %eax,0xc4(%esi)
mov    %eax,0x28(%esp)
ja     8052c88 <fchmod@plt+0x7ce8>
jmp    8052d62 <fchmod@plt+0x7dc2>
nop
and    $0xfff,%eax
call   8051ed0 <fchmod@plt+0x6f30>
mov    0x44(%esi),%edx
cmpl   $0x4,0x809e4e4
jne    8052913 <fchmod@plt+0x7973>
cmp    $0x1fffff,%edx
jbe    8052913 <fchmod@plt+0x7973>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087063,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
xor    %edx,%edx
jmp    8052913 <fchmod@plt+0x7973>
lea    0x0(%esi),%esi
cmp    $0x63,%eax
jbe    805286f <fchmod@plt+0x78cf>
mov    %ebp,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087230,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
movl   $0x63,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
lea    0x0(%esi),%esi
xor    %edi,%edi
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%ebx
ja     8052d89 <fchmod@plt+0x7de9>
jmp    *0x80873bc(,%ebx,4)
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%eax
je     8052b0a <fchmod@plt+0x7b6a>
lea    0x0(%esi,%eiz,1),%esi
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    0x94(%esi),%eax
mov    0x98(%esi),%edx
cmpl   $0x4,0x809e4e4
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x2c(%esp)
jne    8052a0d <fchmod@plt+0x7a6d>
test   %eax,%eax
js     8052dcd <fchmod@plt+0x7e2d>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     8052a0d <fchmod@plt+0x7a6d>
lea    0x28(%esp),%ebx
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x808936d,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x28(%esp),%eax
test   %eax,%eax
jns    8052a0d <fchmod@plt+0x7a6d>
movl   $0x0,0x28(%esp)
xor    %eax,%eax
jmp    8052a0d <fchmod@plt+0x7a6d>
mov    0x809e4e4,%eax
mov    %eax,%edx
and    $0xfffffffb,%edx
cmp    $0x2,%edx
je     8052abf <fchmod@plt+0x7b1f>
xor    %eax,%eax
lea    0x149(%edi),%edx
call   8051f70 <fchmod@plt+0x6fd0>
test   %al,%al
je     8052d60 <fchmod@plt+0x7dc0>
xor    %eax,%eax
lea    0x151(%edi),%edx
call   8051f30 <fchmod@plt+0x6f90>
test   %al,%al
jne    8052aba <fchmod@plt+0x7b1a>
jmp    8052d60 <fchmod@plt+0x7dc0>
lea    0x0(%esi),%esi
mov    0x3c(%esi),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    80528e9 <fchmod@plt+0x7949>
lea    0x0(%esi),%esi
cmp    $0x1fffff,%edx
xchg   %ax,%ax
jbe    805295a <fchmod@plt+0x79ba>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087067,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
xor    %edx,%edx
jmp    805295a <fchmod@plt+0x79ba>
lea    0x0(%esi),%esi
xor    %eax,%eax
cmp    $0x1,%ecx
jbe    80529a9 <fchmod@plt+0x7a09>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8089413,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
xor    %eax,%eax
xor    %edx,%edx
xor    %ecx,%ecx
jmp    80529a9 <fchmod@plt+0x7a09>
xchg   %ax,%ax
mov    $0x72,%edx
mov    $0x3030,%ecx
mov    %dx,0x105(%edi)
mov    %eax,%edx
movl   $0x61747375,0x101(%edi)
61
mov    %cx,0x107(%edi)
jmp    8052b20 <fchmod@plt+0x7b80>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80870d3,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
jmp    805286f <fchmod@plt+0x78cf>
lea    0x0(%esi),%esi
cmp    $0x100,%eax
ja     8053297 <fchmod@plt+0x82f7>
cmp    $0x9c,%eax
jbe    8053130 <fchmod@plt+0x8190>
mov    $0x9b,%ebx
jmp    8052f31 <fchmod@plt+0x7f91>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
je     8053148 <fchmod@plt+0x81a8>
cmpb   $0x2f,0x0(%ebp,%ebx,1)
jne    8052f28 <fchmod@plt+0x7f88>
sub    %ebx,%eax
lea    -0x1(%eax),%ecx
sub    $0x2,%eax
cmp    $0x63,%eax
mov    %ecx,0x1c(%esp)
ja     8053148 <fchmod@plt+0x81a8>
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%edi
mov    %eax,0x18(%esp)
jne    8053288 <fchmod@plt+0x82e8>
test   $0x2,%edi
jne    8053277 <fchmod@plt+0x82d7>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8052f88 <fchmod@plt+0x7fe8>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
and    $0x1,%edx
je     8052f90 <fchmod@plt+0x7ff0>
movb   $0x0,(%edi)
mov    0x18(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,%eax
add    $0x159,%eax
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x1c(%esp),%ecx
lea    0x1(%ebp,%ebx,1),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
call   804a4e0 <memcpy@plt>
jmp    8052879 <fchmod@plt+0x78d9>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebp,%edi
repnz scas %es:(%edi),%al
mov    0x809e43c,%eax
mov    %ecx,%ebx
not    %ebx
lea    -0x1(%ebx,%eax,1),%eax
cmp    $0x63,%eax
jbe    805286f <fchmod@plt+0x78cf>
nop
mov    $0x4c,%ecx
mov    %ebp,%edx
mov    %esi,%eax
call   8052620 <fchmod@plt+0x7680>
jmp    805286f <fchmod@plt+0x78cf>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1fffff,%ebx
jbe    8052aa3 <fchmod@plt+0x7b03>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087074,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x18(%esp)
jmp    8052aa3 <fchmod@plt+0x7b03>
lea    0x0(%esi,%eiz,1),%esi
lea    0x159(%edi),%eax
movl   $0xc,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8c(%esi),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x71a0>
lea    0x165(%edi),%eax
movl   $0xc,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x9c(%esi),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x71a0>
mov    0x809e4e4,%eax
jmp    8052adf <fchmod@plt+0x7b3f>
lea    0x0(%esi),%esi
movb   $0x0,0x9c(%edi)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   806d8c0 <fchmod@plt+0x22920>
test   %al,%al
je     8053220 <fchmod@plt+0x8280>
mov    0x809e4e4,%ebx
jmp    805284a <fchmod@plt+0x78aa>
xchg   %ax,%ax
cmp    $0x1fffff,%ebp
jbe    8052a81 <fchmod@plt+0x7ae1>
movl   $0x0,0x8(%esp)
xor    %ebp,%ebp
mov    %esi,0x4(%esp)
movl   $0x808706b,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
jmp    8052a81 <fchmod@plt+0x7ae1>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x808707d,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087083,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x809e4e4,%eax
jmp    8052adf <fchmod@plt+0x7b3f>
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x1(%ebp,%eax,1)
lea    -0x2(%eax),%ebx
lea    -0x1(%eax),%edx
cmovne %edx,%ebx
test   %ebx,%ebx
jne    8052f31 <fchmod@plt+0x7f91>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087260,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    8052d60 <fchmod@plt+0x7dc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esi),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmp    $0x20,%eax
ja     80531c0 <fchmod@plt+0x8220>
mov    %ebx,(%esp)
call   806d8c0 <fchmod@plt+0x22920>
test   %al,%al
jne    8052ba7 <fchmod@plt+0x7c07>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x808708f,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
jmp    8052ba7 <fchmod@plt+0x7c07>
lea    0x0(%esi),%esi
mov    0x10(%esi),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmp    $0x20,%eax
ja     8053200 <fchmod@plt+0x8260>
mov    %ebx,(%esp)
call   806d8c0 <fchmod@plt+0x22920>
test   %al,%al
jne    8052b73 <fchmod@plt+0x7bd3>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8087089,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
jmp    8052b73 <fchmod@plt+0x7bd3>
lea    0x0(%esi),%esi
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80870d3,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
lea    0x4(%esi),%eax
call   8051d20 <fchmod@plt+0x6d80>
mov    %eax,%edi
jmp    8052879 <fchmod@plt+0x78d9>
nop
lea    0x14(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   80648c0 <fchmod@plt+0x19920>
jmp    8052b66 <fchmod@plt+0x7bc6>
nop
lea    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   8064830 <fchmod@plt+0x19890>
jmp    8052b4e <fchmod@plt+0x7bae>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    8052f71 <fchmod@plt+0x7fd1>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
jmp    8052f65 <fchmod@plt+0x7fc5>
mov    %ebp,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087230,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
movl   $0x100,0x10(%esp)
jmp    8052d37 <fchmod@plt+0x7d97>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x809e4e4,%ebx
lea    -0x1(%ebx),%ecx
cmp    $0x5,%ecx
ja     8053391 <fchmod@plt+0x83f1>
mov    $0x1,%edx
shl    %cl,%edx
test   $0x15,%dl
jne    8053328 <fchmod@plt+0x8388>
test   $0x22,%dl
jne    8053380 <fchmod@plt+0x83e0>
and    $0x8,%edx
je     8053391 <fchmod@plt+0x83f1>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x80870cf,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087298,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%edx
add    $0x18,%esp
mov    $0x4b,%ecx
pop    %ebx
jmp    8052620 <fchmod@plt+0x7680>
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%ebx
cmp    $0x0,%esi
jle    8053438 <fchmod@plt+0x8498>
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%ebp
mov    %eax,%edi
jne    8053428 <fchmod@plt+0x8488>
test   $0x2,%edi
jne    8053418 <fchmod@plt+0x8478>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     80533e9 <fchmod@plt+0x8449>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     80533f1 <fchmod@plt+0x8451>
movb   $0x0,(%edi)
mov    %ebp,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
add    $0xfffffe00,%ebx
adc    $0xffffffff,%esi
cmp    $0x0,%esi
jl     805340e <fchmod@plt+0x846e>
jg     80533b8 <fchmod@plt+0x8418>
cmp    $0x0,%ebx
ja     80533b8 <fchmod@plt+0x8418>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    80533d2 <fchmod@plt+0x8432>
xchg   %ax,%ax
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
jmp    80533ca <fchmod@plt+0x842a>
lea    0x0(%esi,%eiz,1),%esi
jge    8053409 <fchmod@plt+0x8469>
jmp    805340e <fchmod@plt+0x846e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x5c,%esp
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x58(%edx),%eax
mov    0x5c(%edx),%edx
mov    %eax,0x18(%esp)
mov    %edx,%edi
mov    %edx,0x1c(%esp)
call   804cc10 <fchmod@plt+0x1c70>
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x20(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    $0x2,%edx
test   %eax,%eax
je     8053570 <fchmod@plt+0x85d0>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    0x58(%ebx),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804c690 <fchmod@plt+0x16f0>
cmp    $0x0,%edi
jle    80535b8 <fchmod@plt+0x8618>
lea    0x0(%esi),%esi
call   804d410 <fchmod@plt+0x2470>
xor    %ebx,%ebx
mov    %eax,(%esp)
mov    %eax,%esi
call   804cd40 <fchmod@plt+0x1da0>
cmp    0x1c(%esp),%ebx
mov    %eax,%edi
jl     805350a <fchmod@plt+0x856a>
jg     80534f9 <fchmod@plt+0x8559>
cmp    0x18(%esp),%eax
jbe    805350a <fchmod@plt+0x856a>
mov    0x18(%esp),%edi
mov    %edi,%eax
and    $0x1ff,%eax
jne    8053590 <fchmod@plt+0x85f0>
mov    0x28(%esp),%eax
mov    %edi,%ebp
test   %eax,%eax
jle    8053526 <fchmod@plt+0x8586>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8063150 <fchmod@plt+0x181b0>
mov    %eax,%ebp
cmp    $0xffffffff,%ebp
je     80535c8 <fchmod@plt+0x8628>
xor    %ebx,%ebx
lea    -0x1(%edi),%eax
sub    %ebp,0x18(%esp)
sbb    %ebx,0x1c(%esp)
and    $0xfffffe00,%eax
add    %esi,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    %ebp,%edi
jne    8053610 <fchmod@plt+0x8670>
cmpl   $0x0,0x1c(%esp)
jl     805356b <fchmod@plt+0x85cb>
jg     80534d8 <fchmod@plt+0x8538>
cmpl   $0x0,0x18(%esp)
ja     80534d8 <fchmod@plt+0x8538>
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    %edx,%eax
mov    0x4c(%esp),%edx
xor    %gs:0x14,%edx
jne    80536d5 <fchmod@plt+0x8735>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x200,%edx
sub    %eax,%edx
mov    %edi,%eax
add    %esi,%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
jmp    805350a <fchmod@plt+0x856a>
lea    0x0(%esi,%eiz,1),%esi
jge    8053560 <fchmod@plt+0x85c0>
lea    0x0(%esi),%esi
jmp    805356b <fchmod@plt+0x85cb>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ecx
mov    %edi,0xc(%esp)
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%esi
mov    0x58(%ecx),%eax
mov    0x5c(%ecx),%edx
sub    %ebx,%eax
sbb    %esi,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8063480 <fchmod@plt+0x184e0>
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
call   80533a0 <fchmod@plt+0x8400>
mov    $0x1,%edx
jmp    8053570 <fchmod@plt+0x85d0>
lea    0x0(%esi),%esi
sub    %ebp,%edi
add    %ebp,%esi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804aa80 <memset@plt>
testb  $0x80,0x809d640
jne    8053656 <fchmod@plt+0x86b6>
cmpb   $0x0,0x809e535
jne    8053646 <fchmod@plt+0x86a6>
movl   $0x1,(%esp)
call   806c040 <fchmod@plt+0x210a0>
mov    0x18(%esp),%ebx
xor    %edx,%edx
mov    0x1c(%esp),%esi
sub    %edi,%ebx
sbb    %edx,%esi
jmp    80535f4 <fchmod@plt+0x8654>
lea    0x37(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x2c(%esp),%edx
mov    %eax,%esi
mov    (%edx),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
movl   $0x80872c0,0x8(%esp)
movl   $0x80872f0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
call   804aee0 <dcngettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8053631 <fchmod@plt+0x8691>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
jmp    80536fb <fchmod@plt+0x875b>
lea    0x0(%esi),%esi
mov    %ebx,%eax
call   8051bb0 <fchmod@plt+0x6c10>
test   %al,%al
je     8053720 <fchmod@plt+0x8780>
mov    0xf0(%ebx),%eax
mov    %eax,(%esp)
call   804ad00 <fdopendir@plt>
test   %eax,%eax
mov    %eax,0xec(%ebx)
je     80536f0 <fchmod@plt+0x8750>
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8080ca0 <argp_parse+0x8d60>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809da4c,%eax
test   %eax,%eax
je     80537c5 <fchmod@plt+0x8825>
push   %esi
push   %ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   807a650 <argp_parse+0x2710>
test   %eax,%eax
mov    %eax,%ebx
jne    805376f <fchmod@plt+0x87cf>
jmp    80537c0 <fchmod@plt+0x8820>
lea    0x0(%esi),%esi
mov    0x809da4c,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807a690 <argp_parse+0x2750>
test   %eax,%eax
mov    %eax,%ebx
je     80537c0 <fchmod@plt+0x8820>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     8053758 <fchmod@plt+0x87b8>
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80870d8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8053758 <fchmod@plt+0x87b8>
lea    0x0(%esi),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
repz ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
cmpb   $0x0,0x809da3c
mov    0x30(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
je     8053828 <fchmod@plt+0x8888>
test   %ebx,%ebx
je     8053860 <fchmod@plt+0x88c0>
mov    0xf0(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%esi
jns    8053817 <fchmod@plt+0x8877>
mov    %ebx,%eax
call   8051bb0 <fchmod@plt+0x6c10>
test   %al,%al
jne    80537ec <fchmod@plt+0x884c>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,(%esp)
movb   $0x1,0x809da3c
call   804a850 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x808d3ee,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
test   %ebx,%ebx
jne    80537f0 <fchmod@plt+0x8850>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809c3f8,%eax
jmp    80537f6 <fchmod@plt+0x8856>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x809da54,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
jne    805389f <fchmod@plt+0x88ff>
jmp    80538e8 <fchmod@plt+0x8948>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804aef0 <close@plt>
mov    0x10(%ebx),%ebx
test   %ebx,%ebx
je     80538e8 <fchmod@plt+0x8948>
mov    0x809e498,%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80537d0 <fchmod@plt+0x8830>
test   %eax,%eax
mov    %eax,%esi
js     8053898 <fchmod@plt+0x88f8>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     80538cc <fchmod@plt+0x892c>
mov    %esi,(%esp)
call   *%eax
test   %al,%al
je     8053890 <fchmod@plt+0x88f0>
mov    %esi,(%esp)
call   804aef0 <close@plt>
test   %ebp,%ebp
je     80538dd <fchmod@plt+0x893d>
mov    (%ebx),%eax
mov    %eax,0x0(%ebp)
mov    0x8(%ebx),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%eax
mov    0xe8(%eax),%ebx
test   %ebx,%ebx
je     8053992 <fchmod@plt+0x89f2>
mov    0xf0(%ebx),%edx
test   %edx,%edx
jne    8053992 <fchmod@plt+0x89f2>
mov    0x809e490,%edx
movl   $0x80894ef,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0xf0(%eax),%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%esi
js     80539a0 <fchmod@plt+0x8a00>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    805397f <fchmod@plt+0x89df>
mov    0x84(%ebx),%eax
mov    0x88(%ebx),%edx
xor    0x6c(%esp),%edx
xor    0x68(%esp),%eax
or     %eax,%edx
je     8053a10 <fchmod@plt+0x8a70>
mov    %esi,(%esp)
mov    $0x2,%esi
call   804aef0 <close@plt>
mov    %esi,0xf0(%ebx)
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
test   %esi,%esi
jns    805398c <fchmod@plt+0x89ec>
mov    0x809e490,%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%edi
js     805398c <fchmod@plt+0x89ec>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    8053a03 <fchmod@plt+0x8a63>
mov    0x84(%ebx),%eax
mov    0x88(%ebx),%edx
xor    0x6c(%esp),%edx
xor    0x68(%esp),%eax
or     %eax,%edx
je     8053a30 <fchmod@plt+0x8a90>
mov    %edi,(%esp)
call   804aef0 <close@plt>
jmp    805398c <fchmod@plt+0x89ec>
mov    0x2c(%ebx),%eax
mov    0x30(%ebx),%edx
xor    0x14(%esp),%edx
xor    0x10(%esp),%eax
or     %eax,%edx
jne    805397f <fchmod@plt+0x89df>
jmp    805398c <fchmod@plt+0x89ec>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%ebx),%eax
mov    0x30(%ebx),%edx
xor    0x14(%esp),%edx
xor    0x10(%esp),%eax
or     %eax,%edx
jne    8053a03 <fchmod@plt+0x8a63>
mov    %edi,%esi
jmp    805398c <fchmod@plt+0x89ec>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x114,%esp
lea    0x1c(%esp),%ebx
mov    0x120(%esp),%esi
mov    %ebx,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
mov    0x128(%esp),%ecx
mov    %ebx,%eax
mov    0x124(%esp),%edx
mov    %esi,0x104(%esp)
call   8053de0 <fchmod@plt+0x8e40>
test   %esi,%esi
je     8053a9c <fchmod@plt+0x8afc>
mov    0x809e4f0,%eax
test   %eax,%eax
je     8053a9c <fchmod@plt+0x8afc>
mov    %esi,(%esp)
call   805d180 <fchmod@plt+0x121e0>
mov    %ebx,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
add    $0x114,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x12c,%esp
cmpl   $0x1,0x809e2c8
jbe    8053d90 <fchmod@plt+0x8df0>
movl   $0x1,(%esp)
mov    %eax,0x809da50
call   804f110 <fchmod@plt+0x4170>
call   804c730 <fchmod@plt+0x1790>
cmpb   $0x0,0x809e2e1
je     8053afc <fchmod@plt+0x8b5c>
jmp    8053b4e <fchmod@plt+0x8bae>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
je     8053b38 <fchmod@plt+0x8b98>
movl   $0x1,(%esp)
call   8064b90 <fchmod@plt+0x19bf0>
test   %eax,%eax
mov    %eax,%ebx
jne    8053af0 <fchmod@plt+0x8b50>
call   8052190 <fchmod@plt+0x71f0>
call   804d910 <fchmod@plt+0x2970>
call   806d120 <fchmod@plt+0x22180>
mov    0x809e4f0,%eax
test   %eax,%eax
je     8053b2b <fchmod@plt+0x8b8b>
call   805e8f0 <fchmod@plt+0x13950>
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebx,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
jmp    8053afc <fchmod@plt+0x8b5c>
movl   $0x3e8,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x14(%esp)
call   80654f0 <fchmod@plt+0x1a550>
jmp    8053b7b <fchmod@plt+0x8bdb>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
je     8053d70 <fchmod@plt+0x8dd0>
call   80659b0 <fchmod@plt+0x1aa10>
test   %eax,%eax
mov    %eax,%ebx
jne    8053b68 <fchmod@plt+0x8bc8>
call   8065a20 <fchmod@plt+0x1aa80>
mov    $0x3e8,%edi
jmp    8053ba7 <fchmod@plt+0x8c07>
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
je     8053bc8 <fchmod@plt+0x8c28>
call   80659b0 <fchmod@plt+0x1aa10>
test   %eax,%eax
mov    %eax,%esi
jne    8053b98 <fchmod@plt+0x8bf8>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    8053b0e <fchmod@plt+0x8b6e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%ebp
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
cmp    %eax,%edi
mov    %eax,%ebx
jbe    8053ce8 <fchmod@plt+0x8d48>
mov    %ebp,0x4(%esp)
mov    0x14(%esp),%ebp
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
call   804a4e0 <memcpy@plt>
cmpb   $0x2f,-0x1(%ebp,%ebx,1)
mov    %ebx,0x18(%esp)
je     8053c06 <fchmod@plt+0x8c66>
addl   $0x1,0x18(%esp)
movb   $0x2f,0x0(%ebp,%ebx,1)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
mov    0x809e2cc,%eax
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   805d750 <fchmod@plt+0x127b0>
test   %eax,%eax
mov    %eax,%ebx
je     8053cd4 <fchmod@plt+0x8d34>
movzbl (%eax),%edx
test   %dl,%dl
je     8053cd4 <fchmod@plt+0x8d34>
mov    %esi,0x1c(%esp)
mov    0x14(%esp),%esi
jmp    8053c53 <fchmod@plt+0x8cb3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ebx,%ebp,1),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     8053cd0 <fchmod@plt+0x8d30>
mov    %ebx,(%esp)
mov    %edx,0x14(%esp)
call   804a950 <strlen@plt>
mov    0x14(%esp),%edx
cmp    $0x59,%dl
mov    %eax,%ebp
jne    8053c48 <fchmod@plt+0x8ca8>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     8053d10 <fchmod@plt+0x8d70>
mov    0x18(%esp),%eax
add    %ebp,%eax
cmp    %edi,%eax
jbe    8053c94 <fchmod@plt+0x8cf4>
add    %edi,%edi
cmp    %edi,%eax
ja     8053c80 <fchmod@plt+0x8ce0>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,%esi
mov    0x18(%esp),%eax
lea    0x1(%ebx),%edx
mov    %edx,0x4(%esp)
lea    0x1(%ebx,%ebp,1),%ebx
mov    %edx,0x14(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x14(%esp),%edx
lea    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
movzbl (%ebx),%edx
test   %dl,%dl
jne    8053c53 <fchmod@plt+0x8cb3>
mov    %esi,0x14(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
jmp    8053ba7 <fchmod@plt+0x8c07>
lea    0x0(%esi),%esi
add    %edi,%edi
cmp    %edi,%ebx
jae    8053ce8 <fchmod@plt+0x8d48>
mov    0x14(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x8(%esi),%ebp
mov    %eax,0x14(%esp)
jmp    8053bdd <fchmod@plt+0x8c3d>
lea    0x0(%esi),%esi
mov    0x809e490,%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
js     8053da2 <fchmod@plt+0x8e02>
lea    0x58(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x11c(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    8053dba <fchmod@plt+0x8e1a>
mov    0x1c(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x2c(%esp)
jmp    8053c76 <fchmod@plt+0x8cd6>
mov    0x8(%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
jmp    8053b7b <fchmod@plt+0x8bdb>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x809e438,%eax
xor    $0x1,%eax
movzbl %al,%eax
jmp    8053ac9 <fchmod@plt+0x8b29>
mov    %esi,0x14(%esp)
mov    0x1c(%esp),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8063460 <fchmod@plt+0x184c0>
jmp    8053cd4 <fchmod@plt+0x8d34>
mov    %esi,0x14(%esp)
mov    0x1c(%esp),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8063530 <fchmod@plt+0x18590>
jmp    8053cd4 <fchmod@plt+0x8d34>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xec,%esp
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
mov    0xe8(%esi),%eax
mov    %edx,-0xa0(%ebp)
mov    %ecx,-0x8c(%ebp)
test   %eax,%eax
mov    %eax,-0xa8(%ebp)
sete   -0x98(%ebp)
jne    8053f00 <fchmod@plt+0x8f60>
mov    0x809c3f8,%edi
cmpb   $0x0,0x809e448
je     8053e4d <fchmod@plt+0x8ead>
mov    -0x8c(%ebp),%eax
movl   $0x80870ed,(%esp)
mov    %eax,0x4(%esp)
call   806a220 <fchmod@plt+0x1f280>
test   %eax,%eax
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x8c(%ebp),%ebx
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
movzbl 0x809e534,%eax
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
lea    0x4(%esi),%edx
mov    %edx,%ebx
mov    %edx,(%esp)
mov    %edx,-0xb0(%ebp)
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   806cf60 <fchmod@plt+0x21fc0>
movzbl -0x98(%ebp),%eax
xor    $0x1,%eax
mov    %eax,%ecx
mov    %al,-0x8d(%ebp)
mov    %edi,%eax
shr    $0x1f,%eax
test   %al,%cl
je     8053f18 <fchmod@plt+0x8f78>
call   804aaf0 <__errno_location@plt>
neg    %edi
mov    %edi,(%eax)
mov    $0x8063460,%eax
mov    %eax,0x8(%esp)
movzbl -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   8063550 <fchmod@plt+0x185b0>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    80551d5 <fchmod@plt+0xa235>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    -0xa8(%ebp),%eax
mov    0xf0(%eax),%edi
jmp    8053e26 <fchmod@plt+0x8e86>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e434,%eax
lea    0x2c(%esi),%ecx
mov    %ecx,0xc(%esp)
mov    %ecx,%ebx
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x8(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    80540e8 <fchmod@plt+0x9148>
mov    0x3c(%esi),%edx
mov    %edx,%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8054090 <fchmod@plt+0x90f0>
cmp    $0x8000,%eax
movl   $0x0,-0xb8(%ebp)
00
je     8054698 <fchmod@plt+0x96f8>
mov    0x58(%esi),%eax
mov    0x5c(%esi),%ecx
mov    0x6c(%esi),%edx
mov    0x80(%esi),%ebx
mov    %eax,-0xd4(%ebp)
mov    %eax,0xa4(%esi)
mov    0x70(%esi),%eax
mov    %ecx,-0xcc(%ebp)
mov    %ecx,0xa8(%esi)
mov    0x78(%esi),%ecx
mov    %edx,0x8c(%esi)
mov    0x74(%esi),%edx
mov    %eax,0x90(%esi)
mov    0x7c(%esi),%eax
mov    %ebx,-0xd0(%ebp)
mov    %ecx,0x98(%esi)
mov    %edx,0x94(%esi)
mov    %eax,-0xc8(%ebp)
mov    %eax,0x9c(%esi)
movzbl 0x809e2e1,%eax
mov    %ebx,0xa0(%esi)
test   %al,%al
mov    %al,-0xc0(%ebp)
jne    80540f8 <fchmod@plt+0x9158>
mov    0x3c(%esi),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8054105 <fchmod@plt+0x9165>
mov    0x809e2e4,%eax
mov    0x809e2e8,%ebx
cmp    %edx,%eax
jle    80544c8 <fchmod@plt+0x9528>
mov    0x809e540,%edx
test   %edx,%edx
jne    80544e0 <fchmod@plt+0x9540>
cmpb   $0x0,-0xc0(%ebp)
jne    8053ee7 <fchmod@plt+0x8f47>
mov    0x809e46c,%eax
test   %eax,%eax
je     8053ee7 <fchmod@plt+0x8f47>
testb  $0x1,0x809d641
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087320,0x4(%esp)
mov    %eax,%ebx
jmp    805413e <fchmod@plt+0x919e>
xchg   %ax,%ax
mov    0x5c(%esi),%eax
or     0x58(%esi),%eax
jne    8054090 <fchmod@plt+0x90f0>
and    $0x124,%edx
cmp    $0x124,%edx
je     80547d0 <fchmod@plt+0x9830>
lea    0x0(%esi),%esi
mov    0x809e498,%eax
mov    %eax,0x8(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   80537d0 <fchmod@plt+0x8830>
test   %eax,%eax
mov    %eax,-0xb8(%ebp)
js     8054bc8 <fchmod@plt+0x9c28>
mov    %eax,0xf0(%esi)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
je     8053f76 <fchmod@plt+0x8fd6>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8063530,%eax
jmp    8053eca <fchmod@plt+0x8f2a>
lea    0x0(%esi),%esi
cmpb   $0x0,-0x98(%ebp)
jne    8053fee <fchmod@plt+0x904e>
mov    %esi,(%esp)
call   8068550 <fchmod@plt+0x1d5b0>
test   %al,%al
je     8054170 <fchmod@plt+0x91d0>
testb  $0x4,0x809d641
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087344,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8053ee7 <fchmod@plt+0x8f47>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esi),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   -0xc0(%ebp)
jne    8054520 <fchmod@plt+0x9580>
mov    -0xa0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806e640 <fchmod@plt+0x236a0>
mov    -0xb8(%ebp),%ebx
mov    -0xa0(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
call   806ec00 <fchmod@plt+0x23c60>
mov    -0xa0(%ebp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806e900 <fchmod@plt+0x23960>
mov    %esi,%eax
call   8051c30 <fchmod@plt+0x6c90>
mov    -0xb0(%ebp),%eax
call   8051c30 <fchmod@plt+0x6c90>
lea    -0x80(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8053870 <fchmod@plt+0x88d0>
cmp    $0x3,%eax
je     8054de0 <fchmod@plt+0x9e40>
mov    %esi,(%esp)
call   80536e0 <fchmod@plt+0x8740>
test   %eax,%eax
mov    %eax,-0xd8(%ebp)
je     8054508 <fchmod@plt+0x9568>
mov    0xe8(%esi),%edi
call   804cc10 <fchmod@plt+0x1c70>
movl   $0x0,0x58(%esi)
movl   $0x0,0x5c(%esi)
mov    %esi,(%esp)
mov    %eax,-0xb0(%ebp)
mov    %edx,-0xac(%ebp)
call   8052830 <fchmod@plt+0x7890>
test   %eax,%eax
mov    %eax,%ecx
je     805440f <fchmod@plt+0x946f>
cmpb   $0x0,0x809e2e1
je     8054e16 <fchmod@plt+0x9e76>
cmpl   $0x4,0x809e4e4
je     8055118 <fchmod@plt+0xa178>
movb   $0x44,0x9c(%eax)
mov    0x809e2cc,%eax
mov    0x24(%eax),%eax
test   %eax,%eax
je     8054e3d <fchmod@plt+0x9e9d>
mov    %ecx,-0xe4(%ebp)
call   804cc10 <fchmod@plt+0x1c70>
mov    %eax,-0xe0(%ebp)
mov    0x809e2cc,%eax
mov    %edx,-0xdc(%ebp)
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   805d770 <fchmod@plt+0x127d0>
mov    %eax,(%esp)
mov    %eax,-0xb8(%ebp)
call   805d0d0 <fchmod@plt+0x12130>
mov    -0xe4(%ebp),%ecx
movl   $0x0,-0xac(%ebp)
00
mov    -0xac(%ebp),%ebx
movl   $0xc,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,-0xb0(%ebp)
mov    %eax,%edi
lea    0x7c(%ecx),%eax
mov    -0xb0(%ebp),%ecx
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   8052100 <fchmod@plt+0x7160>
mov    -0xe0(%ebp),%eax
mov    -0xdc(%ebp),%edx
mov    -0xe4(%ebp),%ecx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    -0xb0(%ebp),%ecx
mov    -0xac(%ebp),%ebx
mov    %ecx,0xc(%esp)
mov    %ebx,0x10(%esp)
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   804c690 <fchmod@plt+0x16f0>
test   %edi,%edi
je     805440f <fchmod@plt+0x946f>
mov    %esi,-0xe4(%ebp)
lea    0x0(%esi,%eiz,1),%esi
call   804d410 <fchmod@plt+0x2470>
xor    %esi,%esi
mov    %eax,(%esp)
mov    %eax,%edi
call   804cd40 <fchmod@plt+0x1da0>
cmp    -0xac(%ebp),%esi
mov    %eax,%edx
mov    %eax,%ebx
jl     80543a6 <fchmod@plt+0x9406>
jg     805438f <fchmod@plt+0x93ef>
cmp    -0xb0(%ebp),%eax
jbe    80543a6 <fchmod@plt+0x9406>
mov    -0xb0(%ebp),%edx
mov    %edx,%eax
and    $0x1ff,%eax
jne    8054d20 <fchmod@plt+0x9d80>
mov    %edx,%ebx
xor    %esi,%esi
mov    -0xb8(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,-0xe0(%ebp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    -0xe0(%ebp),%edx
sub    %ebx,-0xb0(%ebp)
sbb    %esi,-0xac(%ebp)
add    %edx,-0xb8(%ebp)
sub    $0x1,%edx
and    $0xfffffe00,%edx
add    %edi,%edx
mov    %edx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmpl   $0x0,-0xac(%ebp)
jl     8054409 <fchmod@plt+0x9469>
jg     8054368 <fchmod@plt+0x93c8>
cmpl   $0x0,-0xb0(%ebp)
ja     8054368 <fchmod@plt+0x93c8>
mov    -0xe4(%ebp),%esi
mov    %esi,(%esp)
call   8053900 <fchmod@plt+0x8960>
mov    -0xd8(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    $0x1,%eax
mov    0xf0(%esi),%ebx
cmpb   $0x0,-0x98(%ebp)
mov    0x809c3f8,%edi
mov    %ebx,-0xb8(%ebp)
jne    8054451 <fchmod@plt+0x94b1>
mov    -0xa8(%ebp),%ebx
mov    0xf0(%ebx),%edi
test   %al,%al
je     80544b5 <fchmod@plt+0x9515>
mov    -0xb8(%ebp),%eax
test   %eax,%eax
js     8054d68 <fchmod@plt+0x9dc8>
mov    -0xb8(%ebp),%ebx
test   %ebx,%ebx
jne    8054f40 <fchmod@plt+0x9fa0>
mov    %edi,%eax
shr    $0x1f,%eax
test   %al,%al
je     805506c <fchmod@plt+0xa0cc>
cmpb   $0x0,-0x8d(%ebp)
je     805506c <fchmod@plt+0xa0cc>
call   804aaf0 <__errno_location@plt>
neg    %edi
mov    %edi,(%eax)
movzbl -0x98(%ebp),%eax
movl   $0x8063530,0x8(%esp)
mov    %eax,0x4(%esp)
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   8063550 <fchmod@plt+0x185b0>
mov    %esi,(%esp)
call   806be50 <fchmod@plt+0x20eb0>
jmp    8053ee7 <fchmod@plt+0x8f47>
lea    0x0(%esi),%esi
jl     8054105 <fchmod@plt+0x9165>
cmp    %ebx,%ecx
jns    8054105 <fchmod@plt+0x9165>
jmp    8054014 <fchmod@plt+0x9074>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    -0xc8(%ebp),%eax
jg     8054022 <fchmod@plt+0x9082>
lea    0x0(%esi,%eiz,1),%esi
jl     8054105 <fchmod@plt+0x9165>
cmp    %ebx,-0xd0(%ebp)
jns    8054105 <fchmod@plt+0x9165>
jmp    8054022 <fchmod@plt+0x9082>
nop
mov    (%esi),%eax
mov    %eax,(%esp)
call   80634e0 <fchmod@plt+0x18540>
xor    %eax,%eax
jmp    805442a <fchmod@plt+0x948a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809da4c,%ecx
test   %ecx,%ecx
je     80547e7 <fchmod@plt+0x9847>
mov    0x809da50,%ebx
cmp    %ebx,0x40(%esi)
ja     8054546 <fchmod@plt+0x95a6>
cmpb   $0x0,0x809e4ac
je     80547e7 <fchmod@plt+0x9847>
mov    0x84(%esi),%eax
mov    0x88(%esi),%edx
mov    %eax,-0x74(%ebp)
mov    0x2c(%esi),%eax
mov    %edx,-0x70(%ebp)
mov    0x30(%esi),%edx
mov    %ecx,(%esp)
mov    %eax,-0x7c(%ebp)
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %edx,-0x78(%ebp)
call   807a5f0 <argp_parse+0x26b0>
test   %eax,%eax
mov    %eax,%edx
je     80547df <fchmod@plt+0x983f>
movzbl 0x809e534,%eax
movl   $0x1,0x4(%esp)
mov    %edx,-0xa8(%ebp)
mov    %eax,0x8(%esp)
lea    0x14(%edx),%eax
mov    %eax,(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    -0xa8(%ebp),%edx
subl   $0x1,0x10(%edx)
mov    %eax,%ebx
mov    %eax,-0xb0(%ebp)
call   804cc10 <fchmod@plt+0x1c70>
mov    %ebx,0x4(%esp)
mov    %eax,-0xe0(%ebp)
lea    0xc(%esi),%eax
mov    %eax,(%esp)
mov    %edx,-0xdc(%ebp)
call   8062250 <fchmod@plt+0x172b0>
xor    %edx,%edx
cmpl   $0x2,0x809e4e4
mov    %ebx,(%esp)
setne  %dl
add    $0x63,%edx
mov    %edx,-0xa8(%ebp)
call   804a950 <strlen@plt>
mov    -0xa8(%ebp),%edx
add    0x809e43c,%eax
cmp    %edx,%eax
ja     8054d5c <fchmod@plt+0x9dbc>
movl   $0x0,0x58(%esi)
movl   $0x0,0x5c(%esi)
mov    %esi,(%esp)
call   8052830 <fchmod@plt+0x7890>
test   %eax,%eax
je     80547df <fchmod@plt+0x983f>
lea    0x9d(%eax),%ebx
xor    %edx,%edx
mov    -0xb0(%ebp),%edi
jmp    8054640 <fchmod@plt+0x96a0>
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    $0x64,%edx
je     805464b <fchmod@plt+0x96ab>
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
mov    %cl,(%ebx,%edx,1)
jne    8054638 <fchmod@plt+0x9698>
mov    -0xe0(%ebp),%ecx
mov    -0xdc(%ebp),%ebx
movb   $0x31,0x9c(%eax)
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
call   8052590 <fchmod@plt+0x75f0>
cmpb   $0x0,0x809e4ac
je     8053ee7 <fchmod@plt+0x8f47>
movl   $0x0,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806d160 <fchmod@plt+0x221c0>
jmp    8053ee7 <fchmod@plt+0x8f47>
xchg   %ax,%ax
cmpb   $0x0,0x809e418
je     8054070 <fchmod@plt+0x90d0>
cmpb   $0x0,0x809e48e
je     80547d0 <fchmod@plt+0x9830>
cmpb   $0x0,0x809e520
je     80547d0 <fchmod@plt+0x9830>
mov    0x64(%esi),%eax
mov    0x5c(%esi),%edx
movl   $0x0,-0xc0(%ebp)
00
movl   $0x0,-0xbc(%ebp)
00
mov    %eax,-0xd0(%ebp)
mov    0x68(%esi),%eax
mov    %edx,%ecx
sar    $0x1f,%ecx
and    $0x1ff,%ecx
mov    %eax,-0xcc(%ebp)
mov    0x58(%esi),%eax
mov    %edx,-0xb4(%ebp)
xor    %edx,%edx
mov    %eax,-0xb8(%ebp)
mov    %ecx,%eax
mov    %edx,%ecx
mov    %eax,%edx
add    -0xb8(%ebp),%edx
adc    -0xb4(%ebp),%ecx
mov    %edx,%eax
shrd   $0x9,%ecx,%eax
mov    %ecx,%edx
mov    %eax,-0xc8(%ebp)
mov    -0xb8(%ebp),%eax
sar    $0x9,%edx
mov    %edx,-0xc4(%ebp)
and    $0x1ff,%eax
test   %eax,%eax
je     805479c <fchmod@plt+0x97fc>
mov    -0xb8(%ebp),%eax
mov    -0xb4(%ebp),%edx
movl   $0x1,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
add    $0x1ff,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
ja     8054784 <fchmod@plt+0x97e4>
cmp    $0x3fe,%eax
ja     8054784 <fchmod@plt+0x97e4>
movl   $0x0,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
mov    -0xb8(%ebp),%eax
mov    -0xb4(%ebp),%edx
mov    %eax,-0xc0(%ebp)
mov    %edx,-0xbc(%ebp)
mov    -0xc8(%ebp),%eax
mov    -0xc4(%ebp),%edx
add    -0xc0(%ebp),%eax
adc    -0xbc(%ebp),%edx
cmp    %edx,-0xcc(%ebp)
jl     8054090 <fchmod@plt+0x90f0>
jg     80547d0 <fchmod@plt+0x9830>
cmp    %eax,-0xd0(%ebp)
jb     8054090 <fchmod@plt+0x90f0>
xchg   %ax,%ax
movl   $0x0,-0xb8(%ebp)
00
jmp    8053f76 <fchmod@plt+0x8fd6>
mov    0x3c(%esi),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8054857 <fchmod@plt+0x98b7>
cmp    $0xa000,%eax
je     8054a20 <fchmod@plt+0x9a80>
cmp    $0x2000,%eax
je     8054be8 <fchmod@plt+0x9c48>
cmp    $0x6000,%eax
je     8054d7c <fchmod@plt+0x9ddc>
cmp    $0x1000,%eax
je     8054ee0 <fchmod@plt+0x9f40>
cmp    $0xc000,%eax
jne    8054bd8 <fchmod@plt+0x9c38>
testb  $0x20,0x809d640
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087126,0x4(%esp)
mov    %eax,%ebx
jmp    805413e <fchmod@plt+0x919e>
mov    -0xa0(%ebp),%eax
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806e640 <fchmod@plt+0x236a0>
mov    -0xb8(%ebp),%ebx
mov    -0xa0(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
call   806ec00 <fchmod@plt+0x23c60>
mov    -0xa0(%ebp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806e900 <fchmod@plt+0x23960>
test   %ebx,%ebx
je     80549e8 <fchmod@plt+0x9a48>
cmpb   $0x0,0x809e520
je     80549e8 <fchmod@plt+0x9a48>
mov    0x64(%esi),%eax
xor    %ecx,%ecx
mov    0x5c(%esi),%edx
movl   $0x0,-0xb0(%ebp)
00
movl   $0x0,-0xac(%ebp)
00
mov    %eax,-0xd8(%ebp)
mov    0x68(%esi),%eax
mov    %edx,%ebx
sar    $0x1f,%ebx
and    $0x1ff,%ebx
mov    %eax,-0xe0(%ebp)
mov    0x58(%esi),%eax
mov    %edx,-0xa4(%ebp)
mov    %ebx,%edx
mov    %eax,-0xa8(%ebp)
add    -0xa8(%ebp),%edx
adc    -0xa4(%ebp),%ecx
mov    %edx,%eax
shrd   $0x9,%ecx,%eax
mov    %ecx,%edx
mov    -0xa8(%ebp),%ecx
sar    $0x9,%edx
and    $0x1ff,%ecx
test   %ecx,%ecx
je     805499c <fchmod@plt+0x99fc>
mov    -0xa8(%ebp),%ecx
mov    -0xa4(%ebp),%ebx
movl   $0x1,-0xa8(%ebp)
00
movl   $0x0,-0xa4(%ebp)
00
add    $0x1ff,%ecx
adc    $0x0,%ebx
cmp    $0x0,%ebx
ja     8054984 <fchmod@plt+0x99e4>
cmp    $0x3fe,%ecx
ja     8054984 <fchmod@plt+0x99e4>
movl   $0x0,-0xa8(%ebp)
00
movl   $0x0,-0xa4(%ebp)
00
mov    -0xa8(%ebp),%ecx
mov    -0xa4(%ebp),%ebx
mov    %ecx,-0xb0(%ebp)
mov    %ebx,-0xac(%ebp)
add    -0xb0(%ebp),%eax
adc    -0xac(%ebp),%edx
cmp    %edx,-0xe0(%ebp)
jg     80549e8 <fchmod@plt+0x9a48>
jl     80549ba <fchmod@plt+0x9a1a>
cmp    %eax,-0xd8(%ebp)
jae    80549e8 <fchmod@plt+0x9a48>
mov    -0xb8(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8067b90 <fchmod@plt+0x1cbf0>
cmp    $0x3,%eax
mov    %eax,%edx
je     80549e8 <fchmod@plt+0x9a48>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
jbe    8054a00 <fchmod@plt+0x9a60>
cmp    $0x3,%edx
jne    8054a13 <fchmod@plt+0x9a73>
call   804ae30 <abort@plt>
nop
mov    -0xb8(%ebp),%eax
mov    %esi,%edx
call   8053440 <fchmod@plt+0x84a0>
mov    %eax,%edx
jmp    80549d8 <fchmod@plt+0x9a38>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %edx,-0xa8(%ebp)
call   8051db0 <fchmod@plt+0x6e10>
mov    -0xa8(%ebp),%edx
test   %edx,%edx
je     8054463 <fchmod@plt+0x94c3>
jmp    80544b5 <fchmod@plt+0x9515>
mov    0x5c(%esi),%edx
mov    0x58(%esi),%eax
test   %edx,%edx
jne    8055333 <fchmod@plt+0xa393>
cmp    $0xffffffff,%eax
je     8055333 <fchmod@plt+0xa393>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
mov    -0xa0(%ebp),%eax
lea    0x23(%esp),%ecx
and    $0xfffffff0,%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0xa8(%ebp)
call   804a840 <readlinkat@plt>
mov    -0xa8(%ebp),%ecx
test   %eax,%eax
js     805505f <fchmod@plt+0xa0bf>
movb   $0x0,(%ecx,%eax,1)
mov    %eax,-0xa8(%ebp)
lea    0xc(%esi),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,-0x98(%ebp)
call   8062250 <fchmod@plt+0x172b0>
mov    -0x98(%ebp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   806cf60 <fchmod@plt+0x21fc0>
xor    %eax,%eax
mov    -0xa8(%ebp),%edx
cmpl   $0x2,0x809e4e4
setne  %al
add    $0x63,%eax
cmp    %edx,%eax
jl     8055009 <fchmod@plt+0xa069>
mov    -0xa0(%ebp),%ebx
mov    %edi,(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
call   806ec00 <fchmod@plt+0x23c60>
mov    %edi,(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
call   806e900 <fchmod@plt+0x23960>
call   804cc10 <fchmod@plt+0x1c70>
movl   $0x0,0x58(%esi)
movl   $0x0,0x5c(%esi)
mov    %esi,(%esp)
mov    %eax,-0x98(%ebp)
mov    %edx,-0x94(%ebp)
call   8052830 <fchmod@plt+0x7890>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,-0xa0(%ebp)
je     8053ee7 <fchmod@plt+0x8f47>
mov    0xc(%esi),%eax
add    $0x9d,%edi
xor    %edx,%edx
mov    -0x8c(%ebp),%ebx
jmp    8054b58 <fchmod@plt+0x9bb8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmp    $0x64,%edx
je     8054b63 <fchmod@plt+0x9bc3>
movzbl (%eax,%edx,1),%ecx
test   %cl,%cl
mov    %cl,(%edi,%edx,1)
jne    8054b50 <fchmod@plt+0x9bb0>
mov    -0xa0(%ebp),%eax
mov    %ebx,-0x8c(%ebp)
mov    -0x98(%ebp),%ecx
mov    -0x94(%ebp),%ebx
movb   $0x32,0x9c(%eax)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8052590 <fchmod@plt+0x75f0>
cmpb   $0x0,0x809e4ac
je     8054bb5 <fchmod@plt+0x9c15>
mov    -0x8c(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806d160 <fchmod@plt+0x221c0>
mov    %esi,%eax
call   8051db0 <fchmod@plt+0x6e10>
jmp    8053ee7 <fchmod@plt+0x8f47>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8063460,%eax
jmp    8053eca <fchmod@plt+0x8f2a>
lea    0x0(%esi),%esi
mov    -0x8c(%ebp),%eax
call   8051cb0 <fchmod@plt+0x6d10>
jmp    8053ee7 <fchmod@plt+0x8f47>
mov    -0xa0(%ebp),%ebx
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e640 <fchmod@plt+0x236a0>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806ec00 <fchmod@plt+0x23c60>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e900 <fchmod@plt+0x23960>
mov    $0x33,%ecx
cmpl   $0x1,0x809e4e4
mov    %ecx,-0x98(%ebp)
je     8054bd8 <fchmod@plt+0x9c38>
call   804cc10 <fchmod@plt+0x1c70>
movl   $0x0,0x58(%esi)
movl   $0x0,0x5c(%esi)
mov    %esi,(%esp)
mov    %eax,-0xa0(%ebp)
mov    %edx,-0x9c(%ebp)
call   8052830 <fchmod@plt+0x7890>
test   %eax,%eax
mov    %eax,%edi
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x98(%ebp),%ecx
cmp    $0x36,%cl
mov    %cl,0x9c(%eax)
je     8054cd8 <fchmod@plt+0x9d38>
mov    0x4c(%esi),%ecx
lea    0x149(%eax),%edx
mov    0x50(%esi),%ebx
mov    0x50(%esi),%eax
shrd   $0x8,%ebx,%ecx
and    $0xfff,%ecx
and    $0xfffff000,%eax
or     %ecx,%eax
call   8051f70 <fchmod@plt+0x6fd0>
mov    0x50(%esi),%edx
lea    0x151(%edi),%ecx
mov    0x4c(%esi),%eax
shrd   $0xc,%edx,%eax
movzbl 0x4c(%esi),%edx
xor    %al,%al
or     %edx,%eax
mov    %ecx,%edx
call   8051f30 <fchmod@plt+0x6f90>
mov    -0xa0(%ebp),%eax
mov    -0x9c(%ebp),%edx
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   8052590 <fchmod@plt+0x75f0>
cmpb   $0x0,0x809e4ac
je     8053ee7 <fchmod@plt+0x8f47>
mov    -0x8c(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806d160 <fchmod@plt+0x221c0>
jmp    8053ee7 <fchmod@plt+0x8f47>
mov    $0x200,%ecx
xor    %esi,%esi
sub    %eax,%ecx
mov    -0xb0(%ebp),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,-0xe0(%ebp)
add    %edi,%eax
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    -0xb0(%ebp),%ebx
mov    -0xe0(%ebp),%edx
jmp    80543a6 <fchmod@plt+0x9406>
mov    %esi,%eax
call   80532d0 <fchmod@plt+0x8330>
jmp    8054604 <fchmod@plt+0x9664>
call   804aaf0 <__errno_location@plt>
mov    -0xb8(%ebp),%edx
neg    %edx
mov    %edx,(%eax)
jmp    8054494 <fchmod@plt+0x94f4>
mov    -0xa0(%ebp),%ebx
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e640 <fchmod@plt+0x236a0>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806ec00 <fchmod@plt+0x23c60>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e900 <fchmod@plt+0x23960>
mov    $0x34,%ecx
jmp    8054c43 <fchmod@plt+0x9ca3>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80870f1,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8052000 <fchmod@plt+0x7060>
jmp    8053ee7 <fchmod@plt+0x8f47>
movb   $0x35,0x9c(%eax)
mov    -0xac(%ebp),%edx
mov    -0xb0(%ebp),%eax
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    0x809e480,%ebx
test   %ebx,%ebx
je     805440f <fchmod@plt+0x946f>
cmpb   $0x0,0x809e301
je     805517c <fchmod@plt+0xa1dc>
test   %edi,%edi
je     805517c <fchmod@plt+0xa1dc>
mov    0xe8(%esi),%edx
mov    0x2c(%edx),%eax
mov    0x30(%edx),%edx
xor    0x30(%esi),%edx
xor    0x2c(%esi),%eax
or     %eax,%edx
je     805517c <fchmod@plt+0xa1dc>
cmpl   $0x0,0x809e46c
je     805440f <fchmod@plt+0x946f>
testb  $0x4,0x809d642
je     805440f <fchmod@plt+0x946f>
mov    (%esi),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087368,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    805440f <fchmod@plt+0x946f>
lea    0x0(%esi),%esi
mov    -0xa0(%ebp),%ebx
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e640 <fchmod@plt+0x236a0>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806ec00 <fchmod@plt+0x23c60>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806e900 <fchmod@plt+0x23960>
mov    $0x36,%ecx
jmp    8054c43 <fchmod@plt+0x9ca3>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xb8(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     8054494 <fchmod@plt+0x94f4>
mov    -0xc8(%ebp),%ebx
cmp    -0x2c(%ebp),%ebx
mov    -0x28(%ebp),%eax
jne    8054fe0 <fchmod@plt+0xa040>
cmp    %eax,-0xd0(%ebp)
jne    8054fe0 <fchmod@plt+0xa040>
mov    -0xcc(%ebp),%eax
cmp    -0x4c(%ebp),%eax
jg     8054f98 <fchmod@plt+0x9ff8>
jl     8054ff2 <fchmod@plt+0xa052>
mov    -0xd4(%ebp),%eax
cmp    -0x50(%ebp),%eax
jb     8054ff2 <fchmod@plt+0xa052>
cmpl   $0x1,0x809e430
je     80550a0 <fchmod@plt+0xa100>
mov    %esi,(%esp)
call   806be50 <fchmod@plt+0x20eb0>
test   %al,%al
je     8053ee7 <fchmod@plt+0x8f47>
cmpb   $0x0,0x809e4ac
je     8053ee7 <fchmod@plt+0x8f47>
movzbl -0xc0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   806d160 <fchmod@plt+0x221c0>
jmp    8053ee7 <fchmod@plt+0x8f47>
cmpb   $0x0,0x809e4ac
je     8054ff2 <fchmod@plt+0xa052>
cmpb   $0x0,-0xc0(%ebp)
jne    8054f80 <fchmod@plt+0x9fe0>
testb  $0x10,0x809d640
jne    8055015 <fchmod@plt+0xa075>
movl   $0x1,(%esp)
call   806c040 <fchmod@plt+0x210a0>
jmp    8054fa5 <fchmod@plt+0xa005>
mov    %esi,%eax
call   80532d0 <fchmod@plt+0x8330>
jmp    8054ac9 <fchmod@plt+0x9b29>
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808739c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8054ffb <fchmod@plt+0xa05b>
movl   $0x80634c0,0x8(%esp)
jmp    8053ece <fchmod@plt+0x8f2e>
mov    0x809e434,%eax
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    -0x7c(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x8(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
sete   %al
jmp    8054f62 <fchmod@plt+0x9fc2>
mov    -0xb8(%ebp),%ecx
test   %ecx,%ecx
je     8054fa5 <fchmod@plt+0xa005>
cmpb   $0x0,-0xc0(%ebp)
jne    80550c9 <fchmod@plt+0xa129>
mov    -0xd4(%ebp),%eax
or     -0xcc(%ebp),%eax
je     8054fa5 <fchmod@plt+0xa005>
mov    0x8c(%esi),%eax
mov    0x90(%esi),%edx
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    -0xa0(%ebp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    -0xb8(%ebp),%eax
mov    %eax,(%esp)
call   8063270 <fchmod@plt+0x182d0>
test   %eax,%eax
je     8054fa5 <fchmod@plt+0xa005>
mov    -0x8c(%ebp),%eax
mov    %eax,(%esp)
call   806fbe0 <fchmod@plt+0x24c40>
jmp    8054fa5 <fchmod@plt+0xa005>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x35,0x9c(%eax)
mov    0x809e2cc,%eax
mov    0x24(%eax),%eax
test   %eax,%eax
je     8054e3d <fchmod@plt+0x9e9d>
mov    %eax,(%esp)
mov    %ecx,-0xb8(%ebp)
call   805d770 <fchmod@plt+0x127d0>
mov    %esi,0x4(%esp)
movl   $0x8087106,(%esp)
mov    %eax,0x8(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    -0xb0(%ebp),%eax
mov    -0xac(%ebp),%edx
mov    -0xb8(%ebp),%ecx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
call   8052590 <fchmod@plt+0x75f0>
jmp    805440f <fchmod@plt+0x946f>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8053870 <fchmod@plt+0x88d0>
cmp    $0x1,%eax
je     8055297 <fchmod@plt+0xa2f7>
jb     80551da <fchmod@plt+0xa23a>
cmp    $0x2,%eax
jne    805440f <fchmod@plt+0x946f>
movl   $0x5,0x8(%esp)
movl   $0x8087112,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8052000 <fchmod@plt+0x7060>
jmp    805440f <fchmod@plt+0x946f>
call   804a610 <__stack_chk_fail@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
or     $0xffffffff,%ecx
mov    %eax,%ebx
xor    %eax,%eax
mov    %ebx,%edi
repnz scas %es:(%edi),%al
mov    -0xd8(%ebp),%edi
mov    %esi,-0xe0(%ebp)
mov    %ecx,%edx
not    %edx
lea    -0x1(%edx),%eax
mov    %eax,-0xb0(%ebp)
mov    %eax,-0xb8(%ebp)
jmp    8055234 <fchmod@plt+0xa294>
mov    -0xb0(%ebp),%eax
mov    %edi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    %ebx,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
je     805526c <fchmod@plt+0xa2cc>
lea    0x1(%edi,%esi,1),%edi
mov    %edi,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8055284 <fchmod@plt+0xa2e4>
mov    -0xb0(%ebp),%eax
lea    (%esi,%eax,1),%ecx
cmp    -0xb8(%ebp),%ecx
jbe    8055210 <fchmod@plt+0xa270>
lea    0x1(%ecx),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,-0xb8(%ebp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,%ebx
jmp    8055210 <fchmod@plt+0xa270>
mov    -0xe0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
jmp    8055230 <fchmod@plt+0xa290>
mov    %ebx,(%esp)
mov    -0xe0(%ebp),%esi
call   804a4c0 <free@plt>
jmp    805440f <fchmod@plt+0x946f>
movl   $0x5,0x8(%esp)
movl   $0x8087112,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8052000 <fchmod@plt+0x7060>
mov    (%esi),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    -0x7c(%ebp),%edi
mov    %ecx,%edx
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
not    %edx
not    %ecx
lea    -0x1(%edx,%ecx,1),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%edi
mov    (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a600 <stpcpy@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,0x4(%esp)
mov    %edx,-0xb0(%ebp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    -0xb0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
mov    %edi,(%esp)
call   804a4c0 <free@plt>
jmp    805440f <fchmod@plt+0x946f>
call   8056010 <fchmod@plt+0xb070>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
test   %edx,%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
js     8055540 <fchmod@plt+0xa5a0>
mov    0x18(%esp),%ecx
mov    $0x3,%eax
mov    0x1c(%esp),%ebx
mov    %ax,0x38(%esp)
mov    %ecx,%eax
cltd
cmp    %edx,%ebx
mov    %ecx,0x3c(%esp)
sete   %al
test   %al,%al
je     80553bc <fchmod@plt+0xa41c>
mov    0x809e544,%eax
lea    0x38(%esp),%ebx
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
cmp    $0x3fffffff,%eax
jg     8055528 <fchmod@plt+0xa588>
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
not    %eax
shr    $0x1f,%eax
test   %al,%al
jne    80554e1 <fchmod@plt+0xa541>
call   804aaf0 <__errno_location@plt>
cmpl   $0x5,(%eax)
je     8055570 <fchmod@plt+0xa5d0>
mov    0x809e544,%eax
cmp    $0x3fffffff,%eax
jg     80554f0 <fchmod@plt+0xa550>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    0x1c(%esp),%ebp
mov    0x809e524,%ebx
mov    0x18(%esp),%edi
mov    %ebp,%eax
imul   %ebx,%eax
mov    %eax,%ecx
mov    %edi,%eax
mul    %ebx
mov    %edx,0x24(%esp)
add    %ecx,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    %edx,%edi
mov    0x18(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x4(%esp)
call   8085e50 <argp_parse+0xdf10>
xor    %ebx,%eax
or     %eax,%edx
jne    80554ca <fchmod@plt+0xa52a>
cmp    %edi,0x2c(%esp)
mov    $0x1,%eax
jg     8055472 <fchmod@plt+0xa4d2>
jl     80555a8 <fchmod@plt+0xa608>
cmp    %esi,0x28(%esp)
jbe    80555a8 <fchmod@plt+0xa608>
mov    0x24(%esp),%edx
shr    $0x1f,%edx
cmp    %dl,%al
jne    80554ca <fchmod@plt+0xa52a>
mov    %edi,%eax
mov    %edi,%ebp
cltd
mov    %edx,%eax
not    %eax
sar    $0x1f,%eax
mov    %eax,%edx
and    %esi,%eax
mov    %eax,%ebx
mov    %eax,%esi
mov    0x809e544,%eax
and    %edx,%ebp
mov    %ebp,%edi
movl   $0x0,0xc(%esp)
cmp    $0x3fffffff,%eax
mov    %ebx,0x4(%esp)
mov    %ebp,0x8(%esp)
jle    80555c0 <fchmod@plt+0xa620>
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
xor    %edx,%ebp
xor    %eax,%ebx
or     %ebx,%ebp
je     80554e1 <fchmod@plt+0xa541>
mov    0x809e488,%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f930 <fchmod@plt+0x24990>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x40000000,%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8070c10 <fchmod@plt+0x25c70>
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    80553f4 <fchmod@plt+0xa454>
lea    0x0(%esi),%esi
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
not    %eax
shr    $0x1f,%eax
jmp    80553a6 <fchmod@plt+0xa406>
nop
mov    %eax,%esi
mov    $0x4,%ecx
neg    %esi
mov    %esi,%ebx
sar    $0x1f,%ebx
neg    %eax
adc    $0x0,%edx
mov    %ebx,%edi
neg    %edx
mov    %esi,0x3c(%esp)
xor    %edx,%edi
xor    %eax,%esi
or     %edi,%esi
mov    %cx,0x38(%esp)
sete   %al
jmp    8055375 <fchmod@plt+0xa3d5>
xchg   %ax,%ax
mov    0x809e544,%eax
mov    %ebx,0x8(%esp)
movl   $0x40086d01,0x4(%esp)
cmp    $0x3fffffff,%eax
jg     80555d0 <fchmod@plt+0xa630>
mov    %eax,(%esp)
call   804a700 <ioctl@plt>
not    %eax
shr    $0x1f,%eax
test   %al,%al
je     80553bc <fchmod@plt+0xa41c>
jmp    80554e1 <fchmod@plt+0xa541>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edx
xor    %eax,%eax
shr    $0x1f,%edx
cmp    %dl,%al
jne    80554ca <fchmod@plt+0xa52a>
jmp    805547d <fchmod@plt+0xa4dd>
xchg   %ax,%ax
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
jmp    80554c2 <fchmod@plt+0xa522>
lea    0x0(%esi),%esi
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070e80 <fchmod@plt+0x25ee0>
not    %eax
shr    $0x1f,%eax
jmp    8055595 <fchmod@plt+0xa5f5>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
mov    0x809da60,%eax
cmpb   $0x0,0x809da58
mov    0x809e274,%esi
mov    %eax,0x809e274
jne    8055698 <fchmod@plt+0xa6f8>
mov    0x809e260,%eax
mov    0x809e264,%edx
add    0x809e2a0,%eax
adc    0x809e2a4,%edx
sub    0x809e250,%eax
sbb    0x809e254,%edx
mov    %edx,%ecx
or     %eax,%ecx
jne    80556b8 <fchmod@plt+0xa718>
call   804f0f0 <fchmod@plt+0x4150>
test   %ebx,%ebx
mov    %esi,0x809e274
je     8055682 <fchmod@plt+0xa6e2>
cmpb   $0x0,0x809da58
jne    8055682 <fchmod@plt+0xa6e2>
mov    0x809e260,%ecx
mov    0x809e250,%eax
add    0x809e2a0,%ecx
mov    0x809e264,%ebx
mov    0x809e254,%edx
adc    0x809e2a4,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %edx,%ebx
or     %eax,%ebx
jne    80556c8 <fchmod@plt+0xa728>
movl   $0x0,0x809da5c
00
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x1,0x809e544
00
call   804f0f0 <fchmod@plt+0x4150>
movl   $0x0,0x809e544
00
jmp    8055642 <fchmod@plt+0xa6a2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8055340 <fchmod@plt+0xa3a0>
jmp    805563d <fchmod@plt+0xa69d>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   8055340 <fchmod@plt+0xa3a0>
movl   $0x0,0x809da5c
00
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
test   %edx,%edx
mov    %edx,0xc(%esp)
jne    8055717 <fchmod@plt+0xa777>
jmp    8055788 <fchmod@plt+0xa7e8>
add    $0x1,%ebp
add    $0x200,%ebx
cmp    0xc(%esp),%ebp
je     8055788 <fchmod@plt+0xa7e8>
mov    0x809da5c,%ecx
mov    %ebx,%esi
mov    $0x200,%eax
lea    0x1(%ecx),%edx
shl    $0x9,%ecx
add    0x809da60,%ecx
mov    %edx,0x809da5c
test   $0x1,%cl
mov    %ecx,%edi
jne    80557a8 <fchmod@plt+0xa808>
test   $0x2,%edi
jne    8055790 <fchmod@plt+0xa7f0>
mov    %eax,%ecx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     805575b <fchmod@plt+0xa7bb>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
test   $0x1,%al
je     8055766 <fchmod@plt+0xa7c6>
movzbl (%esi,%ecx,1),%eax
mov    %al,(%edi,%ecx,1)
cmp    0x809e4b0,%edx
jne    8055708 <fchmod@plt+0xa768>
mov    $0x1,%eax
add    $0x1,%ebp
call   80555f0 <fchmod@plt+0xa650>
add    $0x200,%ebx
cmp    0xc(%esp),%ebp
jne    8055717 <fchmod@plt+0xa777>
nop
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %cx,-0x2(%edi)
jmp    8055745 <fchmod@plt+0xa7a5>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
add    $0x1,%edi
lea    0x1(%ebx),%esi
mov    %al,(%ecx)
mov    $0x1ff,%eax
jmp    805573d <fchmod@plt+0xa79d>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   8064c20 <fchmod@plt+0x19c80>
movl   $0x2,(%esp)
call   804f110 <fchmod@plt+0x4170>
mov    0x809e488,%eax
mov    (%eax),%ecx
mov    $0x2d,%eax
movzbl (%ecx),%edx
sub    %edx,%eax
jne    80557f1 <fchmod@plt+0xa851>
movzbl 0x1(%ecx),%eax
neg    %eax
test   %eax,%eax
sete   0x809da58
xor    %esi,%esi
movl   $0x1,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x5,%eax
mov    %eax,%edi
ja     8055b27 <fchmod@plt+0xab87>
jmp    *0x8087414(,%eax,4)
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e2f9
jne    8055b50 <fchmod@plt+0xabb0>
mov    0x809e250,%eax
mov    0x809e254,%edx
add    $0xffffffff,%eax
mov    %eax,0x809e2a0
mov    0x809e524,%eax
adc    $0xffffffff,%edx
mov    %edx,0x809e2a4
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x809da60
mov    %eax,(%esp)
call   804a4c0 <free@plt>
call   804d910 <fchmod@plt+0x2970>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8065250 <fchmod@plt+0x1a2b0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8065950 <fchmod@plt+0x1a9b0>
test   %eax,%eax
je     8055b3f <fchmod@plt+0xab9f>
mov    0x1c(%eax),%ecx
mov    0x20(%eax),%ebx
mov    0x809e4c0,%edx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,0x1c(%eax)
mov    %ebx,0x20(%eax)
mov    0x809e4c4,%eax
mov    %eax,%esi
or     %edx,%esi
je     8055b30 <fchmod@plt+0xab90>
xor    %ebx,%eax
xor    %ecx,%edx
or     %eax,%edx
setne  %al
test   %al,%al
jne    8055b3f <fchmod@plt+0xab9f>
lea    0x0(%esi),%esi
mov    0x809e250,%eax
mov    %edi,%ebx
mov    0x809e254,%edx
add    $0xffffffff,%eax
mov    %eax,0x809e2a0
mov    0x809e524,%eax
adc    $0xffffffff,%edx
mov    %edx,0x809e2a4
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x809e288,%esi
mov    0x809e274,%ecx
movb   $0x0,0x809e278
mov    %esi,%edi
sub    %ecx,%edi
mov    %edi,%edx
sar    $0x9,%edx
test   %edx,%edx
mov    %eax,0x809da60
mov    %edx,0x809da5c
jne    8055f00 <fchmod@plt+0xaf60>
cmp    $0x1,%ebx
je     80559da <fchmod@plt+0xaa3a>
mov    0x809e258,%eax
mov    %esi,%ecx
cmp    %eax,%ecx
je     8055f15 <fchmod@plt+0xaf75>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
movl   $0x809e320,(%esp)
mov    %eax,%ebx
call   805afd0 <fchmod@plt+0x10030>
cmp    $0x3,%ebx
je     8055d40 <fchmod@plt+0xada0>
cmp    $0x4,%ebx
je     8055d4d <fchmod@plt+0xadad>
cmp    $0x5,%ebx
je     8055db8 <fchmod@plt+0xae18>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8065950 <fchmod@plt+0x1a9b0>
test   %eax,%eax
je     8055b68 <fchmod@plt+0xabc8>
mov    0x1c(%eax),%ecx
mov    0x20(%eax),%ebx
mov    0x809e4c0,%edx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,0x1c(%eax)
mov    %ebx,0x20(%eax)
mov    0x809e4c4,%eax
mov    %eax,%esi
or     %edx,%esi
jne    8055e18 <fchmod@plt+0xae78>
mov    %ecx,%eax
or     %ebx,%eax
setne  %al
test   %al,%al
je     8055b68 <fchmod@plt+0xabc8>
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x809e378,%esi
mov    0x809e37c,%edi
mov    0x809e258,%ebp
mov    0x809e288,%ebx
add    $0x1ff,%esi
adc    $0x0,%edi
mov    %edi,%eax
mov    %ebp,%ecx
sar    $0x1f,%eax
and    $0x1ff,%eax
mov    %eax,0x28(%esp)
movl   $0x0,0x2c(%esp)
add    0x28(%esp),%esi
adc    0x2c(%esp),%edi
sub    %ebx,%ecx
sar    $0x9,%ecx
mov    %ecx,%eax
shrd   $0x9,%edi,%esi
cltd
sar    $0x9,%edi
cmp    %edx,%edi
jl     8055a70 <fchmod@plt+0xaad0>
jg     8055a41 <fchmod@plt+0xaaa1>
cmp    %ecx,%esi
jb     8055a70 <fchmod@plt+0xaad0>
sub    %eax,%esi
sbb    %edx,%edi
call   804d180 <fchmod@plt+0x21e0>
mov    0x809e258,%ebp
mov    0x809e288,%ebx
mov    %ebp,%ecx
sub    %ebx,%ecx
sar    $0x9,%ecx
mov    %ecx,%eax
cltd
cmp    %edi,%edx
jg     8055a70 <fchmod@plt+0xaad0>
jl     8055a41 <fchmod@plt+0xaaa1>
cmp    %esi,%ecx
jbe    8055a41 <fchmod@plt+0xaaa1>
lea    0x0(%esi),%esi
shl    $0x9,%esi
mov    %ebp,%eax
add    %ebx,%esi
mov    %esi,0x809e288
mov    %esi,%ecx
jmp    8055942 <fchmod@plt+0xa9a2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    $0x3,%esi
jbe    8055ab0 <fchmod@plt+0xab10>
cmp    $0x4,%esi
jne    8055b27 <fchmod@plt+0xab87>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
cmp    $0x1,%esi
jae    8055ae9 <fchmod@plt+0xab49>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x5,0x8(%esp)
movl   $0x80873f9,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    %edi,%esi
jmp    80557fc <fchmod@plt+0xa85c>
xchg   %ax,%ax
mov    %ecx,%eax
or     %ebx,%eax
sete   %al
test   %al,%al
je     80558d8 <fchmod@plt+0xa938>
call   8062100 <fchmod@plt+0x17160>
mov    %edi,%esi
jmp    80557fc <fchmod@plt+0xa85c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
mov    %edi,%esi
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
jmp    80557fc <fchmod@plt+0xa85c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e3f0,%ecx
test   %ecx,%ecx
jne    8055e26 <fchmod@plt+0xae86>
mov    0x809e2b4,%edx
mov    0x809e2b0,%eax
call   80556f0 <fchmod@plt+0xa750>
mov    0x809e2bc,%edx
mov    0x809e2c0,%eax
call   80556f0 <fchmod@plt+0xa750>
mov    0x809da60,%ecx
mov    0x809da5c,%edx
mov    0x809e2b8,%ebx
mov    %edx,%eax
shl    $0x9,%eax
add    %eax,%ecx
mov    $0x200,%eax
test   $0x1,%cl
mov    %ecx,%edi
mov    %ebx,%esi
jne    8055f73 <fchmod@plt+0xafd3>
test   $0x2,%edi
jne    8055f5e <fchmod@plt+0xafbe>
mov    %eax,%ecx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     8055be3 <fchmod@plt+0xac43>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
test   $0x1,%al
je     8055bee <fchmod@plt+0xac4e>
movzbl (%esi,%ecx,1),%eax
mov    %al,(%edi,%ecx,1)
mov    0x809e378,%ecx
add    $0x1,%edx
mov    0x809e37c,%ebx
movl   $0x0,0x1c(%esp)
mov    %edx,0x809da5c
add    $0x1ff,%ecx
adc    $0x0,%ebx
mov    %ebx,%eax
sar    $0x1f,%eax
and    $0x1ff,%eax
mov    %eax,0x18(%esp)
mov    0x809e2b8,%eax
add    0x18(%esp),%ecx
adc    0x1c(%esp),%ebx
mov    %ecx,%edi
mov    %ebx,%ebp
shrd   $0x9,%ebx,%edi
sar    $0x9,%ebp
mov    %eax,(%esp)
mov    %edi,0x10(%esp)
mov    %ebp,0x14(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x809e4b0,%eax
cmp    %eax,0x809da5c
je     8055f4f <fchmod@plt+0xafaf>
mov    0x809e258,%ebx
mov    0x809e288,%ecx
mov    %ebx,%esi
sub    %ecx,%esi
sar    $0x9,%esi
mov    %esi,%eax
cltd
cmp    %edx,%ebp
jg     8055c88 <fchmod@plt+0xace8>
jl     8055eb2 <fchmod@plt+0xaf12>
cmp    %esi,%edi
jb     8055eb2 <fchmod@plt+0xaf12>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
or     %edi,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    8055cb0 <fchmod@plt+0xad10>
jmp    8055f88 <fchmod@plt+0xafe8>
nop
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
mov    %edx,%ebx
or     %eax,%ebx
je     8055e09 <fchmod@plt+0xae69>
mov    0x809e258,%ebx
cmp    %ebx,%ecx
je     8055ec0 <fchmod@plt+0xaf20>
mov    0x809e4b0,%ebx
mov    0x809da5c,%edi
sub    %edi,%ebx
cmp    %esi,%ebx
cmovg  %esi,%ebx
test   %ebx,%ebx
je     8055aa8 <fchmod@plt+0xab08>
mov    0x809e288,%edx
mov    %edi,%eax
mov    %ebx,%ebp
shl    $0x9,%eax
add    %ebx,%edi
add    0x809da60,%eax
shl    $0x9,%ebp
mov    %edx,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x809e288,%ecx
mov    %ebx,%eax
cltd
mov    %edi,0x809da5c
add    %ebp,%ecx
sub    %ebx,0x10(%esp)
sbb    %edx,0x14(%esp)
sub    %ebx,%esi
cmp    0x809e4b0,%edi
mov    %ecx,0x809e288
jne    8055c98 <fchmod@plt+0xacf8>
mov    $0x1,%eax
call   80555f0 <fchmod@plt+0xa650>
mov    0x809e288,%ecx
jmp    8055c98 <fchmod@plt+0xacf8>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e2f9
jne    8055df6 <fchmod@plt+0xae56>
xor    %esi,%esi
nop
mov    0x809da5c,%eax
mov    0x809e4b0,%ebx
movl   $0x0,0x4(%esp)
sub    %eax,%ebx
shl    $0x9,%eax
mov    %ebx,%edx
add    0x809da60,%eax
add    %ebx,%esi
shl    $0x9,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
cmp    $0x1,%esi
setle  %bl
movzbl %bl,%eax
call   80555f0 <fchmod@plt+0xa650>
test   %bl,%bl
jne    8055d50 <fchmod@plt+0xadb0>
cmpb   $0x0,0x809da58
jne    8055dac <fchmod@plt+0xae0c>
mov    0x809e544,%eax
cmp    $0x3fffffff,%eax
jle    8055f8f <fchmod@plt+0xafef>
mov    0x809da60,%eax
jmp    805586b <fchmod@plt+0xa8cb>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x80873d8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x809e288,%ecx
mov    0x809e258,%eax
jmp    8055942 <fchmod@plt+0xa9a2>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%eax
xor    %ecx,%edx
or     %eax,%edx
sete   %al
jmp    80559d2 <fchmod@plt+0xaa32>
mov    0x809e3f4,%edi
mov    %ecx,%edx
shr    $0x9,%edx
mov    %edx,%esi
shl    $0x9,%esi
sub    %esi,%ecx
mov    %edi,%eax
mov    %ecx,%ebx
add    %edi,%esi
call   80556f0 <fchmod@plt+0xa750>
mov    0x809da5c,%edx
mov    0x809da60,%ecx
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,%ebp
shl    $0x9,%ebp
add    %ecx,%ebp
mov    %ebp,(%esp)
mov    %edx,0x24(%esp)
mov    %ecx,0x10(%esp)
call   804a4e0 <memcpy@plt>
cmp    $0x1ff,%ebx
mov    0x10(%esp),%ecx
mov    0x24(%esp),%edx
jbe    8055f25 <fchmod@plt+0xaf85>
add    $0x1,%edx
cmp    0x809e4b0,%edx
mov    %edx,0x809da5c
jne    8055ba2 <fchmod@plt+0xac02>
mov    $0x1,%eax
call   80555f0 <fchmod@plt+0xa650>
mov    0x809da60,%ecx
mov    0x809da5c,%edx
jmp    8055ba2 <fchmod@plt+0xac02>
mov    %edi,%esi
jmp    8055c88 <fchmod@plt+0xace8>
lea    0x0(%esi,%eiz,1),%esi
call   804f0e0 <fchmod@plt+0x4140>
mov    0x809e274,%eax
mov    0x809e4b0,%esi
mov    %eax,0x809e288
mov    %esi,%eax
cltd
cmp    0x14(%esp),%edx
jl     8055ef8 <fchmod@plt+0xaf58>
jg     8055ee6 <fchmod@plt+0xaf46>
cmp    0x10(%esp),%esi
jbe    8055ef8 <fchmod@plt+0xaf58>
mov    %esi,%ebx
mov    0x10(%esp),%esi
jmp    8055cbe <fchmod@plt+0xad1e>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    8055cbe <fchmod@plt+0xad1e>
nop
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
jmp    8055932 <fchmod@plt+0xa992>
call   804d180 <fchmod@plt+0x21e0>
lea    0x0(%esi),%esi
jmp    805594a <fchmod@plt+0xa9aa>
mov    $0x200,%eax
sub    %ebx,%eax
add    %ebp,%ebx
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804aa80 <memset@plt>
mov    0x24(%esp),%edx
mov    0x10(%esp),%ecx
jmp    8055e82 <fchmod@plt+0xaee2>
mov    $0x1,%eax
call   80555f0 <fchmod@plt+0xa650>
jmp    8055c5b <fchmod@plt+0xacbb>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %cx,-0x2(%edi)
jmp    8055bcd <fchmod@plt+0xac2d>
movzbl (%ebx),%eax
add    $0x1,%edi
add    $0x1,%esi
mov    %al,(%ecx)
mov    $0x1ff,%eax
jmp    8055bc1 <fchmod@plt+0xac21>
mov    %ebx,%eax
jmp    8055942 <fchmod@plt+0xa9a2>
mov    %eax,(%esp)
call   80688b0 <fchmod@plt+0x1d910>
test   %eax,%eax
je     8055dac <fchmod@plt+0xae0c>
mov    0x809e488,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806fba0 <fchmod@plt+0x24c00>
jmp    8055dac <fchmod@plt+0xae0c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x809e2a8,%eax
test   %eax,%eax
je     8055fce <fchmod@plt+0xb02e>
call   *%eax
movl   $0x5,0x8(%esp)
movl   $0x808742c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   804ae30 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8087452,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808d587,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   8062100 <fchmod@plt+0x17160>
xor    %eax,%eax
add    $0xc,%esp
ret
xchg   %ax,%ax
sub    $0xc,%esp
call   8062100 <fchmod@plt+0x17160>
xor    %eax,%eax
add    $0xc,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x50,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
test   %edx,%edx
js     80561a8 <fchmod@plt+0xb208>
cmp    0x809e52c,%edx
mov    0x809e530,%eax
jle    8056198 <fchmod@plt+0xb1f8>
lea    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   807a050 <argp_parse+0x2110>
mov    0x24(%esp),%eax
mov    0x18(%esp),%edx
mov    0x28(%esp),%esi
mov    0x1c(%esp),%ecx
cmp    %eax,%edx
jle    8056210 <fchmod@plt+0xb270>
mov    %edx,%edi
sub    %eax,%edi
mov    %ecx,%eax
sub    %esi,%eax
js     8056230 <fchmod@plt+0xb290>
testb  $0x80,0x809d641
je     8056180 <fchmod@plt+0xb1e0>
lea    0x2c(%esp),%esi
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   8062a30 <fchmod@plt+0x17a90>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
movl   $0x1,0x8(%esp)
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,%edi
call   8060db0 <fchmod@plt+0x15e10>
movl   $0x5,0x8(%esp)
movl   $0x8087488,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805623d <fchmod@plt+0xb29d>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
jl     8056180 <fchmod@plt+0xb1e0>
cmp    %ecx,%eax
lea    0x0(%esi,%eiz,1),%esi
jns    8056180 <fchmod@plt+0xb1e0>
jmp    80560bd <fchmod@plt+0xb11d>
nop
testb  $0x80,0x809d641
nop
je     8056180 <fchmod@plt+0xb1e0>
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
movl   $0x1,0x8(%esp)
call   8060db0 <fchmod@plt+0x15e10>
movl   $0x5,0x8(%esp)
movl   $0x8087464,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8056180 <fchmod@plt+0xb1e0>
lea    0x0(%esi,%eiz,1),%esi
jl     8056180 <fchmod@plt+0xb1e0>
cmp    %ecx,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
jns    8056180 <fchmod@plt+0xb1e0>
jmp    80560e9 <fchmod@plt+0xb149>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3b9aca00,%eax
sub    $0x1,%edi
jmp    80560f7 <fchmod@plt+0xb157>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x70,%esp
lea    0x10(%esp),%ebx
jmp    8056288 <fchmod@plt+0xb2e8>
xchg   %ax,%ax
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
mov    %edx,0x8(%esi)
mov    0x6c(%esp),%edx
mov    %eax,0x4(%esi)
mov    0x68(%esp),%eax
mov    %edx,0x10(%esi)
mov    %eax,0xc(%esi)
mov    (%esi),%esi
test   %esi,%esi
je     80562b0 <fchmod@plt+0xb310>
cmpb   $0x0,0x40(%esi)
jne    80562b0 <fchmod@plt+0xb310>
lea    0x68(%esi),%edi
movb   $0x1,0x40(%esi)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
je     8056260 <fchmod@plt+0xb2c0>
mov    %edi,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
mov    (%esi),%esi
test   %esi,%esi
jne    8056282 <fchmod@plt+0xb2e2>
lea    0x0(%esi),%esi
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edx
mov    0x40(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    0x48(%esp),%ecx
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %ecx,0x14(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebp
lea    0x69(%eax),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x18(%esp),%edx
test   %esi,%esi
mov    0x1c(%esp),%ecx
mov    %eax,%ebx
mov    0x809da6c,%eax
mov    %edx,0x14(%ebx)
mov    %eax,(%ebx)
je     8056468 <fchmod@plt+0xb4c8>
mov    0x2c(%esi),%eax
mov    0x30(%esi),%edx
mov    %ecx,0x30(%ebx)
mov    0x14(%esp),%ecx
mov    %ebp,0x64(%ebx)
mov    %eax,0x4(%ebx)
mov    0x84(%esi),%eax
mov    %edx,0x8(%ebx)
mov    0x88(%esi),%edx
mov    %ecx,0x3c(%ebx)
movb   $0x0,0x38(%ebx)
mov    %eax,0xc(%ebx)
mov    0x44(%esi),%eax
mov    %edx,0x10(%ebx)
mov    0x90(%esi),%edx
movb   $0x0,0x40(%ebx)
movl   $0x0,0x48(%ebx)
mov    %eax,0x18(%ebx)
mov    0x48(%esi),%eax
mov    %edx,0x24(%ebx)
mov    0x98(%esi),%edx
mov    %eax,0x1c(%ebx)
mov    0x8c(%esi),%eax
mov    %edx,0x2c(%ebx)
mov    %eax,0x20(%ebx)
mov    0x94(%esi),%eax
mov    %eax,0x28(%ebx)
mov    0x10(%esp),%eax
mov    %eax,0x34(%ebx)
mov    0x809e2c4,%eax
mov    %eax,0x44(%ebx)
mov    0x18(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x48(%ebx),%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     8056450 <fchmod@plt+0xb4b0>
mov    0x20(%esi),%edx
mov    %eax,(%esp)
add    $0x1,%edx
mov    %edx,0x4(%esp)
call   8081850 <argp_parse+0x9910>
mov    %eax,0x4c(%ebx)
mov    0x20(%esi),%eax
mov    %eax,0x50(%ebx)
mov    0x24(%esi),%eax
test   %eax,%eax
je     8056440 <fchmod@plt+0xb4a0>
mov    0x28(%esi),%edx
mov    %eax,(%esp)
add    $0x1,%edx
mov    %edx,0x4(%esp)
call   8081850 <argp_parse+0x9910>
mov    %eax,0x54(%ebx)
mov    0x28(%esi),%eax
mov    %eax,0x58(%ebx)
lea    0x5c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x60(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   805af60 <fchmod@plt+0xffc0>
lea    0x68(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    %edi,(%esp)
mov    %ebx,0x809da6c
call   8062c80 <fchmod@plt+0x17ce0>
test   %al,%al
jne    8056430 <fchmod@plt+0xb490>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8056250 <fchmod@plt+0xb2b0>
xchg   %ax,%ax
movl   $0x0,0x54(%ebx)
movl   $0x0,0x58(%ebx)
jmp    80563eb <fchmod@plt+0xb44b>
movl   $0x0,0x4c(%ebx)
movl   $0x0,0x50(%ebx)
jmp    80563c9 <fchmod@plt+0xb429>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %ebp,0x64(%ebx)
mov    %ecx,0x30(%ebx)
movb   $0x1,0x38(%ebx)
mov    %eax,0x34(%ebx)
mov    0x14(%esp),%eax
movb   $0x0,0x40(%ebx)
movl   $0x0,0x48(%ebx)
movl   $0x0,0x4c(%ebx)
mov    %eax,0x3c(%ebx)
mov    0x809e2c4,%eax
movl   $0x0,0x50(%ebx)
movl   $0x0,0x54(%ebx)
movl   $0x0,0x58(%ebx)
mov    %eax,0x44(%ebx)
movl   $0x0,0x60(%ebx)
movl   $0x0,0x5c(%ebx)
jmp    8056401 <fchmod@plt+0xb461>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edi,%ebx
sub    $0x8c,%esp
movzbl (%eax),%eax
mov    %edx,0x1c(%esp)
lea    0x1(%edi),%edx
mov    %edx,0x18(%esp)
test   %al,%al
jne    8056506 <fchmod@plt+0xb566>
jmp    80565b0 <fchmod@plt+0xb610>
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
je     80565b0 <fchmod@plt+0xb610>
cmp    $0x2f,%al
jne    80564f8 <fchmod@plt+0xb558>
cmp    %edi,%ebx
je     80564f8 <fchmod@plt+0xb558>
movzbl -0x1(%ebx),%eax
cmp    $0x2f,%al
je     80564f8 <fchmod@plt+0xb558>
cmp    $0x2e,%al
je     80565c0 <fchmod@plt+0xb620>
mov    0x809da74,%esi
movb   $0x0,(%ebx)
mov    0x809c3f8,%eax
mov    %edi,0x4(%esp)
not    %esi
and    $0x1ff,%esi
cmpb   $0x1,0x809da78
mov    %eax,(%esp)
sbb    %ebp,%ebp
and    $0xc0,%ebp
or     %esi,%ebp
mov    %ebp,0x8(%esp)
call   804a870 <mkdirat@plt>
test   %eax,%eax
je     80565f8 <fchmod@plt+0xb658>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
cmp    $0x11,%ebp
je     805659c <fchmod@plt+0xb5fc>
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8056640 <fchmod@plt+0xb6a0>
movb   $0x2f,(%ebx)
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
jne    8056506 <fchmod@plt+0xb566>
lea    0x0(%esi),%esi
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    0x18(%esp),%ebx
je     80564f8 <fchmod@plt+0xb558>
movzbl -0x2(%ebx),%eax
cmp    $0x2f,%al
je     80564f8 <fchmod@plt+0xb558>
cmp    $0x2e,%al
jne    805651e <fchmod@plt+0xb57e>
lea    0x2(%edi),%eax
cmp    %eax,%ebx
je     80564f8 <fchmod@plt+0xb558>
cmpb   $0x2f,-0x3(%ebx)
jne    805651e <fchmod@plt+0xb57e>
jmp    80564f8 <fchmod@plt+0xb558>
mov    0x809da70,%ecx
xor    %edx,%edx
mov    %edi,%eax
movl   $0x100,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1ff,(%esp)
not    %ecx
and    %ebp,%ecx
call   80562c0 <fchmod@plt+0xb320>
mov    %ebx,%eax
sub    %edi,%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
call   8061930 <fchmod@plt+0x16990>
mov    0x1c(%esp),%eax
movb   $0x1,(%eax)
jmp    805659c <fchmod@plt+0xb5fc>
xchg   %ax,%ax
mov    %ebp,(%esi)
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
call   806f560 <fchmod@plt+0x245c0>
mov    0x18(%esp),%eax
movb   $0x2f,(%ebx)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
sub    $0x10,%esp
test   %eax,%eax
js     805668e <fchmod@plt+0xb6ee>
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804afa0 <fchmod@plt>
mov    %eax,%ebp
xor    %eax,%eax
test   %ebp,%ebp
je     80566ab <fchmod@plt+0xb70b>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
jne    80566b8 <fchmod@plt+0xb718>
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804aa40 <fchmodat@plt>
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x26,%eax
je     805668e <fchmod@plt+0xb6ee>
add    $0x10,%esp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x8c,%esp
mov    0xa8(%esp),%eax
cmpb   $0x0,0x809e42c
mov    %ecx,0x1c(%esp)
mov    0xac(%esp),%edx
mov    %eax,0x14(%esp)
jne    80567b8 <fchmod@plt+0xb818>
test   %dl,%dl
jne    8056b45 <fchmod@plt+0xbba5>
cmpb   $0x0,0x809e2e1
jne    8056a20 <fchmod@plt+0xba80>
movl   $0x3ffffffe,0x24(%esp)
mov    0x94(%ebx),%eax
mov    0x98(%ebx),%edx
mov    %edi,0x8(%esp)
mov    %eax,0x28(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8079f50 <argp_parse+0x2010>
test   %eax,%eax
jne    8056ae0 <fchmod@plt+0xbb40>
cmpb   $0x0,0x809e2e1
jne    8056b68 <fchmod@plt+0xbbc8>
mov    0x28(%esp),%edx
mov    %edi,%eax
mov    0x2c(%esp),%ecx
call   8056090 <fchmod@plt+0xb0f0>
mov    0x809e548,%eax
test   %eax,%eax
jg     8056920 <fchmod@plt+0xb980>
cmpl   $0x0,0x809e454
movsbl 0x14(%esp),%esi
jle    8056912 <fchmod@plt+0xb972>
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%eax
mov    $0xfff,%edx
not    %eax
jmp    80567e1 <fchmod@plt+0xb841>
mov    0x809e548,%ebp
movsbl 0x14(%esp),%esi
test   %ebp,%ebp
jle    8056900 <fchmod@plt+0xb960>
mov    0xa4(%esp),%eax
test   %dl,%dl
not    %eax
je     8056920 <fchmod@plt+0xb980>
mov    $0x1ff,%edx
mov    0x809da70,%ebp
mov    0xa0(%esp),%ecx
not    %ebp
and    0x3c(%ebx),%ebp
xor    %ebp,%ecx
or     %eax,%ecx
test   %edx,%ecx
je     80568b8 <fchmod@plt+0xb918>
mov    0xa4(%esp),%eax
or     %edx,%eax
not    %eax
test   $0xfff,%eax
jne    80569d0 <fchmod@plt+0xba30>
mov    0xa0(%esp),%eax
mov    %edx,%ecx
and    %edx,%ebp
not    %ecx
mov    %ecx,0x18(%esp)
and    $0xfff,%eax
and    %eax,0x18(%esp)
or     %ebp,0x18(%esp)
mov    0x18(%esp),%ecx
cmp    %ecx,%eax
je     80568b8 <fchmod@plt+0xb918>
mov    0xb0(%esp),%eax
mov    %edi,%edx
xor    %ebp,%ebp
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   8056660 <fchmod@plt+0xb6c0>
test   %eax,%eax
je     805685d <fchmod@plt+0xb8bd>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebp
mov    0xb0(%esp),%eax
cmpb   $0x32,0x14(%esp)
setne  0x14(%esp)
test   %eax,%eax
je     805688b <fchmod@plt+0xb8eb>
cmpb   $0x0,0x14(%esp)
je     805688b <fchmod@plt+0xb8eb>
cmp    $0x5f,%ebp
je     8056ab0 <fchmod@plt+0xbb10>
cmp    $0x26,%ebp
je     8056ab0 <fchmod@plt+0xbb10>
test   %ebp,%ebp
lea    0x0(%esi),%esi
je     80568b8 <fchmod@plt+0xb918>
cmpb   $0x0,0x14(%esp)
je     8056a40 <fchmod@plt+0xbaa0>
call   804aaf0 <__errno_location@plt>
mov    %ebp,(%eax)
mov    0x18(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806f370 <fchmod@plt+0x243d0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
call   806ed50 <fchmod@plt+0x23db0>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   806e7c0 <fchmod@plt+0x23820>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   806ec90 <fchmod@plt+0x23cf0>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e454,%ecx
test   %ecx,%ecx
jle    8056912 <fchmod@plt+0xb972>
test   %dl,%dl
je     80567a8 <fchmod@plt+0xb808>
mov    0xa4(%esp),%eax
not    %eax
jmp    80567dc <fchmod@plt+0xb83c>
mov    0x1c(%esp),%eax
mov    0x44(%ebx),%esi
mov    0x48(%ebx),%ebp
test   %eax,%eax
js     805695a <fchmod@plt+0xb9ba>
mov    0x1c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a9b0 <fchown@plt>
test   %eax,%eax
je     8056a58 <fchmod@plt+0xbab8>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
jne    8056b58 <fchmod@plt+0xbbb8>
mov    0xb0(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804ad60 <fchownat@plt>
test   %eax,%eax
je     8056a58 <fchmod@plt+0xbab8>
cmpb   $0x32,0x14(%esp)
jne    80569b0 <fchmod@plt+0xba10>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edx
mov    0xa4(%esp),%eax
cmp    $0x5f,%edx
not    %eax
je     8056a8d <fchmod@plt+0xbaed>
cmp    $0x26,%edx
je     8056a8d <fchmod@plt+0xbaed>
nop
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   806f410 <fchmod@plt+0x24470>
mov    0xa4(%esp),%eax
not    %eax
jmp    8056a8d <fchmod@plt+0xbaed>
xchg   %ax,%ax
mov    0x1c(%esp),%ecx
mov    %edx,0x18(%esp)
test   %ecx,%ecx
js     8056b10 <fchmod@plt+0xbb70>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
mov    0x18(%esp),%edx
mov    0x30(%esp),%ecx
test   %eax,%eax
mov    %ecx,0xa0(%esp)
je     8056815 <fchmod@plt+0xb875>
mov    %edi,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
jmp    80568b8 <fchmod@plt+0xb918>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8c(%ebx),%eax
mov    0x90(%ebx),%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jmp    805671e <fchmod@plt+0xb77e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5f,%ebp
je     80568b8 <fchmod@plt+0xb918>
cmp    $0x26,%ebp
jne    805689d <fchmod@plt+0xb8fd>
jmp    80568b8 <fchmod@plt+0xb918>
nop
mov    0xa4(%esp),%eax
mov    0xa0(%esp),%edx
not    %eax
or     %eax,%edx
and    $0x49,%edx
je     8056a8d <fchmod@plt+0xbaed>
mov    0xa0(%esp),%eax
and    $0xc00,%eax
not    %eax
and    %eax,0xa4(%esp)
mov    0xa4(%esp),%eax
not    %eax
cmpl   $0x0,0x809e454
mov    $0xfff,%edx
movsbl 0x14(%esp),%esi
jg     80567e1 <fchmod@plt+0xb841>
jmp    80567dc <fchmod@plt+0xb83c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
mov    %edi,%edx
mov    0x1c(%esp),%eax
movl   $0x0,(%esp)
call   8056660 <fchmod@plt+0xb6c0>
test   %eax,%eax
je     80568b8 <fchmod@plt+0xb918>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebp
jmp    805688b <fchmod@plt+0xb8eb>
lea    0x0(%esi),%esi
cmpb   $0x32,0x14(%esp)
jne    8056b00 <fchmod@plt+0xbb60>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
je     8056782 <fchmod@plt+0xb7e2>
cmp    $0x26,%eax
je     8056782 <fchmod@plt+0xb7e2>
mov    %edi,(%esp)
call   806fbe0 <fchmod@plt+0x24c40>
jmp    8056782 <fchmod@plt+0xb7e2>
lea    0x0(%esi),%esi
mov    0xb0(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
mov    0x18(%esp),%edx
jmp    80569fc <fchmod@plt+0xba5c>
mov    0xa4(%esp),%eax
movsbl 0x14(%esp),%esi
not    %eax
jmp    80567dc <fchmod@plt+0xb83c>
cmp    $0x26,%eax
je     805695a <fchmod@plt+0xb9ba>
jmp    8056986 <fchmod@plt+0xb9e6>
xchg   %ax,%ax
mov    0x20(%esp),%edx
mov    %edi,%eax
mov    0x24(%esp),%ecx
call   8056090 <fchmod@plt+0xb0f0>
jmp    8056773 <fchmod@plt+0xb7d3>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x19c,%esp
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   804a950 <strlen@plt>
mov    0x809da6c,%ebx
test   %ebx,%ebx
mov    %eax,0x28(%esp)
je     8056e38 <fchmod@plt+0xbe98>
mov    0x34(%ebx),%eax
movzbl 0x40(%ebx),%esi
mov    0x30(%ebx),%ebp
mov    %eax,0x20(%esp)
mov    %edi,%eax
movzbl %al,%eax
mov    %eax,%ecx
mov    %eax,0x2c(%esp)
mov    %esi,%eax
movzbl %al,%eax
cmp    %eax,%ecx
jge    8056d38 <fchmod@plt+0xbd98>
jmp    8056e38 <fchmod@plt+0xbe98>
lea    0x0(%esi),%esi
cmp    $0x2f,%dl
lea    0x68(%ebx),%edi
je     8056e18 <fchmod@plt+0xbe78>
mov    0x24(%esp),%ecx
cmpb   $0x2f,-0x1(%ecx,%eax,1)
je     8056e18 <fchmod@plt+0xbe78>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ebx),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    %esi,%eax
test   %al,%al
jne    8056d60 <fchmod@plt+0xbdc0>
mov    0x14(%ebx),%eax
mov    $0xffffffff,%ecx
mov    0x24(%ebx),%edx
mov    %eax,0xd8(%esp)
mov    0x18(%ebx),%eax
mov    %eax,0xe0(%esp)
mov    0x1c(%ebx),%eax
mov    %eax,0xe4(%esp)
mov    0x20(%ebx),%eax
mov    %edx,0x12c(%esp)
mov    0x2c(%ebx),%edx
mov    %eax,0x128(%esp)
mov    0x28(%ebx),%eax
mov    %edx,0x134(%esp)
lea    0x9c(%esp),%edx
mov    %eax,0x130(%esp)
mov    0x48(%ebx),%eax
mov    %eax,0xb4(%esp)
mov    0x4c(%ebx),%eax
mov    %eax,0xb8(%esp)
mov    0x50(%ebx),%eax
mov    %eax,0xbc(%esp)
mov    0x54(%ebx),%eax
mov    %eax,0xc0(%esp)
mov    0x58(%ebx),%eax
mov    %eax,0xc4(%esp)
mov    0x60(%ebx),%eax
mov    %eax,0x164(%esp)
mov    0x5c(%ebx),%eax
mov    %eax,0x160(%esp)
mov    0x3c(%ebx),%eax
mov    %eax,0x10(%esp)
movzbl 0x38(%ebx),%eax
movl   $0x35,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%eax
mov    %ebp,(%esp)
call   80566d0 <fchmod@plt+0xb730>
mov    (%ebx),%eax
mov    %eax,0x809da6c
mov    0x5c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%ebx),%eax
mov    %eax,(%esp)
call   805ad70 <fchmod@plt+0xfdd0>
mov    0x48(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x4c(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x54(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x809da6c,%ebx
test   %ebx,%ebx
je     8056e38 <fchmod@plt+0xbe98>
mov    0x34(%ebx),%eax
mov    0x30(%ebx),%ebp
mov    %eax,0x20(%esp)
movzbl 0x40(%ebx),%eax
or     %eax,%esi
cmp    %eax,0x2c(%esp)
jl     8056e38 <fchmod@plt+0xbe98>
mov    0x64(%ebx),%eax
cmp    %eax,0x28(%esp)
jbe    8056d51 <fchmod@plt+0xbdb1>
mov    0x24(%esp),%ecx
movzbl (%ecx,%eax,1),%edx
test   %dl,%dl
jne    8056bd8 <fchmod@plt+0xbc38>
lea    0x68(%ebx),%edi
jmp    8056bf8 <fchmod@plt+0xbc58>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8056e48 <fchmod@plt+0xbea8>
mov    0x3c(%esp),%eax
mov    0x40(%esp),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    0x4c(%esp),%ebp
or     %eax,%edx
jne    8056dc2 <fchmod@plt+0xbe22>
mov    0x94(%esp),%eax
mov    0x98(%esp),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
je     8056e58 <fchmod@plt+0xbeb8>
mov    %edi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80874b0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    8056cce <fchmod@plt+0xbd2e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8056bf8 <fchmod@plt+0xbc58>
lea    0x0(%esi,%eiz,1),%esi
add    $0x19c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
jmp    8056cce <fchmod@plt+0xbd2e>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x20(%esp)
jmp    8056c0d <fchmod@plt+0xbc6d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18c,%esp
mov    0x809da68,%esi
lea    0x2c(%esp),%ebp
test   %esi,%esi
je     805701a <fchmod@plt+0xc07a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esi),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x40(%esi),%ebx
lea    0x60(%esi),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x1c(%esp)
test   %ebx,%ebx
jne    8056ec2 <fchmod@plt+0xbf22>
jmp    8056fe8 <fchmod@plt+0xc048>
xchg   %ax,%ax
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8056fc8 <fchmod@plt+0xc028>
mov    0x809c3f8,%eax
lea    0x4(%ebx),%edi
movl   $0x100,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8056eb8 <fchmod@plt+0xbf18>
mov    0x2c(%esp),%eax
mov    0x30(%esp),%edx
xor    0x8(%esi),%edx
xor    0x4(%esi),%eax
or     %eax,%edx
jne    8056eb8 <fchmod@plt+0xbf18>
mov    0x84(%esp),%eax
mov    0x88(%esp),%edx
xor    0x10(%esi),%edx
xor    0xc(%esi),%eax
or     %eax,%edx
jne    8056eb8 <fchmod@plt+0xbf18>
cmpl   $0xffffffff,0x14(%esi)
mov    0x18(%esi),%eax
jne    8056eb8 <fchmod@plt+0xbf18>
cmp    $0xffffffff,%eax
jne    8056eb8 <fchmod@plt+0xbf18>
mov    0x809c3f8,%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a470 <unlinkat@plt>
test   %eax,%eax
jne    8057061 <fchmod@plt+0xc0c1>
mov    0x18(%esp),%eax
test   %eax,%eax
je     8056f7c <fchmod@plt+0xbfdc>
mov    0x809c3f8,%eax
mov    0x18(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80827f0 <argp_parse+0xa8b0>
test   %eax,%eax
je     8056eb8 <fchmod@plt+0xbf18>
cmpb   $0x0,0x1c(%esi)
jne    805702f <fchmod@plt+0xc08f>
mov    0x809c3f8,%eax
mov    0x1c(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80827f0 <argp_parse+0xa8b0>
test   %eax,%eax
je     8056eb8 <fchmod@plt+0xbf18>
mov    0x1c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806f4e0 <fchmod@plt+0x24540>
jmp    8056eb8 <fchmod@plt+0xbf18>
mov    0x40(%esi),%eax
test   %eax,%eax
jne    8056fda <fchmod@plt+0xc03a>
nop
jmp    8056fe8 <fchmod@plt+0xc048>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    (%eax),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
jne    8056fd8 <fchmod@plt+0xc038>
mov    0x58(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esi),%eax
mov    %eax,(%esp)
call   805ad70 <fchmod@plt+0xfdd0>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
je     805701a <fchmod@plt+0xc07a>
mov    %ebx,%esi
jmp    8056e90 <fchmod@plt+0xbef0>
movl   $0x0,0x809da68
00
add    $0x18c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x809c3f8,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804ae40 <symlinkat@plt>
test   %eax,%eax
je     805706e <fchmod@plt+0xc0ce>
mov    0x1c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806faa0 <fchmod@plt+0x24b00>
jmp    8056eb8 <fchmod@plt+0xbf18>
mov    %edi,(%esp)
call   806fbc0 <fchmod@plt+0x24c20>
jmp    8056eb8 <fchmod@plt+0xbf18>
mov    0x20(%esi),%eax
mov    $0xffffffff,%ecx
mov    0x30(%esi),%edx
mov    %eax,0xc8(%esp)
mov    0x24(%esi),%eax
mov    %eax,0xd0(%esp)
mov    0x28(%esi),%eax
mov    %eax,0xd4(%esp)
mov    0x2c(%esi),%eax
mov    %edx,0x11c(%esp)
mov    0x38(%esi),%edx
mov    %eax,0x118(%esp)
mov    0x34(%esi),%eax
mov    %edx,0x124(%esp)
lea    0x8c(%esp),%edx
mov    %eax,0x120(%esp)
mov    0x44(%esi),%eax
mov    %eax,0xa4(%esp)
mov    0x48(%esi),%eax
mov    %eax,0xa8(%esp)
mov    0x4c(%esi),%eax
mov    %eax,0xac(%esp)
mov    0x50(%esi),%eax
mov    %eax,0xb0(%esp)
mov    0x54(%esi),%eax
mov    %eax,0xb4(%esp)
mov    0x5c(%esi),%eax
mov    %eax,0x154(%esp)
mov    0x58(%esi),%eax
movl   $0x100,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x32,0x8(%esp)
mov    %eax,0x150(%esp)
mov    %edi,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80566d0 <fchmod@plt+0xb730>
mov    %edi,0x18(%esp)
jmp    8056eb8 <fchmod@plt+0xbf18>
lea    0x0(%esi),%esi
sub    $0xc,%esp
xor    %edx,%edx
mov    $0x808d3ee,%eax
call   8056b80 <fchmod@plt+0xbbe0>
call   8056e70 <fchmod@plt+0xbed0>
mov    $0x1,%edx
mov    $0x808d3ee,%eax
add    $0xc,%esp
jmp    8056b80 <fchmod@plt+0xbbe0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x74,%esp
test   %edx,%edx
je     80571c0 <fchmod@plt+0xc220>
mov    0x10(%edx),%ecx
xor    %eax,%eax
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     80571b6 <fchmod@plt+0xc216>
mov    0x4c(%edx),%eax
mov    0x48(%edx),%edx
mov    %eax,0xc(%esp)
mov    0x809e3b4,%eax
mov    %edx,0x8(%esp)
mov    0x809e3b8,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   806bff0 <fchmod@plt+0x21050>
test   %eax,%eax
setle  %al
add    $0x74,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%esp),%esi
mov    %eax,%ebx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
je     80571f8 <fchmod@plt+0xc258>
call   804aaf0 <__errno_location@plt>
mov    %eax,%edx
xor    %eax,%eax
cmpl   $0x2,(%edx)
je     80571b6 <fchmod@plt+0xc216>
mov    %ebx,(%esp)
call   806fb60 <fchmod@plt+0x24bc0>
mov    $0x1,%eax
jmp    80571b6 <fchmod@plt+0xc216>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
jmp    8057179 <fchmod@plt+0xc1d9>
nop
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %edx,0x1c(%esp)
call   804aaf0 <__errno_location@plt>
cmpb   $0x0,0x0(%ebp)
mov    %eax,%esi
mov    (%eax),%ebx
jne    8057290 <fchmod@plt+0xc2f0>
cmp    $0x1f,%ebx
je     8057262 <fchmod@plt+0xc2c2>
jg     8057258 <fchmod@plt+0xc2b8>
cmp    $0x2,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
je     80572c0 <fchmod@plt+0xc320>
xor    %edx,%edx
cmp    $0x11,%ebx
jne    8057278 <fchmod@plt+0xc2d8>
cmpl   $0x6,0x809e4b4
ja     80572c0 <fchmod@plt+0xc320>
mov    0x809e4b4,%eax
jmp    *0x8087660(,%eax,4)
lea    0x0(%esi),%esi
cmp    $0x28,%ebx
je     8057262 <fchmod@plt+0xc2c2>
cmp    $0x5f,%ebx
jne    8057278 <fchmod@plt+0xc2d8>
cmpb   $0x0,0x1c(%esp)
je     8057278 <fchmod@plt+0xc2d8>
cmpl   $0x2,0x809e4b4
je     8057330 <fchmod@plt+0xc390>
xchg   %ax,%ax
mov    %ebx,(%esi)
xor    %ebx,%ebx
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,%eax
call   8057170 <fchmod@plt+0xc1d0>
test   %al,%al
jne    80572c0 <fchmod@plt+0xc320>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8063af0 <fchmod@plt+0x18b50>
test   %eax,%eax
jg     80572d3 <fchmod@plt+0xc333>
nop
mov    %ebp,%edx
mov    %edi,%eax
call   80564d0 <fchmod@plt+0xb530>
test   %eax,%eax
jne    8057278 <fchmod@plt+0xc2d8>
cmpb   $0x0,0x0(%ebp)
je     8057278 <fchmod@plt+0xc2d8>
mov    $0x1,%ebx
jmp    805727c <fchmod@plt+0xc2dc>
lea    0x0(%esi),%esi
testb  $0x10,0x809d642
mov    $0x2,%ebx
je     805727c <fchmod@plt+0xc2dc>
movl   $0x5,0x8(%esp)
movl   $0x8087608,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    805727c <fchmod@plt+0xc2dc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e438
jne    8057278 <fchmod@plt+0xc2d8>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     80572ab <fchmod@plt+0xc30b>
lea    0x20(%esp),%edx
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   8063110 <fchmod@plt+0x18170>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057278 <fchmod@plt+0xc2d8>
jmp    805723d <fchmod@plt+0xc29d>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
mov    $0xffffffc0,%ebx
sub    $0x30,%esp
mov    0x809e548,%eax
mov    0x40(%esp),%edi
movb   $0x0,0x2f(%esp)
test   %eax,%eax
mov    $0xffffffff,%eax
cmovle %eax,%ebx
and    0x809e35c,%ebx
and    $0x1ff,%ebx
mov    0x809c3f8,%eax
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a3c0 <mkfifoat@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057408 <fchmod@plt+0xc468>
xor    %edx,%edx
mov    %edi,%eax
lea    0x2f(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     80573f0 <fchmod@plt+0xc450>
cmp    $0x2,%eax
jne    80573af <fchmod@plt+0xc40f>
xor    %esi,%esi
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%esi
call   806f580 <fchmod@plt+0x245e0>
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movsbl 0x44(%esp),%eax
mov    $0xffffffff,%ecx
mov    $0x809e320,%edx
movl   $0x100,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1ff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809da70,%eax
not    %eax
and    %ebx,%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   80566d0 <fchmod@plt+0xb730>
jmp    80573e2 <fchmod@plt+0xc442>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0xffffffc0,%ebx
sub    $0x3c,%esp
mov    0x809e548,%eax
mov    0x50(%esp),%esi
lea    0x28(%esp),%edi
movb   $0x0,0x27(%esp)
test   %eax,%eax
mov    $0xffffffff,%eax
cmovle %eax,%ebx
and    0x809e35c,%ebx
and    $0x61ff,%ebx
mov    0x809e36c,%eax
mov    0x809e370,%edx
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x28(%esp)
mov    0x809c3f8,%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   804abf0 <__xmknodat@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80574f8 <fchmod@plt+0xc558>
xor    %edx,%edx
mov    %esi,%eax
lea    0x27(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     80574e0 <fchmod@plt+0xc540>
cmp    $0x2,%eax
jne    8057484 <fchmod@plt+0xc4e4>
xor    %ebp,%ebp
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
mov    $0xffffffff,%ebp
call   806f5a0 <fchmod@plt+0x24600>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movsbl 0x54(%esp),%eax
mov    $0xffffffff,%ecx
mov    $0x809e320,%edx
movl   $0x100,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1ff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809da70,%eax
not    %eax
and    %ebx,%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80566d0 <fchmod@plt+0xb730>
jmp    80574d6 <fchmod@plt+0xc536>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x7c,%esp
mov    0x809c3f8,%eax
movl   $0x0,0xc(%esp)
movl   $0xc1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a9a0 <openat64@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    80575b0 <fchmod@plt+0xc610>
xor    %edx,%edx
mov    %edi,%ecx
mov    %ebx,%eax
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     8057598 <fchmod@plt+0xc5f8>
cmp    $0x2,%eax
jne    805754d <fchmod@plt+0xc5ad>
xor    %edi,%edi
add    $0x7c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%edi
call   806f5c0 <fchmod@plt+0x24620>
add    $0x7c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    8057784 <fchmod@plt+0xc7e4>
mov    %ebp,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
mov    %eax,%edi
jne    8057772 <fchmod@plt+0xc7d2>
mov    0x809e32c,%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    $0x61,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x14(%esp),%edx
mov    %eax,%ebp
mov    0x809da68,%eax
mov    %edx,0x8(%ebp)
mov    0x6c(%esp),%edx
mov    %ebp,0x809da68
movl   $0xffffffff,0x14(%ebp)
mov    %eax,0x0(%ebp)
mov    0x10(%esp),%eax
mov    %edx,0x10(%ebp)
movl   $0xffffffff,0x18(%ebp)
mov    %eax,0x4(%ebp)
mov    0x68(%esp),%eax
mov    %eax,0xc(%ebp)
mov    %esi,%eax
test   %al,%al
mov    %al,0x1c(%ebp)
je     8057677 <fchmod@plt+0xc6d7>
mov    0x809e35c,%eax
mov    0x809e3b0,%edx
mov    %eax,0x20(%ebp)
mov    0x809e364,%eax
mov    %edx,0x30(%ebp)
mov    0x809e3b8,%edx
mov    %eax,0x24(%ebp)
mov    0x809e368,%eax
mov    %edx,0x38(%ebp)
mov    %eax,0x28(%ebp)
mov    0x809e3ac,%eax
mov    %eax,0x2c(%ebp)
mov    0x809e3b4,%eax
mov    %eax,0x34(%ebp)
mov    0x809e2c4,%eax
mov    %eax,0x3c(%ebp)
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
add    $0x5,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x40(%ebp)
add    $0x4,%eax
movl   $0x0,-0x4(%eax)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x809e338,%eax
movl   $0x0,0x44(%ebp)
mov    %eax,0x4(%esp)
lea    0x44(%ebp),%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
lea    0x58(%ebp),%eax
movl   $0x0,0x48(%ebp)
movl   $0x0,0x4c(%ebp)
movl   $0x0,0x50(%ebp)
movl   $0x0,0x54(%ebp)
mov    %eax,0x8(%esp)
lea    0x5c(%ebp),%eax
add    $0x60,%ebp
mov    %eax,0x4(%esp)
movl   $0x809e320,(%esp)
call   805af60 <fchmod@plt+0xffc0>
mov    0x809e32c,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a780 <strcpy@plt>
mov    0x809da6c,%esi
test   %esi,%esi
je     805758a <fchmod@plt+0xc5ea>
cmpb   $0x0,0x40(%esi)
jne    805758a <fchmod@plt+0xc5ea>
mov    0x64(%esi),%ebp
lea    0x68(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %ebp,0x8(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    805758a <fchmod@plt+0xc5ea>
xor    %edi,%edi
cmpb   $0x2f,(%ebx,%ebp,1)
jne    805758a <fchmod@plt+0xc5ea>
mov    %ebx,(%esp)
call   8079350 <argp_parse+0x1410>
lea    0x1(%ebx,%ebp,1),%edx
cmp    %edx,%eax
jne    805758a <fchmod@plt+0xc5ea>
mov    %esi,%eax
call   8056250 <fchmod@plt+0xb2b0>
jmp    805758a <fchmod@plt+0xc5ea>
mov    %ebx,(%esp)
mov    $0xffffffff,%edi
call   806f480 <fchmod@plt+0x244e0>
jmp    805758a <fchmod@plt+0xc5ea>
mov    %ebx,(%esp)
mov    $0xffffffff,%edi
call   806fb40 <fchmod@plt+0x24ba0>
mov    %ebp,(%esp)
call   804aef0 <close@plt>
jmp    805758a <fchmod@plt+0xc5ea>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x809e32c,%edi
cmpb   $0x0,0x809e534
mov    0x110(%esp),%ebx
movb   $0x0,0x2f(%esp)
je     80579f8 <fchmod@plt+0xca58>
call   804aaf0 <__errno_location@plt>
mov    %eax,%ebp
jmp    80577f1 <fchmod@plt+0xc851>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    %ebx,%eax
mov    %esi,0x0(%ebp)
lea    0x2f(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
cmp    $0x1,%eax
jne    80579c0 <fchmod@plt+0xca20>
mov    0x809c3f8,%edx
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edx,(%esp)
call   80827f0 <argp_parse+0xa8b0>
mov    0x0(%ebp),%esi
test   %eax,%eax
je     80578f0 <fchmod@plt+0xc950>
cmp    $0x11,%esi
jne    8057837 <fchmod@plt+0xc897>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     80578e0 <fchmod@plt+0xc940>
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x100,0x10(%esp)
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    80577d8 <fchmod@plt+0xc838>
lea    0x90(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x100,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    80577d8 <fchmod@plt+0xc838>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
xor    0x94(%esp),%edx
xor    0x90(%esp),%eax
or     %eax,%edx
jne    80577d8 <fchmod@plt+0xc838>
mov    0x88(%esp),%eax
mov    0x8c(%esp),%edx
xor    0xec(%esp),%edx
xor    0xe8(%esp),%eax
or     %eax,%edx
jne    80577d8 <fchmod@plt+0xc838>
xchg   %ax,%ax
xor    %eax,%eax
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x809da68,%esi
test   %esi,%esi
je     80578e0 <fchmod@plt+0xc940>
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x100,0x10(%esp)
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    80578e0 <fchmod@plt+0xc940>
mov    0x88(%esp),%ecx
mov    0x809e2c4,%eax
mov    0x30(%esp),%ebp
mov    0x34(%esp),%edi
mov    %ecx,0x18(%esp)
mov    0x8c(%esp),%ecx
mov    %ecx,0x1c(%esp)
jmp    8057956 <fchmod@plt+0xc9b6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%esi
test   %esi,%esi
je     80578e0 <fchmod@plt+0xc940>
cmp    %eax,0x3c(%esi)
jne    8057950 <fchmod@plt+0xc9b0>
mov    0x8(%esi),%ecx
mov    0x4(%esi),%edx
xor    %edi,%ecx
xor    %ebp,%edx
or     %edx,%ecx
jne    8057950 <fchmod@plt+0xc9b0>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    8057950 <fchmod@plt+0xc9b0>
cmpl   $0xffffffff,0x14(%esi)
mov    0x18(%esi),%edx
jne    8057950 <fchmod@plt+0xc9b0>
cmp    $0xffffffff,%edx
jne    8057950 <fchmod@plt+0xc9b0>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
add    $0x5,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,0x4(%esp)
mov    %eax,%edi
lea    0x4(%eax),%eax
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x40(%esi),%eax
mov    %eax,(%edi)
mov    %edi,0x40(%esi)
jmp    80578e0 <fchmod@plt+0xc940>
lea    0x0(%esi),%esi
cmp    $0x2,%eax
je     80578e0 <fchmod@plt+0xc940>
cmpb   $0x0,0x809e2e1
je     80579dc <fchmod@plt+0xca3c>
cmpl   $0x11,0x0(%ebp)
je     80578e0 <fchmod@plt+0xc940>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   806f4e0 <fchmod@plt+0x24540>
add    $0xfc,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   8065b60 <fchmod@plt+0x1abc0>
test   %al,%al
je     80577c9 <fchmod@plt+0xc829>
lea    0x2f(%esp),%ecx
xor    %edx,%edx
mov    %ebx,%eax
call   8057540 <fchmod@plt+0xc5a0>
jmp    80578e2 <fchmod@plt+0xc942>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
cmpb   $0x0,0x809e534
mov    0x40(%esp),%esi
movb   $0x0,0x2f(%esp)
jne    8057a50 <fchmod@plt+0xcab0>
mov    0x809e32c,%eax
cmpb   $0x2f,(%eax)
je     8057a90 <fchmod@plt+0xcaf0>
mov    %eax,(%esp)
call   8065b60 <fchmod@plt+0x1abc0>
test   %al,%al
jne    8057a90 <fchmod@plt+0xcaf0>
lea    0x0(%esi),%esi
mov    0x809c3f8,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x809e32c,%eax
mov    %eax,(%esp)
call   804ae40 <symlinkat@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8057ad0 <fchmod@plt+0xcb30>
xor    %edx,%edx
mov    %esi,%eax
lea    0x2f(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     8057ab0 <fchmod@plt+0xcb10>
cmp    $0x2,%eax
jne    8057a50 <fchmod@plt+0xcab0>
xor    %ebx,%ebx
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x2f(%esp),%ecx
mov    %esi,%eax
mov    $0x1,%edx
call   8057540 <fchmod@plt+0xc5a0>
add    $0x34,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x809e32c,%eax
mov    $0xffffffff,%ebx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806faa0 <fchmod@plt+0x24b00>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movl   $0x100,0x10(%esp)
mov    $0xffffffff,%ecx
mov    $0x809e320,%edx
movl   $0x0,0xc(%esp)
mov    %esi,%eax
movl   $0x32,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80566d0 <fchmod@plt+0xb730>
jmp    8057a88 <fchmod@plt+0xcae8>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
cmpb   $0x0,0x809e301
mov    0x110(%esp),%esi
movb   $0x0,0x2f(%esp)
je     8057b40 <fchmod@plt+0xcba0>
mov    0x809e4ec,%eax
or     0x809e4e8,%eax
je     8057d50 <fchmod@plt+0xcdb0>
cmpb   $0x0,0x809e2e1
jne    8057d10 <fchmod@plt+0xcd70>
cmpl   $0x44,0x114(%esp)
je     8057da8 <fchmod@plt+0xce08>
mov    0x809e548,%ebx
mov    $0x1c0,%eax
mov    0x809e35c,%edx
test   %ebx,%ebx
jle    8057d20 <fchmod@plt+0xcd80>
and    %edx,%eax
cmpb   $0x1,0x809da78
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
sbb    %ebx,%ebx
and    $0xc0,%ebx
or     %eax,%ebx
mov    0x809c3f8,%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a870 <mkdirat@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8057e28 <fchmod@plt+0xce88>
call   804aaf0 <__errno_location@plt>
cmpl   $0x11,(%eax)
mov    %eax,%edi
jne    8057c14 <fchmod@plt+0xcc74>
cmpb   $0x0,0x2f(%esp)
je     8057c88 <fchmod@plt+0xcce8>
cmpb   $0x0,0x809e45c
jne    8057c95 <fchmod@plt+0xccf5>
lea    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
jne    8057c0e <fchmod@plt+0xcc6e>
mov    0x40(%esp),%eax
movl   $0xffffffff,0x1c(%esp)
mov    %eax,0x18(%esp)
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8057e4b <fchmod@plt+0xceab>
movl   $0x11,(%edi)
xor    %edx,%edx
mov    %esi,%eax
lea    0x2f(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     8057ce8 <fchmod@plt+0xcd48>
cmp    $0x1,%eax
je     8057b97 <fchmod@plt+0xcbf7>
testl  $0xfffffffd,0x809e4b4
ff
jne    8057c78 <fchmod@plt+0xccd8>
xor    %eax,%eax
mov    %eax,0x8(%esp)
mov    0x809e35c,%eax
mov    $0x809e320,%edx
mov    0x18(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80562c0 <fchmod@plt+0xb320>
add    $0xfc,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e45c
je     8057d38 <fchmod@plt+0xcd98>
lea    0x90(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x100,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8057cdc <fchmod@plt+0xcd3c>
mov    0xa0(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8057db8 <fchmod@plt+0xce18>
movl   $0x11,(%edi)
jmp    8057bda <fchmod@plt+0xcc3a>
nop
cmpl   $0x11,(%edi)
je     8057c32 <fchmod@plt+0xcc92>
mov    %esi,(%esp)
call   806f560 <fchmod@plt+0x245c0>
add    $0xfc,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   805eb40 <fchmod@plt+0x13ba0>
jmp    8057b5b <fchmod@plt+0xcbbb>
lea    0x0(%esi),%esi
mov    0x809e454,%ecx
test   %ecx,%ecx
mov    $0x1ff,%ecx
cmovle %ecx,%eax
jmp    8057b74 <fchmod@plt+0xcbd4>
lea    0x0(%esi),%esi
testl  $0xfffffffd,0x809e4b4
ff
je     8057bda <fchmod@plt+0xcc3a>
jmp    8057c14 <fchmod@plt+0xcc74>
lea    0x0(%esi),%esi
mov    0x809c3f8,%eax
lea    0x90(%esp),%edi
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x80894f0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8057e10 <fchmod@plt+0xce70>
mov    0x90(%esp),%eax
mov    0x94(%esp),%edx
mov    %eax,0x809e4e8
mov    %edx,0x809e4ec
jmp    8057b40 <fchmod@plt+0xcba0>
xchg   %ax,%ax
call   8062100 <fchmod@plt+0x17160>
jmp    8057b5b <fchmod@plt+0xcbbb>
lea    0x0(%esi),%esi
lea    0x90(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
movl   $0x0,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8057cdc <fchmod@plt+0xcd3c>
mov    0xa0(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8057cdc <fchmod@plt+0xcd3c>
movl   $0x11,(%edi)
xor    %eax,%eax
jmp    8057c7a <fchmod@plt+0xccda>
movl   $0x80894f0,(%esp)
call   8063530 <fchmod@plt+0x18590>
jmp    8057b40 <fchmod@plt+0xcba0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809da70,%eax
movl   $0x1ff,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    $0x100,%eax
notl   0x18(%esp)
and    %ebx,0x18(%esp)
jmp    8057c40 <fchmod@plt+0xcca0>
cmpb   $0x0,0x2f(%esp)
je     8057c32 <fchmod@plt+0xcc92>
mov    0x809da6c,%ebx
test   %ebx,%ebx
je     8057f6a <fchmod@plt+0xcfca>
lea    0x90(%esp),%edi
jmp    8057e7a <fchmod@plt+0xceda>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8057f6a <fchmod@plt+0xcfca>
mov    0x3c(%ebx),%eax
lea    0x68(%ebx),%ebp
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    8057f5b <fchmod@plt+0xcfbb>
mov    0x90(%esp),%eax
mov    0x94(%esp),%edx
xor    0x34(%esp),%edx
xor    0x30(%esp),%eax
or     %eax,%edx
jne    8057e70 <fchmod@plt+0xced0>
mov    0xe8(%esp),%eax
mov    0xec(%esp),%edx
xor    0x8c(%esp),%edx
xor    0x88(%esp),%eax
or     %eax,%edx
jne    8057e70 <fchmod@plt+0xced0>
mov    0x809e34c,%eax
mov    0x809e350,%edx
mov    %eax,0x4(%ebx)
mov    0x809e3a4,%eax
mov    %edx,0x8(%ebx)
mov    0x809e3a8,%edx
mov    %eax,0xc(%ebx)
mov    0x809e35c,%eax
mov    %edx,0x10(%ebx)
mov    0x809e3b0,%edx
mov    %eax,0x14(%ebx)
mov    0x809e364,%eax
mov    %eax,0x18(%ebx)
mov    0x809e368,%eax
mov    %eax,0x1c(%ebx)
mov    0x809e3ac,%eax
mov    %edx,0x24(%ebx)
mov    0x809e3b8,%edx
mov    %eax,0x20(%ebx)
mov    0x809e3b4,%eax
mov    %edx,0x2c(%ebx)
mov    %eax,0x28(%ebx)
mov    0xa0(%esp),%eax
movl   $0xffffffff,0x34(%ebx)
movb   $0x0,0x38(%ebx)
mov    %eax,0x30(%ebx)
xor    %eax,%eax
jmp    8057c7a <fchmod@plt+0xccda>
mov    %ebp,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
xor    %eax,%eax
jmp    8057c7a <fchmod@plt+0xccda>
mov    %esi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80874ec,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
jmp    8057c7a <fchmod@plt+0xccda>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0x809e35c,%esi
mov    0x809e548,%edi
movb   $0x0,0x37(%esp)
mov    %esi,%eax
and    $0x1c0,%esi
and    $0x1ff,%eax
test   %edi,%edi
cmovle %eax,%esi
cmpb   $0x0,0x809e45d
jne    8058188 <fchmod@plt+0xd1e8>
mov    0x809e458,%ebx
test   %ebx,%ebx
je     80582b0 <fchmod@plt+0xd310>
mov    0xc0(%esp),%eax
movl   $0x809e320,0x8(%esp)
movl   $0x66,0x4(%esp)
mov    %eax,(%esp)
call   8069020 <fchmod@plt+0x1e080>
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
test   %eax,%eax
mov    %eax,%ebx
js     80584dd <fchmod@plt+0xd53d>
movl   $0x809e320,(%esp)
call   804c750 <fchmod@plt+0x17b0>
cmpb   $0x0,0x809e3cc
jne    80581a8 <fchmod@plt+0xd208>
mov    0x809e378,%edx
mov    0x809e37c,%eax
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
jmp    8058108 <fchmod@plt+0xd168>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%edi
je     80581d0 <fchmod@plt+0xd230>
mov    %eax,(%esp)
call   804cd40 <fchmod@plt+0x1da0>
xor    %ecx,%ecx
cmp    0x44(%esp),%ecx
mov    %eax,%esi
mov    %eax,%edx
mov    0x40(%esp),%eax
jl     80580b7 <fchmod@plt+0xd117>
jg     80580b1 <fchmod@plt+0xd111>
cmp    %eax,%esi
jbe    80580b7 <fchmod@plt+0xd117>
mov    %eax,%esi
mov    %eax,%edx
xor    %ecx,%ecx
mov    %edx,0x20(%esp)
mov    %ecx,0x24(%esp)
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   80631e0 <fchmod@plt+0x18240>
mov    0x20(%esp),%edx
sub    %edx,0x40(%esp)
mov    0x24(%esp),%ecx
sbb    %ecx,0x44(%esp)
mov    %eax,%ebp
lea    -0x1(%edi,%esi,1),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    %esi,%ebp
jne    8058220 <fchmod@plt+0xd280>
mov    0x40(%esp),%edx
mov    0x44(%esp),%eax
cmp    $0x0,%eax
jg     8058078 <fchmod@plt+0xd0d8>
jl     805811c <fchmod@plt+0xd17c>
cmp    $0x0,%edx
ja     8058078 <fchmod@plt+0xd0d8>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8061a50 <fchmod@plt+0x16ab0>
call   804c780 <fchmod@plt+0x17e0>
cmpb   $0x0,0x809e45d
jne    8058178 <fchmod@plt+0xd1d8>
mov    0x809e458,%ecx
test   %ecx,%ecx
je     8058240 <fchmod@plt+0xd2a0>
mov    %ebx,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
js     8058290 <fchmod@plt+0xd2f0>
mov    0x809e458,%edx
test   %edx,%edx
je     805816b <fchmod@plt+0xd1cb>
mov    %eax,0x20(%esp)
call   8069330 <fchmod@plt+0x1e390>
mov    0x20(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x2c(%esp)
mov    $0x1,%ebx
movl   $0x0,0x28(%esp)
jmp    8058041 <fchmod@plt+0xd0a1>
lea    0x0(%esi),%esi
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x809e320,0x4(%esp)
mov    %ebx,(%esp)
call   8067d50 <fchmod@plt+0x1cdb0>
mov    0x40(%esp),%edx
mov    0x44(%esp),%eax
jmp    805811c <fchmod@plt+0xd17c>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x40(%esp),%edx
movl   $0x2,0x809e084
00
mov    0x44(%esp),%eax
jmp    805811c <fchmod@plt+0xd17c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e458,%edi
test   %edi,%edi
je     80584e9 <fchmod@plt+0xd549>
mov    0x40(%esp),%edx
mov    0x44(%esp),%eax
jmp    805811c <fchmod@plt+0xd17c>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
mov    $0x100,%edx
cmpl   $0x2,0x809e4b4
mov    %ebx,%ecx
movl   $0x0,0xc(%esp)
cmovne %edx,%eax
mov    $0x809e320,%edx
mov    %eax,0x10(%esp)
movsbl 0xc4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0xc0(%esp),%eax
call   80566d0 <fchmod@plt+0xb730>
jmp    8058144 <fchmod@plt+0xd1a4>
mov    %eax,0x20(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
mov    0x20(%esp),%eax
jmp    8058154 <fchmod@plt+0xd1b4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e474,%ecx
movb   $0x0,0x40(%esp)
test   %ecx,%ecx
jle    8058364 <fchmod@plt+0xd3c4>
mov    0x809e3e4,%edx
test   %edx,%edx
je     8058364 <fchmod@plt+0xd3c4>
mov    0x809da70,%ebx
lea    0x38(%esp),%edi
mov    0xc0(%esp),%ebp
not    %ebx
and    %eax,%ebx
jmp    80582fd <fchmod@plt+0xd35d>
xor    %edx,%edx
mov    %ebp,%eax
lea    0x40(%esp),%ecx
call   8057200 <fchmod@plt+0xc260>
test   %eax,%eax
je     8058546 <fchmod@plt+0xd5a6>
mov    0x809c3f8,%eax
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
call   804abf0 <__xmknodat@plt>
test   %eax,%eax
jne    80582e8 <fchmod@plt+0xd348>
movsbl 0xc4(%esp),%eax
mov    $0x1,%edi
movl   $0x0,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
call   806ed50 <fchmod@plt+0x23db0>
jmp    8058366 <fchmod@plt+0xd3c6>
xor    %edi,%edi
lea    0x40(%esp),%ebp
cmpl   $0x2,0x809e4b4
mov    $0x809c1,%ebx
sete   %dl
test   %dl,%dl
je     8058392 <fchmod@plt+0xd3f2>
cmpb   $0x1,0x809e438
sbb    %ebx,%ebx
and    $0x20000,%ebx
add    $0x80b41,%ebx
mov    %ebx,%eax
and    $0x7f,%al
test   %edi,%edi
cmovne %eax,%ebx
mov    0x809c3f8,%eax
cmpl   $0x37,0xc4(%esp)
je     8058470 <fchmod@plt+0xd4d0>
mov    0xc0(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x20(%esp)
call   804a9a0 <openat64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8058420 <fchmod@plt+0xd480>
mov    0x20(%esp),%edx
test   %dl,%dl
jne    8058498 <fchmod@plt+0xd4f8>
mov    0x809da70,%eax
movl   $0x1ff,0x2c(%esp)
mov    %eax,0x28(%esp)
notl   0x28(%esp)
and    %esi,0x28(%esp)
jmp    8058041 <fchmod@plt+0xd0a1>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ecx
mov    %ebx,(%esp)
mov    %eax,0x28(%esp)
mov    %ecx,0x20(%esp)
call   804aef0 <close@plt>
mov    0x20(%esp),%ecx
mov    0x28(%esp),%edx
mov    %ecx,(%edx)
xchg   %ax,%ax
mov    0xc0(%esp),%eax
lea    0x37(%esp),%ecx
mov    $0x1,%edx
call   8057200 <fchmod@plt+0xc260>
cmp    $0x1,%eax
je     805836a <fchmod@plt+0xd3ca>
mov    %eax,0x20(%esp)
call   8062100 <fchmod@plt+0x17160>
mov    0x20(%esp),%eax
cmp    $0x2,%eax
je     8058178 <fchmod@plt+0xd1d8>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
mov    $0x1,%eax
jmp    805816b <fchmod@plt+0xd1cb>
lea    0x0(%esi),%esi
mov    0x809da64,%eax
test   %eax,%eax
jne    805848c <fchmod@plt+0xd4ec>
testb  $0x8,0x809d640
movl   $0x1,0x809da64
00
jne    8058505 <fchmod@plt+0xd565>
mov    0x809c3f8,%eax
jmp    80583ae <fchmod@plt+0xd40e>
xchg   %ax,%ax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    80583fd <fchmod@plt+0xd45d>
mov    0x50(%esp),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0x8000,%edx
jne    805857b <fchmod@plt+0xd5db>
mov    %eax,0x28(%esp)
movl   $0xffffffff,0x2c(%esp)
jmp    8058041 <fchmod@plt+0xd0a1>
call   8062100 <fchmod@plt+0x17160>
xor    %eax,%eax
jmp    805816b <fchmod@plt+0xd1cb>
mov    0xc0(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   806fc40 <fchmod@plt+0x24ca0>
jmp    805822e <fchmod@plt+0xd28e>
movl   $0x5,0x8(%esp)
movl   $0x8087520,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x20(%esp),%edx
jmp    805848c <fchmod@plt+0xd4ec>
movsbl 0xc4(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
call   806ed50 <fchmod@plt+0x23db0>
call   8062100 <fchmod@plt+0x17160>
jmp    8058454 <fchmod@plt+0xd4b4>
mov    %ebx,(%esp)
xchg   %ax,%ax
call   804aef0 <close@plt>
call   804aaf0 <__errno_location@plt>
movl   $0x11,(%eax)
jmp    8058420 <fchmod@plt+0xd480>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804a650 <geteuid@plt>
movl   $0x0,(%esp)
test   %eax,%eax
sete   %al
mov    %al,0x809da78
movzbl %al,%eax
add    %eax,0x809e454
add    %eax,0x809e548
call   804ae70 <umask@plt>
mov    %eax,%ebx
mov    %eax,0x809da74
mov    0x809e454,%eax
test   %eax,%eax
jle    80585f0 <fchmod@plt+0xd650>
movl   $0x0,0x809da70
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804ae70 <umask@plt>
mov    %ebx,0x809da70
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e2b8,%eax
movl   $0x8057140,0x809e2a8
08
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x809e324,%eax
cmpb   $0x0,(%eax)
je     8058730 <fchmod@plt+0xd790>
cmpb   $0x0,0x809e448
jne    8058750 <fchmod@plt+0xd7b0>
mov    0x809e46c,%edx
test   %edx,%edx
jne    8058778 <fchmod@plt+0xd7d8>
cmpb   $0x0,0x809e53c
je     80587aa <fchmod@plt+0xd80a>
cmpb   $0x0,0x809e4b9
je     8058686 <fchmod@plt+0xd6e6>
mov    0x809e324,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8062d60 <fchmod@plt+0x17dc0>
test   %al,%al
je     80586d8 <fchmod@plt+0xd738>
movl   $0x809e320,(%esp)
call   8067ce0 <fchmod@plt+0x1cd40>
test   %al,%al
jne    8058740 <fchmod@plt+0xd7a0>
mov    0x809e2b8,%eax
movzbl 0x9c(%eax),%edx
movsbl %dl,%esi
xor    %ebx,%ebx
mov    0x809e324,%edi
cmpb   $0x0,0x809e45d
jne    80586c6 <fchmod@plt+0xd726>
mov    0x809e458,%eax
xor    %ebx,%ebx
test   %eax,%eax
sete   %bl
cmp    $0x56,%dl
ja     8058a10 <fchmod@plt+0xda70>
jmp    *0x808767c(,%edx,4)
xchg   %ax,%ax
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x809e324,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087550,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8062100 <fchmod@plt+0x17160>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x53,%esi
mov    $0x53,%edx
jmp    80586a9 <fchmod@plt+0xd709>
nop
mov    %eax,0x4(%esp)
movl   $0x8087623,(%esp)
call   806a220 <fchmod@plt+0x1f280>
test   %eax,%eax
jne    8058649 <fchmod@plt+0xd6a9>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8062100 <fchmod@plt+0x17160>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   80618c0 <fchmod@plt+0x16920>
cmpb   $0x0,0x809e53c
jne    8058664 <fchmod@plt+0xd6c4>
mov    0x809e2c4,%ebx
xor    %edx,%edx
mov    0x809e324,%eax
call   8056b80 <fchmod@plt+0xbbe0>
mov    %ebx,(%esp)
call   8063320 <fchmod@plt+0x18380>
cmpb   $0x0,0x809e4b9
je     8058686 <fchmod@plt+0xd6e6>
jmp    805866d <fchmod@plt+0xd6cd>
xchg   %ax,%ax
mov    $0x8057fc0,%ebp
mov    0x809e4b4,%eax
cmp    $0x3,%eax
je     8058858 <fchmod@plt+0xd8b8>
cmp    $0x6,%eax
jne    8058880 <fchmod@plt+0xd8e0>
xor    %edx,%edx
mov    %edi,%eax
call   8057170 <fchmod@plt+0xc1d0>
test   %al,%al
je     8058880 <fchmod@plt+0xd8e0>
testb  $0x8,0x809d641
je     8058730 <fchmod@plt+0xd790>
mov    %edi,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80875e8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8058730 <fchmod@plt+0xd790>
lea    0x0(%esi),%esi
movzbl 0x809e2e2,%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063af0 <fchmod@plt+0x18b50>
test   %eax,%eax
jne    8058880 <fchmod@plt+0xd8e0>
call   804aaf0 <__errno_location@plt>
testl  $0xfffffffd,(%eax)
jne    8058a00 <fchmod@plt+0xda60>
mov    0x809e324,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   *%ebp
test   %eax,%eax
je     805889b <fchmod@plt+0xd8fb>
cmpb   $0x0,0x809e4b9
jne    80588a8 <fchmod@plt+0xd908>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8062fc0 <fchmod@plt+0x18020>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80577a0,%ebp
lea    0x0(%esi),%esi
test   %ebx,%ebx
jne    80587dd <fchmod@plt+0xd83d>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8062100 <fchmod@plt+0x17160>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2000,0x809e35c
00
mov    $0x8057450,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x6000,0x809e35c
00
mov    $0x8057450,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e400
mov    $0x8057b10,%ebp
je     80588c0 <fchmod@plt+0xd920>
movb   $0x1,0x809e53c
jmp    80588c0 <fchmod@plt+0xd920>
nop
mov    $0x8057380,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
nop
movl   $0x5,0x8(%esp)
mov    $0x8056060,%ebp
movl   $0x808762b,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80588c0 <fchmod@plt+0xd920>
mov    %edi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087574,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   804a5e0 <dcgettext@plt>
mov    %ebp,0xc(%esp)
mov    $0x8056070,%ebp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80588c0 <fchmod@plt+0xd920>
xchg   %ax,%ax
mov    $0x8057a20,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
lea    0x0(%esi),%esi
mov    $0x8056080,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e328
je     80587d8 <fchmod@plt+0xd838>
mov    $0x8057b10,%ebp
jmp    80588c0 <fchmod@plt+0xd920>
nop
mov    %edi,(%esp)
call   806fbc0 <fchmod@plt+0x24c20>
jmp    8058730 <fchmod@plt+0xd790>
lea    0x0(%esi),%esi
testb  $0x1,0x809d642
mov    $0x8057fc0,%ebp
je     80588c0 <fchmod@plt+0xd920>
mov    %edi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80875b0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %esi,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    80588c0 <fchmod@plt+0xd920>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    $0x1,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x809c3f8,%edx
mov    0x54(%esp),%ebx
mov    0x50(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804ad80 <renameat@plt>
test   %eax,%eax
je     8058b2c <fchmod@plt+0xdb8c>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
cmp    $0x2,%ebp
je     8058b38 <fchmod@plt+0xdb98>
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x5,0x8(%esp)
movl   $0x8087647,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
xor    %edi,%edi
mov    %ebx,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x2f(%esp),%edx
mov    %ebx,%eax
call   80564d0 <fchmod@plt+0xb530>
test   %eax,%eax
jne    8058ac0 <fchmod@plt+0xdb20>
mov    0x809c3f8,%eax
mov    0x50(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ad80 <renameat@plt>
test   %eax,%eax
je     8058b2c <fchmod@plt+0xdb8c>
mov    (%esi),%ebp
jmp    8058ac0 <fchmod@plt+0xdb20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x809daa0,%ebx
test   %ebx,%ebx
jne    8058bbe <fchmod@plt+0xdc1e>
jmp    8058be0 <fchmod@plt+0xdc40>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8058be0 <fchmod@plt+0xdc40>
mov    %esi,0x4(%esp)
mov    0x4(%ebx),%edx
mov    %edx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    8058bb8 <fchmod@plt+0xdc18>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
movl   $0xc,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8081880 <argp_parse+0x9940>
mov    %eax,0x4(%ebx)
xor    %eax,%eax
test   %edi,%edi
je     8058c24 <fchmod@plt+0xdc84>
mov    %edi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x8(%ebx)
mov    (%esi),%eax
mov    %ebx,(%esi)
mov    %eax,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%esp),%ebx
mov    0x20(%esp),%edi
mov    0x28(%esp),%esi
mov    %ebx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0xe4(%edi)
mov    %ebx,0x28(%esp)
mov    %esi,0x24(%esp)
mov    %eax,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a4e0 <memcpy@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    (%eax),%eax
test   %eax,%eax
je     8058c9d <fchmod@plt+0xdcfd>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,(%ebx)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   806d7b0 <fchmod@plt+0x22810>
test   %al,%al
jne    8058cc1 <fchmod@plt+0xdd21>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8062250 <fchmod@plt+0x172b0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
add    $0x18,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edx
mov    $0x809e270,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    $0x809e26c,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
add    $0x10,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
add    $0xc,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%eax
jmp    8058c80 <fchmod@plt+0xdce0>
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    (%edx),%eax
add    $0x1,%eax
mov    %eax,(%edx)
lea    (%eax,%eax,2),%esi
mov    (%ebx),%eax
shl    $0x2,%esi
mov    %esi,0x4(%esp)
sub    $0xc,%esi
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %edi,(%esp)
mov    %eax,(%ebx)
lea    (%eax,%esi,1),%ebp
call   8081880 <argp_parse+0x9940>
mov    %eax,0x0(%ebp)
mov    0x34(%esp),%eax
mov    (%ebx),%ebp
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
add    %esi,%ebp
mov    %eax,(%esp)
call   8081850 <argp_parse+0x9910>
mov    0x34(%esp),%ecx
mov    %eax,0x4(%ebp)
mov    (%ebx),%eax
mov    %ecx,0x8(%eax,%esi,1)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x2c(%esp),%esi
mov    0x20(%esp),%ebx
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8081850 <argp_parse+0x9910>
mov    %esi,0x28(%ebx)
mov    %eax,0x24(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x2c(%esp),%esi
mov    0x20(%esp),%ebx
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8081850 <argp_parse+0x9910>
mov    %esi,0x20(%ebx)
mov    %eax,0x1c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %eax,%edi
push   %esi
mov    $0x808707d,%esi
push   %ebx
mov    $0x8087be0,%ebx
sub    $0x10,%esp
jmp    8058e3d <fchmod@plt+0xde9d>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
je     8058e53 <fchmod@plt+0xdeb3>
add    $0x14,%ebx
mov    (%ebx),%esi
test   %esi,%esi
je     8058e60 <fchmod@plt+0xdec0>
cmpb   $0x0,0x10(%ebx)
jne    8058e18 <fchmod@plt+0xde78>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    8058e34 <fchmod@plt+0xde94>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
test   %eax,%eax
je     8058eb3 <fchmod@plt+0xdf13>
nop
mov    0x4(%ebx),%eax
call   8058e00 <fchmod@plt+0xde60>
test   %eax,%eax
mov    %eax,%esi
je     8058ead <fchmod@plt+0xdf0d>
mov    0x8(%ebx),%edi
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    (%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x8(%esi)
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    8058e80 <fchmod@plt+0xdee0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x24(%esp),%esi
mov    0x20(%esp),%edi
mov    0x28(%esp),%ebp
mov    0x2c(%esp),%ebx
mov    %esi,%eax
call   8058e00 <fchmod@plt+0xde60>
test   %eax,%eax
je     8058ee8 <fchmod@plt+0xdf48>
testb  $0x2,0xc(%eax)
jne    8058f00 <fchmod@plt+0xdf60>
add    $0xc,%esp
mov    %ebp,%ecx
pop    %ebx
mov    %esi,%edx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
jmp    8058bf0 <fchmod@plt+0xdc50>
lea    0x0(%esi),%esi
mov    %ebx,0x2c(%esp)
mov    %ebp,0x28(%esp)
mov    %esi,0x24(%esp)
mov    %edi,0x20(%esp)
mov    0x8(%eax),%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
lea    0x22(%esp),%eax
mov    0x74(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x70(%esp),%eax
mov    0x78(%esp),%esi
mov    0x7c(%esp),%edi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x37(%esp),%eax
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x80878fc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %esi,0x18(%esp)
mov    %ebp,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x809e084
00
jne    8058fdc <fchmod@plt+0xe03c>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
jmp    8058ff0 <fchmod@plt+0xe050>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edi
mov    0x68(%esp),%esi
movl   $0x0,0xb8(%edi)
00
movsbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8059150 <fchmod@plt+0xe1b0>
call   804aaf0 <__errno_location@plt>
mov    $0x1,%ebx
mov    %eax,%ebp
jmp    8059070 <fchmod@plt+0xe0d0>
xchg   %ax,%ax
cmpl   $0x22,0x0(%ebp)
je     80591a8 <fchmod@plt+0xe208>
mov    0x20(%esp),%eax
xor    $0x1,%ebx
mov    0x24(%esp),%edx
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
test   %dl,%dl
je     80590fe <fchmod@plt+0xe15e>
cmp    $0x2c,%dl
jne    80591e0 <fchmod@plt+0xe240>
lea    0x1(%eax),%esi
movsbl 0x1(%eax),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8059150 <fchmod@plt+0xe1b0>
lea    0x3c(%esp),%eax
movl   $0x0,0x0(%ebp)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804ade0 <__strtoll_internal@plt>
test   %ebx,%ebx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jne    8059028 <fchmod@plt+0xe088>
cmpl   $0x22,0x0(%ebp)
je     80591a8 <fchmod@plt+0xe208>
mov    0xb8(%edi),%ecx
cmp    0xbc(%edi),%ecx
jae    8059210 <fchmod@plt+0xe270>
mov    0x28(%esp),%eax
lea    0x1(%ecx),%esi
xor    $0x1,%ebx
shl    $0x4,%ecx
mov    0x2c(%esp),%edx
add    0xc0(%edi),%ecx
mov    %esi,0xb8(%edi)
mov    %eax,(%ecx)
mov    0x20(%esp),%eax
mov    %edx,0x4(%ecx)
mov    0x24(%esp),%edx
mov    %eax,0x8(%ecx)
mov    0x3c(%esp),%eax
mov    %edx,0xc(%ecx)
movzbl (%eax),%edx
test   %dl,%dl
jne    8059054 <fchmod@plt+0xe0b4>
test   %ebx,%ebx
jne    805919a <fchmod@plt+0xe1fa>
movl   $0x5,0x8(%esp)
movl   $0x80879c0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x64(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805919a <fchmod@plt+0xe1fa>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x808792c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    0x64(%esp),%edx
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x64(%esp),%eax
mov    %esi,%edx
movl   $0xffffffff,0x8(%esp)
movl   $0x7fffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   8058f20 <fchmod@plt+0xdf80>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8087980,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x20(%esp),%edx
movsbl %dl,%edx
mov    %edx,0x10(%esp)
jmp    8059170 <fchmod@plt+0xe1d0>
movl   $0x5,0x8(%esp)
movl   $0x8087958,0x4(%esp)
jmp    8059160 <fchmod@plt+0xe1c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x28(%esp),%esi
mov    %ebx,%eax
mov    %esi,%edx
call   8058c80 <fchmod@plt+0xdce0>
lea    0x4(%ebx),%eax
mov    %esi,%edx
call   8058c80 <fchmod@plt+0xdce0>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   80793f0 <argp_parse+0x14b0>
mov    %al,0x8(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    (%ecx),%esi
movzbl (%esi),%edx
mov    %esi,%ebx
cmp    $0x20,%dl
jne    80593c0 <fchmod@plt+0xe420>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
cmp    $0x9,%dl
je     8059290 <fchmod@plt+0xe2f0>
cmp    $0x20,%dl
je     8059290 <fchmod@plt+0xe2f0>
movsbl %dl,%eax
sub    $0x30,%eax
cmp    $0x9,%eax
jbe    80592c0 <fchmod@plt+0xe320>
xor    %ebx,%ebx
test   %dl,%dl
jne    8059378 <fchmod@plt+0xe3d8>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x2c(%esp),%eax
add    %ebp,%edi
movl   $0x0,0xc(%esp)
sub    %esi,%edi
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
call   804a530 <__strtoull_internal@plt>
mov    0x18(%esp),%ecx
cmp    %eax,%edi
jb     8059416 <fchmod@plt+0xe476>
mov    0x2c(%esp),%edx
add    %eax,%esi
movzbl (%edx),%eax
cmp    $0x20,%al
sete   %bl
cmp    $0x9,%al
sete   %al
or     %al,%bl
mov    %ebx,%ebp
je     8059470 <fchmod@plt+0xe4d0>
mov    %edx,%edi
add    $0x1,%edi
movzbl (%edi),%eax
cmp    $0x9,%al
sete   %bl
cmp    $0x20,%al
sete   %al
or     %al,%bl
jne    8059313 <fchmod@plt+0xe373>
cmp    %edi,%edx
je     8059470 <fchmod@plt+0xe4d0>
movl   $0x3d,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x18(%esp)
call   804a910 <strchr@plt>
mov    0x18(%esp),%ecx
cmp    %eax,%esi
setbe  %bl
test   %eax,%eax
sete   %dl
or     %dl,%bl
jne    80594b5 <fchmod@plt+0xe515>
cmpb   $0xa,-0x1(%esi)
je     80593ce <fchmod@plt+0xe42e>
movl   $0x5,0x8(%esp)
movl   $0x8087abc,0x4(%esp)
jmp    8059388 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80879fc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    %ebx,%eax
movl   $0x2,0x809e084
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x9,%dl
je     8059290 <fchmod@plt+0xe2f0>
jmp    80592a0 <fchmod@plt+0xe300>
mov    %esi,%edx
mov    %ebp,%ebx
sub    %eax,%edx
sub    $0x2,%edx
movb   $0x0,-0x1(%esi)
movb   $0x0,(%eax)
mov    %edx,0xc(%esp)
lea    0x1(%eax),%edx
mov    %edx,0x8(%esp)
mov    0x54(%esp),%edx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   *0x50(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
movb   $0x3d,(%eax)
movb   $0xa,-0x1(%esi)
mov    %esi,(%ecx)
jmp    80592b5 <fchmod@plt+0xe315>
movl   $0x5,0x8(%esp)
mov    0x2c(%esp),%esi
movl   $0x8087a28,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
sub    %ebx,%esi
mov    %ebx,0x10(%esp)
xor    %ebx,%ebx
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80592b5 <fchmod@plt+0xe315>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8087a54,0x4(%esp)
movl   $0x0,(%esp)
xor    %ebx,%ebx
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80592b5 <fchmod@plt+0xe315>
movl   $0x5,0x8(%esp)
movl   $0x8087a8c,0x4(%esp)
jmp    8059480 <fchmod@plt+0xe4e0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x3c,%esp
lea    -0x1c(%ebp),%eax
lea    -0x30(%ebp),%ecx
mov    %eax,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %ecx,(%esp)
call   8062ad0 <fchmod@plt+0x17b30>
mov    -0x2c(%ebp),%eax
mov    -0x30(%ebp),%edx
sub    $0x4,%esp
test   %eax,%eax
js     8059512 <fchmod@plt+0xe572>
mov    -0x1c(%ebp),%eax
cmpb   $0x0,(%eax)
je     8059558 <fchmod@plt+0xe5b8>
movl   $0x5,0x8(%esp)
movl   $0x8087ae8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,(%edi)
call   8062250 <fchmod@plt+0x172b0>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x28,%esp
movl   $0x2c,(%esp)
call   8081640 <argp_parse+0x9700>
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%ebx)
mov    %eax,(%esp)
call   804a640 <_obstack_begin@plt>
add    $0x28,%esp
pop    %ebx
ret
jmp    80595c0 <fchmod@plt+0xe620>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    0xc(%eax),%eax
mov    0x30(%esp),%esi
lea    (%eax,%esi,1),%edx
cmp    %edx,0x10(%ebx)
jae    80595eb <fchmod@plt+0xe64b>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    %esi,0xc(%ebx)
add    %esi,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    0xc(%eax),%eax
lea    0x1(%eax),%esi
cmp    0x10(%ebx),%esi
jbe    8059643 <fchmod@plt+0xe6a3>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %ecx,0xc(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%eax
mov    0xc(%esp),%ecx
lea    0x1(%eax),%esi
mov    %esi,0xc(%ebx)
mov    %cl,(%eax)
addl   $0x1,(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x809da80,%ebx
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    %ecx,0x18(%esp)
test   %ebx,%ebx
je     80597de <fchmod@plt+0xe83e>
movb   $0x0,(%ebx)
movzbl (%edi),%ecx
xor    %esi,%esi
test   %cl,%cl
je     8059702 <fchmod@plt+0xe762>
mov    %ebx,%eax
mov    %ecx,%ebx
jmp    80596be <fchmod@plt+0xe71e>
lea    0x0(%esi),%esi
cmp    $0x25,%bl
je     80596e3 <fchmod@plt+0xe743>
cmp    $0x3d,%bl
je     80597d0 <fchmod@plt+0xe830>
mov    %bl,(%eax,%esi,1)
add    $0x1,%edi
movzbl (%edi),%ebx
add    $0x1,%esi
test   %bl,%bl
je     8059700 <fchmod@plt+0xe760>
lea    0x2(%esi),%ebp
cmp    0x809da7c,%ebp
jb     80596a0 <fchmod@plt+0xe700>
movl   $0x809da7c,0x4(%esp)
mov    %eax,(%esp)
call   80817a0 <argp_parse+0x9860>
cmp    $0x25,%bl
mov    %eax,0x809da80
jne    80596a5 <fchmod@plt+0xe705>
add    $0x1,%edi
movl   $0x353225,(%eax,%esi,1)
movzbl (%edi),%ebx
mov    %ebp,%esi
add    $0x1,%esi
test   %bl,%bl
jne    80596be <fchmod@plt+0xe71e>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
movb   $0x0,(%ebx,%esi,1)
xor    %edi,%edi
mov    %ebx,(%esp)
lea    0x27(%esp),%esi
call   804a950 <strlen@plt>
mov    0x60(%esp),%ecx
mov    %eax,0x1c(%esp)
lea    0x3(%ecx,%eax,1),%ebp
jmp    805972a <fchmod@plt+0xe78a>
lea    0x0(%esi),%esi
mov    %edx,%edi
lea    (%edi,%ebp,1),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    0x3b(%esp),%edx
sub    %eax,%edx
cmp    %edx,%edi
jne    8059728 <fchmod@plt+0xe788>
mov    0x14(%esp),%ebp
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x0(%ebp),%eax
lea    0x4(%ebp),%esi
mov    %esi,%edx
call   80595c0 <fchmod@plt+0xe620>
mov    0x0(%ebp),%eax
mov    $0x20,%ecx
mov    %esi,%edx
call   8059610 <fchmod@plt+0xe670>
mov    0x1c(%esp),%eax
mov    %ebx,%ecx
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x0(%ebp),%eax
call   80595c0 <fchmod@plt+0xe620>
mov    0x0(%ebp),%eax
mov    $0x3d,%ecx
mov    %esi,%edx
call   8059610 <fchmod@plt+0xe670>
mov    0x60(%esp),%eax
mov    %esi,%edx
mov    0x18(%esp),%ecx
mov    %eax,(%esp)
mov    0x0(%ebp),%eax
call   80595c0 <fchmod@plt+0xe620>
mov    0x0(%ebp),%eax
mov    $0xa,%ecx
mov    %esi,%edx
call   8059610 <fchmod@plt+0xe670>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8059800 <fchmod@plt+0xe860>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x443325,(%eax,%esi,1)
mov    %ebp,%esi
jmp    80596b1 <fchmod@plt+0xe711>
movl   $0x100,(%esp)
movl   $0x100,0x809da7c
00
call   8081640 <argp_parse+0x9700>
mov    %eax,0x809da80
mov    %eax,%ebx
jmp    805968e <fchmod@plt+0xe6ee>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    %ecx,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8059660 <fchmod@plt+0xe6c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   806d7b0 <fchmod@plt+0x22810>
test   %al,%al
je     8059888 <fchmod@plt+0xe8e8>
mov    0x1c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   8059810 <fchmod@plt+0xe870>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ebx,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x1c(%esp)
mov    %eax,%ecx
jmp    805986c <fchmod@plt+0xe8cc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x18(%eax),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
jmp    80598c0 <fchmod@plt+0xe920>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x10(%esp),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
jmp    80598e0 <fchmod@plt+0xe940>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x10(%eax),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x4(%eax),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0xc(%eax),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x14(%eax),%eax
jmp    8059840 <fchmod@plt+0xe8a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x5c(%esp),%ecx
mov    %gs:0x14,%edi
mov    %edi,0x3c(%esp)
xor    %edi,%edi
mov    0x50(%esp),%eax
mov    0x54(%esp),%esi
mov    0x58(%esp),%ebx
test   %ecx,%ecx
je     80599c0 <fchmod@plt+0xea20>
mov    (%ecx),%edi
mov    0x4(%ecx),%edx
lea    0x1c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   8062a30 <fchmod@plt+0x17a90>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8059810 <fchmod@plt+0xe870>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    80599ce <fchmod@plt+0xea2e>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x94(%eax),%edi
mov    0x98(%eax),%edx
jmp    805998c <fchmod@plt+0xe9ec>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x10(%esp),%eax
mov    (%eax),%eax
lea    (%eax,%eax,2),%edx
mov    0x4(%esp),%eax
mov    0xc8(%eax),%eax
lea    (%eax,%edx,4),%eax
mov    0x8(%esp),%edx
mov    0x4(%eax),%ecx
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
jmp    8059660 <fchmod@plt+0xe6c0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x24(%eax),%ecx
mov    0x28(%eax),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
jmp    8059660 <fchmod@plt+0xe6c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x1c(%eax),%ecx
mov    0x20(%eax),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
jmp    8059660 <fchmod@plt+0xe6c0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%esp),%ebx
mov    0x24(%esp),%edi
mov    0x28(%esp),%esi
mov    %ebx,(%esp)
call   805d0d0 <fchmod@plt+0x12130>
mov    %ebx,%ecx
mov    %edi,%edx
mov    %eax,0x20(%esp)
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    8059660 <fchmod@plt+0xe6c0>
nop
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x3c,%esp
lea    -0x30(%ebp),%edx
lea    -0x1c(%ebp),%ecx
mov    %edx,(%esp)
movl   $0x1,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,-0x34(%ebp)
call   8062ad0 <fchmod@plt+0x17b30>
mov    -0x2c(%ebp),%ebx
mov    -0x30(%ebp),%edx
mov    -0x34(%ebp),%eax
sub    $0x4,%esp
test   %ebx,%ebx
js     8059ad0 <fchmod@plt+0xeb30>
mov    %edx,(%eax)
mov    %ebx,0x4(%eax)
mov    $0x1,%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    -0x1c(%ebp),%eax
cmp    %eax,%esi
jae    8059adc <fchmod@plt+0xeb3c>
cmpb   $0x0,(%eax)
je     8059b30 <fchmod@plt+0xeb90>
movl   $0x5,0x8(%esp)
movl   $0x808792c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
mov    %esi,%edx
movl   $0x7fffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80000000,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8058f20 <fchmod@plt+0xdf80>
xor    %eax,%eax
jmp    8059ac8 <fchmod@plt+0xeb28>
nop
sub    $0x1c,%esp
mov    0x24(%esp),%ecx
lea    0x8(%esp),%eax
mov    0x28(%esp),%edx
call   8059a80 <fchmod@plt+0xeae0>
test   %al,%al
je     8059b90 <fchmod@plt+0xebf0>
mov    0x20(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,0x94(%ecx)
mov    %edx,0x98(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%ecx
lea    0x8(%esp),%eax
mov    0x28(%esp),%edx
call   8059a80 <fchmod@plt+0xeae0>
test   %al,%al
je     8059bd0 <fchmod@plt+0xec30>
mov    0x20(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,0x9c(%ecx)
mov    %edx,0xa0(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%ecx
lea    0x8(%esp),%eax
mov    0x28(%esp),%edx
call   8059a80 <fchmod@plt+0xeae0>
test   %al,%al
je     8059c10 <fchmod@plt+0xec70>
mov    0x20(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,0x8c(%ecx)
mov    %edx,0x90(%ecx)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%eax
mov    0x54(%esp),%edi
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80627d0 <fchmod@plt+0x17830>
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     8059c98 <fchmod@plt+0xecf8>
mov    0x2c(%esp),%edx
cmpb   $0x0,(%edx)
jne    8059c98 <fchmod@plt+0xecf8>
cmp    $0x22,%eax
je     8059cf0 <fchmod@plt+0xed50>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x0(%ebp)
mov    $0x1,%eax
mov    %edx,0x4(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x808792c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x58(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
mov    %ebx,%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   8058f20 <fchmod@plt+0xdf80>
xor    %eax,%eax
jmp    8059c90 <fchmod@plt+0xecf0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059c20 <fchmod@plt+0xec80>
test   %al,%al
je     8059d56 <fchmod@plt+0xedb6>
mov    0x18(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,0x48(%eax)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059c20 <fchmod@plt+0xec80>
test   %al,%al
je     8059d96 <fchmod@plt+0xedf6>
mov    0x18(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,0x44(%eax)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8059c20 <fchmod@plt+0xec80>
test   %al,%al
je     8059dd9 <fchmod@plt+0xee39>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    %esi,(%ebx)
mov    %edi,0x4(%ebx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     8059e1e <fchmod@plt+0xee7e>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x809e290
mov    %edx,0x809e294
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     8059e6e <fchmod@plt+0xeece>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x809e280
mov    %edx,0x809e284
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
lea    0x28(%esp),%eax
mov    0x48(%esp),%edx
movl   $0xffffffff,(%esp)
mov    0x40(%esp),%ebx
movl   $0x7fffffff,0x4(%esp)
mov    %esi,0x8(%esp)
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     8059ee3 <fchmod@plt+0xef43>
mov    0xb8(%ebx),%eax
cmp    0xbc(%ebx),%eax
jae    8059ef0 <fchmod@plt+0xef50>
lea    0x1(%eax),%edx
mov    0xc0(%ebx),%esi
shl    $0x4,%eax
mov    %edx,0xb8(%ebx)
mov    %eax,%ecx
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
mov    %edx,0xc(%esi,%ecx,1)
mov    %eax,0x8(%esi,%ecx,1)
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8087958,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
push   %ebx
sub    $0x38,%esp
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
movl   $0xffffffff,(%esp)
mov    0x40(%esp),%ebx
movl   $0x7fffffff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     8059f96 <fchmod@plt+0xeff6>
mov    0xb8(%ebx),%eax
cmp    0xbc(%ebx),%eax
jae    8059fa0 <fchmod@plt+0xf000>
mov    0xc0(%ebx),%ecx
shl    $0x4,%eax
mov    0x2c(%esp),%edx
add    %eax,%ecx
mov    0x28(%esp),%eax
mov    %edx,0x4(%ecx)
mov    %eax,(%ecx)
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8087958,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x48(%esp),%edx
movl   $0x80877d8,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x7fffffff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     805a03d <fchmod@plt+0xf09d>
mov    0x30(%esp),%ecx
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x58(%ecx)
mov    %edx,0x5c(%ecx)
add    $0x2c,%esp
ret
jmp    805a050 <fchmod@plt+0xf0b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     805a089 <fchmod@plt+0xf0e9>
mov    0x18(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,0xb4(%eax)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     805a0c9 <fchmod@plt+0xf129>
mov    0x18(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,0xb0(%eax)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
movl   $0x7fffffff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     805a10d <fchmod@plt+0xf16d>
mov    0x30(%esp),%ecx
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x58(%ecx)
mov    %edx,0x5c(%ecx)
add    $0x2c,%esp
ret
jmp    805a120 <fchmod@plt+0xf180>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x28,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
movl   $0xffffffff,(%esp)
mov    0x30(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
call   8059da0 <fchmod@plt+0xee00>
test   %al,%al
je     805a17a <fchmod@plt+0xf1da>
mov    0x18(%esp),%eax
mov    %eax,0xbc(%ebx)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   8081820 <argp_parse+0x98e0>
movl   $0x0,0xb8(%ebx)
00
mov    %eax,0xc0(%ebx)
add    $0x28,%esp
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%edi
mov    %edi,0x3c(%esp)
xor    %edi,%edi
mov    0x64(%esp),%ebp
lea    0x27(%esp),%ecx
mov    0x60(%esp),%edi
mov    %ecx,0x18(%esp)
mov    0x68(%esp),%ebx
mov    %edx,0x4(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8059810 <fchmod@plt+0xe870>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805a1ee <fchmod@plt+0xf24e>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    0x8(%esp),%ecx
mov    0x48(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0x0,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    0x8(%esp),%ecx
mov    0x44(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0x0,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    0x5c(%eax),%edx
mov    0x58(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    0x5c(%eax),%edx
mov    0x58(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    0x8(%esp),%ecx
mov    0xb0(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    0x8(%esp),%ecx
mov    0xb4(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    0x8(%esp),%ecx
mov    0xb8(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x10(%esp),%eax
mov    0x4(%esp),%edx
mov    0x8(%esp),%ecx
mov    (%eax),%eax
shl    $0x4,%eax
add    0xc0(%edx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
jmp    805a390 <fchmod@plt+0xf3f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x10(%esp),%eax
mov    0x4(%esp),%edx
mov    0x8(%esp),%ecx
mov    (%eax),%eax
shl    $0x4,%eax
add    0xc0(%edx),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x10(%esp),%eax
mov    0x8(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x10(%esp),%eax
mov    0x8(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
jmp    805a180 <fchmod@plt+0xf1e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x44,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x50(%esp),%eax
mov    0x54(%esp),%esi
mov    0x58(%esp),%ebx
mov    0x90(%eax),%edx
mov    0x8c(%eax),%eax
mov    %edx,%ecx
mov    %eax,%edx
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8062a30 <fchmod@plt+0x17a90>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8059810 <fchmod@plt+0xe870>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805a491 <fchmod@plt+0xf4f1>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x44,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x50(%esp),%eax
mov    0x54(%esp),%esi
mov    0x58(%esp),%ebx
mov    0xa0(%eax),%edx
mov    0x9c(%eax),%eax
mov    %edx,%ecx
mov    %eax,%edx
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8062a30 <fchmod@plt+0x17a90>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8059810 <fchmod@plt+0xe870>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805a501 <fchmod@plt+0xf561>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809daa8,%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
jne    805a52e <fchmod@plt+0xf58e>
jmp    805a558 <fchmod@plt+0xf5b8>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     805a558 <fchmod@plt+0xf5b8>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804a6d0 <fnmatch@plt>
test   %eax,%eax
jne    805a528 <fchmod@plt+0xf588>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    %ebx,(%esp)
call   805a510 <fchmod@plt+0xf570>
test   %al,%al
je     805a590 <fchmod@plt+0xf5f0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   8058ba0 <fchmod@plt+0xdc00>
test   %al,%al
jne    805a583 <fchmod@plt+0xf5e3>
mov    %ebx,%eax
call   8058e00 <fchmod@plt+0xde60>
test   %eax,%eax
je     805a5c8 <fchmod@plt+0xf628>
mov    %ebp,0x3c(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
mov    0x8(%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    *%eax
lea    0x0(%esi),%esi
testb  $0x2,0x809d642
je     805a583 <fchmod@plt+0xf5e3>
movl   $0x5,0x8(%esp)
movl   $0x8087b0c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x3c(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x30(%esp)
mov    %eax,0x38(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a7c0 <error@plt>
jmp    805a620 <fchmod@plt+0xf680>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x80877ea,0x4(%esp)
mov    %eax,(%esp)
call   804ac40 <strtok@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805a7ae <fchmod@plt+0xf80e>
lea    0x0(%esi),%esi
movl   $0x3d,0x4(%esp)
mov    %ebp,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     805a903 <fchmod@plt+0xf963>
cmpb   $0x3a,-0x1(%eax)
mov    %eax,%ebx
movb   $0x1,0x1f(%esp)
je     805a848 <fchmod@plt+0xf8a8>
cmp    %ebx,%ebp
jae    805a699 <fchmod@plt+0xf6f9>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
xchg   %ax,%ax
jmp    805a68f <fchmod@plt+0xf6ef>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
cmp    %ebp,%ebx
je     805a699 <fchmod@plt+0xf6f9>
movzbl (%ebx),%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    805a688 <fchmod@plt+0xf6e8>
movb   $0x0,(%ebx)
movzbl 0x1(%esi),%edx
lea    0x1(%esi),%ebx
test   %dl,%dl
mov    %edx,0x18(%esp)
je     805a6cc <fchmod@plt+0xf72c>
call   804af60 <__ctype_b_loc@plt>
mov    0x18(%esp),%edx
mov    (%eax),%eax
jmp    805a6c2 <fchmod@plt+0xf722>
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     805a6cc <fchmod@plt+0xf72c>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    805a6b8 <fchmod@plt+0xf718>
mov    $0x80877ec,%edi
mov    %ebp,%esi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     805a7b8 <fchmod@plt+0xf818>
mov    $0x80877f7,%edi
mov    %ebp,%esi
mov    $0xc,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     805a870 <fchmod@plt+0xf8d0>
mov    $0x80877f3,%edi
mov    $0x10,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805a8a0 <fchmod@plt+0xf900>
mov    $0x8087807,%edi
mov    $0xd,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805a8b5 <fchmod@plt+0xf915>
mov    $0x11,%ecx
mov    %ebp,%esi
mov    $0x8087803,%edi
mov    $0x808707d,%eax
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x8087be0,%esi
seta   %cl
setb   %dl
cmp    %dl,%cl
je     805a888 <fchmod@plt+0xf8e8>
lea    0x0(%esi),%esi
cmpb   $0x0,0x10(%esi)
jne    805a768 <fchmod@plt+0xf7c8>
testb  $0x1,0xc(%esi)
je     805a768 <fchmod@plt+0xf7c8>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     805a8de <fchmod@plt+0xf93e>
add    $0x14,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    805a748 <fchmod@plt+0xf7a8>
cmpb   $0x0,0x1f(%esp)
jne    805a8cb <fchmod@plt+0xf92b>
mov    %ebx,%ecx
mov    %ebp,%edx
mov    $0x809daa0,%eax
call   8058bf0 <fchmod@plt+0xdc50>
lea    0x0(%esi),%esi
movl   $0x80877ea,0x4(%esp)
movl   $0x0,(%esp)
call   804ac40 <strtok@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    805a648 <fchmod@plt+0xf6a8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x808707d,%eax
mov    $0x8087be0,%esi
jmp    805a7d5 <fchmod@plt+0xf835>
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esi
mov    (%esi),%eax
test   %eax,%eax
je     805a858 <fchmod@plt+0xf8b8>
cmpb   $0x0,0x10(%esi)
jne    805a7c8 <fchmod@plt+0xf828>
testb  $0x1,0xc(%esi)
je     805a7c8 <fchmod@plt+0xf828>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a6d0 <fnmatch@plt>
test   %eax,%eax
jne    805a7c8 <fchmod@plt+0xf828>
mov    %ebx,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8087814,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
nop
lea    -0x1(%eax),%ebx
movb   $0x0,0x1f(%esp)
jmp    805a673 <fchmod@plt+0xf6d3>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
mov    %ebx,%edx
mov    $0x809daa8,%eax
call   8058bf0 <fchmod@plt+0xdc50>
jmp    805a790 <fchmod@plt+0xf7f0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
movl   $0x809da98,(%esp)
call   8062250 <fchmod@plt+0x172b0>
jmp    805a790 <fchmod@plt+0xf7f0>
lea    0x0(%esi),%esi
mov    %ebx,%ecx
mov    $0x809da84,%edx
mov    $0x809da88,%eax
call   80594d0 <fchmod@plt+0xe530>
jmp    805a790 <fchmod@plt+0xf7f0>
xchg   %ax,%ax
mov    %ebx,0x4(%esp)
movl   $0x809da8c,(%esp)
call   8062250 <fchmod@plt+0x172b0>
jmp    805a790 <fchmod@plt+0xf7f0>
mov    %ebx,%ecx
mov    $0x809da90,%edx
mov    $0x809da94,%eax
call   80594d0 <fchmod@plt+0xe530>
jmp    805a790 <fchmod@plt+0xf7f0>
mov    %ebx,%ecx
mov    %ebp,%edx
mov    $0x809daa4,%eax
call   8058bf0 <fchmod@plt+0xdc50>
jmp    805a790 <fchmod@plt+0xf7f0>
movl   $0x5,0x8(%esp)
movl   $0x8087b6c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,0xc(%esp)
jmp    805a823 <fchmod@plt+0xf883>
movl   $0x5,0x8(%esp)
movl   $0x8087b3c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,0xc(%esp)
jmp    805a823 <fchmod@plt+0xf883>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%edi
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmpb   $0x0,(%ebx)
mov    %eax,%esi
je     805abfc <fchmod@plt+0xfc5c>
mov    %ebx,%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0xc(%esp)
movl   $0x25,0x4(%esp)
mov    %edx,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805aa14 <fchmod@plt+0xfa74>
movzbl 0x1(%ebp),%eax
cmp    $0x66,%al
je     805aad0 <fchmod@plt+0xfb30>
jg     805aa88 <fchmod@plt+0xfae8>
cmp    $0x25,%al
je     805ab20 <fchmod@plt+0xfb80>
cmp    $0x64,%al
lea    0x0(%esi),%esi
jne    805aa09 <fchmod@plt+0xfa69>
test   %edi,%edi
je     805aaee <fchmod@plt+0xfb4e>
mov    0xc(%esp),%eax
test   %eax,%eax
je     805abe9 <fchmod@plt+0xfc49>
movzbl 0x809e534,%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   804a950 <strlen@plt>
lea    -0x2(%esi,%eax,1),%esi
movzbl 0x1(%ebp),%eax
test   %al,%al
lea    0x1(%ebp),%edx
jne    805a988 <fchmod@plt+0xf9e8>
add    $0x1,%esi
mov    %esi,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%edi
movzbl (%ebx),%eax
mov    %edi,%esi
test   %al,%al
je     805aa42 <fchmod@plt+0xfaa2>
cmp    $0x25,%al
je     805aaf8 <fchmod@plt+0xfb58>
mov    %al,(%esi)
movzbl 0x1(%ebx),%eax
add    $0x1,%esi
add    $0x1,%ebx
test   %al,%al
jne    805aa2a <fchmod@plt+0xfa8a>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
cmp    %edi,%esi
ja     805aa62 <fchmod@plt+0xfac2>
jmp    805aa68 <fchmod@plt+0xfac8>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%esi
cmp    %edi,%esi
lea    0x0(%esi),%esi
je     805aa68 <fchmod@plt+0xfac8>
cmpb   $0x2f,-0x1(%esi)
je     805aa58 <fchmod@plt+0xfab8>
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
movb   $0x0,(%esi)
jne    805ac29 <fchmod@plt+0xfc89>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x6e,%al
je     805ab30 <fchmod@plt+0xfb90>
cmp    $0x70,%al
jne    805aa09 <fchmod@plt+0xfa69>
call   804a7a0 <getpid@plt>
lea    0x22(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%ecx
mov    %eax,0x14(%esp)
lea    0x36(%esp),%eax
sub    %ecx,%eax
lea    -0x2(%esi,%eax,1),%esi
movzbl 0x1(%ebp),%eax
jmp    805aa09 <fchmod@plt+0xfa69>
lea    0x0(%esi),%esi
test   %edi,%edi
je     805aaee <fchmod@plt+0xfb4e>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   804a950 <strlen@plt>
lea    -0x2(%esi,%eax,1),%esi
lea    0x1(%ebp),%edx
jmp    805a988 <fchmod@plt+0xf9e8>
xchg   %ax,%ax
movzbl 0x1(%ebx),%eax
cmp    $0x66,%al
je     805abc8 <fchmod@plt+0xfc28>
jg     805ab68 <fchmod@plt+0xfbc8>
cmp    $0x25,%al
je     805aba8 <fchmod@plt+0xfc08>
cmp    $0x64,%al
jne    805ab90 <fchmod@plt+0xfbf0>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    805ab74 <fchmod@plt+0xfbd4>
jmp    805ab82 <fchmod@plt+0xfbe2>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%esi
lea    0x1(%ebp),%edx
jmp    805a988 <fchmod@plt+0xf9e8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x37(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%ecx
mov    %eax,0x10(%esp)
lea    0x4b(%esp),%eax
sub    %ecx,%eax
lea    -0x2(%esi,%eax,1),%esi
movzbl 0x1(%ebp),%eax
jmp    805aa09 <fchmod@plt+0xfa69>
lea    0x0(%esi),%esi
cmp    $0x6e,%al
je     805abc0 <fchmod@plt+0xfc20>
cmp    $0x70,%al
jne    805ab90 <fchmod@plt+0xfbf0>
mov    0x14(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a600 <stpcpy@plt>
mov    %eax,%esi
movzbl 0x2(%ebx),%eax
add    $0x2,%ebx
jmp    805aa26 <fchmod@plt+0xfa86>
xchg   %ax,%ax
movb   $0x25,(%esi)
movzbl 0x1(%ebx),%eax
test   %al,%al
jne    805abd8 <fchmod@plt+0xfc38>
add    $0x1,%esi
jmp    805aa42 <fchmod@plt+0xfaa2>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x25,(%esi)
add    $0x2,%ebx
movzbl (%ebx),%eax
add    $0x1,%esi
jmp    805aa26 <fchmod@plt+0xfa86>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
jmp    805ab74 <fchmod@plt+0xfbd4>
xchg   %ax,%ax
mov    0x18(%esp),%eax
test   %eax,%eax
jne    805ab74 <fchmod@plt+0xfbd4>
jmp    805ab82 <fchmod@plt+0xfbe2>
lea    0x0(%esi),%esi
mov    %al,0x1(%esi)
add    $0x2,%ebx
movzbl (%ebx),%eax
add    $0x2,%esi
jmp    805aa26 <fchmod@plt+0xfa86>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8079270 <argp_parse+0x1330>
mov    %eax,0xc(%esp)
jmp    805a9d6 <fchmod@plt+0xfa36>
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0xc(%esp)
jmp    805aa14 <fchmod@plt+0xfa74>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x809da98,%eax
test   %eax,%eax
je     805ac58 <fchmod@plt+0xfcb8>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   805a930 <fchmod@plt+0xf990>
add    $0x1c,%esp
ret
movl   $0x808782e,0x4(%esp)
movl   $0x809da98,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809da98,%eax
jmp    805ac3c <fchmod@plt+0xfc9c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809da8c,%eax
test   %eax,%eax
je     805acb8 <fchmod@plt+0xfd18>
mov    0x809daac,%ecx
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x8(%esp)
call   805a930 <fchmod@plt+0xf990>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8087847,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     805ad20 <fchmod@plt+0xfd80>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    $0x12,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,0x809da8c
call   804a600 <stpcpy@plt>
mov    $0x6e,%edx
movl   $0x6f6c472f,(%eax)
movl   $0x486c6162,0x4(%eax)
movl   $0x2e646165,0x8(%eax)
movl   $0x252e7025,0xc(%eax)
mov    %dx,0x10(%eax)
mov    %ebx,%eax
jmp    805ac8e <fchmod@plt+0xfcee>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x16,%eax
mov    $0x8087842,%esi
jmp    805acd5 <fchmod@plt+0xfd35>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movl   $0x0,0xc8(%eax)
00
movl   $0x0,0xc4(%eax)
00
movl   $0x0,0x1c(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0x24(%eax)
movl   $0x0,0x28(%eax)
movl   $0x0,0x18(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
mov    0x30(%esp),%ebp
test   %edi,%edi
mov    %ebp,%ebx
je     805ada7 <fchmod@plt+0xfe07>
nop
mov    (%ebx),%eax
add    $0x1,%esi
add    $0xc,%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    -0x8(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
cmp    %edi,%esi
jne    805ad88 <fchmod@plt+0xfde8>
mov    %ebp,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a4c0 <free@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
mov    0x3c(%esp),%ecx
mov    0x30(%esp),%esi
mov    0x38(%esp),%ebp
mov    %edi,(%esp)
mov    %ecx,0xc(%esp)
call   804a950 <strlen@plt>
add    $0xe,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebx
movl   $0x49484353,(%eax)
lea    0xd(%eax),%eax
movl   $0x782e594c,-0x9(%eax)
movl   $0x72747461,-0x5(%eax)
movb   $0x2e,-0x1(%eax)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0xc(%esp),%ecx
lea    0xc4(%esi),%edx
mov    %ebp,(%esp)
lea    0xc8(%esi),%eax
mov    %ecx,0x4(%esp)
mov    %ebx,%ecx
call   8058d30 <fchmod@plt+0xdd90>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a4c0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0xc(%ebp),%esi
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,-0x2c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   804a950 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x14(%ebp),%esi
mov    0x14(%ebp),%eax
lea    0x1f(%esi),%edx
and    $0xfffffff0,%edx
add    $0x1,%eax
sub    %edx,%esp
lea    0x1f(%esp),%esi
and    $0xfffffff0,%esi
mov    %edi,0x4(%esp)
mov    %ebx,%edi
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804a4e0 <memcpy@plt>
lea    0x1(%ebx),%ecx
mov    %ebx,%eax
jmp    805aede <fchmod@plt+0xff3e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %dl,-0x1(%ecx)
cmpb   $0x0,(%eax)
je     805af08 <fchmod@plt+0xff68>
add    $0x1,%eax
add    $0x1,%ecx
movzbl (%eax),%edx
cmp    $0x25,%dl
jne    805aed0 <fchmod@plt+0xff30>
movzbl 0x1(%eax),%ebx
cmp    $0x33,%bl
je     805af40 <fchmod@plt+0xffa0>
cmp    $0x32,%bl
jne    805aed0 <fchmod@plt+0xff30>
cmpb   $0x35,0x2(%eax)
jne    805aed0 <fchmod@plt+0xff30>
movb   $0x25,-0x1(%ecx)
add    $0x3,%eax
jmp    805aedb <fchmod@plt+0xff3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%eax
mov    %edi,%ebx
add    $0xd,%ebx
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    -0x2c(%ebp),%eax
mov    %eax,(%esp)
call   805adc0 <fchmod@plt+0xfe20>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    805af4f <fchmod@plt+0xffaf>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x44,0x2(%eax)
jne    805aed0 <fchmod@plt+0xff30>
movb   $0x3d,-0x1(%ecx)
add    $0x3,%eax
jmp    805aedb <fchmod@plt+0xff3b>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
movl   $0x0,0x0(%ebp)
movl   $0x0,(%edi)
mov    0xc4(%esi),%eax
test   %eax,%eax
je     805afbf <fchmod@plt+0x1001f>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc8(%esi),%eax
lea    (%ebx,%ebx,2),%edx
add    $0x1,%ebx
lea    (%eax,%edx,4),%eax
mov    0x8(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x4(%eax),%edx
mov    %edx,(%esp)
mov    (%eax),%ecx
mov    %edi,%edx
mov    %ebp,%eax
call   8058d30 <fchmod@plt+0xdd90>
cmp    %ebx,0xc4(%esi)
ja     805af90 <fchmod@plt+0xfff0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x809daa4,%eax
mov    0x30(%esp),%ebx
mov    %ebx,%edx
call   8058e70 <fchmod@plt+0xded0>
mov    0x809da9c,%eax
mov    %ebx,%edx
call   8058e70 <fchmod@plt+0xded0>
mov    0xd0(%ebx),%eax
test   %eax,%eax
je     805b030 <fchmod@plt+0x10090>
mov    0xd4(%ebx),%edx
lea    0x200(%edx),%ecx
mov    %ecx,0x1c(%esp)
mov    %ebx,0x4(%esp)
lea    0x1c(%esp),%ecx
movl   $0x805a560,(%esp)
call   8059270 <fchmod@plt+0xe2d0>
test   %al,%al
je     805b030 <fchmod@plt+0x10090>
mov    0xd0(%ebx),%eax
mov    0xd4(%ebx),%edx
jmp    805b00a <fchmod@plt+0x1006a>
mov    0x809daa0,%eax
mov    %ebx,%edx
call   8058e70 <fchmod@plt+0xded0>
add    $0x28,%esp
pop    %ebx
ret
jmp    805b050 <fchmod@plt+0x100b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    805b068 <fchmod@plt+0x100c8>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x8(%edi),%edx
mov    0x809da9c,%ebx
lea    0x200(%edx),%ecx
test   %ebx,%ebx
mov    %ecx,0x1c(%esp)
jne    805b08a <fchmod@plt+0x100ea>
jmp    805b0b4 <fchmod@plt+0x10114>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
test   %esi,%esi
jne    805b088 <fchmod@plt+0x100e8>
mov    0x4(%edi),%eax
mov    0x8(%edi),%edx
movl   $0x0,0x809da9c
00
movl   $0x809da9c,0x4(%esp)
lea    0x1c(%esp),%ecx
movl   $0x8058ec0,(%esp)
call   8059270 <fchmod@plt+0xe2d0>
test   %al,%al
je     805b061 <fchmod@plt+0x100c1>
mov    0x4(%edi),%eax
mov    0x8(%edi),%edx
jmp    805b0be <fchmod@plt+0x1011e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0xd4(%ebx),%ecx
test   %ecx,%ecx
je     805b110 <fchmod@plt+0x10170>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
call   8058e00 <fchmod@plt+0xde60>
test   %eax,%eax
mov    %eax,%esi
je     805b104 <fchmod@plt+0x10164>
mov    0x4(%eax),%edx
test   %edx,%edx
je     805b104 <fchmod@plt+0x10164>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805a510 <fchmod@plt+0xf570>
test   %al,%al
jne    805b104 <fchmod@plt+0x10164>
mov    0x20(%esp),%eax
call   8058ba0 <fchmod@plt+0xdc00>
test   %al,%al
jne    805b104 <fchmod@plt+0x10164>
mov    0xcc(%ebx),%eax
lea    0xcc(%ebx),%edi
test   %eax,%eax
je     805b16f <fchmod@plt+0x101cf>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   *0x4(%esi)
jmp    805b104 <fchmod@plt+0x10164>
mov    %edi,%eax
call   8059570 <fchmod@plt+0xe5d0>
jmp    805b153 <fchmod@plt+0x101b3>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x3c(%esp),%edi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%esi
cmp    $0x0,%edi
jl     805b1a8 <fchmod@plt+0x10208>
jle    805b241 <fchmod@plt+0x102a1>
call   8056010 <fchmod@plt+0xb070>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x200,%ebx
mov    $0x201,%edx
mov    $0x200,%eax
mov    $0x200,%esi
xor    %edi,%edi
mov    0x30(%esp),%ecx
mov    %eax,0x4(%ecx)
mov    %edx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x30(%esp),%edx
mov    %eax,0x8(%edx)
xor    %edx,%edx
movb   $0x0,(%eax,%ebx,1)
lea    0x0(%esi),%esi
cmp    $0x200,%esi
mov    $0x200,%ebx
cmovbe %esi,%ebx
test   %ebp,%ebp
je     805b264 <fchmod@plt+0x102c4>
mov    0x30(%esp),%ecx
mov    %edx,%eax
mov    %edx,0xc(%esp)
add    0x8(%ecx),%eax
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    %ebp,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    0xc(%esp),%edx
mov    %ebx,%ecx
add    %ebx,%edx
xor    %ebx,%ebx
sub    %ecx,%esi
sbb    %ebx,%edi
mov    %eax,%ebp
cmp    $0x0,%edi
jl     805b238 <fchmod@plt+0x10298>
jg     805b1e0 <fchmod@plt+0x10240>
cmp    $0x0,%esi
ja     805b1e0 <fchmod@plt+0x10240>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
nop
ret
jl     805b24f <fchmod@plt+0x102af>
cmp    $0xfffffdfe,%esi
ja     805b19e <fchmod@plt+0x101fe>
add    $0x200,%esi
adc    $0x0,%edi
mov    %esi,%eax
lea    0x1(%esi),%edx
mov    %esi,%ebx
jmp    805b1be <fchmod@plt+0x1021e>
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x809daa0,%ebx
mov    0x30(%esp),%esi
test   %ebx,%ebx
je     805b2cb <fchmod@plt+0x1032b>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%edx
mov    %esi,%ecx
mov    0x8(%ebx),%eax
call   8059840 <fchmod@plt+0xe8a0>
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    805b2b8 <fchmod@plt+0x10318>
mov    (%esi),%eax
mov    0x8(%eax),%ebx
mov    0xc(%eax),%edx
cmp    %ebx,%edx
je     805b310 <fchmod@plt+0x10370>
mov    0x18(%eax),%ecx
mov    0x4(%eax),%edi
add    %ecx,%edx
not    %ecx
and    %ecx,%edx
mov    0x10(%eax),%ecx
mov    %edx,%ebp
sub    %edi,%ebp
mov    %ebp,0xc(%esp)
mov    %ecx,%ebp
sub    %edi,%ebp
cmp    %ebp,0xc(%esp)
mov    %edx,0xc(%eax)
jle    805b300 <fchmod@plt+0x10360>
mov    %ecx,0xc(%eax)
mov    %ecx,%edx
mov    %edx,0x8(%eax)
mov    %ebx,0x8(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
orb    $0x2,0x28(%eax)
jmp    805b2d7 <fchmod@plt+0x10337>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805b368 <fchmod@plt+0x103c8>
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   804a6b0 <obstack_free@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    805b34e <fchmod@plt+0x103ae>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x3c(%esp),%esi
mov    %eax,%edi
mov    %edi,%edx
mov    0x4(%esi),%ebp
cmp    $0x67,%dl
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
je     805b4e8 <fchmod@plt+0x10548>
cmp    $0x78,%dl
je     805b4d0 <fchmod@plt+0x10530>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8052230 <fchmod@plt+0x7290>
movzbl 0xc(%esp),%edx
mov    %dl,0x9c(%eax)
mov    %eax,(%esp)
call   8052510 <fchmod@plt+0x7570>
mov    0x3c(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,%ebx
call   804d410 <fchmod@plt+0x2470>
cmp    $0x1ff,%ebp
ja     805b448 <fchmod@plt+0x104a8>
mov    %ebx,%esi
mov    %eax,%ebx
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <memcpy@plt>
mov    $0x200,%eax
sub    %ebp,%eax
add    %ebx,%ebp
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804aa80 <memset@plt>
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   805b320 <fchmod@plt+0x10380>
cmpb   $0x67,0xc(%esp)
jne    805b440 <fchmod@plt+0x104a0>
addl   $0x1,0x809daac
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   $0x1,%al
mov    %eax,%edi
mov    %ebx,%esi
mov    $0x200,%edx
jne    805b4b8 <fchmod@plt+0x10518>
test   $0x2,%edi
jne    805b4a0 <fchmod@plt+0x10500>
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     805b474 <fchmod@plt+0x104d4>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%edx
je     805b480 <fchmod@plt+0x104e0>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
sub    $0x200,%ebp
add    $0x200,%ebx
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
test   %ebp,%ebp
jne    805b3e0 <fchmod@plt+0x10440>
jmp    805b426 <fchmod@plt+0x10486>
xchg   %ax,%ax
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %cx,-0x2(%edi)
jmp    805b45d <fchmod@plt+0x104bd>
lea    0x0(%esi),%esi
movzbl (%ebx),%edx
lea    0x1(%eax),%edi
lea    0x1(%ebx),%esi
mov    %dl,(%eax)
mov    $0x1ff,%edx
jmp    805b455 <fchmod@plt+0x104b5>
lea    0x0(%esi),%esi
mov    0x809da94,%edx
test   %edx,%edx
cmovne 0x809da90,%eax
jmp    805b3b0 <fchmod@plt+0x10410>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809da88,%ecx
test   %ecx,%ecx
cmovne 0x809da84,%eax
jmp    805b3b0 <fchmod@plt+0x10410>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809daa4,%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
je     805b533 <fchmod@plt+0x10593>
mov    (%esi),%eax
test   %eax,%eax
je     805b57e <fchmod@plt+0x105de>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%edx
mov    %esi,%ecx
mov    0x8(%ebx),%eax
call   8059840 <fchmod@plt+0xe8a0>
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    805b520 <fchmod@plt+0x10580>
mov    (%esi),%edx
test   %edx,%edx
je     805b578 <fchmod@plt+0x105d8>
mov    %esi,(%esp)
call   805b2a0 <fchmod@plt+0x10300>
call   805ac80 <fchmod@plt+0xfce0>
mov    %esi,0xc(%esp)
movl   $0x67,(%esp)
mov    %eax,%ebx
mov    0x809e49c,%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   805b380 <fchmod@plt+0x103e0>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    804a4c0 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%eax
call   8059570 <fchmod@plt+0xe5d0>
mov    0x809daa4,%ebx
test   %ebx,%ebx
je     805b533 <fchmod@plt+0x10593>
jmp    805b520 <fchmod@plt+0x10580>
jmp    805b5a0 <fchmod@plt+0x10600>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
mov    0x8(%ebx),%eax
test   %eax,%eax
je     805b5e0 <fchmod@plt+0x10640>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%ebx),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     805b620 <fchmod@plt+0x10680>
mov    %ebp,(%esp)
xor    %edi,%edi
call   804a950 <strlen@plt>
add    %eax,0xc(%ebx)
adc    %edi,0x10(%ebx)
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
lea    0x4(%ebx),%edx
mov    %ebp,%ecx
mov    %eax,0x30(%esp)
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80595c0 <fchmod@plt+0xe620>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   8059570 <fchmod@plt+0xe5d0>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
jmp    805b5ea <fchmod@plt+0x1064a>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edi
mov    0x84(%esp),%eax
mov    0x8(%edi),%ecx
mov    %eax,0x38(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    %edi,0x34(%esp)
test   %ecx,%ecx
je     805b680 <fchmod@plt+0x106e0>
mov    0x5c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    805b8d5 <fchmod@plt+0x10935>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
mov    %edi,%eax
test   %edx,%edx
je     805b8ca <fchmod@plt+0x1092a>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    0x34(%esp),%ebx
mov    0xc(%ebx),%edi
mov    0x10(%ebx),%ebp
mov    %edi,0x28(%esp)
addl   $0x3,0x28(%esp)
mov    %ebp,0x2c(%esp)
adcl   $0x0,0x2c(%esp)
xor    %edx,%edx
add    %eax,0x28(%esp)
adc    %edx,0x2c(%esp)
xor    %esi,%esi
xor    %edi,%edi
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
jmp    805b6d8 <fchmod@plt+0x10738>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x20(%esp)
mov    %ebx,0x24(%esp)
lea    0x47(%esp),%eax
mov    0x20(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x2c(%esp),%edx
add    %esi,%eax
mov    %eax,(%esp)
adc    %edi,%edx
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    0x5b(%esp),%edx
mov    %esi,0x20(%esp)
mov    0x20(%esp),%esi
mov    %edi,0x24(%esp)
sub    %eax,%edx
mov    %edx,%ebx
xor    %edx,%esi
sar    $0x1f,%ebx
xor    %ebx,%edi
or     %esi,%edi
jne    805b6d0 <fchmod@plt+0x10730>
mov    0x38(%esp),%edi
mov    %eax,%ebp
mov    %edx,0x20(%esp)
mov    %ebx,0x24(%esp)
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
add    $0x2,%ecx
adc    $0x0,%ebx
xor    %edx,%edx
add    %eax,%ecx
adc    %edx,%ebx
mov    %ecx,%esi
test   %ebx,%ebx
je     805b7f8 <fchmod@plt+0x10858>
movl   $0x5,0x8(%esp)
lea    0x47(%esp),%ebx
movl   $0x8087b8c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x34(%esp),%eax
movl   $0x2,0x809e084
00
mov    (%eax),%eax
mov    0x8(%eax),%ecx
mov    0xc(%eax),%edx
cmp    %ecx,%edx
je     805b8c1 <fchmod@plt+0x10921>
mov    0x18(%eax),%ebx
mov    0x10(%eax),%esi
add    %ebx,%edx
not    %ebx
and    %ebx,%edx
mov    0x4(%eax),%ebx
mov    %esi,%edi
mov    %edx,%ebp
mov    %edx,0xc(%eax)
sub    %ebx,%ebp
sub    %ebx,%edi
cmp    %edi,%ebp
jle    805b7d4 <fchmod@plt+0x10834>
mov    %esi,0xc(%eax)
mov    %esi,%edx
cmp    %ebx,%ecx
mov    %edx,0x8(%eax)
jbe    805b890 <fchmod@plt+0x108f0>
cmp    %esi,%ecx
jae    805b890 <fchmod@plt+0x108f0>
mov    %ecx,0x8(%eax)
mov    %ecx,0xc(%eax)
xor    %eax,%eax
jmp    805b660 <fchmod@plt+0x106c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %ecx,0x28(%esp)
mov    (%eax),%edi
add    $0x4,%eax
mov    %eax,0x3c(%esp)
mov    0x10(%edi),%edx
mov    0xc(%edi),%eax
sub    %eax,%edx
cmp    %edx,%ecx
mov    %eax,0x20(%esp)
mov    %edi,%eax
jg     805b8a3 <fchmod@plt+0x10903>
mov    0x28(%esp),%ecx
mov    0x20(%esp),%edx
mov    0x34(%esp),%ebx
add    %ecx,%edx
mov    %edx,0xc(%edi)
mov    0x3c(%esp),%edx
add    %ecx,0x4(%ebx)
mov    $0xa,%ecx
call   8059610 <fchmod@plt+0xe670>
mov    0xc(%ebx),%eax
mov    (%ebx),%edx
mov    %eax,%ebx
not    %ebx
sub    %esi,%ebx
add    0xc(%edx),%ebx
mov    %eax,0x8(%esp)
add    %ebx,%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804a4b0 <memmove@plt>
mov    %ebx,(%esp)
mov    %ebp,0x4(%esp)
call   804a600 <stpcpy@plt>
mov    0x38(%esp),%ebx
movb   $0x20,(%eax)
add    $0x1,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a600 <stpcpy@plt>
movb   $0x3d,(%eax)
mov    $0x1,%eax
jmp    805b660 <fchmod@plt+0x106c0>
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804a6b0 <obstack_free@plt>
xor    %eax,%eax
jmp    805b660 <fchmod@plt+0x106c0>
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x34(%esp),%eax
mov    0xc(%edi),%ebx
mov    (%eax),%eax
mov    %ebx,0x20(%esp)
jmp    805b81f <fchmod@plt+0x1087f>
orb    $0x2,0x28(%eax)
jmp    805b7b1 <fchmod@plt+0x10811>
call   8059570 <fchmod@plt+0xe5d0>
nop
jmp    805b68c <fchmod@plt+0x106ec>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%ecx
mov    0x14(%ecx),%eax
mov    0x18(%ecx),%edx
add    0xc(%ecx),%eax
adc    0x10(%ecx),%edx
mov    0x24(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
call   80862d0 <argp_parse+0xe390>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    0xc(%esi),%edx
mov    0x10(%esi),%ecx
xor    0x10(%ebx),%ecx
xor    0xc(%ebx),%edx
or     %edx,%ecx
je     805b940 <fchmod@plt+0x109a0>
pop    %ebx
pop    %esi
ret
nop
mov    0x14(%esi),%edx
mov    0x18(%esi),%eax
xor    0x18(%ebx),%eax
xor    0x14(%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    0x8(%eax),%esi
mov    0x4(%eax),%eax
test   %eax,%eax
je     805b998 <fchmod@plt+0x109f8>
mov    (%ebx),%eax
mov    (%eax),%edi
add    %esi,%edi
cmpb   $0x0,(%edi)
je     805b9b8 <fchmod@plt+0x10a18>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%esi,%eax,1),%eax
mov    %eax,0x8(%ebx)
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%ebx),%edx
xor    %eax,%eax
cmp    0x8(%edx),%esi
jae    805b98e <fchmod@plt+0x109ee>
mov    0xc(%edx),%eax
mov    (%eax,%esi,4),%eax
add    $0x1,%esi
mov    %esi,0x8(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
sub    $0x1,%eax
pop    %edi
ret
nop
xor    %eax,%eax
jmp    805b98e <fchmod@plt+0x109ee>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804a950 <strlen@plt>
mov    0x809dac0,%edi
test   %edi,%edi
mov    %eax,0x1c(%esp)
je     805ba45 <fchmod@plt+0x10aa5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
lea    0x38(%edi),%edx
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edx,(%esp)
call   80626b0 <fchmod@plt+0x17710>
mov    (%edi),%edi
test   %edi,%edi
jne    805ba20 <fchmod@plt+0x10a80>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804a950 <strlen@plt>
movl   $0x3c,(%esp)
mov    %eax,%esi
call   8081640 <argp_parse+0x9700>
cmp    $0x1,%esi
mov    %eax,%ebx
movl   $0x0,(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0x1c(%eax)
movl   $0x0,0x2c(%eax)
movl   $0x0,0x28(%eax)
jbe    805baa5 <fchmod@plt+0x10b05>
cmpb   $0x2f,-0x1(%edi,%esi,1)
lea    -0x1(%esi),%eax
cmove  %eax,%esi
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x38(%ebx)
mov    %eax,0xc(%esp)
call   804a4e0 <memcpy@plt>
mov    0xc(%esp),%edx
mov    %ebx,%eax
mov    %ebp,0x34(%ebx)
movl   $0x0,0x30(%ebx)
movb   $0x0,(%edx,%esi,1)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809dab8,%edx
test   %edx,%edx
je     805bb40 <fchmod@plt+0x10ba0>
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    %eax,0x4(%esp)
mov    0x809e2c4,%eax
mov    %eax,(%esp)
call   80625d0 <fchmod@plt+0x17630>
mov    %eax,%edx
mov    %ebx,%eax
call   805ba50 <fchmod@plt+0x10ab0>
mov    %eax,%ebx
mov    %eax,0x4(%esp)
mov    0x809dab8,%eax
mov    %eax,(%esp)
call   807a5f0 <argp_parse+0x26b0>
mov    %eax,%esi
mov    %ebx,%eax
call   805b9c0 <fchmod@plt+0x10a20>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    %eax,0x8(%esp)
mov    0x809dab4,%eax
mov    %edx,0xc(%esp)
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
test   %eax,%eax
je     805bbb8 <fchmod@plt+0x10c18>
xor    %edx,%edx
mov    $0x808d3ee,%eax
call   805ba50 <fchmod@plt+0x10ab0>
mov    0xc(%esp),%edx
mov    %eax,%ebx
mov    0x8(%esp),%eax
mov    %edx,0x10(%ebx)
mov    %esi,0x14(%ebx)
mov    %edi,0x18(%ebx)
mov    %eax,0xc(%ebx)
mov    0x809dab4,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807a5f0 <argp_parse+0x26b0>
mov    %eax,%esi
mov    %ebx,%eax
call   805b9c0 <fchmod@plt+0x10a20>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805bbad <fchmod@plt+0x10c0d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
jmp    804a3f0 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %edx,0xc(%esp)
je     805bc38 <fchmod@plt+0x10c98>
mov    0x8(%eax),%esi
xor    %ebp,%ebp
mov    0xc(%eax),%eax
mov    %eax,0x8(%esp)
jmp    805bc05 <fchmod@plt+0x10c65>
lea    0x0(%esi),%esi
je     805bc48 <fchmod@plt+0x10ca8>
lea    0x1(%ebx),%ebp
cmp    %esi,%ebp
jae    805bc38 <fchmod@plt+0x10c98>
mov    0x8(%esp),%eax
lea    (%esi,%ebp,1),%ebx
shr    %ebx
lea    (%eax,%ebx,4),%edi
lea    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805bbc0 <fchmod@plt+0x10c20>
test   %eax,%eax
jns    805bc00 <fchmod@plt+0x10c60>
cmp    %ebp,%ebx
jbe    805bc38 <fchmod@plt+0x10c98>
mov    %ebx,%esi
nop
jmp    805bc09 <fchmod@plt+0x10c69>
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %edi,%edi
je     805bc38 <fchmod@plt+0x10c98>
mov    (%edi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
sub    $0x1,%eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
movzbl (%eax),%edx
mov    %eax,0x1c(%esp)
test   %dl,%dl
je     805bdaf <fchmod@plt+0x10e0f>
mov    %eax,%ebx
mov    $0x1,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
nop
mov    %ebx,(%esp)
mov    %edx,0x10(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%ebp
add    %ebp,%edi
test   %esi,%esi
je     805bcec <fchmod@plt+0x10d4c>
mov    0x10(%esp),%edx
mov    %esi,(%esp)
movsbl %dl,%edx
mov    %edx,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     805bcf1 <fchmod@plt+0x10d51>
addl   $0x1,0x18(%esp)
add    %ebp,%ebx
movzbl (%ebx),%edx
addl   $0x1,0x14(%esp)
test   %dl,%dl
jne    805bcc0 <fchmod@plt+0x10d20>
mov    0x18(%esp),%edx
lea    0x10(%edi),%eax
lea    0x1(%edx),%ebx
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebp
mov    %eax,0x10(%esp)
add    $0x10,%eax
mov    %eax,0x0(%ebp)
mov    %edi,0x8(%esp)
mov    0x1c(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
xor    %edi,%edi
call   804a4e0 <memcpy@plt>
mov    0x14(%esp),%eax
mov    %eax,0x4(%ebp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%ebp)
mov    %ebx,(%esp)
movl   $0x4,0x4(%esp)
call   8081820 <argp_parse+0x98e0>
mov    0x0(%ebp),%ebx
mov    %eax,0xc(%ebp)
movsbl (%ebx),%ecx
mov    %eax,%ebp
test   %cl,%cl
je     805bd9b <fchmod@plt+0x10dfb>
test   %esi,%esi
je     805bd74 <fchmod@plt+0x10dd4>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     805bd85 <fchmod@plt+0x10de5>
lea    0x1(%ebx),%eax
mov    %eax,0x0(%ebp,%edi,4)
mov    0x10(%esp),%eax
add    $0x1,%edi
mov    0xc(%eax),%ebp
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebx,%eax,1),%ebx
movsbl (%ebx),%ecx
test   %cl,%cl
jne    805bd60 <fchmod@plt+0x10dc0>
shl    $0x2,%edi
movl   $0x0,0x0(%ebp,%edi,1)
mov    0x10(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%ebx
mov    $0x11,%eax
mov    $0x1,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
jmp    805bd09 <fchmod@plt+0x10d69>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
mov    0x60(%esp),%ecx
mov    %ebx,0x4(%esp)
mov    0x64(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x5c(%esp),%edx
mov    %ecx,0x2c(%esp)
mov    %eax,0x20(%esp)
mov    0x809e2c4,%eax
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   80625d0 <fchmod@plt+0x17630>
mov    %eax,%edx
mov    %ebx,%eax
call   805ba50 <fchmod@plt+0x10ab0>
mov    0x2c(%esp),%ecx
mov    %eax,%ebx
mov    0x809dabc,%eax
test   %eax,%eax
je     805bf30 <fchmod@plt+0x10f90>
mov    %ebx,(%eax)
mov    0x18(%esp),%eax
test   %cl,%cl
mov    0x1c(%esp),%edx
mov    %ebx,0x809dabc
mov    %esi,0x4(%ebx)
mov    %eax,0xc(%ebx)
mov    0x20(%esp),%eax
mov    %edx,0x10(%ebx)
mov    0x24(%esp),%edx
mov    %edi,0x8(%ebx)
movl   $0x1,0x24(%ebx)
mov    %eax,0x14(%ebx)
mov    %edx,0x18(%ebx)
je     805be7f <fchmod@plt+0x10edf>
orl    $0x2,0x28(%ebx)
mov    %ebp,%eax
test   %al,%al
je     805be89 <fchmod@plt+0x10ee9>
orl    $0x4,0x28(%ebx)
mov    0x68(%esp),%eax
test   %eax,%eax
je     805bee0 <fchmod@plt+0x10f40>
mov    0x68(%esp),%eax
mov    $0x8087e4c,%edx
call   805bc90 <fchmod@plt+0x10cf0>
mov    %eax,0x1c(%ebx)
mov    0x809dab8,%eax
test   %eax,%eax
je     805bef0 <fchmod@plt+0x10f50>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807ae50 <argp_parse+0x2f10>
test   %eax,%eax
je     805bf25 <fchmod@plt+0x10f85>
mov    0x809dab4,%eax
test   %eax,%eax
je     805bf40 <fchmod@plt+0x10fa0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807ae50 <argp_parse+0x2f10>
test   %eax,%eax
je     805bf25 <fchmod@plt+0x10f85>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x809dab8,%eax
movl   $0x0,0x1c(%ebx)
test   %eax,%eax
jne    805beab <fchmod@plt+0x10f0b>
movl   $0x0,0x10(%esp)
movl   $0x805bc60,0xc(%esp)
movl   $0x805c5e0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807a840 <argp_parse+0x2900>
test   %eax,%eax
mov    %eax,0x809dab8
jne    805beab <fchmod@plt+0x10f0b>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
mov    %ebx,0x809dac0
jmp    805be48 <fchmod@plt+0x10ea8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x805b920,0xc(%esp)
movl   $0x805b8e0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807a840 <argp_parse+0x2900>
test   %eax,%eax
mov    %eax,0x809dab4
jne    805bec4 <fchmod@plt+0x10f24>
jmp    805bf25 <fchmod@plt+0x10f85>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x4c,%esp
mov    0x30(%edx),%edi
mov    %ecx,0x20(%esp)
call   805baf0 <fchmod@plt+0x10b50>
shr    $0x1f,%edi
test   %eax,%eax
mov    %eax,%ebx
je     805c258 <fchmod@plt+0x112b8>
testb  $0x1,0x28(%eax)
je     805bfd7 <fchmod@plt+0x11037>
testb  $0x20,0x20(%esp)
jne    805bfc8 <fchmod@plt+0x11028>
mov    0x60(%esp),%eax
movb   $0x4e,(%eax)
add    $0x4c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x38(%eax),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %ebp,0x4(%esp)
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    805bfb1 <fchmod@plt+0x11011>
cmpb   $0x0,0x809e2e0
jne    805c1a8 <fchmod@plt+0x11208>
mov    0x84(%esi),%eax
mov    0x88(%esi),%ecx
mov    0x18(%ebx),%edx
mov    %eax,0x28(%esp)
xor    0x14(%ebx),%eax
xor    %ecx,%edx
or     %eax,%edx
je     805c240 <fchmod@plt+0x112a0>
mov    0x2c(%esi),%eax
mov    0x30(%esi),%edx
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    0x24(%esp),%eax
call   805bb50 <fchmod@plt+0x10bb0>
test   %eax,%eax
je     805c318 <fchmod@plt+0x11378>
mov    0x38(%eax),%ecx
mov    %ebp,0x4(%esp)
mov    %eax,0x28(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
call   804a3f0 <strcmp@plt>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%edx
test   %eax,%eax
je     805c07d <fchmod@plt+0x110dd>
testb  $0x20,0x809d641
jne    805c398 <fchmod@plt+0x113f8>
orl    $0x10,0x28(%ebx)
mov    %ecx,%eax
mov    %edx,0x2c(%ebx)
mov    %ebp,%edx
call   805b9f0 <fchmod@plt+0x10a50>
movl   $0x1,0x24(%ebx)
xor    %ecx,%ecx
mov    %edi,%eax
test   %al,%al
mov    0x28(%ebx),%eax
jne    805c1f0 <fchmod@plt+0x11250>
or     $0x4,%eax
mov    %eax,0x28(%ebx)
cmpb   $0x0,0x809e301
je     805c0f8 <fchmod@plt+0x11158>
mov    0xe8(%esi),%eax
test   %eax,%eax
je     805c0f8 <fchmod@plt+0x11158>
mov    0x2c(%esi),%edx
mov    0x30(%esi),%edi
xor    0x30(%eax),%edi
xor    0x2c(%eax),%edx
or     %edx,%edi
je     805c0f8 <fchmod@plt+0x11158>
testb  $0x4,0x809d642
jne    805c348 <fchmod@plt+0x113a8>
mov    0x1c(%ebx),%edi
xor    %eax,%eax
movl   $0x0,0x24(%ebx)
test   %edi,%edi
je     805c128 <fchmod@plt+0x11188>
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %edi,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%ebx),%eax
movl   $0x0,0x1c(%ebx)
jmp    805c128 <fchmod@plt+0x11188>
testb  $0x10,0x20(%esp)
je     805c114 <fchmod@plt+0x11174>
mov    0x20(%esp),%eax
and    $0x3,%eax
test   %eax,%eax
mov    %eax,0x24(%ebx)
jne    805c114 <fchmod@plt+0x11174>
mov    0x60(%esp),%eax
movb   $0x4e,(%eax)
test   %cl,%cl
je     805c125 <fchmod@plt+0x11185>
testb  $0x20,0x809d641
jne    805c1f8 <fchmod@plt+0x11258>
mov    0x24(%ebx),%eax
orl    $0x1,0x28(%ebx)
test   %eax,%eax
je     805bfb8 <fchmod@plt+0x11018>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8053870 <fchmod@plt+0x88d0>
cmp    $0x2,%eax
je     805c458 <fchmod@plt+0x114b8>
cmp    $0x3,%eax
je     805c410 <fchmod@plt+0x11470>
cmp    $0x1,%eax
jne    805bfb8 <fchmod@plt+0x11018>
movl   $0x5,0x8(%esp)
movl   $0x8087112,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8052000 <fchmod@plt+0x7060>
mov    0x3c(%esp),%eax
movl   $0x0,0x24(%ebx)
mov    %eax,0x30(%ebx)
jmp    805bfb8 <fchmod@plt+0x11018>
lea    0x0(%esi),%esi
testb  $0x2,0x28(%ebx)
je     805c1b8 <fchmod@plt+0x11218>
mov    %edi,%eax
test   %al,%al
jne    805bff7 <fchmod@plt+0x11057>
mov    0x30(%esi),%edx
mov    0x10(%ebx),%ecx
mov    0x2c(%esi),%eax
xor    %edx,%ecx
mov    %ecx,0x24(%esp)
mov    0xc(%ebx),%ecx
xor    %eax,%ecx
or     0x24(%esp),%ecx
je     805bff7 <fchmod@plt+0x11057>
mov    0x84(%esi),%ecx
mov    %eax,0x24(%esp)
mov    %ecx,0x28(%esp)
mov    0x88(%esi),%ecx
jmp    805c021 <fchmod@plt+0x11081>
nop
or     $0x2,%eax
jmp    805c093 <fchmod@plt+0x110f3>
mov    %ebp,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088028,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    805c125 <fchmod@plt+0x11185>
nop
movl   $0x1,0x24(%ebx)
mov    0x28(%ebx),%eax
xor    %ecx,%ecx
jmp    805c093 <fchmod@plt+0x110f3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esi),%ecx
mov    0x88(%esi),%ebx
mov    0x30(%esi),%edx
mov    0x2c(%esi),%eax
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   805bb50 <fchmod@plt+0x10bb0>
mov    0x78(%esi),%ecx
mov    0x88(%esi),%ebx
mov    0x74(%esi),%edx
movl   $0x0,0x18(%esp)
mov    %ecx,0x28(%esp)
mov    0x84(%esi),%ecx
mov    %ebx,0xc(%esp)
mov    0x30(%esi),%ebx
mov    %eax,0x24(%esp)
mov    %ebp,%eax
movl   $0x1,0x14(%esp)
mov    %ecx,0x8(%esp)
mov    0x2c(%esi),%ecx
mov    %ebx,0x4(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,(%esp)
mov    0x28(%esp),%ecx
call   805bde0 <fchmod@plt+0x10e40>
mov    %eax,%ebx
mov    0x24(%esp),%eax
test   %eax,%eax
je     805c494 <fchmod@plt+0x114f4>
mov    0x38(%eax),%edi
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     805c306 <fchmod@plt+0x11366>
testb  $0x20,0x809d641
jne    805c4c2 <fchmod@plt+0x11522>
mov    0x24(%esp),%eax
mov    %ebp,%edx
orl    $0x10,0x28(%ebx)
mov    %eax,0x2c(%ebx)
mov    %edi,%eax
call   805b9f0 <fchmod@plt+0x10a50>
movl   $0x1,0x24(%ebx)
xor    %ecx,%ecx
jmp    805c099 <fchmod@plt+0x110f9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esi),%eax
mov    $0x1,%ecx
mov    0x30(%esi),%edx
movl   $0x2,0x24(%ebx)
mov    %eax,0xc(%ebx)
mov    0x84(%esi),%eax
mov    %edx,0x10(%ebx)
mov    0x88(%esi),%edx
mov    %eax,0x14(%ebx)
mov    %edx,0x18(%ebx)
jmp    805c086 <fchmod@plt+0x110e6>
nop
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087ff0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    805c0c9 <fchmod@plt+0x11129>
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x2c(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %ebp,(%esp)
mov    %eax,0x24(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087fc8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x24(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x10(%esp)
mov    0x28(%esp),%ecx
mov    %eax,0x8(%esp)
mov    %ecx,0xc(%esp)
call   804a7c0 <error@plt>
mov    0x2c(%esp),%edx
mov    0x38(%edx),%ecx
jmp    805c06d <fchmod@plt+0x110cd>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80870f1,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8052000 <fchmod@plt+0x7060>
mov    0x60(%esp),%eax
movb   $0x4e,(%eax)
movl   $0x0,0x24(%ebx)
jmp    805bfb8 <fchmod@plt+0x11018>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8087112,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8052000 <fchmod@plt+0x7060>
mov    0x3c(%esp),%eax
mov    %eax,0x30(%ebx)
jmp    805bfb8 <fchmod@plt+0x11018>
orl    $0x8,0x28(%ebx)
testb  $0x10,0x809d641
jne    805c52c <fchmod@plt+0x1158c>
mov    0x809e4f0,%edi
mov    $0x2,%eax
test   %edi,%edi
je     805c573 <fchmod@plt+0x115d3>
mov    %eax,0x24(%ebx)
xor    %ecx,%ecx
jmp    805c099 <fchmod@plt+0x110f9>
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %ebp,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087fc8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x24(%esp),%eax
mov    0x38(%eax),%edi
jmp    805c2f2 <fchmod@plt+0x11352>
mov    %ebp,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087e50,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    805c4a5 <fchmod@plt+0x11505>
mov    0x809e2e4,%edx
cmp    %edx,0x74(%esi)
mov    0x78(%esi),%ecx
mov    0x809e2e8,%edi
jl     805c4b8 <fchmod@plt+0x11518>
jg     805c595 <fchmod@plt+0x115f5>
cmp    %edi,%ecx
js     805c4b8 <fchmod@plt+0x11518>
mov    0x809e540,%ecx
mov    $0x1,%eax
test   %ecx,%ecx
je     805c4b8 <fchmod@plt+0x11518>
cmp    0x7c(%esi),%edx
mov    $0x2,%al
mov    0x80(%esi),%ecx
jg     805c4b8 <fchmod@plt+0x11518>
mov    $0x1,%al
jl     805c4b8 <fchmod@plt+0x11518>
mov    %ecx,%eax
sub    %edi,%eax
sar    $0x1f,%eax
not    %eax
add    $0x2,%eax
jmp    805c4b8 <fchmod@plt+0x11518>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,0x4(%esp)
jmp    807a7d0 <argp_parse+0x2890>
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
cmpb   $0x0,(%edx)
jne    805c718 <fchmod@plt+0x11778>
mov    0xc(%ebx),%eax
lea    0x1(%eax),%edx
cmp    0x10(%ebx),%edx
ja     805c6f8 <fchmod@plt+0x11758>
mov    %edx,0xc(%ebx)
movb   $0x52,(%eax)
mov    %edi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%ebp
mov    0xc(%ebx),%eax
lea    (%eax,%ebp,1),%edx
cmp    %edx,0x10(%ebx)
jb     805c6e0 <fchmod@plt+0x11740>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0xc(%ebx),%edx
add    %ebp,%edx
mov    %edx,0xc(%ebx)
cmpb   $0x0,(%esi)
jne    805c6b8 <fchmod@plt+0x11718>
lea    0x1(%edx),%eax
cmp    0x10(%ebx),%eax
ja     805c6a0 <fchmod@plt+0x11700>
mov    %eax,0xc(%ebx)
movb   $0x54,(%edx)
mov    %esi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%edi
mov    0xc(%ebx),%eax
lea    (%eax,%edi,1),%edx
cmp    %edx,0x10(%ebx)
jae    805c685 <fchmod@plt+0x116e5>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    %edi,0xc(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
lea    0x1(%edx),%eax
jmp    805c65a <fchmod@plt+0x116ba>
movzbl 0x809e534,%eax
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    0xc(%ebx),%edx
mov    %eax,%esi
jmp    805c652 <fchmod@plt+0x116b2>
lea    0x0(%esi),%esi
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%eax
jmp    805c635 <fchmod@plt+0x11695>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%eax
lea    0x1(%eax),%edx
jmp    805c615 <fchmod@plt+0x11675>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x809e534,%eax
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    %eax,%edi
jmp    805c606 <fchmod@plt+0x11666>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    0x4(%eax),%eax
cmp    0x8(%esi),%eax
jae    805c803 <fchmod@plt+0x11863>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
lea    0x1(%eax),%edx
xor    %ebp,%ebp
cmp    $0x1,%edx
ja     805c791 <fchmod@plt+0x117f1>
jmp    805c7c0 <fchmod@plt+0x11820>
xchg   %ax,%ax
mov    %ecx,0xc(%ebx)
mov    %al,(%edx)
mov    0x4(%esi),%edx
cmp    0x8(%esi),%edx
jae    805c7f9 <fchmod@plt+0x11859>
lea    0x1(%edx),%eax
mov    %eax,0x4(%esi)
movzbl (%edx),%eax
lea    0x1(%eax),%edx
add    $0x1,%ebp
cmp    $0x1,%edx
jbe    805c7c0 <fchmod@plt+0x11820>
mov    0xc(%ebx),%edx
lea    0x1(%edx),%ecx
cmp    0x10(%ebx),%ecx
jbe    805c770 <fchmod@plt+0x117d0>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
lea    0x1(%edx),%ecx
jmp    805c770 <fchmod@plt+0x117d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebx),%edx
lea    0x1(%edx),%ecx
cmp    0x10(%ebx),%ecx
jbe    805c7e9 <fchmod@plt+0x11849>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0xc(%ebx)
movb   $0x0,(%edx)
mov    %ebp,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   804ac80 <__uflow@plt>
jmp    805c786 <fchmod@plt+0x117e6>
mov    %esi,(%esp)
call   804ac80 <__uflow@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805c762 <fchmod@plt+0x117c2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
mov    0xc0(%esp),%eax
mov    0xc4(%esp),%edx
mov    %eax,0x28(%esp)
mov    0xc8(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0x30(%esp)
mov    0xd0(%esp),%eax
mov    %edx,0x34(%esp)
mov    %eax,0x38(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
mov    0x4(%ebx),%eax
cmp    0x8(%ebx),%eax
jae    805cbb9 <fchmod@plt+0x11c19>
lea    0x1(%eax),%edx
mov    %edx,0x4(%ebx)
movzbl (%eax),%ecx
cmp    $0x2d,%ecx
sete   %dl
xor    %esi,%esi
jmp    805c8c5 <fchmod@plt+0x11925>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%ecx),%edi
cmp    $0x9,%edi
ja     805c960 <fchmod@plt+0x119c0>
cmp    $0x14,%esi
mov    %cl,0x48(%esp,%esi,1)
je     805c8d8 <fchmod@plt+0x11938>
mov    0x4(%ebx),%eax
cmp    0x8(%ebx),%eax
jae    805cb90 <fchmod@plt+0x11bf0>
lea    0x1(%eax),%ecx
mov    %ecx,0x4(%ebx)
movzbl (%eax),%ecx
add    $0x1,%esi
test   %esi,%esi
sete   %al
and    %dl,%al
je     805c898 <fchmod@plt+0x118f8>
mov    %cl,0x48(%esp)
jmp    805c8ad <fchmod@plt+0x1190d>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
lea    0x48(%esp),%edi
call   804a8b0 <ftello64@plt>
lea    0x5d(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c110 <argp_parse+0x41d0>
mov    %eax,%esi
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088048,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %edi,0x1c(%esp)
movl   $0x15,0x18(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
test   %ecx,%ecx
movb   $0x0,0x48(%esp,%esi,1)
js     805cab5 <fchmod@plt+0x11b15>
jne    805cbc8 <fchmod@plt+0x11c28>
mov    0x30(%esp),%eax
lea    0x48(%esp),%esi
mov    0x34(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80627d0 <fchmod@plt+0x17830>
mov    0x38(%esp),%edi
mov    %eax,(%edi)
mov    %edx,0x4(%edi)
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
test   %edi,%edi
je     805ca91 <fchmod@plt+0x11af1>
cmp    $0x22,%edi
jne    805cb18 <fchmod@plt+0x11b78>
lea    0x87(%esp),%eax
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x2c(%esp),%ecx
mov    0x28(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x30(%esp)
lea    0x72(%esp),%eax
mov    %eax,0x8(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   804a8b0 <ftello64@plt>
lea    0x5d(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c110 <argp_parse+0x41d0>
mov    %eax,0x28(%esp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80880c0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0x20(%esp)
mov    %ebp,0x1c(%esp)
mov    %edi,0x14(%esp)
mov    %edx,0x18(%esp)
mov    0x28(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x22,0x4(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    $0x1,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    805cbb4 <fchmod@plt+0x11c14>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
testb  $0x20,(%ebx)
jne    805cba7 <fchmod@plt+0x11c07>
test   %esi,%esi
je     805ca96 <fchmod@plt+0x11af6>
movl   $0x5,0x8(%esp)
movl   $0x808806c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   804a8b0 <ftello64@plt>
lea    0x5d(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c110 <argp_parse+0x41d0>
mov    %eax,0x28(%esp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087e65,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %esi,0x18(%esp)
mov    %ebp,0x14(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    %ebx,(%esp)
mov    %edx,0x3c(%esp)
call   804ac80 <__uflow@plt>
mov    0x3c(%esp),%edx
mov    %eax,%ecx
jmp    805c8c2 <fchmod@plt+0x11922>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f7b0 <fchmod@plt+0x24810>
call   804a610 <__stack_chk_fail@plt>
mov    %ebx,(%esp)
call   804ac80 <__uflow@plt>
mov    %eax,%ecx
jmp    805c889 <fchmod@plt+0x118e9>
mov    %ebx,(%esp)
lea    0x5d(%esp),%ebx
mov    %ecx,0x28(%esp)
call   804a8b0 <ftello64@plt>
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c110 <argp_parse+0x41d0>
mov    %eax,%esi
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808808c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    0x28(%esp),%ecx
lea    0x48(%esp),%edx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
jmp    805c931 <fchmod@plt+0x11991>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%ebx
mov    0x28(%edi),%eax
test   $0x4,%al
je     805ceb0 <fchmod@plt+0x11f10>
test   $0x2,%al
mov    $0x8089f07,%esi
mov    $0x808dcb8,%eax
mov    $0x2,%ebp
cmove  %eax,%esi
add    $0x1,%esi
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    805ced0 <fchmod@plt+0x11f30>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movzbl -0x1(%esi),%edx
mov    %dl,(%eax)
add    $0x1,%esi
sub    $0x1,%ebp
jne    805cc6d <fchmod@plt+0x11ccd>
lea    0x27(%esp),%esi
mov    %esi,0x18(%esp)
movl   $0x7fffffff,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x80000000,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a950 <strlen@plt>
mov    %ebp,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    %esi,0x8(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a950 <strlen@plt>
mov    %ebp,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    %esi,0x18(%esp)
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    0x10(%edi),%edx
mov    0xc(%edi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a950 <strlen@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    %esi,0x18(%esp)
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    0x18(%edi),%edx
mov    0x14(%edi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    %eax,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
mov    %esi,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x38(%edi),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    %esi,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x1c(%edi),%esi
test   %esi,%esi
je     805ce68 <fchmod@plt+0x11ec8>
movl   $0xc,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%edi
mov    %esi,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
jmp    805ce53 <fchmod@plt+0x11eb3>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
lea    0x1(%eax),%edx
mov    %edx,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    %edi,%eax
call   805b960 <fchmod@plt+0x109c0>
test   %eax,%eax
mov    %eax,%esi
jne    805ce30 <fchmod@plt+0x11e90>
mov    %edi,(%esp)
call   804a4c0 <free@plt>
mov    0x14(%ebx),%eax
mov    $0x2,%esi
mov    $0x8088340,%edi
cmp    0x18(%ebx),%eax
jae    805ce97 <fchmod@plt+0x11ef7>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movzbl (%edi),%edx
lea    0x1(%edi),%ecx
mov    %dl,(%eax)
sub    $0x1,%esi
je     805ceb0 <fchmod@plt+0x11f10>
mov    0x14(%ebx),%eax
mov    %ecx,%edi
cmp    0x18(%ebx),%eax
jb     805ce7a <fchmod@plt+0x11eda>
movzbl (%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804acc0 <__overflow@plt>
cmp    $0xffffffff,%eax
je     805ceb0 <fchmod@plt+0x11f10>
lea    0x1(%edi),%ecx
jmp    805ce88 <fchmod@plt+0x11ee8>
mov    (%ebx),%eax
shr    $0x5,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805cef0 <fchmod@plt+0x11f50>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl -0x1(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804acc0 <__overflow@plt>
cmp    $0xffffffff,%eax
je     805cc8d <fchmod@plt+0x11ced>
jmp    805cc85 <fchmod@plt+0x11ce5>
xchg   %ax,%ax
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x58(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    %ebx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x18(%esp)
mov    %eax,%esi
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    %edi,(%esp)
call   804c750 <fchmod@plt+0x17b0>
test   %ebx,%ebx
je     805cf84 <fchmod@plt+0x11fe4>
nop
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%edi
je     805cfa8 <fchmod@plt+0x12008>
mov    %edi,(%esp)
call   804cd40 <fchmod@plt+0x1da0>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
cmp    %ebx,%eax
cmova  %ebx,%eax
mov    %eax,%ebp
mov    %eax,0x8(%esp)
add    %ebp,%esi
call   804a4e0 <memcpy@plt>
lea    -0x1(%edi,%ebp,1),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
sub    %ebp,%ebx
jne    805cf38 <fchmod@plt+0x11f98>
call   804c780 <fchmod@plt+0x17e0>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%ecx
movb   $0x1,0xe1(%eax)
mov    %ecx,0xe4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805cf53 <fchmod@plt+0x11fb3>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x34,%esp
mov    $0x8087fb4,%edx
lea    0x20(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ebx,%eax
movl   $0x7fffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80000000,(%esp)
movl   $0xffffffff,0x4(%esp)
call   805c820 <fchmod@plt+0x11880>
test   %al,%al
je     805d07a <fchmod@plt+0x120da>
lea    0x28(%esp),%eax
mov    $0x8087fc2,%edx
mov    %eax,0x10(%esp)
mov    %ebx,%eax
movl   $0x3b9ac9ff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805c820 <fchmod@plt+0x11880>
test   %al,%al
je     805d07a <fchmod@plt+0x120da>
mov    0x20(%esp),%eax
mov    %eax,(%esi)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esi)
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x808806c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     805d0fd <fchmod@plt+0x1215d>
xor    %esi,%esi
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
add    $0x1,%eax
add    %eax,%ebx
add    %eax,%esi
cmpb   $0x0,(%ebx)
jne    805d0e0 <fchmod@plt+0x12140>
lea    0x1(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    $0x1,%eax
jmp    805d0f7 <fchmod@plt+0x12157>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x809dab8,%eax
test   %eax,%eax
je     805d125 <fchmod@plt+0x12185>
mov    %eax,(%esp)
call   807a980 <argp_parse+0x2a40>
mov    0x809dab4,%eax
test   %eax,%eax
je     805d136 <fchmod@plt+0x12196>
mov    %eax,(%esp)
call   807a980 <argp_parse+0x2a40>
mov    0x809dac0,%eax
test   %eax,%eax
jne    805d14a <fchmod@plt+0x121aa>
jmp    805d155 <fchmod@plt+0x121b5>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    (%eax),%ebx
call   805b9c0 <fchmod@plt+0x10a20>
test   %ebx,%ebx
jne    805d148 <fchmod@plt+0x121a8>
movl   $0x0,0x809dabc
00
movl   $0x0,0x809dac0
00
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
add    $0x38,%eax
mov    %eax,0x4(%esp)
jmp    80626b0 <fchmod@plt+0x17710>
push   %esi
push   %ebx
sub    $0x74,%esp
mov    0x80(%esp),%esi
mov    (%esi),%eax
call   805baf0 <fchmod@plt+0x10b50>
test   %eax,%eax
mov    %eax,%ebx
je     805d1c9 <fchmod@plt+0x12229>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xf0(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    805d1d0 <fchmod@plt+0x12230>
mov    0x5c(%esp),%eax
mov    0x58(%esp),%edx
mov    %eax,0x8(%ebx)
mov    %edx,0x4(%ebx)
add    $0x74,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   8063530 <fchmod@plt+0x18590>
add    $0x74,%esp
pop    %ebx
pop    %esi
ret
jmp    805d1f0 <fchmod@plt+0x12250>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x14c,%esp
mov    0x160(%esp),%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   80536e0 <fchmod@plt+0x8740>
mov    0x160(%esp),%edx
mov    0x2c(%edx),%ecx
mov    0xe8(%edx),%edi
test   %eax,%eax
mov    %eax,0x20(%esp)
mov    %ecx,0x34(%esp)
mov    0x30(%edx),%ecx
mov    %ecx,0x38(%esp)
je     805d648 <fchmod@plt+0x126a8>
mov    %esi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8062450 <fchmod@plt+0x174b0>
mov    0x160(%esp),%edx
cmp    $0x1,%edi
sbb    %ecx,%ecx
lea    0x4b(%esp),%eax
and    $0x20,%ecx
mov    %eax,(%esp)
mov    %ebx,%eax
call   805bf80 <fchmod@plt+0x10fe0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   804a4c0 <free@plt>
mov    %esi,(%esp)
call   80636e0 <fchmod@plt+0x18740>
mov    %eax,0x30(%esp)
mov    0x20(%esp),%eax
test   %eax,%eax
je     805d2df <fchmod@plt+0x1233f>
mov    0x24(%edi),%eax
test   %eax,%eax
jne    805d304 <fchmod@plt+0x12364>
mov    0x30(%edi),%eax
test   %eax,%eax
je     805d2df <fchmod@plt+0x1233f>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
lea    0x3(%eax),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
lea    0x1(%esi),%edx
movb   $0x59,(%eax)
mov    0x30(%edi),%ecx
mov    %eax,%ebx
lea    0x1(%eax),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804a4e0 <memcpy@plt>
xor    %edx,%edx
movb   $0x0,0x2(%ebx,%esi,1)
mov    0x1c(%edi),%eax
mov    %eax,0x20(%edi)
mov    %ebx,%eax
call   805bc90 <fchmod@plt+0x10cf0>
mov    %eax,0x1c(%edi)
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8063740 <fchmod@plt+0x187a0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x14c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x2,%eax
movl   $0x0,0x28(%esp)
je     805d32d <fchmod@plt+0x1238d>
testb  $0x10,0x28(%edi)
je     805d63c <fchmod@plt+0x1269c>
mov    0x2c(%edi),%eax
mov    0x20(%eax),%ecx
test   %ecx,%ecx
mov    %ecx,0x28(%esp)
je     805d660 <fchmod@plt+0x126c0>
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax)
je     805d66c <fchmod@plt+0x126cc>
mov    %eax,%esi
xor    %ebp,%ebp
xor    %ebx,%ebx
mov    %esi,(%esp)
add    $0x1,%ebp
call   804a950 <strlen@plt>
lea    0x1(%esi,%eax,1),%esi
cmpb   $0x0,(%esi)
lea    0x2(%ebx,%eax,1),%ebx
jne    805d340 <fchmod@plt+0x123a0>
lea    0x1(%ebx),%eax
mov    %eax,0x2c(%esp)
movl   $0x4,0x4(%esp)
mov    %ebp,(%esp)
call   8081820 <argp_parse+0x98e0>
mov    %eax,0x24(%esp)
mov    %eax,%ebx
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax)
mov    %eax,%esi
je     805d396 <fchmod@plt+0x123f6>
mov    %esi,(%ebx)
add    $0x4,%ebx
mov    %esi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%esi,%eax,1),%esi
cmpb   $0x0,(%esi)
jne    805d380 <fchmod@plt+0x123e0>
mov    0x24(%esp),%eax
movl   $0x805bbc0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804add0 <qsort@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
xor    %ecx,%ecx
test   %ebp,%ebp
mov    %eax,0x3c(%esp)
mov    %eax,%ebx
je     805d422 <fchmod@plt+0x12482>
mov    %ebp,0x2c(%esp)
mov    %ecx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    (%eax,%ebp,4),%esi
mov    0x28(%esp),%eax
mov    %esi,%edx
call   805bbe0 <fchmod@plt+0x10c40>
test   %eax,%eax
je     805d578 <fchmod@plt+0x125d8>
cmpl   $0x1,0x30(%edi)
sbb    %eax,%eax
add    $0x1,%ebx
and    $0xffffffd7,%eax
add    $0x49,%eax
mov    %al,-0x1(%ebx)
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl -0x1(%esi),%eax
add    $0x1,%ebx
test   %al,%al
mov    %al,-0x1(%ebx)
jne    805d408 <fchmod@plt+0x12468>
add    $0x1,%ebp
cmp    0x2c(%esp),%ebp
jne    805d3d8 <fchmod@plt+0x12438>
movb   $0x0,(%ebx)
mov    0x3c(%esp),%esi
xor    %edx,%edx
mov    0x1c(%edi),%eax
mov    %eax,0x20(%edi)
mov    %esi,%eax
call   805bc90 <fchmod@plt+0x10cf0>
mov    %eax,0x1c(%edi)
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%edi),%ebx
movl   $0xc,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,(%eax)
movl   $0x1,0x4(%eax)
movl   $0x0,0x8(%eax)
mov    %eax,0x24(%esp)
call   805b960 <fchmod@plt+0x109c0>
test   %eax,%eax
mov    %eax,%ebp
je     805d560 <fchmod@plt+0x125c0>
mov    %edi,0x2c(%esp)
mov    0x30(%esp),%edi
jmp    805d4a7 <fchmod@plt+0x12507>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movb   $0x4e,0x0(%ebp)
call   805b960 <fchmod@plt+0x109c0>
test   %eax,%eax
mov    %eax,%ebp
je     805d55c <fchmod@plt+0x125bc>
lea    0x1(%ebp),%ebx
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8063760 <fchmod@plt+0x187c0>
cmpb   $0x49,0x0(%ebp)
mov    %eax,%esi
je     805d490 <fchmod@plt+0x124f0>
mov    %eax,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
jne    805d490 <fchmod@plt+0x124f0>
mov    0x160(%esp),%eax
lea    0x4c(%esp),%ecx
mov    0xf0(%eax),%eax
mov    %ecx,(%esp)
mov    %eax,0x28(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
mov    0x28(%esp),%eax
test   %eax,%eax
js     805d625 <fchmod@plt+0x12685>
mov    0x809e434,%eax
mov    %ebx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    0x78(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
je     805d58e <fchmod@plt+0x125ee>
mov    $0x8063530,%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8063550 <fchmod@plt+0x185b0>
movb   $0x4e,0x0(%ebp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
mov    0x24(%esp),%eax
call   805b960 <fchmod@plt+0x109c0>
test   %eax,%eax
mov    %eax,%ebp
jne    805d4a7 <fchmod@plt+0x12507>
mov    0x2c(%esp),%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    805d2df <fchmod@plt+0x1233f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%edi),%eax
test   %eax,%eax
je     805d655 <fchmod@plt+0x126b5>
movb   $0x49,(%ebx)
add    $0x1,%ebx
jmp    805d408 <fchmod@plt+0x12468>
mov    0x88(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     805d688 <fchmod@plt+0x126e8>
cmpb   $0x0,0x809e301
je     805d5c6 <fchmod@plt+0x12626>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%eax
xor    0x7c(%esp),%ecx
xor    0x78(%esp),%eax
or     %eax,%ecx
jne    805d539 <fchmod@plt+0x12599>
cmpb   $0x59,0x0(%ebp)
je     805d53d <fchmod@plt+0x1259d>
mov    0x809e2e4,%ecx
cmp    %ecx,0xc0(%esp)
mov    0xc4(%esp),%ebx
mov    0x809e2e8,%eax
jge    805d67b <fchmod@plt+0x126db>
mov    0x809e540,%edx
test   %edx,%edx
je     805d539 <fchmod@plt+0x12599>
cmp    0xc8(%esp),%ecx
mov    0xcc(%esp),%ebx
jg     805d539 <fchmod@plt+0x12599>
jl     805d61b <fchmod@plt+0x1267b>
cmp    %eax,%ebx
js     805d539 <fchmod@plt+0x12599>
movb   $0x59,0x0(%ebp)
nop
jmp    805d53d <fchmod@plt+0x1259d>
call   804aaf0 <__errno_location@plt>
mov    0x28(%esp),%edx
neg    %edx
mov    %edx,(%eax)
mov    $0x8063460,%eax
jmp    805d525 <fchmod@plt+0x12585>
mov    0x1c(%edi),%eax
mov    %eax,0x28(%esp)
jmp    805d32d <fchmod@plt+0x1238d>
mov    %esi,(%esp)
call   806f8d0 <fchmod@plt+0x24930>
jmp    805d232 <fchmod@plt+0x12292>
movb   $0x59,(%ebx)
add    $0x1,%ebx
jmp    805d408 <fchmod@plt+0x12468>
mov    0x1c(%eax),%eax
mov    %eax,0x28(%esp)
jmp    805d32d <fchmod@plt+0x1238d>
movl   $0x1,0x2c(%esp)
xor    %ebp,%ebp
jmp    805d35f <fchmod@plt+0x123bf>
jg     805d61b <fchmod@plt+0x1267b>
cmp    %eax,%ebx
jns    805d61b <fchmod@plt+0x1267b>
jmp    805d5ef <fchmod@plt+0x1264f>
xchg   %ax,%ax
mov    0x809e498,%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x160(%esp),%eax
mov    %eax,(%esp)
call   80537d0 <fchmod@plt+0x8830>
test   %eax,%eax
js     805d73c <fchmod@plt+0x1279c>
lea    0x78(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x13c(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    805d520 <fchmod@plt+0x12580>
mov    0x88(%esp),%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
jne    805d5a5 <fchmod@plt+0x12605>
mov    0x809e480,%ebx
mov    $0x10,%ecx
test   %ebx,%ebx
je     805d70b <fchmod@plt+0x1276b>
mov    0x2c(%esp),%ecx
cmpl   $0x2,0x24(%ecx)
mov    $0x12,%ecx
cmovne %eax,%ecx
mov    0x160(%esp),%eax
lea    0x4c(%esp),%edx
movb   $0x44,0x0(%ebp)
mov    %ebp,(%esp)
mov    %eax,0x134(%esp)
mov    %esi,%eax
call   805bf80 <fchmod@plt+0x10fe0>
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8053900 <fchmod@plt+0x8960>
jmp    805d53d <fchmod@plt+0x1259d>
mov    $0x8063460,%eax
jmp    805d525 <fchmod@plt+0x12585>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
test   %eax,%eax
je     805d768 <fchmod@plt+0x127c8>
mov    0x1c(%eax),%eax
test   %eax,%eax
je     805d768 <fchmod@plt+0x127c8>
mov    (%eax),%eax
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
test   %eax,%eax
je     805d790 <fchmod@plt+0x127f0>
mov    0x1c(%eax),%eax
test   %eax,%eax
je     805d790 <fchmod@plt+0x127f0>
mov    (%eax),%edx
mov    $0x8088343,%eax
test   %edx,%edx
cmovne %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8088343,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809dac0,%ecx
test   %ecx,%ecx
je     805d954 <fchmod@plt+0x129b4>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
lea    0x24(%esp),%ebp
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804a640 <_obstack_begin@plt>
mov    0x70(%esp),%edx
test   %edx,%edx
je     805d956 <fchmod@plt+0x129b6>
mov    0x70(%esp),%eax
mov    0x1c(%eax),%eax
test   %eax,%eax
je     805d956 <fchmod@plt+0x129b6>
mov    (%eax),%ebx
test   %ebx,%ebx
je     805d956 <fchmod@plt+0x129b6>
mov    %ebx,(%esp)
call   805d0d0 <fchmod@plt+0x12130>
sub    $0x1,%eax
mov    %eax,%edi
mov    %eax,0x1c(%esp)
mov    0x30(%esp),%eax
lea    (%eax,%edi,1),%edx
cmp    %edx,0x34(%esp)
jb     805da61 <fchmod@plt+0x12ac1>
mov    0x1c(%esp),%edi
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
call   804a4e0 <memcpy@plt>
add    %edi,0x30(%esp)
mov    0x809dac0,%edi
test   %edi,%edi
je     805d8a6 <fchmod@plt+0x12906>
lea    0x0(%esi),%esi
mov    0x28(%edi),%edx
mov    %edi,%ebx
test   $0x10,%dl
jne    805d865 <fchmod@plt+0x128c5>
jmp    805d8a0 <fchmod@plt+0x12900>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%eax),%edx
mov    %eax,%ebx
mov    0x2c(%ebx),%eax
cmp    %eax,%edi
je     805d968 <fchmod@plt+0x129c8>
and    $0xffffffef,%edx
test   %eax,%eax
mov    %edx,0x28(%ebx)
jne    805d860 <fchmod@plt+0x128c0>
mov    %edi,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%ebx),%eax
test   %eax,%eax
je     805d8a0 <fchmod@plt+0x12900>
mov    0x38(%ebx),%ecx
mov    0x38(%eax),%edx
mov    %ebp,%eax
call   805c5f0 <fchmod@plt+0x11650>
mov    0x2c(%ebx),%ebx
test   %ebx,%ebx
jne    805d880 <fchmod@plt+0x128e0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edi
test   %edi,%edi
jne    805d850 <fchmod@plt+0x128b0>
mov    0x70(%esp),%eax
test   %eax,%eax
je     805d93d <fchmod@plt+0x1299d>
mov    0x30(%esp),%eax
mov    %eax,%edx
sub    0x2c(%esp),%edx
cmp    0x1c(%esp),%edx
je     805d93d <fchmod@plt+0x1299d>
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
ja     805da45 <fchmod@plt+0x12aa5>
mov    %edx,0x30(%esp)
movb   $0x0,(%eax)
mov    0x70(%esp),%eax
mov    0x1c(%eax),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x2c(%esp),%eax
mov    0x30(%esp),%edx
cmp    %eax,%edx
je     805da76 <fchmod@plt+0x12ad6>
mov    0x3c(%esp),%ecx
mov    0x28(%esp),%ebx
add    %ecx,%edx
not    %ecx
and    %ecx,%edx
mov    0x34(%esp),%ecx
mov    %edx,%esi
sub    %ebx,%esi
mov    %edx,0x30(%esp)
mov    %ecx,%edi
sub    %ebx,%edi
cmp    %edi,%esi
jle    805d928 <fchmod@plt+0x12988>
mov    %ecx,0x30(%esp)
mov    %ecx,%edx
mov    %edx,0x2c(%esp)
mov    $0x8087e4c,%edx
call   805bc90 <fchmod@plt+0x10cf0>
mov    0x70(%esp),%edi
mov    %eax,0x1c(%edi)
mov    %ebp,(%esp)
movl   $0x0,0x4(%esp)
call   804a6b0 <obstack_free@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
repz ret
movl   $0x0,0x1c(%esp)
jmp    805d840 <fchmod@plt+0x128a0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%edi),%eax
and    $0xffffffef,%edx
mov    %edx,0x28(%ebx)
mov    %eax,(%esp)
call   8079270 <argp_parse+0x1330>
mov    %eax,%esi
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
jbe    805d99f <fchmod@plt+0x129ff>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x30(%esp)
movb   $0x58,(%eax)
mov    %esi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%edx
mov    0x30(%esp),%eax
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x34(%esp)
jb     805da28 <fchmod@plt+0x12a88>
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,%esi
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   804a4e0 <memcpy@plt>
mov    0x18(%esp),%edx
mov    $0x808d3ee,%ecx
add    %edx,0x30(%esp)
mov    %ebp,%eax
mov    0x38(%edi),%edx
call   805c5f0 <fchmod@plt+0x11650>
cmp    %ebx,%edi
je     805da07 <fchmod@plt+0x12a67>
nop
mov    0x2c(%esi),%eax
mov    0x38(%esi),%ecx
mov    0x38(%eax),%edx
mov    %ebp,%eax
call   805c5f0 <fchmod@plt+0x11650>
mov    0x2c(%esi),%esi
cmp    %ebx,%esi
jne    805d9f0 <fchmod@plt+0x12a50>
mov    0x38(%ebx),%ecx
mov    $0x808d3ee,%edx
mov    %ebp,%eax
call   805c5f0 <fchmod@plt+0x11650>
mov    (%edi),%edi
test   %edi,%edi
jne    805d850 <fchmod@plt+0x128b0>
jmp    805d8a6 <fchmod@plt+0x12906>
lea    0x0(%esi),%esi
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x18(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
mov    0x18(%esp),%edx
jmp    805d9be <fchmod@plt+0x12a1e>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    805d8cf <fchmod@plt+0x1292f>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
jmp    805d828 <fchmod@plt+0x12888>
orb    $0x2,0x4c(%esp)
jmp    805d900 <fchmod@plt+0x12960>
push   %ebp
push   %edi
mov    $0x8088360,%edi
push   %esi
push   %ebx
sub    $0x5c,%esp
movl   $0x80880ec,(%esp)
lea    0x22(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a830 <puts@plt>
movl   $0x8087e78,0x10(%esp)
movl   $0x8087e7c,0xc(%esp)
movl   $0x8087e80,0x8(%esp)
movl   $0x8087e8b,0x4(%esp)
movl   $0x1,(%esp)
call   804ac10 <__printf_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x37(%esp),%eax
mov    0xc(%edi),%ecx
add    $0x14,%edi
mov    -0x4(%edi),%ebx
mov    -0xc(%edi),%edx
mov    %eax,0x18(%esp)
mov    -0x10(%edi),%eax
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    -0x10(%edi),%ecx
mov    -0xc(%edi),%ebx
mov    -0x4(%edi),%edx
mov    %ebp,0x18(%esp)
mov    %ecx,0x8(%esp)
mov    %ecx,(%esp)
mov    %eax,%esi
mov    -0x8(%edi),%eax
mov    %edx,0x14(%esp)
mov    %ebx,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
call   8062780 <fchmod@plt+0x177e0>
mov    %esi,0x10(%esp)
movl   $0x8087ea7,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    -0x14(%edi),%eax
mov    %eax,0x8(%esp)
call   804ac10 <__printf_chk@plt>
mov    (%edi),%eax
test   %eax,%eax
jne    805dad8 <fchmod@plt+0x12b38>
movl   $0xa,(%esp)
call   804aad0 <putchar@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805db87 <fchmod@plt+0x12be7>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0x809e4d0,%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
mov    0x809e4f0,%edx
movl   $0x0,-0x7c(%ebp)
movl   $0x0,-0x78(%ebp)
test   %esi,%esi
jne    805e004 <fchmod@plt+0x13064>
mov    $0x242,%ax
movl   $0x1b6,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804a410 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     805e01d <fchmod@plt+0x1307d>
movl   $0x8087ec1,0x4(%esp)
mov    %eax,(%esp)
call   804a8c0 <fdopen@plt>
test   %eax,%eax
mov    %eax,0x809dab0
je     805e71d <fchmod@plt+0x1377d>
call   80659b0 <fchmod@plt+0x1aa10>
call   8065a20 <fchmod@plt+0x1aa80>
mov    0x809dab0,%eax
movl   $0xa,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0x78(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a6e0 <__getdelim@plt>
test   %eax,%eax
jle    805dfd7 <fchmod@plt+0x13037>
mov    -0x7c(%ebp),%ebx
mov    $0x8087ec4,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805e02c <fchmod@plt+0x1308c>
cmpb   $0x2d,0x7(%ebx)
lea    0x8(%ebx),%esi
je     805dc9b <fchmod@plt+0x12cfb>
movl   $0x5,0x8(%esp)
movl   $0x8087ecc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movzbl 0x8(%ebx),%eax
cmp    $0x2d,%al
jne    805dcb2 <fchmod@plt+0x12d12>
jmp    805dcfe <fchmod@plt+0x12d5e>
lea    0x0(%esi),%esi
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x2d,%al
je     805dcfe <fchmod@plt+0x12d5e>
test   %al,%al
jne    805dca8 <fchmod@plt+0x12d08>
movl   $0x5,0x8(%esp)
add    $0x1,%esi
movl   $0x8087ecc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movzbl (%esi),%eax
cmp    $0x2d,%al
jne    805dcb2 <fchmod@plt+0x12d12>
add    $0x1,%esi
mov    %esi,(%esp)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804a530 <__strtoull_internal@plt>
cmp    $0x0,%edx
mov    %eax,%esi
mov    %edx,%ebx
jbe    805e46e <fchmod@plt+0x134ce>
mov    %esi,%eax
xor    $0x2,%eax
or     %ebx,%eax
jne    805e6a6 <fchmod@plt+0x13706>
lea    -0x60(%ebp),%edi
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804a640 <_obstack_begin@plt>
mov    0x809dab0,%eax
mov    $0x809e2e4,%edx
call   805cff0 <fchmod@plt+0x12050>
lea    -0x70(%ebp),%eax
mov    %eax,-0xb4(%ebp)
mov    %edi,-0x94(%ebp)
lea    0x0(%esi,%eiz,1),%esi
mov    -0xb4(%ebp),%esi
mov    $0x8087f4b,%edx
mov    0x809dab0,%eax
movl   $0x1,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805c820 <fchmod@plt+0x11880>
test   %al,%al
je     805dfd7 <fchmod@plt+0x13037>
mov    -0x70(%ebp),%eax
lea    -0x68(%ebp),%edx
or     -0x6c(%ebp),%eax
mov    0x809dab0,%eax
setne  -0xa0(%ebp)
call   805cff0 <fchmod@plt+0x12050>
mov    0x809dab0,%eax
mov    $0x808cd34,%edx
mov    %esi,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805c820 <fchmod@plt+0x11880>
test   %al,%al
je     805e88b <fchmod@plt+0x138eb>
mov    -0x70(%ebp),%eax
mov    -0x6c(%ebp),%edx
mov    %esi,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,-0xa8(%ebp)
mov    0x809dab0,%eax
mov    %edx,-0xa4(%ebp)
mov    $0x8087f4f,%edx
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805c820 <fchmod@plt+0x11880>
test   %al,%al
je     805e88b <fchmod@plt+0x138eb>
mov    -0x70(%ebp),%eax
lea    -0x74(%ebp),%ecx
mov    -0x6c(%ebp),%edx
mov    %eax,-0xb0(%ebp)
mov    0x809dab0,%eax
mov    %edx,-0xac(%ebp)
mov    -0x94(%ebp),%edx
call   805c740 <fchmod@plt+0x117a0>
test   %eax,%eax
jne    805e88b <fchmod@plt+0x138eb>
mov    -0x58(%ebp),%esi
mov    -0x54(%ebp),%eax
cmp    %eax,%esi
je     805e620 <fchmod@plt+0x13680>
mov    -0x48(%ebp),%edx
mov    -0x5c(%ebp),%ecx
add    %edx,%eax
not    %edx
and    %edx,%eax
mov    -0x50(%ebp),%edx
mov    %eax,%ebx
sub    %ecx,%ebx
mov    %eax,-0x54(%ebp)
mov    %edx,%edi
sub    %ecx,%edi
cmp    %edi,%ebx
jle    805dec6 <fchmod@plt+0x12f26>
mov    %edx,-0x54(%ebp)
mov    %edx,%eax
mov    %eax,-0x58(%ebp)
mov    -0x94(%ebp),%edi
jmp    805dede <fchmod@plt+0x12f3e>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,-0x74(%ebp)
jbe    805def1 <fchmod@plt+0x12f51>
mov    0x809dab0,%eax
lea    -0x74(%ebp),%ecx
mov    %edi,%edx
call   805c740 <fchmod@plt+0x117a0>
test   %eax,%eax
je     805ded8 <fchmod@plt+0x12f38>
mov    0x809dab0,%eax
mov    %edi,-0x94(%ebp)
mov    0x4(%eax),%edx
cmp    0x8(%eax),%edx
jae    805e87e <fchmod@plt+0x138de>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%eax)
movzbl (%edx),%eax
test   %eax,%eax
jne    805e7ea <fchmod@plt+0x1384a>
mov    -0x58(%ebp),%ebx
mov    -0x54(%ebp),%eax
cmp    %eax,%ebx
je     805e610 <fchmod@plt+0x13670>
mov    -0x48(%ebp),%edx
mov    -0x5c(%ebp),%ecx
add    %edx,%eax
not    %edx
and    %edx,%eax
mov    -0x50(%ebp),%edx
mov    %eax,%edi
sub    %ecx,%edi
mov    %edi,-0x98(%ebp)
mov    %edx,%edi
sub    %ecx,%edi
cmp    %edi,-0x98(%ebp)
mov    %eax,-0x54(%ebp)
jle    805df54 <fchmod@plt+0x12fb4>
mov    %edx,-0x54(%ebp)
mov    %edx,%eax
mov    %eax,-0x58(%ebp)
movzbl -0xa0(%ebp),%eax
mov    -0xac(%ebp),%edx
mov    -0x64(%ebp),%ecx
mov    %ebx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    -0xb0(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0xa4(%ebp),%edx
movl   $0x0,0x14(%esp)
mov    %eax,0x8(%esp)
mov    -0xa8(%ebp),%eax
mov    %edx,0x4(%esp)
mov    -0x68(%ebp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   805bde0 <fchmod@plt+0x10e40>
cmp    -0x5c(%ebp),%ebx
jbe    805e5f8 <fchmod@plt+0x13658>
cmp    -0x50(%ebp),%ebx
jae    805e5f8 <fchmod@plt+0x13658>
mov    %ebx,-0x58(%ebp)
mov    %ebx,-0x54(%ebp)
jmp    805dd88 <fchmod@plt+0x12de8>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f620 <fchmod@plt+0x24680>
mov    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809dab0,%eax
testb  $0x20,(%eax)
jne    805e00e <fchmod@plt+0x1306e>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    805e8df <fchmod@plt+0x1393f>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x42,%eax
jmp    805dbcd <fchmod@plt+0x12c2d>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f620 <fchmod@plt+0x24680>
jmp    805dfe1 <fchmod@plt+0x13041>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
jmp    805dfec <fchmod@plt+0x1304c>
movl   $0x0,-0x70(%ebp)
movl   $0x0,-0x68(%ebp)
mov    %ebx,(%esp)
lea    -0x60(%ebp),%edi
mov    $0x1,%esi
call   804aac0 <__strdup@plt>
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,-0x70(%ebp)
call   804a950 <strlen@plt>
mov    %ebx,0x4(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
add    $0x1,%eax
mov    %eax,-0x68(%ebp)
lea    -0x90(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,-0xc8(%ebp)
call   8062ad0 <fchmod@plt+0x17b30>
mov    -0x8c(%ebp),%edx
mov    -0x90(%ebp),%eax
movl   $0x0,-0xc4(%ebp)
00
mov    %edx,0x809e2e8
mov    0x809e2e8,%ebx
mov    %eax,0x809e2e4
lea    -0x68(%ebp),%eax
sub    $0x4,%esp
mov    %eax,-0xc0(%ebp)
lea    -0x70(%ebp),%eax
test   %ebx,%ebx
mov    %eax,-0xb4(%ebp)
js     805e74a <fchmod@plt+0x137aa>
mov    %edi,-0x94(%ebp)
jmp    805e2d7 <fchmod@plt+0x13337>
cmpl   $0x1,-0xc4(%ebp)
je     805e338 <fchmod@plt+0x13398>
mov    %ecx,-0xa0(%ebp)
movl   $0x0,-0x98(%ebp)
00
call   804aaf0 <__errno_location@plt>
mov    -0xa0(%ebp),%ecx
movl   $0x0,-0xb0(%ebp)
00
mov    %eax,%ebx
mov    -0x94(%ebp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80627d0 <fchmod@plt+0x17830>
mov    %eax,-0xa0(%ebp)
mov    (%ebx),%eax
mov    %edx,-0x9c(%ebp)
mov    -0x60(%ebp),%edx
test   %eax,%eax
jne    805e150 <fchmod@plt+0x131b0>
cmpb   $0x20,(%edx)
je     805e1c1 <fchmod@plt+0x13221>
movl   $0x5,0x8(%esp)
movl   $0x8087f20,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,-0xb8(%ebp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0xa8(%ebp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    -0xa8(%ebp),%ecx
mov    %esi,0x10(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    -0xb8(%ebp),%edx
movl   $0x2,0x809e084
00
mov    -0x94(%ebp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80627d0 <fchmod@plt+0x17830>
mov    (%ebx),%ecx
test   %ecx,%ecx
mov    %edx,-0xa4(%ebp)
mov    -0x60(%ebp),%edx
mov    %eax,-0xa8(%ebp)
jne    805e20d <fchmod@plt+0x1326d>
cmpb   $0x20,(%edx)
je     805e27e <fchmod@plt+0x132de>
movl   $0x5,0x8(%esp)
movl   $0x8087f36,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,-0xbc(%ebp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0xb8(%ebp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    -0xb8(%ebp),%ecx
mov    %esi,0x10(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    -0xbc(%ebp),%edx
movl   $0x2,0x809e084
00
lea    0x1(%edx),%ebx
mov    %ebx,(%esp)
call   8062280 <fchmod@plt+0x172e0>
mov    -0xa4(%ebp),%edx
mov    -0xa8(%ebp),%eax
mov    -0xb0(%ebp),%ecx
movl   $0x0,0x18(%esp)
mov    %edx,0xc(%esp)
mov    -0x9c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0xa0(%ebp),%eax
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %edx,0x4(%esp)
mov    -0x98(%ebp),%edx
mov    %eax,(%esp)
mov    %ebx,%eax
call   805bde0 <fchmod@plt+0x10e40>
mov    0x809dab0,%eax
movl   $0xa,0x8(%esp)
mov    %eax,0xc(%esp)
mov    -0xc0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   804a6e0 <__getdelim@plt>
test   %eax,%eax
jle    805e6ff <fchmod@plt+0x1375f>
mov    -0x70(%ebp),%edx
xor    %ebx,%ebx
cmpb   $0x2b,(%edx)
lea    -0x1(%edx,%eax,1),%eax
sete   %bl
add    $0x1,%esi
cmpb   $0xa,(%eax)
mov    %ebx,%edi
lea    (%edx,%edi,1),%ecx
jne    805e0d0 <fchmod@plt+0x13130>
cmpl   $0x1,-0xc4(%ebp)
movb   $0x0,(%eax)
jne    805e0dd <fchmod@plt+0x1313d>
mov    -0x94(%ebp),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0xc8(%ebp),%eax
mov    %eax,(%esp)
call   8062ad0 <fchmod@plt+0x17b30>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%ebx
mov    %eax,-0x98(%ebp)
mov    -0x60(%ebp),%eax
sub    $0x4,%esp
test   %ebx,%ebx
mov    %eax,-0xa0(%ebp)
js     805e387 <fchmod@plt+0x133e7>
cmpb   $0x20,(%eax)
je     805e737 <fchmod@plt+0x13797>
movl   $0x5,0x8(%esp)
movl   $0x8087f06,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0xb0(%ebp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %eax,-0xa8(%ebp)
call   804aaf0 <__errno_location@plt>
mov    -0xb0(%ebp),%ecx
mov    -0xa8(%ebp),%edx
mov    %esi,0x10(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,%ebx
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    -0x94(%ebp),%eax
movl   $0x0,(%ebx)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   804a530 <__strtoull_internal@plt>
mov    (%ebx),%ecx
test   %ecx,%ecx
jne    805e62f <fchmod@plt+0x1368f>
cmp    $0x0,%edx
ja     805e629 <fchmod@plt+0x13689>
cmp    $0x3b9ac9ff,%eax
ja     805e629 <fchmod@plt+0x13689>
mov    -0x60(%ebp),%ecx
cmp    %ecx,-0xa0(%ebp)
je     805e62f <fchmod@plt+0x1368f>
cmpb   $0x20,(%ecx)
jne    805e62f <fchmod@plt+0x1368f>
mov    %eax,-0xb0(%ebp)
jmp    805e104 <fchmod@plt+0x13164>
cmp    $0x1,%eax
ja     805dd2e <fchmod@plt+0x12d8e>
mov    -0x7c(%ebp),%ebx
mov    %eax,-0xc4(%ebp)
movl   $0x0,-0x70(%ebp)
movl   $0x0,-0x68(%ebp)
jne    805e03a <fchmod@plt+0x1309a>
mov    0x809dab0,%eax
movl   $0xa,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0x68(%ebp),%eax
mov    %eax,-0xc0(%ebp)
mov    %eax,0x4(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,-0xb4(%ebp)
call   804a6e0 <__getdelim@plt>
test   %eax,%eax
jle    805dfbf <fchmod@plt+0x1301f>
lea    -0x90(%ebp),%eax
mov    %eax,%ebx
mov    %eax,-0xc8(%ebp)
mov    -0x70(%ebp),%eax
lea    -0x60(%ebp),%edi
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062ad0 <fchmod@plt+0x17b30>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
mov    %eax,0x809e2e4
mov    %edx,0x809e2e8
mov    0x809e2e8,%eax
sub    $0x4,%esp
test   %eax,%eax
js     805e745 <fchmod@plt+0x137a5>
mov    -0x60(%ebp),%ebx
mov    $0x2,%esi
cmpb   $0x0,(%ebx)
je     805e0c5 <fchmod@plt+0x13125>
call   804aaf0 <__errno_location@plt>
add    $0x1,%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a530 <__strtoull_internal@plt>
mov    (%esi),%ecx
test   %ecx,%ecx
jne    805e570 <fchmod@plt+0x135d0>
cmp    $0x0,%edx
jbe    805e7c1 <fchmod@plt+0x13821>
movl   $0x22,(%esi)
movl   $0x5,0x8(%esp)
movl   $0x8087ee8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x14(%esp)
movl   $0x2,0x10(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %eax,0xc(%esp)
mov    (%esi),%eax
mov    $0x2,%esi
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movl   $0x80000000,0x809e2e4
80
movl   $0xffffffff,0x809e2e8
ff
mov    %edi,-0x94(%ebp)
jmp    805e2d7 <fchmod@plt+0x13337>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x94(%ebp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a6b0 <obstack_free@plt>
jmp    805dd88 <fchmod@plt+0x12de8>
nop
orb    $0x2,-0x38(%ebp)
jmp    805df27 <fchmod@plt+0x12f87>
lea    0x0(%esi,%eiz,1),%esi
orb    $0x2,-0x38(%ebp)
jmp    805dea3 <fchmod@plt+0x12f03>
movl   $0x22,(%ebx)
movl   $0x5,0x8(%esp)
movl   $0x8088118,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0xa0(%ebp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    -0xa0(%ebp),%edx
mov    %esi,0x10(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    -0x60(%ebp),%ecx
movl   $0x2,0x809e084
00
movl   $0xffffffff,-0xb0(%ebp)
ff
jmp    805e104 <fchmod@plt+0x13164>
movl   $0x5,0x8(%esp)
movl   $0x8088140,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809dab0,%eax
movl   $0x2,0x809e084
00
testb  $0x20,(%eax)
je     805dfe1 <fchmod@plt+0x13041>
jmp    805e00e <fchmod@plt+0x1306e>
mov    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809dab0,%eax
testb  $0x20,(%eax)
je     805dfe1 <fchmod@plt+0x13041>
jmp    805e00e <fchmod@plt+0x1306e>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
mov    %ebx,(%esp)
call   804aef0 <close@plt>
jmp    805dfec <fchmod@plt+0x1304c>
call   804aaf0 <__errno_location@plt>
mov    %eax,%ebx
xchg   %ax,%ax
jmp    805e3ff <fchmod@plt+0x1345f>
mov    $0x2,%esi
movl   $0x5,0x8(%esp)
movl   $0x8087ee8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0x94(%ebp)
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %eax,%ebx
call   804aaf0 <__errno_location@plt>
mov    -0x94(%ebp),%edx
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x8087efb,0x8(%esp)
mov    %edx,0x14(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    %edi,-0x94(%ebp)
jmp    805e2d7 <fchmod@plt+0x13337>
cmp    $0x3b9ac9ff,%eax
ja     805e56a <fchmod@plt+0x135ca>
cmp    -0x60(%ebp),%ebx
je     805e570 <fchmod@plt+0x135d0>
mov    %eax,0x809e2e8
mov    $0x2,%esi
mov    %edi,-0x94(%ebp)
jmp    805e2d7 <fchmod@plt+0x13337>
movl   $0x5,0x8(%esp)
movl   $0x8087f53,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809dab0,%eax
mov    %eax,(%esp)
call   804a8b0 <ftello64@plt>
lea    -0x31(%ebp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c110 <argp_parse+0x41d0>
mov    %eax,%edi
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087f6d,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    %eax,(%esp)
call   804ac80 <__uflow@plt>
jmp    805df11 <fchmod@plt+0x12f71>
movl   $0x5,0x8(%esp)
movl   $0x808806c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x809dab0,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
test   %ebx,%ebx
je     805ea2d <fchmod@plt+0x13a8d>
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   804a550 <fseeko64@plt>
test   %eax,%eax
jne    805eaa8 <fchmod@plt+0x13b08>
mov    %ebx,(%esp)
call   804ab40 <fileno@plt>
mov    %eax,(%esp)
call   80688b0 <fchmod@plt+0x1d910>
test   %eax,%eax
jne    805ea48 <fchmod@plt+0x13aa8>
movl   $0x2,0x14(%esp)
lea    0x27(%esp),%esi
movl   $0x8089f02,0x10(%esp)
movl   $0x8087ec4,0xc(%esp)
movl   $0x8087f7d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e49c,%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %eax,(%esp)
mov    %eax,%edi
call   804a950 <strlen@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x809e4a0,%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804abd0 <fwrite_unlocked@plt>
testb  $0x20,(%ebx)
je     805eac0 <fchmod@plt+0x13b20>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806fc20 <fchmod@plt+0x24c80>
mov    %ebx,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
je     805ea2d <fchmod@plt+0x13a8d>
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805eaef <fchmod@plt+0x13b4f>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x809e4f0,%eax
lea    0x27(%esp),%esi
mov    %eax,(%esp)
call   806fb80 <fchmod@plt+0x24be0>
movl   $0x2,0x14(%esp)
movl   $0x8089f02,0x10(%esp)
movl   $0x8087ec4,0xc(%esp)
movl   $0x8087f7d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e49c,%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
jmp    805e997 <fchmod@plt+0x139f7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e4f0,%eax
mov    %eax,(%esp)
call   806f910 <fchmod@plt+0x24970>
jmp    805e938 <fchmod@plt+0x13998>
lea    0x0(%esi),%esi
mov    0x809dab8,%eax
test   %eax,%eax
je     805ea14 <fchmod@plt+0x13a74>
mov    %ebx,0x8(%esp)
movl   $0x805cc30,0x4(%esp)
mov    %eax,(%esp)
call   807a750 <argp_parse+0x2810>
testb  $0x20,(%ebx)
je     805ea14 <fchmod@plt+0x13a74>
jmp    805ea07 <fchmod@plt+0x13a67>
nop
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
movzbl 0xe0(%ebx),%eax
test   %al,%al
je     805eb1d <fchmod@plt+0x13b7d>
mov    0xe4(%ebx),%edx
test   %edx,%edx
je     805eb28 <fchmod@plt+0x13b88>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %ebx,%eax
call   805cf00 <fchmod@plt+0x11f60>
movzbl 0xe0(%ebx),%eax
jmp    805eb1d <fchmod@plt+0x13b7d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
cmpb   $0x0,0x809e400
je     805ec30 <fchmod@plt+0x13c90>
mov    0x809e404,%ecx
test   %ecx,%ecx
je     805f171 <fchmod@plt+0x141d1>
mov    0xb0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8063a10 <fchmod@plt+0x18a70>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     805ec30 <fchmod@plt+0x13c90>
mov    0x809e404,%eax
movzbl (%eax),%ebp
mov    %eax,0x20(%esp)
mov    %ebp,%eax
test   %al,%al
je     805ef31 <fchmod@plt+0x13f91>
mov    0x20(%esp),%ebx
mov    %ebp,%eax
xor    %esi,%esi
xor    %edi,%edi
cmp    $0x54,%al
je     805ecc8 <fchmod@plt+0x13d28>
cmp    $0x58,%al
je     805ecb0 <fchmod@plt+0x13d10>
cmp    $0x52,%al
je     805ec40 <fchmod@plt+0x13ca0>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebx,%eax,1),%ebx
movzbl (%ebx),%eax
test   %al,%al
je     805ed18 <fchmod@plt+0x13d78>
test   %edi,%edi
je     805eba8 <fchmod@plt+0x13c08>
movsbl %al,%edx
cmp    %edi,%edx
je     805eba8 <fchmod@plt+0x13c08>
movl   $0x5,0x8(%esp)
movl   $0x8088170,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
call   8062100 <fchmod@plt+0x17160>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x1(%ebx)
je     805ecf8 <fchmod@plt+0x13d58>
mov    %ebx,%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    $0x54,%edi
not    %ecx
add    %ecx,%ebx
movzbl (%ebx),%eax
test   %al,%al
jne    805ebdb <fchmod@plt+0x13c3b>
movl   $0x5,0x8(%esp)
movl   $0x8088240,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805ec30 <fchmod@plt+0x13c90>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    805f1d3 <fchmod@plt+0x14233>
mov    $0x1,%esi
jmp    805ebc0 <fchmod@plt+0x13c20>
lea    0x0(%esi),%esi
cmp    $0x54,%edi
jne    805f190 <fchmod@plt+0x141f0>
cmpb   $0x0,0x1(%ebx)
je     805ed08 <fchmod@plt+0x13d68>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
not    %ecx
add    %ecx,%ebx
movzbl (%ebx),%eax
test   %al,%al
je     805ed20 <fchmod@plt+0x13d80>
xor    %edi,%edi
jmp    805eba8 <fchmod@plt+0x13c08>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805f262 <fchmod@plt+0x142c2>
xor    %esi,%esi
jmp    805ec4a <fchmod@plt+0x13caa>
nop
test   %esi,%esi
je     805f277 <fchmod@plt+0x142d7>
mov    $0x1,%esi
jmp    805ecd7 <fchmod@plt+0x13d37>
nop
test   %edi,%edi
jne    805ec67 <fchmod@plt+0x13cc7>
test   %esi,%esi
mov    0x20(%esp),%ebx
je     805ed35 <fchmod@plt+0x13d95>
testb  $0x2,0x809d640
jne    805eeea <fchmod@plt+0x13f4a>
xor    %esi,%esi
mov    %ebp,%edx
jmp    805ed57 <fchmod@plt+0x13db7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebx,%eax,1),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     805ef38 <fchmod@plt+0x13f98>
cmp    $0x58,%dl
je     805edb8 <fchmod@plt+0x13e18>
cmp    $0x52,%dl
jne    805ed40 <fchmod@plt+0x13da0>
mov    %ebx,(%esp)
lea    0x1(%ebx),%edi
call   804a950 <strlen@plt>
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx,%eax,1),%edx
lea    0x1(%edx),%ebp
jne    805eec0 <fchmod@plt+0x13f20>
cmpb   $0x0,0x1(%edx)
jne    805ee90 <fchmod@plt+0x13ef0>
cmpb   $0x0,(%edi)
je     805ee88 <fchmod@plt+0x13ee8>
cmpb   $0x0,0x0(%ebp)
cmove  %esi,%ebp
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x20(%esp)
call   8058a80 <fchmod@plt+0xdae0>
mov    0x20(%esp),%edx
test   %al,%al
je     805ee69 <fchmod@plt+0x13ec9>
mov    %edx,%ebx
jmp    805ed40 <fchmod@plt+0x13da0>
nop
lea    0x1(%ebx),%ebp
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
lea    0xc(%eax),%eax
mov    %eax,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
lea    0x1(%esi,%edi,1),%eax
mov    $0x5858,%edx
movb   $0x2f,(%esi,%edi,1)
movl   $0x2e726174,(%eax)
movl   $0x58585858,0x4(%eax)
mov    %dx,0x8(%eax)
movb   $0x0,0xa(%eax)
mov    %esi,(%esp)
call   804ad20 <mkdtemp@plt>
test   %eax,%eax
jne    805ed40 <fchmod@plt+0x13da0>
mov    %esi,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x808829c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
call   804aaf0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    805ec30 <fchmod@plt+0x13c90>
lea    0x0(%esi),%esi
mov    %esi,%edi
jmp    805ed97 <fchmod@plt+0x13df7>
nop
movzbl 0x809e534,%eax
mov    %ebp,(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    0x20(%esp),%edx
mov    %eax,%ebp
jmp    805ed87 <fchmod@plt+0x13de7>
lea    0x0(%esi),%esi
movzbl 0x809e534,%eax
mov    %edi,(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    0x20(%esp),%edx
mov    %eax,%edi
jmp    805ed7d <fchmod@plt+0x13ddd>
movl   $0x5,0x8(%esp)
movl   $0x8088278,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809e404,%ebx
movzbl (%ebx),%ebp
mov    %ebp,%eax
test   %al,%al
jne    805ed35 <fchmod@plt+0x13d95>
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x809e404,%eax
mov    $0x8087e4c,%edx
call   805bc90 <fchmod@plt+0x10cf0>
mov    %eax,0x28(%esp)
mov    0x24(%esp),%eax
cmpb   $0x0,(%eax)
je     805f11c <fchmod@plt+0x1417c>
mov    %eax,%ebx
xor    %esi,%esi
mov    0xb0(%esp),%ebp
lea    0x30(%esp),%edi
jmp    805efe7 <fchmod@plt+0x14047>
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     805efd2 <fchmod@plt+0x14032>
mov    %esi,(%esp)
call   8063530 <fchmod@plt+0x18590>
mov    %esi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80882d0,0x4(%esp)
mov    %eax,0x20(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x20(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebx,%eax,1),%ebx
cmpb   $0x0,(%ebx)
je     805f120 <fchmod@plt+0x14180>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8065a50 <fchmod@plt+0x1aab0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
jne    805ef78 <fchmod@plt+0x13fd8>
mov    0x28(%esp),%eax
mov    %ebx,%edx
call   805bbe0 <fchmod@plt+0x10c40>
test   %eax,%eax
je     805f040 <fchmod@plt+0x140a0>
movzbl (%eax),%eax
cmp    $0x44,%al
je     805f158 <fchmod@plt+0x141b8>
cmp    $0x59,%al
jne    805efd2 <fchmod@plt+0x14032>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    805efd2 <fchmod@plt+0x14032>
nop
cmpb   $0x0,0x809e301
je     805f088 <fchmod@plt+0x140e8>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
xor    0x809e4ec,%edx
xor    0x809e4e8,%eax
or     %eax,%edx
je     805f088 <fchmod@plt+0x140e8>
mov    %esi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80882fc,0x4(%esp)
mov    %eax,0x20(%esp)
jmp    805efa6 <fchmod@plt+0x14006>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e448
jne    805f1e5 <fchmod@plt+0x14245>
mov    0x809e46c,%eax
test   %eax,%eax
jne    805f202 <fchmod@plt+0x14262>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8063af0 <fchmod@plt+0x18b50>
test   %eax,%eax
jne    805efd2 <fchmod@plt+0x14032>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edx
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8087f98,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x20(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x20(%esp),%ecx
mov    0x2c(%esp),%edx
movl   $0x0,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805efd2 <fchmod@plt+0x14032>
xor    %esi,%esi
xchg   %ax,%ax
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x28(%esp),%esi
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    805f040 <fchmod@plt+0x140a0>
jmp    805efd2 <fchmod@plt+0x14032>
mov    $0x809e320,%eax
call   805cf00 <fchmod@plt+0x11f60>
cmpb   $0x0,0x809e400
je     805ec30 <fchmod@plt+0x13c90>
jmp    805eb65 <fchmod@plt+0x13bc5>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x80881ec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805ec30 <fchmod@plt+0x13c90>
movl   $0x5,0x8(%esp)
movl   $0x80881a0,0x4(%esp)
jmp    805f1a0 <fchmod@plt+0x14200>
mov    %esi,0x4(%esp)
movl   $0x80877ec,(%esp)
call   806a220 <fchmod@plt+0x1f280>
test   %eax,%eax
jne    805f095 <fchmod@plt+0x140f5>
jmp    805efd2 <fchmod@plt+0x14032>
mov    %esi,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
mov    0x809e0b4,%edx
movl   $0x5,0x8(%esp)
movl   $0x8087f87,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x2c(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
mov    0x20(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    805f0a2 <fchmod@plt+0x14102>
movl   $0x5,0x8(%esp)
movl   $0x80881c4,0x4(%esp)
jmp    805f1a0 <fchmod@plt+0x14200>
movl   $0x5,0x8(%esp)
movl   $0x8088218,0x4(%esp)
jmp    805f1a0 <fchmod@plt+0x14200>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edi
lea    -0x1(%eax),%esi
lea    0x1(%edi),%ebx
xor    %edi,%edi
test   %eax,%eax
je     805f31d <fchmod@plt+0x1437d>
movsbl -0x1(%ebx),%eax
cmp    $0x52,%al
je     805f2f8 <fchmod@plt+0x14358>
nop
lea    0x0(%esi,%eiz,1),%esi
jg     805f328 <fchmod@plt+0x14388>
cmp    $0x44,%al
je     805f2f8 <fchmod@plt+0x14358>
cmp    $0x4e,%al
je     805f2f8 <fchmod@plt+0x14358>
test   %al,%al
jne    805f336 <fchmod@plt+0x14396>
mov    0x809e248,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805f367 <fchmod@plt+0x143c7>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
xor    %edi,%edi
add    $0x1,%ebx
test   %esi,%esi
lea    -0x1(%esi),%eax
je     805f31d <fchmod@plt+0x1437d>
mov    %eax,%esi
movsbl -0x1(%ebx),%eax
cmp    $0x52,%al
jne    805f2b8 <fchmod@plt+0x14318>
xchg   %ax,%ax
mov    0x809e248,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804acd0 <fputc@plt>
test   %edi,%edi
je     805f350 <fchmod@plt+0x143b0>
add    $0x1,%ebx
test   %esi,%esi
mov    $0x1,%edi
lea    -0x1(%esi),%eax
jne    805f2ec <fchmod@plt+0x1434c>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x54,%al
je     805f2f8 <fchmod@plt+0x14358>
jl     805f336 <fchmod@plt+0x14396>
lea    -0x58(%eax),%edx
cmp    $0x1,%dl
jbe    805f2f8 <fchmod@plt+0x14358>
mov    0x809e248,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
jae    805f37c <fchmod@plt+0x143dc>
lea    0x1(%ecx),%ebp
mov    %ebp,0x14(%edx)
mov    %al,(%ecx)
jmp    805f2e2 <fchmod@plt+0x14342>
xchg   %ax,%ax
mov    0x809e248,%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   804acd0 <fputc@plt>
jmp    805f30e <fchmod@plt+0x1436e>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    805f2e0 <fchmod@plt+0x14340>
movzbl %al,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804acc0 <__overflow@plt>
jmp    805f2e2 <fchmod@plt+0x14342>
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    (%eax),%eax
cmp    $0x2,%eax
je     805f400 <fchmod@plt+0x14460>
cmp    $0x4,%eax
je     805f3b6 <fchmod@plt+0x14416>
cmp    $0x1,%eax
je     805f3c0 <fchmod@plt+0x14420>
mov    0x809e50c,%eax
test   %eax,%eax
jne    805f3e6 <fchmod@plt+0x14446>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movzbl 0x809e534,%eax
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    %eax,%ebx
mov    0x809e50c,%eax
test   %eax,%eax
je     805f3b6 <fchmod@plt+0x14416>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8065b00 <fchmod@plt+0x1ab60>
cmp    $0xffffffff,%eax
je     805f420 <fchmod@plt+0x14480>
add    %eax,%ebx
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
movzbl 0x809e534,%eax
mov    %ebx,(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
call   806fd70 <fchmod@plt+0x24dd0>
mov    %eax,%ebx
jmp    805f3ad <fchmod@plt+0x1440d>
nop
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
add    %eax,%ebx
jmp    805f3f9 <fchmod@plt+0x14459>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x48c,%esp
mov    0xc(%ebp),%ebx
mov    %ecx,-0x440(%ebp)
mov    0x8(%ebp),%ecx
mov    %eax,-0x460(%ebp)
mov    %edx,-0x46c(%ebp)
mov    %ebx,-0x444(%ebp)
mov    0x14(%ebp),%ebx
mov    %ecx,-0x448(%ebp)
mov    0x10(%ebp),%ecx
mov    %ebx,-0x458(%ebp)
mov    0x1c(%ebp),%ebx
mov    %ecx,-0x464(%ebp)
mov    0x18(%ebp),%ecx
mov    %ebx,-0x454(%ebp)
xor    %ebx,%ebx
mov    %ecx,-0x45c(%ebp)
mov    %gs:0x14,%ecx
mov    %ecx,-0x1c(%ebp)
xor    %ecx,%ecx
mov    %eax,%ecx
add    %edx,%ecx
cmpb   $0x0,(%eax)
mov    %ecx,-0x43c(%ebp)
sete   %bl
add    %eax,%ebx
cmp    %ebx,%ecx
je     805f718 <fchmod@plt+0x14778>
call   804af60 <__ctype_b_loc@plt>
mov    %esi,-0x450(%ebp)
mov    -0x43c(%ebp),%esi
mov    %edi,-0x44c(%ebp)
mov    %eax,-0x468(%ebp)
mov    (%eax),%edx
jmp    805f4db <fchmod@plt+0x1453b>
lea    0x0(%esi),%esi
add    $0x1,%ebx
cmp    %ebx,%esi
je     805f718 <fchmod@plt+0x14778>
movzbl (%ebx),%ecx
movzbl %cl,%eax
testb  $0x20,0x1(%edx,%eax,2)
jne    805f4d0 <fchmod@plt+0x14530>
mov    -0x448(%ebp),%eax
mov    -0x444(%ebp),%edx
neg    %eax
mov    %eax,-0x478(%ebp)
movsbl %cl,%eax
adc    $0x0,%edx
sub    $0x30,%eax
neg    %edx
cmp    $0x7,%eax
mov    %edx,-0x474(%ebp)
mov    %eax,-0x450(%ebp)
ja     805f748 <fchmod@plt+0x147a8>
mov    -0x450(%ebp),%esi
lea    0x1(%ebx),%eax
mov    %eax,-0x45c(%ebp)
mov    %esi,%edi
sar    $0x1f,%edi
cmp    -0x43c(%ebp),%eax
je     805fcb4 <fchmod@plt+0x14d14>
movsbl 0x1(%ebx),%eax
movsbl %al,%edx
sub    $0x30,%edx
cmp    $0x7,%edx
ja     805fccc <fchmod@plt+0x14d2c>
mov    -0x45c(%ebp),%edx
mov    %cl,-0x470(%ebp)
mov    %ebx,-0x46c(%ebp)
xor    %ebx,%ebx
movb   $0x0,-0x448(%ebp)
mov    %edx,%ecx
jmp    805f57e <fchmod@plt+0x145de>
xchg   %ax,%ax
movsbl (%ecx),%eax
movsbl %al,%edx
sub    $0x30,%edx
cmp    $0x7,%edx
ja     805f5a3 <fchmod@plt+0x14603>
test   $0xe0000000,%edi
setne  %dl
sub    $0x30,%eax
shld   $0x3,%esi,%edi
or     %edx,%ebx
shl    $0x3,%esi
add    $0x1,%ecx
cltd
add    %eax,%esi
adc    %edx,%edi
cmp    -0x43c(%ebp),%ecx
jne    805f570 <fchmod@plt+0x145d0>
mov    %bl,-0x448(%ebp)
mov    -0x46c(%ebp),%ebx
mov    %ecx,-0x46c(%ebp)
movzbl -0x470(%ebp),%ecx
cmp    %edi,-0x458(%ebp)
jae    805f898 <fchmod@plt+0x148f8>
cmp    $0x31,%cl
jle    805fad1 <fchmod@plt+0x14b31>
mov    -0x440(%ebp),%ecx
test   %ecx,%ecx
je     805fad1 <fchmod@plt+0x14b31>
mov    -0x450(%ebp),%eax
mov    $0x7,%edx
mov    -0x45c(%ebp),%ecx
or     $0x4,%eax
sub    %eax,%edx
mov    %edx,%edi
mov    %edx,%esi
sar    $0x1f,%edi
cmp    %ecx,-0x43c(%ebp)
je     805fe4b <fchmod@plt+0x14eab>
movsbl 0x1(%ebx),%eax
lea    -0x30(%eax),%edx
cmp    $0x7,%edx
ja     805fbad <fchmod@plt+0x14c0d>
mov    %ecx,%edx
xor    %ecx,%ecx
mov    %ebx,-0x448(%ebp)
mov    %edx,%ebx
jmp    805f633 <fchmod@plt+0x14693>
xchg   %ax,%ax
movsbl (%ebx),%eax
lea    -0x30(%eax),%edx
cmp    $0x7,%edx
ja     805f65e <fchmod@plt+0x146be>
test   $0xe0000000,%edi
setne  %dl
or     %edx,%ecx
mov    $0x37,%edx
sub    %eax,%edx
shld   $0x3,%esi,%edi
mov    %edx,%eax
shl    $0x3,%esi
cltd
add    %eax,%esi
adc    %edx,%edi
add    $0x1,%ebx
cmp    -0x43c(%ebp),%ebx
jne    805f628 <fchmod@plt+0x14688>
mov    %ebx,-0x46c(%ebp)
mov    -0x448(%ebp),%ebx
add    $0x1,%esi
adc    $0x0,%edi
mov    %esi,%eax
or     %edi,%eax
sete   -0x448(%ebp)
or     %cl,-0x448(%ebp)
cmpb   $0x1,-0x448(%ebp)
je     805fad1 <fchmod@plt+0x14b31>
cmp    -0x474(%ebp),%edi
jb     805f6a8 <fchmod@plt+0x14708>
ja     805fad1 <fchmod@plt+0x14b31>
cmp    -0x478(%ebp),%esi
ja     805fad1 <fchmod@plt+0x14b31>
cmpb   $0x0,-0x454(%ebp)
movb   $0x1,-0x45c(%ebp)
jne    805f8ba <fchmod@plt+0x1491a>
movl   $0x5,0x8(%esp)
movl   $0x808840c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edx
mov    -0x440(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x14(%esp)
mov    -0x46c(%ebp),%eax
sub    %ebx,%eax
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
jmp    805f8ba <fchmod@plt+0x1491a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x440(%ebp),%ecx
test   %ecx,%ecx
jne    805f838 <fchmod@plt+0x14898>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    805fe72 <fchmod@plt+0x14ed2>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,-0x45c(%ebp)
je     805f910 <fchmod@plt+0x14970>
movb   $0x0,-0x45c(%ebp)
xor    %esi,%esi
xor    %edi,%edi
test   %cl,%cl
je     805f8d5 <fchmod@plt+0x14935>
mov    -0x468(%ebp),%eax
movzbl %cl,%edx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%edx,2)
jne    805f8d5 <fchmod@plt+0x14935>
mov    -0x440(%ebp),%edx
test   %edx,%edx
je     805f726 <fchmod@plt+0x14786>
mov    0x809db08,%eax
test   %eax,%eax
je     805fe20 <fchmod@plt+0x14e80>
mov    -0x43c(%ebp),%edx
mov    -0x460(%ebp),%ecx
cmp    %edx,%ecx
je     805f7c3 <fchmod@plt+0x14823>
cmpb   $0x0,-0x1(%edx)
je     805f7b6 <fchmod@plt+0x14816>
jmp    805f7c3 <fchmod@plt+0x14823>
lea    0x0(%esi),%esi
cmpb   $0x0,-0x1(%edx)
jne    805f7bd <fchmod@plt+0x1481d>
sub    $0x1,%edx
cmp    %edx,%ecx
jne    805f7b0 <fchmod@plt+0x14810>
mov    %edx,-0x43c(%ebp)
mov    -0x460(%ebp),%edi
lea    -0x404(%ebp),%ebx
mov    %eax,0x10(%esp)
mov    -0x43c(%ebp),%eax
movl   $0x3e8,0x4(%esp)
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
sub    %edi,%eax
mov    %eax,0xc(%esp)
call   8080490 <argp_parse+0x8550>
cmpb   $0x0,-0x454(%ebp)
jne    805f726 <fchmod@plt+0x14786>
movl   $0x5,0x8(%esp)
movl   $0x8088510,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x440(%ebp),%edi
mov    %ebx,0x10(%esp)
movl   $0x3e8,0xc(%esp)
mov    %edi,0x14(%esp)
jmp    805fb2f <fchmod@plt+0x14b8f>
nop
cmpb   $0x1,-0x454(%ebp)
je     805f726 <fchmod@plt+0x14786>
movl   $0x5,0x8(%esp)
movl   $0x80883d8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x440(%ebp),%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805f726 <fchmod@plt+0x14786>
lea    0x0(%esi),%esi
ja     805f8a6 <fchmod@plt+0x14906>
cmp    %esi,-0x464(%ebp)
jb     805f5c8 <fchmod@plt+0x14628>
cmpb   $0x0,-0x448(%ebp)
jne    805f5c8 <fchmod@plt+0x14628>
movb   $0x0,-0x45c(%ebp)
mov    -0x43c(%ebp),%ebx
mov    -0x46c(%ebp),%eax
cmp    %ebx,%eax
je     805f8d5 <fchmod@plt+0x14935>
movzbl (%eax),%ecx
test   %cl,%cl
jne    805f768 <fchmod@plt+0x147c8>
cmpb   $0x0,-0x45c(%ebp)
je     805fcf0 <fchmod@plt+0x14d50>
cmp    %edi,-0x474(%ebp)
jbe    805fd0b <fchmod@plt+0x14d6b>
neg    %esi
adc    $0x0,%edi
mov    %esi,%ecx
neg    %edi
mov    %edi,%ebx
test   %ebx,%ebx
mov    %ecx,%eax
mov    %ebx,%edx
js     805f730 <fchmod@plt+0x14790>
mov    %ecx,%eax
mov    %ebx,%edx
jmp    805f730 <fchmod@plt+0x14790>
xchg   %ax,%ax
cmp    $0x2d,%cl
sete   %al
cmp    $0x2b,%cl
je     805f9de <fchmod@plt+0x14a3e>
test   %al,%al
jne    805f9de <fchmod@plt+0x14a3e>
cmp    $0xff,%cl
je     805f936 <fchmod@plt+0x14996>
cmp    $0x80,%cl
nop
jne    805f755 <fchmod@plt+0x147b5>
mov    %ecx,%eax
mov    %ecx,%esi
and    $0x40,%eax
and    $0x3f,%esi
movsbl %al,%eax
mov    %eax,%edi
sub    %edi,%esi
mov    %eax,-0x45c(%ebp)
neg    %eax
mov    %esi,%ecx
mov    %eax,-0x450(%ebp)
lea    0x1(%ebx),%eax
mov    %esi,%ebx
shll   $0x12,-0x450(%ebp)
sar    $0x1f,%ebx
mov    %eax,-0x448(%ebp)
jmp    805f98d <fchmod@plt+0x149ed>
xchg   %ax,%ax
mov    %edi,%eax
mov    %esi,%ecx
and    $0xffffff,%eax
xor    %esi,%esi
or     -0x450(%ebp),%eax
mov    %eax,%ebx
xor    %edi,%eax
or     %esi,%eax
jne    805fc84 <fchmod@plt+0x14ce4>
addl   $0x1,-0x448(%ebp)
mov    %ecx,%eax
mov    -0x448(%ebp),%edi
shl    $0x8,%eax
mov    %ebx,%edx
shld   $0x8,%ecx,%edx
movzbl -0x1(%edi),%esi
xor    %edi,%edi
add    %eax,%esi
mov    -0x448(%ebp),%eax
adc    %edx,%edi
cmp    -0x43c(%ebp),%eax
jne    805f970 <fchmod@plt+0x149d0>
mov    -0x45c(%ebp),%ecx
test   %ecx,%ecx
je     805fce4 <fchmod@plt+0x14d44>
neg    %esi
adc    $0x0,%edi
neg    %edi
movb   $0x1,-0x45c(%ebp)
jmp    805f8e2 <fchmod@plt+0x14942>
cmpb   $0x0,-0x454(%ebp)
mov    %al,-0x45c(%ebp)
je     805fb56 <fchmod@plt+0x14bb6>
lea    0x1(%ebx),%eax
cmp    %eax,-0x43c(%ebp)
mov    %eax,-0x470(%ebp)
je     805fe69 <fchmod@plt+0x14ec9>
movzbl 0x1(%ebx),%edx
movl   $0x0,-0x450(%ebp)
00
mov    -0x470(%ebp),%esi
movl   $0x0,-0x44c(%ebp)
00
movzbl %dl,%eax
movzbl 0x809db20(%eax),%ecx
cmp    $0x3f,%cl
jle    805fa84 <fchmod@plt+0x14ae4>
jmp    805fe5e <fchmod@plt+0x14ebe>
movzbl (%esi),%eax
movzbl %al,%edx
movzbl 0x809db20(%edx),%ecx
cmp    $0x3f,%cl
jg     805fc71 <fchmod@plt+0x14cd1>
mov    -0x444(%ebp),%edx
mov    -0x448(%ebp),%eax
mov    %edx,%edi
and    $0x3ffffff,%edi
mov    %edi,-0x44c(%ebp)
xor    -0x444(%ebp),%edi
mov    %eax,-0x450(%ebp)
xor    -0x448(%ebp),%eax
mov    %edi,%edx
or     %eax,%edx
jne    805fbc0 <fchmod@plt+0x14c20>
mov    -0x450(%ebp),%eax
movsbl %cl,%edi
add    $0x1,%esi
mov    -0x44c(%ebp),%edx
mov    %edi,%ebx
sar    $0x1f,%ebx
shld   $0x6,%eax,%edx
shl    $0x6,%eax
or     %eax,%edi
mov    %edi,-0x448(%ebp)
mov    %ebx,%edi
or     %edx,%edi
cmp    %esi,-0x43c(%ebp)
mov    %edi,-0x444(%ebp)
jne    805fa38 <fchmod@plt+0x14a98>
mov    -0x448(%ebp),%esi
mov    -0x444(%ebp),%edi
jmp    805f8d5 <fchmod@plt+0x14935>
cmpb   $0x0,-0x448(%ebp)
je     805f8b3 <fchmod@plt+0x14913>
mov    -0x440(%ebp),%eax
test   %eax,%eax
je     805f726 <fchmod@plt+0x14786>
cmpb   $0x1,-0x454(%ebp)
je     805f726 <fchmod@plt+0x14786>
movl   $0x5,0x8(%esp)
movl   $0x8088454,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x46c(%ebp),%esi
mov    -0x440(%ebp),%edi
mov    %ebx,0x10(%esp)
sub    %ebx,%esi
mov    %edi,0x14(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    805f726 <fchmod@plt+0x14786>
cmpb   $0x0,0x809db0c
jne    805f9f1 <fchmod@plt+0x14a51>
movl   $0x5,0x8(%esp)
movl   $0x8088480,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x1,0x809db0c
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
cmpb   $0x2d,(%ebx)
sete   -0x45c(%ebp)
jmp    805f9f1 <fchmod@plt+0x14a51>
mov    -0x45c(%ebp),%eax
xor    %ecx,%ecx
mov    %eax,-0x46c(%ebp)
jmp    805f66a <fchmod@plt+0x146ca>
mov    -0x46c(%ebp),%edi
mov    %edi,%eax
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
mov    -0x460(%ebp),%eax
lea    0x2b(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <memcpy@plt>
mov    -0x440(%ebp),%eax
movb   $0x0,(%ebx,%edi,1)
test   %eax,%eax
je     805f726 <fchmod@plt+0x14786>
cmpb   $0x1,-0x454(%ebp)
je     805f726 <fchmod@plt+0x14786>
mov    %ebx,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x80884b0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    -0x440(%ebp),%edi
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
movl   $0x2,0x809e084
00
jmp    805f730 <fchmod@plt+0x14790>
mov    -0x448(%ebp),%esi
mov    %eax,%ecx
mov    -0x444(%ebp),%edi
jmp    805f760 <fchmod@plt+0x147c0>
mov    -0x440(%ebp),%ebx
test   %ebx,%ebx
je     805f726 <fchmod@plt+0x14786>
cmpb   $0x1,-0x454(%ebp)
je     805f726 <fchmod@plt+0x14786>
movl   $0x5,0x8(%esp)
movl   $0x80884e4,0x4(%esp)
jmp    805f855 <fchmod@plt+0x148b5>
mov    -0x43c(%ebp),%eax
movb   $0x0,-0x448(%ebp)
mov    %eax,-0x46c(%ebp)
jmp    805f5bc <fchmod@plt+0x1461c>
mov    -0x45c(%ebp),%eax
movb   $0x0,-0x448(%ebp)
mov    %eax,-0x46c(%ebp)
jmp    805f5bc <fchmod@plt+0x1461c>
movb   $0x0,-0x45c(%ebp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,-0x458(%ebp)
ja     805fd02 <fchmod@plt+0x14d62>
jb     805fd19 <fchmod@plt+0x14d79>
cmp    %esi,-0x464(%ebp)
jb     805fd19 <fchmod@plt+0x14d79>
mov    %esi,%ecx
mov    %edi,%ebx
jmp    805f8f9 <fchmod@plt+0x14959>
jb     805fd19 <fchmod@plt+0x14d79>
cmp    %esi,-0x478(%ebp)
jae    805f8ee <fchmod@plt+0x1494e>
mov    -0x440(%ebp),%eax
test   %eax,%eax
je     805f726 <fchmod@plt+0x14786>
cmpb   $0x1,-0x454(%ebp)
je     805f726 <fchmod@plt+0x14786>
lea    -0x419(%ebp),%eax
mov    -0x474(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x478(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%ebx
lea    -0x403(%ebp),%eax
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
cmpb   $0x0,-0x45c(%ebp)
mov    %eax,%esi
je     805fd80 <fchmod@plt+0x14de0>
movb   $0x2d,-0x1(%eax)
sub    $0x1,%esi
mov    -0x474(%ebp),%edx
mov    -0x478(%ebp),%eax
mov    %edx,%edi
or     %eax,%edi
je     805fd99 <fchmod@plt+0x14df9>
movb   $0x2d,-0x1(%ebx)
sub    $0x1,%ebx
lea    -0x42f(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x464(%ebp),%eax
mov    %eax,(%esp)
mov    -0x458(%ebp),%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8088548,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x18(%esp)
mov    -0x440(%ebp),%edi
mov    %ebx,0x14(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
movl   $0x2,0x809e084
00
jmp    805f730 <fchmod@plt+0x14790>
movl   $0x0,(%esp)
call   8080370 <argp_parse+0x8430>
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x809db08
call   80803d0 <argp_parse+0x8490>
mov    0x809db08,%eax
jmp    805f795 <fchmod@plt+0x147f5>
mov    -0x43c(%ebp),%eax
xor    %ecx,%ecx
mov    %eax,-0x46c(%ebp)
jmp    805f66a <fchmod@plt+0x146ca>
mov    %edx,%ecx
xor    %esi,%esi
xor    %edi,%edi
jmp    805f760 <fchmod@plt+0x147c0>
xor    %esi,%esi
xor    %edi,%edi
jmp    805f8d5 <fchmod@plt+0x14935>
call   804a610 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x809db20,%edx
mov    $0x40404040,%eax
push   %edi
mov    $0x40,%ecx
mov    %edx,%edi
rep stos %eax,%es:(%edi)
xor    %eax,%eax
xchg   %ax,%ax
movsbl 0x80889a0(%eax),%edx
mov    %al,0x809db20(%edx)
add    $0x1,%eax
cmp    $0x40,%eax
jne    805fe98 <fchmod@plt+0x14ef8>
pop    %edi
ret
nop
sub    $0x2c,%esp
mov    $0x808703f,%ecx
movl   $0x0,0x14(%esp)
mov    $0x8,%edx
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    $0x8087045,%ecx
movl   $0x0,0x14(%esp)
mov    $0x8,%edx
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    $0x8087038,%ecx
movl   $0x0,0x14(%esp)
mov    $0xc,%edx
movl   $0x0,0x10(%esp)
movl   $0x7fffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80000000,(%esp)
movl   $0xffffffff,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
cmp    $0x56,%ebx
je     8060015 <fchmod@plt+0x15075>
lea    0x14(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
movl   $0x805f390,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x1,0x14(%esp)
add    $0x4,%eax
mov    %eax,(%esp)
call   806c9c0 <fchmod@plt+0x21a20>
cmp    $0x31,%ebx
je     8060020 <fchmod@plt+0x15080>
cmp    $0x32,%ebx
jne    8060015 <fchmod@plt+0x15075>
lea    0x18(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
movl   $0x805f390,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x4,0x18(%esp)
add    $0xc,%eax
mov    %eax,(%esp)
call   806c9c0 <fchmod@plt+0x21a20>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
movl   $0x805f390,0x8(%esp)
movl   $0x2,0x4(%esp)
movl   $0x2,0x1c(%esp)
add    $0xc,%eax
mov    %eax,(%esp)
call   806c9c0 <fchmod@plt+0x21a20>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x44(%esp),%eax
lea    0x200(%ebp),%edi
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
nop
movsbl (%eax),%edx
add    $0x1,%eax
movzbl %dl,%ecx
add    %edx,%esi
add    %ecx,%ebx
cmp    %edi,%eax
jne    8060080 <fchmod@plt+0x150e0>
test   %ebx,%ebx
mov    $0x3,%eax
jne    80600a2 <fchmod@plt+0x15102>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x7,%al
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x94(%ebp,%eax,1),%edx
sub    $0x1,%eax
movzbl %dl,%ecx
sub    %edx,%esi
sub    %ecx,%ebx
cmp    $0xffffffff,%eax
jne    80600a8 <fchmod@plt+0x15108>
movzbl 0x1c(%esp),%edx
xor    %ecx,%ecx
lea    0x94(%ebp),%eax
movl   $0x1,0x10(%esp)
movl   $0x7fffffff,0x8(%esp)
mov    %edx,0x14(%esp)
mov    $0x8,%edx
movl   $0x0,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
mov    %eax,%edx
mov    $0x5,%eax
test   %edx,%edx
js     806009a <fchmod@plt+0x150fa>
add    $0x100,%esi
add    $0x100,%ebx
cmp    %edx,%esi
je     8060124 <fchmod@plt+0x15184>
cmp    %edx,%ebx
jne    806009a <fchmod@plt+0x150fa>
mov    $0x1,%eax
jmp    806009a <fchmod@plt+0x150fa>
xchg   %ax,%ax
push   %ebp
mov    $0x808701b,%ecx
push   %edi
mov    $0x8,%edx
push   %esi
mov    $0x8089a4a,%edi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
movl   $0x0,0x14(%esp)
mov    0x54(%esp),%ebx
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
lea    0x64(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x80000000,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
mov    $0x6,%ecx
mov    %eax,0x28(%esp)
and    $0xfff,%eax
mov    %eax,0x20(%esp)
lea    0x101(%ebp),%eax
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %edx,0x2c(%esp)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    8060360 <fchmod@plt+0x153c0>
cmpb   $0x0,0x1db(%ebp)
jne    80601e0 <fchmod@plt+0x15240>
movzbl 0x1dc(%ebp),%eax
sub    $0x30,%eax
cmp    $0x7,%al
ja     80601e0 <fchmod@plt+0x15240>
cmpb   $0x20,0x1e7(%ebp)
je     80605e0 <fchmod@plt+0x15640>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0xd0(%ebx)
sbb    %esi,%esi
add    $0x4,%esi
mov    0x58(%esp),%eax
xor    %edi,%edi
mov    %esi,(%eax)
mov    0x20(%esp),%eax
mov    %eax,0x3c(%ebx)
lea    0x88(%ebp),%eax
call   805ff50 <fchmod@plt+0x14fb0>
movl   $0x0,0x98(%ebx)
00
mov    %eax,0x94(%ebx)
lea    0x109(%ebp),%eax
cmpb   $0x0,0x109(%ebp)
cmove  %edi,%eax
mov    %eax,0x4(%esp)
lea    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
lea    0x129(%ebp),%eax
cmpb   $0x0,0x129(%ebp)
cmovne %eax,%edi
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %ebx,(%esp)
call   805ad30 <fchmod@plt+0xfd90>
cmp    $0x2,%esi
je     80603b0 <fchmod@plt+0x15410>
cmp    $0x5,%esi
je     8060548 <fchmod@plt+0x155a8>
mov    0x809e49c,%eax
cmp    $0x1,%esi
mov    0x809e4a0,%edx
mov    %eax,0x9c(%ebx)
mov    %edx,0xa0(%ebx)
mov    %eax,0x8c(%ebx)
mov    %edx,0x90(%ebx)
je     80604d8 <fchmod@plt+0x15538>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     80602e4 <fchmod@plt+0x15344>
cmpb   $0x0,0x809e47c
jne    80602b8 <fchmod@plt+0x15318>
cmpb   $0x0,0x109(%ebp)
jne    80605b8 <fchmod@plt+0x15618>
lea    0x6c(%ebp),%eax
call   805feb0 <fchmod@plt+0x14f10>
mov    %eax,0x44(%ebx)
cmpb   $0x0,0x809e47c
jne    80602d9 <fchmod@plt+0x15339>
cmpb   $0x0,0x129(%ebp)
jne    8060590 <fchmod@plt+0x155f0>
lea    0x74(%ebp),%eax
call   805ff00 <fchmod@plt+0x14f60>
mov    %eax,0x48(%ebx)
movzbl 0x9c(%ebp),%eax
sub    $0x33,%eax
cmp    $0x1,%al
jbe    80603f8 <fchmod@plt+0x15458>
movl   $0x0,0x4c(%ebx)
movl   $0x0,0x50(%ebx)
mov    0x58(%ebx),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0xa4(%ebx)
mov    %edx,0xa8(%ebx)
mov    %ebx,(%esp)
call   805afd0 <fchmod@plt+0x10030>
mov    %ebx,(%esp)
call   8067ce0 <fchmod@plt+0x1cd40>
test   %al,%al
jne    80604c0 <fchmod@plt+0x15520>
mov    0x809e2ac,%eax
movb   $0x0,0xac(%ebx)
and    $0xfffffffb,%eax
cmp    $0x2,%eax
je     80603a0 <fchmod@plt+0x15400>
mov    0xe4(%ebx),%eax
test   %eax,%eax
je     8060353 <fchmod@plt+0x153b3>
movb   $0x1,0xe0(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    $0x8,%ecx
mov    $0x80885b3,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x1,%esi
seta   %cl
setb   %al
cmp    %al,%cl
jne    80601ec <fchmod@plt+0x1524c>
mov    0x28(%esp),%eax
and    $0xfffff000,%eax
or     0x2c(%esp),%eax
cmp    $0x1,%eax
sbb    %esi,%esi
and    $0x4,%esi
add    $0x2,%esi
jmp    80601ec <fchmod@plt+0x1524c>
xchg   %ax,%ax
mov    0x809e2b8,%eax
cmpb   $0x44,0x9c(%eax)
jne    8060342 <fchmod@plt+0x153a2>
jmp    806034c <fchmod@plt+0x153ac>
cmpb   $0x0,0x809e2e1
jne    8060508 <fchmod@plt+0x15568>
mov    0x809e49c,%eax
mov    0x809e4a0,%edx
mov    %eax,0x9c(%ebx)
mov    %eax,0x8c(%ebx)
mov    0x5c(%esp),%eax
mov    %edx,0xa0(%ebx)
mov    %edx,0x90(%ebx)
test   %eax,%eax
je     80602e4 <fchmod@plt+0x15344>
jmp    80602a2 <fchmod@plt+0x15302>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8087022,%ecx
mov    $0x8,%edx
lea    0x151(%ebp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x7fffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80000000,(%esp)
movl   $0xffffffff,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
mov    $0x808702a,%ecx
mov    $0x8,%edx
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x7fffffff,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80000000,(%esp)
mov    %eax,%esi
movl   $0xffffffff,0x4(%esp)
lea    0x149(%ebp),%eax
call   805f430 <fchmod@plt+0x14490>
mov    %esi,%edx
xor    %ecx,%ecx
xor    %dl,%dl
shld   $0xc,%edx,%ecx
mov    %ecx,0x24(%esp)
mov    %esi,%ecx
movzbl %cl,%esi
shl    $0xc,%edx
mov    %eax,%edi
and    $0xfff,%eax
and    $0xfffff000,%edi
shl    $0x8,%eax
or     0x24(%esp),%edi
or     %esi,%eax
mov    %edx,0x20(%esp)
or     %eax,%edx
mov    %edx,0x4c(%ebx)
mov    %edi,0x50(%ebx)
jmp    8060304 <fchmod@plt+0x15364>
nop
mov    %ebx,(%esp)
call   8067d20 <fchmod@plt+0x1cd80>
movb   $0x1,0xac(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x6c(%ebp),%eax
call   805feb0 <fchmod@plt+0x14f10>
mov    %eax,0x44(%ebx)
lea    0x74(%ebp),%eax
call   805ff00 <fchmod@plt+0x14f60>
movl   $0x0,0x4c(%ebx)
movl   $0x0,0x50(%ebx)
mov    %eax,0x48(%ebx)
jmp    8060304 <fchmod@plt+0x15364>
lea    0x0(%esi,%eiz,1),%esi
lea    0x159(%ebp),%eax
call   805ff50 <fchmod@plt+0x14fb0>
mov    %eax,0x8c(%ebx)
lea    0x165(%ebp),%eax
call   805ff50 <fchmod@plt+0x14fb0>
movl   $0x0,0xa0(%ebx)
00
movl   $0x0,0x90(%ebx)
00
mov    %eax,0x9c(%ebx)
jmp    806029a <fchmod@plt+0x152fa>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1dc(%ebp),%eax
call   805ff50 <fchmod@plt+0x14fb0>
mov    %eax,0x8c(%ebx)
lea    0x1e8(%ebp),%eax
call   805ff50 <fchmod@plt+0x14fb0>
movl   $0x0,0xa0(%ebx)
00
movl   $0x0,0x90(%ebx)
00
mov    %eax,0x9c(%ebx)
mov    0x5c(%esp),%eax
test   %eax,%eax
je     80602e4 <fchmod@plt+0x15344>
jmp    80602a2 <fchmod@plt+0x15302>
nop
lea    0x48(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x129(%ebp),%eax
mov    %eax,(%esp)
call   80649f0 <fchmod@plt+0x19a50>
test   %eax,%eax
je     80602d9 <fchmod@plt+0x15339>
jmp    80602e4 <fchmod@plt+0x15344>
lea    0x0(%esi),%esi
lea    0x44(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x109(%ebp),%eax
mov    %eax,(%esp)
call   8064950 <fchmod@plt+0x199b0>
test   %eax,%eax
je     80602b8 <fchmod@plt+0x15318>
jmp    80602c3 <fchmod@plt+0x15323>
lea    0x0(%esi),%esi
movzbl 0x1e8(%ebp),%eax
sub    $0x30,%eax
cmp    $0x7,%al
ja     80601e0 <fchmod@plt+0x15240>
cmpb   $0x20,0x1f3(%ebp)
mov    $0x5,%esi
jne    80601e0 <fchmod@plt+0x15240>
jmp    80601ec <fchmod@plt+0x1524c>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    $0x8087032,%ecx
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x7fffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %gs:0x14,%edi
mov    %edi,0x14c(%esp)
xor    %edi,%edi
movl   $0x0,0x24(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x14(%esp)
mov    0x174(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,0x10(%esp)
add    $0xcc,%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%ebp
mov    0x14(%esp),%eax
test   %ebp,%ebp
mov    %ebp,(%eax)
je     8060a65 <fchmod@plt+0x15ac5>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8060060 <fchmod@plt+0x150c0>
cmp    $0x1,%eax
jne    80608b0 <fchmod@plt+0x15910>
cmpb   $0x31,0x9c(%ebp)
jne    8060880 <fchmod@plt+0x158e0>
mov    0x10(%esp),%eax
movl   $0x0,0x58(%eax)
movl   $0x0,0x5c(%eax)
movzbl 0x9c(%ebp),%eax
lea    -0x4b(%eax),%edx
cmp    $0x1,%dl
ja     80608d0 <fchmod@plt+0x15930>
cmpl   $0x1,0x178(%esp)
je     80609c9 <fchmod@plt+0x15a29>
mov    0x10(%esp),%ecx
mov    0x58(%ecx),%eax
mov    0x5c(%ecx),%edx
mov    %eax,%ecx
and    $0x1ff,%ecx
jne    8060a08 <fchmod@plt+0x15a68>
lea    0x200(%eax),%ebx
test   %edx,%edx
jne    8060cb7 <fchmod@plt+0x15d17>
cmp    %eax,%ebx
jb     8060cb7 <fchmod@plt+0x15d17>
lea    0x1(%ebx),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
cmpb   $0x4c,0x9c(%ebp)
mov    %eax,0x18(%esp)
je     8060a18 <fchmod@plt+0x15a78>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%esp),%edx
mov    %ebx,%eax
shr    $0x9,%eax
mov    %eax,0x24(%esp)
mov    %edx,0x1c(%esp)
mov    %ebp,(%esp)
mov    %ebp,%esi
mov    %edx,0x18(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x18(%esp),%edx
mov    $0x200,%eax
test   $0x1,%dl
mov    %edx,%edi
jne    8060a4f <fchmod@plt+0x15aaf>
test   $0x2,%edi
jne    8060a3a <fchmod@plt+0x15a9a>
mov    %eax,%ecx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     80607d9 <fchmod@plt+0x15839>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
test   $0x1,%al
je     80607e4 <fchmod@plt+0x15844>
movzbl (%esi,%ecx,1),%eax
mov    %al,(%edi,%ecx,1)
sub    $0x200,%ebx
lea    0x200(%edx),%edi
jne    8060829 <fchmod@plt+0x15889>
jmp    8060872 <fchmod@plt+0x158d2>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804cd40 <fchmod@plt+0x1da0>
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
cmp    %ebx,%eax
cmova  %ebx,%eax
mov    %eax,%esi
mov    %eax,0x8(%esp)
add    %esi,%edi
call   804a4e0 <memcpy@plt>
lea    -0x1(%ebp,%esi,1),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
sub    %esi,%ebx
je     8060872 <fchmod@plt+0x158d2>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%ebp
jne    80607f8 <fchmod@plt+0x15858>
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movb   $0x0,(%edi)
jmp    80606c0 <fchmod@plt+0x15720>
lea    0x0(%esi),%esi
lea    0x7c(%ebp),%eax
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    0x10(%esp),%ecx
test   %edx,%edx
mov    %eax,0x58(%ecx)
mov    %edx,0x5c(%ecx)
jns    806070d <fchmod@plt+0x1576d>
mov    $0x5,%eax
lea    0x0(%esi),%esi
mov    0x14c(%esp),%edi
xor    %gs:0x14,%edi
jne    8060cbc <fchmod@plt+0x15d1c>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x67,%al
je     80608e2 <fchmod@plt+0x15942>
mov    %eax,%edx
and    $0xffffffdf,%edx
cmp    $0x58,%dl
jne    8060ab0 <fchmod@plt+0x15b10>
cmpl   $0x1,0x178(%esp)
je     80609c9 <fchmod@plt+0x15a29>
mov    %eax,%edx
and    $0xffffffdf,%edx
cmp    $0x58,%dl
je     80609d8 <fchmod@plt+0x15a38>
cmp    $0x67,%al
jne    80606c0 <fchmod@plt+0x15720>
mov    0x809dc20,%eax
test   %eax,%eax
je     8060a9a <fchmod@plt+0x15afa>
test   $0x1,%al
mov    %eax,%edi
mov    %ebp,%esi
mov    $0x200,%edx
jne    8060a84 <fchmod@plt+0x15ae4>
test   $0x2,%edi
jne    8060a6f <fchmod@plt+0x15acf>
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     8060944 <fchmod@plt+0x159a4>
movzwl (%esi),%eax
mov    $0x2,%cl
mov    %ax,(%edi)
and    $0x1,%edx
je     8060950 <fchmod@plt+0x159b0>
movzbl (%esi,%ecx,1),%eax
mov    %al,(%edi,%ecx,1)
lea    0x7c(%ebp),%eax
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x34(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   805b180 <fchmod@plt+0x101e0>
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805b050 <fchmod@plt+0x100b0>
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805b320 <fchmod@plt+0x10380>
cmpl   $0x2,0x178(%esp)
jne    80606c0 <fchmod@plt+0x15720>
mov    $0x2,%eax
jmp    80608b0 <fchmod@plt+0x15910>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x7c(%ebp),%eax
movl   $0xc,0x4(%esp)
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   805b180 <fchmod@plt+0x101e0>
jmp    80606c0 <fchmod@plt+0x15720>
lea    0x400(%eax),%ebx
sub    %ecx,%ebx
jmp    806074c <fchmod@plt+0x157ac>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%esp),%edx
mov    %ebx,%eax
shr    $0x9,%eax
mov    %eax,0x2c(%esp)
mov    %edx,0x28(%esp)
jmp    8060795 <fchmod@plt+0x157f5>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %cx,-0x2(%edi)
jmp    80607c3 <fchmod@plt+0x15823>
movzbl 0x0(%ebp),%eax
lea    0x1(%edx),%edi
add    $0x1,%esi
mov    %al,(%edx)
mov    $0x1ff,%eax
jmp    80607b7 <fchmod@plt+0x15817>
mov    $0x4,%eax
jmp    80608b0 <fchmod@plt+0x15910>
movzwl (%esi),%eax
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %ax,-0x2(%edi)
jmp    8060930 <fchmod@plt+0x15990>
movzbl 0x0(%ebp),%edx
add    $0x1,%edi
lea    0x1(%ebp),%esi
mov    %dl,(%eax)
mov    $0x1ff,%edx
jmp    8060924 <fchmod@plt+0x15984>
movl   $0x200,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x809dc20
jmp    8060913 <fchmod@plt+0x15973>
mov    0x809e2b0,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8060b56 <fchmod@plt+0x15bb6>
lea    0x200(%eax),%ebx
mov    %eax,0x809e2b0
mov    0x2c(%esp),%eax
mov    %eax,0x809e2b4
mov    0x10(%esp),%edi
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %edi,%eax
add    $0x4,%eax
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   80793f0 <argp_parse+0x14b0>
mov    %al,0x8(%edi)
mov    0x809e2c0,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8060bed <fchmod@plt+0x15c4d>
lea    0x200(%eax),%ebx
mov    %eax,0x809e2c0
mov    0x24(%esp),%eax
mov    %eax,0x809e2bc
mov    0x10(%esp),%eax
mov    %ebx,0x4(%esp)
add    $0xc,%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    $0x1,%eax
jmp    80608b0 <fchmod@plt+0x15910>
cmpb   $0x0,0x159(%ebp)
je     8060be5 <fchmod@plt+0x15c45>
mov    $0x6,%ecx
mov    $0x8089a4a,%edi
lea    0x101(%ebp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    0x4b(%esp),%ebx
mov    %ebx,%edx
seta   %cl
setb   %al
cmp    %al,%cl
je     8060c57 <fchmod@plt+0x15cb7>
test   $0x1,%dl
mov    %edx,%edi
mov    %ebp,%esi
mov    $0x64,%eax
jne    8060cd6 <fchmod@plt+0x15d36>
test   $0x2,%edi
jne    8060d3c <fchmod@plt+0x15d9c>
mov    %eax,%ecx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     8060bbd <fchmod@plt+0x15c1d>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
test   $0x1,%al
je     8060bc8 <fchmod@plt+0x15c28>
movzbl (%esi,%ecx,1),%eax
mov    %al,(%edi,%ecx,1)
movb   $0x0,0x64(%edx)
movl   $0x0,0x809e2b0
00
movl   $0x0,0x809e2b4
00
jmp    8060add <fchmod@plt+0x15b3d>
lea    0x4b(%esp),%ebx
mov    %ebx,%edx
jmp    8060b89 <fchmod@plt+0x15be9>
lea    0x4b(%esp),%ebx
mov    $0x64,%eax
test   $0x1,%bl
mov    %ebx,%edi
lea    0x9d(%ebp),%esi
jne    8060d1d <fchmod@plt+0x15d7d>
test   $0x2,%edi
jne    8060cc1 <fchmod@plt+0x15d21>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     8060c2b <fchmod@plt+0x15c8b>
movzwl (%esi),%edx
mov    %dx,(%edi)
mov    $0x2,%edx
test   $0x1,%al
je     8060c36 <fchmod@plt+0x15c96>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
movb   $0x0,0xaf(%esp)
movl   $0x0,0x809e2c0
00
movl   $0x0,0x809e2bc
00
jmp    8060b39 <fchmod@plt+0x15b99>
test   $0x1,%bl
mov    %ebx,%edi
lea    0x159(%ebp),%esi
mov    $0x9b,%edx
jne    8060d01 <fchmod@plt+0x15d61>
test   $0x2,%edi
jne    8060cec <fchmod@plt+0x15d4c>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     8060c8e <fchmod@plt+0x15cee>
movzwl (%esi),%eax
mov    %ax,(%edi)
mov    $0x2,%eax
and    $0x1,%edx
je     8060c9a <fchmod@plt+0x15cfa>
movzbl (%esi,%eax,1),%edx
mov    %dl,(%edi,%eax,1)
mov    %ebx,(%esp)
movb   $0x0,0xe6(%esp)
call   804a950 <strlen@plt>
add    %ebx,%eax
lea    0x1(%eax),%edx
movb   $0x2f,(%eax)
jmp    8060b89 <fchmod@plt+0x15be9>
call   8056010 <fchmod@plt+0xb070>
call   804a610 <__stack_chk_fail@plt>
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    8060c13 <fchmod@plt+0x15c73>
movzbl 0x0(%ebp),%eax
lea    0x1(%edx),%edi
lea    0x1(%ebp),%esi
mov    %al,(%edx)
mov    $0x63,%eax
jmp    8060b9b <fchmod@plt+0x15bfb>
movzwl (%esi),%eax
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %ax,-0x2(%edi)
jmp    8060c75 <fchmod@plt+0x15cd5>
movzbl 0x159(%ebp),%eax
lea    0x4c(%esp),%edi
mov    $0x9a,%dl
lea    0x15a(%ebp),%esi
mov    %al,0x4b(%esp)
jmp    8060c6d <fchmod@plt+0x15ccd>
movzbl 0x9d(%ebp),%eax
lea    0x4c(%esp),%edi
lea    0x9e(%ebp),%esi
mov    %al,0x4b(%esp)
mov    $0x63,%eax
jmp    8060c07 <fchmod@plt+0x15c67>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %cx,-0x2(%edi)
jmp    8060ba7 <fchmod@plt+0x15c07>
jmp    8060d60 <fchmod@plt+0x15dc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    $0x808704b,%ecx
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    %eax,%ebp
shr    $0x1f,%ebp
test   %ebx,%ebx
mov    %esi,%edi
mov    %eax,0x3c(%esp)
je     8060ddc <fchmod@plt+0x15e3c>
mov    %ebp,%ecx
test   %cl,%cl
jne    8060ea8 <fchmod@plt+0x15f08>
cmpb   $0x0,0x809e42d
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
je     8060ecc <fchmod@plt+0x15f2c>
call   804aa70 <gmtime@plt>
test   %eax,%eax
je     8060ed9 <fchmod@plt+0x15f39>
mov    %esi,%ecx
test   %cl,%cl
je     8060f50 <fchmod@plt+0x15fb0>
mov    (%eax),%edx
mov    %edx,0x24(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x1c(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x10(%eax),%edi
lea    0x1(%edi),%edx
mov    %edx,0x14(%esp)
mov    0x14(%eax),%eax
movl   $0x8088574,0xc(%esp)
movl   $0x25,0x8(%esp)
movl   $0x1,0x4(%esp)
add    $0x76c,%eax
mov    %eax,0x10(%esp)
movl   $0x809dae0,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    $0x809dae0,%ecx
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     8060e61 <fchmod@plt+0x15ec1>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmove  %edx,%ecx
add    %al,%al
sbb    $0x3,%ecx
mov    %ebx,(%esp)
mov    %ecx,0x4(%esp)
call   8062930 <fchmod@plt+0x17990>
add    $0x4c,%esp
mov    $0x809dae0,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%eax
mov    %eax,0x3c(%esp)
mov    $0x3b9aca00,%eax
sub    %ebx,%eax
cmpb   $0x0,0x809e42d
mov    %eax,%ebx
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
jne    8060df0 <fchmod@plt+0x15e50>
call   804a8f0 <localtime@plt>
test   %eax,%eax
jne    8060dfd <fchmod@plt+0x15e5d>
mov    %ebp,%eax
test   %al,%al
mov    0x3c(%esp),%eax
movl   $0x809dae6,0x8(%esp)
je     8060fb0 <fchmod@plt+0x16010>
cltd
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    -0x1(%eax),%edx
movb   $0x2d,-0x1(%eax)
mov    $0x809daf4,%ebp
mov    $0x809db01,%ecx
jmp    8060f1e <fchmod@plt+0x15f7e>
xchg   %ax,%ax
sub    $0x1,%edx
movb   $0x20,(%edx)
mov    %edi,%eax
test   %al,%al
mov    %ecx,%eax
cmove  %ebp,%eax
cmp    %eax,%edx
ja     8060f18 <fchmod@plt+0x15f78>
mov    %esi,%ecx
mov    %edx,%eax
test   %cl,%cl
je     8060fa4 <fchmod@plt+0x16004>
movl   $0x809dafa,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x2c(%esp)
call   8062930 <fchmod@plt+0x17990>
mov    0x2c(%esp),%eax
jmp    8060fa4 <fchmod@plt+0x16004>
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x1c(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x10(%eax),%esi
lea    0x1(%esi),%edx
mov    %edx,0x14(%esp)
mov    0x14(%eax),%eax
movl   $0x80885bb,0xc(%esp)
movl   $0x25,0x8(%esp)
movl   $0x1,0x4(%esp)
add    $0x76c,%eax
mov    %eax,0x10(%esp)
movl   $0x809dae0,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    $0x809dae0,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edx
jmp    8060f0a <fchmod@plt+0x15f6a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xcc,%esp
mov    %gs:0x14,%edi
mov    %edi,0xbc(%esp)
xor    %edi,%edi
mov    0xe0(%esp),%eax
cmpb   $0x0,0x809e4f4
mov    0xe4(%esp),%edx
je     8061398 <fchmod@plt+0x163f8>
mov    0x4(%ebx),%edi
test   %edi,%edi
mov    %edi,0x2c(%esp)
je     8061678 <fchmod@plt+0x166d8>
cmpb   $0x0,0x809e47d
je     8061093 <fchmod@plt+0x160f3>
test   %edx,%edx
js     8061740 <fchmod@plt+0x167a0>
mov    0x809e2b4,%esi
xor    %edi,%edi
lea    0x92(%esp),%ecx
mov    %ecx,0x8(%esp)
sub    %esi,%eax
mov    0x809e2bc,%esi
sbb    %edi,%edx
xor    %edi,%edi
sub    %esi,%eax
sbb    %edi,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x80885d5,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
cmpl   $0x1,0x809e46c
jle    8061780 <fchmod@plt+0x167e0>
cmpb   $0x56,0x9c(%ebp)
movb   $0x3f,0x47(%esp)
ja     80610d0 <fchmod@plt+0x16130>
movzbl 0x9c(%ebp),%eax
jmp    *0x80886c0(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x809db0d
movb   $0x56,0x47(%esp)
lea    0x0(%esi,%eiz,1),%esi
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%ebx),%eax
mov    %eax,(%esp)
call   806f140 <fchmod@plt+0x241a0>
lea    0x51(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   806ef00 <fchmod@plt+0x23f60>
movzbl 0x809e48c,%eax
mov    0x98(%ebx),%edx
mov    %eax,0x8(%esp)
mov    0x94(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060db0 <fchmod@plt+0x15e10>
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   804a950 <strlen@plt>
cmp    0x809c3ec,%eax
jg     80613f8 <fchmod@plt+0x16458>
mov    0x10(%ebx),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8061142 <fchmod@plt+0x161a2>
cmpb   $0x0,(%eax)
jne    8061428 <fchmod@plt+0x16488>
lea    0x6c(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,0x14(%esp)
mov    $0x8,%edx
mov    %esi,%eax
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8061480 <fchmod@plt+0x164e0>
lea    0x53(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,0x28(%esp)
mov    0x14(%ebx),%edi
test   %edi,%edi
je     80611b7 <fchmod@plt+0x16217>
cmpb   $0x0,(%edi)
jne    8061408 <fchmod@plt+0x16468>
lea    0x74(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,0x14(%esp)
mov    $0x8,%edx
mov    %esi,%eax
movl   $0x0,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   805f430 <fchmod@plt+0x14490>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8061458 <fchmod@plt+0x164b8>
lea    0x68(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edi
movzbl 0x9c(%ebp),%eax
sub    $0x33,%eax
cmp    $0x1,%al
ja     80613b8 <fchmod@plt+0x16418>
mov    0x50(%ebx),%edx
lea    0x7d(%esp),%esi
mov    0x4c(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,%ecx
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
mov    %ecx,(%esp)
mov    %esi,0x30(%esp)
lea    0x92(%esp),%esi
call   807c1f0 <argp_parse+0x42b0>
movl   $0x2a,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a960 <__stpcpy_chk@plt>
mov    $0x2c,%edx
mov    %dx,(%eax)
mov    0x30(%esp),%eax
mov    0x50(%ebx),%edx
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x4c(%ebx),%eax
shrd   $0xc,%edx,%eax
movzbl 0x4c(%ebx),%edx
xor    %al,%al
or     %edx,%eax
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x2a,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a370 <__strcat_chk@plt>
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,0x38(%esp)
call   804a950 <strlen@plt>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%edx
lea    0x2(%edx,%ecx,1),%ecx
add    %ecx,%eax
mov    0x809c3f0,%ecx
cmp    %ecx,%eax
jg     8061448 <fchmod@plt+0x164a8>
sub    %eax,%ecx
mov    0x34(%esp),%eax
add    %edx,%ecx
mov    %ecx,0x18(%esp)
mov    %esi,0x1c(%esp)
mov    %edi,0x14(%esp)
mov    %eax,0x24(%esp)
mov    0x809c3ec,%eax
movl   $0x80885e0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x47(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80806d0 <argp_parse+0x8790>
movl   $0x808d586,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
movzbl 0x9c(%ebp),%eax
cmp    $0x56,%al
ja     8061750 <fchmod@plt+0x167b0>
movzbl %al,%edx
jmp    *0x808881c(,%edx,4)
xchg   %ax,%ax
mov    (%ebx),%edi
test   %edi,%edi
mov    %edi,0x2c(%esp)
jne    8061018 <fchmod@plt+0x16078>
mov    0x4(%ebx),%edi
mov    %edi,0x2c(%esp)
jmp    8061018 <fchmod@plt+0x16078>
lea    0x0(%esi),%esi
lea    0x7d(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x30(%esp)
lea    0x92(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x2a,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804abe0 <__strcpy_chk@plt>
jmp    80612c2 <fchmod@plt+0x16322>
xchg   %ax,%ax
mov    %eax,0x809c3ec
jmp    806112e <fchmod@plt+0x1618e>
lea    0x0(%esi),%esi
cmpl   $0x1,0x809e2ac
je     80611b7 <fchmod@plt+0x16217>
cmpb   $0x0,0x809e47c
je     806121a <fchmod@plt+0x1627a>
jmp    80611b7 <fchmod@plt+0x16217>
nop
cmpl   $0x1,0x809e2ac
je     8061142 <fchmod@plt+0x161a2>
cmpb   $0x0,0x809e47c
je     80611a7 <fchmod@plt+0x16207>
jmp    8061142 <fchmod@plt+0x161a2>
nop
mov    %eax,0x809c3f0
xor    %ecx,%ecx
jmp    8061304 <fchmod@plt+0x16364>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   805ff00 <fchmod@plt+0x14f60>
lea    0x68(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %eax,%edi
jmp    806121a <fchmod@plt+0x1627a>
xchg   %ax,%ax
mov    %esi,%eax
call   805feb0 <fchmod@plt+0x14f10>
lea    0x53(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807c030 <argp_parse+0x40f0>
mov    %eax,0x28(%esp)
jmp    80611a7 <fchmod@plt+0x16207>
mov    0x2c(%esp),%edi
movb   $0x2d,0x47(%esp)
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmpb   $0x2f,-0x1(%edi,%eax,1)
jne    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x64,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x808863c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804a670 <fflush_unlocked@plt>
mov    %ebx,(%esp)
call   806efe0 <fchmod@plt+0x24040>
mov    0xbc(%esp),%eax
xor    %gs:0x14,%eax
jne    80617b2 <fchmod@plt+0x16812>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x171,%ebp
movl   $0xc,0x4(%esp)
mov    %ebp,(%esp)
call   8060d60 <fchmod@plt+0x15dc0>
mov    0x30(%esp),%edi
mov    %edi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x2a,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804abe0 <__strcpy_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x808864f,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    806150d <fchmod@plt+0x1656d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x808862d,0x4(%esp)
jmp    80614e8 <fchmod@plt+0x16548>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x808861e,0x4(%esp)
jmp    80614e8 <fchmod@plt+0x16548>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80806d0 <argp_parse+0x8790>
movl   $0x80885f2,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    806150d <fchmod@plt+0x1656d>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80806d0 <argp_parse+0x8790>
movl   $0x5,0x8(%esp)
movl   $0x80885fa,0x4(%esp)
mov    %eax,%esi
jmp    8061596 <fchmod@plt+0x165f6>
lea    0x0(%esi),%esi
mov    0x809e248,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    80617b7 <fchmod@plt+0x16817>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
jmp    806150d <fchmod@plt+0x1656d>
nop
mov    (%ebx),%edi
mov    %edi,0x2c(%esp)
jmp    8061018 <fchmod@plt+0x16078>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x808762b,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x4c,0x47(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80610d0 <fchmod@plt+0x16130>
movb   $0x4d,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x70,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x63,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x62,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x43,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x68,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
movb   $0x6c,0x47(%esp)
jmp    80610d0 <fchmod@plt+0x16130>
lea    0x0(%esi),%esi
call   804cc10 <fchmod@plt+0x1c70>
jmp    8061029 <fchmod@plt+0x16089>
lea    0x0(%esi),%esi
mov    %al,0x45(%esp)
lea    0x45(%esp),%eax
mov    %eax,(%esp)
movb   $0x0,0x46(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x5,0x8(%esp)
movl   $0x8088607,0x4(%esp)
mov    %eax,%esi
jmp    8061596 <fchmod@plt+0x165f6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80806d0 <argp_parse+0x8790>
movl   $0x808d2bf,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    806150d <fchmod@plt+0x1656d>
call   804a610 <__stack_chk_fail@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    806150d <fchmod@plt+0x1656d>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x80,%ecx
push   %esi
push   %ebx
sub    $0x310,%esp
mov    %gs:0x14,%eax
mov    %eax,0x30c(%esp)
xor    %eax,%eax
lea    0x10c(%esp),%esi
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    0x809dc20,%eax
movb   $0x56,0x1a8(%esp)
test   %eax,%eax
je     8061830 <fchmod@plt+0x16890>
mov    0x88(%eax),%edx
mov    %edx,0x194(%esp)
mov    0x8c(%eax),%edx
mov    %edx,0x198(%esp)
mov    0x90(%eax),%eax
mov    %eax,0x19c(%esp)
lea    0x18(%esp),%ebx
lea    0x1c(%esp),%edi
mov    %ebx,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
movl   $0x80894f0,0x4(%esp)
mov    %edi,(%esp)
call   8062250 <fchmod@plt+0x172b0>
lea    0x14(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8060130 <fchmod@plt+0x15190>
mov    0x809e26c,%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %ebx,%eax
mov    %esi,%edx
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   8060fd0 <fchmod@plt+0x16030>
mov    %ebx,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
mov    0x30c(%esp),%eax
xor    %gs:0x14,%eax
jne    80618b7 <fchmod@plt+0x16917>
add    $0x310,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
sub    $0x14,%esp
cmpl   $0x4,0x809e2ac
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x28(%esp),%esi
mov    0x2c(%esp),%edi
je     80618f0 <fchmod@plt+0x16950>
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
add    $0x14,%esp
pop    %esi
pop    %edi
jmp    8060fd0 <fchmod@plt+0x16030>
cmpb   $0x0,0x809db0d
jne    80618de <fchmod@plt+0x1693e>
mov    0x809e26c,%ecx
test   %ecx,%ecx
je     80618de <fchmod@plt+0x1693e>
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80617d0 <fchmod@plt+0x16830>
mov    0xc(%esp),%edx
movb   $0x1,0x809db0d
mov    0x8(%esp),%eax
jmp    80618de <fchmod@plt+0x1693e>
jmp    8061930 <fchmod@plt+0x16990>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x54,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x60(%esp),%ebx
cmpl   $0x1,0x809e46c
jle    80619da <fchmod@plt+0x16a3a>
lea    0x2d(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movb   $0x64,0x2c(%esp)
mov    %eax,(%esp)
call   806f140 <fchmod@plt+0x241a0>
cmpb   $0x0,0x809e47d
jne    80619f0 <fchmod@plt+0x16a50>
mov    %ebx,(%esp)
call   80806d0 <argp_parse+0x8790>
movl   $0x5,0x8(%esp)
movl   $0x8088669,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    0x809c3f0,%edx
mov    %ebx,0x18(%esp)
movl   $0x808867d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x809c3ec,%eax
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x10(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    8061a49 <fchmod@plt+0x16aa9>
add    $0x54,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   804cc10 <fchmod@plt+0x1c70>
lea    0x37(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x80885d5,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8061974 <fchmod@plt+0x169d4>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %edi
push   %esi
sub    $0x14,%esp
cmpb   $0x0,0x809e528
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
jne    8061ab8 <fchmod@plt+0x16b18>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
cmp    $0x0,%edi
jle    8061adf <fchmod@plt+0x16b3f>
nop
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
nop
je     8061aef <fchmod@plt+0x16b4f>
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
add    $0xfffffe00,%esi
adc    $0xffffffff,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
cmp    $0x0,%edi
jl     8061aab <fchmod@plt+0x16b0b>
jg     8061a78 <fchmod@plt+0x16ad8>
cmp    $0x0,%esi
ja     8061a78 <fchmod@plt+0x16ad8>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804d720 <fchmod@plt+0x2780>
test   %edx,%edx
js     8061ae3 <fchmod@plt+0x16b43>
imul   $0xfffffe00,%edx,%ecx
mov    $0xfffffe00,%edx
sub    %eax,%ecx
mul    %edx
add    %ecx,%edx
add    %eax,%esi
adc    %edx,%edi
jmp    8061a66 <fchmod@plt+0x16ac6>
jge    8061aa6 <fchmod@plt+0x16b06>
jmp    8061aab <fchmod@plt+0x16b0b>
movb   $0x0,0x809e528
jmp    8061a66 <fchmod@plt+0x16ac6>
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x809e2b8,%eax
movzbl 0x9c(%eax),%ebx
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
movl   $0x809e320,(%esp)
call   804c750 <fchmod@plt+0x17b0>
cmpb   $0x0,0x809e3cc
jne    8061b88 <fchmod@plt+0x16be8>
cmp    $0x35,%bl
je     8061b79 <fchmod@plt+0x16bd9>
mov    0x809e378,%eax
mov    0x809e37c,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8061a50 <fchmod@plt+0x16ab0>
add    $0x18,%esp
pop    %ebx
jmp    804c780 <fchmod@plt+0x17e0>
lea    0x0(%esi),%esi
movl   $0x809e320,(%esp)
call   8067e80 <fchmod@plt+0x1cee0>
add    $0x18,%esp
pop    %ebx
jmp    804c780 <fchmod@plt+0x17e0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%esi
call   805fe80 <fchmod@plt+0x14ee0>
call   8064c20 <fchmod@plt+0x19c80>
movl   $0x0,(%esp)
call   804f110 <fchmod@plt+0x4170>
movl   $0x809e320,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x5,%eax
mov    %eax,%edi
ja     8061d00 <fchmod@plt+0x16d60>
jmp    *0x8088978(,%eax,4)
cmpb   $0x0,0x809e47d
je     8061c65 <fchmod@plt+0x16cc5>
call   804cc10 <fchmod@plt+0x1c70>
lea    0x17(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8088594,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmpb   $0x0,0x809e2f9
jne    8061d60 <fchmod@plt+0x16dc0>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x3,%eax
je     8061d00 <fchmod@plt+0x16d60>
testb  $0x1,0x809d640
je     8061d00 <fchmod@plt+0x16d60>
call   804cc10 <fchmod@plt+0x1c70>
lea    0x17(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8086d35,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
lea    0x0(%esi,%eiz,1),%esi
call   804d910 <fchmod@plt+0x2970>
call   8065250 <fchmod@plt+0x1a2b0>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    8062061 <fchmod@plt+0x170c1>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    $0x1,%ebx
je     8061ee6 <fchmod@plt+0x16f46>
jb     8061ea8 <fchmod@plt+0x16f08>
cmp    $0x2,%ebx
nop
je     8061d28 <fchmod@plt+0x16d88>
cmp    $0x3,%ebx
je     8061ee6 <fchmod@plt+0x16f46>
mov    %edi,%ebx
lea    0x0(%esi),%esi
movl   $0x809e320,(%esp)
call   80651a0 <fchmod@plt+0x1a200>
test   %al,%al
je     8061bce <fchmod@plt+0x16c2e>
jmp    8061d00 <fchmod@plt+0x16d60>
xchg   %ax,%ax
cmpb   $0x0,0x809e47d
nop
je     8061d00 <fchmod@plt+0x16d60>
call   804cc10 <fchmod@plt+0x1c70>
lea    0x17(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x8088695,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8061d00 <fchmod@plt+0x16d60>
nop
mov    0x809e2b8,%eax
movl   $0x1,0xc(%esp)
movl   $0x809e2ac,0x8(%esp)
movl   $0x809e320,0x4(%esp)
mov    %eax,(%esp)
call   8060130 <fchmod@plt+0x15190>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8065040 <fchmod@plt+0x1a0a0>
test   %al,%al
je     8061e68 <fchmod@plt+0x16ec8>
mov    0x809e2e8,%eax
test   %eax,%eax
js     8061e53 <fchmod@plt+0x16eb3>
mov    0x809e2b8,%eax
add    $0x88,%eax
call   805ff50 <fchmod@plt+0x14fb0>
mov    0x809e2e8,%edx
movl   $0x0,0x809e3b8
00
cmp    %eax,0x809e2e4
mov    %eax,0x809e3b4
jg     8061e68 <fchmod@plt+0x16ec8>
jl     8061e53 <fchmod@plt+0x16eb3>
neg    %edx
test   %edx,%edx
js     8061e68 <fchmod@plt+0x16ec8>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
je     8061f50 <fchmod@plt+0x16fb0>
mov    0x809e2b8,%eax
movsbl 0x9c(%eax),%eax
cmp    $0x4d,%al
je     8061f5c <fchmod@plt+0x16fbc>
cmp    $0x56,%al
je     8061f5c <fchmod@plt+0x16fbc>
cmp    $0x35,%al
je     8061f90 <fchmod@plt+0x16ff0>
cmpb   $0x0,0x809e401
mov    %edi,%ebx
jne    8061d60 <fchmod@plt+0x16dc0>
call   8061b30 <fchmod@plt+0x16b90>
jmp    8061d60 <fchmod@plt+0x16dc0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
cmpb   $0x0,0x809e47d
jne    8061ff0 <fchmod@plt+0x17050>
movl   $0x5,0x8(%esp)
mov    %edi,%ebx
movl   $0x80873f9,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x809e320,(%esp)
movl   $0x2,0x809e084
00
call   80651a0 <fchmod@plt+0x1a200>
test   %al,%al
je     8061bce <fchmod@plt+0x16c2e>
jmp    8061d00 <fchmod@plt+0x16d60>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
movsbl 0x9c(%eax),%eax
mov    %eax,(%esp)
mov    %edi,%ebx
movl   $0x809e320,0x4(%esp)
call   805ffa0 <fchmod@plt+0x15000>
call   *%esi
movl   $0x809e320,(%esp)
call   80651a0 <fchmod@plt+0x1a200>
test   %al,%al
je     8061bce <fchmod@plt+0x16c2e>
jmp    8061d00 <fchmod@plt+0x16d60>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x809e48f
je     8061e8c <fchmod@plt+0x16eec>
mov    0x809e324,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088688,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8061e8c <fchmod@plt+0x16eec>
lea    0x0(%esi,%eiz,1),%esi
call   804cc10 <fchmod@plt+0x1c70>
mov    0x809e2b4,%ecx
xor    %ebx,%ebx
sub    %ecx,%eax
lea    0x17(%esp),%ecx
sbb    %ebx,%edx
mov    %ecx,0x8(%esp)
mov    0x809e2bc,%ecx
xor    %ebx,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x5,0x8(%esp)
movl   $0x80885d5,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8061ef3 <fchmod@plt+0x16f53>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   804cc10 <fchmod@plt+0x1c70>
mov    0x809e46c,%ecx
test   %ecx,%ecx
jne    80620b0 <fchmod@plt+0x17110>
cmpb   $0x0,0x809e2e1
je     8062094 <fchmod@plt+0x170f4>
cmpl   $0x2,0x809e46c
jg     80620d0 <fchmod@plt+0x17130>
cmpb   $0x0,0x809e401
je     80620a8 <fchmod@plt+0x17108>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    8061b30 <fchmod@plt+0x16b90>
mov    %eax,0x8(%esp)
mov    0x809e2b8,%eax
mov    %edx,0xc(%esp)
movl   $0x809e320,(%esp)
mov    %eax,0x4(%esp)
call   80618c0 <fchmod@plt+0x16920>
jmp    8062082 <fchmod@plt+0x170e2>
nop
movl   $0x809e320,(%esp)
call   805eb00 <fchmod@plt+0x13b60>
test   %al,%al
je     8062094 <fchmod@plt+0x170f4>
mov    0x809e404,%eax
mov    %eax,(%esp)
call   805d0d0 <fchmod@plt+0x12130>
mov    %eax,0x4(%esp)
mov    0x809e404,%eax
mov    %eax,(%esp)
call   805f290 <fchmod@plt+0x142f0>
jmp    8062094 <fchmod@plt+0x170f4>
cmpb   $0x0,0x809e401
je     8062110 <fchmod@plt+0x17170>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8061b30 <fchmod@plt+0x16b90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   805fe80 <fchmod@plt+0x14ee0>
call   8064c20 <fchmod@plt+0x19c80>
movl   $0x0,(%esp)
call   804f110 <fchmod@plt+0x4170>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x1,%eax
je     8062170 <fchmod@plt+0x171d0>
call   804d910 <fchmod@plt+0x2970>
add    $0x18,%esp
pop    %ebx
jmp    80653d0 <fchmod@plt+0x1a430>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
movl   $0x0,0xc(%esp)
movl   $0x809e2ac,0x8(%esp)
movl   $0x809e320,0x4(%esp)
mov    %eax,(%esp)
call   8060130 <fchmod@plt+0x15190>
mov    0x809e2b8,%eax
cmpb   $0x56,0x9c(%eax)
je     8062200 <fchmod@plt+0x17260>
mov    0x809e26c,%eax
test   %eax,%eax
je     806215b <fchmod@plt+0x171bb>
mov    0x809e46c,%edx
test   %edx,%edx
jne    80621f0 <fchmod@plt+0x17250>
mov    %eax,(%esp)
call   8065040 <fchmod@plt+0x1a0a0>
test   %al,%al
jne    806215b <fchmod@plt+0x171bb>
cmpb   $0x0,0x809e2f8
je     806215b <fchmod@plt+0x171bb>
mov    0x809e26c,%eax
mov    %eax,(%esp)
call   804f040 <fchmod@plt+0x40a0>
mov    %eax,%ebx
mov    %eax,(%esp)
call   8065040 <fchmod@plt+0x1a0a0>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
jmp    806215b <fchmod@plt+0x171bb>
nop
call   80617d0 <fchmod@plt+0x16830>
mov    0x809e26c,%eax
jmp    80621b6 <fchmod@plt+0x17216>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x809e26c,(%esp)
call   8062250 <fchmod@plt+0x172b0>
jmp    80621a3 <fchmod@plt+0x17203>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0xc(%esp),%edx
mov    0x8(%esp),%ebx
test   %edx,%edx
mov    %edx,%ecx
mov    %ebx,%eax
js     8062235 <fchmod@plt+0x17295>
mov    %ebx,%eax
mov    %ecx,%edx
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
not    %eax
shr    $0x1f,%eax
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
test   %esi,%esi
je     8062275 <fchmod@plt+0x172d5>
mov    %esi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
mov    0x10(%esp),%edx
movzbl (%edx),%ebx
mov    %edx,%ecx
test   %bl,%bl
je     80622ae <fchmod@plt+0x1730e>
cmp    $0x5c,%bl
je     80622c0 <fchmod@plt+0x17320>
cmp    %ecx,%edx
je     80622e0 <fchmod@plt+0x17340>
mov    %bl,(%ecx)
movzbl 0x1(%edx),%ebx
add    $0x1,%ecx
add    $0x1,%edx
test   %bl,%bl
jne    8062295 <fchmod@plt+0x172f5>
cmp    %ecx,%edx
je     80622b5 <fchmod@plt+0x17315>
movb   $0x0,(%ecx)
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x1(%edx),%eax
lea    -0x30(%eax),%ebx
cmp    $0x46,%bl
ja     80623f0 <fchmod@plt+0x17450>
movzbl %bl,%ebx
jmp    *0x80889e0(,%ebx,4)
lea    0x0(%esi),%esi
lea    0x1(%edx),%ecx
movzbl 0x1(%edx),%ebx
mov    %ecx,%edx
jmp    8062291 <fchmod@plt+0x172f1>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0xb,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
xchg   %ax,%ax
movb   $0x9,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
xchg   %ax,%ax
movb   $0xd,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0xa,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0xc,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x8,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x7,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x5c,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x7f,(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x1,%ecx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x2(%edx),%ebx
lea    -0x30(%eax),%edi
lea    -0x30(%ebx),%eax
cmp    $0x7,%al
ja     8062420 <fchmod@plt+0x17480>
movsbl 0x3(%edx),%eax
lea    -0x30(%ebx,%edi,8),%edi
lea    -0x30(%eax),%ebx
cmp    $0x7,%bl
jbe    8062433 <fchmod@plt+0x17493>
mov    %edi,%eax
add    $0x1,%ecx
mov    %al,-0x1(%ecx)
add    $0x3,%edx
movzbl (%edx),%ebx
jmp    8062291 <fchmod@plt+0x172f1>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x5c,(%ecx)
movzbl 0x1(%edx),%ebx
test   %bl,%bl
je     8062410 <fchmod@plt+0x17470>
mov    %bl,0x1(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
add    $0x2,%ecx
xor    %esi,%esi
jmp    8062291 <fchmod@plt+0x172f1>
xchg   %ax,%ax
add    $0x1,%edx
add    $0x1,%ecx
xor    %esi,%esi
jmp    80622ae <fchmod@plt+0x1730e>
lea    0x0(%esi),%esi
mov    %edi,%eax
add    $0x1,%ecx
mov    %al,-0x1(%ecx)
add    $0x2,%edx
movzbl (%edx),%ebx
jmp    8062291 <fchmod@plt+0x172f1>
lea    -0x30(%eax,%edi,8),%eax
add    $0x1,%ecx
mov    %al,-0x1(%ecx)
add    $0x4,%edx
movzbl (%edx),%ebx
jmp    8062291 <fchmod@plt+0x172f1>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8062488 <fchmod@plt+0x174e8>
cmpb   $0x0,(%ebx)
je     8062488 <fchmod@plt+0x174e8>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
lea    -0x1(%ebx,%eax,1),%edx
cmp    %edx,%ebx
jb     8062483 <fchmod@plt+0x174e3>
jmp    8062488 <fchmod@plt+0x174e8>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edx
cmp    %ebx,%edx
movb   $0x0,0x1(%edx)
je     8062488 <fchmod@plt+0x174e8>
cmpb   $0x2f,(%edx)
je     8062478 <fchmod@plt+0x174d8>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
movzbl 0x0(%ebp),%edx
cmp    $0x2e,%dl
jne    80625af <fchmod@plt+0x1760f>
cmpb   $0x2f,0x1(%ebp)
jne    80625b8 <fchmod@plt+0x17618>
mov    %ebp,%edx
mov    %ebp,%ecx
jmp    80624d0 <fchmod@plt+0x17530>
lea    0x0(%esi),%esi
xor    %ebx,%ebx
test   %dl,%dl
sete   %bl
add    %ebx,%ecx
cmp    $0x2e,%dl
mov    %dl,(%ecx)
jne    80624f8 <fchmod@plt+0x17558>
cmpb   $0x2f,0x1(%eax)
jne    80624f8 <fchmod@plt+0x17558>
mov    %eax,%edx
lea    0x2(%edx),%eax
movzbl 0x2(%edx),%edx
cmp    $0x2f,%dl
jne    80624b8 <fchmod@plt+0x17518>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     80624dc <fchmod@plt+0x1753c>
xor    %ebx,%ebx
test   %dl,%dl
sete   %bl
add    %ebx,%ecx
cmp    $0x2e,%dl
mov    %dl,(%ecx)
je     80624c8 <fchmod@plt+0x17528>
nop
movzbl (%eax),%edx
lea    0x1(%ecx),%esi
test   %dl,%dl
lea    0x1(%eax),%edi
mov    %dl,-0x1(%esi)
je     8062522 <fchmod@plt+0x17582>
cmp    $0x2f,%dl
movzbl 0x1(%eax),%edx
je     8062550 <fchmod@plt+0x175b0>
mov    %edi,%eax
mov    %esi,%ecx
lea    0x1(%ecx),%esi
test   %dl,%dl
lea    0x1(%eax),%edi
mov    %dl,-0x1(%esi)
jne    8062508 <fchmod@plt+0x17568>
mov    %esi,%eax
sub    %ebp,%eax
cmp    $0x2,%eax
jle    8062545 <fchmod@plt+0x175a5>
xor    %eax,%eax
cmpb   $0x2e,-0x1(%ecx)
je     8062595 <fchmod@plt+0x175f5>
add    %eax,%esi
xor    %eax,%eax
mov    %esi,%edx
sub    %ebp,%edx
cmp    $0x2,%edx
jg     8062588 <fchmod@plt+0x175e8>
movb   $0x0,-0x1(%esi,%eax,1)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmp    $0x2e,%dl
sete   %al
cmpb   $0x2f,(%edi,%eax,1)
mov    %edi,%eax
jne    8062513 <fchmod@plt+0x17573>
cmp    $0x2e,%dl
sete   %dl
xor    %ecx,%ecx
movzbl %dl,%edx
lea    0x1(%eax,%edx,1),%eax
movzbl (%eax),%edx
cmp    $0x2e,%dl
sete   %cl
cmpb   $0x2f,(%eax,%ecx,1)
je     8062560 <fchmod@plt+0x175c0>
mov    %esi,%ecx
jmp    8062515 <fchmod@plt+0x17575>
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x2f,-0x2(%esi)
sete   %al
neg    %eax
jmp    8062540 <fchmod@plt+0x175a0>
xor    %eax,%eax
cmpb   $0x2f,-0x2(%ecx)
sete   %al
neg    %eax
add    %eax,%esi
xor    %eax,%eax
mov    %esi,%edx
sub    %ebp,%edx
cmp    $0x2,%edx
jle    8062540 <fchmod@plt+0x175a0>
jmp    8062588 <fchmod@plt+0x175e8>
mov    %ebp,%eax
mov    %ebp,%ecx
jmp    80624fb <fchmod@plt+0x1755b>
mov    %ebp,%eax
mov    %ebp,%ecx
mov    $0x2e,%edx
jmp    80624fb <fchmod@plt+0x1755b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
cmpb   $0x2f,(%esi)
je     8062668 <fchmod@plt+0x176c8>
mov    0x809dca8,%eax
test   %eax,%eax
je     8062678 <fchmod@plt+0x176d8>
mov    0x30(%esp),%ecx
lea    (%ecx,%ecx,2),%edx
mov    0x4(%eax,%edx,4),%edi
test   %edi,%edi
je     8062697 <fchmod@plt+0x176f7>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    %esi,(%esp)
lea    0x1(%eax),%ebp
mov    %eax,0xc(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a780 <strcpy@plt>
mov    0xc(%esp),%edx
add    %ebx,%ebp
movb   $0x2f,(%ebx,%edx,1)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a780 <strcpy@plt>
test   %ebx,%ebx
je     8062668 <fchmod@plt+0x176c8>
mov    %ebx,(%esp)
call   8062490 <fchmod@plt+0x174f0>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,%ebx
jmp    806264f <fchmod@plt+0x176af>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809dc40,%edi
test   %edi,%edi
jne    80625fc <fchmod@plt+0x1765c>
call   80818b0 <argp_parse+0x9970>
mov    %eax,0x809dc40
mov    %eax,%edi
jmp    80625fc <fchmod@plt+0x1765c>
movl   $0x80894f0,0x4(%esp)
movl   $0x8088afc,(%esp)
call   806f2b0 <fchmod@plt+0x24310>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x4c(%esp),%eax
mov    0x48(%esp),%esi
mov    0x44(%esp),%ebp
mov    (%edi),%ebx
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x18(%esp)
call   804a950 <strlen@plt>
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jbe    8062705 <fchmod@plt+0x17765>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8062705 <fchmod@plt+0x17765>
lea    (%ebx,%esi,1),%eax
mov    0x14(%esp),%edx
cmpb   $0x2f,(%eax)
je     8062710 <fchmod@plt+0x17770>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    0x18(%esp),%esi
jb     8062750 <fchmod@plt+0x177b0>
mov    0x18(%esp),%edi
sub    %esi,%edx
mov    %eax,0x4(%esp)
add    $0x1,%edx
mov    %edx,0x8(%esp)
mov    %edi,%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   804a4b0 <memmove@plt>
mov    0x1c(%esp),%eax
mov    %edi,0x48(%esp)
mov    %ebx,0x40(%esp)
mov    %eax,0x44(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a4e0 <memcpy@plt>
nop
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
sub    %esi,%eax
lea    0x1(%eax,%edx,1),%eax
mov    %eax,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x14(%esp),%edx
mov    %eax,%ebx
mov    %eax,(%edi)
lea    (%eax,%esi,1),%eax
jmp    8062716 <fchmod@plt+0x17776>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%eax
cmp    0x1c(%esp),%eax
mov    0x8(%esp),%edx
mov    0x18(%esp),%ebx
mov    0x20(%esp),%ecx
ja     80627b4 <fchmod@plt+0x17814>
jae    80627b0 <fchmod@plt+0x17810>
mov    %ecx,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
pop    %ebx
jmp    807c1f0 <argp_parse+0x42b0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%edx
jbe    8062799 <fchmod@plt+0x177f9>
mov    %ecx,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
pop    %ebx
jmp    807c030 <argp_parse+0x40f0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%eax
mov    0x54(%esp),%esi
mov    0x40(%esp),%ebx
mov    0x4c(%esp),%edi
mov    %eax,0x18(%esp)
mov    0x50(%esp),%ebp
call   804aaf0 <__errno_location@plt>
test   %esi,%esi
mov    %eax,%ecx
movl   $0x0,(%eax)
js     8062828 <fchmod@plt+0x17888>
xor    %eax,%eax
cmpb   $0x2d,(%ebx)
sete   %al
movsbl (%ebx,%eax,1),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
jbe    8062880 <fchmod@plt+0x178e0>
movl   $0x16,(%ecx)
xor    %eax,%eax
xor    %edx,%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movsbl (%ebx),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8062814 <fchmod@plt+0x17874>
mov    0x44(%esp),%eax
mov    %ebx,(%esp)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x18(%esp)
call   804a530 <__strtoull_internal@plt>
mov    0x18(%esp),%ecx
cmp    %edx,%esi
mov    %eax,%ebx
jb     806286f <fchmod@plt+0x178cf>
ja     8062918 <fchmod@plt+0x17978>
cmp    %eax,%ebp
jae    8062918 <fchmod@plt+0x17978>
movl   $0x22,(%ecx)
mov    %ebp,%eax
mov    %esi,%edx
jmp    806281e <fchmod@plt+0x1787e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %ebx,(%esp)
mov    $0x1,%ebx
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   804ade0 <__strtoll_internal@plt>
mov    0x1c(%esp),%ecx
cmp    %edx,%edi
jl     80628c0 <fchmod@plt+0x17920>
jg     80628f8 <fchmod@plt+0x17958>
cmp    %eax,0x18(%esp)
ja     80628f8 <fchmod@plt+0x17958>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%esi
jle    80628e8 <fchmod@plt+0x17948>
test   %bl,%bl
jne    806281e <fchmod@plt+0x1787e>
test   %bl,%bl
movl   $0x22,(%ecx)
jne    8062908 <fchmod@plt+0x17968>
mov    0x18(%esp),%eax
mov    %edi,%edx
jmp    806281e <fchmod@plt+0x1787e>
lea    0x0(%esi,%eiz,1),%esi
jl     80628cc <fchmod@plt+0x1792c>
cmp    %eax,%ebp
jb     80628cc <fchmod@plt+0x1792c>
xchg   %ax,%ax
jmp    80628c4 <fchmod@plt+0x17924>
lea    0x0(%esi),%esi
xor    %ebx,%ebx
lea    0x0(%esi),%esi
jmp    80628c0 <fchmod@plt+0x17920>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    %esi,%edx
lea    0x0(%esi,%eiz,1),%esi
jmp    806281e <fchmod@plt+0x1787e>
lea    0x0(%esi),%esi
test   %edx,%edx
mov    %ebx,%eax
js     806281e <fchmod@plt+0x1787e>
mov    %ebx,%eax
jmp    806281e <fchmod@plt+0x1787e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebp
test   %ecx,%ecx
je     8062a08 <fchmod@plt+0x17a68>
lea    0x1(%ebp),%eax
mov    $0x66666667,%edx
mov    %eax,(%esp)
mov    %ecx,%eax
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
movb   $0x2e,0x0(%ebp)
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
jne    8062a14 <fchmod@plt+0x17a74>
mov    $0x9,%ebx
mov    $0x66666667,%esi
jmp    8062982 <fchmod@plt+0x179e2>
nop
mov    %edi,%ebx
mov    %ecx,%eax
imul   %esi
sar    $0x1f,%ecx
lea    -0x1(%ebx),%edi
sar    $0x2,%edx
sub    %ecx,%edx
mov    %edx,%eax
mov    %edx,%ecx
imul   %esi
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
je     8062980 <fchmod@plt+0x179e0>
mov    (%esp),%eax
add    $0x30,%edx
movb   $0x0,0x1(%ebp,%edi,1)
mov    %dl,-0x2(%eax,%ebx,1)
sub    $0x2,%ebx
je     80629fc <fchmod@plt+0x17a5c>
add    %ebp,%ebx
mov    $0x66666667,%esi
nop
mov    %ecx,%eax
sub    $0x1,%ebx
imul   %esi
sar    $0x1f,%ecx
sar    $0x2,%edx
sub    %ecx,%edx
mov    %edx,%eax
mov    %edx,%ecx
imul   %esi
mov    %ecx,%eax
sar    $0x1f,%eax
mov    %ecx,%edi
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
sub    %eax,%edi
mov    %edi,%eax
add    $0x30,%eax
mov    %al,0x1(%ebx)
cmp    %ebp,%ebx
jne    80629c8 <fchmod@plt+0x17a28>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x0(%ebp)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x30,%edx
mov    $0x8,%ebx
movb   $0x0,0xa(%ebp)
mov    %dl,0x9(%ebp)
jmp    80629c0 <fchmod@plt+0x17a20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
mov    0x34(%esp),%ebx
mov    0x38(%esp),%esi
mov    %edx,%edi
mov    %edx,%eax
shr    $0x1f,%edi
cmp    $0x3b9ac9ff,%ebx
ja     8062aa8 <fchmod@plt+0x17b08>
test   %ebx,%ebx
je     8062aaa <fchmod@plt+0x17b0a>
mov    %edi,%ecx
test   %cl,%cl
je     8062aaa <fchmod@plt+0x17b0a>
mov    $0x3b9aca00,%edx
add    $0x1,%eax
sub    %ebx,%edx
mov    %edx,%ebx
lea    0x1(%esi),%ebp
cltd
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    -0x1(%eax),%edi
movb   $0x2d,-0x1(%eax)
add    $0x15,%esi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8062930 <fchmod@plt+0x17990>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
mov    %edi,%ecx
test   %cl,%cl
lea    0x1(%esi),%ebp
jne    8062a6b <fchmod@plt+0x17acb>
mov    %edx,(%esp)
sar    $0x1f,%edx
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edi
jmp    8062a8a <fchmod@plt+0x17aea>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ebx
mov    0x40(%esp),%esi
mov    0x4c(%esp),%edi
cmpb   $0x2d,(%ebx)
sete   %al
mov    %al,0x1e(%esp)
movzbl %al,%eax
movsbl (%ebx,%eax,1),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8062bb0 <fchmod@plt+0x17c10>
call   804aaf0 <__errno_location@plt>
cmpb   $0x0,0x1e(%esp)
movl   $0x0,(%eax)
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
je     8062b88 <fchmod@plt+0x17be8>
call   804ade0 <__strtoll_internal@plt>
mov    0x18(%esp),%ecx
cmp    $0xffffffff,%edx
jl     8062b96 <fchmod@plt+0x17bf6>
jle    8062bd8 <fchmod@plt+0x17c38>
mov    %eax,%ebp
mov    (%ecx),%eax
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
xor    %edx,%edx
mov    (%eax),%ebx
mov    %edi,%eax
test   %al,%al
je     8062b64 <fchmod@plt+0x17bc4>
cmpb   $0x2e,(%ebx)
je     8062be8 <fchmod@plt+0x17c48>
cmpl   $0x22,0x18(%esp)
mov    $0xffffffff,%eax
cmove  %eax,%edx
mov    0x48(%esp),%eax
mov    %ebp,(%esi)
mov    %edx,0x4(%esi)
mov    %ebx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret    $0x4
call   804a530 <__strtoull_internal@plt>
mov    0x18(%esp),%ecx
cmp    $0x0,%edx
jbe    8062bc8 <fchmod@plt+0x17c28>
movl   $0x22,(%ecx)
mov    $0x80000000,%ebp
movl   $0x22,0x18(%esp)
jmp    8062b4d <fchmod@plt+0x17bad>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
mov    $0x80000000,%ebp
mov    $0xffffffff,%edx
movl   $0x16,(%eax)
jmp    8062b71 <fchmod@plt+0x17bd1>
nop
cmp    $0x7fffffff,%eax
ja     8062b96 <fchmod@plt+0x17bf6>
jmp    8062b45 <fchmod@plt+0x17ba5>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x80000000,%eax
jb     8062b96 <fchmod@plt+0x17bf6>
nop
jmp    8062b45 <fchmod@plt+0x17ba5>
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ecx,%ecx
mov    %edx,%edi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
movsbl %dl,%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8062c30 <fchmod@plt+0x17c90>
cmp    $0x8,%ecx
jg     8062c20 <fchmod@plt+0x17c80>
lea    (%edi,%edi,4),%edx
add    $0x1,%ecx
lea    (%eax,%edx,2),%edi
jmp    8062bf8 <fchmod@plt+0x17c58>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x30,%dl
setne  %al
or     %al,0x1f(%esp)
jmp    8062bf8 <fchmod@plt+0x17c58>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x8,%ecx
mov    %edi,%edx
jg     8062c45 <fchmod@plt+0x17ca5>
nop
add    $0x1,%ecx
lea    (%edx,%edx,4),%edx
add    %edx,%edx
cmp    $0x9,%ecx
jne    8062c38 <fchmod@plt+0x17c98>
cmpb   $0x0,0x1e(%esp)
je     8062b64 <fchmod@plt+0x17bc4>
movzbl 0x1f(%esp),%eax
add    %eax,%edx
je     8062b64 <fchmod@plt+0x17bc4>
cmp    $0x80000000,%ebp
je     8062c76 <fchmod@plt+0x17cd6>
mov    $0x3b9aca00,%eax
sub    $0x1,%ebp
sub    %edx,%eax
mov    %eax,%edx
jmp    8062b64 <fchmod@plt+0x17bc4>
mov    $0xffffffff,%edx
jmp    8062b64 <fchmod@plt+0x17bc4>
mov    0x4(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8062cd8 <fchmod@plt+0x17d38>
cmp    $0x2e,%dl
jne    8062cc0 <fchmod@plt+0x17d20>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%eax),%edx
cmp    $0x2f,%dl
jne    8062cc0 <fchmod@plt+0x17d20>
movzbl 0x2(%eax),%edx
lea    0x2(%eax),%ecx
mov    %ecx,%eax
cmp    $0x2f,%dl
jne    8062c8c <fchmod@plt+0x17cec>
nop
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8062cb0 <fchmod@plt+0x17d10>
cmp    $0x2e,%dl
je     8062c98 <fchmod@plt+0x17cf8>
test   %dl,%dl
sete   %al
ret
xchg   %ax,%ax
cmpb   $0x2f,0x3(%eax)
jne    8062d05 <fchmod@plt+0x17d65>
mov    $0x3,%edx
add    %edx,%eax
lea    0x0(%esi),%esi
movzbl 0x1(%eax),%edx
cmp    $0x2f,%dl
je     8062d00 <fchmod@plt+0x17d60>
cmp    $0x2e,%dl
jne    8062cc0 <fchmod@plt+0x17d20>
movzbl 0x2(%eax),%edx
cmp    $0x2e,%dl
je     8062cc8 <fchmod@plt+0x17d28>
cmp    $0x2f,%dl
jne    8062d05 <fchmod@plt+0x17d65>
mov    $0x2,%edx
add    %edx,%eax
jmp    8062cd8 <fchmod@plt+0x17d38>
lea    0x0(%esi),%esi
add    $0x1,%eax
jmp    8062cd8 <fchmod@plt+0x17d38>
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    %eax,(%esp)
call   8062c80 <fchmod@plt+0x17ce0>
test   %al,%al
jne    8062d40 <fchmod@plt+0x17da0>
mov    0x809c3f8,%eax
movl   $0x200,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a470 <unlinkat@plt>
add    $0x18,%esp
pop    %ebx
ret
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    $0xffffffff,%eax
jmp    8062d3b <fchmod@plt+0x17d9b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
add    $0xffffff80,%esp
mov    0x90(%esp),%ebx
movl   $0x809dcb0,(%esp)
mov    0x94(%esp),%esi
mov    %ebx,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809dcac,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %esi,%eax
test   %al,%al
movl   $0x0,0x809dcac
00
je     8062de8 <fchmod@plt+0x17e48>
cmpb   $0x0,0x809e558
jne    8062de8 <fchmod@plt+0x17e48>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
je     8062de8 <fchmod@plt+0x17e48>
cmp    %eax,%ebx
jae    8062de8 <fchmod@plt+0x17e48>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     8062eac <fchmod@plt+0x17f0c>
lea    0x0(%esi),%esi
mov    0x809e434,%eax
mov    %ebx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
je     8062e38 <fchmod@plt+0x17e98>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
xchg   %ax,%ax
je     8062eac <fchmod@plt+0x17f0c>
mov    %ebx,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
xor    %eax,%eax
sub    $0xffffff80,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x30(%esp),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
je     8062eac <fchmod@plt+0x17f0c>
mov    %esi,%ecx
test   %cl,%cl
je     8062e5e <fchmod@plt+0x17ebe>
and    $0xb000,%eax
cmp    $0x2000,%eax
je     8062eac <fchmod@plt+0x17f0c>
mov    0x809e4a4,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8078d10 <argp_parse+0xdd0>
test   %eax,%eax
mov    %eax,0x809dcac
je     8062fb5 <fchmod@plt+0x18015>
mov    0x809c3f8,%edx
mov    %eax,0xc(%esp)
mov    0x809dcb0,%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804ad80 <renameat@plt>
test   %eax,%eax
jne    8062f28 <fchmod@plt+0x17f88>
mov    0x809e46c,%eax
test   %eax,%eax
jne    8062eb8 <fchmod@plt+0x17f18>
sub    $0xffffff80,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x809dcac,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x809dcb0,%eax
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x5,0x8(%esp)
movl   $0x8088b03,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8062eac <fchmod@plt+0x17f0c>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x809dcac,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %eax,%edi
mov    0x809dcb0,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088b16,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809dcac,%eax
movl   $0x2,0x809e084
00
mov    %eax,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
movl   $0x0,0x809dcac
00
jmp    8062e30 <fchmod@plt+0x17e90>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
mov    0x809dcac,%eax
test   %eax,%eax
je     806301d <fchmod@plt+0x1807d>
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x809c3f8,%edx
mov    0x809dcb0,%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,(%esp)
call   804ad80 <renameat@plt>
test   %eax,%eax
jne    8063020 <fchmod@plt+0x18080>
mov    0x809e46c,%eax
test   %eax,%eax
jne    806309c <fchmod@plt+0x180fc>
mov    0x809dcac,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,0x809dcac
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
repz ret
nop
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x809dcb0,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %eax,%edi
mov    0x809dcac,%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088b16,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809e46c,%eax
movl   $0x2,0x809e084
00
test   %eax,%eax
je     8063000 <fchmod@plt+0x18060>
mov    0x809dcb0,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x809dcac,%eax
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
movl   $0x5,0x8(%esp)
movl   $0x8088b2e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8063000 <fchmod@plt+0x18060>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x809e434,%eax
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809c3f8,%eax
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8063188 <fchmod@plt+0x181e8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0xb,(%eax)
jne    806317a <fchmod@plt+0x181da>
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   8082480 <argp_parse+0xa540>
test   %eax,%eax
js     806317a <fchmod@plt+0x181da>
test   $0x8,%ah
je     806317a <fchmod@plt+0x181da>
and    $0xf7,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %esi,(%esp)
call   8082480 <argp_parse+0xa540>
cmp    $0xffffffff,%eax
je     806317a <fchmod@plt+0x181da>
mov    %ebp,0x38(%esp)
mov    %edi,0x34(%esp)
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8080b00 <argp_parse+0x8bc0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   8079fe0 <argp_parse+0x20a0>
cmp    %eax,%esi
mov    %eax,%ebx
jbe    8063213 <fchmod@plt+0x18273>
call   804aaf0 <__errno_location@plt>
cmpl   $0xb,(%eax)
je     8063220 <fchmod@plt+0x18280>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x3,0x4(%esp)
mov    %edi,(%esp)
call   8082480 <argp_parse+0xa540>
test   %eax,%eax
js     8063213 <fchmod@plt+0x18273>
test   $0x8,%ah
je     8063213 <fchmod@plt+0x18273>
and    $0xf7,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   8082480 <argp_parse+0xa540>
cmp    $0xffffffff,%eax
je     8063213 <fchmod@plt+0x18273>
sub    %ebx,%esi
add    %ebx,%ebp
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8079fe0 <argp_parse+0x20a0>
add    %eax,%ebx
jmp    8063213 <fchmod@plt+0x18273>
lea    0x0(%esi),%esi
sub    $0x3c,%esp
mov    0x4c(%esp),%eax
mov    0x50(%esp),%edx
movl   $0x3ffffffe,0x2c(%esp)
mov    %eax,0x20(%esp)
mov    0x809e434,%eax
mov    %edx,0x24(%esp)
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8079f50 <argp_parse+0x2010>
add    $0x3c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809dca4,%edx
xor    %eax,%eax
lea    -0x1(%edx),%ecx
test   %edx,%edx
cmovne %ecx,%eax
ret
jmp    80632e0 <fchmod@plt+0x18340>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x809e2c4,%eax
mov    0x809dca8,%edx
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
mov    (%eax),%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%eax
jne    8063318 <fchmod@plt+0x18378>
mov    %eax,0x4(%esp)
jmp    806f480 <fchmod@plt+0x244e0>
xchg   %ax,%ax
jmp    806f4a0 <fchmod@plt+0x24500>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
cmp    %esi,0x809e2c4
je     8063391 <fchmod@plt+0x183f1>
mov    0x809dca8,%eax
lea    (%esi,%esi,2),%edx
lea    (%eax,%edx,4),%ebx
mov    0x8(%ebx),%edi
test   %edi,%edi
je     8063398 <fchmod@plt+0x183f8>
test   %edi,%edi
jle    8063385 <fchmod@plt+0x183e5>
mov    0x809dc60,%eax
cmp    %eax,%esi
je     806337f <fchmod@plt+0x183df>
mov    0x809dc64,%ebx
mov    %eax,0x809dc64
cmp    %esi,%ebx
je     806337f <fchmod@plt+0x183df>
mov    $0x2,%edx
jmp    806336d <fchmod@plt+0x183cd>
nop
add    $0x1,%edx
mov    %ecx,%ebx
mov    0x809dc60(,%edx,4),%ecx
mov    %ebx,0x809dc60(,%edx,4)
cmp    %esi,%ecx
jne    8063368 <fchmod@plt+0x183c8>
mov    %esi,0x809dc60
mov    %esi,0x809e2c4
mov    %edi,0x809c3f8
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%ebx),%edx
cmpb   $0x2f,(%edx)
je     80633f8 <fchmod@plt+0x18458>
lea    -0x1(%esi),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x809e490,%eax
mov    (%ebx),%edx
mov    0x809c3f8,%ecx
and    $0xfffdffff,%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%edi
js     806344d <fchmod@plt+0x184ad>
mov    %eax,0x8(%ebx)
mov    0x809dc44,%eax
cmp    $0xf,%eax
ja     8063410 <fchmod@plt+0x18470>
lea    0x1(%eax),%edx
mov    %edx,0x809dc44
mov    %esi,0x809dc60(,%eax,4)
jmp    8063344 <fchmod@plt+0x183a4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e490,%eax
mov    0x809c3f8,%ecx
and    $0xfffdffff,%eax
jmp    80633bc <fchmod@plt+0x1841c>
lea    0x0(%esi),%esi
mov    0x809dc9c,%eax
lea    (%eax,%eax,2),%edx
mov    0x809dca8,%eax
lea    (%eax,%edx,4),%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    8063441 <fchmod@plt+0x184a1>
movl   $0x0,0x8(%ebx)
mov    %esi,0x809dc9c
jmp    8063344 <fchmod@plt+0x183a4>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8063300 <fchmod@plt+0x18360>
jmp    806342f <fchmod@plt+0x1848f>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%eax
jne    8063478 <fchmod@plt+0x184d8>
mov    %eax,0x4(%esp)
jmp    806f5c0 <fchmod@plt+0x24620>
xchg   %ax,%ax
jmp    806f600 <fchmod@plt+0x24660>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e535
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%eax
mov    0x10(%esp),%edx
mov    0x14(%esp),%ebx
jne    80634b0 <fchmod@plt+0x18510>
mov    %ebx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x8(%esp)
pop    %ebx
jmp    806f640 <fchmod@plt+0x246a0>
pop    %ebx
jmp    806f700 <fchmod@plt+0x24760>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%eax
jne    80634d8 <fchmod@plt+0x18538>
mov    %eax,0x4(%esp)
jmp    806f870 <fchmod@plt+0x248d0>
xchg   %ax,%ax
jmp    806f890 <fchmod@plt+0x248f0>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%eax
jne    80634f8 <fchmod@plt+0x18558>
mov    %eax,0x4(%esp)
jmp    806f8d0 <fchmod@plt+0x24930>
xchg   %ax,%ax
jmp    806f8f0 <fchmod@plt+0x24950>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
jne    8063528 <fchmod@plt+0x18588>
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
jmp    806f930 <fchmod@plt+0x24990>
xchg   %ax,%ax
jmp    806fa00 <fchmod@plt+0x24a60>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e535
mov    0x4(%esp),%eax
jne    8063548 <fchmod@plt+0x185a8>
mov    %eax,0x4(%esp)
jmp    806fb40 <fchmod@plt+0x24ba0>
xchg   %ax,%ax
jmp    806fb60 <fchmod@plt+0x24bc0>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x24(%esp)
mov    0x20(%esp),%ebx
mov    0x28(%esp),%esi
jne    806356e <fchmod@plt+0x185ce>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     8063580 <fchmod@plt+0x185e0>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x40,0x809d640
je     80635cb <fchmod@plt+0x1862b>
mov    %ebx,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088b74,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x1,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    806c040 <fchmod@plt+0x210a0>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806fc40 <fchmod@plt+0x24ca0>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
call   804ac70 <fork@plt>
cmp    $0xffffffff,%eax
je     8063621 <fchmod@plt+0x18681>
add    $0x1c,%esp
ret
movl   $0x5,0x8(%esp)
movl   $0x8088b46,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8088b54,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804aba0 <pipe@plt>
test   %eax,%eax
js     8063667 <fchmod@plt+0x186c7>
add    $0x1c,%esp
ret
movl   $0x5,0x8(%esp)
movl   $0x8088b59,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8088b6e,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804a9f0 <getpagesize@plt>
mov    %eax,%ebx
add    0x24(%esp),%eax
jb     80636d2 <fchmod@plt+0x18732>
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x20(%esp),%edx
lea    -0x1(%eax,%ebx,1),%ecx
mov    %eax,(%edx)
mov    %ecx,%eax
xor    %edx,%edx
div    %ebx
add    $0x18,%esp
mov    %ecx,%eax
pop    %ebx
sub    %edx,%eax
ret
call   8056010 <fchmod@plt+0xb070>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0xc,(%esp)
mov    0x20(%esp),%edi
call   8081640 <argp_parse+0x9700>
mov    %edi,(%esp)
mov    %eax,%ebx
call   804a950 <strlen@plt>
add    $0x2,%eax
mov    %eax,(%esp)
mov    %eax,0x4(%ebx)
call   8081640 <argp_parse+0x9700>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
mov    %eax,(%ebx)
call   804a600 <stpcpy@plt>
mov    %eax,%edx
sub    %esi,%edx
cmpb   $0x2f,-0x1(%eax)
mov    %edx,0x8(%ebx)
je     8063734 <fchmod@plt+0x18794>
add    $0x1,%edx
mov    %edx,0x8(%ebx)
movb   $0x2f,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    804a4c0 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x30(%esp),%ebx
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    0x8(%ebx),%edx
mov    %eax,%esi
lea    0x1(%edx,%eax,1),%eax
cmp    0x4(%ebx),%eax
jb     80637c2 <fchmod@plt+0x18822>
mov    (%ebx),%eax
lea    0x4(%ebx),%edi
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80817a0 <argp_parse+0x9860>
mov    0x8(%ebx),%edx
lea    0x1(%edx,%esi,1),%ecx
cmp    0x4(%ebx),%ecx
mov    %eax,(%ebx)
jae    8063790 <fchmod@plt+0x187f0>
add    %eax,%edx
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
call   804a780 <strcpy@plt>
mov    (%ebx),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%ebx),%eax
jmp    80637aa <fchmod@plt+0x1880a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    (%ebx),%edx
mov    0x8(%ebx),%eax
cmpb   $0x2f,-0x1(%edx,%eax,1)
je     80637fd <fchmod@plt+0x1885d>
movl   $0x809c3f4,0x4(%esp)
mov    %ebx,(%esp)
call   8063760 <fchmod@plt+0x187c0>
addl   $0x1,0x8(%ebx)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8063760 <fchmod@plt+0x187c0>
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    %eax,0x8(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
mov    (%edx),%ebx
mov    0x8(%edx),%eax
cmpb   $0x2f,-0x1(%ebx,%eax,1)
jne    8063838 <fchmod@plt+0x18898>
movb   $0x0,(%ebx,%eax,1)
mov    %edx,(%esp)
call   804a4c0 <free@plt>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809dca4,%eax
cmp    0x809dca0,%eax
mov    0x20(%esp),%ebx
je     8063918 <fchmod@plt+0x18978>
movzbl (%ebx),%eax
test   %al,%al
jne    80638ec <fchmod@plt+0x1894c>
mov    0x809dca4,%edx
mov    0x809dca8,%ecx
lea    (%edx,%edx,2),%esi
shl    $0x2,%esi
mov    -0x8(%ecx,%esi,1),%eax
test   %eax,%eax
je     8063910 <fchmod@plt+0x18970>
mov    %eax,(%esp)
call   80636e0 <fchmod@plt+0x18740>
mov    %ebx,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   80637d0 <fchmod@plt+0x18830>
mov    %esi,(%esp)
call   8063820 <fchmod@plt+0x18880>
mov    0x809dca4,%edx
mov    0x809dca8,%ecx
lea    (%edx,%edx,2),%esi
shl    $0x2,%esi
add    %esi,%ecx
mov    %eax,0x4(%ecx)
lea    0x1(%edx),%eax
mov    %ebx,(%ecx)
movl   $0x0,0x8(%ecx)
mov    %eax,0x809dca4
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%eax
cmp    $0x2f,%al
je     80638e0 <fchmod@plt+0x18940>
mov    %edx,%ebx
cmp    $0x2e,%al
jne    8063990 <fchmod@plt+0x189f0>
cmpb   $0x2f,0x1(%ebx)
jne    80639c0 <fchmod@plt+0x18a20>
movzbl 0x2(%ebx),%eax
lea    0x2(%ebx),%edx
cmp    $0x2f,%al
je     80638e0 <fchmod@plt+0x18940>
mov    %edx,%ebx
jmp    80638ec <fchmod@plt+0x1894c>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80638bf <fchmod@plt+0x1891f>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    0x809dca8,%ecx
jne    80639d8 <fchmod@plt+0x18a38>
test   %ecx,%ecx
mov    $0x24,%edx
mov    $0x3,%al
je     80639f8 <fchmod@plt+0x18a58>
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x809dca0
call   80816b0 <argp_parse+0x9770>
mov    %eax,%esi
mov    %eax,0x809dca8
mov    0x809dca4,%eax
test   %eax,%eax
jne    806386a <fchmod@plt+0x188ca>
movl   $0x80894f0,(%esi)
call   80818b0 <argp_parse+0x9970>
mov    0x809dca8,%ecx
mov    %eax,0x4(%esi)
mov    0x809dca4,%eax
lea    (%eax,%eax,2),%edx
add    $0x1,%eax
lea    (%ecx,%edx,4),%edx
movl   $0xffffff9c,0x8(%edx)
mov    %eax,0x809dca4
jmp    806386a <fchmod@plt+0x188ca>
lea    0x0(%esi),%esi
cmpb   $0x0,(%ebx)
je     80639ca <fchmod@plt+0x18a2a>
cmp    $0x2f,%al
jne    8063871 <fchmod@plt+0x188d1>
mov    %ebx,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x809dca4,%edx
mov    0x809dca8,%ecx
lea    (%edx,%edx,2),%esi
shl    $0x2,%esi
jmp    80638bf <fchmod@plt+0x1891f>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%ebx)
jne    8063871 <fchmod@plt+0x188d1>
mov    0x809dca4,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
sub    $0x1,%eax
ret
imul   $0xc,%eax,%edx
test   %ecx,%ecx
je     80639fc <fchmod@plt+0x18a5c>
cmp    $0xe38e38d,%eax
ja     8063a03 <fchmod@plt+0x18a63>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
lea    (%eax,%eax,2),%edx
shl    $0x2,%edx
jmp    8063935 <fchmod@plt+0x18995>
mov    $0x18,%dl
mov    $0x2,%al
xor    %ecx,%ecx
jmp    8063935 <fchmod@plt+0x18995>
call   8056010 <fchmod@plt+0xb070>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x809e498,%eax
mov    0x20(%esp),%ebx
or     $0x10000,%eax
mov    %eax,0x8(%esp)
mov    0x809c3f8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
mov    %eax,%esi
js     8063a78 <fchmod@plt+0x18ad8>
mov    %eax,(%esp)
call   804ad00 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%edi
je     8063ab8 <fchmod@plt+0x18b18>
mov    %eax,(%esp)
call   8080ca0 <argp_parse+0x8d60>
test   %eax,%eax
mov    %eax,%esi
je     8063ad8 <fchmod@plt+0x18b38>
mov    %edi,(%esp)
call   804af00 <closedir@plt>
test   %eax,%eax
mov    %esi,%eax
setne  %dl
test   %dl,%dl
jne    8063a9c <fchmod@plt+0x18afc>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
test   %eax,%eax
jne    8063a8a <fchmod@plt+0x18aea>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     8063ae5 <fchmod@plt+0x18b45>
mov    %ebx,(%esp)
xor    %esi,%esi
call   806f5c0 <fchmod@plt+0x24620>
xor    %edx,%edx
test   %dl,%dl
mov    %esi,%eax
je     8063a6e <fchmod@plt+0x18ace>
mov    %ebx,(%esp)
mov    %esi,0xc(%esp)
call   806f8d0 <fchmod@plt+0x24930>
mov    0xc(%esp),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   806f8d0 <fchmod@plt+0x24930>
mov    %esi,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
setne  %dl
xor    %esi,%esi
jmp    8063a96 <fchmod@plt+0x18af6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   806f8d0 <fchmod@plt+0x24930>
jmp    8063a5b <fchmod@plt+0x18abb>
xor    %eax,%eax
jmp    8063a6e <fchmod@plt+0x18ace>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809c3f8,%eax
mov    0x40(%esp),%ebx
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   804a470 <unlinkat@plt>
test   %eax,%eax
je     8063b70 <fchmod@plt+0x18bd0>
call   804aaf0 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
cmp    $0x15,%eax
je     8063b38 <fchmod@plt+0x18b98>
cmp    $0x1,%eax
je     8063b38 <fchmod@plt+0x18b98>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,%eax
call   8062d10 <fchmod@plt+0x17d70>
test   %eax,%eax
je     8063b70 <fchmod@plt+0x18bd0>
mov    (%esi),%eax
cmp    $0x11,%eax
je     8063b53 <fchmod@plt+0x18bb3>
cmp    $0x27,%eax
je     8063b53 <fchmod@plt+0x18bb3>
test   %eax,%eax
jne    8063b2b <fchmod@plt+0x18b8b>
cmpl   $0x1,0x44(%esp)
je     8063b80 <fchmod@plt+0x18be0>
xor    %eax,%eax
cmpl   $0x2,0x44(%esp)
setne  %al
sub    $0x1,%eax
jmp    8063b2d <fchmod@plt+0x18b8d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8063a10 <fchmod@plt+0x18a70>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8063b2b <fchmod@plt+0x18b8b>
mov    %eax,%edi
mov    %esi,0x14(%esp)
mov    %ebx,0x40(%esp)
jmp    8063be6 <fchmod@plt+0x18c46>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8065a50 <fchmod@plt+0x1aab0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8063af0 <fchmod@plt+0x18b50>
mov    %eax,%ebx
mov    0x14(%esp),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
je     8063c18 <fchmod@plt+0x18c78>
lea    0x1(%edi,%ebp,1),%edi
mov    %edi,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    8063ba8 <fchmod@plt+0x18c08>
mov    0x1c(%esp),%eax
mov    0x40(%esp),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,%eax
call   8062d10 <fchmod@plt+0x17d70>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    8063b2d <fchmod@plt+0x18b8d>
mov    0x1c(%esp),%eax
mov    0x14(%esp),%esi
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%esp),%eax
mov    %eax,(%esi)
xor    %eax,%eax
jmp    8063b2d <fchmod@plt+0x18b8d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%eax
sub    $0x2c,%esp
cmp    $0x1,%edx
je     8063cf8 <fchmod@plt+0x18d58>
cmp    $0x2,%edx
mov    %ecx,%ebp
je     8063d08 <fchmod@plt+0x18d68>
lea    0x1(%edx),%edx
mov    %eax,%ebx
mov    %edx,%ecx
shr    $0x1f,%ecx
add    %ecx,%edx
sar    %edx
shr    $0x1f,%ebx
mov    %edx,%ecx
add    %eax,%ebx
mov    %esi,%eax
sar    %ebx
sub    $0x1,%ecx
jne    8063cd8 <fchmod@plt+0x18d38>
mov    (%eax),%edi
mov    %ebp,%ecx
movl   $0x0,(%eax)
mov    %esi,%eax
call   8063c40 <fchmod@plt+0x18ca0>
mov    %ebx,%edx
mov    %ebp,%ecx
mov    %eax,%esi
mov    %edi,%eax
call   8063c40 <fchmod@plt+0x18ca0>
lea    0x1c(%esp),%edi
mov    %eax,%ebx
test   %ebx,%ebx
je     8063cc2 <fchmod@plt+0x18d22>
test   %esi,%esi
je     8063cc2 <fchmod@plt+0x18d22>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   *%ebp
test   %eax,%eax
js     8063ce8 <fchmod@plt+0x18d48>
mov    (%ebx),%eax
mov    %ebx,(%edi)
mov    %ebx,%edi
mov    %eax,%ebx
test   %ebx,%ebx
jne    8063ca5 <fchmod@plt+0x18d05>
test   %esi,%esi
cmovne %esi,%ebx
mov    %ebx,(%edi)
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
sub    $0x1,%ecx
mov    (%eax),%eax
je     8063c7d <fchmod@plt+0x18cdd>
sub    $0x1,%ecx
mov    (%eax),%eax
jne    8063cd8 <fchmod@plt+0x18d38>
jmp    8063c7d <fchmod@plt+0x18cdd>
mov    (%esi),%eax
mov    %esi,(%edi)
mov    %esi,%edi
mov    %eax,%esi
jmp    8063ca1 <fchmod@plt+0x18d01>
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *%ecx
test   %eax,%eax
jle    8063cf8 <fchmod@plt+0x18d58>
mov    (%esi),%eax
mov    %esi,(%eax)
movl   $0x0,(%esi)
jmp    8063ccd <fchmod@plt+0x18d2d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
jmp    804a3f0 <strcmp@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x18,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x809dcec,%edx
test   %edx,%edx
je     8063db8 <fchmod@plt+0x18e18>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%eax)
mov    0x4(%edx),%ecx
test   %ecx,%ecx
je     8063da8 <fchmod@plt+0x18e08>
mov    %eax,(%ecx)
mov    %edx,(%eax)
mov    %eax,0x4(%edx)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movb   $0x4,0x8(%eax)
movl   $0x18,(%esp)
mov    %eax,0x809dcec
call   8081640 <argp_parse+0x9700>
mov    0x809dcec,%edx
jmp    8063d99 <fchmod@plt+0x18df9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809dcec,%edx
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,0x809dcec
je     8063e0b <fchmod@plt+0x18e6b>
movl   $0x0,0x4(%eax)
mov    %edx,(%esp)
call   804a4c0 <free@plt>
add    $0x1c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
test   %eax,%eax
je     8063e48 <fchmod@plt+0x18ea8>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x38,(%esp)
call   80817f0 <argp_parse+0x98b0>
test   %ebx,%ebx
mov    %eax,%esi
mov    $0x808d3ee,%eax
cmove  %eax,%ebx
mov    %ebx,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
mov    %eax,0x8(%esi)
call   804a950 <strlen@plt>
mov    %eax,0xc(%esi)
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e48d
je     8063f40 <fchmod@plt+0x18fa0>
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80797d0 <argp_parse+0x1890>
test   %al,%al
jne    8063ec0 <fchmod@plt+0x18f20>
mov    0x809dcb4,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8088bf4,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x809dcb4
00
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x5,0x8(%esp)
movl   $0x8088c24,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x809dcb4,%eax
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809dcb4,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,0x4(%esp)
jmp    807a7d0 <argp_parse+0x2890>
mov    0x809e4c4,%ecx
push   %edi
mov    0x809e4c0,%edi
push   %esi
push   %ebx
mov    0x10(%esp),%ebx
mov    %ecx,%eax
mov    0x14(%esp),%esi
or     %edi,%eax
jne    8063fa0 <fchmod@plt+0x19000>
mov    0x1c(%esi),%eax
mov    0x1c(%ebx),%edx
sub    %edx,%eax
jne    8063fc0 <fchmod@plt+0x19020>
mov    0x8(%esi),%eax
mov    %eax,0x14(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x10(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804a3f0 <strcmp@plt>
lea    0x0(%esi),%esi
cmp    0x20(%esi),%ecx
mov    $0x1,%eax
jae    8063fc8 <fchmod@plt+0x19028>
cmp    0x20(%ebx),%ecx
mov    $0x1,%edx
jb     8063f83 <fchmod@plt+0x18fe3>
jbe    8063fd8 <fchmod@plt+0x19038>
xor    %edx,%edx
sub    %edx,%eax
je     8063f87 <fchmod@plt+0x18fe7>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
jbe    8063fe8 <fchmod@plt+0x19048>
xor    %eax,%eax
mov    $0x1,%edx
cmp    0x20(%ebx),%ecx
jb     8063f83 <fchmod@plt+0x18fe3>
jmp    8063fb4 <fchmod@plt+0x19014>
cmp    0x1c(%ebx),%edi
jbe    8063f83 <fchmod@plt+0x18fe3>
xor    %edx,%edx
nop
jmp    8063fb8 <fchmod@plt+0x19018>
lea    0x0(%esi),%esi
cmp    0x1c(%esi),%edi
jbe    8063faa <fchmod@plt+0x1900a>
lea    0x0(%esi),%esi
jmp    8063fca <fchmod@plt+0x1902a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x809dcf4,%ebx
test   %ebx,%ebx
jne    806401e <fchmod@plt+0x1907e>
jmp    8064048 <fchmod@plt+0x190a8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8064048 <fchmod@plt+0x190a8>
mov    0x8(%ebx),%edx
cmpb   $0x0,(%edx)
je     8064018 <fchmod@plt+0x19078>
mov    0x10(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   80798f0 <argp_parse+0x19b0>
test   %al,%al
je     8064018 <fchmod@plt+0x19078>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x28(%eax),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0xc(%eax),%edi
nop
mov    0x1c(%esp),%esi
sub    %edi,%esi
add    0xc(%ebx),%esi
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a600 <stpcpy@plt>
mov    0x8(%ebx),%ecx
add    %edi,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%esp),%eax
mov    %esi,0xc(%ebx)
mov    0x1c(%esp),%esi
mov    %ebp,0x8(%ebx)
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x10(%esp)
mov    0x28(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   805d170 <fchmod@plt+0x121d0>
mov    0x30(%ebx),%ebx
test   %ebx,%ebx
jne    8064068 <fchmod@plt+0x190c8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x809dcec,%ecx
mov    %eax,0x24(%esp)
test   %ecx,%ecx
je     8064551 <fchmod@plt+0x195b1>
cmpb   $0x4,0x8(%ecx)
ja     806410c <fchmod@plt+0x1916c>
movzbl 0x8(%ecx),%eax
jmp    *0x8088d94(,%eax,4)
lea    0x0(%esi),%esi
test   %esi,%esi
sete   %dl
je     8064480 <fchmod@plt+0x194e0>
cmp    0x809dce4,%esi
mov    0x20(%esp),%ecx
je     806475d <fchmod@plt+0x197bd>
mov    0x809dce8,%ebp
cmp    $0xffffffff,%ebx
sete   %al
test   %dl,%al
movb   $0x0,0x0(%ebp,%esi,1)
je     806437a <fchmod@plt+0x193da>
mov    0xc(%ecx),%eax
cmpb   $0x2d,(%eax)
je     806450b <fchmod@plt+0x1956b>
mov    0x14(%ecx),%eax
mov    %ecx,0x20(%esp)
mov    %eax,(%esp)
call   804a540 <fclose@plt>
mov    0x20(%esp),%ecx
movl   $0x0,0x14(%ecx)
call   8063df0 <fchmod@plt+0x18e50>
mov    0x809dcec,%edx
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ecx),%ebx
mov    %ecx,0x20(%esp)
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    0x809dce4,%edx
mov    0x809dce8,%esi
mov    0x20(%esp),%ecx
cmp    %edx,%eax
jbe    80641f6 <fchmod@plt+0x19256>
nop
lea    0x0(%esi,%eiz,1),%esi
add    %edx,%edx
je     80647b0 <fchmod@plt+0x19810>
cmp    %edx,%eax
ja     80641b8 <fchmod@plt+0x19218>
mov    0x809dce8,%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x809dce4
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809dce4,%eax
add    $0x2,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x20(%esp),%ecx
mov    %eax,0x809dce8
mov    %eax,%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x20(%esp)
call   804a600 <stpcpy@plt>
mov    0x20(%esp),%ecx
lea    -0x1(%eax),%edx
cmp    %esi,%edx
ja     8064223 <fchmod@plt+0x19283>
jmp    8064228 <fchmod@plt+0x19288>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edx
cmp    %esi,%edx
movb   $0x0,0x1(%edx)
je     8064228 <fchmod@plt+0x19288>
cmpb   $0x2f,(%edx)
je     8064218 <fchmod@plt+0x19278>
cmpb   $0x0,0x809e4b8
jne    8064498 <fchmod@plt+0x194f8>
movzbl 0x8(%ecx),%eax
mov    %esi,0x809dccc
mov    %al,0x809dcc8
call   8063df0 <fchmod@plt+0x18e50>
mov    $0x809dcc0,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
test   %eax,%eax
je     8064190 <fchmod@plt+0x191f0>
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
call   8063850 <fchmod@plt+0x188b0>
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
call   8063df0 <fchmod@plt+0x18e50>
mov    0x809dcec,%edx
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ecx),%edi
test   %edi,%edi
je     8064520 <fchmod@plt+0x19580>
mov    %ecx,0x20(%esp)
mov    0x20(%esp),%eax
mov    0x10(%eax),%ebp
mov    0x4(%edi),%eax
cmp    0x8(%edi),%eax
jae    8064816 <fchmod@plt+0x19876>
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
movzbl (%eax),%ebx
xor    %esi,%esi
lea    0x0(%esi),%esi
cmp    $0xffffffff,%ebx
setne  %al
cmp    %ebx,%ebp
je     8064120 <fchmod@plt+0x19180>
test   %al,%al
je     8064120 <fchmod@plt+0x19180>
cmp    %esi,0x809dce4
je     8064338 <fchmod@plt+0x19398>
mov    0x809dce8,%eax
test   %ebx,%ebx
lea    0x1(%esi),%edx
mov    %bl,(%eax,%esi,1)
je     8064360 <fchmod@plt+0x193c0>
mov    0x4(%edi),%eax
cmp    0x8(%edi),%eax
jae    8064797 <fchmod@plt+0x197f7>
lea    0x1(%eax),%ecx
mov    %edx,%esi
mov    %ecx,0x4(%edi)
movzbl (%eax),%ebx
jmp    80642d0 <fchmod@plt+0x19330>
xchg   %ax,%ax
mov    0xc(%ecx),%eax
mov    %eax,0x809dcdc
call   8063df0 <fchmod@plt+0x18e50>
mov    0x809dcec,%edx
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
lea    0x0(%esi),%esi
mov    0x809dce8,%eax
movl   $0x809dce4,0x4(%esp)
mov    %eax,(%esp)
call   80817a0 <argp_parse+0x9860>
test   %ebx,%ebx
lea    0x1(%esi),%edx
mov    %eax,0x809dce8
mov    %bl,(%eax,%esi,1)
jne    80642fd <fchmod@plt+0x1935d>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x2,0x809d641
mov    %eax,%ebp
mov    0x20(%esp),%ecx
jne    80644b8 <fchmod@plt+0x19518>
movl   $0x0,0x10(%ecx)
cmpb   $0x0,0x809e4b8
jne    80644f8 <fchmod@plt+0x19558>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
movsbl %al,%ebx
add    %ebx,%ebx
test   %al,%al
jne    80643b8 <fchmod@plt+0x19418>
mov    %ebp,0x809dccc
mov    $0x809dcc0,%eax
movb   $0x0,0x809dcc8
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
movzwl (%eax,%ebx,1),%eax
test   $0x20,%ah
jne    80643b8 <fchmod@plt+0x19418>
mov    %esi,%eax
cmp    $0x2d,%al
jne    8064396 <fchmod@plt+0x193f6>
lea    0x30(%esp),%eax
movl   $0x2000e46,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x1,0x38(%esp)
call   80723a0 <fchmod@plt+0x27400>
test   %eax,%eax
jne    80647bf <fchmod@plt+0x1981f>
mov    0x809d840,%edx
mov    0x34(%esp),%eax
mov    %edx,(%eax)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
add    0x30(%esp),%eax
mov    %eax,(%esp)
call   806bda0 <fchmod@plt+0x20e00>
mov    0x30(%esp),%ebx
xor    %eax,%eax
xor    %edx,%edx
add    0x38(%esp),%ebx
je     806443c <fchmod@plt+0x1949c>
mov    0x34(%esp),%ecx
add    $0x1,%eax
cmp    %ebx,%eax
movl   $0x0,(%ecx,%edx,4)
mov    %eax,%edx
jne    8064428 <fchmod@plt+0x19488>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   8071b60 <fchmod@plt+0x26bc0>
mov    0x809dcec,%eax
xor    %edx,%edx
test   %eax,%eax
je     8064185 <fchmod@plt+0x191e5>
mov    0x4(%eax),%edx
test   %edx,%edx
jne    806446a <fchmod@plt+0x194ca>
jmp    806478e <fchmod@plt+0x197ee>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x4(%edx),%eax
test   %eax,%eax
jne    8064468 <fchmod@plt+0x194c8>
mov    %edx,0x809dcec
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
xchg   %ax,%ax
test   %al,%al
je     806412b <fchmod@plt+0x1918b>
mov    0x20(%esp),%eax
mov    0x14(%eax),%edi
jmp    80642af <fchmod@plt+0x1930f>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
mov    %ecx,0x20(%esp)
call   8062280 <fchmod@plt+0x172e0>
mov    0x809dce8,%esi
mov    0x20(%esp),%ecx
jmp    8064235 <fchmod@plt+0x19295>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x8088cb4,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
mov    0x809dce8,%ebp
mov    0x20(%esp),%ecx
jmp    8064373 <fchmod@plt+0x193d3>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8062280 <fchmod@plt+0x172e0>
mov    0x809dce8,%ebp
jmp    8064387 <fchmod@plt+0x193e7>
cmpb   $0x0,0x1(%eax)
je     8064173 <fchmod@plt+0x191d3>
jmp    8064160 <fchmod@plt+0x191c0>
lea    0x0(%esi),%esi
mov    0xc(%ecx),%ebp
cmpb   $0x2d,0x0(%ebp)
jne    8064558 <fchmod@plt+0x195b8>
cmpb   $0x0,0x1(%ebp)
jne    8064558 <fchmod@plt+0x195b8>
movl   $0x8088b97,(%esp)
mov    %ecx,0x20(%esp)
call   806a1b0 <fchmod@plt+0x1f210>
mov    0x809d884,%edi
mov    0x20(%esp),%ecx
mov    %edi,0x14(%ecx)
jmp    80642af <fchmod@plt+0x1930f>
xor    %eax,%eax
jmp    806424e <fchmod@plt+0x192ae>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x20(%esp)
call   804ae60 <__xstat64@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    806480e <fchmod@plt+0x1986e>
mov    %ecx,%eax
jmp    8064592 <fchmod@plt+0x195f2>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
test   %eax,%eax
je     8064730 <fchmod@plt+0x19790>
cmpb   $0x3,0x8(%eax)
jne    8064588 <fchmod@plt+0x195e8>
mov    0x14(%eax),%edx
test   %edx,%edx
je     8064588 <fchmod@plt+0x195e8>
mov    0xc(%eax),%eax
mov    %eax,0x20(%esp)
mov    0x809dce0,%ebx
test   %ebx,%ebx
je     80646b1 <fchmod@plt+0x19711>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %ebp,0x2c(%esp)
mov    0x88(%esp),%esi
mov    %ecx,0x28(%esp)
mov    0x8c(%esp),%edi
mov    %eax,%ecx
mov    %edx,%ebp
jmp    80645e2 <fchmod@plt+0x19642>
mov    (%ebx),%ebx
test   %ebx,%ebx
je     80646ad <fchmod@plt+0x1970d>
mov    0x8(%ebx),%edx
mov    0x4(%ebx),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
jne    80645d8 <fchmod@plt+0x19638>
mov    0x10(%ebx),%edx
mov    0xc(%ebx),%eax
xor    %ebp,%edx
xor    %ecx,%eax
or     %eax,%edx
jne    80645d8 <fchmod@plt+0x19638>
movl   $0x1,0x8(%esp)
mov    0x2c(%esp),%ebp
movl   $0x3a,0x4(%esp)
movl   $0x0,(%esp)
call   80803f0 <argp_parse+0x84b0>
mov    0x14(%ebx),%edi
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8080690 <argp_parse+0x8750>
movl   $0x5,0x8(%esp)
movl   $0x8088c7c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    0x20(%esp),%edi
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    %esi,0x8(%esp)
movl   $0x3a,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x2,0x809e084
00
call   80803f0 <argp_parse+0x84b0>
call   8063df0 <fchmod@plt+0x18e50>
mov    0x809dcec,%edx
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
mov    0x28(%esp),%ecx
movl   $0x18,(%esp)
mov    %ecx,0x28(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x8c(%esp),%edi
mov    0x88(%esp),%esi
mov    0x28(%esp),%ecx
mov    0x809dce0,%edx
mov    %edi,0x8(%eax)
mov    0x34(%esp),%edi
mov    %esi,0x4(%eax)
mov    0x30(%esp),%esi
mov    %edx,(%eax)
mov    %eax,0x809dce0
mov    %edi,0x10(%eax)
mov    0x20(%esp),%edi
mov    %esi,0xc(%eax)
mov    %ecx,0x20(%esp)
mov    %edi,0x14(%eax)
movl   $0x8089290,0x4(%esp)
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   804a710 <fopen64@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x14(%ecx)
jne    80642ab <fchmod@plt+0x1930b>
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8088b9a,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x28(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x28(%esp),%ecx
mov    %eax,0x20(%esp)
jmp    80645a6 <fchmod@plt+0x19606>
mov    0x809dce8,%eax
movl   $0x809dce4,0x4(%esp)
mov    %ecx,0x28(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   80817a0 <argp_parse+0x9860>
mov    0x28(%esp),%ecx
mov    0x20(%esp),%edx
mov    %eax,0x809dce8
mov    %eax,%ebp
jmp    8064141 <fchmod@plt+0x191a1>
mov    %eax,%edx
mov    %edx,%ecx
jmp    8064104 <fchmod@plt+0x19164>
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   804ac80 <__uflow@plt>
mov    0x28(%esp),%edx
mov    %edx,%esi
mov    %eax,%ebx
jmp    80642d0 <fchmod@plt+0x19330>
movl   $0x0,0x809dce4
00
call   8056010 <fchmod@plt+0xb070>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   80735a0 <fchmod@plt+0x28600>
movl   $0x5,0x8(%esp)
movl   $0x8088ba7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    %ebp,(%esp)
call   806fb20 <fchmod@plt+0x24b80>
mov    %edi,(%esp)
call   804ac80 <__uflow@plt>
mov    %eax,%ebx
jmp    80642cb <fchmod@plt+0x1932b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8064844 <fchmod@plt+0x198a4>
cmp    0x809dcfc,%ebx
je     806489e <fchmod@plt+0x198fe>
mov    0x809dd14,%eax
test   %eax,%eax
je     8064855 <fchmod@plt+0x198b5>
cmp    0x809dd0c,%ebx
je     806487e <fchmod@plt+0x198de>
mov    %ebx,(%esp)
call   804a430 <getpwuid@plt>
test   %eax,%eax
je     8064898 <fchmod@plt+0x198f8>
mov    (%eax),%eax
movl   $0x809dd14,(%esp)
mov    %ebx,0x809dd0c
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809dd14,%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x24(%esp),%edx
mov    %eax,(%edx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x809dcfc
movl   $0x808d3ee,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x24(%esp),%ecx
mov    %eax,(%ecx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80648d4 <fchmod@plt+0x19934>
cmp    0x809dcf8,%ebx
je     806492e <fchmod@plt+0x1998e>
mov    0x809dd10,%eax
test   %eax,%eax
je     80648e5 <fchmod@plt+0x19945>
cmp    0x809dd08,%ebx
je     806490e <fchmod@plt+0x1996e>
mov    %ebx,(%esp)
call   804af30 <getgrgid@plt>
test   %eax,%eax
je     8064928 <fchmod@plt+0x19988>
mov    (%eax),%eax
movl   $0x809dd10,(%esp)
mov    %ebx,0x809dd08
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x809dd10,%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x24(%esp),%edx
mov    %eax,(%edx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x809dcf8
movl   $0x808d3ee,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x24(%esp),%ecx
mov    %eax,(%ecx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x809dd04,%eax
mov    0x20(%esp),%ebx
test   %eax,%eax
je     8064971 <fchmod@plt+0x199d1>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     80649b9 <fchmod@plt+0x19a19>
mov    0x809dd14,%eax
test   %eax,%eax
je     8064981 <fchmod@plt+0x199e1>
movzbl (%eax),%ecx
cmp    %cl,(%ebx)
je     80649c0 <fchmod@plt+0x19a20>
mov    %ebx,(%esp)
call   804a380 <getpwnam@plt>
test   %eax,%eax
je     80649d8 <fchmod@plt+0x19a38>
mov    0x8(%eax),%edx
mov    (%eax),%eax
movl   $0x809dd14,(%esp)
mov    %edx,0x809dd0c
mov    %eax,0x4(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    0x24(%esp),%eax
mov    0x809dd0c,%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     80649a8 <fchmod@plt+0x19a08>
jmp    8064981 <fchmod@plt+0x199e1>
lea    0x0(%esi),%esi
mov    %ebx,0x4(%esp)
movl   $0x809dd04,(%esp)
call   8062250 <fchmod@plt+0x172b0>
xor    %eax,%eax
jmp    80649b9 <fchmod@plt+0x19a19>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x809dd00,%eax
mov    0x20(%esp),%ebx
test   %eax,%eax
je     8064a11 <fchmod@plt+0x19a71>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     8064a56 <fchmod@plt+0x19ab6>
mov    0x809dd10,%eax
test   %eax,%eax
je     8064a21 <fchmod@plt+0x19a81>
movzbl (%eax),%ecx
cmp    %cl,(%ebx)
je     8064a60 <fchmod@plt+0x19ac0>
mov    %ebx,(%esp)
call   804aed0 <getgrnam@plt>
test   %eax,%eax
je     8064a78 <fchmod@plt+0x19ad8>
mov    0x8(%eax),%eax
mov    %ebx,0x4(%esp)
movl   $0x809dd10,(%esp)
mov    %eax,0x809dd08
call   8062250 <fchmod@plt+0x172b0>
mov    0x24(%esp),%eax
mov    0x809dd08,%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     8064a45 <fchmod@plt+0x19aa5>
jmp    8064a21 <fchmod@plt+0x19a81>
lea    0x0(%esi),%esi
mov    %ebx,0x4(%esp)
movl   $0x809dd00,(%esp)
call   8062250 <fchmod@plt+0x172b0>
xor    %eax,%eax
jmp    8064a56 <fchmod@plt+0x19ab6>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%ebx
call   8063d80 <fchmod@plt+0x18de0>
cmp    %ebx,0x809dcd8
je     8064ab7 <fchmod@plt+0x19b17>
movb   $0x2,0x8(%eax)
mov    %ebx,0xc(%eax)
mov    %ebx,0x809dcd8
call   8063d80 <fchmod@plt+0x18de0>
mov    0x10(%esp),%edx
movb   $0x0,0x8(%eax)
addl   $0x1,0x809e2c8
mov    %edx,0xc(%eax)
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
sub    $0xc,%esp
call   8063d80 <fchmod@plt+0x18de0>
mov    0x10(%esp),%edx
movb   $0x1,0x8(%eax)
mov    %edx,0xc(%eax)
add    $0xc,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   8063d80 <fchmod@plt+0x18de0>
mov    0x10(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x14(%esp),%edx
movb   $0x3,0x8(%eax)
movl   $0x0,0x14(%eax)
mov    %edx,0x10(%eax)
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x66,(%esp)
call   8081640 <argp_parse+0x9700>
movl   $0x64,0x809dce4
00
mov    %eax,0x809dce8
mov    0x809dcec,%eax
test   %eax,%eax
je     8064b5f <fchmod@plt+0x19bbf>
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8064b52 <fchmod@plt+0x19bb2>
jmp    8064b5f <fchmod@plt+0x19bbf>
mov    %eax,%edx
mov    0x4(%edx),%eax
test   %eax,%eax
jne    8064b50 <fchmod@plt+0x19bb0>
mov    %edx,0x809dcec
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809dce8,%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
call   80640f0 <fchmod@plt+0x19150>
test   %eax,%eax
je     8064ba8 <fchmod@plt+0x19c08>
mov    0xc(%eax),%eax
add    $0xc,%esp
ret
nop
xor    %eax,%eax
jmp    8064ba3 <fchmod@plt+0x19c03>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x18(%esp),%ebx
call   8063e50 <fchmod@plt+0x18eb0>
mov    0x809dcdc,%ecx
mov    0x809dcf0,%edx
test   %edx,%edx
mov    %ecx,0x10(%eax)
mov    0x14(%esp),%ecx
mov    %edx,0x4(%eax)
movl   $0x0,(%eax)
movl   $0x0,0x1c(%eax)
mov    %ecx,0x18(%eax)
mov    0x1c(%esp),%ecx
movl   $0x0,0x20(%eax)
movl   $0x0,0x24(%eax)
mov    %bl,0x14(%eax)
mov    %ecx,0x28(%eax)
je     8064c10 <fchmod@plt+0x19c70>
mov    %eax,(%edx)
mov    %eax,0x809dcf0
add    $0x8,%esp
pop    %ebx
ret
nop
mov    %eax,0x809dcf4
mov    %eax,0x809dcf0
add    $0x8,%esp
pop    %ebx
ret
nop
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x809e468
jne    8064cb6 <fchmod@plt+0x19d16>
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
jmp    8064c5f <fchmod@plt+0x19cbf>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x1,0x8(%eax)
jne    8064cf0 <fchmod@plt+0x19d50>
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
call   8063850 <fchmod@plt+0x188b0>
mov    %eax,%esi
xor    %eax,%eax
call   80640f0 <fchmod@plt+0x19150>
test   %eax,%eax
jne    8064c40 <fchmod@plt+0x19ca0>
cmp    %esi,%ebx
je     8064c90 <fchmod@plt+0x19cf0>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
xchg   %ax,%ax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmpb   $0x1,0x8(%eax)
jne    8064d16 <fchmod@plt+0x19d76>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,(%esp)
call   8063850 <fchmod@plt+0x188b0>
mov    %eax,0x809dcbc
xor    %eax,%eax
call   80640f0 <fchmod@plt+0x19150>
test   %eax,%eax
mov    %eax,%ebx
jne    8064c98 <fchmod@plt+0x19cf8>
mov    0x809dcbc,%eax
test   %eax,%eax
je     8064c90 <fchmod@plt+0x19cf0>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
jmp    8064c90 <fchmod@plt+0x19cf0>
xchg   %ax,%ax
movl   $0x0,0xc(%esp)
mov    %esi,%ebx
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
jmp    8064c38 <fchmod@plt+0x19c98>
mov    0x809dcb8,%eax
call   8063e20 <fchmod@plt+0x18e80>
mov    0xc(%ebx),%eax
call   8063e50 <fchmod@plt+0x18eb0>
mov    0x809dcbc,%edx
mov    %edx,0x18(%eax)
mov    0x809dcdc,%edx
movl   $0x0,(%eax)
movl   $0x0,0x1c(%eax)
movl   $0x0,0x20(%eax)
mov    %edx,0x10(%eax)
movl   $0x0,0x24(%eax)
movl   $0x0,0x28(%eax)
movb   $0x1,0x14(%eax)
mov    %eax,0x809dcb8
mov    %eax,0x809dcf0
mov    %eax,0x809dcf4
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x13c,%esp
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x1c(%esp)
call   805d1f0 <fchmod@plt+0x12250>
mov    %eax,0x24(%esi)
mov    %eax,(%esp)
call   805d750 <fchmod@plt+0x127b0>
test   %eax,%eax
mov    %eax,%ebx
je     8064f83 <fchmod@plt+0x19fe3>
mov    0xc(%esi),%esi
cmp    $0x63,%esi
ja     8064f8e <fchmod@plt+0x19fee>
mov    $0x65,%eax
mov    $0x64,%ebp
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%edi
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    0x18(%eax),%ecx
mov    0x8(%eax),%eax
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   804a780 <strcpy@plt>
cmpb   $0x2f,-0x1(%edi,%esi,1)
mov    %esi,0x14(%esp)
je     8064e08 <fchmod@plt+0x19e68>
addl   $0x1,0x14(%esp)
movb   $0x2f,(%edi,%esi,1)
movb   $0x0,0x1(%edi,%esi,1)
movzbl (%ebx),%edi
mov    %edi,%eax
test   %al,%al
je     8064fee <fchmod@plt+0x1a04e>
movl   $0x0,0x18(%esp)
movl   $0x0,0x28(%esp)
jmp    8064e39 <fchmod@plt+0x19e99>
nop
lea    0x1(%ebx,%esi,1),%ebx
movzbl (%ebx),%edi
mov    %edi,%eax
test   %al,%al
je     8064f6c <fchmod@plt+0x19fcc>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
mov    %edi,%eax
cmp    $0x44,%al
jne    8064e28 <fchmod@plt+0x19e88>
mov    0x14(%esp),%eax
add    %esi,%eax
cmp    %ebp,%eax
jb     8064e7b <fchmod@plt+0x19edb>
nop
lea    0x0(%esi,%eiz,1),%esi
add    %ebp,%ebp
je     8064ffb <fchmod@plt+0x1a05b>
cmp    %ebp,%eax
jae    8064e58 <fchmod@plt+0x19eb8>
lea    0x1(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x10(%esp)
lea    0x1(%ebx),%eax
mov    0x10(%esp),%edi
mov    %eax,0x20(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x24(%esp),%eax
mov    %edi,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
mov    %eax,%edi
mov    0x28(%esp),%eax
test   %eax,%eax
je     8064fe5 <fchmod@plt+0x1a045>
mov    0x18(%esp),%eax
mov    %edi,0x30(%eax)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
mov    0x1c(%esp),%eax
mov    0xf0(%eax),%edx
mov    %eax,0x124(%esp)
test   %edx,%edx
js     8064fa0 <fchmod@plt+0x1a000>
mov    0x809e498,%eax
or     $0x10000,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80537d0 <fchmod@plt+0x8830>
test   %eax,%eax
js     8064fb1 <fchmod@plt+0x1a011>
lea    0x68(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x12c(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
mov    0x10(%esp),%eax
mov    %eax,(%esp)
je     8064fc0 <fchmod@plt+0x1a020>
call   8063530 <fchmod@plt+0x18590>
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
lea    0x1(%ebx,%esi,1),%ebx
call   806bee0 <fchmod@plt+0x20f40>
mov    %edi,0x18(%esp)
movzbl (%ebx),%edi
mov    %edi,%eax
test   %al,%al
jne    8064e39 <fchmod@plt+0x19e99>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,0x2c(%eax)
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x64(%esi),%ebp
lea    0x65(%esi),%eax
jmp    8064dc7 <fchmod@plt+0x19e27>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x18(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
neg    %edx
mov    %edx,(%eax)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8063460 <fchmod@plt+0x184c0>
jmp    8064f4b <fchmod@plt+0x19fab>
nop
call   8081880 <argp_parse+0x9940>
mov    %edi,%edx
mov    %eax,0x3c(%esp)
lea    0x3c(%esp),%eax
call   8064d80 <fchmod@plt+0x19de0>
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8053900 <fchmod@plt+0x8960>
jmp    8064f4b <fchmod@plt+0x19fab>
mov    %edi,0x28(%esp)
jmp    8064ecd <fchmod@plt+0x19f2d>
movl   $0x0,0x28(%esp)
jmp    8064f6c <fchmod@plt+0x19fcc>
call   8056010 <fchmod@plt+0xb070>
mov    0x4(%esp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     8065028 <fchmod@plt+0x1a088>
mov    (%eax),%ecx
mov    %ecx,(%edx)
mov    (%eax),%eax
test   %eax,%eax
je     8065020 <fchmod@plt+0x1a080>
mov    %edx,0x4(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x809dcf0
ret
nop
mov    (%eax),%eax
mov    %eax,0x809dcf4
jmp    8065011 <fchmod@plt+0x1a071>
jmp    8065040 <fchmod@plt+0x1a0a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x809dcf4,%edx
mov    0x20(%esp),%ebx
jmp    806508d <fchmod@plt+0x1a0ed>
mov    0x8(%edx),%eax
cmpb   $0x0,(%eax)
je     80650a8 <fchmod@plt+0x1a108>
mov    %ebx,%eax
call   8064000 <fchmod@plt+0x19060>
test   %eax,%eax
jne    80650d8 <fchmod@plt+0x1a138>
cmpb   $0x0,0x809e468
je     80650a0 <fchmod@plt+0x1a100>
mov    0x809dcf4,%edx
mov    0x20(%edx),%eax
or     0x1c(%edx),%eax
je     80650a0 <fchmod@plt+0x1a100>
call   8064c20 <fchmod@plt+0x19c80>
mov    0x809dcf4,%edx
mov    0x20(%edx),%eax
or     0x1c(%edx),%eax
jne    80650a0 <fchmod@plt+0x1a100>
test   %edx,%edx
jne    8065050 <fchmod@plt+0x1a0b0>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x18(%edx),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    $0x1,%eax
movl   $0x0,0x809dcf4
00
movl   $0x0,0x809dcf0
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%edx
cmpb   $0x2f,(%ebx,%edx,1)
je     806516f <fchmod@plt+0x1a1cf>
mov    0x1c(%eax),%ecx
mov    0x20(%eax),%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,0x1c(%eax)
mov    %ebx,0x20(%eax)
cmpb   $0x0,0x809e484
jne    8065143 <fchmod@plt+0x1a1a3>
mov    0x18(%eax),%edx
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x809e4c4,%edx
mov    0x809e4c0,%ecx
mov    %edx,%eax
or     %ecx,%eax
mov    0xc(%esp),%eax
jne    8065133 <fchmod@plt+0x1a193>
mov    0x1c(%eax),%edx
or     0x20(%eax),%edx
setne  %al
jmp    80650a2 <fchmod@plt+0x1a102>
xor    0x1c(%eax),%ecx
xor    0x20(%eax),%edx
or     %edx,%ecx
sete   %al
jmp    80650a2 <fchmod@plt+0x1a102>
mov    0x809dcf4,%edx
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   804a4c0 <free@plt>
mov    0xc(%esp),%eax
movl   $0x0,0x809dcf4
00
movl   $0x0,0x809dcf0
00
jmp    8065100 <fchmod@plt+0x1a160>
mov    0x809e480,%edx
test   %edx,%edx
je     80650e5 <fchmod@plt+0x1a145>
mov    0x20(%eax),%edx
or     0x1c(%eax),%edx
jne    80650f7 <fchmod@plt+0x1a157>
xor    %ecx,%ecx
xor    %ebx,%ebx
jmp    80650eb <fchmod@plt+0x1a14b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x4(%eax),%ebx
test   %ebx,%ebx
je     8065228 <fchmod@plt+0x1a288>
mov    0x809e4c4,%esi
xor    %edi,%edi
mov    0x809e4c0,%ebp
mov    %esi,%edx
or     %ebp,%edx
je     806521b <fchmod@plt+0x1a27b>
movzbl 0x8(%eax),%edi
mov    %edi,%eax
test   %al,%al
jne    8065228 <fchmod@plt+0x1a288>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    0x809dcf4,%edx
test   %edx,%edx
jne    806520e <fchmod@plt+0x1a26e>
jmp    8065238 <fchmod@plt+0x1a298>
lea    0x0(%esi,%eiz,1),%esi
jb     80651f8 <fchmod@plt+0x1a258>
cmp    0x1c(%edx),%ebp
lea    0x0(%esi),%esi
ja     806521b <fchmod@plt+0x1a27b>
lea    0x0(%esi),%esi
mov    0xc(%edx),%ecx
cmp    %ecx,%eax
lea    0x0(%esi),%esi
jb     8065208 <fchmod@plt+0x1a268>
cmpb   $0x2f,(%ebx,%ecx,1)
je     806521b <fchmod@plt+0x1a27b>
mov    (%edx),%edx
test   %edx,%edx
je     8065238 <fchmod@plt+0x1a298>
mov    0x8(%edx),%ecx
cmpb   $0x0,(%ecx)
je     80651f8 <fchmod@plt+0x1a258>
cmp    0x20(%edx),%esi
jbe    80651e8 <fchmod@plt+0x1a248>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %edi,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809dcf4,%ebx
test   %ebx,%ebx
jne    8065282 <fchmod@plt+0x1a2e2>
jmp    8065320 <fchmod@plt+0x1a380>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebx),%eax
or     0x20(%ebx),%eax
jne    8065278 <fchmod@plt+0x1a2d8>
mov    0x8(%ebx),%eax
cmpb   $0x0,(%eax)
jne    80652b0 <fchmod@plt+0x1a310>
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8065320 <fchmod@plt+0x1a380>
mov    0x809e4c4,%eax
mov    0x809e4c0,%edx
mov    %eax,%ecx
or     %edx,%ecx
je     8065268 <fchmod@plt+0x1a2c8>
cmp    0x20(%ebx),%eax
ja     8065270 <fchmod@plt+0x1a2d0>
jb     8065278 <fchmod@plt+0x1a2d8>
cmp    0x1c(%ebx),%edx
lea    0x0(%esi),%esi
jbe    8065278 <fchmod@plt+0x1a2d8>
mov    0x8(%ebx),%eax
cmpb   $0x0,(%eax)
je     8065278 <fchmod@plt+0x1a2d8>
lea    0x0(%esi),%esi
call   8063e90 <fchmod@plt+0x18ef0>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %eax,%esi
mov    0x20(%ebx),%eax
or     0x1c(%ebx),%eax
movl   $0x5,0x8(%esp)
jne    80653b0 <fchmod@plt+0x1a410>
movl   $0x8088bc4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
mov    (%ebx),%ebx
movl   $0x2,0x809e084
00
test   %ebx,%ebx
jne    8065282 <fchmod@plt+0x1a2e2>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e468
movl   $0x0,0x809dcf4
00
movl   $0x0,0x809dcf0
00
jne    806539a <fchmod@plt+0x1a3fa>
jmp    80653a8 <fchmod@plt+0x1a408>
nop
mov    0xc(%eax),%ebx
test   %ebx,%ebx
je     80653a8 <fchmod@plt+0x1a408>
mov    %ebx,%eax
call   8063e90 <fchmod@plt+0x18ef0>
mov    %ebx,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x8088bc4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
mov    $0x1,%eax
call   80640f0 <fchmod@plt+0x19150>
test   %eax,%eax
jne    8065340 <fchmod@plt+0x1a3a0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movl   $0x8088ce0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
jmp    80652ea <fchmod@plt+0x1a34a>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809e4c4,%ebx
mov    0x809dcf4,%eax
mov    0x809e4c0,%esi
mov    %ebx,%edx
or     %esi,%edx
test   %eax,%eax
jne    80653fe <fchmod@plt+0x1a45e>
jmp    8065407 <fchmod@plt+0x1a467>
mov    0x1c(%eax),%ecx
or     0x20(%eax),%ecx
jne    8065407 <fchmod@plt+0x1a467>
mov    (%eax),%eax
test   %eax,%eax
je     8065420 <fchmod@plt+0x1a480>
test   %edx,%edx
je     80653f0 <fchmod@plt+0x1a450>
cmp    %ebx,0x20(%eax)
jbe    8065410 <fchmod@plt+0x1a470>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
jb     80653f8 <fchmod@plt+0x1a458>
cmp    %esi,0x1c(%eax)
jb     80653f8 <fchmod@plt+0x1a458>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x809e46c,%eax
test   %eax,%eax
jne    80654a8 <fchmod@plt+0x1a508>
movl   $0x1,(%esp)
call   806c040 <fchmod@plt+0x210a0>
mov    0x809dcf4,%ebx
test   %ebx,%ebx
jne    806544e <fchmod@plt+0x1a4ae>
jmp    806545a <fchmod@plt+0x1a4ba>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     806545a <fchmod@plt+0x1a4ba>
mov    0x8(%ebx),%eax
call   8063e90 <fchmod@plt+0x18ef0>
test   %eax,%eax
je     8065448 <fchmod@plt+0x1a4a8>
cmpb   $0x0,0x809e468
movl   $0x0,0x809dcf4
00
movl   $0x0,0x809dcf0
00
jne    8065494 <fchmod@plt+0x1a4f4>
jmp    8065407 <fchmod@plt+0x1a467>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%eax
test   %eax,%eax
je     8065407 <fchmod@plt+0x1a467>
call   8063e90 <fchmod@plt+0x18ef0>
test   %eax,%eax
jne    8065407 <fchmod@plt+0x1a467>
mov    $0x1,%eax
call   80640f0 <fchmod@plt+0x19150>
test   %eax,%eax
jne    8065480 <fchmod@plt+0x1a4e0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x8088bdd,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8065429 <fchmod@plt+0x1a489>
jmp    80654f0 <fchmod@plt+0x1a550>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x12c,%esp
call   8064c20 <fchmod@plt+0x19c80>
mov    0x809dcf4,%eax
test   %eax,%eax
je     8065859 <fchmod@plt+0x1a8b9>
mov    0x809e4f0,%eax
test   %eax,%eax
je     806553c <fchmod@plt+0x1a59c>
call   80632c0 <fchmod@plt+0x18320>
test   %eax,%eax
je     8065537 <fchmod@plt+0x1a597>
cmp    $0x1,%eax
jne    8065810 <fchmod@plt+0x1a870>
mov    0x809dcf4,%eax
mov    0x18(%eax),%ebp
test   %ebp,%ebp
je     8065930 <fchmod@plt+0x1a990>
call   805db90 <fchmod@plt+0x12bf0>
mov    0x809dcf4,%ebx
test   %ebx,%ebx
je     8065850 <fchmod@plt+0x1a8b0>
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebx),%eax
or     0x1c(%ebx),%eax
jne    8065563 <fchmod@plt+0x1a5c3>
mov    0x24(%ebx),%edi
test   %edi,%edi
je     8065780 <fchmod@plt+0x1a7e0>
mov    (%ebx),%ebx
add    $0x1,%esi
test   %ebx,%ebx
jne    8065550 <fchmod@plt+0x1a5b0>
mov    0x809dcf4,%eax
mov    %esi,%edx
mov    $0x8063d60,%ecx
call   8063c40 <fchmod@plt+0x18ca0>
xor    %ebx,%ebx
test   %eax,%eax
mov    %eax,%edx
jne    806558c <fchmod@plt+0x1a5ec>
jmp    8065595 <fchmod@plt+0x1a5f5>
nop
mov    %edx,%ebx
mov    %ecx,%edx
mov    (%edx),%ecx
mov    %ebx,0x4(%edx)
test   %ecx,%ecx
jne    8065588 <fchmod@plt+0x1a5e8>
movl   $0x0,0x10(%esp)
xor    %ebp,%ebp
movl   $0x8063d30,0xc(%esp)
movl   $0x8063f50,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x809dcf4
call   807a840 <argp_parse+0x2900>
mov    0x809dcf4,%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
mov    %eax,0x18(%esp)
jne    8065644 <fchmod@plt+0x1a6a4>
jmp    8065690 <fchmod@plt+0x1a6f0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807a5f0 <argp_parse+0x26b0>
test   %eax,%eax
mov    %eax,%esi
je     806565f <fchmod@plt+0x1a6bf>
mov    0x28(%ebx),%ecx
test   %ecx,%ecx
je     8065710 <fchmod@plt+0x1a770>
mov    0x2c(%ebx),%eax
test   %eax,%eax
je     806561b <fchmod@plt+0x1a67b>
mov    0xc(%esi),%ecx
mov    0x8(%esi),%edx
call   8064050 <fchmod@plt+0x190b0>
mov    0x4(%ebx),%eax
mov    (%ebx),%edx
test   %eax,%eax
je     8065770 <fchmod@plt+0x1a7d0>
mov    %edx,(%eax)
mov    (%ebx),%edx
test   %edx,%edx
je     8065760 <fchmod@plt+0x1a7c0>
mov    %eax,0x4(%edx)
mov    %ebx,%eax
call   8063e20 <fchmod@plt+0x18e80>
test   %edi,%edi
je     8065690 <fchmod@plt+0x1a6f0>
mov    %edi,%ebx
mov    0x8(%ebx),%eax
mov    (%ebx),%edi
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   80625d0 <fchmod@plt+0x17630>
test   %ebp,%ebp
mov    %eax,0x34(%ebx)
jne    80655e8 <fchmod@plt+0x1a648>
mov    0x18(%esp),%eax
movl   $0x0,0x1c(%ebx)
movl   $0x0,0x20(%ebx)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807ae50 <argp_parse+0x2f10>
test   %eax,%eax
je     806591c <fchmod@plt+0x1a97c>
addl   $0x1,0x1c(%esp)
test   %edi,%edi
mov    %ebx,%ebp
jne    8065642 <fchmod@plt+0x1a6a2>
mov    0x18(%esp),%eax
mov    %ebp,0x809dcf0
mov    %eax,(%esp)
call   807aa10 <argp_parse+0x2ad0>
mov    0x1c(%esp),%edx
mov    $0x8063f60,%ecx
mov    0x809dcf4,%eax
call   8063c40 <fchmod@plt+0x18ca0>
test   %eax,%eax
je     8065921 <fchmod@plt+0x1a981>
mov    %eax,%edx
xor    %ebx,%ebx
jmp    80656cc <fchmod@plt+0x1a72c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ebx
mov    %ecx,%edx
mov    (%edx),%ecx
mov    %ebx,0x4(%edx)
test   %ecx,%ecx
jne    80656c8 <fchmod@plt+0x1a728>
mov    0x809e4f0,%edx
mov    %eax,0x809dcf4
test   %edx,%edx
jne    80656ed <fchmod@plt+0x1a74d>
jmp    8065700 <fchmod@plt+0x1a760>
xchg   %ax,%ax
add    $0x38,%eax
je     8065700 <fchmod@plt+0x1a760>
mov    0x8(%eax),%edx
cmpb   $0x0,(%edx)
je     80656e8 <fchmod@plt+0x1a748>
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   805d7a0 <fchmod@plt+0x12800>
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%eax),%eax
test   %eax,%eax
je     8065722 <fchmod@plt+0x1a782>
mov    0xc(%ebx),%ecx
mov    0x8(%ebx),%edx
call   8064050 <fchmod@plt+0x190b0>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807ae90 <argp_parse+0x2f50>
mov    0x4(%esi),%eax
mov    (%esi),%edx
test   %eax,%eax
je     8065800 <fchmod@plt+0x1a860>
mov    %edx,(%eax)
mov    (%esi),%edx
test   %edx,%edx
je     80657f0 <fchmod@plt+0x1a850>
mov    %eax,0x4(%edx)
mov    %esi,%eax
call   8063e20 <fchmod@plt+0x18e80>
subl   $0x1,0x1c(%esp)
jmp    806565f <fchmod@plt+0x1a6bf>
nop
mov    %eax,0x809dcf0
jmp    8065637 <fchmod@plt+0x1a697>
lea    0x0(%esi),%esi
mov    %edx,0x809dcf4
jmp    806562c <fchmod@plt+0x1a68c>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x10,0x13(%ebx)
jne    8065563 <fchmod@plt+0x1a5c3>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x8(%ebx),%eax
cmpb   $0x0,(%eax)
je     8065563 <fchmod@plt+0x1a5c3>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bdf0 <fchmod@plt+0x20e50>
lea    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
jne    8065882 <fchmod@plt+0x1a8e2>
mov    0x68(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8065892 <fchmod@plt+0x1a8f2>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
jmp    8065563 <fchmod@plt+0x1a5c3>
lea    0x0(%esi),%esi
mov    %eax,0x809dcf0
jmp    806574e <fchmod@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    %edx,0x809dcf4
jmp    8065743 <fchmod@plt+0x1a7a3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8088d5c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
xor    %eax,%eax
xor    %esi,%esi
jmp    8065571 <fchmod@plt+0x1a5d1>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80894f0,(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
jmp    806550c <fchmod@plt+0x1a56c>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8063530 <fchmod@plt+0x18590>
jmp    8065563 <fchmod@plt+0x1a5c3>
mov    0x809e498,%eax
or     $0x10000,%eax
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a4f0 <__openat64_2@plt>
test   %eax,%eax
js     80658eb <fchmod@plt+0x1a94b>
lea    0x58(%esp),%edi
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x11c(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
je     80658fb <fchmod@plt+0x1a95b>
call   8063530 <fchmod@plt+0x18590>
jmp    80657dc <fchmod@plt+0x1a83c>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8063460 <fchmod@plt+0x184c0>
jmp    80657dc <fchmod@plt+0x1a83c>
call   8081880 <argp_parse+0x9940>
mov    %ebx,%edx
addl   $0x1,0x1c(%ebx)
adcl   $0x0,0x20(%ebx)
mov    %eax,0x2c(%esp)
lea    0x2c(%esp),%eax
call   8064d80 <fchmod@plt+0x19de0>
jmp    80657dc <fchmod@plt+0x1a83c>
call   8056010 <fchmod@plt+0xb070>
movl   $0x0,0x809dcf4
00
jmp    8065700 <fchmod@plt+0x1a760>
movl   $0x5,0x8(%esp)
movl   $0x8088d10,0x4(%esp)
jmp    8065820 <fchmod@plt+0x1a880>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
jmp    806598e <fchmod@plt+0x1a9ee>
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e468
je     80659a0 <fchmod@plt+0x1aa00>
mov    0x809dcf4,%edx
test   %edx,%edx
je     80659a0 <fchmod@plt+0x1aa00>
mov    0x20(%edx),%eax
or     0x1c(%edx),%eax
je     80659a0 <fchmod@plt+0x1aa00>
call   8064c20 <fchmod@plt+0x19c80>
mov    0x809dcf4,%edx
mov    0x20(%edx),%eax
or     0x1c(%edx),%eax
jne    80659a0 <fchmod@plt+0x1aa00>
mov    %ebx,%eax
call   8064000 <fchmod@plt+0x19060>
test   %eax,%eax
je     8065960 <fchmod@plt+0x1a9c0>
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
add    $0x8,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809e2cc,%eax
test   %eax,%eax
je     8065a08 <fchmod@plt+0x1aa68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%eax),%edx
or     0x1c(%eax),%edx
jne    80659d0 <fchmod@plt+0x1aa30>
mov    0x8(%eax),%edx
cmpb   $0x0,(%edx)
jne    80659e0 <fchmod@plt+0x1aa40>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x809e2cc
jne    80659c0 <fchmod@plt+0x1aa20>
xor    %eax,%eax
ret
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x1,0x1c(%eax)
movl   $0x0,0x20(%eax)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x809e2cc,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x809dcf4,%eax
test   %eax,%eax
mov    %eax,0x809e2cc
jne    80659c0 <fchmod@plt+0x1aa20>
jmp    80659db <fchmod@plt+0x1aa3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809dcf4,%eax
movl   $0x0,0x809e2cc
00
test   %eax,%eax
je     8065a4c <fchmod@plt+0x1aaac>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x1c(%eax)
movl   $0x0,0x20(%eax)
mov    (%eax),%eax
test   %eax,%eax
jne    8065a38 <fchmod@plt+0x1aa98>
repz ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
xor    %ecx,%ecx
test   %ebx,%ebx
lea    0x1(%eax),%ebp
je     8065a88 <fchmod@plt+0x1aae8>
mov    0x30(%esp),%eax
xor    %ecx,%ecx
cmpb   $0x2f,-0x1(%eax,%ebx,1)
setne  %cl
lea    (%ecx,%ebx,1),%edi
lea    (%edi,%ebp,1),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,0x8(%esp)
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x34(%esp),%eax
lea    (%esi,%edi,1),%ecx
mov    %ebp,0x8(%esp)
mov    %ecx,(%esp)
movb   $0x2f,(%esi,%ebx,1)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8065ae0 <fchmod@plt+0x1ab40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x809e2f0,%eax
mov    %eax,(%esp)
call   8079990 <argp_parse+0x1a50>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    0x8(%esp),%ebx
mov    0xc(%esp),%ecx
movzbl (%ebx),%edx
mov    %ebx,%eax
cmp    $0x2f,%dl
jne    8065b33 <fchmod@plt+0x1ab93>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8065b18 <fchmod@plt+0x1ab78>
test   %dl,%dl
je     8065b37 <fchmod@plt+0x1ab97>
nop
add    $0x1,%eax
cmp    $0x2f,%dl
je     8065b40 <fchmod@plt+0x1aba0>
movzbl (%eax),%edx
test   %dl,%dl
jne    8065b28 <fchmod@plt+0x1ab88>
mov    $0xffffffff,%eax
pop    %ebx
ret
xchg   %ax,%ax
sub    $0x1,%ecx
jne    8065b4b <fchmod@plt+0x1abab>
jmp    8065b55 <fchmod@plt+0x1abb5>
nop
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8065b48 <fchmod@plt+0x1aba8>
jmp    8065b33 <fchmod@plt+0x1ab93>
sub    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    0x8(%esp),%edx
movzbl (%edx),%ecx
cmp    $0x2e,%cl
je     8065b90 <fchmod@plt+0x1abf0>
mov    %ecx,%eax
jmp    8065b7b <fchmod@plt+0x1abdb>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx),%eax
add    $0x1,%edx
cmp    $0x2f,%al
je     8065b65 <fchmod@plt+0x1abc5>
test   %al,%al
jne    8065b78 <fchmod@plt+0x1abd8>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
cmpb   $0x2e,0x1(%edx)
jne    8065b6d <fchmod@plt+0x1abcd>
movzbl 0x2(%edx),%eax
test   %al,%al
sete   %bl
cmp    $0x2f,%al
sete   %al
or     %bl,%al
je     8065b6d <fchmod@plt+0x1abcd>
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x809e2b8,%eax
cmpb   $0x53,0x9c(%eax)
sete   %al
ret
mov    0x809e2b8,%eax
cmpb   $0x53,0x9c(%eax)
sete   %al
ret
mov    0x4(%esp),%eax
mov    0x18(%eax),%edx
mov    $0x1,%eax
mov    0xb8(%edx),%ecx
test   %ecx,%ecx
jne    8065bf1 <fchmod@plt+0x1ac51>
mov    0xb0(%edx),%eax
test   %eax,%eax
setne  %al
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809e2b8,%eax
movl   $0xc,0x4(%esp)
add    $0x1c4,%eax
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    0x20(%esp),%ecx
mov    0x18(%ecx),%ecx
mov    0x58(%ecx),%ebx
mov    0x5c(%ecx),%esi
mov    %ebx,0xa4(%ecx)
xor    %ebx,%ebx
test   %edx,%edx
cmovs  %ebx,%eax
cmovns %edx,%ebx
mov    %eax,0x58(%ecx)
mov    %edx,%eax
mov    %esi,0xa8(%ecx)
not    %eax
mov    %ebx,0x5c(%ecx)
add    $0x14,%esp
shr    $0x1f,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809e2b8,%eax
movl   $0xc,0x4(%esp)
add    $0x1e3,%eax
mov    %eax,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    0x20(%esp),%ecx
mov    0x18(%ecx),%ecx
mov    0x58(%ecx),%ebx
mov    0x5c(%ecx),%esi
mov    %ebx,0xa4(%ecx)
xor    %ebx,%ebx
test   %edx,%edx
cmovs  %ebx,%eax
cmovns %edx,%ebx
mov    %eax,0x58(%ecx)
mov    %edx,%eax
mov    %esi,0xa8(%ecx)
not    %eax
mov    %ebx,0x5c(%ecx)
add    $0x14,%esp
shr    $0x1f,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    0xb8(%ebx),%edi
mov    0xbc(%ebx),%edx
mov    0xc0(%eax),%eax
cmp    %edi,%edx
je     8065d10 <fchmod@plt+0x1ad70>
mov    %edi,%edx
add    $0x1,%edi
shl    $0x4,%edx
add    %edx,%eax
mov    (%esi),%edx
mov    %edx,(%eax)
mov    0x4(%esi),%edx
mov    %edx,0x4(%eax)
mov    0x8(%esi),%edx
mov    %edx,0x8(%eax)
mov    0xc(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edi,0xb8(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     8065d48 <fchmod@plt+0x1ada8>
cmp    $0xaaaaaa9,%edx
ja     8065d58 <fchmod@plt+0x1adb8>
lea    0x1(%edx),%ecx
shr    %ecx
add    %ecx,%edx
mov    %edx,%ecx
shl    $0x4,%ecx
mov    %edx,0xbc(%ebx)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,0xc0(%ebx)
jmp    8065ce0 <fchmod@plt+0x1ad40>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    8065d23 <fchmod@plt+0x1ad83>
mov    $0x40,%ecx
mov    $0x4,%edx
jmp    8065d28 <fchmod@plt+0x1ad88>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edx
push   %ebx
mov    %eax,%edi
sub    $0x14,%esp
test   $0x1,%al
mov    $0x24,%ebx
jne    8065e20 <fchmod@plt+0x1ae80>
test   $0x2,%edi
jne    8065e38 <fchmod@plt+0x1ae98>
mov    %ebx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%bl
rep stos %eax,%es:(%edi)
je     8065d99 <fchmod@plt+0x1adf9>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%ebx
je     8065da1 <fchmod@plt+0x1ae01>
movb   $0x0,(%edi)
mov    0x809e2ac,%eax
test   %eax,%eax
cmove  0x809e4e4,%eax
cmp    $0x4,%eax
je     8065e10 <fchmod@plt+0x1ae70>
jbe    8065e00 <fchmod@plt+0x1ae60>
cmp    $0x5,%eax
jne    8065dd8 <fchmod@plt+0x1ae38>
movl   $0x8088ea0,0x1c(%edx)
mov    $0x8088ea0,%eax
mov    (%eax),%eax
test   %eax,%eax
je     8065def <fchmod@plt+0x1ae4f>
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %edi
ret
cmp    $0x6,%eax
jne    8065e05 <fchmod@plt+0x1ae65>
mov    $0x8088ee0,%eax
movl   $0x8088ee0,0x1c(%edx)
mov    (%eax),%eax
test   %eax,%eax
jne    8065dcd <fchmod@plt+0x1ae2d>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    $0x2,%eax
je     8065ddd <fchmod@plt+0x1ae3d>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x8088e60,0x1c(%edx)
mov    $0x8088e60,%eax
jmp    8065dc7 <fchmod@plt+0x1ae27>
xchg   %ax,%ax
lea    0x1(%eax),%edi
mov    $0x23,%bl
test   $0x2,%edi
movb   $0x0,(%eax)
je     8065d82 <fchmod@plt+0x1ade2>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%ebx
jmp    8065d82 <fchmod@plt+0x1ade2>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%esi
mov    %eax,0x1c(%esp)
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebx
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a530 <__strtoull_internal@plt>
cmp    %esi,%edx
jbe    8065ea8 <fchmod@plt+0x1af08>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,%ecx
jae    8065ed0 <fchmod@plt+0x1af30>
xor    %eax,%eax
cmpl   $0x22,(%ebx)
je     8065e9a <fchmod@plt+0x1aefa>
mov    0x2c(%esp),%ebx
cmpb   $0x0,(%ebx)
jne    8065e9a <fchmod@plt+0x1aefa>
mov    %ecx,(%edi)
mov    $0x1,%eax
mov    %edx,0x4(%edi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    0x1c(%esp),%eax
jbe    8065eac <fchmod@plt+0x1af0c>
xor    %eax,%eax
jmp    8065e9a <fchmod@plt+0x1aefa>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
movzbl 0x4(%eax),%ebp
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
test   %al,%al
je     8065f48 <fchmod@plt+0x1afa8>
mov    0x1c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804ada0 <lseek64@plt>
shr    $0x1f,%edx
test   %dl,%dl
mov    $0x1,%eax
je     8065f3e <fchmod@plt+0x1af9e>
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    0x18(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8063500 <fchmod@plt+0x18560>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
cmp    %edx,%ecx
jge    8065f70 <fchmod@plt+0x1afd0>
call   804aaf0 <__errno_location@plt>
mov    $0x1,%ebp
movl   $0x16,(%eax)
mov    %ebp,%edx
jmp    8065f1a <fchmod@plt+0x1af7a>
lea    0x0(%esi),%esi
jle    8065fe8 <fchmod@plt+0x1b048>
lea    0x0(%esi),%esi
mov    %esi,%ecx
mov    %edi,%ebx
sub    %eax,%ecx
sbb    %edx,%ebx
mov    %ecx,%eax
cmp    $0x0,%ebx
jl     8065f8e <fchmod@plt+0x1afee>
jle    8065fd8 <fchmod@plt+0x1b038>
mov    $0x200,%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
movl   $0x809dd20,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a9d0 <write@plt>
cmp    $0x0,%eax
jle    8066000 <fchmod@plt+0x1b060>
mov    0x1c(%esp),%ebx
cltd
add    0x8(%ebx),%eax
adc    0xc(%ebx),%edx
mov    %eax,0x8(%ebx)
cmp    %edx,%edi
mov    %edx,0xc(%ebx)
jl     8065f66 <fchmod@plt+0x1afc6>
jg     8065f78 <fchmod@plt+0x1afd8>
cmp    %eax,%esi
ja     8065f78 <fchmod@plt+0x1afd8>
mov    %ebp,%edx
lea    0x0(%esi),%esi
jmp    8065f1a <fchmod@plt+0x1af7a>
lea    0x0(%esi),%esi
cmp    $0x200,%ecx
jbe    8065f8e <fchmod@plt+0x1afee>
jmp    8065f89 <fchmod@plt+0x1afe9>
lea    0x0(%esi),%esi
cmp    %eax,%esi
jb     8065f56 <fchmod@plt+0x1afb6>
cmp    %edx,%ecx
jg     8065f78 <fchmod@plt+0x1afd8>
jge    8065fc4 <fchmod@plt+0x1b024>
mov    %ebp,%edx
jmp    8065f1a <fchmod@plt+0x1af7a>
lea    0x0(%esi),%esi
mov    $0x1,%ebp
jne    8065f66 <fchmod@plt+0x1afc6>
call   804aaf0 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    8065f66 <fchmod@plt+0x1afc6>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
mov    0x54(%esp),%ebx
mov    0x18(%ebp),%eax
shl    $0x4,%ebx
mov    0xc0(%eax),%eax
mov    (%eax,%ebx,1),%edx
mov    0x4(%eax,%ebx,1),%ecx
mov    %ebp,%eax
call   8065ee0 <fchmod@plt+0x1af40>
test   %al,%al
mov    %al,0x2f(%esp)
je     8066080 <fchmod@plt+0x1b0e0>
mov    0x18(%ebp),%eax
mov    0xc0(%eax),%eax
mov    0xc(%eax,%ebx,1),%edx
mov    0x8(%eax,%ebx,1),%eax
mov    %edx,%esi
or     %eax,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    8066090 <fchmod@plt+0x1b0f0>
movzbl 0x4(%ebp),%ebx
test   %bl,%bl
jne    80661f0 <fchmod@plt+0x1b250>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0x0,0x1c(%esp)
jle    8066220 <fchmod@plt+0x1b280>
mov    %ebp,%esi
lea    0x0(%esi),%esi
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmp    $0x0,%edx
mov    %eax,%ecx
mov    %eax,0x28(%esp)
jl     80660c1 <fchmod@plt+0x1b121>
jle    8066180 <fchmod@plt+0x1b1e0>
movl   $0x200,0x28(%esp)
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%ebx
je     80661a0 <fchmod@plt+0x1b200>
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x28(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80631e0 <fchmod@plt+0x18240>
mov    0x18(%esi),%ecx
xor    %edx,%edx
mov    %edx,%ebp
mov    %edx,0x24(%esp)
mov    0xa8(%ecx),%ebx
mov    0xa4(%ecx),%ecx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
sub    %eax,0x18(%esp)
sbb    %edx,0x1c(%esp)
mov    %eax,%edi
add    0x10(%esi),%edi
adc    0x14(%esi),%ebp
mov    %eax,0x20(%esp)
sub    %edi,%ecx
sbb    %ebp,%ebx
mov    %edi,0x10(%esi)
mov    %ebp,0x14(%esi)
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    %eax,0x8(%esi)
adc    %edx,0xc(%esi)
mov    0x28(%esp),%edx
cmp    %edx,0x14(%esp)
jne    8066238 <fchmod@plt+0x1b298>
cmpl   $0x0,0x1c(%esp)
jl     8066080 <fchmod@plt+0x1b0e0>
jg     80660a0 <fchmod@plt+0x1b100>
cmpl   $0x0,0x18(%esp)
ja     80660a0 <fchmod@plt+0x1b100>
movzbl 0x2f(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x200,%ecx
ja     80660b9 <fchmod@plt+0x1b119>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%ebx
jne    80660d0 <fchmod@plt+0x1b130>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movb   $0x0,0x2f(%esp)
movzbl 0x2f(%esp),%eax
movl   $0x2,0x809e084
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80688b0 <fchmod@plt+0x1d910>
test   %eax,%eax
je     8066080 <fchmod@plt+0x1b0e0>
mov    0x18(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806fba0 <fchmod@plt+0x24c00>
mov    %bl,0x2f(%esp)
jmp    8066080 <fchmod@plt+0x1b0e0>
lea    0x0(%esi,%eiz,1),%esi
jl     8066080 <fchmod@plt+0x1b0e0>
cmpl   $0x0,0x18(%esp)
ja     806609b <fchmod@plt+0x1b0fb>
jmp    8066080 <fchmod@plt+0x1b0e0>
xchg   %ax,%ax
mov    0x14(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806fc40 <fchmod@plt+0x24ca0>
movb   $0x0,0x2f(%esp)
jmp    8066080 <fchmod@plt+0x1b0e0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
shll   $0x4,0x44(%esp)
mov    0x18(%esi),%eax
mov    0xc0(%eax),%eax
add    0x44(%esp),%eax
mov    (%eax),%edx
mov    0x4(%eax),%ecx
mov    0x8(%eax),%edi
mov    0xc(%eax),%ebp
mov    %esi,%eax
call   8065ee0 <fchmod@plt+0x1af40>
test   %al,%al
mov    %al,0x1f(%esp)
je     806632e <fchmod@plt+0x1b38e>
cmp    $0x0,%ebp
jle    80663a0 <fchmod@plt+0x1b400>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x0,%ebp
mov    %edi,%ebx
jl     80662bb <fchmod@plt+0x1b31b>
nop
jle    8066340 <fchmod@plt+0x1b3a0>
mov    $0x200,%ebx
call   804d410 <fchmod@plt+0x2470>
mov    %ebx,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0xffffffff,%eax
mov    %eax,%ecx
je     8066358 <fchmod@plt+0x1b3b8>
mov    0x14(%esp),%edx
mov    $0x200,%eax
xor    %ebx,%ebx
sub    %ecx,%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
add    %ecx,%edx
mov    %edx,(%esp)
mov    %ecx,0x18(%esp)
call   804aa80 <memset@plt>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
sub    %ecx,%edi
sbb    %ebx,%ebp
add    %ecx,0x10(%esi)
adc    %ebx,0x14(%esi)
mov    %edx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    $0x0,%ebp
jl     806632e <fchmod@plt+0x1b38e>
jg     80662a8 <fchmod@plt+0x1b308>
cmp    $0x0,%edi
ja     80662a8 <fchmod@plt+0x1b308>
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x200,%edi
jbe    80662bb <fchmod@plt+0x1b31b>
jmp    80662b6 <fchmod@plt+0x1b316>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esi),%ecx
mov    0xc0(%ecx),%esi
add    0x44(%esp),%esi
mov    %ebx,0xc(%esp)
mov    (%esi),%eax
add    0x8(%esi),%eax
mov    0x4(%esi),%edx
adc    0xc(%esi),%edx
sub    %edi,%eax
mov    %eax,0x4(%esp)
sbb    %ebp,%edx
mov    %edx,0x8(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8063480 <fchmod@plt+0x184e0>
movb   $0x0,0x1f(%esp)
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jge    8066325 <fchmod@plt+0x1b385>
jmp    806632e <fchmod@plt+0x1b38e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x25c,%esp
mov    0x270(%esp),%eax
mov    0x274(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x24c(%esp)
xor    %ecx,%ecx
mov    %edi,%ecx
mov    %eax,0x18(%esp)
mov    %ebx,%eax
mov    %edx,0x1c(%esp)
mov    %esi,%edx
call   8065ee0 <fchmod@plt+0x1af40>
test   %al,%al
mov    %al,0x2f(%esp)
je     8066471 <fchmod@plt+0x1b4d1>
cmp    0x1c(%esp),%edi
jl     8066407 <fchmod@plt+0x1b467>
jg     8066471 <fchmod@plt+0x1b4d1>
cmp    0x18(%esp),%esi
jae    8066471 <fchmod@plt+0x1b4d1>
lea    0x4c(%esp),%ebp
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
sub    %esi,%edx
sbb    %edi,%ecx
cmp    $0x0,%ecx
jl     8066429 <fchmod@plt+0x1b489>
jle    8066500 <fchmod@plt+0x1b560>
mov    $0x200,%edx
xor    %ecx,%ecx
mov    (%ebx),%eax
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
mov    %ecx,0x24(%esp)
call   8080b00 <argp_parse+0x8bc0>
mov    0x20(%esp),%edx
cmp    $0xffffffff,%eax
je     8066515 <fchmod@plt+0x1b575>
lea    0x0(%ebp,%eax,1),%ecx
mov    %ebp,%edx
jmp    8066461 <fchmod@plt+0x1b4c1>
add    $0x1,%edx
cmpb   $0x0,-0x1(%edx)
jne    8066498 <fchmod@plt+0x1b4f8>
cmp    %ecx,%edx
jne    8066458 <fchmod@plt+0x1b4b8>
xor    %edx,%edx
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,0x1c(%esp)
jge    80664e8 <fchmod@plt+0x1b548>
mov    0x24c(%esp),%edi
xor    %gs:0x14,%edi
movzbl 0x2f(%esp),%eax
jne    8066530 <fchmod@plt+0x1b590>
add    $0x25c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x37(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
call   807c110 <argp_parse+0x41d0>
movl   $0x5,0x8(%esp)
movl   $0x8088dc0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8050440 <fchmod@plt+0x54a0>
movb   $0x0,0x2f(%esp)
jmp    8066471 <fchmod@plt+0x1b4d1>
lea    0x0(%esi,%eiz,1),%esi
jg     806640b <fchmod@plt+0x1b46b>
cmp    %esi,0x18(%esp)
jbe    8066471 <fchmod@plt+0x1b4d1>
jmp    806640b <fchmod@plt+0x1b46b>
lea    0x0(%esi),%esi
cmp    $0x200,%edx
jbe    8066429 <fchmod@plt+0x1b489>
lea    0x0(%esi,%eiz,1),%esi
jmp    8066422 <fchmod@plt+0x1b482>
mov    0x18(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8063480 <fchmod@plt+0x184e0>
jmp    80664dd <fchmod@plt+0x1b53d>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x18(%ebp),%eax
mov    %edx,0x18(%esp)
shll   $0x4,0x18(%esp)
mov    0x18(%esp),%edi
mov    0xc0(%eax),%eax
mov    (%eax,%edi,1),%edx
mov    0x4(%eax,%edi,1),%ecx
mov    %ebp,%eax
call   8065ee0 <fchmod@plt+0x1af40>
test   %al,%al
mov    %al,0x1f(%esp)
jne    80665b0 <fchmod@plt+0x1b610>
mov    0x22c(%esp),%edi
xor    %gs:0x14,%edi
movzbl 0x1f(%esp),%eax
jne    80667a5 <fchmod@plt+0x1b805>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebp),%eax
mov    0x18(%esp),%edi
mov    0xc0(%eax),%edx
mov    0x8(%edx,%edi,1),%esi
mov    0xc(%edx,%edi,1),%edi
mov    0xa8(%eax),%edx
mov    0xa4(%eax),%eax
sub    0x10(%ebp),%eax
sbb    0x14(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
cmp    $0x0,%edi
jle    8066790 <fchmod@plt+0x1b7f0>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x0,%edi
mov    %esi,0x10(%esp)
jl     8066607 <fchmod@plt+0x1b667>
jle    80666c8 <fchmod@plt+0x1b728>
movl   $0x200,0x10(%esp)
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     80666e0 <fchmod@plt+0x1b740>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0xffffffff,%eax
je     8066728 <fchmod@plt+0x1b788>
xor    %edx,%edx
mov    %eax,%ecx
mov    %edx,%ebx
add    0x10(%ebp),%ecx
adc    0x14(%ebp),%ebx
sub    %eax,%esi
mov    0x18(%ebp),%eax
sbb    %edx,%edi
mov    %ecx,0x10(%ebp)
mov    %ebx,0x14(%ebp)
mov    0xa8(%eax),%edx
mov    0xa4(%eax),%eax
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804c7a0 <fchmod@plt+0x1800>
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8066760 <fchmod@plt+0x1b7c0>
cmp    $0x0,%edi
jl     8066587 <fchmod@plt+0x1b5e7>
lea    0x0(%esi),%esi
jg     80665f0 <fchmod@plt+0x1b650>
cmp    $0x0,%esi
jbe    8066587 <fchmod@plt+0x1b5e7>
nop
jmp    80665f0 <fchmod@plt+0x1b650>
lea    0x0(%esi),%esi
cmp    $0x200,%esi
xchg   %ax,%ax
jbe    8066607 <fchmod@plt+0x1b667>
jmp    80665ff <fchmod@plt+0x1b65f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movb   $0x0,0x1f(%esp)
jmp    8066587 <fchmod@plt+0x1b5e7>
mov    0x18(%ebp),%ecx
mov    0x10(%esp),%eax
mov    0x18(%esp),%ebx
add    0xc0(%ecx),%ebx
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
add    0x8(%ebx),%eax
mov    0x4(%ebx),%edx
adc    0xc(%ebx),%edx
sub    %esi,%eax
mov    %eax,0x4(%esp)
sbb    %edi,%edx
mov    %edx,0x8(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8063480 <fchmod@plt+0x184e0>
jmp    806671e <fchmod@plt+0x1b77e>
movl   $0x5,0x8(%esp)
movl   $0x8086c8e,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x4(%esp)
mov    0x18(%ebp),%eax
mov    %eax,(%esp)
call   8050440 <fchmod@plt+0x54a0>
jmp    806671e <fchmod@plt+0x1b77e>
lea    0x0(%esi),%esi
jge    80666b6 <fchmod@plt+0x1b716>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8066587 <fchmod@plt+0x1b5e7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    $0x2,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
add    $0xc,%ebx
movl   $0xc,0x4(%esp)
mov    %edx,(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    %ebx,(%esp)
movl   $0xc,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   8060610 <fchmod@plt+0x15670>
mov    0x14(%esp),%ebx
mov    0x10(%esp),%ecx
test   %ebx,%ebx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
js     8066858 <fchmod@plt+0x1b8b8>
test   %edx,%edx
js     8066858 <fchmod@plt+0x1b8b8>
mov    $0xffffffff,%esi
mov    $0x7fffffff,%edi
sub    %eax,%esi
sbb    %edx,%edi
cmp    %edi,%ebx
jg     8066870 <fchmod@plt+0x1b8d0>
jl     806682b <fchmod@plt+0x1b88b>
cmp    %esi,%ecx
ja     8066870 <fchmod@plt+0x1b8d0>
mov    0x0(%ebp),%esi
add    %ecx,%eax
adc    %ebx,%edx
cmp    %edx,0x5c(%esi)
jl     8066870 <fchmod@plt+0x1b8d0>
jle    8066868 <fchmod@plt+0x1b8c8>
mov    0xa8(%esi),%eax
mov    $0x2,%edi
test   %eax,%eax
js     8066858 <fchmod@plt+0x1b8b8>
lea    0x10(%esp),%edx
mov    %esi,%eax
call   8065cc0 <fchmod@plt+0x1ad20>
xor    %di,%di
xchg   %ax,%ax
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %eax,0x58(%esi)
jae    8066839 <fchmod@plt+0x1b899>
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    $0x2,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e2b8,%edi
mov    0x40(%esp),%esi
mov    0x18(%esi),%eax
movl   $0x0,0xb8(%eax)
00
cmpb   $0x0,0x159(%edi)
jne    80668b4 <fchmod@plt+0x1b914>
cmpb   $0x0,0x16e(%edi)
jne    8066985 <fchmod@plt+0x1b9e5>
lea    0x18(%esi),%eax
mov    %eax,0x1c(%esp)
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%edi
je     80669d0 <fchmod@plt+0x1ba30>
mov    %eax,(%esp)
mov    %edi,%ebx
xor    %ebp,%ebp
call   804cc70 <fchmod@plt+0x1cd0>
cmpb   $0x0,0xc(%ebx)
jne    80668f8 <fchmod@plt+0x1b958>
addl   $0x200,0x10(%esi)
adcl   $0x0,0x14(%esi)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %ebx,%edx
add    $0x1,%ebp
call   80667c0 <fchmod@plt+0x1b820>
test   %eax,%eax
sete   %dl
add    $0x18,%ebx
test   %dl,%dl
je     8066917 <fchmod@plt+0x1b977>
cmp    $0x14,%ebp
jbe    80668d6 <fchmod@plt+0x1b936>
addl   $0x200,0x10(%esi)
adcl   $0x0,0x14(%esi)
cmpb   $0x0,0x1f8(%edi)
je     806692f <fchmod@plt+0x1b98f>
test   %dl,%dl
jne    80668bb <fchmod@plt+0x1b91b>
cmp    $0x2,%eax
jne    80668e7 <fchmod@plt+0x1b947>
mov    0x18(%esi),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8088de4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x18(%esi),%eax
mov    $0x4,%ebp
mov    %eax,0x1c(%esp)
lea    0x164(%edi),%ebx
cmpb   $0x0,0xc(%ebx)
je     80668e7 <fchmod@plt+0x1b947>
mov    0x1c(%esp),%eax
mov    %ebx,%edx
call   80667c0 <fchmod@plt+0x1b820>
test   %eax,%eax
jne    806692f <fchmod@plt+0x1b98f>
add    $0x18,%ebx
sub    $0x1,%ebp
jne    8066997 <fchmod@plt+0x1b9f7>
cmpb   $0x0,0x163(%edi)
jne    80668b4 <fchmod@plt+0x1b914>
jmp    80668e7 <fchmod@plt+0x1b947>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x4,%ebx
sub    $0x1c,%esp
mov    0x809e2b8,%esi
mov    0x30(%esp),%eax
lea    0x182(%esi),%ebp
mov    0x18(%eax),%eax
movl   $0x0,0xb8(%eax)
00
mov    0x30(%esp),%eax
lea    0x18(%eax),%edi
cmpb   $0x0,0xc(%ebp)
je     8066a95 <fchmod@plt+0x1baf5>
mov    %ebp,%edx
mov    %edi,%eax
call   80667c0 <fchmod@plt+0x1b820>
test   %eax,%eax
jne    8066ad2 <fchmod@plt+0x1bb32>
add    $0x18,%ebp
sub    $0x1,%ebx
jne    8066a50 <fchmod@plt+0x1bab0>
cmpb   $0x0,0x1e2(%esi)
je     8066a95 <fchmod@plt+0x1baf5>
call   804d410 <fchmod@plt+0x2470>
test   %eax,%eax
mov    %eax,%esi
je     8066b2c <fchmod@plt+0x1bb8c>
mov    %eax,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   804cc70 <fchmod@plt+0x1cd0>
cmpb   $0x0,0xc(%ebx)
jne    8066aa8 <fchmod@plt+0x1bb08>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,%edx
mov    %edi,%eax
call   80667c0 <fchmod@plt+0x1b820>
add    $0x1,%ebp
test   %eax,%eax
sete   %dl
add    $0x18,%ebx
test   %dl,%dl
je     8066ac5 <fchmod@plt+0x1bb25>
cmp    $0x14,%ebp
jbe    8066a8f <fchmod@plt+0x1baef>
cmpb   $0x0,0x1f8(%esi)
je     8066ad2 <fchmod@plt+0x1bb32>
test   %dl,%dl
jne    8066a74 <fchmod@plt+0x1bad4>
cmp    $0x2,%eax
jne    8066a95 <fchmod@plt+0x1baf5>
mov    0x30(%esp),%eax
mov    0x18(%eax),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8088de4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x8086c74,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
movl   $0x2,0x809e084
00
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
movb   $0x1,0x10(%esp)
mov    0x18(%ebp),%eax
mov    0xb0(%eax),%edx
test   %edx,%edx
jne    8066bd0 <fchmod@plt+0x1bc30>
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
movzbl 0x10(%esp),%eax
jne    8066eda <fchmod@plt+0x1bf3a>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x809e2b8,%eax
lea    0x47(%esp),%esi
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
addl   $0x200,0x10(%ebp)
adcl   $0x0,0x14(%ebp)
call   804d410 <fchmod@plt+0x2470>
lea    0x5b(%esp),%edx
mov    %eax,%edi
mov    %eax,0x14(%esp)
add    $0x200,%edi
jmp    8066c1f <fchmod@plt+0x1bc7f>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
movzbl (%eax),%eax
lea    0x1(%esi),%ecx
cmp    $0xa,%al
mov    %al,(%esi)
je     8066c68 <fchmod@plt+0x1bcc8>
cmp    %edx,%ecx
je     8066c90 <fchmod@plt+0x1bcf0>
mov    %ebx,%eax
mov    %ecx,%esi
cmp    %edi,%eax
jne    8066c08 <fchmod@plt+0x1bc68>
mov    0x14(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
addl   $0x200,0x10(%ebp)
adcl   $0x0,0x14(%ebp)
call   804d410 <fchmod@plt+0x2470>
lea    0x1(%esi),%ecx
mov    %eax,%edx
mov    %eax,0x14(%esp)
lea    0x1(%eax),%ebx
movzbl (%eax),%eax
lea    0x200(%edx),%edi
mov    0x10(%esp),%edx
cmp    $0xa,%al
mov    %al,(%esi)
jne    8066c17 <fchmod@plt+0x1bc77>
lea    0x0(%esi),%esi
movb   $0x0,(%esi)
movsbl 0x47(%esp),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
jbe    8066ce8 <fchmod@plt+0x1bd48>
mov    0x18(%ebp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8088e38,0x4(%esp)
jmp    8066ca5 <fchmod@plt+0x1bd05>
nop
mov    0x18(%ebp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8088e08,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
movb   $0x0,0x10(%esp)
jmp    8066bac <fchmod@plt+0x1bc0c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,(%esp)
lea    0x47(%esp),%edx
movl   $0x0,0x4(%esp)
lea    0x28(%esp),%eax
call   8065e50 <fchmod@plt+0x1aeb0>
test   %al,%al
mov    %al,0x10(%esp)
je     8066c78 <fchmod@plt+0x1bcd8>
mov    0x18(%ebp),%esi
mov    0x28(%esp),%eax
mov    %eax,0xbc(%esi)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   8081820 <argp_parse+0x98e0>
mov    %eax,0xc0(%esi)
mov    0x18(%ebp),%eax
movl   $0x0,0xb8(%eax)
00
mov    0xbc(%eax),%eax
test   %eax,%eax
je     8066ec9 <fchmod@plt+0x1bf29>
movl   $0x0,0x18(%esp)
mov    %ebx,%ecx
lea    0x47(%esp),%edx
mov    0x14(%esp),%eax
mov    %edx,%ebx
jmp    8066d88 <fchmod@plt+0x1bde8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%esi
movzbl (%ecx),%ecx
lea    0x1(%ebx),%edx
cmp    $0xa,%cl
mov    %cl,(%ebx)
je     8066db0 <fchmod@plt+0x1be10>
lea    0x5b(%esp),%ebx
cmp    %ebx,%edx
je     8066c90 <fchmod@plt+0x1bcf0>
mov    %esi,%ecx
mov    %edx,%ebx
cmp    %edi,%ecx
jne    8066d68 <fchmod@plt+0x1bdc8>
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
addl   $0x200,0x10(%ebp)
adcl   $0x0,0x14(%ebp)
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%ecx
lea    0x200(%eax),%edi
jmp    8066d68 <fchmod@plt+0x1bdc8>
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movb   $0x0,(%ebx)
movsbl 0x47(%esp),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8066c78 <fchmod@plt+0x1bcd8>
movl   $0xffffffff,(%esp)
lea    0x47(%esp),%edx
movl   $0x7fffffff,0x4(%esp)
lea    0x28(%esp),%eax
call   8065e50 <fchmod@plt+0x1aeb0>
test   %al,%al
je     8066c78 <fchmod@plt+0x1bcd8>
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
mov    %edx,0x38(%esp)
lea    0x47(%esp),%edx
mov    %eax,0x34(%esp)
mov    %edx,%ebx
jmp    8066e27 <fchmod@plt+0x1be87>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%esi),%eax
lea    0x1(%esi),%ecx
lea    0x1(%ebx),%edx
cmp    $0xa,%al
mov    %al,(%ebx)
je     8066e55 <fchmod@plt+0x1beb5>
lea    0x5b(%esp),%eax
cmp    %eax,%edx
je     8066c90 <fchmod@plt+0x1bcf0>
mov    %ecx,%esi
mov    %edx,%ebx
cmp    %edi,%esi
jne    8066e08 <fchmod@plt+0x1be68>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
addl   $0x200,0x10(%ebp)
adcl   $0x0,0x14(%ebp)
call   804d410 <fchmod@plt+0x2470>
mov    %eax,0x14(%esp)
mov    %eax,%esi
lea    0x200(%eax),%edi
jmp    8066e08 <fchmod@plt+0x1be68>
movb   $0x0,(%ebx)
movsbl 0x47(%esp),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8066c78 <fchmod@plt+0x1bcd8>
movl   $0xffffffff,(%esp)
lea    0x47(%esp),%edx
movl   $0x7fffffff,0x4(%esp)
lea    0x28(%esp),%eax
mov    %ecx,0x1c(%esp)
call   8065e50 <fchmod@plt+0x1aeb0>
test   %al,%al
je     8066c78 <fchmod@plt+0x1bcd8>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,0x3c(%esp)
mov    0x18(%ebp),%eax
mov    %edx,0x40(%esp)
lea    0x34(%esp),%edx
call   8065cc0 <fchmod@plt+0x1ad20>
mov    0x18(%ebp),%eax
addl   $0x1,0x18(%esp)
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
cmp    0xbc(%eax),%edx
jb     8066d58 <fchmod@plt+0x1bdb8>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
jmp    8066bac <fchmod@plt+0x1bc0c>
call   804a610 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x809e304,%ecx
mov    0x70(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x809e450,%eax
mov    0x18(%edi),%edx
test   %eax,%eax
mov    %eax,0xb0(%edx)
mov    %ecx,0xb4(%edx)
je     80673a7 <fchmod@plt+0x1c407>
call   804cc10 <fchmod@plt+0x1c70>
mov    %eax,0x20(%esp)
mov    0x18(%edi),%eax
mov    %edx,0x24(%esp)
mov    0xc0(%eax),%ecx
mov    0x4(%eax),%ebp
mov    %ecx,0x28(%esp)
mov    %ecx,%ebx
lea    0x37(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    0xb8(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    0x18(%edi),%ecx
xor    %edx,%edx
mov    0xb8(%ecx),%esi
add    $0x1,%eax
test   %esi,%esi
je     8066ffe <fchmod@plt+0x1c05e>
mov    %ebp,0x2c(%esp)
xor    %esi,%esi
mov    %edx,%ebp
mov    %edi,0x18(%esp)
mov    %eax,%edi
xchg   %ax,%ax
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%ebx),%edx
mov    (%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
xor    %edx,%edx
add    $0x1,%eax
add    %eax,%edi
mov    0x10(%esp),%eax
adc    %edx,%ebp
mov    %eax,0x8(%esp)
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
xor    %edx,%edx
add    $0x1,%eax
add    %eax,%edi
mov    0x18(%esp),%eax
adc    %edx,%ebp
add    $0x1,%esi
add    $0x10,%ebx
mov    0x18(%eax),%ecx
cmp    0xb8(%ecx),%esi
jb     8066f88 <fchmod@plt+0x1bfe8>
mov    %edi,%eax
mov    %ebp,%edx
mov    0x18(%esp),%edi
mov    0x2c(%esp),%ebp
add    $0x1ff,%eax
adc    $0x0,%edx
shrd   $0x9,%edx,%eax
sar    $0x9,%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
add    %eax,0xa4(%ecx)
adc    %edx,0xa8(%ecx)
add    %eax,0x10(%edi)
adc    %edx,0x14(%edi)
mov    %ecx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x808786e,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x808787f,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x808785e,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x8087890,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x18(%edi),%ebx
movl   $0x0,0x8(%esp)
movl   $0x8088da8,0x4(%esp)
mov    %ebx,(%esp)
call   805a930 <fchmod@plt+0xf990>
mov    %eax,0x4(%ebx)
mov    0x18(%edi),%ebx
mov    0x4(%ebx),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
cmp    $0x64,%eax
ja     8067381 <fchmod@plt+0x1c3e1>
mov    0x58(%ebx),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x18(%esp)
mov    0xa4(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    0xa8(%ebx),%edx
mov    %eax,0x58(%ebx)
mov    %edx,0x5c(%ebx)
mov    %ebx,(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,0x58(%ebx)
mov    %ecx,0x5c(%ebx)
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    0x18(%edi),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%edi),%eax
mov    %ebp,0x4(%eax)
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%ebp
mov    %eax,%esi
mov    %eax,0x20(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%edi),%eax
mov    0xb8(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
lea    0x200(%ebp),%edx
mov    %eax,%ebx
mov    %ebp,%eax
cmpb   $0x0,(%ebx)
jne    8067172 <fchmod@plt+0x1c1d2>
jmp    8067686 <fchmod@plt+0x1c6e6>
nop
mov    %ebp,%esi
cmp    %edx,%esi
je     806738d <fchmod@plt+0x1c3ed>
add    $0x1,%ebx
movzbl -0x1(%ebx),%ecx
lea    0x1(%esi),%ebp
mov    %cl,(%esi)
cmpb   $0x0,(%ebx)
jne    8067170 <fchmod@plt+0x1c1d0>
mov    %eax,0x20(%esp)
mov    %ebp,%eax
cmp    %edx,%eax
jne    80671aa <fchmod@plt+0x1c20a>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,0x20(%esp)
lea    0x1(%eax),%ebp
movb   $0xa,(%eax)
mov    0x18(%edi),%eax
mov    0xb8(%eax),%eax
test   %eax,%eax
je     80672db <fchmod@plt+0x1c33b>
mov    0x28(%esp),%esi
xor    %eax,%eax
mov    %edi,0x18(%esp)
mov    %esi,%edi
mov    %eax,%esi
nop
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%edi),%edx
mov    (%edi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    0x20(%esp),%edx
mov    %eax,%ebx
mov    %edx,%eax
add    $0x200,%eax
cmpb   $0x0,(%ebx)
mov    %eax,0x28(%esp)
je     806737a <fchmod@plt+0x1c3da>
mov    %eax,%ecx
jmp    806720a <fchmod@plt+0x1c26a>
nop
mov    %eax,%ebp
cmp    %ecx,%ebp
je     8067358 <fchmod@plt+0x1c3b8>
add    $0x1,%ebx
movzbl -0x1(%ebx),%edx
lea    0x1(%ebp),%eax
mov    %dl,0x0(%ebp)
cmpb   $0x0,(%ebx)
jne    8067208 <fchmod@plt+0x1c268>
mov    %ecx,0x28(%esp)
mov    0x28(%esp),%ebp
cmp    %eax,%ebp
jne    8067253 <fchmod@plt+0x1c2b3>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%ecx
add    $0x200,%ecx
mov    %eax,0x20(%esp)
mov    %ecx,%ebp
mov    %ecx,0x28(%esp)
movb   $0xa,(%eax)
lea    0x1(%eax),%ebx
mov    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc(%edi),%edx
mov    0x8(%edi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
cmpb   $0x0,(%eax)
mov    %eax,%edx
jne    8067282 <fchmod@plt+0x1c2e2>
jmp    80672a1 <fchmod@plt+0x1c301>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
cmp    %ebp,%ebx
je     8067328 <fchmod@plt+0x1c388>
add    $0x1,%edx
movzbl -0x1(%edx),%ecx
lea    0x1(%ebx),%eax
mov    %cl,(%ebx)
cmpb   $0x0,(%edx)
jne    8067280 <fchmod@plt+0x1c2e0>
mov    0x28(%esp),%ebp
mov    %eax,%ebx
cmp    %ebx,%ebp
jne    80672bc <fchmod@plt+0x1c31c>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,0x20(%esp)
mov    %eax,%ebx
mov    0x18(%esp),%eax
add    $0x1,%esi
add    $0x10,%edi
movb   $0xa,(%ebx)
lea    0x1(%ebx),%ebp
mov    0x18(%eax),%eax
cmp    0xb8(%eax),%esi
jb     80671d0 <fchmod@plt+0x1c230>
mov    0x20(%esp),%edi
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %edi,%eax
sub    %ebp,%eax
add    $0x200,%eax
mov    %eax,0x8(%esp)
call   804aa80 <memset@plt>
mov    %edi,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    $0x1,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806768f <fchmod@plt+0x1c6ef>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    %eax,%ebx
add    $0x200,%eax
mov    %eax,0x28(%esp)
mov    %eax,%ebp
jmp    806728a <fchmod@plt+0x1c2ea>
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,0x20(%esp)
mov    %eax,%ebp
lea    0x200(%eax),%ecx
jmp    8067212 <fchmod@plt+0x1c272>
mov    %ebp,%eax
jmp    8067228 <fchmod@plt+0x1c288>
movb   $0x0,0x64(%esi)
mov    0x18(%edi),%ebx
jmp    80670c4 <fchmod@plt+0x1c124>
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
call   804d410 <fchmod@plt+0x2470>
mov    %eax,%esi
lea    0x200(%eax),%edx
jmp    806717a <fchmod@plt+0x1c1da>
call   804cc10 <fchmod@plt+0x1c70>
mov    %eax,0x10(%esp)
mov    0x18(%edi),%eax
mov    %edx,0x14(%esp)
mov    0xc0(%eax),%ebx
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80878b9,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x0,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x80878a4,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
movl   $0x80878dd,(%esp)
call   805a510 <fchmod@plt+0xf570>
test   %al,%al
jne    806740d <fchmod@plt+0x1c46d>
mov    0x809e304,%eax
test   %eax,%eax
jne    80674ca <fchmod@plt+0x1c52a>
mov    0x18(%edi),%ebx
movl   $0x0,0x30(%esp)
mov    0xb8(%ebx),%eax
test   %eax,%eax
je     8067469 <fchmod@plt+0x1c4c9>
lea    0x30(%esp),%esi
xchg   %ax,%ax
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
movl   $0x80877d8,(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    %esi,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x80878c9,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x30(%esp),%eax
mov    0x18(%edi),%ebx
add    $0x1,%eax
cmp    0xb8(%ebx),%eax
mov    %eax,0x30(%esp)
jb     8067428 <fchmod@plt+0x1c488>
mov    0x58(%ebx),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x18(%esp)
mov    0xa4(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    0xa8(%ebx),%edx
mov    %eax,0x58(%ebx)
mov    %edx,0x5c(%ebx)
mov    %ebx,(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ecx,0x5c(%ebx)
mov    0x10(%esp),%ecx
mov    %edx,0x58(%ebx)
mov    0x14(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    0x18(%edi),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    %ebx,%eax
jmp    8067309 <fchmod@plt+0x1c369>
movl   $0x0,0x8(%esp)
mov    0x18(%edi),%eax
movl   $0x808785e,(%esp)
mov    %eax,0x4(%esp)
call   805b0f0 <fchmod@plt+0x10150>
mov    0x18(%edi),%ebp
mov    0x4(%ebp),%esi
mov    %ebp,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x8088da8,0x4(%esp)
call   805a930 <fchmod@plt+0xf990>
mov    %eax,0x4(%ebp)
mov    0x18(%edi),%eax
add    $0xcc,%eax
mov    %eax,(%esp)
call   805b5a0 <fchmod@plt+0x10600>
mov    0x18(%edi),%edx
movl   $0x0,0x30(%esp)
mov    0xb8(%edx),%ebp
test   %ebp,%ebp
je     80675ef <fchmod@plt+0x1c64f>
lea    0x37(%esp),%eax
xor    %ecx,%ecx
mov    %eax,%ebp
shl    $0x4,%ecx
mov    %ebp,0x8(%esp)
mov    0x4(%ebx,%ecx,1),%edx
mov    (%ebx,%ecx,1),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,0x4(%esp)
mov    0x18(%edi),%eax
add    $0xcc,%eax
mov    %eax,(%esp)
call   805b5c0 <fchmod@plt+0x10620>
movl   $0x80877ea,0x4(%esp)
mov    0x18(%edi),%eax
add    $0xcc,%eax
mov    %eax,(%esp)
call   805b5c0 <fchmod@plt+0x10620>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
shl    $0x4,%eax
mov    0xc(%ebx,%eax,1),%edx
mov    0x8(%ebx,%eax,1),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,0x4(%esp)
mov    0x18(%edi),%eax
add    $0xcc,%eax
mov    %eax,(%esp)
call   805b5c0 <fchmod@plt+0x10620>
mov    0x30(%esp),%eax
mov    0x18(%edi),%edx
add    $0x1,%eax
cmp    0xb8(%edx),%eax
mov    %eax,0x30(%esp)
jae    80675ef <fchmod@plt+0x1c64f>
xor    %ecx,%ecx
test   %eax,%eax
je     8067537 <fchmod@plt+0x1c597>
add    $0xcc,%edx
movl   $0x80877ea,0x4(%esp)
mov    %edx,(%esp)
call   805b5c0 <fchmod@plt+0x10620>
mov    0x30(%esp),%ecx
jmp    8067537 <fchmod@plt+0x1c597>
add    $0xcc,%edx
movl   $0x80878dd,0x4(%esp)
mov    %edx,(%esp)
call   805b630 <fchmod@plt+0x10690>
test   %al,%al
mov    %eax,%ebx
je     806766b <fchmod@plt+0x1c6cb>
mov    0x18(%edi),%ebp
mov    0x58(%ebp),%eax
mov    0x5c(%ebp),%edx
mov    %eax,0x18(%esp)
mov    0xa4(%ebp),%eax
mov    %edx,0x1c(%esp)
mov    0xa8(%ebp),%edx
mov    %eax,0x58(%ebp)
mov    %edx,0x5c(%ebp)
mov    %ebp,(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,0x58(%ebp)
mov    0x10(%esp),%edx
mov    %ecx,0x5c(%ebp)
mov    0x14(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   8052590 <fchmod@plt+0x75f0>
test   %esi,%esi
je     80674c3 <fchmod@plt+0x1c523>
mov    0x18(%edi),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%edi),%eax
mov    %esi,0x4(%eax)
mov    %ebx,%eax
jmp    8067309 <fchmod@plt+0x1c369>
mov    0x20(%esp),%eax
jmp    8067191 <fchmod@plt+0x1c1f1>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%eax
mov    (%esi),%edx
mov    0x30(%esp),%ebp
cmp    0xb8(%edx),%eax
jae    806772f <fchmod@plt+0x1c78f>
mov    %ecx,%ebx
jmp    806772b <fchmod@plt+0x1c78b>
nop
mov    %ebx,0x8(%esp)
shl    $0x4,%eax
sub    $0x1,%ebp
movl   $0xc,0xc(%esp)
add    0xc0(%edx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
lea    0xc(%ebx),%eax
mov    (%esi),%edx
mov    %eax,0x8(%esp)
mov    (%edi),%eax
add    $0x18,%ebx
movl   $0xc,0xc(%esp)
shl    $0x4,%eax
add    0xc0(%edx),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
mov    (%edi),%eax
mov    (%esi),%edx
add    $0x1,%eax
mov    %eax,(%edi)
cmp    0xb8(%edx),%eax
jae    806772f <fchmod@plt+0x1c78f>
test   %ebp,%ebp
jne    80676c0 <fchmod@plt+0x1c720>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804cc10 <fchmod@plt+0x1c70>
mov    %eax,0x18(%esp)
mov    0x18(%esi),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8052830 <fchmod@plt+0x7890>
mov    %eax,%ebx
movb   $0x53,0x9c(%eax)
mov    0x18(%esi),%eax
cmpl   $0x4,0xb8(%eax)
jbe    8067782 <fchmod@plt+0x1c7e2>
movb   $0x1,0x1e2(%ebx)
mov    0x18(%esi),%eax
lea    0x1e3(%ebx),%edx
movl   $0xc,0xc(%esp)
lea    0x18(%esi),%ebp
mov    %edx,0x8(%esp)
mov    0x5c(%eax),%edx
mov    0x58(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
lea    0x7c(%ebx),%eax
movl   $0xc,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esi),%eax
mov    0xa8(%eax),%edx
mov    0xa4(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8052100 <fchmod@plt+0x7160>
lea    0x182(%ebx),%ecx
mov    %ebp,%eax
lea    0x2c(%esp),%edx
movl   $0x4,(%esp)
movl   $0x0,0x2c(%esp)
call   80676a0 <fchmod@plt+0x1c700>
mov    0x18(%esi),%eax
mov    0x2c(%esp),%edi
mov    0x1c(%esp),%edx
cmp    %edi,0xb8(%eax)
mov    0x18(%esp),%eax
seta   0x1e2(%ebx)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8052590 <fchmod@plt+0x75f0>
mov    0x18(%esi),%eax
mov    0x2c(%esp),%ebx
cmp    %ebx,0xb8(%eax)
ja     80678ac <fchmod@plt+0x1c90c>
jmp    80678f0 <fchmod@plt+0x1c950>
lea    0x0(%esi),%esi
test   $0x2,%edi
jne    80678d8 <fchmod@plt+0x1c938>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8067863 <fchmod@plt+0x1c8c3>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     806786b <fchmod@plt+0x1c8cb>
movb   $0x0,(%edi)
mov    %ebp,%eax
mov    %ebx,%ecx
movl   $0x15,(%esp)
lea    0x2c(%esp),%edx
call   80676a0 <fchmod@plt+0x1c700>
mov    0x18(%esi),%eax
mov    0x2c(%esp),%edi
cmp    %edi,0xb8(%eax)
jbe    8067895 <fchmod@plt+0x1c8f5>
movb   $0x1,0x1f8(%ebx)
mov    %ebx,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
mov    0x18(%esi),%eax
mov    0x2c(%esp),%ecx
cmp    %ecx,0xb8(%eax)
jbe    80678f0 <fchmod@plt+0x1c950>
call   804d410 <fchmod@plt+0x2470>
mov    $0x200,%edx
test   $0x1,%al
mov    %eax,%ebx
mov    %eax,%edi
je     8067840 <fchmod@plt+0x1c8a0>
lea    0x1(%eax),%edi
mov    $0x1ff,%dx
test   $0x2,%edi
movb   $0x0,(%eax)
je     806784c <fchmod@plt+0x1c8ac>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    806784c <fchmod@plt+0x1c8ac>
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x25c,%esp
mov    (%ebx),%edi
mov    %gs:0x14,%eax
mov    %eax,0x24c(%esp)
xor    %eax,%eax
mov    0x18(%ebx),%eax
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
mov    %edi,0x24(%esp)
mov    0x68(%eax),%edi
mov    0x64(%eax),%esi
mov    %eax,0x28(%esp)
movl   $0x0,0xa4(%eax)
00
movl   $0x0,0xa8(%eax)
00
mov    %edi,%eax
or     %esi,%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
jne    80679ec <fchmod@plt+0x1ca4c>
mov    0x28(%esp),%eax
mov    0x5c(%eax),%edx
mov    0x58(%eax),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x3c(%esp)
mov    %edx,0x40(%esp)
mov    0x28(%esp),%ebp
lea    0x3c(%esp),%edx
mov    %ebp,%eax
call   8065cc0 <fchmod@plt+0x1ad20>
mov    0x1c(%ebx),%eax
add    %esi,0xa4(%ebp)
adc    %edi,0xa8(%ebp)
mov    0x18(%eax),%edx
mov    $0x1,%eax
test   %edx,%edx
je     80679cd <fchmod@plt+0x1ca2d>
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   *%edx
mov    0x24c(%esp),%edi
xor    %gs:0x14,%edi
jne    8067b7d <fchmod@plt+0x1cbdd>
add    $0x25c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%ebx),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
je     8067a13 <fchmod@plt+0x1ca73>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   *%eax
test   %al,%al
jne    8067a13 <fchmod@plt+0x1ca73>
xor    %eax,%eax
jmp    80679cd <fchmod@plt+0x1ca2d>
movl   $0x0,0x18(%esp)
lea    0x4c(%esp),%ebp
movl   $0x0,0x1c(%esp)
mov    %ebx,0x2c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x200,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8063150 <fchmod@plt+0x181b0>
test   %eax,%eax
mov    %eax,%esi
je     8067b46 <fchmod@plt+0x1cba6>
cmp    $0xffffffff,%eax
je     8067b68 <fchmod@plt+0x1cbc8>
mov    %eax,%edx
mov    %ebp,%eax
nop
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
jne    8067ad8 <fchmod@plt+0x1cb38>
sub    $0x1,%edx
jne    8067a60 <fchmod@plt+0x1cac0>
mov    0x48(%esp),%eax
or     0x44(%esp),%eax
jne    8067a88 <fchmod@plt+0x1cae8>
xor    %edi,%edi
add    %esi,0x18(%esp)
adc    %edi,0x1c(%esp)
jmp    8067a30 <fchmod@plt+0x1ca90>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
lea    0x3c(%esp),%edx
call   8065cc0 <fchmod@plt+0x1ad20>
mov    0x2c(%esp),%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
mov    0x1c(%eax),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
je     8067a78 <fchmod@plt+0x1cad8>
mov    0x2c(%esp),%edi
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   *%eax
test   %al,%al
jne    8067a78 <fchmod@plt+0x1cad8>
xor    %eax,%eax
jmp    80679cd <fchmod@plt+0x1ca2d>
nop
mov    0x48(%esp),%ebx
mov    0x44(%esp),%ecx
mov    %ebx,%eax
or     %ecx,%eax
jne    8067af6 <fchmod@plt+0x1cb56>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x3c(%esp)
mov    %edx,0x40(%esp)
xor    %edi,%edi
add    %esi,%ecx
mov    0x28(%esp),%eax
adc    %edi,%ebx
mov    %ebx,0x48(%esp)
mov    0x2c(%esp),%ebx
mov    %ecx,0x44(%esp)
add    %esi,0xa4(%eax)
adc    %edi,0xa8(%eax)
mov    0x1c(%ebx),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
je     8067a7a <fchmod@plt+0x1cada>
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   *%eax
test   %al,%al
jne    8067a7a <fchmod@plt+0x1cada>
xor    %eax,%eax
jmp    80679cd <fchmod@plt+0x1ca2d>
mov    0x2c(%esp),%ebx
xor    %esi,%esi
xor    %edi,%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
or     %eax,%edx
jne    806798e <fchmod@plt+0x1c9ee>
jmp    806797e <fchmod@plt+0x1c9de>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    $0xffffffff,%esi
xor    %edi,%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
jmp    8067b56 <fchmod@plt+0x1cbb6>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x3,%esi
push   %ebx
sub    $0x54,%esp
lea    0x2c(%esp),%eax
call   8065d60 <fchmod@plt+0x1adc0>
test   %al,%al
jne    8067bb0 <fchmod@plt+0x1cc10>
add    $0x54,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x64(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,0x44(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x2c(%esp),%eax
call   8067900 <fchmod@plt+0x1c960>
test   %al,%al
mov    %eax,%esi
je     8067c78 <fchmod@plt+0x1ccd8>
mov    0x48(%esp),%eax
mov    0x1c(%eax),%edx
test   %edx,%edx
je     8067c78 <fchmod@plt+0x1ccd8>
mov    0xc(%eax),%eax
test   %eax,%eax
je     8067bf7 <fchmod@plt+0x1cc57>
lea    0x2c(%esp),%ecx
mov    %ecx,(%esp)
call   *%eax
mov    0x60(%esp),%eax
test   %eax,%eax
js     8067c78 <fchmod@plt+0x1ccd8>
mov    0x44(%esp),%ecx
mov    0xa4(%ecx),%eax
mov    0xa8(%ecx),%edx
sub    0x3c(%esp),%eax
sbb    0x40(%esp),%edx
xor    %ebx,%ebx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    0x58(%ecx),%eax
mov    0x5c(%ecx),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0x4(%ecx),%eax
mov    %eax,(%esp)
call   804c690 <fchmod@plt+0x16f0>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
cmp    %ebx,0xb8(%eax)
jbe    8067c7c <fchmod@plt+0x1ccdc>
mov    0x48(%esp),%edx
mov    0x1c(%edx),%edx
test   %edx,%edx
je     8067cd0 <fchmod@plt+0x1cd30>
lea    0x2c(%esp),%eax
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
mov    %eax,(%esp)
call   *%edx
test   %al,%al
jne    8067c40 <fchmod@plt+0x1cca0>
mov    0x44(%esp),%eax
xor    %esi,%esi
jmp    8067c7c <fchmod@plt+0x1ccdc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    0xa4(%eax),%ecx
mov    0xa8(%eax),%ebx
sub    0x3c(%esp),%ecx
sbb    0x40(%esp),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   80533a0 <fchmod@plt+0x8400>
mov    0x48(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     8067cc0 <fchmod@plt+0x1cd20>
lea    0x2c(%esp),%ecx
mov    %ecx,(%esp)
call   *%eax
test   %al,%al
jne    8067cc0 <fchmod@plt+0x1cd20>
mov    $0x1,%esi
jmp    8067ba7 <fchmod@plt+0x1cc07>
xchg   %ax,%ax
mov    %esi,%eax
xor    $0x1,%eax
movzbl %al,%esi
jmp    8067ba7 <fchmod@plt+0x1cc07>
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    8067c7c <fchmod@plt+0x1ccdc>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x4c,%esp
lea    0x1c(%esp),%eax
call   8065d60 <fchmod@plt+0x1adc0>
test   %al,%al
je     8067d10 <fchmod@plt+0x1cd70>
mov    0x50(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x38(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     8067d10 <fchmod@plt+0x1cd70>
lea    0x1c(%esp),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x4c,%esp
ret
xor    %eax,%eax
add    $0x4c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x4c,%esp
lea    0x1c(%esp),%eax
call   8065d60 <fchmod@plt+0x1adc0>
test   %al,%al
je     8067d4c <fchmod@plt+0x1cdac>
mov    0x50(%esp),%edx
mov    %edx,0x34(%esp)
mov    0x38(%esp),%edx
mov    0x10(%edx),%edx
test   %edx,%edx
je     8067d4c <fchmod@plt+0x1cdac>
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   *%edx
add    $0x4c,%esp
ret
push   %edi
mov    $0x3,%edi
push   %esi
push   %ebx
sub    $0x40,%esp
lea    0x1c(%esp),%esi
mov    %esi,%eax
call   8065d60 <fchmod@plt+0x1adc0>
test   %al,%al
jne    8067d78 <fchmod@plt+0x1cdd8>
add    $0x40,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x34(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   804ada0 <lseek64@plt>
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
or     %edx,%eax
mov    0x38(%esp),%eax
sete   0x20(%esp)
mov    0x14(%eax),%edx
test   %edx,%edx
je     8067ddf <fchmod@plt+0x1ce3f>
mov    %esi,(%esp)
call   *%edx
mov    0x34(%esp),%ecx
mov    %eax,%edi
mov    0x38(%esp),%eax
mov    %edi,%ebx
test   %bl,%bl
je     8067e27 <fchmod@plt+0x1ce87>
mov    0x34(%esp),%edx
mov    0xb8(%edx),%ebx
mov    %edx,%ecx
test   %ebx,%ebx
je     8067e6d <fchmod@plt+0x1cecd>
xor    %ebx,%ebx
jmp    8067e1c <fchmod@plt+0x1ce7c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
mov    %esi,(%esp)
call   *%ecx
test   %al,%al
mov    %eax,%edi
je     8067e74 <fchmod@plt+0x1ced4>
mov    0x34(%esp),%edx
mov    0x38(%esp),%eax
cmp    %ebx,0xb8(%edx)
mov    %edx,%ecx
jbe    8067e27 <fchmod@plt+0x1ce87>
mov    0x20(%eax),%ecx
test   %ecx,%ecx
jne    8067df8 <fchmod@plt+0x1ce58>
mov    %edx,%ecx
xor    %edi,%edi
mov    0x4(%eax),%eax
mov    0xa8(%ecx),%ebx
mov    0x58(%esp),%edx
mov    0xa4(%ecx),%ecx
sub    0x2c(%esp),%ecx
sbb    0x30(%esp),%ebx
test   %eax,%eax
mov    %ecx,(%edx)
mov    %ebx,0x4(%edx)
je     8067e60 <fchmod@plt+0x1cec0>
mov    %esi,(%esp)
call   *%eax
test   %al,%al
jne    8067e60 <fchmod@plt+0x1cec0>
mov    $0x1,%edi
jmp    8067d6a <fchmod@plt+0x1cdca>
xchg   %ax,%ax
mov    %edi,%eax
xor    $0x1,%eax
movzbl %al,%edi
jmp    8067d6a <fchmod@plt+0x1cdca>
mov    $0x1,%edi
jmp    8067e27 <fchmod@plt+0x1ce87>
mov    0x34(%esp),%ecx
mov    0x38(%esp),%eax
jmp    8067e27 <fchmod@plt+0x1ce87>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x44,%esp
lea    0x1c(%esp),%eax
call   8065d60 <fchmod@plt+0x1adc0>
mov    %eax,%esi
mov    $0x3,%eax
mov    %esi,%ebx
test   %bl,%bl
jne    8067ea8 <fchmod@plt+0x1cf08>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
movl   $0xffffffff,0x1c(%esp)
mov    %eax,0x34(%esp)
mov    0x38(%esp),%eax
mov    0x14(%eax),%edx
mov    0x50(%esp),%eax
test   %edx,%edx
je     8067ed6 <fchmod@plt+0x1cf36>
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   *%edx
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    0xa4(%eax),%ecx
mov    0xa8(%eax),%ebx
sub    0x2c(%esp),%ecx
sbb    0x30(%esp),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   8061a50 <fchmod@plt+0x16ab0>
mov    0x38(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     8067f20 <fchmod@plt+0x1cf80>
lea    0x1c(%esp),%edx
mov    %edx,(%esp)
call   *%eax
test   %al,%al
jne    8067f20 <fchmod@plt+0x1cf80>
add    $0x44,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
add    $0x44,%esp
xor    $0x1,%eax
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x4c,%esp
lea    0x1c(%esp),%eax
mov    0x64(%esp),%esi
call   8065d60 <fchmod@plt+0x1adc0>
test   %al,%al
je     8068008 <fchmod@plt+0x1d068>
mov    0x60(%esp),%eax
mov    %esi,0x34(%esp)
movb   $0x1,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    0x38(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     8068058 <fchmod@plt+0x1d0b8>
lea    0x1c(%esp),%ecx
mov    %ecx,(%esp)
call   *%eax
mov    %esi,(%esp)
mov    %eax,%ebx
call   804c750 <fchmod@plt+0x17b0>
test   %bl,%bl
je     8067fc9 <fchmod@plt+0x1d029>
mov    0x34(%esp),%eax
mov    0xb8(%eax),%edx
test   %edx,%edx
je     806804d <fchmod@plt+0x1d0ad>
mov    0xc0(%eax),%ebp
xor    %edx,%edx
xor    %ecx,%ecx
xor    %ebx,%ebx
xchg   %ax,%ax
mov    %ebx,%esi
shl    $0x4,%esi
mov    0x0(%ebp,%esi,1),%edi
lea    0x1c(%esp),%eax
mov    0x4(%ebp,%esi,1),%ebp
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   80663b0 <fchmod@plt+0x1b410>
test   %al,%al
jne    8068018 <fchmod@plt+0x1d078>
mov    0x34(%esp),%edi
mov    0xa4(%edi),%eax
mov    0xa8(%edi),%edx
sub    0x2c(%esp),%eax
sbb    0x30(%esp),%edx
xor    %ebx,%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8061a50 <fchmod@plt+0x16ab0>
call   804c780 <fchmod@plt+0x17e0>
mov    0x38(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     8068008 <fchmod@plt+0x1d068>
lea    0x1c(%esp),%ecx
mov    %ecx,(%esp)
call   *%eax
add    $0x4c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,%edx
lea    0x1c(%esp),%eax
call   8066540 <fchmod@plt+0x1b5a0>
mov    0x34(%esp),%edi
mov    0xc0(%edi),%ebp
add    %ebp,%esi
mov    (%esi),%edx
mov    0x4(%esi),%ecx
add    0x8(%esi),%edx
adc    0xc(%esi),%ecx
add    $0x1,%ebx
test   %al,%al
je     8067fcd <fchmod@plt+0x1d02d>
cmp    %ebx,0xb8(%edi)
ja     8067fa8 <fchmod@plt+0x1d008>
mov    $0x1,%ebx
jmp    8067fef <fchmod@plt+0x1d04f>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804c750 <fchmod@plt+0x17b0>
jmp    8067f88 <fchmod@plt+0x1cfe8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   804acb0 <strrchr@plt>
test   %eax,%eax
je     80680e0 <fchmod@plt+0x1d140>
lea    0x1(%eax),%edi
xor    %ebx,%ebx
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
jmp    80680a8 <fchmod@plt+0x1d108>
add    $0x1,%ebx
cmp    $0xf,%ebx
je     80680e0 <fchmod@plt+0x1d140>
lea    (%ebx,%ebx,2),%edx
cmp    0x8088f44(,%edx,4),%esi
lea    0x0(,%edx,4),%ebp
jne    80680a0 <fchmod@plt+0x1d100>
mov    0x8088f40(,%edx,4),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    80680a0 <fchmod@plt+0x1d100>
mov    0x8088f48(%ebp),%eax
jmp    80680e4 <fchmod@plt+0x1d144>
xchg   %ax,%ax
mov    0x34(%esp),%eax
test   %eax,%eax
je     80680ed <fchmod@plt+0x1d14d>
mov    %eax,0x809e51c
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x74,%esp
mov    0x809d860,%eax
lea    0x20(%esp),%esi
movl   $0x2080e04,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4c(%esp)
call   80723a0 <fchmod@plt+0x27400>
test   %eax,%eax
je     8068177 <fchmod@plt+0x1d1d7>
mov    %esi,(%esp)
call   80735a0 <fchmod@plt+0x28600>
movl   $0x5,0x8(%esp)
movl   $0x8088ba7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a6a0 <execvp@plt>
mov    %ebx,(%esp)
call   806f4c0 <fchmod@plt+0x24520>
jmp    80681a0 <fchmod@plt+0x1d200>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
lea    0x1c(%esp),%ebx
jmp    80681ba <fchmod@plt+0x1d21a>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    80681fc <fchmod@plt+0x1d25c>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
je     80681b0 <fchmod@plt+0x1d210>
mov    0x1c(%esp),%eax
mov    %eax,%ecx
movzbl %ah,%edx
and    $0x7f,%ecx
add    $0x1,%ecx
cmp    $0x1,%cl
jle    80681f4 <fchmod@plt+0x1d254>
and    $0x7f,%eax
mov    %eax,(%esp)
call   804a390 <raise@plt>
xor    %edx,%edx
mov    %edx,(%esp)
call   804a8a0 <exit@plt>
mov    0x809e51c,%eax
mov    %eax,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
jmp    80681d3 <fchmod@plt+0x1d233>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0x809d860,%eax
lea    0x2c(%esp),%edi
mov    %edi,(%esp)
lea    0x30(%esp),%ebp
movl   $0x1,0x38(%esp)
mov    %eax,0x5c(%esp)
call   804c870 <fchmod@plt+0x18d0>
mov    %eax,%esi
mov    $0x2080e06,%eax
test   %esi,%esi
jne    8068257 <fchmod@plt+0x1d2b7>
jmp    80683c4 <fchmod@plt+0x1d424>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2080e0e,%eax
mov    %ebx,%esi
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80723a0 <fchmod@plt+0x27400>
test   %eax,%eax
jne    8068371 <fchmod@plt+0x1d3d1>
mov    0x30(%esp),%ecx
mov    0x34(%esp),%eax
lea    0x0(,%ecx,4),%edx
mov    %edx,0x8(%esp)
mov    0x38(%esp),%edx
mov    %eax,(%esp)
lea    (%eax,%edx,4),%edx
mov    %edx,0x4(%esp)
call   804a4b0 <memmove@plt>
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
movl   $0x808900c,(%eax,%edx,4)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a6a0 <execvp@plt>
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
movl   $0x0,(%eax,%edx,4)
mov    %edi,(%esp)
call   804c910 <fchmod@plt+0x1970>
test   %eax,%eax
mov    %eax,%ebx
je     80683bc <fchmod@plt+0x1d41c>
testb  $0x8,0x809d642
je     8068250 <fchmod@plt+0x1d2b0>
movl   $0x5,0x8(%esp)
movl   $0x8088ff4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x1c(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
testb  $0x8,0x809d642
je     8068250 <fchmod@plt+0x1d2b0>
movl   $0x5,0x8(%esp)
movl   $0x8089002,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    8068250 <fchmod@plt+0x1d2b0>
mov    %ebp,(%esp)
call   80735a0 <fchmod@plt+0x28600>
movl   $0x5,0x8(%esp)
movl   $0x8088ba7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    %esi,(%esp)
call   806f4c0 <fchmod@plt+0x24520>
movl   $0x5,0x8(%esp)
movl   $0x808919c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804ae60 <__xstat64@plt>
test   %eax,%eax
je     8068438 <fchmod@plt+0x1d498>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
sete   %al
add    $0x7c,%esp
movzbl %al,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   %al
add    $0x7c,%esp
movzbl %al,%eax
ret
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x10,%esp
cmp    %edx,%eax
je     8068498 <fchmod@plt+0x1d4f8>
mov    %edx,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
je     8068476 <fchmod@plt+0x1d4d6>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
cmp    $0x9,%edi
jne    80684dc <fchmod@plt+0x1d53c>
mov    %esi,(%esp)
call   804a440 <dup@plt>
cmp    %ebx,%eax
je     8068490 <fchmod@plt+0x1d4f0>
test   %eax,%eax
js     80684a0 <fchmod@plt+0x1d500>
call   804ae30 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808901c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x808900f,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
jmp    8068520 <fchmod@plt+0x1d580>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x809e544,%eax
movl   $0x809df40,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e424,%ecx
xor    %eax,%eax
mov    0x809e420,%edx
push   %esi
push   %ebx
mov    0xc(%esp),%ebx
mov    %ecx,%esi
or     %edx,%esi
je     8068574 <fchmod@plt+0x1d5d4>
xor    0x30(%ebx),%ecx
xor    0x2c(%ebx),%edx
or     %edx,%ecx
je     8068578 <fchmod@plt+0x1d5d8>
pop    %ebx
pop    %esi
ret
nop
mov    0x84(%ebx),%edx
mov    0x88(%ebx),%eax
xor    0x809e514,%eax
xor    0x809e510,%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0x809e544
3f
jg     80685bd <fchmod@plt+0x1d61d>
mov    0x809df50,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     80685d8 <fchmod@plt+0x1d638>
movl   $0x0,0x809e420
00
movl   $0x0,0x809e424
00
ret
lea    0x0(%esi),%esi
mov    0x809df40,%eax
mov    0x809df44,%edx
mov    %eax,0x809e420
mov    0x809df98,%eax
mov    %edx,0x809e424
mov    0x809df9c,%edx
mov    %eax,0x809e510
mov    %edx,0x809e514
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0xa,%ecx
push   %esi
mov    $0x808920c,%edi
sub    $0x74,%esp
mov    0x809e488,%eax
mov    (%eax),%esi
mov    $0x1,%eax
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8068656 <fchmod@plt+0x1d6b6>
cmpl   $0x3fffffff,0x809e544
3f
jg     8068654 <fchmod@plt+0x1d6b4>
mov    0x809df50,%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     8068668 <fchmod@plt+0x1d6c8>
xor    %eax,%eax
mov    %al,0x809e418
add    $0x74,%esp
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x808920c,0x4(%esp)
movl   $0x3,(%esp)
call   804ae60 <__xstat64@plt>
test   %eax,%eax
jne    8068654 <fchmod@plt+0x1d6b4>
mov    0x809df40,%eax
mov    0x809df44,%edx
xor    0x14(%esp),%edx
xor    0x10(%esp),%eax
or     %eax,%edx
jne    8068654 <fchmod@plt+0x1d6b4>
mov    0x809df98,%edx
mov    0x809df9c,%eax
xor    0x6c(%esp),%eax
xor    0x68(%esp),%edx
or     %eax,%edx
sete   %al
jmp    8068656 <fchmod@plt+0x1d6b6>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x1c(%esp),%esi
mov    0x34(%esp),%edi
test   %ebx,%ebx
jne    80686e2 <fchmod@plt+0x1d742>
jmp    806871c <fchmod@plt+0x1d77c>
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8068728 <fchmod@plt+0x1d788>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
je     80686d8 <fchmod@plt+0x1d738>
mov    0x1c(%esp),%eax
mov    %eax,%edx
and    $0x7f,%edx
add    $0x1,%edx
cmp    $0x1,%dl
jle    8068738 <fchmod@plt+0x1d798>
and    $0x7f,%eax
mov    %eax,%ebx
mov    %edi,%eax
test   %al,%al
jne    806877c <fchmod@plt+0x1d7dc>
cmp    $0xd,%ebx
jne    806877c <fchmod@plt+0x1d7dc>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e51c,%eax
mov    %eax,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
jmp    80686fb <fchmod@plt+0x1d75b>
nop
movzbl %ah,%ebx
test   %ebx,%ebx
je     806871c <fchmod@plt+0x1d77c>
movl   $0x5,0x8(%esp)
movl   $0x808915b,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x8089027,0x4(%esp)
jmp    806874f <fchmod@plt+0x1d7af>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x8089049,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
mov    %eax,%edi
mov    $0x8089041,%eax
cmove  %eax,%edi
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,%ebx
je     80687ff <fchmod@plt+0x1d85f>
lea    0x1c(%esp),%esi
jmp    80687ca <fchmod@plt+0x1d82a>
nop
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    80687f0 <fchmod@plt+0x1d850>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
je     80687c0 <fchmod@plt+0x1d820>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x0,0xc(%esp)
movl   $0x808904f,0x8(%esp)
movl   $0x8089052,0x4(%esp)
mov    %edi,(%esp)
call   804a620 <execlp@plt>
mov    %edi,(%esp)
call   806f4c0 <fchmod@plt+0x24520>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
mov    0x18(%eax),%eax
cmp    %eax,0x18(%edx)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
mov    0x1c(%eax),%eax
cmp    %eax,0x1c(%edx)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
mov    0x10(%esp),%esi
mov    0xc(%esp),%ebx
mov    (%esi),%edx
mov    0x4(%esi),%ecx
xor    0x4(%ebx),%ecx
xor    (%ebx),%edx
or     %edx,%ecx
je     8068890 <fchmod@plt+0x1d8f0>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x58(%esi),%edx
mov    0x5c(%esi),%eax
xor    0x5c(%ebx),%eax
xor    0x58(%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   804ada0 <lseek64@plt>
test   %edx,%edx
js     80688f8 <fchmod@plt+0x1d958>
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ebx,(%esp)
call   804ac30 <ftruncate64@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    80688ec <fchmod@plt+0x1d94c>
nop
sub    $0x1c,%esp
mov    0x809e524,%edx
mov    0x809e544,%eax
mov    %edx,0x8(%esp)
mov    0x809e274,%edx
cmp    $0x3fffffff,%eax
mov    %edx,0x4(%esp)
jg     8068930 <fchmod@plt+0x1d990>
mov    %eax,(%esp)
call   8079fe0 <argp_parse+0x20a0>
add    $0x1c,%esp
ret
nop
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070b10 <fchmod@plt+0x25b70>
add    $0x1c,%esp
ret
jmp    8068950 <fchmod@plt+0x1d9b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   8063650 <fchmod@plt+0x186b0>
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jle    8068990 <fchmod@plt+0x1d9f0>
mov    0x24(%esp),%edx
mov    %edx,0x809e544
mov    0x20(%esp),%edx
mov    %edx,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x1c(%esp),%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x8089056,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   807f510 <argp_parse+0x75d0>
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   804a570 <signal@plt>
mov    0x20(%esp),%eax
xor    %edx,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
cmpb   $0x0,0x809e558
jne    8068a9f <fchmod@plt+0x1daff>
mov    0x809e488,%ebx
movl   $0x3a,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%ebx),%ebx
je     8068a2d <fchmod@plt+0x1da8d>
cmp    %ebx,%eax
jbe    8068a2d <fchmod@plt+0x1da8d>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     8068aa8 <fchmod@plt+0x1db08>
mov    %ebx,%eax
call   8068400 <fchmod@plt+0x1d460>
test   %eax,%eax
je     8068aa8 <fchmod@plt+0x1db08>
cmpb   $0x0,0x809e4b9
jne    8068c98 <fchmod@plt+0x1dcf8>
mov    0x809e488,%eax
mov    (%eax),%eax
cmpb   $0x2d,(%eax)
jne    8068a5b <fchmod@plt+0x1dabb>
cmpb   $0x0,0x1(%eax)
je     8068c82 <fchmod@plt+0x1dce2>
movl   $0x1b6,0x4(%esp)
mov    %eax,(%esp)
call   804ae50 <creat64@plt>
test   %eax,%eax
mov    %eax,0x809e544
jns    8068c8c <fchmod@plt+0x1dcec>
call   804aaf0 <__errno_location@plt>
cmpb   $0x0,0x809e4b9
mov    %eax,%ebx
mov    (%eax),%esi
jne    8068cc1 <fchmod@plt+0x1dd21>
mov    0x809e488,%eax
mov    %esi,(%ebx)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
mov    0x809e488,%eax
mov    (%eax),%ebx
jmp    8068a2d <fchmod@plt+0x1da8d>
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   8063650 <fchmod@plt+0x186b0>
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,%edi
je     8068c44 <fchmod@plt+0x1dca4>
mov    0x28(%esp),%eax
xor    %edx,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x809e488,%esi
mov    (%esi),%ebx
cmpb   $0x2d,(%ebx)
jne    8068bb2 <fchmod@plt+0x1dc12>
cmpb   $0x0,0x1(%ebx)
jne    8068bb2 <fchmod@plt+0x1dc12>
movl   $0x1,0x809e544
00
mov    0x809e524,%eax
mov    0x809e274,%esi
test   %eax,%eax
je     8068bab <fchmod@plt+0x1dc0b>
lea    0x0(%esi),%esi
xor    %ebx,%ebx
jmp    8068b2d <fchmod@plt+0x1db8d>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%ebx
add    %eax,%esi
mov    0x809e524,%eax
cmp    %ebx,%eax
jbe    8068b90 <fchmod@plt+0x1dbf0>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0xffffffff,%eax
je     8068cb4 <fchmod@plt+0x1dd14>
test   %eax,%eax
jne    8068b20 <fchmod@plt+0x1db80>
test   %ebx,%ebx
je     8068bab <fchmod@plt+0x1dc0b>
mov    0x809e524,%eax
movl   $0x0,0x4(%esp)
sub    %ebx,%eax
add    0x809e274,%ebx
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   804aa80 <memset@plt>
call   8068900 <fchmod@plt+0x1d960>
cmp    0x809e524,%eax
je     8068bab <fchmod@plt+0x1dc0b>
mov    %eax,(%esp)
call   804cd90 <fchmod@plt+0x1df0>
lea    0x0(%esi),%esi
call   8068900 <fchmod@plt+0x1d960>
cmp    0x809e524,%eax
jne    8068b82 <fchmod@plt+0x1dbe2>
test   %eax,%eax
mov    0x809e274,%esi
jne    8068b18 <fchmod@plt+0x1db78>
mov    %edi,%eax
call   80681a0 <fchmod@plt+0x1d200>
cmpb   $0x0,0x809e558
jne    8068c18 <fchmod@plt+0x1dc78>
mov    %ebx,(%esp)
movl   $0x3a,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%esi),%ebx
je     8068c18 <fchmod@plt+0x1dc78>
cmp    %ebx,%eax
jbe    8068c18 <fchmod@plt+0x1dc78>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
jne    8068c18 <fchmod@plt+0x1dc78>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    8068c28 <fchmod@plt+0x1dc88>
nop
movl   $0x1b6,0x4(%esp)
mov    %ebx,(%esp)
call   804ae50 <creat64@plt>
test   %eax,%eax
mov    %eax,0x809e544
jns    8068aff <fchmod@plt+0x1db5f>
mov    0x809e488,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
movl   $0x5,0x8(%esp)
movl   $0x8089062,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   807f510 <argp_parse+0x75d0>
mov    0x2c(%esp),%eax
mov    $0x1,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x809e51c,%eax
call   8068100 <fchmod@plt+0x1d160>
mov    $0x1,%edx
call   8068450 <fchmod@plt+0x1d4b0>
jmp    8068c82 <fchmod@plt+0x1dce2>
mov    0x809e488,%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8062d60 <fchmod@plt+0x17dc0>
jmp    8068a45 <fchmod@plt+0x1daa5>
mov    0x809e51c,%eax
mov    %eax,(%esp)
call   806f7b0 <fchmod@plt+0x24810>
call   8062fc0 <fchmod@plt+0x18020>
jmp    8068a8e <fchmod@plt+0x1daee>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   8063650 <fchmod@plt+0x186b0>
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jle    8068d18 <fchmod@plt+0x1dd78>
mov    0x20(%esp),%edx
mov    %edx,0x809e544
mov    0x24(%esp),%edx
mov    %edx,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x1c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8089056,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   807f510 <argp_parse+0x75d0>
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   804a570 <signal@plt>
mov    0x24(%esp),%eax
mov    $0x1,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x809e488,%ebx
mov    (%ebx),%eax
cmpb   $0x2d,(%eax)
je     8068ed3 <fchmod@plt+0x1df33>
cmpb   $0x0,0x809e558
jne    8068f96 <fchmod@plt+0x1dff6>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%ebx),%ebx
je     8068dc1 <fchmod@plt+0x1de21>
cmp    %ebx,%eax
jbe    8068dc1 <fchmod@plt+0x1de21>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     8068dd0 <fchmod@plt+0x1de30>
mov    %ebx,%eax
call   8068400 <fchmod@plt+0x1d460>
test   %eax,%eax
jne    8068f9d <fchmod@plt+0x1dffd>
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   8063650 <fchmod@plt+0x186b0>
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8068fd1 <fchmod@plt+0x1e031>
mov    0x2c(%esp),%eax
mov    $0x1,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x809e488,%ebx
mov    (%ebx),%eax
cmpb   $0x2d,(%eax)
jne    8068efa <fchmod@plt+0x1df5a>
cmpb   $0x0,0x1(%eax)
jne    8068efa <fchmod@plt+0x1df5a>
movl   $0x0,0x809e544
00
mov    $0x200,%edi
lea    0x0(%esi,%eiz,1),%esi
call   804c7c0 <fchmod@plt+0x1820>
jmp    8068e59 <fchmod@plt+0x1deb9>
nop
sub    $0x40000000,%eax
mov    %eax,(%esp)
call   8070a20 <fchmod@plt+0x25a80>
mov    %eax,%ebx
cmp    $0xffffffff,%ebx
jne    8068e88 <fchmod@plt+0x1dee8>
call   804ce10 <fchmod@plt+0x1e70>
mov    0x809e524,%edx
mov    0x809e544,%eax
mov    %edx,0x8(%esp)
mov    0x809e274,%edx
cmp    $0x3fffffff,%eax
mov    %edx,0x4(%esp)
jg     8068e40 <fchmod@plt+0x1dea0>
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
mov    %eax,%ebx
cmp    $0xffffffff,%ebx
je     8068e54 <fchmod@plt+0x1deb4>
test   %ebx,%ebx
je     8068ee5 <fchmod@plt+0x1df45>
mov    0x809e274,%esi
lea    0x0(%esi),%esi
cmp    $0x200,%ebx
mov    %edi,%ebp
cmovbe %ebx,%ebp
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   8079fe0 <argp_parse+0x20a0>
cmp    %ebp,%eax
je     8068ec8 <fchmod@plt+0x1df28>
mov    0x809e51c,%eax
mov    %eax,(%esp)
call   806fc20 <fchmod@plt+0x24c80>
add    %ebp,%esi
sub    %ebp,%ebx
jne    8068e98 <fchmod@plt+0x1def8>
jmp    8068e38 <fchmod@plt+0x1de98>
cmpb   $0x0,0x1(%eax)
je     8068dd0 <fchmod@plt+0x1de30>
lea    0x0(%esi),%esi
jmp    8068d7b <fchmod@plt+0x1dddb>
movl   $0x1,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x1c(%esp),%eax
call   80681a0 <fchmod@plt+0x1d200>
cmpb   $0x0,0x809e558
jne    8068f60 <fchmod@plt+0x1dfc0>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,0x809e55c
mov    (%ebx),%ebx
je     8068f62 <fchmod@plt+0x1dfc2>
cmp    %ebx,%eax
jbe    8068f62 <fchmod@plt+0x1dfc2>
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
jne    8068f62 <fchmod@plt+0x1dfc2>
mov    0x809e4e0,%eax
movl   $0x40000000,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8070300 <fchmod@plt+0x25360>
jmp    8068f7a <fchmod@plt+0x1dfda>
nop
mov    %eax,%ebx
movl   $0x1b6,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804a410 <open64@plt>
test   %eax,%eax
mov    %eax,0x809e544
jns    8068e2c <fchmod@plt+0x1de8c>
mov    0x809e488,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
mov    %eax,%ebx
jmp    8068dc1 <fchmod@plt+0x1de21>
mov    0x809e488,%eax
movl   $0x1b6,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a410 <open64@plt>
test   %eax,%eax
mov    %eax,0x809e544
js     8068f87 <fchmod@plt+0x1dfe7>
xor    %edx,%edx
call   8068450 <fchmod@plt+0x1d4b0>
call   8068210 <fchmod@plt+0x1d270>
movl   $0x5,0x8(%esp)
movl   $0x8089062,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   807f510 <argp_parse+0x75d0>
mov    0x28(%esp),%eax
xor    %edx,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
call   8068210 <fchmod@plt+0x1d270>
jmp    8069020 <fchmod@plt+0x1e080>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x24(%esp),%eax
mov    0x50(%esp),%esi
mov    %eax,(%esp)
mov    0x58(%esp),%ebx
call   8063650 <fchmod@plt+0x186b0>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   804a570 <signal@plt>
mov    %eax,0x809df24
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,0x809df28
je     8069096 <fchmod@plt+0x1e0f6>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x28(%esp),%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8069091 <fchmod@plt+0x1e0f1>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a610 <__stack_chk_fail@plt>
mov    0x24(%esp),%eax
xor    %edx,%edx
call   8068450 <fchmod@plt+0x1d4b0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    $0x8089f02,%edx
mov    $0x8089073,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x809e4a8,%eax
mov    (%eax),%edx
mov    $0x808907f,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x809e4a8,%edx
mov    $0x808908b,%eax
sub    0x809e488,%edx
sar    $0x2,%edx
add    $0x1,%edx
mov    %edx,%ecx
sar    $0x1f,%ecx
call   804b03a <fchmod@plt+0x9a>
mov    0x809e4b0,%edx
mov    $0x8089096,%eax
mov    %edx,%ecx
sar    $0x1f,%ecx
call   804b03a <fchmod@plt+0x9a>
mov    0x809e2ac,%eax
test   %eax,%eax
cmove  0x809e4e4,%eax
mov    %eax,(%esp)
call   806a030 <fchmod@plt+0x1f090>
mov    %eax,%edx
mov    $0x80890aa,%eax
call   804afb0 <fchmod@plt+0x10>
movzbl 0x54(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x80890b5,(%esp)
movb   $0x0,0x23(%esp)
mov    %al,0x22(%esp)
lea    0x22(%esp),%eax
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
jne    8069326 <fchmod@plt+0x1e386>
mov    0x3c(%ebx),%eax
lea    0x2f(%esp),%edi
movl   $0x80890c2,0x10(%esp)
movl   $0xd,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0xd,0x4(%esp)
mov    %edi,(%esp)
call   804a3b0 <__snprintf_chk@plt>
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x80890c7,(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
jne    8069326 <fchmod@plt+0x1e386>
mov    %esi,%edx
mov    $0x80890d0,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x4(%ebx),%edx
mov    $0x80890dd,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x10(%ebx),%edx
mov    $0x80890ea,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x14(%ebx),%edx
mov    $0x80890f4,%eax
call   804afb0 <fchmod@plt+0x10>
mov    0x8c(%ebx),%edx
mov    $0x80890fe,%eax
mov    0x90(%ebx),%ecx
call   804afe0 <fchmod@plt+0x40>
mov    0x94(%ebx),%edx
mov    $0x8089108,%eax
mov    0x98(%ebx),%ecx
call   804afe0 <fchmod@plt+0x40>
mov    0x9c(%ebx),%edx
mov    $0x8089112,%eax
mov    0xa0(%ebx),%ecx
call   804afe0 <fchmod@plt+0x40>
mov    0x58(%ebx),%edx
mov    $0x808911c,%eax
mov    0x5c(%ebx),%ecx
call   804b03a <fchmod@plt+0x9a>
mov    0x44(%ebx),%edx
xor    %ecx,%ecx
mov    $0x8089125,%eax
call   804b03a <fchmod@plt+0x9a>
mov    0x48(%ebx),%edx
xor    %ecx,%ecx
mov    $0x808912d,%eax
call   804b03a <fchmod@plt+0x9a>
cmpb   $0x68,0x54(%esp)
je     80692d9 <fchmod@plt+0x1e339>
jg     80692d2 <fchmod@plt+0x1e332>
movzbl 0x54(%esp),%eax
sub    $0x62,%eax
cmp    $0x1,%al
ja     8069300 <fchmod@plt+0x1e360>
mov    0x4c(%ebx),%eax
xor    %ecx,%ecx
mov    0x50(%ebx),%edx
mov    %eax,0x18(%esp)
mov    %eax,%esi
movzbl 0x18(%esp),%eax
shrd   $0xc,%edx,%esi
mov    %edx,0x1c(%esp)
mov    %esi,%edx
xor    %dl,%dl
or     %eax,%edx
mov    $0x8089135,%eax
call   804b03a <fchmod@plt+0x9a>
mov    0x50(%ebx),%edx
mov    0x4c(%ebx),%eax
mov    %edx,%ecx
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
mov    $0x808913f,%eax
mov    %ecx,%edx
xor    %ecx,%ecx
call   804b03a <fchmod@plt+0x9a>
movl   $0x8089149,(%esp)
call   804a360 <unsetenv@plt>
mov    0x809e458,%eax
call   8068100 <fchmod@plt+0x1d160>
cmpb   $0x6c,0x54(%esp)
jne    8069300 <fchmod@plt+0x1e360>
movl   $0x8089135,(%esp)
call   804a360 <unsetenv@plt>
movl   $0x808913f,(%esp)
call   804a360 <unsetenv@plt>
mov    0xc(%ebx),%edx
mov    $0x8089149,%eax
call   804afb0 <fchmod@plt+0x10>
jmp    80692c8 <fchmod@plt+0x1e328>
movl   $0x8089135,(%esp)
call   804a360 <unsetenv@plt>
movl   $0x808913f,(%esp)
call   804a360 <unsetenv@plt>
movl   $0x8089149,(%esp)
call   804a360 <unsetenv@plt>
jmp    80692c8 <fchmod@plt+0x1e328>
call   8056010 <fchmod@plt+0xb070>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x809df28,%ebx
test   %ebx,%ebx
js     80693f2 <fchmod@plt+0x1e452>
mov    0x809df24,%eax
movl   $0xd,(%esp)
mov    %eax,0x4(%esp)
call   804a570 <signal@plt>
mov    %ebx,%eax
lea    0x2c(%esp),%ebx
jmp    8069373 <fchmod@plt+0x1e3d3>
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    80693f8 <fchmod@plt+0x1e458>
mov    0x809df28,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
je     8069360 <fchmod@plt+0x1e3c0>
mov    0x2c(%esp),%eax
mov    %eax,%ebx
and    $0x7f,%ebx
je     8069418 <fchmod@plt+0x1e478>
lea    0x1(%ebx),%eax
cmp    $0x1,%al
jle    8069479 <fchmod@plt+0x1e4d9>
movl   $0x5,0x8(%esp)
mov    0x809df28,%esi
movl   $0x80891c0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0xffffffff,0x809df28
ff
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
mov    0x809e458,%eax
movl   $0xffffffff,0x809df28
ff
mov    %eax,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x809e440
jne    80693e8 <fchmod@plt+0x1e448>
movzbl %ah,%ebx
test   %ebx,%ebx
je     80693e8 <fchmod@plt+0x1e448>
movl   $0x5,0x8(%esp)
mov    0x809df28,%esi
movl   $0x8089156,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80693e8 <fchmod@plt+0x1e448>
movl   $0x5,0x8(%esp)
mov    0x809df28,%ebx
movl   $0x80891e4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    80693e8 <fchmod@plt+0x1e448>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8063650 <fchmod@plt+0x186b0>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   804a570 <signal@plt>
mov    %eax,0x809df20
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,%esi
je     8069664 <fchmod@plt+0x1e6c4>
mov    0x30(%esp),%eax
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x2c(%esp),%eax
movl   $0x8089290,0x4(%esp)
mov    %eax,(%esp)
call   804a8c0 <fdopen@plt>
movl   $0xa,0x8(%esp)
mov    %eax,%ebx
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a6e0 <__getdelim@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804a540 <fclose@plt>
test   %ebp,%ebp
jle    806958e <fchmod@plt+0x1e5ee>
mov    0x24(%esp),%eax
cmpb   $0xa,-0x1(%eax,%ebp,1)
je     8069640 <fchmod@plt+0x1e6a0>
lea    0x20(%esp),%edi
jmp    80695a2 <fchmod@plt+0x1e602>
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8069618 <fchmod@plt+0x1e678>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8069598 <fchmod@plt+0x1e5f8>
mov    0x809df20,%eax
movl   $0xd,(%esp)
mov    %eax,0x4(%esp)
call   804a570 <signal@plt>
mov    0x20(%esp),%ebx
test   $0x7f,%bl
jne    806964c <fchmod@plt+0x1e6ac>
movzbl %bh,%ebx
mov    0x24(%esp),%eax
test   %ebx,%ebx
jne    8069608 <fchmod@plt+0x1e668>
test   %ebp,%ebp
jle    8069608 <fchmod@plt+0x1e668>
mov    0x1c(%esp),%ecx
mov    %eax,(%ecx)
mov    0x4c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    806965f <fchmod@plt+0x1e6bf>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movzbl 0x21(%esp),%ebx
jmp    80695f0 <fchmod@plt+0x1e650>
nop
mov    0x809df20,%eax
movl   $0xd,(%esp)
mov    %eax,0x4(%esp)
call   804a570 <signal@plt>
mov    0x809e4c8,%eax
mov    %eax,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
jmp    80695f0 <fchmod@plt+0x1e650>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebp
movb   $0x0,(%eax,%ebp,1)
jmp    806958e <fchmod@plt+0x1e5ee>
mov    0x24(%esp),%eax
mov    $0xffffffff,%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    80695f0 <fchmod@plt+0x1e650>
call   804a610 <__stack_chk_fail@plt>
movl   $0x1,0x8(%esp)
lea    0x37(%esp),%ebx
movl   $0x8089f02,0x4(%esp)
movl   $0x8089073,(%esp)
call   804a980 <setenv@plt>
mov    0x1c(%esp),%eax
movl   $0x1,0x8(%esp)
mov    (%eax),%eax
movl   $0x808907f,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x74(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
movl   $0x808908b,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e4b0,%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
movl   $0x8089096,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e500,%eax
mov    %eax,(%esp)
call   806a070 <fchmod@plt+0x1f0d0>
movl   $0x1,0x8(%esp)
movl   $0x8089174,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e2ac,%eax
test   %eax,%eax
cmove  0x809e4e4,%eax
mov    %eax,(%esp)
call   806a030 <fchmod@plt+0x1f090>
movl   $0x1,0x8(%esp)
movl   $0x80890aa,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
movl   $0x8089183,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804cd50 <fchmod@plt+0x1db0>
mov    0x809e4c8,%eax
call   8068100 <fchmod@plt+0x1d160>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
call   8063610 <fchmod@plt+0x18670>
test   %eax,%eax
mov    %eax,%ebx
je     806981a <fchmod@plt+0x1e87a>
lea    0x10(%esp),%esi
jmp    80697da <fchmod@plt+0x1e83a>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8069810 <fchmod@plt+0x1e870>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a760 <waitpid@plt>
cmp    $0xffffffff,%eax
je     80697d0 <fchmod@plt+0x1e830>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    806990b <fchmod@plt+0x1e96b>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806fc00 <fchmod@plt+0x24c60>
jmp    80697f3 <fchmod@plt+0x1e853>
movl   $0x1,0x8(%esp)
lea    0x17(%esp),%ebx
movl   $0x8089f02,0x4(%esp)
movl   $0x8089073,(%esp)
call   804a980 <setenv@plt>
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x808907f,(%esp)
call   804a980 <setenv@plt>
mov    0x48(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
movl   $0x808918a,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e4b0,%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   807c1f0 <argp_parse+0x42b0>
movl   $0x1,0x8(%esp)
movl   $0x8089096,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e500,%eax
mov    %eax,(%esp)
call   806a070 <fchmod@plt+0x1f0d0>
movl   $0x1,0x8(%esp)
movl   $0x8089174,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    0x809e2ac,%eax
test   %eax,%eax
cmove  0x809e4e4,%eax
mov    %eax,(%esp)
call   806a030 <fchmod@plt+0x1f090>
movl   $0x1,0x8(%esp)
movl   $0x80890aa,(%esp)
mov    %eax,0x4(%esp)
call   804a980 <setenv@plt>
mov    %edi,%eax
call   8068100 <fchmod@plt+0x1d160>
call   804a610 <__stack_chk_fail@plt>
sub    $0x2c,%esp
mov    $0x808c8c0,%eax
jmp    8069926 <fchmod@plt+0x1e986>
lea    0x0(%esi),%esi
cmpl   $0x6,0x4(%eax)
je     8069934 <fchmod@plt+0x1e994>
add    $0x8,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    8069920 <fchmod@plt+0x1e980>
mov    $0x8089216,%edx
mov    0x808f174,%eax
movl   $0x808921f,0x18(%esp)
movl   $0x808922c,0x14(%esp)
movl   $0x14,0xc(%esp)
mov    %eax,0x10(%esp)
movl   $0x808cc2d,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x8089f0c,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x2c,%esp
ret
jmp    8069980 <fchmod@plt+0x1e9e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x14,%esp
mov    (%eax),%ecx
lea    0x4(%eax),%ebx
test   %ecx,%ecx
je     80699af <fchmod@plt+0x1ea0f>
mov    0x809e2f0,%eax
add    $0x4,%ebx
mov    %ecx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8079b30 <argp_parse+0x1bf0>
mov    -0x4(%ebx),%ecx
test   %ecx,%ecx
jne    8069990 <fchmod@plt+0x1e9f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   804c810 <fchmod@plt+0x1870>
call   804c990 <fchmod@plt+0x19f0>
mov    0x20(%esp),%eax
movl   $0x80699c0,0x4(%esp)
mov    %eax,(%esp)
call   804a570 <signal@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x40,%esp
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
movl   $0xffffffff,0x30(%esp)
movl   $0xffffffff,0x34(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8069ad8 <fchmod@plt+0x1eb38>
movb   $0x0,(%eax)
mov    $0x0,%edx
cmpb   $0x0,(%ebx)
cmove  %edx,%ebx
add    $0x1,%eax
mov    %eax,%edi
je     8069b20 <fchmod@plt+0x1eb80>
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
movl   $0x808d3ee,0x10(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
je     8069ab8 <fchmod@plt+0x1eb18>
movl   $0x5,0x8(%esp)
movl   $0x808923d,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,(%esp)
mov    %eax,%ebx
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
xchg   %ax,%ax
mov    0x34(%esp),%ecx
mov    0x30(%esp),%eax
cmp    $0x0,%ecx
mov    %ecx,%edx
ja     8069a67 <fchmod@plt+0x1eac7>
test   %ebx,%ebx
je     8069acd <fchmod@plt+0x1eb2d>
mov    %ebx,(%esi)
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx),%eax
mov    $0xffffffff,%edx
lea    -0x30(%eax),%ecx
mov    $0xffffffff,%eax
cmp    $0x9,%cl
ja     8069ac7 <fchmod@plt+0x1eb27>
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
movl   $0x808d3ee,0x10(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
je     8069b38 <fchmod@plt+0x1eb98>
cmp    $0x1,%eax
je     8069b30 <fchmod@plt+0x1eb90>
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
jmp    8069ac7 <fchmod@plt+0x1eb27>
lea    0x0(%esi),%esi
mov    %ebx,%edi
jmp    8069a67 <fchmod@plt+0x1eac7>
nop
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%eax
cmp    $0x0,%ecx
ja     8069b30 <fchmod@plt+0x1eb90>
mov    %ecx,%edx
jmp    8069acd <fchmod@plt+0x1eb2d>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%edx
mov    0x74(%esp),%eax
cmp    $0x7a,%edx
je     8069f28 <fchmod@plt+0x1ef88>
jle    8069bc0 <fchmod@plt+0x1ec20>
cmp    $0x9e,%edx
je     8069bd7 <fchmod@plt+0x1ec37>
cmp    $0x2000004,%edx
je     8069c10 <fchmod@plt+0x1ec70>
cmp    $0x9d,%edx
jne    8069c03 <fchmod@plt+0x1ec63>
movl   $0x5,0x8(%esp)
movl   $0x8089257,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8086696,0x4(%esp)
mov    %eax,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x5a,%edx
je     8069ef0 <fchmod@plt+0x1ef50>
cmp    $0x6a,%edx
je     8069d58 <fchmod@plt+0x1edb8>
cmp    $0x4a,%edx
jne    8069c03 <fchmod@plt+0x1ec63>
movl   $0x5,0x8(%esp)
movl   $0x8089257,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8088f26,0x4(%esp)
mov    %eax,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a640 <_obstack_begin@plt>
movl   $0x5,0x8(%esp)
movl   $0x8089f58,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
mov    0x30(%esp),%edx
mov    %eax,%ebx
lea    (%edx,%eax,1),%eax
cmp    %eax,0x34(%esp)
jb     8069f60 <fchmod@plt+0x1efc0>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   804a4e0 <memcpy@plt>
add    0x30(%esp),%ebx
lea    0x2(%ebx),%eax
cmp    %eax,0x34(%esp)
mov    %ebx,0x30(%esp)
jb     806a000 <fchmod@plt+0x1f060>
mov    $0xa0a,%ecx
mov    0x808f160,%edi
xor    %esi,%esi
mov    %cx,(%ebx)
mov    0x30(%esp),%eax
add    $0x2,%eax
test   %edi,%edi
mov    %eax,0x30(%esp)
jne    8069d2f <fchmod@plt+0x1ed8f>
jmp    8069dd0 <fchmod@plt+0x1ee30>
xchg   %ax,%ax
mov    $0x2020,%edx
mov    %dx,(%eax)
mov    0x30(%esp),%eax
mov    %edi,(%esp)
lea    0x2(%eax),%ebp
mov    %ebp,0x30(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebx
lea    0x0(%ebp,%eax,1),%eax
cmp    %eax,0x34(%esp)
jb     8069db0 <fchmod@plt+0x1ee10>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x30(%esp),%eax
add    %ebx,%eax
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
mov    %eax,0x30(%esp)
ja     8069d90 <fchmod@plt+0x1edf0>
add    $0x1,%esi
mov    0x808f160(,%esi,4),%edi
mov    %edx,0x30(%esp)
movb   $0xa,(%eax)
test   %edi,%edi
je     8069dd0 <fchmod@plt+0x1ee30>
mov    0x30(%esp),%eax
lea    0x2(%eax),%ecx
cmp    %ecx,0x34(%esp)
jae    8069cc0 <fchmod@plt+0x1ed20>
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x2,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
jmp    8069cc0 <fchmod@plt+0x1ed20>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8089257,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808668e,0x4(%esp)
mov    %eax,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    8069d12 <fchmod@plt+0x1ed72>
lea    0x24(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%ebp
jmp    8069ceb <fchmod@plt+0x1ed4b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8089275,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
mov    0x30(%esp),%edx
mov    %eax,%ebx
lea    (%edx,%eax,1),%eax
cmp    %eax,0x34(%esp)
jb     8069fe0 <fchmod@plt+0x1f040>
mov    %edx,(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
call   804a4e0 <memcpy@plt>
add    %ebx,0x30(%esp)
call   8069910 <fchmod@plt+0x1e970>
mov    %eax,(%esp)
mov    %eax,%esi
call   804a950 <strlen@plt>
mov    0x30(%esp),%edx
mov    %eax,%ebx
lea    (%edx,%eax,1),%eax
cmp    %eax,0x34(%esp)
jb     8069fc0 <fchmod@plt+0x1f020>
mov    %edx,(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x30(%esp),%eax
add    %ebx,%eax
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
mov    %eax,0x30(%esp)
ja     8069fa0 <fchmod@plt+0x1f000>
mov    %edx,0x30(%esp)
movb   $0xa,(%eax)
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
ja     8069f80 <fchmod@plt+0x1efe0>
mov    %edx,0x30(%esp)
movb   $0x0,(%eax)
mov    0x2c(%esp),%edx
mov    0x30(%esp),%eax
cmp    %edx,%eax
je     806a020 <fchmod@plt+0x1f080>
mov    0x3c(%esp),%ecx
mov    0x28(%esp),%ebx
add    %ecx,%eax
not    %ecx
and    %ecx,%eax
mov    0x34(%esp),%ecx
mov    %eax,%esi
sub    %ebx,%esi
mov    %eax,0x30(%esp)
mov    %ecx,%edi
sub    %ebx,%edi
cmp    %edi,%esi
jle    8069ebd <fchmod@plt+0x1ef1d>
mov    %ecx,0x30(%esp)
mov    %ecx,%eax
mov    %edx,(%esp)
mov    %eax,0x2c(%esp)
call   8081880 <argp_parse+0x9940>
movl   $0x0,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a6b0 <obstack_free@plt>
mov    0x1c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8089257,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8089ae4,0x4(%esp)
mov    %eax,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8089257,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x8089b10,0x4(%esp)
mov    %eax,(%esp)
call   8082130 <argp_parse+0xa1f0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%edx
jmp    8069c75 <fchmod@plt+0x1ecd5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    8069e7e <fchmod@plt+0x1eede>
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    8069e66 <fchmod@plt+0x1eec6>
lea    0x24(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%edx
jmp    8069e3f <fchmod@plt+0x1ee9f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%edx
jmp    8069e09 <fchmod@plt+0x1ee69>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%ebx
jmp    8069c9a <fchmod@plt+0x1ecfa>
lea    0x0(%esi),%esi
orb    $0x2,0x4c(%esp)
jmp    8069e95 <fchmod@plt+0x1eef5>
lea    0x0(%esi),%esi
mov    0x4(%esp),%ecx
cmp    $0x1,%ecx
je     806a054 <fchmod@plt+0x1f0b4>
mov    $0x808c8c0,%edx
jmp    806a045 <fchmod@plt+0x1f0a5>
cmp    %ecx,0x4(%edx)
je     806a060 <fchmod@plt+0x1f0c0>
add    $0x8,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    806a040 <fchmod@plt+0x1f0a0>
mov    $0x8089216,%eax
ret
mov    $0x80899f0,%eax
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
cmp    $0x9,%eax
ja     806a0e0 <fchmod@plt+0x1f140>
jmp    *0x808c100(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x808928f,%eax
lea    0x0(%esi),%esi
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8089292,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x8089295,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x8089298,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x808900c,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x808929b,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x808929e,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x80892a1,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x80892a4,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
mov    $0x8089216,%eax
jmp    806a090 <fchmod@plt+0x1f0f0>
nop
call   804ae30 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x80892b1,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     806a120 <fchmod@plt+0x1f180>
cmpb   $0x31,(%eax)
jne    806a120 <fchmod@plt+0x1f180>
cmpb   $0x0,0x1(%eax)
jne    806a120 <fchmod@plt+0x1f180>
movl   $0x1,0x809e43c
00
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x809e43c
00
add    $0x1c,%esp
ret
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x80892c2,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     806a160 <fchmod@plt+0x1f1c0>
cmpb   $0x31,(%eax)
jne    806a160 <fchmod@plt+0x1f1c0>
cmpb   $0x0,0x1(%eax)
jne    806a160 <fchmod@plt+0x1f1c0>
movl   $0x1,0x809e428
00
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x809e428
00
add    $0x1c,%esp
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x809e0b4,%eax
movl   $0x4,0x8(%esp)
movl   $0x809c40c,(%esp)
mov    %eax,0xc(%esp)
mov    0x809d864,%eax
mov    %eax,0x4(%esp)
call   8077820 <argp_help>
call   8079100 <argp_parse+0x11c0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a8a0 <exit@plt>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x809dfe8,%ebx
test   %ebx,%ebx
jne    806a1cc <fchmod@plt+0x1f22c>
mov    0x30(%esp),%eax
mov    %eax,0x809dfe8
add    $0x28,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
movl   $0x8089f8c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x809dfa4,%ebx
test   %ebx,%ebx
je     806a2b0 <fchmod@plt+0x1f310>
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x80892d9,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804a670 <fflush_unlocked@plt>
mov    0x809dfa0,%eax
test   %eax,%eax
je     806a2f8 <fchmod@plt+0x1f358>
mov    0x809e248,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
jae    806a3a3 <fchmod@plt+0x1f403>
lea    0x1(%ecx),%eax
mov    %eax,0x14(%edx)
movb   $0xa,(%ecx)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804a670 <fflush_unlocked@plt>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    0x809e544,%ecx
test   %ecx,%ecx
je     806a2c8 <fchmod@plt+0x1f328>
mov    0x809dfe8,%edx
test   %edx,%edx
je     806a388 <fchmod@plt+0x1f3e8>
movl   $0x8089290,0x4(%esp)
movl   $0x80865a8,(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x809dfa4
jne    806a233 <fchmod@plt+0x1f293>
movl   $0x80865a8,(%esp)
call   806f5e0 <fchmod@plt+0x24640>
lea    0x0(%esi),%esi
mov    0x809dfa4,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a6e0 <__getdelim@plt>
test   %eax,%eax
js     806a368 <fchmod@plt+0x1f3c8>
mov    0x28(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   804ac60 <rpmatch@plt>
mov    0x809dfa0,%esi
test   %eax,%eax
mov    0x28(%esp),%eax
setg   %bl
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %esi,%esi
jne    806a280 <fchmod@plt+0x1f2e0>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x28(%esp),%eax
movl   $0x1,0x809dfa0
00
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    806a280 <fchmod@plt+0x1f2e0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80892d6,(%esp)
call   806a1b0 <fchmod@plt+0x1f210>
mov    0x809d884,%eax
mov    %eax,0x809dfa4
jmp    806a233 <fchmod@plt+0x1f293>
movl   $0xa,0x4(%esp)
mov    %edx,(%esp)
call   804acc0 <__overflow@plt>
jmp    806a29b <fchmod@plt+0x1f2fb>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x8c,%esp
mov    %eax,0x18(%esp)
movzbl (%ecx),%eax
mov    0xa0(%esp),%esi
sub    $0x2e,%eax
cmp    $0x1,%al
jbe    806a4c0 <fchmod@plt+0x1f520>
movl   $0x0,0x8(%esp)
mov    %edx,%ebp
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   807ea10 <argp_parse+0x6ad0>
test   %al,%al
je     806a448 <fchmod@plt+0x1f4a8>
movl   $0x14,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x4(%esi),%edi
mov    (%esi),%esi
mov    %edi,0x8(%eax)
mov    %esi,0x4(%eax)
mov    %ebp,0xc(%eax)
mov    %ebx,(%esp)
mov    %eax,0x1c(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%edi
mov    %eax,0x10(%edx)
mov    (%edi),%eax
mov    %eax,(%edx)
xor    %eax,%eax
mov    %edx,(%edi)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x0,0x8(%esp)
mov    (%esi),%ecx
mov    0x4(%esi),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%edi
call   8060db0 <fchmod@plt+0x15e10>
movl   $0x5,0x8(%esp)
movl   $0x8089fc0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    $0x1,%eax
movl   $0x0,0x4(%esi)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
movl   $0x3,(%esp)
call   804ae60 <__xstat64@plt>
test   %eax,%eax
jne    806a4f4 <fchmod@plt+0x1f554>
mov    0x68(%esp),%edx
mov    %edx,(%esi)
mov    0x6c(%esp),%edx
mov    %edx,0x4(%esi)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
movl   $0x5,0x8(%esp)
movl   $0x80892e0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x809e51c,%edx
test   %edx,%edx
je     806a560 <fchmod@plt+0x1f5c0>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    806a56b <fchmod@plt+0x1f5cb>
mov    %ebx,0x809e51c
add    $0x18,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
movl   $0x808a040,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    $0x80899f0,%edx
push   %ebx
mov    %eax,%esi
sub    $0x14,%esp
mov    $0x808c8c0,%ebx
jmp    806a5d1 <fchmod@plt+0x1f631>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%ebx
mov    (%ebx),%edx
test   %edx,%edx
je     806a5ef <fchmod@plt+0x1f64f>
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    806a5c8 <fchmod@plt+0x1f628>
mov    0x4(%ebx),%eax
mov    %eax,0x809e4e4
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x80892fb,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb8(%esp),%ebx
mov    0xb0(%esp),%eax
mov    %gs:0x14,%edi
mov    %edi,0x8c(%esp)
xor    %edi,%edi
mov    0xb4(%esp),%esi
mov    0x1c(%ebx),%edx
cmp    $0xe0,%eax
mov    %edx,0x1c(%esp)
ja     806b7e4 <fchmod@plt+0x20844>
jmp    *0x808c128(,%eax,4)
movl   $0x0,0x8(%esp)
add    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80803f0 <argp_parse+0x84b0>
movsbl (%esi),%eax
test   %al,%al
jne    806a688 <fchmod@plt+0x1f6e8>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
xchg   %ax,%ax
movl   $0x1,0x8(%esp)
add    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80803f0 <argp_parse+0x84b0>
movsbl (%esi),%eax
test   %al,%al
jne    806a6b0 <fchmod@plt+0x1f710>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e2e8,%ebx
test   %ebx,%ebx
jns    806bc8a <fchmod@plt+0x20cea>
mov    $0x8089316,%edx
mov    0x1c(%esp),%eax
mov    %esi,%ecx
movl   $0x809e2e4,(%esp)
call   806a3c0 <fchmod@plt+0x1f420>
xor    %eax,%eax
lea    0x0(%esi),%esi
mov    0x8c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    806baf2 <fchmod@plt+0x20b52>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,0x809e4f0
movl   $0x1,0x809e540
00
movb   $0x1,0x809e2e1
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e45d
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e301
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x80899f0,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %esi,%esi
je     806ba3d <fchmod@plt+0x20a9d>
lea    0x40(%esp),%eax
movl   $0x808d3ee,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    806bcb1 <fchmod@plt+0x20d11>
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    %eax,0x809e4c0
xor    %eax,%eax
mov    %edx,0x809e4c4
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e47c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x0,0x809dfe4
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0xffffffff,0x809e474
ff
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movl   $0x1,0x4(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
orl    $0x1,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x0,0x809e4b8
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0xffffffff,0x809e54c
ff
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x809e2f4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0xffffffff,0x809e454
ff
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0xffffffff,0x809e548
ff
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x809e480
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,0x809e4d0
mov    0x40(%esp),%eax
cmpb   $0x0,(%eax)
jne    806bd2a <fchmod@plt+0x20d8a>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x6,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
call   805da80 <fchmod@plt+0x12ae0>
call   8079100 <argp_parse+0x11c0>
movl   $0x0,(%esp)
call   804a8a0 <exit@plt>
movb   $0x1,0x809e48f
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x808f160,%eax
test   %eax,%eax
je     806bb98 <fchmod@plt+0x20bf8>
xor    %ebx,%ebx
jmp    806a902 <fchmod@plt+0x1f962>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    0x808f160(,%ebx,4),%eax
test   %eax,%eax
je     806bb98 <fchmod@plt+0x20bf8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    806a8f0 <fchmod@plt+0x1f950>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   80803d0 <argp_parse+0x8490>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x8,0x809e480
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
movl   $0x8089349,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    806bd87 <fchmod@plt+0x20de7>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%eax
test   %ecx,%ecx
jne    806bd87 <fchmod@plt+0x20de7>
test   $0x1ff,%eax
mov    %eax,0x809e524
jne    806bd3f <fchmod@plt+0x20d9f>
shr    $0x9,%eax
mov    %eax,0x809e4b0
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x5,0x8(%esp)
movl   $0x808a0f4,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x809e454
00
movb   $0x1,0x809e468
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8089a58,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a640 <_obstack_begin@plt>
mov    %esi,0x20(%esp)
mov    0x20(%esp),%edi
mov    0x4c(%esp),%edx
movzbl (%edi),%eax
test   %al,%al
je     806ab41 <fchmod@plt+0x1fba1>
cmp    $0x2c,%al
je     806b88c <fchmod@plt+0x208ec>
mov    %edi,%eax
xor    %edi,%edi
add    $0x1,%eax
jmp    806aa58 <fchmod@plt+0x1fab8>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    $0x2c,%cl
je     806aa64 <fchmod@plt+0x1fac4>
movzbl (%eax),%ecx
add    $0x1,%edi
mov    %eax,%ebx
test   %cl,%cl
jne    806aa50 <fchmod@plt+0x1fab0>
mov    0x20(%esp),%esi
mov    %edi,0x8(%esp)
movl   $0x3d,0x4(%esp)
mov    %edx,0x24(%esp)
mov    %esi,(%esp)
call   804ab00 <memchr@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     806b830 <fchmod@plt+0x20890>
sub    %esi,%eax
mov    %eax,%esi
add    $0x1,%esi
lea    (%edx,%esi,1),%eax
cmp    %eax,0x50(%esp)
jb     806b7f0 <fchmod@plt+0x20850>
mov    0x20(%esp),%eax
sub    %esi,%edi
mov    %esi,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x4c(%esp),%edx
add    %esi,%edx
mov    %edx,0x4c(%esp)
movzbl 0x1(%ebp),%ecx
lea    0x1(%ebp),%esi
test   %cl,%cl
mov    %ecx,0x20(%esp)
je     806ab0f <fchmod@plt+0x1fb6f>
mov    %edx,0x24(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    0x24(%esp),%edx
mov    0x20(%esp),%ecx
mov    (%eax),%ebp
jmp    806aaf5 <fchmod@plt+0x1fb55>
xchg   %ax,%ax
add    $0x1,%esi
movzbl (%esi),%ecx
sub    $0x1,%edi
test   %cl,%cl
je     806ab0f <fchmod@plt+0x1fb6f>
movzbl %cl,%eax
testb  $0x20,0x1(%ebp,%eax,2)
jne    806aae8 <fchmod@plt+0x1fb48>
cmp    $0x7b,%cl
jne    806ab0f <fchmod@plt+0x1fb6f>
cmpb   $0x7d,-0x1(%esi,%edi,1)
je     806b8ad <fchmod@plt+0x2090d>
lea    (%edx,%edi,1),%eax
cmp    %eax,0x50(%esp)
jb     806b810 <fchmod@plt+0x20870>
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x4c(%esp),%edx
add    %edi,%edx
mov    %edx,0x4c(%esp)
movzbl (%ebx),%eax
test   %al,%al
jne    806b86d <fchmod@plt+0x208cd>
mov    %edx,%eax
add    $0x1,%edx
cmp    0x50(%esp),%edx
ja     806b9e0 <fchmod@plt+0x20a40>
mov    %edx,0x4c(%esp)
movb   $0x0,(%eax)
mov    0x48(%esp),%edx
mov    0x4c(%esp),%eax
cmp    %eax,%edx
je     806bad4 <fchmod@plt+0x20b34>
mov    0x58(%esp),%ecx
mov    0x44(%esp),%ebx
add    %ecx,%eax
not    %ecx
and    %ecx,%eax
mov    0x50(%esp),%ecx
mov    %eax,%esi
sub    %ebx,%esi
mov    %eax,0x4c(%esp)
mov    %ecx,%edi
sub    %ebx,%edi
cmp    %edi,%esi
jle    806ab8f <fchmod@plt+0x1fbef>
mov    %ecx,0x4c(%esp)
mov    %ecx,%eax
mov    %edx,(%esp)
mov    %eax,0x48(%esp)
call   8081880 <argp_parse+0x9940>
movl   $0x0,0x4(%esp)
mov    %eax,%ebx
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   804a6b0 <obstack_free@plt>
mov    0x1c(%esp),%eax
movb   $0x1,0x11(%eax)
mov    %ebx,(%esp)
call   805a620 <fchmod@plt+0xf680>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x809e444,%edx
mov    %esi,%eax
call   80699f0 <fchmod@plt+0x1ea50>
and    %eax,%edx
cmp    $0xffffffff,%edx
je     806b931 <fchmod@plt+0x20991>
mov    %eax,0x809e4d4
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
call   8069910 <fchmod@plt+0x1e970>
mov    %eax,%ebx
mov    %eax,(%esp)
call   804a830 <puts@plt>
call   8079100 <argp_parse+0x11c0>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,(%esp)
call   804a8a0 <exit@plt>
mov    $0x8089a58,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
movl   $0x1,0x809e54c
00
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809e548
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809e4e0
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809d6e0
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e4cc
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e4ac
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e2e2
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x2,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809e4c8
xor    %eax,%eax
movb   $0x1,0x809e2f8
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,(%esp)
call   8064ad0 <fchmod@plt+0x19b30>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x38(%esp),%eax
movl   $0x8089349,0x10(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    806bd00 <fchmod@plt+0x20d60>
mov    0x38(%esp),%eax
cmp    %eax,%esi
jae    806ad32 <fchmod@plt+0x1fd92>
movsbl -0x1(%eax),%eax
movl   $0x8089349,(%esp)
mov    %eax,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     806bb08 <fchmod@plt+0x20b68>
mov    0x44(%esp),%ebp
fildll 0x40(%esp)
test   %ebp,%ebp
js     806bab0 <fchmod@plt+0x20b10>
fstpl  0x809e460
movb   $0x1,0x809e2f8
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movb   $0x1,0x809e484
call   8064bb0 <fchmod@plt+0x19c10>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
testl  $0xfffffffd,0x809e500
ff
je     806b85c <fchmod@plt+0x208bc>
call   804b094 <fchmod@plt+0xf4>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x808a1a0,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8077900 <argp_error>
mov    $0x7,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e4f5
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8088f26,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%ebx
mov    $0x0,%eax
mov    $0x10000000,%edx
cmpl   $0x2,0x4(%ebx)
cmovne %eax,%edx
mov    0x8(%ebx),%eax
or     0xc(%ebx),%eax
or     0x809e480,%eax
mov    %esi,(%esp)
or     %edx,%eax
mov    %eax,0x4(%esp)
call   8064a90 <fchmod@plt+0x19af0>
xor    %eax,%eax
movb   $0x1,0x1c(%ebx)
jmp    806a700 <fchmod@plt+0x1f760>
sete   %al
movzbl %al,%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806e830 <fchmod@plt+0x23890>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8089a58,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
movl   $0x1,0x809e474
00
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movl   $0x2,0x4(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
andl   $0xfffffffe,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,(%esp)
call   806d8f0 <fchmod@plt+0x22950>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x0,0x809e440
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movl   $0x0,0xc(%eax)
andl   $0xbfffffff,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0xffffffff,0x809e518
ff
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,(%esp)
call   807ce20 <argp_parse+0x4ee0>
test   %eax,%eax
mov    %eax,0x809e44c
je     806bb5f <fchmod@plt+0x20bbf>
movl   $0x0,(%esp)
call   804ae70 <umask@plt>
mov    %eax,(%esp)
mov    %eax,0x809e2fc
call   804ae70 <umask@plt>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x80866a7,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x0,0x809e53c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x0,0x809e2e0
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movl   $0x0,0x20(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0xa,0x809dfe4
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8086696,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
mov    %esi,%ecx
mov    $0x808936b,%edx
movl   $0x809e4d8,(%esp)
call   806a3c0 <fchmod@plt+0x1f420>
xor    %eax,%eax
movb   $0x1,0x809e2ec
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8088f26,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e2e8,%edi
movl   $0x1,0x809e540
00
test   %edi,%edi
jns    806bc8a <fchmod@plt+0x20cea>
mov    $0x8089324,%edx
jmp    806a6e9 <fchmod@plt+0x1f749>
movb   $0x1,0x809e2f8
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
andl   $0xffffffef,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
movl   $0x808d3ee,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    806bbdf <fchmod@plt+0x20c3f>
mov    0x40(%esp),%ecx
mov    0x44(%esp),%ebx
mov    %ecx,%eax
cltd
cmp    %edx,%ebx
mov    %ecx,0x809e4b0
jne    806bbdf <fchmod@plt+0x20c3f>
test   %ecx,%ecx
jle    806bbdf <fchmod@plt+0x20c3f>
mov    %ecx,%eax
shl    $0x9,%eax
mov    %eax,0x809e524
shr    $0x9,%eax
xor    %ecx,%eax
or     %eax,%ebx
jne    806bbdf <fchmod@plt+0x20c3f>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movl   $0x1,0x20(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%ebx
mov    $0x0,%eax
mov    $0x10000000,%edx
cmpl   $0x1,0x4(%ebx)
movl   $0xa,0x10(%esp)
cmove  %eax,%edx
mov    0x809e480,%eax
or     0x8(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x8079b30,(%esp)
or     %edx,%eax
mov    %eax,0xc(%esp)
mov    0x809e2f0,%eax
mov    %eax,0x4(%esp)
call   8079d20 <argp_parse+0x1de0>
test   %eax,%eax
je     806a6aa <fchmod@plt+0x1f70a>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %esi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x808d587,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
lea    0x0(%esi),%esi
movb   $0x1,0x809e4f6
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8089ae4,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809e470
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x3,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movsbl 0x809dfe4,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064af0 <fchmod@plt+0x19b50>
xor    %eax,%eax
movb   $0x1,0x809dfe5
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e520
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e47d
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e534
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e500,%eax
test   %eax,%eax
je     806b17a <fchmod@plt+0x201da>
cmp    $0x6,%eax
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x6,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e448
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
addl   $0x1,0x809e46c
xor    %eax,%eax
orl    $0x583000,0x809d640
00
jmp    806a700 <fchmod@plt+0x1f760>
testl  $0xfffffff7,0x809e500
ff
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x8,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e500,%eax
test   %eax,%eax
je     806b1e4 <fchmod@plt+0x20244>
cmp    $0x7,%eax
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x7,0x809e500
00
xor    %eax,%eax
addl   $0x1,0x809e46c
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e468
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
cmpl   $0x1,0x809e500
ja     806ad94 <fchmod@plt+0x1fdf4>
movl   $0x1,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809e454
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movb   $0x1,0x10(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809e2f4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e42c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809dff0
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x4,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x808668e,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e2f9
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e438
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e4f8,%eax
cmp    0x809dfec,%eax
mov    0x809e488,%ecx
mov    %eax,%edx
je     806b98d <fchmod@plt+0x209ed>
lea    0x1(%edx),%eax
mov    %eax,0x809e4f8
xor    %eax,%eax
mov    %esi,(%ecx,%edx,4)
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e500,%eax
test   %eax,%eax
je     806b2f3 <fchmod@plt+0x20353>
cmp    $0x5,%eax
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x5,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e500,%eax
test   %eax,%eax
je     806b316 <fchmod@plt+0x20376>
cmp    $0x3,%eax
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x3,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809e478
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e42d
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e4b8
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,(%esp)
call   806c9a0 <fchmod@plt+0x21a00>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e458,%eax
test   %eax,%eax
jne    806bc35 <fchmod@plt+0x20c95>
mov    %esi,0x809e458
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %esi,%esi
je     806b9cd <fchmod@plt+0x20a2d>
mov    $0x808c4e0,%ebx
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     806ba23 <fchmod@plt+0x20a83>
add    $0x8,%ebx
cmp    $0x808c530,%ebx
jb     806b388 <fchmod@plt+0x203e8>
movl   $0x5,0x8(%esp)
movl   $0x8089433,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
mov    0x809e500,%eax
test   %eax,%eax
je     806b3f8 <fchmod@plt+0x20458>
cmp    $0x9,%eax
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x9,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%eax
movl   $0x808d3ee,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    806bc75 <fchmod@plt+0x20cd5>
mov    0x44(%esp),%edx
mov    0x40(%esp),%eax
test   %edx,%edx
jne    806bc75 <fchmod@plt+0x20cd5>
mov    %eax,0x809e50c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x40(%esp),%ebx
movl   $0xa,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movb   $0x1,0x809e520
call   804a900 <strtoul@plt>
mov    %eax,0x809e450
mov    0x40(%esp),%eax
movzbl (%eax),%edx
test   %dl,%dl
je     806b4b6 <fchmod@plt+0x20516>
cmp    $0x2e,%dl
jne    806bd15 <fchmod@plt+0x20d75>
add    $0x1,%eax
movl   $0xa,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,0x809e304
mov    0x40(%esp),%eax
cmpb   $0x0,(%eax)
jne    806bd15 <fchmod@plt+0x20d75>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
movb   $0x1,0x809e4b9
mov    %esi,0x14(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x5,0x809e4b4
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e4f4
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%ebx
mov    $0x0,%eax
mov    $0x10000000,%edx
cmpl   $0x1,0x4(%ebx)
cmove  %eax,%edx
mov    0x809e480,%eax
or     0x8(%ebx),%eax
mov    %esi,0x4(%esp)
or     %edx,%eax
mov    %eax,0x8(%esp)
mov    0x809e2f0,%eax
mov    %eax,(%esp)
call   8079b30 <argp_parse+0x1bf0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x8052090,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x80893be,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x8052090,0x8(%esp)
movl   $0x2,0x4(%esp)
movl   $0x80893be,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x8052090,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80893be,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x808c568,%eax
mov    $0x10000000,%edx
call   8069980 <fchmod@plt+0x1e9e0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
testl  $0xfffffffb,0x809e500
ff
jne    806ad94 <fchmod@plt+0x1fdf4>
movl   $0x4,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e300
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e53c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,(%esp)
call   804fe70 <fchmod@plt+0x4ed0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %esi,%esi
je     806baf7 <fchmod@plt+0x20b57>
cmpb   $0x2e,(%esi)
je     806bade <fchmod@plt+0x20b3e>
lea    0x40(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,0x809e4fc
mov    0x40(%esp),%eax
cmpb   $0x0,(%eax)
jne    806bc9c <fchmod@plt+0x20cfc>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e2e0
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %esi,%esi
movb   $0x1,0x809e4b9
je     806a6aa <fchmod@plt+0x1f70a>
mov    0x1c(%esp),%eax
mov    %esi,0x18(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %esi,%esi
mov    $0x1,%eax
je     806b6a5 <fchmod@plt+0x20705>
mov    0x809d794,%eax
movl   $0x4,0x10(%esp)
movl   $0x808c5d0,0xc(%esp)
movl   $0x808c5d8,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %esi,0x4(%esp)
movl   $0x80893ad,(%esp)
call   8074670 <fchmod@plt+0x296d0>
mov    0x808c5d0(,%eax,4),%eax
mov    %eax,0x809e430
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
orl    $0x40000000,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8089a58,%eax
call   806a5b0 <fchmod@plt+0x1f610>
xor    %eax,%eax
movl   $0x1,0x809e518
00
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x8089b10,%eax
call   806a540 <fchmod@plt+0x1f5a0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x1c(%esp),%eax
orl    $0x10,0x8(%eax)
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x809e414,%edx
mov    %esi,%eax
call   80699f0 <fchmod@plt+0x1ea50>
and    %eax,%edx
cmp    $0xffffffff,%edx
je     806b95f <fchmod@plt+0x209bf>
mov    %eax,0x809e494
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e48c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e558
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x808c580,%eax
xor    %edx,%edx
call   8069980 <fchmod@plt+0x1e9e0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8051fb0 <fchmod@plt+0x7010>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e45c
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    %esi,0x809e538
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e535
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movb   $0x1,0x809e440
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    $0x7,%eax
jmp    806a700 <fchmod@plt+0x1f760>
xchg   %ax,%ax
lea    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%edx
jmp    806aaa2 <fchmod@plt+0x1fb02>
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%edx
jmp    806ab1c <fchmod@plt+0x1fb7c>
lea    0x0(%esi,%eiz,1),%esi
lea    (%edx,%edi,1),%eax
cmp    %eax,0x50(%esp)
jb     806b897 <fchmod@plt+0x208f7>
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
add    0x4c(%esp),%edi
mov    %edi,%edx
mov    %edi,0x4c(%esp)
jmp    806ab36 <fchmod@plt+0x1fb96>
movl   $0x2,0x809e500
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
lea    0x1(%edx),%ecx
cmp    0x50(%esp),%ecx
ja     806ba00 <fchmod@plt+0x20a60>
mov    %ecx,0x4c(%esp)
mov    %al,(%edx)
lea    0x1(%ebx),%eax
mov    %eax,0x20(%esp)
jmp    806aa26 <fchmod@plt+0x1fa86>
mov    0x20(%esp),%ebx
xor    %edi,%edi
jmp    806aa64 <fchmod@plt+0x1fac4>
lea    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%edx
jmp    806b839 <fchmod@plt+0x20899>
mov    %edi,(%esp)
call   8081640 <argp_parse+0x9700>
lea    -0x2(%edi),%edx
mov    %edx,0x8(%esp)
mov    %eax,%ebp
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a4e0 <memcpy@plt>
lea    0x38(%esp),%eax
mov    %ebp,%ecx
movb   $0x0,-0x2(%ebp,%edi,1)
mov    $0x80893f7,%edx
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   806a3c0 <fchmod@plt+0x1f420>
test   %eax,%eax
je     806ba58 <fchmod@plt+0x20ab8>
mov    0x4c(%esp),%eax
lea    (%eax,%edi,1),%edx
cmp    %edx,0x50(%esp)
jb     806babb <fchmod@plt+0x20b1b>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    0x4c(%esp),%edi
mov    %edi,%edx
mov    %edi,0x4c(%esp)
mov    %ebp,(%esp)
mov    %edx,0x20(%esp)
call   804a4c0 <free@plt>
mov    0x20(%esp),%edx
jmp    806ab36 <fchmod@plt+0x1fb96>
mov    0x809e444,%eax
movl   $0xffffffff,0x809e4d4
ff
test   %eax,%eax
je     806a6aa <fchmod@plt+0x1f70a>
movl   $0x809e4d4,0x4(%esp)
mov    %eax,(%esp)
call   8064950 <fchmod@plt+0x199b0>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x809e414,%eax
movl   $0xffffffff,0x809e494
ff
test   %eax,%eax
je     806a6aa <fchmod@plt+0x1f70a>
movl   $0x809e494,0x4(%esp)
mov    %eax,(%esp)
call   80649f0 <fchmod@plt+0x19a50>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
test   %ecx,%ecx
je     806bb32 <fchmod@plt+0x20b92>
cmp    $0x2aaaaaa9,%eax
ja     806bb5a <fchmod@plt+0x20bba>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,0x809dfec
shl    $0x2,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x809e4f8,%edx
mov    %eax,0x809e488
mov    %eax,%ecx
jmp    806b2cf <fchmod@plt+0x2032f>
movb   $0x1,0x809e48e
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%eax
lea    0x1(%eax),%edx
jmp    806ab50 <fchmod@plt+0x1fbb0>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%edx
movzbl (%ebx),%eax
lea    0x1(%edx),%ecx
jmp    806b87a <fchmod@plt+0x208da>
movl   $0x80699c0,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804a570 <signal@plt>
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
movl   $0x1,0x809e4c0
00
xor    %eax,%eax
movl   $0x0,0x809e4c4
00
jmp    806a700 <fchmod@plt+0x1f760>
mov    0x38(%esp),%esi
lea    0x6c(%esp),%eax
mov    0x3c(%esp),%edi
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8062a30 <fchmod@plt+0x17a90>
mov    %eax,(%esp)
mov    %eax,%edi
call   804a950 <strlen@plt>
mov    %eax,%esi
mov    0x4c(%esp),%eax
lea    (%eax,%esi,1),%edx
cmp    %edx,0x50(%esp)
jb     806bb41 <fchmod@plt+0x20ba1>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x4c(%esp),%edx
add    %esi,%edx
mov    %edx,0x4c(%esp)
jmp    806b91c <fchmod@plt+0x2097c>
fadds  0x8086bcc
jmp    806ad42 <fchmod@plt+0x1fda2>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%eax
jmp    806b902 <fchmod@plt+0x20962>
orb    $0x2,0x68(%esp)
jmp    806ab67 <fchmod@plt+0x1fbc7>
movl   $0x80894f0,(%esp)
add    $0x1,%esi
call   804fe70 <fchmod@plt+0x4ed0>
jmp    806b608 <fchmod@plt+0x20668>
call   804a610 <__stack_chk_fail@plt>
movl   $0xa,0x809e4fc
00
xor    %eax,%eax
jmp    806a700 <fchmod@plt+0x1f760>
cmpl   $0x0,0x44(%esp)
fildll 0x40(%esp)
jns    806bb19 <fchmod@plt+0x20b79>
fadds  0x8086bcc
fstpl  0x28(%esp)
fldl   0x28(%esp)
fmuls  0x808c8f8
fstpl  0x809e460
jmp    806ad48 <fchmod@plt+0x1fda8>
test   %eax,%eax
mov    $0x10,%edx
cmove  %edx,%eax
jmp    806b9a7 <fchmod@plt+0x20a07>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x4c(%esp),%eax
jmp    806ba91 <fchmod@plt+0x20af1>
call   8056010 <fchmod@plt+0xb070>
movl   $0x5,0x8(%esp)
movl   $0x80893cb,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
mov    0x809d840,%ebx
movl   $0x808a0a8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x8089331,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
movl   $0x5,0x8(%esp)
movl   $0x808a178,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
movl   $0x5,0x8(%esp)
movl   $0x8089418,0x4(%esp)
jmp    806bbef <fchmod@plt+0x20c4f>
movl   $0x5,0x8(%esp)
movl   $0x8089373,0x4(%esp)
jmp    806bc45 <fchmod@plt+0x20ca5>
movl   $0x5,0x8(%esp)
movl   $0x808a080,0x4(%esp)
jmp    806bb6f <fchmod@plt+0x20bcf>
movl   $0x5,0x8(%esp)
movl   $0x80893e8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   80808b0 <argp_parse+0x8970>
mov    %ebx,0x10(%esp)
movl   $0x8087f76,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
movl   $0x5,0x8(%esp)
movl   $0x8089357,0x4(%esp)
jmp    806bbef <fchmod@plt+0x20c4f>
movl   $0x5,0x8(%esp)
movl   $0x8089390,0x4(%esp)
jmp    806bc45 <fchmod@plt+0x20ca5>
movl   $0x5,0x8(%esp)
movl   $0x808a060,0x4(%esp)
jmp    806bc45 <fchmod@plt+0x20ca5>
movl   $0x5,0x8(%esp)
movl   $0x808a150,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x200,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
movl   $0x5,0x8(%esp)
movl   $0x8089404,0x4(%esp)
jmp    806bbef <fchmod@plt+0x20c4f>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
movl   $0x809dfc0,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x809c40c,(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   8077f40 <argp_parse>
test   %eax,%eax
jne    806bddf <fchmod@plt+0x20e3f>
add    $0x3c,%esp
ret
movl   $0x2,(%esp)
call   804a8a0 <exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    0x8(%esp),%edi
mov    $0xf4,%edx
test   $0x1,%edi
jne    806be30 <fchmod@plt+0x20e90>
test   $0x2,%edi
jne    806be40 <fchmod@plt+0x20ea0>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     806be21 <fchmod@plt+0x20e81>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     806be29 <fchmod@plt+0x20e89>
movb   $0x0,(%edi)
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
add    $0x1,%edi
mov    $0xf3,%dl
test   $0x2,%edi
je     806be0a <fchmod@plt+0x20e6a>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    806be0a <fchmod@plt+0x20e6a>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0xec(%ebx),%eax
test   %eax,%eax
je     806bea8 <fchmod@plt+0x20f08>
mov    %eax,(%esp)
call   804af00 <closedir@plt>
mov    %eax,%edx
test   %edx,%edx
mov    $0x1,%eax
movl   $0x0,0xec(%ebx)
00
movl   $0x0,0xf0(%ebx)
00
jne    806be90 <fchmod@plt+0x20ef0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8063300 <fchmod@plt+0x18360>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xf0(%ebx),%eax
test   %eax,%eax
jle    806bec0 <fchmod@plt+0x20f20>
mov    %eax,(%esp)
call   804aef0 <close@plt>
mov    %eax,%edx
jmp    806be6c <fchmod@plt+0x20ecc>
xchg   %ax,%ax
movl   $0x0,0xf0(%ebx)
00
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
sub    $0x18,%esp
mov    0x20(%esp),%edi
mov    %edi,(%esp)
call   806be50 <fchmod@plt+0x20eb0>
mov    0xc4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0xc8(%edi),%eax
mov    %eax,(%esp)
call   805ad70 <fchmod@plt+0xfdd0>
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x10(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x14(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0xc0(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0xe4(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
lea    0xcc(%edi),%eax
mov    %eax,(%esp)
call   805b320 <fchmod@plt+0x10380>
test   $0x1,%edi
mov    $0xf4,%edx
jne    806bfc8 <fchmod@plt+0x21028>
test   $0x2,%edi
jne    806bfd8 <fchmod@plt+0x21038>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     806bfb5 <fchmod@plt+0x21015>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     806bfbd <fchmod@plt+0x2101d>
movb   $0x0,(%edi)
add    $0x18,%esp
pop    %edi
ret
lea    0x0(%esi),%esi
movb   $0x0,(%edi)
add    $0x1,%edi
mov    $0xf3,%dl
test   $0x2,%edi
je     806bf9e <fchmod@plt+0x20ffe>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    806bf9e <fchmod@plt+0x20ffe>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x809e2ac,%ecx
mov    $0x10,%eax
xor    %edx,%edx
sar    %cl,%eax
mov    %edx,%ecx
and    $0x1,%eax
mov    0xc(%esp),%eax
cmovne 0x10(%esp),%ecx
cmovne 0x8(%esp),%edx
cmp    %eax,0x4(%esp)
jl     806c028 <fchmod@plt+0x21088>
mov    $0x1,%eax
jg     806c030 <fchmod@plt+0x21090>
mov    %edx,%eax
sub    %ecx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
lea    0x0(%esi),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
cmp    %eax,0x809e084
jge    806c051 <fchmod@plt+0x210b1>
mov    %eax,0x809e084
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x48,%edx
cmp    $0x2b,%edx
ja     806c0a0 <fchmod@plt+0x21100>
jmp    *0x808c8fc(,%edx,4)
nop
orl    $0x4,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
andl   $0xfffffffd,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
andl   $0xfffffffe,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
andl   $0xfffffffb,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
orl    $0x2,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
orl    $0x1,(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x10,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x34(%ebx),%edx
test   %edx,%edx
movl   $0x0,(%eax)
je     806c0e0 <fchmod@plt+0x21140>
mov    %eax,(%edx)
mov    %eax,0x34(%ebx)
addl   $0x1,0x38(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %eax,0x30(%ebx)
mov    %eax,0x34(%ebx)
addl   $0x1,0x38(%ebx)
add    $0x18,%esp
pop    %ebx
ret
nop
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x14,%esp
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x0,0x4(%eax)
mov    %eax,%ebx
movl   $0x2,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %esi,%ecx
mov    %eax,0x8(%ebx)
mov    %cl,(%eax)
mov    0x8(%ebx),%eax
movb   $0x0,0x1(%eax)
movl   $0x1,0xc(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x10,%esp
sub    %edx,%esi
je     806c174 <fchmod@plt+0x211d4>
call   806c0b0 <fchmod@plt+0x21110>
mov    %eax,%edi
movl   $0x0,0x4(%eax)
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x8(%edi)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x8(%edi),%eax
movb   $0x0,(%eax,%esi,1)
mov    %esi,0xc(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x24c,%esp
movl   $0x3c,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x23c(%esp)
xor    %eax,%eax
call   80817f0 <argp_parse+0x98b0>
mov    %eax,%edi
mov    %eax,0x14(%esp)
mov    0x809e04c,%eax
test   %eax,%eax
je     806c4c8 <fchmod@plt+0x21528>
mov    %edi,(%eax)
mov    0x14(%esp),%eax
cmpb   $0x73,0x0(%ebp)
mov    %eax,0x809e04c
je     806c248 <fchmod@plt+0x212a8>
mov    $0x808caf0,%edi
mov    $0x6,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806c816 <fchmod@plt+0x21876>
movsbl 0x6(%ebp),%edx
lea    0x6(%ebp),%ebx
movl   $0x0,0x809d630
00
test   %dl,%dl
jne    806c214 <fchmod@plt+0x21274>
jmp    806c240 <fchmod@plt+0x212a0>
xchg   %ax,%ax
mov    $0x809d630,%eax
call   806c060 <fchmod@plt+0x210c0>
test   %eax,%eax
jne    806c78a <fchmod@plt+0x217ea>
add    $0x1,%ebx
movsbl (%ebx),%edx
test   %dl,%dl
je     806c240 <fchmod@plt+0x212a0>
cmp    $0x3b,%dl
jne    806c1f8 <fchmod@plt+0x21258>
lea    0x1(%ebx),%eax
mov    0x23c(%esp),%esi
xor    %gs:0x14,%esi
jne    806c7d1 <fchmod@plt+0x21831>
add    $0x24c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
jmp    806c21c <fchmod@plt+0x2127c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2(%ebp),%eax
movsbl 0x1(%ebp),%ecx
mov    %eax,0x20(%esp)
movzbl 0x2(%ebp),%eax
test   %al,%al
je     806c75f <fchmod@plt+0x217bf>
movsbl %al,%edx
cmp    %ecx,%edx
je     806c771 <fchmod@plt+0x217d1>
mov    $0x2,%esi
mov    $0x2,%ebx
jmp    806c291 <fchmod@plt+0x212f1>
xchg   %ax,%ax
add    $0x1,%ebx
movzbl 0x0(%ebp,%ebx,1),%eax
mov    %ebx,%esi
test   %al,%al
je     806c2ab <fchmod@plt+0x2130b>
movsbl %al,%edx
cmp    %ecx,%edx
je     806c738 <fchmod@plt+0x21798>
cmp    $0x5c,%al
jne    806c278 <fchmod@plt+0x212d8>
cmpb   $0x1,0x1(%ebp,%esi,1)
sbb    $0xffffffff,%ebx
add    $0x1,%ebx
movzbl 0x0(%ebp,%ebx,1),%eax
mov    %ebx,%esi
test   %al,%al
jne    806c286 <fchmod@plt+0x212e6>
mov    %ebx,0x28(%esp)
test   %ecx,%ecx
jne    806c816 <fchmod@plt+0x21876>
lea    0x1(%ebx),%esi
xor    %edx,%edx
mov    %esi,0x1c(%esp)
lea    0x0(%ebp,%esi,1),%eax
mov    %eax,0x24(%esp)
movzbl (%eax),%eax
test   %al,%al
je     806c756 <fchmod@plt+0x217b6>
movsbl %al,%ecx
mov    0x1c(%esp),%edi
cmp    %ecx,%edx
jne    806c2f5 <fchmod@plt+0x21355>
jmp    806c317 <fchmod@plt+0x21377>
add    $0x1,%edi
movzbl 0x0(%ebp,%edi,1),%eax
mov    %edi,%esi
test   %al,%al
je     806c30f <fchmod@plt+0x2136f>
movsbl %al,%ecx
cmp    %ecx,%edx
je     806c317 <fchmod@plt+0x21377>
cmp    $0x5c,%al
jne    806c2e0 <fchmod@plt+0x21340>
cmpb   $0x1,0x1(%ebp,%esi,1)
sbb    $0xffffffff,%edi
add    $0x1,%edi
movzbl 0x0(%ebp,%edi,1),%eax
mov    %edi,%esi
test   %al,%al
jne    806c2ee <fchmod@plt+0x2134e>
test   %edx,%edx
jne    806c816 <fchmod@plt+0x21876>
mov    0x14(%esp),%ecx
mov    0x809d630,%eax
movl   $0x0,0x4(%ecx)
mov    %eax,0x8(%ecx)
lea    0x1(%ebp,%esi,1),%eax
xor    %esi,%esi
movsbl (%eax),%edx
mov    %eax,0x38(%esp)
test   %dl,%dl
je     806c3dc <fchmod@plt+0x2143c>
cmp    $0x3b,%dl
je     806c3dc <fchmod@plt+0x2143c>
lea    0x8(%ecx),%ebp
mov    %ebp,0x18(%esp)
lea    0x38(%esp),%ebp
mov    %ebx,0x2c(%esp)
mov    %ecx,%ebx
jmp    806c38d <fchmod@plt+0x213ed>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x69,%dl
je     806c508 <fchmod@plt+0x21568>
cmp    $0x78,%dl
jne    806c4e8 <fchmod@plt+0x21548>
mov    0x38(%esp),%edx
or     $0x1,%esi
lea    0x1(%edx),%eax
mov    %eax,0x38(%esp)
movsbl 0x1(%edx),%edx
cmp    $0x3b,%dl
je     806c3d8 <fchmod@plt+0x21438>
test   %dl,%dl
je     806c3d8 <fchmod@plt+0x21438>
cmp    $0x67,%dl
je     806c4d8 <fchmod@plt+0x21538>
jg     806c360 <fchmod@plt+0x213c0>
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
xchg   %ax,%ax
ja     806c4e8 <fchmod@plt+0x21548>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,0xc(%ebx)
mov    0x38(%esp),%eax
lea    -0x1(%eax),%edx
lea    0x1(%edx),%eax
mov    %eax,0x38(%esp)
movsbl 0x1(%edx),%edx
cmp    $0x3b,%dl
jne    806c389 <fchmod@plt+0x213e9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
cmp    $0x3b,%dl
je     806c74a <fchmod@plt+0x217aa>
lea    -0x1(%ebx),%eax
sub    $0x2,%ebx
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,0x8(%esp)
mov    %eax,%ebp
mov    0x20(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x28(%esp),%eax
movb   $0x0,-0x2(%ebp,%eax,1)
mov    0x14(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
lea    0x10(%eax),%ebx
mov    %ebx,(%esp)
call   804ace0 <regcomp@plt>
test   %eax,%eax
jne    806c828 <fchmod@plt+0x21888>
cmpb   $0x5e,0x0(%ebp)
je     806c728 <fchmod@plt+0x21788>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
cmpb   $0x24,-0x1(%ebp,%eax,1)
je     806c728 <fchmod@plt+0x21788>
mov    %ebp,(%esp)
call   804a4c0 <free@plt>
sub    0x1c(%esp),%edi
lea    0x1(%edi),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %edi,0x8(%esp)
mov    %eax,%edx
mov    0x24(%esp),%eax
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x18(%esp),%edx
movb   $0x0,(%edx,%edi,1)
mov    %edx,%ecx
mov    %edx,0x34(%esp)
lea    0x0(%esi),%esi
movzbl (%ecx),%eax
test   %al,%al
je     806c4b1 <fchmod@plt+0x21511>
cmp    $0x5c,%al
je     806c518 <fchmod@plt+0x21578>
cmp    $0x26,%al
je     806c6f0 <fchmod@plt+0x21750>
add    $0x1,%ecx
mov    %ecx,0x34(%esp)
movzbl (%ecx),%eax
test   %al,%al
jne    806c497 <fchmod@plt+0x214f7>
mov    0x14(%esp),%eax
call   806c130 <fchmod@plt+0x21190>
mov    0x38(%esp),%eax
jmp    806c21c <fchmod@plt+0x2127c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    %eax,0x809e050
jmp    806c1bc <fchmod@plt+0x2121c>
xchg   %ax,%ax
movl   $0x1,0x4(%ebx)
mov    0x38(%esp),%edx
jmp    806c379 <fchmod@plt+0x213d9>
mov    0x18(%esp),%eax
call   806c060 <fchmod@plt+0x210c0>
test   %eax,%eax
jne    806c869 <fchmod@plt+0x218c9>
mov    0x38(%esp),%edx
jmp    806c379 <fchmod@plt+0x213d9>
lea    0x0(%esi),%esi
or     $0x2,%esi
mov    0x38(%esp),%edx
jmp    806c379 <fchmod@plt+0x213d9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
call   806c130 <fchmod@plt+0x21190>
mov    0x34(%esp),%eax
lea    0x1(%eax),%ecx
mov    %ecx,0x34(%esp)
movzbl 0x1(%eax),%edx
lea    -0x26(%edx),%eax
cmp    $0x50,%al
ja     806c6c4 <fchmod@plt+0x21724>
movzbl %al,%eax
jmp    *0x808c9ac(,%eax,4)
mov    $0xb,%edx
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
call   806c0f0 <fchmod@plt+0x21150>
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x2,0x4(%eax)
movl   $0x1,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    $0x9,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    $0xd,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    $0xa,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x2,0x4(%eax)
movl   $0x2,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    $0xc,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    $0x8,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    $0x7,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    $0x5c,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x2,0x4(%eax)
movl   $0x3,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x2,0x4(%eax)
movl   $0x4,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x2,0x4(%eax)
movl   $0x0,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
lea    0x34(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804a900 <strtoul@plt>
mov    %eax,%ebx
mov    0x14(%esp),%eax
cmp    0x28(%eax),%ebx
ja     806c7d6 <fchmod@plt+0x21836>
mov    0x14(%esp),%eax
call   806c0b0 <fchmod@plt+0x21110>
mov    0x34(%esp),%edx
mov    %edx,%ecx
movl   $0x1,0x4(%eax)
mov    %ebx,0x8(%eax)
jmp    806c490 <fchmod@plt+0x214f0>
mov    $0x26,%edx
jmp    806c550 <fchmod@plt+0x215b0>
mov    0x14(%esp),%eax
lea    0x34(%esp),%ecx
mov    %dl,0x33(%esp)
lea    0x32(%esp),%edx
movb   $0x5c,0x32(%esp)
call   806c130 <fchmod@plt+0x21190>
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
mov    0x14(%esp),%esi
mov    %esi,%eax
call   806c130 <fchmod@plt+0x21190>
mov    %esi,%eax
call   806c0b0 <fchmod@plt+0x21110>
movl   $0x1,0x4(%eax)
movl   $0x0,0x8(%eax)
mov    0x34(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x34(%esp)
mov    %edx,%ecx
jmp    806c490 <fchmod@plt+0x214f0>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
movl   $0x0,0x4(%eax)
jmp    806c44e <fchmod@plt+0x214ae>
lea    0x1(%ebx),%eax
mov    %ebx,0x28(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
jmp    806c2c0 <fchmod@plt+0x21320>
add    $0x1,%eax
mov    %eax,0x38(%esp)
jmp    806c3e5 <fchmod@plt+0x21445>
mov    0x1c(%esp),%edi
jmp    806c30f <fchmod@plt+0x2136f>
movl   $0x2,0x28(%esp)
mov    $0x2,%ebx
jmp    806c2af <fchmod@plt+0x2130f>
mov    $0x3,%esi
mov    $0x3,%eax
movl   $0x2,0x28(%esp)
mov    $0x2,%ebx
jmp    806c741 <fchmod@plt+0x217a1>
movsbl (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808caf7,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
call   804a610 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x808cb80,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,(%esp)
call   806a170 <fchmod@plt+0x1f1d0>
movl   $0x5,0x8(%esp)
movl   $0x808cb12,0x4(%esp)
jmp    806c7e6 <fchmod@plt+0x21846>
lea    0x3c(%esp),%esi
movl   $0x200,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804aae0 <regerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x808cb5c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0xc(%esp)
jmp    806c7ad <fchmod@plt+0x2180d>
mov    0x38(%esp),%eax
movsbl (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808cb30,0x4(%esp)
jmp    806c79d <fchmod@plt+0x217fd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x10,%esp
mov    0x809e000,%ebx
cmp    %ecx,0x809e004
jb     806c950 <fchmod@plt+0x219b0>
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <memcpy@plt>
cmp    $0x2,%edi
je     806c980 <fchmod@plt+0x219e0>
jbe    806c930 <fchmod@plt+0x21990>
cmp    $0x3,%edi
je     806c900 <fchmod@plt+0x21960>
cmp    $0x4,%edi
nop
jne    806c8f2 <fchmod@plt+0x21952>
add    %ebx,%esi
cmp    %ebx,%esi
jbe    806c8f2 <fchmod@plt+0x21952>
call   804af40 <__ctype_tolower_loc@plt>
mov    %ebx,%edx
nop
movzbl (%edx),%ecx
add    $0x1,%edx
mov    (%eax),%edi
mov    (%edi,%ecx,4),%ecx
mov    %cl,-0x1(%edx)
cmp    %esi,%edx
jne    806c8e0 <fchmod@plt+0x21940>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    %ebx,%esi
cmp    %ebx,%esi
jbe    806c8f2 <fchmod@plt+0x21952>
call   804a350 <__ctype_toupper_loc@plt>
mov    %ebx,%edx
lea    0x0(%esi),%esi
movzbl (%edx),%ecx
add    $0x1,%edx
mov    (%eax),%edi
mov    (%edi,%ecx,4),%ecx
mov    %cl,-0x1(%edx)
cmp    %esi,%edx
jne    806c910 <fchmod@plt+0x21970>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edi
jne    806c8f2 <fchmod@plt+0x21952>
call   804a350 <__ctype_toupper_loc@plt>
movzbl (%ebx),%edx
mov    (%eax),%eax
mov    (%eax,%edx,4),%eax
mov    %al,(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x809e000,%eax
mov    %ecx,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x809e004
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0xc(%esp),%edx
mov    %eax,0x809e000
mov    %eax,%ebx
jmp    806c8ac <fchmod@plt+0x2190c>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804af40 <__ctype_tolower_loc@plt>
movzbl (%ebx),%edx
mov    (%eax),%eax
mov    (%eax,%edx,4),%eax
mov    %al,(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
cmpb   $0x0,(%eax)
je     806c9ba <fchmod@plt+0x21a1a>
lea    0x0(%esi,%eiz,1),%esi
call   806c180 <fchmod@plt+0x211e0>
cmpb   $0x0,(%eax)
jne    806c9b0 <fchmod@plt+0x21a10>
add    $0xc,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpb   $0x0,0x809e008
mov    (%eax),%ebp
je     806cf1a <fchmod@plt+0x21f7a>
mov    0x809e050,%edi
test   %edi,%edi
je     806ce8c <fchmod@plt+0x21eec>
xor    %ebx,%ebx
jmp    806c9fa <fchmod@plt+0x21a5a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edi
test   %edi,%edi
je     806cb99 <fchmod@plt+0x21bf9>
mov    0x8(%edi),%eax
test   %eax,0x54(%esp)
je     806c9f0 <fchmod@plt+0x21a50>
mov    0x28(%edi),%eax
lea    0x8(,%eax,8),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
mov    %eax,0x14(%esp)
lea    0x10(%edi),%eax
mov    %eax,0x1c(%esp)
cmpb   $0x0,0x0(%ebp)
je     806cb00 <fchmod@plt+0x21b60>
mov    0x14(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%edi),%eax
mov    %ebp,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804ab30 <regexec@plt>
test   %eax,%eax
jne    806cbf8 <fchmod@plt+0x21c58>
mov    0x14(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
test   %ebx,%ebx
mov    %esi,0x18(%esp)
je     806caaf <fchmod@plt+0x21b0f>
mov    0x809e02c,%eax
lea    (%eax,%ebx,1),%edx
cmp    %edx,0x809e030
jb     806ce58 <fchmod@plt+0x21eb8>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    %ebx,0x809e02c
mov    0xc(%edi),%eax
addl   $0x1,0x20(%esp)
test   %eax,%eax
je     806cc80 <fchmod@plt+0x21ce0>
cmp    %eax,0x20(%esp)
jae    806cc80 <fchmod@plt+0x21ce0>
mov    0x809e02c,%eax
lea    (%eax,%esi,1),%edx
cmp    %edx,0x809e030
jb     806ce72 <fchmod@plt+0x21ed2>
mov    %ebp,0x4(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    %esi,0x809e02c
cmpb   $0x0,0x0(%ebp)
jne    806ca42 <fchmod@plt+0x21aa2>
nop
mov    0x809e02c,%eax
lea    0x1(%eax),%edx
cmp    0x809e030,%edx
jbe    806cb2c <fchmod@plt+0x21b8c>
movl   $0x1,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%eax
lea    0x1(%eax),%edx
mov    %edx,0x809e02c
movb   $0x0,(%eax)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809e028,%ebp
mov    0x809e02c,%eax
cmp    %eax,%ebp
je     806cef4 <fchmod@plt+0x21f54>
mov    0x809e038,%edx
mov    0x809e024,%ecx
add    %edx,%eax
not    %edx
and    %edx,%eax
mov    0x809e030,%edx
mov    %eax,%ebx
sub    %ecx,%ebx
mov    %eax,0x809e02c
mov    %edx,%esi
sub    %ecx,%esi
cmp    %esi,%ebx
jle    806cb85 <fchmod@plt+0x21be5>
mov    %edx,0x809e02c
mov    %edx,%eax
mov    (%edi),%edi
mov    $0x1,%ebx
mov    %eax,0x809e028
test   %edi,%edi
jne    806c9fa <fchmod@plt+0x21a5a>
test   %bl,%bl
je     806ce8c <fchmod@plt+0x21eec>
mov    0x58(%esp),%edx
mov    %ebp,%eax
test   %edx,%edx
je     806cbba <fchmod@plt+0x21c1a>
mov    0x5c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x58(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
cmp    %ebp,0x809e024
jae    806ceda <fchmod@plt+0x21f3a>
cmp    %ebp,0x809e030
jbe    806ceda <fchmod@plt+0x21f3a>
mov    %ebp,0x809e028
mov    %ebp,0x809e02c
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebx
mov    %eax,0x18(%esp)
mov    0x809e02c,%eax
lea    (%eax,%ebx,1),%edx
cmp    %edx,0x809e030
jb     806cde8 <fchmod@plt+0x21e48>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    %ebx,0x809e02c
mov    0x4(%edi),%ecx
add    0x18(%esp),%ebp
test   %ecx,%ecx
jne    806ca38 <fchmod@plt+0x21a98>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebx
mov    0x809e02c,%eax
lea    (%eax,%ebx,1),%edx
cmp    %edx,0x809e030
jb     806cf00 <fchmod@plt+0x21f60>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x809e02c,%eax
add    %ebx,%eax
mov    %eax,0x809e02c
jmp    806cb05 <fchmod@plt+0x21b65>
xchg   %ax,%ax
mov    0x30(%edi),%ebx
test   %ebx,%ebx
je     806cc30 <fchmod@plt+0x21c90>
mov    %edi,0x28(%esp)
mov    0x24(%esp),%edi
jmp    806ccee <fchmod@plt+0x21d4e>
lea    0x0(%esi,%eiz,1),%esi
jb     806cd60 <fchmod@plt+0x21dc0>
cmp    $0x2,%eax
jne    806cce8 <fchmod@plt+0x21d48>
mov    0x8(%ebx),%eax
cmp    $0x4,%eax
ja     806cce8 <fchmod@plt+0x21d48>
mov    $0x1,%edx
mov    %eax,%ecx
shl    %cl,%edx
test   $0x19,%dl
jne    806cd98 <fchmod@plt+0x21df8>
and    $0x6,%edx
je     806cce8 <fchmod@plt+0x21d48>
cmpl   $0x4,0x2c(%esp)
ja     806cd98 <fchmod@plt+0x21df8>
movzbl 0x2c(%esp),%ecx
mov    $0x1,%edx
shl    %cl,%edx
and    $0x19,%edx
je     806cd98 <fchmod@plt+0x21df8>
mov    %edi,0x2c(%esp)
mov    %eax,%edi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     806cd50 <fchmod@plt+0x21db0>
mov    0x4(%ebx),%eax
cmp    $0x1,%eax
jne    806cc98 <fchmod@plt+0x21cf8>
mov    0x8(%ebx),%eax
mov    0x14(%esp),%ecx
lea    (%ecx,%eax,8),%edx
mov    (%edx),%eax
cmp    $0xffffffff,%eax
je     806cce8 <fchmod@plt+0x21d48>
mov    0x4(%edx),%esi
cmp    $0xffffffff,%esi
je     806cce8 <fchmod@plt+0x21d48>
sub    %eax,%esi
add    %ebp,%eax
test   %edi,%edi
jne    806ce30 <fchmod@plt+0x21e90>
mov    0x809e02c,%ecx
lea    (%ecx,%esi,1),%edx
cmp    %edx,0x809e030
jb     806ce08 <fchmod@plt+0x21e68>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804a4e0 <memcpy@plt>
mov    (%ebx),%ebx
add    %esi,0x809e02c
test   %ebx,%ebx
jne    806ccee <fchmod@plt+0x21d4e>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x24(%esp)
mov    0x28(%esp),%edi
jmp    806cc30 <fchmod@plt+0x21c90>
lea    0x0(%esi),%esi
test   %edi,%edi
jne    806cdc0 <fchmod@plt+0x21e20>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%esi
mov    0x809e02c,%edx
lea    (%edx,%esi,1),%ecx
cmp    %ecx,0x809e030
jb     806cda0 <fchmod@plt+0x21e00>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804a4e0 <memcpy@plt>
add    %esi,0x809e02c
jmp    806cce8 <fchmod@plt+0x21d48>
xchg   %ax,%ax
mov    %eax,%edi
jmp    806cce8 <fchmod@plt+0x21d48>
nop
mov    %esi,0x4(%esp)
movl   $0x809e020,(%esp)
mov    %eax,0x24(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%edx
mov    0x24(%esp),%eax
jmp    806cd7b <fchmod@plt+0x21ddb>
mov    0x8(%ebx),%edx
mov    %edi,%eax
mov    0xc(%ebx),%ecx
call   806c890 <fchmod@plt+0x218f0>
lea    -0x1(%edi),%edx
cmp    $0x1,%edx
ja     806cd67 <fchmod@plt+0x21dc7>
mov    0x2c(%esp),%edi
movl   $0x0,0x2c(%esp)
jmp    806cd67 <fchmod@plt+0x21dc7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%eax
jmp    806cc1a <fchmod@plt+0x21c7a>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x809e020,(%esp)
mov    %eax,0x24(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%ecx
mov    0x24(%esp),%eax
jmp    806cd30 <fchmod@plt+0x21d90>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %esi,%ecx
mov    %edi,%eax
call   806c890 <fchmod@plt+0x218f0>
lea    -0x1(%edi),%edx
cmp    $0x1,%edx
ja     806cd1b <fchmod@plt+0x21d7b>
mov    0x2c(%esp),%edi
movl   $0x0,0x2c(%esp)
jmp    806cd1b <fchmod@plt+0x21d7b>
mov    %ebx,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%eax
jmp    806ca99 <fchmod@plt+0x21af9>
mov    %esi,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%eax
jmp    806cadd <fchmod@plt+0x21b3d>
mov    0x58(%esp),%eax
xor    %ebx,%ebx
test   %eax,%eax
je     806cbee <fchmod@plt+0x21c4e>
mov    0x50(%esp),%eax
mov    $0x1,%ebx
movl   $0x0,(%eax)
mov    0x5c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x58(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8062250 <fchmod@plt+0x172b0>
mov    %ebp,(%esp)
call   804a4c0 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a6b0 <obstack_free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
orb    $0x2,0x809e048
jmp    806cb54 <fchmod@plt+0x21bb4>
mov    %ebx,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x809e02c,%eax
jmp    806cc5d <fchmod@plt+0x21cbd>
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x809e020,(%esp)
call   804a640 <_obstack_begin@plt>
movb   $0x1,0x809e008
jmp    806c9da <fchmod@plt+0x21a3a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806c9c0 <fchmod@plt+0x21a20>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e050,%eax
test   %eax,%eax
setne  %al
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e060,%ebp
mov    %al,0x1b(%esp)
mov    0x809e2c4,%eax
test   %ebp,%ebp
mov    %eax,0x1c(%esp)
je     806d110 <fchmod@plt+0x22170>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1b(%esp)
mov    0x0(%ebp),%ebx
jne    806cff0 <fchmod@plt+0x22050>
mov    0x809e264,%edx
cmp    %edx,0x14(%ebp)
mov    0x10(%ebp),%eax
jg     806d068 <fchmod@plt+0x220c8>
jl     806cff0 <fchmod@plt+0x22050>
cmp    0x809e260,%eax
jae    806d068 <fchmod@plt+0x220c8>
xchg   %ax,%ax
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
cmpb   $0x0,0xc(%ebp)
je     806d0c8 <fchmod@plt+0x22128>
mov    0x8(%ebp),%esi
movzbl (%esi),%eax
test   %al,%al
je     806d019 <fchmod@plt+0x22079>
cmp    $0x2e,%al
jne    806d02e <fchmod@plt+0x2208e>
cmpb   $0x0,0x1(%esi)
jne    806d02e <fchmod@plt+0x2208e>
call   80632e0 <fchmod@plt+0x18340>
mov    %eax,%esi
mov    0x4(%ebp),%eax
sub    $0x1,%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
mov    0x809c3f8,%eax
movl   $0x200,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a470 <unlinkat@plt>
test   %eax,%eax
je     806d080 <fchmod@plt+0x220e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
je     806d080 <fchmod@plt+0x220e0>
cmp    $0x27,%eax
jne    806d078 <fchmod@plt+0x220d8>
cmpb   $0x0,0x1b(%esp)
jne    806d078 <fchmod@plt+0x220d8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edi
test   %ebx,%ebx
je     806d0aa <fchmod@plt+0x2210a>
mov    %ebx,%ebp
jmp    806cfc8 <fchmod@plt+0x22028>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   806f8b0 <fchmod@plt+0x24910>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x809e054,%eax
subl   $0x1,0x809e058
test   %edi,%edi
mov    %ebp,0x809e054
mov    %eax,0x0(%ebp)
je     806d100 <fchmod@plt+0x22160>
test   %ebx,%ebx
mov    %ebx,(%edi)
jne    806d06e <fchmod@plt+0x220ce>
mov    0x809e060,%eax
test   %eax,%eax
je     806d110 <fchmod@plt+0x22170>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x0,0x8(%esp)
mov    0x8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a470 <unlinkat@plt>
test   %eax,%eax
je     806d080 <fchmod@plt+0x220e0>
call   804aaf0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     806d080 <fchmod@plt+0x220e0>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   806fbc0 <fchmod@plt+0x24c20>
jmp    806d080 <fchmod@plt+0x220e0>
nop
mov    %ebx,0x809e060
jmp    806d06a <fchmod@plt+0x220ca>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x809e05c
00
jmp    806d0b3 <fchmod@plt+0x22113>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x1,%eax
sub    $0x18,%esp
call   806cfa0 <fchmod@plt+0x22000>
mov    0x809e054,%eax
test   %eax,%eax
jne    806d142 <fchmod@plt+0x221a2>
jmp    806d156 <fchmod@plt+0x221b6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    (%eax),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
mov    %ebx,0x809e054
jne    806d140 <fchmod@plt+0x221a0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809e060,%eax
mov    0x24(%esp),%esi
test   %eax,%eax
je     806d180 <fchmod@plt+0x221e0>
mov    0x809e264,%ecx
cmp    %ecx,0x14(%eax)
mov    0x10(%eax),%edx
jle    806d1f8 <fchmod@plt+0x22258>
mov    0x809e054,%ebx
test   %ebx,%ebx
je     806d21b <fchmod@plt+0x2227b>
mov    (%ebx),%eax
movl   $0x0,(%ebx)
mov    %eax,0x809e054
mov    0x809e2c4,%eax
movl   $0x0,(%ebx)
mov    %eax,0x4(%ebx)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x8(%ebx)
mov    %eax,(%esp)
call   8062490 <fchmod@plt+0x174f0>
mov    %esi,%eax
mov    0x809e264,%edx
mov    %al,0xc(%ebx)
mov    0x809e260,%eax
mov    %edx,0x14(%ebx)
mov    %eax,0x10(%ebx)
mov    0x809e05c,%eax
test   %eax,%eax
je     806d230 <fchmod@plt+0x22290>
mov    %ebx,(%eax)
mov    %ebx,0x809e05c
addl   $0x1,0x809e058
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
jl     806d206 <fchmod@plt+0x22266>
cmp    0x809e260,%edx
jae    806d180 <fchmod@plt+0x221e0>
xor    %eax,%eax
call   806cfa0 <fchmod@plt+0x22000>
mov    0x809e054,%ebx
test   %ebx,%ebx
jne    806d18e <fchmod@plt+0x221ee>
movl   $0x18,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebx
jmp    806d19b <fchmod@plt+0x221fb>
xchg   %ax,%ax
mov    %ebx,0x809e060
jmp    806d1e1 <fchmod@plt+0x22241>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0xac,%esp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   8064c20 <fchmod@plt+0x19c80>
movl   $0x2,(%esp)
call   804f110 <fchmod@plt+0x4170>
call   804c730 <fchmod@plt+0x1790>
movl   $0x0,0x8(%esp)
movl   $0x809e320,0x4(%esp)
movl   $0x809e2b8,(%esp)
call   8060660 <fchmod@plt+0x156c0>
cmp    $0x5,%eax
mov    %eax,%esi
ja     806d3e5 <fchmod@plt+0x22445>
jmp    *0x808cbf4(,%eax,4)
nop
mov    0x809e2b8,%eax
mov    %eax,0x809e288
movl   $0x809e320,(%esp)
call   806bee0 <fchmod@plt+0x20f40>
call   804cc30 <fchmod@plt+0x1c90>
mov    0x809e288,%eax
movb   $0x1,0x809e550
mov    %eax,0x809e554
call   80659b0 <fchmod@plt+0x1aa10>
test   %eax,%eax
je     806d323 <fchmod@plt+0x22383>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8065ae0 <fchmod@plt+0x1ab40>
test   %al,%al
jne    806d2cc <fchmod@plt+0x2232c>
cmpb   $0x0,0x809e448
jne    806d470 <fchmod@plt+0x224d0>
cmpl   $0x2,0x809e500
je     806d498 <fchmod@plt+0x224f8>
mov    0x1c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
call   8053a50 <fchmod@plt+0x8ab0>
call   80659b0 <fchmod@plt+0x1aa10>
test   %eax,%eax
jne    806d2d5 <fchmod@plt+0x22335>
call   8052190 <fchmod@plt+0x71f0>
call   804d910 <fchmod@plt+0x2970>
lea    0x0(%esi),%esi
call   806d120 <fchmod@plt+0x22180>
call   8065250 <fchmod@plt+0x1a2b0>
mov    0x9c(%esp),%eax
xor    %gs:0x14,%eax
jne    806d7a7 <fchmod@plt+0x22807>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    0x809e2b8,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    $0x4,%ebx
ja     806d3e5 <fchmod@plt+0x22445>
jmp    *0x808cc0c(,%ebx,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e2b8,%eax
movl   $0x0,0xc(%esp)
movl   $0x809e2ac,0x8(%esp)
movl   $0x809e320,0x4(%esp)
mov    %eax,(%esp)
call   8060130 <fchmod@plt+0x15190>
mov    0x809e2b8,%eax
movl   $0x809e320,0x4(%esp)
movsbl 0x9c(%eax),%eax
mov    %eax,(%esp)
call   805ffa0 <fchmod@plt+0x15000>
mov    0x809e2ac,%eax
cmpl   $0x8,0x809e500
mov    %eax,0x809e4e4
je     806d5b8 <fchmod@plt+0x22618>
call   8062100 <fchmod@plt+0x17160>
movl   $0x809e320,(%esp)
mov    %esi,%ebx
call   806bee0 <fchmod@plt+0x20f40>
jmp    806d271 <fchmod@plt+0x222d1>
movl   $0x5,0x8(%esp)
movl   $0x80866cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x5,0x8(%esp)
movl   $0x80873f9,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
jmp    806d3e5 <fchmod@plt+0x22445>
nop
mov    0x1c(%esp),%eax
movl   $0x80870ed,(%esp)
mov    %eax,0x4(%esp)
call   806a220 <fchmod@plt+0x1f280>
test   %eax,%eax
je     806d2cc <fchmod@plt+0x2232c>
jmp    806d2f5 <fchmod@plt+0x22355>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   804a9a0 <openat64@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
js     806d659 <fchmod@plt+0x226b9>
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
jne    806d648 <fchmod@plt+0x226a8>
mov    0x54(%esp),%edi
mov    0x50(%esp),%esi
cmp    $0x0,%edi
jle    806d66a <fchmod@plt+0x226ca>
xchg   %ax,%ax
call   804d410 <fchmod@plt+0x2470>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804cd40 <fchmod@plt+0x1da0>
xor    %edx,%edx
cmp    %edi,%edx
mov    %eax,%ebp
jl     806d520 <fchmod@plt+0x22580>
jg     806d515 <fchmod@plt+0x22575>
cmp    %esi,%eax
jbe    806d520 <fchmod@plt+0x22580>
mov    %esi,%eax
mov    %esi,%ebp
and    $0x1ff,%eax
jne    806d590 <fchmod@plt+0x225f0>
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0xffffffff,%eax
je     806d70f <fchmod@plt+0x2276f>
test   %eax,%eax
je     806d733 <fchmod@plt+0x22793>
xor    %ecx,%ecx
sub    %eax,%esi
sbb    %ecx,%edi
sub    $0x1,%eax
and    $0xfffffe00,%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   804cc70 <fchmod@plt+0x1cd0>
cmp    $0x0,%edi
jl     806d569 <fchmod@plt+0x225c9>
jg     806d4f8 <fchmod@plt+0x22558>
cmp    $0x0,%esi
ja     806d4f8 <fchmod@plt+0x22558>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
je     806d2cc <fchmod@plt+0x2232c>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806f480 <fchmod@plt+0x244e0>
jmp    806d2cc <fchmod@plt+0x2232c>
xchg   %ax,%ax
mov    $0x200,%edx
sub    %eax,%edx
lea    (%ebx,%esi,1),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
jmp    806d520 <fchmod@plt+0x22580>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8065950 <fchmod@plt+0x1a9b0>
test   %eax,%eax
mov    %eax,%edi
je     806d3e0 <fchmod@plt+0x22440>
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x18380>
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x809e324,%eax
mov    %eax,(%esp)
call   8063110 <fchmod@plt+0x18170>
test   %eax,%eax
jne    806d3e0 <fchmod@plt+0x22440>
mov    0x34(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     806d675 <fchmod@plt+0x226d5>
mov    0x6c(%esp),%eax
mov    0x809e3b4,%ecx
mov    0x809e3b8,%ebx
mov    %eax,(%esp)
mov    0x70(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
call   806bff0 <fchmod@plt+0x21050>
test   %eax,%eax
jg     806d3e0 <fchmod@plt+0x22440>
mov    %edi,(%esp)
call   8065000 <fchmod@plt+0x1a060>
nop
jmp    806d3e0 <fchmod@plt+0x22440>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806fb40 <fchmod@plt+0x24ba0>
jmp    806d569 <fchmod@plt+0x225c9>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806f5c0 <fchmod@plt+0x24620>
jmp    806d2cc <fchmod@plt+0x2232c>
jge    806d564 <fchmod@plt+0x225c4>
jmp    806d569 <fchmod@plt+0x225c9>
movl   $0x1,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8063a10 <fchmod@plt+0x18a70>
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x18(%esp)
je     806d3e0 <fchmod@plt+0x22440>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   80636e0 <fchmod@plt+0x18740>
cmpb   $0x0,0x0(%ebp)
mov    %eax,%ebx
je     806d6ee <fchmod@plt+0x2274e>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8063760 <fchmod@plt+0x187c0>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8064bb0 <fchmod@plt+0x19c10>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebp
cmpb   $0x0,0x0(%ebp)
jne    806d6b0 <fchmod@plt+0x22710>
mov    %ebx,(%esp)
call   8063740 <fchmod@plt+0x187a0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %edi,(%esp)
call   8065000 <fchmod@plt+0x1a060>
jmp    806d3e0 <fchmod@plt+0x22440>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
mov    %ebp,0xc(%esp)
sub    %esi,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
sbb    %edi,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806f7d0 <fchmod@plt+0x24830>
lea    0x87(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %eax,%edi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x808cbbb,0x8(%esp)
movl   $0x808cbd7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   804aee0 <dcngettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%esi
movzbl %al,%edi
mov    0x809d634(,%edi,4),%ebx
cmp    $0xffffffff,%ebx
je     806d848 <fchmod@plt+0x228a8>
test   %ebx,%ebx
je     806d8a0 <fchmod@plt+0x22900>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    $0x1,%eax
mov    %eax,0x28(%esp)
shl    $0x4,%eax
add    $0x1,%eax
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x48(%esp),%ecx
mov    %esi,0x20(%esp)
mov    %eax,(%ecx)
mov    %eax,0x24(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a990 <iconv@plt>
mov    0x24(%esp),%edx
movb   $0x0,(%edx)
cmp    $0xffffffff,%eax
setne  %al
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    806d880 <fchmod@plt+0x228e0>
call   807c270 <argp_parse+0x4330>
movl   $0x808cc20,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <iconv_open@plt>
mov    %eax,0x809d634(,%edi,4)
mov    %eax,%ebx
test   %ebx,%ebx
je     806d8a0 <fchmod@plt+0x22900>
xor    %eax,%eax
cmp    $0xffffffff,%ebx
jne    806d7d8 <fchmod@plt+0x22838>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   807c270 <argp_parse+0x4330>
movl   $0x808cc20,(%esp)
mov    %eax,0x4(%esp)
call   804ae80 <iconv_open@plt>
mov    %eax,0x809d634(,%edi,4)
mov    %eax,%ebx
jmp    806d86a <fchmod@plt+0x228ca>
mov    %esi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    0x48(%esp),%edx
mov    %eax,(%edx)
mov    $0x1,%eax
jmp    806d83c <fchmod@plt+0x2289c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
cmpb   $0x0,(%eax)
je     806d8da <fchmod@plt+0x2293a>
lea    0x0(%esi,%eiz,1),%esi
js     806d8e0 <fchmod@plt+0x22940>
add    $0x1,%eax
cmpb   $0x0,(%eax)
jne    806d8d0 <fchmod@plt+0x22930>
mov    $0x1,%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    $0x5,%ecx
push   %esi
mov    $0x808cc26,%edi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     806d9c8 <fchmod@plt+0x22a28>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmp    $0x2,%eax
ja     806d960 <fchmod@plt+0x229c0>
mov    0x809d794,%eax
mov    %ebx,0x4(%esp)
movl   $0x4,0x10(%esp)
movl   $0x809d660,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x808cd80,0x8(%esp)
movl   $0x808cc2f,(%esp)
call   8074670 <fchmod@plt+0x296d0>
mov    0x809d660(,%eax,4),%eax
or     %eax,0x809d640
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x3,0x8(%esp)
movl   $0x808cc2b,0x4(%esp)
mov    %ebx,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    806d91b <fchmod@plt+0x2297b>
mov    0x809d794,%eax
add    $0x3,%ebx
mov    %ebx,0x4(%esp)
movl   $0x4,0x10(%esp)
movl   $0x809d660,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x808cd80,0x8(%esp)
movl   $0x808cc2f,(%esp)
call   8074670 <fchmod@plt+0x296d0>
mov    0x809d660(,%eax,4),%eax
not    %eax
and    %eax,0x809d640
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x0,0x809d640
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
cmp    $0xffffff9c,%ebx
je     806daf8 <fchmod@plt+0x22b58>
cmpb   $0x2f,(%edx)
je     806daf8 <fchmod@plt+0x22b58>
lea    0x2c(%esp),%edi
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
je     806daa8 <fchmod@plt+0x22b08>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f650 <argp_parse+0x7710>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%ecx
cmp    %edi,%ecx
mov    (%eax),%edx
je     806da64 <fchmod@plt+0x22ac4>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     806da90 <fchmod@plt+0x22af0>
mov    0x14(%esp),%ebp
mov    0xfec(%esp),%esi
xor    %gs:0x14,%esi
mov    %ebp,%eax
jne    806dbad <fchmod@plt+0x22c0d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x14,%edx
je     806daa8 <fchmod@plt+0x22b08>
lea    -0x1(%edx),%ecx
cmp    $0x1,%ecx
ja     806db58 <fchmod@plt+0x22bb8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    806dbb2 <fchmod@plt+0x22c12>
test   %ebx,%ebx
js     806daca <fchmod@plt+0x22b2a>
cmp    %ebx,0x24(%esp)
je     806db90 <fchmod@plt+0x22bf0>
mov    %ebx,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     806db10 <fchmod@plt+0x22b70>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    806da6f <fchmod@plt+0x22acf>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %esi,0x4(%esp)
call   807f650 <argp_parse+0x7710>
mov    %eax,%ebp
jmp    806da6f <fchmod@plt+0x22acf>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
call   807f650 <argp_parse+0x7710>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     806db80 <fchmod@plt+0x22be0>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    806dbc1 <fchmod@plt+0x22c21>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     806da6f <fchmod@plt+0x22acf>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jmp    806da6f <fchmod@plt+0x22acf>
lea    0x0(%esi),%esi
cmp    $0xd,%edx
je     806daa8 <fchmod@plt+0x22b08>
cmp    $0x26,%edx
je     806daa8 <fchmod@plt+0x22b08>
cmp    $0x5f,%edx
je     806daa8 <fchmod@plt+0x22b08>
mov    %edx,(%eax)
jmp    806da6b <fchmod@plt+0x22acb>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    806db25 <fchmod@plt+0x22b85>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    806da6f <fchmod@plt+0x22acf>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
cmp    $0xffffff9c,%ebx
mov    0x1010(%esp),%edi
mov    %ecx,0x10(%esp)
je     806dd00 <fchmod@plt+0x22d60>
cmpb   $0x2f,(%edx)
je     806dd00 <fchmod@plt+0x22d60>
lea    0x2c(%esp),%ebp
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%ecx
je     806dcb0 <fchmod@plt+0x22d10>
mov    0x10(%esp),%eax
mov    %ecx,(%esp)
mov    %edi,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x4(%esp)
call   804a810 <acl_set_file@plt>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%ecx
cmp    %ebp,%ecx
mov    (%eax),%edx
je     806dc6b <fchmod@plt+0x22ccb>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     806dc98 <fchmod@plt+0x22cf8>
mov    0x14(%esp),%ebx
mov    0xfec(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    806ddc5 <fchmod@plt+0x22e25>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x14,%edx
je     806dcb0 <fchmod@plt+0x22d10>
lea    -0x1(%edx),%ecx
cmp    $0x1,%ecx
ja     806dd70 <fchmod@plt+0x22dd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    806ddca <fchmod@plt+0x22e2a>
test   %ebx,%ebx
js     806dcd2 <fchmod@plt+0x22d32>
cmp    %ebx,0x24(%esp)
je     806dda8 <fchmod@plt+0x22e08>
mov    %ebx,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     806dd20 <fchmod@plt+0x22d80>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
mov    $0xffffffff,%ebx
jmp    806dc76 <fchmod@plt+0x22cd6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a810 <acl_set_file@plt>
mov    %eax,%ebx
jmp    806dc76 <fchmod@plt+0x22cd6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %esi,(%esp)
xor    %esi,%esi
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a810 <acl_set_file@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     806dd98 <fchmod@plt+0x22df8>
mov    %ebp,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    806ddd9 <fchmod@plt+0x22e39>
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     806dc76 <fchmod@plt+0x22cd6>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
jmp    806dc76 <fchmod@plt+0x22cd6>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xd,%edx
je     806dcb0 <fchmod@plt+0x22d10>
cmp    $0x26,%edx
je     806dcb0 <fchmod@plt+0x22d10>
cmp    $0x5f,%edx
je     806dcb0 <fchmod@plt+0x22d10>
mov    %edx,(%eax)
lea    0x0(%esi),%esi
jmp    806dc72 <fchmod@plt+0x22cd2>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
nop
jmp    806dd3d <fchmod@plt+0x22d9d>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%ebx
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    806dc76 <fchmod@plt+0x22cd6>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xffc,%esp
lea    0x2c(%esp),%ebx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    %ecx,0x1c(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     806dea0 <fchmod@plt+0x22f00>
mov    %edx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x14(%esp)
call   804aa30 <acl_get_file@plt>
mov    %eax,%edi
call   804aaf0 <__errno_location@plt>
mov    0x14(%esp),%edx
cmp    %ebx,%edx
mov    (%eax),%ecx
mov    %ecx,0x18(%esp)
je     806de62 <fchmod@plt+0x22ec2>
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
call   804a4c0 <free@plt>
mov    0x14(%esp),%eax
test   %edi,%edi
je     806de88 <fchmod@plt+0x22ee8>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    806df86 <fchmod@plt+0x22fe6>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpl   $0x14,0x18(%esp)
je     806dea0 <fchmod@plt+0x22f00>
mov    0x18(%esp),%ecx
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     806df38 <fchmod@plt+0x22f98>
nop
lea    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    806df8b <fchmod@plt+0x22feb>
test   %esi,%esi
js     806dec2 <fchmod@plt+0x22f22>
cmp    0x24(%esp),%esi
je     806df60 <fchmod@plt+0x22fc0>
mov    %esi,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
jne    806df18 <fchmod@plt+0x22f78>
mov    0x1c(%esp),%eax
xor    %esi,%esi
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804aa30 <acl_get_file@plt>
test   %eax,%eax
mov    %eax,%edi
je     806df7a <fchmod@plt+0x22fda>
mov    %ebx,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    806df9f <fchmod@plt+0x22fff>
mov    %ebx,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     806de66 <fchmod@plt+0x22ec6>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
jmp    806de66 <fchmod@plt+0x22ec6>
xchg   %ax,%ax
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %edi,(%esi)
xor    %edi,%edi
jmp    806de66 <fchmod@plt+0x22ec6>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     806dea0 <fchmod@plt+0x22f00>
cmp    $0x26,%ecx
je     806dea0 <fchmod@plt+0x22f00>
cmp    $0x5f,%ecx
je     806dea0 <fchmod@plt+0x22f00>
mov    %ecx,(%eax)
jmp    806de66 <fchmod@plt+0x22ec6>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
xor    %edi,%edi
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    806de66 <fchmod@plt+0x22ec6>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
jmp    806deea <fchmod@plt+0x22f4a>
call   804a610 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
xchg   %ax,%ax
sub    $0x1c,%esp
cmp    $0xffffff9c,%eax
je     806dfc8 <fchmod@plt+0x23028>
cmpb   $0x2f,(%edx)
je     806dfc8 <fchmod@plt+0x23028>
add    $0x1c,%esp
jmp    806ddf0 <fchmod@plt+0x22e50>
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   804aa30 <acl_get_file@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%esi
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
mov    %esi,%ebp
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %gs:0x14,%esi
mov    %esi,0x4c(%esp)
xor    %esi,%esi
test   %ebp,%ebp
je     806e218 <fchmod@plt+0x23278>
movzbl 0x0(%ebp),%eax
test   %al,%al
je     806e0a9 <fchmod@plt+0x23109>
lea    0x0(%esi,%eiz,1),%esi
movsbl %al,%edx
cmp    $0x3a,%edx
je     806e11c <fchmod@plt+0x2317c>
cmp    $0x2c,%edx
je     806e11c <fchmod@plt+0x2317c>
cmp    $0xa,%edx
je     806e11c <fchmod@plt+0x2317c>
lea    0x1(%ebp),%edx
jmp    806e069 <fchmod@plt+0x230c9>
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl %al,%ecx
cmp    $0x3a,%ecx
je     806e120 <fchmod@plt+0x23180>
cmp    $0x2c,%ecx
je     806e120 <fchmod@plt+0x23180>
add    $0x1,%edx
cmp    $0xa,%ecx
je     806e120 <fchmod@plt+0x23180>
movzbl (%edx),%eax
mov    %edx,%ebx
test   %al,%al
jne    806e048 <fchmod@plt+0x230a8>
mov    %ebx,%esi
sub    %ebp,%esi
cmp    %edi,%ebp
je     806e08a <fchmod@plt+0x230ea>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804a4b0 <memmove@plt>
movzbl (%ebx),%eax
add    %esi,%edi
cmp    $0x3a,%al
je     806e1e8 <fchmod@plt+0x23248>
cmp    $0x2c,%al
je     806e10f <fchmod@plt+0x2316f>
cmp    $0xa,%al
je     806e10f <fchmod@plt+0x2316f>
mov    %ebx,%ebp
test   %al,%al
jne    806e020 <fchmod@plt+0x23080>
cmp    %edi,%ebp
je     806e0b0 <fchmod@plt+0x23110>
movb   $0x0,(%edi)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804adb0 <acl_from_text@plt>
movl   $0x1,0x809e518
00
mov    %eax,%ebx
test   %ebx,%ebx
je     806e2d0 <fchmod@plt+0x23330>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    0x809c3f8,%eax
mov    %ebx,(%esp)
call   806dbd0 <fchmod@plt+0x22c30>
cmp    $0xffffffff,%eax
je     806e2e9 <fchmod@plt+0x23349>
mov    %ebx,(%esp)
call   804af70 <acl_free@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    806e34e <fchmod@plt+0x233ae>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %al,(%edi)
lea    0x1(%ebx),%ebp
add    $0x1,%edi
jmp    806e010 <fchmod@plt+0x23070>
mov    %ebp,%ebx
xchg   %ax,%ax
cmp    $0x3a,%al
jne    806e072 <fchmod@plt+0x230d2>
movzbl 0x1(%ebx),%edx
lea    0x1(%ebx),%ecx
test   %dl,%dl
je     806e347 <fchmod@plt+0x233a7>
movsbl %dl,%eax
cmp    $0x3a,%eax
je     806e178 <fchmod@plt+0x231d8>
cmp    $0x2c,%eax
je     806e178 <fchmod@plt+0x231d8>
cmp    $0xa,%eax
je     806e178 <fchmod@plt+0x231d8>
add    $0x2,%ebx
jmp    806e165 <fchmod@plt+0x231c5>
xchg   %ax,%ax
movsbl %dl,%eax
cmp    $0x3a,%eax
je     806e17a <fchmod@plt+0x231da>
cmp    $0x2c,%eax
je     806e17a <fchmod@plt+0x231da>
add    $0x1,%ebx
cmp    $0xa,%eax
je     806e178 <fchmod@plt+0x231d8>
movzbl (%ebx),%edx
mov    %ebx,%ecx
test   %dl,%dl
jne    806e150 <fchmod@plt+0x231b0>
jmp    806e072 <fchmod@plt+0x230d2>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%ebx
cmp    $0x3a,%dl
jne    806e072 <fchmod@plt+0x230d2>
movsbl 0x1(%ebx),%eax
lea    0x1(%ebx),%ecx
test   %al,%al
je     806e33c <fchmod@plt+0x2339c>
cmp    $0x3a,%eax
je     806e33c <fchmod@plt+0x2339c>
cmp    $0x2c,%eax
je     806e33c <fchmod@plt+0x2339c>
cmp    $0xa,%eax
lea    0x2(%ebx),%edx
jne    806e1d6 <fchmod@plt+0x23236>
jmp    806e33c <fchmod@plt+0x2339c>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3a,%eax
je     806e072 <fchmod@plt+0x230d2>
cmp    $0x2c,%eax
je     806e072 <fchmod@plt+0x230d2>
cmp    $0xa,%eax
lea    0x1(%edx),%edx
je     806e072 <fchmod@plt+0x230d2>
movsbl (%edx),%eax
mov    %edx,%ebx
test   %al,%al
jne    806e1b8 <fchmod@plt+0x23218>
jmp    806e072 <fchmod@plt+0x230d2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ebx),%edx
jmp    806e208 <fchmod@plt+0x23268>
lea    0x0(%esi),%esi
movsbl %al,%ecx
cmp    $0xa,%ecx
je     806e097 <fchmod@plt+0x230f7>
add    $0x1,%edx
cmp    $0x2c,%ecx
je     806e097 <fchmod@plt+0x230f7>
movzbl (%edx),%eax
mov    %edx,%ebx
test   %al,%al
jne    806e1f0 <fchmod@plt+0x23250>
mov    %ebx,%ebp
jmp    806e0a1 <fchmod@plt+0x23101>
mov    0x809e518,%edx
test   %edx,%edx
jle    806e0f6 <fchmod@plt+0x23156>
mov    (%eax),%eax
movl   $0x72657375,0x2c(%esp)
movl   $0x2d2d3a3a,0x30(%esp)
movl   $0x72672c2d,0x34(%esp)
test   $0x1,%ah
movl   $0x3a70756f,0x38(%esp)
movl   $0x2d2d2d3a,0x3c(%esp)
movl   $0x68746f2c,0x40(%esp)
movl   $0x3a3a7265,0x44(%esp)
movl   $0x2d2d2d,0x48(%esp)
je     806e272 <fchmod@plt+0x232d2>
movb   $0x72,0x32(%esp)
test   $0x80,%al
je     806e27b <fchmod@plt+0x232db>
movb   $0x77,0x33(%esp)
test   $0x40,%al
je     806e284 <fchmod@plt+0x232e4>
movb   $0x78,0x34(%esp)
test   $0x20,%al
je     806e28d <fchmod@plt+0x232ed>
movb   $0x72,0x3d(%esp)
test   $0x10,%al
je     806e296 <fchmod@plt+0x232f6>
movb   $0x77,0x3e(%esp)
test   $0x8,%al
je     806e29f <fchmod@plt+0x232ff>
movb   $0x78,0x3f(%esp)
test   $0x4,%al
je     806e2a8 <fchmod@plt+0x23308>
movb   $0x72,0x48(%esp)
test   $0x2,%al
je     806e2b1 <fchmod@plt+0x23311>
movb   $0x77,0x49(%esp)
test   $0x1,%al
je     806e2ba <fchmod@plt+0x2331a>
movb   $0x78,0x4a(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804adb0 <acl_from_text@plt>
mov    %eax,%ebx
test   %ebx,%ebx
jne    806e0d0 <fchmod@plt+0x23130>
mov    0x14(%esp),%eax
movl   $0x808cde4,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e0f6 <fchmod@plt+0x23156>
testb  $0x20,0x809d642
je     806e0ee <fchmod@plt+0x2314e>
movl   $0x5,0x8(%esp)
movl   $0x808cec8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    0x14(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
jmp    806e0ee <fchmod@plt+0x2314e>
mov    %ecx,%esi
mov    %ecx,%ebx
sub    %ebp,%esi
jmp    806e076 <fchmod@plt+0x230d6>
mov    %ecx,%ebx
jmp    806e072 <fchmod@plt+0x230d2>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
xor    %edx,%edx
sub    $0x10,%esp
mov    0x8(%esi),%eax
xor    %ebx,%ebx
test   %eax,%eax
jne    806e382 <fchmod@plt+0x233e2>
jmp    806e3b0 <fchmod@plt+0x23410>
nop
add    $0x1,%ebx
cmp    0x8(%esi),%ebx
mov    %ebx,%edx
jae    806e3b0 <fchmod@plt+0x23410>
mov    (%esi),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%eax,%edx,4),%eax
mov    %eax,(%esp)
call   804a6d0 <fnmatch@plt>
test   %eax,%eax
jne    806e378 <fchmod@plt+0x233d8>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e070,%edx
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
test   %edx,%edx
je     806e410 <fchmod@plt+0x23470>
mov    $0x809e06c,%edx
call   806e360 <fchmod@plt+0x233c0>
test   %al,%al
je     806e3f8 <fchmod@plt+0x23458>
mov    0x809e07c,%eax
test   %eax,%eax
je     806e408 <fchmod@plt+0x23468>
mov    %ebx,%eax
mov    $0x809e078,%edx
pop    %ebx
pop    %esi
pop    %edi
jmp    806e360 <fchmod@plt+0x233c0>
lea    0x0(%esi),%esi
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %eax,%esi
mov    $0x808cdf2,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
jmp    806e3d9 <fchmod@plt+0x23439>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x5c,%esp
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x18(%esp)
call   804a950 <strlen@plt>
test   %edi,%edi
jne    806e457 <fchmod@plt+0x234b7>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %ebx,%ebx
je     806e44f <fchmod@plt+0x234af>
mov    %eax,%esi
lea    0x24(%esp),%eax
movl   $0x804a4c0,0x10(%esp)
movl   $0x8081640,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a640 <_obstack_begin@plt>
mov    0x18(%esp),%edi
mov    0x30(%esp),%eax
mov    %edi,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x0(%ebp),%edx
test   %dl,%dl
je     806e5a0 <fchmod@plt+0x23600>
cmp    $0x2c,%edx
je     806e5a0 <fchmod@plt+0x23600>
cmp    $0xa,%edx
je     806e5a0 <fchmod@plt+0x23600>
xor    %ebx,%ebx
jmp    806e4cc <fchmod@plt+0x2352c>
lea    0x0(%esi),%esi
cmp    $0x2c,%edx
je     806e4d8 <fchmod@plt+0x23538>
cmp    $0xa,%edx
je     806e4d8 <fchmod@plt+0x23538>
mov    %edi,%ebx
movsbl 0x1(%ebp,%ebx,1),%edx
lea    0x1(%ebx),%edi
test   %dl,%dl
jne    806e4c0 <fchmod@plt+0x23520>
cmp    %ebp,0x18(%esp)
je     806e4f6 <fchmod@plt+0x23556>
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
ja     806e580 <fchmod@plt+0x235e0>
mov    %edx,0x30(%esp)
movb   $0x2c,(%eax)
mov    0x30(%esp),%eax
lea    (%eax,%esi,1),%edx
cmp    %edx,0x34(%esp)
jb     806e550 <fchmod@plt+0x235b0>
mov    0x1c(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x30(%esp),%eax
add    %esi,%eax
lea    (%eax,%edi,1),%edx
cmp    %edx,0x34(%esp)
mov    %eax,0x30(%esp)
jb     806e568 <fchmod@plt+0x235c8>
mov    %ebp,0x4(%esp)
lea    0x2(%ebp,%ebx,1),%ebp
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x30(%esp),%eax
add    %edi,%eax
mov    %eax,0x30(%esp)
jmp    806e498 <fchmod@plt+0x234f8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
jmp    806e4ff <fchmod@plt+0x2355f>
xchg   %ax,%ax
lea    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
jmp    806e526 <fchmod@plt+0x23586>
xchg   %ax,%ax
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    806e4eb <fchmod@plt+0x2354b>
lea    0x1(%eax),%edx
cmp    0x34(%esp),%edx
ja     806e615 <fchmod@plt+0x23675>
mov    %edx,0x30(%esp)
movb   $0x0,(%eax)
mov    0x2c(%esp),%ecx
mov    0x30(%esp),%eax
cmp    %eax,%ecx
je     806e635 <fchmod@plt+0x23695>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ebx
add    %edx,%eax
not    %edx
and    %edx,%eax
mov    0x34(%esp),%edx
mov    %eax,%esi
sub    %ebx,%esi
mov    %eax,0x30(%esp)
mov    %edx,%edi
sub    %ebx,%edi
cmp    %edi,%esi
jle    806e5e4 <fchmod@plt+0x23644>
mov    %edx,0x30(%esp)
mov    %edx,%eax
mov    %eax,0x2c(%esp)
mov    0x809e248,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   804aeb0 <fputs@plt>
lea    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a6b0 <obstack_free@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804a5d0 <_obstack_newchunk@plt>
mov    0x30(%esp),%eax
lea    0x1(%eax),%edx
jmp    806e5a9 <fchmod@plt+0x23609>
orb    $0x2,0x4c(%esp)
jmp    806e5bc <fchmod@plt+0x2361c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809e518,%edx
mov    0x44(%esp),%ebp
mov    0x48(%esp),%ebx
test   %edx,%edx
jle    806e730 <fchmod@plt+0x23790>
mov    0x40(%esp),%eax
lea    0x2c(%ebx),%ecx
mov    %ebp,%edx
call   806d9e0 <fchmod@plt+0x22a40>
test   %eax,%eax
je     806e730 <fchmod@plt+0x23790>
cmp    $0xffffffff,%eax
je     806e758 <fchmod@plt+0x237b8>
mov    0x40(%esp),%eax
mov    $0x8000,%ecx
mov    %ebp,%edx
call   806dfb0 <fchmod@plt+0x23010>
test   %eax,%eax
mov    %eax,%esi
je     806e738 <fchmod@plt+0x23798>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a880 <acl_to_text@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   804af70 <acl_free@plt>
test   %edi,%edi
je     806e770 <fchmod@plt+0x237d0>
mov    %edi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x1c(%ebx)
mov    0x1c(%esp),%eax
mov    %eax,0x20(%ebx)
mov    %edi,(%esp)
call   804af70 <acl_free@plt>
mov    0x50(%esp),%eax
test   %eax,%eax
jne    806e730 <fchmod@plt+0x23790>
mov    0x40(%esp),%eax
mov    $0x4000,%ecx
mov    %ebp,%edx
call   806dfb0 <fchmod@plt+0x23010>
test   %eax,%eax
mov    %eax,%esi
je     806e788 <fchmod@plt+0x237e8>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a880 <acl_to_text@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   804af70 <acl_free@plt>
test   %edi,%edi
je     806e7a8 <fchmod@plt+0x23808>
mov    %edi,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,0x24(%ebx)
mov    0x1c(%esp),%eax
mov    %eax,0x28(%ebx)
mov    %edi,(%esp)
call   804af70 <acl_free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804aaf0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
je     806e6d2 <fchmod@plt+0x23732>
mov    %ebp,0x4(%esp)
movl   $0x808ce08,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e6d2 <fchmod@plt+0x23732>
nop
mov    %ebp,0x4(%esp)
movl   $0x808cdf8,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e730 <fchmod@plt+0x23790>
lea    0x0(%esi),%esi
mov    %ebp,0x4(%esp)
movl   $0x808ce18,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e6d2 <fchmod@plt+0x23732>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
je     806e730 <fchmod@plt+0x23790>
mov    %ebp,0x4(%esp)
movl   $0x808ce08,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e730 <fchmod@plt+0x23790>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
movl   $0x808ce18,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806e730 <fchmod@plt+0x23790>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x809e518,%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebx
test   %eax,%eax
jle    806e802 <fchmod@plt+0x23862>
cmp    $0x32,%bl
je     806e802 <fchmod@plt+0x23862>
mov    0x1c(%esi),%eax
lea    0x3c(%esi),%ebp
mov    $0x8000,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   806dfe0 <fchmod@plt+0x23040>
cmp    $0x44,%bl
je     806e810 <fchmod@plt+0x23870>
cmp    $0x35,%bl
je     806e810 <fchmod@plt+0x23870>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esi),%eax
mov    %edi,%edx
mov    $0x4000,%ecx
mov    %eax,0x30(%esp)
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    806dfe0 <fchmod@plt+0x23040>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x809e078,%eax
sub    $0x18,%esp
mov    $0x809e06c,%ebx
cmpb   $0x0,0x24(%esp)
cmove  %eax,%ebx
mov    0x8(%ebx),%edx
cmp    0x4(%ebx),%edx
je     806e868 <fchmod@plt+0x238c8>
mov    (%ebx),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0x8(%ebx)
mov    0x20(%esp),%ecx
mov    %ecx,(%eax,%edx,4)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %edx,%edx
jne    806e89f <fchmod@plt+0x238ff>
mov    (%ebx),%ecx
mov    $0x4,%dl
movl   $0x4,0x4(%ebx)
test   %ecx,%ecx
je     806e882 <fchmod@plt+0x238e2>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,4),%eax
mov    %edx,0x4(%ebx)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x8(%ebx),%edx
mov    %eax,(%ebx)
jmp    806e850 <fchmod@plt+0x238b0>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     806e882 <fchmod@plt+0x238e2>
cmp    $0x2aaaaaa9,%edx
jbe    806e87b <fchmod@plt+0x238db>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809e070,%ecx
mov    0x809e06c,%eax
test   %ecx,%ecx
jne    806e8f0 <fchmod@plt+0x23950>
mov    0x809e07c,%edx
mov    0x809e078,%eax
test   %edx,%edx
je     806e8e9 <fchmod@plt+0x23949>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    806e8d2 <fchmod@plt+0x23932>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x809e474,%ecx
mov    0x50(%esp),%eax
mov    0x54(%esp),%edi
mov    0x5c(%esp),%ebx
test   %ecx,%ecx
mov    %eax,0x20(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x2c(%esp)
jle    806ea31 <fchmod@plt+0x23a91>
mov    0x809e068,%esi
test   %esi,%esi
je     806eb5e <fchmod@plt+0x23bbe>
mov    %esi,%ebp
lea    0x0(%esi),%esi
test   %ebx,%ebx
jne    806e988 <fchmod@plt+0x239e8>
mov    0x809d6c4,%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8074170 <fchmod@plt+0x291d0>
cmp    $0xffffffff,%eax
jne    806eb4f <fchmod@plt+0x23baf>
call   804aaf0 <__errno_location@plt>
cmpl   $0x22,(%eax)
jne    806ebd7 <fchmod@plt+0x23c37>
mov    0x809e068,%ebp
mov    0x809d6c4,%edx
jmp    806e9b8 <fchmod@plt+0x23a18>
xchg   %ax,%ax
mov    0x809d6c4,%esi
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   804a450 <flistxattr@plt>
cmp    $0xffffffff,%eax
jne    806ea39 <fchmod@plt+0x23a99>
call   804aaf0 <__errno_location@plt>
cmpl   $0x22,(%eax)
nop
jne    806ebf0 <fchmod@plt+0x23c50>
mov    %esi,%edx
test   %ebp,%ebp
je     806ebc8 <fchmod@plt+0x23c28>
cmp    $0xaaaaaaa9,%edx
ja     806ebbc <fchmod@plt+0x23c1c>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x809d6c4
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x809e068
mov    %eax,%ebp
jmp    806e940 <fchmod@plt+0x239a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e064,%ebp
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   805adc0 <fchmod@plt+0xfe20>
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
lea    0x1(%esi,%eax,1),%esi
sub    %eax,%ecx
mov    %ecx,%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x24(%esp)
jg     806ea58 <fchmod@plt+0x23ab8>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x24(%esp)
mov    %ebp,%esi
mov    0x809e064,%eax
test   %eax,%eax
je     806eb8e <fchmod@plt+0x23bee>
mov    0x24(%esp),%edx
test   %edx,%edx
jle    806ea31 <fchmod@plt+0x23a91>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    0x809e064,%ebp
mov    %eax,0x28(%esp)
jmp    806eade <fchmod@plt+0x23b3e>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8073cf0 <fchmod@plt+0x28d50>
cmp    $0xffffffff,%eax
jne    806e9f8 <fchmod@plt+0x23a58>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x22,%eax
jne    806eb10 <fchmod@plt+0x23b70>
mov    0x809e064,%ecx
mov    0x809d6c0,%eax
test   %ecx,%ecx
je     806eb40 <fchmod@plt+0x23ba0>
cmp    $0xaaaaaaa9,%eax
ja     806ebbc <fchmod@plt+0x23c1c>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x809d6c0
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x809e064
mov    %eax,%ebp
test   %ebx,%ebx
mov    0x809d6c0,%eax
je     806ea70 <fchmod@plt+0x23ad0>
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804ab60 <fgetxattr@plt>
cmp    $0xffffffff,%eax
jne    806e9fe <fchmod@plt+0x23a5e>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x22,%eax
je     806eaa1 <fchmod@plt+0x23b01>
cmp    $0x3d,%eax
je     806ea16 <fchmod@plt+0x23a76>
test   %ebx,%ebx
mov    $0x808ce48,%ecx
mov    $0x808ce3c,%eax
cmovne %ecx,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806f310 <fchmod@plt+0x24370>
jmp    806ea16 <fchmod@plt+0x23a76>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    806eac6 <fchmod@plt+0x23b26>
mov    %eax,0x24(%esp)
mov    0x809e068,%esi
jmp    806ea3f <fchmod@plt+0x23a9f>
mov    0x809d6c4,%eax
mov    $0x40,%edx
movl   $0x0,(%esp)
test   %eax,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
mov    %eax,0x809d6c4
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x809e068
mov    %eax,%esi
jmp    806e93b <fchmod@plt+0x2399b>
mov    0x809d6c0,%eax
mov    $0x40,%edx
movl   $0x0,(%esp)
test   %eax,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
mov    %eax,0x809d6c0
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x809e064
jmp    806ea4c <fchmod@plt+0x23aac>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
mov    $0x40,%eax
cmove  %eax,%edx
jmp    806e9d3 <fchmod@plt+0x23a33>
mov    $0x808ce24,%eax
mov    %edi,0x54(%esp)
mov    %eax,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    806f310 <fchmod@plt+0x24370>
mov    $0x808ce31,%eax
jmp    806ebdc <fchmod@plt+0x23c3c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x809e54c,%ecx
mov    0x20(%esp),%edx
mov    0x24(%esp),%esi
mov    0x28(%esp),%eax
test   %ecx,%ecx
mov    0x2c(%esp),%ebx
jle    806ec70 <fchmod@plt+0x23cd0>
add    $0x18,%eax
test   %ebx,%ebx
jne    806ec78 <fchmod@plt+0x23cd8>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8082dd0 <argp_parse+0xae90>
cmp    $0xffffffff,%eax
jne    806ec70 <fchmod@plt+0x23cd0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x3d,%eax
je     806ec70 <fchmod@plt+0x23cd0>
cmp    $0x5f,%eax
je     806ec70 <fchmod@plt+0x23cd0>
test   %ebx,%ebx
mov    $0x808ce52,%eax
mov    $0x808ce5e,%edx
cmove  %edx,%eax
mov    %esi,0x24(%esp)
mov    %eax,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    806f310 <fchmod@plt+0x24370>
lea    0x0(%esi),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8082680 <argp_parse+0xa740>
jmp    806ec36 <fchmod@plt+0x23c96>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x809e54c,%eax
mov    0x38(%esp),%edx
test   %eax,%eax
jle    806ecd5 <fchmod@plt+0x23d35>
mov    0x30(%esp),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
je     806ecd5 <fchmod@plt+0x23d35>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
cmp    $0x32,%dl
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
je     806ed38 <fchmod@plt+0x23d98>
call   8082fe0 <argp_parse+0xb0a0>
mov    $0x808ce6d,%ebx
cmp    $0xffffffff,%eax
je     806ece0 <fchmod@plt+0x23d40>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x20,0x809d642
je     806ecd5 <fchmod@plt+0x23d35>
movl   $0x5,0x8(%esp)
movl   $0x808cf00,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    0x34(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   80831f0 <argp_parse+0xb2b0>
mov    $0x808ce6c,%ebx
jmp    806ecd0 <fchmod@plt+0x23d30>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x809e474,%ecx
movzbl 0x58(%esp),%eax
mov    0x50(%esp),%edx
test   %ecx,%ecx
mov    %al,0x2f(%esp)
jle    806eeab <fchmod@plt+0x23f0b>
mov    0xc4(%edx),%eax
test   %eax,%eax
je     806eeab <fchmod@plt+0x23f0b>
xor    %ebp,%ebp
jmp    806ee4b <fchmod@plt+0x23eab>
nop
add    0xc8(%edx),%ebx
mov    0x4(%ebx),%eax
mov    0x8(%ebx),%ecx
test   %eax,%eax
je     806ee40 <fchmod@plt+0x23ea0>
cmpb   $0x32,0x2f(%esp)
je     806eeb8 <fchmod@plt+0x23f18>
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    $0x808ce7a,%ebx
movl   $0x0,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   80735c0 <fchmod@plt+0x28620>
mov    0x28(%esp),%edx
cmp    $0xffffffff,%eax
jne    806ee40 <fchmod@plt+0x23ea0>
testb  $0x20,0x809d642
je     806ee40 <fchmod@plt+0x23ea0>
movl   $0x5,0x8(%esp)
movl   $0x808cf30,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    0x54(%esp),%edi
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x14(%esp)
mov    0x24(%esp),%edi
mov    %edi,0x10(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    0x28(%esp),%edx
add    $0x1,%ebp
cmp    %ebp,0xc4(%edx)
jbe    806eeab <fchmod@plt+0x23f0b>
mov    0xc8(%edx),%ecx
lea    0x0(%ebp,%ebp,2),%eax
lea    0x0(,%eax,4),%ebx
mov    (%ecx,%eax,4),%eax
add    $0xd,%eax
cmpb   $0x30,0x2f(%esp)
mov    %eax,0x24(%esp)
jne    806ee87 <fchmod@plt+0x23ee7>
mov    %eax,%esi
mov    $0x808ce8f,%edi
mov    $0x14,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
setne  %al
movzbl %al,%eax
cmp    0x5c(%esp),%eax
je     806ee40 <fchmod@plt+0x23ea0>
mov    0x24(%esp),%eax
mov    %edx,0x28(%esp)
call   806e3c0 <fchmod@plt+0x23420>
mov    0x28(%esp),%edx
test   %al,%al
je     806ed88 <fchmod@plt+0x23de8>
add    $0x1,%ebp
cmp    %ebp,0xc4(%edx)
ja     806ee4b <fchmod@plt+0x23eab>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    $0x808ce85,%ebx
movl   $0x0,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x809c3f8,%eax
mov    %eax,(%esp)
call   8073830 <fchmod@plt+0x28890>
mov    0x28(%esp),%edx
jmp    806eddd <fchmod@plt+0x23e3d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpl   $0x1,0x809e46c
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
jle    806efd8 <fchmod@plt+0x24038>
mov    0x809e474,%eax
test   %eax,%eax
jle    806efb8 <fchmod@plt+0x24018>
movb   $0x20,(%esi)
movb   $0x0,0x1(%esi)
mov    0x809e474,%ebx
test   %ebx,%ebx
jle    806ef80 <fchmod@plt+0x23fe0>
mov    0xc4(%edi),%ecx
test   %ecx,%ecx
je     806ef80 <fchmod@plt+0x23fe0>
xor    %eax,%eax
xor    %ebx,%ebx
jmp    806ef55 <fchmod@plt+0x23fb5>
xchg   %ax,%ax
add    $0x1,%ebx
cmp    0xc4(%edi),%ebx
mov    %ebx,%eax
jae    806ef80 <fchmod@plt+0x23fe0>
mov    0xc8(%edi),%edx
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
mov    (%eax),%eax
add    $0xd,%eax
call   806e3c0 <fchmod@plt+0x23420>
test   %al,%al
jne    806ef48 <fchmod@plt+0x23fa8>
movb   $0x2a,(%esi)
mov    0x809e54c,%eax
jmp    806ef85 <fchmod@plt+0x23fe5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e54c,%eax
test   %eax,%eax
jle    806ef93 <fchmod@plt+0x23ff3>
mov    0x18(%edi),%ebx
test   %ebx,%ebx
je     806ef93 <fchmod@plt+0x23ff3>
movb   $0x2e,(%esi)
mov    0x809e518,%ecx
test   %ecx,%ecx
je     806efae <fchmod@plt+0x2400e>
mov    0x20(%edi),%edx
test   %edx,%edx
jne    806efab <fchmod@plt+0x2400b>
mov    0x28(%edi),%eax
test   %eax,%eax
je     806efae <fchmod@plt+0x2400e>
movb   $0x2b,(%esi)
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x809e54c,%eax
test   %eax,%eax
jg     806ef25 <fchmod@plt+0x23f85>
mov    0x809e518,%eax
test   %eax,%eax
jg     806ef25 <fchmod@plt+0x23f85>
jmp    806ef93 <fchmod@plt+0x23ff3>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%esi)
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpl   $0x2,0x809e46c
mov    0x40(%esp),%esi
jle    806f130 <fchmod@plt+0x24190>
mov    0x809e54c,%ebp
test   %ebp,%ebp
je     806f02a <fchmod@plt+0x2408a>
mov    0x18(%esi),%eax
test   %eax,%eax
je     806f02a <fchmod@plt+0x2408a>
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
movl   $0x808cea3,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x809e518,%edi
test   %edi,%edi
je     806f09c <fchmod@plt+0x240fc>
mov    0x20(%esi),%ebx
test   %ebx,%ebx
jne    806f042 <fchmod@plt+0x240a2>
mov    0x28(%esi),%ecx
test   %ecx,%ecx
je     806f09c <fchmod@plt+0x240fc>
mov    0x809e248,%eax
movl   $0x5,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x808ceac,(%esp)
mov    %eax,0xc(%esp)
call   804a730 <fwrite@plt>
mov    0x20(%esi),%ecx
mov    $0x808d3ee,%eax
mov    0x1c(%esi),%edx
call   806e430 <fchmod@plt+0x23490>
mov    0x28(%esi),%ecx
mov    $0x808ceb2,%eax
mov    0x24(%esi),%edx
call   806e430 <fchmod@plt+0x23490>
mov    0x809e248,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804acd0 <fputc@plt>
mov    0x809e474,%edx
test   %edx,%edx
je     806f130 <fchmod@plt+0x24190>
mov    0xc4(%esi),%eax
test   %eax,%eax
je     806f130 <fchmod@plt+0x24190>
xor    %eax,%eax
xor    %ebx,%ebx
jmp    806f0cd <fchmod@plt+0x2412d>
lea    0x0(%esi),%esi
add    $0x1,%ebx
cmp    0xc4(%esi),%ebx
mov    %ebx,%eax
jae    806f130 <fchmod@plt+0x24190>
mov    0xc8(%esi),%edx
lea    (%eax,%eax,2),%eax
lea    0x0(,%eax,4),%edi
mov    (%edx,%eax,4),%ebp
add    $0xd,%ebp
mov    %ebp,%eax
call   806e3c0 <fchmod@plt+0x23420>
test   %al,%al
jne    806f0c0 <fchmod@plt+0x24120>
mov    %ebp,0x10(%esp)
mov    0xc8(%esi),%eax
add    $0x1,%ebx
mov    0x8(%eax,%edi,1),%eax
movl   $0x808cebb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809e248,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    %ebx,%eax
cmp    0xc4(%esi),%ebx
jb     806f0cd <fchmod@plt+0x2412d>
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
je     806f210 <fchmod@plt+0x24270>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     806f238 <fchmod@plt+0x24298>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x7(%edx)
je     806f220 <fchmod@plt+0x24280>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x8(%edx)
movb   $0x0,0x9(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    806f18c <fchmod@plt+0x241ec>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x8(%edx)
movb   $0x0,0x9(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    806f1ca <fchmod@plt+0x2422a>
push   %esi
push   %ebx
sub    $0x24,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cf65,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cf65,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cf73,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%edi
lea    0x22(%esp),%ebx
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x44(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   806f140 <fchmod@plt+0x241a0>
mov    %edi,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cf8a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x809e084
00
jne    806f401 <fchmod@plt+0x24461>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808d030,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0x10(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8089016,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8089016,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfa7,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cfac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfc7,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfcd,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfd4,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfda,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfda,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfda,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8086517,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   804aaf0 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
movl   $0x808d060,0x8(%esp)
movl   $0x808d094,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   804aee0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x809e084
00
jne    806f6f5 <fchmod@plt+0x24755>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   804aaf0 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
movl   $0x808d0c8,0x8(%esp)
movl   $0x808d104,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   804aee0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    806f7ab <fchmod@plt+0x2480b>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x8086517,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   804aaf0 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebx
mov    (%eax),%ebp
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x10(%esp)
movl   $0x808d060,0x8(%esp)
movl   $0x808d094,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   804aee0 <dcngettext@plt>
mov    0x6c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
call   8055fc0 <fchmod@plt+0xb020>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfdf,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfdf,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfe8,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfee,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cfee,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808969b,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   804aaf0 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebp
mov    (%eax),%ebx
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808cff6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x2,0x809e084
00
jne    806f9cd <fchmod@plt+0x24a2d>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808969b,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x64(%esp),%esi
call   804aaf0 <__errno_location@plt>
mov    0x68(%esp),%edi
mov    0x60(%esp),%ebp
mov    (%eax),%ebx
lea    0x27(%esp),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   807c1f0 <argp_parse+0x42b0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808d140,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    806fa93 <fchmod@plt+0x24af3>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a610 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
movl   $0x5,0x8(%esp)
movl   $0x808d160,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d00c,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d00c,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d00c,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d011,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d011,(%esp)
mov    %eax,0x4(%esp)
call   806f310 <fchmod@plt+0x24370>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808973f,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d01a,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d020,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808cd5f,(%esp)
mov    %eax,0x4(%esp)
call   806f240 <fchmod@plt+0x242a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     806fcb8 <fchmod@plt+0x24d18>
mov    %esi,0xc(%esp)
movl   $0x5,0x10(%esp)
movl   $0x808d180,0x8(%esp)
movl   $0x808d1a0,0x4(%esp)
movl   $0x0,(%esp)
call   804aee0 <dcngettext@plt>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
movl   $0x2,0x809e084
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x34(%esp)
movl   $0x808cd5f,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806f240 <fchmod@plt+0x242a0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x808d028,(%esp)
mov    %eax,0x4(%esp)
call   806f2b0 <fchmod@plt+0x24310>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    807a7d0 <argp_parse+0x2890>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x809e088,%eax
test   %eax,%eax
je     806fd3d <fchmod@plt+0x24d9d>
mov    %eax,(%esp)
call   807a420 <argp_parse+0x24e0>
mov    $0x1,%edx
test   %eax,%eax
jne    806fd53 <fchmod@plt+0x24db3>
mov    0x809e08c,%eax
test   %eax,%eax
je     806fd60 <fchmod@plt+0x24dc0>
mov    %eax,(%esp)
call   807a420 <argp_parse+0x24e0>
test   %eax,%eax
setne  %dl
mov    %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
add    $0x1c,%esp
mov    %edx,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpb   $0x0,0x48(%esp)
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
je     806fdda <fchmod@plt+0x24e3a>
cmpb   $0x0,(%esi)
jne    806ff51 <fchmod@plt+0x24fb1>
mov    %edi,%eax
mov    $0x80894f0,%ebx
movzbl %al,%edi
mov    0x808d26c(,%edi,4),%eax
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808d587,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
jmp    806fe25 <fchmod@plt+0x24e85>
mov    %esi,%eax
xor    %ebx,%ebx
xchg   %ax,%ax
movzbl (%eax),%edx
test   %dl,%dl
je     806fe06 <fchmod@plt+0x24e66>
cmp    $0x2e,%dl
je     806fe30 <fchmod@plt+0x24e90>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x2f,%dl
je     806fde0 <fchmod@plt+0x24e40>
movzbl (%eax),%edx
test   %dl,%dl
jne    806fdf0 <fchmod@plt+0x24e50>
movzbl (%eax),%edx
test   %dl,%dl
jne    806fde7 <fchmod@plt+0x24e47>
add    %esi,%ebx
cmpb   $0x2f,(%ebx)
je     806fe4a <fchmod@plt+0x24eaa>
mov    %ebx,%edx
sub    %esi,%edx
jne    806fe58 <fchmod@plt+0x24eb8>
cmpb   $0x0,(%ebx)
jne    806fe25 <fchmod@plt+0x24e85>
cmp    %ebx,%esi
je     806fd8f <fchmod@plt+0x24def>
mov    $0x80894f0,%ebx
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0x2e,0x1(%eax)
jne    806fdf0 <fchmod@plt+0x24e50>
movzbl 0x2(%eax),%ecx
test   %cl,%cl
je     806fe43 <fchmod@plt+0x24ea3>
cmp    $0x2f,%cl
jne    806fdf0 <fchmod@plt+0x24e50>
lea    0x2(%eax),%ebx
sub    %esi,%ebx
jmp    806fdf0 <fchmod@plt+0x24e50>
add    $0x1,%ebx
cmpb   $0x2f,(%ebx)
je     806fe4a <fchmod@plt+0x24eaa>
mov    %ebx,%edx
sub    %esi,%edx
je     806fe13 <fchmod@plt+0x24e73>
mov    %edi,%eax
movzbl %al,%eax
mov    0x809e088(,%eax,4),%ecx
mov    %eax,0x14(%esp)
lea    0x1(%edx),%eax
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x18(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a4e0 <memcpy@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
test   %ecx,%ecx
movb   $0x0,0x0(%ebp,%edx,1)
je     806ff0b <fchmod@plt+0x24f6b>
mov    %ebp,0x4(%esp)
mov    %ecx,(%esp)
call   807ae50 <argp_parse+0x2f10>
test   %eax,%eax
je     806ff4c <fchmod@plt+0x24fac>
cmp    %eax,%ebp
je     806fec7 <fchmod@plt+0x24f27>
mov    %ebp,(%esp)
call   804a4c0 <free@plt>
jmp    806fe13 <fchmod@plt+0x24e73>
mov    0x14(%esp),%eax
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    0x808d274(,%eax,4),%eax
mov    %eax,0x4(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    806fe13 <fchmod@plt+0x24e73>
movl   $0x0,0x10(%esp)
movl   $0x806fcf0,0xc(%esp)
movl   $0x806fd10,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807a840 <argp_parse+0x2900>
mov    %eax,%ecx
mov    0x14(%esp),%eax
test   %ecx,%ecx
mov    %ecx,0x809e088(,%eax,4)
jne    806fea2 <fchmod@plt+0x24f02>
call   8056010 <fchmod@plt+0xb070>
mov    %esi,%ebx
jmp    806fe25 <fchmod@plt+0x24e85>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    %eax,%ebp
mov    (%eax),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
movzbl (%ebx),%edx
movzbl %dl,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
jne    806fffd <fchmod@plt+0x2505d>
test   %dl,%dl
je     807000e <fchmod@plt+0x2506e>
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     806ff9f <fchmod@plt+0x24fff>
mov    %edi,(%ecx,%eax,4)
movzbl (%ebx),%edx
add    $0x1,%eax
mov    %eax,0x8(%esp)
jmp    806ffbd <fchmod@plt+0x2501d>
mov    %esi,%ebx
test   %dl,%dl
je     8070016 <fchmod@plt+0x25076>
mov    0x0(%ebp),%eax
movzbl %dl,%esi
testb  $0x20,0x1(%eax,%esi,2)
jne    8070008 <fchmod@plt+0x25068>
mov    %ecx,%edi
lea    0x1(%edi),%ecx
cmp    $0x5c,%dl
mov    %dl,-0x1(%ecx)
lea    0x1(%ebx),%esi
movzbl 0x1(%ebx),%edx
jne    806ffa8 <fchmod@plt+0x25008>
test   %dl,%dl
je     806ffe0 <fchmod@plt+0x25040>
mov    %dl,-0x1(%ecx)
add    $0x2,%ebx
movzbl (%ebx),%edx
jmp    806ffaa <fchmod@plt+0x2500a>
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    %esi,%ebx
movb   $0x0,0x1(%edi)
movzbl (%ebx),%edx
add    $0x2,%edi
mov    0x0(%ebp),%esi
movzbl %dl,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
je     806ff8d <fchmod@plt+0x24fed>
add    $0x1,%ebx
jmp    806ff80 <fchmod@plt+0x24fe0>
lea    0x0(%esi),%esi
mov    0x8(%esp),%eax
jmp    806ffe6 <fchmod@plt+0x25046>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%esp),%eax
mov    %ebx,%esi
jmp    806ffe4 <fchmod@plt+0x25044>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
test   %esi,%esi
je     807009e <fchmod@plt+0x250fe>
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
xor    %ecx,%ecx
mov    %eax,%edx
mov    %eax,%ebp
mov    %esi,%eax
call   806ff60 <fchmod@plt+0x24fc0>
mov    %eax,%edi
mov    0x38(%esp),%eax
mov    (%eax),%ebx
mov    0x34(%esp),%eax
add    (%eax),%edi
lea    0x4(,%edi,4),%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x34(%esp),%ecx
mov    %edi,(%ecx)
mov    0x38(%esp),%edi
mov    %eax,(%edi)
mov    (%ebx),%edx
lea    0x4(%eax),%edi
mov    %edi,%ecx
mov    %edx,(%eax)
mov    %ebp,%edx
mov    %esi,%eax
call   806ff60 <fchmod@plt+0x24fc0>
lea    (%edi,%eax,4),%ecx
xor    %eax,%eax
nop
mov    0x4(%ebx,%eax,1),%edx
mov    %edx,(%ecx,%eax,1)
add    $0x4,%eax
test   %edx,%edx
jne    8070090 <fchmod@plt+0x250f0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x809d720(,%eax,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
mov    0x809d704(,%ebx,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
movl   $0xffffffff,0x809d720(,%ebx,8)
ff
movl   $0xffffffff,0x809d704(,%ebx,8)
ff
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %edx,(%esp)
call   804a950 <strlen@plt>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%ebx
call   804a570 <signal@plt>
mov    %esi,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,%ebp
mov    0x809d704(,%edi,8),%eax
mov    %eax,(%esp)
call   8079fe0 <argp_parse+0x20a0>
mov    %ebp,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%esi
call   804a570 <signal@plt>
xor    %eax,%eax
cmp    %esi,%ebx
jne    8070168 <fchmod@plt+0x251c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,%eax
mov    $0x5,%edx
call   80700b0 <fchmod@plt+0x25110>
mov    $0xffffffff,%eax
jmp    807015a <fchmod@plt+0x251ba>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
lea    0x40(%edx),%edi
jmp    80701a4 <fchmod@plt+0x25204>
lea    0x0(%esi),%esi
cmpb   $0xa,(%ebx)
je     80701e0 <fchmod@plt+0x25240>
add    $0x1,%ebx
cmp    %edi,%ebx
je     80701c4 <fchmod@plt+0x25224>
mov    0x809d720(,%ebp,8),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0x1,%eax
je     8070198 <fchmod@plt+0x251f8>
mov    $0x5,%edx
mov    %ebp,%eax
call   80700b0 <fchmod@plt+0x25110>
xor    %ebx,%ebx
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
movzbl (%esi),%eax
test   %al,%al
jne    80701fa <fchmod@plt+0x2525a>
jmp    80701c4 <fchmod@plt+0x25224>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
test   %al,%al
je     80701c4 <fchmod@plt+0x25224>
cmp    $0x20,%al
je     80701f0 <fchmod@plt+0x25250>
lea    -0x45(%eax),%edx
cmp    $0x1,%dl
ja     8070274 <fchmod@plt+0x252d4>
lea    0x1f(%esp),%ebx
jmp    8070217 <fchmod@plt+0x25277>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0xa,0x1f(%esp)
je     8070237 <fchmod@plt+0x25297>
mov    0x809d720(,%ebp,8),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
cmp    $0x1,%eax
je     8070210 <fchmod@plt+0x25270>
call   804aaf0 <__errno_location@plt>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%ebx
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   804aea0 <strtol@plt>
mov    %eax,(%ebx)
xor    %ebx,%ebx
cmpb   $0x46,(%esi)
jne    80701d2 <fchmod@plt+0x25232>
mov    %eax,%edx
mov    %ebp,%eax
call   80700b0 <fchmod@plt+0x25110>
jmp    80701d2 <fchmod@plt+0x25232>
cmp    $0x41,%al
jne    80701c4 <fchmod@plt+0x25224>
add    $0x2c,%esp
lea    0x1(%esi),%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x6c,%esp
lea    0x1c(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x5c(%esp)
xor    %ecx,%ecx
call   8070180 <fchmod@plt+0x251e0>
test   %eax,%eax
je     80702da <fchmod@plt+0x2533a>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aea0 <strtol@plt>
test   %eax,%eax
js     80702e2 <fchmod@plt+0x25342>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80702f4 <fchmod@plt+0x25354>
add    $0x6c,%esp
ret
mov    $0xffffffff,%eax
nop
jmp    80702c9 <fchmod@plt+0x25329>
call   804aaf0 <__errno_location@plt>
movl   $0x5,(%eax)
mov    $0xffffffff,%eax
jmp    80702c9 <fchmod@plt+0x25329>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpl   $0xffffffff,0x809d720(,%ebp,8)
je     8070338 <fchmod@plt+0x25398>
add    $0x1,%ebp
cmp    $0x4,%ebp
jne    8070309 <fchmod@plt+0x25369>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebx
movl   $0x18,(%eax)
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x809d704(,%ebp,8),%ebx
cmp    $0xffffffff,%ebx
jne    8070313 <fchmod@plt+0x25373>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,%ecx
mov    %eax,0x20(%esp)
movzbl (%eax),%eax
test   %al,%al
je     80709cd <fchmod@plt+0x25a2d>
lea    0x1(%ecx),%edx
xor    %esi,%esi
xor    %edi,%edi
cmp    $0x3a,%al
je     8070670 <fchmod@plt+0x256d0>
cmp    $0x40,%al
je     8070658 <fchmod@plt+0x256b8>
cmp    $0xa,%al
je     8070630 <fchmod@plt+0x25690>
movzbl (%edx),%eax
add    $0x1,%edx
test   %al,%al
jne    8070368 <fchmod@plt+0x253c8>
mov    %ecx,0x24(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804ae90 <gethostbyname@plt>
test   %eax,%eax
je     807092b <fchmod@plt+0x2598b>
test   %esi,%esi
je     80703b1 <fchmod@plt+0x25411>
cmpb   $0x0,(%esi)
mov    $0x0,%eax
cmove  %eax,%esi
mov    0x5c(%esp),%eax
test   %eax,%eax
mov    $0x808921f,%eax
cmovne 0x5c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x5c(%esp)
call   8079350 <argp_parse+0x1410>
lea    0x0(,%ebp,8),%edx
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x809d700(%edx),%eax
mov    %eax,(%esp)
call   804aba0 <pipe@plt>
mov    0x28(%esp),%edx
cmp    $0xffffffff,%eax
je     807096c <fchmod@plt+0x259cc>
add    $0x809d720,%edx
mov    %edx,(%esp)
call   804aba0 <pipe@plt>
cmp    $0xffffffff,%eax
je     807096c <fchmod@plt+0x259cc>
call   804ac70 <fork@plt>
cmp    $0xffffffff,%eax
je     807096c <fchmod@plt+0x259cc>
test   %eax,%eax
xchg   %ax,%ax
jne    807057c <fchmod@plt+0x255dc>
mov    0x809d700(,%ebp,8),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a3a0 <dup2@plt>
test   %eax,%eax
js     8070499 <fchmod@plt+0x254f9>
mov    0x809d700(,%ebp,8),%eax
test   %eax,%eax
jne    80708e4 <fchmod@plt+0x25944>
mov    0x809d704(,%ebp,8),%eax
test   %eax,%eax
je     8070467 <fchmod@plt+0x254c7>
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    8070499 <fchmod@plt+0x254f9>
mov    0x809d724(,%ebp,8),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a3a0 <dup2@plt>
test   %eax,%eax
js     8070499 <fchmod@plt+0x254f9>
mov    0x809d720(,%ebp,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
je     8070988 <fchmod@plt+0x259e8>
movl   $0x5,0x8(%esp)
movl   $0x808d2ec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x28(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x28(%esp),%edx
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
call   804a630 <getuid@plt>
mov    %eax,(%esp)
call   804acf0 <setuid@plt>
test   %eax,%eax
jne    8070629 <fchmod@plt+0x25689>
call   804aa60 <getgid@plt>
mov    %eax,(%esp)
call   804a820 <setgid@plt>
test   %eax,%eax
jne    8070629 <fchmod@plt+0x25689>
test   %esi,%esi
je     80708f9 <fchmod@plt+0x25959>
mov    0x809d6e0,%eax
movl   $0x0,0x18(%esp)
mov    %esi,0x10(%esp)
movl   $0x808d27c,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   804ab90 <execl@plt>
movl   $0x5,0x8(%esp)
movl   $0x808d27f,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    0x809d724(,%ebp,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
mov    0x809d700(,%ebp,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%edx
lea    0x3e8(%eax),%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   8081640 <argp_parse+0x9700>
mov    %edi,0x10(%esp)
movl   $0x808d29b,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   804af90 <__sprintf_chk@plt>
mov    0x24(%esp),%edx
mov    0x54(%esp),%eax
movl   $0x808d2a0,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
lea    0x2(%esi,%edx,1),%edi
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    0x54(%esp),%eax
and    $0x3,%eax
cmp    $0x1,%eax
je     80707a6 <fchmod@plt+0x25806>
cmp    $0x2,%eax
je     8070784 <fchmod@plt+0x257e4>
test   %eax,%eax
je     8070683 <fchmod@plt+0x256e3>
call   804ae30 <abort@plt>
xchg   %ax,%ax
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
call   804aaf0 <__errno_location@plt>
movl   $0x2,(%eax)
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    8070380 <fchmod@plt+0x253e0>
mov    %ecx,%esi
mov    %edx,%ecx
movb   $0x0,-0x1(%edx)
jmp    8070380 <fchmod@plt+0x253e0>
lea    0x0(%esi),%esi
test   %edi,%edi
jne    8070380 <fchmod@plt+0x253e0>
mov    %edx,%edi
movb   $0x0,-0x1(%edx)
jmp    8070380 <fchmod@plt+0x253e0>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x44525f4f,(%eax)
movl   $0x594c4e4f,0x4(%eax)
movb   $0x0,0x8(%eax)
testl  $0x400,0x54(%esp)
jne    80708bf <fchmod@plt+0x2591f>
testb  $0x40,0x54(%esp)
jne    807089f <fchmod@plt+0x258ff>
testl  $0x1000,0x54(%esp)
jne    807087f <fchmod@plt+0x258df>
testb  $0x80,0x54(%esp)
jne    8070863 <fchmod@plt+0x258c3>
testl  $0x8000,0x54(%esp)
jne    807083c <fchmod@plt+0x2589c>
testl  $0x100,0x54(%esp)
jne    8070817 <fchmod@plt+0x25877>
testl  $0x800,0x54(%esp)
jne    80707f4 <fchmod@plt+0x25854>
testl  $0x101000,0x54(%esp)
jne    80707c6 <fchmod@plt+0x25826>
testl  $0x200,0x54(%esp)
je     807072d <fchmod@plt+0x2578d>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %eax,%edi
movl   $0x545f4f7c,(%edi)
movl   $0x434e5552,0x4(%edi)
movb   $0x0,0x8(%edi)
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    $0xa,%edx
mov    %dx,(%esi,%eax,1)
mov    %esi,%edx
mov    %ebp,%eax
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     80709a4 <fchmod@plt+0x25a04>
mov    %ebp,%eax
call   8070290 <fchmod@plt+0x252f0>
cmp    $0xffffffff,%eax
je     80709a4 <fchmod@plt+0x25a04>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x58(%esp),%ebx
add    $0x3c,%esp
add    %ebp,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    $0x5257,%ecx
add    %edi,%eax
movl   $0x44525f4f,(%eax)
mov    %cx,0x4(%eax)
movb   $0x0,0x6(%eax)
jmp    807069e <fchmod@plt+0x256fe>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x52575f4f,(%eax)
movl   $0x594c4e4f,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    807069e <fchmod@plt+0x256fe>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
lea    (%edi,%eax,1),%edx
lea    0x8(%edi,%eax,1),%eax
movl   $0x525f4f7c,(%edx)
movl   $0x434e5953,0x4(%edx)
movl   $0x535f4f7c,(%eax)
movl   $0x434e59,0x4(%eax)
jmp    8070708 <fchmod@plt+0x25768>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x4e5f4f7c,(%eax)
movl   $0x4c424e4f,0x4(%eax)
movl   $0x4b434f,0x8(%eax)
jmp    80706fa <fchmod@plt+0x2575a>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    $0x59,%ecx
add    %edi,%eax
movl   $0x4e5f4f7c,(%eax)
movl   $0x5454434f,0x4(%eax)
mov    %cx,0x8(%eax)
jmp    80706ec <fchmod@plt+0x2574c>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x4c5f4f7c,(%eax)
movl   $0x45475241,0x4(%eax)
movl   $0x454c4946,0x8(%eax)
movb   $0x0,0xc(%eax)
jmp    80706de <fchmod@plt+0x2573e>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x455f4f7c,(%eax)
movl   $0x4c4358,0x4(%eax)
jmp    80706d0 <fchmod@plt+0x25730>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x445f4f7c,(%eax)
movl   $0x434e5953,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    80706c5 <fchmod@plt+0x25725>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
add    %edi,%eax
movl   $0x435f4f7c,(%eax)
movl   $0x54414552,0x4(%eax)
movb   $0x0,0x8(%eax)
jmp    80706b7 <fchmod@plt+0x25717>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    $0x44,%edx
add    %edi,%eax
movl   $0x415f4f7c,(%eax)
movl   $0x4e455050,0x4(%eax)
mov    %dx,0x8(%eax)
jmp    80706ac <fchmod@plt+0x2570c>
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    8070499 <fchmod@plt+0x254f9>
jmp    8070450 <fchmod@plt+0x254b0>
mov    0x809d6e0,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   804ab90 <execl@plt>
jmp    8070543 <fchmod@plt+0x255a3>
movl   $0x5,0x8(%esp)
movl   $0x808d2c4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x24(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804a7c0 <error@plt>
jmp    80703a2 <fchmod@plt+0x25402>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %edi,(%esi)
jmp    807032b <fchmod@plt+0x2538b>
mov    0x809d724(,%ebp,8),%eax
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    8070499 <fchmod@plt+0x254f9>
jmp    80704d8 <fchmod@plt+0x25538>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %edi,%edx
mov    %ebp,%eax
call   80700b0 <fchmod@plt+0x25110>
jmp    807032b <fchmod@plt+0x2538b>
mov    0x20(%esp),%eax
xor    %esi,%esi
xor    %edi,%edi
mov    %eax,0x24(%esp)
jmp    807038e <fchmod@plt+0x253ee>
xchg   %ax,%ax
push   %esi
mov    $0x808d2a4,%edx
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
mov    %ebx,%eax
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     8070a13 <fchmod@plt+0x25a73>
mov    %ebx,%eax
call   8070290 <fchmod@plt+0x252f0>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edx
mov    %ebx,%eax
call   80700b0 <fchmod@plt+0x25110>
mov    %esi,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x98(%esp),%eax
lea    0x2c(%esp),%esi
mov    0x90(%esp),%ebx
movl   $0x808d2a7,0xc(%esp)
mov    0x94(%esp),%edi
movl   $0x40,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %esi,%edx
mov    %ebx,%eax
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
jne    8070a98 <fchmod@plt+0x25af8>
mov    $0xffffffff,%eax
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8070b02 <fchmod@plt+0x25b62>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,%eax
call   8070290 <fchmod@plt+0x252f0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8070a7e <fchmod@plt+0x25ade>
cmp    %eax,0x98(%esp)
jb     8070a7e <fchmod@plt+0x25ade>
test   %eax,%eax
je     8070afc <fchmod@plt+0x25b5c>
xor    %esi,%esi
jmp    8070ac0 <fchmod@plt+0x25b20>
nop
add    %edx,%esi
add    %edx,%edi
cmp    %esi,%ebp
jbe    8070af8 <fchmod@plt+0x25b58>
mov    %ebp,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x809d720(,%ebx,8),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
mov    %eax,%edx
lea    -0x1(%eax),%eax
cmp    $0xfffffffd,%eax
jbe    8070ab8 <fchmod@plt+0x25b18>
mov    $0x5,%edx
mov    %ebx,%eax
call   80700b0 <fchmod@plt+0x25110>
jmp    8070a7e <fchmod@plt+0x25ade>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
jmp    8070a83 <fchmod@plt+0x25ae3>
xor    %eax,%eax
xchg   %ax,%ax
jmp    8070a83 <fchmod@plt+0x25ae3>
call   804a610 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x98(%esp),%eax
lea    0x2c(%esp),%edi
mov    0x90(%esp),%ebx
movl   $0x808d2ad,0xc(%esp)
mov    0x94(%esp),%ebp
movl   $0x40,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %edi,%edx
mov    %ebx,%eax
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     8070be0 <fchmod@plt+0x25c40>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   804a570 <signal@plt>
mov    %ebp,0x4(%esp)
mov    %eax,%esi
mov    0x98(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x809d704(,%ebx,8),%eax
mov    %eax,(%esp)
call   8079fe0 <argp_parse+0x20a0>
mov    %esi,0x4(%esp)
movl   $0xd,(%esp)
mov    %eax,%edi
call   804a570 <signal@plt>
cmp    0x98(%esp),%edi
je     8070be8 <fchmod@plt+0x25c48>
mov    %ebx,%eax
mov    $0x5,%edx
call   80700b0 <fchmod@plt+0x25110>
mov    %edi,%eax
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8070c04 <fchmod@plt+0x25c64>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8070bcb <fchmod@plt+0x25c2b>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   8070290 <fchmod@plt+0x252f0>
test   %eax,%eax
js     8070be0 <fchmod@plt+0x25c40>
cmp    %eax,%edi
je     8070c00 <fchmod@plt+0x25c60>
mov    %eax,%edi
jmp    8070bbd <fchmod@plt+0x25c1d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
jmp    8070bcb <fchmod@plt+0x25c2b>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf8(%esp),%edi
mov    0xf4(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0xcc(%esp)
xor    %eax,%eax
mov    0xfc(%esp),%ebp
test   %edi,%edi
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
js     8070e58 <fchmod@plt+0x25eb8>
movb   $0x0,0x4b(%esp)
lea    0x4b(%esp),%ebx
nop
mov    0x20(%esp),%eax
sub    $0x1,%ebx
mov    0x24(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <argp_parse+0xe390>
mov    0x24(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x20(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80861a0 <argp_parse+0xe260>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jne    8070c58 <fchmod@plt+0x25cb8>
test   %edi,%edi
mov    %ebx,%eax
js     8070e40 <fchmod@plt+0x25ea0>
cmp    $0x2,%ebp
ja     8070e50 <fchmod@plt+0x25eb0>
mov    %ebx,0x10(%esp)
lea    0x4c(%esp),%ebx
mov    %ebp,0x14(%esp)
movl   $0x808d2b3,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    0xf0(%esp),%eax
mov    %ebx,%edx
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     8070dac <fchmod@plt+0x25e0c>
mov    0xf0(%esp),%eax
lea    0x8c(%esp),%edx
call   8070180 <fchmod@plt+0x251e0>
test   %eax,%eax
je     8070dac <fchmod@plt+0x25e0c>
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    8070d3a <fchmod@plt+0x25d9a>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     8070d2f <fchmod@plt+0x25d8f>
cmp    $0x20,%dl
je     8070d2f <fchmod@plt+0x25d8f>
xor    %ebx,%ebx
cmp    $0x2d,%dl
sete   %bl
mov    $0x1,%ecx
test   %ebx,%ebx
je     8070e30 <fchmod@plt+0x25e90>
add    %eax,%ecx
xor    %edx,%edx
xor    %eax,%eax
mov    %edx,%ebp
mov    %eax,%edi
xchg   %ax,%ax
add    $0x1,%ecx
movsbl -0x1(%ecx),%esi
sub    $0x30,%esi
cmp    $0x9,%esi
ja     8070e10 <fchmod@plt+0x25e70>
imul   $0xa,%ebp,%eax
mov    %eax,0x2c(%esp)
mov    %edi,%eax
mov    $0xa,%edi
mul    %edi
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x24(%esp)
add    %eax,0x24(%esp)
test   %ebx,%ebx
je     8070dd8 <fchmod@plt+0x25e38>
mov    0x20(%esp),%edi
mov    %esi,%eax
mov    0x24(%esp),%ebp
cltd
sub    %esi,%edi
sbb    %edx,%ebp
cmp    %ebp,0x24(%esp)
jge    8070e18 <fchmod@plt+0x25e78>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
mov    0xcc(%esp),%edi
xor    %gs:0x14,%edi
jne    8070e70 <fchmod@plt+0x25ed0>
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %esi,%edi
mov    %esi,%ebp
mov    0x24(%esp),%edx
sar    $0x1f,%ebp
add    %eax,%edi
adc    %edx,%ebp
cmp    %ebp,%edx
jl     8070d60 <fchmod@plt+0x25dc0>
jg     8070dac <fchmod@plt+0x25e0c>
cmp    %edi,0x20(%esp)
ja     8070dac <fchmod@plt+0x25e0c>
add    $0x1,%ecx
movsbl -0x1(%ecx),%esi
sub    $0x30,%esi
cmp    $0x9,%esi
jbe    8070d73 <fchmod@plt+0x25dd3>
xchg   %ax,%ax
mov    %edi,%eax
mov    %ebp,%edx
jmp    8070db6 <fchmod@plt+0x25e16>
xchg   %ax,%ax
jg     8070d60 <fchmod@plt+0x25dc0>
cmp    %edi,0x20(%esp)
jb     8070dac <fchmod@plt+0x25e0c>
jmp    8070d60 <fchmod@plt+0x25dc0>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
cmp    $0x2b,%dl
sete   %cl
jmp    8070d54 <fchmod@plt+0x25db4>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
cmp    $0x2,%ebp
movb   $0x2d,-0x1(%eax)
jbe    8070cc9 <fchmod@plt+0x25d29>
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,%edx
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jmp    8070c4e <fchmod@plt+0x25cae>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%eax
mov    %gs:0x14,%edi
mov    %edi,0x7c(%esp)
xor    %edi,%edi
mov    0xa8(%esp),%ebx
cmp    $0x801c6d02,%eax
je     8070fe8 <fchmod@plt+0x26048>
cmp    $0x40086d01,%eax
je     8070ee8 <fchmod@plt+0x25f48>
call   804aaf0 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
mov    0x7c(%esp),%edi
xor    %gs:0x14,%edi
jne    80710c9 <fchmod@plt+0x26129>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ebp
movb   $0x0,0x3b(%esp)
mov    %ebp,%ecx
sar    $0x1f,%ecx
mov    %ecx,%edi
sar    $0x1f,%edi
mov    %edi,%esi
xor    %ebp,%edi
mov    %edi,0x18(%esp)
mov    %ecx,%edi
xor    %esi,%edi
mov    %edi,0x1c(%esp)
mov    0xa0(%esp),%edi
sub    %esi,0x18(%esp)
sbb    %esi,0x1c(%esp)
lea    0x3b(%esp),%esi
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
sub    $0x1,%esi
mov    0x1c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <argp_parse+0xe390>
mov    0x1c(%esp),%edx
add    $0x30,%eax
mov    %al,(%esi)
mov    0x18(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80861a0 <argp_parse+0xe260>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    8070f20 <fchmod@plt+0x25f80>
test   %ebp,%ebp
mov    %esi,%eax
mov    %edi,0xa0(%esp)
js     80710a8 <fchmod@plt+0x26108>
mov    %esi,0x14(%esp)
movswl (%ebx),%eax
lea    0x3c(%esp),%ebx
movl   $0x808d2bb,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    0xa0(%esp),%eax
mov    %ebx,%edx
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     8070ec7 <fchmod@plt+0x25f27>
mov    0xa0(%esp),%eax
call   8070290 <fchmod@plt+0x252f0>
jmp    8070ec7 <fchmod@plt+0x25f27>
xchg   %ax,%ax
mov    0xa0(%esp),%eax
mov    $0x8089513,%edx
call   8070100 <fchmod@plt+0x25160>
cmp    $0xffffffff,%eax
je     80710bf <fchmod@plt+0x2611f>
mov    0xa0(%esp),%eax
call   8070290 <fchmod@plt+0x252f0>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     80710bf <fchmod@plt+0x2611f>
cmp    $0x8,%eax
ja     80710b4 <fchmod@plt+0x26114>
test   %eax,%eax
mov    0xa0(%esp),%edi
jne    8071038 <fchmod@plt+0x26098>
jmp    8071078 <fchmod@plt+0x260d8>
nop
sub    %eax,%esi
add    %eax,%ebx
test   %esi,%esi
jle    8071078 <fchmod@plt+0x260d8>
mov    0x809d720(,%edi,8),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8080b00 <argp_parse+0x8bc0>
lea    -0x1(%eax),%edx
cmp    $0xfffffffd,%edx
jbe    8071030 <fchmod@plt+0x26090>
mov    %edi,%eax
mov    $0x5,%edx
mov    %edi,0xa0(%esp)
call   80700b0 <fchmod@plt+0x25110>
mov    $0xffffffff,%eax
jmp    8070ec7 <fchmod@plt+0x25f27>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xff,(%ebx)
jle    807109f <fchmod@plt+0x260ff>
test   %esi,%esi
je     807109f <fchmod@plt+0x260ff>
xor    %eax,%eax
xchg   %ax,%ax
movzbl (%ebx,%eax,1),%ecx
movzbl 0x1(%ebx,%eax,1),%edx
mov    %cl,0x1(%ebx,%eax,1)
mov    %dl,(%ebx,%eax,1)
add    $0x2,%eax
cmp    %esi,%eax
jb     8071088 <fchmod@plt+0x260e8>
xor    %eax,%eax
jmp    8070ec7 <fchmod@plt+0x25f27>
xchg   %ax,%ax
sub    $0x1,%esi
movb   $0x2d,-0x1(%eax)
jmp    8070f8f <fchmod@plt+0x25fef>
call   804aaf0 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    8070ec7 <fchmod@plt+0x25f27>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x10,%esp
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8082480 <argp_parse+0xa540>
test   %eax,%eax
js     8071108 <fchmod@plt+0x26168>
add    $0x1,%ebx
cmp    $0x3,%ebx
jne    80710dd <fchmod@plt+0x2613d>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x9,(%eax)
je     8071118 <fchmod@plt+0x26178>
xor    %esi,%esi
jmp    80710f1 <fchmod@plt+0x26151>
xchg   %ax,%ax
mov    0x808d328(,%ebx,4),%edi
test   %edi,%edi
jne    8071148 <fchmod@plt+0x261a8>
mov    %edi,0x4(%esp)
movl   $0x808d313,(%esp)
call   804aa10 <__open64_2@plt>
cmp    %ebx,%eax
je     80710f1 <fchmod@plt+0x26151>
test   %eax,%eax
js     8071112 <fchmod@plt+0x26172>
mov    %eax,(%esp)
xor    %esi,%esi
call   804aef0 <close@plt>
jmp    80710f1 <fchmod@plt+0x26151>
nop
mov    %edi,0x4(%esp)
movl   $0x808d31d,(%esp)
call   804aa10 <__open64_2@plt>
cmp    %ebx,%eax
jne    8071123 <fchmod@plt+0x26183>
xor    %eax,%eax
test   %ebx,%ebx
jne    807113b <fchmod@plt+0x2619b>
jmp    80710f1 <fchmod@plt+0x26151>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
test   $0x2,%al
je     80711e0 <fchmod@plt+0x26240>
movb   $0x77,0x809e090
mov    %eax,%edx
and    $0x4,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xffffffbc,%edx
add    $0x71,%edx
mov    %dl,0x809e091
mov    %eax,%edx
and    $0x8,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xffffffe8,%edx
add    $0x45,%edx
mov    %dl,0x809e092
mov    %eax,%edx
and    $0x10,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0x20,%eax
and    $0xffffffc3,%edx
add    $0x6a,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffba,%eax
add    $0x73,%eax
mov    %al,0x809e094
mov    $0x809e090,%eax
mov    %dl,0x809e093
movb   $0x0,0x809e095
ret
lea    0x0(%esi),%esi
mov    %eax,%edx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xffffffbf,%edx
add    $0x6e,%edx
mov    %dl,0x809e090
jmp    807117b <fchmod@plt+0x261db>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x3c,%esp
mov    0x48(%eax),%ebx
test   %ebx,%ebx
jne    8071252 <fchmod@plt+0x262b2>
jmp    80712ac <fchmod@plt+0x2630c>
nop
mov    0xc(%ebx),%edx
mov    %edx,0x28(%esp)
call   8071170 <fchmod@plt+0x261d0>
mov    0x28(%esp),%edx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
add    $0x1,%esi
movl   $0x808d334,(%esp)
mov    %eax,0xc(%esp)
call   *%edi
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
je     80712ac <fchmod@plt+0x2630c>
mov    0x8(%ebx),%eax
mov    0x28(%ebp),%edi
test   $0x2,%al
jne    8071218 <fchmod@plt+0x26278>
mov    0xc(%ebx),%edx
mov    0x38(%ebp),%ecx
mov    %edi,0x28(%esp)
mov    0x10(%ebx),%edi
add    %edx,%ecx
sub    %edx,%edi
mov    %ecx,0x2c(%esp)
call   8071170 <fchmod@plt+0x261d0>
mov    0x2c(%esp),%ecx
mov    %edi,0x14(%esp)
mov    0x28(%esp),%edi
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
add    $0x1,%esi
movl   $0x808d34c,(%esp)
mov    %eax,0xc(%esp)
call   *%edi
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8071252 <fchmod@plt+0x262b2>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    0x14(%esp),%esi
mov    0xc(%esp),%ecx
mov    0x10(%esp),%ebx
test   %esi,%esi
je     80712f7 <fchmod@plt+0x26357>
xor    %edx,%edx
xor    %eax,%eax
jmp    80712da <fchmod@plt+0x2633a>
mov    %edx,%eax
cmpb   $0x5c,(%ebx,%edx,1)
sete   %dl
add    $0x1,%ecx
movzbl %dl,%edx
add    %edx,%eax
movzbl (%ebx,%eax,1),%edx
mov    %dl,-0x1(%ecx)
lea    0x1(%eax),%edx
cmp    %esi,%edx
jb     80712d8 <fchmod@plt+0x26338>
movb   $0x0,(%ecx)
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x10(%eax),%ebp
mov    0x40(%eax),%ebx
test   $0x800,%ebp
jne    8071330 <fchmod@plt+0x26390>
and    $0x1000,%ebp
cmp    $0x1,%ebp
adc    $0x0,%ebx
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
and    $0x1000,%ebp
je     8071388 <fchmod@plt+0x263e8>
mov    0x38(%eax),%edi
movzbl (%edi,%ebx,1),%edx
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x14(%esi),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
je     8071388 <fchmod@plt+0x263e8>
mov    0x3c(%esi),%eax
jmp    807136d <fchmod@plt+0x263cd>
lea    0x0(%esi),%esi
cmp    (%edi,%ebx,1),%dl
jne    8071374 <fchmod@plt+0x263d4>
add    $0x1,%ebx
cmp    %eax,%ebx
jb     8071368 <fchmod@plt+0x263c8>
sub    $0x1,%ebx
cmp    $0x1,%ebp
adc    $0x0,%ebx
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x3c(%esi),%edi
jmp    80713aa <fchmod@plt+0x2640a>
lea    0x0(%esi),%esi
mov    0x38(%esi),%eax
movsbl (%eax,%ebx,1),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8071374 <fchmod@plt+0x263d4>
add    $0x1,%ebx
cmp    %edi,%ebx
jb     8071390 <fchmod@plt+0x263f0>
sub    $0x1,%ebx
jmp    8071377 <fchmod@plt+0x263d7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x8(%esp)
test   %eax,%eax
jle    8071462 <fchmod@plt+0x264c2>
movzbl (%edx),%ebp
cmp    $0x7f,%ebp
jg     8071462 <fchmod@plt+0x264c2>
xor    %edi,%edi
mov    %ebp,%eax
mov    %ecx,%esi
mov    %edi,%ebp
xor    %ebx,%ebx
mov    %eax,%edi
jmp    8071427 <fchmod@plt+0x26487>
lea    0x0(%esi,%eiz,1),%esi
call   804a350 <__ctype_toupper_loc@plt>
mov    (%eax),%eax
mov    (%eax,%edi,4),%eax
sub    $0x37,%eax
cmp    %esi,%eax
jge    8071450 <fchmod@plt+0x264b0>
mov    %ebp,%ecx
add    $0x1,%ebx
imul   %esi,%ecx
cmp    0x30(%esp),%ebx
lea    (%eax,%ecx,1),%ebp
je     8071450 <fchmod@plt+0x264b0>
mov    0x8(%esp),%eax
movzbl (%eax,%ebx,1),%edi
cmp    $0x7f,%edi
jg     8071450 <fchmod@plt+0x264b0>
lea    -0x30(%edi),%eax
cmp    $0x9,%eax
jbe    8071405 <fchmod@plt+0x26465>
mov    %edi,0x4(%esp)
movl   $0x808d366,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
jne    80713f8 <fchmod@plt+0x26458>
mov    $0xff,%eax
cmp    %esi,%eax
jl     8071409 <fchmod@plt+0x26469>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edi
mov    0xc(%esp),%eax
mov    %edi,(%eax)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edi,%edi
xor    %ebx,%ebx
jmp    8071452 <fchmod@plt+0x264b2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
cmp    0x48(%esp),%ebx
jae    807149d <fchmod@plt+0x264fd>
movzbl (%edi,%ebx,1),%eax
cmp    $0x5c,%al
je     80714a8 <fchmod@plt+0x26508>
mov    %al,(%esi)
add    $0x1,%ebx
add    $0x1,%esi
cmp    0x48(%esp),%ebx
jb     8071487 <fchmod@plt+0x264e7>
movb   $0x0,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x1(%ebx),%eax
lea    (%edi,%eax,1),%ebp
movsbl 0x0(%ebp),%ecx
mov    %eax,0xc(%esp)
mov    %ecx,%eax
and    $0xffffffdf,%eax
cmp    $0x58,%al
jne    8071500 <fchmod@plt+0x26560>
mov    0x48(%esp),%eax
sub    0xc(%esp),%eax
cmp    $0x1,%eax
jbe    8071530 <fchmod@plt+0x26590>
add    $0x2,%ebx
mov    $0x10,%ecx
lea    (%edi,%ebx,1),%edx
movl   $0x2,(%esp)
lea    0x1c(%esp),%eax
call   80713c0 <fchmod@plt+0x26420>
test   %eax,%eax
jne    8071580 <fchmod@plt+0x265e0>
movb   $0x5c,(%esi)
movzbl 0x0(%ebp),%eax
add    $0x2,%esi
mov    %al,-0x1(%esi)
jmp    8071481 <fchmod@plt+0x264e1>
xchg   %ax,%ax
lea    -0x30(%ecx),%eax
cmp    $0x9,%al
ja     8071548 <fchmod@plt+0x265a8>
mov    0xc(%esp),%eax
cmp    %eax,0x48(%esp)
je     8071530 <fchmod@plt+0x26590>
movl   $0x3,(%esp)
mov    $0x8,%ecx
mov    %ebp,%edx
lea    0x1c(%esp),%eax
call   80713c0 <fchmod@plt+0x26420>
test   %eax,%eax
jne    80715b0 <fchmod@plt+0x26610>
movb   $0x5c,(%esi)
movzbl 0x0(%ebp),%eax
add    $0x2,%ebx
add    $0x2,%esi
mov    %al,-0x1(%esi)
jmp    8071481 <fchmod@plt+0x264e1>
lea    0x0(%esi),%esi
movsbl 0x809d780,%eax
add    $0x2,%ebx
lea    0x1(%esi),%ebp
test   %al,%al
je     8071576 <fchmod@plt+0x265d6>
cmp    %eax,%ecx
je     8071597 <fchmod@plt+0x265f7>
mov    $0x809d780,%eax
jmp    807156c <fchmod@plt+0x265cc>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%ecx
je     80715a0 <fchmod@plt+0x26600>
add    $0x2,%eax
movsbl (%eax),%edx
test   %dl,%dl
jne    8071568 <fchmod@plt+0x265c8>
mov    %cl,(%esi)
mov    %ebp,%esi
jmp    8071481 <fchmod@plt+0x264e1>
nop
mov    0x1c(%esp),%edx
add    $0x1,%esi
mov    0xc(%esp),%ecx
mov    %dl,-0x1(%esi)
lea    0x1(%ecx,%eax,1),%ebx
jmp    8071481 <fchmod@plt+0x264e1>
mov    $0x809d780,%eax
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x1(%eax),%ecx
mov    %cl,(%esi)
mov    %ebp,%esi
jmp    8071481 <fchmod@plt+0x264e1>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%edx
add    $0x1,%esi
mov    0xc(%esp),%ebx
mov    %dl,-0x1(%esi)
add    %eax,%ebx
jmp    8071481 <fchmod@plt+0x264e1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804a400 <__vfprintf_chk@plt>
mov    0x809d864,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804acd0 <fputc@plt>
add    $0x1c,%esp
ret
jmp    8071620 <fchmod@plt+0x26680>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8087452,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   *%ebx
call   804ae30 <abort@plt>
jmp    8071660 <fchmod@plt+0x266c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
testb  $0x2,0x8(%eax)
je     8071677 <fchmod@plt+0x266d7>
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4,%esp
mov    0x48(%eax),%edx
test   %edx,%edx
je     80716e8 <fchmod@plt+0x26748>
xchg   %ax,%ax
testb  $0x1,0x8(%edx)
mov    0x4(%edx),%ebx
je     80716cf <fchmod@plt+0x2672f>
mov    (%edx),%ecx
test   %ecx,%ecx
je     80716f0 <fchmod@plt+0x26750>
mov    %ebx,0x4(%ecx)
mov    0x4(%edx),%eax
test   %eax,%eax
je     80716d8 <fchmod@plt+0x26738>
mov    %ecx,(%eax)
movl   $0x0,(%edx)
mov    %edx,%eax
movl   $0x0,0x4(%edx)
call   8071660 <fchmod@plt+0x266c0>
test   %ebx,%ebx
je     80716e8 <fchmod@plt+0x26748>
mov    %ebx,%edx
jmp    80716a0 <fchmod@plt+0x26700>
nop
andl   $0xffffffef,0x8(%ecx)
mov    %ecx,0x4c(%esi)
jmp    80716bb <fchmod@plt+0x2671b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,0x48(%esi)
mov    0x4(%edx),%eax
test   %eax,%eax
jne    80716b9 <fchmod@plt+0x26719>
jmp    80716dc <fchmod@plt+0x2673c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x8(%eax),%eax
test   $0x1,%al
jne    8071730 <fchmod@plt+0x26790>
test   $0x2,%al
jne    8071718 <fchmod@plt+0x26778>
mov    0x10(%edx),%eax
sub    0xc(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0xc(%edx),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
cmpl   $0x0,0x48(%eax)
je     8071760 <fchmod@plt+0x267c0>
push   %ebx
mov    0x4(%ecx),%ebx
test   %ebx,%ebx
je     8071778 <fchmod@plt+0x267d8>
mov    %edx,(%ebx)
mov    %ebx,0x4(%edx)
mov    %ecx,(%edx)
pop    %ebx
mov    %edx,0x4(%ecx)
ret
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
mov    %edx,0x4c(%eax)
mov    %edx,0x48(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x4c(%eax)
jmp    8071750 <fchmod@plt+0x267b0>
lea    0x0(%esi),%esi
movsbl 0x809d780,%edx
mov    0x4(%esp),%eax
test   %dl,%dl
je     80717ae <fchmod@plt+0x2680e>
cmp    %eax,%edx
je     80717b0 <fchmod@plt+0x26810>
mov    $0x809d780,%edx
jmp    80717a4 <fchmod@plt+0x26804>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
je     80717b8 <fchmod@plt+0x26818>
add    $0x2,%edx
movsbl (%edx),%ecx
test   %cl,%cl
jne    80717a0 <fchmod@plt+0x26800>
repz ret
mov    $0x809d780,%edx
lea    0x0(%esi),%esi
movsbl 0x1(%edx),%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%ecx
mov    $0x809d791,%eax
lea    0x0(%esi,%eiz,1),%esi
movsbl (%eax),%edx
cmp    %ecx,%edx
je     80717e8 <fchmod@plt+0x26848>
sub    $0x2,%eax
cmp    $0x809d780,%eax
ja     80717d0 <fchmod@plt+0x26830>
mov    $0xffffffff,%eax
ret
nop
movsbl -0x1(%eax),%eax
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
mov    0x38(%esp),%esi
mov    0x34(%esp),%edi
movl   $0x0,(%esi)
movsbl 0x0(%ebp),%eax
test   %al,%al
jne    807182a <fchmod@plt+0x2688a>
jmp    8071868 <fchmod@plt+0x268c8>
lea    0x0(%esi),%esi
cmp    $0x1f,%al
jle    8071854 <fchmod@plt+0x268b4>
add    $0x1,%ebx
add    $0x1,%ebp
movsbl 0x0(%ebp),%eax
test   %al,%al
je     8071868 <fchmod@plt+0x268c8>
mov    %eax,0x4(%esp)
movl   $0x808d373,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8071844 <fchmod@plt+0x268a4>
movl   $0x1,(%esi)
movzbl 0x0(%ebp),%eax
cmp    $0x20,%al
je     807181c <fchmod@plt+0x2687c>
cmp    $0x22,%al
je     807187e <fchmod@plt+0x268de>
cmp    $0x5c,%al
jne    8071818 <fchmod@plt+0x26878>
test   %edi,%edi
je     8071888 <fchmod@plt+0x268e8>
add    $0x1,%ebp
movsbl 0x0(%ebp),%eax
add    $0x3,%ebx
test   %al,%al
jne    807182a <fchmod@plt+0x2688a>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0xff,-0x1(%edx)
je     807189f <fchmod@plt+0x268ff>
add    $0x2,%ebx
jmp    807181f <fchmod@plt+0x2687f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x809d791,%edx
lea    0x0(%esi),%esi
cmp    (%edx),%al
je     8071878 <fchmod@plt+0x268d8>
sub    $0x2,%edx
cmp    $0x809d780,%edx
ja     8071890 <fchmod@plt+0x268f0>
add    $0x4,%ebx
jmp    807181f <fchmod@plt+0x2687f>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%edi
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
test   %edi,%edi
je     8071910 <fchmod@plt+0x26970>
xor    %eax,%eax
xor    %ebx,%ebx
jmp    80718e4 <fchmod@plt+0x26944>
lea    0x0(%esi),%esi
movzbl 0x0(%ebp,%ebx,1),%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
lea    0x1(%ebx),%eax
cmp    %edi,%eax
jae    8071910 <fchmod@plt+0x26970>
mov    %eax,%ebx
cmpb   $0x5c,0x0(%ebp,%eax,1)
jne    80718d0 <fchmod@plt+0x26930>
cmp    %eax,%edi
jbe    80718d0 <fchmod@plt+0x26930>
movsbl 0x1(%ebp,%eax,1),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a910 <strchr@plt>
cmp    $0x1,%eax
sbb    $0xffffffff,%ebx
jmp    80718d0 <fchmod@plt+0x26930>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
lea    0x28(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x50(%esp),%ebx
mov    0x58(%esp),%ebp
movzbl (%esi),%edx
test   %dl,%dl
jne    807196e <fchmod@plt+0x269ce>
jmp    8071a00 <fchmod@plt+0x26a60>
nop
cmp    $0x1f,%dl
jle    807197c <fchmod@plt+0x269dc>
mov    %dl,(%ebx)
add    $0x1,%ebx
lea    0x0(%esi),%esi
add    $0x1,%esi
movzbl (%esi),%edx
test   %dl,%dl
je     8071a00 <fchmod@plt+0x26a60>
cmp    $0x22,%dl
je     8071a20 <fchmod@plt+0x26a80>
cmp    $0x5c,%dl
jne    8071950 <fchmod@plt+0x269b0>
test   %ebp,%ebp
mov    $0x809d791,%eax
jne    8071a38 <fchmod@plt+0x26a98>
lea    0x0(%esi,%eiz,1),%esi
cmp    (%eax),%dl
je     8071a80 <fchmod@plt+0x26ae0>
sub    $0x2,%eax
cmp    $0x809d780,%eax
ja     8071990 <fchmod@plt+0x269f0>
lea    0x1(%ebx),%edx
movb   $0x5c,(%ebx)
movzbl (%esi),%eax
add    $0x1,%esi
add    $0x4,%ebx
movl   $0x808d37d,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   804a3b0 <__snprintf_chk@plt>
mov    0x1c(%esp),%edx
movzwl (%edi),%eax
mov    %ax,(%edx)
movzbl 0x2(%edi),%eax
mov    %al,0x2(%edx)
movzbl (%esi),%edx
test   %dl,%dl
jne    807196e <fchmod@plt+0x269ce>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    8071a9e <fchmod@plt+0x26afe>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x5c,(%ebx)
movzbl (%esi),%eax
add    $0x2,%ebx
mov    %al,-0x1(%ebx)
jmp    8071960 <fchmod@plt+0x269c0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x14(%esp)
add    $0x3,%ebx
movl   $0x808d376,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   804a3b0 <__snprintf_chk@plt>
movzwl (%edi),%eax
mov    %ax,-0x3(%ebx)
movzbl 0x2(%edi),%eax
mov    %al,-0x1(%ebx)
jmp    8071960 <fchmod@plt+0x269c0>
lea    0x0(%esi),%esi
movzbl -0x1(%eax),%eax
movb   $0x5c,(%ebx)
cmp    $0xff,%al
je     8071a96 <fchmod@plt+0x26af6>
mov    %al,0x1(%ebx)
add    $0x2,%ebx
jmp    8071960 <fchmod@plt+0x269c0>
lea    0x1(%ebx),%edx
jmp    80719a8 <fchmod@plt+0x26a08>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     8071af4 <fchmod@plt+0x26b54>
mov    0x8(%esi),%edx
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    (%ebx,%edx,1),%ecx
mov    (%eax,%ecx,4),%eax
test   %eax,%eax
je     8071aed <fchmod@plt+0x26b4d>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x8(%esi),%edx
mov    0x4(%esi),%eax
lea    (%ebx,%edx,1),%ecx
movl   $0x0,(%eax,%ecx,4)
add    $0x1,%ebx
cmp    %ebx,(%esi)
ja     8071ac8 <fchmod@plt+0x26b28>
movl   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
sub    $0x1c,%esp
mov    0x10(%eax),%edx
test   $0x8,%dl
je     8071b30 <fchmod@plt+0x26b90>
and    $0x1,%edx
je     8071b48 <fchmod@plt+0x26ba8>
movl   $0x0,0x44(%eax)
movl   $0x0,0x4c(%eax)
movl   $0x0,0x48(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
movl   $0x0,0xc(%eax)
jmp    8071b10 <fchmod@plt+0x26b70>
xchg   %ax,%ax
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   8071ab0 <fchmod@plt+0x26b10>
mov    0xc(%esp),%eax
jmp    8071b10 <fchmod@plt+0x26b70>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8071ab0 <fchmod@plt+0x26b10>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpl   $0x7,0x44(%ebx)
ja     8071cc0 <fchmod@plt+0x26d20>
mov    0x44(%ebx),%eax
jmp    *0x808d510(,%eax,4)
xchg   %ax,%ax
mov    0x24(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x808d49c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
call   *%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d38b,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x20(%esp)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d3a3,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
lea    0x0(%esi),%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d3ba,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
lea    0x0(%esi),%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d3cd,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
lea    0x0(%esi),%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d382,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
lea    0x0(%esi),%esi
mov    0x40(%ebx),%esi
mov    0x38(%ebx),%eax
mov    0x24(%ebx),%edi
movsbl (%eax,%esi,1),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d474,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8087452,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
mov    0x24(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d3dd,0x4(%esp)
jmp    8071be7 <fchmod@plt+0x26c47>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
call   804aaf0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    0x10(%esi),%eax
movl   $0x2,0x44(%esi)
test   $0x80,%al
jne    8071d40 <fchmod@plt+0x26da0>
test   $0x10,%al
jne    8071d4d <fchmod@plt+0x26dad>
test   $0x8,%al
je     8071d5c <fchmod@plt+0x26dbc>
mov    0x48(%esi),%eax
test   %eax,%eax
jne    8071d1a <fchmod@plt+0x26d7a>
nop
jmp    8071d26 <fchmod@plt+0x26d86>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
call   8071660 <fchmod@plt+0x266c0>
test   %ebx,%ebx
jne    8071d18 <fchmod@plt+0x26d78>
mov    0x44(%esi),%eax
movl   $0x0,0x4c(%esi)
movl   $0x0,0x48(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   *0x20(%esi)
mov    0x10(%esi),%eax
test   $0x10,%al
je     8071d04 <fchmod@plt+0x26d64>
mov    %esi,(%esp)
call   8071b90 <fchmod@plt+0x26bf0>
mov    0x10(%esi),%eax
test   $0x8,%al
jne    8071d08 <fchmod@plt+0x26d68>
mov    %esi,(%esp)
call   8071ab0 <fchmod@plt+0x26b10>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x0,0x4(%esi)
jmp    8071d08 <fchmod@plt+0x26d68>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
movl   $0x14,0x4(%esp)
movl   $0x1,(%esp)
call   804af80 <calloc@plt>
test   %eax,%eax
je     8071db0 <fchmod@plt+0x26e10>
mov    %eax,(%ebx)
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8071ce0 <fchmod@plt+0x26d40>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
cmp    %edx,%ecx
je     8071e18 <fchmod@plt+0x26e78>
lea    0xc(%esp),%edx
mov    %esi,%eax
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8071e0e <fchmod@plt+0x26e6e>
mov    0x30(%esp),%eax
mov    0xc(%esp),%ebx
and    $0xfffffefd,%eax
mov    %eax,0x8(%ebx)
mov    %edi,0xc(%ebx)
mov    %ebp,0x10(%ebx)
movl   $0x0,0x4(%ebx)
mov    0x4c(%esi),%eax
test   %eax,%eax
mov    %eax,(%ebx)
je     8071e30 <fchmod@plt+0x26e90>
mov    %ebx,0x4(%eax)
mov    %ebx,0x4c(%esi)
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x30(%esp),%eax
and    $0x100,%eax
jne    8071dd1 <fchmod@plt+0x26e31>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x48(%esi)
jmp    8071e09 <fchmod@plt+0x26e69>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
lea    0x1c(%esp),%edx
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
mov    %eax,%ebx
je     8071e70 <fchmod@plt+0x26ed0>
mov    $0x1,%ebx
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ecx
mov    %esi,%eax
mov    0x1c(%esp),%edx
call   8071740 <fchmod@plt+0x267a0>
mov    0x8(%ebp),%eax
test   $0x2,%al
je     8071ee8 <fchmod@plt+0x26f48>
test   $0x1,%al
movl   $0x808d3ee,0xc(%esp)
jne    8071e97 <fchmod@plt+0x26ef7>
mov    0xc(%ebp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8071f18 <fchmod@plt+0x26f78>
mov    0xc(%esp),%eax
mov    0x44(%esp),%ecx
add    0x40(%esp),%eax
mov    %ebp,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x44(%esp),%eax
mov    $0x2,%edx
movb   $0x0,0x0(%ebp,%eax,1)
mov    0x1c(%esp),%eax
movl   $0x2,0x8(%eax)
mov    %ebp,0xc(%eax)
jmp    8071f00 <fchmod@plt+0x26f60>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    0x40(%esp),%edx
add    0xc(%ebp),%edx
mov    %edx,0xc(%eax)
add    0x44(%esp),%edx
mov    %edx,0x10(%eax)
mov    0x8(%eax),%edx
or     0x48(%esp),%edx
mov    %edx,0x8(%eax)
mov    %eax,(%edi)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   8071ce0 <fchmod@plt+0x26d40>
mov    %eax,%ebx
jmp    8071e61 <fchmod@plt+0x26ec1>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x48(%esp),%ebx
mov    0x4c(%esp),%esi
test   %edi,%edi
je     8072078 <fchmod@plt+0x270d8>
test   $0x10000,%esi
mov    %esi,0x10(%ebx)
jne    8071f5d <fchmod@plt+0x26fbd>
movl   $0x8071620,0x20(%ebx)
mov    %esi,%edx
and    $0x20000,%edx
jne    8071f6e <fchmod@plt+0x26fce>
movl   $0x80715d0,0x24(%ebx)
testl  $0x180040,0x10(%ebx)
jne    8071fa0 <fchmod@plt+0x27000>
call   804aaf0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x4,%eax
testb  $0x10,0x10(%ebx)
movl   $0x4,0x44(%ebx)
jne    80720e1 <fchmod@plt+0x27141>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   $0x4,%esi
je     80720c0 <fchmod@plt+0x27120>
test   $0x200000,%esi
mov    %esi,%eax
je     8071fc2 <fchmod@plt+0x27022>
test   $0x40000,%esi
je     8072248 <fchmod@plt+0x272a8>
mov    0x44(%esp),%ecx
test   $0x2,%al
mov    %edi,0x38(%ebx)
mov    %ecx,0x3c(%ebx)
jne    8071fd7 <fchmod@plt+0x27037>
movl   $0x0,0x8(%ebx)
test   $0x40,%ah
jne    8071fe3 <fchmod@plt+0x27043>
movl   $0x808d3eb,0x14(%ebx)
test   $0x80,%ah
jne    8071fef <fchmod@plt+0x2704f>
movl   $0x0,0x18(%ebx)
test   $0x4000000,%eax
jne    8071ffd <fchmod@plt+0x2705d>
movl   $0x0,0x34(%ebx)
movl   $0x0,0x40(%ebx)
mov    %ebx,%eax
call   8071b00 <fchmod@plt+0x26b60>
xor    %edx,%edx
testb  $0x20,0x12(%ebx)
je     8072100 <fchmod@plt+0x27160>
mov    0x44(%esp),%eax
mov    %edx,0x14(%esp)
mov    %edi,0x8(%esp)
movl   $0x808d3ef,(%esp)
mov    %eax,0x4(%esp)
call   *0x28(%ebx)
mov    0x14(%esp),%edx
mov    %ebx,%eax
call   80723e0 <fchmod@plt+0x27440>
test   %eax,%eax
mov    %eax,%edi
je     8072111 <fchmod@plt+0x27171>
mov    0x48(%ebx),%eax
test   %eax,%eax
jne    8072052 <fchmod@plt+0x270b2>
jmp    807205e <fchmod@plt+0x270be>
nop
mov    %esi,%eax
mov    0x4(%eax),%esi
call   8071660 <fchmod@plt+0x266c0>
test   %esi,%esi
jne    8072050 <fchmod@plt+0x270b0>
movl   $0x0,0x4c(%ebx)
mov    %edi,%eax
movl   $0x0,0x48(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   $0x20000000,%esi
mov    $0x16,%eax
je     8071f98 <fchmod@plt+0x26ff8>
mov    %ebx,%eax
call   8071300 <fchmod@plt+0x26360>
mov    0x3c(%ebx),%ecx
mov    %eax,%edx
mov    0x40(%ebx),%eax
cmp    %ecx,%eax
je     807225d <fchmod@plt+0x272bd>
mov    0x38(%ebx),%edi
sub    %eax,%ecx
orl    $0x8,0x10(%ebx)
mov    %edx,0x14(%esp)
add    %eax,%edi
mov    %ebx,%eax
mov    %ecx,0x44(%esp)
call   8071b00 <fchmod@plt+0x26b60>
mov    0x14(%esp),%edx
jmp    80720f6 <fchmod@plt+0x27156>
call   804aaf0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x3,%eax
testb  $0x10,0x10(%ebx)
movl   $0x3,0x44(%ebx)
je     8071f98 <fchmod@plt+0x26ff8>
mov    %ebx,(%esp)
call   8071b90 <fchmod@plt+0x26bf0>
mov    0x44(%ebx),%eax
test   %eax,%eax
jne    8071f98 <fchmod@plt+0x26ff8>
xor    %edx,%edx
testb  $0x20,0x12(%ebx)
jne    8072017 <fchmod@plt+0x27077>
mov    %ebx,%eax
call   80723e0 <fchmod@plt+0x27440>
test   %eax,%eax
mov    %eax,%edi
jne    8072046 <fchmod@plt+0x270a6>
and    $0x20000000,%esi
jne    807221c <fchmod@plt+0x2727c>
mov    0x48(%ebx),%esi
test   %esi,%esi
je     8072320 <fchmod@plt+0x27380>
mov    %esi,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8072130 <fchmod@plt+0x27190>
lea    0x1(%edx),%edi
xor    %eax,%eax
testb  $0x2,0x10(%ebx)
je     8072148 <fchmod@plt+0x271a8>
mov    0x8(%ebx),%eax
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
je     8072340 <fchmod@plt+0x273a0>
mov    (%ebx),%ebp
add    %ebp,%eax
lea    (%eax,%edi,1),%edx
cmp    %edx,0xc(%ebx)
mov    %ebp,0x14(%esp)
jb     8072288 <fchmod@plt+0x272e8>
test   %esi,%esi
jne    80721d8 <fchmod@plt+0x27238>
jmp    80722d0 <fchmod@plt+0x27330>
mov    0xc(%esi),%edx
mov    %esi,%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   8071700 <fchmod@plt+0x26760>
mov    %eax,%ebp
lea    0x1(%eax),%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %eax,%edi
mov    0x14(%esp),%eax
add    0x8(%ebx),%eax
test   %edi,%edi
mov    %edi,(%ecx,%eax,4)
je     8072310 <fchmod@plt+0x27370>
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   804a4e0 <memcpy@plt>
movb   $0x0,(%edi,%ebp,1)
mov    (%ebx),%eax
mov    0x4(%esi),%esi
mov    0x4(%ebx),%ecx
add    $0x1,%eax
test   %esi,%esi
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
je     80722d0 <fchmod@plt+0x27330>
mov    0x8(%esi),%eax
mov    $0x808d3ee,%edx
test   $0x1,%al
jne    8072173 <fchmod@plt+0x271d3>
test   $0x2,%al
jne    8072170 <fchmod@plt+0x271d0>
mov    0x38(%ebx),%edx
add    0xc(%esi),%edx
jmp    8072173 <fchmod@plt+0x271d3>
mov    0x38(%ebx),%eax
sub    %edi,%ebp
mov    %ebp,0x4(%esp)
movl   $0x808d3fb,(%esp)
add    %edi,%eax
mov    %eax,0x8(%esp)
call   *0x28(%ebx)
mov    %esi,%edx
mov    %ebx,%eax
call   80723e0 <fchmod@plt+0x27440>
test   %eax,%eax
mov    %eax,%edi
jne    8072046 <fchmod@plt+0x270a6>
mov    0x48(%ebx),%esi
test   %esi,%esi
jne    8072128 <fchmod@plt+0x27188>
mov    0x40(%ebx),%edi
mov    0x3c(%ebx),%ebp
cmp    %ebp,%edi
jae    8072320 <fchmod@plt+0x27380>
mov    %ebx,%eax
call   8071300 <fchmod@plt+0x26360>
testb  $0x20,0x12(%ebx)
mov    %eax,%esi
je     8072209 <fchmod@plt+0x27269>
jmp    80721f0 <fchmod@plt+0x27250>
xchg   %ax,%ax
test   %edx,%edx
je     807232a <fchmod@plt+0x2738a>
mov    0x24(%ebx),%eax
mov    %eax,0x28(%ebx)
mov    %esi,%eax
jmp    8071fc2 <fchmod@plt+0x27022>
testb  $0x10,0x10(%ebx)
mov    $0x7,%eax
movl   $0x7,0x44(%ebx)
je     8071f98 <fchmod@plt+0x26ff8>
mov    %ebx,(%esp)
call   8071b90 <fchmod@plt+0x26bf0>
mov    0x44(%ebx),%eax
jmp    8071f98 <fchmod@plt+0x26ff8>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x80,%edi
mov    $0x80,%edx
cmovae %edi,%edx
lea    (%eax,%edx,1),%edi
lea    0x0(,%edi,4),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804a7e0 <realloc@plt>
test   %eax,%eax
je     8072373 <fchmod@plt+0x273d3>
mov    (%ebx),%ecx
mov    %edi,0xc(%ebx)
mov    0x48(%ebx),%esi
mov    %eax,0x4(%ebx)
mov    %ecx,0x14(%esp)
mov    %eax,%ecx
jmp    8072167 <fchmod@plt+0x271c7>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
add    0x8(%ebx),%eax
movl   $0x0,(%ecx,%eax,4)
mov    0x48(%ebx),%eax
test   %eax,%eax
jne    80722ea <fchmod@plt+0x2734a>
jmp    80722f6 <fchmod@plt+0x27356>
nop
mov    %esi,%eax
mov    0x4(%eax),%esi
call   8071660 <fchmod@plt+0x266c0>
test   %esi,%esi
jne    80722e8 <fchmod@plt+0x27348>
movl   $0x0,0x4c(%ebx)
mov    0x44(%ebx),%eax
movl   $0x0,0x48(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,%eax
call   8071ce0 <fchmod@plt+0x26d40>
jmp    80722de <fchmod@plt+0x2733e>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%edi
jmp    807213d <fchmod@plt+0x2719d>
test   $0x10,%esi
je     8072364 <fchmod@plt+0x273c4>
movl   $0x80715d0,0x28(%ebx)
mov    %esi,%eax
jmp    8071fc2 <fchmod@plt+0x27022>
add    %edi,%eax
cmp    $0x80,%eax
mov    $0x80,%eax
cmovbe %eax,%edi
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   804af80 <calloc@plt>
jmp    80722ac <fchmod@plt+0x2730c>
mov    %esi,%eax
and    $0xffdfffff,%eax
mov    %eax,0x10(%ebx)
jmp    8071fc2 <fchmod@plt+0x27022>
mov    %ebx,%eax
call   8071ce0 <fchmod@plt+0x26d40>
test   %eax,%eax
jne    80722de <fchmod@plt+0x2733e>
mov    (%ebx),%eax
mov    0x4(%ebx),%ecx
mov    0x48(%ebx),%esi
mov    %eax,0x14(%esp)
jmp    8072167 <fchmod@plt+0x271c7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80723d8 <fchmod@plt+0x27438>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    0x28(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x8(%esp)
call   8071f30 <fchmod@plt+0x26f90>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80723b4 <fchmod@plt+0x27414>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    0x10(%eax),%esi
mov    %eax,0x18(%esp)
mov    %edx,0x24(%esp)
mov    %esi,%edi
and    $0x400000,%edi
mov    %edi,0x2c(%esp)
jne    8073278 <fchmod@plt+0x282d8>
mov    0x3c(%eax),%ebp
mov    0x38(%eax),%edi
mov    0x18(%eax),%eax
cmp    %ebp,%edx
mov    %eax,0x28(%esp)
jae    8072543 <fchmod@plt+0x275a3>
mov    %ebp,%eax
mov    %edi,%ebp
mov    %eax,%edi
test   $0x2000,%esi
mov    0x24(%esp),%eax
je     8072768 <fchmod@plt+0x277c8>
movzbl 0x0(%ebp,%eax,1),%edx
cmp    $0x73,%dl
movsbl %dl,%eax
je     807297b <fchmod@plt+0x279db>
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a910 <strchr@plt>
test   %eax,%eax
jne    8072772 <fchmod@plt+0x277d2>
mov    0x24(%esp),%esi
cmp    %edi,%esi
jae    8073580 <fchmod@plt+0x285e0>
mov    %ebp,0x20(%esp)
mov    %ebx,%ebp
mov    %edi,0x1c(%esp)
mov    0x28(%esp),%edi
movl   $0x0,0x30(%esp)
jmp    80724f1 <fchmod@plt+0x27551>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax,%esi,1),%ebx
mov    %edi,(%esp)
movsbl %bl,%eax
mov    %eax,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
jne    8073228 <fchmod@plt+0x28288>
movsbl %bl,%eax
mov    0x18(%esp),%ecx
mov    0x10(%ecx),%edx
test   $0x6,%dh
je     80724d8 <fchmod@plt+0x27538>
cmp    $0x5c,%al
je     80724ff <fchmod@plt+0x2755f>
test   $0x2,%dh
je     80724c6 <fchmod@plt+0x27526>
cmp    $0x27,%al
lea    0x0(%esi),%esi
je     80727ae <fchmod@plt+0x2780e>
and    $0x4,%dh
je     80724d8 <fchmod@plt+0x27538>
cmp    $0x22,%al
lea    0x0(%esi),%esi
je     80727ae <fchmod@plt+0x2780e>
xchg   %ax,%ax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
jne    8072511 <fchmod@plt+0x27571>
add    $0x1,%esi
cmp    0x1c(%esp),%esi
jae    8072511 <fchmod@plt+0x27571>
test   %edi,%edi
mov    0x20(%esp),%eax
jne    8072488 <fchmod@plt+0x274e8>
movsbl (%eax,%esi,1),%eax
jmp    80724a6 <fchmod@plt+0x27506>
lea    0x1(%esi),%ebx
cmp    %ebx,0x1c(%esp)
je     8072513 <fchmod@plt+0x27573>
add    $0x2,%esi
cmp    0x1c(%esp),%esi
jb     80724f1 <fchmod@plt+0x27551>
mov    %esi,%ebx
mov    0x30(%esp),%esi
xor    %eax,%eax
test   %esi,%esi
je     8072787 <fchmod@plt+0x277e7>
cmp    %ebx,0x24(%esp)
jae    8072787 <fchmod@plt+0x277e7>
mov    0x18(%esp),%edi
mov    0x4c(%edi),%edx
test   %edx,%edx
je     8072787 <fchmod@plt+0x277e7>
orl    $0x10,0x8(%edx)
jmp    8072787 <fchmod@plt+0x277e7>
mov    0x18(%esp),%eax
movl   $0x0,0x44(%eax)
mov    0x18(%esp),%eax
mov    0x4c(%eax),%eax
test   %eax,%eax
je     807255d <fchmod@plt+0x275bd>
andl   $0xffffffef,0x8(%eax)
cmpl   $0x2,0x2c(%esp)
je     8072969 <fchmod@plt+0x279c9>
mov    0x18(%esp),%eax
mov    0x10(%eax),%edi
test   $0x200000,%edi
jne    80732aa <fchmod@plt+0x2830a>
test   $0x100,%edi
jne    80732cc <fchmod@plt+0x2832c>
test   $0x40,%edi
je     8072a62 <fchmod@plt+0x27ac2>
test   $0x2000000,%edi
mov    $0x80712c0,%esi
mov    $0x8071470,%eax
cmove  %esi,%eax
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x48(%eax),%ebx
test   %ebx,%ebx
jne    8072615 <fchmod@plt+0x27675>
jmp    807265b <fchmod@plt+0x276bb>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%ebp
mov    %ebx,%eax
call   8071700 <fchmod@plt+0x26760>
test   $0x600,%edi
mov    %eax,%ecx
je     807260e <fchmod@plt+0x2766e>
test   $0x8,%esi
jne    807260e <fchmod@plt+0x2766e>
and    $0x2,%esi
je     8072856 <fchmod@plt+0x278b6>
and    $0x10000000,%edi
je     8072639 <fchmod@plt+0x27699>
mov    0x18(%esp),%edi
mov    0x1c(%edi),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80718b0 <fchmod@plt+0x26910>
mov    0x10(%edi),%edi
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
je     807265b <fchmod@plt+0x276bb>
mov    0x8(%ebx),%esi
mov    $0x808d3ee,%ebp
test   $0x1,%esi
jne    80725c3 <fchmod@plt+0x27623>
test   $0x2,%esi
jne    80725c0 <fchmod@plt+0x27620>
mov    0x18(%esp),%eax
mov    0x38(%eax),%ebp
add    0xc(%ebx),%ebp
jmp    80725c3 <fchmod@plt+0x27623>
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   *%eax
mov    0x4(%ebx),%ebx
mov    0x18(%esp),%eax
test   %ebx,%ebx
mov    0x10(%eax),%edi
jne    8072615 <fchmod@plt+0x27675>
and    $0x200000,%edi
je     8072678 <fchmod@plt+0x276d8>
mov    0x18(%esp),%edi
movl   $0x808d439,(%esp)
call   *0x28(%edi)
mov    %edi,%eax
call   8071200 <fchmod@plt+0x26260>
mov    0x18(%esp),%eax
mov    0x48(%eax),%ebp
test   %ebp,%ebp
jne    8072693 <fchmod@plt+0x276f3>
jmp    807294a <fchmod@plt+0x279aa>
mov    0x4(%ebp),%ebp
test   %ebp,%ebp
je     807294a <fchmod@plt+0x279aa>
testb  $0x10,0x8(%ebp)
je     8072688 <fchmod@plt+0x276e8>
mov    %ebp,%esi
xor    %ebx,%ebx
jmp    80726a6 <fchmod@plt+0x27706>
nop
testb  $0x10,0x8(%esi)
je     80726b6 <fchmod@plt+0x27716>
mov    %esi,%eax
call   8071700 <fchmod@plt+0x26760>
mov    0x4(%esi),%esi
add    %eax,%ebx
test   %esi,%esi
jne    80726a0 <fchmod@plt+0x27700>
mov    %esi,%eax
call   8071700 <fchmod@plt+0x26760>
lea    0x1(%ebx,%eax,1),%eax
mov    %ebp,%ebx
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x28(%esp)
je     8073534 <fchmod@plt+0x28594>
mov    %ebp,0x20(%esp)
mov    %esi,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
mov    $0x808d3ee,%esi
mov    %eax,0x1c(%esp)
mov    0x8(%ebx),%eax
test   $0x1,%al
jne    8072706 <fchmod@plt+0x27766>
test   $0x2,%al
je     80733b0 <fchmod@plt+0x28410>
mov    0xc(%ebx),%esi
mov    %ebx,%eax
call   8071700 <fchmod@plt+0x26760>
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x8(%esp)
add    %ebp,%edi
call   804a4e0 <memcpy@plt>
cmp    %ebx,0x20(%esp)
je     8072762 <fchmod@plt+0x277c2>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
test   %eax,%eax
je     80733bf <fchmod@plt+0x2841f>
mov    %edx,0x4(%eax)
mov    0x4(%ebx),%edx
test   %edx,%edx
je     80733a0 <fchmod@plt+0x28400>
mov    %eax,(%edx)
movl   $0x0,(%ebx)
mov    %ebx,%eax
movl   $0x0,0x4(%ebx)
call   8071660 <fchmod@plt+0x266c0>
cmp    %ebx,0x24(%esp)
je     80733d3 <fchmod@plt+0x28433>
mov    0x1c(%esp),%ebx
jmp    80726e8 <fchmod@plt+0x27748>
movsbl 0x0(%ebp,%eax,1),%eax
jmp    8072443 <fchmod@plt+0x274a3>
test   $0x1000,%esi
je     80728df <fchmod@plt+0x2793f>
mov    0x24(%esp),%eax
lea    0x1(%eax),%ebx
xor    %eax,%eax
mov    %eax,(%esp)
mov    0x24(%esp),%edx
mov    %ebx,%ecx
mov    0x18(%esp),%eax
call   8071dc0 <fchmod@plt+0x26e20>
test   %eax,%eax
je     80728a2 <fchmod@plt+0x27902>
movl   $0x2,0x2c(%esp)
jmp    807254e <fchmod@plt+0x275ae>
mov    0x30(%esp),%ebp
test   %ebp,%ebp
je     80727c5 <fchmod@plt+0x27825>
mov    0x18(%esp),%eax
mov    0x4c(%eax),%eax
test   %eax,%eax
je     80727c5 <fchmod@plt+0x27825>
orl    $0x10,0x8(%eax)
mov    0x18(%esp),%ebx
mov    %esi,%ecx
mov    0x24(%esp),%edx
movl   $0x10,(%esp)
mov    %ebx,%eax
call   8071dc0 <fchmod@plt+0x26e20>
test   %eax,%eax
jne    80727a1 <fchmod@plt+0x27801>
mov    0x3c(%ebx),%ebp
lea    0x1(%esi),%eax
mov    0x38(%ebx),%ecx
mov    %eax,%ebx
mov    %eax,0x24(%esp)
cmp    %eax,%ebp
movzbl (%ecx,%esi,1),%edx
jbe    8072831 <fchmod@plt+0x27891>
movzbl 0x1(%ecx,%esi,1),%eax
cmp    %al,%dl
jne    807281b <fchmod@plt+0x2787b>
jmp    80728f8 <fchmod@plt+0x27958>
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ebx,%ebp
jbe    8072831 <fchmod@plt+0x27891>
movzbl (%ecx,%ebx,1),%eax
cmp    %al,%dl
je     80728fc <fchmod@plt+0x2795c>
cmp    $0x22,%dl
jne    8072808 <fchmod@plt+0x27868>
cmp    $0x5c,%al
sete   %al
movzbl %al,%eax
add    %eax,%ebx
add    $0x1,%ebx
cmp    %ebx,%ebp
ja     807280f <fchmod@plt+0x2786f>
mov    0x18(%esp),%eax
testb  $0x10,0x10(%eax)
mov    %esi,0x40(%eax)
movl   $0x1,0x44(%eax)
je     80727a1 <fchmod@plt+0x27801>
mov    %eax,(%esp)
call   8071b90 <fchmod@plt+0x26bf0>
jmp    80727a1 <fchmod@plt+0x27801>
lea    0x1(%eax),%eax
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   804a800 <malloc@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8073562 <fchmod@plt+0x285c2>
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   804a4e0 <memcpy@plt>
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
movb   $0x0,(%esi,%ecx,1)
mov    %esi,0xc(%ebx)
mov    0x10(%eax),%edi
orl    $0x2,0x8(%ebx)
jmp    80725e5 <fchmod@plt+0x27645>
mov    0x18(%esp),%eax
testb  $0x20,0x13(%eax)
mov    %ebx,0x40(%eax)
jne    8072a55 <fchmod@plt+0x27ab5>
mov    0x18(%esp),%esi
mov    %esi,%eax
call   8071300 <fchmod@plt+0x26360>
mov    0x3c(%esi),%edi
mov    0x18(%esi),%ecx
mov    0x38(%esi),%ebp
mov    %ecx,0x28(%esp)
cmp    %edi,%eax
mov    %eax,0x24(%esp)
jae    8072543 <fchmod@plt+0x275a3>
mov    0x10(%esi),%esi
jmp    8072422 <fchmod@plt+0x27482>
and    $0x800,%esi
mov    0x24(%esp),%ebx
cmp    $0x1,%esi
sbb    %eax,%eax
and    $0x100,%eax
jmp    8072787 <fchmod@plt+0x277e7>
mov    0x24(%esp),%ebx
xor    %eax,%eax
cmp    $0x27,%dl
mov    0x24(%esp),%edx
sete   %al
mov    %ebx,%ecx
lea    0x104(,%eax,8),%eax
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   8071dc0 <fchmod@plt+0x26e20>
test   %eax,%eax
jne    80727a1 <fchmod@plt+0x27801>
lea    0x1(%ebx),%eax
mov    0x18(%esp),%ecx
mov    %ebx,%esi
mov    %eax,0x24(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x30(%esp)
mov    0x14(%ecx),%ebp
movsbl (%eax,%ebx,1),%eax
jmp    80724d8 <fchmod@plt+0x27538>
mov    0x18(%esp),%eax
testb  $0x20,0x12(%eax)
je     8072969 <fchmod@plt+0x279c9>
mov    0x18(%esp),%edi
movl   $0x808d44e,(%esp)
call   *0x28(%edi)
mov    %edi,%eax
call   8071200 <fchmod@plt+0x26260>
mov    0x18(%esp),%eax
mov    0x44(%eax),%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x24(%esp),%eax
add    $0x3,%eax
cmp    %edi,%eax
jae    8072c13 <fchmod@plt+0x27c73>
mov    0x24(%esp),%ebx
movsbl 0x1(%ebp,%ebx,1),%eax
movl   $0x808d4c8,(%esp)
mov    %eax,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     807351c <fchmod@plt+0x2857c>
lea    0x3(%ebx),%eax
cmp    %edi,%eax
jae    8072a4b <fchmod@plt+0x27aab>
movsbl 0x1(%ebp,%ebx,1),%esi
movl   $0x808d4c8,(%esp)
mov    %esi,0x4(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8072a4b <fchmod@plt+0x27aab>
add    $0x2,%ebx
cmp    %edi,%ebx
jae    8072a4b <fchmod@plt+0x27aab>
mov    $0x1,%eax
jmp    8072a03 <fchmod@plt+0x27a63>
lea    0x0(%esi),%esi
movsbl 0x0(%ebp,%ebx,1),%edx
cmp    $0x5c,%dl
je     8072c20 <fchmod@plt+0x27c80>
cmp    %edx,%esi
sete   %dl
movzbl %dl,%edx
add    %edx,%eax
add    $0x1,%ebx
cmp    %edi,%ebx
jae    8072c2e <fchmod@plt+0x27c8e>
cmp    $0x3,%eax
jne    80729e0 <fchmod@plt+0x27a40>
movzbl 0x0(%ebp,%ebx,1),%edx
movsbl %dl,%ecx
cmp    %ecx,%esi
je     8072a29 <fchmod@plt+0x27a89>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
jbe    80729f8 <fchmod@plt+0x27a58>
sub    $0x30,%edx
cmp    $0x9,%dl
jbe    80729f8 <fchmod@plt+0x27a58>
mov    $0x1,%eax
cmp    %ebx,%edi
jbe    8072a4b <fchmod@plt+0x27aab>
test   %al,%al
je     8072a4b <fchmod@plt+0x27aab>
cmpb   $0x3b,0x0(%ebp,%ebx,1)
jne    8072a4b <fchmod@plt+0x27aab>
add    $0x1,%ebx
cmpb   $0x73,0x0(%ebp,%ebx,1)
je     80729ab <fchmod@plt+0x27a0b>
mov    $0x20,%eax
jmp    8072787 <fchmod@plt+0x277e7>
movl   $0x0,0x2c(%esp)
jmp    807254e <fchmod@plt+0x275ae>
mov    0x18(%esp),%eax
mov    0x48(%eax),%eax
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    8072a88 <fchmod@plt+0x27ae8>
jmp    8072ea9 <fchmod@plt+0x27f09>
xchg   %ax,%ax
mov    0x30(%esp),%eax
test   %eax,%eax
je     8072ea9 <fchmod@plt+0x27f09>
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
mov    0x4(%eax),%edi
mov    0x8(%eax),%eax
mov    %edi,0x30(%esp)
test   $0x8,%al
jne    8072a78 <fchmod@plt+0x27ad8>
test   $0x1,%al
mov    $0x808d3ee,%ebp
jne    8072ab2 <fchmod@plt+0x27b12>
test   $0x2,%al
je     80731f8 <fchmod@plt+0x28258>
mov    0x20(%esp),%eax
mov    0xc(%eax),%ebp
mov    0x20(%esp),%edi
mov    %edi,%eax
call   8071700 <fchmod@plt+0x26760>
mov    %edi,0x58(%esp)
mov    %eax,0x44(%esp)
add    %ebp,%eax
mov    %eax,%esi
cmp    %esi,%ebp
mov    %eax,0x1c(%esp)
jae    8072a78 <fchmod@plt+0x27ad8>
mov    %edi,%ecx
mov    %ebp,0x24(%esp)
movl   $0x0,0x28(%esp)
jmp    8072af4 <fchmod@plt+0x27b54>
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x1c(%esp)
mov    %eax,%ebp
jbe    8072e3d <fchmod@plt+0x27e9d>
movzbl 0x0(%ebp),%edx
lea    0x2(%ebp),%eax
cmp    $0x5c,%dl
je     8072ae8 <fchmod@plt+0x27b48>
cmp    $0x24,%dl
lea    0x1(%ebp),%eax
jne    8072ae8 <fchmod@plt+0x27b48>
mov    %ebp,%ebx
sub    0x24(%esp),%ebx
cmp    %ecx,0x20(%esp)
je     8072b18 <fchmod@plt+0x27b78>
orl    $0x10,0x8(%ecx)
test   %ebx,%ebx
jne    8072f55 <fchmod@plt+0x27fb5>
mov    0x20(%esp),%eax
lea    0x1(%ebp),%esi
mov    0x44(%esp),%ecx
mov    0x8(%eax),%eax
sub    %ebx,%ecx
mov    %eax,0x34(%esp)
and    $0x14,%eax
mov    %eax,0x3c(%esp)
movzbl 0x1(%ebp),%eax
mov    %eax,%edx
and    $0xffffffdf,%edx
sub    $0x41,%edx
cmp    $0x19,%dl
jbe    8072c40 <fchmod@plt+0x27ca0>
cmp    $0x5f,%al
je     8072c40 <fchmod@plt+0x27ca0>
cmp    $0x7b,%al
jne    8073009 <fchmod@plt+0x28069>
lea    -0x1(%ecx),%edi
movzbl 0x3(%ebp),%edx
cmp    $0x1,%edi
lea    0x2(%ebp),%esi
jbe    8073523 <fchmod@plt+0x28583>
cmp    $0x7d,%dl
je     8073523 <fchmod@plt+0x28583>
cmp    $0x3a,%dl
je     8073523 <fchmod@plt+0x28583>
lea    0x4(%ebp),%eax
mov    $0x1,%ebx
jmp    8072baa <fchmod@plt+0x27c0a>
nop
movzbl (%eax),%edx
mov    %eax,%ecx
add    $0x1,%eax
cmp    $0x3a,%dl
je     80730dc <fchmod@plt+0x2813c>
cmp    $0x7d,%dl
je     80730dc <fchmod@plt+0x2813c>
add    $0x1,%ebx
cmp    %ebx,%edi
jne    8072b90 <fchmod@plt+0x27bf0>
lea    (%esi,%edi,1),%eax
movzbl (%eax),%edx
mov    %eax,0x38(%esp)
cmp    $0x3a,%dl
je     80730e9 <fchmod@plt+0x28149>
cmp    $0x7d,%dl
je     8072c7e <fchmod@plt+0x27cde>
mov    0x18(%esp),%eax
movl   $0x5,0x44(%eax)
mov    0x18(%esp),%eax
mov    0x48(%eax),%eax
test   %eax,%eax
jne    8072be7 <fchmod@plt+0x27c47>
jmp    8072bf3 <fchmod@plt+0x27c53>
mov    %ebx,%eax
mov    0x4(%eax),%ebx
call   8071660 <fchmod@plt+0x266c0>
test   %ebx,%ebx
jne    8072be5 <fchmod@plt+0x27c45>
mov    0x18(%esp),%eax
movl   $0x0,0x4c(%eax)
movl   $0x0,0x48(%eax)
mov    0x44(%eax),%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x73,%eax
jmp    8072443 <fchmod@plt+0x274a3>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ebx
cmp    %edi,%ebx
jb     8072a03 <fchmod@plt+0x27a63>
cmp    $0x3,%eax
sete   %al
jmp    8072a2e <fchmod@plt+0x27a8e>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmp    $0x1,%ecx
mov    $0x1,%ebx
jbe    8072c78 <fchmod@plt+0x27cd8>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebp,%ebx,1),%eax
mov    %eax,%edx
and    $0xffffffdf,%edx
sub    $0x41,%edx
cmp    $0x19,%dl
jbe    8072c6e <fchmod@plt+0x27cce>
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    8072c6e <fchmod@plt+0x27cce>
cmp    $0x5f,%al
jne    8072c75 <fchmod@plt+0x27cd5>
add    $0x1,%ebx
cmp    %ecx,%ebx
jne    8072c50 <fchmod@plt+0x27cb0>
lea    -0x1(%ebx),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x18(%esp),%eax
mov    0x10(%eax),%eax
test   $0x80000,%eax
mov    %eax,0x40(%esp)
je     8072cd8 <fchmod@plt+0x27d38>
test   $0x8000000,%eax
mov    0x18(%esp),%eax
jne    8072ee0 <fchmod@plt+0x27f40>
mov    0x2c(%eax),%ecx
mov    (%ecx),%edx
add    $0x4,%ecx
test   %edx,%edx
je     8072cd8 <fchmod@plt+0x27d38>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
mov    %ecx,%edi
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx,%eax,1),%ecx
cmp    %cl,(%esi,%eax,1)
jne    8072cc8 <fchmod@plt+0x27d28>
add    $0x1,%eax
cmp    %eax,%ebx
ja     8072cb8 <fchmod@plt+0x27d18>
cmp    %eax,%ebx
mov    %edi,%ecx
je     8072d18 <fchmod@plt+0x27d78>
add    $0x4,%ecx
mov    -0x4(%ecx),%edx
test   %edx,%edx
jne    8072cb0 <fchmod@plt+0x27d10>
testl  $0x100000,0x40(%esp)
jne    8072f9c <fchmod@plt+0x27ffc>
testb  $0x20,0x40(%esp)
je     807313c <fchmod@plt+0x2819c>
mov    0x18(%esp),%eax
testb  $0x10,0x40(%esp)
movl   $0x6,0x44(%eax)
je     8072bd8 <fchmod@plt+0x27c38>
mov    %eax,(%esp)
call   8071b90 <fchmod@plt+0x26bf0>
jmp    8072bd8 <fchmod@plt+0x27c38>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x3d,(%edx,%ebx,1)
jne    8072cce <fchmod@plt+0x27d2e>
lea    0x1(%edx,%ebx,1),%eax
test   %eax,%eax
je     8072cd8 <fchmod@plt+0x27d38>
mov    %eax,(%esp)
call   804aac0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     807315e <fchmod@plt+0x281be>
testb  $0x4,0x34(%esp)
jne    807307b <fchmod@plt+0x280db>
cmpb   $0x0,(%ebx)
je     8072fc9 <fchmod@plt+0x28029>
mov    0x18(%esp),%eax
mov    0x14(%eax),%eax
movl   $0x4144,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x74(%esp)
lea    0x60(%esp),%eax
mov    %eax,0x4(%esp)
call   80723a0 <fchmod@plt+0x27400>
test   %eax,%eax
jne    807320b <fchmod@plt+0x2826b>
mov    0x3c(%esp),%edi
xor    %esi,%esi
xor    %ebx,%ebx
mov    0x18(%esp),%ebp
or     $0xa,%edi
mov    %edi,0x2c(%esp)
jmp    8072df2 <fchmod@plt+0x27e52>
lea    0x0(%esi,%eiz,1),%esi
lea    0x5c(%esp),%edx
mov    %ebp,%eax
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x58(%esp),%ecx
mov    %ebp,%eax
add    $0x1,%ebx
mov    0x5c(%esp),%edx
call   8071740 <fchmod@plt+0x267a0>
mov    0x5c(%esp),%edi
mov    $0xa,%eax
cmp    0x60(%esp),%ebx
cmovae 0x2c(%esp),%eax
mov    %edi,0x58(%esp)
mov    %eax,0x8(%edi)
mov    0x64(%esp),%eax
mov    (%eax,%esi,1),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   804aac0 <__strdup@plt>
mov    %eax,0xc(%edi)
mov    0x5c(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     807315e <fchmod@plt+0x281be>
cmp    0x60(%esp),%ebx
jb     8072d90 <fchmod@plt+0x27df0>
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8071ab0 <fchmod@plt+0x26b10>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x38(%esp),%esi
mov    0x58(%esp),%ecx
mov    %esi,%ebp
mov    0x28(%esp),%eax
sub    0x24(%esp),%esi
lea    0x1(%eax,%esi,1),%eax
mov    %eax,0x28(%esp)
lea    0x1(%ebp),%eax
cmp    %eax,0x1c(%esp)
mov    %eax,%ebp
mov    %eax,0x24(%esp)
ja     8072af4 <fchmod@plt+0x27b54>
cmp    0x24(%esp),%eax
jbe    8072e5e <fchmod@plt+0x27ebe>
cmp    %ecx,0x20(%esp)
je     8072e4d <fchmod@plt+0x27ead>
orl    $0x10,0x8(%ecx)
mov    0x20(%esp),%edi
sub    0x24(%esp),%eax
mov    0x8(%edi),%edx
jne    8073448 <fchmod@plt+0x284a8>
mov    0x20(%esp),%edi
cmp    %ecx,%edi
je     8072a78 <fchmod@plt+0x27ad8>
mov    (%edi),%eax
test   %eax,%eax
je     8073501 <fchmod@plt+0x28561>
mov    0x4(%edi),%edx
mov    %edx,0x4(%eax)
mov    0x4(%edi),%edx
test   %edx,%edx
je     80734f1 <fchmod@plt+0x28551>
mov    %eax,(%edx)
mov    0x20(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
call   8071660 <fchmod@plt+0x266c0>
mov    0x30(%esp),%eax
test   %eax,%eax
jne    8072a84 <fchmod@plt+0x27ae4>
mov    0x18(%esp),%edi
mov    %edi,%eax
call   8071690 <fchmod@plt+0x266f0>
mov    0x10(%edi),%edi
test   $0x200000,%edi
je     8072593 <fchmod@plt+0x275f3>
mov    0x18(%esp),%edi
movl   $0x808d42a,(%esp)
call   *0x28(%edi)
mov    %edi,%eax
call   8071200 <fchmod@plt+0x26260>
mov    0x10(%edi),%edi
jmp    8072593 <fchmod@plt+0x275f3>
mov    0x2c(%eax),%eax
mov    (%eax),%ecx
mov    %eax,0x4c(%esp)
test   %ecx,%ecx
je     8072cd8 <fchmod@plt+0x27d38>
xor    %edi,%edi
mov    %esi,0x2c(%esp)
mov    %edi,%esi
mov    %eax,%edi
mov    %ebp,0x48(%esp)
mov    %ecx,%ebp
jmp    8072f1a <fchmod@plt+0x27f7a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi,%esi,4),%ecx
test   %ecx,%ecx
je     8072f86 <fchmod@plt+0x27fe6>
add    $0x2,%esi
mov    (%edi,%esi,4),%ebp
test   %ebp,%ebp
je     8072f86 <fchmod@plt+0x27fe6>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
cmp    %eax,%ebx
jne    8072f08 <fchmod@plt+0x27f68>
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8072f08 <fchmod@plt+0x27f68>
mov    0x4c(%esp),%eax
mov    %esi,%edi
mov    0x48(%esp),%ebp
mov    0x2c(%esp),%esi
mov    0x4(%eax,%edi,4),%eax
jmp    8072d22 <fchmod@plt+0x27d82>
mov    0x28(%esp),%eax
lea    0x58(%esp),%edx
mov    0x20(%esp),%ecx
movl   $0x10,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   8071e40 <fchmod@plt+0x26ea0>
test   %eax,%eax
je     8072b20 <fchmod@plt+0x27b80>
jmp    8072bd8 <fchmod@plt+0x27c38>
testl  $0x100000,0x40(%esp)
mov    0x2c(%esp),%esi
mov    0x48(%esp),%ebp
je     8072ce6 <fchmod@plt+0x27d46>
mov    0x18(%esp),%edi
mov    0x34(%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   *0x30(%edi)
test   %eax,%eax
mov    %eax,%ebx
jne    8072d38 <fchmod@plt+0x27d98>
mov    0x18(%esp),%eax
testb  $0x80,0x12(%eax)
jne    8073178 <fchmod@plt+0x281d8>
mov    0x18(%esp),%eax
lea    0x5c(%esp),%edx
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x58(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x18(%esp),%eax
call   8071740 <fchmod@plt+0x267a0>
mov    0x5c(%esp),%ecx
mov    0x38(%esp),%esi
mov    %ecx,0x58(%esp)
mov    %esi,%ebp
movl   $0x1,0x8(%ecx)
jmp    8072e1a <fchmod@plt+0x27e7a>
mov    0x18(%esp),%eax
lea    0x5c(%esp),%edx
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x58(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x18(%esp),%eax
call   8071740 <fchmod@plt+0x267a0>
mov    0x3c(%esp),%eax
mov    0x5c(%esp),%ebx
or     $0x2,%eax
mov    %eax,0x8(%ebx)
movl   $0x3,(%esp)
mov    %ebx,0x58(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0xc(%ebx)
je     8073550 <fchmod@plt+0x285b0>
movb   $0x24,(%eax)
movzbl 0x1(%ebp),%eax
mov    %esi,%ebp
mov    0xc(%ebx),%edx
mov    %al,0x1(%edx)
mov    0x5c(%esp),%eax
mov    0xc(%eax),%eax
movb   $0x0,0x2(%eax)
mov    0x58(%esp),%ecx
jmp    8072e1a <fchmod@plt+0x27e7a>
mov    0x18(%esp),%eax
lea    0x5c(%esp),%edx
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x5c(%esp),%edx
mov    0x58(%esp),%ecx
mov    0x18(%esp),%eax
call   8071740 <fchmod@plt+0x267a0>
mov    0x3c(%esp),%eax
mov    0x5c(%esp),%esi
or     $0xa,%eax
mov    %eax,0x8(%esi)
mov    %ebx,(%esp)
mov    %esi,0x58(%esp)
call   804aac0 <__strdup@plt>
mov    %eax,0xc(%esi)
mov    0x5c(%esp),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     807315e <fchmod@plt+0x281be>
mov    0x38(%esp),%esi
mov    0x58(%esp),%ecx
mov    %esi,%ebp
jmp    8072e1a <fchmod@plt+0x27e7a>
cmp    $0x3a,%dl
mov    %ecx,0x38(%esp)
jne    8072bc4 <fchmod@plt+0x27c24>
lea    0x1(%ebx),%ecx
cmp    %ecx,%edi
jbe    8072bcd <fchmod@plt+0x27c2d>
movl   $0x1,0x2c(%esp)
xor    %eax,%eax
jmp    807312c <fchmod@plt+0x2818c>
cmp    $0x2,%eax
jne    8073495 <fchmod@plt+0x284f5>
movzbl (%esi,%ecx,1),%edx
cmp    $0x5c,%dl
je     80734d3 <fchmod@plt+0x28533>
cmp    $0x22,%dl
mov    $0x0,%edx
cmove  %edx,%eax
add    $0x1,%ecx
cmp    %ecx,%edi
jbe    8072bcd <fchmod@plt+0x27c2d>
cmp    $0x1,%eax
jne    8073100 <fchmod@plt+0x28160>
xor    %eax,%eax
cmpb   $0x27,(%esi,%ecx,1)
setne  %al
jmp    8073121 <fchmod@plt+0x28181>
testl  $0x1000000,0x40(%esp)
jne    8073408 <fchmod@plt+0x28468>
testl  $0x800000,0x40(%esp)
jne    8073178 <fchmod@plt+0x281d8>
mov    $0x808d3ee,%ebx
jmp    8072d38 <fchmod@plt+0x27d98>
mov    0x18(%esp),%eax
call   8071ce0 <fchmod@plt+0x26d40>
test   %eax,%eax
je     80730cd <fchmod@plt+0x2812d>
nop
jmp    8072bd8 <fchmod@plt+0x27c38>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
lea    0x5c(%esp),%edx
call   8071d80 <fchmod@plt+0x26de0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x38(%esp),%ebx
mov    0x58(%esp),%ecx
mov    0x5c(%esp),%edx
mov    %ebx,%esi
sub    %ebp,%ebx
lea    0x1(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
call   8071740 <fchmod@plt+0x267a0>
mov    0x3c(%esp),%eax
mov    0x5c(%esp),%edi
or     $0xa,%eax
mov    %eax,0x8(%edi)
lea    0x2(%ebx),%eax
mov    %eax,(%esp)
mov    %edi,0x58(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0xc(%edi)
je     807315e <fchmod@plt+0x281be>
mov    0x2c(%esp),%ecx
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   804a4e0 <memcpy@plt>
mov    0xc(%edi),%eax
movb   $0x0,0x1(%eax,%ebx,1)
mov    0x58(%esp),%ecx
jmp    8072e1a <fchmod@plt+0x27e7a>
mov    0x18(%esp),%eax
mov    0x38(%eax),%ebp
mov    0x20(%esp),%eax
add    0xc(%eax),%ebp
jmp    8072ab2 <fchmod@plt+0x27b12>
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8071ab0 <fchmod@plt+0x26b10>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    8072bd8 <fchmod@plt+0x27c38>
mov    0x1c(%esp),%edi
lea    0x1(%esi),%ebx
mov    0x20(%esp),%ebp
cmp    %edi,%ebx
jae    807324e <fchmod@plt+0x282ae>
cmpb   $0xa,0x1(%ebp,%esi,1)
jne    8073247 <fchmod@plt+0x282a7>
jmp    807324e <fchmod@plt+0x282ae>
cmpb   $0xa,0x0(%ebp,%ebx,1)
je     807324e <fchmod@plt+0x282ae>
add    $0x1,%ebx
cmp    %edi,%ebx
jb     8073240 <fchmod@plt+0x282a0>
mov    0x24(%esp),%edx
mov    %esi,%ecx
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
call   8071dc0 <fchmod@plt+0x26e20>
test   %eax,%eax
jne    80727a1 <fchmod@plt+0x27801>
mov    0x18(%esp),%eax
mov    %ebx,0x40(%eax)
jmp    80728b3 <fchmod@plt+0x27913>
mov    0x18(%esp),%eax
mov    0x24(%esp),%edx
mov    0x3c(%eax),%ecx
movl   $0x4,(%esp)
call   8071dc0 <fchmod@plt+0x26e20>
test   %eax,%eax
jne    8072969 <fchmod@plt+0x279c9>
mov    0x18(%esp),%eax
mov    0x10(%eax),%edi
test   $0x200000,%edi
je     807257b <fchmod@plt+0x275db>
mov    %eax,%edi
movl   $0x808d409,(%esp)
call   *0x28(%eax)
mov    %edi,%eax
call   8071200 <fchmod@plt+0x26260>
mov    0x10(%edi),%edi
test   $0x100,%edi
je     8072587 <fchmod@plt+0x275e7>
mov    0x18(%esp),%eax
mov    0x48(%eax),%ebp
test   %ebp,%ebp
jne    807331c <fchmod@plt+0x2837c>
jmp    8073366 <fchmod@plt+0x283c6>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%cl
je     8073344 <fchmod@plt+0x283a4>
cmp    %edx,%eax
mov    %eax,0xc(%ebp)
jae    807330e <fchmod@plt+0x2836e>
mov    %eax,%edi
xchg   %ax,%ax
movzbl -0x1(%esi,%edx,1),%ebx
lea    -0x1(%edx),%ecx
lea    -0x9(%ebx),%eax
cmp    $0x1,%al
jbe    8073480 <fchmod@plt+0x284e0>
cmp    $0x20,%bl
je     8073480 <fchmod@plt+0x284e0>
mov    %edi,%eax
cmp    %edx,%eax
mov    %edx,0x10(%ebp)
je     8073355 <fchmod@plt+0x283b5>
mov    0x4(%ebp),%ebp
test   %ebp,%ebp
je     8073366 <fchmod@plt+0x283c6>
mov    0x8(%ebp),%eax
test   $0x4,%al
mov    %eax,0x1c(%esp)
jne    8073315 <fchmod@plt+0x28375>
mov    0xc(%ebp),%eax
mov    0x10(%ebp),%edx
cmp    %edx,%eax
jae    807334b <fchmod@plt+0x283ab>
mov    0x18(%esp),%edi
mov    0x38(%edi),%esi
movzbl (%esi,%eax,1),%ecx
lea    -0x9(%ecx),%ebx
cmp    $0x1,%bl
ja     80732e0 <fchmod@plt+0x28340>
add    $0x1,%eax
cmp    %edx,%eax
jb     8073338 <fchmod@plt+0x28398>
cmp    %edx,%eax
mov    %eax,0xc(%ebp)
mov    %edx,0x10(%ebp)
jne    8073315 <fchmod@plt+0x28375>
mov    0x1c(%esp),%eax
or     $0x1,%eax
mov    %eax,0x8(%ebp)
mov    0x4(%ebp),%ebp
test   %ebp,%ebp
jne    807331c <fchmod@plt+0x2837c>
mov    0x18(%esp),%edi
mov    %edi,%eax
call   8071690 <fchmod@plt+0x266f0>
mov    0x10(%edi),%edi
test   $0x200000,%edi
je     8072587 <fchmod@plt+0x275e7>
mov    0x18(%esp),%edi
movl   $0x808d417,(%esp)
call   *0x28(%edi)
mov    %edi,%eax
call   8071200 <fchmod@plt+0x26260>
mov    0x10(%edi),%edi
jmp    8072587 <fchmod@plt+0x275e7>
lea    0x0(%esi),%esi
andl   $0xffffffef,0x8(%eax)
mov    0x18(%esp),%esi
mov    %eax,0x4c(%esi)
jmp    8072744 <fchmod@plt+0x277a4>
mov    0x18(%esp),%eax
mov    0x38(%eax),%esi
add    0xc(%ebx),%esi
jmp    8072706 <fchmod@plt+0x27766>
mov    0x18(%esp),%esi
mov    %edx,0x48(%esi)
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    8072742 <fchmod@plt+0x277a2>
jmp    80733a4 <fchmod@plt+0x28404>
mov    0x20(%esp),%ebp
movb   $0x0,(%edi)
mov    0x8(%ebp),%eax
mov    %eax,%edx
and    $0xffffffef,%edx
test   $0x2,%al
mov    %edx,0x8(%ebp)
jne    80733fb <fchmod@plt+0x2845b>
or     $0x2,%edx
mov    %edx,0x8(%ebp)
mov    0x28(%esp),%eax
mov    %eax,0xc(%ebp)
jmp    8072688 <fchmod@plt+0x276e8>
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    80733ef <fchmod@plt+0x2844f>
mov    0x18(%esp),%eax
mov    0x24(%eax),%edi
movl   $0x5,0x8(%esp)
movl   $0x808d4ec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
mov    0x18(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x40(%esp)
jmp    807314a <fchmod@plt+0x281aa>
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
and    $0x10,%edx
mov    %edx,0x8(%esp)
mov    %edi,%ecx
lea    0x58(%esp),%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   8071e40 <fchmod@plt+0x26ea0>
test   %eax,%eax
jne    8072bd8 <fchmod@plt+0x27c38>
mov    0x58(%esp),%ecx
jmp    8072e5e <fchmod@plt+0x27ebe>
lea    0x0(%esi),%esi
cmp    %edi,%ecx
jbe    807348b <fchmod@plt+0x284eb>
mov    %ecx,%edx
jmp    80732f0 <fchmod@plt+0x28350>
mov    %edi,%eax
mov    %ecx,%edx
nop
jmp    807330e <fchmod@plt+0x2836e>
lea    (%esi,%ecx,1),%eax
movzbl (%eax),%edx
cmp    $0x27,%dl
je     80734e7 <fchmod@plt+0x28547>
jle    80734be <fchmod@plt+0x2851e>
cmp    $0x7b,%dl
je     80734db <fchmod@plt+0x2853b>
cmp    $0x7d,%dl
jne    80734b7 <fchmod@plt+0x28517>
subl   $0x1,0x2c(%esp)
je     807358b <fchmod@plt+0x285eb>
xor    %eax,%eax
jmp    8073121 <fchmod@plt+0x28181>
cmp    $0x22,%dl
mov    $0x2,%eax
je     8073121 <fchmod@plt+0x28181>
xor    %eax,%eax
jmp    8073121 <fchmod@plt+0x28181>
add    $0x1,%ecx
jmp    8073121 <fchmod@plt+0x28181>
addl   $0x1,0x2c(%esp)
xor    %eax,%eax
jmp    8073121 <fchmod@plt+0x28181>
mov    $0x1,%eax
jmp    8073121 <fchmod@plt+0x28181>
andl   $0xffffffef,0x8(%eax)
mov    0x18(%esp),%edi
mov    %eax,0x4c(%edi)
jmp    8072e87 <fchmod@plt+0x27ee7>
mov    0x20(%esp),%edi
mov    0x18(%esp),%esi
mov    0x4(%edi),%edx
mov    %edx,0x48(%esi)
mov    0x4(%edi),%edx
test   %edx,%edx
jne    8072e85 <fchmod@plt+0x27ee5>
jmp    80734f5 <fchmod@plt+0x28555>
mov    $0x73,%al
jmp    8072443 <fchmod@plt+0x274a3>
lea    0x3(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,0x38(%esp)
jmp    8072bbb <fchmod@plt+0x27c1b>
mov    0x18(%esp),%eax
call   8071ce0 <fchmod@plt+0x26d40>
test   %eax,%eax
jne    8072969 <fchmod@plt+0x279c9>
jmp    8072688 <fchmod@plt+0x276e8>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
call   8071ce0 <fchmod@plt+0x26d40>
mov    %esi,0x38(%esp)
jmp    8073167 <fchmod@plt+0x281c7>
mov    0x18(%esp),%eax
call   8071ce0 <fchmod@plt+0x26d40>
test   %eax,%eax
jne    8072969 <fchmod@plt+0x279c9>
mov    0x18(%esp),%eax
mov    0x10(%eax),%edi
jmp    807265b <fchmod@plt+0x276bb>
nop
mov    0x24(%esp),%ebx
xor    %eax,%eax
jmp    8072787 <fchmod@plt+0x277e7>
mov    %eax,0x38(%esp)
jmp    8072c7e <fchmod@plt+0x27cde>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x44(%eax),%edx
mov    $0x808d3dd,%eax
cmp    0x809d740,%edx
jge    80735bb <fchmod@plt+0x2861b>
mov    0x809d760(,%edx,4),%eax
repz ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
mov    0x101c(%esp),%edi
je     8073728 <fchmod@plt+0x28788>
cmpb   $0x2f,(%ebx)
je     8073728 <fchmod@plt+0x28788>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%ebp
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     80736c8 <fchmod@plt+0x28728>
mov    0x1024(%esp),%eax
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %edx,0x18(%esp)
mov    %eax,0xc(%esp)
call   804ae00 <setxattr@plt>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %ebp,%edx
mov    (%eax),%ecx
je     807367f <fchmod@plt+0x286df>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     80736b0 <fchmod@plt+0x28710>
mov    0x14(%esp),%ebx
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    807380d <fchmod@plt+0x2886d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     80736c8 <fchmod@plt+0x28728>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     80737b8 <fchmod@plt+0x28818>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8073812 <fchmod@plt+0x28872>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     80736f8 <fchmod@plt+0x28758>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     80737f0 <fchmod@plt+0x28850>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8073758 <fchmod@plt+0x287b8>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
mov    $0xffffffff,%ebx
jmp    807368a <fchmod@plt+0x286ea>
mov    0x1024(%esp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %eax,0xc(%esp)
call   804ae00 <setxattr@plt>
mov    %eax,%ebx
jmp    807368a <fchmod@plt+0x286ea>
lea    0x0(%esi),%esi
mov    0x1024(%esp),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %eax,0xc(%esp)
call   804ae00 <setxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     80737e0 <fchmod@plt+0x28840>
mov    %ebp,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8073821 <fchmod@plt+0x28881>
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     807368a <fchmod@plt+0x286ea>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
xchg   %ax,%ax
jmp    807368a <fchmod@plt+0x286ea>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     80736c8 <fchmod@plt+0x28728>
cmp    $0x26,%ecx
je     80736c8 <fchmod@plt+0x28728>
cmp    $0x5f,%ecx
je     80736c8 <fchmod@plt+0x28728>
mov    %ecx,(%eax)
jmp    8073686 <fchmod@plt+0x286e6>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
jmp    8073787 <fchmod@plt+0x287e7>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%ebx
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    807368a <fchmod@plt+0x286ea>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
mov    0x101c(%esp),%edi
je     8073998 <fchmod@plt+0x289f8>
cmpb   $0x2f,(%ebx)
je     8073998 <fchmod@plt+0x289f8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%ebp
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     8073938 <fchmod@plt+0x28998>
mov    0x1024(%esp),%eax
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %edx,0x18(%esp)
mov    %eax,0xc(%esp)
call   804ab10 <lsetxattr@plt>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %ebp,%edx
mov    (%eax),%ecx
je     80738ef <fchmod@plt+0x2894f>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8073920 <fchmod@plt+0x28980>
mov    0x14(%esp),%ebx
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8073a7d <fchmod@plt+0x28add>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     8073938 <fchmod@plt+0x28998>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8073a28 <fchmod@plt+0x28a88>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8073a82 <fchmod@plt+0x28ae2>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8073968 <fchmod@plt+0x289c8>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8073a60 <fchmod@plt+0x28ac0>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     80739c8 <fchmod@plt+0x28a28>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
mov    $0xffffffff,%ebx
jmp    80738fa <fchmod@plt+0x2895a>
mov    0x1024(%esp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %eax,0xc(%esp)
call   804ab10 <lsetxattr@plt>
mov    %eax,%ebx
jmp    80738fa <fchmod@plt+0x2895a>
lea    0x0(%esi),%esi
mov    0x1024(%esp),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x1020(%esp),%eax
mov    %eax,0xc(%esp)
call   804ab10 <lsetxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8073a50 <fchmod@plt+0x28ab0>
mov    %ebp,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8073a91 <fchmod@plt+0x28af1>
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     80738fa <fchmod@plt+0x2895a>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
xchg   %ax,%ax
jmp    80738fa <fchmod@plt+0x2895a>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     8073938 <fchmod@plt+0x28998>
cmp    $0x26,%ecx
je     8073938 <fchmod@plt+0x28998>
cmp    $0x5f,%ecx
je     8073938 <fchmod@plt+0x28998>
mov    %ecx,(%eax)
jmp    80738f6 <fchmod@plt+0x28956>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
jmp    80739f7 <fchmod@plt+0x28a57>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%ebx
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    80738fa <fchmod@plt+0x2895a>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
mov    0x101c(%esp),%edi
je     8073bf8 <fchmod@plt+0x28c58>
cmpb   $0x2f,(%ebx)
je     8073bf8 <fchmod@plt+0x28c58>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%ebp
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     8073b98 <fchmod@plt+0x28bf8>
mov    0x1020(%esp),%eax
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x18(%esp)
call   804ad70 <getxattr@plt>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %ebp,%edx
mov    (%eax),%ecx
je     8073b54 <fchmod@plt+0x28bb4>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8073b80 <fchmod@plt+0x28be0>
mov    0x14(%esp),%ebx
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8073cc5 <fchmod@plt+0x28d25>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x14,%ecx
je     8073b98 <fchmod@plt+0x28bf8>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8073c70 <fchmod@plt+0x28cd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8073cca <fchmod@plt+0x28d2a>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8073bc8 <fchmod@plt+0x28c28>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8073ca8 <fchmod@plt+0x28d08>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8073c20 <fchmod@plt+0x28c80>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
mov    $0xffffffff,%ebx
jmp    8073b5f <fchmod@plt+0x28bbf>
mov    0x1020(%esp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
call   804ad70 <getxattr@plt>
mov    %eax,%ebx
jmp    8073b5f <fchmod@plt+0x28bbf>
lea    0x0(%esi),%esi
mov    0x1020(%esp),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
call   804ad70 <getxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8073c98 <fchmod@plt+0x28cf8>
mov    %ebp,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8073cd9 <fchmod@plt+0x28d39>
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     8073b5f <fchmod@plt+0x28bbf>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
jmp    8073b5f <fchmod@plt+0x28bbf>
cmp    $0xd,%ecx
je     8073b98 <fchmod@plt+0x28bf8>
cmp    $0x26,%ecx
je     8073b98 <fchmod@plt+0x28bf8>
cmp    $0x5f,%ecx
je     8073b98 <fchmod@plt+0x28bf8>
mov    %ecx,(%eax)
lea    0x0(%esi),%esi
jmp    8073b5b <fchmod@plt+0x28bbb>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
nop
jmp    8073c44 <fchmod@plt+0x28ca4>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%ebx
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8073b5f <fchmod@plt+0x28bbf>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
mov    0x101c(%esp),%edi
je     8073e48 <fchmod@plt+0x28ea8>
cmpb   $0x2f,(%ebx)
je     8073e48 <fchmod@plt+0x28ea8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%ebp
mov    %ebx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     8073de8 <fchmod@plt+0x28e48>
mov    0x1020(%esp),%eax
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x18(%esp)
call   804a560 <lgetxattr@plt>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %ebp,%edx
mov    (%eax),%ecx
je     8073da4 <fchmod@plt+0x28e04>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8073dd0 <fchmod@plt+0x28e30>
mov    0x14(%esp),%ebx
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8073f15 <fchmod@plt+0x28f75>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x14,%ecx
je     8073de8 <fchmod@plt+0x28e48>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8073ec0 <fchmod@plt+0x28f20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8073f1a <fchmod@plt+0x28f7a>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8073e18 <fchmod@plt+0x28e78>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8073ef8 <fchmod@plt+0x28f58>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8073e70 <fchmod@plt+0x28ed0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
mov    $0xffffffff,%ebx
jmp    8073daf <fchmod@plt+0x28e0f>
mov    0x1020(%esp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
call   804a560 <lgetxattr@plt>
mov    %eax,%ebx
jmp    8073daf <fchmod@plt+0x28e0f>
lea    0x0(%esi),%esi
mov    0x1020(%esp),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
call   804a560 <lgetxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8073ee8 <fchmod@plt+0x28f48>
mov    %ebp,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8073f29 <fchmod@plt+0x28f89>
mov    %ebp,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %esi,%esi
je     8073daf <fchmod@plt+0x28e0f>
call   804aaf0 <__errno_location@plt>
mov    %esi,(%eax)
jmp    8073daf <fchmod@plt+0x28e0f>
cmp    $0xd,%ecx
je     8073de8 <fchmod@plt+0x28e48>
cmp    $0x26,%ecx
je     8073de8 <fchmod@plt+0x28e48>
cmp    $0x5f,%ecx
je     8073de8 <fchmod@plt+0x28e48>
mov    %ecx,(%eax)
lea    0x0(%esi),%esi
jmp    8073dab <fchmod@plt+0x28e0b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%esi
nop
jmp    8073e94 <fchmod@plt+0x28ef4>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%ebx
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8073daf <fchmod@plt+0x28e0f>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     8074088 <fchmod@plt+0x290e8>
cmpb   $0x2f,(%ebx)
je     8074088 <fchmod@plt+0x290e8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     8074028 <fchmod@plt+0x29088>
mov    0x101c(%esp),%eax
mov    %edx,(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
call   804a5b0 <listxattr@plt>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8073fe7 <fchmod@plt+0x29047>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     8074010 <fchmod@plt+0x29070>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    807414d <fchmod@plt+0x291ad>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x14,%ecx
je     8074028 <fchmod@plt+0x29088>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     80740f8 <fchmod@plt+0x29158>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8074152 <fchmod@plt+0x291b2>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8074058 <fchmod@plt+0x290b8>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8074130 <fchmod@plt+0x29190>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     80740a8 <fchmod@plt+0x29108>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    8073fec <fchmod@plt+0x2904c>
mov    0x101c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a5b0 <listxattr@plt>
mov    %eax,%ebp
jmp    8073fec <fchmod@plt+0x2904c>
xchg   %ax,%ax
mov    0x101c(%esp),%eax
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
call   804a5b0 <listxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8074120 <fchmod@plt+0x29180>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8074161 <fchmod@plt+0x291c1>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     8073fec <fchmod@plt+0x2904c>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
nop
jmp    8073fec <fchmod@plt+0x2904c>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     8074028 <fchmod@plt+0x29088>
cmp    $0x26,%ecx
je     8074028 <fchmod@plt+0x29088>
cmp    $0x5f,%ecx
je     8074028 <fchmod@plt+0x29088>
mov    %ecx,(%eax)
jmp    8073fec <fchmod@plt+0x2904c>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    80740c8 <fchmod@plt+0x29128>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8073fec <fchmod@plt+0x2904c>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     80742b8 <fchmod@plt+0x29318>
cmpb   $0x2f,(%ebx)
je     80742b8 <fchmod@plt+0x29318>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edx
je     8074258 <fchmod@plt+0x292b8>
mov    0x101c(%esp),%eax
mov    %edx,(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
call   804a4d0 <llistxattr@plt>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8074217 <fchmod@plt+0x29277>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     8074240 <fchmod@plt+0x292a0>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    807437d <fchmod@plt+0x293dd>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x14,%ecx
je     8074258 <fchmod@plt+0x292b8>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8074328 <fchmod@plt+0x29388>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8074382 <fchmod@plt+0x293e2>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8074288 <fchmod@plt+0x292e8>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8074360 <fchmod@plt+0x293c0>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     80742d8 <fchmod@plt+0x29338>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    807421c <fchmod@plt+0x2927c>
mov    0x101c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a4d0 <llistxattr@plt>
mov    %eax,%ebp
jmp    807421c <fchmod@plt+0x2927c>
xchg   %ax,%ax
mov    0x101c(%esp),%eax
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
call   804a4d0 <llistxattr@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8074350 <fchmod@plt+0x293b0>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8074391 <fchmod@plt+0x293f1>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     807421c <fchmod@plt+0x2927c>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
nop
jmp    807421c <fchmod@plt+0x2927c>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     8074258 <fchmod@plt+0x292b8>
cmp    $0x26,%ecx
je     8074258 <fchmod@plt+0x292b8>
cmp    $0x5f,%ecx
je     8074258 <fchmod@plt+0x292b8>
mov    %ecx,(%eax)
jmp    807421c <fchmod@plt+0x2927c>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    80742f8 <fchmod@plt+0x29358>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    807421c <fchmod@plt+0x2927c>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
sub    $0x1c,%esp
mov    0x809d7cc,%eax
mov    %eax,(%esp)
call   804a8a0 <exit@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8074492 <fchmod@plt+0x294f2>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movb   $0x0,0x1f(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    8074436 <fchmod@plt+0x29496>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8074468 <fchmod@plt+0x294c8>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
imul   0x4c(%esp),%eax
add    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
movzbl 0x1f(%esp),%edx
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%edx
mov    %dl,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8074470 <fchmod@plt+0x294d0>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    8074424 <fchmod@plt+0x29484>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmp    %ebp,%eax
je     8074488 <fchmod@plt+0x294e8>
cmpl   $0xffffffff,0x18(%esp)
jne    80743e8 <fchmod@plt+0x29448>
mov    %ebx,0x18(%esp)
jmp    8074424 <fchmod@plt+0x29484>
nop
movb   $0x1,0x1f(%esp)
jmp    8074424 <fchmod@plt+0x29484>
nop
cmpb   $0x0,0x1f(%esp)
jne    807449c <fchmod@plt+0x294fc>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,0x18(%esp)
jmp    8074477 <fchmod@plt+0x294d7>
mov    $0xfffffffe,%eax
jmp    807447b <fchmod@plt+0x294db>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     8074538 <fchmod@plt+0x29598>
movl   $0x808d54b,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8080ac0 <argp_parse+0x8b80>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8080710 <argp_parse+0x87d0>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   804a7c0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x808d530,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
jmp    80744da <fchmod@plt+0x2953a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x809d864,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x808d568,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   804a8d0 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    80745ed <fchmod@plt+0x2964d>
jmp    8074638 <fchmod@plt+0x29698>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x808d57d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     8074638 <fchmod@plt+0x29698>
test   %esi,%esi
je     80745b0 <fchmod@plt+0x29610>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    80745b0 <fchmod@plt+0x29610>
mov    %ebp,(%esp)
call   8080ae0 <argp_parse+0x8ba0>
movl   $0x808d585,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    80745db <fchmod@plt+0x2963b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809d864,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    8074656 <fchmod@plt+0x296b6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804acc0 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   80743b0 <fchmod@plt+0x29410>
test   %eax,%eax
js     80746a7 <fchmod@plt+0x29707>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80744b0 <fchmod@plt+0x29510>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8074550 <fchmod@plt+0x295b0>
call   *0x44(%esp)
mov    $0xffffffff,%eax
jmp    807469f <fchmod@plt+0x296ff>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     8074723 <fchmod@plt+0x29783>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    807470b <fchmod@plt+0x2976b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     8074723 <fchmod@plt+0x29783>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8074700 <fchmod@plt+0x29760>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%esi
mov    %edx,0x18(%esp)
mov    (%eax),%edx
mov    %ecx,0x1c(%esp)
mov    0x8(%eax),%ecx
test   %esi,%esi
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
je     8074808 <fchmod@plt+0x29868>
mov    %edx,%ebx
jmp    8074764 <fchmod@plt+0x297c4>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     80747a9 <fchmod@plt+0x29809>
mov    0xc(%ebx),%edi
mov    0x4(%ebx),%ebp
test   $0x8,%edi
jne    8074798 <fchmod@plt+0x297f8>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8074798 <fchmod@plt+0x297f8>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebp,2)
je     8074798 <fchmod@plt+0x297f8>
mov    0x14(%esp),%eax
movsbl (%eax),%eax
cmp    %eax,%ebp
je     80747b8 <fchmod@plt+0x29818>
lea    0x0(%esi),%esi
mov    $0x1,%ecx
xor    %eax,%eax
add    $0x18,%ebx
sub    $0x1,%esi
test   %cl,%cl
jne    8074760 <fchmod@plt+0x297c0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
test   $0x4,%edi
mov    $0x1,%ecx
cmove  %ebx,%eax
mov    %eax,0x10(%esp)
xor    %eax,%eax
and    $0x2,%edi
je     80747e0 <fchmod@plt+0x29840>
addl   $0x1,0x14(%esp)
jmp    807479f <fchmod@plt+0x297ff>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
call   *%eax
test   %eax,%eax
sete   %cl
jmp    80747d5 <fchmod@plt+0x29835>
xor    %eax,%eax
jmp    80747a9 <fchmod@plt+0x29809>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
testb  $0x8,0xc(%edx)
mov    0x4(%edx),%esi
jne    807483d <fchmod@plt+0x2989d>
lea    -0x1(%esi),%eax
cmp    $0xfe,%eax
ja     807483d <fchmod@plt+0x2989d>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%esi,2)
cmovne %esi,%ebx
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xc,%esp
mov    (%eax),%ebx
test   %ebx,%ebx
je     80748c0 <fchmod@plt+0x29920>
call   804af60 <__ctype_b_loc@plt>
mov    %ebx,%edx
mov    %eax,%edi
jmp    8074872 <fchmod@plt+0x298d2>
lea    0x0(%esi),%esi
mov    %edx,(%esi)
movzbl (%edx),%ecx
add    $0x1,%edx
mov    (%edi),%eax
movzbl %cl,%ebx
movzwl (%eax,%ebx,2),%ebx
test   $0x20,%bh
jne    8074870 <fchmod@plt+0x298d0>
xor    %eax,%eax
cmp    $0x2d,%cl
setne  %al
test   %cl,%cl
je     80748b4 <fchmod@plt+0x29914>
and    $0x8,%ebx
je     80748ab <fchmod@plt+0x2990b>
jmp    80748b4 <fchmod@plt+0x29914>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebx
add    $0x1,%edx
testb  $0x8,(%ebx,%ecx,2)
jne    80748b4 <fchmod@plt+0x29914>
mov    %edx,(%esi)
movzbl (%edx),%ecx
test   %cl,%cl
jne    80748a0 <fchmod@plt+0x29900>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x4(%edi),%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
mov    %edx,-0x38(%ebp)
test   %esi,%esi
jne    8074908 <fchmod@plt+0x29968>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    8074ac4 <fchmod@plt+0x29b24>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    (%edi),%ebx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
mov    %eax,-0x2c(%ebp)
andl   $0xfffffff0,-0x2c(%ebp)
mov    -0x2c(%ebp),%eax
mov    %eax,-0x20(%ebp)
xchg   %ax,%ax
mov    0x14(%ebx),%eax
mov    $0x8075ad0,%edx
mov    0x18(%eax),%ecx
lea    -0x20(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
add    $0x1c,%ebx
call   8074730 <fchmod@plt+0x29790>
sub    $0x1,%esi
jne    8074930 <fchmod@plt+0x29990>
mov    -0x20(%ebp),%eax
cmp    %eax,-0x2c(%ebp)
jb     8074a9c <fchmod@plt+0x29afc>
mov    0x4(%edi),%esi
mov    (%edi),%ebx
test   %esi,%esi
je     80748f0 <fchmod@plt+0x29950>
mov    %edi,-0x2c(%ebp)
mov    -0x38(%ebp),%edi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebx),%eax
mov    $0x80757f0,%edx
mov    0x18(%eax),%ecx
mov    %ebx,%eax
add    $0x1c,%ebx
mov    %edi,(%esp)
call   8074730 <fchmod@plt+0x29790>
sub    $0x1,%esi
jne    8074970 <fchmod@plt+0x299d0>
mov    -0x2c(%ebp),%edi
mov    (%edi),%eax
mov    %eax,-0x30(%ebp)
mov    0x4(%edi),%eax
test   %eax,%eax
mov    %eax,-0x3c(%ebp)
je     80748f0 <fchmod@plt+0x29950>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%ecx
mov    0x14(%ecx),%eax
mov    0x4(%ecx),%edi
mov    (%ecx),%esi
mov    0x18(%eax),%eax
test   %edi,%edi
mov    %esi,%ebx
mov    %eax,-0x34(%ebp)
je     8074a48 <fchmod@plt+0x29aa8>
mov    %edi,-0x2c(%ebp)
jmp    80749d1 <fchmod@plt+0x29a31>
add    $0x18,%ebx
subl   $0x1,-0x2c(%ebp)
je     8074a48 <fchmod@plt+0x29aa8>
mov    (%ebx),%edx
test   %edx,%edx
je     80749c8 <fchmod@plt+0x29a28>
mov    0xc(%ebx),%eax
test   $0x4,%al
cmove  %ebx,%esi
test   $0x2,%al
jne    80749c8 <fchmod@plt+0x29a28>
mov    0x8(%ebx),%ecx
mov    0xc(%esi),%edi
or     %eax,%edi
test   %ecx,%ecx
je     8074a78 <fchmod@plt+0x29ad8>
test   $0x10,%edi
jne    80749c8 <fchmod@plt+0x29a28>
test   $0x8,%al
jne    80749c8 <fchmod@plt+0x29a28>
test   %ecx,%ecx
je     8074a80 <fchmod@plt+0x29ae0>
mov    -0x34(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
and    $0x1,%edi
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
mov    %eax,0x8(%esp)
je     8074a60 <fchmod@plt+0x29ac0>
mov    -0x38(%ebp),%eax
add    $0x18,%ebx
movl   $0x808d591,0x4(%esp)
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
subl   $0x1,-0x2c(%ebp)
jne    80749d1 <fchmod@plt+0x29a31>
lea    0x0(%esi),%esi
addl   $0x1c,-0x30(%ebp)
subl   $0x1,-0x3c(%ebp)
jne    80749a8 <fchmod@plt+0x29a08>
jmp    80748f0 <fchmod@plt+0x29950>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x38(%ebp),%eax
movl   $0x808d59e,0x4(%esp)
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
jmp    80749c8 <fchmod@plt+0x29a28>
mov    0x8(%esi),%ecx
jmp    80749f3 <fchmod@plt+0x29a53>
mov    -0x38(%ebp),%eax
mov    %edx,0x8(%esp)
movl   $0x808d5a9,0x4(%esp)
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
jmp    80749c8 <fchmod@plt+0x29a28>
lea    0x1(%eax),%edx
mov    %edx,-0x20(%ebp)
movb   $0x0,(%eax)
mov    -0x2c(%ebp),%eax
movl   $0x808d58a,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
jmp    807495c <fchmod@plt+0x299bc>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0xc(%eax),%edx
test   %edx,%edx
jne    8074ae2 <fchmod@plt+0x29b42>
jmp    8074af1 <fchmod@plt+0x29b51>
mov    %ebx,%edx
mov    0x18(%edx),%ebx
mov    %edx,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
jne    8074ae0 <fchmod@plt+0x29b40>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8074b0d <fchmod@plt+0x29b6d>
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x54(%esp),%esi
mov    0x10(%ebx),%edx
mov    0x10(%esi),%ecx
mov    0xc(%ebx),%eax
mov    0xc(%esi),%edi
cmp    %ecx,%edx
je     8074c80 <fchmod@plt+0x29ce0>
test   %edx,%edx
je     8074bd2 <fchmod@plt+0x29c32>
test   %ecx,%ecx
je     8074b92 <fchmod@plt+0x29bf2>
mov    0x14(%edx),%eax
mov    0x14(%ecx),%edi
cmp    %eax,%edi
jge    8074b6a <fchmod@plt+0x29bca>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%edx),%edx
mov    0x14(%edx),%eax
cmp    %eax,%edi
jl     8074b60 <fchmod@plt+0x29bc0>
cmp    %eax,%edi
jle    8074c04 <fchmod@plt+0x29c64>
lea    0x0(%esi),%esi
mov    0xc(%ecx),%ecx
cmp    0x14(%ecx),%eax
jge    8074c04 <fchmod@plt+0x29c64>
mov    0xc(%ecx),%ecx
cmp    0x14(%ecx),%eax
jl     8074b78 <fchmod@plt+0x29bd8>
jmp    8074c04 <fchmod@plt+0x29c64>
xchg   %ax,%ax
mov    %eax,%edx
mov    0xc(%edx),%eax
test   %eax,%eax
jne    8074b90 <fchmod@plt+0x29bf0>
mov    0x8(%edx),%eax
cmp    %eax,%edi
je     8074d3f <fchmod@plt+0x29d9f>
mov    %edi,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8074bb6 <fchmod@plt+0x29c16>
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
jne    8074bc6 <fchmod@plt+0x29c26>
test   %edi,%edi
js     8074c58 <fchmod@plt+0x29cb8>
test   %eax,%eax
js     8074c58 <fchmod@plt+0x29cb8>
sub    %edi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%ecx
mov    0xc(%ecx),%edx
test   %edx,%edx
jne    8074bd0 <fchmod@plt+0x29c30>
mov    0x8(%ecx),%ebp
cmp    %ebp,%eax
je     8074d49 <fchmod@plt+0x29da9>
mov    %ebp,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8074c60 <fchmod@plt+0x29cc0>
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8074c60 <fchmod@plt+0x29cc0>
sub    %ebp,%eax
jmp    8074c3e <fchmod@plt+0x29c9e>
lea    0x0(%esi),%esi
mov    %edi,%edx
mov    %eax,%ecx
mov    0xc(%edx),%edi
mov    0xc(%ecx),%eax
cmp    %eax,%edi
jne    8074c00 <fchmod@plt+0x29c60>
mov    0x4(%ecx),%ebp
mov    0x8(%edx),%eax
mov    0x8(%ecx),%ecx
mov    0x4(%edx),%edi
cmp    %eax,%ecx
je     8074c48 <fchmod@plt+0x29ca8>
mov    %ecx,%edx
shr    $0x1f,%edx
test   %dl,%dl
jne    8074c70 <fchmod@plt+0x29cd0>
test   %ecx,%ecx
jns    8074c50 <fchmod@plt+0x29cb0>
sub    %eax,%ecx
mov    %ecx,%eax
test   %eax,%eax
jne    8074c3e <fchmod@plt+0x29c9e>
mov    0x18(%esi),%eax
cmp    %eax,0x18(%ebx)
sbb    %eax,%eax
or     $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%eax
sub    %edi,%eax
jmp    8074c2f <fchmod@plt+0x29c8f>
xchg   %ax,%ax
test   %eax,%eax
js     8074c2b <fchmod@plt+0x29c8b>
sub    %ecx,%eax
jmp    8074c2f <fchmod@plt+0x29c8f>
sub    %eax,%edi
mov    %edi,%eax
jmp    8074c3e <fchmod@plt+0x29c9e>
xchg   %ax,%ax
test   %ebp,%ebp
js     8074c68 <fchmod@plt+0x29cc8>
test   %eax,%eax
jns    8074bf6 <fchmod@plt+0x29c56>
sub    %eax,%ebp
mov    %ebp,%eax
jmp    8074c3e <fchmod@plt+0x29c9e>
xchg   %ax,%ax
mov    %eax,%edx
shr    $0x1f,%edx
test   %dl,%dl
je     8074c27 <fchmod@plt+0x29c87>
sub    %ecx,%eax
jmp    8074c2f <fchmod@plt+0x29c8f>
lea    0x0(%esi),%esi
cmp    %edi,%eax
jne    8074ba4 <fchmod@plt+0x29c04>
mov    0x14(%ebx),%eax
mov    $0x8074810,%edx
mov    0x18(%eax),%ecx
mov    %ebx,%eax
movl   $0x0,(%esp)
call   8074730 <fchmod@plt+0x29790>
mov    $0x8074810,%edx
mov    %eax,0x18(%esp)
mov    0x14(%esi),%eax
mov    0x18(%eax),%ecx
mov    %esi,%eax
movl   $0x0,(%esp)
call   8074730 <fchmod@plt+0x29790>
mov    (%ebx),%ecx
mov    (%esi),%edx
mov    0x4(%ebx),%edi
mov    0xc(%ecx),%ebp
mov    %eax,0x1c(%esp)
mov    0xc(%edx),%eax
and    $0x8,%ebp
mov    %eax,0x14(%esp)
andl   $0x8,0x14(%esp)
test   %edi,%edi
je     8074cf4 <fchmod@plt+0x29d54>
nop
mov    (%ecx),%eax
test   %eax,%eax
je     8074cec <fchmod@plt+0x29d4c>
testb  $0x2,0xc(%ecx)
je     8074cf6 <fchmod@plt+0x29d56>
add    $0x18,%ecx
sub    $0x1,%edi
jne    8074ce0 <fchmod@plt+0x29d40>
xor    %eax,%eax
mov    %eax,0x28(%esp)
mov    0x4(%esi),%eax
test   %eax,%eax
je     8074d1c <fchmod@plt+0x29d7c>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%ecx
test   %ecx,%ecx
je     8074d14 <fchmod@plt+0x29d74>
testb  $0x2,0xc(%edx)
je     8074d1e <fchmod@plt+0x29d7e>
add    $0x18,%edx
sub    $0x1,%eax
jne    8074d08 <fchmod@plt+0x29d68>
xor    %ecx,%ecx
test   %ebp,%ebp
mov    %ecx,0x2c(%esp)
jne    8074d62 <fchmod@plt+0x29dc2>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    8074d53 <fchmod@plt+0x29db3>
mov    0x14(%esp),%edi
cmp    %edi,%ebp
je     8074d6f <fchmod@plt+0x29dcf>
mov    %ebp,%eax
sub    %edi,%eax
jmp    8074bc8 <fchmod@plt+0x29c28>
mov    $0x1,%eax
jmp    8074c3e <fchmod@plt+0x29c9e>
mov    $0xffffffff,%eax
jmp    8074c3e <fchmod@plt+0x29c9e>
lea    0x2c(%esp),%eax
call   8074850 <fchmod@plt+0x298b0>
mov    %eax,0x14(%esp)
jmp    8074d2e <fchmod@plt+0x29d8e>
lea    0x28(%esp),%eax
call   8074850 <fchmod@plt+0x298b0>
mov    %eax,%ebp
jmp    8074d26 <fchmod@plt+0x29d86>
movzbl 0x1c(%esp),%eax
or     0x18(%esp),%al
jne    8074d9b <fchmod@plt+0x29dfb>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8074df7 <fchmod@plt+0x29e57>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     8074dea <fchmod@plt+0x29e4a>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a9e0 <strcasecmp@plt>
jmp    8074c2f <fchmod@plt+0x29c8f>
cmpb   $0x0,0x18(%esp)
je     8074e08 <fchmod@plt+0x29e68>
mov    0x18(%esp),%eax
movzbl %al,%ebp
mov    %eax,%edi
shl    $0x2,%ebp
mov    0x1c(%esp),%eax
test   %al,%al
mov    %eax,%edx
je     8074dfb <fchmod@plt+0x29e5b>
mov    %edx,0x14(%esp)
call   804af40 <__ctype_tolower_loc@plt>
mov    0x14(%esp),%edx
movzbl %dl,%edx
mov    (%eax),%ecx
mov    (%ecx,%ebp,1),%eax
sub    (%ecx,%edx,4),%eax
jne    8074c3e <fchmod@plt+0x29c9e>
mov    %edi,%eax
movzbl %al,%edi
mov    %edx,%eax
sub    %edi,%eax
je     8074c33 <fchmod@plt+0x29c93>
jmp    8074c3e <fchmod@plt+0x29c9e>
movzbl (%eax),%edi
mov    %edi,%eax
movzbl %al,%ebp
shl    $0x2,%ebp
jmp    8074dae <fchmod@plt+0x29e0e>
xor    %ebp,%ebp
xor    %edi,%edi
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8074e16 <fchmod@plt+0x29e76>
movzbl (%eax),%edx
jmp    8074db8 <fchmod@plt+0x29e18>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    8074dea <fchmod@plt+0x29e4a>
xor    %ebp,%ebp
xor    %edi,%edi
jmp    8074dae <fchmod@plt+0x29e0e>
xor    %edx,%edx
jmp    8074db8 <fchmod@plt+0x29e18>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x1c(%eax),%eax
sub    0x18(%ebx),%eax
cmp    0x10(%ebx),%eax
ja     8074e88 <fchmod@plt+0x29ee8>
mov    0x14(%ebx),%ecx
xor    %eax,%eax
test   %ecx,%ecx
cmovns 0x14(%ebx),%eax
sub    %eax,%edx
mov    %edx,%esi
jmp    8074e54 <fchmod@plt+0x29eb4>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0x20,(%eax)
sub    $0x1,%esi
test   %esi,%esi
jle    8074e80 <fchmod@plt+0x29ee0>
mov    0x1c(%ebx),%eax
cmp    0x20(%ebx),%eax
jb     8074e48 <fchmod@plt+0x29ea8>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8074e51 <fchmod@plt+0x29eb1>
mov    0x1c(%ebx),%eax
jmp    8074e48 <fchmod@plt+0x29ea8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0xc(%esp),%edx
jmp    8074e32 <fchmod@plt+0x29e92>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    0x14(%ecx),%eax
test   %eax,%eax
je     8074ed8 <fchmod@plt+0x29f38>
mov    0x20(%esp),%eax
mov    %edx,%edi
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8078c30 <argp_parse+0xcf0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   *0x14(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    8074ef0 <fchmod@plt+0x29f50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%edx),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,%ecx
mov    $0x2000003,%edx
mov    %eax,%ebp
mov    0x10(%esi),%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   8074ea0 <fchmod@plt+0x29f00>
test   %eax,%eax
mov    %eax,%ebx
je     8075009 <fchmod@plt+0x2a069>
cmpb   $0x0,(%eax)
je     8074fff <fchmod@plt+0x2a05f>
mov    0x8(%esi),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8074f5c <fchmod@plt+0x29fbc>
mov    0x4(%esi),%edi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8075108 <fchmod@plt+0x2a168>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    0x4(%esi),%eax
mov    0x809d7b8,%edx
call   8074e20 <fchmod@plt+0x29e80>
mov    0x4(%esi),%edx
mov    0x809d7b8,%eax
mov    0x1c(%edx),%edi
mov    %eax,0xc(%esp)
mov    %edi,%ecx
sub    0x18(%edx),%ecx
cmp    0x10(%edx),%ecx
ja     8075048 <fchmod@plt+0x2a0a8>
mov    %eax,0x4(%edx)
mov    %edx,%ecx
mov    %eax,0xc(%ecx)
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   804a950 <strlen@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     8074fd6 <fchmod@plt+0x2a036>
lea    (%edi,%eax,1),%eax
cmp    %eax,0x20(%edx)
jb     8075020 <fchmod@plt+0x2a080>
mov    %ecx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
call   804a4e0 <memcpy@plt>
mov    0x10(%esp),%edx
mov    0xc(%esp),%ecx
add    %ecx,0x1c(%edx)
mov    0x4(%esi),%edx
mov    0x1c(%edx),%edi
mov    %edi,%eax
mov    %edx,%ecx
sub    0x18(%edx),%eax
cmp    0x10(%edx),%eax
ja     80750b8 <fchmod@plt+0x2a118>
cmp    %edi,0x20(%ecx)
movl   $0x0,0x4(%edx)
jbe    80750de <fchmod@plt+0x2a13e>
lea    0x1(%edi),%eax
mov    %eax,0x1c(%ecx)
movb   $0xa,(%edi)
mov    0x8(%esi),%eax
movl   $0x1,0x4(%eax)
cmp    %ebp,%ebx
je     8075015 <fchmod@plt+0x2a075>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %ecx,0x10(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
test   %eax,%eax
je     8074fd0 <fchmod@plt+0x2a030>
mov    0x1c(%edx),%edi
jmp    8074fad <fchmod@plt+0x2a00d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x4(%esi),%ecx
mov    0x809d7b8,%eax
mov    0x1c(%ecx),%edi
mov    %eax,0x18(%esp)
mov    0xc(%esp),%eax
mov    %edi,%edx
sub    0x18(%ecx),%edx
mov    %edx,0x10(%esp)
mov    0x10(%ecx),%edx
mov    %edx,0x14(%esp)
mov    0x1c(%esp),%edx
mov    %eax,0x4(%edx)
mov    0x14(%esp),%edx
cmp    %edx,0x10(%esp)
mov    0x18(%esp),%eax
jbe    8075128 <fchmod@plt+0x2a188>
mov    %ecx,(%esp)
mov    %eax,0x10(%esp)
mov    %ecx,0xc(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x4(%esi),%edx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%eax
mov    0x1c(%edx),%edi
jmp    8074f8c <fchmod@plt+0x29fec>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x4(%esi),%ecx
mov    0xc(%esp),%edx
mov    0x1c(%ecx),%edi
cmp    %edi,0x20(%ecx)
movl   $0x0,0x4(%edx)
ja     8074ff6 <fchmod@plt+0x2a056>
mov    %ecx,(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0xc(%esp),%ecx
test   %eax,%eax
je     8074fff <fchmod@plt+0x2a05f>
mov    0x1c(%ecx),%edi
jmp    8074ff6 <fchmod@plt+0x2a056>
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8074f5c <fchmod@plt+0x29fbc>
mov    0x1c(%edi),%eax
jmp    8074f53 <fchmod@plt+0x29fb3>
mov    %ecx,%edx
jmp    8074f8c <fchmod@plt+0x29fec>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    0xc(%edx),%ebx
test   %ebx,%ebx
je     80751d8 <fchmod@plt+0x2a238>
mov    0x8(%edx),%eax
mov    (%edx),%edx
mov    0x4(%eax),%ecx
mov    (%eax),%ebx
mov    0x10(%edx),%ebp
test   %ecx,%ecx
je     807517b <fchmod@plt+0x2a1db>
test   %ebx,%ebx
je     807517b <fchmod@plt+0x2a1db>
mov    0xc(%ebx),%eax
cmp    %eax,0xc(%edx)
je     807517b <fchmod@plt+0x2a1db>
mov    0x4(%esi),%edx
mov    0x1c(%edx),%eax
cmp    0x20(%edx),%eax
jae    8075260 <fchmod@plt+0x2a2c0>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edx)
movb   $0xa,(%eax)
test   %ebp,%ebp
je     8075218 <fchmod@plt+0x2a278>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8075218 <fchmod@plt+0x2a278>
cmpb   $0x0,(%eax)
je     8075218 <fchmod@plt+0x2a278>
test   %ebx,%ebx
je     80751a8 <fchmod@plt+0x2a208>
mov    0x10(%ebx),%ebx
cmp    %ebp,%ebx
je     8075218 <fchmod@plt+0x2a278>
test   %ebx,%ebx
jne    807520c <fchmod@plt+0x2a26c>
xchg   %ax,%ax
mov    0x4(%esi),%edx
mov    %esi,%ecx
mov    0xc(%edx),%ebx
mov    0x10(%ebp),%edx
call   8074ef0 <fchmod@plt+0x29f50>
mov    0x4(%esi),%ebp
mov    0x1c(%ebp),%edx
mov    %ebp,%eax
sub    0x18(%ebp),%edx
cmp    0x10(%ebp),%edx
ja     8075250 <fchmod@plt+0x2a2b0>
mov    %ebx,0xc(%ebp)
jmp    807521b <fchmod@plt+0x2a27b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%ebx
mov    0x1c(%ebx),%eax
lea    0x2(%eax),%edx
cmp    %edx,0x20(%ebx)
jb     8075230 <fchmod@plt+0x2a290>
mov    $0x202c,%edx
mov    %dx,(%eax)
addl   $0x2,0x1c(%ebx)
mov    0x4(%esi),%eax
add    $0x1c,%esp
mov    %edi,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8074e20 <fchmod@plt+0x29e80>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8075213 <fchmod@plt+0x2a273>
mov    0xc(%ebx),%ebx
cmp    %ebx,%ebp
jne    8075208 <fchmod@plt+0x2a268>
cmp    %ebx,%ebp
jne    80751a8 <fchmod@plt+0x2a208>
nop
mov    0x4(%esi),%eax
movl   $0x0,0xc(%esi)
add    $0x1c,%esp
mov    %edi,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8074e20 <fchmod@plt+0x29e80>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80751f2 <fchmod@plt+0x2a252>
mov    0x1c(%ebx),%eax
jmp    80751e6 <fchmod@plt+0x2a246>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x4(%esi),%eax
jmp    80751cc <fchmod@plt+0x2a22c>
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0xc(%esp),%edx
test   %eax,%eax
je     807517b <fchmod@plt+0x2a1db>
mov    0x1c(%edx),%eax
jmp    8075172 <fchmod@plt+0x2a1d2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x10(%eax),%esi
mov    %eax,0x1c(%esp)
mov    0xc(%eax),%eax
mov    %edx,0x14(%esp)
mov    0x58(%esp),%edi
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80755b8 <fchmod@plt+0x2a618>
movl   $0xb,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8075638 <fchmod@plt+0x2a698>
test   %ebp,%ebp
je     8075610 <fchmod@plt+0x2a670>
add    $0x1,%eax
mov    %eax,0x18(%esp)
movb   $0x0,0x27(%esp)
mov    0x18(%esp),%ecx
test   %ecx,%ecx
je     80755b8 <fchmod@plt+0x2a618>
mov    0x18(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,0x20(%esp)
mov    0x1c(%esp),%ebx
mov    0x14(%ebx),%edx
test   %edx,%edx
je     80755d4 <fchmod@plt+0x2a634>
mov    0x14(%esp),%edx
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   8078c30 <argp_parse+0xcf0>
mov    0x14(%ebx),%edx
cmp    $0x1,%ebp
mov    0x20(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,%ecx
mov    %eax,0x2c(%esp)
sbb    %eax,%eax
add    $0x2000002,%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   *%edx
mov    %eax,%edx
test   %edx,%edx
je     80755e8 <fchmod@plt+0x2a648>
mov    0x50(%esp),%eax
test   %eax,%eax
je     807537c <fchmod@plt+0x2a3dc>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8075660 <fchmod@plt+0x2a6c0>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   804a950 <strlen@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
jne    8075538 <fchmod@plt+0x2a598>
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
cmp    0x10(%edi),%ebx
ja     807558c <fchmod@plt+0x2a5ec>
mov    0x14(%edi),%ebx
xor    %eax,%eax
test   %ebx,%ebx
cmovns 0x14(%edi),%eax
cmp    %eax,0x4(%edi)
jb     8075518 <fchmod@plt+0x2a578>
cmp    0x20(%esp),%edx
mov    $0x1,%ebx
je     80753cc <fchmod@plt+0x2a42c>
mov    %edx,(%esp)
call   804a4c0 <free@plt>
cmpb   $0x0,0x27(%esp)
jne    80755f8 <fchmod@plt+0x2a658>
test   %ebp,%ebp
je     80754b1 <fchmod@plt+0x2a511>
mov    0x1c(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     80754b1 <fchmod@plt+0x2a511>
mov    0x2c(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x2000004,(%esp)
mov    %edx,0x8(%esp)
call   *%eax
test   %eax,%eax
mov    %eax,%ecx
je     80754b1 <fchmod@plt+0x2a511>
or     0x50(%esp),%ebx
je     807542c <fchmod@plt+0x2a48c>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8075700 <fchmod@plt+0x2a760>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ecx,(%esp)
mov    %ecx,0x18(%esp)
call   804a950 <strlen@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebx
je     8075470 <fchmod@plt+0x2a4d0>
mov    0x1c(%edi),%eax
lea    (%eax,%ebx,1),%edx
cmp    %edx,0x20(%edi)
jae    80756b3 <fchmod@plt+0x2a713>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    80756b0 <fchmod@plt+0x2a710>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     80756d3 <fchmod@plt+0x2a733>
mov    0x14(%edi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
cmovns 0x14(%edi),%eax
cmp    %eax,0x4(%edi)
jae    80754ac <fchmod@plt+0x2a50c>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80756e0 <fchmod@plt+0x2a740>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    $0x1,%ebx
test   %esi,%esi
je     8075508 <fchmod@plt+0x2a568>
mov    (%esi),%eax
test   %eax,%eax
je     8075508 <fchmod@plt+0x2a568>
mov    0x54(%esp),%edx
test   %edx,%edx
sete   0x18(%esp)
test   $0x1,%bl
je     80754d8 <fchmod@plt+0x2a538>
jmp    8075728 <fchmod@plt+0x2a788>
test   %ebx,%ebx
jne    80755a8 <fchmod@plt+0x2a608>
mov    0x54(%esp),%ecx
add    $0x10,%esi
xor    %edx,%edx
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %ebx,%ecx
or     0x50(%esp),%ecx
mov    %ebp,%ecx
setne  %dl
mov    %edx,(%esp)
mov    0x14(%esp),%edx
call   8075290 <fchmod@plt+0x2a2f0>
or     %eax,%ebx
mov    (%esi),%eax
test   %eax,%eax
jne    80754d0 <fchmod@plt+0x2a530>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8075688 <fchmod@plt+0x2a6e8>
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
movb   $0xa,(%eax)
jmp    80753b9 <fchmod@plt+0x2a419>
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
lea    (%eax,%ebx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    8075562 <fchmod@plt+0x2a5c2>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x28(%esp),%edx
test   %eax,%eax
je     8075396 <fchmod@plt+0x2a3f6>
mov    0x1c(%edi),%eax
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   804a4e0 <memcpy@plt>
mov    0x28(%esp),%edx
add    0x1c(%edi),%ebx
mov    %ebx,0x1c(%edi)
sub    0x18(%edi),%ebx
cmp    0x10(%edi),%ebx
jbe    80753a5 <fchmod@plt+0x2a405>
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x28(%esp),%edx
jmp    80753a5 <fchmod@plt+0x2a405>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x18(%esp)
jne    80754d8 <fchmod@plt+0x2a538>
jmp    8075508 <fchmod@plt+0x2a568>
mov    0x1c(%esp),%ebx
movl   $0x0,0x20(%esp)
movb   $0x0,0x27(%esp)
mov    0x14(%ebx),%edx
test   %edx,%edx
jne    8075321 <fchmod@plt+0x2a381>
mov    0x20(%esp),%edx
movl   $0x0,0x2c(%esp)
test   %edx,%edx
jne    807535f <fchmod@plt+0x2a3bf>
xor    %ebx,%ebx
cmpb   $0x0,0x27(%esp)
je     80753d7 <fchmod@plt+0x2a437>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
jmp    80753d7 <fchmod@plt+0x2a437>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edx
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %eax,%ebx
mov    %edx,(%esp)
call   804ac50 <strndup@plt>
test   %ebx,%ebx
setne  0x27(%esp)
mov    %eax,0x18(%esp)
jmp    80752e3 <fchmod@plt+0x2a343>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
movb   $0x0,0x27(%esp)
je     80752ef <fchmod@plt+0x2a34f>
movl   $0x0,0x20(%esp)
movl   $0x0,0x18(%esp)
jmp    8075312 <fchmod@plt+0x2a372>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x28(%esp),%edx
test   %eax,%eax
je     807537c <fchmod@plt+0x2a3dc>
mov    0x1c(%edi),%eax
jmp    8075373 <fchmod@plt+0x2a3d3>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x28(%esp),%edx
test   %eax,%eax
je     80753b9 <fchmod@plt+0x2a419>
mov    0x1c(%edi),%eax
jmp    8075524 <fchmod@plt+0x2a584>
mov    0x1c(%edi),%eax
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   804a4e0 <memcpy@plt>
mov    0x18(%esp),%ecx
add    %ebx,0x1c(%edi)
jmp    8075470 <fchmod@plt+0x2a4d0>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
jmp    8075487 <fchmod@plt+0x2a4e7>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80754ac <fchmod@plt+0x2a50c>
mov    0x1c(%edi),%eax
jmp    80754a3 <fchmod@plt+0x2a503>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x18(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x18(%esp),%ecx
test   %eax,%eax
je     807542c <fchmod@plt+0x2a48c>
mov    0x1c(%edi),%eax
jmp    8075423 <fchmod@plt+0x2a483>
cmpb   $0x0,0x18(%esp)
jne    80754d8 <fchmod@plt+0x2a538>
mov    $0x1,%ebx
jmp    8075508 <fchmod@plt+0x2a568>
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x1c(%eax),%eax
mov    %eax,%ecx
sub    0x18(%ebx),%ecx
cmp    0x10(%ebx),%ecx
ja     8075790 <fchmod@plt+0x2a7f0>
xor    %ecx,%ecx
cmpl   $0x0,0x14(%ebx)
cmovns 0x14(%ebx),%ecx
add    %edx,%ecx
cmp    0x8(%ebx),%ecx
jb     8075778 <fchmod@plt+0x2a7d8>
cmp    %eax,0x20(%ebx)
jbe    80757a8 <fchmod@plt+0x2a808>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0xa,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
cmp    %eax,0x20(%ebx)
jbe    80757c8 <fchmod@plt+0x2a828>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%ebx)
movb   $0x20,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%ebx),%eax
mov    0xc(%esp),%edx
jmp    8075753 <fchmod@plt+0x2a7b3>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8075786 <fchmod@plt+0x2a7e6>
mov    0x1c(%ebx),%eax
jmp    8075769 <fchmod@plt+0x2a7c9>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8075786 <fchmod@plt+0x2a7e6>
mov    0x1c(%ebx),%eax
jmp    807577d <fchmod@plt+0x2a7dd>
jmp    80757f0 <fchmod@plt+0x2a850>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edx
mov    0x8(%esi),%eax
mov    0xc(%edx),%ebx
or     0xc(%esi),%ebx
test   %eax,%eax
je     8075880 <fchmod@plt+0x2a8e0>
test   $0x10,%bl
je     8075820 <fchmod@plt+0x2a880>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
and    $0x1,%ebx
mov    %eax,%edi
jne    8075890 <fchmod@plt+0x2a8f0>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
lea    0x6(%eax),%edx
mov    0x2c(%esp),%eax
call   8075740 <fchmod@plt+0x2a7a0>
mov    %edi,0xc(%esp)
mov    0x4(%esi),%eax
movl   $0x808d5bc,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edx),%eax
test   %eax,%eax
jne    807580b <fchmod@plt+0x2a86b>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
movl   $0x808d5b1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8083f20 <argp_parse+0xbfe0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    (%ecx),%eax
mov    0x10(%edi),%ebx
movl   $0x5,0x8(%esp)
mov    0x50(%esp),%esi
mov    %edx,0x14(%esp)
mov    0x54(%esp),%ebp
mov    %eax,0x20(%esp)
mov    0x8(%edi),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x14(%esp),%ecx
mov    $0x2000006,%edx
mov    %ecx,(%esp)
mov    %edi,%ecx
mov    %eax,0x24(%esp)
call   8074ea0 <fchmod@plt+0x29f00>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8075aa8 <fchmod@plt+0x2ab08>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   804aab0 <strchrnul@plt>
cmpb   $0x0,(%eax)
mov    %eax,0x10(%esp)
jne    8075a28 <fchmod@plt+0x2aa88>
mov    0x18(%esp),%edi
movb   $0x0,0x28(%esp)
mov    0x10(%esp),%eax
lea    0x1(%eax),%edx
mov    %ebp,%eax
sub    %edi,%edx
call   8075740 <fchmod@plt+0x2a7a0>
mov    0x10(%esp),%edx
mov    0x1c(%ebp),%eax
sub    %edi,%edx
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%ebp)
jae    8075981 <fchmod@plt+0x2a9e1>
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x2c(%esp)
call   8083e50 <argp_parse+0xbf10>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     807599c <fchmod@plt+0x2a9fc>
mov    0x1c(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   804a4e0 <memcpy@plt>
mov    0x2c(%esp),%edx
add    %edx,0x1c(%ebp)
mov    0x18(%esp),%eax
cmp    %eax,0x24(%esp)
je     80759ae <fchmod@plt+0x2aa0e>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
je     80759ea <fchmod@plt+0x2aa4a>
mov    (%ebx),%eax
test   %eax,%eax
je     80759ea <fchmod@plt+0x2aa4a>
mov    %esi,%edx
mov    0x14(%esp),%edi
mov    %ebp,%esi
mov    0x1c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %ebp,%ecx
mov    %edi,%edx
mov    %esi,0x4(%esp)
add    $0x10,%ebx
call   80758c0 <fchmod@plt+0x2a920>
xor    %edx,%edx
test   %eax,%eax
mov    (%ebx),%eax
sete   %dl
test   %eax,%eax
jne    80759c8 <fchmod@plt+0x2aa28>
mov    %edx,%esi
test   %esi,%esi
je     8075a88 <fchmod@plt+0x2aae8>
cmpb   $0x0,0x28(%esp)
je     8075a88 <fchmod@plt+0x2aae8>
mov    0x10(%esp),%eax
cmpb   $0x0,(%eax)
mov    0x20(%esp),%eax
jne    8075a98 <fchmod@plt+0x2aaf8>
cmpb   $0x0,(%eax)
jle    8075aba <fchmod@plt+0x2ab1a>
movb   $0x0,(%eax)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movsbl (%eax),%eax
test   %eax,%eax
mov    %eax,%ecx
jle    8075ac1 <fchmod@plt+0x2ab21>
mov    0x10(%esp),%eax
xor    %edx,%edx
mov    %ebx,0x28(%esp)
mov    %ecx,%ebx
mov    %esi,0x50(%esp)
mov    %edx,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edi
add    $0x1,%esi
movl   $0xa,0x4(%esp)
mov    %edi,(%esp)
call   804aab0 <strchrnul@plt>
cmp    %ebx,%esi
jl     8075a50 <fchmod@plt+0x2aab0>
mov    0x28(%esp),%ebx
mov    0x50(%esp),%esi
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
movb   $0x1,0x28(%esp)
addl   $0x1,(%eax)
jmp    8075945 <fchmod@plt+0x2a9a5>
nop
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
addb   $0x1,(%eax)
add    $0x3c,%esp
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x0,0x28(%esp)
movl   $0x0,0x10(%esp)
jmp    80759ae <fchmod@plt+0x2aa0e>
xor    %eax,%eax
jmp    8075a1c <fchmod@plt+0x2aa7c>
mov    0x18(%esp),%edi
jmp    8075a76 <fchmod@plt+0x2aad6>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%eax
mov    0x8(%eax),%ecx
test   %ecx,%ecx
je     8075ae0 <fchmod@plt+0x2ab40>
xor    %eax,%eax
pop    %ebx
ret
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
test   %edx,%edx
jne    8075adc <fchmod@plt+0x2ab3c>
mov    0xc(%ecx),%edx
or     0xc(%eax),%edx
and    $0x10,%edx
jne    8075adc <fchmod@plt+0x2ab3c>
mov    0x14(%esp),%edx
mov    0x14(%esp),%ebx
mov    0x4(%eax),%eax
mov    (%edx),%edx
lea    0x1(%edx),%ecx
mov    %ecx,(%ebx)
mov    %al,(%edx)
jmp    8075adc <fchmod@plt+0x2ab3c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    0x30(%esp),%ebp
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
je     8075b90 <fchmod@plt+0x2abf0>
testb  $0x1,(%edx)
jne    8075b60 <fchmod@plt+0x2abc0>
mov    %esi,(%esp)
mov    %ecx,%edi
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x34(%esp)
mov    %ebx,0x30(%esp)
mov    %eax,0x38(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8083f20 <argp_parse+0xbfe0>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,0x34(%esp)
mov    %ebx,0x30(%esp)
mov    %eax,0x38(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8083f20 <argp_parse+0xbfe0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x10(%eax),%edi
mov    (%eax),%esi
movl   $0x10,(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
mov    %edi,0x24(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     80760e2 <fchmod@plt+0x2b142>
mov    0x2c(%esp),%eax
test   %esi,%esi
movl   $0x0,0x4(%eax)
movl   $0x0,0xc(%eax)
je     8075d8e <fchmod@plt+0x2adee>
testb  $0x4,0xc(%esi)
jne    8076106 <fchmod@plt+0x2b166>
xor    %edx,%edx
mov    %esi,%ebx
mov    %esi,0x18(%esp)
mov    %eax,%edi
mov    %edx,%esi
movl   $0x0,0x14(%esp)
jmp    8075c46 <fchmod@plt+0x2aca6>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%eax
test   $0x4,%al
jne    8075c1d <fchmod@plt+0x2ac7d>
add    $0x1,%esi
mov    %esi,0x4(%edi)
test   $0x8,%al
jne    8075c43 <fchmod@plt+0x2aca3>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8075c43 <fchmod@plt+0x2aca3>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
movzwl (%eax,%ebp,2),%eax
and    $0x4000,%ax
cmp    $0x1,%ax
sbbl   $0xffffffff,0x14(%esp)
add    $0x18,%ebx
mov    0x4(%ebx),%ebp
test   %ebp,%ebp
jne    8075c10 <fchmod@plt+0x2ac70>
mov    (%ebx),%eax
test   %eax,%eax
jne    8075c10 <fchmod@plt+0x2ac70>
mov    0x10(%ebx),%eax
test   %eax,%eax
jne    8075c10 <fchmod@plt+0x2ac70>
mov    0x14(%ebx),%eax
test   %eax,%eax
jne    8075c10 <fchmod@plt+0x2ac70>
mov    %esi,%edx
mov    0x18(%esp),%esi
imul   $0x1c,%edx,%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804a800 <malloc@plt>
mov    0x2c(%esp),%edi
mov    %eax,%ebp
mov    0x14(%esp),%eax
mov    %ebp,(%edi)
add    $0x1,%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %ebp,%ebp
mov    %eax,%edx
mov    %eax,0x18(%esp)
mov    %edi,%eax
mov    %edx,0x8(%eax)
mov    0x1c(%esp),%edx
je     80761f0 <fchmod@plt+0x2b250>
mov    0x18(%esp),%ecx
test   %ecx,%ecx
je     80761f0 <fchmod@plt+0x2b250>
cmp    $0x9249249,%edx
ja     80761cc <fchmod@plt+0x2b22c>
mov    0x4(%esi),%edi
mov    0x18(%esp),%ebx
movl   $0x0,0x14(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
jne    8075cde <fchmod@plt+0x2ad3e>
mov    (%esi),%eax
test   %eax,%eax
je     80761a0 <fchmod@plt+0x2b200>
mov    0x14(%esi),%eax
test   %eax,%eax
mov    %esi,0x0(%ebp)
movl   $0x0,0x4(%ebp)
mov    %ebx,0x8(%ebp)
je     8076189 <fchmod@plt+0x2b1e9>
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
xor    %edx,%edx
mov    %ebp,0x1c(%esp)
mov    %eax,0xc(%ebp)
mov    0x3c(%esp),%eax
mov    %eax,0x10(%ebp)
mov    0x38(%esp),%eax
mov    %eax,0x14(%ebp)
mov    0xc(%esi),%eax
mov    %edi,%ebp
mov    %edx,%edi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
test   $0x8,%al
jne    8075d68 <fchmod@plt+0x2adc8>
lea    -0x1(%ebp),%eax
cmp    $0xfe,%eax
ja     8075d68 <fchmod@plt+0x2adc8>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebp,2)
je     8075d68 <fchmod@plt+0x2adc8>
mov    0x18(%esp),%ecx
mov    %ebp,%eax
cmp    %ebx,%ecx
jae    8076150 <fchmod@plt+0x2b1b0>
cmp    (%ecx),%al
je     8075d68 <fchmod@plt+0x2adc8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ebx,%ecx
je     8076150 <fchmod@plt+0x2b1b0>
cmp    (%ecx),%al
jne    8075d58 <fchmod@plt+0x2adb8>
nop
add    $0x18,%esi
mov    0x4(%esi),%ecx
test   %ecx,%ecx
jne    8075d7c <fchmod@plt+0x2addc>
mov    (%esi),%eax
test   %eax,%eax
je     8076160 <fchmod@plt+0x2b1c0>
mov    0xc(%esi),%eax
test   $0x4,%al
je     8076176 <fchmod@plt+0x2b1d6>
mov    %ecx,%ebp
jmp    8075d20 <fchmod@plt+0x2ad80>
movb   $0x0,(%ebx)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8075eaa <fchmod@plt+0x2af0a>
mov    (%eax),%ecx
test   %ecx,%ecx
je     8075eaa <fchmod@plt+0x2af0a>
mov    0x2c(%esp),%eax
add    $0xc,%eax
mov    %eax,0x4c(%esp)
nop
mov    0x24(%esp),%eax
mov    0xc(%eax),%edi
test   %edi,%edi
jne    807609d <fchmod@plt+0x2b0fd>
mov    0x24(%esp),%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
je     80760ac <fchmod@plt+0x2b10c>
mov    0x38(%esp),%ebp
mov    0x24(%esp),%esi
sub    0x10(%ebp),%esi
movl   $0x1c,(%esp)
call   804a800 <malloc@plt>
sar    $0x4,%esi
test   %eax,%eax
mov    %eax,%edx
je     8075e22 <fchmod@plt+0x2ae82>
mov    %edi,0x8(%eax)
mov    %ebx,(%eax)
mov    %esi,0x4(%eax)
mov    0x3c(%esp),%eax
mov    %ebp,0x10(%edx)
test   %eax,%eax
mov    %eax,0xc(%edx)
je     80760a5 <fchmod@plt+0x2b105>
mov    0x14(%eax),%eax
mov    %eax,0x14(%esp)
add    $0x1,%eax
mov    0x2c(%esp),%edi
mov    %eax,0x14(%edx)
mov    0xc(%edi),%eax
mov    %edx,0xc(%edi)
mov    %eax,0x18(%edx)
mov    0x24(%esp),%eax
mov    (%eax),%eax
call   8075ba0 <fchmod@plt+0x2ac00>
mov    %eax,0x30(%esp)
mov    0x2c(%esp),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
jne    8075e4a <fchmod@plt+0x2aeaa>
jmp    80760b5 <fchmod@plt+0x2b115>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x18(%edx),%eax
test   %eax,%eax
jne    8075e48 <fchmod@plt+0x2aea8>
add    $0x18,%edx
mov    0x30(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%edx)
mov    %edi,%eax
movl   $0x0,0xc(%edi)
mov    0x4(%edi),%edi
test   %edi,%edi
je     8075e8e <fchmod@plt+0x2aeee>
mov    0x2c(%esp),%esi
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    8075eb6 <fchmod@plt+0x2af16>
mov    %edi,0x4(%esi)
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esi)
mov    0x8(%edi),%eax
mov    %eax,0x8(%esi)
movl   $0x0,0x4(%edi)
mov    0x30(%esp),%eax
call   8074ad0 <fchmod@plt+0x29b30>
addl   $0x10,0x24(%esp)
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    8075db0 <fchmod@plt+0x2ae10>
mov    0x2c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    (%ebx,%edi,1),%eax
mov    %eax,0x44(%esp)
imul   $0x1c,%eax,%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
mov    0x2c(%esp),%esi
mov    0x8(%esi),%esi
mov    %eax,0x40(%esp)
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    0x30(%esp),%edx
mov    %eax,%ebp
mov    0x8(%edx),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     80760be <fchmod@plt+0x2b11e>
mov    0x40(%esp),%edx
test   %edx,%edx
je     80760be <fchmod@plt+0x2b11e>
cmpl   $0x9249249,0x44(%esp)
ja     807612a <fchmod@plt+0x2b18a>
mov    0x30(%esp),%eax
imul   $0x1c,%ebx,%ecx
imul   $0x1c,%edi,%edi
mov    (%eax),%edx
mov    0x2c(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edx,0x18(%esp)
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x48(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804ac20 <mempcpy@plt>
mov    0x18(%esp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x28(%esp),%edi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x40(%esp),%eax
mov    0x14(%esp),%ecx
mov    %edi,%edx
sub    %esi,%edx
add    %edx,0x8(%eax)
add    $0x1c,%eax
sub    $0x1,%ebx
jne    8075f80 <fchmod@plt+0x2afe0>
mov    0x30(%esp),%eax
add    0x40(%esp),%ecx
add    0x28(%esp),%ebp
mov    %ecx,0x20(%esp)
mov    0x8(%eax),%ecx
mov    0x4(%eax),%eax
mov    %ebp,0x1c(%esp)
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8076024 <fchmod@plt+0x2b084>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x4(%eax),%esi
mov    %edi,0x8(%eax)
mov    (%eax),%ebx
test   %esi,%esi
je     8076018 <fchmod@plt+0x2b078>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x8,0xc(%ebx)
movzbl (%ecx),%edx
mov    0x4(%ebx),%edi
jne    8076010 <fchmod@plt+0x2b070>
lea    -0x1(%edi),%eax
cmp    $0xfe,%eax
ja     8076010 <fchmod@plt+0x2b070>
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%edi,2)
je     8076010 <fchmod@plt+0x2b070>
movsbl %dl,%eax
cmp    %edi,%eax
je     8076068 <fchmod@plt+0x2b0c8>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ebx
sub    $0x1,%esi
jne    8075fd0 <fchmod@plt+0x2b030>
addl   $0x1c,0x20(%esp)
subl   $0x1,0x34(%esp)
jne    8075fb8 <fchmod@plt+0x2b018>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x2c(%esp),%edi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %edi,%eax
mov    0x40(%esp),%edi
mov    %edi,(%eax)
mov    0x44(%esp),%edi
mov    %edi,0x4(%eax)
mov    0x28(%esp),%edi
mov    %edi,0x8(%eax)
jmp    8075e8e <fchmod@plt+0x2aeee>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
cmp    %ebp,%eax
jb     807607f <fchmod@plt+0x2b0df>
jmp    8076088 <fchmod@plt+0x2b0e8>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ebp,%eax
je     8076088 <fchmod@plt+0x2b0e8>
cmp    (%eax),%dl
jne    8076078 <fchmod@plt+0x2b0d8>
add    $0x1,%ecx
jmp    8076010 <fchmod@plt+0x2b070>
mov    0x1c(%esp),%eax
add    $0x1,%ecx
mov    %dl,(%eax)
add    $0x1,%eax
mov    %eax,0x1c(%esp)
jmp    8076010 <fchmod@plt+0x2b070>
mov    0x8(%eax),%ebx
jmp    8075dce <fchmod@plt+0x2ae2e>
xor    %eax,%eax
jmp    8075e12 <fchmod@plt+0x2ae72>
mov    0x3c(%esp),%edx
jmp    8075e22 <fchmod@plt+0x2ae82>
mov    0x4c(%esp),%edx
jmp    8075e54 <fchmod@plt+0x2aeb4>
movl   $0x808d900,0xc(%esp)
movl   $0x374,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d5ed,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808d90b,0xc(%esp)
movl   $0x1bc,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d5d1,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808d90b,0xc(%esp)
movl   $0x1c6,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d5d5,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808d900,0xc(%esp)
movl   $0x376,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d75c,(%esp)
call   804af50 <__assert_fail@plt>
xchg   %ax,%ax
mov    %al,(%ebx)
add    $0x1,%ebx
jmp    8075d68 <fchmod@plt+0x2adc8>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
test   %eax,%eax
jne    8075d7c <fchmod@plt+0x2addc>
mov    0x14(%esi),%eax
test   %eax,%eax
jne    8075d7c <fchmod@plt+0x2addc>
mov    0x1c(%esp),%ebp
mov    %edi,%edx
mov    %ecx,%edi
mov    %edx,0x4(%ebp)
add    $0x1c,%ebp
jmp    8075cd0 <fchmod@plt+0x2ad30>
mov    (%esi),%eax
test   %eax,%eax
jne    8075cfa <fchmod@plt+0x2ad5a>
cmp    $0x1,%edi
adcl   $0x0,0x14(%esp)
jmp    8075cfa <fchmod@plt+0x2ad5a>
mov    0x10(%esi),%eax
test   %eax,%eax
mov    0x14(%esi),%eax
jne    8075ce1 <fchmod@plt+0x2ad41>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8075d8b <fchmod@plt+0x2adeb>
mov    %esi,0x0(%ebp)
movl   $0x0,0x4(%ebp)
mov    %ebx,0x8(%ebp)
jmp    8075cfa <fchmod@plt+0x2ad5a>
movl   $0x808d90b,0xc(%esp)
movl   $0x1d6,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d71c,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808d90b,0xc(%esp)
movl   $0x1d4,0x8(%esp)
movl   $0x808d5c5,0x4(%esp)
movl   $0x808d6f8,(%esp)
call   804af50 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
test   %edx,%edx
je     8076282 <fchmod@plt+0x2b2e2>
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %edx,0xc(%esp)
mov    0x4(%edi),%edx
mov    (%edi),%ebx
test   %edx,%edx
je     8076264 <fchmod@plt+0x2b2c4>
mov    %edx,%ebp
xchg   %ax,%ax
mov    (%ebx),%eax
test   %eax,%eax
je     807625c <fchmod@plt+0x2b2bc>
testb  $0x2,0xc(%ebx)
jne    807625c <fchmod@plt+0x2b2bc>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     8076278 <fchmod@plt+0x2b2d8>
add    $0x18,%ebx
sub    $0x1,%ebp
jne    8076240 <fchmod@plt+0x2b2a0>
add    $0x1c,%edi
subl   $0x1,0xc(%esp)
jne    8076233 <fchmod@plt+0x2b293>
xor    %eax,%eax
jmp    807627a <fchmod@plt+0x2b2da>
lea    0x0(%esi),%esi
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
test   %eax,%eax
je     80762e8 <fchmod@plt+0x2b348>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
test   %ebx,%ebx
je     80762df <fchmod@plt+0x2b33f>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     80762df <fchmod@plt+0x2b33f>
add    $0x10,%ebx
lea    0x0(%esi),%esi
mov    0x10(%ecx),%edx
add    $0x10,%ebx
mov    0x8(%ecx),%eax
call   8076290 <fchmod@plt+0x2b2f0>
mov    -0x10(%ebx),%ecx
add    %eax,%esi
test   %ecx,%ecx
jne    80762c8 <fchmod@plt+0x2b328>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %esi,%esi
jmp    80762b5 <fchmod@plt+0x2b315>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x100(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0xdc(%esp)
xor    %eax,%eax
mov    0x10c(%esp),%edi
test   %esi,%esi
je     8076468 <argp_failure+0x178>
testb  $0x2,0x10(%esi)
jne    807643a <argp_failure+0x14a>
mov    0x2c(%esi),%ebx
test   %ebx,%ebx
je     807643a <argp_failure+0x14a>
mov    %ebx,(%esp)
call   804ad40 <flockfile@plt>
test   %esi,%esi
je     8076458 <argp_failure+0x168>
mov    0x28(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <fputs_unlocked@plt>
test   %edi,%edi
je     80763a0 <argp_failure+0xb0>
mov    0x14(%ebx),%eax
lea    0x110(%esp),%ebp
cmp    0x18(%ebx),%eax
jae    807651a <argp_failure+0x22a>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80764f0 <argp_failure+0x200>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a400 <__vfprintf_chk@plt>
mov    0x108(%esp),%edx
test   %edx,%edx
je     8076408 <argp_failure+0x118>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80764db <argp_failure+0x1eb>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    8076505 <argp_failure+0x215>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
lea    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x108(%esp),%eax
movl   $0xc8,0x8(%esp)
mov    %eax,(%esp)
call   804ab50 <strerror_r@plt>
test   %eax,%eax
je     8076488 <argp_failure+0x198>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804aeb0 <fputs@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80764c6 <argp_failure+0x1d6>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   804aa90 <funlockfile@plt>
mov    0x104(%esp),%eax
test   %eax,%eax
je     807643a <argp_failure+0x14a>
test   %esi,%esi
je     8076473 <argp_failure+0x183>
testb  $0x20,0x10(%esi)
je     8076473 <argp_failure+0x183>
mov    0xdc(%esp),%eax
xor    %gs:0x14,%eax
jne    80764c1 <argp_failure+0x1d1>
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x809d840,%eax
jmp    8076347 <argp_failure+0x57>
lea    0x0(%esi),%esi
mov    0x809d864,%ebx
jmp    807632c <argp_failure+0x3c>
mov    0x104(%esp),%eax
mov    %eax,(%esp)
call   804a8a0 <exit@plt>
lea    0x0(%esi),%esi
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   804a850 <strerror@plt>
test   %eax,%eax
jne    80763fc <argp_failure+0x10c>
movl   $0x5,0x8(%esp)
movl   $0x808d606,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
jmp    80763fc <argp_failure+0x10c>
call   804a610 <__stack_chk_fail@plt>
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    807641d <argp_failure+0x12d>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    80763c0 <argp_failure+0xd0>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    8076388 <argp_failure+0x98>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    80763d5 <argp_failure+0xe5>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    8076373 <argp_failure+0x83>
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xc(%ebp),%esi
mov    %eax,-0x88(%ebp)
mov    %edx,-0x64(%ebp)
mov    %ecx,-0x84(%ebp)
mov    %esi,-0x6c(%ebp)
mov    %gs:0x14,%esi
mov    %esi,-0x1c(%ebp)
xor    %esi,%esi
test   %ecx,%ecx
je     8076618 <argp_failure+0x328>
mov    %ecx,(%esp)
call   804ad40 <flockfile@plt>
mov    0x809d7c4,%eax
test   %eax,%eax
je     80769ae <argp_failure+0x6be>
mov    0x809d7c0,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   8083870 <argp_parse+0xb930>
test   %eax,%eax
mov    %eax,%edi
je     8077780 <argp_failure+0x1490>
testb  $0xb,0x8(%ebp)
movl   $0x0,-0x74(%ebp)
jne    8076ca8 <argp_failure+0x9b8>
xor    %ebx,%ebx
testb  $0x3,0x8(%ebp)
jne    8076d35 <argp_failure+0xa45>
testb  $0x10,0x8(%ebp)
jne    8076eb4 <argp_failure+0xbc4>
testb  $0x4,0x8(%ebp)
jne    8076e72 <argp_failure+0xb82>
testb  $0x8,0x8(%ebp)
jne    8076690 <argp_failure+0x3a0>
testb  $0x20,0x8(%ebp)
jne    8076985 <argp_failure+0x695>
testb  $0x40,0x8(%ebp)
jne    8076630 <argp_failure+0x340>
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   804aa90 <funlockfile@plt>
mov    -0x74(%ebp),%eax
test   %eax,%eax
je     8076610 <argp_failure+0x320>
call   8074ad0 <fchmod@plt+0x29b30>
mov    %edi,(%esp)
call   8083e00 <argp_parse+0xbec0>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    8077815 <argp_failure+0x1525>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x809d628,%eax
test   %eax,%eax
je     80765f6 <argp_failure+0x306>
test   %ebx,%ebx
mov    %eax,%esi
je     807665a <argp_failure+0x36a>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    8077686 <argp_failure+0x1396>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    0x809d628,%esi
mov    -0x88(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x808d68b,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8083f20 <argp_parse+0xbfe0>
jmp    80765f6 <argp_failure+0x306>
mov    -0x74(%ebp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     80765e6 <argp_failure+0x2f6>
test   %ebx,%ebx
je     80775a0 <argp_failure+0x12b0>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80777ac <argp_failure+0x14bc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    -0x74(%ebp),%eax
mov    -0x74(%ebp),%esi
mov    0x4(%eax),%eax
mov    (%esi),%esi
movl   $0x0,-0x50(%ebp)
movl   $0x0,-0x4c(%ebp)
test   %eax,%eax
mov    %esi,-0x60(%ebp)
movl   $0x0,-0x48(%ebp)
mov    %eax,-0x90(%ebp)
je     8076976 <argp_failure+0x686>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x60(%ebp),%eax
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
mov    (%eax),%esi
mov    0x8(%eax),%eax
mov    %esi,-0x5c(%ebp)
mov    0x10(%edi),%esi
mov    %eax,-0x6c(%ebp)
cmp    %esi,%ebx
ja     80773a8 <argp_failure+0x10b8>
mov    0x4(%edi),%eax
movl   $0x0,0x4(%edi)
movl   $0x0,-0x80(%ebp)
mov    %eax,-0x78(%ebp)
mov    0xc(%edi),%eax
movl   $0x1,-0x38(%ebp)
mov    %edi,-0x40(%ebp)
mov    %eax,-0x7c(%ebp)
mov    -0x60(%ebp),%eax
mov    %eax,-0x44(%ebp)
lea    -0x50(%ebp),%eax
mov    %eax,-0x3c(%ebp)
mov    -0x64(%ebp),%eax
mov    %eax,-0x34(%ebp)
mov    -0x5c(%ebp),%eax
mov    0xc(%eax),%ecx
mov    %ecx,%eax
and    $0x8,%eax
mov    %eax,-0x68(%ebp)
jne    8076786 <argp_failure+0x496>
mov    -0x60(%ebp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     8076786 <argp_failure+0x496>
mov    -0x5c(%ebp),%eax
lea    0x0(%esi),%esi
cmpl   $0x0,(%eax)
je     8076777 <argp_failure+0x487>
testb  $0x2,0xc(%eax)
je     807742a <argp_failure+0x113a>
add    $0x18,%eax
sub    $0x1,%edx
jne    8076768 <argp_failure+0x478>
movl   $0x0,-0x80(%ebp)
cmp    %esi,%ebx
mov    0x809d7a8,%eax
ja     80773d0 <argp_failure+0x10e0>
mov    %eax,0xc(%edi)
mov    -0x60(%ebp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8076810 <argp_failure+0x520>
mov    -0x5c(%ebp),%eax
mov    %edi,-0x70(%ebp)
mov    %ecx,%edi
mov    %eax,%ebx
add    $0xc,%eax
mov    %eax,-0x8c(%ebp)
jmp    80767bb <argp_failure+0x4cb>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edi
test   $0x8,%edi
mov    0x4(%ebx),%edx
jne    80767f8 <argp_failure+0x508>
lea    -0x1(%edx),%eax
cmp    $0xfe,%eax
ja     80767f8 <argp_failure+0x508>
mov    %edx,-0x68(%ebp)
call   804af60 <__ctype_b_loc@plt>
mov    -0x68(%ebp),%edx
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%edx,2)
je     80767f8 <argp_failure+0x508>
mov    -0x6c(%ebp),%eax
movsbl (%eax),%eax
cmp    %eax,%edx
je     8077110 <argp_failure+0xe20>
lea    0x0(%esi),%esi
add    $0x18,%ebx
sub    $0x1,%esi
jne    80767b8 <argp_failure+0x4c8>
mov    -0x5c(%ebp),%eax
mov    -0x70(%ebp),%edi
mov    0xc(%eax),%eax
mov    %eax,-0x68(%ebp)
andl   $0x8,-0x68(%ebp)
mov    -0x68(%ebp),%eax
test   %eax,%eax
je     8077290 <argp_failure+0xfa0>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x809d7b0,%ebx
ja     8077469 <argp_failure+0x1179>
mov    -0x60(%ebp),%eax
mov    %ebx,0xc(%edi)
mov    -0x5c(%ebp),%ebx
mov    0x4(%eax),%esi
test   %esi,%esi
jne    8076854 <argp_failure+0x564>
jmp    80768e0 <argp_failure+0x5f0>
lea    0x0(%esi),%esi
add    $0x18,%ebx
sub    $0x1,%esi
je     80768e0 <argp_failure+0x5f0>
mov    (%ebx),%eax
test   %eax,%eax
je     8076848 <argp_failure+0x558>
cmpb   $0x0,(%eax)
je     8076848 <argp_failure+0x558>
testb  $0x2,0xc(%ebx)
jne    8076848 <argp_failure+0x558>
mov    0x809d7b0,%eax
lea    -0x44(%ebp),%edx
call   8075130 <fchmod@plt+0x2a190>
testb  $0x20,0xc(%ebx)
je     8077436 <argp_failure+0x1146>
mov    (%ebx),%eax
mov    %eax,-0x68(%ebp)
mov    -0x68(%ebp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     8076848 <argp_failure+0x558>
mov    0x1c(%edi),%eax
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    80768b6 <argp_failure+0x5c6>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x6c(%ebp)
call   8083e50 <argp_parse+0xbf10>
mov    -0x6c(%ebp),%edx
test   %eax,%eax
je     8076848 <argp_failure+0x558>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%ecx
add    $0x18,%ebx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x6c(%ebp)
mov    %ecx,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    -0x6c(%ebp),%edx
add    %edx,0x1c(%edi)
sub    $0x1,%esi
jne    8076854 <argp_failure+0x564>
xchg   %ax,%ax
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     80773c0 <argp_failure+0x10d0>
movl   $0x0,0x4(%edi)
mov    -0x38(%ebp),%ebx
mov    -0x5c(%ebp),%eax
test   %ebx,%ebx
je     8077128 <argp_failure+0xe38>
testb  $0x8,0xc(%eax)
mov    0x4(%eax),%ebx
jne    8076928 <argp_failure+0x638>
lea    -0x1(%ebx),%eax
cmp    $0xfe,%eax
ja     8076928 <argp_failure+0x638>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebx,2)
jne    8076935 <argp_failure+0x645>
lea    0x0(%esi),%esi
mov    -0x5c(%ebp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     8077793 <argp_failure+0x14a3>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     8077263 <argp_failure+0xf73>
mov    -0x78(%ebp),%eax
mov    %eax,0x4(%edi)
mov    -0x7c(%ebp),%eax
addl   $0x1c,-0x60(%ebp)
subl   $0x1,-0x90(%ebp)
mov    %eax,0xc(%edi)
jne    80766f0 <argp_failure+0x400>
mov    -0x48(%ebp),%esi
test   %esi,%esi
je     8076976 <argp_failure+0x686>
mov    0x809d7a4,%ebx
test   %ebx,%ebx
jne    80776a6 <argp_failure+0x13b6>
testb  $0x20,0x8(%ebp)
mov    $0x1,%ebx
je     80765f0 <argp_failure+0x300>
mov    -0x64(%ebp),%edx
mov    $0x1,%ecx
mov    -0x88(%ebp),%eax
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8075290 <fchmod@plt+0x2a2f0>
or     %eax,%ebx
jmp    80765f0 <argp_failure+0x300>
movl   $0x808d624,(%esp)
call   804a7d0 <getenv@plt>
mov    %eax,%esi
mov    0x809d7a0,%eax
test   %esi,%esi
mov    %eax,-0x44(%ebp)
mov    0x809d7a4,%eax
mov    %eax,-0x40(%ebp)
mov    0x809d7a8,%eax
mov    %eax,-0x3c(%ebp)
mov    0x809d7ac,%eax
mov    %eax,-0x38(%ebp)
mov    0x809d7b0,%eax
mov    %eax,-0x34(%ebp)
mov    0x809d7b4,%eax
mov    %eax,-0x30(%ebp)
mov    0x809d7b8,%eax
mov    %eax,-0x2c(%ebp)
mov    0x809d7bc,%eax
mov    %eax,-0x28(%ebp)
mov    0x809d7c0,%eax
mov    %eax,-0x24(%ebp)
mov    0x809d7c4,%eax
mov    %eax,-0x20(%ebp)
je     807657a <argp_failure+0x28a>
movzbl (%esi),%ecx
nop
test   %cl,%cl
mov    %ecx,-0x5c(%ebp)
je     8076b80 <argp_failure+0x890>
call   804af60 <__ctype_b_loc@plt>
mov    -0x5c(%ebp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
jmp    8076a3e <argp_failure+0x74e>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%ecx
movzbl %cl,%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    8076a38 <argp_failure+0x748>
test   $0x4,%dh
mov    %cl,-0x68(%ebp)
je     8076b78 <argp_failure+0x888>
mov    %dx,-0x5c(%ebp)
mov    %esi,%ebx
jmp    8076a6d <argp_failure+0x77d>
xchg   %ax,%ax
add    $0x1,%ebx
movzbl (%ebx),%ecx
movzbl %cl,%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dl
jne    8076a60 <argp_failure+0x770>
cmp    $0x2d,%cl
je     8076a60 <argp_failure+0x770>
cmp    $0x5f,%cl
je     8076a60 <argp_failure+0x770>
mov    %dx,-0x5c(%ebp)
mov    %ebx,%edx
sub    %esi,%edx
testw  $0x2000,-0x5c(%ebp)
mov    %edx,-0x60(%ebp)
je     8076aa0 <argp_failure+0x7b0>
nop
add    $0x1,%ebx
movzbl (%ebx),%ecx
movzbl %cl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8076a90 <argp_failure+0x7a0>
cmp    $0x2c,%cl
je     8076c68 <argp_failure+0x978>
test   %cl,%cl
je     8076c68 <argp_failure+0x978>
cmp    $0x3d,%cl
je     8077071 <argp_failure+0xd81>
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
and    $0x8,%dh
jne    8077013 <argp_failure+0xd23>
movl   $0x0,-0x74(%ebp)
movl   $0x0,-0x70(%ebp)
mov    $0x808d61b,%edi
mov    $0x808d920,%ecx
mov    %esi,-0x5c(%ebp)
mov    $0x8,%eax
mov    %ecx,%esi
mov    %ebx,-0x68(%ebp)
mov    %edi,%ebx
mov    -0x60(%ebp),%edi
jmp    8076b0d <argp_failure+0x81d>
xchg   %ax,%ax
add    $0xc,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
je     8076c10 <argp_failure+0x920>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmp    %eax,%edi
jne    8076af8 <argp_failure+0x808>
mov    -0x5c(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    8076af8 <argp_failure+0x808>
mov    -0x74(%ebp),%eax
mov    %esi,%ecx
mov    -0x68(%ebp),%ebx
mov    -0x5c(%ebp),%esi
test   %eax,%eax
jne    80770af <argp_failure+0xdbf>
mov    -0x70(%ebp),%edi
test   %edi,%edi
js     8077768 <argp_failure+0x1478>
mov    0x8(%ecx),%eax
mov    -0x70(%ebp),%edi
mov    %edi,-0x44(%ebp,%eax,1)
mov    (%ecx),%ecx
test   %ecx,%ecx
je     8076c16 <argp_failure+0x926>
movzbl (%ebx),%ecx
mov    %ebx,%esi
cmp    $0x2c,%cl
jne    8076a18 <argp_failure+0x728>
add    $0x1,%esi
movzbl 0x1(%ebx),%ecx
jmp    8076a18 <argp_failure+0x728>
lea    0x0(%esi,%eiz,1),%esi
test   %cl,%cl
jne    80775c8 <argp_failure+0x12d8>
mov    -0x24(%ebp),%ecx
mov    $0x808d61b,%ebx
mov    $0x808d920,%eax
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8076ba9 <argp_failure+0x8b9>
mov    0x8(%eax),%edx
cmp    $0x20,%edx
je     8076ba9 <argp_failure+0x8b9>
cmp    %ecx,-0x44(%ebp,%edx,1)
jge    8077639 <argp_failure+0x1349>
add    $0xc,%eax
mov    (%eax),%ebx
test   %ebx,%ebx
jne    8076b90 <argp_failure+0x8a0>
mov    -0x44(%ebp),%eax
movl   $0x1,0x809d7c4
00
mov    %eax,0x809d7a0
mov    -0x40(%ebp),%eax
mov    %eax,0x809d7a4
mov    -0x3c(%ebp),%eax
mov    %eax,0x809d7a8
mov    -0x38(%ebp),%eax
mov    %eax,0x809d7ac
mov    -0x34(%ebp),%eax
mov    %eax,0x809d7b0
mov    -0x30(%ebp),%eax
mov    %eax,0x809d7b4
mov    -0x2c(%ebp),%eax
mov    %eax,0x809d7b8
mov    -0x28(%ebp),%eax
mov    %eax,0x809d7bc
mov    -0x24(%ebp),%eax
mov    %eax,0x809d7c0
jmp    807657a <argp_failure+0x28a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x5c(%ebp),%esi
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%edi
movl   $0x5,0x8(%esp)
movl   $0x808d7f8,0x4(%esp)
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    -0x60(%ebp),%esi
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
call   80762f0 <argp_failure>
jmp    8076b5a <argp_failure+0x86a>
lea    0x0(%esi),%esi
cmpb   $0x6e,-0x68(%ebp)
movl   $0x1,-0x74(%ebp)
movl   $0x1,-0x70(%ebp)
jne    8076ad8 <argp_failure+0x7e8>
cmpb   $0x6f,0x1(%esi)
jne    8076ad8 <argp_failure+0x7e8>
cmpb   $0x2d,0x2(%esi)
jne    8076ad8 <argp_failure+0x7e8>
add    $0x3,%esi
subl   $0x3,-0x60(%ebp)
movl   $0x0,-0x70(%ebp)
jmp    8076ad8 <argp_failure+0x7e8>
nop
mov    -0x88(%ebp),%eax
xor    %edx,%edx
call   8075ba0 <fchmod@plt+0x2ac00>
mov    $0x808d657,%ecx
mov    0x4(%eax),%ebx
mov    (%eax),%esi
mov    %eax,-0x74(%ebp)
mov    %ebx,%edx
mov    %esi,%eax
call   8076220 <fchmod@plt+0x2b280>
test   %eax,%eax
je     8076cd6 <argp_failure+0x9e6>
movl   $0xffffffff,0xc(%eax)
mov    $0x808d9dd,%ecx
mov    %ebx,%edx
mov    %esi,%eax
call   8076220 <fchmod@plt+0x2b280>
test   %eax,%eax
je     8076cef <argp_failure+0x9ff>
movl   $0xffffffff,0xc(%eax)
test   %ebx,%ebx
je     80765bc <argp_failure+0x2cc>
mov    %esi,%edx
xor    %eax,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x18(%edx)
add    $0x1,%eax
add    $0x1c,%edx
cmp    %ebx,%eax
jne    8076d00 <argp_failure+0xa10>
movl   $0x8074b20,0xc(%esp)
xor    %ebx,%ebx
movl   $0x1c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804add0 <qsort@plt>
testb  $0x3,0x8(%ebp)
je     80765c8 <argp_failure+0x2d8>
mov    -0x88(%ebp),%ebx
mov    0x10(%ebx),%edx
mov    0x8(%ebx),%eax
call   8076290 <fchmod@plt+0x2b2f0>
lea    0x1e(%eax),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x27(%esp),%esi
mov    %esi,-0x60(%ebp)
andl   $0xfffffff0,-0x60(%ebp)
mov    %eax,0x8(%esp)
mov    -0x60(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    $0x1,%edx
jmp    8076e31 <argp_failure+0xb41>
lea    0x0(%esi),%esi
movl   $0x808d65c,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x6c(%ebp),%esi
movl   $0x8087e72,0x4(%esp)
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
call   8083f20 <argp_parse+0xbfe0>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x809d7bc,%edx
ja     8076f78 <argp_failure+0xc88>
testb  $0x2,0x8(%ebp)
mov    0x4(%edi),%esi
mov    %edx,0x4(%edi)
je     8076f60 <argp_failure+0xc70>
mov    -0x74(%ebp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
jne    8076f90 <argp_failure+0xca0>
mov    -0x64(%ebp),%edx
lea    -0x44(%ebp),%ecx
mov    %ebx,%eax
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   80758c0 <fchmod@plt+0x2a920>
mov    0x1c(%edi),%edx
mov    %eax,%ecx
mov    %edx,%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     8076f20 <argp_failure+0xc30>
mov    -0x5c(%ebp),%eax
mov    %eax,0xc(%edi)
cmp    %edx,0x20(%edi)
mov    %esi,0x4(%edi)
jbe    8076ef8 <argp_failure+0xc08>
lea    0x1(%edx),%eax
mov    %eax,0x1c(%edi)
movb   $0xa,(%edx)
test   %ecx,%ecx
je     8077009 <argp_failure+0xd19>
xor    %edx,%edx
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x809d7bc,%esi
ja     8076ee0 <argp_failure+0xbf0>
mov    0xc(%edi),%eax
test   %edx,%edx
mov    %esi,0xc(%edi)
movl   $0x5,0x8(%esp)
mov    %eax,-0x5c(%ebp)
mov    -0x60(%ebp),%eax
mov    %eax,-0x44(%ebp)
jne    8076d80 <argp_failure+0xa90>
movl   $0x808d663,0x4(%esp)
jmp    8076d88 <argp_failure+0xa98>
mov    -0x88(%ebp),%eax
mov    $0x1,%ebx
movl   $0x5,0x8(%esp)
movl   $0x808d854,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x6c(%ebp),%esi
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8083f20 <argp_parse+0xbfe0>
jmp    80765dc <argp_failure+0x2ec>
mov    -0x64(%ebp),%edx
xor    %ecx,%ecx
mov    -0x88(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   8075290 <fchmod@plt+0x2a2f0>
or     %eax,%ebx
jmp    80765d2 <argp_failure+0x2e2>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    %edx,-0x5c(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    -0x5c(%ebp),%edx
jmp    8076e46 <argp_failure+0xb56>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   8083e50 <argp_parse+0xbf10>
mov    -0x5c(%ebp),%ecx
test   %eax,%eax
je     8076e27 <argp_failure+0xb37>
mov    0x1c(%edi),%edx
jmp    8076e1e <argp_failure+0xb2e>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    %ecx,-0x68(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%edx
mov    -0x5c(%ebp),%ecx
mov    %edx,%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %ecx,0xc(%edi)
mov    -0x68(%ebp),%ecx
jbe    8076e12 <argp_failure+0xb22>
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%edx
mov    -0x5c(%ebp),%ecx
jmp    8076e12 <argp_failure+0xb22>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x74(%ebp),%eax
mov    %edi,%edx
call   80748d0 <fchmod@plt+0x29930>
orl    $0x2,0x8(%ebp)
jmp    8076de1 <argp_failure+0xaf1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    %edx,-0x68(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    -0x68(%ebp),%edx
jmp    8076dc3 <argp_failure+0xad3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x808d66a,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,-0x68(%ebp)
call   804a950 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     8076de1 <argp_failure+0xaf1>
mov    0x1c(%edi),%eax
lea    (%eax,%edx,1),%ecx
cmp    %ecx,0x20(%edi)
jae    8076fe8 <argp_failure+0xcf8>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x70(%ebp)
call   8083e50 <argp_parse+0xbf10>
mov    -0x70(%ebp),%edx
test   %eax,%eax
je     8076de1 <argp_failure+0xaf1>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x70(%ebp)
mov    %ecx,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    -0x70(%ebp),%edx
add    %edx,0x1c(%edi)
jmp    8076de1 <argp_failure+0xaf1>
mov    $0x1,%ebx
jmp    80765c8 <argp_failure+0x2d8>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804aea0 <strtol@plt>
mov    %eax,-0x70(%ebp)
mov    (%edi),%eax
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dh
je     807704f <argp_failure+0xd5f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dh
jne    8077040 <argp_failure+0xd50>
and    $0x20,%dh
je     8077065 <argp_failure+0xd75>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8077058 <argp_failure+0xd68>
movl   $0x0,-0x74(%ebp)
jmp    8076ad8 <argp_failure+0x7e8>
movzbl 0x1(%ebx),%edx
lea    0x1(%ebx),%ecx
mov    %ecx,%ebx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
je     8076ac1 <argp_failure+0x7d1>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
je     8076ac1 <argp_failure+0x7d1>
add    $0x1,%ebx
movzbl (%ebx),%edx
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    8077088 <argp_failure+0xd98>
jmp    8076ac1 <argp_failure+0x7d1>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    8076b3b <argp_failure+0x84b>
mov    %ecx,-0x5c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x808d798,0x4(%esp)
mov    -0x64(%ebp),%edi
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    -0x60(%ebp),%ecx
mov    %esi,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   80762f0 <argp_failure>
mov    -0x5c(%ebp),%ecx
jmp    8076b50 <argp_failure+0x860>
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%edi
je     8077330 <argp_failure+0x1040>
addl   $0x1,-0x6c(%ebp)
jmp    80767f8 <argp_failure+0x508>
lea    0x0(%esi),%esi
mov    0x10(%eax),%eax
xor    %esi,%esi
test   %eax,%eax
je     807714f <argp_failure+0xe5f>
mov    %eax,0x4(%esp)
mov    -0x64(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    (%eax),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
mov    -0x60(%ebp),%eax
mov    0x14(%eax),%ecx
mov    -0x5c(%ebp),%eax
mov    0x4(%eax),%edx
mov    -0x64(%ebp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8074ea0 <fchmod@plt+0x29f00>
test   %eax,%eax
mov    %eax,%ebx
je     8077224 <argp_failure+0xf34>
cmpb   $0x0,(%eax)
je     8077218 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
ja     8077536 <argp_failure+0x1246>
mov    0x14(%edi),%edx
xor    %eax,%eax
mov    0x809d7b4,%ecx
test   %edx,%edx
cmovns 0x14(%edi),%eax
mov    %eax,-0x5c(%ebp)
mov    %ecx,0x4(%edi)
mov    %ecx,%edx
lea    0x3(%edx),%eax
cmp    %eax,-0x5c(%ebp)
mov    %ecx,0xc(%edi)
jbe    80774f2 <argp_failure+0x1202>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    807760d <argp_failure+0x131d>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8077218 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
lea    (%eax,%ecx,1),%edx
cmp    %edx,0x20(%edi)
jae    80771f9 <argp_failure+0xf09>
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0x5c(%ebp)
call   8083e50 <argp_parse+0xbf10>
mov    -0x5c(%ebp),%ecx
test   %eax,%eax
je     8077218 <argp_failure+0xf28>
mov    0x1c(%edi),%eax
mov    %ecx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,-0x5c(%ebp)
call   804a4e0 <memcpy@plt>
mov    -0x5c(%ebp),%ecx
add    %ecx,0x1c(%edi)
lea    0x0(%esi),%esi
cmp    %ebx,%esi
je     8077224 <argp_failure+0xf34>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%edi),%eax
mov    %eax,%edx
sub    0x18(%edi),%edx
cmp    0x10(%edi),%edx
ja     8077496 <argp_failure+0x11a6>
cmp    %eax,0x20(%edi)
movl   $0x0,0x4(%edi)
jbe    8077476 <argp_failure+0x1186>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    -0x60(%ebp),%eax
mov    %eax,-0x50(%ebp)
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
jbe    8076944 <argp_failure+0x654>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%eax
mov    -0x78(%ebp),%esi
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %esi,0x4(%edi)
jbe    807694a <argp_failure+0x65a>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
jmp    807694a <argp_failure+0x65a>
lea    0x0(%esi),%esi
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x809d7ac,%ebx
ja     807745c <argp_failure+0x116c>
mov    -0x60(%ebp),%eax
mov    %ebx,0xc(%edi)
mov    0x4(%eax),%esi
test   %esi,%esi
je     80768e0 <argp_failure+0x5f0>
mov    -0x5c(%ebp),%eax
mov    %eax,%ebx
add    $0xc,%eax
mov    %eax,-0x68(%ebp)
jmp    80772d4 <argp_failure+0xfe4>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ebx
sub    $0x1,%esi
je     80768e0 <argp_failure+0x5f0>
mov    (%ebx),%eax
test   %eax,%eax
je     80772c8 <argp_failure+0xfd8>
testb  $0x2,0xc(%ebx)
jne    80772c8 <argp_failure+0xfd8>
mov    0x809d7ac,%eax
lea    -0x44(%ebp),%edx
call   8075130 <fchmod@plt+0x2a190>
mov    (%ebx),%eax
movl   $0x808d67c,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8083f20 <argp_parse+0xbfe0>
mov    -0x64(%ebp),%ecx
mov    -0x5c(%ebp),%eax
mov    0x8(%eax),%eax
mov    %edi,0x8(%esp)
mov    (%ecx),%edx
mov    $0x808d681,%ecx
mov    0x18(%edx),%edx
movl   $0x808d685,(%esp)
mov    %edx,0x4(%esp)
mov    -0x68(%ebp),%edx
call   8075b10 <fchmod@plt+0x2ab70>
jmp    80772c8 <argp_failure+0xfd8>
nop
mov    0x809d7a8,%eax
lea    -0x44(%ebp),%edx
call   8075130 <fchmod@plt+0x2a190>
mov    -0x70(%ebp),%edi
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80774cf <argp_failure+0x11df>
mov    -0x70(%ebp),%edi
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0x2d,(%eax)
mov    -0x6c(%ebp),%eax
mov    -0x70(%ebp),%edi
movzbl (%eax),%edx
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80774a6 <argp_failure+0x11b6>
mov    -0x70(%ebp),%edi
lea    0x1(%eax),%ecx
mov    %ecx,0x1c(%edi)
mov    %dl,(%eax)
mov    -0x80(%ebp),%ecx
mov    -0x5c(%ebp),%eax
test   %ecx,%ecx
je     80773f8 <argp_failure+0x1108>
mov    0x809d7a0,%edx
test   %edx,%edx
jne    80773f8 <argp_failure+0x1108>
mov    0x8(%eax),%eax
test   %eax,%eax
je     8077119 <argp_failure+0xe29>
movl   $0x1,-0x48(%ebp)
jmp    8077119 <argp_failure+0xe29>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%ebx
sub    0x18(%edi),%ebx
mov    0x10(%edi),%esi
jmp    807670f <argp_failure+0x41f>
xchg   %ax,%ax
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
jmp    80768ef <argp_failure+0x5ff>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %eax,-0x70(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    -0x5c(%ebp),%eax
mov    0xc(%eax),%ecx
mov    %ecx,%eax
and    $0x8,%eax
mov    %eax,-0x68(%ebp)
mov    -0x70(%ebp),%eax
jmp    8076793 <argp_failure+0x4a3>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x70(%ebp),%edi
mov    $0x808d586,%ecx
mov    0x8(%eax),%eax
mov    %edi,0x8(%esp)
mov    -0x64(%ebp),%edi
mov    (%edi),%edx
mov    0x18(%edx),%edx
movl   $0x808d677,(%esp)
mov    %edx,0x4(%esp)
mov    -0x8c(%ebp),%edx
call   8075b10 <fchmod@plt+0x2ab70>
jmp    8077119 <argp_failure+0xe29>
movl   $0x1,-0x80(%ebp)
jmp    8076786 <argp_failure+0x496>
movl   $0x5,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    -0x64(%ebp),%eax
mov    (%eax),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,-0x68(%ebp)
jmp    8076881 <argp_failure+0x591>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
jmp    80772a5 <argp_failure+0xfb5>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
jmp    8076830 <argp_failure+0x540>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     807724e <argp_failure+0xf5e>
mov    0x1c(%edi),%eax
jmp    8077245 <argp_failure+0xf55>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%eax
jmp    8077235 <argp_failure+0xf45>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,-0x68(%ebp)
call   8083e50 <argp_parse+0xbf10>
mov    -0x68(%ebp),%edx
test   %eax,%eax
je     8077378 <argp_failure+0x1088>
mov    -0x70(%ebp),%eax
mov    0x1c(%eax),%eax
jmp    807736d <argp_failure+0x107d>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8077358 <argp_failure+0x1068>
mov    -0x70(%ebp),%eax
mov    0x1c(%eax),%eax
jmp    807734c <argp_failure+0x105c>
cmp    %edx,-0x5c(%ebp)
jb     807762d <argp_failure+0x133d>
mov    0x1c(%edi),%eax
lea    0x3(%eax),%edx
cmp    %edx,0x20(%edi)
jae    8077521 <argp_failure+0x1231>
movl   $0x3,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80771c7 <argp_failure+0xed7>
mov    0x1c(%edi),%eax
mov    $0x2020,%edx
mov    %dx,(%eax)
movb   $0x20,0x2(%eax)
addl   $0x3,0x1c(%edi)
jmp    80771c7 <argp_failure+0xed7>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x14(%edi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
mov    0x809d7b4,%ecx
cmovns 0x14(%edi),%eax
mov    %eax,-0x5c(%ebp)
mov    0x1c(%edi),%eax
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    %ecx,-0x68(%ebp)
jbe    807719e <argp_failure+0xeae>
mov    %edi,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%edi),%eax
mov    -0x68(%ebp),%edx
sub    0x18(%edi),%eax
cmp    0x10(%edi),%eax
mov    0x809d7b4,%ecx
mov    %edx,0x4(%edi)
jbe    807780c <argp_failure+0x151c>
mov    %edi,(%esp)
mov    %ecx,-0x68(%ebp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x809d7b4,%edx
mov    -0x68(%ebp),%ecx
jmp    80771a3 <argp_failure+0xeb3>
mov    -0x74(%ebp),%esi
mov    %eax,-0x90(%ebp)
mov    (%esi),%esi
movl   $0x0,-0x50(%ebp)
movl   $0x0,-0x4c(%ebp)
movl   $0x0,-0x48(%ebp)
mov    %esi,-0x60(%ebp)
jmp    80766f0 <argp_failure+0x400>
mov    -0x64(%ebp),%edi
movl   $0x5,0x8(%esp)
movl   $0x808d632,0x4(%esp)
mov    (%edi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   80762f0 <argp_failure>
jmp    8076b80 <argp_failure+0x890>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80771c7 <argp_failure+0xed7>
mov    0x1c(%edi),%eax
jmp    80771be <argp_failure+0xece>
mov    %edi,%eax
call   8074e20 <fchmod@plt+0x29e80>
jmp    80771c7 <argp_failure+0xed7>
mov    -0x64(%ebp),%esi
movl   $0x5,0x8(%esp)
movl   $0x808d820,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x808d64f,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80762f0 <argp_failure>
jmp    807657a <argp_failure+0x28a>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8076654 <argp_failure+0x364>
mov    0x1c(%edi),%eax
jmp    807664b <argp_failure+0x35b>
mov    -0x64(%ebp),%esi
movl   $0x5,0x8(%esp)
movl   $0x808d88c,0x4(%esp)
mov    (%esi),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    $0x2000005,%edx
mov    %esi,(%esp)
mov    (%esi),%ecx
mov    %eax,-0x5c(%ebp)
call   8074ea0 <fchmod@plt+0x29f00>
test   %eax,%eax
mov    %eax,%ebx
je     8076976 <argp_failure+0x686>
cmpb   $0x0,(%eax)
je     8077752 <argp_failure+0x1462>
mov    0x1c(%edi),%eax
cmp    0x20(%edi),%eax
jae    80777cc <argp_failure+0x14dc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
mov    0x1c(%edi),%eax
test   %esi,%esi
je     8077740 <argp_failure+0x1450>
lea    (%eax,%esi,1),%edx
cmp    %edx,0x20(%edi)
jae    8077728 <argp_failure+0x1438>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
mov    0x1c(%edi),%eax
je     8077740 <argp_failure+0x1450>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
mov    0x1c(%edi),%eax
add    %esi,%eax
mov    %eax,0x1c(%edi)
cmp    %eax,0x20(%edi)
jbe    80777ec <argp_failure+0x14fc>
lea    0x1(%eax),%edx
mov    %edx,0x1c(%edi)
movb   $0xa,(%eax)
cmp    %ebx,-0x5c(%ebp)
je     8076976 <argp_failure+0x686>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
jmp    8076976 <argp_failure+0x686>
mov    %ecx,-0x5c(%ebp)
movl   $0x5,0x8(%esp)
movl   $0x808d7c8,0x4(%esp)
jmp    80770cd <argp_failure+0xddd>
mov    -0x84(%ebp),%eax
mov    %eax,(%esp)
call   804aa90 <funlockfile@plt>
jmp    8076618 <argp_failure+0x328>
mov    -0x60(%ebp),%eax
lea    -0x44(%ebp),%ecx
mov    0x14(%eax),%edx
mov    -0x5c(%ebp),%eax
mov    0x10(%eax),%eax
call   8074ef0 <fchmod@plt+0x29f50>
jmp    807724e <argp_failure+0xf5e>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80766bb <argp_failure+0x3cb>
mov    0x1c(%edi),%eax
jmp    80766b2 <argp_failure+0x3c2>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     80776fc <argp_failure+0x140c>
mov    0x1c(%edi),%eax
jmp    80776f3 <argp_failure+0x1403>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8077752 <argp_failure+0x1462>
mov    0x1c(%edi),%eax
jmp    8077749 <argp_failure+0x1459>
mov    %ecx,%edx
xchg   %ax,%ax
jmp    80771a3 <argp_failure+0xeb3>
call   804a610 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %edi
xor    %eax,%eax
push   %ebx
mov    $0xe,%ecx
sub    $0x54,%esp
lea    0x18(%esp),%edx
mov    0x60(%esp),%ebx
mov    %edx,%edi
rep stos %eax,%es:(%edi)
mov    0x6c(%esp),%eax
mov    0x64(%esp),%ecx
mov    %ebx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8076530 <argp_failure+0x240>
add    $0x54,%esp
pop    %ebx
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x28(%esp),%esi
test   %ebx,%ebx
je     80778d5 <argp_state_help+0x75>
mov    0x10(%ebx),%eax
test   $0x2,%al
jne    80778b6 <argp_state_help+0x56>
cmpl   $0x0,0x24(%esp)
je     80778b6 <argp_state_help+0x56>
mov    %esi,%edx
mov    0x24(%esp),%ecx
or     $0x80,%dl
test   $0x40,%al
mov    0x28(%ebx),%eax
cmovne %edx,%esi
mov    %ebx,%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
call   8076530 <argp_failure+0x240>
testb  $0x20,0x10(%ebx)
jne    80778b6 <argp_state_help+0x56>
test   $0x100,%esi
jne    80778c8 <argp_state_help+0x68>
and    $0x200,%esi
jne    80778bc <argp_state_help+0x5c>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x0,(%esp)
call   804a8a0 <exit@plt>
mov    0x809d820,%eax
mov    %eax,(%esp)
call   804a8a0 <exit@plt>
cmpl   $0x0,0x24(%esp)
je     80778b6 <argp_state_help+0x56>
mov    0x809d840,%eax
xor    %edx,%edx
mov    0x24(%esp),%ecx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8076530 <argp_failure+0x240>
jmp    80778a6 <argp_state_help+0x46>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
test   %esi,%esi
je     80779d8 <argp_error+0xd8>
testb  $0x2,0x10(%esi)
jne    80779bd <argp_error+0xbd>
mov    0x2c(%esi),%ebx
test   %ebx,%ebx
je     80779bd <argp_error+0xbd>
mov    %ebx,(%esp)
lea    0x28(%esp),%edi
call   804ad40 <flockfile@plt>
test   %esi,%esi
je     80779c8 <argp_error+0xc8>
mov    0x28(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <fputs_unlocked@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80779e3 <argp_error+0xe3>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x3a,(%eax)
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    80779f8 <argp_error+0xf8>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0x20,(%eax)
mov    0x24(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a400 <__vfprintf_chk@plt>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    8077a0d <argp_error+0x10d>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
movl   $0x104,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8077860 <argp_state_help>
mov    %ebx,(%esp)
call   804aa90 <funlockfile@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809d840,%eax
jmp    807793e <argp_error+0x3e>
lea    0x0(%esi),%esi
mov    0x809d864,%ebx
jmp    807791f <argp_error+0x1f>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    807795f <argp_error+0x5f>
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    8077974 <argp_error+0x74>
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   804acc0 <__overflow@plt>
jmp    80779a1 <argp_error+0xa1>
nop
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x4,%esp
mov    (%eax),%ecx
mov    0x10(%eax),%esi
test   %ecx,%ecx
je     8077a68 <argp_error+0x168>
addl   $0x1,0x8(%edx)
xor    %eax,%eax
jmp    8077a3b <argp_error+0x13b>
add    $0x1,%eax
add    $0x18,%ecx
mov    -0x14(%ecx),%edx
test   %edx,%edx
jne    8077a38 <argp_error+0x138>
mov    -0x18(%ecx),%edx
test   %edx,%edx
jne    8077a38 <argp_error+0x138>
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    8077a38 <argp_error+0x138>
mov    -0x4(%ecx),%edx
test   %edx,%edx
jne    8077a38 <argp_error+0x138>
lea    (%eax,%eax,2),%edx
add    %eax,0x4(%ebx)
add    %edx,(%ebx)
jmp    8077a73 <argp_error+0x173>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8077a73 <argp_error+0x173>
addl   $0x1,0x8(%edx)
test   %esi,%esi
je     8077a94 <argp_error+0x194>
mov    (%esi),%eax
test   %eax,%eax
je     8077a94 <argp_error+0x194>
lea    0x0(%esi),%esi
mov    %ebx,%edx
add    $0x10,%esi
call   8077a20 <argp_error+0x120>
addl   $0x1,0xc(%ebx)
mov    (%esi),%eax
test   %eax,%eax
jne    8077a80 <argp_error+0x180>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    (%eax),%edi
mov    %eax,0x20(%esp)
mov    0x10(%eax),%ebp
mov    %edx,0x24(%esp)
mov    %ecx,0x28(%esp)
test   %edi,%edi
mov    %edi,0x14(%esp)
je     8077c74 <argp_error+0x374>
mov    %edi,%ebx
mov    0x54(%esp),%edi
mov    %ebp,0x2c(%esp)
xchg   %ax,%ax
mov    0x4(%ebx),%esi
test   %esi,%esi
jne    8077ae1 <argp_error+0x1e1>
mov    (%ebx),%eax
test   %eax,%eax
je     8077c40 <argp_error+0x340>
mov    0xc(%ebx),%eax
test   $0x4,%al
jne    8077c08 <argp_error+0x308>
mov    %eax,%edx
mov    %ebx,0x14(%esp)
and    $0x8,%edx
jne    8077c00 <argp_error+0x300>
test   $0x8,%al
jne    8077b57 <argp_error+0x257>
lea    -0x1(%esi),%eax
cmp    $0xfe,%eax
ja     8077b57 <argp_error+0x257>
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%esi,2)
je     8077b57 <argp_error+0x257>
mov    0x4(%edi),%eax
mov    %esi,%ecx
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
mov    %cl,(%eax)
mov    0x14(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     8077b51 <argp_error+0x251>
mov    0x4(%edi),%eax
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
movb   $0x3a,(%eax)
mov    0x14(%esp),%eax
testb  $0x1,0xc(%eax)
je     8077b51 <argp_error+0x251>
mov    0x4(%edi),%eax
lea    0x1(%eax),%edx
mov    %edx,0x4(%edi)
movb   $0x3a,(%eax)
mov    0x4(%edi),%eax
movb   $0x0,(%eax)
mov    (%ebx),%esi
test   %esi,%esi
je     8077c00 <argp_error+0x300>
mov    (%edi),%eax
mov    %eax,0x1c(%esp)
mov    0x8(%eax),%eax
mov    %eax,%ebp
mov    %eax,0x18(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     8077b96 <argp_error+0x296>
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     8077c18 <argp_error+0x318>
add    $0x10,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    8077b78 <argp_error+0x278>
mov    0x14(%esp),%ecx
mov    0x8(%edi),%eax
mov    0x8(%ecx),%edx
mov    %esi,(%eax)
test   %edx,%edx
je     8077c37 <argp_error+0x337>
mov    0xc(%ecx),%edx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
add    $0x2,%edx
mov    0x4(%ebx),%ecx
mov    %edx,0x4(%eax)
movl   $0x0,0x8(%eax)
test   %ecx,%ecx
je     8077c68 <argp_error+0x368>
mov    0x1c(%esp),%esi
and    $0xffffff,%ecx
mov    0x50(%esp),%edx
sub    0x34(%esi),%edx
sar    $0x2,%edx
imul   $0x38e38e39,%edx,%edx
add    $0x1,%edx
shl    $0x18,%edx
add    %ecx,%edx
mov    %edx,0xc(%eax)
lea    0x10(%eax),%edx
mov    %edx,0x8(%edi)
movl   $0x0,0x10(%eax)
nop
add    $0x18,%ebx
jmp    8077ad0 <argp_error+0x1d0>
mov    0x14(%esp),%ecx
mov    0xc(%ecx),%edx
jmp    8077af2 <argp_error+0x1f2>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
sub    0x18(%esp),%edx
cmp    $0xfffffff1,%edx
jge    8077c00 <argp_error+0x300>
mov    0x14(%esp),%ecx
mov    0x8(%edi),%eax
mov    0x8(%ecx),%edx
mov    %esi,(%eax)
test   %edx,%edx
jne    8077baa <argp_error+0x2aa>
xor    %edx,%edx
jmp    8077bb8 <argp_error+0x2b8>
xchg   %ax,%ax
mov    0x10(%ebx),%eax
test   %eax,%eax
jne    8077ae1 <argp_error+0x1e1>
mov    0x14(%ebx),%ebp
test   %ebp,%ebp
jne    8077ae1 <argp_error+0x1e1>
mov    0x20(%esp),%eax
mov    0x2c(%esp),%ebp
mov    0x4(%eax),%eax
jmp    8077c87 <argp_error+0x387>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%ecx
mov    0x4(%ecx),%ecx
jmp    8077bcd <argp_error+0x2cd>
mov    0x20(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8077d59 <argp_error+0x459>
mov    0x50(%esp),%edi
test   %ebp,%ebp
mov    %eax,(%edi)
mov    %edi,%eax
mov    0x20(%esp),%edi
mov    %edi,0x4(%eax)
mov    0x54(%esp),%eax
mov    0x50(%esp),%edi
mov    0x4(%eax),%eax
movl   $0x0,0xc(%edi)
mov    %eax,0x8(%edi)
mov    %edi,%eax
mov    0x24(%esp),%edi
movl   $0x0,0x18(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0x1c(%eax)
mov    %edi,0x10(%eax)
mov    0x28(%esp),%edi
mov    %edi,0x14(%eax)
je     8077d0a <argp_error+0x40a>
mov    0x0(%ebp),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     8077cf3 <argp_error+0x3f3>
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %eax,%edx
shl    $0x4,%edx
mov    0x0(%ebp,%edx,1),%edx
test   %edx,%edx
jne    8077ce0 <argp_error+0x3e0>
shl    $0x2,%eax
mov    0x54(%esp),%edi
mov    0xc(%edi),%edx
mov    0x50(%esp),%edi
mov    %edx,0x1c(%edi)
add    %eax,%edx
mov    0x54(%esp),%eax
mov    %edx,0xc(%eax)
mov    0x50(%esp),%eax
mov    0x50(%esp),%esi
add    $0x24,%eax
test   %ebp,%ebp
je     8077d51 <argp_error+0x451>
mov    0x0(%ebp),%edi
test   %edi,%edi
je     8077d51 <argp_error+0x451>
mov    %eax,%edx
xor    %ecx,%ecx
mov    %edi,%eax
mov    0x54(%esp),%edi
jmp    8077d32 <argp_error+0x432>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%ecx
mov    %edx,(%esp)
mov    %esi,%edx
add    $0x10,%ebp
mov    %edi,0x4(%esp)
lea    0x1(%ecx),%ebx
call   8077aa0 <argp_error+0x1a0>
mov    %eax,%edx
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    8077d30 <argp_error+0x430>
mov    %edx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x50(%esp),%eax
xor    %esi,%esi
jmp    8077d15 <argp_error+0x415>
jmp    8077d70 <argp_error+0x470>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    $0x7,%eax
sub    $0x18,%esp
cmpl   $0x56,0x20(%esp)
mov    0x28(%esp),%ebx
je     8077d90 <argp_error+0x490>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e09c,%eax
test   %eax,%eax
je     8077db8 <argp_error+0x4b8>
mov    %ebx,0x4(%esp)
mov    0x30(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
testb  $0x20,0x10(%ebx)
je     8077e1b <argp_error+0x51b>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x809d62c,%eax
test   %eax,%eax
je     8077de8 <argp_error+0x4e8>
mov    %eax,0xc(%esp)
movl   $0x808d2bf,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x30(%ebx),%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8077da5 <argp_error+0x4a5>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x808da40,0x4(%esp)
mov    (%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808d587,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8077900 <argp_error>
jmp    8077da5 <argp_error+0x4a5>
movl   $0x0,(%esp)
call   804a8a0 <exit@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%ebx
cmp    $0xfffffffd,%eax
je     8077f18 <argp_error+0x618>
jle    8077ea8 <argp_error+0x5a8>
cmp    $0xfffffffe,%eax
je     8077e78 <argp_error+0x578>
cmp    $0x3f,%eax
nop
jne    8077f08 <argp_error+0x608>
movl   $0x27a,0x8(%esp)
mov    0x30(%ebx),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8077860 <argp_state_help>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x809d880
call   8079350 <argp_parse+0x1410>
mov    %eax,0x28(%ebx)
mov    %eax,0x809d840
mov    0x10(%ebx),%eax
and    $0x3,%eax
cmp    $0x1,%eax
je     8077f28 <argp_error+0x628>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
cmp    $0xfffffffc,%eax
jne    8077f08 <argp_error+0x608>
mov    0x24(%esp),%edx
mov    $0x808d998,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
test   %edx,%edx
cmovne 0x24(%esp),%eax
mov    %eax,(%esp)
call   804aea0 <strtol@plt>
mov    %eax,0x809e098
jmp    8077eec <argp_error+0x5ec>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   804a5a0 <sleep@plt>
mov    0x809e098,%eax
lea    -0x1(%eax),%edx
test   %eax,%eax
mov    %edx,0x809e098
jg     8077ee0 <argp_error+0x5e0>
xor    %eax,%eax
jmp    8077ea2 <argp_error+0x5a2>
lea    0x0(%esi),%esi
add    $0x18,%esp
mov    $0x7,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x201,0x8(%esp)
jmp    8077e5e <argp_error+0x55e>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
mov    0x24(%esp),%ecx
mov    %ecx,(%eax)
xor    %eax,%eax
jmp    8077ea2 <argp_error+0x5a2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x8(%ebp),%eax
mov    %eax,-0xcc(%ebp)
mov    0x10(%ebp),%eax
mov    %eax,-0xd0(%ebp)
mov    0x18(%ebp),%eax
mov    %eax,-0xd8(%ebp)
mov    0x1c(%ebp),%eax
mov    %eax,-0xe0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
testb  $0x1,0x14(%ebp)
jne    8077f9c <argp_parse+0x5c>
mov    0x809d880,%eax
test   %eax,%eax
je     8078533 <argp_parse+0x5f3>
mov    0x809d840,%edi
test   %edi,%edi
je     8078545 <argp_parse+0x605>
testb  $0x10,0x14(%ebp)
je     80783a8 <argp_parse+0x468>
mov    0x14(%ebp),%eax
mov    -0xcc(%ebp),%edx
movl   $0x0,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
and    $0x4,%eax
mov    %eax,-0xdc(%ebp)
sete   %al
test   %edx,%edx
movzbl %al,%eax
mov    %eax,-0xbc(%ebp)
movl   $0x0,-0xb0(%ebp)
00
je     8078368 <argp_parse+0x428>
mov    -0xcc(%ebp),%eax
lea    -0xbc(%ebp),%edx
call   8077a20 <argp_error+0x120>
mov    -0xb4(%ebp),%eax
mov    -0xb8(%ebp),%edi
lea    0x9(%eax,%eax,8),%esi
mov    -0xb0(%ebp),%eax
shl    $0x2,%esi
add    $0x1,%edi
shl    $0x4,%edi
lea    0x0(,%eax,4),%ecx
mov    -0xbc(%ebp),%eax
lea    (%ecx,%esi,1),%ebx
add    %ebx,%edi
lea    0x1(%eax,%edi,1),%eax
mov    %eax,(%esp)
mov    %ecx,-0xd4(%ebp)
call   804a800 <malloc@plt>
mov    $0xc,%edx
test   %eax,%eax
mov    %eax,-0x20(%ebp)
je     8078348 <argp_parse+0x408>
mov    -0xd4(%ebp),%ecx
add    %eax,%esi
add    %eax,%ebx
add    %eax,%edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,-0x68(%ebp)
mov    %esi,-0x60(%ebp)
mov    %ebx,-0x94(%ebp)
mov    %edi,-0x98(%ebp)
movl   $0x1,-0x90(%ebp)
00
movl   $0x1,-0x8c(%ebp)
00
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,-0x80(%ebp)
movl   $0x0,-0x7c(%ebp)
movl   $0x0,-0x78(%ebp)
movl   $0x0,-0x74(%ebp)
movl   $0x0,-0x70(%ebp)
movl   $0x0,-0x6c(%ebp)
call   804aa80 <memset@plt>
lea    -0x9c(%ebp),%eax
testb  $0x8,0x14(%ebp)
mov    %eax,-0xac(%ebp)
mov    %edi,-0xa8(%ebp)
mov    %ebx,-0xa4(%ebp)
mov    %esi,-0xa0(%ebp)
je     8078380 <argp_parse+0x440>
lea    0x1(%edi),%eax
movb   $0x2d,(%edi)
mov    %eax,%edi
mov    %eax,-0xa8(%ebp)
mov    -0xcc(%ebp),%esi
movb   $0x0,(%edi)
mov    -0xa4(%ebp),%eax
test   %esi,%esi
movl   $0x0,(%eax)
mov    %esi,-0x9c(%ebp)
je     8078500 <argp_parse+0x5c0>
lea    -0xac(%ebp),%eax
xor    %edx,%edx
mov    %eax,0x4(%esp)
mov    -0x68(%ebp),%eax
xor    %ecx,%ecx
mov    %eax,(%esp)
mov    %esi,%eax
call   8077aa0 <argp_error+0x1a0>
mov    -0x9c(%ebp),%esi
mov    -0x68(%ebp),%ebx
mov    %eax,%edx
mov    %eax,-0x64(%ebp)
xor    %eax,%eax
mov    $0xe,%ecx
lea    -0x58(%ebp),%edi
cmp    %edx,%ebx
rep stos %eax,%es:(%edi)
mov    0xc(%ebp),%eax
mov    %esi,-0x58(%ebp)
movl   $0x1,-0x5c(%ebp)
mov    %eax,-0x54(%ebp)
mov    -0xd0(%ebp),%eax
mov    %eax,-0x50(%ebp)
mov    0x14(%ebp),%eax
mov    %eax,-0x48(%ebp)
mov    0x809d864,%eax
mov    %eax,-0x2c(%ebp)
mov    0x809d8a0,%eax
mov    %eax,-0x28(%ebp)
lea    -0x9c(%ebp),%eax
mov    %eax,-0x24(%ebp)
jb     8078458 <argp_parse+0x518>
mov    -0x48(%ebp),%eax
test   $0x2,%al
jne    807850f <argp_parse+0x5cf>
mov    -0x50(%ebp),%eax
movl   $0x1,-0x8c(%ebp)
00
cmp    %eax,-0xd0(%ebp)
je     8078a9e <argp_parse+0xb5e>
mov    0x809d840,%eax
mov    %eax,-0x30(%ebp)
mov    -0x40(%ebp),%eax
mov    -0x4c(%ebp),%edi
test   %eax,%eax
je     80781e1 <argp_parse+0x2a1>
cmp    %edi,%eax
jle    80781e1 <argp_parse+0x2a1>
movl   $0x0,-0x40(%ebp)
mov    -0x5c(%ebp),%eax
test   %eax,%eax
je     8078588 <argp_parse+0x648>
mov    -0x40(%ebp),%esi
test   %esi,%esi
jne    8078588 <argp_parse+0x648>
lea    -0x90(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x94(%ebp),%eax
testb  $0x40,-0x48(%ebp)
mov    %edi,-0x90(%ebp)
movl   $0xffffffff,-0x88(%ebp)
ff
mov    %eax,0xc(%esp)
mov    -0x98(%ebp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x54(%ebp),%eax
mov    %eax,(%esp)
je     80787f0 <argp_parse+0x8b0>
call   80827a0 <argp_parse+0xa860>
mov    %eax,%edx
mov    -0x90(%ebp),%edi
cmp    $0xffffffff,%edx
mov    %edi,-0x4c(%ebp)
je     8078560 <argp_parse+0x620>
cmp    $0x3f,%edx
je     8078930 <argp_parse+0x9f0>
cmp    $0x1,%edx
je     8078958 <argp_parse+0xa18>
mov    %edx,%esi
sar    $0x18,%esi
test   %esi,%esi
jne    80786a8 <argp_parse+0x768>
mov    -0x98(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    -0xcc(%ebp),%edx
test   %eax,%eax
je     8078710 <argp_parse+0x7d0>
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%ecx
cmp    %ecx,%ebx
jb     80782c3 <argp_parse+0x383>
jmp    8078710 <argp_parse+0x7d0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x24,%ebx
cmp    %ecx,%ebx
jae    8078710 <argp_parse+0x7d0>
cmp    0x8(%ebx),%eax
jae    80782b8 <argp_parse+0x378>
mov    (%ebx),%eax
mov    -0x84(%ebp),%ecx
test   %eax,%eax
je     8078710 <argp_parse+0x7d0>
mov    0x20(%ebx),%edi
mov    %edx,-0xcc(%ebp)
mov    %edi,-0x34(%ebp)
mov    0x18(%ebx),%edi
mov    %edi,-0x3c(%ebp)
mov    0x1c(%ebx),%edi
mov    %edi,-0x38(%ebp)
mov    0xc(%ebx),%edi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %edi,-0x44(%ebp)
lea    -0x58(%ebp),%edi
mov    %edi,0x8(%esp)
call   *%eax
mov    -0x34(%ebp),%ecx
mov    -0xcc(%ebp),%edx
mov    %ecx,0x20(%ebx)
cmp    $0x7,%eax
je     8078bfe <argp_parse+0xcbe>
test   %eax,%eax
je     80781cc <argp_parse+0x28c>
mov    %eax,%edx
jmp    8078a86 <argp_parse+0xb46>
lea    0x0(%esi),%esi
cmp    $0x7,%eax
mov    %eax,%edx
je     80781a0 <argp_parse+0x260>
test   %eax,%eax
je     80781a0 <argp_parse+0x260>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1c(%ebp),%esi
xor    %gs:0x14,%esi
mov    %edx,%eax
jne    8078ba0 <argp_parse+0xc60>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x34,%edi
mov    $0x24,%ebx
xor    %ecx,%ecx
mov    $0x24,%esi
jmp    807802c <argp_parse+0xec>
xchg   %ax,%ax
mov    -0xdc(%ebp),%eax
test   %eax,%eax
je     8078108 <argp_parse+0x1c8>
lea    0x1(%edi),%eax
movb   $0x2b,(%edi)
mov    %eax,%edi
mov    %eax,-0xa8(%ebp)
jmp    8078108 <argp_parse+0x1c8>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x50,%esp
xor    %eax,%eax
lea    0x27(%esp),%edx
sub    $0x30,%esp
lea    0x27(%esp),%ebx
and    $0xfffffff0,%edx
and    $0xfffffff0,%ebx
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     80783be <argp_parse+0x47e>
mov    -0xcc(%ebp),%esi
xor    %eax,%eax
mov    $0x10,%ecx
mov    %edx,%edi
mov    %edx,0x10(%ebx)
rep stos %eax,%es:(%edi)
test   %esi,%esi
je     8078ad4 <argp_parse+0xb94>
lea    0x10(%edx),%eax
mov    %esi,(%edx)
mov    0x809d62c,%esi
movl   $0x808db30,(%eax)
test   %esi,%esi
je     8078abe <argp_parse+0xb7e>
lea    0x20(%eax),%edx
movl   $0x808dad8,0x10(%eax)
mov    0x14(%ebp),%eax
movl   $0x0,(%edx)
movl   $0x0,-0xb8(%ebp)
00
movl   $0x0,-0xb4(%ebp)
00
and    $0x4,%eax
mov    %eax,-0xdc(%ebp)
sete   %al
movzbl %al,%eax
mov    %eax,-0xbc(%ebp)
movl   $0x0,-0xb0(%ebp)
00
mov    %ebx,-0xcc(%ebp)
jmp    8077fea <argp_parse+0xaa>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0xe0(%ebp),%eax
mov    %eax,0x18(%ebx)
jmp    80784af <argp_parse+0x56f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebx),%edx
lea    -0x58(%ebp),%edi
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000003,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%edx
mov    %edx,0x20(%ebx)
add    $0x24,%ebx
cmp    -0x64(%ebp),%ebx
jae    8078330 <argp_parse+0x3f0>
cmp    $0x7,%eax
jne    80784f0 <argp_parse+0x5b0>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     80784c2 <argp_parse+0x582>
mov    0x1c(%eax),%eax
mov    0x14(%ebx),%edx
mov    (%eax,%edx,4),%eax
mov    %eax,0x18(%ebx)
mov    (%ebx),%eax
test   %eax,%eax
jne    8078468 <argp_parse+0x528>
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     80784e6 <argp_parse+0x5a6>
mov    (%eax),%eax
test   %eax,%eax
je     80784e6 <argp_parse+0x5a6>
mov    0x1c(%ebx),%eax
mov    0x18(%ebx),%edx
mov    %edx,(%eax)
mov    (%ebx),%eax
test   %eax,%eax
jne    8078468 <argp_parse+0x528>
mov    $0x7,%eax
jmp    807849e <argp_parse+0x55e>
lea    0x0(%esi),%esi
test   %eax,%eax
je     80784af <argp_parse+0x56f>
mov    %eax,%edx
jmp    8078348 <argp_parse+0x408>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x68(%ebp),%edx
xor    %esi,%esi
mov    %edx,-0x64(%ebp)
mov    %edx,%ebx
jmp    8078154 <argp_parse+0x214>
test   $0x1,%al
mov    -0x50(%ebp),%eax
movl   $0x0,-0x8c(%ebp)
00
je     80781b8 <argp_parse+0x278>
sub    $0x4,%eax
mov    %eax,-0x50(%ebp)
addl   $0x1,-0x54(%ebp)
jmp    80781b8 <argp_parse+0x278>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,0x809d880
jmp    8077f8e <argp_parse+0x4e>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,0x809d840
jmp    8077f9c <argp_parse+0x5c>
nop
cmp    $0x1,%edi
movl   $0x0,-0x5c(%ebp)
jle    8078588 <argp_parse+0x648>
mov    -0x50(%ebp),%eax
mov    -0x4(%eax,%edi,4),%eax
cmpb   $0x2d,(%eax)
jne    8078588 <argp_parse+0x648>
cmpb   $0x2d,0x1(%eax)
jne    8078588 <argp_parse+0x648>
cmpb   $0x0,0x2(%eax)
jne    8078588 <argp_parse+0x648>
mov    %edi,-0x40(%ebp)
nop
cmp    %edi,-0x54(%ebp)
jg     8078800 <argp_parse+0x8c0>
mov    -0x4c(%ebp),%eax
cmp    -0x54(%ebp),%eax
je     807897f <argp_parse+0xa3f>
mov    -0xd8(%ebp),%esi
test   %esi,%esi
je     8078b08 <argp_parse+0xbc8>
mov    %eax,(%esi)
mov    -0x64(%ebp),%eax
lea    -0x24(%eax),%ebx
mov    -0x68(%ebp),%eax
cmp    %eax,%ebx
mov    %eax,%ecx
jae    80785d1 <argp_parse+0x691>
jmp    8078b7c <argp_parse+0xc3c>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7,%eax
jne    8078968 <argp_parse+0xa28>
mov    (%ebx),%esi
mov    $0x7,%eax
test   %esi,%esi
je     8078615 <argp_parse+0x6d5>
mov    0x20(%ebx),%eax
mov    %eax,-0x34(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x3c(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x38(%ebp)
mov    0xc(%ebx),%eax
movl   $0x0,0x4(%esp)
movl   $0x1000004,(%esp)
mov    %eax,-0x44(%ebp)
lea    -0x58(%ebp),%eax
mov    %eax,0x8(%esp)
call   *%esi
mov    -0x34(%ebp),%edx
mov    -0x68(%ebp),%ecx
mov    %edx,0x20(%ebx)
sub    $0x24,%ebx
cmp    %ecx,%ebx
jae    80785c8 <argp_parse+0x688>
mov    -0x64(%ebp),%edi
mov    %eax,%edx
mov    %ecx,%eax
cmp    $0x7,%edx
lea    -0x24(%edi),%ebx
jne    8078630 <argp_parse+0x6f0>
xor    %dl,%dl
lea    0x0(%esi),%esi
cmp    %ebx,%eax
mov    %edx,%esi
ja     807867e <argp_parse+0x73e>
xchg   %ax,%ax
mov    (%ebx),%eax
test   %eax,%eax
je     8078674 <argp_parse+0x734>
mov    0x20(%ebx),%edx
lea    -0x58(%ebp),%edi
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000007,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%eax
mov    %eax,0x20(%ebx)
sub    $0x24,%ebx
cmp    -0x68(%ebp),%ebx
jae    8078638 <argp_parse+0x6f8>
mov    %esi,%edx
cmp    $0x7,%edx
mov    $0x16,%eax
cmove  %eax,%edx
mov    -0x20(%ebp),%eax
mov    %edx,-0xcc(%ebp)
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    -0xcc(%ebp),%edx
jmp    8078348 <argp_parse+0x408>
lea    0x0(%esi),%esi
mov    -0x68(%ebp),%eax
lea    (%esi,%esi,8),%ecx
mov    -0x84(%ebp),%edi
lea    -0x24(%eax,%ecx,4),%ebx
mov    (%ebx),%ecx
test   %ecx,%ecx
je     80788c0 <argp_parse+0x980>
mov    0x20(%ebx),%eax
mov    %edx,-0xcc(%ebp)
mov    %eax,-0x34(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x3c(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x38(%ebp)
mov    0xc(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,-0x44(%ebp)
lea    -0x58(%ebp),%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
shl    $0x8,%eax
sar    $0x8,%eax
mov    %eax,(%esp)
call   *%ecx
mov    -0x34(%ebp),%ecx
mov    -0xcc(%ebp),%edx
mov    %ecx,0x20(%ebx)
jmp    8078312 <argp_parse+0x3d2>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%esi
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x808daa0,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x808d9a1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x58(%ebp),%eax
mov    %eax,(%esp)
call   8077900 <argp_error>
xchg   %ax,%ax
cmp    $0x1,%esi
je     8078591 <argp_parse+0x651>
mov    $0x7,%edx
mov    -0x2c(%ebp),%eax
movl   $0x104,0x8(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
lea    -0x58(%ebp),%eax
mov    %eax,(%esp)
call   8077860 <argp_state_help>
mov    -0xcc(%ebp),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    -0x68(%ebp),%ebx
mov    %edx,%esi
mov    -0x64(%ebp),%ecx
cmp    %ecx,%ebx
jae    8078b72 <argp_parse+0xc32>
mov    (%ebx),%eax
test   %eax,%eax
je     80787d7 <argp_parse+0x897>
mov    0x20(%ebx),%edx
lea    -0x58(%ebp),%edi
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    0xc(%ebx),%edx
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000005,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%eax
mov    -0x64(%ebp),%ecx
mov    %eax,0x20(%ebx)
add    $0x24,%ebx
cmp    %ecx,%ebx
jb     8078798 <argp_parse+0x858>
mov    %esi,%edx
mov    -0x68(%ebp),%eax
lea    -0x24(%ecx),%ebx
jmp    8078630 <argp_parse+0x6f0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8082700 <argp_parse+0xa7c0>
mov    %eax,%edx
jmp    807824b <argp_parse+0x30b>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x4,-0x48(%ebp)
jne    8078591 <argp_parse+0x651>
mov    -0x50(%ebp),%eax
mov    (%eax,%edi,4),%esi
add    $0x1,%edi
mov    %esi,-0x84(%ebp)
mov    -0x68(%ebp),%ebx
sub    $0x1,%edi
cmp    -0x64(%ebp),%ebx
mov    %edi,-0x4c(%ebp)
jae    8078a94 <argp_parse+0xb54>
add    $0x24,%ebx
mov    %edi,%edx
lea    0x1(%edx),%eax
mov    %eax,-0x4c(%ebp)
mov    -0x24(%ebx),%eax
test   %eax,%eax
je     80788a8 <argp_parse+0x968>
mov    -0x4(%ebx),%edx
lea    -0x58(%ebp),%ecx
mov    %edx,-0x34(%ebp)
mov    -0xc(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    -0x8(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    -0x18(%ebx),%edx
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%ecx
mov    %ecx,-0x4(%ebx)
cmp    $0x7,%eax
je     8078ba5 <argp_parse+0xc65>
test   %eax,%eax
mov    -0x4c(%ebp),%edx
jne    8078891 <argp_parse+0x951>
nop
cmp    %edi,%edx
jg     8078948 <argp_parse+0xa08>
movl   $0x1,-0x5c(%ebp)
xor    %eax,%eax
cmp    $0x7,%eax
mov    $0x1,%edx
jne    807831b <argp_parse+0x3db>
mov    %edx,%esi
jmp    8078750 <argp_parse+0x810>
xchg   %ax,%ax
mov    %edx,-0x4c(%ebp)
cmp    %ebx,-0x64(%ebp)
jbe    8078a94 <argp_parse+0xb54>
add    $0x24,%ebx
jmp    8078830 <argp_parse+0x8f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%esi
mov    -0x94(%ebp),%ebx
cmp    %esi,0xc(%ebx)
jne    80788d8 <argp_parse+0x998>
jmp    80788de <argp_parse+0x99e>
nop
add    $0x10,%ebx
cmp    %esi,0xc(%ebx)
je     80788de <argp_parse+0x99e>
mov    (%ebx),%edi
test   %edi,%edi
jne    80788d0 <argp_parse+0x990>
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
movl   $0x808daa0,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    (%ebx),%ecx
mov    $0x808d99d,%edx
movl   $0x808d9a9,0x4(%esp)
test   %ecx,%ecx
cmovne %ecx,%edx
mov    %eax,0xc(%esp)
lea    -0x58(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8077900 <argp_error>
jmp    8078750 <argp_parse+0x810>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,-0x88(%ebp)
jne    8078759 <argp_parse+0x819>
lea    0x0(%esi),%esi
jmp    807827c <argp_parse+0x33c>
lea    0x0(%esi),%esi
sub    %edi,%edx
xor    %eax,%eax
add    %edx,-0x18(%ebx)
jmp    8078891 <argp_parse+0x951>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x84(%ebp),%esi
jmp    8078819 <argp_parse+0x8d9>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     80785d1 <argp_parse+0x691>
mov    -0x64(%ebp),%esi
mov    %eax,%edx
mov    %ecx,%eax
lea    -0x24(%esi),%ebx
jmp    8078630 <argp_parse+0x6f0>
mov    -0x68(%ebp),%ebx
mov    -0x64(%ebp),%ecx
cmp    %ebx,%ecx
jbe    8078b83 <argp_parse+0xc43>
xor    %edx,%edx
jmp    80789a1 <argp_parse+0xa61>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7,%edx
jne    8078adb <argp_parse+0xb9b>
mov    0xc(%ebx),%esi
test   %esi,%esi
jne    80789ef <argp_parse+0xaaf>
mov    (%ebx),%eax
mov    $0x7,%edx
test   %eax,%eax
je     80789ef <argp_parse+0xaaf>
mov    0x20(%ebx),%edx
lea    -0x58(%ebp),%esi
mov    %edx,-0x34(%ebp)
mov    0x18(%ebx),%edx
mov    %edx,-0x3c(%ebp)
mov    0x1c(%ebx),%edx
movl   $0x0,-0x44(%ebp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,-0x38(%ebp)
movl   $0x1000002,(%esp)
call   *%eax
mov    -0x64(%ebp),%ecx
mov    %eax,%edx
mov    -0x34(%ebp),%eax
mov    %eax,0x20(%ebx)
add    $0x24,%ebx
cmp    %ecx,%ebx
jb     8078998 <argp_parse+0xa58>
mov    -0x68(%ebp),%eax
lea    -0x24(%ecx),%ebx
cmp    %eax,%ebx
jb     8078a64 <argp_parse+0xb24>
cmp    $0x7,%edx
je     8078a19 <argp_parse+0xad9>
jmp    8078b8c <argp_parse+0xc4c>
lea    0x0(%esi),%esi
cmp    $0x7,%eax
jne    8078af0 <argp_parse+0xbb0>
mov    (%ebx),%ecx
mov    $0x7,%eax
test   %ecx,%ecx
je     8078a5a <argp_parse+0xb1a>
mov    0x20(%ebx),%eax
mov    %eax,-0x34(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x3c(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x38(%ebp)
mov    0xc(%ebx),%eax
movl   $0x0,0x4(%esp)
movl   $0x1000001,(%esp)
mov    %eax,-0x44(%ebp)
lea    -0x58(%ebp),%eax
mov    %eax,0x8(%esp)
call   *%ecx
mov    -0x34(%ebp),%edx
mov    %edx,0x20(%ebx)
sub    $0x24,%ebx
cmp    -0x68(%ebp),%ebx
jae    8078a10 <argp_parse+0xad0>
mov    %eax,%edx
cmp    $0x7,%edx
mov    $0x0,%eax
cmove  %eax,%edx
mov    -0xd8(%ebp),%esi
test   %esi,%esi
je     8078a7e <argp_parse+0xb3e>
mov    -0x4c(%ebp),%eax
mov    %eax,(%esi)
test   %edx,%edx
je     80785ad <argp_parse+0x66d>
cmp    $0x7,%edx
jne    8078788 <argp_parse+0x848>
jmp    807875e <argp_parse+0x81e>
mov    $0x7,%eax
jmp    8078891 <argp_parse+0x951>
mov    -0xd0(%ebp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     80781c4 <argp_parse+0x284>
mov    %eax,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,-0x30(%ebp)
jmp    80781cc <argp_parse+0x28c>
mov    0x809e09c,%ecx
lea    0x10(%eax),%edx
test   %ecx,%ecx
jne    8078402 <argp_parse+0x4c2>
jmp    807840c <argp_parse+0x4cc>
mov    %edx,%eax
jmp    80783ee <argp_parse+0x4ae>
test   %edx,%edx
lea    0x0(%esi),%esi
je     80789a1 <argp_parse+0xa61>
jmp    80789f6 <argp_parse+0xab6>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8078a19 <argp_parse+0xad9>
mov    %eax,%edx
lea    0x0(%esi),%esi
jmp    8078a6f <argp_parse+0xb2f>
lea    0x0(%esi),%esi
testb  $0x2,-0x48(%ebp)
mov    $0x7,%edx
jne    807875e <argp_parse+0x81e>
mov    -0x2c(%ebp),%eax
test   %eax,%eax
je     807875e <argp_parse+0x81e>
mov    -0x9c(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    -0x30(%ebp),%ebx
movl   $0x808d9b2,0x4(%esp)
mov    %edx,-0xcc(%ebp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x2c(%ebp),%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    -0xcc(%ebp),%edx
jmp    807875e <argp_parse+0x81e>
mov    %ebx,%eax
lea    -0x24(%ecx),%ebx
jmp    8078630 <argp_parse+0x6f0>
xor    %edx,%edx
jmp    8078630 <argp_parse+0x6f0>
mov    %ebx,%eax
xor    %edx,%edx
jmp    80789f9 <argp_parse+0xab9>
test   %edx,%edx
xchg   %ax,%ax
je     8078a19 <argp_parse+0xad9>
jmp    8078a6f <argp_parse+0xb2f>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a610 <__stack_chk_fail@plt>
mov    -0x24(%ebx),%eax
mov    -0x4c(%ebp),%edx
sub    $0x1,%edx
test   %eax,%eax
mov    %edx,-0x4c(%ebp)
je     80788ab <argp_parse+0x96b>
mov    -0xc(%ebx),%edx
lea    -0x58(%ebp),%ecx
mov    %edx,-0x3c(%ebp)
mov    -0x8(%ebx),%edx
mov    %edx,-0x38(%ebp)
mov    -0x18(%ebx),%edx
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1000006,(%esp)
mov    %edx,-0x44(%ebp)
call   *%eax
mov    -0x34(%ebp),%edx
cmp    %ebx,-0x64(%ebp)
mov    %edx,-0x4(%ebx)
jbe    8078c10 <argp_parse+0xcd0>
cmp    $0x7,%eax
jne    8078c10 <argp_parse+0xcd0>
mov    -0x4c(%ebp),%edx
add    $0x24,%ebx
jmp    8078830 <argp_parse+0x8f0>
mov    %esi,%edi
mov    %edx,%esi
test   %edi,%edi
je     8078712 <argp_parse+0x7d2>
jmp    80788c2 <argp_parse+0x982>
nop
test   %eax,%eax
jne    8078891 <argp_parse+0x951>
mov    -0x54(%ebp),%edx
mov    %edx,-0x4c(%ebp)
xchg   %ax,%ax
jmp    8078880 <argp_parse+0x940>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%ecx
test   %eax,%eax
je     8078c60 <argp_parse+0xd20>
mov    0x34(%eax),%edx
mov    0x34(%edx),%eax
mov    0x38(%edx),%edx
cmp    %edx,%eax
jb     8078c57 <argp_parse+0xd17>
jmp    8078c60 <argp_parse+0xd20>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x24,%eax
cmp    %edx,%eax
jae    8078c60 <argp_parse+0xd20>
cmp    %ecx,0x4(%eax)
jne    8078c50 <argp_parse+0xd10>
mov    0x18(%eax),%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x809e0a0,%eax
movl   $0x8089f02,0xc(%esp)
movl   $0x8087ec4,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x809e0a4,%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80814a0 <argp_parse+0x9560>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x8078c70,0x809e09c
08
mov    %eax,0x809e0a4
mov    0x8(%esp),%eax
mov    %eax,0x809e0a0
ret
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x809d794,%ecx
movl   $0x4,0x10(%esp)
movl   $0x808dc20,0xc(%esp)
movl   $0x808dc40,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8074670 <fchmod@plt+0x296d0>
mov    0x808dc20(,%eax,4),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x809d7c8,%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%esi
mov    $0x9,%eax
cmp    $0x9,%esi
cmovae %esi,%eax
mov    %esi,0x2c(%esp)
lea    0x1(%edi),%esi
add    %esi,%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8081640 <argp_parse+0x9700>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a4e0 <memcpy@plt>
cmpl   $0x1,0x64(%esp)
je     8078f90 <argp_parse+0x1050>
mov    %ebp,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x20(%esp)
call   80793b0 <argp_parse+0x1470>
movzwl (%edi),%ebx
mov    %eax,0x28(%esp)
mov    $0x2e,%eax
mov    %ax,(%edi)
mov    %ebp,(%esp)
call   80791d0 <argp_parse+0x1290>
mov    0x28(%esp),%ecx
mov    %edi,%edx
mov    %bx,(%edi)
add    %ecx,%edx
movl   $0x7e317e2e,(%edx)
mov    %eax,%esi
test   %esi,%esi
movb   $0x0,0x4(%edx)
je     8078f88 <argp_parse+0x1048>
mov    %ecx,%eax
lea    0x4(%ecx),%edx
add    $0x2,%eax
mov    %ebp,0x1c(%esp)
movl   $0x1,0x38(%esp)
movl   $0x2,0x34(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
xchg   %ax,%ax
mov    %esi,(%esp)
call   804adc0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8078f48 <argp_parse+0x1008>
mov    0x4(%ebx),%eax
or     (%ebx),%eax
je     8078de8 <argp_parse+0xea8>
lea    0x13(%ebx),%edi
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmp    0x14(%esp),%eax
jb     8078de8 <argp_parse+0xea8>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
sub    %ebp,%eax
add    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
jne    8078de8 <argp_parse+0xea8>
mov    0x18(%esp),%eax
movzbl 0x13(%ebx,%eax,1),%eax
lea    -0x31(%eax),%edx
cmp    $0x8,%dl
ja     8078de8 <argp_parse+0xea8>
mov    0x28(%esp),%edx
cmp    $0x39,%al
lea    0x15(%ebx,%edx,1),%edi
sete   %dl
movzbl 0x1(%edi),%eax
mov    $0x1,%ebx
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
ja     8078e81 <argp_parse+0xf41>
xchg   %ax,%ax
cmp    $0x39,%al
sete   %al
add    $0x1,%ebx
and    %eax,%edx
movzbl (%edi,%ebx,1),%eax
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    8078e68 <argp_parse+0xf28>
cmp    $0x7e,%al
jne    8078de8 <argp_parse+0xea8>
cmpb   $0x0,0x1(%edi,%ebx,1)
jne    8078de8 <argp_parse+0xea8>
cmp    0x38(%esp),%ebx
jbe    8079029 <argp_parse+0x10e9>
movzbl %dl,%eax
mov    0x24(%esp),%edx
mov    %eax,0x34(%esp)
add    %ebx,%eax
mov    %eax,0x38(%esp)
lea    0x3(%eax,%edx,1),%ecx
cmp    0x30(%esp),%ecx
jb     8078ee6 <argp_parse+0xfa6>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x1,%eax
jbe    8079060 <argp_parse+0x1120>
lea    (%ecx,%ecx,1),%eax
mov    %eax,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edx
add    0x24(%esp),%eax
movb   $0x2e,(%eax)
lea    0x2(%eax,%edx,1),%edx
movb   $0x7e,0x1(%eax)
movb   $0x30,0x2(%eax)
lea    0x2(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x3c(%esp)
call   804a4e0 <memcpy@plt>
mov    0x3c(%esp),%edx
add    %ebx,%edx
lea    -0x1(%edx),%eax
movzbl -0x1(%edx),%edx
cmp    $0x39,%dl
jne    8078f3e <argp_parse+0xffe>
lea    0x0(%esi),%esi
movb   $0x30,(%eax)
sub    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x39,%dl
je     8078f30 <argp_parse+0xff0>
add    $0x1,%edx
mov    %dl,(%eax)
jmp    8078de8 <argp_parse+0xea8>
mov    %esi,(%esp)
call   804af00 <closedir@plt>
mov    0x1c(%esp),%ebp
cmpl   $0x1,0x34(%esp)
jne    8078f7e <argp_parse+0x103e>
mov    %ebp,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80793b0 <argp_parse+0x1470>
cmp    $0xe,%eax
mov    %eax,%esi
ja     8078fb8 <argp_parse+0x1078>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x2,0x34(%esp)
jne    8078f74 <argp_parse+0x1034>
lea    0x0(%esi),%esi
cmpl   $0x2,0x64(%esp)
jne    8078f5b <argp_parse+0x101b>
nop
mov    0x2c(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
mov    0x809d7c8,%edx
add    %ebp,%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804a4e0 <memcpy@plt>
jmp    8078f5b <argp_parse+0x101b>
lea    0x0(%esi),%esi
movzwl (%ebx),%ecx
mov    $0x2e,%eax
mov    %ax,(%ebx)
mov    %ecx,0x14(%esp)
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   804a3d0 <pathconf@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
js     807901c <argp_parse+0x10dc>
mov    %eax,%edx
cmp    %edx,%esi
mov    %cx,(%ebx)
jbe    8078f74 <argp_parse+0x1034>
mov    0x24(%esp),%eax
lea    -0x1(%edx),%ecx
add    %ebp,%eax
sub    %ebx,%eax
cmp    %edx,%eax
cmovae %ecx,%eax
movb   $0x7e,(%ebx,%eax,1)
movb   $0x0,0x1(%ebx,%eax,1)
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%edi
mov    $0xff,%edx
test   %edi,%edi
jne    8078fee <argp_parse+0x10ae>
jmp    8078fec <argp_parse+0x10ac>
jne    8078de8 <argp_parse+0xea8>
mov    %edx,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
lea    0x2(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
jg     8078de8 <argp_parse+0xea8>
jmp    8078e9e <argp_parse+0xf5e>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
test   %edx,%edx
je     8079081 <argp_parse+0x1141>
cmpb   $0x0,(%edx)
jne    8079088 <argp_parse+0x1148>
mov    $0x2,%eax
ret
nop
jmp    8078cd0 <argp_parse+0xd90>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
test   %edx,%edx
je     80790b0 <argp_parse+0x1170>
cmpb   $0x0,(%edx)
je     80790b0 <argp_parse+0x1170>
add    $0x1c,%esp
jmp    8078cd0 <argp_parse+0xd90>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x808dbd9,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     80790c5 <argp_parse+0x1185>
cmpb   $0x0,(%eax)
jne    80790d0 <argp_parse+0x1190>
mov    $0x2,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %eax,%edx
add    $0x1c,%esp
mov    $0x808dbd8,%eax
jmp    8078cd0 <argp_parse+0xd90>
nop
mov    0x4(%esp),%eax
mov    %eax,0x809e0ac
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x809e0a8
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x809d8a0,%eax
mov    %eax,(%esp)
call   8084230 <argp_parse+0xc2f0>
test   %eax,%eax
je     8079129 <argp_parse+0x11e9>
cmpb   $0x0,0x809e0a8
je     8079140 <argp_parse+0x1200>
call   804aaf0 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8079140 <argp_parse+0x1200>
mov    0x809d864,%eax
mov    %eax,(%esp)
call   8084230 <argp_parse+0xc2f0>
test   %eax,%eax
jne    8079198 <argp_parse+0x1258>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x808dc64,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x809e0ac,%eax
test   %eax,%eax
je     80791a5 <argp_parse+0x1265>
mov    %eax,(%esp)
call   80808b0 <argp_parse+0x8970>
mov    %eax,%esi
call   804aaf0 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8087f76,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
mov    0x809d7cc,%eax
mov    %eax,(%esp)
call   804a460 <_exit@plt>
call   804aaf0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x808d587,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
jmp    8079198 <argp_parse+0x1258>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804af20 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80791f6 <argp_parse+0x12b6>
mov    %eax,(%esp)
call   804a490 <dirfd@plt>
cmp    $0x2,%eax
jbe    8079200 <argp_parse+0x12c0>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   8080ec0 <argp_parse+0x8f80>
test   %eax,%eax
js     8079248 <argp_parse+0x1308>
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   804ad00 <fdopendir@plt>
mov    %eax,%edi
call   804aaf0 <__errno_location@plt>
test   %edi,%edi
mov    0xc(%esp),%edx
mov    %eax,%esi
mov    (%eax),%ebp
je     8079258 <argp_parse+0x1318>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804af00 <closedir@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
xor    %edi,%edi
mov    %eax,%esi
mov    (%eax),%ebp
jmp    807922b <argp_parse+0x12eb>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   804aef0 <close@plt>
jmp    807922b <argp_parse+0x12eb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80792e0 <argp_parse+0x13a0>
test   %eax,%eax
je     8079287 <argp_parse+0x1347>
add    $0x1c,%esp
ret
call   8056010 <fchmod@plt+0xb070>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   8079350 <argp_parse+0x1410>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    80792d8 <argp_parse+0x1398>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     80792cc <argp_parse+0x138c>
jmp    80792d8 <argp_parse+0x1398>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    80792d0 <argp_parse+0x1390>
mov    %eax,%edx
cmp    %edx,%esi
jb     80792c0 <argp_parse+0x1380>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    80792d0 <argp_parse+0x1390>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8079290 <argp_parse+0x1350>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8079348 <argp_parse+0x1408>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    8079340 <argp_parse+0x1400>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    807932c <argp_parse+0x13ec>
xor    %eax,%eax
jmp    8079332 <argp_parse+0x13f2>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    807936b <argp_parse+0x142b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8079360 <argp_parse+0x1420>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8079399 <argp_parse+0x1459>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8079399 <argp_parse+0x1459>
cmp    $0x2f,%cl
je     80793a0 <argp_parse+0x1460>
test   %bl,%bl
je     8079378 <argp_parse+0x1438>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    8079382 <argp_parse+0x1442>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8079378 <argp_parse+0x1438>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
cmp    $0x1,%eax
jbe    80793cf <argp_parse+0x148f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     80793d8 <argp_parse+0x1498>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    80793c5 <argp_parse+0x1485>
nop
jmp    80793cf <argp_parse+0x148f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8079350 <argp_parse+0x1410>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   80793b0 <argp_parse+0x1470>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
jmp    804a4c0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807c6e0 <argp_parse+0x47a0>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    807a7d0 <argp_parse+0x2890>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x8,%al
jne    80794a8 <argp_parse+0x1568>
test   $0x10,%al
je     80794e8 <argp_parse+0x15a8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807c6e0 <argp_parse+0x47a0>
nop
and    $0x10,%eax
mov    %eax,%edi
jne    8079500 <argp_parse+0x15c0>
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    8079568 <argp_parse+0x1628>
movsbl (%ebx,%ebp,1),%eax
cmp    $0x2f,%eax
cmovne %eax,%edi
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a3f0 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8081880 <argp_parse+0x9940>
mov    %eax,%edi
mov    %eax,%edx
jmp    8079529 <argp_parse+0x15e9>
xchg   %ax,%ax
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807c6e0 <argp_parse+0x47a0>
test   %eax,%eax
jle    807954b <argp_parse+0x160b>
lea    0x1(%ebx),%edx
movb   $0x2f,(%ebx)
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8079510 <argp_parse+0x15d0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807c6e0 <argp_parse+0x47a0>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   804a4c0 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
mov    %eax,%edi
mov    %edi,%eax
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
mov    %eax,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
lea    0x28(%esp),%edi
movb   $0x0,0x24(%esp)
mov    0x84(%esp),%esi
cmpb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
jne    807967e <argp_parse+0x173e>
mov    0x34(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x808de20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8079720 <argp_parse+0x17e0>
movl   $0x1,0x38(%esp)
movsbl (%edx),%edx
movb   $0x1,0x3c(%esp)
mov    %edx,0x40(%esp)
test   %edx,%edx
movb   $0x1,0x30(%esp)
jne    807963e <argp_parse+0x16fe>
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    80797ca <argp_parse+0x188a>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x40(%esp),%edx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
cmpb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
je     8079710 <argp_parse+0x17d0>
mov    %edx,(%esp)
call   804a520 <towlower@plt>
mov    %ebx,%edx
mov    0x38(%esp),%ecx
shl    $0x5,%edx
sub    %ebx,%edx
add    %edx,%eax
xor    %edx,%edx
div    %esi
add    %ebp,%ecx
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movb   $0x0,0x30(%esp)
mov    %edx,%ebx
je     80795d0 <argp_parse+0x1690>
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    0x34(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8080e80 <argp_parse+0x8f40>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8079628 <argp_parse+0x16e8>
cmp    $0xfffffffe,%eax
je     8079740 <argp_parse+0x1800>
test   %eax,%eax
jne    8079738 <argp_parse+0x17f8>
mov    0x34(%esp),%eax
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%eax)
jne    80797a6 <argp_parse+0x1866>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    8079782 <argp_parse+0x1842>
xor    %edx,%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
movb   $0x1,0x3c(%esp)
call   804a500 <mbsinit@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8079603 <argp_parse+0x16c3>
movb   $0x0,0x24(%esp)
jmp    8079603 <argp_parse+0x16c3>
nop
movsbl 0x0(%ebp),%eax
jmp    8079655 <argp_parse+0x1715>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807975e <argp_parse+0x181e>
movb   $0x1,0x24(%esp)
jmp    807967e <argp_parse+0x173e>
xchg   %ax,%ax
mov    0x40(%esp),%edx
jmp    80796e8 <argp_parse+0x17a8>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    0x40(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %eax,0x38(%esp)
jmp    8079639 <argp_parse+0x16f9>
movl   $0x808dcba,0xc(%esp)
movl   $0x95,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dc7a,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808dcba,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dca8,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808dcba,0xc(%esp)
movl   $0xb1,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dc91,(%esp)
call   804af50 <__assert_fail@plt>
call   804a610 <__stack_chk_fail@plt>
nop
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
movzbl (%edx),%eax
mov    %ecx,%esi
mov    %ecx,%ebx
and    $0x20,%esi
and    $0x2,%ebx
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     8079820 <argp_parse+0x18e0>
jle    8079830 <argp_parse+0x18f0>
cmp    $0x40,%al
je     8079820 <argp_parse+0x18e0>
jle    8079848 <argp_parse+0x1908>
cmp    $0x5b,%al
je     807984c <argp_parse+0x190c>
cmp    $0x5c,%al
lea    0x0(%esi,%eiz,1),%esi
jne    807983c <argp_parse+0x18fc>
xor    %eax,%eax
test   %ebx,%ebx
jne    8079811 <argp_parse+0x18d1>
xor    %eax,%eax
cmpb   $0x0,0x1(%edx)
setne  %al
lea    (%ecx,%eax,1),%edx
movzbl (%edx),%eax
lea    0x1(%edx),%ecx
cmp    $0x2b,%al
jne    80797ee <argp_parse+0x18ae>
xchg   %ax,%ax
test   %esi,%esi
je     807983c <argp_parse+0x18fc>
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     807984c <argp_parse+0x190c>
mov    %ecx,%edx
jmp    80797e7 <argp_parse+0x18a7>
cmp    $0x21,%al
je     8079820 <argp_parse+0x18e0>
cmp    $0x2a,%al
je     807984c <argp_parse+0x190c>
test   %al,%al
je     8079858 <argp_parse+0x1918>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    80797e7 <argp_parse+0x18a7>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
jne    807983c <argp_parse+0x18fc>
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x4,(%esp)
call   80817f0 <argp_parse+0x98b0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    (%edi),%ebx
test   %ebx,%ebx
jne    80798b6 <argp_parse+0x1976>
jmp    80798d6 <argp_parse+0x1996>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
jne    80798a8 <argp_parse+0x1968>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
test   %esi,%esi
je     80798d6 <argp_parse+0x1996>
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
test   %eax,%eax
jne    8079898 <argp_parse+0x1958>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807aa10 <argp_parse+0x2ad0>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
test   %esi,%esi
jne    80798b4 <argp_parse+0x1974>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a4c0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x8079480,%eax
push   %edi
mov    $0x804a6d0,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x10000000,%esi
cmove  %eax,%edi
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
sete   %al
test   $0x40000000,%esi
mov    %eax,%ebp
jne    8079980 <argp_parse+0x1a40>
movzbl (%ebx),%eax
test   %al,%al
je     8079980 <argp_parse+0x1a40>
mov    %ebp,%edx
add    $0x1,%ebx
test   %dl,%dl
je     807994f <argp_parse+0x1a0f>
jmp    807997b <argp_parse+0x1a3b>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     8079980 <argp_parse+0x1a40>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    8079948 <argp_parse+0x1a08>
cmp    $0x2f,%al
je     807994c <argp_parse+0x1a0c>
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %cl
test   %al,%al
je     807998a <argp_parse+0x1a4a>
test   %cl,%cl
je     807994c <argp_parse+0x1a0c>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%ebp
jmp    8079980 <argp_parse+0x1a40>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8079b1a <argp_parse+0x1bda>
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8079a95 <argp_parse+0x1b55>
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     8079afc <argp_parse+0x1bbc>
mov    0x18(%esp),%edx
mov    0x44(%esp),%edi
mov    0x8(%edx),%eax
mov    0xc(%edx),%ebx
mov    %eax,%esi
and    $0x40000000,%eax
and    $0x8,%esi
mov    %eax,0x1c(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804a780 <strcpy@plt>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   807a5f0 <argp_parse+0x26b0>
test   %eax,%eax
jne    8079a2b <argp_parse+0x1aeb>
test   %esi,%esi
je     8079a50 <argp_parse+0x1b10>
movl   $0x2f,0x4(%esp)
mov    %ebp,(%esp)
call   804acb0 <strrchr@plt>
test   %eax,%eax
je     8079a50 <argp_parse+0x1b10>
movb   $0x0,(%eax)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   807a5f0 <argp_parse+0x26b0>
test   %eax,%eax
je     8079a00 <argp_parse+0x1ac0>
xor    %ebx,%ebx
mov    %ebp,(%esp)
call   804a4c0 <free@plt>
mov    0x18(%esp),%eax
mov    0x8(%eax),%eax
add    $0x2c,%esp
shr    $0x1d,%eax
xor    $0x1,%eax
and    $0x1,%eax
xor    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    8079a78 <argp_parse+0x1b38>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
je     8079a78 <argp_parse+0x1b38>
add    $0x1,%eax
mov    %eax,%edi
jne    80799e4 <argp_parse+0x1aa4>
nop
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8079af2 <argp_parse+0x1bb2>
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     80799c0 <argp_parse+0x1a80>
mov    0x18(%esp),%eax
mov    0x14(%eax),%ebx
mov    0xc(%eax),%esi
test   %ebx,%ebx
je     8079a78 <argp_parse+0x1b38>
xor    %edi,%edi
mov    %ebp,0x1c(%esp)
mov    %edi,%ebp
mov    %ebx,%edi
mov    0x44(%esp),%ebx
jmp    8079ac2 <argp_parse+0x1b82>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
add    $0x8,%esi
cmp    %edi,%ebp
je     8079ae4 <argp_parse+0x1ba4>
mov    0x4(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80798f0 <argp_parse+0x19b0>
test   %al,%al
je     8079ab8 <argp_parse+0x1b78>
mov    0x1c(%esp),%ebp
jmp    8079a2b <argp_parse+0x1aeb>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ebp
mov    (%eax),%eax
test   %eax,%eax
jne    8079a82 <argp_parse+0x1b42>
mov    $0x1,%ebx
jmp    8079a2d <argp_parse+0x1aed>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebp
jmp    80799c8 <argp_parse+0x1a88>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%ebp
mov    0x44(%esp),%edi
test   $0x10000000,%ebx
je     8079bb8 <argp_parse+0x1c78>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80797d0 <argp_parse+0x1890>
test   %al,%al
je     8079bb8 <argp_parse+0x1c78>
mov    0x0(%ebp),%esi
test   %esi,%esi
je     8079b6c <argp_parse+0x1c2c>
cmpl   $0x1,0x4(%esi)
je     8079cf0 <argp_parse+0x1db0>
movl   $0x18,(%esp)
call   80817f0 <argp_parse+0x98b0>
mov    0x0(%ebp),%edx
movl   $0x1,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    %edx,(%eax)
mov    %eax,0x0(%ebp)
mov    0x14(%esi),%edx
cmp    0x10(%esi),%edx
je     8079cb8 <argp_parse+0x1d78>
mov    0xc(%esi),%eax
lea    (%eax,%edx,8),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%esi)
mov    %edi,(%eax)
mov    %ebx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%esi
test   %esi,%esi
je     8079bca <argp_parse+0x1c8a>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8079c70 <argp_parse+0x1d30>
movl   $0x18,(%esp)
call   80817f0 <argp_parse+0x98b0>
mov    %ebx,%ecx
mov    $0x8079430,%edx
and    $0x10,%ecx
mov    $0x8079470,%ecx
movl   $0x0,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    $0x8079450,%eax
cmove  %eax,%edx
mov    $0x8079580,%eax
cmove  %ecx,%eax
movl   $0x8079420,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807a840 <argp_parse+0x2900>
mov    %eax,0xc(%esi)
mov    0x0(%ebp),%eax
mov    %eax,(%esi)
mov    %esi,0x0(%ebp)
mov    %edi,(%esp)
and    $0x10000002,%ebx
call   8081880 <argp_parse+0x9940>
cmp    $0x10000000,%ebx
mov    %eax,%edi
je     8079c88 <argp_parse+0x1d48>
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ae50 <argp_parse+0x2f10>
cmp    %edi,%eax
je     8079ba9 <argp_parse+0x1c69>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a4c0 <free@plt>
nop
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x60000018,%eax
je     8079c30 <argp_parse+0x1cf0>
jmp    8079bca <argp_parse+0x1c8a>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,%ecx
jmp    8079ca2 <argp_parse+0x1d62>
xchg   %ax,%ax
add    %edx,%ebx
add    $0x1,%ecx
lea    0x1(%ebx),%edx
movzbl (%ebx),%ebx
test   %bl,%bl
mov    %bl,-0x1(%ecx)
je     8079c48 <argp_parse+0x1d08>
xor    %ebx,%ebx
cmpb   $0x5c,(%edx)
jne    8079c90 <argp_parse+0x1d50>
xor    %ebx,%ebx
cmpb   $0x0,0x1(%edx)
setne  %bl
jmp    8079c90 <argp_parse+0x1d50>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%ecx
test   %ecx,%ecx
je     8079d05 <argp_parse+0x1dc5>
cmp    $0x15555554,%edx
ja     8079d15 <argp_parse+0x1dd5>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,8),%eax
mov    %edx,0x10(%esi)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x14(%esi),%edx
mov    %eax,0xc(%esi)
jmp    8079b9b <argp_parse+0x1c5b>
nop
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x20000000,%eax
je     8079b8c <argp_parse+0x1c4c>
jmp    8079b6c <argp_parse+0x1c2c>
test   %edx,%edx
jne    8079cce <argp_parse+0x1d8e>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8079cd5 <argp_parse+0x1d95>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%eax
mov    0x70(%esp),%edi
cmpb   $0x2d,(%eax)
mov    %edi,%ecx
mov    %edi,0x18(%esp)
mov    %cl,0x2f(%esp)
je     8079da8 <argp_parse+0x1e68>
movl   $0x8089290,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x3c(%esp)
call   804a710 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8079dc3 <argp_parse+0x1e83>
movb   $0x0,0x1c(%esp)
xor    %ebx,%ebx
xor    %ebp,%ebp
lea    0x3c(%esp),%edi
jmp    8079d77 <argp_parse+0x1e37>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %dl,0x0(%ebp,%ebx,1)
add    $0x1,%ebx
mov    0x4(%esi),%edx
cmp    0x8(%esi),%edx
jae    8079dd0 <argp_parse+0x1e90>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%esi)
movzbl (%edx),%edx
cmp    0x3c(%esp),%ebx
jne    8079d70 <argp_parse+0x1e30>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x14(%esp)
call   80817a0 <argp_parse+0x9860>
mov    0x14(%esp),%edx
mov    %eax,%ebp
jmp    8079d70 <argp_parse+0x1e30>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    8079d3e <argp_parse+0x1dfe>
movl   $0x0,0x3c(%esp)
mov    0x809d884,%esi
movb   $0x1,0x1c(%esp)
jmp    8079d61 <argp_parse+0x1e21>
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   804ac80 <__uflow@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edx
jne    8079d88 <argp_parse+0x1e48>
testb  $0x20,(%esi)
jne    8079f10 <argp_parse+0x1fd0>
call   804aaf0 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,0x24(%esp)
je     8079f2a <argp_parse+0x1fea>
lea    0x1(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
test   %ebx,%ebx
mov    %eax,%ebp
movzbl 0x18(%esp),%eax
mov    %al,0x0(%ebp,%ebx,1)
je     8079ec8 <argp_parse+0x1f88>
mov    0x18(%esp),%edi
mov    %edi,%eax
cmp    -0x1(%ebp,%ebx,1),%al
setne  %al
movzbl %al,%eax
add    %eax,%ebx
lea    0x0(%ebp,%ebx,1),%eax
cmp    %eax,%ebp
mov    %eax,0x14(%esp)
jae    8079ec8 <argp_parse+0x1f88>
mov    %edi,%eax
movzbl 0x2f(%esp),%edx
movzbl %al,%eax
add    %eax,%eax
mov    %eax,0x20(%esp)
lea    0x1(%ebp),%esi
jmp    8079e69 <argp_parse+0x1f29>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    0x14(%esp),%edi
jae    8079ec8 <argp_parse+0x1f88>
cmp    %dl,-0x1(%esi)
mov    %esi,%edi
lea    -0x1(%esi),%ebx
jne    8079e60 <argp_parse+0x1f20>
mov    %edx,0x1c(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
mov    0x20(%esp),%eax
movzwl (%ecx,%eax,1),%eax
test   $0x20,%ah
mov    %ax,0x18(%esp)
je     8079ee8 <argp_parse+0x1fa8>
cmp    %ebp,%ebx
je     8079eba <argp_parse+0x1f7a>
movzbl -0x2(%esi),%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    8079eb3 <argp_parse+0x1f73>
jmp    8079ee8 <argp_parse+0x1fa8>
lea    0x0(%esi),%esi
movzbl -0x1(%ebx),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     8079ee8 <argp_parse+0x1fa8>
sub    $0x1,%ebx
cmp    %ebp,%ebx
jne    8079ea8 <argp_parse+0x1f68>
mov    %esi,%ebp
add    $0x1,%esi
cmp    0x14(%esp),%edi
jb     8079e69 <argp_parse+0x1f29>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
test   %eax,%eax
mov    %eax,(%edi)
setne  %al
add    $0x4c,%esp
movzbl %al,%eax
pop    %ebx
neg    %eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
movb   $0x0,(%ebx)
mov    %edx,0x18(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   *0x60(%esp)
mov    0x18(%esp),%edx
jmp    8079ebc <argp_parse+0x1f7c>
xchg   %ax,%ax
call   804aaf0 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jne    8079e04 <argp_parse+0x1ec4>
mov    %esi,(%esp)
call   804a540 <fclose@plt>
test   %eax,%eax
je     8079e04 <argp_parse+0x1ec4>
mov    0x24(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jmp    8079e04 <argp_parse+0x1ec4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
js     8079fba <argp_parse+0x207a>
mov    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80825a0 <argp_parse+0xa660>
mov    %eax,%ebx
mov    0x28(%esp),%eax
test   %eax,%eax
je     8079f7b <argp_parse+0x203b>
cmp    $0xffffffff,%ebx
je     8079f88 <argp_parse+0x2048>
cmp    $0x1,%ebx
je     8079fc1 <argp_parse+0x2081>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
call   804aaf0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8079f80 <argp_parse+0x2040>
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8083670 <argp_parse+0xb730>
mov    %eax,%ebx
jmp    8079f7b <argp_parse+0x203b>
cmpl   $0x0,0x28(%esp)
jne    8079f92 <argp_parse+0x2052>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebx
movl   $0x9,(%eax)
jmp    8079f80 <argp_parse+0x2040>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
jne    807a00c <argp_parse+0x20cc>
jmp    807a021 <argp_parse+0x20e1>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     807a030 <argp_parse+0x20f0>
add    %eax,%esi
add    %eax,%ebp
sub    %eax,%ebx
je     807a021 <argp_parse+0x20e1>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8080b60 <argp_parse+0x8c20>
cmp    $0xffffffff,%eax
jne    807a000 <argp_parse+0x20c0>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
movl   $0x1c,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   804a510 <clock_gettime@plt>
test   %eax,%eax
je     807a091 <argp_parse+0x2151>
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a590 <gettimeofday@plt>
mov    0x18(%esp),%eax
mov    %eax,(%ebx)
imul   $0x3e8,0x1c(%esp),%eax
mov    %eax,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     807a116 <argp_parse+0x21d6>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    807a10f <argp_parse+0x21cf>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     807a100 <argp_parse+0x21c0>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    807a0ed <argp_parse+0x21ad>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     807a100 <argp_parse+0x21c0>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     807a0e0 <argp_parse+0x21a0>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    807a108 <argp_parse+0x21c8>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    807a0b8 <argp_parse+0x2178>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    807a0f6 <argp_parse+0x21b6>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    807a0ae <argp_parse+0x216e>
jmp    807a108 <argp_parse+0x21c8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    807a172 <argp_parse+0x2232>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   804ae30 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   807a150 <argp_parse+0x2210>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     807a206 <argp_parse+0x22c6>
cmp    %eax,%edi
je     807a1ba <argp_parse+0x227a>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     807a1ff <argp_parse+0x22bf>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     807a1e0 <argp_parse+0x22a0>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     807a238 <argp_parse+0x22f8>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     807a215 <argp_parse+0x22d5>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    807a210 <argp_parse+0x22d0>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    807a1e8 <argp_parse+0x22a8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     807a1e0 <argp_parse+0x22a0>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    807a1e0 <argp_parse+0x22a0>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x808dd3c,%edx
je     807a2e8 <argp_parse+0x23a8>
flds   0x8(%edx)
flds   0x808dd50
fxch   %st(1)
fucomi %st(1),%st
jbe    807a2a8 <argp_parse+0x2368>
flds   0x808dd54
fucomip %st(1),%st
jbe    807a2b0 <argp_parse+0x2370>
flds   0xc(%edx)
flds   0x808dd58
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    807a2b8 <argp_parse+0x2378>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     807a2c0 <argp_parse+0x2380>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    807a2c8 <argp_parse+0x2388>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     807a2d0 <argp_parse+0x2390>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    807a2d8 <argp_parse+0x2398>
jmp    807a2ed <argp_parse+0x23ad>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    807a2d8 <argp_parse+0x2398>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    807a2d8 <argp_parse+0x2398>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    807a2d8 <argp_parse+0x2398>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    807a2d8 <argp_parse+0x2398>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    807a2d8 <argp_parse+0x2398>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x808dd3c,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    807a374 <argp_parse+0x2434>
mov    (%edi),%ebx
test   %ebx,%ebx
je     807a368 <argp_parse+0x2428>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    807a327 <argp_parse+0x23e7>
jmp    807a35a <argp_parse+0x241a>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     807a358 <argp_parse+0x2418>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   807a150 <argp_parse+0x2210>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    807a318 <argp_parse+0x23d8>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    807a325 <argp_parse+0x23e5>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     807a388 <argp_parse+0x2448>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     807a308 <argp_parse+0x23c8>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   807a150 <argp_parse+0x2210>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     807a3d2 <argp_parse+0x2492>
mov    0x24(%esi),%eax
test   %eax,%eax
je     807a3da <argp_parse+0x249a>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     807a308 <argp_parse+0x23c8>
jmp    807a374 <argp_parse+0x2434>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    807a3b1 <argp_parse+0x2471>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   804a800 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    807a3a6 <argp_parse+0x2466>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    807a476 <argp_parse+0x2536>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     807a46f <argp_parse+0x252f>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     807a46a <argp_parse+0x252a>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    807a460 <argp_parse+0x2520>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     807a448 <argp_parse+0x2508>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    807a4c1 <argp_parse+0x2581>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     807a4ba <argp_parse+0x257a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     807a4ba <argp_parse+0x257a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    807a4b0 <argp_parse+0x2570>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     807a498 <argp_parse+0x2558>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     807a4cc <argp_parse+0x258c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    807a53e <argp_parse+0x25fe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     807a537 <argp_parse+0x25f7>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     807a532 <argp_parse+0x25f2>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    807a528 <argp_parse+0x25e8>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     807a510 <argp_parse+0x25d0>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x808dccd,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x808dce5,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x808dd18,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x808dd5c
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x808dcfd,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804adf0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   807a150 <argp_parse+0x2210>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    807a61a <argp_parse+0x26da>
jmp    807a633 <argp_parse+0x26f3>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     807a642 <argp_parse+0x2702>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    807a640 <argp_parse+0x2700>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    807a618 <argp_parse+0x26d8>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     807a681 <argp_parse+0x2741>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     807a677 <argp_parse+0x2737>
jmp    807a687 <argp_parse+0x2747>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    807a687 <argp_parse+0x2747>
mov    (%edx),%eax
test   %eax,%eax
je     807a670 <argp_parse+0x2730>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   804ae30 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   807a150 <argp_parse+0x2210>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    807a6b7 <argp_parse+0x2777>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     807a6c2 <argp_parse+0x2782>
cmp    %esi,(%ecx)
jne    807a6b0 <argp_parse+0x2770>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    807a6db <argp_parse+0x279b>
mov    0x4(%edi),%edx
jmp    807a6ce <argp_parse+0x278e>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    807a6d7 <argp_parse+0x2797>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     807a6c8 <argp_parse+0x2788>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    807a6f0 <argp_parse+0x27b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    807a748 <argp_parse+0x2808>
mov    (%edi),%edx
test   %edx,%edx
je     807a73c <argp_parse+0x27fc>
cmp    %eax,%ebx
jbe    807a748 <argp_parse+0x2808>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     807a73c <argp_parse+0x27fc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     807a748 <argp_parse+0x2808>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    807a728 <argp_parse+0x27e8>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     807a70a <argp_parse+0x27ca>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    807a7b8 <argp_parse+0x2878>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    807a78b <argp_parse+0x284b>
jmp    807a7a2 <argp_parse+0x2862>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     807a7b8 <argp_parse+0x2878>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    807a788 <argp_parse+0x2848>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     807a774 <argp_parse+0x2834>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     807a802 <argp_parse+0x28c2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    807a7e8 <argp_parse+0x28a8>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x807a130,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x807a140,%eax
cmove  %eax,%esi
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     807a978 <argp_parse+0x2a38>
test   %ebx,%ebx
mov    $0x808dd3c,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   807a240 <argp_parse+0x2300>
test   %al,%al
je     807a961 <argp_parse+0x2a21>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    807a8f0 <argp_parse+0x29b0>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x808dd60
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    807a958 <argp_parse+0x2a18>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    807a8f2 <argp_parse+0x29b2>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   807a0a0 <argp_parse+0x2160>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     807a95a <argp_parse+0x2a1a>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     807a961 <argp_parse+0x2a21>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804af80 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     807a961 <argp_parse+0x2a21>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   804a4c0 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807a94c <argp_parse+0x2a0c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    807a9f6 <argp_parse+0x2ab6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     807a9ee <argp_parse+0x2aae>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    807a9b2 <argp_parse+0x2a72>
jmp    807a9d6 <argp_parse+0x2a96>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     807a9c0 <argp_parse+0x2a80>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    807a9b0 <argp_parse+0x2a70>
test   %edx,%edx
je     807a9e1 <argp_parse+0x2aa1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     807a998 <argp_parse+0x2a58>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     807aa28 <argp_parse+0x2ae8>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    807aa9a <argp_parse+0x2b5a>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    807aa61 <argp_parse+0x2b21>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    807aa4a <argp_parse+0x2b0a>
jmp    807aa59 <argp_parse+0x2b19>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
jne    807aa48 <argp_parse+0x2b08>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     807aa38 <argp_parse+0x2af8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    807aa72 <argp_parse+0x2b32>
jmp    807aa81 <argp_parse+0x2b41>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
jne    807aa70 <argp_parse+0x2b30>
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a4c0 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    807aa61 <argp_parse+0x2b21>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    807aaba <argp_parse+0x2b7a>
jmp    807aac7 <argp_parse+0x2b87>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    807aab8 <argp_parse+0x2b78>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     807aaa8 <argp_parse+0x2b68>
jmp    807aa2b <argp_parse+0x2aeb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    807ab40 <argp_parse+0x2c00>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x808dd60
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    807ac20 <argp_parse+0x2ce0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    807ab42 <argp_parse+0x2c02>
fstp   %st(0)
call   807a0a0 <argp_parse+0x2160>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     807ac22 <argp_parse+0x2ce2>
cmp    %ebx,0x8(%esi)
je     807ac10 <argp_parse+0x2cd0>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   804af80 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     807ac22 <argp_parse+0x2ce2>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   807a2f0 <argp_parse+0x23b0>
test   %al,%al
mov    %eax,%ebx
jne    807ac30 <argp_parse+0x2cf0>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   807a2f0 <argp_parse+0x23b0>
test   %al,%al
je     807ac65 <argp_parse+0x2d25>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   807a2f0 <argp_parse+0x23b0>
test   %al,%al
je     807ac65 <argp_parse+0x2d25>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     807adf8 <argp_parse+0x2eb8>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   807a180 <argp_parse+0x2240>
test   %eax,%eax
je     807acb8 <argp_parse+0x2d78>
test   %ebx,%ebx
je     807ad38 <argp_parse+0x2df8>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    807acf8 <argp_parse+0x2db8>
jmp    807ad48 <argp_parse+0x2e08>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     807ae00 <argp_parse+0x2ec0>
mov    0x24(%esi),%eax
test   %eax,%eax
je     807ae14 <argp_parse+0x2ed4>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   807a240 <argp_parse+0x2300>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    807acf0 <argp_parse+0x2db0>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    807ad98 <argp_parse+0x2e58>
fmulp  %st,%st(1)
jmp    807ad9a <argp_parse+0x2e5a>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x808dd60
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    807ae2a <argp_parse+0x2eea>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   807aae0 <argp_parse+0x2ba0>
test   %al,%al
je     807ae2c <argp_parse+0x2eec>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   807a180 <argp_parse+0x2240>
test   %eax,%eax
je     807acf8 <argp_parse+0x2db8>
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    807acae <argp_parse+0x2d6e>
movl   $0x8,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
jne    807ad17 <argp_parse+0x2dd7>
jmp    807ae2c <argp_parse+0x2eec>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    807acae <argp_parse+0x2d6e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    807ac70 <argp_parse+0x2d30>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807ac70 <argp_parse+0x2d30>
cmp    $0xffffffff,%eax
je     807ae88 <argp_parse+0x2f48>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807ae7e <argp_parse+0x2f3e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   807a180 <argp_parse+0x2240>
test   %eax,%eax
mov    %eax,%edi
je     807afc8 <argp_parse+0x3088>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    807aed8 <argp_parse+0x2f98>
jmp    807aee8 <argp_parse+0x2fa8>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    807aed8 <argp_parse+0x2f98>
lea    0x14(%esi),%eax
call   807a240 <argp_parse+0x2300>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    807aed0 <argp_parse+0x2f90>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     807afd0 <argp_parse+0x3090>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   807aae0 <argp_parse+0x2ba0>
test   %al,%al
jne    807aed8 <argp_parse+0x2f98>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    807afaa <argp_parse+0x306a>
lea    0x0(%esi,%eiz,1),%esi
jmp    807afb9 <argp_parse+0x3079>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %ebx,%ebx
jne    807afa8 <argp_parse+0x3068>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    807aed8 <argp_parse+0x2f98>
nop
xor    %ebp,%ebp
jmp    807aed8 <argp_parse+0x2f98>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    807af7f <argp_parse+0x303f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    %gs:0x14,%ecx
mov    %ecx,0xbc(%esp)
xor    %ecx,%ecx
mov    0xec(%esp),%ecx
mov    0xe0(%esp),%eax
mov    0xe4(%esp),%edx
mov    0xf4(%esp),%edi
and    $0x3,%ecx
mov    0xf0(%esp),%esi
mov    %eax,0x50(%esp)
mov    0xe8(%esp),%eax
mov    %ecx,0x58(%esp)
mov    0xec(%esp),%ecx
mov    %edx,0x54(%esp)
mov    0xfc(%esp),%edx
mov    %eax,%ebp
and    $0x20,%ecx
mov    %eax,0x4c(%esp)
mov    0xf8(%esp),%eax
cmp    $0x1,%ecx
mov    %ecx,0x64(%esp)
sbb    %ecx,%ecx
mov    %ecx,0x40(%esp)
andl   $0xffffffe8,0x40(%esp)
addl   $0x400,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   804ad50 <localeconv@plt>
mov    (%eax),%ecx
mov    %eax,%ebx
mov    %ecx,(%esp)
mov    %ecx,0x60(%esp)
call   804a950 <strlen@plt>
mov    $0x1,%edx
mov    %eax,%ecx
lea    -0x1(%eax),%eax
cmp    $0x10,%eax
mov    $0x80894f0,%eax
cmovb  %ecx,%edx
mov    0x8(%ebx),%ecx
cmovb  0x60(%esp),%eax
mov    %edx,0x68(%esp)
mov    %ecx,0x6c(%esp)
mov    0x4(%ebx),%ecx
mov    %eax,0x60(%esp)
mov    %ecx,(%esp)
mov    %ecx,%ebx
call   804a950 <strlen@plt>
mov    %ebp,%ecx
cmp    $0x11,%eax
mov    $0x808d3ee,%eax
cmovb  %ebx,%eax
add    $0x288,%ecx
cmp    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    %ecx,0x48(%esp)
ja     807b442 <argp_parse+0x3502>
jae    807b438 <argp_parse+0x34f8>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80862d0 <argp_parse+0xe390>
or     %eax,%edx
je     807b678 <argp_parse+0x3738>
mov    0x54(%esp),%edx
mov    0x50(%esp),%eax
mov    %edx,0x8c(%esp)
test   %edx,%edx
mov    %eax,0x88(%esp)
fildll 0x88(%esp)
js     807b9b0 <argp_parse+0x3a70>
mov    %esi,0x88(%esp)
test   %edi,%edi
mov    %edi,0x8c(%esp)
fildll 0x88(%esp)
js     807b990 <argp_parse+0x3a50>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%eax
mov    %edx,0x8c(%esp)
test   %edx,%edx
mov    %eax,0x88(%esp)
fildll 0x88(%esp)
js     807b9a0 <argp_parse+0x3a60>
fdivrp %st,%st(1)
testb  $0x10,0xec(%esp)
fmulp  %st,%st(1)
je     807b548 <argp_parse+0x3608>
fildl  0x40(%esp)
xor    %ebp,%ebp
fld    %st(0)
jmp    807b1b4 <argp_parse+0x3274>
fstp   %st(1)
fxch   %st(2)
fld    %st(0)
add    $0x1,%ebp
fmul   %st(2),%st
fxch   %st(3)
fucomi %st(3),%st
jb     807b1d0 <argp_parse+0x3290>
cmp    $0x8,%ebp
jne    807b1b0 <argp_parse+0x3270>
fstp   %st(2)
fstp   %st(2)
jmp    807b1d4 <argp_parse+0x3294>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(2)
fstp   %st(2)
fdivp  %st,%st(1)
cmpl   $0x1,0x58(%esp)
fld    %st(0)
je     807b2a8 <argp_parse+0x3368>
fstp   %st(0)
fldt   0x808dde0
fucomip %st(1),%st
jbe    807b988 <argp_parse+0x3a48>
flds   0x8086bd0
fxch   %st(1)
fucomi %st(1),%st
jae    807bb88 <argp_parse+0x3c48>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
test   %esi,%esi
jne    807b281 <argp_parse+0x3341>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     807bd17 <argp_parse+0x3dd7>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomi %st(1),%st
fstp   %st(1)
jp     807b281 <argp_parse+0x3341>
je     807bcc0 <argp_parse+0x3d80>
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
js     807bcc9 <argp_parse+0x3d89>
fxch   %st(1)
jmp    807b2aa <argp_parse+0x336a>
xchg   %ax,%ax
fxch   %st(1)
fstpt  0x20(%esp)
mov    0x4c(%esp),%edi
movl   $0x808dd6a,0xc(%esp)
fstpt  0x10(%esp)
mov    %edi,(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    0x68(%esp),%edi
mov    0x64(%esp),%edx
add    $0x1,%edi
mov    %eax,%esi
xor    %eax,%eax
test   %edx,%edx
sete   %al
lea    0x1(%edi,%eax,1),%eax
cmp    %eax,%esi
fldt   0x20(%esp)
ja     807b320 <argp_parse+0x33e0>
testb  $0x8,0xec(%esp)
je     807b598 <argp_parse+0x3658>
mov    0x4c(%esp),%eax
cmpb   $0x30,-0x1(%eax,%esi,1)
jne    807b5a0 <argp_parse+0x3660>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x58(%esp)
fmuls  0x808dddc
je     807b3f8 <argp_parse+0x34b8>
fldt   0x808dde0
fucomip %st(1),%st
jbe    807b3f8 <argp_parse+0x34b8>
flds   0x8086bd0
fxch   %st(1)
fucomi %st(1),%st
jae    807bc60 <argp_parse+0x3d20>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
test   %esi,%esi
jne    807b3d0 <argp_parse+0x3490>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     807bd24 <argp_parse+0x3de4>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomip %st(1),%st
fstp   %st(0)
jp     807b3d2 <argp_parse+0x3492>
jne    807b3d2 <argp_parse+0x3492>
xor    %eax,%eax
xor    %edx,%edx
jmp    807b3d2 <argp_parse+0x3492>
nop
fstp   %st(0)
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
jns    807b3f8 <argp_parse+0x34b8>
fadds  0x8086bcc
lea    0x0(%esi),%esi
fdivs  0x808dddc
mov    0x4c(%esp),%edi
movl   $0x808dd64,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
fstpt  0x10(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %edi,(%esp)
xor    %edi,%edi
call   804a950 <strlen@plt>
mov    %eax,%esi
jmp    807b5a8 <argp_parse+0x3668>
nop
cmp    %esi,0x38(%esp)
jbe    807b109 <argp_parse+0x31c9>
mov    %edi,%eax
or     %esi,%eax
je     807b12d <argp_parse+0x31ed>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <argp_parse+0xe390>
or     %eax,%edx
jne    807b12d <argp_parse+0x31ed>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80861a0 <argp_parse+0xe260>
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebp
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,%ebx
mov    %eax,%esi
mov    %edx,0xc(%esp)
call   80862d0 <argp_parse+0xe390>
mov    $0xa,%ecx
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
imul   $0xa,%edx,%edx
mov    %edx,0x20(%esp)
mul    %ecx
mov    %eax,0x50(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x54(%esp)
mov    0x50(%esp),%edx
add    %eax,0x54(%esp)
mov    0x54(%esp),%ecx
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
call   80862d0 <argp_parse+0xe390>
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x70(%esp)
mov    %edx,0x74(%esp)
call   80861a0 <argp_parse+0xe260>
mov    0x54(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x24(%esp)
mov    0x50(%esp),%edx
mov    %eax,0x20(%esp)
mov    %edx,(%esp)
call   80861a0 <argp_parse+0xe260>
cmp    0x74(%esp),%ebx
mov    %eax,0x50(%esp)
jae    807bbd8 <argp_parse+0x3c98>
mov    $0x3,%ebx
jmp    807b704 <argp_parse+0x37c4>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x58(%esp)
je     807b55d <argp_parse+0x361d>
fldt   0x808dde0
fucomip %st(1),%st
ja     807b8c8 <argp_parse+0x3988>
mov    0x4c(%esp),%edi
mov    $0xffffffff,%ebp
fstpt  0x10(%esp)
movl   $0x808dd64,0xc(%esp)
mov    %edi,(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %edi,(%esp)
xor    %edi,%edi
call   804a950 <strlen@plt>
mov    %eax,%esi
jmp    807b5a8 <argp_parse+0x3668>
fstp   %st(0)
jmp    807b5a8 <argp_parse+0x3668>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
sub    %esi,%ebx
sub    %edi,%esi
mov    %eax,0x4(%esp)
add    %ebx,%esi
mov    %ebx,(%esp)
call   804a4b0 <memmove@plt>
testb  $0x4,0xec(%esp)
jne    807b7d0 <argp_parse+0x3890>
testb  $0x80,0xec(%esp)
je     807b64d <argp_parse+0x370d>
cmp    $0xffffffff,%ebp
je     807b9c0 <argp_parse+0x3a80>
mov    0xec(%esp),%eax
mov    %ebp,%edi
and    $0x100,%eax
or     %eax,%edi
je     807b64d <argp_parse+0x370d>
testb  $0x40,0xec(%esp)
jne    807b8a8 <argp_parse+0x3968>
test   %ebp,%ebp
je     807be24 <argp_parse+0x3ee4>
mov    0x64(%esp),%esi
mov    0x48(%esp),%edi
test   %esi,%esi
lea    0x1(%edi),%edx
je     807b890 <argp_parse+0x3950>
movzbl 0x808ddd0(%ebp),%ecx
mov    0x48(%esp),%edi
mov    %cl,(%edi)
test   %eax,%eax
je     807be2d <argp_parse+0x3eed>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
jne    807b878 <argp_parse+0x3938>
lea    0x1(%edx),%eax
mov    %eax,0x48(%esp)
movb   $0x42,(%edx)
mov    0xbc(%esp),%edi
xor    %gs:0x14,%edi
mov    0x48(%esp),%eax
movb   $0x0,(%eax)
mov    %ebx,%eax
jne    807be1f <argp_parse+0x3edf>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80861a0 <argp_parse+0xe260>
mov    %eax,%ecx
mov    %edx,%ebx
mov    0x54(%esp),%edx
mov    %eax,0x78(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0x70(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,%ebp
mov    %ecx,%eax
imul   %ebx,%ebp
mov    %edx,%ebx
mull   0x50(%esp)
imul   %ecx,%ebx
mov    %eax,0x20(%esp)
mov    0x70(%esp),%eax
add    %ebp,%ebx
mov    %edx,0x24(%esp)
add    %ebx,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80861a0 <argp_parse+0xe260>
mov    0x50(%esp),%ecx
mov    0x54(%esp),%ebx
xor    %ecx,%eax
xor    %ebx,%edx
or     %eax,%edx
jne    807b12d <argp_parse+0x31ed>
xor    %ebx,%ebx
movl   $0x0,0x50(%esp)
mov    0xec(%esp),%eax
and    $0x10,%eax
mov    %eax,0x7c(%esp)
je     807ba28 <argp_parse+0x3ae8>
xor    %edi,%edi
mov    0x40(%esp),%esi
cmpl   $0x0,0x24(%esp)
jbe    807bc48 <argp_parse+0x3d08>
xor    %ebp,%ebp
mov    %ebp,%ecx
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x78(%esp)
call   80862d0 <argp_parse+0xe390>
mov    0x50(%esp),%ecx
xor    %edx,%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
lea    (%eax,%eax,4),%eax
lea    (%ecx,%eax,2),%eax
mov    %ebx,%ecx
divl   0x40(%esp)
sar    %ecx
lea    (%ecx,%edx,2),%ebp
mov    0x24(%esp),%ecx
mov    0x20(%esp),%edx
mov    %eax,0x70(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   80861a0 <argp_parse+0xe260>
mov    0x78(%esp),%ecx
cmp    %ebp,0x40(%esp)
mov    %eax,0x20(%esp)
mov    0x70(%esp),%eax
mov    %edx,0x24(%esp)
mov    %eax,0x50(%esp)
jbe    807bcf8 <argp_parse+0x3db8>
add    %ebx,%ebp
setne  %bl
movzbl %bl,%ebx
add    $0x1,%ecx
cmp    0x24(%esp),%edi
jbe    807bcd8 <argp_parse+0x3d98>
cmpl   $0x0,0x24(%esp)
mov    %ecx,%ebp
jbe    807bd31 <argp_parse+0x3df1>
mov    0x48(%esp),%esi
jmp    807ba31 <argp_parse+0x3af1>
mov    0x44(%esp),%eax
sub    %ebx,%esi
mov    $0xffffffff,%edi
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,0x4(%esp)
add    %esi,%ebx
movl   $0x29,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x20(%esp)
lea    0x93(%esp),%eax
mov    %eax,(%esp)
call   804a860 <__memcpy_chk@plt>
mov    %ebx,%eax
mov    %edi,%ebx
mov    %ebp,0x60(%esp)
mov    %eax,%edi
mov    0x6c(%esp),%ebp
jmp    807b832 <argp_parse+0x38f2>
mov    0x20(%esp),%eax
sub    %eax,%edi
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
movzbl 0x0(%ebp),%eax
test   %al,%al
je     807b847 <argp_parse+0x3907>
movzbl %al,%edx
cmp    $0x7e,%al
mov    %edx,%ebx
cmova  %esi,%ebx
add    $0x1,%ebp
cmp    %esi,%ebx
cmova  %esi,%ebx
sub    %ebx,%esi
sub    %ebx,%edi
lea    0x93(%esp),%eax
add    %esi,%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a4e0 <memcpy@plt>
test   %esi,%esi
jne    807b818 <argp_parse+0x38d8>
mov    0x60(%esp),%ebp
mov    %edi,%ebx
jmp    807b5d4 <argp_parse+0x3694>
test   %ebp,%ebp
je     807b643 <argp_parse+0x3703>
movb   $0x69,(%edx)
add    $0x1,%edx
jmp    807b643 <argp_parse+0x3703>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebp
mov    $0x6b,%ecx
jne    807b622 <argp_parse+0x36e2>
jmp    807b629 <argp_parse+0x36e9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%edi
lea    0x289(%edi),%esi
mov    %esi,0x48(%esp)
movb   $0x20,0x288(%edi)
jmp    807b607 <argp_parse+0x36c7>
lea    0x0(%esi),%esi
flds   0x8086bd0
fxch   %st(1)
fucomi %st(1),%st
jae    807bb38 <argp_parse+0x3bf8>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%edi
xor    %eax,%eax
xor    %edx,%edx
test   %edi,%edi
jne    807b958 <argp_parse+0x3a18>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     807bd0a <argp_parse+0x3dca>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomip %st(1),%st
fstp   %st(0)
jp     807b95a <argp_parse+0x3a1a>
je     807bcb0 <argp_parse+0x3d70>
jmp    807b95a <argp_parse+0x3a1a>
fstp   %st(0)
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
jns    807b55d <argp_parse+0x361d>
fadds  0x8086bcc
jmp    807b55d <argp_parse+0x361d>
xchg   %ax,%ax
fld    %st(0)
jmp    807b2aa <argp_parse+0x336a>
nop
fadds  0x8086bcc
jmp    807b16f <argp_parse+0x322f>
nop
lea    0x0(%esi,%eiz,1),%esi
fadds  0x8086bcc
jmp    807b194 <argp_parse+0x3254>
nop
lea    0x0(%esi,%eiz,1),%esi
fadds  0x8086bcc
jmp    807b152 <argp_parse+0x3212>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x0,0x3c(%esp)
ja     807b9d4 <argp_parse+0x3a94>
xor    %ebp,%ebp
cmpl   $0x1,0x38(%esp)
jbe    807b5e7 <argp_parse+0x36a7>
mov    0x40(%esp),%esi
mov    $0x1,%edx
xor    %ecx,%ecx
mov    %edx,%eax
xor    %edi,%edi
mov    $0x1,%ebp
mov    %ecx,%edx
mov    %ebx,0x20(%esp)
xchg   %ax,%ax
mov    %edx,%ecx
mov    %edi,%ebx
imul   %eax,%ebx
imul   %esi,%ecx
mul    %esi
add    %ebx,%ecx
add    %ecx,%edx
cmp    %edx,0x3c(%esp)
ja     807ba18 <argp_parse+0x3ad8>
jb     807ba0e <argp_parse+0x3ace>
cmp    %eax,0x38(%esp)
ja     807ba18 <argp_parse+0x3ad8>
mov    0x20(%esp),%ebx
jmp    807b5e7 <argp_parse+0x36a7>
nop
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    807b9f0 <argp_parse+0x3ab0>
jmp    807ba0e <argp_parse+0x3ace>
lea    0x0(%esi),%esi
mov    0x48(%esp),%esi
mov    $0xffffffff,%ebp
cmpl   $0x1,0x58(%esp)
je     807bc10 <argp_parse+0x3cd0>
mov    0x58(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jne    807ba4f <argp_parse+0x3b0f>
add    0x50(%esp),%ebx
test   %ebx,%ebx
setg   %al
test   %al,%al
je     807bac8 <argp_parse+0x3b88>
mov    0x7c(%esp),%edi
addl   $0x1,0x20(%esp)
adcl   $0x0,0x24(%esp)
test   %edi,%edi
je     807bac8 <argp_parse+0x3b88>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    0x24(%esp),%edx
mov    %eax,%ecx
xor    0x20(%esp),%eax
or     %eax,%edx
jne    807bac8 <argp_parse+0x3b88>
cmp    $0x8,%ebp
mov    %ecx,0x20(%esp)
mov    %ebx,0x24(%esp)
je     807bac8 <argp_parse+0x3b88>
add    $0x1,%ebp
testb  $0x8,0xec(%esp)
movl   $0x1,0x20(%esp)
movl   $0x0,0x24(%esp)
jne    807bac8 <argp_parse+0x3b88>
mov    0x68(%esp),%edi
lea    -0x1(%esi),%eax
movb   $0x30,-0x1(%esi)
sub    %edi,%eax
mov    %eax,%esi
mov    0x60(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
xchg   %ax,%ax
mov    %esi,%ebx
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    $0x1,%ebx
mov    0x24(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <argp_parse+0xe390>
mov    0x24(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x20(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80861a0 <argp_parse+0xe260>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jne    807bad0 <argp_parse+0x3b90>
jmp    807b5c6 <argp_parse+0x3686>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    807b918 <argp_parse+0x39d8>
lea    0x0(%esi),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    807b243 <argp_parse+0x3303>
lea    0x0(%esi),%esi
ja     807bbf8 <argp_parse+0x3cb8>
cmp    0x70(%esp),%esi
ja     807bbf8 <argp_parse+0x3cb8>
cmp    0x74(%esp),%ebx
jbe    807be36 <argp_parse+0x3ef6>
mov    $0x2,%ebx
jmp    807b704 <argp_parse+0x37c4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
xor    %ebx,%ebx
mov    0x74(%esp),%edx
mov    %eax,%edi
or     %edx,%edi
setne  %bl
jmp    807b704 <argp_parse+0x37c4>
xchg   %ax,%ax
mov    0x20(%esp),%eax
movl   $0x0,0x5c(%esp)
and    $0x1,%eax
mov    %eax,0x58(%esp)
mov    %ebx,%eax
cltd
add    0x58(%esp),%eax
adc    0x5c(%esp),%edx
mov    %eax,%edi
xor    %eax,%eax
or     %edx,%edi
mov    0x50(%esp),%edi
setne  %al
add    %eax,%edi
cmp    $0x5,%edi
setg   %al
jmp    807ba4f <argp_parse+0x3b0f>
cmp    %esi,0x20(%esp)
jae    807b729 <argp_parse+0x37e9>
mov    0x48(%esp),%esi
xor    %ebp,%ebp
jmp    807ba31 <argp_parse+0x3af1>
lea    0x0(%esi),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    807b38f <argp_parse+0x344f>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
jmp    807b95a <argp_parse+0x3a1a>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
jmp    807b281 <argp_parse+0x3341>
fadds  0x8086bcc
fxch   %st(1)
jmp    807b2aa <argp_parse+0x336a>
xchg   %ax,%ax
jb     807bce4 <argp_parse+0x3da4>
cmp    0x20(%esp),%esi
ja     807b7ba <argp_parse+0x387a>
cmp    $0x8,%ecx
jne    807b730 <argp_parse+0x37f0>
mov    %ecx,%ebp
mov    0x48(%esp),%esi
jmp    807ba31 <argp_parse+0x3af1>
add    %ebp,%ebx
cmp    %ebx,0x40(%esp)
sbb    %ebx,%ebx
not    %ebx
add    $0x3,%ebx
jmp    807b7ad <argp_parse+0x386d>
fadds  0x8086bcc
fxch   %st(1)
jmp    807b943 <argp_parse+0x3a03>
fadds  0x8086bcc
fxch   %st(1)
jmp    807b26e <argp_parse+0x332e>
fadds  0x8086bcc
fxch   %st(1)
jmp    807b3ba <argp_parse+0x347a>
cmpl   $0x9,0x20(%esp)
ja     807b7c7 <argp_parse+0x3887>
cmpl   $0x1,0x58(%esp)
je     807bdcc <argp_parse+0x3e8c>
mov    0x58(%esp),%ecx
test   %ebx,%ebx
setg   %al
test   %ecx,%ecx
sete   %dl
and    %edx,%eax
test   %al,%al
je     807bdb0 <argp_parse+0x3e70>
mov    0x70(%esp),%eax
add    $0x1,%eax
cmp    $0xa,%eax
mov    %eax,0x50(%esp)
je     807bdf1 <argp_parse+0x3eb1>
movzbl 0x50(%esp),%eax
xor    %ebx,%ebx
mov    0x4c(%esp),%edi
add    $0x30,%eax
mov    %al,0x287(%edi)
mov    0x68(%esp),%eax
lea    0x287(%edi),%esi
sub    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a4e0 <memcpy@plt>
movl   $0x0,0x50(%esp)
jmp    807ba31 <argp_parse+0x3af1>
mov    0x70(%esp),%eax
test   %eax,%eax
jne    807bd6f <argp_parse+0x3e2f>
testb  $0x8,0xec(%esp)
jne    807bde0 <argp_parse+0x3ea0>
movl   $0x0,0x50(%esp)
jmp    807bd6f <argp_parse+0x3e2f>
mov    0x70(%esp),%eax
and    $0x1,%eax
add    %ebx,%eax
cmp    $0x2,%eax
setg   %al
jmp    807bd57 <argp_parse+0x3e17>
mov    0x48(%esp),%esi
movl   $0x0,0x50(%esp)
jmp    807ba31 <argp_parse+0x3af1>
addl   $0x1,0x20(%esp)
mov    0x20(%esp),%esi
adcl   $0x0,0x24(%esp)
mov    0x24(%esp),%edi
mov    %esi,%eax
xor    $0xa,%eax
or     %edi,%eax
jne    807be4b <argp_parse+0x3f0b>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movl   $0x0,0x50(%esp)
jmp    807ba31 <argp_parse+0x3af1>
call   804a610 <__stack_chk_fail@plt>
mov    0x48(%esp),%edx
jmp    807b62f <argp_parse+0x36ef>
mov    %edx,0x48(%esp)
jmp    807b64d <argp_parse+0x370d>
jb     807b53a <argp_parse+0x35fa>
cmp    0x70(%esp),%esi
jae    807bbea <argp_parse+0x3caa>
jmp    807b53a <argp_parse+0x35fa>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
jmp    807bdb8 <argp_parse+0x3e78>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%ebx
mov    0x48(%esp),%esi
test   %ebx,%ebx
je     807bf90 <argp_parse+0x4050>
xor    %edi,%edi
cmpb   $0x27,(%ebx)
je     807bf08 <argp_parse+0x3fc8>
movl   $0x4,0xc(%esp)
movl   $0x808ddbc,0x8(%esp)
movl   $0x808ddc4,0x4(%esp)
mov    %ebx,(%esp)
call   80743b0 <fchmod@plt+0x29410>
test   %eax,%eax
js     807bf18 <argp_parse+0x3fd8>
or     0x808ddbc(,%eax,4),%edi
mov    $0x1,%edx
movl   $0x1,(%esi)
xor    %ecx,%ecx
movl   $0x0,0x4(%esi)
mov    0x44(%esp),%eax
mov    %edi,(%eax)
xor    %eax,%eax
or     %edx,%ecx
je     807bed8 <argp_parse+0x3f98>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x808dd85,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     807bf80 <argp_parse+0x4040>
mov    $0x200,%eax
xor    %edx,%edx
mov    %eax,(%esi)
mov    $0x4,%eax
mov    %edx,0x4(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    $0x4,%di
jmp    807be81 <argp_parse+0x3f41>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
movl   $0x808dd95,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80818f0 <argp_parse+0x99b0>
test   %eax,%eax
jne    807bfe0 <argp_parse+0x40a0>
movzbl (%ebx),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    807bf75 <argp_parse+0x4035>
mov    0x2c(%esp),%edx
cmp    %edx,%ebx
jne    807bf68 <argp_parse+0x4028>
jmp    807bff8 <argp_parse+0x40b8>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%ebx
je     807bff8 <argp_parse+0x40b8>
add    $0x1,%ebx
movzbl (%ebx),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     807bf60 <argp_parse+0x4020>
mov    (%esi),%edx
mov    0x4(%esi),%ecx
jmp    807bec0 <argp_parse+0x3f80>
nop
mov    $0x400,%eax
xor    %edx,%edx
jmp    807bef3 <argp_parse+0x3fb3>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x808dd70,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    807be76 <argp_parse+0x3f36>
movl   $0x808dd7b,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    807be76 <argp_parse+0x3f36>
movl   $0x808dd85,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     807c022 <argp_parse+0x40e2>
mov    $0x200,%edx
xor    %ecx,%ecx
mov    %edx,(%esi)
xor    %edi,%edi
mov    %ecx,0x4(%esi)
jmp    807bec0 <argp_parse+0x3f80>
nop
mov    0x44(%esp),%edx
mov    0x4(%esi),%ecx
movl   $0x0,(%edx)
mov    (%esi),%edx
jmp    807bec8 <argp_parse+0x3f88>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x42,-0x1(%edx)
je     807c010 <argp_parse+0x40d0>
or     $0x80,%edi
or     $0x20,%edi
jmp    807bf75 <argp_parse+0x4035>
lea    0x0(%esi,%eiz,1),%esi
or     $0x180,%edi
cmpb   $0x69,-0x2(%edx)
jne    807bf75 <argp_parse+0x4035>
jmp    807c004 <argp_parse+0x40c4>
mov    $0x400,%edx
xor    %ecx,%ecx
jmp    807bfd3 <argp_parse+0x4093>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
test   %ebx,%ebx
lea    0x14(%eax),%edi
movb   $0x0,0x14(%eax)
js     807c0a8 <argp_parse+0x4168>
xchg   %ax,%ax
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085fd0 <argp_parse+0xe090>
add    $0x30,%eax
mov    %al,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    807c050 <argp_parse+0x4110>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x30,%ebp
lea    0x0(%esi),%esi
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085fd0 <argp_parse+0xe090>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %cl,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    807c0b0 <argp_parse+0x4170>
mov    %edi,%eax
sub    $0x1,%edi
movb   $0x2d,-0x1(%eax)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
test   %ebx,%ebx
lea    0x14(%eax),%edi
movb   $0x0,0x14(%eax)
js     807c188 <argp_parse+0x4248>
xchg   %ax,%ax
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085fd0 <argp_parse+0xe090>
add    $0x30,%eax
mov    %al,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    807c130 <argp_parse+0x41f0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x30,%ebp
lea    0x0(%esi),%esi
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085fd0 <argp_parse+0xe090>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %cl,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8085e50 <argp_parse+0xdf10>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    807c190 <argp_parse+0x4250>
mov    %edi,%eax
sub    $0x1,%edi
movb   $0x2d,-0x1(%eax)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
lea    0x14(%eax),%edi
movb   $0x0,0x14(%eax)
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   80862d0 <argp_parse+0xe390>
add    $0x30,%eax
mov    %al,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   80861a0 <argp_parse+0xe260>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    807c210 <argp_parse+0x42d0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   804ac90 <nl_langinfo@plt>
mov    0x809e0b0,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x808d3ee,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     807c33c <argp_parse+0x43fc>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     807c307 <argp_parse+0x43c7>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    807c2e0 <argp_parse+0x43a0>
nop
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     807c338 <argp_parse+0x43f8>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     807c2fb <argp_parse+0x43bb>
cmp    $0x2a,%bl
jne    807c2c0 <argp_parse+0x4380>
cmpb   $0x0,0x1(%ebp)
jne    807c2c0 <argp_parse+0x4380>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x808ddf9,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    807c5fd <argp_parse+0x46bd>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    807c307 <argp_parse+0x43c7>
movl   $0x808ddff,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
je     807c355 <argp_parse+0x4415>
cmpb   $0x0,(%eax)
jne    807c563 <argp_parse+0x4623>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x808ddf0,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     807c554 <argp_parse+0x4614>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     807c5f3 <argp_parse+0x46b3>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804a4e0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     807c3bc <argp_parse+0x447c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   804a410 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     807c538 <argp_parse+0x45f8>
movl   $0x8089290,0x4(%esp)
mov    %eax,(%esp)
call   804a8c0 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     807c530 <argp_parse+0x45f0>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    807c516 <argp_parse+0x45d6>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     807c420 <argp_parse+0x44e0>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    807c420 <argp_parse+0x44e0>
cmp    $0x23,%eax
je     807c58d <argp_parse+0x464d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804aaa0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x808de0f,0x4(%esp)
mov    %esi,(%esp)
call   804a940 <fscanf@plt>
cmp    $0x1,%eax
jle    807c5b0 <argp_parse+0x4670>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    807c5ce <argp_parse+0x468e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   804a800 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     807c602 <argp_parse+0x46c2>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   804a780 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     807c42c <argp_parse+0x44ec>
mov    %esi,(%esp)
call   804ac80 <__uflow@plt>
cmp    $0xffffffff,%eax
je     807c5b0 <argp_parse+0x4670>
jmp    807c435 <argp_parse+0x44f5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804aef0 <close@plt>
mov    $0x808d3ee,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebp,0x809e0b0
jmp    807c2af <argp_parse+0x436f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    807c37b <argp_parse+0x443b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   804a950 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     807c554 <argp_parse+0x4614>
lea    -0x1(%eax),%eax
jmp    807c364 <argp_parse+0x4424>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     807c5a7 <argp_parse+0x4667>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    807c61c <argp_parse+0x46dc>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    807c588 <argp_parse+0x4648>
cmp    $0xffffffff,%eax
jne    807c420 <argp_parse+0x44e0>
mov    %esi,(%esp)
call   804a540 <fclose@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     807c538 <argp_parse+0x45f8>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    807c53d <argp_parse+0x45fd>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   804a7e0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    807c4cc <argp_parse+0x458c>
mov    $0x808d3ee,%ebp
jmp    807c549 <argp_parse+0x4609>
call   804a610 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x808d3ee,%ebp
call   804a4c0 <free@plt>
mov    %esi,(%esp)
call   804a540 <fclose@plt>
jmp    807c53d <argp_parse+0x45fd>
mov    %esi,(%esp)
call   804ac80 <__uflow@plt>
jmp    807c5a2 <argp_parse+0x4662>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804a4a0 <wcwidth@plt>
test   %eax,%eax
jns    807c654 <argp_parse+0x4714>
mov    %ebx,(%esp)
call   804a680 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     807c698 <argp_parse+0x4758>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     807c690 <argp_parse+0x4750>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   804a4e0 <memcpy@plt>
mov    %edi,(%esi)
jmp    807c679 <argp_parse+0x4739>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x808de20(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%esi
mov    0xc4(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
cmp    %edi,%esi
je     807cb70 <argp_parse+0x4c30>
call   804a750 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    807c7e0 <argp_parse+0x48a0>
movb   $0x0,0x2c(%esp)
cmpb   $0x0,0x2c(%esp)
mov    %esi,0x3c(%esp)
lea    0x30(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x38(%esp)
mov    %edi,0x74(%esp)
movb   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
jne    807c980 <argp_parse+0x4a40>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x808de20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    807cab0 <argp_parse+0x4b70>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    807c862 <argp_parse+0x4922>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    807cb78 <argp_parse+0x4c38>
mov    $0x1,%eax
xchg   %ax,%ax
mov    0x9c(%esp),%esi
xor    %gs:0x14,%esi
jne    807ccb1 <argp_parse+0x4d71>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   804af60 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    807c7fe <argp_parse+0x48be>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0x1,%edi
cmp    %dl,%bl
jne    807cc58 <argp_parse+0x4d18>
movzbl (%esi),%ebx
movzbl %bl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     807c81e <argp_parse+0x48de>
mov    %ecx,0x1c(%esp)
call   804af40 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%ebx
movzbl (%edi),%edx
movzbl %dl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     807c83e <argp_parse+0x48fe>
mov    %ecx,0x1c(%esp)
call   804af40 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%edx
test   %bl,%bl
jne    807c7f0 <argp_parse+0x48b0>
xor    %eax,%eax
sub    %edx,%eax
jmp    807c7c0 <argp_parse+0x4880>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
movb   $0x1,0x38(%esp)
movzbl 0x70(%esp),%ebx
test   %bl,%bl
je     807c8c8 <argp_parse+0x4988>
movzbl 0x7c(%esp),%ebx
test   %bl,%bl
jne    807c91f <argp_parse+0x49df>
cmpb   $0x0,0x44(%esp)
jne    807cc68 <argp_parse+0x4d28>
mov    0x40(%esp),%eax
mov    0x78(%esp),%edx
cmp    %edx,%eax
je     807cb10 <argp_parse+0x4bd0>
cmp    %eax,%edx
jbe    807cae8 <argp_parse+0x4ba8>
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
lea    -0x1(%eax,%eax,1),%eax
jmp    807c7c0 <argp_parse+0x4880>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    807ca21 <argp_parse+0x4ae1>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x808de20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    807ca08 <argp_parse+0x4ac8>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
test   %bl,%bl
movb   $0x1,0x70(%esp)
je     807c878 <argp_parse+0x4938>
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     807ccfe <argp_parse+0x4dbe>
cmpb   $0x0,0x44(%esp)
je     807c7b9 <argp_parse+0x4879>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a520 <towlower@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804a520 <towlower@plt>
sub    %eax,%ebx
mov    %ebx,%eax
test   %eax,%eax
jne    807c7c0 <argp_parse+0x4880>
mov    0x40(%esp),%eax
add    %eax,0x3c(%esp)
mov    0x78(%esp),%eax
add    %eax,0x74(%esp)
cmpb   $0x0,0x2c(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     807c768 <argp_parse+0x4828>
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8080e80 <argp_parse+0x8f40>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     807c850 <argp_parse+0x4910>
cmp    $0xfffffffe,%eax
je     807cb30 <argp_parse+0x4bf0>
test   %eax,%eax
jne    807c9e8 <argp_parse+0x4aa8>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    807ccb6 <argp_parse+0x4d76>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    807ccda <argp_parse+0x4d9a>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807c79b <argp_parse+0x485b>
movb   $0x0,0x2c(%esp)
jmp    807c79b <argp_parse+0x485b>
nop
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807cc8d <argp_parse+0x4d4d>
movb   $0x1,0x64(%esp)
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8080e80 <argp_parse+0x8f40>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     807cad0 <argp_parse+0x4b90>
cmp    $0xfffffffe,%eax
je     807cb50 <argp_parse+0x4c10>
test   %eax,%eax
jne    807ca8b <argp_parse+0x4b4b>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    807ccb6 <argp_parse+0x4d76>
mov    0x80(%esp),%eax
test   %eax,%eax
jne    807ccda <argp_parse+0x4d9a>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807c912 <argp_parse+0x49d2>
movb   $0x0,0x64(%esp)
jmp    807c912 <argp_parse+0x49d2>
nop
mov    %esi,(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807cc8d <argp_parse+0x4d4d>
movb   $0x1,0x2c(%esp)
jmp    807c980 <argp_parse+0x4a40>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
jmp    807c912 <argp_parse+0x49d2>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
sar    $0x1f,%eax
or     $0x1,%eax
jmp    807c7c0 <argp_parse+0x4880>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a580 <memcmp@plt>
jmp    807c953 <argp_parse+0x4a13>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    807c85d <argp_parse+0x491d>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    807c912 <argp_parse+0x49d2>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    807c7c0 <argp_parse+0x4880>
nop
mov    0x48(%esp),%esi
test   %esi,%esi
jne    807c7b9 <argp_parse+0x4879>
cmpb   $0x0,0x70(%esp)
jne    807cc72 <argp_parse+0x4d32>
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    807cbd2 <argp_parse+0x4c92>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x808de20(,%ecx,4),%ecx
bt     %eax,%ecx
jb     807cc79 <argp_parse+0x4d39>
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807cc8d <argp_parse+0x4d4d>
movb   $0x1,0x64(%esp)
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8080e80 <argp_parse+0x8f40>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
mov    %eax,0x78(%esp)
jbe    807cc68 <argp_parse+0x4d28>
test   %eax,%eax
jne    807cc38 <argp_parse+0x4cf8>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    807ccb6 <argp_parse+0x4d76>
mov    0x80(%esp),%ecx
test   %ecx,%ecx
jne    807ccda <argp_parse+0x4d9a>
xchg   %ax,%ax
test   %bl,%bl
je     807cc68 <argp_parse+0x4d28>
mov    0x80(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
neg    %eax
jmp    807c7c0 <argp_parse+0x4880>
lea    0x0(%esi,%eiz,1),%esi
movzbl %bl,%eax
sub    %edx,%eax
jmp    807c7c0 <argp_parse+0x4880>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    807c7c0 <argp_parse+0x4880>
movzbl 0x7c(%esp),%ebx
jmp    807cc38 <argp_parse+0x4cf8>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    %eax,0x80(%esp)
jmp    807cc38 <argp_parse+0x4cf8>
movl   $0x808de40,0xc(%esp)
movl   $0x95,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dc7a,(%esp)
call   804af50 <__assert_fail@plt>
call   804a610 <__stack_chk_fail@plt>
movl   $0x808de40,0xc(%esp)
movl   $0xb1,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dc91,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808de40,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x808dc70,0x4(%esp)
movl   $0x808dca8,(%esp)
call   804af50 <__assert_fail@plt>
cmpb   $0x0,0x38(%esp)
jne    807c7ac <argp_parse+0x486c>
cmpb   $0x0,0x2c(%esp)
lea    0x30(%esp),%esi
jne    807cd6e <argp_parse+0x4e2e>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x808de20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    807cd55 <argp_parse+0x4e15>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     807c7b9 <argp_parse+0x4879>
jmp    807cb78 <argp_parse+0x4c38>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807cc8d <argp_parse+0x4d4d>
movb   $0x1,0x2c(%esp)
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8080e80 <argp_parse+0x8f40>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     807cded <argp_parse+0x4ead>
cmp    $0xfffffffe,%eax
je     807ce01 <argp_parse+0x4ec1>
test   %eax,%eax
jne    807cdce <argp_parse+0x4e8e>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    807ccb6 <argp_parse+0x4d76>
mov    0x48(%esp),%edi
test   %edi,%edi
jne    807ccda <argp_parse+0x4d9a>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807cd43 <argp_parse+0x4e03>
movb   $0x0,0x2c(%esp)
jmp    807cd43 <argp_parse+0x4e03>
movl   $0x1,0x40(%esp)
xor    %ebx,%ebx
movb   $0x0,0x44(%esp)
jmp    807cd43 <argp_parse+0x4e03>
mov    0x3c(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   804a950 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    807cd43 <argp_parse+0x4e03>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
movsbl (%ebx),%eax
lea    -0x30(%eax),%edx
cmp    $0x7,%dl
mov    %ebx,%edx
jbe    807ced0 <argp_parse+0x4f90>
test   %al,%al
mov    $0x1,%esi
je     807d0fb <argp_parse+0x51bb>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
mov    $0x1,%ecx
je     807ce63 <argp_parse+0x4f23>
and    $0xffffffef,%eax
xor    %ecx,%ecx
cmp    $0x2d,%al
sete   %cl
add    $0x1,%edx
movzbl (%edx),%eax
add    %ecx,%esi
test   %al,%al
jne    807ce50 <argp_parse+0x4f10>
cmp    $0xfffffff,%esi
ja     807d13d <argp_parse+0x51fd>
shl    $0x4,%esi
mov    %esi,(%esp)
xor    %ebp,%ebp
call   8081640 <argp_parse+0x9700>
mov    %eax,0xc(%esp)
xor    %edi,%edi
movzbl (%ebx),%eax
cmp    $0x61,%al
je     807d050 <argp_parse+0x5110>
jle    807cef8 <argp_parse+0x4fb8>
cmp    $0x6f,%al
je     807d070 <argp_parse+0x5130>
cmp    $0x75,%al
je     807d068 <argp_parse+0x5128>
cmp    $0x67,%al
lea    0x0(%esi),%esi
je     807d060 <argp_parse+0x5120>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    807cee7 <argp_parse+0x4fa7>
lea    0x0(%esi,%eiz,1),%esi
movsbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x7,%cl
ja     807d078 <argp_parse+0x5138>
lea    -0x30(%eax,%esi,8),%esi
add    $0x1,%edx
cmp    $0xfff,%esi
jbe    807ced8 <argp_parse+0x4f98>
jmp    807cec2 <argp_parse+0x4f82>
cmp    $0x2d,%al
je     807cf06 <argp_parse+0x4fc6>
cmp    $0x3d,%al
xchg   %ax,%ax
je     807cf06 <argp_parse+0x4fc6>
cmp    $0x2b,%al
jne    807ceb6 <argp_parse+0x4f76>
mov    %ebp,%esi
add    $0x1,%ebp
shl    $0x4,%esi
mov    %al,0xb(%esp)
add    0xc(%esp),%esi
jmp    807cf72 <argp_parse+0x5032>
cmp    $0x6f,%cl
je     807d038 <argp_parse+0x50f8>
cmp    $0x75,%cl
jne    807cfc0 <argp_parse+0x5080>
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x1c0,%eax
movzbl 0xb(%esp),%ecx
mov    %dl,0x1(%esi)
mov    %eax,%edx
and    %edi,%edx
test   %edi,%edi
mov    %eax,0x8(%esi)
cmovne %edx,%eax
mov    %cl,(%esi)
mov    %edi,0x4(%esi)
mov    %eax,0xc(%esi)
movzbl (%ebx),%eax
cmp    $0x2b,%al
je     807cf68 <argp_parse+0x5028>
mov    %eax,%edx
and    $0xffffffef,%edx
cmp    $0x2d,%dl
jne    807d104 <argp_parse+0x51c4>
add    $0x10,%esi
add    $0x1,%ebp
mov    %al,0xb(%esp)
movsbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%eax
cmp    $0x67,%cl
je     807d020 <argp_parse+0x50e0>
jg     807cf18 <argp_parse+0x4fd8>
lea    -0x30(%ecx),%edx
cmp    $0x7,%dl
ja     807cfc0 <argp_parse+0x5080>
xor    %edx,%edx
xchg   %ax,%ax
jmp    807cfa7 <argp_parse+0x5067>
lea    0x0(%esi),%esi
movsbl (%eax),%ecx
lea    -0x30(%ecx),%ebx
cmp    $0x7,%bl
ja     807d0c8 <argp_parse+0x5188>
lea    -0x30(%ecx,%edx,8),%edx
add    $0x1,%eax
cmp    $0xfff,%edx
jbe    807cf98 <argp_parse+0x5058>
jmp    807cec2 <argp_parse+0x4f82>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    $0x1,%edx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
sub    $0x58,%ecx
cmp    $0x20,%cl
ja     807cf37 <argp_parse+0x4ff7>
movzbl %cl,%ecx
jmp    *0x808de54(,%ecx,4)
xchg   %ax,%ax
mov    $0x2,%edx
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl (%ebx),%ecx
jmp    807cfd0 <argp_parse+0x5090>
or     $0x49,%eax
jmp    807cff0 <argp_parse+0x50b0>
lea    0x0(%esi),%esi
or     $0x92,%al
jmp    807cff0 <argp_parse+0x50b0>
lea    0x0(%esi,%eiz,1),%esi
or     $0x2,%ah
jmp    807cff0 <argp_parse+0x50b0>
lea    0x0(%esi),%esi
or     $0xc,%ah
jmp    807cff0 <argp_parse+0x50b0>
lea    0x0(%esi),%esi
or     $0x124,%eax
jmp    807cff0 <argp_parse+0x50b0>
nop
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x38,%eax
jmp    807cf37 <argp_parse+0x4ff7>
lea    0x0(%esi),%esi
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x7,%eax
jmp    807cf37 <argp_parse+0x4ff7>
lea    0x0(%esi),%esi
mov    $0xfff,%edi
add    $0x1,%ebx
jmp    807ce8e <argp_parse+0x4f4e>
lea    0x0(%esi),%esi
or     $0x438,%edi
jmp    807d055 <argp_parse+0x5115>
or     $0x9c0,%edi
jmp    807d055 <argp_parse+0x5115>
or     $0x207,%edi
jmp    807d055 <argp_parse+0x5115>
test   %al,%al
jne    807cec2 <argp_parse+0x4f82>
sub    %ebx,%edx
mov    $0xfff,%ebx
cmp    $0x4,%edx
jg     807d09a <argp_parse+0x515a>
mov    %esi,%ebx
and    $0xc00,%ebx
or     $0x3ff,%ebx
movl   $0x20,(%esp)
call   8081640 <argp_parse+0x9700>
movb   $0x3d,(%eax)
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %esi,0x8(%eax)
mov    %ebx,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %edi,%edi
jne    807cec2 <argp_parse+0x4f82>
cmp    $0x2c,%cl
jne    807d110 <argp_parse+0x51d0>
movzbl 0xb(%esp),%ebx
mov    $0xfff,%edi
movb   $0x1,0x1(%esi)
movl   $0xfff,0x4(%esi)
mov    %edx,0x8(%esi)
mov    %bl,(%esi)
mov    %eax,%ebx
mov    $0xfff,%eax
jmp    807cf50 <argp_parse+0x5010>
mov    $0x10,%si
jmp    807ce7e <argp_parse+0x4f3e>
cmp    $0x2c,%al
jne    807d120 <argp_parse+0x51e0>
add    $0x1,%ebx
jmp    807ce8c <argp_parse+0x4f4c>
test   %cl,%cl
je     807d0d5 <argp_parse+0x5195>
jmp    807cec2 <argp_parse+0x4f82>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    807ceb6 <argp_parse+0x4f76>
mov    0xc(%esp),%edi
mov    %ebp,%eax
shl    $0x4,%eax
movb   $0x0,0x1(%edi,%eax,1)
mov    %edi,%eax
jmp    807cec4 <argp_parse+0x4f84>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x78,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804ae60 <__xstat64@plt>
xor    %edx,%edx
test   %eax,%eax
jne    807d1a7 <argp_parse+0x5267>
movl   $0x20,(%esp)
mov    0x20(%esp),%ebx
call   8081640 <argp_parse+0x9700>
movb   $0x3d,(%eax)
mov    %eax,%edx
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %ebx,0x8(%eax)
movl   $0xfff,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x78,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xd,%esp
mov    0x2d(%esp),%ecx
mov    0x21(%esp),%eax
movzbl 0x25(%esp),%edx
movl   $0x0,0x5(%esp)
movzbl 0x1(%ecx),%esi
and    $0xfff,%eax
mov    %dl,(%esp)
mov    %esi,%ebx
test   %bl,%bl
je     807d2f4 <argp_parse+0x53b4>
movzbl %dl,%edi
mov    %edi,0x9(%esp)
mov    0x29(%esp),%edi
mov    %eax,0x21(%esp)
not    %edi
mov    %edi,0x1(%esp)
jmp    807d283 <argp_parse+0x5343>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3,%al
jne    807d247 <argp_parse+0x5307>
and    0x21(%esp),%ebx
mov    %ebx,%ebp
and    $0x124,%ebx
cmp    $0x1,%ebx
mov    %ebp,%ebx
sbb    %esi,%esi
and    $0x92,%ebx
not    %esi
and    $0x124,%esi
cmp    $0x1,%ebx
sbb    %ebx,%ebx
not    %ebx
and    $0x92,%ebx
or     %esi,%ebx
mov    %ebp,%esi
and    $0x49,%esi
cmp    $0x1,%esi
sbb    %esi,%esi
not    %esi
and    $0x49,%esi
or     %esi,%ebx
or     %ebp,%ebx
mov    0x1(%esp),%ebp
mov    %edx,%esi
test   %edi,%edi
not    %esi
cmovne %edi,%ebp
and    %ebx,%esi
movzbl (%ecx),%ebx
and    %ebp,%esi
cmp    $0x2d,%bl
je     807d310 <argp_parse+0x53d0>
cmp    $0x3d,%bl
je     807d2c0 <argp_parse+0x5380>
cmp    $0x2b,%bl
jne    807d276 <argp_parse+0x5336>
or     %esi,0x5(%esp)
or     %esi,0x21(%esp)
add    $0x10,%ecx
movzbl 0x1(%ecx),%esi
mov    %esi,%eax
test   %al,%al
je     807d2f0 <argp_parse+0x53b0>
cmpb   $0x1,(%esp)
mov    %esi,%eax
mov    0xc(%ecx),%ebx
mov    0x4(%ecx),%edi
sbb    %edx,%edx
not    %edx
and    $0xc00,%edx
not    %ebx
and    %ebx,%edx
cmp    $0x2,%al
mov    0x8(%ecx),%ebx
jne    807d200 <argp_parse+0x52c0>
mov    0x21(%esp),%ebp
mov    %ebx,%esi
or     $0x49,%esi
and    $0x49,%ebp
or     0x9(%esp),%ebp
cmovne %esi,%ebx
jmp    807d247 <argp_parse+0x5307>
lea    0x0(%esi),%esi
mov    %edi,%ebp
xor    %ebx,%ebx
not    %ebp
test   %edi,%edi
cmovne %ebp,%ebx
add    $0x10,%ecx
or     %edx,%ebx
and    %ebx,0x21(%esp)
mov    %ebx,%edx
or     %esi,0x21(%esp)
not    %edx
movzbl 0x1(%ecx),%esi
and    $0xfff,%edx
or     %edx,0x5(%esp)
mov    %esi,%eax
test   %al,%al
jne    807d283 <argp_parse+0x5343>
mov    0x21(%esp),%eax
mov    0x31(%esp),%edx
test   %edx,%edx
je     807d306 <argp_parse+0x53c6>
mov    0x31(%esp),%edi
mov    0x5(%esp),%ecx
mov    %ecx,(%edi)
add    $0xd,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
or     %esi,0x5(%esp)
not    %esi
and    %esi,0x21(%esp)
jmp    807d276 <argp_parse+0x5336>
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x808ded8,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x809d7cc,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
call   804ae30 <abort@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x808df04,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x809d7cc,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804a7c0 <error@plt>
call   804ae30 <abort@plt>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x5c(%eax),%eax
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%edi
test   %eax,%eax
je     807d3bf <argp_parse+0x547f>
mov    0x20(%ecx),%edx
test   %edx,%edx
je     807d408 <argp_parse+0x54c8>
cmp    $0x4,%edi
ja     807d438 <argp_parse+0x54f8>
addl   $0x1,0x6c(%ecx)
cmp    $0x2,%edi
jbe    807d428 <argp_parse+0x54e8>
mov    %ebx,%eax
mov    $0x51eb851f,%edx
imul   %edx
mov    %ebx,%eax
sar    $0x1f,%eax
sar    $0x5,%edx
sub    %eax,%edx
mov    %edx,0x2c(%ecx)
imul   $0x64,%edx,%edx
sub    %edx,%ebx
mov    %ebx,0x30(%ecx)
movl   $0x0,0x34(%ecx)
movl   $0x0,0x38(%ecx)
movl   $0x2,0x14(%ecx)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x59(%ecx)
jne    807d3bf <argp_parse+0x547f>
mov    0x6c(%ecx),%eax
test   %eax,%eax
jne    807d498 <argp_parse+0x5558>
cmp    $0x2,%edi
ja     807d498 <argp_parse+0x5558>
movl   $0x1,0x6c(%ecx)
lea    0x0(%esi),%esi
mov    %ebx,0x2c(%ecx)
movl   $0x0,0x30(%ecx)
jmp    807d3eb <argp_parse+0x54ab>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    $0x51eb851f,%ebp
mov    %eax,0x5c(%ecx)
mov    %ebx,%eax
sub    $0x4,%edi
imul   %ebp
mov    %ebx,%eax
sar    $0x1f,%eax
mov    %eax,(%esp)
mov    %edi,0x20(%ecx)
mov    %edx,%esi
mov    %ebx,%edx
sar    $0x5,%esi
sub    %eax,%esi
imul   $0x64,%esi,%eax
sub    %eax,%edx
mov    %esi,%eax
mov    %edx,0x28(%ecx)
imul   %ebp
mov    %esi,%ebp
sar    $0x1f,%ebp
mov    %ebx,%eax
sar    $0x5,%edx
sub    %ebp,%edx
imul   $0x64,%edx,%edx
sub    %edx,%esi
mov    $0x68db8bad,%edx
imul   %edx
mov    %esi,0x24(%ecx)
sar    $0xc,%edx
sub    (%esp),%edx
mov    %edx,0x1c(%ecx)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    %eax,0x18(%ecx)
mov    0x1c(%esp),%eax
mov    %eax,0x1c(%ecx)
mov    0x20(%esp),%eax
mov    %eax,0x20(%ecx)
jmp    807d400 <argp_parse+0x54c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x20(%esp),%edx
mov    0x1c(%esp),%ecx
movb   $0x1,0x59(%eax)
imul   %edx,%ecx
add    %ecx,0x54(%eax)
mov    0x18(%esp),%ecx
imul   %edx,%ecx
add    %ecx,0x50(%eax)
mov    0x14(%esp),%ecx
imul   %edx,%ecx
add    %ecx,0x4c(%eax)
mov    0x10(%esp),%ecx
imul   %edx,%ecx
add    %ecx,0x48(%eax)
mov    0xc(%esp),%ecx
imul   %edx,%ecx
add    %ecx,0x44(%eax)
mov    0x8(%esp),%ecx
imul   %edx,%ecx
imul   0x4(%esp),%edx
add    %ecx,0x40(%eax)
add    %edx,0x3c(%eax)
ret
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
cmp    $0xffffffff,%ecx
mov    %ecx,0xc(%esp)
je     807d558 <argp_parse+0x5618>
mov    0x4(%edx),%ecx
mov    (%edx),%eax
xor    (%ebx),%eax
xor    0x4(%ebx),%ecx
or     %eax,%ecx
mov    0x8(%edx),%eax
xor    0x8(%ebx),%eax
or     %eax,%ecx
mov    0xc(%edx),%eax
xor    0xc(%ebx),%eax
or     %eax,%ecx
mov    0x10(%edx),%eax
xor    0x10(%ebx),%eax
or     %eax,%ecx
mov    0x14(%edx),%eax
xor    0x14(%ebx),%eax
or     %eax,%ecx
sete   %al
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esp),%eax
mov    %eax,(%esp)
call   804a8f0 <localtime@plt>
test   %eax,%eax
mov    %eax,%edx
jne    807d51f <argp_parse+0x55df>
xor    %eax,%eax
jmp    807d54e <argp_parse+0x560e>
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
movl   $0x808df32,(%esp)
call   804a7d0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
je     807d5ab <argp_parse+0x566b>
mov    %eax,(%esp)
call   804a950 <strlen@plt>
lea    0x1(%eax),%edx
cmp    $0x64,%edx
ja     807d5b8 <argp_parse+0x5678>
mov    %ebx,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
call   804a4e0 <memcpy@plt>
mov    %eax,%ebx
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   8081850 <argp_parse+0x9910>
add    $0x14,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
mov    0x10(%esp),%ebx
cmpl   $0x2,0xc(%esp)
ja     807d610 <argp_parse+0x56d0>
test   %ebx,%ebx
js     807d630 <argp_parse+0x56f0>
imul   $0x3c,%ecx,%ecx
mov    %ebx,%eax
neg    %eax
test   %dl,%dl
cmovne %eax,%ebx
add    %ebx,%ecx
mov    %ecx,%eax
sar    $0x1f,%eax
mov    %eax,%edx
xor    %ecx,%edx
sub    %eax,%edx
cmp    $0x5a0,%edx
jle    807d607 <argp_parse+0x56c7>
addl   $0x1,(%esi)
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
jns    807d5e3 <argp_parse+0x56a3>
mov    %ecx,%eax
mov    $0x51eb851f,%edx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x5,%edx
sub    %eax,%edx
imul   $0xffffffd8,%edx,%edx
add    %edx,%ecx
jmp    807d5f1 <argp_parse+0x56b1>
xchg   %ax,%ax
imul   $0x64,%ecx,%ecx
jmp    807d614 <argp_parse+0x56d4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0x808df35,%ecx
push   %esi
mov    %eax,%edi
push   %ebx
mov    %edx,%esi
sub    $0x10,%esp
mov    $0x808e680,%ebx
jmp    807d661 <argp_parse+0x5721>
xchg   %ax,%ax
add    $0xc,%ebx
mov    (%ebx),%ecx
test   %ecx,%ecx
je     807d680 <argp_parse+0x5740>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807d658 <argp_parse+0x5718>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%edi),%edx
lea    0x74(%edi),%ebx
test   %edx,%edx
jne    807d6c9 <argp_parse+0x5789>
lea    0x0(%esi),%esi
mov    $0x808e440,%ebx
mov    $0x808df39,%eax
jmp    807d6a9 <argp_parse+0x5769>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     807d6e0 <argp_parse+0x57a0>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807d6a0 <argp_parse+0x5760>
jmp    807d671 <argp_parse+0x5731>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%ebx
mov    (%ebx),%edx
test   %edx,%edx
je     807d690 <argp_parse+0x5750>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807d6c0 <argp_parse+0x5780>
jmp    807d671 <argp_parse+0x5731>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    $0xfffffffe,%edi
push   %esi
push   %ebx
sub    $0x2fc,%esp
mov    0x310(%esp),%eax
lea    0x80(%esp),%ebp
mov    %gs:0x14,%esi
mov    %esi,0x2ec(%esp)
xor    %esi,%esi
lea    0xa8(%esp),%esi
mov    %ebp,%ebx
mov    %dx,0x80(%esp)
mov    %esi,0x28(%esp)
mov    %eax,0x44(%esp)
add    $0x70,%eax
movl   $0x0,0x40(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x48(%esp)
mov    %edi,0x20(%esp)
mov    0x24(%esp),%eax
movsbl 0x808eb00(%eax),%ebp
cmp    $0xffffffa3,%ebp
je     807d7aa <argp_parse+0x586a>
cmpl   $0xfffffffe,0x20(%esp)
je     807da10 <argp_parse+0x5ad0>
mov    0x20(%esp),%edi
test   %edi,%edi
jle    807d9e8 <argp_parse+0x5aa8>
cmp    $0x115,%edi
mov    $0x2,%eax
ja     807d792 <argp_parse+0x5852>
mov    0x20(%esp),%eax
movzbl 0x808ece0(%eax),%eax
lea    0x0(%ebp,%eax,1),%edx
cmp    $0x70,%edx
ja     807d7aa <argp_parse+0x586a>
movsbl 0x808e9e0(%edx),%ecx
cmp    %eax,%ecx
je     807d868 <argp_parse+0x5928>
mov    0x24(%esp),%eax
movzbl 0x808eba0(%eax),%esi
test   %esi,%esi
jne    807d880 <argp_parse+0x5940>
cmpl   $0x3,0x40(%esp)
je     807d9f8 <argp_parse+0x5ab8>
mov    0x28(%esp),%edx
jmp    807d7ef <argp_parse+0x58af>
xchg   %ax,%ax
lea    0x80(%esp),%eax
cmp    %eax,%ebx
je     807d9b8 <argp_parse+0x5a78>
sub    $0x2,%ebx
movswl (%ebx),%eax
sub    $0x1c,%edx
movsbl 0x808eb00(%eax),%ebp
cmp    $0xffffffa3,%ebp
je     807d7d0 <argp_parse+0x5890>
add    $0x1,%ebp
cmp    $0x70,%ebp
ja     807d7d0 <argp_parse+0x5890>
cmpb   $0x1,0x808e9e0(%ebp)
jne    807d7d0 <argp_parse+0x5890>
movzbl 0x808ea60(%ebp),%eax
test   %eax,%eax
je     807d7d0 <argp_parse+0x5890>
mov    %edx,0x28(%esp)
mov    0x4c(%esp),%esi
mov    %eax,0x24(%esp)
mov    %edx,%eax
mov    0x64(%esp),%edx
mov    0x50(%esp),%edi
addl   $0x1c,0x28(%esp)
mov    %edx,0x1c(%eax)
mov    0x70(%esp),%edx
mov    %esi,0x20(%eax)
mov    %edi,0x24(%eax)
mov    %esi,0x68(%esp)
mov    %edx,0x28(%eax)
mov    0x74(%esp),%edx
mov    %edi,0x6c(%esp)
movl   $0x3,0x40(%esp)
mov    %edx,0x2c(%eax)
mov    0x78(%esp),%edx
mov    %edx,0x30(%eax)
mov    0x7c(%esp),%edx
mov    %edx,0x34(%eax)
mov    %ebx,%eax
jmp    807d985 <argp_parse+0x5a45>
nop
movzbl 0x808ea60(%edx),%eax
test   %eax,%eax
mov    %eax,0x24(%esp)
jne    807db44 <argp_parse+0x5c04>
xor    %esi,%esi
lea    0x0(%esi),%esi
movzbl 0x808ec20(%esi),%edi
mov    $0x1,%eax
sub    %edi,%eax
imul   $0x1c,%eax,%eax
add    0x28(%esp),%eax
mov    (%eax),%ecx
mov    0x8(%eax),%ebp
mov    %ecx,0x24(%esp)
mov    0x4(%eax),%ecx
mov    %ecx,0x2c(%esp)
mov    0xc(%eax),%ecx
mov    %ecx,0x3c(%esp)
mov    0x10(%eax),%ecx
mov    %ecx,0x38(%esp)
mov    0x14(%eax),%ecx
mov    0x18(%eax),%eax
mov    %ecx,0x34(%esp)
mov    %eax,0x30(%esp)
lea    -0x4(%esi),%eax
cmp    $0x57,%eax
ja     807d908 <argp_parse+0x59c8>
jmp    *0x808e1a0(,%eax,4)
mov    0x28(%esp),%eax
mov    -0x18(%eax),%eax
mov    %eax,0x34(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
xor    %ebp,%ebp
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
lea    0x0(%esi),%esi
imul   $0x1c,%edi,%eax
mov    0x28(%esp),%edx
add    %edi,%edi
sub    %eax,%edx
mov    %ebx,%eax
sub    %edi,%eax
lea    0x1c(%edx),%edi
mov    %edi,0x28(%esp)
mov    0x24(%esp),%edi
mov    %ebp,0x24(%edx)
mov    %edi,0x1c(%edx)
mov    0x2c(%esp),%edi
mov    %edi,0x20(%edx)
mov    0x3c(%esp),%edi
mov    %edi,0x28(%edx)
mov    0x38(%esp),%edi
mov    %edi,0x2c(%edx)
mov    0x34(%esp),%edi
mov    %edi,0x30(%edx)
mov    0x30(%esp),%edi
mov    %edi,0x34(%edx)
movzbl 0x808ec80(%esi),%edx
movzwl (%eax),%esi
sub    $0x1c,%edx
movsbl 0x808ead1(%edx),%edi
movswl %si,%ecx
add    %edi,%ecx
cmp    $0x70,%ecx
ja     807d97a <argp_parse+0x5a3a>
movsbw 0x808e9e0(%ecx),%di
cmp    %di,%si
je     807dba1 <argp_parse+0x5c61>
movsbl 0x808eb72(%edx),%esi
mov    %esi,0x24(%esp)
mov    0x24(%esp),%esi
lea    0x2(%eax),%ebx
mov    %si,0x2(%eax)
lea    0xa6(%esp),%eax
cmp    %eax,%ebx
jae    807e5b0 <argp_parse+0x6670>
cmp    $0xc,%esi
jne    807d753 <argp_parse+0x5813>
xor    %eax,%eax
jmp    807d9bd <argp_parse+0x5a7d>
lea    0x0(%esi,%eiz,1),%esi
jne    807d7c8 <argp_parse+0x5888>
xchg   %ax,%ax
mov    $0x1,%eax
mov    0x2ec(%esp),%esi
xor    %gs:0x14,%esi
jne    807e888 <argp_parse+0x6948>
add    $0x2fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
movl   $0x0,0x20(%esp)
jmp    807d792 <argp_parse+0x5852>
nop
cmpl   $0x0,0x20(%esp)
jle    807d9ac <argp_parse+0x5a6c>
movl   $0xfffffffe,0x20(%esp)
mov    0x28(%esp),%edx
jmp    807d7ef <argp_parse+0x58af>
mov    0x44(%esp),%edi
mov    %ebx,0x30(%esp)
mov    %ebp,0x34(%esp)
mov    (%edi),%eax
movzbl (%eax),%esi
mov    %esi,%ecx
mov    %edi,%esi
mov    %cl,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x20(%esp),%edx
lea    -0x9(%edx),%ecx
cmp    $0x4,%cl
jbe    807db30 <argp_parse+0x5bf0>
cmp    $0x20,%dl
je     807db30 <argp_parse+0x5bf0>
movzbl %dl,%ebp
cmp    $0x2d,%dl
lea    -0x30(%ebp),%edi
sete   %cl
cmp    $0x9,%edi
setbe  %bl
or     %cl,%bl
mov    %bl,0x2c(%esp)
jne    807dac0 <argp_parse+0x5b80>
cmp    $0x2b,%dl
je     807dad3 <argp_parse+0x5b93>
mov    %ebp,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
jbe    807e660 <argp_parse+0x6720>
cmpb   $0x28,0x20(%esp)
jne    807e7d9 <argp_parse+0x6899>
xor    %ebx,%ebx
jmp    807daa5 <argp_parse+0x5b65>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x29,%cl
sete   %cl
movzbl %cl,%ecx
sub    %ecx,%ebx
test   %ebx,%ebx
je     807db35 <argp_parse+0x5bf5>
mov    %edx,%eax
lea    0x1(%eax),%edx
mov    %edx,(%esi)
movzbl -0x1(%edx),%ecx
test   %cl,%cl
je     807d9dc <argp_parse+0x5a9c>
cmp    $0x28,%cl
jne    807da90 <argp_parse+0x5b50>
add    $0x1,%ebx
jmp    807da9b <argp_parse+0x5b5b>
cmpb   $0x2b,0x20(%esp)
jne    807e5f7 <argp_parse+0x66b7>
test   %cl,%cl
jne    807dbf7 <argp_parse+0x5cb7>
mov    $0x1,%ecx
mov    %eax,%edx
add    $0x1,%edx
mov    %edx,(%esi)
movzbl (%edx),%ebx
lea    -0x9(%ebx),%eax
cmp    $0x4,%al
jbe    807dada <argp_parse+0x5b9a>
cmp    $0x20,%bl
je     807dada <argp_parse+0x5b9a>
movzbl %bl,%edi
sub    $0x30,%edi
cmp    $0x9,%edi
ja     807dbb1 <argp_parse+0x5c71>
movzbl 0x1(%edx),%eax
mov    0x30(%esp),%ebx
mov    %ecx,0x2c(%esp)
mov    0x34(%esp),%ebp
mov    %edi,%ecx
lea    0x1(%edx),%edi
movzbl %al,%esi
mov    %al,0x30(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%eax
mov    %edx,%eax
ja     807e471 <argp_parse+0x6531>
mov    %edx,0x20(%esp)
jmp    807dbdd <argp_parse+0x5c9d>
lea    0x1(%eax),%edx
mov    %edx,(%esi)
movzbl 0x1(%eax),%eax
mov    %al,0x20(%esp)
mov    %edx,%eax
jmp    807da30 <argp_parse+0x5af0>
mov    0x28(%esp),%esi
mov    0x64(%esp),%eax
mov    0x4c(%esp),%edi
mov    0x50(%esp),%ecx
cmpl   $0x1,0x40(%esp)
mov    %eax,0x1c(%esi)
mov    0x70(%esp),%eax
adcl   $0xffffffff,0x40(%esp)
mov    %edi,0x68(%esp)
mov    %eax,0x28(%esi)
mov    0x74(%esp),%eax
mov    %ecx,0x6c(%esp)
mov    %edi,0x20(%esi)
mov    %ecx,0x24(%esi)
mov    %eax,0x2c(%esi)
mov    0x78(%esp),%eax
movl   $0xfffffffe,0x20(%esp)
mov    %eax,0x30(%esi)
mov    0x7c(%esp),%eax
mov    %eax,0x34(%esi)
lea    0x1c(%esi),%eax
mov    %eax,0x28(%esp)
mov    %ebx,%eax
jmp    807d985 <argp_parse+0x5a45>
movzbl 0x808ea60(%ecx),%esi
mov    %esi,0x24(%esp)
jmp    807d985 <argp_parse+0x5a45>
mov    %bl,0x20(%esp)
mov    %edx,%eax
jmp    807da30 <argp_parse+0x5af0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%eax
movzbl %al,%esi
lea    -0x30(%esi),%edx
cmp    $0x9,%edx
ja     807e469 <argp_parse+0x6529>
cmp    $0x19999999,%ecx
ja     807dbea <argp_parse+0x5caa>
lea    (%ecx,%ecx,4),%eax
add    %eax,%eax
lea    -0x30(%eax,%esi,1),%ecx
cmp    %eax,%ecx
jae    807dbc0 <argp_parse+0x5c80>
movl   $0x3f,0x20(%esp)
jmp    807d787 <argp_parse+0x5847>
mov    $0xffffffff,%ecx
jmp    807dad8 <argp_parse+0x5b98>
mov    0x28(%esp),%ecx
mov    -0x1c(%ecx),%eax
mov    %eax,(%esp)
mov    -0x18(%ecx),%eax
mov    %eax,0x4(%esp)
mov    -0x14(%ecx),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
call   807d3a0 <argp_parse+0x5460>
mov    0x28(%esp),%ecx
movl   $0x1,0x1c(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
mov    0x4(%ecx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ecx),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ecx),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ecx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ecx),%eax
mov    %eax,0x14(%esp)
mov    0x18(%ecx),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
call   807d4c0 <argp_parse+0x5580>
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%eax
mov    %eax,0x24(%esp)
xor    %ebp,%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%ebp
imul   (%eax),%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%eax
mov    %eax,0x3c(%esp)
xor    %ebp,%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%eax
mov    %eax,0x38(%esp)
xor    %ebp,%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%eax
mov    %eax,0x2c(%esp)
xor    %ebp,%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    (%eax),%ebp
jmp    807dcaf <argp_parse+0x5d6f>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%ecx
mov    -0x18(%eax),%eax
mov    %ecx,0x34(%esp)
mov    %eax,0x30(%esp)
jmp    807d8e3 <argp_parse+0x59a3>
mov    0x28(%esp),%edx
mov    -0x18(%edx),%ecx
mov    -0x88(%edx),%eax
mov    %ecx,0x54(%esp)
mov    -0x1c(%edx),%ecx
mov    %ecx,0x58(%esp)
mov    -0x50(%edx),%ecx
mov    %ecx,0x5c(%esp)
mov    %eax,%ecx
mov    0x44(%esp),%eax
mov    %ecx,0x2c(%eax)
mov    0x5c(%esp),%ecx
mov    %ecx,0x30(%eax)
mov    0x58(%esp),%ecx
mov    %ecx,0x34(%eax)
mov    0x54(%esp),%ecx
mov    %ecx,0x38(%eax)
mov    0x44(%esp),%ecx
mov    (%edx),%eax
mov    %eax,0x14(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x18(%ecx),%eax
mov    -0x50(%ecx),%edx
mov    0x44(%esp),%ecx
mov    %eax,0x30(%ecx)
mov    0x28(%esp),%eax
mov    %edx,0x2c(%ecx)
movl   $0x0,0x34(%ecx)
movl   $0x0,0x38(%ecx)
mov    (%eax),%eax
mov    %eax,0x14(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x70(%eax)
mov    0x28(%esp),%eax
mov    -0x18(%eax),%ecx
movzbl -0x1c(%eax),%edx
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    -0x14(%eax),%eax
mov    %eax,(%esp)
mov    0x48(%esp),%eax
call   807d5d0 <argp_parse+0x5690>
mov    0x44(%esp),%ecx
mov    %eax,0x10(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x18(%eax),%ecx
mov    %ecx,0x54(%esp)
mov    -0x1c(%eax),%ecx
mov    %ecx,0x58(%esp)
mov    -0x50(%eax),%ecx
mov    -0x88(%eax),%eax
mov    %eax,%edx
mov    0x44(%esp),%eax
mov    %ecx,0x30(%eax)
mov    0x58(%esp),%ecx
mov    %edx,0x2c(%eax)
movl   $0x2,0x14(%eax)
mov    %ecx,0x34(%eax)
mov    0x54(%esp),%ecx
mov    %ecx,0x38(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x18(%ecx),%eax
mov    -0x50(%ecx),%edx
mov    0x44(%esp),%ecx
mov    %edx,0x2c(%ecx)
mov    %eax,0x30(%ecx)
movl   $0x0,0x34(%ecx)
movl   $0x0,0x38(%ecx)
movl   $0x2,0x14(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    -0x18(%eax),%eax
movl   $0x0,0x30(%ecx)
movl   $0x0,0x34(%ecx)
movl   $0x0,0x38(%ecx)
mov    %eax,0x2c(%ecx)
movl   $0x2,0x14(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
movl   $0x1a4,0x10(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    (%eax),%eax
mov    %eax,0x10(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%eax
jmp    807dd3d <argp_parse+0x5dfd>
movl   $0x0,0x30(%esp)
xor    %ebp,%ebp
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x1,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%eax
jmp    807dceb <argp_parse+0x5dab>
mov    0x28(%esp),%ecx
mov    (%ecx),%eax
mov    %eax,0x1c(%esp)
mov    -0x1c(%ecx),%eax
mov    %eax,(%esp)
mov    -0x18(%ecx),%eax
mov    %eax,0x4(%esp)
mov    -0x14(%ecx),%eax
mov    %eax,0x8(%esp)
mov    -0x10(%ecx),%eax
mov    %eax,0xc(%esp)
mov    -0xc(%ecx),%eax
mov    %eax,0x10(%esp)
mov    -0x8(%ecx),%eax
mov    %eax,0x14(%esp)
mov    -0x4(%ecx),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
call   807d4c0 <argp_parse+0x5580>
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%eax
jmp    807dc72 <argp_parse+0x5d32>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x38(%ecx),%eax
mov    %eax,0x18(%edx)
mov    -0x34(%ecx),%eax
mov    %eax,0x1c(%edx)
mov    -0x30(%ecx),%eax
mov    %eax,0x20(%edx)
mov    -0x18(%ecx),%eax
neg    %eax
mov    %eax,0x24(%edx)
mov    0x4(%ecx),%eax
neg    %eax
mov    %eax,0x28(%edx)
jmp    807d908 <argp_parse+0x59c8>
movl   $0x0,0x30(%esp)
movl   $0x1,0x34(%esp)
jmp    807d8e3 <argp_parse+0x59a3>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%eax
jmp    807d8d7 <argp_parse+0x5997>
movl   $0x0,0x30(%esp)
xor    %ebp,%ebp
movl   $0x0,0x34(%esp)
movl   $0x1,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    (%ecx),%eax
mov    %eax,(%esp)
mov    0x4(%ecx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ecx),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
call   807d3a0 <argp_parse+0x5460>
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%ecx
mov    0x28(%esp),%eax
movl   $0x1,0xc(%ecx)
mov    -0x1c(%eax),%eax
test   %eax,%eax
setg   %al
movzbl %al,%eax
add    $0x1,%eax
add    %eax,0x68(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%ecx)
setg   %al
movzbl %al,%eax
add    %eax,0x68(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x34(%ecx),%eax
mov    %eax,0x28(%edx)
mov    -0x1c(%ecx),%eax
mov    %eax,0x24(%edx)
mov    (%ecx),%eax
mov    %eax,0x18(%edx)
mov    0x4(%ecx),%eax
mov    %eax,0x1c(%edx)
mov    0x8(%ecx),%eax
mov    %eax,0x20(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x18(%ecx),%eax
mov    %eax,0x28(%edx)
mov    (%ecx),%eax
mov    %eax,0x24(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x54(%ecx),%eax
mov    0x44(%esp),%edx
mov    %eax,0x24(%edx)
mov    -0x34(%ecx),%eax
mov    %eax,0x28(%edx)
jmp    807e0f4 <argp_parse+0x61b4>
mov    0x28(%esp),%ecx
mov    -0x1c(%ecx),%eax
mov    0x44(%esp),%edx
mov    %eax,0x24(%edx)
mov    0x4(%ecx),%eax
mov    %eax,0x28(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x38(%ecx),%eax
mov    %eax,0x24(%edx)
mov    -0x18(%ecx),%eax
neg    %eax
mov    %eax,0x28(%edx)
mov    0x4(%ecx),%eax
neg    %eax
mov    %eax,0x1c(%edx)
mov    0x8(%ecx),%eax
mov    %eax,0x20(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x34(%ecx),%eax
mov    %eax,0x28(%edx)
mov    -0x1c(%ecx),%eax
mov    %eax,0x24(%edx)
jmp    807e167 <argp_parse+0x6227>
mov    0x28(%esp),%eax
cmpl   $0x3,-0x68(%eax)
jbe    807e5eb <argp_parse+0x66ab>
mov    %eax,%ecx
mov    0x44(%esp),%edx
mov    -0x70(%eax),%eax
mov    %eax,0x18(%edx)
mov    -0x6c(%ecx),%eax
mov    %eax,0x1c(%edx)
mov    -0x68(%ecx),%eax
mov    %eax,0x20(%edx)
mov    -0x34(%ecx),%eax
mov    %eax,0x24(%edx)
mov    0x4(%ecx),%eax
mov    %eax,0x28(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x34(%ecx),%eax
jmp    807e13f <argp_parse+0x61ff>
mov    0x44(%esp),%ecx
mov    0x28(%esp),%eax
movl   $0x0,0x4(%ecx)
mov    -0x1c(%eax),%eax
mov    %eax,0x8(%ecx)
jmp    807d908 <argp_parse+0x59c8>
movl   $0x0,0x30(%esp)
xor    %ebp,%ebp
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x1,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%ebp
imul   (%eax),%ebp
jmp    807dcaf <argp_parse+0x5d6f>
movl   $0x0,0x30(%esp)
xor    %ebp,%ebp
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x1,0x2c(%esp)
movl   $0x0,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x18(%ecx),%eax
mov    0x44(%esp),%edx
mov    %eax,0x4(%edx)
mov    (%ecx),%eax
mov    %eax,0x8(%edx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    -0x1c(%ecx),%eax
jmp    807e271 <argp_parse+0x6331>
movl   $0xffffffff,0x24(%esp)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x1c(%eax),%eax
jmp    807dd77 <argp_parse+0x5e37>
mov    0x28(%esp),%edx
mov    0x44(%esp),%ecx
mov    -0x18(%edx),%eax
movl   $0x0,0x30(%ecx)
movl   $0x0,0x34(%ecx)
movl   $0x0,0x38(%ecx)
mov    %eax,0x2c(%ecx)
mov    (%edx),%eax
mov    %eax,0x14(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x60(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x5c(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x70(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x64(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x6c(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%eax
addl   $0x1,0x6c(%eax)
addl   $0x1,0x5c(%eax)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
movb   $0x1,0x58(%ecx)
mov    %edx,0x38(%ecx)
mov    %eax,0x34(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x44(%esp),%ecx
mov    0x28(%esp),%eax
movl   $0x0,0x4(%ecx)
mov    (%eax),%eax
mov    %eax,0x8(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    -0x1c(%eax),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%eax
mov    %eax,0x10(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    0x44(%esp),%ecx
mov    (%eax),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%eax
mov    %eax,0x10(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%eax
mov    -0x38(%eax),%ecx
movzbl -0x1c(%eax),%edx
mov    %ecx,0x54(%esp)
mov    -0x18(%eax),%ecx
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    -0x14(%eax),%eax
mov    %eax,(%esp)
mov    0x48(%esp),%eax
call   807d5d0 <argp_parse+0x5690>
mov    0x44(%esp),%ecx
add    0x54(%esp),%eax
mov    %eax,0x10(%ecx)
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
movl   $0x1a4,0x10(%edx)
movl   $0x1,0x1c(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
mov    0x4(%ecx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ecx),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ecx),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ecx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ecx),%eax
mov    %eax,0x14(%esp)
mov    0x18(%ecx),%eax
mov    %eax,0x18(%esp)
mov    %edx,%eax
call   807d4c0 <argp_parse+0x5580>
jmp    807d908 <argp_parse+0x59c8>
mov    0x28(%esp),%ecx
mov    0x44(%esp),%edx
mov    -0x1c(%ecx),%eax
mov    %eax,0x10(%edx)
movl   $0x1,0x1c(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
mov    0x4(%ecx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ecx),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ecx),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ecx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ecx),%eax
mov    %eax,0x14(%esp)
mov    0x18(%ecx),%eax
mov    %eax,0x18(%esp)
mov    %edx,%eax
call   807d4c0 <argp_parse+0x5580>
jmp    807d908 <argp_parse+0x59c8>
mov    %al,0x30(%esp)
mov    0x20(%esp),%eax
movzbl 0x30(%esp),%edx
and    $0xfffffffd,%edx
cmp    $0x2c,%dl
jne    807e560 <argp_parse+0x6620>
movsbl 0x1(%edi),%edx
lea    -0x30(%edx),%esi
cmp    $0x9,%esi
ja     807e560 <argp_parse+0x6620>
cmpl   $0xffffffff,0x2c(%esp)
mov    %ecx,%esi
je     807e640 <argp_parse+0x6700>
test   %ecx,%ecx
movl   $0x3f,0x20(%esp)
js     807d787 <argp_parse+0x5847>
movzbl 0x2(%edi),%ecx
lea    0x2(%edi),%eax
sub    $0x30,%edx
movl   $0x8,0x30(%esp)
mov    %cl,0x20(%esp)
movsbl %cl,%edi
lea    (%edx,%edx,4),%edx
lea    -0x30(%edi),%ecx
add    %edx,%edx
cmp    $0x9,%ecx
ja     807e4e8 <argp_parse+0x65a8>
add    %ecx,%edx
movzbl 0x1(%eax),%ecx
add    $0x1,%eax
movsbl %cl,%edi
mov    %cl,0x20(%esp)
lea    -0x30(%edi),%ecx
subl   $0x1,0x30(%esp)
jne    807e4c8 <argp_parse+0x6588>
cmpl   $0xffffffff,0x2c(%esp)
jne    807e509 <argp_parse+0x65c9>
jmp    807e88d <argp_parse+0x694d>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movsbl (%eax),%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    807e500 <argp_parse+0x65c0>
test   %edx,%edx
je     807e8c3 <argp_parse+0x6983>
mov    0x2c(%esp),%ecx
shr    $0x1f,%ecx
test   %cl,%cl
je     807e8c3 <argp_parse+0x6983>
sub    $0x1,%esi
movl   $0x3f,0x20(%esp)
jns    807d787 <argp_parse+0x5847>
mov    %esi,0x64(%esp)
mov    0x44(%esp),%esi
movl   $0x3b9aca00,0x4c(%esp)
movl   $0x114,0x20(%esp)
sub    %edx,0x4c(%esp)
mov    %eax,(%esi)
jmp    807d787 <argp_parse+0x5847>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%esi
mov    %esi,%edx
shr    $0x1f,%edx
cmp    $0xffffffff,%esi
mov    %dl,0x64(%esp)
je     807e5ba <argp_parse+0x667a>
test   %ecx,%ecx
mov    %ecx,0x4c(%esp)
movl   $0x3f,0x20(%esp)
js     807d787 <argp_parse+0x5847>
mov    %edi,%esi
sub    %eax,%esi
mov    0x44(%esp),%eax
cmpl   $0x1,0x2c(%esp)
mov    %esi,0x50(%esp)
mov    %edi,(%eax)
sbb    %eax,%eax
mov    %eax,0x20(%esp)
notl   0x20(%esp)
addl   $0x113,0x20(%esp)
jmp    807d787 <argp_parse+0x5847>
mov    $0x2,%eax
jmp    807d9bd <argp_parse+0x5a7d>
neg    %ecx
test   %ecx,%ecx
mov    %ecx,0x4c(%esp)
movl   $0x3f,0x20(%esp)
jg     807d787 <argp_parse+0x5847>
mov    %edi,%esi
sub    %eax,%esi
mov    0x44(%esp),%eax
mov    %esi,0x50(%esp)
movl   $0x112,0x20(%esp)
mov    %edi,(%eax)
jmp    807d787 <argp_parse+0x5847>
mov    0x28(%esp),%ecx
mov    -0x6c(%ecx),%eax
jmp    807e129 <argp_parse+0x61e9>
test   %cl,%cl
jne    807dbf7 <argp_parse+0x5cb7>
movzbl 0x1(%eax),%edx
mov    %edi,%ecx
mov    0x30(%esp),%ebx
lea    0x1(%eax),%edi
mov    0x34(%esp),%ebp
movzbl %dl,%esi
mov    %dl,0x30(%esp)
lea    -0x30(%esi),%edx
cmp    $0x9,%edx
ja     807e87b <argp_parse+0x693b>
cmp    $0x19999999,%ecx
ja     807dbea <argp_parse+0x5caa>
movl   $0x0,0x2c(%esp)
mov    %eax,0x20(%esp)
jmp    807dbdd <argp_parse+0x5c9d>
neg    %esi
test   %esi,%esi
movl   $0x3f,0x20(%esp)
jg     807d787 <argp_parse+0x5847>
add    %esi,%ecx
jne    807d787 <argp_parse+0x5847>
jmp    807e4af <argp_parse+0x656f>
nop
mov    0x30(%esp),%ebx
lea    0x2d8(%esp),%ecx
mov    0x34(%esp),%ebp
mov    0x44(%esp),%esi
mov    %ecx,%eax
lea    0x2d8(%esp),%edi
sub    %edi,%eax
cmp    $0x12,%eax
ja     807e688 <argp_parse+0x6748>
mov    %dl,(%ecx)
add    $0x1,%ecx
mov    (%esi),%eax
lea    0x1(%eax),%edx
mov    %edx,(%esi)
movzbl 0x1(%eax),%edx
mov    %edx,%eax
and    $0xdf,%eax
sub    $0x41,%eax
cmp    $0x19,%eax
jbe    807e673 <argp_parse+0x6733>
cmp    $0x2e,%dl
je     807e673 <argp_parse+0x6733>
movb   $0x0,(%ecx)
movzbl 0x2d8(%esp),%eax
lea    0x2d8(%esp),%edx
test   %al,%al
je     807e6d6 <argp_parse+0x6796>
lea    -0x61(%eax),%esi
cmp    $0x19,%esi
lea    -0x20(%eax),%ecx
cmovbe %ecx,%eax
add    $0x1,%edx
mov    %al,-0x1(%edx)
movzbl (%edx),%eax
test   %al,%al
jne    807e6bd <argp_parse+0x677d>
mov    $0x808e9a0,%esi
mov    $0x808df3d,%eax
jmp    807e6f1 <argp_parse+0x67b1>
lea    0x0(%esi),%esi
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     807e71d <argp_parse+0x67dd>
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807e6e8 <argp_parse+0x67a8>
mov    %esi,%eax
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %edx,0x64(%esp)
mov    %eax,0x20(%esp)
jmp    807d76e <argp_parse+0x582e>
lea    0x2d8(%esp),%eax
mov    %eax,%ecx
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     807e726 <argp_parse+0x67e6>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmovne %ecx,%edx
add    %al,%al
mov    %edx,0x20(%esp)
lea    0x2d8(%esp),%eax
sbbl   $0x3,0x20(%esp)
sub    %eax,0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x3,%eax
je     807e7f6 <argp_parse+0x68b6>
cmp    $0x4,%eax
je     807e869 <argp_parse+0x6929>
mov    $0x808e860,%esi
mov    $0x808df40,%eax
jmp    807e7b8 <argp_parse+0x6878>
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
movl   $0x3,0x8(%esp)
mov    %eax,(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
jne    807e708 <argp_parse+0x67c8>
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     807e800 <argp_parse+0x68c0>
cmpb   $0x0,0x2c(%esp)
jne    807e787 <argp_parse+0x6847>
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    807e7a7 <argp_parse+0x6867>
mov    0x44(%esp),%esi
lea    0x1(%eax),%edx
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
mov    %edx,(%esi)
movzbl (%eax),%eax
mov    %eax,0x20(%esp)
jmp    807d76e <argp_parse+0x582e>
movb   $0x1,0x2c(%esp)
jmp    807e77b <argp_parse+0x683b>
mov    0x44(%esp),%eax
lea    0x2d8(%esp),%edx
call   807d640 <argp_parse+0x5700>
test   %eax,%eax
jne    807e70a <argp_parse+0x67ca>
mov    $0x808df56,%edi
mov    $0x4,%ecx
lea    0x2d8(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     807e972 <argp_parse+0x6a32>
mov    $0x808e7c0,%esi
mov    $0x808df48,%eax
jmp    807e84d <argp_parse+0x690d>
lea    0x0(%esi),%esi
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     807e8f5 <argp_parse+0x69b5>
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807e840 <argp_parse+0x6900>
jmp    807e708 <argp_parse+0x67c8>
cmpb   $0x2e,0x2db(%esp)
sete   0x2c(%esp)
jmp    807e77b <argp_parse+0x683b>
movl   $0x0,0x2c(%esp)
jmp    807e471 <argp_parse+0x6531>
call   804a610 <__stack_chk_fail@plt>
cmp    $0x9,%ecx
ja     807e50e <argp_parse+0x65ce>
cmpb   $0x30,0x20(%esp)
je     807e8ad <argp_parse+0x696d>
lea    0x0(%esi),%esi
jmp    807e8ed <argp_parse+0x69ad>
lea    0x0(%esi),%esi
cmp    $0x30,%cl
jne    807e8ed <argp_parse+0x69ad>
add    $0x1,%eax
movzbl (%eax),%ecx
movsbl %cl,%edi
sub    $0x30,%edi
cmp    $0x9,%edi
jbe    807e8a8 <argp_parse+0x6968>
jmp    807e50e <argp_parse+0x65ce>
mov    %esi,0x64(%esp)
mov    0x44(%esp),%esi
cmpl   $0x1,0x2c(%esp)
mov    %edx,0x4c(%esp)
mov    %eax,(%esi)
sbb    %eax,%eax
mov    %eax,0x20(%esp)
notl   0x20(%esp)
addl   $0x115,0x20(%esp)
jmp    807d787 <argp_parse+0x5847>
add    $0x1,%edx
jmp    807e500 <argp_parse+0x65c0>
mov    0x20(%esp),%eax
lea    0x2d7(%esp,%eax,1),%edi
cmpb   $0x53,(%edi)
je     807e97c <argp_parse+0x6a3c>
mov    $0x808e6c0,%esi
mov    $0x808df4d,%eax
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     807e708 <argp_parse+0x67c8>
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    807e90f <argp_parse+0x69cf>
cmpl   $0x1,0x20(%esp)
movzbl 0x2d8(%esp),%edx
je     807e9e6 <argp_parse+0x6aa6>
xor    %esi,%esi
test   %dl,%dl
lea    0x2d8(%esp),%ecx
mov    %ecx,%eax
je     807dbea <argp_parse+0x5caa>
cmp    $0x2e,%dl
je     807e9dc <argp_parse+0x6a9c>
add    $0x1,%ecx
add    $0x1,%eax
movzbl (%eax),%edx
test   %dl,%dl
mov    %dl,(%ecx)
je     807e9b5 <argp_parse+0x6a75>
movzbl (%eax),%edx
jmp    807e959 <argp_parse+0x6a19>
mov    $0x808e98c,%eax
jmp    807e70a <argp_parse+0x67ca>
movb   $0x0,(%edi)
mov    $0x808e7c0,%esi
mov    $0x808df48,%eax
mov    %eax,0x4(%esp)
lea    0x2d8(%esp),%eax
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
je     807e708 <argp_parse+0x67c8>
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    807e989 <argp_parse+0x6a49>
movb   $0x53,(%edi)
jmp    807e905 <argp_parse+0x69c5>
mov    %esi,%eax
test   %al,%al
je     807dbea <argp_parse+0x5caa>
mov    0x44(%esp),%eax
lea    0x2d8(%esp),%edx
call   807d640 <argp_parse+0x5700>
test   %eax,%eax
jne    807e70a <argp_parse+0x67ca>
jmp    807dbea <argp_parse+0x5caa>
mov    $0x1,%esi
jmp    807e961 <argp_parse+0x6a21>
cmp    $0x41,%dl
mov    $0x808e300,%eax
je     807e70a <argp_parse+0x67ca>
add    $0xc,%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     807e946 <argp_parse+0x6a06>
cmp    %dl,(%ecx)
jne    807e9f4 <argp_parse+0x6ab4>
jmp    807e70a <argp_parse+0x67ca>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x21c,%esp
mov    0x230(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x20c(%esp)
xor    %esi,%esi
mov    0x234(%esp),%ebp
mov    %eax,0x38(%esp)
mov    0x238(%esp),%eax
test   %eax,%eax
je     807f411 <argp_parse+0x74d1>
mov    (%eax),%esi
mov    %esi,0x3c(%esp)
mov    0x4(%eax),%esi
mov    %eax,(%esp)
mov    %esi,0x2c(%esp)
call   804a8f0 <localtime@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     807f3d0 <argp_parse+0x7490>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp),%eax
lea    -0x9(%eax),%edx
cmp    $0x4,%dl
jbe    807eb18 <argp_parse+0x6bd8>
cmp    $0x20,%al
je     807eb18 <argp_parse+0x6bd8>
mov    $0x808df5a,%edi
mov    $0x4,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    807eb20 <argp_parse+0x6be0>
movzbl 0x4(%ebp),%edx
lea    0x4(%ebp),%esi
mov    %esi,0x30(%esp)
test   %dl,%dl
je     807f44a <argp_parse+0x750a>
lea    0x144(%esp),%ebx
mov    %esi,%eax
mov    %ebp,%ecx
mov    $0x1,%edi
xor    %esi,%esi
movb   $0x0,0x23(%esp)
mov    %ebx,0x1c(%esp)
mov    %ebp,0x34(%esp)
jmp    807eae9 <argp_parse+0x6ba9>
cmp    $0x22,%dl
je     807ed80 <argp_parse+0x6e40>
mov    %eax,%ebx
add    $0x1,%eax
movzbl 0x1(%ebx),%edx
add    $0x1,%edi
test   %dl,%dl
je     807eb0c <argp_parse+0x6bcc>
cmp    $0x5c,%dl
jne    807ead0 <argp_parse+0x6b90>
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ebx
cmp    $0x22,%dl
jne    807f3d7 <argp_parse+0x7497>
movzbl 0x1(%ebx),%edx
add    $0x2,%eax
add    $0x1,%edi
test   %dl,%dl
jne    807eae9 <argp_parse+0x6ba9>
movzbl (%ecx),%eax
mov    %ecx,%ebp
jmp    807eb32 <argp_parse+0x6bf2>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
jmp    807ea70 <argp_parse+0x6b30>
lea    0x144(%esp),%ecx
xor    %esi,%esi
movb   $0x0,0x23(%esp)
mov    %ecx,0x1c(%esp)
mov    0x28(%esp),%edi
test   %al,%al
mov    $0x808dcb8,%eax
cmove  %eax,%ebp
mov    %ebp,0xac(%esp)
mov    0x14(%edi),%eax
movl   $0x0,0xcc(%esp)
00
add    $0x76c,%eax
mov    %eax,0xc8(%esp)
mov    0x10(%edi),%eax
mov    %eax,0x24(%esp)
add    $0x1,%eax
mov    %eax,0xd0(%esp)
mov    0xc(%edi),%eax
mov    %eax,0xd4(%esp)
mov    0x8(%edi),%eax
mov    %eax,0xd8(%esp)
mov    0x4(%edi),%eax
mov    %eax,0xdc(%esp)
mov    (%edi),%eax
movl   $0x2,0xc0(%esp)
00
mov    %eax,0xe0(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xe4(%esp)
mov    0x20(%edi),%eax
mov    %eax,0x74(%esp)
xor    %eax,%eax
movl   $0x0,0xe8(%esp,%eax,1)
00
add    $0x4,%eax
cmp    $0x1c,%eax
jb     807ebb8 <argp_parse+0x6c78>
mov    0x28(%esp),%edi
lea    0x80(%esp),%ebx
movb   $0x0,0x104(%esp)
movb   $0x0,0x105(%esp)
movl   $0x0,0x108(%esp)
00
mov    0x28(%edi),%eax
movl   $0x0,0x10c(%esp)
00
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x110(%esp)
00
mov    %eax,0x120(%esp)
mov    0x20(%edi),%eax
xor    %edi,%edi
movl   $0x0,0x114(%esp)
00
movl   $0x0,0x11c(%esp)
00
movl   $0x10d,0x124(%esp)
00
mov    %eax,0x128(%esp)
mov    0x3c(%esp),%eax
movl   $0x0,0x12c(%esp)
00
lea    0x76a700(%eax),%ebp
xchg   %ax,%ax
lea    0x0(%ebp,%edi,1),%eax
mov    %ebx,(%esp)
mov    %eax,0x80(%esp)
call   804a8f0 <localtime@plt>
test   %eax,%eax
je     807ec8e <argp_parse+0x6d4e>
mov    0x28(%eax),%edx
test   %edx,%edx
je     807ec8e <argp_parse+0x6d4e>
mov    0x20(%eax),%eax
cmp    0x128(%esp),%eax
jne    807f3e8 <argp_parse+0x74a8>
add    $0x76a700,%edi
cmp    $0x163f500,%edi
jne    807ec60 <argp_parse+0x6d20>
mov    0x120(%esp),%eax
test   %eax,%eax
je     807ecd8 <argp_parse+0x6d98>
mov    0x12c(%esp),%edx
test   %edx,%edx
je     807ecd8 <argp_parse+0x6d98>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a3f0 <strcmp@plt>
test   %eax,%eax
jne    807ecd8 <argp_parse+0x6d98>
movl   $0xffffffff,0x128(%esp)
ff
movl   $0x0,0x12c(%esp)
00
lea    0xac(%esp),%eax
mov    %eax,(%esp)
call   807d6f0 <argp_parse+0x57b0>
xor    %edx,%edx
test   %eax,%eax
jne    807ed17 <argp_parse+0x6dd7>
cmpb   $0x0,0x104(%esp)
je     807ee48 <argp_parse+0x6f08>
mov    0xe4(%esp),%edx
mov    0x38(%esp),%edi
mov    0xe0(%esp),%eax
mov    %edx,0x4(%edi)
mov    $0x1,%edx
mov    %eax,(%edi)
cmpb   $0x0,0x23(%esp)
je     807ed4a <argp_parse+0x6e0a>
test   %esi,%esi
movzbl %dl,%ebx
je     807f424 <argp_parse+0x74e4>
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x808df32,(%esp)
call   804a980 <setenv@plt>
xor    %edx,%edx
test   %eax,%eax
sete   %dl
and    %ebx,%edx
cmp    0x1c(%esp),%esi
mov    %edx,%ebx
je     807ed5a <argp_parse+0x6e1a>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    0x20c(%esp),%esi
xor    %gs:0x14,%esi
mov    %ebx,%eax
jne    807f50a <argp_parse+0x75ca>
add    $0x21c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x64,%edi
seta   %bl
mov    %esi,(%esp)
lea    0x1a8(%esp),%ebp
mov    %bl,0x24(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%eax
call   807d570 <argp_parse+0x5630>
test   %bl,%bl
mov    %eax,%esi
jne    807ee20 <argp_parse+0x6ee0>
mov    0x34(%esp),%eax
mov    0x30(%esp),%ebx
movzbl 0x4(%eax),%edx
mov    %ebp,%eax
cmp    $0x22,%dl
je     807ede0 <argp_parse+0x6ea0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x5c,%dl
sete   %dl
movzbl %dl,%edx
add    %ebx,%edx
movzbl (%edx),%ecx
lea    0x1(%edx),%ebx
mov    %cl,-0x1(%eax)
movzbl 0x1(%edx),%edx
cmp    $0x22,%dl
jne    807edc0 <argp_parse+0x6e80>
movb   $0x0,(%eax)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x808df32,(%esp)
call   804a980 <setenv@plt>
cmpb   $0x0,0x24(%esp)
jne    807ee30 <argp_parse+0x6ef0>
test   %eax,%eax
jne    807f43c <argp_parse+0x74fc>
lea    0x1(%ebx),%ecx
mov    %ecx,%eax
movb   $0x1,0x23(%esp)
jmp    807eade <argp_parse+0x6b9e>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebp
jmp    807eda8 <argp_parse+0x6e68>
nop
mov    %ebp,(%esp)
mov    %eax,0x24(%esp)
call   804a4c0 <free@plt>
mov    0x24(%esp),%eax
jmp    807ee02 <argp_parse+0x6ec2>
lea    0x0(%esi),%esi
mov    0x118(%esp),%eax
mov    0x10c(%esp),%edi
mov    %eax,%ecx
mov    %eax,0x24(%esp)
mov    0x108(%esp),%eax
mov    %edi,%ebp
mov    %edi,0x2c(%esp)
mov    %eax,%edi
or     %ecx,%edi
mov    0x11c(%esp),%ecx
or     %ebp,%edi
mov    0x110(%esp),%ebp
mov    %eax,0x28(%esp)
mov    0x114(%esp),%eax
add    %ebp,%ecx
or     %edi,%eax
or     %ecx,%eax
cmp    $0x1,%eax
ja     807ed17 <argp_parse+0x6dd7>
mov    0xc8(%esp),%eax
mov    0xcc(%esp),%edx
test   %eax,%eax
js     807f443 <argp_parse+0x7503>
cmp    $0x2,%edx
je     807f4c4 <argp_parse+0x7584>
sub    $0x76c,%eax
mov    %eax,0x68(%esp)
mov    0xd0(%esp),%eax
sub    $0x1,%eax
mov    %eax,0x64(%esp)
mov    0xd4(%esp),%eax
mov    %eax,0x60(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
jne    807f461 <argp_parse+0x7521>
cmpb   $0x0,0x105(%esp)
je     807ef02 <argp_parse+0x6fc2>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    807ef02 <argp_parse+0x6fc2>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     807f461 <argp_parse+0x7521>
movl   $0x0,0x54(%esp)
movl   $0x0,0x58(%esp)
movl   $0x0,0x5c(%esp)
movl   $0x0,0xe4(%esp)
00
test   %edi,%edi
je     807ef31 <argp_parse+0x6ff1>
movl   $0xffffffff,0x74(%esp)
test   %ebp,%ebp
je     807ef40 <argp_parse+0x7000>
mov    0xb8(%esp),%eax
mov    %eax,0x74(%esp)
mov    0x54(%esp),%eax
lea    0x54(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x80(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x84(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x88(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8c(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x90(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x94(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x98(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x9c(%esp)
mov    0x74(%esp),%eax
mov    %eax,0xa0(%esp)
mov    0x78(%esp),%eax
mov    %eax,0xa4(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0xa8(%esp)
call   804a5f0 <mktime@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %eax,%ebp
mov    %ebx,%eax
call   807d510 <argp_parse+0x55d0>
test   %al,%al
jne    807f122 <argp_parse+0x71e2>
mov    0x11c(%esp),%ebp
xor    %edx,%edx
test   %ebp,%ebp
je     807ed17 <argp_parse+0x6dd7>
mov    0xbc(%esp),%ebp
mov    $0x88888889,%edx
mov    %ebp,%eax
sar    $0x1f,%eax
mov    %eax,%ecx
xor    %ebp,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
add    %ecx,%edx
sar    $0x5,%edx
sub    %eax,%edx
imul   $0x3c,%edx,%eax
sub    %eax,%ecx
cmpb   $0x0,0x23(%esp)
mov    %ecx,0x24(%esp)
je     807f4f2 <argp_parse+0x75b2>
mov    0x24(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x808df5f,0xc(%esp)
movl   $0x13,0x8(%esp)
mov    %eax,0x18(%esp)
mov    %ebp,%eax
shr    $0x1f,%eax
add    $0x808cc2d,%eax
lea    0x1a8(%esp),%ebp
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804af90 <__sprintf_chk@plt>
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x808df32,(%esp)
call   804a980 <setenv@plt>
test   %eax,%eax
jne    807f43c <argp_parse+0x74fc>
mov    0x80(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x54(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x5c(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x60(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x68(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x6c(%esp)
mov    0x9c(%esp),%eax
mov    %eax,0x70(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x74(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x78(%esp)
mov    0xa8(%esp),%eax
mov    %eax,0x7c(%esp)
call   804a5f0 <mktime@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %eax,%ebp
mov    %ebx,%eax
call   807d510 <argp_parse+0x55d0>
movb   $0x1,0x23(%esp)
test   %al,%al
je     807f43c <argp_parse+0x74fc>
mov    0x10c(%esp),%ecx
test   %ecx,%ecx
je     807f1b9 <argp_parse+0x7279>
mov    0x108(%esp),%edx
test   %edx,%edx
jne    807f1b9 <argp_parse+0x7279>
mov    0xb4(%esp),%ebx
mov    $0x92492493,%edx
mov    0x6c(%esp),%ebp
mov    0x60(%esp),%eax
mov    %ebx,%ecx
sub    %ebp,%ecx
add    $0x7,%ecx
mov    %eax,0x24(%esp)
mov    %ecx,%eax
imul   %edx
lea    (%edx,%ecx,1),%eax
mov    %ecx,%edx
sar    $0x1f,%edx
sar    $0x2,%eax
sub    %edx,%eax
lea    0x0(,%eax,8),%edx
sub    %eax,%edx
mov    %ecx,%eax
mov    0xb0(%esp),%ecx
sub    %edx,%eax
xor    %edx,%edx
test   %ecx,%ecx
jle    807f18d <argp_parse+0x724d>
xor    %edx,%edx
cmp    %ebp,%ebx
setne  %dl
sub    %edx,%ecx
lea    (%eax,%ecx,8),%eax
sub    %ecx,%eax
add    0x24(%esp),%eax
mov    %edi,(%esp)
movl   $0xffffffff,0x74(%esp)
mov    %eax,0x60(%esp)
call   804a5f0 <mktime@plt>
xor    %edx,%edx
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     807ed17 <argp_parse+0x6dd7>
mov    0xec(%esp),%edx
mov    0xe8(%esp),%ebx
mov    0xf0(%esp),%ecx
mov    %edx,%eax
or     %ebx,%eax
or     %ecx,%eax
je     807f28d <argp_parse+0x734d>
mov    0x68(%esp),%eax
mov    %eax,0x30(%esp)
add    %ebx,%eax
mov    %eax,0x24(%esp)
mov    0x64(%esp),%eax
lea    (%edx,%eax,1),%ebp
mov    %ebp,0x28(%esp)
mov    0x60(%esp),%ebp
add    %ecx,%ebp
cmp    0x28(%esp),%eax
setg   0x2c(%esp)
shr    $0x1f,%edx
xor    %dl,0x2c(%esp)
cmp    %ebp,0x60(%esp)
setg   %al
shr    $0x1f,%ecx
xor    %ecx,%eax
movzbl 0x2c(%esp),%ecx
or     %al,%cl
jne    807f43c <argp_parse+0x74fc>
mov    0x24(%esp),%eax
cmp    %eax,0x30(%esp)
setg   %al
shr    $0x1f,%ebx
cmp    %bl,%al
jne    807f43c <argp_parse+0x74fc>
mov    0x24(%esp),%eax
mov    %edi,(%esp)
mov    %ebp,0x60(%esp)
mov    %eax,0x68(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x5c(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x80(%esp),%eax
mov    %eax,0x54(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x74(%esp)
call   804a5f0 <mktime@plt>
xor    %edx,%edx
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     807ed17 <argp_parse+0x6dd7>
mov    0x11c(%esp),%eax
test   %eax,%eax
je     807f2bc <argp_parse+0x737c>
imul   $0x3c,0xbc(%esp),%ecx
mov    %ebp,%eax
sub    0x78(%esp),%ecx
sub    %ecx,%eax
cmp    %eax,%ebp
setl   %bl
xor    %edx,%edx
shr    $0x1f,%ecx
cmp    %cl,%bl
jne    807ed17 <argp_parse+0x6dd7>
mov    %eax,%ebp
mov    0xe4(%esp),%ecx
mov    $0x44b82fa1,%edi
add    0x100(%esp),%ecx
mov    %ecx,%eax
imul   %edi
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x1c,%edx
sub    %eax,%edx
mov    %ecx,%eax
imul   $0x3b9aca00,%edx,%edx
sub    %edx,%eax
add    $0x3b9aca00,%eax
mov    %eax,0x24(%esp)
imul   %edi
mov    %edx,%ebx
mov    0x24(%esp),%edx
sar    $0x1c,%ebx
mov    %edx,%eax
sar    $0x1f,%eax
sub    %eax,%ebx
mov    %edx,%eax
imul   $0x3b9aca00,%ebx,%ebx
imul   $0x3c,0xf8(%esp),%edx
sub    %ebx,%eax
mov    %eax,%ebx
imul   $0xe10,0xf4(%esp),%eax
00
sub    %ebx,%ecx
mov    %edx,0x30(%esp)
mov    %eax,0x34(%esp)
add    %ebp,%eax
mov    %eax,0x3c(%esp)
add    %edx,%eax
mov    0xfc(%esp),%edx
mov    %eax,0x28(%esp)
add    %eax,%edx
mov    %ecx,%eax
mov    %edx,0x24(%esp)
imul   %edi
mov    0x30(%esp),%eax
sar    $0x1f,%ecx
mov    %edx,%edi
mov    0x3c(%esp),%edx
sar    $0x1c,%edi
sub    %ecx,%edi
mov    0x24(%esp),%ecx
add    %edi,%ecx
mov    %ecx,0x2c(%esp)
mov    0x28(%esp),%ecx
cmp    %edx,%ecx
setl   %cl
shr    $0x1f,%eax
xor    %eax,%ecx
cmp    %edx,%ebp
mov    0x34(%esp),%ebp
setg   %al
mov    0xfc(%esp),%edx
shr    $0x1f,%ebp
xor    %ebp,%eax
or     %eax,%ecx
mov    0x28(%esp),%eax
cmp    %eax,0x24(%esp)
setl   %al
shr    $0x1f,%edx
xor    %edx,%eax
or     %al,%cl
jne    807f43c <argp_parse+0x74fc>
mov    0x24(%esp),%eax
cmp    %eax,0x2c(%esp)
setl   %al
shr    $0x1f,%edi
mov    %edi,%edx
cmp    %dl,%al
jne    807f43c <argp_parse+0x74fc>
mov    0x38(%esp),%eax
mov    $0x1,%edx
mov    0x2c(%esp),%edi
mov    %ebx,0x4(%eax)
mov    %edi,(%eax)
jmp    807ed17 <argp_parse+0x6dd7>
xor    %ebx,%ebx
jmp    807ed5a <argp_parse+0x6e1a>
cmp    $0x5c,%dl
je     807eafe <argp_parse+0x6bbe>
jmp    807eb0c <argp_parse+0x6bcc>
lea    0x0(%esi),%esi
mov    %edx,0x12c(%esp)
movl   $0x10d,0x130(%esp)
00
mov    %eax,0x134(%esp)
movl   $0x0,0x138(%esp)
00
jmp    807ec9c <argp_parse+0x6d5c>
lea    0x4c(%esp),%ebx
mov    %ebx,(%esp)
call   807a050 <argp_parse+0x2110>
mov    %ebx,%eax
jmp    807ea4b <argp_parse+0x6b0b>
movl   $0x808df32,(%esp)
call   804a360 <unsetenv@plt>
xor    %edx,%edx
test   %eax,%eax
sete   %dl
jmp    807ed48 <argp_parse+0x6e08>
xor    %edx,%edx
jmp    807ed17 <argp_parse+0x6dd7>
neg    %eax
jmp    807eeb6 <argp_parse+0x6f76>
lea    0x144(%esp),%edi
xor    %esi,%esi
movb   $0x0,0x23(%esp)
mov    %edi,0x1c(%esp)
jmp    807eb32 <argp_parse+0x6bf2>
mov    0xc0(%esp),%edx
mov    0xd8(%esp),%ecx
test   %edx,%edx
je     807f4da <argp_parse+0x759a>
cmp    $0x1,%edx
jne    807f4bb <argp_parse+0x757b>
lea    -0x1(%ecx),%eax
cmp    $0xa,%eax
lea    0xc(%ecx),%edx
jbe    807f49c <argp_parse+0x755c>
cmp    $0xc,%ecx
je     807f497 <argp_parse+0x7557>
movl   $0xffffffff,0x5c(%esp)
xor    %edx,%edx
jmp    807ed17 <argp_parse+0x6dd7>
mov    $0xc,%edx
mov    0xdc(%esp),%eax
mov    %edx,0x5c(%esp)
mov    %eax,0x58(%esp)
mov    0xe0(%esp),%eax
mov    %eax,0x54(%esp)
jmp    807ef25 <argp_parse+0x6fe5>
cmp    $0x17,%ecx
mov    %ecx,%edx
jbe    807f49c <argp_parse+0x755c>
jmp    807f488 <argp_parse+0x7548>
cmp    $0x44,%eax
mov    $0x7d0,%dx
mov    $0x76c,%ecx
cmovg  %ecx,%edx
add    %edx,%eax
jmp    807eeb6 <argp_parse+0x6f76>
lea    -0x1(%ecx),%eax
cmp    $0xa,%eax
jbe    807f4e9 <argp_parse+0x75a9>
cmp    $0xc,%ecx
jne    807f488 <argp_parse+0x7548>
jmp    807f49c <argp_parse+0x755c>
mov    %ecx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    807f49c <argp_parse+0x755c>
mov    0x1c(%esp),%eax
mov    %edx,0x28(%esp)
call   807d570 <argp_parse+0x5630>
mov    0x28(%esp),%edx
mov    %eax,%esi
jmp    807f026 <argp_parse+0x70e6>
call   804a610 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     807f593 <argp_parse+0x7653>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804acb0 <strrchr@plt>
test   %eax,%eax
je     807f57f <argp_parse+0x763f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    807f57f <argp_parse+0x763f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x808ee30,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    807f57f <argp_parse+0x763f>
mov    $0x3,%ecx
mov    $0x808ee38,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    807f57f <argp_parse+0x763f>
lea    0x4(%eax),%ebx
mov    %ebx,0x809d840
mov    %ebx,0x809e0b4
mov    %ebx,0x809d880
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x809d864,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x808edf8,(%esp)
mov    %eax,0xc(%esp)
call   804a730 <fwrite@plt>
call   804ae30 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x18(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804ab70 <acl_get_entry@plt>
test   %eax,%eax
jle    807f634 <argp_parse+0x76f4>
lea    0x1c(%esp),%edi
jmp    807f61b <argp_parse+0x76db>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
je     807f603 <argp_parse+0x76c3>
cmp    $0x4,%eax
je     807f603 <argp_parse+0x76c3>
cmp    $0x20,%eax
jne    807f640 <argp_parse+0x7700>
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804ab70 <acl_get_entry@plt>
test   %eax,%eax
jle    807f634 <argp_parse+0x76f4>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a720 <acl_get_tag_type@plt>
test   %eax,%eax
jns    807f5f0 <argp_parse+0x76b0>
mov    $0xffffffff,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x10(%eax),%edx
xor    %eax,%eax
and    $0xf000,%edx
cmp    $0xa000,%edx
je     807f67a <argp_parse+0x773a>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a770 <acl_extended_file@plt>
test   %eax,%eax
js     807f680 <argp_parse+0x7740>
add    $0x1c,%esp
ret
xchg   %ax,%ax
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80843a0 <argp_parse+0xc460>
add    $0x1c,%esp
movzbl %al,%eax
neg    %eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     807f6c1 <argp_parse+0x7781>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     807f700 <argp_parse+0x77c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   807c270 <argp_parse+0x4330>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    807f768 <argp_parse+0x7828>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    807f750 <argp_parse+0x7810>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    807f750 <argp_parse+0x7810>
cmpb   $0x2d,0x3(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x38,0x4(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x0,0x5(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x60,(%esi)
mov    $0x808ee47,%eax
mov    $0x808ee3c,%edx
cmovne %edx,%eax
jmp    807f6f8 <argp_parse+0x77b8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x808d374,%eax
cmp    $0x7,%edi
mov    $0x808f63f,%edx
cmovne %edx,%eax
jmp    807f6f8 <argp_parse+0x77b8>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    807f750 <argp_parse+0x7810>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    807f750 <argp_parse+0x7810>
cmpb   $0x31,0x2(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x38,0x3(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x30,0x4(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x33,0x5(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x30,0x6(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x0,0x7(%eax)
jne    807f750 <argp_parse+0x7810>
cmpb   $0x60,(%esi)
mov    $0x808ee43,%eax
mov    $0x808ee40,%edx
cmovne %edx,%eax
jmp    807f6f8 <argp_parse+0x77b8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %edx,0x28(%esp)
mov    0x90(%esp),%esi
mov    %ecx,0x1c(%esp)
mov    %eax,0x38(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   804a750 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     80800a0 <argp_parse+0x8160>
mov    0x94(%esp),%eax
jmp    *0x808ee80(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x40(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %edi,%edi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
je     807f9ff <argp_parse+0x7abf>
test   %al,%al
je     807fa12 <argp_parse+0x7ad2>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
setne  0x34(%esp)
je     807f8a8 <argp_parse+0x7968>
cmpb   $0x0,0x58(%esp)
jne    807fee0 <argp_parse+0x7fa0>
mov    0x1c(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%edi,1),%ecx
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     807fc68 <argp_parse+0x7d28>
movzbl %bl,%eax
jmp    *0x808eea4(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
je     807fab0 <argp_parse+0x7b70>
cmpl   $0x3,0x94(%esp)
jne    807f988 <argp_parse+0x7a48>
testb  $0x4,0x98(%esp)
je     807f988 <argp_parse+0x7a48>
lea    0x2(%edi),%edx
cmp    %edx,%esi
jbe    807f988 <argp_parse+0x7a48>
mov    0x1c(%esp),%eax
cmpb   $0x3f,0x1(%eax,%edi,1)
jne    807f988 <argp_parse+0x7a48>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x34(%esp)
ja     807f988 <argp_parse+0x7a48>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     807f988 <argp_parse+0x7a48>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
cmp    0x28(%esp),%ebp
jae    807f947 <argp_parse+0x7a07>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807f959 <argp_parse+0x7a19>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807f96b <argp_parse+0x7a2b>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807f97d <argp_parse+0x7a3d>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x34(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%edi
nop
cmpb   $0x0,0x59(%esp)
je     807f996 <argp_parse+0x7a56>
cmpb   $0x0,0x5a(%esp)
jne    807f9bb <argp_parse+0x7a7b>
mov    0x38(%esp),%edx
test   %edx,%edx
je     807f9bb <argp_parse+0x7a7b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x38(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    807f9c2 <argp_parse+0x7a82>
cmpb   $0x0,0x24(%esp)
je     807f9de <argp_parse+0x7a9e>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
cmp    0x28(%esp),%ebp
jae    807f9db <argp_parse+0x7a9b>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    0x28(%esp),%ebp
jae    807f9ee <argp_parse+0x7aae>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
jne    807f888 <argp_parse+0x7948>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax,%edi,1)
setne  %al
test   %al,%al
jne    807f890 <argp_parse+0x7950>
test   %ebp,%ebp
jne    807fa2b <argp_parse+0x7aeb>
cmpl   $0x2,0x94(%esp)
jne    807fa2b <argp_parse+0x7aeb>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
cmpb   $0x0,0x2f(%esp)
jne    807fa62 <argp_parse+0x7b22>
mov    0x40(%esp),%eax
test   %eax,%eax
je     807fa62 <argp_parse+0x7b22>
mov    0x40(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     807fa62 <argp_parse+0x7b22>
mov    0x30(%esp),%ebx
sub    %ebp,%edx
mov    0x28(%esp),%ecx
nop
cmp    %ebp,%ecx
jbe    807fa57 <argp_parse+0x7b17>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    807fa50 <argp_parse+0x7b10>
cmp    0x28(%esp),%ebp
mov    %ebp,%eax
jae    807fb05 <argp_parse+0x7bc5>
mov    0x30(%esp),%ecx
movb   $0x0,(%ecx,%ebp,1)
jmp    807fb05 <argp_parse+0x7bc5>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%esi
setne  %al
cmp    $0xffffffff,%esi
je     8080090 <argp_parse+0x8150>
test   %al,%al
jne    807f988 <argp_parse+0x7a48>
test   %edi,%edi
jne    807f988 <argp_parse+0x7a48>
cmpl   $0x2,0x94(%esp)
jne    807f988 <argp_parse+0x7a48>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
je     807f988 <argp_parse+0x7a48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x28(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
call   807f7c0 <argp_parse+0x7880>
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    808018d <argp_parse+0x824d>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     808010d <argp_parse+0x81cd>
cmpb   $0x0,0x58(%esp)
je     807f988 <argp_parse+0x7a48>
mov    %eax,%ebx
jmp    807f9c2 <argp_parse+0x7a82>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    807fb33 <argp_parse+0x7bf3>
nop
mov    $0x66,%eax
jmp    807fb33 <argp_parse+0x7bf3>
nop
mov    $0x76,%eax
jmp    807fb33 <argp_parse+0x7bf3>
nop
mov    $0x6e,%eax
jmp    807fb25 <argp_parse+0x7be5>
nop
mov    $0x74,%eax
jmp    807fb25 <argp_parse+0x7be5>
nop
mov    $0x61,%eax
jmp    807fb33 <argp_parse+0x7bf3>
nop
cmpb   $0x0,0x58(%esp)
je     8080078 <argp_parse+0x8138>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
cmp    0x28(%esp),%ebp
jae    807fb9c <argp_parse+0x7c5c>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%edi),%edx
cmp    %edx,%esi
lea    0x1(%ebp),%eax
jbe    807fbe0 <argp_parse+0x7ca0>
mov    0x1c(%esp),%ecx
movzbl 0x1(%ecx,%edi,1),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
mov    %cl,0x34(%esp)
ja     807fbe0 <argp_parse+0x7ca0>
cmp    %eax,0x28(%esp)
ja     8080120 <argp_parse+0x81e0>
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807fbd7 <argp_parse+0x7c97>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    807f996 <argp_parse+0x7a56>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x58(%esp)
je     807fc09 <argp_parse+0x7cc9>
cmpb   $0x0,0x2f(%esp)
je     807fc09 <argp_parse+0x7cc9>
cmpb   $0x0,0x34(%esp)
jne    807f9de <argp_parse+0x7a9e>
mov    %ebx,%eax
jmp    807fb25 <argp_parse+0x7be5>
cmpl   $0x2,0x94(%esp)
jne    807f988 <argp_parse+0x7a48>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
cmp    0x28(%esp),%ebp
jae    807fc37 <argp_parse+0x7cf7>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807fc49 <argp_parse+0x7d09>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    807fc5b <argp_parse+0x7d1b>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    807f988 <argp_parse+0x7a48>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x4c(%esp)
jne    807ff58 <argp_parse+0x8018>
call   804af60 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x34(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     807f988 <argp_parse+0x7a48>
mov    0x34(%esp),%eax
mov    0x30(%esp),%ecx
mov    %dl,0x34(%esp)
mov    %esi,0x90(%esp)
add    %edi,%eax
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
jmp    807fd28 <argp_parse+0x7de8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80800a8 <argp_parse+0x8168>
cmp    %eax,%ebp
jae    807fcd3 <argp_parse+0x7d93>
movb   $0x5c,(%ecx,%ebp,1)
lea    0x1(%ebp),%esi
cmp    %esi,%eax
jbe    807fcea <argp_parse+0x7daa>
mov    %ebx,%edx
shr    $0x6,%dl
mov    %edx,%esi
add    $0x30,%esi
mov    %esi,%edx
mov    %dl,0x1(%ecx,%ebp,1)
lea    0x2(%ebp),%esi
cmp    %esi,%eax
jbe    807fd04 <argp_parse+0x7dc4>
mov    %ebx,%edx
shr    $0x3,%dl
mov    %edx,%esi
and    $0x7,%esi
add    $0x30,%esi
mov    %esi,%edx
mov    %dl,0x2(%ecx,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%edi
cmp    %edi,0x3c(%esp)
jbe    807fd4f <argp_parse+0x7e0f>
cmp    %eax,%ebp
jae    807fd1d <argp_parse+0x7ddd>
mov    %bl,(%ecx,%ebp,1)
mov    0x1c(%esp),%edx
add    $0x1,%ebp
movzbl (%edx,%edi,1),%ebx
cmpb   $0x0,0x34(%esp)
jne    807fcc0 <argp_parse+0x7d80>
cmpb   $0x0,0x24(%esp)
je     807fd0d <argp_parse+0x7dcd>
cmp    %eax,%ebp
jae    807fd3e <argp_parse+0x7dfe>
movb   $0x5c,(%ecx,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    %edi,0x3c(%esp)
movb   $0x0,0x24(%esp)
ja     807fd16 <argp_parse+0x7dd6>
mov    0x90(%esp),%esi
jmp    807f9e1 <argp_parse+0x7aa1>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    8080192 <argp_parse+0x8252>
mov    0x28(%esp),%edi
test   %edi,%edi
je     80800ee <argp_parse+0x81ae>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x808d374,0x40(%esp)
movb   $0x22,(%eax)
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x808d374,0x40(%esp)
movl   $0x3,0x94(%esp)
00
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x808f63f,0x40(%esp)
movl   $0x2,0x94(%esp)
00
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80801ae <argp_parse+0x826e>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     80800cf <argp_parse+0x818f>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x808f63f,0x40(%esp)
movb   $0x27,(%eax)
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x40(%esp)
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi,%eiz,1),%esi
je     807fe94 <argp_parse+0x7f54>
mov    0x94(%esp),%edx
mov    $0x808ee4b,%eax
call   807f6d0 <argp_parse+0x7790>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x808f63f,%eax
call   807f6d0 <argp_parse+0x7790>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    807fec2 <argp_parse+0x7f82>
mov    0x48(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     807fec2 <argp_parse+0x7f82>
mov    0x30(%esp),%ebx
mov    0x28(%esp),%edx
cmp    %edx,%ebp
jae    807feb7 <argp_parse+0x7f77>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%ecx,%ebp,1),%eax
test   %al,%al
jne    807feb0 <argp_parse+0x7f70>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,0x40(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x20(%esp)
jmp    807f860 <argp_parse+0x7920>
mov    0x20(%esp),%eax
cmp    $0xffffffff,%esi
lea    (%edi,%eax,1),%ebx
jne    807feff <argp_parse+0x7fbf>
cmp    $0x1,%eax
jbe    807feff <argp_parse+0x7fbf>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%esi
mov    0x1c(%esp),%eax
cmp    %ebx,%esi
lea    (%eax,%edi,1),%ecx
jb     807ff48 <argp_parse+0x8008>
mov    0x20(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   804a580 <memcmp@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    807ff48 <argp_parse+0x8008>
cmpb   $0x0,0x2f(%esp)
jne    807fac0 <argp_parse+0x7b80>
movb   $0x1,0x24(%esp)
jmp    807f8b4 <argp_parse+0x7974>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    807f8b4 <argp_parse+0x7974>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%esi
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     80800b4 <argp_parse+0x8174>
movb   $0x1,0x3c(%esp)
movl   $0x0,0x34(%esp)
mov    %edi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %bl,0x5b(%esp)
mov    %ecx,0x5c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edi
add    0x50(%esp),%edi
lea    (%eax,%edi,1),%ebx
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a7b0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     808004e <argp_parse+0x810e>
cmp    $0xffffffff,%eax
je     8080176 <argp_parse+0x8236>
cmp    $0xfffffffe,%eax
je     808012d <argp_parse+0x81ed>
cmpb   $0x0,0x2f(%esp)
je     8080017 <argp_parse+0x80d7>
cmpl   $0x2,0x94(%esp)
jne    8080017 <argp_parse+0x80d7>
cmp    $0x1,%eax
je     8080017 <argp_parse+0x80d7>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8080010 <argp_parse+0x80d0>
movzbl %al,%eax
jmp    *0x808f0a0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    807fff8 <argp_parse+0x80b8>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804a6f0 <iswprint@plt>
mov    $0x0,%ecx
test   %eax,%eax
movzbl 0x3c(%esp),%eax
cmove  %ecx,%eax
mov    %al,0x3c(%esp)
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x34(%esp)
call   804a500 <mbsinit@plt>
test   %eax,%eax
je     807ff8e <argp_parse+0x804e>
movzbl 0x3c(%esp),%edx
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
cmpl   $0x1,0x34(%esp)
jbe    807fc93 <argp_parse+0x7d53>
and    0x58(%esp),%dl
jmp    807fc9d <argp_parse+0x7d5d>
nop
testb  $0x1,0x98(%esp)
je     807f988 <argp_parse+0x7a48>
add    $0x1,%edi
jmp    807f87a <argp_parse+0x793a>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    807fa8f <argp_parse+0x7b4f>
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    0x90(%esp),%esi
jmp    807fac0 <argp_parse+0x7b80>
mov    0x1c(%esp),%eax
mov    %ecx,0x34(%esp)
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    0x34(%esp),%ecx
mov    %eax,%esi
jmp    807ff71 <argp_parse+0x8031>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x20(%esp)
movl   $0x808f63f,0x40(%esp)
jmp    807f860 <argp_parse+0x7920>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x20(%esp)
movl   $0x808d374,0x40(%esp)
jmp    807f860 <argp_parse+0x7920>
cmpb   $0x0,0x2f(%esp)
je     807fb33 <argp_parse+0x7bf3>
jmp    807fac0 <argp_parse+0x7b80>
lea    0x0(%esi),%esi
mov    0x30(%esp),%ecx
movb   $0x30,(%ecx,%eax,1)
jmp    807fbc5 <argp_parse+0x7c85>
mov    %edi,%edx
mov    %ebx,%eax
mov    0x54(%esp),%ebp
cmp    %edx,%esi
mov    0x50(%esp),%edi
movzbl 0x5b(%esp),%ebx
mov    0x5c(%esp),%ecx
jbe    808016c <argp_parse+0x822c>
cmpb   $0x0,(%eax)
je     808016c <argp_parse+0x822c>
mov    0x34(%esp),%eax
jmp    808015e <argp_parse+0x821e>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     8080168 <argp_parse+0x8228>
add    $0x1,%eax
lea    (%edi,%eax,1),%edx
cmp    %edx,%esi
ja     8080158 <argp_parse+0x8218>
mov    %eax,0x34(%esp)
mov    $0x1,%edx
jmp    8080063 <argp_parse+0x8123>
mov    0x50(%esp),%edi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
jmp    8080063 <argp_parse+0x8123>
call   804a610 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x20(%esp)
movl   $0x808d374,0x40(%esp)
jmp    807f860 <argp_parse+0x7920>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x20(%esp)
movl   $0x808f63f,0x40(%esp)
jmp    807f860 <argp_parse+0x7920>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   804aaf0 <__errno_location@plt>
test   %edi,%edi
mov    0x809d810,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     808035c <argp_parse+0x841c>
cmp    0x809d81c,%edi
jb     8080268 <argp_parse+0x8328>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     8080361 <argp_parse+0x8421>
cmp    $0x809d814,%esi
lea    0x0(,%ebp,8),%eax
je     8080330 <argp_parse+0x83f0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80816b0 <argp_parse+0x9770>
mov    %eax,%esi
mov    %eax,0x809d810
mov    0x809d81c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
mov    %ebp,0x809d81c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   807f7c0 <argp_parse+0x7880>
cmp    %eax,%ebp
ja     8080317 <argp_parse+0x83d7>
lea    0x1(%eax),%ebp
cmp    $0x809e0c0,%esi
mov    %ebp,(%edi)
je     80802d2 <argp_parse+0x8392>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
mov    %ebp,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   807f7c0 <argp_parse+0x7880>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x809d818,%edx
mov    %eax,%esi
mov    %eax,0x809d810
mov    0x809d814,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    808023f <argp_parse+0x82ff>
call   804ae30 <abort@plt>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804aaf0 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x809e1c0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8081850 <argp_parse+0x9910>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x809e1c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    80803d0 <argp_parse+0x8490>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x809e1c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x809e1c0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x809e1c0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x809e1c0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     8080483 <argp_parse+0x8543>
test   %ecx,%ecx
je     8080483 <argp_parse+0x8543>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   804ae30 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x809e1c0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   804aaf0 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   807f7c0 <argp_parse+0x7880>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x809e1c0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   804aaf0 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   807f7c0 <argp_parse+0x7880>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   807f7c0 <argp_parse+0x7880>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     80805b8 <argp_parse+0x8678>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80804f0 <argp_parse+0x85b0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x809d81c,%edi
mov    0x809d810,%esi
cmp    $0x1,%edi
jbe    8080633 <argp_parse+0x86f3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   804a4c0 <free@plt>
cmp    %edi,%ebx
jne    8080620 <argp_parse+0x86e0>
mov    0x4(%esi),%eax
cmp    $0x809e0c0,%eax
je     8080659 <argp_parse+0x8719>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
movl   $0x100,0x809d814
00
movl   $0x809e0c0,0x809d818
08
cmp    $0x809d814,%esi
je     8080673 <argp_parse+0x8733>
mov    %esi,(%esp)
call   804a4c0 <free@plt>
movl   $0x809d814,0x809d810
08
movl   $0x1,0x809d81c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x809e1c0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x809e1c0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x809e1c0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x809e1c0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   807f6a0 <argp_parse+0x7760>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80801d0 <argp_parse+0x8290>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   807f6a0 <argp_parse+0x7760>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80801d0 <argp_parse+0x8290>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8080710 <argp_parse+0x87d0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8080740 <argp_parse+0x8800>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x809e1c0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x809e1c4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x809e1c8,%eax
mov    %eax,0x18(%esp)
mov    0x809e1cc,%eax
mov    %eax,0x1c(%esp)
mov    0x809e1d0,%eax
mov    %eax,0x20(%esp)
mov    0x809e1d4,%eax
mov    %eax,0x24(%esp)
mov    0x809e1d8,%eax
mov    %eax,0x28(%esp)
mov    0x809e1dc,%eax
mov    %eax,0x2c(%esp)
mov    0x809e1e0,%eax
mov    %eax,0x30(%esp)
mov    0x809e1e4,%eax
mov    %eax,0x34(%esp)
mov    0x809e1e8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x809e1ec,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   80801d0 <argp_parse+0x8290>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80807d0 <argp_parse+0x8890>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   80807d0 <argp_parse+0x8890>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80807d0 <argp_parse+0x8890>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x809e1c0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x809e1c4,%eax
mov    %eax,0x14(%esp)
mov    0x809e1c8,%eax
mov    %eax,0x18(%esp)
mov    0x809e1cc,%eax
mov    %eax,0x1c(%esp)
mov    0x809e1d0,%eax
mov    %eax,0x20(%esp)
mov    0x809e1d4,%eax
mov    %eax,0x24(%esp)
mov    0x809e1d8,%eax
mov    %eax,0x28(%esp)
mov    0x809e1dc,%eax
mov    %eax,0x2c(%esp)
mov    0x809e1e0,%eax
mov    %eax,0x30(%esp)
mov    0x809e1e4,%eax
mov    %eax,0x34(%esp)
mov    0x809e1e8,%eax
mov    %eax,0x38(%esp)
mov    0x809e1ec,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8080450 <argp_parse+0x8510>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80801d0 <argp_parse+0x8290>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8080910 <argp_parse+0x89d0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8080910 <argp_parse+0x89d0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8080910 <argp_parse+0x89d0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x809d7e0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x809d7e0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x809d7e0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x809d7e0,0x4(%esp)
jmp    80801d0 <argp_parse+0x8290>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804a420 <read@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8080b50 <argp_parse+0x8c10>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     8080b18 <argp_parse+0x8bd8>
cmp    $0x16,%edx
jne    8080b50 <argp_parse+0x8c10>
cmp    $0x7fffe000,%ebx
jbe    8080b50 <argp_parse+0x8c10>
mov    $0x7fffe000,%ebx
jmp    8080b18 <argp_parse+0x8bd8>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804a9d0 <write@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8080bb0 <argp_parse+0x8c70>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     8080b78 <argp_parse+0x8c38>
cmp    $0x16,%edx
jne    8080bb0 <argp_parse+0x8c70>
cmp    $0x7fffe000,%ebx
jbe    8080bb0 <argp_parse+0x8c70>
mov    $0x7fffe000,%ebx
jmp    8080b78 <argp_parse+0x8c38>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%ebx)
movl   $0x0,0x4(%esp)
movl   $0x80894f0,(%esp)
call   804a410 <open64@plt>
mov    %eax,(%ebx)
mov    %eax,(%esp)
call   8080ef0 <argp_parse+0x8fb0>
test   %eax,%eax
mov    %eax,(%ebx)
js     8080c10 <argp_parse+0x8cd0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8084190 <argp_parse+0xc250>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a930 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
sete   %al
add    $0x18,%esp
movzbl %al,%eax
neg    %eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
js     8080c58 <argp_parse+0x8d18>
mov    %eax,0x4(%esp)
jmp    804ad30 <fchdir@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %eax,0x4(%esp)
jmp    80821d0 <argp_parse+0xa290>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
js     8080c86 <argp_parse+0x8d46>
mov    %eax,(%esp)
call   804aef0 <close@plt>
mov    0x4(%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    804a4c0 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
test   %eax,%eax
je     8080dc2 <argp_parse+0x8e82>
movl   $0x200,(%esp)
mov    $0x200,%esi
call   8081640 <argp_parse+0x9700>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
movl   $0x0,0x10(%esp)
mov    %eax,%edi
jmp    8080ce7 <argp_parse+0x8da7>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x13(%eax,%edx,1)
jne    8080d1f <argp_parse+0x8ddf>
mov    0x40(%esp),%eax
movl   $0x0,(%edi)
mov    %eax,(%esp)
call   804adc0 <readdir64@plt>
test   %eax,%eax
je     8080da8 <argp_parse+0x8e68>
xor    %edx,%edx
cmpb   $0x2e,0x13(%eax)
lea    0x13(%eax),%ebp
jne    8080ce0 <argp_parse+0x8da0>
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
add    $0x1,%edx
cmpb   $0x0,0x13(%eax,%edx,1)
je     8080ce7 <argp_parse+0x8da7>
mov    %ebp,(%esp)
call   804a950 <strlen@plt>
mov    0x10(%esp),%edx
lea    0x1(%eax),%ecx
add    %ecx,%edx
jb     8080dd4 <argp_parse+0x8e94>
cmp    %esi,%edx
jae    8080d42 <argp_parse+0x8e02>
jmp    8080d78 <argp_parse+0x8e38>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
lea    (%esi,%esi,1),%ebx
cmp    %ebx,%esi
ja     8080dd4 <argp_parse+0x8e94>
cmp    %ebx,%edx
nop
jae    8080d40 <argp_parse+0x8e00>
mov    0x14(%esp),%eax
mov    %ebx,%esi
mov    %ebx,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   80816b0 <argp_parse+0x9770>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x10(%esp),%eax
add    0x14(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   804a4e0 <memcpy@plt>
mov    0x18(%esp),%edx
mov    %edx,0x10(%esp)
jmp    8080ce7 <argp_parse+0x8da7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x10(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
mov    (%edi),%ebx
test   %ebx,%ebx
jne    8080dc6 <argp_parse+0x8e86>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8080dba <argp_parse+0x8e7a>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
xor    %eax,%eax
mov    %ebx,(%edi)
jmp    8080dba <argp_parse+0x8e7a>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   8080ca0 <argp_parse+0x8d60>
test   %ebx,%ebx
mov    %eax,%esi
je     8080e10 <argp_parse+0x8ed0>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   804af00 <closedir@plt>
test   %eax,%eax
jne    8080e20 <argp_parse+0x8ee0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   804a4c0 <free@plt>
mov    %edi,(%esi)
jmp    8080e04 <argp_parse+0x8ec4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80791d0 <argp_parse+0x1290>
add    $0x1c,%esp
jmp    8080de0 <argp_parse+0x8ea0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ad00 <fdopendir@plt>
add    $0x1c,%esp
jmp    8080de0 <argp_parse+0x8ea0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     8080eb0 <argp_parse+0x8f70>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082480 <argp_parse+0xa540>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     8080f1f <argp_parse+0x8fdf>
mov    %ebx,(%esp)
call   8080ec0 <argp_parse+0x8f80>
mov    %eax,%edi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804aef0 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     80813e8 <argp_parse+0x94a8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x808f184,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x808f197,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x808f4c0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804adf0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x808f218,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8081410 <argp_parse+0x94d0>
jmp    *0x808f480(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f37c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   804adf0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f3ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804adf0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804ae30 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f19b,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804adf0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f1ab,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804adf0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f1c2,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804adf0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f2e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    808108f <argp_parse+0x914f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f304,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    808108f <argp_parse+0x914f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f328,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    808108f <argp_parse+0x914f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f350,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    808108f <argp_parse+0x914f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x808f190,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8080f81 <argp_parse+0x9041>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f3e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    808111a <argp_parse+0x91da>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     80814ba <argp_parse+0x957a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    80814b0 <argp_parse+0x9570>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8080f30 <argp_parse+0x8ff0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     8081512 <argp_parse+0x95d2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    8081500 <argp_parse+0x95c0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8080f30 <argp_parse+0x8ff0>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80814f0 <argp_parse+0x95b0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x808f1de,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808f1f3,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804ac10 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x808f203,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
movl   $0x808f41c,0xc(%esp)
movl   $0x8087ec4,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804ac10 <__printf_chk@plt>
mov    0x809d8a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f440,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
je     8081659 <argp_parse+0x9719>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8081654 <argp_parse+0x9714>
lea    0x0(%esi),%esi
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8081699 <argp_parse+0x9759>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8081640 <argp_parse+0x9700>
call   8056010 <fchmod@plt+0xb070>
xchg   %ax,%ax
jmp    8081640 <argp_parse+0x9700>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     80816d8 <argp_parse+0x9798>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a7e0 <realloc@plt>
test   %eax,%eax
je     80816eb <argp_parse+0x97ab>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     80816c0 <argp_parse+0x9780>
mov    %eax,(%esp)
call   804a4c0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     80816d0 <argp_parse+0x9790>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8081733 <argp_parse+0x97f3>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    80816b0 <argp_parse+0x9770>
call   8056010 <fchmod@plt+0xb070>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8081780 <argp_parse+0x9840>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8081798 <argp_parse+0x9858>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    80816b0 <argp_parse+0x9770>
xchg   %ax,%ax
test   %ecx,%ecx
jne    8081769 <argp_parse+0x9829>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    8081769 <argp_parse+0x9829>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     80817d8 <argp_parse+0x9898>
cmp    $0xaaaaaaa9,%eax
ja     80817e4 <argp_parse+0x98a4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80816b0 <argp_parse+0x9770>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    80817c0 <argp_parse+0x9880>
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804aa80 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804af80 <calloc@plt>
test   %eax,%eax
je     808183f <argp_parse+0x98ff>
add    $0x1c,%esp
ret
nop
call   8056010 <fchmod@plt+0xb070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8081850 <argp_parse+0x9910>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a930 <getcwd@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80818d8 <argp_parse+0x9998>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    80818ce <argp_parse+0x998e>
call   8056010 <fchmod@plt+0xb070>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
cmp    $0x24,%esi
ja     80820ff <argp_parse+0xa1bf>
movzbl (%edi),%edx
lea    0x4c(%esp),%eax
test   %ebx,%ebx
cmove  %eax,%ebx
mov    %edx,0x18(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    0x18(%esp),%edx
mov    (%eax),%ebp
mov    %edi,%eax
jmp    8081936 <argp_parse+0x99f6>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
movzbl %dl,%ecx
testb  $0x20,0x1(%ebp,%ecx,2)
jne    8081930 <argp_parse+0x99f0>
cmp    $0x2d,%dl
jne    8081958 <argp_parse+0x9a18>
mov    $0x4,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   804a530 <__strtoull_internal@plt>
mov    (%ebx),%esi
cmp    %edi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8081a59 <argp_parse+0x9b19>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    80819c8 <argp_parse+0x9a88>
xor    %edi,%edi
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     80819aa <argp_parse+0x9a6a>
movzbl (%esi),%edx
test   %dl,%dl
jne    80819d8 <argp_parse+0x9a98>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x22,%eax
mov    $0x1,%edi
jne    8081945 <argp_parse+0x9a05>
jmp    8081998 <argp_parse+0x9a58>
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8081ab0 <argp_parse+0x9b70>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8081a3d <argp_parse+0x9afd>
movzbl 0x1(%esi),%eax
cmp    $0x44,%al
je     808207b <argp_parse+0xa13b>
cmp    $0x69,%al
je     8082062 <argp_parse+0xa122>
cmp    $0x42,%al
je     808207b <argp_parse+0xa13b>
mov    $0x1,%ebp
mov    $0x400,%eax
sub    $0x42,%edx
cmp    $0x35,%dl
ja     8081ab0 <argp_parse+0x9b70>
movzbl %dl,%edx
jmp    *0x808f524(,%edx,4)
mov    0x80(%esp),%eax
test   %eax,%eax
je     8081945 <argp_parse+0x9a05>
movzbl (%edi),%edx
test   %dl,%dl
je     8081945 <argp_parse+0x9a05>
movsbl %dl,%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    0x20(%esp),%edx
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    80819fe <argp_parse+0x9abe>
jmp    8081945 <argp_parse+0x9a05>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
or     $0x2,%eax
jmp    808194a <argp_parse+0x9a0a>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
cmp    %edx,0x1c(%esp)
mov    %eax,%ecx
mov    %edx,0x30(%esp)
ja     80820e5 <argp_parse+0xa1a5>
jb     8081b0c <argp_parse+0x9bcc>
cmp    %ecx,0x18(%esp)
ja     80820e5 <argp_parse+0xa1a5>
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
imul   0x18(%esp),%edx
imul   0x20(%esp),%eax
add    %edx,%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jb     80820e5 <argp_parse+0xa1a5>
ja     8081b56 <argp_parse+0x9c16>
cmp    0x18(%esp),%ecx
jb     80820e5 <argp_parse+0xa1a5>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x24(%esp),%edx
imul   %eax,%ecx
mov    0x18(%esp),%eax
imul   %edx,%eax
add    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
or     %eax,%edi
add    %ebp,%esi
mov    %edi,%eax
or     $0x2,%eax
mov    %esi,(%ebx)
cmpb   $0x0,(%esi)
cmovne %eax,%edi
jmp    80819aa <argp_parse+0x9a6a>
cmpl   $0x7fffffff,0x1c(%esp)
ja     8082097 <argp_parse+0xa157>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8081b84 <argp_parse+0x9c44>
cmpl   $0x7fffff,0x1c(%esp)
ja     8082097 <argp_parse+0xa157>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8081b84 <argp_parse+0x9c44>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x7,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8081c78 <argp_parse+0x9d38>
ja     8081c35 <argp_parse+0x9cf5>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8081c82 <argp_parse+0x9d42>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     808208a <argp_parse+0xa14a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8081c29 <argp_parse+0x9ce9>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8081c6b <argp_parse+0x9d2b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x8,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8081d26 <argp_parse+0x9de6>
ja     8081ce3 <argp_parse+0x9da3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8081d30 <argp_parse+0x9df0>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     808208a <argp_parse+0xa14a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8081cd7 <argp_parse+0x9d97>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8081d19 <argp_parse+0x9dd9>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x4,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80820b1 <argp_parse+0xa171>
ja     8081da1 <argp_parse+0x9e61>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     80820b1 <argp_parse+0xa171>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    8081d83 <argp_parse+0x9e43>
mov    0x2c(%esp),%eax
jmp    8081b84 <argp_parse+0x9c44>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x5,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
jmp    8081e7a <argp_parse+0x9f3a>
ja     8081e35 <argp_parse+0x9ef5>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     8081e84 <argp_parse+0x9f44>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
je     8081de2 <argp_parse+0x9ea2>
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jae    8081e29 <argp_parse+0x9ee9>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8081e6b <argp_parse+0x9f2b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
cmp    %edx,0x1c(%esp)
ja     8082097 <argp_parse+0xa157>
jb     8081ed6 <argp_parse+0x9f96>
cmp    %eax,0x18(%esp)
ja     8082097 <argp_parse+0xa157>
mov    0x1c(%esp),%edx
mov    0x24(%esp),%eax
imul   0x20(%esp),%edx
imul   0x18(%esp),%eax
lea    (%eax,%edx,1),%ecx
jmp    8081b6e <argp_parse+0x9c2e>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x3,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80820cb <argp_parse+0xa18b>
ja     8081f4a <argp_parse+0xa00a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     80820cb <argp_parse+0xa18b>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    8081f2c <argp_parse+0x9fec>
jmp    8081de2 <argp_parse+0x9ea2>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80861a0 <argp_parse+0xe260>
mov    $0x6,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8082019 <argp_parse+0xa0d9>
ja     8081fda <argp_parse+0xa09a>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8082023 <argp_parse+0xa0e3>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     808208a <argp_parse+0xa14a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8081fce <argp_parse+0xa08e>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8082010 <argp_parse+0xa0d0>
cmpl   $0x3fffff,0x1c(%esp)
ja     8082097 <argp_parse+0xa157>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8081b84 <argp_parse+0x9c44>
xor    %eax,%eax
cmpb   $0x42,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    $0x400,%eax
lea    0x1(%ebp,%ebp,1),%ebp
jmp    8081a47 <argp_parse+0x9b07>
mov    $0x2,%ebp
mov    $0x3e8,%eax
jmp    8081a47 <argp_parse+0x9b07>
mov    0x2c(%esp),%eax
mov    0x74(%esp),%ebx
jmp    8081b84 <argp_parse+0x9c44>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0xffffffff,0x1c(%esp)
jmp    8081b84 <argp_parse+0x9c44>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8081dd7 <argp_parse+0x9e97>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8081f80 <argp_parse+0xa040>
mov    $0x1,%eax
movl   $0xffffffff,0x18(%esp)
movl   $0xffffffff,0x1c(%esp)
jmp    8081b84 <argp_parse+0x9c44>
movl   $0x808f5fc,0xc(%esp)
movl   $0x62,0x8(%esp)
movl   $0x808f4ef,0x4(%esp)
movl   $0x808f4fc,(%esp)
call   804af50 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8084d50 <argp_parse+0xce10>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%eax),%eax
test   %eax,%eax
js     8082168 <argp_parse+0xa228>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804aef0 <close@plt>
test   %eax,%eax
jne    808216a <argp_parse+0xa22a>
add    $0x1c,%esp
repz ret
movl   $0x808f663,0xc(%esp)
movl   $0x41,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f614,(%esp)
call   804af50 <__assert_fail@plt>
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x10900,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a9a0 <openat64@plt>
test   %eax,%eax
mov    %eax,%esi
js     80821c8 <argp_parse+0xa288>
mov    %ebx,%eax
call   8082150 <argp_parse+0xa210>
xor    %eax,%eax
mov    %esi,(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    80821be <argp_parse+0xa27e>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    %edi,(%esp)
call   804a5c0 <chdir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8082298 <argp_parse+0xa358>
call   804aaf0 <__errno_location@plt>
cmpl   $0x24,(%eax)
mov    %eax,0x18(%esp)
je     8082205 <argp_parse+0xa2c5>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   804a950 <strlen@plt>
movl   $0xffffff9c,0x2c(%esp)
test   %eax,%eax
lea    (%edi,%eax,1),%esi
je     80823e2 <argp_parse+0xa4a2>
cmp    $0xfff,%eax
jbe    8082406 <argp_parse+0xa4c6>
xor    %edx,%edx
mov    %edi,%ebx
cmpb   $0x2f,(%edi)
lea    0x1(%edi),%eax
jne    8082301 <argp_parse+0xa3c1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
add    $0x1,%edx
cmpb   $0x2f,-0x1(%eax)
je     8082240 <argp_parse+0xa300>
cmp    $0x2,%edx
je     80822a4 <argp_parse+0xa364>
lea    0x2c(%esp),%ebp
mov    $0x808ee36,%edx
mov    %ebp,%eax
call   8082190 <argp_parse+0xa250>
test   %eax,%eax
jne    8082392 <argp_parse+0xa452>
cmpb   $0x2f,(%ebx)
jne    8082301 <argp_parse+0xa3c1>
movl   $0x808f66c,0xc(%esp)
movl   $0xa3,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f635,(%esp)
call   804af50 <__assert_fail@plt>
add    $0x3c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x3(%edi),%eax
mov    %esi,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <memchr@plt>
test   %eax,%eax
je     80823b0 <argp_parse+0xa470>
lea    0x2c(%esp),%ebp
mov    %edi,%edx
movb   $0x0,(%eax)
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
call   8082190 <argp_parse+0xa250>
mov    0x1c(%esp),%ecx
movb   $0x2f,(%ecx)
test   %eax,%eax
jne    8082392 <argp_parse+0xa452>
cmpb   $0x2f,0x1(%ecx)
lea    0x1(%ecx),%ebx
jne    8082301 <argp_parse+0xa3c1>
lea    0x2(%ecx),%eax
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     80822f6 <argp_parse+0xa3b6>
cmp    %ebx,%esi
jb     808244e <argp_parse+0xa50e>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
sub    %ebx,%eax
cmp    $0xfff,%eax
jle    808237d <argp_parse+0xa43d>
movl   $0x1000,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804a920 <memrchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     80823b0 <argp_parse+0xa470>
movb   $0x0,(%eax)
sub    %ebx,%eax
cmp    $0xfff,%eax
jg     808242a <argp_parse+0xa4ea>
lea    0x2c(%esp),%ebp
mov    %ebx,%edx
mov    %ebp,%eax
call   8082190 <argp_parse+0xa250>
movb   $0x2f,(%edi)
test   %eax,%eax
jne    8082392 <argp_parse+0xa452>
cmpb   $0x2f,0x1(%edi)
lea    0x1(%edi),%ebx
jne    8082310 <argp_parse+0xa3d0>
lea    0x2(%edi),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     8082370 <argp_parse+0xa430>
jmp    8082310 <argp_parse+0xa3d0>
cmp    %ebx,%esi
lea    0x2c(%esp),%ebp
jbe    80823c4 <argp_parse+0xa484>
mov    %ebx,%edx
mov    %ebp,%eax
call   8082190 <argp_parse+0xa250>
test   %eax,%eax
je     80823c4 <argp_parse+0xa484>
mov    0x18(%esp),%esi
mov    %ebp,%eax
mov    (%esi),%ebx
call   8082150 <argp_parse+0xa210>
mov    %ebx,(%esi)
add    $0x3c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    $0xffffffff,%ebx
movl   $0x24,(%eax)
jmp    80821fb <argp_parse+0xa2bb>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8082392 <argp_parse+0xa452>
mov    %ebp,%eax
call   8082150 <argp_parse+0xa210>
jmp    80821fb <argp_parse+0xa2bb>
movl   $0x808f66c,0xc(%esp)
movl   $0x7f,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f621,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808f66c,0xc(%esp)
movl   $0x80,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f629,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808f66c,0xc(%esp)
movl   $0xb4,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f650,(%esp)
call   804af50 <__assert_fail@plt>
movl   $0x808f66c,0xc(%esp)
movl   $0xa4,0x8(%esp)
movl   $0x808f607,0x4(%esp)
movl   $0x808f641,(%esp)
call   804af50 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    80824e0 <argp_parse+0xa5a0>
mov    0x809e1f0,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     8082588 <argp_parse+0xa648>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   804aa20 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8082500 <argp_parse+0xa5c0>
movl   $0x1,0x809e1f0
00
test   %ebx,%ebx
js     80824d7 <argp_parse+0xa597>
cmpl   $0xffffffff,0x809e1f0
je     8082530 <argp_parse+0xa5f0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   804aa20 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804aaf0 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    80824c0 <argp_parse+0xa580>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082480 <argp_parse+0xa540>
test   %eax,%eax
mov    %eax,%ebx
js     80824d7 <argp_parse+0xa597>
movl   $0xffffffff,0x809e1f0
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804aa20 <fcntl@plt>
test   %eax,%eax
js     8082564 <argp_parse+0xa624>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   804aa20 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    80824d7 <argp_parse+0xa597>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   804aef0 <close@plt>
mov    %edi,(%esi)
jmp    80824d7 <argp_parse+0xa597>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082480 <argp_parse+0xa540>
mov    %eax,%ebx
jmp    80824ca <argp_parse+0xa58a>
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80845b0 <argp_parse+0xc670>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
test   %eax,%eax
je     8082618 <argp_parse+0xa6d8>
cmp    $0xa,%eax
je     80825e8 <argp_parse+0xa6a8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    (%edx),%edx
mov    $0x808f677,%edi
mov    $0xa,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80825df <argp_parse+0xa69f>
mov    %edx,(%esp)
call   804ad90 <freecon@plt>
call   804aaf0 <__errno_location@plt>
movl   $0x3d,(%eax)
mov    $0xffffffff,%eax
jmp    80825df <argp_parse+0xa69f>
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
jmp    80825df <argp_parse+0xa69f>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a8e0 <getfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80825d0 <argp_parse+0xa690>
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a7f0 <lgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80825d0 <argp_parse+0xa690>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a660 <fgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80825d0 <argp_parse+0xa690>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8085d70 <argp_parse+0xde30>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x44(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8084ed0 <argp_parse+0xcf90>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0x1,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8085d70 <argp_parse+0xde30>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x44(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x1,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8084ed0 <argp_parse+0xcf90>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x50(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
test   $0xfffffbff,%eax
jne    80829d0 <argp_parse+0xaa90>
test   %eax,%eax
je     80829a0 <argp_parse+0xaa60>
mov    0x809e1f4,%edx
test   %edx,%edx
js     8082898 <argp_parse+0xa958>
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804ac00 <linkat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8082878 <argp_parse+0xa938>
movl   $0x1,0x809e1f4
00
mov    %ebx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,0x2c(%esp)
jne    808285f <argp_parse+0xa91f>
movl   $0xffffffff,0x809e1f4
ff
jmp    80828a1 <argp_parse+0xa961>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%edi
mov    $0x14,%esi
mov    %ebp,0x20(%esp)
jmp    80828cd <argp_parse+0xa98d>
cmp    %edi,0x1c(%esp)
je     8082950 <argp_parse+0xaa10>
mov    %edi,(%esp)
mov    %ebx,%edi
call   804a4c0 <free@plt>
sub    $0x1,%esi
je     8082960 <argp_parse+0xaa20>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8083830 <argp_parse+0xb8f0>
test   %eax,%eax
mov    %eax,%ebx
je     8082a04 <argp_parse+0xaac4>
cmpb   $0x2f,(%ebx)
je     80828b0 <argp_parse+0xa970>
mov    %edi,(%esp)
call   80792e0 <argp_parse+0x13a0>
cmp    %edi,0x1c(%esp)
mov    %eax,%ebp
je     8082904 <argp_parse+0xa9c4>
mov    %edi,(%esp)
call   804a4c0 <free@plt>
test   %ebp,%ebp
je     80829e8 <argp_parse+0xaaa8>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   80842b0 <argp_parse+0xc370>
mov    %ebp,(%esp)
mov    %eax,%edi
call   804a4c0 <free@plt>
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
test   %edi,%edi
jne    80828c4 <argp_parse+0xa984>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    808286b <argp_parse+0xa92b>
lea    0x0(%esi),%esi
sub    $0x1,%esi
mov    %ebx,%edi
jne    80828cd <argp_parse+0xa98d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    $0x28,%ebx
movl   $0x28,(%eax)
cmp    %edi,0x1c(%esp)
mov    $0xffffffff,%eax
je     808286b <argp_parse+0xa92b>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   804a4c0 <free@plt>
mov    0x2c(%esp),%eax
mov    %ebx,(%eax)
mov    0x1c(%esp),%eax
jmp    808286b <argp_parse+0xa92b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebp,0x50(%esp)
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804ac00 <linkat@plt>
call   804aaf0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    808286b <argp_parse+0xa92b>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804a4c0 <free@plt>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    808286b <argp_parse+0xa92b>
mov    0x2c(%esp),%eax
mov    0x20(%esp),%ebp
mov    (%eax),%ebx
cmp    $0x16,%ebx
jne    808296f <argp_parse+0xaa2f>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   804ac00 <linkat@plt>
cmp    %edi,0x1c(%esp)
je     808286b <argp_parse+0xa92b>
mov    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
mov    (%esi),%ebx
mov    %edi,(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%eax
mov    %ebx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
cmpb   $0x0,(%esi)
je     8082b18 <argp_parse+0xabd8>
mov    0x809e1f8,%eax
test   %eax,%eax
je     8082b20 <argp_parse+0xabe0>
test   %eax,%eax
js     8082b0e <argp_parse+0xabce>
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    $0x1b,%eax
cmp    $0xfc0,%eax
ja     8082b00 <argp_parse+0xabc0>
mov    0x74(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x808f695,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804af90 <__sprintf_chk@plt>
mov    %ebx,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8082bb1 <argp_parse+0xac71>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8082ab7 <argp_parse+0xab77>
xor    %eax,%eax
jmp    8082ae5 <argp_parse+0xaba5>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
mov    %ebx,%eax
jmp    8082ae5 <argp_parse+0xaba5>
nop
movl   $0x10900,0x4(%esp)
movl   $0x808f681,(%esp)
call   804a410 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8082ba0 <argp_parse+0xac60>
lea    0x2c(%esp),%ebp
movl   $0x808f68f,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x808f695,0xc(%esp)
movl   $0x20,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804af90 <__sprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804abc0 <access@plt>
mov    %edi,(%esp)
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0x2,%edx
sub    $0x1,%edx
mov    %edx,0x809e1f8
call   804aef0 <close@plt>
mov    0x809e1f8,%eax
jmp    8082aa1 <argp_parse+0xab61>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x809e1f8
ff
xor    %eax,%eax
jmp    8082ae5 <argp_parse+0xaba5>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     8082cf8 <argp_parse+0xadb8>
cmpb   $0x2f,(%ebx)
je     8082cf8 <argp_parse+0xadb8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
je     8082c98 <argp_parse+0xad58>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   8082630 <argp_parse+0xa6f0>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8082c56 <argp_parse+0xad16>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     8082c80 <argp_parse+0xad40>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8082dad <argp_parse+0xae6d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     8082c98 <argp_parse+0xad58>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8082d58 <argp_parse+0xae18>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8082db2 <argp_parse+0xae72>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8082cc8 <argp_parse+0xad88>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8082d90 <argp_parse+0xae50>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8082d10 <argp_parse+0xadd0>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    8082c5b <argp_parse+0xad1b>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8082630 <argp_parse+0xa6f0>
mov    %eax,%ebp
jmp    8082c5b <argp_parse+0xad1b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
call   8082630 <argp_parse+0xa6f0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8082d80 <argp_parse+0xae40>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8082dc1 <argp_parse+0xae81>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     8082c5b <argp_parse+0xad1b>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jmp    8082c5b <argp_parse+0xad1b>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     8082c98 <argp_parse+0xad58>
cmp    $0x26,%ecx
je     8082c98 <argp_parse+0xad58>
cmp    $0x5f,%ecx
je     8082c98 <argp_parse+0xad58>
mov    %ecx,(%eax)
jmp    8082c5b <argp_parse+0xad1b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    8082d25 <argp_parse+0xade5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8082c5b <argp_parse+0xad1b>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     8082f08 <argp_parse+0xafc8>
cmpb   $0x2f,(%ebx)
je     8082f08 <argp_parse+0xafc8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
je     8082ea8 <argp_parse+0xaf68>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   8082650 <argp_parse+0xa710>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8082e66 <argp_parse+0xaf26>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     8082e90 <argp_parse+0xaf50>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8082fbd <argp_parse+0xb07d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     8082ea8 <argp_parse+0xaf68>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8082f68 <argp_parse+0xb028>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8082fc2 <argp_parse+0xb082>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     8082ed8 <argp_parse+0xaf98>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     8082fa0 <argp_parse+0xb060>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8082f20 <argp_parse+0xafe0>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    8082e6b <argp_parse+0xaf2b>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8082650 <argp_parse+0xa710>
mov    %eax,%ebp
jmp    8082e6b <argp_parse+0xaf2b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
call   8082650 <argp_parse+0xa710>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8082f90 <argp_parse+0xb050>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8082fd1 <argp_parse+0xb091>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     8082e6b <argp_parse+0xaf2b>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jmp    8082e6b <argp_parse+0xaf2b>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     8082ea8 <argp_parse+0xaf68>
cmp    $0x26,%ecx
je     8082ea8 <argp_parse+0xaf68>
cmp    $0x5f,%ecx
je     8082ea8 <argp_parse+0xaf68>
mov    %ecx,(%eax)
jmp    8082e6b <argp_parse+0xaf2b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    8082f35 <argp_parse+0xaff5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8082e6b <argp_parse+0xaf2b>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     8083118 <argp_parse+0xb1d8>
cmpb   $0x2f,(%ebx)
je     8083118 <argp_parse+0xb1d8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
je     80830b8 <argp_parse+0xb178>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   804abb0 <setfilecon@plt>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8083076 <argp_parse+0xb136>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     80830a0 <argp_parse+0xb160>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    80831cd <argp_parse+0xb28d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     80830b8 <argp_parse+0xb178>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8083178 <argp_parse+0xb238>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    80831d2 <argp_parse+0xb292>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     80830e8 <argp_parse+0xb1a8>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     80831b0 <argp_parse+0xb270>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8083130 <argp_parse+0xb1f0>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    808307b <argp_parse+0xb13b>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804abb0 <setfilecon@plt>
mov    %eax,%ebp
jmp    808307b <argp_parse+0xb13b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
call   804abb0 <setfilecon@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     80831a0 <argp_parse+0xb260>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    80831e1 <argp_parse+0xb2a1>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     808307b <argp_parse+0xb13b>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jmp    808307b <argp_parse+0xb13b>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     80830b8 <argp_parse+0xb178>
cmp    $0x26,%ecx
je     80830b8 <argp_parse+0xb178>
cmp    $0x5f,%ecx
je     80830b8 <argp_parse+0xb178>
mov    %ecx,(%eax)
jmp    808307b <argp_parse+0xb13b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    8083145 <argp_parse+0xb205>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    808307b <argp_parse+0xb13b>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
mov    0x1014(%esp),%ebx
cmpl   $0xffffff9c,0x1010(%esp)
mov    0x1018(%esp),%esi
je     8083328 <argp_parse+0xb3e8>
cmpb   $0x2f,(%ebx)
je     8083328 <argp_parse+0xb3e8>
mov    0x1010(%esp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
je     80832c8 <argp_parse+0xb388>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   804a480 <lsetfilecon@plt>
mov    %eax,%ebp
call   804aaf0 <__errno_location@plt>
mov    0x18(%esp),%edx
cmp    %edi,%edx
mov    (%eax),%ecx
je     8083286 <argp_parse+0xb346>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
je     80832b0 <argp_parse+0xb370>
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    80833dd <argp_parse+0xb49d>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%ecx
je     80832c8 <argp_parse+0xb388>
lea    -0x1(%ecx),%edx
cmp    $0x1,%edx
ja     8083388 <argp_parse+0xb448>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    80833e2 <argp_parse+0xb4a2>
mov    0x1010(%esp),%eax
test   %eax,%eax
js     80832f8 <argp_parse+0xb3b8>
mov    0x1010(%esp),%eax
cmp    %eax,0x24(%esp)
je     80833c0 <argp_parse+0xb480>
mov    0x1010(%esp),%eax
mov    %eax,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
je     8083340 <argp_parse+0xb400>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    808328b <argp_parse+0xb34b>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a480 <lsetfilecon@plt>
mov    %eax,%ebp
jmp    808328b <argp_parse+0xb34b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
call   804a480 <lsetfilecon@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     80833b0 <argp_parse+0xb470>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    80833f1 <argp_parse+0xb4b1>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     808328b <argp_parse+0xb34b>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jmp    808328b <argp_parse+0xb34b>
lea    0x0(%esi),%esi
cmp    $0xd,%ecx
je     80832c8 <argp_parse+0xb388>
cmp    $0x26,%ecx
je     80832c8 <argp_parse+0xb388>
cmp    $0x5f,%ecx
je     80832c8 <argp_parse+0xb388>
mov    %ecx,(%eax)
jmp    808328b <argp_parse+0xb34b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
jmp    8083355 <argp_parse+0xb415>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    808328b <argp_parse+0xb34b>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
testl  $0xfffffeff,0x1010(%esp)
ff
jne    80835e0 <argp_parse+0xb6a0>
cmp    $0xffffff9c,%ebx
mov    %edx,%ebp
mov    %ecx,%esi
je     80834b0 <argp_parse+0xb570>
cmpb   $0x2f,(%edx)
je     80834b0 <argp_parse+0xb570>
lea    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8082a70 <argp_parse+0xab30>
test   %eax,%eax
mov    %eax,%edi
je     8083509 <argp_parse+0xb5c9>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
je     8083590 <argp_parse+0xb650>
call   8084a40 <argp_parse+0xcb00>
mov    %eax,0x14(%esp)
call   804aaf0 <__errno_location@plt>
lea    0x2c(%esp),%ecx
cmp    %ecx,%edi
mov    (%eax),%edx
je     80834a0 <argp_parse+0xb560>
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804a4c0 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8083500 <argp_parse+0xb5c0>
mov    0x14(%esp),%ebp
jmp    80834cb <argp_parse+0xb58b>
lea    0x0(%esi),%esi
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     80834f0 <argp_parse+0xb5b0>
call   8084a40 <argp_parse+0xcb00>
mov    %eax,%ebp
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8083642 <argp_parse+0xb702>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8084a70 <argp_parse+0xcb30>
mov    %eax,%ebp
jmp    80834cb <argp_parse+0xb58b>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%edx
jne    80835a0 <argp_parse+0xb660>
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   8080bc0 <argp_parse+0x8c80>
test   %eax,%eax
jne    8083656 <argp_parse+0xb716>
test   %ebx,%ebx
js     808352b <argp_parse+0xb5eb>
cmp    %ebx,0x24(%esp)
je     8083625 <argp_parse+0xb6e5>
mov    %ebx,(%esp)
call   804ad30 <fchdir@plt>
test   %eax,%eax
jne    80835f8 <argp_parse+0xb6b8>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     80835ce <argp_parse+0xb68e>
call   8084a40 <argp_parse+0xcb00>
mov    %eax,%ebp
xor    %ebx,%ebx
cmp    $0xffffffff,%ebp
je     8083615 <argp_parse+0xb6d5>
mov    %edi,(%esp)
call   8080c40 <argp_parse+0x8d00>
test   %eax,%eax
jne    8083647 <argp_parse+0xb707>
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
test   %ebx,%ebx
je     80834cb <argp_parse+0xb58b>
call   804aaf0 <__errno_location@plt>
mov    %ebx,(%eax)
jmp    80834cb <argp_parse+0xb58b>
lea    0x0(%esi),%esi
call   8084a70 <argp_parse+0xcb30>
mov    %eax,0x14(%esp)
jmp    8083479 <argp_parse+0xb539>
xchg   %ax,%ax
lea    -0x1(%edx),%ecx
cmp    $0x1,%ecx
jbe    8083509 <argp_parse+0xb5c9>
cmp    $0xd,%edx
je     8083509 <argp_parse+0xb5c9>
cmp    $0x26,%edx
je     8083509 <argp_parse+0xb5c9>
cmp    $0x5f,%edx
je     8083509 <argp_parse+0xb5c9>
mov    %edx,(%eax)
jmp    80834a7 <argp_parse+0xb567>
xchg   %ax,%ax
call   8084a70 <argp_parse+0xcb30>
mov    %eax,%ebp
jmp    8083556 <argp_parse+0xb616>
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
movl   $0x16,(%eax)
jmp    80834cb <argp_parse+0xb58b>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8080c70 <argp_parse+0x8d30>
mov    %esi,(%ebx)
jmp    80834cb <argp_parse+0xb58b>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%ebx
lea    0x0(%esi,%eiz,1),%esi
jmp    8083561 <argp_parse+0xb621>
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   8080c70 <argp_parse+0x8d30>
call   804aaf0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    80834cb <argp_parse+0xb58b>
call   804a610 <__stack_chk_fail@plt>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d360 <argp_parse+0x5420>
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   807d320 <argp_parse+0x53e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x809e1fc,%edx
mov    0xb4(%esp),%ebp
mov    0xb8(%esp),%ebx
mov    0xbc(%esp),%esi
test   %edx,%edx
js     80837a0 <argp_parse+0xb860>
test   %ebx,%ebx
je     80836b3 <argp_parse+0xb773>
cmpl   $0x3ffffffe,0x4(%ebx)
je     80836f8 <argp_parse+0xb7b8>
cmpl   $0x3ffffffe,0xc(%ebx)
je     80836f8 <argp_parse+0xb7b8>
mov    0xb0(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a3e0 <utimensat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8083768 <argp_parse+0xb828>
test   %eax,%eax
jne    80837d8 <argp_parse+0xb898>
movl   $0x1,0x809e1fc
00
mov    %edi,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a6c0 <__fxstatat64@plt>
test   %eax,%eax
jne    80837c8 <argp_parse+0xb888>
cmpl   $0x3ffffffe,0x4(%ebx)
je     80837e8 <argp_parse+0xb8a8>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
cmpl   $0x3ffffffe,0xc(%ebx)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
je     8083810 <argp_parse+0xb8d0>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    80836b3 <argp_parse+0xb773>
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     80837c0 <argp_parse+0xb880>
cmp    $0x16,%eax
je     8083782 <argp_parse+0xb842>
cmp    $0x26,%eax
jne    80836e1 <argp_parse+0xb7a1>
mov    0x809e1fc,%eax
test   %eax,%eax
js     80837a0 <argp_parse+0xb860>
call   804aaf0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    80837a0 <argp_parse+0xb860>
movl   $0xffffffff,0x809e1fc
ff
nop
mov    0xb0(%esp),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
mov    %esi,(%esp)
call   8083400 <argp_parse+0xb4c0>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   $0xfffffeff,%esi
je     8083782 <argp_parse+0xb842>
add    $0x9c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804aaf0 <__errno_location@plt>
mov    (%eax),%eax
jmp    8083774 <argp_parse+0xb834>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3ffffffe,0xc(%ebx)
je     80836ed <argp_parse+0xb7ad>
mov    0x70(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x24(%esp)
jmp    808374e <argp_parse+0xb80e>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    80836b3 <argp_parse+0xb773>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x804a840,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8083fb0 <argp_parse+0xc070>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
movl   $0x24,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80838cd <argp_parse+0xb98d>
mov    0x20(%esp),%eax
movl   $0x0,0x14(%ebx)
movl   $0x0,0x10(%ebx)
mov    %eax,(%ebx)
mov    0x24(%esp),%eax
mov    %eax,0x4(%ebx)
mov    0x28(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%ebx)
movl   $0xc8,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%ebx)
je     80838d4 <argp_parse+0xb994>
mov    %eax,0x1c(%ebx)
add    $0xc8,%eax
mov    %eax,0x20(%ebx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   804a4c0 <free@plt>
jmp    80838cd <argp_parse+0xb98d>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x1c(%ebp),%eax
mov    0x18(%ebp),%esi
add    0x10(%ebp),%esi
mov    %eax,0x10(%esp)
cmp    0x10(%esp),%esi
jae    80839b6 <argp_parse+0xba76>
lea    0x0(%esi),%esi
mov    0x14(%ebp),%ebx
test   %ebx,%ebx
jne    8083959 <argp_parse+0xba19>
mov    0x4(%ebp),%ebx
mov    0x10(%esp),%eax
test   %ebx,%ebx
je     8083bb8 <argp_parse+0xbc78>
add    %ebx,%eax
xor    %edi,%edi
cmp    %eax,0x20(%ebp)
ja     8083cf8 <argp_parse+0xbdb8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    8083dc6 <argp_parse+0xbe86>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x20,(%edx)
add    $0x1,%edi
cmp    %ebx,%edi
jne    8083930 <argp_parse+0xb9f0>
mov    0x1c(%ebp),%eax
mov    %ebx,0x14(%ebp)
mov    %eax,0x10(%esp)
mov    0x10(%esp),%eax
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %eax,0x14(%esp)
call   804ab00 <memchr@plt>
test   %ebx,%ebx
mov    %eax,%ecx
jns    8083986 <argp_parse+0xba46>
movl   $0x0,0x14(%ebp)
xor    %ebx,%ebx
test   %ecx,%ecx
je     8083bde <argp_parse+0xbc9e>
mov    0x8(%ebp),%edi
mov    %ecx,%eax
sub    %esi,%eax
add    %ebx,%eax
cmp    %edi,%eax
jge    80839c8 <argp_parse+0xba88>
lea    0x1(%ecx),%esi
mov    0x1c(%ebp),%ecx
movl   $0x0,0x14(%ebp)
mov    %ecx,0x10(%esp)
cmp    0x10(%esp),%esi
jb     8083908 <argp_parse+0xb9c8>
mov    0x10(%esp),%eax
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%ebp),%eax
lea    -0x1(%edi),%edx
test   %eax,%eax
mov    %eax,0x18(%esp)
js     8083c88 <argp_parse+0xbd48>
lea    0x1(%edx),%edi
sub    %ebx,%edi
add    %esi,%edi
jb     8083c10 <argp_parse+0xbcd0>
mov    %ecx,0x1c(%esp)
call   804af60 <__ctype_b_loc@plt>
mov    %edi,%edx
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
jmp    8083a0b <argp_parse+0xbacb>
lea    0x0(%esi),%esi
sub    $0x1,%edx
cmp    %esi,%edx
jb     8083c18 <argp_parse+0xbcd8>
movzbl (%edx),%ebx
testb  $0x1,(%eax,%ebx,2)
je     8083a00 <argp_parse+0xbac0>
lea    0x1(%edx),%ebx
cmp    %esi,%ebx
jbe    8083c28 <argp_parse+0xbce8>
cmp    %edx,%esi
mov    %ebx,%edi
jbe    8083b19 <argp_parse+0xbbd9>
mov    0x14(%esp),%eax
lea    0x1(%esi,%eax,1),%eax
cmp    %ebx,%eax
je     8083b33 <argp_parse+0xbbf3>
lea    0x1(%edi),%edx
mov    %ebx,%eax
sub    %edx,%eax
cmp    0x18(%esp),%eax
jge    8083b49 <argp_parse+0xbc09>
cmp    0x10(%esp),%ebx
jae    8083b42 <argp_parse+0xbc02>
mov    0x18(%esp),%edx
mov    0x20(%ebp),%eax
sub    0x10(%esp),%eax
add    $0x1,%edx
cmp    %edx,%eax
jg     8083d45 <argp_parse+0xbe05>
mov    0x18(%ebp),%eax
cmp    %eax,%edi
jbe    8083a8e <argp_parse+0xbb4e>
mov    0x0(%ebp),%edx
sub    %eax,%edi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    8083ddb <argp_parse+0xbe9b>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    0x18(%ebp),%eax
mov    %eax,%ecx
sub    %eax,%esi
mov    %eax,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,%eax
add    %esi,0x14(%esp)
sub    %ecx,%eax
mov    %ecx,%esi
mov    0xc(%ebp),%edx
cmp    %eax,%edx
jg     8083b61 <argp_parse+0xbc21>
test   %edx,%edx
mov    %esi,%eax
jle    8083ae2 <argp_parse+0xbba2>
add    $0x1,%eax
mov    %eax,%edx
movb   $0x20,-0x1(%eax)
sub    %esi,%edx
cmp    %edx,0xc(%ebp)
jg     8083ad0 <argp_parse+0xbb90>
mov    %eax,%esi
cmp    %ebx,%esi
jb     8083cd8 <argp_parse+0xbd98>
mov    0x10(%esp),%ecx
mov    $0xffffffff,%edi
mov    0xc(%ebp),%eax
sub    %ebx,%ecx
add    0x14(%esp),%ecx
add    %esi,%ecx
test   %eax,%eax
cmove  %edi,%eax
mov    %ecx,0x1c(%ebp)
mov    %eax,0x14(%ebp)
jmp    80839a8 <argp_parse+0xba68>
xchg   %ax,%ax
movzbl (%edx),%ecx
testb  $0x1,(%eax,%ecx,2)
je     8083b20 <argp_parse+0xbbe0>
sub    $0x1,%edx
cmp    %esi,%edx
jae    8083b10 <argp_parse+0xbbd0>
mov    0x14(%esp),%eax
lea    0x1(%edx),%edi
lea    0x1(%esi,%eax,1),%eax
cmp    %ebx,%eax
jne    8083a39 <argp_parse+0xbaf9>
mov    0x20(%ebp),%eax
sub    %edi,%eax
cmp    0x18(%esp),%eax
jle    8083a4a <argp_parse+0xbb0a>
lea    0x1(%edi),%edx
mov    %ebx,%eax
sub    %edx,%eax
movb   $0xa,(%edi)
mov    %esi,0x10(%esp)
mov    %esi,0x18(%esp)
mov    %edx,%esi
mov    0xc(%ebp),%edx
cmp    %eax,%edx
jle    8083aca <argp_parse+0xbb8a>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
lea    0x1(%eax,%ecx,1),%eax
cmp    %eax,%ebx
je     8083d2f <argp_parse+0xbdef>
xor    %edi,%edi
test   %edx,%edx
jg     8083b95 <argp_parse+0xbc55>
jmp    8083ae2 <argp_parse+0xbba2>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x20,(%edx)
add    $0x1,%edi
cmp    %edi,0xc(%ebp)
jle    8083ae2 <argp_parse+0xbba2>
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jb     8083b80 <argp_parse+0xbc40>
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    8083b89 <argp_parse+0xbc49>
lea    0x0(%esi),%esi
sub    %esi,%eax
xor    %ebx,%ebx
mov    %eax,0x8(%esp)
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
call   804ab00 <memchr@plt>
mov    %eax,%ecx
test   %ecx,%ecx
jne    808398e <argp_parse+0xba4e>
mov    0x14(%esp),%eax
mov    0x8(%ebp),%edx
add    %ebx,%eax
cmp    %edx,%eax
jb     8083db2 <argp_parse+0xbe72>
mov    0xc(%ebp),%edi
sub    $0x1,%edx
test   %edi,%edi
mov    %edi,0x18(%esp)
js     8083d96 <argp_parse+0xbe56>
mov    0x10(%esp),%ecx
jmp    80839da <argp_parse+0xba9a>
lea    0x0(%esi),%esi
mov    %edi,%edx
lea    0x0(%esi),%esi
lea    0x1(%edx),%ebx
cmp    %esi,%ebx
ja     8083df0 <argp_parse+0xbeb0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%edi
jae    8083c60 <argp_parse+0xbd20>
mov    %ecx,%ebx
jmp    8083c40 <argp_parse+0xbd00>
call   804af60 <__ctype_b_loc@plt>
movzbl (%edi),%edx
mov    (%eax),%eax
testb  $0x1,(%eax,%edx,2)
jne    8083c62 <argp_parse+0xbd22>
add    $0x1,%edi
cmp    %ebx,%edi
jne    8083c30 <argp_parse+0xbcf0>
movl   $0x0,0x14(%ebp)
lea    0x1(%edi),%esi
mov    0x1c(%ebp),%ecx
jmp    80839a8 <argp_parse+0xba68>
lea    0x0(%esi,%eiz,1),%esi
je     8083c47 <argp_parse+0xbd07>
call   804af60 <__ctype_b_loc@plt>
mov    %edi,%ebx
mov    (%eax),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%eax
testb  $0x1,(%edx,%eax,2)
jne    8083c70 <argp_parse+0xbd30>
jmp    8083a29 <argp_parse+0xbae9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
cmp    %ecx,%eax
jbe    8083d90 <argp_parse+0xbe50>
sub    %ecx,%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
sub    %ebx,%eax
add    %esi,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
call   804a4b0 <memmove@plt>
mov    0x10(%esp),%edx
sub    0x14(%ebp),%edx
mov    0x14(%esp),%ecx
add    0x1c(%ebp),%ecx
add    %esi,%edx
add    %edi,%esi
movl   $0x0,0x14(%ebp)
sub    %edx,%ecx
mov    %ecx,0x1c(%ebp)
jmp    80839a8 <argp_parse+0xba68>
nop
mov    0x18(%esp),%eax
add    0x14(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
call   804a4b0 <memmove@plt>
jmp    8083aea <argp_parse+0xbbaa>
nop
mov    0x10(%esp),%ecx
lea    (%esi,%ebx,1),%edi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
sub    %esi,%ecx
mov    %ecx,0x8(%esp)
call   804a4b0 <memmove@plt>
add    %ebx,0x1c(%ebp)
mov    %esi,(%esp)
mov    %edi,%esi
mov    %ebx,0x8(%esp)
movl   $0x20,0x4(%esp)
call   804aa80 <memset@plt>
jmp    808394f <argp_parse+0xba0f>
mov    0x20(%ebp),%eax
sub    %ebx,%eax
cmp    %eax,%edx
jle    8083aca <argp_parse+0xbb8a>
lea    0x0(%esi,%eiz,1),%esi
jmp    8083b75 <argp_parse+0xbc35>
mov    0x10(%esp),%ecx
add    %edi,%edx
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
sub    %ebx,%ecx
mov    %ecx,0x8(%esp)
mov    %ecx,0x10(%esp)
call   804a4b0 <memmove@plt>
mov    0xc(%ebp),%eax
lea    0x1(%edi),%edx
mov    0x10(%esp),%ecx
mov    %esi,0x18(%esp)
mov    %esi,0x10(%esp)
lea    0x1(%edi,%eax,1),%ebx
lea    (%ebx,%ecx,1),%eax
mov    %eax,0x14(%esp)
mov    %ebx,%eax
sub    %esi,0x14(%esp)
sub    %edx,%eax
mov    %edx,%esi
movb   $0xa,(%edi)
jmp    8083abf <argp_parse+0xbb7f>
mov    0x14(%esp),%eax
add    %ebx,%eax
mov    %eax,0x14(%ebp)
sub    %eax,%edx
mov    0x10(%esp),%eax
add    %edx,%eax
mov    %eax,0x1c(%ebp)
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x14(%ebp)
mov    0x1c(%ebp),%eax
sub    0x18(%ebp),%eax
mov    %eax,0x10(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    8083948 <argp_parse+0xba08>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   804acc0 <__overflow@plt>
jmp    8083aa6 <argp_parse+0xbb66>
mov    %ebx,%edi
jmp    8083a29 <argp_parse+0xbae9>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    0x1c(%ebx),%edx
mov    0x18(%ebx),%eax
cmp    %eax,%edx
jbe    8083e39 <argp_parse+0xbef9>
mov    (%ebx),%ecx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a4c0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    804a4c0 <free@plt>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x20(%ebx),%eax
sub    0x1c(%ebx),%eax
cmp    %esi,%eax
jb     8083e78 <argp_parse+0xbf38>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80838e0 <argp_parse+0xb9a0>
mov    (%ebx),%eax
mov    0x18(%ebx),%edx
mov    %eax,0xc(%esp)
mov    0x1c(%ebx),%eax
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
sub    %edx,%eax
mov    %eax,0x8(%esp)
call   804abd0 <fwrite_unlocked@plt>
mov    0x1c(%ebx),%ecx
mov    0x18(%ebx),%edx
mov    %ecx,%edi
sub    %edx,%edi
cmp    %edi,%eax
jne    8083ed8 <argp_parse+0xbf98>
mov    0x20(%ebx),%eax
mov    %edx,0x1c(%ebx)
movl   $0x0,0x10(%ebx)
sub    %edx,%eax
cmp    %eax,%esi
jbe    8083e68 <argp_parse+0xbf28>
add    %eax,%esi
jae    8083f00 <argp_parse+0xbfc0>
call   804aaf0 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    8083e6d <argp_parse+0xbf2d>
xchg   %ax,%ax
sub    %eax,0x10(%ebx)
sub    %eax,%ecx
add    %edx,%eax
mov    %ecx,0x1c(%ebx)
sub    %edx,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804a4b0 <memmove@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   804a7e0 <realloc@plt>
test   %eax,%eax
je     8083ec7 <argp_parse+0xbf87>
add    %eax,%esi
mov    %eax,0x18(%ebx)
mov    %esi,0x20(%ebx)
mov    %eax,0x1c(%ebx)
jmp    8083e68 <argp_parse+0xbf28>
push   %ebp
mov    $0x96,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
lea    0x48(%esp),%edi
mov    %eax,0x4(%esp)
mov    0x44(%esp),%ebp
mov    %esi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
je     8083f8b <argp_parse+0xc04b>
mov    0x1c(%esi),%eax
mov    0x20(%esi),%ebx
mov    %edi,0x14(%esp)
mov    %ebp,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
sub    %eax,%ebx
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ab80 <__vsnprintf_chk@plt>
cmp    %eax,%ebx
ja     8083f98 <argp_parse+0xc058>
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8083e50 <argp_parse+0xbf10>
test   %eax,%eax
jne    8083f48 <argp_parse+0xc008>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    %eax,0x1c(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x454(%esp),%eax
mov    0x460(%esp),%edi
mov    0x45c(%esp),%ebx
mov    0x464(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x458(%esp),%eax
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
test   %edi,%edi
mov    $0x808f898,%eax
cmove  %eax,%edi
test   %ebx,%ebx
jne    808400e <argp_parse+0xc0ce>
lea    0x2c(%esp),%eax
mov    $0x400,%bx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%esi
jmp    8084025 <argp_parse+0xc0e5>
lea    0x0(%esi,%eiz,1),%esi
add    %ebx,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
je     808407f <argp_parse+0xc13f>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x450(%esp),%eax
mov    %eax,(%esp)
call   *%ebp
test   %eax,%eax
mov    %eax,%edx
js     80840c0 <argp_parse+0xc180>
cmp    %edx,%ebx
ja     8084100 <argp_parse+0xc1c0>
cmp    0x14(%esp),%esi
je     808405b <argp_parse+0xc11b>
mov    %esi,(%esp)
call   *0x8(%edi)
cmp    $0x40000000,%ebx
jbe    8084018 <argp_parse+0xc0d8>
cmp    $0x80000000,%ebx
jae    8084148 <argp_parse+0xc208>
mov    $0x80000000,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
jne    8084025 <argp_parse+0xc0e5>
mov    0xc(%edi),%eax
test   %eax,%eax
je     808408b <argp_parse+0xc14b>
mov    %ebx,(%esp)
call   *%eax
call   804aaf0 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0xc,(%eax)
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8084181 <argp_parse+0xc241>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
call   804aaf0 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
cmp    $0x22,%ecx
je     8084047 <argp_parse+0xc107>
xor    %ebx,%ebx
cmp    %esi,0x14(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
je     8084098 <argp_parse+0xc158>
mov    %esi,(%esp)
call   *0x8(%edi)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
jmp    8084098 <argp_parse+0xc158>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
cmp    %eax,%esi
lea    0x1(%edx),%ebp
movb   $0x0,(%esi,%edx,1)
je     808415a <argp_parse+0xc21a>
cmp    %ebp,%ebx
jbe    8084140 <argp_parse+0xc200>
cmp    %esi,0x14(%esp)
je     8084140 <argp_parse+0xc200>
mov    0x4(%edi),%eax
mov    %esi,%ebx
test   %eax,%eax
je     8084098 <argp_parse+0xc158>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
cmovne %eax,%ebx
jmp    8084098 <argp_parse+0xc158>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    8084098 <argp_parse+0xc158>
nop
call   804aaf0 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0x24,(%eax)
jmp    8084098 <argp_parse+0xc158>
mov    %ebp,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%ebx
je     808417a <argp_parse+0xc23a>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <memcpy@plt>
jmp    8084098 <argp_parse+0xc158>
mov    %ebp,%ebx
jmp    808407f <argp_parse+0xc13f>
call   804a610 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8082480 <argp_parse+0xa540>
test   %eax,%eax
mov    %eax,%edx
js     80841f8 <argp_parse+0xc2b8>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     80841f0 <argp_parse+0xc2b0>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   8082480 <argp_parse+0xa540>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    80841f0 <argp_parse+0xc2b0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   8082480 <argp_parse+0xa540>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   804a790 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804a540 <fclose@plt>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8084270 <argp_parse+0xc330>
test   %dl,%dl
je     8084267 <argp_parse+0xc327>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     8084290 <argp_parse+0xc350>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    8084267 <argp_parse+0xc327>
call   804aaf0 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   804aaf0 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8079350 <argp_parse+0x1410>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80793b0 <argp_parse+0x1470>
mov    %ebx,%ebp
sub    0x30(%esp),%ebp
add    %eax,%ebp
test   %eax,%eax
je     80842e8 <argp_parse+0xc3a8>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x34(%esp),%edi
cmpb   $0x2f,(%edi)
je     8084370 <argp_parse+0xc430>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%edx
mov    %eax,0xc(%esp)
lea    0x1(%ebp,%esi,1),%eax
add    %edx,%eax
mov    %eax,(%esp)
call   804a800 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8084390 <argp_parse+0xc450>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804ac20 <mempcpy@plt>
add    %eax,%esi
movb   $0x2f,(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
je     808434d <argp_parse+0xc40d>
mov    0x34(%esp),%eax
mov    %esi,%ecx
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
sub    %eax,%ecx
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804ac20 <mempcpy@plt>
movb   $0x0,(%eax)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    80842f1 <argp_parse+0xc3b1>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    80842f1 <argp_parse+0xc3b1>
jmp    8084370 <argp_parse+0xc430>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8084366 <argp_parse+0xc426>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
cmp    $0x16,%eax
je     80843c5 <argp_parse+0xc485>
jle    80843c0 <argp_parse+0xc480>
cmp    $0x26,%eax
je     80843c5 <argp_parse+0xc485>
cmp    $0x5f,%eax
je     80843c5 <argp_parse+0xc485>
mov    $0x1,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x10,%eax
jne    80843b5 <argp_parse+0xc475>
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    (%edx),%ebx
mov    0x4(%ebx),%ecx
cmp    $0x3ffffffe,%ecx
je     8084428 <argp_parse+0xc4e8>
cmp    $0x3fffffff,%ecx
je     8084408 <argp_parse+0xc4c8>
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8084460 <argp_parse+0xc520>
xor    %eax,%eax
cmp    $0x3fffffff,%edx
je     8084448 <argp_parse+0xc508>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0xc(%ebx)
je     8084488 <argp_parse+0xc548>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   807a050 <argp_parse+0x2110>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
jmp    80843ec <argp_parse+0xc4ac>
xchg   %ax,%ax
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8084478 <argp_parse+0xc538>
mov    0x40(%eax),%ecx
mov    0x44(%eax),%eax
mov    %ecx,(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
cmp    $0x3fffffff,%edx
jne    80843fe <argp_parse+0xc4be>
add    $0x8,%ebx
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   807a050 <argp_parse+0x2110>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
mov    0x48(%eax),%edx
mov    0x4c(%eax),%eax
mov    %edx,0x8(%ebx)
mov    %eax,0xc(%ebx)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    80843fe <argp_parse+0xc4be>
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
xor    %eax,%eax
jmp    80843fe <argp_parse+0xc4be>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
je     8084556 <argp_parse+0xc616>
mov    0x4(%eax),%ebp
lea    -0x3ffffffe(%ebp),%edx
cmp    $0x1,%edx
ja     8084528 <argp_parse+0xc5e8>
mov    0xc(%eax),%esi
lea    -0x3ffffffe(%esi),%ecx
cmp    $0x1,%ecx
ja     8084548 <argp_parse+0xc608>
xor    %ebx,%ebx
xor    %edi,%edi
cmp    $0x1,%edx
jbe    80844f0 <argp_parse+0xc5b0>
cmp    $0x1,%ecx
jbe    808450a <argp_parse+0xc5ca>
xor    %eax,%eax
cmp    $0x1,%ebx
sete   %al
add    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
cmp    $0x3ffffffe,%ebp
sete   %bl
cmp    $0x1,%ecx
movl   $0x0,(%eax)
mov    $0x1,%di
ja     80844d9 <argp_parse+0xc599>
movl   $0x0,0x8(%eax)
xor    %eax,%eax
cmp    $0x3ffffffe,%esi
sete   %al
mov    $0x1,%edi
add    %eax,%ebx
jmp    80844d9 <argp_parse+0xc599>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%ebp
jbe    80844bd <argp_parse+0xc57d>
call   804aaf0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    80844e3 <argp_parse+0xc5a3>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%esi
jbe    80844cb <argp_parse+0xc58b>
jmp    8084530 <argp_parse+0xc5f0>
movl   $0x808f6bc,0xc(%esp)
movl   $0x5c,0x8(%esp)
movl   $0x808f6a9,0x4(%esp)
movl   $0x808f6b3,(%esp)
call   804af50 <__assert_fail@plt>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8083670 <argp_parse+0xb730>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0xe8(%esp),%edx
mov    0xe0(%esp),%edi
test   %edx,%edx
je     8084828 <argp_parse+0xc8e8>
mov    (%edx),%ecx
lea    0x30(%esp),%eax
mov    0x4(%edx),%ebx
mov    %eax,0x2c(%esp)
mov    %ecx,0x30(%esp)
mov    0x8(%edx),%ecx
mov    %ebx,0x34(%esp)
mov    0xc(%edx),%ebx
mov    %ecx,0x38(%esp)
mov    %ebx,0x3c(%esp)
call   80844a0 <argp_parse+0xc560>
test   %eax,%eax
mov    %eax,%ebp
js     80849c0 <argp_parse+0xca80>
mov    0xe4(%esp),%eax
mov    %edi,%ebx
shr    $0x1f,%ebx
test   %eax,%eax
sete   0x1c(%esp)
test   %bl,%bl
jne    80849d0 <argp_parse+0xca90>
mov    0x809e204,%eax
test   %eax,%eax
js     808465d <argp_parse+0xc71d>
cmp    $0x2,%ebp
je     80847a8 <argp_parse+0xc868>
mov    0x2c(%esp),%eax
test   %bl,%bl
jne    8084860 <argp_parse+0xc920>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804ad10 <futimens@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jle    8084890 <argp_parse+0xc950>
call   804aaf0 <__errno_location@plt>
movl   $0x26,(%eax)
test   %ebp,%ebp
movl   $0xffffffff,0x809e204
ff
movl   $0xffffffff,0x809e200
ff
jne    8084720 <argp_parse+0xc7e0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     80848b0 <argp_parse+0xc970>
mov    (%ecx),%eax
mov    $0x10624dd3,%esi
mov    0x4(%ecx),%ebp
mov    %eax,0x40(%esp)
mov    %ebp,%eax
imul   %esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ecx
sar    $0x1f,%ebp
sar    $0x6,%edx
sub    %ebp,%edx
mov    %eax,0x48(%esp)
mov    %ecx,%eax
mov    %edx,0x44(%esp)
imul   %esi
sar    $0x1f,%ecx
lea    0x40(%esp),%ebp
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,0x4c(%esp)
test   %bl,%bl
mov    %ebp,0x8(%esp)
jne    8084838 <argp_parse+0xc8f8>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804af10 <futimesat@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8084778 <argp_parse+0xc838>
test   %ebp,%ebp
je     808470d <argp_parse+0xc7cd>
cmpl   $0x7a11f,0x4(%ebp)
setg   %bl
cmpl   $0x7a11f,0xc(%ebp)
setg   %cl
jg     80848f8 <argp_parse+0xc9b8>
test   %bl,%bl
jne    80848f8 <argp_parse+0xc9b8>
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3,%ebp
je     8084752 <argp_parse+0xc812>
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8084800 <argp_parse+0xc8c0>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    80849c0 <argp_parse+0xca80>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     80848b0 <argp_parse+0xc970>
lea    0x2c(%esp),%edx
xor    %esi,%esi
lea    0x60(%esp),%eax
call   80843d0 <argp_parse+0xc490>
test   %al,%al
je     8084679 <argp_parse+0xc739>
jmp    808470d <argp_parse+0xc7cd>
nop
cmpb   $0x0,0x1c(%esp)
mov    $0xffffffff,%esi
jne    808470d <argp_parse+0xc7cd>
mov    0xe4(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804aa00 <utimes@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    80848b8 <argp_parse+0xc978>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a740 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    80849c0 <argp_parse+0xca80>
mov    0x2c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     80848e0 <argp_parse+0xc9a0>
cmpl   $0x3ffffffe,0xc(%eax)
je     80849f0 <argp_parse+0xcab0>
mov    $0x3,%ebp
jmp    8084633 <argp_parse+0xc6f3>
lea    0x0(%esi),%esi
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804ae60 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    808474a <argp_parse+0xc80a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
xor    %ebp,%ebp
jmp    8084602 <argp_parse+0xc6c2>
nop
mov    0xe4(%esp),%eax
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   804af10 <futimesat@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0xe4(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   804a3e0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jg     8084652 <argp_parse+0xc712>
xchg   %ax,%ax
jne    8084a1b <argp_parse+0xcadb>
movl   $0x1,0x809e204
00
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    80846c1 <argp_parse+0xc781>
nop
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804ae60 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    80847cd <argp_parse+0xc88d>
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    80847f3 <argp_parse+0xc8b3>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x1c(%esp)
call   804a740 <__fxstat64@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    808470d <argp_parse+0xc7cd>
mov    0xa8(%esp),%eax
mov    0x4(%ebp),%edx
mov    0xa0(%esp),%esi
sub    0x0(%ebp),%esi
mov    %eax,0x1c(%esp)
mov    0x8(%ebp),%eax
sub    %eax,0x1c(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x54(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x50(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x5c(%esp)
xor    %edx,%edx
test   %bl,%bl
mov    %eax,0x58(%esp)
je     808497a <argp_parse+0xca3a>
cmp    $0x1,%esi
jne    808497a <argp_parse+0xca3a>
mov    0xa4(%esp),%ebx
test   %ebx,%ebx
jne    808497a <argp_parse+0xca3a>
movl   $0x0,0x54(%esp)
lea    0x50(%esp),%edx
test   %cl,%cl
je     8084a10 <argp_parse+0xcad0>
cmpl   $0x1,0x1c(%esp)
jne    8084a10 <argp_parse+0xcad0>
mov    0xac(%esp),%eax
test   %eax,%eax
jne    8084a10 <argp_parse+0xcad0>
movl   $0x0,0x5c(%esp)
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804af10 <futimesat@plt>
jmp    808470d <argp_parse+0xc7cd>
nop
mov    $0xffffffff,%esi
jmp    808470d <argp_parse+0xc7cd>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1c(%esp)
je     808461d <argp_parse+0xc6dd>
call   804aaf0 <__errno_location@plt>
mov    $0xffffffff,%esi
movl   $0x9,(%eax)
jmp    808470d <argp_parse+0xc7cd>
mov    0xac(%esp),%edx
mov    0xa8(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    80847f3 <argp_parse+0xc8b3>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    80849a4 <argp_parse+0xca64>
xor    %esi,%esi
jmp    808470d <argp_parse+0xc7cd>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804aaf0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8084896 <argp_parse+0xc956>
xchg   %ax,%ax
jmp    808465d <argp_parse+0xc71d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   80845b0 <argp_parse+0xc670>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ebx
test   %edx,%edx
je     8084b60 <argp_parse+0xcc20>
mov    (%edx),%esi
lea    0x20(%esp),%eax
mov    0x4(%edx),%edi
mov    0xc(%edx),%ecx
mov    0x8(%edx),%edx
mov    %esi,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   80844a0 <argp_parse+0xc560>
test   %eax,%eax
mov    %eax,%esi
js     8084c1f <argp_parse+0xccdf>
mov    0x809e200,%edi
test   %edi,%edi
js     8084b0a <argp_parse+0xcbca>
cmp    $0x2,%esi
je     8084bd8 <argp_parse+0xcc98>
mov    0x1c(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   804a3e0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%edi
jle    8084c28 <argp_parse+0xcce8>
call   804aaf0 <__errno_location@plt>
movl   $0x26,(%eax)
test   %esi,%esi
movl   $0xffffffff,0x809e200
ff
je     8084b88 <argp_parse+0xcc48>
cmp    $0x3,%esi
je     8084b3d <argp_parse+0xcbfd>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804aec0 <__lxstat64@plt>
test   %eax,%eax
jne    8084c1f <argp_parse+0xccdf>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     8084ba4 <argp_parse+0xcc64>
lea    0x1c(%esp),%edx
lea    0x30(%esp),%eax
call   80843d0 <argp_parse+0xc490>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     8084ba4 <argp_parse+0xcc64>
jmp    8084bcc <argp_parse+0xcc8c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x809e200,%edx
xor    %eax,%eax
xor    %esi,%esi
movl   $0x0,0x1c(%esp)
test   %edx,%edx
jns    8084ad8 <argp_parse+0xcb98>
movl   $0xffffffff,0x809e200
ff
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804aec0 <__lxstat64@plt>
test   %eax,%eax
jne    8084c1f <argp_parse+0xccdf>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8084c14 <argp_parse+0xccd4>
mov    0x1c(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
call   80845b0 <argp_parse+0xc670>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804aec0 <__lxstat64@plt>
test   %eax,%eax
jne    8084c1f <argp_parse+0xccdf>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     8084c50 <argp_parse+0xcd10>
cmpl   $0x3ffffffe,0xc(%eax)
je     8084c60 <argp_parse+0xcd20>
mov    $0x3,%esi
jmp    8084ad8 <argp_parse+0xcb98>
call   804aaf0 <__errno_location@plt>
movl   $0x26,(%eax)
mov    $0xffffffff,%eax
jmp    8084bcc <argp_parse+0xcc8c>
xchg   %ax,%ax
jne    8084c70 <argp_parse+0xcd30>
movl   $0x1,0x809e204
00
mov    %edi,%eax
movl   $0x1,0x809e200
00
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    8084c0a <argp_parse+0xccca>
nop
mov    0x7c(%esp),%edx
mov    0x78(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    8084c0a <argp_parse+0xccca>
call   804aaf0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8084c2a <argp_parse+0xccea>
jmp    8084b0a <argp_parse+0xcbca>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8084d37 <argp_parse+0xcdf7>
mov    (%edx),%eax
lea    0x4(%edx),%edi
mov    $0xffffffff,%esi
mov    %edi,%ebx
mov    %eax,(%esp)
call   804a950 <strlen@plt>
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    8084cd0 <argp_parse+0xcd90>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
add    $0x4,%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a950 <strlen@plt>
add    %ebp,%eax
mov    %eax,%edx
cmovb  %esi,%edx
mov    %edx,%ebp
subl   $0x1,0x1c(%esp)
jne    8084cb8 <argp_parse+0xcd78>
test   %ebp,%ebp
js     8084d28 <argp_parse+0xcde8>
lea    0x1(%ebp),%edx
mov    %edx,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,0x1c(%esp)
mov    %eax,%ebx
jmp    8084cf3 <argp_parse+0xcdb3>
xchg   %ax,%ax
add    $0x4,%edi
mov    -0x4(%edi),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x8(%esp)
add    %ebp,%ebx
call   804a4e0 <memcpy@plt>
subl   $0x1,0x18(%esp)
jne    8084cf0 <argp_parse+0xcdb0>
mov    0x1c(%esp),%eax
movb   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804aaf0 <__errno_location@plt>
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    8084d20 <argp_parse+0xcde0>
movl   $0x1,(%esp)
call   8081640 <argp_parse+0x9700>
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
jmp    8084d19 <argp_parse+0xcdd9>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%edx
movzbl (%edi),%eax
test   %al,%al
je     8084dd9 <argp_parse+0xce99>
cmp    $0x25,%al
jne    8084da0 <argp_parse+0xce60>
cmpb   $0x73,0x1(%edi)
jne    8084da0 <argp_parse+0xce60>
mov    %edi,%esi
xor    %eax,%eax
jmp    8084d83 <argp_parse+0xce43>
lea    0x0(%esi),%esi
cmp    $0x25,%bl
jne    8084da0 <argp_parse+0xce60>
cmpb   $0x73,0x1(%ecx)
jne    8084da0 <argp_parse+0xce60>
lea    0x2(%esi),%ecx
movzbl (%ecx),%ebx
add    $0x1,%eax
mov    %ecx,%esi
test   %bl,%bl
jne    8084d78 <argp_parse+0xce38>
call   8084c80 <argp_parse+0xcd40>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x1c(%esp),%eax
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804aa50 <__vasprintf_chk@plt>
mov    %eax,%edx
mov    0x1c(%esp),%eax
test   %edx,%edx
jns    8084d97 <argp_parse+0xce57>
call   804aaf0 <__errno_location@plt>
cmpl   $0xc,(%eax)
je     8084ddd <argp_parse+0xce9d>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    8084d92 <argp_parse+0xce52>
call   8056010 <fchmod@plt+0xb070>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%edx),%edi
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    0x24(%edx),%esi
mov    %edx,0x14(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %eax,(%esp)
lea    0x0(%esi),%esi
cmp    %edi,%esi
jle    8084e5d <argp_parse+0xcf1d>
cmp    %esi,(%esp)
jle    8084e5d <argp_parse+0xcf1d>
mov    (%esp),%edx
mov    %esi,%ebp
sub    %edi,%ebp
sub    %esi,%edx
cmp    %ebp,%edx
jg     8084e80 <argp_parse+0xcf40>
test   %edx,%edx
jle    8084ebd <argp_parse+0xcf7d>
mov    0x4(%esp),%ebx
lea    (%ebx,%edi,4),%eax
add    %edx,%edi
lea    (%ebx,%edi,4),%edx
lea    0x0(%esi),%esi
mov    (%eax),%ecx
mov    (%eax,%ebp,4),%ebx
mov    %ebx,(%eax)
mov    %ecx,(%eax,%ebp,4)
add    $0x4,%eax
cmp    %edx,%eax
jne    8084e48 <argp_parse+0xcf08>
cmp    %edi,%esi
jg     8084e1c <argp_parse+0xcedc>
mov    0x10(%esp),%edi
mov    %edi,%eax
sub    %esi,%eax
mov    0x14(%esp),%esi
add    0xc(%esp),%eax
mov    %edi,0x24(%esi)
mov    %eax,0x20(%esi)
add    $0x18,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
jle    8084eb5 <argp_parse+0xcf75>
mov    0x4(%esp),%ebx
lea    0x0(%ebp,%edi,1),%edx
mov    %esi,0x8(%esp)
lea    (%ebx,%edi,4),%eax
lea    (%ebx,%edx,4),%ebx
mov    (%esp),%edx
sub    %esi,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
mov    (%eax,%edx,4),%esi
mov    %esi,(%eax)
mov    %ecx,(%eax,%edx,4)
add    $0x4,%eax
cmp    %ebx,%eax
jne    8084ea0 <argp_parse+0xcf60>
mov    0x8(%esp),%esi
sub    %ebp,(%esp)
jmp    8084e18 <argp_parse+0xced8>
add    %edx,%edi
jmp    8084e18 <argp_parse+0xced8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x88(%esp),%ebp
mov    0x70(%esp),%ebx
mov    0x4(%ebp),%eax
test   %ebx,%ebx
mov    %eax,0x24(%esp)
jle    8085110 <argp_parse+0xd1d0>
mov    0x0(%ebp),%eax
movl   $0x0,0xc(%ebp)
test   %eax,%eax
jne    8085058 <argp_parse+0xd118>
movl   $0x1,0x0(%ebp)
mov    $0x1,%eax
mov    0x8c(%esp),%edx
mov    %eax,0x24(%ebp)
mov    %eax,0x20(%ebp)
mov    $0x1,%eax
movl   $0x0,0x14(%ebp)
test   %edx,%edx
je     8085140 <argp_parse+0xd200>
mov    0x78(%esp),%ecx
mov    %eax,0x1c(%ebp)
movzbl (%ecx),%edx
cmp    $0x2d,%dl
je     8085167 <argp_parse+0xd227>
cmp    $0x2b,%dl
je     80853a8 <argp_parse+0xd468>
xor    $0x1,%eax
mov    %eax,0x18(%ebp)
mov    0x78(%esp),%eax
movl   $0x1,0x10(%ebp)
movzbl (%eax),%eax
cmp    $0x3a,%al
mov    $0x0,%eax
cmovne 0x24(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x14(%ebp),%eax
test   %eax,%eax
je     8085090 <argp_parse+0xd150>
cmpb   $0x0,(%eax)
je     8085090 <argp_parse+0xd150>
mov    %eax,0x20(%esp)
mov    0x7c(%esp),%ebx
test   %ebx,%ebx
je     80853f8 <argp_parse+0xd4b8>
mov    0x0(%ebp),%eax
mov    0x74(%esp),%ecx
mov    %eax,0x30(%esp)
lea    (%ecx,%eax,4),%eax
mov    %eax,0x34(%esp)
mov    (%eax),%eax
movsbl 0x1(%eax),%edx
cmp    $0x2d,%dl
je     80851a0 <argp_parse+0xd260>
mov    0x84(%esp),%ecx
test   %ecx,%ecx
jne    8085178 <argp_parse+0xd238>
mov    0x20(%esp),%ebx
lea    0x1(%ebx),%esi
mov    %esi,0x14(%ebp)
movzbl (%ebx),%edi
mov    %edi,%eax
movsbl %al,%ebx
mov    0x78(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
cmpb   $0x0,(%esi)
jne    8084fef <argp_parse+0xd0af>
addl   $0x1,0x0(%ebp)
lea    -0x3a(%edi),%edx
cmp    $0x1,%dl
ja     80853d0 <argp_parse+0xd490>
mov    0x24(%esp),%eax
test   %eax,%eax
je     8085046 <argp_parse+0xd106>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f6d6,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    %ebx,0x8(%ebp)
add    $0x5c,%esp
mov    $0x3f,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x10(%ebp),%ecx
test   %ecx,%ecx
je     8084f0f <argp_parse+0xcfcf>
mov    0x78(%esp),%eax
movzbl (%eax),%eax
cmp    $0x2b,%al
je     8085076 <argp_parse+0xd136>
cmp    $0x2d,%al
jne    8084f60 <argp_parse+0xd020>
mov    0x78(%esp),%esi
mov    0x78(%esp),%eax
add    $0x1,%esi
movzbl 0x1(%eax),%eax
mov    %esi,0x78(%esp)
jmp    8084f60 <argp_parse+0xd020>
xchg   %ax,%ax
mov    0x0(%ebp),%edx
cmp    %edx,0x24(%ebp)
jle    808509b <argp_parse+0xd15b>
mov    %edx,0x24(%ebp)
cmp    0x20(%ebp),%edx
jge    80850a3 <argp_parse+0xd163>
mov    %edx,0x20(%ebp)
cmpl   $0x1,0x18(%ebp)
je     8085348 <argp_parse+0xd408>
cmp    %edx,0x70(%esp)
je     8085338 <argp_parse+0xd3f8>
mov    0x74(%esp),%eax
mov    (%eax,%edx,4),%eax
cmpb   $0x2d,(%eax)
jne    8085120 <argp_parse+0xd1e0>
cmpb   $0x2d,0x1(%eax)
jne    8085290 <argp_parse+0xd350>
cmpb   $0x0,0x2(%eax)
jne    8085290 <argp_parse+0xd350>
mov    0x20(%ebp),%eax
add    $0x1,%edx
mov    0x24(%ebp),%ecx
mov    %edx,0x0(%ebp)
cmp    %ecx,%eax
je     8085748 <argp_parse+0xd808>
cmp    %ecx,%edx
je     80850fd <argp_parse+0xd1bd>
mov    0x74(%esp),%eax
mov    %ebp,%edx
call   8084df0 <argp_parse+0xceb0>
mov    0x20(%ebp),%eax
mov    0x70(%esp),%ecx
mov    %ecx,0x24(%ebp)
mov    %ecx,%edx
mov    %ecx,0x0(%ebp)
cmp    %edx,%eax
je     8085110 <argp_parse+0xd1d0>
mov    %eax,0x0(%ebp)
add    $0x5c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%ebp),%edi
test   %edi,%edi
je     8085110 <argp_parse+0xd1d0>
add    $0x1,%edx
mov    %eax,0xc(%ebp)
mov    $0x1,%eax
mov    %edx,0x0(%ebp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x808dd85,(%esp)
call   804a7d0 <getenv@plt>
mov    0x78(%esp),%ecx
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x1c(%ebp)
movzbl (%ecx),%edx
cmp    $0x2d,%dl
jne    8084f43 <argp_parse+0xd003>
movl   $0x2,0x18(%ebp)
addl   $0x1,0x78(%esp)
jmp    8084f52 <argp_parse+0xd012>
cmpb   $0x0,0x2(%eax)
jne    80851a0 <argp_parse+0xd260>
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a910 <strchr@plt>
mov    0x20(%esp),%ebx
test   %eax,%eax
jne    8084fc8 <argp_parse+0xd088>
lea    0x0(%esi),%esi
mov    0x20(%esp),%esi
movzbl (%esi),%eax
cmp    $0x3d,%al
je     8085758 <argp_parse+0xd818>
test   %al,%al
jne    80851c2 <argp_parse+0xd282>
jmp    8085758 <argp_parse+0xd818>
test   %al,%al
lea    0x0(%esi),%esi
je     80851cc <argp_parse+0xd28c>
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x3d,%al
jne    80851b8 <argp_parse+0xd278>
mov    %esi,%eax
sub    0x20(%esp),%eax
mov    %eax,%ecx
mov    0x7c(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8085763 <argp_parse+0xd823>
mov    %eax,%ebx
xor    %eax,%eax
mov    %esi,0x3c(%esp)
mov    %eax,%esi
mov    %ebp,0x88(%esp)
mov    %ecx,%ebp
movl   $0xffffffff,0x38(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
jmp    8085239 <argp_parse+0xd2f9>
nop
movl   $0x8,(%esp)
call   804a800 <malloc@plt>
mov    0x28(%esp),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x28(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
add    $0x1,%esi
test   %edi,%edi
je     80852e0 <argp_parse+0xd3a0>
mov    0x20(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    8085229 <argp_parse+0xd2e9>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmp    %ebp,%eax
je     8085410 <argp_parse+0xd4d0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     80852c8 <argp_parse+0xd388>
mov    0x84(%esp),%edx
test   %edx,%edx
jne    8085210 <argp_parse+0xd2d0>
mov    0x4(%ebx),%ecx
cmp    %ecx,0x4(%eax)
jne    8085210 <argp_parse+0xd2d0>
mov    0x8(%ebx),%ecx
cmp    %ecx,0x8(%eax)
jne    8085210 <argp_parse+0xd2d0>
mov    0xc(%ebx),%ecx
cmp    %ecx,0xc(%eax)
jne    8085210 <argp_parse+0xd2d0>
jmp    8085229 <argp_parse+0xd2e9>
xchg   %ax,%ax
movzbl 0x1(%eax),%ecx
test   %cl,%cl
je     8085120 <argp_parse+0xd1e0>
mov    0x7c(%esp),%esi
test   %esi,%esi
je     808572c <argp_parse+0xd7ec>
xor    %edx,%edx
cmp    $0x2d,%cl
sete   %dl
add    $0x1,%edx
add    %edx,%eax
mov    %eax,0x14(%ebp)
mov    %eax,0x20(%esp)
jmp    8084f88 <argp_parse+0xd048>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x2c(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
mov    %esi,0x38(%esp)
add    $0x1,%esi
test   %edi,%edi
jne    8085239 <argp_parse+0xd2f9>
mov    0x28(%esp),%eax
mov    0x3c(%esp),%esi
mov    0x88(%esp),%ebp
test   %eax,%eax
je     8085c87 <argp_parse+0xdd47>
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
test   %eax,%eax
jne    8085500 <argp_parse+0xd5c0>
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
add    %eax,%ebx
mov    %ebx,0x14(%ebp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%ebp)
add    $0x1,%eax
mov    %eax,0x0(%ebp)
add    $0x5c,%esp
mov    $0x3f,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%ebp),%edx
mov    0x20(%ebp),%eax
jmp    8085109 <argp_parse+0xd1c9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebp),%ecx
mov    0x24(%ebp),%eax
cmp    %eax,%ecx
je     8085738 <argp_parse+0xd7f8>
cmp    %eax,%edx
je     8085368 <argp_parse+0xd428>
mov    0x74(%esp),%eax
mov    %ebp,%edx
call   8084df0 <argp_parse+0xceb0>
mov    0x0(%ebp),%edx
cmp    %edx,0x70(%esp)
mov    %edx,%eax
jle    808539b <argp_parse+0xd45b>
mov    0x70(%esp),%ebx
mov    0x74(%esp),%ecx
jmp    808538a <argp_parse+0xd44a>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ebx,%eax
mov    %eax,0x0(%ebp)
je     80853c0 <argp_parse+0xd480>
mov    (%ecx,%eax,4),%edx
cmpb   $0x2d,(%edx)
jne    8085380 <argp_parse+0xd440>
cmpb   $0x0,0x1(%edx)
je     8085380 <argp_parse+0xd440>
mov    0x0(%ebp),%edx
mov    %eax,0x24(%ebp)
jmp    80850ad <argp_parse+0xd16d>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%ebp)
addl   $0x1,0x78(%esp)
jmp    8084f52 <argp_parse+0xd012>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,0x24(%ebp)
jmp    80850ad <argp_parse+0xd16d>
lea    0x0(%esi),%esi
test   %eax,%eax
je     8084ffb <argp_parse+0xd0bb>
cmpb   $0x57,(%eax)
movzbl 0x1(%eax),%edx
je     80855f9 <argp_parse+0xd6b9>
cmp    $0x3a,%dl
je     8085704 <argp_parse+0xd7c4>
mov    %ebx,%eax
jmp    8085135 <argp_parse+0xd1f5>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
lea    0x1(%eax),%esi
mov    %esi,0x14(%ebp)
movzbl (%eax),%edi
mov    %edi,%eax
movsbl %al,%ebx
jmp    8084fd6 <argp_parse+0xd096>
nop
mov    0x28(%esp),%eax
mov    %esi,0x20(%esp)
mov    0x88(%esp),%ebp
mov    0x3c(%esp),%esi
test   %eax,%eax
je     8085448 <argp_parse+0xd508>
mov    0x28(%esp),%eax
jmp    8085432 <argp_parse+0xd4f2>
lea    0x0(%esi),%esi
mov    %edi,%eax
mov    0x4(%eax),%edi
mov    %eax,(%esp)
call   804a4c0 <free@plt>
test   %edi,%edi
jne    8085430 <argp_parse+0xd4f0>
mov    0x0(%ebp),%eax
mov    %eax,0x30(%esp)
test   %ebx,%ebx
je     8085763 <argp_parse+0xd823>
mov    0x30(%esp),%eax
add    $0x1,%eax
mov    %eax,0x0(%ebp)
cmpb   $0x0,(%esi)
je     80855b0 <argp_parse+0xd670>
mov    0x4(%ebx),%edi
test   %edi,%edi
jne    80857ef <argp_parse+0xd8af>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     80854df <argp_parse+0xd59f>
mov    0x74(%esp),%eax
mov    0x30(%esp),%esi
mov    (%ebx),%edi
mov    (%eax,%esi,4),%eax
cmpb   $0x2d,0x1(%eax)
je     808589c <argp_parse+0xd95c>
movsbl (%eax),%edx
mov    0x74(%esp),%eax
mov    %edx,0x20(%esp)
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f754,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    %eax,%esi
mov    0xc(%ebx),%eax
mov    %esi,0x14(%ebp)
mov    %eax,0x8(%ebp)
mov    $0x3f,%eax
jmp    8085135 <argp_parse+0xd1f5>
nop
mov    0x28(%esp),%eax
mov    %eax,0x4c(%esp)
mov    0x34(%esp),%eax
mov    (%eax),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f6f4,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
lea    0x48(%esp),%ebx
mov    %esi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x2c(%esp),%eax
jmp    8085562 <argp_parse+0xd622>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    (%eax),%eax
movl   $0x808f6ce,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8085560 <argp_parse+0xd620>
mov    0x809d864,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804acd0 <fputc@plt>
mov    0x0(%ebp),%eax
mov    0x14(%ebp),%ebx
mov    %eax,0x30(%esp)
jmp    8085307 <argp_parse+0xd3c7>
cmpl   $0x1,0x4(%ebx)
je     80857fa <argp_parse+0xd8ba>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    %eax,%esi
mov    0x80(%esp),%eax
mov    %esi,0x14(%ebp)
test   %eax,%eax
je     80855e2 <argp_parse+0xd6a2>
mov    0x80(%esp),%eax
mov    0x20(%esp),%ecx
mov    %ecx,(%eax)
mov    0x8(%ebx),%eax
test   %eax,%eax
je     8085819 <argp_parse+0xd8d9>
mov    0xc(%ebx),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    8085135 <argp_parse+0xd1f5>
cmp    $0x3b,%dl
jne    80853e5 <argp_parse+0xd4a5>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8085a73 <argp_parse+0xdb33>
cmpb   $0x0,(%esi)
je     8085a4d <argp_parse+0xdb0d>
addl   $0x1,0x0(%ebp)
mov    %esi,0xc(%ebp)
mov    %esi,0x20(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x14(%ebp)
movzbl (%eax),%ebx
cmp    $0x3d,%bl
je     8085b9b <argp_parse+0xdc5b>
test   %bl,%bl
je     8085b9b <argp_parse+0xdc5b>
mov    %eax,%esi
jmp    8085645 <argp_parse+0xd705>
test   %bl,%bl
je     8085650 <argp_parse+0xd710>
add    $0x1,%esi
movzbl (%esi),%ebx
cmp    $0x3d,%bl
jne    8085641 <argp_parse+0xd701>
mov    0x7c(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8085a73 <argp_parse+0xdb33>
mov    %esi,%eax
xor    %ecx,%ecx
sub    0x20(%esp),%eax
mov    %bl,0x34(%esp)
mov    0x7c(%esp),%ebx
mov    %esi,0x38(%esp)
mov    %ecx,%esi
mov    %ebp,0x88(%esp)
mov    %eax,%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
jmp    80856ca <argp_parse+0xd78a>
mov    0x84(%esp),%edi
test   %edi,%edi
jne    80856b2 <argp_parse+0xd772>
mov    0x28(%esp),%eax
mov    0x4(%ebx),%ecx
cmp    %ecx,0x4(%eax)
je     80859a5 <argp_parse+0xda65>
movl   $0x1,0x2c(%esp)
add    $0x10,%ebx
mov    (%ebx),%edi
add    $0x1,%esi
test   %edi,%edi
je     808591c <argp_parse+0xd9dc>
mov    0x20(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804ae20 <strncmp@plt>
test   %eax,%eax
jne    80856ba <argp_parse+0xd77a>
mov    %edi,(%esp)
call   804a950 <strlen@plt>
cmp    %ebp,%eax
je     8085b20 <argp_parse+0xdbe0>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    8085697 <argp_parse+0xd757>
mov    %esi,0x30(%esp)
mov    %ebx,0x28(%esp)
jmp    80856ba <argp_parse+0xd77a>
cmpb   $0x3a,0x2(%eax)
je     8085845 <argp_parse+0xd905>
cmpb   $0x0,(%esi)
je     8085821 <argp_parse+0xd8e1>
addl   $0x1,0x0(%ebp)
mov    %ebx,%eax
mov    %esi,0xc(%ebp)
movl   $0x0,0x14(%ebp)
jmp    8085135 <argp_parse+0xd1f5>
mov    $0x1,%edx
jmp    80852b3 <argp_parse+0xd373>
xchg   %ax,%ax
cmp    %ecx,%edx
je     8085368 <argp_parse+0xd428>
mov    %edx,0x20(%ebp)
jmp    8085368 <argp_parse+0xd428>
mov    %edx,0x20(%ebp)
mov    %edx,%eax
jmp    80850fd <argp_parse+0xd1bd>
lea    0x0(%esi),%esi
mov    0x20(%esp),%esi
xor    %ecx,%ecx
jmp    80851d4 <argp_parse+0xd294>
mov    0x84(%esp),%eax
test   %eax,%eax
jne    80858e4 <argp_parse+0xd9a4>
mov    0x24(%esp),%eax
test   %eax,%eax
je     80857e3 <argp_parse+0xd8a3>
mov    0x74(%esp),%eax
mov    0x30(%esp),%esi
mov    (%eax,%esi,4),%eax
cmpb   $0x2d,0x1(%eax)
je     80859fb <argp_parse+0xdabb>
movsbl (%eax),%esi
mov    0x74(%esp),%eax
mov    0x14(%ebp),%edi
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f7cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x0(%ebp),%eax
mov    %eax,0x30(%esp)
movl   $0x808d3ee,0x14(%ebp)
jmp    8085314 <argp_parse+0xd3d4>
lea    0x1(%esi),%eax
mov    %eax,0xc(%ebp)
jmp    80855ba <argp_parse+0xd67a>
cmp    %eax,0x70(%esp)
jle    8085863 <argp_parse+0xd923>
mov    0x74(%esp),%esi
mov    0x30(%esp),%edx
mov    (%esi,%eax,4),%eax
add    $0x2,%edx
mov    %edx,0x0(%ebp)
mov    %eax,0xc(%ebp)
jmp    80855ba <argp_parse+0xd67a>
mov    0xc(%ebx),%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x0(%ebp),%eax
cmp    0x70(%esp),%eax
je     80859d6 <argp_parse+0xda96>
mov    0x74(%esp),%esi
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%esi,%eax,4),%eax
mov    %eax,0xc(%ebp)
mov    %ebx,%eax
jmp    8085720 <argp_parse+0xd7e0>
cmpb   $0x0,(%esi)
je     80859ca <argp_parse+0xda8a>
addl   $0x1,0x0(%ebp)
mov    %esi,0xc(%ebp)
movl   $0x0,0x14(%ebp)
mov    %ebx,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x24(%esp),%edx
test   %edx,%edx
jne    8085a84 <argp_parse+0xdb44>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   804a950 <strlen@plt>
add    %eax,%esi
mov    0xc(%ebx),%eax
mov    %esi,0x14(%ebp)
mov    %eax,0x8(%ebp)
mov    0x78(%esp),%eax
cmpb   $0x3a,(%eax)
jne    8085325 <argp_parse+0xd3e5>
mov    $0x3a,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f724,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    80854df <argp_parse+0xd59f>
mov    0x74(%esp),%eax
mov    0x30(%esp),%esi
mov    (%eax,%esi,4),%eax
cmpb   $0x2d,0x1(%eax)
je     8085772 <argp_parse+0xd832>
mov    0x14(%ebp),%ebx
movsbl (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   804a910 <strchr@plt>
test   %eax,%eax
jne    8084fc8 <argp_parse+0xd088>
jmp    8085772 <argp_parse+0xd832>
mov    0x2c(%esp),%ecx
movzbl 0x34(%esp),%ebx
mov    0x38(%esp),%esi
mov    0x88(%esp),%ebp
test   %ecx,%ecx
je     8085ace <argp_parse+0xdb8e>
mov    0x24(%esp),%edx
mov    0x20(%esp),%ebx
test   %edx,%edx
je     808598a <argp_parse+0xda4a>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f818,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x14(%ebp),%ebx
mov    %ebx,(%esp)
call   804a950 <strlen@plt>
addl   $0x1,0x0(%ebp)
add    %eax,%ebx
mov    $0x3f,%eax
mov    %ebx,0x14(%ebp)
jmp    8085135 <argp_parse+0xd1f5>
mov    0x8(%ebx),%ecx
cmp    %ecx,0x8(%eax)
jne    80856b2 <argp_parse+0xd772>
mov    0xc(%ebx),%ecx
cmp    %ecx,0xc(%eax)
mov    $0x1,%eax
cmove  0x2c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    80856ba <argp_parse+0xd77a>
movl   $0x0,0xc(%ebp)
jmp    8085855 <argp_parse+0xd915>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    8085bc8 <argp_parse+0xdc88>
mov    0x78(%esp),%eax
mov    %ebx,0x8(%ebp)
cmpb   $0x3a,(%eax)
setne  %al
movzbl %al,%eax
lea    0x3a(%eax,%eax,4),%eax
jmp    8085720 <argp_parse+0xd7e0>
mov    0x74(%esp),%eax
mov    0x14(%ebp),%esi
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f7ac,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x0(%ebp),%eax
mov    %eax,0x30(%esp)
jmp    80857e3 <argp_parse+0xd8a3>
mov    0x0(%ebp),%eax
cmp    0x70(%esp),%eax
je     8085ba4 <argp_parse+0xdc64>
mov    0x74(%esp),%ecx
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%ecx,%eax,4),%eax
mov    %eax,0xc(%ebp)
mov    %eax,0x20(%esp)
jmp    8085622 <argp_parse+0xd6e2>
movl   $0x0,0x14(%ebp)
mov    $0x57,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x74(%esp),%eax
mov    (%ebx),%edi
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f784,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    808586f <argp_parse+0xd92f>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8085a73 <argp_parse+0xdb33>
mov    0x30(%esp),%ecx
mov    %eax,0x7c(%esp)
mov    %ecx,0x28(%esp)
test   %bl,%bl
mov    0x7c(%esp),%eax
je     8085b3a <argp_parse+0xdbfa>
cmpl   $0x0,0x4(%eax)
jne    8085c5e <argp_parse+0xdd1e>
cmpl   $0x0,0x24(%esp)
jne    8085c10 <argp_parse+0xdcd0>
mov    0x14(%ebp),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
mov    %ecx,%esi
not    %esi
lea    -0x1(%edx,%esi,1),%eax
mov    %eax,0x14(%ebp)
mov    $0x3f,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    %esi,0x28(%esp)
mov    0x88(%esp),%ebp
mov    %ebx,0x7c(%esp)
mov    0x38(%esp),%esi
movzbl 0x34(%esp),%ebx
jmp    8085ae2 <argp_parse+0xdba2>
cmpl   $0x1,0x4(%eax)
je     8085c69 <argp_parse+0xdd29>
movl   $0x0,0xc(%ebp)
mov    0x20(%esp),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    0x20(%esp),%edi
cmpl   $0x0,0x80(%esp)
mov    %ecx,%esi
not    %esi
lea    -0x1(%edi,%esi,1),%eax
mov    %eax,0x14(%ebp)
je     8085b7c <argp_parse+0xdc3c>
mov    0x80(%esp),%eax
mov    0x28(%esp),%esi
mov    %esi,(%eax)
mov    0x7c(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     8085d11 <argp_parse+0xddd1>
mov    0x7c(%esp),%esi
mov    0xc(%esi),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x20(%esp),%esi
jmp    8085650 <argp_parse+0xd710>
cmpl   $0x0,0x24(%esp)
jne    8085d1d <argp_parse+0xdddd>
mov    0x78(%esp),%eax
mov    %ebx,0x8(%ebp)
cmpb   $0x3a,(%eax)
setne  %al
lea    0x3a(%eax,%eax,4),%eax
movsbl %al,%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f7ec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    80859e2 <argp_parse+0xdaa2>
mov    0x7c(%esp),%eax
mov    (%eax),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f83c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8085aff <argp_parse+0xdbbf>
add    $0x1,%esi
mov    %esi,0xc(%ebp)
jmp    8085b4b <argp_parse+0xdc0b>
mov    0x0(%ebp),%eax
cmp    %eax,0x70(%esp)
jle    8085c98 <argp_parse+0xdd58>
mov    0x74(%esp),%esi
lea    0x1(%eax),%edx
mov    %edx,0x0(%ebp)
mov    (%esi,%eax,4),%eax
mov    %eax,0xc(%ebp)
jmp    8085b4b <argp_parse+0xdc0b>
mov    0x38(%esp),%eax
mov    0x2c(%esp),%ebx
mov    %eax,0x20(%esp)
jmp    8085448 <argp_parse+0xd508>
cmpl   $0x0,0x24(%esp)
je     8085ce8 <argp_parse+0xdda8>
mov    0x7c(%esp),%eax
mov    (%eax),%esi
mov    0x74(%esp),%eax
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x808f86c,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
mov    0x14(%ebp),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
mov    %ecx,%esi
not    %esi
lea    -0x1(%edx,%esi,1),%eax
mov    %eax,0x14(%ebp)
mov    0x78(%esp),%eax
cmpb   $0x3a,(%eax)
jne    8085325 <argp_parse+0xd3e5>
jmp    8085892 <argp_parse+0xd952>
mov    0x7c(%esp),%eax
mov    0xc(%eax),%eax
jmp    8085135 <argp_parse+0xd1f5>
mov    0x74(%esp),%eax
mov    (%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x808f7ec,0x4(%esp)
movl   $0x0,(%esp)
call   804a5e0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x809d864,%eax
mov    %eax,(%esp)
call   804adf0 <__fprintf_chk@plt>
jmp    8085baf <argp_parse+0xdc6f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x809d82c,%eax
movl   $0x809e220,0x18(%esp)
mov    %eax,0x809e220
mov    0x809d828,%eax
mov    %eax,0x809e224
mov    0x48(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8084ed0 <argp_parse+0xcf90>
mov    0x809e220,%edx
mov    %edx,0x809d82c
mov    0x809e22c,%edx
mov    %edx,0x809e560
mov    0x809e228,%edx
mov    %edx,0x809d824
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x1,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8085d70 <argp_parse+0xde30>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     8085f18 <argp_parse+0xdfd8>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     8085f34 <argp_parse+0xdff4>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    8085eb0 <argp_parse+0xdf70>
cmp    %ebp,%esi
jbe    8085ed8 <argp_parse+0xdf98>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    8085eb8 <argp_parse+0xdf78>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    8085ef8 <argp_parse+0xdfb8>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     8085eca <argp_parse+0xdf8a>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    8085ee7 <argp_parse+0xdfa7>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    8085eb8 <argp_parse+0xdf78>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    8085f48 <argp_parse+0xe008>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    8085f0e <argp_parse+0xdfce>
cmp    %ebp,%eax
jae    8085eb4 <argp_parse+0xdf74>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    8085eb8 <argp_parse+0xdf78>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    8085e8b <argp_parse+0xdf4b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    8085e8b <argp_parse+0xdf4b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     8085fb8 <argp_parse+0xe078>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8085fad <argp_parse+0xe06d>
cmp    0x4(%esp),%ebp
je     8085fb8 <argp_parse+0xe078>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    8085eb8 <argp_parse+0xdf78>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    8085eb8 <argp_parse+0xdf78>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x34(%esp),%edx
mov    0x3c(%esp),%eax
mov    0x30(%esp),%ebp
mov    0x38(%esp),%edi
test   %edx,%edx
mov    %eax,%esi
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,0xc(%esp)
js     80860b8 <argp_parse+0xe178>
test   %esi,%esi
mov    %edi,%edx
mov    %eax,%ecx
js     80860a8 <argp_parse+0xe168>
mov    0x4(%esp),%edi
mov    %ecx,%eax
mov    %edx,%ecx
mov    (%esp),%esi
test   %eax,%eax
mov    %edx,0x10(%esp)
mov    %edi,%ebp
mov    %esi,0x14(%esp)
mov    %esi,%edi
mov    %ebp,%esi
jne    8086040 <argp_parse+0xe100>
cmp    %esi,%edx
jbe    8086088 <argp_parse+0xe148>
mov    %esi,%edx
mov    0x14(%esp),%eax
div    %ecx
mov    %edx,%esi
mov    %esi,%eax
xor    %edx,%edx
jmp    8086049 <argp_parse+0xe109>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%eax
jbe    8086060 <argp_parse+0xe120>
mov    (%esp),%eax
mov    %esi,%edx
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     8086058 <argp_parse+0xe118>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
bsr    %eax,%edx
mov    %edx,(%esp)
xorl   $0x1f,(%esp)
jne    80860d8 <argp_parse+0xe198>
cmp    %edi,%ecx
jbe    8086170 <argp_parse+0xe230>
cmp    %esi,%eax
jb     8086170 <argp_parse+0xe230>
mov    %edi,%eax
mov    %ebp,%edx
jmp    8086049 <argp_parse+0xe109>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    8086097 <argp_parse+0xe157>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%ecx
mov    %esi,%eax
xor    %edx,%edx
div    %ecx
mov    %edi,%eax
div    %ecx
mov    %edx,%esi
jmp    8086036 <argp_parse+0xe0f6>
lea    0x0(%esi),%esi
neg    %edx
adc    $0x0,%ecx
neg    %ecx
jmp    808600b <argp_parse+0xe0cb>
lea    0x0(%esi,%eiz,1),%esi
negl   (%esp)
adcl   $0x0,0x4(%esp)
negl   0x4(%esp)
movl   $0xffffffff,0xc(%esp)
jmp    8085fff <argp_parse+0xe0bf>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%edx
movl   $0x20,0x18(%esp)
mov    0x10(%esp),%ebp
sub    %edx,0x18(%esp)
mov    %edx,%ecx
shl    %cl,%eax
movzbl 0x18(%esp),%ecx
mov    %ebp,%edi
shr    %cl,%edi
mov    %edx,%ecx
shl    %cl,%ebp
movzbl 0x18(%esp),%ecx
or     %eax,%edi
mov    %edx,%eax
mov    %esi,%edx
mov    %ebp,0x1c(%esp)
shr    %cl,%edx
mov    %eax,%ecx
mov    0x14(%esp),%eax
shl    %cl,%esi
movzbl 0x18(%esp),%ecx
shr    %cl,%eax
movzbl (%esp),%ecx
or     %esi,%eax
mov    0x14(%esp),%esi
div    %edi
shl    %cl,%esi
mov    %esi,0x14(%esp)
mov    %edx,%esi
mul    %ebp
mov    %edx,0x10(%esp)
mov    0x10(%esp),%ebp
mov    %eax,%edx
cmp    %ebp,%esi
mov    %ebp,%ecx
jb     8086184 <argp_parse+0xe244>
cmp    %eax,0x14(%esp)
jb     8086180 <argp_parse+0xe240>
mov    (%esp),%ebp
mov    0x14(%esp),%edi
sub    %edx,%edi
sbb    %ecx,%esi
mov    %esi,%eax
mov    %ebp,%ecx
shr    %cl,%edi
movzbl 0x18(%esp),%ecx
shl    %cl,%eax
mov    %ebp,%ecx
or     %eax,%edi
shr    %cl,%esi
mov    %edi,%eax
mov    %esi,%edx
jmp    8086049 <argp_parse+0xe109>
nop
sub    %ecx,%edi
sbb    %eax,%esi
mov    %esi,%ebp
jmp    808607c <argp_parse+0xe13c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%esi
jne    8086148 <argp_parse+0xe208>
mov    0x10(%esp),%ecx
mov    %eax,%edx
sub    0x1c(%esp),%edx
sbb    %edi,%ecx
jmp    8086148 <argp_parse+0xe208>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    80861f0 <argp_parse+0xe2b0>
cmp    %ebp,%ecx
ja     8086228 <argp_parse+0xe2e8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    80861d8 <argp_parse+0xe298>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8086218 <argp_parse+0xe2d8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8086238 <argp_parse+0xe2f8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    80862a8 <argp_parse+0xe368>
cmp    %edx,%eax
jb     80862a8 <argp_parse+0xe368>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     80862b8 <argp_parse+0xe378>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8086299 <argp_parse+0xe359>
cmp    (%esp),%esi
je     80862b8 <argp_parse+0xe378>
mov    %edi,%eax
xor    %edx,%edx
jmp    808621c <argp_parse+0xe2dc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    808621c <argp_parse+0xe2dc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8086318 <argp_parse+0xe3d8>
cmp    %edi,%esi
jbe    8086350 <argp_parse+0xe410>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     8086370 <argp_parse+0xe430>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8086380 <argp_parse+0xe440>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8086418 <argp_parse+0xe4d8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    8086361 <argp_parse+0xe421>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    808630b <argp_parse+0xe3cb>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8086404 <argp_parse+0xe4c4>
cmp    %eax,0xc(%esp)
jb     8086400 <argp_parse+0xe4c0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    80863de <argp_parse+0xe49e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    80863de <argp_parse+0xe49e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8086331 <argp_parse+0xe3f1>
jmp    8086341 <argp_parse+0xe401>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804c040 <fchmod@plt+0x10a0>
add    $0x15bc5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%esi
call   804a318 <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8086489 <argp_parse+0xe549>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8086468 <argp_parse+0xe528>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    80864a0 <argp_parse+0xe560>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   804c040 <fchmod@plt+0x10a0>
add    $0x15b53,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
and    $0x66302e,%eax
and    $0x25203a73,%eax
jae    80864f4 <_IO_stdin_used+0x30>
sub    %ah,0x25202c73
jae    808650b <_IO_stdin_used+0x47>
jae    8086507 <_IO_stdin_used+0x43>
or     (%eax),%al
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8086552 <_IO_stdin_used+0x8e>
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x76(%edi)
gs
jb     8086559 <_IO_stdin_used+0x95>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80864f7 <_IO_stdin_used+0x33>
push   %esp
outsl  %ds:(%esi),(%dx)
je     808655c <_IO_stdin_used+0x98>
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     8086566 <_IO_stdin_used+0xa2>
jae    8086523 <_IO_stdin_used+0x5f>
ja     8086577 <_IO_stdin_used+0xb3>
imul   $0x6f54006e,0x65(%esp,%esi,2),%esi
je     8086570 <_IO_stdin_used+0xac>
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     808657a <_IO_stdin_used+0xb6>
jae    8086537 <_IO_stdin_used+0x73>
jb     808657e <_IO_stdin_used+0xba>
popa
add    %dl,%fs:0x74(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     808658b <_IO_stdin_used+0xc7>
jae    8086548 <_IO_stdin_used+0x84>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8086593 <_IO_stdin_used+0xcf>
cmp    %fs:(%eax),%ah
and    $0x28000a73,%eax
jo     80865a1 <_IO_stdin_used+0xdd>
jo     808659f <_IO_stdin_used+0xdb>
sub    %eax,(%eax)
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    8086565 <_IO_stdin_used+0xa1>
gs
jb     80865ba <_IO_stdin_used+0xf6>
outsl  %ds:(%esi),(%dx)
jb     80865be <_IO_stdin_used+0xfa>
sub    $0x20,%al
jno    80865c4 <_IO_stdin_used+0x100>
imul   $0x5200676e,0x69(%esp,%esi,2),%esi
arpl   %bp,%gs:0x72(%edi)
and    %dh,%fs:0x69(%ebx)
jp     80865c6 <_IO_stdin_used+0x102>
and    %bh,0x756c2520
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
add    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dh,%fs:0x69(%ebx)
jp     80865df <_IO_stdin_used+0x11b>
and    %bh,0x756c2520
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %edi
dec    %esi
push   %ebp
jbe,pn 80865fc <_IO_stdin_used+0x138>
insb   (%dx),%es:(%edi)
jne    80865fd <_IO_stdin_used+0x139>
gs
cs
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    808660a <_IO_stdin_used+0x146>
add    %ah,%gs:0x73252073
and    %ah,0x642f0073
gs
jbe    80865dc <_IO_stdin_used+0x118>
je     8086623 <_IO_stdin_used+0x15f>
jns    80865b1 <_IO_stdin_used+0xed>
and    $0x6f632073,%eax
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x61(%esi)
imul   $0x206f4e00,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     80865ea <_IO_stdin_used+0x126>
jbe    808663b <_IO_stdin_used+0x177>
insb   (%dx),%es:(%edi)
jne    808663c <_IO_stdin_used+0x178>
cmp    %gs:(%eax),%esp
gs
js     808663e <_IO_stdin_used+0x17a>
je     8086640 <_IO_stdin_used+0x17c>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %edi
dec    %esi
push   %ebp
jbe,pn 8086651 <_IO_stdin_used+0x18d>
insb   (%dx),%es:(%edi)
jne    8086652 <_IO_stdin_used+0x18e>
gs imul $0x6d61,%cs:%gs:0x6e(%ebp,%eiz,2),%bp
6d
add    %al,%gs:0x4e(%edi)
push   %ebp
jbe,pn 8086665 <_IO_stdin_used+0x1a1>
insb   (%dx),%es:(%edi)
jne    8086666 <_IO_stdin_used+0x1a2>
gs
jae,pn 8086666 <_IO_stdin_used+0x1a2>
jp     8086664 <_IO_stdin_used+0x1a0>
add    %al,0x4e(%edi)
push   %ebp
jbe,pn 8086675 <_IO_stdin_used+0x1b1>
insb   (%dx),%es:(%edi)
jne    8086676 <_IO_stdin_used+0x1b2>
gs outsl %cs:%gs:(%esi),(%dx)
data16
data16
jae    8086675 <_IO_stdin_used+0x1b1>
je     8086612 <_IO_stdin_used+0x14e>
and    $0x4e472f64,%eax
push   %ebp
inc    %esi
imul   $0x73747261,0x50(%ebp,%eiz,2),%ebp
cs
and    $0x66252f70,%eax
cs
and    $0x5620006e,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    808669e <_IO_stdin_used+0x1da>
and    %al,%gs:(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8086699 <_IO_stdin_used+0x1d5>
insb   (%dx),%es:(%edi)
imul   $0x65756c61,0x76(%eax,%eiz,1),%esp
and    %ah,0x6f(%esi)
jb     8086666 <_IO_stdin_used+0x1a2>
jb     80866ad <_IO_stdin_used+0x1e9>
arpl   %bp,0x72(%edi)
fs
pop    %edi
jae    80866b8 <_IO_stdin_used+0x1f4>
jp     80866b6 <_IO_stdin_used+0x1f2>
add    %cl,0x6f(%esi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80866c1 <_IO_stdin_used+0x1fd>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%edi)
jbe    80866cb <_IO_stdin_used+0x207>
outsb  %ds:(%esi),(%dx)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    80866da <_IO_stdin_used+0x216>
and    %ah,%gs:0x6f642073
gs
jae    8086697 <_IO_stdin_used+0x1d3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808669b <_IO_stdin_used+0x1d7>
insl   (%dx),%es:(%edi)
popa
je     80866e2 <_IO_stdin_used+0x21e>
push   $0x732520
sub    $0x7a2d005a,%eax
add    %ch,0x626c006a
jp     80866fa <_IO_stdin_used+0x236>
jo     80866c5 <_IO_stdin_used+0x201>
add    %ch,0x697a6c2d
jo     808669b <_IO_stdin_used+0x1d7>
sub    $0x6d7a6c2d,%eax
popa
add    %ch,0x2d2d004a
insb   (%dx),%es:(%edi)
jp     8086719 <_IO_stdin_used+0x255>
jo     80866ac <_IO_stdin_used+0x1e8>
pop    %ds
popf
add    %bl,(%edi)
mov    (%eax),%eax
inc    %edx
pop    %edx
push   $0x495a4c00
push   %eax
add    %bh,%bh
dec    %esp
pop    %edx
dec    %ebp
inc    %ecx
add    %cl,0x4f5a4c(%ecx)
std
aaa
jp     8086722 <_IO_stdin_used+0x25e>
pop    %edx
add    %dl,0x69(%eax,%ebp,2)
jae    80866f1 <_IO_stdin_used+0x22d>
outsl  %fs:(%esi),(%dx)
gs
jae    80866f6 <_IO_stdin_used+0x232>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80866fa <_IO_stdin_used+0x236>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x6c,(%eax),%esp
imul   $0x74206120,0x65(%ebx),%ebp
popa
jb     808670a <_IO_stdin_used+0x246>
popa
jb     8086750 <_IO_stdin_used+0x28c>
push   $0x657669
add    %al,(%eax)
inc    %ecx
je     8086717 <_IO_stdin_used+0x253>
bound  %esp,0x67(%ebp)
imul   $0x20676e69,0x6e(%esi),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%eiz,2)
gs
sub    $0x20,%al
jno    8086781 <_IO_stdin_used+0x2bd>
imul   $0x6e20676e,0x69(%esp,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
ja     8086717 <_IO_stdin_used+0x253>
add    %dl,0x6e(%ebp)
popa
insb   (%dx),%es:(%edi)
imul   $0x62206465,0x6e(%edi),%esp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
sub    %ah,0x6220756c
jns    80867a4 <_IO_stdin_used+0x2e0>
gs
jae    808675c <_IO_stdin_used+0x298>
and    %ch,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80867a3 <_IO_stdin_used+0x2df>
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x62206465,0x6e(%edi),%esp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
sub    %ah,0x6220756c
jns    80867cc <_IO_stdin_used+0x308>
sub    %esp,%gs:(%eax)
imul   $0x68637261,0x20(%esi),%ebp
imul   $0x43000000,0x65(%esi),%esi
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808678f <_IO_stdin_used+0x2cb>
bound  %esp,0x63(%ecx)
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x20(%ebp)
popa
jb     80867df <_IO_stdin_used+0x31b>
push   $0x20657669
imul   $0x6920,0x3b(%ebp,%eiz,2),%bp
je     80867aa <_IO_stdin_used+0x2e6>
insl   (%dx),%es:(%edi)
popa
jns    80867ae <_IO_stdin_used+0x2ea>
bound  %esp,0x20(%ebp)
jne    8086801 <_IO_stdin_used+0x33d>
jb     80867fa <_IO_stdin_used+0x336>
popa
fs
popa
bound  %ebp,0x20(%ebp,%eiz,2)
ja     8086807 <_IO_stdin_used+0x343>
je     8086808 <_IO_stdin_used+0x344>
outsl  %ds:(%esi),(%dx)
jne    8086817 <_IO_stdin_used+0x353>
and    %ch,0x72000069
insl   (%dx),%es:(%edi)
je     8086818 <_IO_stdin_used+0x354>
jae    8086813 <_IO_stdin_used+0x34f>
imul   $0x6e,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
je     80867d5 <_IO_stdin_used+0x311>
jae    808682b <_IO_stdin_used+0x367>
outsl  %ds:(%esi),(%dx)
jo     808682a <_IO_stdin_used+0x366>
gs and %ah,%fs:%gs:0x74(%ecx)
and    %ah,0x20(%ecx)
jb     8086829 <_IO_stdin_used+0x365>
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x6f(%edx)
jne    808683b <_IO_stdin_used+0x377>
fs
popa
jb     808684a <_IO_stdin_used+0x386>
add    %al,(%eax)
add    %ah,0x63203a73
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     808683e <_IO_stdin_used+0x37a>
imul   $0x766e6920,0x73(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
imul   $0x6d756c6f,0x76(%eax,%eiz,1),%esp
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,(%eax)
push   %eax
jb     8086860 <_IO_stdin_used+0x39c>
jo     808685e <_IO_stdin_used+0x39a>
jb     8086864 <_IO_stdin_used+0x3a0>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8086872 <_IO_stdin_used+0x3ae>
and    %ah,%gs:(%ebx)
and    $0x6f662064,%eax
jb     808682f <_IO_stdin_used+0x36b>
and    $0x6e612073,%eax
and    %ch,%fs:0x69(%eax)
je     808683a <_IO_stdin_used+0x376>
jb     8086881 <_IO_stdin_used+0x3bd>
je     8086893 <_IO_stdin_used+0x3cf>
jb     808688e <_IO_stdin_used+0x3ca>
cmp    (%eax),%ah
add    %al,(%eax)
inc    %ebp
dec    %edi
inc    %esi
and    %dh,0x68(%edi)
gs
jb     8086892 <_IO_stdin_used+0x3ce>
and    %dh,0x73(%ebp)
gs
jb     8086853 <_IO_stdin_used+0x38f>
jb     808689a <_IO_stdin_used+0x3d6>
jo     80868a3 <_IO_stdin_used+0x3df>
jns    8086859 <_IO_stdin_used+0x395>
ja     808689c <_IO_stdin_used+0x3d8>
jae    808685d <_IO_stdin_used+0x399>
gs
js     80868b0 <_IO_stdin_used+0x3ec>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %ecx
jb     80868b7 <_IO_stdin_used+0x3f3>
push   $0x20657669
imul   $0x6f636e69,0x20(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     80868cf <_IO_stdin_used+0x40b>
gs
je     80868cb <_IO_stdin_used+0x407>
add    %al,(%eax)
and    %ch,0x20(%esi)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edi
imul   $0x6e206120,0x65(%esi),%esi
gs
ja     80868a2 <_IO_stdin_used+0x3de>
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     80868b0 <_IO_stdin_used+0x3ec>
je     80868fa <_IO_stdin_used+0x436>
and    %ch,%gs:0x65(%esi)
js     808690c <_IO_stdin_used+0x448>
and    %ch,(%eax)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x75(%ebx)
bound  %esi,0x65(%ebx)
jno    808691a <_IO_stdin_used+0x456>
outsb  %gs:(%esi),(%dx)
je     80868d2 <_IO_stdin_used+0x40e>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    808691c <_IO_stdin_used+0x458>
sub    %dh,%gs:0x29(%ebx)
or     (%eax),%ah
jno    80868d7 <_IO_stdin_used+0x413>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     80868e9 <_IO_stdin_used+0x425>
je     808692c <_IO_stdin_used+0x468>
jb     80868d7 <_IO_stdin_used+0x413>
and    %bh,0x20(%ecx)
outsl  %ds:(%esi),(%dx)
jb     80868f3 <_IO_stdin_used+0x42f>
outsb  %ds:(%esi),(%dx)
gs
ja     8086943 <_IO_stdin_used+0x47f>
imul   $0x6f432020,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808694a <_IO_stdin_used+0x486>
outsb  %ds:(%esi),(%dx)
jne    8086949 <_IO_stdin_used+0x485>
and    %ch,0x70(%edi)
gs
jb     808694b <_IO_stdin_used+0x487>
je     8086955 <_IO_stdin_used+0x491>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
and    %ah,(%ecx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x70(%ebx)
popa
ja     8086972 <_IO_stdin_used+0x4ae>
and    %ah,0x20(%ecx)
jae    808697e <_IO_stdin_used+0x4ba>
bound  %esi,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
aas
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x69687420,0x74(%esi),%ebp
jae    808694e <_IO_stdin_used+0x48a>
insb   (%dx),%es:(%edi)
imul   $0x6946000a,0x74(%ebx),%esi
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     8086962 <_IO_stdin_used+0x49e>
jae    80869b4 <_IO_stdin_used+0x4f0>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x7254202e,0x64(%ebp),%esp
jns    8086971 <_IO_stdin_used+0x4ad>
popa
addr16 popa
imul   $0xa,0x2e(%esi),%ebp
add    %cl,0x6e(%ecx)
jbe    80869c1 <_IO_stdin_used+0x4fd>
insb   (%dx),%es:(%edi)
imul   $0x7475706e,0x69(%eax,%eiz,1),%esp
and    %dl,%cs:0x70(%ecx,%edi,2)
and    %bh,%gs:(%edi)
and    %ah,0x6f(%esi)
jb     8086996 <_IO_stdin_used+0x4d2>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x72(%edi)
imul   $0x20646964,0x20(%ebp,%eiz,2),%esi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80869ae <_IO_stdin_used+0x4ea>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x6e(%edi)
and    %ah,0x20(%ecx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x62,(%eax),%esp
outsl  %ds:(%esi),(%dx)
jne    8086a0f <_IO_stdin_used+0x54b>
fs
popa
jb     8086a1e <_IO_stdin_used+0x55a>
add    %al,(%eax)
add    %ah,0x66203a73
imul   $0x656d616e,0x20(%ebp,%eiz,2),%ebp
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %dh,0x6f(%si)
and    %ah,0x65(%edx)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jb     8086a2f <_IO_stdin_used+0x56b>
and    %ch,%fs:0x6e(%ecx)
and    %ah,0x20(%ecx)
inc    %edi
dec    %esi
push   %ebp
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     8086a43 <_IO_stdin_used+0x57f>
jbe    8086a4b <_IO_stdin_used+0x587>
insb   (%dx),%es:(%edi)
jne    8086a4c <_IO_stdin_used+0x588>
and    %ch,%gs:0x65(%eax)
popa
fs
gs
jb     8086a14 <_IO_stdin_used+0x550>
and    %dh,0x75(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs add %al,%fs:%gs:(%eax)
and    $0x73692073,%eax
and    %dh,0x6f(%eax)
jae    8086a71 <_IO_stdin_used+0x5ad>
imul   $0x6f632079,0x6c(%edx),%esp
outsb  %ds:(%esi),(%dx)
je     8086a71 <_IO_stdin_used+0x5ad>
outsb  %ds:(%esi),(%dx)
jne    8086a70 <_IO_stdin_used+0x5ac>
and    %ch,%fs:0x6e(%edi)
and    %dh,0x69(%eax,%ebp,2)
jae    8086a35 <_IO_stdin_used+0x571>
jbe    8086a86 <_IO_stdin_used+0x5c2>
insb   (%dx),%es:(%edi)
jne    8086a87 <_IO_stdin_used+0x5c3>
cmp    %gs:(%eax),%ah
push   $0x65646165
jb     8086a44 <_IO_stdin_used+0x580>
arpl   %bp,0x6e(%edi)
je     8086a8a <_IO_stdin_used+0x5c6>
imul   $0x75727420,0x73(%esi),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x73692073
and    %ch,0x6f(%esi)
je     8086a66 <_IO_stdin_used+0x5a2>
arpl   %bp,0x6e(%edi)
je     8086ab4 <_IO_stdin_used+0x5f0>
outsb  %ds:(%esi),(%dx)
jne    8086ab3 <_IO_stdin_used+0x5ef>
and    %ch,%fs:0x6e(%edi)
and    %dh,0x69(%eax,%ebp,2)
jae    8086a78 <_IO_stdin_used+0x5b4>
jbe    8086ac9 <_IO_stdin_used+0x605>
insb   (%dx),%es:(%edi)
jne    8086aca <_IO_stdin_used+0x606>
add    %al,%gs:(%eax)
and    $0x73692073,%eax
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%bp,%di)
jp     8086ad9 <_IO_stdin_used+0x615>
and    %ch,(%eax)
and    $0x3d212073,%eax
and    %ah,0x202b2073
and    $0x2973,%eax
add    %al,(%eax)
push   %esp
push   $0x76207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8086aff <_IO_stdin_used+0x63b>
and    %ch,%gs:0x73(%ecx)
and    %ch,0x75(%edi)
je     8086abb <_IO_stdin_used+0x5f7>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%ebx)
jno    8086b17 <_IO_stdin_used+0x653>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
sub    %ah,0x202d2073
and    $0x3d212073,%eax
and    %ah,0x2973
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8086adf <_IO_stdin_used+0x61b>
jbe    8086b26 <_IO_stdin_used+0x662>
jb     8086b2c <_IO_stdin_used+0x668>
data16
jns    8086ae6 <_IO_stdin_used+0x622>
jae    8086b3c <_IO_stdin_used+0x678>
imul   $0x6f647473,%fs:0x2f(%esi),%ebp
jne    8086b46 <_IO_stdin_used+0x682>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8086b3f <_IO_stdin_used+0x67b>
add    %al,(%eax)
inc    %ecx
jb     8086b42 <_IO_stdin_used+0x67e>
push   $0x20657669
imul   $0x706d6f63,0x20(%ebx),%esi
jb     8086b52 <_IO_stdin_used+0x68e>
jae    8086b62 <_IO_stdin_used+0x69e>
gs fs and %dl,%cs:%fs:%gs:0x73(%ebp)
and    %ah,%gs:0x706f2073
je     8086b67 <_IO_stdin_used+0x6a3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8086b2b <_IO_stdin_used+0x667>
jne    8086b7d <_IO_stdin_used+0x6b9>
fs
popa
je     8086b76 <_IO_stdin_used+0x6b2>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8086b89 <_IO_stdin_used+0x6c5>
gs
jae    8086b8d <_IO_stdin_used+0x6c9>
gs and %ah,%fs:%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8086b89 <_IO_stdin_used+0x6c5>
jae    8086b26 <_IO_stdin_used+0x662>
add    %al,(%eax)
inc    %ecx
jb     8086b8e <_IO_stdin_used+0x6ca>
push   $0x20657669
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8086b54 <_IO_stdin_used+0x690>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     8086ba6 <_IO_stdin_used+0x6e2>
push   $0x732520
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
data16
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
data16
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
mov    $0x66,%dl
or     %cl,(%eax)
add    $0x4000000,%eax
add    %al,(%eax)
add    %dh,0x6080866(%esi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bh,0x7080866(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
shll   $0x8,0x8(%esi)
or     %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,%dh
data16
or     %cl,(%eax)
add    %al,(%eax)
sbbb   $0x0,0x0(%edi)
add    %bl,0x28(%edi)
imul   $0x62,0x4e(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x63(%ebp)
push   $0x6365006f
push   $0x65003d6f
js     8086c50 <_IO_stdin_used+0x78c>
arpl   %di,0x79747400
outsl  %ds:(%esi),(%dx)
jne    8086c68 <_IO_stdin_used+0x7a4>
cmp    $0x656c7300,%eax
gs
jo     8086c39 <_IO_stdin_used+0x775>
add    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
je     8086c25 <_IO_stdin_used+0x761>
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x6f656d69,0x74(%eax,%eiz,1),%esp
jne    8086c88 <_IO_stdin_used+0x7c4>
add    %ah,0x75203a73
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x74636120,0x74(%esi),%ebp
imul   $0x69725700,0x6e(%edi),%ebp
je     8086c9d <_IO_stdin_used+0x7d9>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x752520,0x74(%esi),%ebp
push   %edx
gs
popa
and    %ah,%fs:0x68(%ebx)
arpl   %bp,%gs:0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x752520,0x74(%esi),%ebp
add    %al,(%eax)
or     %al,(%edx)
add    $0x501b008,%eax
or     %ah,0x1(%eax)
add    $0x5012008,%eax
or     %dh,%al
add    %al,0x501e008
or     %dl,0x6e(%ebp)
gs
js     8086ce9 <_IO_stdin_used+0x825>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %al,0x4f(%ebp)
inc    %esi
and    %ch,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8086cf2 <_IO_stdin_used+0x82e>
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8086cf8 <_IO_stdin_used+0x834>
outsb  %ds:(%esi),(%dx)
je     8086d09 <_IO_stdin_used+0x845>
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     8086c9e <_IO_stdin_used+0x7da>
push   %ebx
jns    8086d0e <_IO_stdin_used+0x84a>
insb   (%dx),%es:(%edi)
imul   $0x66696420,0x6b(%esi),%ebp
data16
gs
jb     8086d20 <_IO_stdin_used+0x85c>
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:0x66(%ecx,%ebp,2)
data16
gs
jb     8086d32 <_IO_stdin_used+0x86e>
add    %cl,0x6f(%ebp)
fs and %ah,%fs:%gs:0x66(%ecx,%ebp,2)
data16
gs
jb     8086d3f <_IO_stdin_used+0x87b>
add    %dl,0x65(%esi)
jb     8086d3a <_IO_stdin_used+0x876>
data16
jns    8086cf4 <_IO_stdin_used+0x830>
add    %dl,0x69(%ebp)
and    %ah,%fs:0x66(%ecx,%ebp,2)
data16
gs
jb     8086d53 <_IO_stdin_used+0x88f>
add    %al,0x69(%edi)
and    %ah,%fs:0x66(%ecx,%ebp,2)
data16
gs
jb     8086d5f <_IO_stdin_used+0x89b>
add    %cl,0x6f(%ebp)
and    %dh,%fs:0x6d(%ecx,%ebp,2)
and    %ah,%gs:0x66(%ecx,%ebp,2)
data16
gs
jb     8086d70 <_IO_stdin_used+0x8ac>
add    %dl,0x69(%ebx)
jp     8086d67 <_IO_stdin_used+0x8a3>
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     8086d7d <_IO_stdin_used+0x8b9>
add    %cl,0x6f(%esi)
je     8086d2f <_IO_stdin_used+0x86b>
insb   (%dx),%es:(%edi)
imul   $0x74206465,0x6b(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ah,0x65440073
jbe    8086d89 <_IO_stdin_used+0x8c5>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    8086d93 <_IO_stdin_used+0x8cf>
bound  %esp,0x72(%ebp)
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     8086da4 <_IO_stdin_used+0x8e0>
add    %bl,0x4e(%ecx)
add    %al,0x20(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,%gs:0x65(%edx)
jb     8086daf <_IO_stdin_used+0x8eb>
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
popa
je     8086d6a <_IO_stdin_used+0x8a6>
and    $0x73,%eax
add    %al,0x6f(%ebx)
jne    8086dc0 <_IO_stdin_used+0x8fc>
and    %ch,%fs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8086d7b <_IO_stdin_used+0x8b7>
jb     8086dc2 <_IO_stdin_used+0x8fe>
popa
and    %ah,%fs:0x6f20756c
data16
and    %ah,0x6220756c
jns    8086de2 <_IO_stdin_used+0x91e>
gs
jae    8086d71 <_IO_stdin_used+0x8ad>
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    8086de4 <_IO_stdin_used+0x920>
and    %ch,%fs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8086d9f <_IO_stdin_used+0x8db>
jb     8086de6 <_IO_stdin_used+0x922>
popa
and    %ah,%fs:0x6f20756c
data16
and    %ah,0x6220756c
jns    8086e06 <_IO_stdin_used+0x942>
add    %ah,%gs:0x55203a73
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:(%edi)
and    $0x202c2763,%eax
imul   $0x61206465,%fs:0x66(%esi),%esp
jae    8086dda <_IO_stdin_used+0x916>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8086e2b <_IO_stdin_used+0x967>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8086e34 <_IO_stdin_used+0x970>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8086e36 <_IO_stdin_used+0x972>
imul   $0x6c696620,0x73(%esi),%ebp
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8086e04 <_IO_stdin_used+0x940>
ja     8086e4f <_IO_stdin_used+0x98b>
je     8086e50 <_IO_stdin_used+0x98c>
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x65727020,%fs:0x67(%esi),%ebp
imul   $0x2073,0x65(%eax),%di
jb     8086e61 <_IO_stdin_used+0x99d>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8086e65 <_IO_stdin_used+0x9a1>
fs add %al,%cs:%fs:(%eax)
inc    %ecx
jb     8086e6a <_IO_stdin_used+0x9a6>
push   $0x20657669
arpl   %bp,0x6e(%edi)
je     8086e72 <_IO_stdin_used+0x9ae>
imul   $0x61727420,0x73(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jae    8086e81 <_IO_stdin_used+0x9bd>
outsl  %ds:(%esi),(%dx)
jb     8086e8b <_IO_stdin_used+0x9c7>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8086e5a <_IO_stdin_used+0x996>
add    %al,(%eax)
add    %al,(%eax)
push   %esi
gs
jb     8086e9d <_IO_stdin_used+0x9d9>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
jns    8086e61 <_IO_stdin_used+0x99d>
popaw
imul   $0x6f6c206f,0x74(%eax,%eiz,1),%ebp
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x72(%edi)
imul   $0x206c616e,0x69(%edi),%esp
imul   $0x2e,0x73(%ebp,%eiz,2),%bp
push   %esi
inc    %ebp
push   %edx
dec    %ecx
inc    %esi
pop    %ecx
and    %al,0x41(%esi)
dec    %ecx
dec    %esp
push   %ebp
push   %edx
inc    %ebp
cmp    (%eax),%ah
and    $0x6e692064,%eax
jbe    8086ed8 <_IO_stdin_used+0xa14>
insb   (%dx),%es:(%edi)
imul   $0x65646165,0x68(%eax,%eiz,1),%esp
jb     8086ef5 <_IO_stdin_used+0xa31>
and    %ah,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %dl,0x45(%esi)
push   %edx
dec    %ecx
inc    %esi
pop    %ecx
and    %al,0x41(%esi)
dec    %ecx
dec    %esp
push   %ebp
push   %edx
inc    %ebp
cmp    (%eax),%ah
and    $0x6e692064,%eax
jbe    8086f04 <_IO_stdin_used+0xa40>
insb   (%dx),%es:(%edi)
imul   $0x65646165,0x68(%eax,%eiz,1),%esp
jb     8086ece <_IO_stdin_used+0xa0a>
fs
gs
je     8086f17 <_IO_stdin_used+0xa53>
arpl   %si,0x64(%ebp,%eiz,2)
add    %al,(%eax)
test   %ecx,(%eax)
add    $0x5083008,%eax
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %al,-0xff7faf8(%ebp)
or     0x50c8808,%eax
or     %dl,0xd(%eax)
add    $0x50d5008,%eax
or     %bl,0x5008050a(%eax)
or     $0x8850805,%eax
add    $0x5083008,%eax
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x50a9808
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %bl,0x3008050c(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5083008
or     %dh,(%eax)
or     %al,0x5088508
or     %dh,(%eax)
or     %al,0x5083008
or     %cl,0x6e08050a(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x64(%edi)
jns    808701b <_IO_stdin_used+0xb57>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
je     8087022 <_IO_stdin_used+0xb5e>
insl   (%dx),%es:(%edi)
imul   $0x745f72,0x6f(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     808708f <_IO_stdin_used+0xbcb>
je     8087032 <_IO_stdin_used+0xb6e>
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     8087038 <_IO_stdin_used+0xb74>
je     80870a3 <_IO_stdin_used+0xbdf>
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     808703f <_IO_stdin_used+0xb7b>
jne    80870aa <_IO_stdin_used+0xbe6>
fs
pop    %edi
je     8087045 <_IO_stdin_used+0xb81>
imul   $0x69750074,0x5f(%si),%esp
outsb  %ds:(%esi),(%dx)
je     80870bd <_IO_stdin_used+0xbf9>
popa
js     80870b2 <_IO_stdin_used+0xbee>
je     8087055 <_IO_stdin_used+0xb91>
cs
das
cs
das
inc    %eax
dec    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 dec %esp
imul   $0x64697500,0x6b(%esi),%ebp
add    %ah,0x69(%edi)
add    %ah,%fs:0x76(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     8087074 <_IO_stdin_used+0xbb0>
fs
gs
jbe    80870e5 <_IO_stdin_used+0xc21>
imul   $0x74610072,0x6f(%esi),%ebp
imul   $0x69746300,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6e(%edi)
popa
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x43(%ebx)
dec    %eax
dec    %ecx
dec    %esp
pop    %ecx
cs
popa
arpl   %bp,0x61(%esi,%ebp,1)
arpl   %sp,0x65(%ebx)
jae    8087119 <_IO_stdin_used+0xc55>
add    %dl,0x43(%ebx)
dec    %eax
dec    %ecx
dec    %esp
pop    %ecx
cs
popa
arpl   %bp,0x64(%esi,%ebp,1)
gs
popaw
jne    8087124 <_IO_stdin_used+0xc60>
je     80870ba <_IO_stdin_used+0xbf6>
push   %edx
dec    %eax
push   %esp
jae,pn 8087125 <_IO_stdin_used+0xc61>
arpl   %si,0x72(%ebp)
imul   $0x696c6573,0x2e(%ecx,%edi,2),%esi
outsb  %ds:(%esi),(%dx)
jne    8087146 <_IO_stdin_used+0xc82>
add    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,0x61(%eax),%esi
push   $0x73694d00
jae    8087146 <_IO_stdin_used+0xc82>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
imul   $0x74,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x61002e73
fs add %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808711b <_IO_stdin_used+0xc57>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808711f <_IO_stdin_used+0xc5b>
fs
jne    808716f <_IO_stdin_used+0xcab>
jo     8087169 <_IO_stdin_used+0xca5>
add    %al,%fs:0x4e(%edi)
push   %ebp
cs
fs
jne    808717a <_IO_stdin_used+0xcb6>
jo     8087173 <_IO_stdin_used+0xcaf>
imul   $0x746e6f63,0x0(%edx),%esi
outsb  %gs:(%esi),(%dx)
je     808718d <_IO_stdin_used+0xcc9>
and    %ch,0x6f(%esi)
je     808713f <_IO_stdin_used+0xc7b>
fs
jne    808718f <_IO_stdin_used+0xccb>
jo     8087189 <_IO_stdin_used+0xcc5>
add    %ah,%fs:0x73203a73
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
je     8087151 <_IO_stdin_used+0xc8d>
imul   $0x6465726f,0x6e(%edi),%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     80871a3 <_IO_stdin_used+0xcdf>
je     80871ad <_IO_stdin_used+0xce9>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%bp)
addr16 popa
je     80871b6 <_IO_stdin_used+0xcf2>
jbe    80871b4 <_IO_stdin_used+0xcf0>
and    %ch,0x63(%edi)
je     80871b5 <_IO_stdin_used+0xcf1>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
popa
fs
gs
jb     80871d0 <_IO_stdin_used+0xd0c>
add    %al,(%eax)
add    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80871ca <_IO_stdin_used+0xd06>
and    %ah,0x756f2073
je     808718d <_IO_stdin_used+0xcc9>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
jae    80871aa <_IO_stdin_used+0xce6>
cs
and    $0x73203b73,%eax
jne    80871e6 <_IO_stdin_used+0xd22>
jae    80871fa <_IO_stdin_used+0xd36>
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
and    $0x73,%eax
add    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80871fe <_IO_stdin_used+0xd3a>
and    %ah,0x756f2073
je     80871c1 <_IO_stdin_used+0xcfd>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
jae    80871de <_IO_stdin_used+0xd1a>
cs
and    $0x73250073,%eax
cmp    (%eax),%ah
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
cmp    %gs:(%eax),%esp
imul   $0x6769,0x20(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     808723b <_IO_stdin_used+0xd77>
add    %ah,%fs:0x63203a73
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8087242 <_IO_stdin_used+0xd7e>
imul   $0x63206120,0x73(%esi),%ebp
popa
arpl   %bp,0x65(%eax)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8087217 <_IO_stdin_used+0xd53>
je     808725a <_IO_stdin_used+0xd96>
and    %ah,(%di)
jae    8087239 <_IO_stdin_used+0xd75>
and    %ah,0x73
push   %ebx
imul   $0x72757461,0x6e(%edi),%esp
cmp    %gs:(%eax),%ah
cmp    %ah,0x34(%ecx)
aaa
aaa
xor    $0x3739,%ax
xor    %fs:(%eax),%bh
xor    %esi,%fs:(%edi)
xor    (%edi),%dh
cmp    %bh,(%ecx)
data16
xor    %dh,(%esi)
cmp    %bh,(%eax)
cmp    %dh,%ss:(%eax)
bound  %esp,%ss:0x35(%ebx)
xor    $0x3a732500,%eax
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
insl   (%dx),%es:(%edi)
popa
js     808726f <_IO_stdin_used+0xdab>
and    $0x203b2964,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8087278 <_IO_stdin_used+0xdb4>
fs
jne    80872c8 <_IO_stdin_used+0xe04>
jo     80872c2 <_IO_stdin_used+0xdfe>
add    %al,%fs:(%eax)
and    $0x66203a73,%eax
imul   $0x656d616e,0x20(%ebp,%eiz,2),%ebp
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80872a2 <_IO_stdin_used+0xdde>
bound  %esp,0x20(%ebp)
jae    80872f7 <_IO_stdin_used+0xe33>
insb   (%dx),%es:(%edi)
imul   $0x746f6e20,0x3b(%ecx,%ebp,1),%esi
and    %ah,0x6d(%ebp,%esi,2)
jo     80872fb <_IO_stdin_used+0xe37>
add    %ah,%fs:0x6c203a73
imul   $0x6d616e20,0x6b(%esi),%ebp
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
cmp    (%bx,%si),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80872d7 <_IO_stdin_used+0xe13>
fs
jne    8087327 <_IO_stdin_used+0xe63>
jo     8087321 <_IO_stdin_used+0xe5d>
add    %al,%fs:(%eax)
add    %ah,0x46203a73
imul   $0x61726873,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    80872f3 <_IO_stdin_used+0xe2f>
and    $0x79622073,%eax
je     808733f <_IO_stdin_used+0xe7b>
jae    8087317 <_IO_stdin_used+0xe53>
and    %dh,0x61(%eax)
fs imul $0x74697720,%fs:0x67(%esi),%ebp
74
push   $0x72657a20
outsl  %ds:(%esi),(%dx)
jae    80872f0 <_IO_stdin_used+0xe2c>
and    $0x46203a73,%eax
imul   $0x61726873,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    8087323 <_IO_stdin_used+0xe5f>
and    $0x79622073,%eax
je     808736f <_IO_stdin_used+0xeab>
cmp    (%eax),%esp
jo     808736f <_IO_stdin_used+0xeab>
fs imul $0x74697720,%fs:0x67(%esi),%ebp
74
push   $0x72657a20
outsl  %ds:(%esi),(%dx)
jae    808731f <_IO_stdin_used+0xe5b>
add    %ah,0x66203a73
imul   $0x75207369,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs cmp %fs:%gs:(%bx,%si),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808735b <_IO_stdin_used+0xe97>
fs
jne    80873ab <_IO_stdin_used+0xee7>
jo     80873a5 <_IO_stdin_used+0xee1>
add    %al,%fs:(%eax)
add    %ah,0x66203a73
imul   $0x74207369,0x20(%ebp,%eiz,2),%ebp
push   $0x72612065
arpl   %bp,0x69(%eax)
jbe    80873c0 <_IO_stdin_used+0xefc>
cmp    (%eax),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8087381 <_IO_stdin_used+0xebd>
fs
jne    80873d1 <_IO_stdin_used+0xf0d>
jo     80873cb <_IO_stdin_used+0xf07>
add    %ah,%fs:0x66203a73
imul   $0x6f207369,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     80873a3 <_IO_stdin_used+0xedf>
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     80873f1 <_IO_stdin_used+0xf2d>
insl   (%dx),%es:(%edi)
cmp    (%eax),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80873b3 <_IO_stdin_used+0xeef>
fs
jne    8087403 <_IO_stdin_used+0xf3f>
jo     80873fd <_IO_stdin_used+0xf39>
add    %al,%fs:(%eax)
add    %ah,0x66203a73
imul   $0x6e616863,0x20(%ebp,%eiz,2),%ebp
gs and %ah,%fs:%gs:0x73(%bx,%di)
and    %dh,0x65(%edi)
and    %dh,0x65(%edx)
popa
and    %ch,%fs:0x74(%ecx)
add    %al,(%eax)
mov    %ebp,0x2d000805
add    $0x52d8908,%eax
or     %cl,(%eax)
das
add    $0x52ee808,%eax
or     %cl,(%eax)
das
add    $0x52fe808,%eax
or     %al,0x6c(%ebp,%eiz,2)
gs
je     8087447 <_IO_stdin_used+0xf83>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%bp)
outsb  %ds:(%esi),(%dx)
sub    $0x64616568,%eax
gs
jb     808740c <_IO_stdin_used+0xf48>
data16
jb     808745e <_IO_stdin_used+0xf9a>
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808745d <_IO_stdin_used+0xf99>
add    %dl,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
je     8087473 <_IO_stdin_used+0xfaf>
and    %ch,0x65(%esi)
js     808747d <_IO_stdin_used+0xfb9>
and    %ch,0x65(%eax)
popa
fs
gs
jb     8087411 <_IO_stdin_used+0xf4d>
add    %al,(%eax)
add    %ch,-0x77f7faa6(%eax)
pop    %eax
add    $0x558d808,%eax
or     %dh,(%eax)
pop    %eax
add    $0x5583d08,%eax
or     %cl,0x4508055a(%eax)
jb     80874a1 <_IO_stdin_used+0xfdd>
outsl  %ds:(%esi),(%dx)
jb     8087452 <_IO_stdin_used+0xf8e>
imul   $0x20746f6e,0x20(%ebx),%esi
jb     80874a0 <_IO_stdin_used+0xfdc>
arpl   %bp,0x76(%edi)
gs
jb     80874a2 <_IO_stdin_used+0xfde>
bound  %ebp,0x3a(%ebp,%eiz,2)
and    %ah,0x78(%ebp)
imul   $0x6f6e2067,0x6e(%ecx,%ebp,2),%esi
ja     8087452 <_IO_stdin_used+0xf8e>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80874d1 <_IO_stdin_used+0x100d>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %al,%fs:%gs:(%eax)
and    $0x69203a73,%eax
insl   (%dx),%es:(%edi)
jo     80874d8 <_IO_stdin_used+0x1014>
popa
jne    80874e2 <_IO_stdin_used+0x101e>
imul   $0x6c6f2079,0x6c(%edx),%esp
and    %dh,%fs:0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     80874a3 <_IO_stdin_used+0xfdf>
and    $0x73,%eax
and    $0x74203a73,%eax
imul   $0x61747320,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
jo     80874b7 <_IO_stdin_used+0xff3>
and    $0x73692073,%eax
and    %ah,0x20732073
imul   $0x20656874,0x20(%esi),%ebp
data16
jne    8087520 <_IO_stdin_used+0x105c>
jne    8087520 <_IO_stdin_used+0x105c>
add    %ah,%gs:0x44203a73
imul   $0x726f7463,0x65(%edx),%esi
jns    80874de <_IO_stdin_used+0x101a>
jb     8087525 <_IO_stdin_used+0x1061>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     8087531 <_IO_stdin_used+0x106d>
and    %ch,0x74(%ecx)
jae    80874f1 <_IO_stdin_used+0x102d>
jae    8087547 <_IO_stdin_used+0x1083>
popa
je     808754b <_IO_stdin_used+0x1087>
jae    80874f8 <_IO_stdin_used+0x1034>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ah,0x78(%ebp)
je     8087557 <_IO_stdin_used+0x1093>
popa
arpl   %si,0x64(%ebp,%eiz,2)
add    %al,(%eax)
and    $0x55203a73,%eax
outsb  %ds:(%esi),(%dx)
gs
js     8087565 <_IO_stdin_used+0x10a1>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    808756b <_IO_stdin_used+0x10a7>
jae    8087578 <_IO_stdin_used+0x10b4>
outsb  %gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
ja     8087573 <_IO_stdin_used+0x10af>
outsb  %gs:(%esi),(%dx)
and    %ch,0x61(%ebp)
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808751f <_IO_stdin_used+0x105b>
add    %al,0x78(%ebp)
je     8087596 <_IO_stdin_used+0x10d2>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ah,0x6f(%bp,%di)
outsb  %ds:(%esi),(%dx)
je     8087599 <_IO_stdin_used+0x10d5>
addr16 jne 80875a2 <_IO_stdin_used+0x10de>
jne    80875a8 <_IO_stdin_used+0x10e4>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808755c <_IO_stdin_used+0x1098>
popa
jae    808755f <_IO_stdin_used+0x109b>
jb     80875a6 <_IO_stdin_used+0x10e2>
addr16 jne 80875b0 <_IO_stdin_used+0x10ec>
popa
jb     8087567 <_IO_stdin_used+0x10a3>
imul   $0x0,0x73(%ebp,%eiz,2),%bp
add    %al,(%eax)
and    $0x57203a73,%eax
popa
jae    8087578 <_IO_stdin_used+0x10b4>
jne    80875c8 <_IO_stdin_used+0x1104>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80875d0 <_IO_stdin_used+0x110c>
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8087589 <_IO_stdin_used+0x10c5>
je     80875d3 <_IO_stdin_used+0x110f>
imul   $0x656c6966,0x20(%ebx),%esi
add    %al,(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808759f <_IO_stdin_used+0x10db>
gs
js     80875f6 <_IO_stdin_used+0x1132>
jb     80875e5 <_IO_stdin_used+0x1121>
arpl   %si,0x2d(%eax,%eiz,1)
sub    $0x6c696620,%eax
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8087600 <_IO_stdin_used+0x113c>
outsb  %ds:(%esi),(%dx)
jne    80875ff <_IO_stdin_used+0x113b>
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     808760e <_IO_stdin_used+0x114a>
gs
jb     80875c9 <_IO_stdin_used+0x1105>
jbe    808761a <_IO_stdin_used+0x1156>
insb   (%dx),%es:(%edi)
jne    808761b <_IO_stdin_used+0x1157>
add    %ah,%gs:0x55203a73
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:(%edi)
and    $0x202c2763,%eax
gs
js     8087643 <_IO_stdin_used+0x117f>
jb     8087632 <_IO_stdin_used+0x116e>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x73(%ecx)
and    %ch,0x6f(%esi)
jb     808764a <_IO_stdin_used+0x1186>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
jne    808765d <_IO_stdin_used+0x1199>
jb     8087652 <_IO_stdin_used+0x118e>
outsb  %ds:(%esi),(%dx)
je     8087610 <_IO_stdin_used+0x114c>
and    $0x73692073,%eax
and    %ch,0x65(%esi)
ja     808765f <_IO_stdin_used+0x119b>
jb     808761c <_IO_stdin_used+0x1158>
outsl  %ds:(%esi),(%dx)
jb     808761f <_IO_stdin_used+0x115b>
jae    8087662 <_IO_stdin_used+0x119e>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x67(%ecx)
add    %ah,%gs:0x73203a73
imul   $0x70,0x70(%ecx),%ebp
imul   $0x69786520,0x67(%esi),%ebp
jae    808768e <_IO_stdin_used+0x11ca>
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:0x78(%ebp)
je     8087699 <_IO_stdin_used+0x11d5>
popa
arpl   %si,0x55(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
gs
js     80876a0 <_IO_stdin_used+0x11dc>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,0x61(%bp)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x65(%eax)
popa
fs
gs
jb     8087647 <_IO_stdin_used+0x1183>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808766e <_IO_stdin_used+0x11aa>
jb     80876b5 <_IO_stdin_used+0x11f1>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f742073
and    %ah,0x73
stos   %eax,%es:(%edi)
jb     8087668 <_IO_stdin_used+0x11a4>
or     %ch,-0x54f7fa8e(%ebx)
jb     8087670 <_IO_stdin_used+0x11ac>
or     %al,%al
jb     8087674 <_IO_stdin_used+0x11b0>
or     %dl,-0x1ff7fa8e(%eax)
jb     808767c <_IO_stdin_used+0x11b8>
or     %ah,-0x17f7fa8e(%eax)
mov    %eax,0x58a1008
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %ch,%al
mov    %eax,0x588b808
or     %cl,%al
mov    %eax,0x588d808
or     %dh,%al
mov    %al,0x5890808
or     %ah,(%eax)
mov    %eax,0x589e808
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %cl,(%eax)
mov    %eax,0x58a1008
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x5892808,%al
or     %ch,(%eax)
mov    %eax,0x5897008
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %dl,(%eax)
mov    0x587d808,%al
or     %dl,(%eax)
mov    0x58a1008,%al
or     %bl,%al
mov    %eax,0x554e4708
jae,pn 808784e <_IO_stdin_used+0x138a>
popa
jb     8087854 <_IO_stdin_used+0x1390>
gs outsl %cs:%gs:(%esi),(%dx)
data16
data16
jae    808784d <_IO_stdin_used+0x1389>
je     80877ea <_IO_stdin_used+0x1326>
sub    $0x0,%al
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8087857 <_IO_stdin_used+0x1393>
add    %ah,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x78(%ebp)
je     8087863 <_IO_stdin_used+0x139f>
fs
jb     808782c <_IO_stdin_used+0x1368>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6c(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x78(%ebp)
je     8087873 <_IO_stdin_used+0x13af>
fs
jb     808783c <_IO_stdin_used+0x1378>
insl   (%dx),%es:(%edi)
je     808787a <_IO_stdin_used+0x13b6>
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x61(%eax)
je     808788c <_IO_stdin_used+0x13c8>
gs
jb     8087889 <_IO_stdin_used+0x13c5>
and    %ah,0x61632073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8087846 <_IO_stdin_used+0x1382>
bound  %esp,0x20(%ebp)
jne    808789e <_IO_stdin_used+0x13da>
gs add %ah,%fs:%gs:0x61502f64
js     808787d <_IO_stdin_used+0x13b9>
gs
popa
fs
gs
jb     80878ae <_IO_stdin_used+0x13ea>
cs
and    $0x66252f70,%eax
add    %ch,(%edi)
je     80878b2 <_IO_stdin_used+0x13ee>
jo     8087847 <_IO_stdin_used+0x1383>
push   %esp
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8087856 <_IO_stdin_used+0x1392>
arpl   %bp,0x61(%eax)
jb     80878ce <_IO_stdin_used+0x140a>
gs
je     808785e <_IO_stdin_used+0x139a>
inc    %edi
dec    %esi
push   %ebp
jae,pn 80878d4 <_IO_stdin_used+0x1410>
popa
jb     80878da <_IO_stdin_used+0x1416>
gs outsb %cs:%gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:0x4e(%edi)
push   %ebp
jae,pn 80878e4 <_IO_stdin_used+0x1420>
popa
jb     80878ea <_IO_stdin_used+0x1426>
gs
cs
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     808787f <_IO_stdin_used+0x13bb>
inc    %edi
dec    %esi
push   %ebp
jae,pn 80878f5 <_IO_stdin_used+0x1431>
popa
jb     80878fb <_IO_stdin_used+0x1437>
gs
cs
insl   (%dx),%es:(%edi)
imul   $0x4e470072,0x6f(%esi),%ebp
push   %ebp
jae,pn 8087906 <_IO_stdin_used+0x1442>
popa
jb     808790c <_IO_stdin_used+0x1448>
gs
jb,pn  8087902 <_IO_stdin_used+0x143e>
popa
insb   (%dx),%es:(%edi)
jae    808790a <_IO_stdin_used+0x1446>
jp     8087908 <_IO_stdin_used+0x1444>
add    %al,0x4e(%edi)
push   %ebp
jae,pn 808791a <_IO_stdin_used+0x1456>
popa
jb     8087920 <_IO_stdin_used+0x145c>
gs outsb %cs:%gs:(%esi),(%dx)
jne    808791f <_IO_stdin_used+0x145b>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x47,0x0(%ebx),%esi
dec    %esi
push   %ebp
jae,pn 808792f <_IO_stdin_used+0x146b>
popa
jb     8087935 <_IO_stdin_used+0x1471>
gs
jae,pn 808792f <_IO_stdin_used+0x146b>
jp     808792d <_IO_stdin_used+0x1469>
add    %al,0x4e(%edi)
push   %ebp
jae,pn 808793f <_IO_stdin_used+0x147b>
popa
jb     8087945 <_IO_stdin_used+0x1481>
gs outsb %cs:%gs:(%esi),(%dx)
jne    8087944 <_IO_stdin_used+0x1480>
bound  %edi,0x74(%ecx)
gs
jae    80878dd <_IO_stdin_used+0x1419>
inc    %edi
dec    %esi
push   %ebp
jae,pn 8087953 <_IO_stdin_used+0x148f>
popa
jb     8087959 <_IO_stdin_used+0x1495>
gs
cs
insl   (%dx),%es:(%edi)
popa
jo     80878ec <_IO_stdin_used+0x1428>
push   %ebx
inc    %ebx
dec    %eax
dec    %ecx
dec    %esp
pop    %ecx
js,pn  8087956 <_IO_stdin_used+0x1492>
je     808796b <_IO_stdin_used+0x14a7>
jb     80878f9 <_IO_stdin_used+0x1435>
add    %al,(%eax)
add    %al,0x78(%ebp)
je     8087965 <_IO_stdin_used+0x14a1>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     808792c <_IO_stdin_used+0x1468>
and    $0x73253d73,%eax
and    %ch,0x73(%ecx)
and    %ch,0x75(%edi)
je     8087939 <_IO_stdin_used+0x1475>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
jae    8087953 <_IO_stdin_used+0x148f>
cs
and    $0x73,%eax
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80879a0 <_IO_stdin_used+0x14dc>
gs and %ah,%fs:%gs:0x78(%ebp)
je     808799f <_IO_stdin_used+0x14db>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087980 <_IO_stdin_used+0x14bc>
and    %ch,0x6e(%ecx)
jbe    80879ac <_IO_stdin_used+0x14e8>
insb   (%dx),%es:(%edi)
imul   $0x73253d73,0x25(%eax,%eiz,1),%esp
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80879cc <_IO_stdin_used+0x1508>
gs and %ah,%fs:%gs:0x78(%ebp)
je     80879cb <_IO_stdin_used+0x1507>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     80879ac <_IO_stdin_used+0x14e8>
and    %ah,0x78(%ebp)
arpl   %sp,0x73(%ebp)
jae    808799a <_IO_stdin_used+0x14d6>
and    $0x73253d73,%eax
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80879f4 <_IO_stdin_used+0x1530>
gs and %ah,%fs:%gs:0x78(%ebp)
je     80879f3 <_IO_stdin_used+0x152f>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     80879d4 <_IO_stdin_used+0x1510>
and    %ch,0x6e(%ecx)
jbe    8087a00 <_IO_stdin_used+0x153c>
insb   (%dx),%es:(%edi)
imul   $0x75203a73,0x25(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
gs
js     8087a1c <_IO_stdin_used+0x1558>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6c(%ebp,%eiz,2)
imul   $0x20726574,0x69(%ebp),%ebp
and    $0x4d000063,%eax
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8087a34 <_IO_stdin_used+0x1570>
gs and %ah,%fs:%gs:0x78(%ebp)
je     8087a33 <_IO_stdin_used+0x156f>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087a14 <_IO_stdin_used+0x1550>
and    %ch,0x6e(%ecx)
jbe    8087a40 <_IO_stdin_used+0x157c>
insb   (%dx),%es:(%edi)
imul   $0x6f203a73,0x25(%eax,%eiz,1),%esp
fs and %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8087a5f <_IO_stdin_used+0x159b>
jae    80879fc <_IO_stdin_used+0x1538>
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8087a70 <_IO_stdin_used+0x15ac>
gs and %ah,%fs:%gs:0x78(%ebp)
je     8087a6f <_IO_stdin_used+0x15ab>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087a50 <_IO_stdin_used+0x158c>
and    %ch,0x69(%ebp)
jae    8087a8e <_IO_stdin_used+0x15ca>
imul   $0x6e656c20,0x67(%esi),%ebp
addr16 je 8087a8d <_IO_stdin_used+0x15c9>
add    %al,(%eax)
add    %al,0x78(%ebp)
je     8087a91 <_IO_stdin_used+0x15cd>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087a58 <_IO_stdin_used+0x1594>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8087aa6 <_IO_stdin_used+0x15e2>
and    %ah,0x6920732a
jae    8087a66 <_IO_stdin_used+0x15a2>
outsl  %ds:(%esi),(%dx)
jne    8087abd <_IO_stdin_used+0x15f9>
and    %ch,0x66(%edi)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8087ac8 <_IO_stdin_used+0x1604>
gs and %ah,%fs:%gs:0x78(%ebp)
je     8087ac7 <_IO_stdin_used+0x1603>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087aa8 <_IO_stdin_used+0x15e4>
and    %ch,0x69(%ebp)
jae    8087ae6 <_IO_stdin_used+0x1622>
imul   $0x616c6220,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x61,(%eax),%esp
data16
je     8087ae6 <_IO_stdin_used+0x1622>
jb     8087aa3 <_IO_stdin_used+0x15df>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8087af1 <_IO_stdin_used+0x162d>
add    %al,(%eax)
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8087b00 <_IO_stdin_used+0x163c>
gs and %ah,%fs:%gs:0x78(%ebp)
je     8087aff <_IO_stdin_used+0x163b>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087ae0 <_IO_stdin_used+0x161c>
and    %ch,0x69(%ebp)
jae    8087b1e <_IO_stdin_used+0x165a>
imul   $0x75716520,0x67(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
add    %al,(%eax)
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8087b30 <_IO_stdin_used+0x166c>
gs and %ah,%fs:%gs:0x78(%ebp)
je     8087b2f <_IO_stdin_used+0x166b>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087b10 <_IO_stdin_used+0x164c>
and    %ch,0x69(%ebp)
jae    8087b4e <_IO_stdin_used+0x168a>
imul   $0x77656e20,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x69540000,0x65(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     8087b13 <_IO_stdin_used+0x164f>
imul   $0x2074756f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8087b68 <_IO_stdin_used+0x16a4>
and    %dh,%fs:0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8087b7b <_IO_stdin_used+0x16b7>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%di)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     8087b86 <_IO_stdin_used+0x16c2>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x65(%eax)
popa
fs
gs
jb     8087b4d <_IO_stdin_used+0x1689>
imul   $0x77,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     8087b98 <_IO_stdin_used+0x16d4>
and    %ah,(%edi)
and    $0x2773,%eax
add    %cl,0x65(%ebx)
jns    8087bb7 <_IO_stdin_used+0x16f3>
outsl  %ds:(%esi),(%dx)
jb     8087ba7 <_IO_stdin_used+0x16e3>
and    %ah,0x73692073
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
and    %ch,0x6f(%esi)
je     8087b79 <_IO_stdin_used+0x16b5>
jns    8087bc0 <_IO_stdin_used+0x16fc>
je     8087b7d <_IO_stdin_used+0x16b9>
imul   $0x656d656c,0x70(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
je     8087bcc <_IO_stdin_used+0x1708>
add    %al,%fs:(%eax)
add    %al,(%eax)
dec    %ebx
gs
jns    8087be7 <_IO_stdin_used+0x1723>
outsl  %ds:(%esi),(%dx)
jb     8087bd7 <_IO_stdin_used+0x1713>
and    %ah,0x61632073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8087b9e <_IO_stdin_used+0x16da>
bound  %esp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
jbe    8087be9 <_IO_stdin_used+0x1725>
jb     8087bf8 <_IO_stdin_used+0x1734>
imul   $0x6547006e,0x65(%esp,%eiz,2),%esp
outsb  %ds:(%esi),(%dx)
gs
jb     8087bf3 <_IO_stdin_used+0x172f>
je     8087bf9 <_IO_stdin_used+0x1735>
and    %ch,%fs:0x65(%ebx)
jns    8087c11 <_IO_stdin_used+0x174d>
outsl  %ds:(%esi),(%dx)
jb     8087c01 <_IO_stdin_used+0x173d>
das
jbe    8087c01 <_IO_stdin_used+0x173d>
insb   (%dx),%es:(%edi)
jne    8087c08 <_IO_stdin_used+0x1744>
and    %dh,0x61(%eax)
imul   $0x74207369,0x20(%edx),%esi
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
imul   $0x77,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     8087c21 <_IO_stdin_used+0x175d>
cmp    $0x202c7325,%eax
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8087c30 <_IO_stdin_used+0x176c>
cmp    $0x297325,%eax
add    %al,(%eax)
add    %bh,0x70(%ebp)
or     %cl,(%eax)
xor    %ah,0x59be008(%ebp,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x78(%esi)
or     %cl,(%eax)
orb    $0x5,-0x746ff7fb(%ebx)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x78(%esi)
or     %cl,(%eax)
orb    $0x5,-0x746ff7fb(%ebx)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x5ff7f790(%ebx)
movsb  %ds:(%esi),%es:(%edi)
add    $0x59ba008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x70(%edi)
or     %cl,(%eax)
add    %ah,-0x62dff7fb(%edx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x40080870(%edi)
cltd
add    $0x58d2008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%bh
jo     8087c63 <_IO_stdin_used+0x179f>
or     %ah,(%eax)
cltd
add    $0x58d1008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,-0x6d(%ebp)
or     %cl,(%eax)
pusha
cltd
add    $0x59b6008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%bl
jo     8087c8b <_IO_stdin_used+0x17c7>
or     %al,(%eax)
cltd
add    $0x5923008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
xchg   %eax,%esp
or     %cl,(%eax)
nop
mov    %al,0xa0d00805
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x70(%ebx)
or     %cl,(%eax)
xor    %ah,-0x629ff7fb(%edx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0x1ff7f790(%ecx)
cwtl
add    $0x58d0008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x78(%esi)
or     %cl,(%eax)
add    %bl,-0x6dcff7fb(%ecx)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x78(%esi)
or     %cl,(%eax)
shlb   $0x5,-0x5f6ff7fb(%edx)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x78(%edi)
or     %cl,(%eax)
lock mov %al,0xa0500805
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x60080878(%eax)
mov    %al,0xa0000805
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,-0x5cdff7f8(%eax,%edi,2)
add    $0x5a12008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x60080878(%ecx)
mov    %al,0xa0000805
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%al
ja     8087d53 <_IO_stdin_used+0x188f>
or     %dl,-0x5d(%eax)
add    $0x59f4008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%cl
js     8087d67 <_IO_stdin_used+0x18a3>
or     %dl,-0x7ff7fa5d(%eax)
sahf
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%ch
js     8087d7b <_IO_stdin_used+0x18b7>
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%al
popl   0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
jno    8087d8f <_IO_stdin_used+0x18cb>
or     %dl,-0x66(%eax)
add    $0x58c4008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x3ff7f79b(%edi)
cwtl
add    $0x58cf008,%eax
or     %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%ah
or     %cl,%gs:(%eax)
rcrb   $0x5,-0x731ff7fb(%eax)
or     %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
or     %cl,%gs:(%eax)
shlb   -0x61cff7fb(%ebx)
add    $0x308,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
data16
or     %cl,(%eax)
add    %ah,0x59de008(%ebp,%eax,1)
or     %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x5ff7f790(%edx)
cwtl
add    $0x58cd008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x30080870(%ebp)
lcall  $0x805,$0x8dd00805
cmpsl  %es:(%edi),%ds:(%esi)
jo     8087e1b <_IO_stdin_used+0x1957>
or     %dl,(%eax)
lcall  $0x805,$0x8da00805
in     (%dx),%al
js     8087e2f <_IO_stdin_used+0x196b>
or     %ah,%al
cltd
add    $0x5ae5008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,0x4e(%ecx)
inc    %esp
add    %ah,0x44203a73
imul   $0x726f7463,0x65(%edx),%esi
jns    8087e7e <_IO_stdin_used+0x19ba>
imul   $0x77656e,0x20(%ebx),%esi
and    $0x62203a73,%eax
jns    8087ee0 <_IO_stdin_used+0x1a1c>
and    %ah,%gs:0x25203a73
jae    8087e95 <_IO_stdin_used+0x19d1>
and    $0x616d0073,%eax
js     8087e7c <_IO_stdin_used+0x19b8>
insl   (%dx),%es:(%edi)
imul   $0x6c656966,0x0(%esi),%ebp
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %ah,%gs:(%eax)
and    %ah,(%eax)
sub    %ah,0x7335312d
and    %bh,0x205b203e
and    $0x25202c73,%eax
jae    8087ec1 <_IO_stdin_used+0x19fd>
pop    %ebp
sub    %edi,(%edx)
or     (%edx),%cl
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x7335312d
and    %bh,0x205b203e
and    $0x25202c73,%eax
jae    8087edd <_IO_stdin_used+0x1a19>
pop    %ebp
sub    $0xa,%al
add    %dh,0x2b(%edx)
add    %al,0x4e(%edi)
push   %ebp
and    %dh,0x72(%ecx,%eiz,2)
add    %al,0x61(%edx)
and    %ch,%fs:0x6e(%ecx)
arpl   %si,0x65(%edx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8087f3b <_IO_stdin_used+0x1a77>
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     8087f52 <_IO_stdin_used+0x1a8e>
popa
je     8087ee8 <_IO_stdin_used+0x1a24>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8087f4d <_IO_stdin_used+0x1a89>
insb   (%dx),%es:(%edi)
imul   $0x20656d69,0x74(%eax,%eiz,1),%esp
jae    8087f6b <_IO_stdin_used+0x1aa7>
popa
insl   (%dx),%es:(%edi)
jo     8087efb <_IO_stdin_used+0x1a37>
and    $0x6c253a73,%eax
cmp    %fs:(%eax),%ah
and    $0x6e490073,%eax
jbe    8087f6b <_IO_stdin_used+0x1aa7>
insb   (%dx),%es:(%edi)
imul   $0x6669646f,0x6d(%eax,%eiz,1),%esp
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %dh,0x6d(%ecx,%ebp,2)
add    %cl,%gs:0x6e(%ecx)
jbe    8087f85 <_IO_stdin_used+0x1ac1>
insb   (%dx),%es:(%edi)
imul   $0x63697665,0x64(%eax,%eiz,1),%esp
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %cl,0x6e(%ecx)
jbe    8087f9b <_IO_stdin_used+0x1ad7>
insb   (%dx),%es:(%edi)
imul   $0x65646f6e,0x69(%eax,%eiz,1),%esp
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ch,0x66(%esi)
jae    8087f4f <_IO_stdin_used+0x1a8b>
imul   $0x73694d00,0x6f(%esi),%ebp
jae    8087fc1 <_IO_stdin_used+0x1afd>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%si)
arpl   %bp,0x72(%edi)
and    %dh,%fs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x726f74,0x61(%esi),%ebp
and    $0x62203a73,%eax
jns    8087fe8 <_IO_stdin_used+0x1b24>
and    %ah,%gs:0x25203a73
jae    8087f7d <_IO_stdin_used+0x1ab9>
and    $0x73252d73,%eax
sub    $0xa6425,%eax
and    $0x44203a73,%eax
gs
insb   (%dx),%es:(%edi)
gs
je     8087ffa <_IO_stdin_used+0x1b36>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    8087fa1 <_IO_stdin_used+0x1add>
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8087fc3 <_IO_stdin_used+0x1aff>
jb     808800a <_IO_stdin_used+0x1b46>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808800e <_IO_stdin_used+0x1b4a>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    8088024 <_IO_stdin_used+0x1b60>
popa
insl   (%dx),%es:(%edi)
jo     8088013 <_IO_stdin_used+0x1b4f>
jae    808801b <_IO_stdin_used+0x1b57>
arpl   %ax,(%eax)
je     8088023 <_IO_stdin_used+0x1b5f>
insl   (%dx),%es:(%edi)
gs
jae    8088032 <_IO_stdin_used+0x1b6e>
popa
insl   (%dx),%es:(%edi)
jo     8088021 <_IO_stdin_used+0x1b5d>
outsb  %ds:(%esi),(%dx)
jae    808802a <_IO_stdin_used+0x1b66>
arpl   %ax,(%eax)
add    %ah,0x44203a73
imul   $0x726f7463,0x65(%edx),%esi
jns    8087ff6 <_IO_stdin_used+0x1b32>
push   $0x62207361
gs outsb %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x25000073
jae    808802d <_IO_stdin_used+0x1b69>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808801e <_IO_stdin_used+0x1b5a>
imul   $0x61206e6f,0x20(%ebx),%esi
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     8088072 <_IO_stdin_used+0x1bae>
outsb  %ds:(%esi),(%dx)
je     8088030 <_IO_stdin_used+0x1b6c>
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     808807e <_IO_stdin_used+0x1bba>
insl   (%dx),%es:(%edi)
cmp    (%eax),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8088040 <_IO_stdin_used+0x1b7c>
fs
jne    8088090 <_IO_stdin_used+0x1bcc>
jo     808808a <_IO_stdin_used+0x1bc6>
add    %al,%fs:(%eax)
and    $0x44203a73,%eax
imul   $0x726f7463,0x65(%edx),%esi
jns    8088056 <_IO_stdin_used+0x1b92>
push   $0x62207361
gs outsb %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs add %al,%fs:%gs:(%eax)
and    $0x62203a73,%eax
jns    80880c3 <_IO_stdin_used+0x1bff>
and    %ah,%gs:0x25203a73
jae    8088078 <_IO_stdin_used+0x1bb4>
and    $0x2e732a2e,%eax
cs and %dh,%cs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %al,(%bx,%si)
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
gs
js     80880e1 <_IO_stdin_used+0x1c1d>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %al,0x4f(%ebp)
inc    %esi
and    %ch,0x6e(%ecx)
and    %dh,0x6e(%ebx)
popa
jo     80880f6 <_IO_stdin_used+0x1c32>
push   $0x6620746f
imul   $0x203a7325,0x0(%ebp,%eiz,2),%ebp
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x25203a73
jae    80880bc <_IO_stdin_used+0x1bf8>
and    $0x6f662073,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808810b <_IO_stdin_used+0x1c47>
and    %ah,%fs:0x79(%edx)
and    %ch,0x6e(%ecx)
jbe    8088110 <_IO_stdin_used+0x1c4c>
insb   (%dx),%es:(%edi)
imul   $0x20657479,0x62(%eax,%eiz,1),%esp
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     80880bf <_IO_stdin_used+0x1bfb>
add    %ah,0x62203a73
jns    808813b <_IO_stdin_used+0x1c77>
and    %ah,%gs:0x28203a73
jbe    8088131 <_IO_stdin_used+0x1c6d>
insb   (%dx),%es:(%edi)
imul   $0x65676e61,0x72(%eax,%eiz,1),%esp
and    %ah,0x252e2e73
jae    808810a <_IO_stdin_used+0x1c46>
or     (%ecx),%cl
and    $0x73252073,%eax
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   $0x74207369
popa
jb     808811c <_IO_stdin_used+0x1c58>
jae    8088117 <_IO_stdin_used+0x1c53>
jae    8088167 <_IO_stdin_used+0x1ca3>
popa
jo     808816f <_IO_stdin_used+0x1cab>
push   $0x6620746f
imul   $0x6c656966,0x20(%ebp,%eiz,2),%ebp
and    %dh,%fs:0x61(%edx)
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    8088132 <_IO_stdin_used+0x1c6e>
popa
jb     808817a <_IO_stdin_used+0x1cb6>
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    808817d <_IO_stdin_used+0x1cb9>
insb   (%dx),%es:(%edi)
imul   $0x6669646f,0x6d(%eax,%eiz,1),%esp
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %dh,0x6d(%ecx,%ebp,2)
and    %ch,%gs:(%eax)
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    808819e <_IO_stdin_used+0x1cda>
arpl   %bp,0x6e(%edi)
fs
jae    8088168 <_IO_stdin_used+0x1ca4>
add    %dl,0x6e(%ebp)
jae    80881b9 <_IO_stdin_used+0x1cf5>
jo     80881b6 <_IO_stdin_used+0x1cf2>
outsl  %ds:(%esi),(%dx)
jb     80881bd <_IO_stdin_used+0x1cf9>
gs and %ch,%fs:%gs:0x6e(%ecx)
arpl   %si,0x65(%edx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80881b7 <_IO_stdin_used+0x1cf3>
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     80881c9 <_IO_stdin_used+0x1d05>
popa
je     808817f <_IO_stdin_used+0x1cbb>
jbe    80881c6 <_IO_stdin_used+0x1d02>
jb     80881d6 <_IO_stdin_used+0x1d12>
imul   $0x6c25203a,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
jne    808816d <_IO_stdin_used+0x1ca9>
add    %al,(%eax)
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80881e4 <_IO_stdin_used+0x1d20>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     80881e3 <_IO_stdin_used+0x1d1f>
imul   $0x70786520,0x3a(%edx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,(%edi)
and    $0x62202763,%eax
jne    8088208 <_IO_stdin_used+0x1d44>
and    %ah,0x6f(%esi)
jne    8088207 <_IO_stdin_used+0x1d43>
and    %ah,%fs:0x6f3323
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8088214 <_IO_stdin_used+0x1d50>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     8088213 <_IO_stdin_used+0x1d4f>
imul   $0x27582720,0x3a(%edx),%esi
and    %ah,0x70(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
imul   $0x646574,0x61(%ebx),%esp
add    %al,(%eax)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8088238 <_IO_stdin_used+0x1d74>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     8088237 <_IO_stdin_used+0x1d73>
imul   $0x706d6520,0x3a(%edx),%esi
je     8088255 <_IO_stdin_used+0x1d91>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
and    %ah,(%edi)
push   %edx
daa
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8088260 <_IO_stdin_used+0x1d9c>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     808825f <_IO_stdin_used+0x1d9b>
imul   $0x27542720,0x3a(%edx),%esi
and    %ch,0x6f(%esi)
je     8088227 <_IO_stdin_used+0x1d63>
jo     808827b <_IO_stdin_used+0x1db7>
arpl   %sp,%gs:0x65(%ebp)
fs gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,(%edi)
push   %edx
daa
add    %cl,0x61(%ebp)
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     808828c <_IO_stdin_used+0x1dc8>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     808828b <_IO_stdin_used+0x1dc7>
imul   $0x706d6520,0x3a(%edx),%esi
je     80882a9 <_IO_stdin_used+0x1de5>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
and    %ah,(%edi)
push   %esp
daa
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80882b4 <_IO_stdin_used+0x1df0>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     80882b3 <_IO_stdin_used+0x1def>
imul   $0x70786520,0x3a(%edx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,(%edi)
and    $0x62202763,%eax
jne    80882d8 <_IO_stdin_used+0x1e14>
and    %ah,0x6f(%esi)
jne    80882d7 <_IO_stdin_used+0x1e13>
and    %ah,%fs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x74(%ecx,%eiz,2)
popa
add    %al,(%eax)
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     80882ec <_IO_stdin_used+0x1e28>
gs and %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     80882eb <_IO_stdin_used+0x1e27>
imul   $0x27582720,0x3a(%edx),%esi
and    %ch,0x65(%esi)
jbe    80882f8 <_IO_stdin_used+0x1e34>
jb     80882b5 <_IO_stdin_used+0x1df1>
jne    808830a <_IO_stdin_used+0x1e46>
gs add %al,%fs:%gs:(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80882c3 <_IO_stdin_used+0x1dff>
arpl   %si,0x65(%edx)
popa
je     808830e <_IO_stdin_used+0x1e4a>
and    %dh,0x6d(%ebp,%eiz,2)
jo     808831e <_IO_stdin_used+0x1e5a>
jb     8088312 <_IO_stdin_used+0x1e4e>
jb     808832c <_IO_stdin_used+0x1e68>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80882de <_IO_stdin_used+0x1e1a>
jne    8088333 <_IO_stdin_used+0x1e6f>
imul   $0x6d657420,0x67(%esi),%ebp
jo     8088335 <_IO_stdin_used+0x1e71>
popa
je     8088331 <_IO_stdin_used+0x1e6d>
and    %ah,0x73250073
cmp    (%eax),%ah
dec    %esi
outsl  %ds:(%esi),(%dx)
je     80882f8 <_IO_stdin_used+0x1e34>
jo     808834f <_IO_stdin_used+0x1e8b>
jb     8088343 <_IO_stdin_used+0x1e7f>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8088324 <_IO_stdin_used+0x1e60>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8088363 <_IO_stdin_used+0x1e9f>
and    %dh,0x74(%ebx)
popa
je     80882fa <_IO_stdin_used+0x1e36>
add    %al,(%eax)
and    $0x64203a73,%eax
imul   $0x726f7463,0x65(%edx),%esi
jns    808832a <_IO_stdin_used+0x1e66>
imul   $0x61206e6f,0x20(%ebx),%esi
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     808837e <_IO_stdin_used+0x1eba>
outsb  %ds:(%esi),(%dx)
je     808833c <_IO_stdin_used+0x1e78>
fs
gs
jbe    8088389 <_IO_stdin_used+0x1ec5>
arpl   %sp,0x3a(%ebp)
and    %ch,0x6f(%esi)
je     8088348 <_IO_stdin_used+0x1e84>
jo     808839f <_IO_stdin_used+0x1edb>
jb     8088393 <_IO_stdin_used+0x1ecf>
imul   $0x0,0x67(%esi),%ebp
add    %cl,0x7f(%ebx)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
stos   %al,%es:(%edi)
jg     808837f <_IO_stdin_used+0x1ebb>
or     %al,(%eax)
add    %al,(%eax)
cmp    $0xff,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
jg     8088385 <_IO_stdin_used+0x1ec1>
add    %al,(%eax)
add    %bh,0x8087f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
leave
lcall  $0x3400,$0x3b
int    $0x8
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
decl   0x7f(%edi)
or     %cl,(%eax)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x69,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%eax)
popa
fs
gs
jb     8088409 <_IO_stdin_used+0x1f45>
ja     8088453 <_IO_stdin_used+0x1f8f>
gs
jb     8088453 <_IO_stdin_used+0x1f8f>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     808845e <_IO_stdin_used+0x1f9a>
arpl   %sp,(%eax)
and    $0x61762073,%eax
insb   (%dx),%es:(%edi)
jne    8088464 <_IO_stdin_used+0x1fa0>
and    %ah,0x78(%ebp)
jo     8088469 <_IO_stdin_used+0x1fa5>
arpl   %si,0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
jb     8088472 <_IO_stdin_used+0x1fae>
push   $0x20657669
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6c(%ecx,%eiz,2)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8088484 <_IO_stdin_used+0x1fc0>
and    %ah,0x20732a2e
imul   $0x2074756f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
cmp    %gs:(%bx,%si),%esp
popa
jae    80884af <_IO_stdin_used+0x1feb>
jne    80884ab <_IO_stdin_used+0x1fe7>
imul   $0x6f777420,0x67(%esi),%ebp
daa
jae    8088468 <_IO_stdin_used+0x1fa4>
arpl   %bp,0x6d(%edi)
jo     80884b9 <_IO_stdin_used+0x1ff5>
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8088453 <_IO_stdin_used+0x1f8f>
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80884c0 <_IO_stdin_used+0x1ffc>
and    %ch,0x63(%edi)
je     80884c1 <_IO_stdin_used+0x1ffd>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80884cc <_IO_stdin_used+0x2008>
and    %ah,0x20732a2e
imul   $0x2074756f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
add    %al,%gs:0x72(%bx,%di)
arpl   %bp,0x69(%eax)
jbe    80884ec <_IO_stdin_used+0x2028>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80884ee <_IO_stdin_used+0x202a>
imul   $0x73626f20,0x73(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
jae    80884fc <_IO_stdin_used+0x2038>
outsb  %gs:(%esi),(%dx)
je     80884bd <_IO_stdin_used+0x1ff9>
bound  %esp,0x73(%ecx)
gs
sub    $0x68203436,%eax
gs
popa
fs
gs
jb     808851f <_IO_stdin_used+0x205b>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
jb     8088516 <_IO_stdin_used+0x2052>
push   $0x20657669
jae    8088523 <_IO_stdin_used+0x205f>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x61(%edx)
jae    8088528 <_IO_stdin_used+0x2064>
sub    $0x73203436,%eax
je     808853c <_IO_stdin_used+0x2078>
imul   $0x20732520,0x67(%esi),%ebp
imul   $0x2074756f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
add    %al,%gs:0x72(%bx,%di)
arpl   %bp,0x69(%eax)
jbe    8088550 <_IO_stdin_used+0x208c>
and    %ah,0x61(%edx)
jae    8088555 <_IO_stdin_used+0x2091>
sub    $0x20363532,%eax
jbe    8088558 <_IO_stdin_used+0x2094>
insb   (%dx),%es:(%edi)
jne    808855f <_IO_stdin_used+0x209b>
and    %ch,0x73(%ecx)
and    %ch,0x75(%edi)
je     8088522 <_IO_stdin_used+0x205e>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808857c <_IO_stdin_used+0x20b8>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     808857e <_IO_stdin_used+0x20ba>
imul   $0x2a2e2520,0x73(%esi),%ebp
jae    8088546 <_IO_stdin_used+0x2082>
ja     8088590 <_IO_stdin_used+0x20cc>
gs
jb     8088590 <_IO_stdin_used+0x20cc>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     808859b <_IO_stdin_used+0x20d7>
arpl   %sp,(%eax)
and    $0x61762073,%eax
insb   (%dx),%es:(%edi)
jne    80885a1 <_IO_stdin_used+0x20dd>
and    %ah,0x78(%ebp)
jo     80885a6 <_IO_stdin_used+0x20e2>
arpl   %si,0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80885b4 <_IO_stdin_used+0x20f0>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80885ba <_IO_stdin_used+0x20f6>
and    %ah,0x73692073
and    %ch,0x75(%edi)
je     8088580 <_IO_stdin_used+0x20bc>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61722073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
jae    808859d <_IO_stdin_used+0x20d9>
cs
and    $0x25000073,%eax
xor    %dh,(%esp,%ebp,2)
fs
sub    $0x64323025,%eax
sub    $0x64323025,%eax
and    %ah,0x3a643230
and    $0x3a643230,%eax
and    $0x643230,%eax
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
and    $0x2a203a73,%eax
sub    (%eax),%ah
inc    %edx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
outsl  %ds:(%esi),(%dx)
data16
and    %cl,0x55(%esi)
dec    %esp
jae    80885cf <_IO_stdin_used+0x210b>
sub    (%edx),%ch
or     (%eax),%al
jne    8088628 <_IO_stdin_used+0x2164>
je     8088618 <_IO_stdin_used+0x2154>
jb     80885d9 <_IO_stdin_used+0x2115>
and    %al,(%eax)
and    $0x646c3430,%eax
sub    $0x64323025,%eax
sub    $0x64323025,%eax
and    %ah,0x3a643230
and    $0x643230,%eax
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%eax),%esp
jae    8088618 <_IO_stdin_used+0x2154>
and    %al,(%eax)
and    $0x73252073,%eax
das
and    $0x2a252073,%eax
jae    808860d <_IO_stdin_used+0x2149>
and    $0x732a2d,%eax
and    %ch,0x7325203e
or     (%eax),%al
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x20000a73
jne    8088678 <_IO_stdin_used+0x21b4>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:0x2d000a73
sub    $0x676e6f4c,%eax
and    %cl,0x6e(%ecx,%ebp,2)
imul   $0x2d,0x2d000a2d,%ebp
dec    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %cl,0x61(%bp)
insl   (%dx),%es:(%edi)
gs
sub    $0x2d000a2d,%eax
sub    $0x756c6f56,%eax
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x65(%eax)
popa
fs
gs
jb     8088679 <_IO_stdin_used+0x21b5>
sub    $0x2d2d000a,%eax
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80886bf <_IO_stdin_used+0x21fb>
outsb  %ds:(%esi),(%dx)
jne    80886be <_IO_stdin_used+0x21fa>
and    %ah,%fs:0x74(%ecx)
and    %ah,0x79(%edx)
je     80886c7 <_IO_stdin_used+0x2203>
and    %ah,0xa2d2d73
add    %al,0x72(%ebx)
gs
popa
je     80886d8 <_IO_stdin_used+0x2214>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%si)
jb     80886db <_IO_stdin_used+0x2217>
arpl   %si,0x72(%edi,%ebp,2)
jns    80886b6 <_IO_stdin_used+0x21f2>
add    %ah,0x2a252073
jae    80886a4 <_IO_stdin_used+0x21e0>
and    $0x25000a73,%eax
jae    80886c5 <_IO_stdin_used+0x2201>
and    %cl,0x6d(%edi)
imul   $0x6200676e,0x69(%esp,%esi,2),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
and    $0x2a203a73,%eax
sub    (%eax),%ah
inc    %ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%edx)
sub    (%edx),%cl
add    %al,(%eax)
add    %ch,-0x2ff7f9ec(%eax)
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %ch,0x20080614(%eax)
pop    %ss
push   %es
or     %dh,(%eax)
pop    %ss
push   %es
or     %dh,%al
push   %ss
push   %es
or     %al,(%eax)
pop    %ss
push   %es
or     %cl,%al
adc    $0x6,%al
or     %ah,%al
push   %ss
push   %es
or     %dl,(%eax)
pop    %ss
push   %es
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %cl,%al
adc    $0x6,%al
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %cl,-0x77f7f9ea(%eax)
push   %ss
push   %es
or     %dl,%al
push   %ss
push   %es
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %ch,-0x2ff7f9ec(%eax)
adc    %al,(%esi)
or     %dl,%al
adc    %al,(%esi)
or     %al,%al
adc    %al,(%esi)
or     %bl,0x16(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %dh,(%eax)
push   %ss
push   %es
or     %bh,%al
adc    $0x16580806,%eax
push   %es
or     %bl,0x16(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %ah,%al
adc    $0x15c80806,%eax
push   %es
or     %cl,0x15(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %bl,0x16(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %dl,0x17(%eax)
push   %es
or     %bl,%al
adc    $0x6,%al
or     %ch,(%eax)
sbb    $0x1de00806,%eax
push   %es
or     %ch,(%eax)
sbb    $0x1c080806,%eax
push   %es
or     %bh,0x1d(%eax)
push   %es
or     %dh,(%eax)
sbb    $0x806,%eax
add    %al,(%eax)
inc    %ecx
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
dec    %edx
dec    %ebx
dec    %esp
dec    %ebp
dec    %esi
dec    %edi
push   %eax
push   %ecx
push   %edx
push   %ebx
push   %esp
push   %ebp
push   %esi
push   %edi
pop    %eax
pop    %ecx
pop    %edx
popa
bound  %esp,0x64(%ebx)
gs
addr16 pushw $0x6a69
imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
jo     8088a3c <_IO_stdin_used+0x2578>
jb     8088a40 <_IO_stdin_used+0x257c>
je     8088a44 <_IO_stdin_used+0x2580>
jbe    8088a48 <_IO_stdin_used+0x2584>
js     8088a4c <_IO_stdin_used+0x2588>
jp     8088a05 <_IO_stdin_used+0x2541>
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
sub    (%edi),%ebp
mov    $0xb8080623,%eax
and    (%esi),%eax
or     %bh,-0x47f7f9dd(%eax)
and    (%esi),%eax
or     %bh,-0x47f7f9dd(%eax)
and    (%esi),%eax
or     %bh,-0x47f7f9dd(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %ah,-0xff7f9dd(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %cl,-0xff7f9dd(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,0x23(%eax)
push   %es
or     %bl,0x23(%eax)
push   %es
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %al,0x23(%eax)
push   %es
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %ch,(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dl,(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %al,(%eax)
and    (%esi),%eax
or     %dh,%al
and    (%esi),%eax
or     %dh,%al
and    (%esi),%al
or     %ah,0x65(%edi)
je     8088b63 <_IO_stdin_used+0x269f>
ja     8088b66 <_IO_stdin_used+0x26a2>
add    %dl,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
imul   $0x20732520,0x67(%esi),%ebp
je     8088b80 <_IO_stdin_used+0x26bc>
and    %ah,0x25000a73
jae    8088b53 <_IO_stdin_used+0x268f>
and    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8088b41 <_IO_stdin_used+0x267d>
jb     8088b88 <_IO_stdin_used+0x26c4>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
and    $0x65520073,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
imul   $0x20732520,0x67(%esi),%ebp
bound  %esp,0x63(%ecx)
imul   $0x74,(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x63000a73
push   $0x20646c69
jo     8088bc0 <_IO_stdin_used+0x26fc>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8088b54 <_IO_stdin_used+0x2690>
outsw  %ds:(%esi),(%dx)
jb     8088bc3 <_IO_stdin_used+0x26ff>
add    %ch,0x6e(%ecx)
je     8088bc2 <_IO_stdin_used+0x26fe>
jb     8088bcf <_IO_stdin_used+0x270b>
jb     8088bd0 <_IO_stdin_used+0x270c>
arpl   %sp,0x73(%ebp)
jae    8088b86 <_IO_stdin_used+0x26c2>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
add    %dh,0x69(%eax)
jo     8088bd7 <_IO_stdin_used+0x2713>
add    %al,(%eax)
and    $0x46203a73,%eax
imul   $0x6f6d6572,0x20(%ebp,%eiz,2),%ebp
jbe    8088be8 <_IO_stdin_used+0x2724>
and    %ah,%fs:0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     8088bf0 <_IO_stdin_used+0x272c>
and    %dh,0x65(%edi)
and    %dh,0x65(%edx)
popa
and    %ch,%fs:0x74(%ecx)
add    %ch,0x6f630054
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
add    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8088bce <_IO_stdin_used+0x270a>
jae    8088c20 <_IO_stdin_used+0x275c>
insb   (%dx),%es:(%edi)
imul   $0x6e697274,0x73(%eax,%eiz,1),%esi
and    %ah,(%bx)
and    $0x203a2773,%eax
and    $0x73250073,%eax
cmp    (%eax),%ah
dec    %esi
outsl  %ds:(%esi),(%dx)
je     8088bec <_IO_stdin_used+0x2728>
outsw  %ds:(%esi),(%dx)
jne    8088c3e <_IO_stdin_used+0x277a>
and    %ch,%fs:0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088c41 <_IO_stdin_used+0x277d>
add    %al,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088c49 <_IO_stdin_used+0x2785>
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ch,0x69(%ebp)
jae    8088c5c <_IO_stdin_used+0x2798>
popa
je     8088c55 <_IO_stdin_used+0x2791>
push   $0x74615000
je     8088c5e <_IO_stdin_used+0x279a>
jb     8088c69 <_IO_stdin_used+0x27a5>
and    %ch,0x61(%ebp)
je     8088c63 <_IO_stdin_used+0x279f>
push   $0x20676e69
arpl   %bp,0x61(%eax)
jb     8088c6b <_IO_stdin_used+0x27a7>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8088c30 <_IO_stdin_used+0x276c>
jne    8088c85 <_IO_stdin_used+0x27c1>
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8088c23 <_IO_stdin_used+0x275f>
add    %dl,0x73(%ebp)
and    %ch,%gs:0x6c69772d
arpl   %sp,%fs:0x72(%ecx)
fs
jae    8088c54 <_IO_stdin_used+0x2790>
je     8088ca5 <_IO_stdin_used+0x27e1>
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jo     8088ca1 <_IO_stdin_used+0x27dd>
je     8088cb6 <_IO_stdin_used+0x27f2>
gs
jb     8088cb3 <_IO_stdin_used+0x27ef>
and    %ch,0x61(%ebp)
je     8088cad <_IO_stdin_used+0x27e9>
push   $0x2c676e69
and    %ch,0x72(%edi)
and    %ch,0x2d6f6e2d
ja     8088cc3 <_IO_stdin_used+0x27ff>
insb   (%dx),%es:(%edi)
arpl   %sp,%fs:0x72(%ecx)
fs
jae    8088c82 <_IO_stdin_used+0x27be>
je     8088cd3 <_IO_stdin_used+0x280f>
and    %dh,0x75(%ebx)
jo     8088cd9 <_IO_stdin_used+0x2815>
jb     8088cd0 <_IO_stdin_used+0x280c>
jae    8088ce0 <_IO_stdin_used+0x281c>
and    %dh,0x69(%eax,%ebp,2)
jae    8088c93 <_IO_stdin_used+0x27cf>
ja     8088cd6 <_IO_stdin_used+0x2812>
jb     8088ce5 <_IO_stdin_used+0x2821>
imul   $0x73250000,0x67(%esi),%ebp
cmp    (%eax),%ah
imul   $0x696c,0x20(%ebp,%eiz,2),%bp
jae    8088cfd <_IO_stdin_used+0x2839>
and    %dh,0x65(%edx)
jno    8088d03 <_IO_stdin_used+0x283f>
gs
jae    8088d05 <_IO_stdin_used+0x2841>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6c612073
jb     8088d05 <_IO_stdin_used+0x2841>
popa
fs
jns    8088cc4 <_IO_stdin_used+0x2800>
jb     8088d0b <_IO_stdin_used+0x2847>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x73
add    %ah,0x66203a73
imul   $0x656d616e,0x20(%ebp,%eiz,2),%ebp
and    %dh,0x65(%edx)
popa
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8088d2d <_IO_stdin_used+0x2869>
imul   $0x6c756e20,0x73(%esi),%ebp
and    %ah,0x68(%ebx)
popa
jb     8088d3a <_IO_stdin_used+0x2876>
arpl   %si,0x72(%ebp,%eiz,2)
add    %al,(%eax)
add    %ah,0x52203a73
gs
jno    8088d5d <_IO_stdin_used+0x2899>
imul   $0x636f2064,0x65(%edx),%esi
arpl   %si,0x72(%ebp)
jb     8088d59 <_IO_stdin_used+0x2895>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8088d1c <_IO_stdin_used+0x2858>
outsw  %ds:(%esi),(%dx)
jne    8088d6e <_IO_stdin_used+0x28aa>
and    %ch,%fs:0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088d71 <_IO_stdin_used+0x28ad>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    8088d7c <_IO_stdin_used+0x28b8>
outsb  %ds:(%esi),(%dx)
and    %ch,(%di)
inc    %ebx
and    %ch,0x70(%edi)
je     8088d86 <_IO_stdin_used+0x28c2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
jae    8088d8d <_IO_stdin_used+0x28c9>
fs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     8088d51 <_IO_stdin_used+0x288d>
imul   $0x20746f6e,0x20(%ebx),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8088da3 <_IO_stdin_used+0x28df>
and    %dh,%fs:0x69(%edi)
je     8088dac <_IO_stdin_used+0x28e8>
and    %ch,0x73696c2d
je     8088db1 <_IO_stdin_used+0x28ed>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8088db9 <_IO_stdin_used+0x28f5>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8088d81 <_IO_stdin_used+0x28bd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x706f2043
je     8088dd5 <_IO_stdin_used+0x2911>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8088ddd <_IO_stdin_used+0x2919>
and    %dh,%fs:0x69(%edi)
je     8088de6 <_IO_stdin_used+0x2922>
and    %ch,0x73696c2d
je     8088deb <_IO_stdin_used+0x2927>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8088df3 <_IO_stdin_used+0x292f>
insb   (%dx),%es:(%edi)
add    %dl,0x60080641(%eax)
inc    %edx
push   %es
or     %bl,(%eax)
inc    %ebx
push   %es
or     %ah,0x7a080642(%eax)
inc    %ecx
push   %es
or     %ah,0x4e472f64
push   %ebp
push   %ebx
jo     8088e12 <_IO_stdin_used+0x294e>
jb     8088e26 <_IO_stdin_used+0x2962>
gs
inc    %esi
imul   $0x252f7025,0x2e(%ebp,%eiz,2),%ebp
data16
add    %al,(%eax)
inc    %esi
imul   $0x67617266,0x20(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8088dee <_IO_stdin_used+0x292a>
popa
je     8088df1 <_IO_stdin_used+0x292d>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     8088dfb <_IO_stdin_used+0x2937>
popa
and    %ch,0x6f(%eax)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ah,0x69203a73
outsb  %ds:(%esi),(%dx)
jbe    8088e4d <_IO_stdin_used+0x2989>
insb   (%dx),%es:(%edi)
imul   $0x73726170,0x73(%eax,%eiz,1),%esp
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088e63 <_IO_stdin_used+0x299f>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,(%eax)
add    %ah,0x6e203a73
jne    8088e7c <_IO_stdin_used+0x29b8>
gs
jb     8088e7b <_IO_stdin_used+0x29b7>
arpl   %sp,(%eax)
outsl  %ds:(%esi),(%dx)
jbe    8088e7c <_IO_stdin_used+0x29b8>
jb     8088e7f <_IO_stdin_used+0x29bb>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8088e3d <_IO_stdin_used+0x2979>
imul   $0x72617073,0x20(%esi),%ebp
jae    8088e8b <_IO_stdin_used+0x29c7>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088e93 <_IO_stdin_used+0x29cf>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,(%eax)
add    %ah,0x6d203a73
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     8088eb0 <_IO_stdin_used+0x29ec>
gs and %dh,%fs:%gs:0x70(%ebx)
popa
jb     8088ebe <_IO_stdin_used+0x29fa>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8088eb9 <_IO_stdin_used+0x29f5>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %dl,%al
pop    %ebx
push   %es
or     %ah,%al
outsb  %ds:(%esi),(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x8066b(%eax)
add    %al,(%eax)
add    %ah,0x62(%eax)
push   %es
or     %ah,(%eax)
pusha
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%al
pop    %ebx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %esp
push   %es
or     %al,0x80668(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
pusha
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x4008065b(%eax)
ja     8088ef5 <_IO_stdin_used+0x2a31>
or     %ah,0x5c(%eax)
push   %es
or     %ah,(%eax)
push   $0x6
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x62(%eax)
push   %es
or     %ah,(%eax)
pusha
push   %es
or     %dh,0x7a(%edi,%eiz,2)
add    %dh,0x7a(%ecx,%eiz,2)
add    %dh,0x5a(%ecx,%eiz,2)
add    %dh,0x7a(%edx,%eiz,2)
add    %dh,0x7a(%edx,%eiz,2)
xor    (%eax),%al
je     8088f95 <_IO_stdin_used+0x2ad1>
xor    (%eax),%al
je     8088f8b <_IO_stdin_used+0x2ac7>
jp     8088f21 <_IO_stdin_used+0x2a5d>
insb   (%dx),%es:(%edi)
jp     8088f93 <_IO_stdin_used+0x2acf>
add    %dh,0x7a(%eax,%edi,2)
add    $0x208088f,%eax
add    %al,(%eax)
add    %dl,(%eax)
fwait
or     %cl,(%eax)
add    $0x8f,%al
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
adc    %bl,-0x70f7f7f8(%ebx)
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
adc    %bl,0x66850808(%ebx)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
in     $0x9a,%al
or     %cl,(%eax)
or     $0x8f,%al
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
in     $0x9a,%al
or     %cl,(%eax)
adc    $0x308088f,%eax
add    %al,(%eax)
add    %cl,0x10080866(%esi)
(bad)
or     %al,(%ebx)
add    %al,(%eax)
add    %cl,0x14080866(%esi)
(bad)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
mov    0x8(%esi),%fs
or     %bl,(%ecx)
(bad)
or     %al,(%ebx)
add    %al,(%eax)
add    %cl,0x1e080866(%esi)
(bad)
or     %al,(%edx)
add    %al,(%eax)
add    %dl,-0x62f7f79a(%esi)
data16
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
es
(bad)
or     %bl,0x308088f
add    %al,(%eax)
add    %ah,(%esi)
(bad)
or     %ah,(%ecx)
(bad)
or     %al,(%ebx)
add    %al,(%eax)
add    %ah,0x26080866(%edi)
(bad)
or     %al,(%edx)
add    %al,(%eax)
add    %ah,(%esi)
(bad)
or     %ah,0x308088f
add    %al,(%eax)
add    %ah,(%esi)
(bad)
or     %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808901b <_IO_stdin_used+0x2b57>
jb     8089072 <_IO_stdin_used+0x2bae>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72740073
jns    808906f <_IO_stdin_used+0x2bab>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    808900c <_IO_stdin_used+0x2b48>
sub    $0x61430064,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8089036 <_IO_stdin_used+0x2b72>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8089043 <_IO_stdin_used+0x2b7f>
fs
jne    8089096 <_IO_stdin_used+0x2bd2>
add    %al,0x68(%ebx)
imul   $0x64656964,0x20(%esp,%eiz,2),%ebp
and    %dh,0x69(%edi)
je     808909e <_IO_stdin_used+0x2bda>
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x622f0064
imul   $0x53006873,0x2f(%esi),%ebp
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
add    %ch,0x732d0069
push   $0x72617400
and    %ch,(%eax)
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
sub    %eax,%fs:(%eax)
je     80890c5 <_IO_stdin_used+0x2c01>
jb     8089086 <_IO_stdin_used+0x2bc2>
sub    %ah,0x72(%edi)
popa
outsb  %ds:(%esi),(%dx)
arpl   %bp,%fs:0x69(%eax)
insb   (%dx),%es:(%edi)
sub    %eax,%fs:(%eax)
push   %esp
inc    %ecx
push   %edx
pop    %edi
push   %esi
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %ecx
push   %edx
inc    %ebx
dec    %eax
dec    %ecx
push   %esi
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
push   %esi
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
dec    %ecx
dec    %esi
inc    %edi
pop    %edi
inc    %esi
inc    %ecx
inc    %ebx
push   %esp
dec    %edi
push   %edx
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %dh,(%eax)
and    $0x54006f6c,%eax
inc    %ecx
push   %edx
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
push   %edx
inc    %ebp
inc    %ecx
dec    %esp
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
push   %ebp
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %ecx
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %ebp
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %ebx
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
dec    %edi
push   %edx
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %ebp
inc    %ecx
dec    %edx
dec    %edi
push   %edx
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ah,0x203a756c
inc    %ebx
push   $0x20646c69
jb     80891c8 <_IO_stdin_used+0x2d04>
je     80891da <_IO_stdin_used+0x2d16>
jb     80891d5 <_IO_stdin_used+0x2d11>
gs and %dh,%fs:%gs:0x74(%ebx)
popa
je     80891e4 <_IO_stdin_used+0x2d20>
jae    8089191 <_IO_stdin_used+0x2ccd>
and    $0x41540064,%eax
push   %edx
pop    %edi
push   %ebx
push   %ebp
inc    %edx
inc    %ebx
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %esi
inc    %esp
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
inc    %ebx
dec    %eax
inc    %ebp
inc    %ebx
dec    %ebx
push   %eax
dec    %edi
dec    %ecx
dec    %esi
push   %esp
add    %al,(%eax)
add    %al,(%eax)
jne    808920c <_IO_stdin_used+0x2d48>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8089214 <_IO_stdin_used+0x2d50>
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8089223 <_IO_stdin_used+0x2d5f>
gs
jae    8089227 <_IO_stdin_used+0x2d63>
imul   $0x6f727020,0x6e(%edi),%ebp
addr16 jb 808921f <_IO_stdin_used+0x2d5b>
insl   (%dx),%es:(%edi)
add    %ah,0x203a756c
inc    %ebx
push   $0x20646c69
je     8089232 <_IO_stdin_used+0x2d6e>
jb     808923c <_IO_stdin_used+0x2d78>
imul   $0x20646574,0x61(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x25000064
insb   (%dx),%es:(%edi)
jne    8089222 <_IO_stdin_used+0x2d5e>
and    %al,0x68(%ebx)
imul   $0x6d726574,0x20(%esp,%eiz,2),%ebp
imul   $0x20646574,0x61(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
jae    8089279 <_IO_stdin_used+0x2db5>
outsb  %ds:(%esi),(%dx)
add    %ch,(%edi)
fs
gs
jbe    8089240 <_IO_stdin_used+0x2d7c>
outsb  %ds:(%esi),(%dx)
jne    8089280 <_IO_stdin_used+0x2dbc>
insb   (%dx),%es:(%edi)
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
aas
add    %ch,(%edi)
jne    8089295 <_IO_stdin_used+0x2dd1>
jb     8089253 <_IO_stdin_used+0x2d8f>
bound  %ebp,0x6e(%ecx)
das
jb     808929d <_IO_stdin_used+0x2dd9>
push   $0x73752f00
jb     8089260 <_IO_stdin_used+0x2d9c>
insb   (%dx),%es:(%edi)
imul   $0x2f726174,0x2f(%edx),%esp
jb     80892a8 <_IO_stdin_used+0x2de4>
je     808923d <_IO_stdin_used+0x2d79>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    80892a2 <_IO_stdin_used+0x2dde>
insb   (%dx),%es:(%edi)
imul   $0x72656e77,0x6f(%eax,%eiz,1),%esp
and    %ch,0x72(%edi)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    80892c3 <_IO_stdin_used+0x2dff>
and    %cl,0x44(%ecx)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     80892c1 <_IO_stdin_used+0x2dfd>
jb     808927e <_IO_stdin_used+0x2dba>
je     80892c8 <_IO_stdin_used+0x2e04>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    80892ce <_IO_stdin_used+0x2e0a>
and    %dh,0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    80892d7 <_IO_stdin_used+0x2e13>
push   $0x732520
or     (%edx),%ch
push   %esp
push   $0x202a7369
je     80892e0 <_IO_stdin_used+0x2e1c>
jb     80892a1 <_IO_stdin_used+0x2ddd>
fs
gs
popaw
jne    80892f3 <_IO_stdin_used+0x2e2f>
je     80892fc <_IO_stdin_used+0x2e38>
and    %dh,0x3a(%edi,%ebp,2)
or     (%eax),%al
sub    $0x412d0072,%eax
add    %ch,0x442d0063
add    %ch,0x742d0078
add    %ch,0x2d2d0075
je     808930d <_IO_stdin_used+0x2e49>
jae    808931e <_IO_stdin_used+0x2e5a>
sub    $0x6562616c,%eax
insb   (%dx),%es:(%edi)
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %esp
dec    %edi
dec    %esi
inc    %edi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
xor    %esi,(%eax)
xor    %al,(%eax)
push   %eax
push   %edx
dec    %ecx
push   %ebx
push   %esp
dec    %ecx
dec    %esi
inc    %ebp
pop    %edi
push   %esp
inc    %ecx
push   %edx
pop    %edi
inc    %ebx
dec    %edi
dec    %ebp
push   %eax
inc    %ecx
push   %esp
add    %ch,0x73250077
and    %ah,0x44003f73
popa
je     8089349 <_IO_stdin_used+0x2e85>
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
jo     8089356 <_IO_stdin_used+0x2e92>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     8089315 <_IO_stdin_used+0x2e51>
outsw  %ds:(%esi),(%dx)
jne    8089367 <_IO_stdin_used+0x2ea3>
add    %ah,%fs:0x49203a73
outsb  %ds:(%esi),(%dx)
jbe    8089364 <_IO_stdin_used+0x2ea0>
insb   (%dx),%es:(%edi)
imul   $0x69686372,0x61(%eax,%eiz,1),%esp
jbe    8089373 <_IO_stdin_used+0x2eaf>
and    %ah,0x6f(%esi)
jb     8089380 <_IO_stdin_used+0x2ebc>
popa
je     8089316 <_IO_stdin_used+0x2e52>
sub    $0x77656e2d,%eax
gs
jb     808934b <_IO_stdin_used+0x2e87>
insl   (%dx),%es:(%edi)
je     808938a <_IO_stdin_used+0x2ec6>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x7466612d
gs
jb     8089359 <_IO_stdin_used+0x2e95>
fs
popa
je     8089395 <_IO_stdin_used+0x2ed1>
add    %cl,0x6e(%ecx)
jbe    8089396 <_IO_stdin_used+0x2ed2>
insb   (%dx),%es:(%edi)
imul   $0x6b636f6c,0x62(%eax,%eiz,1),%esp
imul   $0x63616620,0x67(%esi),%ebp
je     80893b6 <_IO_stdin_used+0x2ef2>
jb     8089349 <_IO_stdin_used+0x2e85>
bound  %eax,0x63(%edx)
inc    %edi
imul   $0x6d,0x4d(%bp,%di),%ecx
push   %eax
push   %esp
je     80893cd <_IO_stdin_used+0x2f09>
add    %cl,0x6e(%ecx)
jbe    80893bc <_IO_stdin_used+0x2ef8>
insb   (%dx),%es:(%edi)
imul   $0x20657061,0x74(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 80893d2 <_IO_stdin_used+0x2f0e>
add    %ch,0x69746d2d
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%ebp)
jb     80893dc <_IO_stdin_used+0x2f18>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %dh,%gs:0x72(%eax,%ebp,2)
gs
jae    80893ef <_IO_stdin_used+0x2f2b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x74(%ecx,%eiz,2)
add    %cl,%gs:0x6e(%ecx)
jbe    80893f5 <_IO_stdin_used+0x2f31>
insb   (%dx),%es:(%edi)
imul   $0x73726170,0x73(%eax,%eiz,1),%esp
and    %dh,%gs:0x65(%esi)
jb     8089416 <_IO_stdin_used+0x2f52>
imul   $0x6c617620,0x6e(%edi),%ebp
jne    8089411 <_IO_stdin_used+0x2f4d>
add    %ch,0x6974612d
insl   (%dx),%es:(%edi)
gs
sub    $0x73657270,%eax
gs
jb     8089432 <_IO_stdin_used+0x2f6e>
add    %al,%gs:0x41(%ebx)
inc    %ebx
dec    %eax
inc    %ebp
inc    %esp
dec    %ecx
push   %edx
cs
push   %esp
inc    %ecx
inc    %edi
add    %cl,0x6e(%ecx)
jbe    8089430 <_IO_stdin_used+0x2f6c>
insb   (%dx),%es:(%edi)
imul   $0x2065646f,0x6d(%eax,%eiz,1),%esp
imul   $0x6e6f206e,0x65(%bp),%esi
and    %ch,0x70(%edi)
je     808944e <_IO_stdin_used+0x2f8a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
jbe    808944d <_IO_stdin_used+0x2f89>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     80893f7 <_IO_stdin_used+0x2f33>
sub    $0x7861702d,%eax
sub    $0x6974706f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
jbe    8089469 <_IO_stdin_used+0x2fa5>
insb   (%dx),%es:(%edi)
imul   $0x726f6365,0x72(%eax,%eiz,1),%esp
and    %dh,%fs:0x69(%ebx)
jp     808947c <_IO_stdin_used+0x2fb8>
add    %cl,0x6e(%ecx)
jbe    808947d <_IO_stdin_used+0x2fb9>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     8089447 <_IO_stdin_used+0x2f83>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80894a5 <_IO_stdin_used+0x2fe1>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x74730073,%eax
popa
jb     80894c4 <_IO_stdin_used+0x3000>
imul   $0x6c69662d,0x67(%esi),%ebp
add    %dh,%gs:0x61(%ebx)
insl   (%dx),%es:(%edi)
gs
sub    $0x6564726f,%eax
jb     8089464 <_IO_stdin_used+0x2fa0>
das
jne    80894da <_IO_stdin_used+0x3016>
jb     8089498 <_IO_stdin_used+0x2fd4>
jae    80894d3 <_IO_stdin_used+0x300f>
popa
jb     80894d3 <_IO_stdin_used+0x300f>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dl,%gs:0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
add    %dl,0x52(%ecx,%eax,2)
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %dl,0x50(%ecx,%eax,2)
inc    %ebp
add    %ch,0x2d2d0066
bound  %esp,0x63(%ecx)
imul   $0x0,0x70(%ebp),%esi
push   %ebx
dec    %ecx
inc    %edi
push   %ebp
push   %ebx
push   %edx
xor    %eax,(%eax)
push   %ebx
dec    %ecx
inc    %edi
push   %ebp
push   %ebx
push   %edx
xor    (%eax),%al
push   %ebx
dec    %ecx
inc    %edi
dec    %eax
push   %ebp
push   %eax
add    %dl,0x49(%ebx)
inc    %edi
dec    %ecx
dec    %esi
push   %esp
add    %dl,0x49(%ebx)
inc    %edi
push   %ecx
push   %ebp
dec    %ecx
push   %esp
add    %cl,0x6f(%edx)
push   $0x6947206e
insb   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     808953f <_IO_stdin_used+0x307b>
add    %cl,0x61(%edx)
jns    80894ff <_IO_stdin_used+0x303b>
inc    %esi
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
jae    8089555 <_IO_stdin_used+0x3091>
outsb  %ds:(%esi),(%dx)
add    %bl,0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs add %ch,%cs:(%esi)
and    (%edx),%ebp
add    %ch,(%edx)
jle    80894f9 <_IO_stdin_used+0x3035>
and    (%edx),%ebp
and    (%eax),%eax
inc    %ebx
push   %esi
push   %ebx
add    %ch,(%esi)
arpl   %si,0x73(%esi)
imul   $0x65726f,0x6e(%edi),%esp
push   %edx
inc    %ebx
push   %ebx
add    %dl,0x43(%ebx)
inc    %ebx
push   %ebx
add    %ch,(%esi)
jae    808958e <_IO_stdin_used+0x30ca>
outsb  %ds:(%esi),(%dx)
add    %ch,(%esi)
imul   $0x7469672e,0x0(%si),%esi
imul   $0x65726f,0x6e(%edi),%esp
cs
popa
jb     8089591 <_IO_stdin_used+0x30cd>
push   $0x7364692d
add    %bh,0x61(%ebx)
jb     808959b <_IO_stdin_used+0x30d7>
push   $0x523d007d
inc    %ebp
dec    %esp
inc    %ebp
inc    %ecx
push   %ebx
inc    %ebp
sub    $0x3d004449,%eax
insl   (%dx),%es:(%edi)
gs
je     80895ad <_IO_stdin_used+0x30e9>
sub    $0x61647075,%eax
je     80895b8 <_IO_stdin_used+0x30f4>
add    %bh,0x61647075
je     80895c0 <_IO_stdin_used+0x30fc>
add    %ch,(%esi)
bound  %edi,0x72(%edx)
add    %ch,(%esi)
bound  %edi,0x72(%edx)
imul   $0x65726f,0x6e(%edi),%esp
bound  %edi,%cs:0x72(%edx)
je     80895d3 <_IO_stdin_used+0x310f>
addr16 jae 8089575 <_IO_stdin_used+0x30b1>
cs
push   $0x682e0067
imul   $0x65726f,0x6e(%bx),%esp
cs
push   $0x67617467
jae    808958b <_IO_stdin_used+0x30c7>
pop    %edi
fs
popa
jb     80895f3 <_IO_stdin_used+0x312f>
jae    8089592 <_IO_stdin_used+0x30ce>
jb     80895f9 <_IO_stdin_used+0x3135>
jo     8089602 <_IO_stdin_used+0x313e>
popa
arpl   %sp,0x0(%ebp)
dec    %ebp
popa
imul   $0x7265706f,0x20(%esi),%ebp
popa
je     808960f <_IO_stdin_used+0x314b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%eax),%al
gs
js     8089626 <_IO_stdin_used+0x3162>
jb     8089615 <_IO_stdin_used+0x3151>
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x6f726620,0x73(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    8089631 <_IO_stdin_used+0x316d>
add    %ah,0x65(%edi)
je     80895d1 <_IO_stdin_used+0x310d>
arpl   %si,0x65(%edx)
popa
je     808963c <_IO_stdin_used+0x3178>
add    %ah,0x72(%ebx)
gs
popa
je     8089643 <_IO_stdin_used+0x317f>
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     8089605 <_IO_stdin_used+0x3141>
popa
jb     808964b <_IO_stdin_used+0x3187>
push   $0x657669
imul   $0x6d6f6300,%fs:0x66(%esi),%esp
jo     8089658 <_IO_stdin_used+0x3194>
jb     808965e <_IO_stdin_used+0x319a>
add    %ah,0x70(%ecx)
jo     8089663 <_IO_stdin_used+0x319f>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
outsb  %gs:(%esi),(%dx)
popa
je     8089671 <_IO_stdin_used+0x31ad>
add    %cl,0x70(%edi)
gs
jb     8089673 <_IO_stdin_used+0x31af>
je     808967d <_IO_stdin_used+0x31b9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x3a737265,%fs:0x69(%esi),%esp
add    %dh,0x70(%ebx)
popa
jb     808969a <_IO_stdin_used+0x31d6>
add    %dh,%gs:0x70(%ebx)
popa
jb     80896a1 <_IO_stdin_used+0x31dd>
gs
sub    $0x73726576,%eax
imul   $0x4a414d00,0x6e(%edi),%ebp
dec    %edi
push   %edx
pop    %ebx
cs
dec    %ebp
dec    %ecx
dec    %esi
dec    %edi
push   %edx
pop    %ebp
add    %ch,0x73(%ecx,%ebp,2)
je     80896b0 <_IO_stdin_used+0x31ec>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80896b8 <_IO_stdin_used+0x31f4>
insb   (%dx),%es:(%edi)
add    %ch,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
add    %cl,0x55(%esi)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80896d1 <_IO_stdin_used+0x320d>
sub    $0x6c696166,%eax
gs
fs
sub    $0x64616572,%eax
add    %ch,0x63(%edi)
arpl   %si,0x72(%ebp)
jb     80896e5 <_IO_stdin_used+0x3221>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
popa
jb     80896ea <_IO_stdin_used+0x3226>
push   $0x20657669
imul   $0x6b656573,0x20(%ebx),%esi
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6b656573,%eax
add    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808970c <_IO_stdin_used+0x3248>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     80896cf <_IO_stdin_used+0x320b>
jae    8089716 <_IO_stdin_used+0x3252>
imul   $0x6c,%gs:0x62(%ecx),%esp
add    %ch,%gs:0x6f(%esi)
sub    $0x63656863,%eax
imul   $0x63,0x69766564,%ebp
add    %cl,%gs:0x76(%edi)
gs
jb     8089744 <_IO_stdin_used+0x3280>
jb     8089738 <_IO_stdin_used+0x3274>
je     8089736 <_IO_stdin_used+0x3272>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8089749 <_IO_stdin_used+0x3285>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%eax),%al
jbe    8089742 <_IO_stdin_used+0x327e>
jb     8089748 <_IO_stdin_used+0x3284>
data16
jns    80896e2 <_IO_stdin_used+0x321e>
jb     8089749 <_IO_stdin_used+0x3285>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808974d <_IO_stdin_used+0x3289>
sub    $0x656c6966,%eax
jae    80896ef <_IO_stdin_used+0x322b>
imul   $0x70,0x65(%ebp),%esp
sub    $0x2d646c6f,%eax
imul   $0x7300,0x73(%ebp,%eiz,2),%bp
imul   $0x2d,0x70(%ecx),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
sub    $0x656c6966,%eax
jae    808970d <_IO_stdin_used+0x3249>
imul   $0x70,0x65(%ebp),%esp
sub    $0x6577656e,%eax
jb     8089745 <_IO_stdin_used+0x3281>
imul   $0x6f00,0x73(%ebp,%eiz,2),%bp
jbe    8089786 <_IO_stdin_used+0x32c2>
jb     808979a <_IO_stdin_used+0x32d6>
jb     808978e <_IO_stdin_used+0x32ca>
je     808978c <_IO_stdin_used+0x32c8>
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x7269662d,0x6b(%esi),%ebp
jae    80897a8 <_IO_stdin_used+0x32e4>
add    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    80897a5 <_IO_stdin_used+0x32e1>
jbe    80897a3 <_IO_stdin_used+0x32df>
sub    $0x696c6e75,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6e,(%eax),%eax
outsl  %ds:(%esi),(%dx)
sub    $0x7265766f,%eax
ja     80897c1 <_IO_stdin_used+0x32fd>
imul   $0x726964,0x2d(%ebp,%eiz,2),%esi
imul   $0x70,0x65(%ebp),%esp
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    8089793 <_IO_stdin_used+0x32cf>
jae    80897e1 <_IO_stdin_used+0x331d>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c655300,0x6b(%esi),%ebp
arpl   %si,%gs:0x6f(%eax,%eiz,1)
jne    80897ec <_IO_stdin_used+0x3328>
jo     80897ef <_IO_stdin_used+0x332b>
je     808979c <_IO_stdin_used+0x32d8>
jae    80897f2 <_IO_stdin_used+0x332e>
jb     80897e5 <_IO_stdin_used+0x3321>
popa
insl   (%dx),%es:(%edi)
cmp    (%eax),%al
je     80897f5 <_IO_stdin_used+0x3331>
sub    $0x6f647473,%eax
jne    8089801 <_IO_stdin_used+0x333d>
add    %dh,0x2d(%edi,%ebp,2)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8089804 <_IO_stdin_used+0x3340>
and    %ah,0x78(%ebp)
imul   $0x7365646f,0x63(%eax,%eiz,1),%esi
and    %ch,0x66(%edi)
and    %ah,0x68(%ebx)
imul   $0x6e006e65,0x72(%esp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
sub    $0x6f6e6769,%eax
jb     8089825 <_IO_stdin_used+0x3361>
sub    $0x6d6d6f63,%eax
popa
outsb  %ds:(%esi),(%dx)
fs
sub    $0x6f727265,%eax
jb     80897cf <_IO_stdin_used+0x330b>
dec    %eax
popa
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x67(%esi),%ebp
imul   $0x7461,0x20(%ebp,%eiz,2),%bp
je     8089856 <_IO_stdin_used+0x3392>
imul   $0x3a736574,0x75(%edx),%esp
add    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8089861 <_IO_stdin_used+0x339d>
add    %al,0x54(%ecx,%eax,2)
inc    %ebp
sub    $0x462d524f,%eax
dec    %ecx
dec    %esp
inc    %ebp
add    %ch,0x6f(%ebp)
fs add %al,%fs:%gs:0x48(%ebx)
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
push   %ebx
add    %cl,0x45(%ebp)
push   %esp
dec    %eax
dec    %edi
inc    %esp
add    %dh,0x75(%edi,%ebp,2)
arpl   %bp,0x0(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656d6173,%eax
sub    $0x656e776f,%eax
jb     8089827 <_IO_stdin_used+0x3363>
outsb  %ds:(%esi),(%dx)
jne    8089897 <_IO_stdin_used+0x33d3>
gs
jb     8089896 <_IO_stdin_used+0x33d2>
arpl   %bp,0x656e776f
jb     8089835 <_IO_stdin_used+0x3371>
jo     80898a9 <_IO_stdin_used+0x33e5>
gs
jae    808989f <_IO_stdin_used+0x33db>
jb     80898b2 <_IO_stdin_used+0x33ee>
gs
sub    $0x6d726570,%eax
imul   $0x736e6f69,0x73(%ebx),%esi
add    %ch,0x6f(%esi)
sub    $0x656d6173,%eax
sub    $0x6d726570,%eax
imul   $0x736e6f69,0x73(%ebx),%esi
add    %dh,0x72(%eax)
gs
jae    80898c8 <_IO_stdin_used+0x3404>
jb     80898db <_IO_stdin_used+0x3417>
gs
sub    $0x6564726f,%eax
jb     808986d <_IO_stdin_used+0x33a9>
jae    80898d0 <_IO_stdin_used+0x340c>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x6f(%edx)
je     80898e1 <_IO_stdin_used+0x341d>
and    %ch,0x6e612070
and    %ch,%fs:0x6f6e0073
sub    $0x616c6564,%eax
jns    80898ba <_IO_stdin_used+0x33f6>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    80898c4 <_IO_stdin_used+0x3400>
jb     80898fe <_IO_stdin_used+0x343a>
jae    808990f <_IO_stdin_used+0x344b>
outsl  %ds:(%esi),(%dx)
jb     8089903 <_IO_stdin_used+0x343f>
add    %ch,0x6f(%esi)
sub    $0x74746178,%eax
jb     808991b <_IO_stdin_used+0x3457>
add    %bh,0x61(%eax)
je     8089921 <_IO_stdin_used+0x345d>
jb     8089922 <_IO_stdin_used+0x345e>
sub    $0x6c636e69,%eax
jne    808991a <_IO_stdin_used+0x3456>
add    %cl,%gs:0x41(%ebp)
push   %ebx
dec    %ebx
add    %bh,0x61(%eax)
je     8089935 <_IO_stdin_used+0x3471>
jb     8089936 <_IO_stdin_used+0x3472>
sub    $0x6c637865,%eax
jne    808992e <_IO_stdin_used+0x346a>
add    %ch,%gs:0x6f(%esi)
sub    $0x696c6573,%eax
outsb  %ds:(%esi),(%dx)
jne    808994e <_IO_stdin_used+0x348a>
add    %al,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8089948 <_IO_stdin_used+0x3484>
and    %dl,%gs:0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %al,0x43(%ecx)
dec    %esp
jae    808990d <_IO_stdin_used+0x3449>
jae    8089964 <_IO_stdin_used+0x34a0>
jo     8089961 <_IO_stdin_used+0x349d>
outsl  %ds:(%esi),(%dx)
jb     8089968 <_IO_stdin_used+0x34a4>
add    %ch,0x6f(%esi)
sub    $0x736c6361,%eax
add    %ah,0x6f(%esi)
jb     8089964 <_IO_stdin_used+0x34a0>
gs
sub    $0x61636f6c,%eax
insb   (%dx),%es:(%edi)
add    %dh,0x6d(%edx)
je     808993a <_IO_stdin_used+0x3476>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x73(%edx)
push   $0x6d6f632d
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     808998f <_IO_stdin_used+0x34cb>
sub    $0x756c6f76,%eax
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x70(%ecx,%eiz,2)
gs
sub    $0x676e656c,%eax
je     80899a1 <_IO_stdin_used+0x34dd>
add    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
sub    $0x69726373,%eax
jo     80899b9 <_IO_stdin_used+0x34f5>
add    %ch,0x65(%esi)
ja     8089977 <_IO_stdin_used+0x34b3>
jbe    80899bb <_IO_stdin_used+0x34f7>
insb   (%dx),%es:(%edi)
jne    80899bc <_IO_stdin_used+0x34f8>
gs
sub    $0x69726373,%eax
jo     80899cb <_IO_stdin_used+0x3507>
add    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
add    %al,0x76(%ebp,%eiz,2)
imul   $0x6f6c6220,0x65(%ebx),%esp
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
cmp    (%bx,%si),%al
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x67,0x6e(%ecx),%ebp
sub    $0x74636166,%eax
outsl  %ds:(%esi),(%dx)
jb     8089984 <_IO_stdin_used+0x34c0>
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
push   %ebx
add    %al,0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
push   %ebx
and    %bh,0x20(%eax)
xor    $0x62203231,%eax
jns    8089a0f <_IO_stdin_used+0x354b>
gs
jae    80899be <_IO_stdin_used+0x34fa>
jo     8089a05 <_IO_stdin_used+0x3541>
jb     80899c2 <_IO_stdin_used+0x34fe>
jb     8089a09 <_IO_stdin_used+0x3545>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x65(%edx)
arpl   %bp,0x72(%edi)
fs
sub    $0x657a6973,%eax
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8089a20 <_IO_stdin_used+0x355c>
sub    $0x6f72657a,%eax
jae    80899c2 <_IO_stdin_used+0x34fe>
jb     8089a29 <_IO_stdin_used+0x3565>
popa
fs
sub    $0x6c6c7566,%eax
sub    $0x6f636572,%eax
jb     8089a36 <_IO_stdin_used+0x3572>
jae    80899d4 <_IO_stdin_used+0x3510>
inc    %ecx
jb     8089a3a <_IO_stdin_used+0x3576>
push   $0x20657669
outsw  %ds:(%esi),(%dx)
jb     8089a4d <_IO_stdin_used+0x3589>
popa
je     8089a03 <_IO_stdin_used+0x353f>
jae    8089a4a <_IO_stdin_used+0x3586>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%al
and    %ah,(%eax)
jbe    8089a29 <_IO_stdin_used+0x3565>
add    %ch,0x6c(%edi)
and    %dl,%fs:0x37(%esi)
and    %dh,0x72(%ecx,%eiz,2)
and    %ah,0x6f(%esi)
jb     8089a6f <_IO_stdin_used+0x35ab>
popa
je     8089a05 <_IO_stdin_used+0x3541>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsb  %fs:(%si),(%dx)
jne    8089a0e <_IO_stdin_used+0x354a>
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%esi)
jb     8089a83 <_IO_stdin_used+0x35bf>
popa
je     8089a39 <_IO_stdin_used+0x3575>
popa
jae    8089a3c <_IO_stdin_used+0x3578>
jo     8089a83 <_IO_stdin_used+0x35bf>
jb     8089a40 <_IO_stdin_used+0x357c>
je     8089a83 <_IO_stdin_used+0x35bf>
jb     8089a44 <_IO_stdin_used+0x3580>
cmp    $0x3d,%al
and    %dh,(%ecx)
xor    %esi,%cs:(%edx)
add    %ah,(%eax)
and    %ah,0x6e(%edi)
jne    8089a32 <_IO_stdin_used+0x356e>
inc    %edi
dec    %esi
push   %ebp
and    %dh,0x72(%ecx,%eiz,2)
and    %dh,(%ecx)
xor    %esi,%cs:(%ebx)
js,pn  8089a61 <_IO_stdin_used+0x359d>
outsw  %ds:(%esi),(%dx)
jb     8089ab2 <_IO_stdin_used+0x35ee>
popa
je     8089a48 <_IO_stdin_used+0x3584>
and    %ah,(%eax)
jne    8089abf <_IO_stdin_used+0x35fb>
je     8089aaf <_IO_stdin_used+0x35eb>
jb     8089a50 <_IO_stdin_used+0x358c>
and    %ah,(%eax)
jo     8089ab5 <_IO_stdin_used+0x35f1>
js     8089a56 <_IO_stdin_used+0x3592>
and    %ah,(%eax)
jo     8089ac9 <_IO_stdin_used+0x3605>
jae    8089ac5 <_IO_stdin_used+0x3601>
js     8089a5e <_IO_stdin_used+0x359a>
jae    8089ac1 <_IO_stdin_used+0x35fd>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%eax)
js     8089a6a <_IO_stdin_used+0x35a6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
sub    $0x68637261,%eax
imul   $0x6d617300,0x65(%esi),%esi
and    %ah,%gs:0x73(%ecx)
and    %ch,0x726f662d
insl   (%dx),%es:(%edi)
popa
je     8089ac4 <_IO_stdin_used+0x3600>
jbe    8089ac0 <_IO_stdin_used+0x35fc>
add    %dh,0x6f(%eax)
jb     8089b02 <_IO_stdin_used+0x363e>
popa
bound  %ebp,0x6c(%ecx)
imul   $0x656d6173,0x0(%ecx,%edi,2),%esi
and    %ah,0x73(%ecx)
and    %ch,0x726f662d
insl   (%dx),%es:(%edi)
popa
je     8089ae4 <_IO_stdin_used+0x3620>
jo     8089b18 <_IO_stdin_used+0x3654>
jae    8089b14 <_IO_stdin_used+0x3650>
js     8089aad <_IO_stdin_used+0x35e9>
arpl   %bp,0x6e(%edi)
je     8089b24 <_IO_stdin_used+0x3660>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
js     8089ad9 <_IO_stdin_used+0x3615>
imul   $0x77,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     8089b24 <_IO_stdin_used+0x3660>
jae    8089ac2 <_IO_stdin_used+0x35fe>
push   %esp
inc    %ebp
pop    %eax
push   %esp
add    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8089b3e <_IO_stdin_used+0x367a>
gs
jae    8089b42 <_IO_stdin_used+0x367e>
imul   $0x74706f20,0x6e(%edi),%ebp
imul   $0x6e003a73,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
sub    $0x6f747561,%eax
sub    $0x706d6f63,%eax
jb     8089b4f <_IO_stdin_used+0x368b>
jae    8089b5f <_IO_stdin_used+0x369b>
add    %dh,0x73(%ebp)
gs
sub    $0x706d6f63,%eax
jb     8089b5c <_IO_stdin_used+0x3698>
jae    8089b6c <_IO_stdin_used+0x36a8>
sub    $0x676f7270,%eax
jb     8089b61 <_IO_stdin_used+0x369d>
insl   (%dx),%es:(%edi)
add    %dl,0x52(%eax)
dec    %edi
inc    %edi
add    %ah,0x75(%edi)
outsb  %ds:(%esi),(%dx)
jp     8089b75 <_IO_stdin_used+0x36b1>
jo     8089b0e <_IO_stdin_used+0x364a>
jne    8089b7e <_IO_stdin_used+0x36ba>
addr16 jp 8089b7c <_IO_stdin_used+0x36b8>
jo     8089b15 <_IO_stdin_used+0x3651>
jne    8089b85 <_IO_stdin_used+0x36c1>
arpl   %bp,0x6d(%edi)
jo     8089b8e <_IO_stdin_used+0x36ca>
gs
jae    8089b92 <_IO_stdin_used+0x36ce>
add    %cl,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%al
popa
fs
fs
sub    $0x656c6966,%eax
add    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%si)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8089b73 <_IO_stdin_used+0x36af>
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8089b8a <_IO_stdin_used+0x36c6>
data16
jb     8089bcf <_IO_stdin_used+0x370b>
insl   (%dx),%es:(%edi)
add    %ch,0x6f(%esi)
sub    $0x6c6c756e,%eax
add    %ch,0x6f(%esi)
sub    $0x75716e75,%eax
outsl  %ds:(%esi),(%dx)
je     8089bd9 <_IO_stdin_used+0x3715>
add    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x6d6f7266,%eax
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x68636163,%eax
gs
jae    8089b99 <_IO_stdin_used+0x36d5>
gs
js     8089bff <_IO_stdin_used+0x373b>
insb   (%dx),%es:(%edi)
jne    8089c03 <_IO_stdin_used+0x373f>
gs
sub    $0x68636163,%eax
gs
jae    8089bd5 <_IO_stdin_used+0x3711>
jne    8089c18 <_IO_stdin_used+0x3754>
fs
gs
jb     8089bae <_IO_stdin_used+0x36ea>
gs
js     8089c14 <_IO_stdin_used+0x3750>
insb   (%dx),%es:(%edi)
jne    8089c18 <_IO_stdin_used+0x3754>
gs
sub    $0x68636163,%eax
gs
jae    8089bea <_IO_stdin_used+0x3726>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x676174,%eax
gs
js     8089c33 <_IO_stdin_used+0x376f>
insb   (%dx),%es:(%edi)
jne    8089c37 <_IO_stdin_used+0x3773>
gs
sub    $0x2d676174,%eax
jne    8089c49 <_IO_stdin_used+0x3785>
fs
gs
jb     8089bdf <_IO_stdin_used+0x371b>
gs
js     8089c45 <_IO_stdin_used+0x3781>
insb   (%dx),%es:(%edi)
jne    8089c49 <_IO_stdin_used+0x3785>
gs
sub    $0x2d676174,%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x736376,%eax
gs
js     8089c61 <_IO_stdin_used+0x379d>
insb   (%dx),%es:(%edi)
jne    8089c65 <_IO_stdin_used+0x37a1>
gs
sub    $0x6b636162,%eax
jne    8089c79 <_IO_stdin_used+0x37b5>
jae    8089c0b <_IO_stdin_used+0x3747>
gs
js     8089c71 <_IO_stdin_used+0x37ad>
insb   (%dx),%es:(%edi)
jne    8089c75 <_IO_stdin_used+0x37b1>
and    %ah,%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8089c3a <_IO_stdin_used+0x3776>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x2d6f6e00,0x73(%ebp,%eiz,2),%ebp
jb     8089c93 <_IO_stdin_used+0x37cf>
arpl   %si,0x72(%ebp)
jae    8089c9c <_IO_stdin_used+0x37d8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6e(%edi)
gs
sub    $0x656c6966,%eax
sub    $0x74737973,%eax
gs
insl   (%dx),%es:(%edi)
add    %ah,0x62(%ecx)
jae    8089cb9 <_IO_stdin_used+0x37f5>
insb   (%dx),%es:(%edi)
jne    8089cc1 <_IO_stdin_used+0x37fd>
gs
sub    $0x656d616e,%eax
jae    8089c55 <_IO_stdin_used+0x3791>
push   $0x2d647261
fs
gs
jb     8089cc3 <_IO_stdin_used+0x37ff>
data16
gs
jb     8089cc7 <_IO_stdin_used+0x3803>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
dec    %ebp
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
sub    $0x454d414e,%eax
add    %al,0x54(%ecx,%eax,2)
inc    %ebp
add    %dh,0x75(%ebx)
data32 imul $0x5453,0x0(%eax),%di
push   %edx
dec    %ecx
dec    %esi
inc    %edi
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    8089cfb <_IO_stdin_used+0x3837>
outsl  %ds:(%esi),(%dx)
jb     8089d05 <_IO_stdin_used+0x3841>
popa
je     8089d04 <_IO_stdin_used+0x3840>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8089cd9 <_IO_stdin_used+0x3815>
add    %dh,0x74(%ebx)
jb     8089d0d <_IO_stdin_used+0x3849>
jo     8089cd3 <_IO_stdin_used+0x380f>
arpl   %bp,0x6d(%edi)
jo     8089d1a <_IO_stdin_used+0x3856>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     8089d23 <_IO_stdin_used+0x385f>
add    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    8089d1d <_IO_stdin_used+0x3859>
outsl  %ds:(%esi),(%dx)
jb     8089d27 <_IO_stdin_used+0x3863>
add    %al,0x58(%ebp)
push   %eax
push   %edx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
add    %bh,0x66(%eax)
outsl  %ds:(%esi),(%dx)
jb     8089d38 <_IO_stdin_used+0x3874>
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8089d37 <_IO_stdin_used+0x3873>
and    %ah,0x61(%ebx)
jae    8089d3c <_IO_stdin_used+0x3878>
add    %ch,0x6f(%esi)
sub    $0x68636e61,%eax
outsl  %ds:(%esi),(%dx)
jb     8089d47 <_IO_stdin_used+0x3883>
add    %ch,%fs:0x6f(%esi)
sub    $0x6f6e6769,%eax
jb     8089d52 <_IO_stdin_used+0x388e>
sub    $0x65736163,%eax
add    %ch,0x6f(%esi)
sub    $0x646c6977,%eax
arpl   %sp,0x72(%ecx)
fs
jae    8089d00 <_IO_stdin_used+0x383c>
jbe    8089d67 <_IO_stdin_used+0x38a3>
jb     8089d66 <_IO_stdin_used+0x38a2>
popa
je     8089d70 <_IO_stdin_used+0x38ac>
insl   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
jb     8089d76 <_IO_stdin_used+0x38b2>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%di)
je     8089d77 <_IO_stdin_used+0x38b3>
push   $0x676e69
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x646c6977,%eax
arpl   %sp,0x72(%ecx)
fs
jae    8089d53 <_IO_stdin_used+0x388f>
insl   (%dx),%es:(%edi)
popa
je     8089d8d <_IO_stdin_used+0x38c9>
push   $0x616c732d
jae    8089d99 <_IO_stdin_used+0x38d5>
add    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
arpl   %sp,%fs:0x72(%ecx)
fs
jae    8089d5c <_IO_stdin_used+0x3898>
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8089d63 <_IO_stdin_used+0x389f>
insl   (%dx),%es:(%edi)
popa
je     8089daa <_IO_stdin_used+0x38e6>
push   $0x272f2720
add    %cl,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8089dc0 <_IO_stdin_used+0x38fc>
popa
je     8089dbf <_IO_stdin_used+0x38fb>
jbe    8089dbd <_IO_stdin_used+0x38f9>
and    %ch,0x75(%edi)
je     8089dcd <_IO_stdin_used+0x3909>
jne    8089dd3 <_IO_stdin_used+0x390f>
cmp    (%eax),%al
jbe    8089dc8 <_IO_stdin_used+0x3904>
jb     8089dc7 <_IO_stdin_used+0x3903>
outsl  %ds:(%esi),(%dx)
jae    8089dcd <_IO_stdin_used+0x3909>
add    %cl,0x45(%ebx)
pop    %ecx
push   %edi
dec    %edi
push   %edx
inc    %esp
add    %dh,0x61(%edi)
jb     8089de3 <_IO_stdin_used+0x391f>
imul   $0x6e6f6320,0x67(%esi),%ebp
je     8089df0 <_IO_stdin_used+0x392c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x68(%ebx)
arpl   %bp,%gs:0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x65686300,0x74(%esi),%ebp
arpl   %bp,0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x7463612d,0x74(%esi),%ebp
imul   $0x54434100,0x6e(%edi),%ebp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,0x68(%ebx)
arpl   %bp,%gs:0x2d(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x6f740073,0x6b(%esi),%ebp
je     8089e16 <_IO_stdin_used+0x3952>
insb   (%dx),%es:(%edi)
jae    8089db8 <_IO_stdin_used+0x38f4>
push   %ebx
dec    %ecx
inc    %edi
dec    %esi
inc    %ecx
dec    %esp
add    %dh,0x74(%ebp)
arpl   %ax,(%eax)
data16
jne    8089e32 <_IO_stdin_used+0x396e>
insb   (%dx),%es:(%edi)
sub    $0x656d6974,%eax
add    %ch,0x6e(%ecx)
fs
gs
js     8089e00 <_IO_stdin_used+0x393c>
imul   $0x6573,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%esi)
jb     8089e43 <_IO_stdin_used+0x397f>
outsl  %ds:(%esi),(%dx)
jae    8089e49 <_IO_stdin_used+0x3985>
and    %ch,0x75(%edi)
je     8089e59 <_IO_stdin_used+0x3995>
jne    8089e5f <_IO_stdin_used+0x399b>
and    %dh,0x20(%edi,%ebp,2)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2d(%ebx)
outsb  %ds:(%esi),(%dx)
jne    8089e6a <_IO_stdin_used+0x39a6>
bound  %esp,0x72(%ebp)
add    %ch,0x6e(%ecx)
je     8089e6a <_IO_stdin_used+0x39a6>
jb     8089e68 <_IO_stdin_used+0x39a4>
arpl   %si,0x76(%ecx,%ebp,2)
add    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x7461,0x6d(%edx),%si
imul   $0x6f687300,0x6e(%edi),%ebp
ja     8089e4c <_IO_stdin_used+0x3988>
fs
gs
popaw
jne    8089e91 <_IO_stdin_used+0x39cd>
je     8089e9a <_IO_stdin_used+0x39d6>
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8089e4d <_IO_stdin_used+0x3989>
je     8089e90 <_IO_stdin_used+0x39cc>
jb     8089e51 <_IO_stdin_used+0x398d>
fs
gs
popaw
jne    8089ea3 <_IO_stdin_used+0x39df>
je     8089eac <_IO_stdin_used+0x39e8>
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8089e6c <_IO_stdin_used+0x39a8>
jae    8089eaf <_IO_stdin_used+0x39eb>
popa
jo     8089eb7 <_IO_stdin_used+0x39f3>
push   $0x662d746f
imul   $0x61722d64,0x6c(%ebp),%esp
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    8089e55 <_IO_stdin_used+0x3991>
jae    8089ebf <_IO_stdin_used+0x39fb>
outsl  %ds:(%esi),(%dx)
ja     8089e87 <_IO_stdin_used+0x39c3>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x69642d64,0x65(%esp,%esi,2),%esi
jb     8089ed9 <_IO_stdin_used+0x3a15>
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8089e99 <_IO_stdin_used+0x39d5>
je     8089ee0 <_IO_stdin_used+0x3a1c>
popa
outsb  %ds:(%esi),(%dx)
jae    8089ed8 <_IO_stdin_used+0x3a14>
outsl  %ds:(%esi),(%dx)
jb     8089ee2 <_IO_stdin_used+0x3a1e>
gs
fs
sub    $0x656d616e,%eax
jae    8089e7e <_IO_stdin_used+0x39ba>
jae    8089ee8 <_IO_stdin_used+0x3a24>
outsl  %ds:(%esi),(%dx)
ja     8089eb0 <_IO_stdin_used+0x39ec>
jae    8089ef9 <_IO_stdin_used+0x3a35>
outsl  %ds:(%esi),(%dx)
jb     8089eed <_IO_stdin_used+0x3a29>
fs
sub    $0x656d616e,%eax
jae    8089e90 <_IO_stdin_used+0x39cc>
jno    8089f07 <_IO_stdin_used+0x3a43>
outsl  %ds:(%esi),(%dx)
je     8089efe <_IO_stdin_used+0x3a3a>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x6c797473,%eax
add    %dl,%gs:0x54(%ebx)
pop    %ecx
dec    %esp
inc    %ebp
add    %ch,0x6f(%esi)
sub    $0x746f7571,%eax
gs
sub    $0x72616863,%eax
jae    8089eb3 <_IO_stdin_used+0x39ef>
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8089f19 <_IO_stdin_used+0x3a55>
je     8089f23 <_IO_stdin_used+0x3a5f>
bound  %ebp,0x6c(%ecx)
imul   $0x6974706f,0x20(%ecx,%edi,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8089f03 <_IO_stdin_used+0x3a3f>
add    %cl,0x74(%edi)
push   $0x6f207265
jo     8089f47 <_IO_stdin_used+0x3a83>
imul   $0x72003a73,0x6e(%edi),%ebp
gs
jae    8089f51 <_IO_stdin_used+0x3a8d>
jb     8089f48 <_IO_stdin_used+0x3a84>
arpl   %si,0x3c(%eax,%eax,1)
bound  %esi,0x67(%ebp)
sub    $0x40726174,%eax
outsb  %ds:(%si),(%dx)
jne    8089f1d <_IO_stdin_used+0x3a59>
outsl  %ds:(%esi),(%dx)
jb     8089f59 <_IO_stdin_used+0x3a95>
add    %dh,%ds:0x72(%ecx,%eiz,2)
and    %ch,(%eax)
inc    %edi
dec    %esi
push   %ebp
and    %dh,0x72(%ecx,%eiz,2)
sub    %esp,(%eax)
xor    %ebp,(%esi)
xor    (%edi),%dh
xor    %eax,%cs:(%eax)
add    %al,(%eax)
add    %ch,0x726f662d
insl   (%dx),%es:(%edi)
popa
je     8089f52 <_IO_stdin_used+0x3a8e>
and    $0x662d2073,%eax
and    $0x622d2073,%eax
and    $0x2d2d2064,%eax
jno    8089f9b <_IO_stdin_used+0x3ad7>
outsl  %ds:(%esi),(%dx)
je     8089f92 <_IO_stdin_used+0x3ace>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x6c797473,%eax
gs
cmp    $0x2d207325,%eax
sub    $0x2d746d72,%eax
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
cmp    $0x2d207325,%eax
sub    $0x2d687372,%eax
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
cmp    $0x7325,%eax
push   %esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     8089fda <_IO_stdin_used+0x3b16>
and    %ah,0x6f(%esi)
jb     8089f8c <_IO_stdin_used+0x3ac8>
je     8089fd6 <_IO_stdin_used+0x3b12>
and    %ch,%gs:0x6f75712d
je     8089fe0 <_IO_stdin_used+0x3b1c>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x6c797473,%eax
and    %ch,%gs:0x70(%edi)
je     8089fed <_IO_stdin_used+0x3b29>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
dec    %edi
jo     808a003 <_IO_stdin_used+0x3b3f>
imul   $0x2d272073,0x6e(%edi),%ebp
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edi)
sub    $0x20277325,%eax
bound  %ebp,0x74(%edi)
push   $0x6e617720
je     8089fce <_IO_stdin_used+0x3b0a>
jae    808a024 <_IO_stdin_used+0x3b60>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     808a01a <_IO_stdin_used+0x3b56>
and    %ch,0x6e(%ecx)
jo     808a030 <_IO_stdin_used+0x3b6c>
je     8089fbd <_IO_stdin_used+0x3af9>
add    %al,(%eax)
add    %dl,0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
and    $0x6f662073,%eax
jb     8089ff4 <_IO_stdin_used+0x3b30>
jne    808a044 <_IO_stdin_used+0x3b80>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx,%eiz,2)
and    %ah,%gs:0x6f(%esi)
jb     808a052 <_IO_stdin_used+0x3b8e>
popa
je     808a008 <_IO_stdin_used+0x3b44>
and    $0x59000073,%eax
outsl  %ds:(%esi),(%dx)
jne    808a010 <_IO_stdin_used+0x3b4c>
insl   (%dx),%es:(%edi)
popa
jns    808a014 <_IO_stdin_used+0x3b50>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a018 <_IO_stdin_used+0x3b54>
jae    808a06a <_IO_stdin_used+0x3ba6>
arpl   %bp,%gs:0x66(%ecx)
jns    808a020 <_IO_stdin_used+0x3b5c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     808a069 <_IO_stdin_used+0x3ba5>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ah,%gs:(%edi)
sub    $0x74646341,%eax
jb     808a08b <_IO_stdin_used+0x3bc7>
js     808a03f <_IO_stdin_used+0x3b7b>
sub    $0x20,%al
daa
sub    $0x6c65642d,%eax
gs
je     808a088 <_IO_stdin_used+0x3bc4>
daa
and    %ch,0x72(%edi)
and    %ah,(%eax)
daa
sub    $0x7365742d,%eax
je     808a05e <_IO_stdin_used+0x3b9a>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
daa
and    %ch,0x70(%edi)
je     808a0a5 <_IO_stdin_used+0x3be1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
arpl   %bp,0x6d(%edi)
jo     808a0c3 <_IO_stdin_used+0x3bff>
gs
jae    808a0c7 <_IO_stdin_used+0x3c03>
imul   $0x74706f20,0x6e(%edi),%ebp
imul   $0x6e490073,0x6e(%edi),%ebp
jbe    808a0c5 <_IO_stdin_used+0x3c01>
insb   (%dx),%es:(%edi)
imul   $0x6572636e,0x69(%eax,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808a0d3 <_IO_stdin_used+0x3c0f>
insb   (%dx),%es:(%edi)
and    %ch,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    808a0e4 <_IO_stdin_used+0x3c20>
add    %ch,0x6568632d
arpl   %bp,0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x6c617620,0x74(%esi),%ebp
jne    808a0f7 <_IO_stdin_used+0x3c33>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     808a0ba <_IO_stdin_used+0x3bf6>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     808a106 <_IO_stdin_used+0x3c42>
addr16
gs
jb     808a0a5 <_IO_stdin_used+0x3be1>
add    %al,(%eax)
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     808a11e <_IO_stdin_used+0x3c5a>
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%bp,%di)
jns    808a128 <_IO_stdin_used+0x3c64>
and    %ah,%gs:(%edi)
and    $0x202e2773,%eax
push   %esp
jb     808a140 <_IO_stdin_used+0x3c7c>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
jno    808a145 <_IO_stdin_used+0x3c81>
outsl  %ds:(%esi),(%dx)
je     808a13c <_IO_stdin_used+0x3c78>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x6c797473,%eax
gs
cmp    $0x706c6568,%eax
daa
and    %dh,0x20(%edi,%ebp,2)
addr16
gs
je     808a109 <_IO_stdin_used+0x3c45>
popa
and    %ch,0x73(%ecx,%ebp,2)
je     808a11e <_IO_stdin_used+0x3c5a>
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   $0x2d2d2065
jo     808a16e <_IO_stdin_used+0x3caa>
gs
jae    808a164 <_IO_stdin_used+0x3ca0>
jb     808a177 <_IO_stdin_used+0x3cb3>
and    %ch,%gs:0x70(%edi)
je     808a170 <_IO_stdin_used+0x3cac>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     808a177 <_IO_stdin_used+0x3cb3>
arpl   %sp,0x74(%ecx)
gs
fs
sub    $0x20,%al
jne    808a18e <_IO_stdin_used+0x3cca>
and    %ch,%gs:0x6572702d
jae    808a189 <_IO_stdin_used+0x3cc5>
jb     808a19c <_IO_stdin_used+0x3cd8>
gs
sub    $0x6d726570,%eax
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x6572702d
jae    808a1a0 <_IO_stdin_used+0x3cdc>
jb     808a1b3 <_IO_stdin_used+0x3cef>
gs
sub    $0x6564726f,%eax
jb     808a165 <_IO_stdin_used+0x3ca1>
imul   $0x64616574,0x73(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
push   %edx
arpl   %bp,%gs:0x72(%edi)
and    %dh,%fs:0x69(%ebx)
jp     808a1c0 <_IO_stdin_used+0x3cfc>
and    %ch,0x75(%ebp)
jae    808a1d4 <_IO_stdin_used+0x3d10>
and    %ah,0x65(%edx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
jne    808a1d5 <_IO_stdin_used+0x3d11>
je     808a1d4 <_IO_stdin_used+0x3d10>
jo     808a1d9 <_IO_stdin_used+0x3d15>
and    %ch,%gs:0x66(%edi)
and    %ah,0x2e64
add    %cl,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a19d <_IO_stdin_used+0x3cd9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x2d6f742d
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x70(%edi)
je     808a1fb <_IO_stdin_used+0x3d37>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808a200 <_IO_stdin_used+0x3d3c>
add    %al,%fs:(%eax)
add    %al,(%eax)
dec    %edi
jo     808a217 <_IO_stdin_used+0x3d53>
imul   $0x2d272073,0x6e(%edi),%ebp
pop    %ebx
xor    %ch,0x6c5b5d37
insl   (%dx),%es:(%edi)
push   $0x6e20275d
outsl  %ds:(%esi),(%dx)
je     808a1da <_IO_stdin_used+0x3d16>
jae    808a231 <_IO_stdin_used+0x3d6d>
jo     808a22e <_IO_stdin_used+0x3d6a>
outsl  %ds:(%esi),(%dx)
jb     808a235 <_IO_stdin_used+0x3d71>
gs and %ah,%fs:%gs:0x79(%edx)
and    %ch,(%edx)
je     808a232 <_IO_stdin_used+0x3d6e>
imul   $0x72617420,0x2a(%ebx),%esi
add    %al,(%eax)
add    %cl,0x6c(%edi)
and    %ch,%fs:0x70(%edi)
je     808a245 <_IO_stdin_used+0x3d81>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x72202763,%eax
gs
jno    808a25d <_IO_stdin_used+0x3d99>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 808a262 <_IO_stdin_used+0x3d9e>
outsb  %gs:(%esi),(%dx)
je     808a227 <_IO_stdin_used+0x3d63>
add    %al,(%eax)
add    %al,0x4e(%edi)
push   %ebp
and    %ah,0x65(%esi)
popa
je     808a27a <_IO_stdin_used+0x3db6>
jb     808a26c <_IO_stdin_used+0x3da8>
jae    808a229 <_IO_stdin_used+0x3d65>
ja     808a26c <_IO_stdin_used+0x3da8>
outsb  %ds:(%esi),(%dx)
je     808a273 <_IO_stdin_used+0x3daf>
and    %ch,%fs:0x6e(%edi)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6d(%edi)
jo     808a27b <_IO_stdin_used+0x3db7>
je     808a285 <_IO_stdin_used+0x3dc1>
bound  %ebp,0x20(%ebp,%eiz,2)
popa
jb     808a286 <_IO_stdin_used+0x3dc2>
push   $0x20657669
outsw  %ds:(%esi),(%dx)
jb     808a299 <_IO_stdin_used+0x3dd5>
popa
je     808a22f <_IO_stdin_used+0x3d6b>
add    %ch,0x63636f2d
jne    808a2a9 <_IO_stdin_used+0x3de5>
jb     808a29e <_IO_stdin_used+0x3dda>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
imul   $0x6e61656d,0x20(%ebx),%esi
imul   $0x7373656c,0x67(%esi),%ebp
and    %dh,0x69(%edi)
je     808a2b8 <_IO_stdin_used+0x3df4>
outsl  %ds:(%esi),(%dx)
jne    808a2c7 <_IO_stdin_used+0x3e03>
and    %ah,0x20(%ecx)
imul   $0x696c,0x20(%ebp,%eiz,2),%bp
jae    808a2d3 <_IO_stdin_used+0x3e0f>
add    %ch,0x63636f2d
jne    808a2d9 <_IO_stdin_used+0x3e15>
jb     808a2ce <_IO_stdin_used+0x3e0a>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a294 <_IO_stdin_used+0x3dd0>
bound  %esp,0x20(%ebp)
jne    808a2ec <_IO_stdin_used+0x3e28>
gs and %dh,%fs:%gs:0x69(%edi)
je     808a2e8 <_IO_stdin_used+0x3e24>
and    %ah,0x754d0073
insb   (%dx),%es:(%edi)
je     808a2f2 <_IO_stdin_used+0x3e2e>
jo     808a2f7 <_IO_stdin_used+0x3e33>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a2f9 <_IO_stdin_used+0x3e35>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808a2bb <_IO_stdin_used+0x3df7>
jb     808a302 <_IO_stdin_used+0x3e3e>
jno    808a314 <_IO_stdin_used+0x3e50>
imul   $0x4d2d2720,0x65(%edx),%esi
daa
and    %ch,0x70(%edi)
je     808a315 <_IO_stdin_used+0x3e51>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a2d7 <_IO_stdin_used+0x3e13>
arpl   %bp,0x6d(%edi)
bound  %ebp,0x6e(%ecx)
and    %ch,%gs:0x73696c2d
je     808a32b <_IO_stdin_used+0x3e67>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808a333 <_IO_stdin_used+0x3e6f>
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
je     808a340 <_IO_stdin_used+0x3e7c>
and    %ch,0x77656e2d
gs
jb     808a2e1 <_IO_stdin_used+0x3e1d>
add    %al,(%eax)
add    %ch,0x76656c2d
gs
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ch,0x65(%ebp)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x7373656c,0x67(%esi),%ebp
and    %dh,0x69(%edi)
je     808a367 <_IO_stdin_used+0x3ea3>
outsl  %ds:(%esi),(%dx)
jne    808a376 <_IO_stdin_used+0x3eb2>
and    %ch,0x73696c2d
je     808a36f <_IO_stdin_used+0x3eab>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808a377 <_IO_stdin_used+0x3eb3>
insb   (%dx),%es:(%edi)
add    %ah,0x56203a73
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    808a38e <_IO_stdin_used+0x3eca>
and    %ch,%gs:0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
insb   (%dx),%es:(%edi)
imul   $0x73692074,0x69(%ebp),%ebp
and    %ah,0x6220756c
jns    808a3ba <_IO_stdin_used+0x3ef6>
gs
jae    808a372 <_IO_stdin_used+0x3eae>
add    %al,(%eax)
add    %ah,0x56203a73
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    808a3c2 <_IO_stdin_used+0x3efe>
and    %ch,%gs:0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
insb   (%dx),%es:(%edi)
imul   $0x73692074,0x69(%ebp),%ebp
and    %ah,0x6220756c
jns    808a3ee <_IO_stdin_used+0x3f2a>
sub    %eax,%gs:(%eax)
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a3a7 <_IO_stdin_used+0x3ee3>
jbe    808a3ee <_IO_stdin_used+0x3f2a>
jb     808a3f4 <_IO_stdin_used+0x3f30>
data16
jns    808a3ae <_IO_stdin_used+0x3eea>
insl   (%dx),%es:(%edi)
jne    808a3fd <_IO_stdin_used+0x3f39>
je     808a3fc <_IO_stdin_used+0x3f38>
sub    $0x756c6f76,%eax
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a407 <_IO_stdin_used+0x3f43>
jae    808a3a4 <_IO_stdin_used+0x3ee0>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a3cb <_IO_stdin_used+0x3f07>
jbe    808a412 <_IO_stdin_used+0x3f4e>
jb     808a418 <_IO_stdin_used+0x3f54>
data16
jns    808a3d2 <_IO_stdin_used+0x3f0e>
arpl   %bp,0x6d(%edi)
jo     808a429 <_IO_stdin_used+0x3f65>
gs
jae    808a42d <_IO_stdin_used+0x3f69>
gs and %ah,%fs:%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a429 <_IO_stdin_used+0x3f65>
jae    808a3c6 <_IO_stdin_used+0x3f02>
add    %al,(%eax)
sub    $0x7265762d,%eax
imul   $0x6e616320,0x79(%esi),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a3f8 <_IO_stdin_used+0x3f34>
bound  %esp,0x20(%ebp)
jne    808a450 <_IO_stdin_used+0x3f8c>
gs and %dh,%fs:%gs:0x69(%edi)
je     808a44c <_IO_stdin_used+0x3f88>
and    %ah,0x61430073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a40f <_IO_stdin_used+0x3f4b>
jne    808a464 <_IO_stdin_used+0x3fa0>
and    %ch,%gs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     808a461 <_IO_stdin_used+0x3f9d>
sub    $0x756c6f76,%eax
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     808a477 <_IO_stdin_used+0x3fb3>
gs
jae    808a47b <_IO_stdin_used+0x3fb7>
gs and %ah,%fs:%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a477 <_IO_stdin_used+0x3fb3>
jae    808a414 <_IO_stdin_used+0x3f50>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a43b <_IO_stdin_used+0x3f77>
arpl   %bp,0x6e(%edi)
arpl   %sp,0x74(%ecx)
outsb  %gs:(%esi),(%dx)
popa
je     808a48b <_IO_stdin_used+0x3fc7>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     808a49e <_IO_stdin_used+0x3fda>
gs
jae    808a4a2 <_IO_stdin_used+0x3fde>
gs and %ah,%fs:%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a49e <_IO_stdin_used+0x3fda>
jae    808a43b <_IO_stdin_used+0x3f77>
add    %ch,0x7861702d
sub    $0x6974706f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a47a <_IO_stdin_used+0x3fb6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a4cf <_IO_stdin_used+0x400b>
jae    808a46c <_IO_stdin_used+0x3fa8>
sub    $0x6c63612d,%eax
jae    808a493 <_IO_stdin_used+0x3fcf>
arpl   %sp,0x6e(%ecx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a4a4 <_IO_stdin_used+0x3fe0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a4f9 <_IO_stdin_used+0x4035>
jae    808a496 <_IO_stdin_used+0x3fd2>
add    %al,(%eax)
sub    $0x6c65732d,%eax
imul   $0x61632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a4d3 <_IO_stdin_used+0x400f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a528 <_IO_stdin_used+0x4064>
jae    808a4c5 <_IO_stdin_used+0x4001>
add    %al,(%eax)
add    %ch,0x7461782d
je     808a541 <_IO_stdin_used+0x407d>
jae    808a4f1 <_IO_stdin_used+0x402d>
arpl   %sp,0x6e(%ecx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a502 <_IO_stdin_used+0x403e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a557 <_IO_stdin_used+0x4093>
jae    808a4f4 <_IO_stdin_used+0x4030>
sub    $0x2073252d,%eax
outsl  %ds:(%esi),(%dx)
jo     808a570 <_IO_stdin_used+0x40ac>
imul   $0x6e616320,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a527 <_IO_stdin_used+0x4063>
bound  %esp,0x20(%ebp)
jne    808a57f <_IO_stdin_used+0x40bb>
gs and %dh,%fs:%gs:0x69(%edi)
je     808a57b <_IO_stdin_used+0x40b7>
and    %ah,0x56000073
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    808a58a <_IO_stdin_used+0x40c6>
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je 808a58d <_IO_stdin_used+0x40c9>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a54d <_IO_stdin_used+0x4089>
bound  %esp,0x20(%ebp)
insb   (%dx),%es:(%edi)
gs
jae    808a5a7 <_IO_stdin_used+0x40e3>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dh,%fs:0x69(%ebx)
jp     808a5aa <_IO_stdin_used+0x40e6>
add    %al,(%eax)
add    %ch,0x6572702d
jae    808a5b4 <_IO_stdin_used+0x40f0>
jb     808a5c7 <_IO_stdin_used+0x4103>
gs
sub    $0x6564726f,%eax
jb     808a579 <_IO_stdin_used+0x40b5>
imul   $0x20746f6e,0x20(%ebx),%esi
arpl   %bp,0x6d(%edi)
jo     808a5c6 <_IO_stdin_used+0x4102>
je     808a5d0 <_IO_stdin_used+0x410c>
bound  %ebp,0x20(%ebp,%eiz,2)
ja     808a5d6 <_IO_stdin_used+0x4112>
je     808a5d7 <_IO_stdin_used+0x4113>
and    %ch,0x73696c2d
je     808a5dc <_IO_stdin_used+0x4118>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808a5e4 <_IO_stdin_used+0x4120>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
ja     808a5ed <_IO_stdin_used+0x4129>
jb     808a5f2 <_IO_stdin_used+0x412e>
insb   (%dx),%es:(%edi)
jns    808a5b1 <_IO_stdin_used+0x40ed>
jb     808a5f8 <_IO_stdin_used+0x4134>
data16
jne    808a609 <_IO_stdin_used+0x4145>
imul   $0x206f7420,0x67(%esi),%ebp
arpl   %si,0x65(%edx)
popa
je     808a608 <_IO_stdin_used+0x4144>
and    %ah,0x6e(%ecx)
and    %ah,0x6d(%ebp)
jo     808a61f <_IO_stdin_used+0x415b>
jns    808a5cd <_IO_stdin_used+0x4109>
popa
jb     808a613 <_IO_stdin_used+0x414f>
push   $0x657669
add    %al,(%eax)
add    %cl,0x70(%edi)
je     808a625 <_IO_stdin_used+0x4161>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    808a5e0 <_IO_stdin_used+0x411c>
daa
sub    $0x27757241,%eax
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%ecx)
arpl   %bp,0x6d(%edi)
jo     808a633 <_IO_stdin_used+0x416f>
je     808a63d <_IO_stdin_used+0x4179>
bound  %ebp,0x20(%ebp,%eiz,2)
ja     808a643 <_IO_stdin_used+0x417f>
je     808a644 <_IO_stdin_used+0x4180>
and    %ah,(%edi)
sub    $0x272d2066,%eax
add    %cl,0x70(%edi)
je     808a651 <_IO_stdin_used+0x418d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x54203a73
jb     808a657 <_IO_stdin_used+0x4193>
popa
je     808a65e <_IO_stdin_used+0x419a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%si)
je     808a661 <_IO_stdin_used+0x419d>
and    %ah,(%edi)
and    $0x61202773,%eax
jae    808a625 <_IO_stdin_used+0x4161>
and    $0x6f590073,%eax
jne    808a62c <_IO_stdin_used+0x4168>
insl   (%dx),%es:(%edi)
jne    808a682 <_IO_stdin_used+0x41be>
je     808a631 <_IO_stdin_used+0x416d>
jae    808a683 <_IO_stdin_used+0x41bf>
arpl   %bp,%gs:0x66(%ecx)
jns    808a639 <_IO_stdin_used+0x4175>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
sub    $0x74646341,%eax
jb     808a6a1 <_IO_stdin_used+0x41dd>
js     808a655 <_IO_stdin_used+0x4191>
sub    $0x20,%al
daa
sub    $0x6c65642d,%eax
gs
je     808a69e <_IO_stdin_used+0x41da>
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
sub    $0x7365742d,%eax
je     808a673 <_IO_stdin_used+0x41af>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
daa
and    %ch,0x70(%edi)
je     808a6ba <_IO_stdin_used+0x41f6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    808a655 <_IO_stdin_used+0x4191>
add    %al,(%eax)
add    %al,0x78(%ebp)
imul   $0x69772067,0x6e(%ecx,%ebp,2),%esi
je     808a6cc <_IO_stdin_used+0x4208>
and    %ah,0x61(%esi)
imul   $0x74732065,0x72(%ebp,%esi,2),%ebp
popa
je     808a6e7 <_IO_stdin_used+0x4223>
jae    808a694 <_IO_stdin_used+0x41d0>
fs
jne    808a6dc <_IO_stdin_used+0x4218>
and    %dh,0x20(%edi,%ebp,2)
jo     808a6ef <_IO_stdin_used+0x422b>
gs
jbe    808a6e9 <_IO_stdin_used+0x4225>
outsl  %ds:(%esi),(%dx)
jne    808a6f6 <_IO_stdin_used+0x4232>
and    %ah,0x72(%ebp)
jb     808a6f7 <_IO_stdin_used+0x4233>
jb     808a6fd <_IO_stdin_used+0x4239>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x74(%ebx),%esi
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     808a6ff <_IO_stdin_used+0x423b>
outsb  %ds:(%esi),(%dx)
je     808a710 <_IO_stdin_used+0x424c>
and    %ch,0x66(%edi)
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a710 <_IO_stdin_used+0x424c>
add    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x66(%ecx,%ebp,2)
data16
gs
jb     808a71d <_IO_stdin_used+0x4259>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %ah,0x65(%edx)
je     808a738 <_IO_stdin_used+0x4274>
gs outsb %gs:(%esi),(%dx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a731 <_IO_stdin_used+0x426d>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    808a74e <_IO_stdin_used+0x428a>
gs
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
popa
jo     808a753 <_IO_stdin_used+0x428f>
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808a70d <_IO_stdin_used+0x4249>
je     808a75e <_IO_stdin_used+0x429a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a76a <_IO_stdin_used+0x42a6>
add    %al,(%eax)
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808a72d <_IO_stdin_used+0x4269>
popa
jo     808a780 <_IO_stdin_used+0x42bc>
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808a73a <_IO_stdin_used+0x4276>
outsb  %ds:(%esi),(%dx)
gs
ja     808a783 <_IO_stdin_used+0x42bf>
jb     808a740 <_IO_stdin_used+0x427c>
je     808a78a <_IO_stdin_used+0x42c6>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
jo     808a7a2 <_IO_stdin_used+0x42de>
and    %ch,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a799 <_IO_stdin_used+0x42d5>
add    %al,(%eax)
add    %al,(%eax)
popa
jo     808a7ab <_IO_stdin_used+0x42e7>
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x72(%ecx,%eiz,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808a769 <_IO_stdin_used+0x42a5>
je     808a7ba <_IO_stdin_used+0x42f6>
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a7bb <_IO_stdin_used+0x42f7>
add    %al,(%eax)
fs
gs
insb   (%dx),%es:(%edi)
gs
je     808a7c3 <_IO_stdin_used+0x42ff>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a7d4 <_IO_stdin_used+0x4310>
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a795 <_IO_stdin_used+0x42d1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
and    %dh,0x61(%si)
jo     808a7e5 <_IO_stdin_used+0x4321>
jae    808a7a3 <_IO_stdin_used+0x42df>
sub    %eax,(%eax)
je     808a7eb <_IO_stdin_used+0x4327>
jae    808a7fc <_IO_stdin_used+0x4338>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a7f9 <_IO_stdin_used+0x4335>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    808a807 <_IO_stdin_used+0x4343>
and    %ch,%gs:0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x646e6168,0x0(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ebx)
popa
jb     808a82b <_IO_stdin_used+0x4367>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808a7e0 <_IO_stdin_used+0x431c>
data32 imul $0x6e65,%gs:0x69(%ebx),%sp
je     808a836 <_IO_stdin_used+0x4372>
jns    808a7cc <_IO_stdin_used+0x4308>
jae    808a833 <_IO_stdin_used+0x436f>
je     808a7f0 <_IO_stdin_used+0x432c>
jbe    808a837 <_IO_stdin_used+0x4373>
jb     808a847 <_IO_stdin_used+0x4383>
imul   $0x20666f20,0x6e(%edi),%ebp
je     808a845 <_IO_stdin_used+0x4381>
and    %dh,%gs:0x70(%ebx)
popa
jb     808a857 <_IO_stdin_used+0x4393>
and    %ah,%gs:0x6f(%esi)
jb     808a857 <_IO_stdin_used+0x4393>
popa
je     808a80d <_IO_stdin_used+0x4349>
je     808a85e <_IO_stdin_used+0x439a>
and    %dh,0x73(%ebp)
and    %ch,%gs:(%eax)
imul   $0x7365696c,0x70(%ebp),%ebp
and    %ch,0x6170732d
jb     808a877 <_IO_stdin_used+0x43b3>
sub    %eax,%gs:(%eax)
add    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6c(%edi)
and    %al,%fs:0x4e(%edi)
push   %ebp
sub    $0x6d726f66,%eax
popa
je     808a83e <_IO_stdin_used+0x437a>
imul   $0x656d6572,0x63(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808a889 <_IO_stdin_used+0x43c5>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808a831 <_IO_stdin_used+0x436d>
add    %al,(%eax)
add    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x65(%esi)
ja     808a85f <_IO_stdin_used+0x439b>
inc    %edi
dec    %esi
push   %ebp
sub    $0x6d726f66,%eax
popa
je     808a86a <_IO_stdin_used+0x43a6>
imul   $0x656d6572,0x63(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808a8b5 <_IO_stdin_used+0x43f1>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808a85d <_IO_stdin_used+0x4399>
add    %al,(%eax)
add    %ah,0x6d(%ebp,%esi,2)
jo     808a885 <_IO_stdin_used+0x43c1>
insb   (%dx),%es:(%edi)
gs
jbe    808a8ce <_IO_stdin_used+0x440a>
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     808a88f <_IO_stdin_used+0x43cb>
arpl   %si,0x65(%edx)
popa
je     808a8da <_IO_stdin_used+0x4416>
and    %ch,%fs:0x73(%ecx,%ebp,2)
je     808a8e1 <_IO_stdin_used+0x441d>
fs
sub    $0x72636e69,%eax
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808a8e9 <_IO_stdin_used+0x4425>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a8f6 <_IO_stdin_used+0x4432>
add    %al,(%eax)
add    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808a8bb <_IO_stdin_used+0x43f7>
gs
js     808a907 <_IO_stdin_used+0x4443>
je     808a8c0 <_IO_stdin_used+0x43fc>
ja     808a90b <_IO_stdin_used+0x4447>
je     808a90c <_IO_stdin_used+0x4448>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
jp     808a90f <_IO_stdin_used+0x444b>
jb     808a91b <_IO_stdin_used+0x4457>
and    %ch,0x6e(%edi)
and    %dh,0x6e(%ebp)
jb     808a919 <_IO_stdin_used+0x4455>
popa
fs
popa
bound  %ebp,0x20(%ebp,%eiz,2)
imul   $0x0,0x73(%ebp,%eiz,2),%bp
add    %al,(%eax)
jo     808a938 <_IO_stdin_used+0x4474>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    808a8ec <_IO_stdin_used+0x4428>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    808a8f1 <_IO_stdin_used+0x442d>
je     808a93b <_IO_stdin_used+0x4477>
and    %cl,%gs:0x55(%esi)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
je     808a945 <_IO_stdin_used+0x4481>
and    %ch,0x63(%edi)
arpl   %si,0x72(%ebp)
jb     808a94a <_IO_stdin_used+0x4486>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
imul   $0x6e69,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808a969 <_IO_stdin_used+0x44a5>
cmp    (%eax),%esp
je     808a970 <_IO_stdin_used+0x44ac>
imul   $0x6974706f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x20796c6e,0x6f(%eax,%eiz,1),%esp
imul   $0x6a6e6f63,0x20(%esi),%ebp
jne    808a997 <_IO_stdin_used+0x44d3>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     808a99b <_IO_stdin_used+0x44d7>
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x75(%ebx)
bound  %esp,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    808a96b <_IO_stdin_used+0x44a7>
sub    $0x6c65642d,%eax
gs
je     808a9b8 <_IO_stdin_used+0x44f4>
sub    $0x20,%al
sub    $0x6669642d,%eax
data16
sub    $0x20,%al
sub    $0x7478652d,%eax
jb     808a9c5 <_IO_stdin_used+0x4501>
arpl   %si,0x6f(%eax,%eiz,1)
jb     808a98a <_IO_stdin_used+0x44c6>
sub    $0x73696c2d,%eax
je     808a991 <_IO_stdin_used+0x44cd>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
imul   $0x6920,0x73(%ebp,%eiz,2),%bp
jae    808a9ad <_IO_stdin_used+0x44e9>
imul   $0x6965206e,0x65(%bp),%esi
je     808a9ff <_IO_stdin_used+0x453b>
gs
jb     808a9ba <_IO_stdin_used+0x44f6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x72(%edi)
and    %dh,0x69(%esi)
popa
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x706f2054
je     808aa29 <_IO_stdin_used+0x4565>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%esp
dec    %esi
push   %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    808aa3d <_IO_stdin_used+0x4579>
je     808aa46 <_IO_stdin_used+0x4582>
and    %dh,0x20(%edi,%ebp,2)
xor    %eax,(%eax)
add    %al,(%eax)
add    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808aa03 <_IO_stdin_used+0x453f>
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    808aa56 <_IO_stdin_used+0x4592>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    808aa60 <_IO_stdin_used+0x459c>
bound  %esp,0x72(%ebp)
jae    808aa18 <_IO_stdin_used+0x4554>
ja     808aa62 <_IO_stdin_used+0x459e>
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     808aa6c <_IO_stdin_used+0x45a8>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
arpl   %si,0x65(%edx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808aa71 <_IO_stdin_used+0x45ad>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808aa7e <_IO_stdin_used+0x45ba>
jae    808aa1b <_IO_stdin_used+0x4557>
add    %ah,0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
fs
gs
jbe    808aa8f <_IO_stdin_used+0x45cb>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    808aa99 <_IO_stdin_used+0x45d5>
bound  %esp,0x72(%ebp)
jae    808aa51 <_IO_stdin_used+0x458d>
ja     808aa9b <_IO_stdin_used+0x45d7>
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     808aaa5 <_IO_stdin_used+0x45e1>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
arpl   %si,0x65(%edx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808aaaa <_IO_stdin_used+0x45e6>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808aab7 <_IO_stdin_used+0x45f3>
jae    808aa74 <_IO_stdin_used+0x45b0>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    808aac7 <_IO_stdin_used+0x4603>
je     808aa86 <_IO_stdin_used+0x45c2>
add    %al,(%eax)
add    %ah,0x74(%ecx)
je     808aac9 <_IO_stdin_used+0x4605>
insl   (%dx),%es:(%edi)
jo     808aadb <_IO_stdin_used+0x4617>
and    %dh,0x20(%edi,%ebp,2)
jbe    808aad2 <_IO_stdin_used+0x460e>
jb     808aad8 <_IO_stdin_used+0x4614>
data16
jns    808aa92 <_IO_stdin_used+0x45ce>
je     808aadc <_IO_stdin_used+0x4618>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808aae2 <_IO_stdin_used+0x461e>
and    %ah,0x66(%ecx)
je     808aae7 <_IO_stdin_used+0x4623>
jb     808aaa4 <_IO_stdin_used+0x45e0>
ja     808aaf8 <_IO_stdin_used+0x4634>
imul   $0x74692067,0x6e(%ecx,%ebp,2),%esi
add    %al,(%eax)
jb     808aaf7 <_IO_stdin_used+0x4633>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808aafb <_IO_stdin_used+0x4637>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808aabd <_IO_stdin_used+0x45f9>
popa
data16
je     808ab06 <_IO_stdin_used+0x4642>
jb     808aac3 <_IO_stdin_used+0x45ff>
popa
fs imul $0x65687420,%fs:0x67(%esi),%ebp
65
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
je     808ab1c <_IO_stdin_used+0x4658>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808ab22 <_IO_stdin_used+0x465e>
add    %al,(%eax)
add    %ah,0x6e(%edi,%ebp,2)
daa
je     808aae6 <_IO_stdin_used+0x4622>
jb     808ab2d <_IO_stdin_used+0x4669>
jo     808ab36 <_IO_stdin_used+0x4672>
popa
arpl   %sp,0x20(%ebp)
gs
js     808ab3a <_IO_stdin_used+0x4676>
jae    808ab47 <_IO_stdin_used+0x4683>
imul   $0x6c696620,0x67(%esi),%ebp
gs
jae    808aafd <_IO_stdin_used+0x4639>
ja     808ab47 <_IO_stdin_used+0x4683>
outsb  %gs:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808ab58 <_IO_stdin_used+0x4694>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
addr16 sub $0x20,%al
je     808ab62 <_IO_stdin_used+0x469e>
gs
popa
je     808ab14 <_IO_stdin_used+0x4650>
je     808ab5e <_IO_stdin_used+0x469a>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x73(%ecx)
and    %ah,0x72(%ebp)
jb     808ab6f <_IO_stdin_used+0x46ab>
jb     808ab75 <_IO_stdin_used+0x46b1>
add    %al,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     808ab2a <_IO_stdin_used+0x4666>
jb     808ab71 <_IO_stdin_used+0x46ad>
jo     808ab7a <_IO_stdin_used+0x46b6>
popa
arpl   %sp,0x20(%ebp)
gs
js     808ab7e <_IO_stdin_used+0x46ba>
jae    808ab8b <_IO_stdin_used+0x46c7>
imul   $0x6c696620,0x67(%esi),%ebp
gs
jae    808ab41 <_IO_stdin_used+0x467d>
ja     808ab8b <_IO_stdin_used+0x46c7>
outsb  %gs:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808ab9c <_IO_stdin_used+0x46d8>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
addr16 sub $0x20,%al
jae    808ab9d <_IO_stdin_used+0x46d9>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808aba5 <_IO_stdin_used+0x46e1>
jns    808ab5b <_IO_stdin_used+0x4697>
jae    808aba8 <_IO_stdin_used+0x46e4>
imul   $0x7265766f,0x20(%eax),%esi
and    %dh,0x65(%eax,%ebp,2)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,0x6e(%edi,%ebp,2)
daa
je     808ab72 <_IO_stdin_used+0x46ae>
jb     808abb9 <_IO_stdin_used+0x46f5>
jo     808abc2 <_IO_stdin_used+0x46fe>
popa
arpl   %sp,0x20(%ebp)
gs
js     808abc6 <_IO_stdin_used+0x4702>
jae    808abd3 <_IO_stdin_used+0x470f>
imul   $0x6c696620,0x67(%esi),%ebp
gs
jae    808ab89 <_IO_stdin_used+0x46c5>
je     808abd3 <_IO_stdin_used+0x470f>
popa
je     808ab8e <_IO_stdin_used+0x46ca>
popa
jb     808abd6 <_IO_stdin_used+0x4712>
and    %ch,0x65(%esi)
ja     808abdb <_IO_stdin_used+0x4717>
jb     808ab98 <_IO_stdin_used+0x46d4>
je     808abe2 <_IO_stdin_used+0x471e>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
imul   $0x68637261,0x20(%edx),%esi
imul   $0x706f6320,0x65(%esi),%esi
imul   $0x6f000000,0x73(%ebp),%esp
jbe    808abfc <_IO_stdin_used+0x4738>
jb     808ac10 <_IO_stdin_used+0x474c>
jb     808ac04 <_IO_stdin_used+0x4740>
je     808ac02 <_IO_stdin_used+0x473e>
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x7720,0x73(%ebp,%eiz,2),%bp
push   $0x65206e65
js     808ac29 <_IO_stdin_used+0x4765>
jb     808ac18 <_IO_stdin_used+0x4754>
arpl   %si,0x6e(%ecx,%ebp,2)
add    %al,(%bx,%si)
add    %al,(%eax)
jb     808ac27 <_IO_stdin_used+0x4763>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808ac2b <_IO_stdin_used+0x4767>
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
imul   $0x7270,0x20(%ebp,%eiz,2),%bp
imul   $0x206f7420,0x72(%edi),%ebp
gs
js     808ac51 <_IO_stdin_used+0x478d>
jb     808ac40 <_IO_stdin_used+0x477c>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ch,0x76(%bx)
gs
jb     808ac0a <_IO_stdin_used+0x4746>
imul   $0x6d650000,0x0(%eax,%eax,1),%esi
jo     808ac68 <_IO_stdin_used+0x47a4>
jns    808ac16 <_IO_stdin_used+0x4752>
push   $0x61726569
jb     808ac60 <_IO_stdin_used+0x479c>
push   $0x20736569
jo     808ac76 <_IO_stdin_used+0x47b2>
imul   $0x206f7420,0x72(%edi),%ebp
gs
js     808ac82 <_IO_stdin_used+0x47be>
jb     808ac71 <_IO_stdin_used+0x47ad>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ah,0x69(%si)
jb     808ac7f <_IO_stdin_used+0x47bb>
arpl   %si,0x72(%edi,%ebp,2)
jns    808ac20 <_IO_stdin_used+0x475c>
jo     808ac94 <_IO_stdin_used+0x47d0>
gs
jae    808ac8a <_IO_stdin_used+0x47c6>
jb     808ac9d <_IO_stdin_used+0x47d9>
and    %ch,%gs:0x65(%ebp)
je     808ac8e <_IO_stdin_used+0x47ca>
fs
popa
je     808ac92 <_IO_stdin_used+0x47ce>
and    %ch,0x66(%edi)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x6f000000,0x73(%ebp),%esp
jbe    808acb4 <_IO_stdin_used+0x47f0>
jb     808acc8 <_IO_stdin_used+0x4804>
jb     808acbc <_IO_stdin_used+0x47f8>
je     808acba <_IO_stdin_used+0x47f6>
and    %ch,0x65(%ebp)
je     808acbb <_IO_stdin_used+0x47f7>
fs
popa
je     808acbf <_IO_stdin_used+0x47fb>
and    %ch,0x66(%edi)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x65687720,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808acf2 <_IO_stdin_used+0x482e>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ch,(%bx,%si)
fs
gs
popaw
jne    808acfa <_IO_stdin_used+0x4836>
je     808acb9 <_IO_stdin_used+0x47f5>
add    %al,(%eax)
add    %al,(%eax)
jo     808ad08 <_IO_stdin_used+0x4844>
gs
jae    808acfe <_IO_stdin_used+0x483a>
jb     808ad11 <_IO_stdin_used+0x484d>
and    %ah,%gs:0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
jae    808ad21 <_IO_stdin_used+0x485d>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6f742073,0x6b(%esi),%ebp
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x65687720,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808ad39 <_IO_stdin_used+0x4875>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
add    %al,(%bx,%si)
add    %ah,0x78(%ebp)
je     808ad46 <_IO_stdin_used+0x4882>
popa
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x206f7420,0x73(%ebp,%eiz,2),%ebp
jae    808ad57 <_IO_stdin_used+0x4893>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     808ad4d <_IO_stdin_used+0x4889>
and    %ch,0x75(%edi)
je     808ad5e <_IO_stdin_used+0x489a>
jne    808ad64 <_IO_stdin_used+0x48a0>
add    %al,(%eax)
add    %al,(%eax)
jo     808ad5f <_IO_stdin_used+0x489b>
jo     808ad5d <_IO_stdin_used+0x4899>
and    %ah,0x78(%ebp)
je     808ad6f <_IO_stdin_used+0x48ab>
popa
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ad29 <_IO_stdin_used+0x4865>
je     808ad7a <_IO_stdin_used+0x48b6>
and    %ah,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     808ad79 <_IO_stdin_used+0x48b5>
gs
jb     808ad34 <_IO_stdin_used+0x4870>
jo     808ad88 <_IO_stdin_used+0x48c4>
outsl  %ds:(%esi),(%dx)
addr16 jb 808ad7b <_IO_stdin_used+0x48b7>
insl   (%dx),%es:(%edi)
add    %dh,0x65(%edx,%esi,2)
popa
je     808ad42 <_IO_stdin_used+0x487e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x6f72657a,%eax
and    %ah,0x78(%ebp)
imul   $0x7365646f,0x63(%eax,%eiz,1),%esi
and    %ch,0x66(%edi)
and    %ah,0x68(%ebx)
imul   $0x61206e65,0x72(%esp,%eiz,2),%ebp
jae    808ad65 <_IO_stdin_used+0x48a1>
gs
jb     808adba <_IO_stdin_used+0x48f6>
outsl  %ds:(%esi),(%dx)
jb     808ad4b <_IO_stdin_used+0x4887>
add    %ah,0x6f(%esi)
jb     808adb3 <_IO_stdin_used+0x48ef>
and    %cl,%gs:0x41(%esi)
dec    %ebp
inc    %ebp
and    %ah,0x73(%ecx)
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     808ad80 <_IO_stdin_used+0x48bc>
outsw  %ds:(%esi),(%dx)
jb     808ad84 <_IO_stdin_used+0x48c0>
popa
fs fs gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ad70 <_IO_stdin_used+0x48ac>
outsw  %ds:(%esi),(%dx)
jb     808add7 <_IO_stdin_used+0x4913>
and    %cl,%gs:0x41(%esi)
dec    %ebp
inc    %ebp
and    %ah,0x73(%ecx)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    808adf3 <_IO_stdin_used+0x492f>
and    %ah,0x6f(%esi)
jb     808ada8 <_IO_stdin_used+0x48e4>
popa
fs fs gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ad94 <_IO_stdin_used+0x48d0>
jae    808adfb <_IO_stdin_used+0x4937>
je     808adb8 <_IO_stdin_used+0x48f4>
insl   (%dx),%es:(%edi)
je     808ae04 <_IO_stdin_used+0x4940>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     808adc2 <_IO_stdin_used+0x48fe>
popa
fs fs gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808adce <_IO_stdin_used+0x490a>
data16
jb     808ae20 <_IO_stdin_used+0x495c>
insl   (%dx),%es:(%edi)
and    %al,0x54(%ecx,%eax,2)
inc    %ebp
sub    $0x462d524f,%eax
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x6f(%esi)
jb     808ae27 <_IO_stdin_used+0x4963>
and    %ch,%gs:(%eax)
jae    808ae42 <_IO_stdin_used+0x497e>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x646f6d20,0x29(%ebx),%esp
and    %al,%gs:0x48(%ebx)
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
push   %ebx
and    %ah,0x6f(%esi)
jb     808ae02 <_IO_stdin_used+0x493e>
popa
fs fs gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808adee <_IO_stdin_used+0x492a>
add    %al,(%eax)
jo     808ae64 <_IO_stdin_used+0x49a0>
gs
jae    808ae5a <_IO_stdin_used+0x4996>
jb     808ae6d <_IO_stdin_used+0x49a9>
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    808ae20 <_IO_stdin_used+0x495c>
je     808ae6b <_IO_stdin_used+0x49a7>
insl   (%dx),%es:(%edi)
gs
jae    808ae26 <_IO_stdin_used+0x4962>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6d(%ebp,%esi,2)
jo     808ae73 <_IO_stdin_used+0x49af>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ae42 <_IO_stdin_used+0x497e>
and    %ah,0x69(%ebp)
je     808ae83 <_IO_stdin_used+0x49bf>
gs
jb     808ae3e <_IO_stdin_used+0x497a>
bound  %edi,0x20(%ecx)
jb     808ae88 <_IO_stdin_used+0x49c4>
jae    808ae99 <_IO_stdin_used+0x49d5>
outsl  %ds:(%esi),(%dx)
jb     808ae91 <_IO_stdin_used+0x49cd>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs
jae    808ae55 <_IO_stdin_used+0x4991>
popa
data16
je     808ae9e <_IO_stdin_used+0x49da>
jb     808ae5b <_IO_stdin_used+0x4997>
jb     808aea2 <_IO_stdin_used+0x49de>
popa
imul   $0x454d2820,%fs:0x67(%esi),%ebp
push   %esp
dec    %eax
dec    %edi
inc    %esp
cmp    $0x70657227,%eax
insb   (%dx),%es:(%edi)
popa
arpl   %sp,0x27(%ebp)
cmp    (%eax),%esp
fs
gs
popaw
jne    808aec8 <_IO_stdin_used+0x4a04>
je     808ae87 <_IO_stdin_used+0x49c3>
and    %ch,0x72(%edi)
and    %ah,0x79(%edx)
and    %ch,0x6f(%esi)
je     808ae89 <_IO_stdin_used+0x49c5>
jae    808aed0 <_IO_stdin_used+0x4a0c>
je     808aee1 <_IO_stdin_used+0x4a1d>
imul   $0x65687420,0x67(%esi),%ebp
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    808ae9b <_IO_stdin_used+0x49d7>
imul   $0x20656874,0x20(%esi),%ebp
imul   $0x2074,0x73(%edx),%si
jo     808aef6 <_IO_stdin_used+0x4a32>
popa
arpl   %sp,0x20(%ebp)
sub    %cl,0x45(%ebp)
push   %esp
dec    %eax
dec    %edi
inc    %esp
cmp    $0x73797327,%eax
je     808af01 <_IO_stdin_used+0x4a3d>
insl   (%dx),%es:(%edi)
daa
sub    %eax,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     808aec6 <_IO_stdin_used+0x4a02>
gs
js     808af1d <_IO_stdin_used+0x4a59>
jb     808af0c <_IO_stdin_used+0x4a48>
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x69646f6d,0x20(%ebp,%eiz,2),%ebp
imul   $0x7420,0x64(%ebp),%sp
imul   $0x0,0x65(%ebp),%ebp
je     808af38 <_IO_stdin_used+0x4a74>
jns    808aee8 <_IO_stdin_used+0x4a24>
gs
js     808af3f <_IO_stdin_used+0x4a7b>
jb     808af2e <_IO_stdin_used+0x4a6a>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
gs
jae    808aef9 <_IO_stdin_used+0x4a35>
ja     808af44 <_IO_stdin_used+0x4a80>
je     808af45 <_IO_stdin_used+0x4a81>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     808af60 <_IO_stdin_used+0x4a9c>
push   $0x61207069
jae    808af14 <_IO_stdin_used+0x4a50>
gs
js     808af60 <_IO_stdin_used+0x4a9c>
jae    808af6d <_IO_stdin_used+0x4aa9>
jae    808af1b <_IO_stdin_used+0x4a57>
imul   $0x20656874,0x20(%esi),%ebp
popa
jb     808af68 <_IO_stdin_used+0x4aa4>
push   $0x20657669
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    808af7d <_IO_stdin_used+0x4ab9>
je     808af33 <_IO_stdin_used+0x4a6f>
outsw  %ds:(%esi),(%dx)
jb     808af37 <_IO_stdin_used+0x4a73>
jae    808af8e <_IO_stdin_used+0x4aca>
jo     808af80 <_IO_stdin_used+0x4abc>
jb     808af92 <_IO_stdin_used+0x4ace>
jae    808af84 <_IO_stdin_used+0x4ac0>
jb     808af4a <_IO_stdin_used+0x4a86>
add    %al,(%eax)
add    %ah,0x78(%ebp)
je     808af9a <_IO_stdin_used+0x4ad6>
popa
arpl   %si,0x66(%eax,%eiz,1)
imul   $0x20736120,0x73(%ebp,%eiz,2),%ebp
jns    808afa6 <_IO_stdin_used+0x4ae2>
jne    808afab <_IO_stdin_used+0x4ae7>
jae    808afa0 <_IO_stdin_used+0x4adc>
insb   (%dx),%es:(%edi)
data16
and    %ch,(%eax)
fs
gs
popaw
jne    808afb1 <_IO_stdin_used+0x4aed>
je     808af67 <_IO_stdin_used+0x4aa3>
outsw  %ds:(%esi),(%dx)
jb     808af6b <_IO_stdin_used+0x4aa7>
outsl  %ds:(%esi),(%dx)
jb     808afb2 <_IO_stdin_used+0x4aee>
imul   $0x75207972,0x61(%esi),%ebp
jae    808afbc <_IO_stdin_used+0x4af8>
jb     808afcc <_IO_stdin_used+0x4b08>
sub    %eax,(%eax)
add    %ah,0x6c(%ecx)
ja     808afc1 <_IO_stdin_used+0x4afd>
jns    808afd5 <_IO_stdin_used+0x4b11>
and    %dh,0x73(%ebp)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    808af8f <_IO_stdin_used+0x4acb>
outsw  %ds:(%esi),(%dx)
jb     808af93 <_IO_stdin_used+0x4acf>
jne    808afe8 <_IO_stdin_used+0x4b24>
gs
jb     808afa7 <_IO_stdin_used+0x4ae3>
addr16 jb 808afea <_IO_stdin_used+0x4b26>
jne    808afed <_IO_stdin_used+0x4b29>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808af84 <_IO_stdin_used+0x4ac0>
gs
js     808affb <_IO_stdin_used+0x4b37>
jb     808afea <_IO_stdin_used+0x4b26>
arpl   %si,0x69(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     808afff <_IO_stdin_used+0x4b3b>
popa
je     808affe <_IO_stdin_used+0x4b3a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    808b011 <_IO_stdin_used+0x4b4d>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%eax)
jb     808b014 <_IO_stdin_used+0x4b50>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,(%eax)
fs
gs
popaw
jne    808b022 <_IO_stdin_used+0x4b5e>
je     808afd8 <_IO_stdin_used+0x4b14>
outsw  %ds:(%esi),(%dx)
jb     808afdc <_IO_stdin_used+0x4b18>
jae    808b033 <_IO_stdin_used+0x4b6f>
jo     808b025 <_IO_stdin_used+0x4b61>
jb     808b037 <_IO_stdin_used+0x4b73>
jae    808b029 <_IO_stdin_used+0x4b65>
jb     808afef <_IO_stdin_used+0x4b2b>
add    %al,(%eax)
popa
jo     808b03b <_IO_stdin_used+0x4b77>
insb   (%dx),%es:(%edi)
jns    808afee <_IO_stdin_used+0x4b2a>
je     808b038 <_IO_stdin_used+0x4b74>
and    %dh,%gs:0x73(%ebp)
gs
jb     808affe <_IO_stdin_used+0x4b3a>
jae    808aff9 <_IO_stdin_used+0x4b35>
jne    808b048 <_IO_stdin_used+0x4b84>
popa
jae    808b049 <_IO_stdin_used+0x4b85>
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808b05a <_IO_stdin_used+0x4b96>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
and    %dh,0x65(%bx,%si)
jb     808b060 <_IO_stdin_used+0x4b9c>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b070 <_IO_stdin_used+0x4bac>
and    %ch,(%eax)
fs
gs
popaw
jne    808b07f <_IO_stdin_used+0x4bbb>
je     808b035 <_IO_stdin_used+0x4b71>
outsw  %ds:(%esi),(%dx)
jb     808b039 <_IO_stdin_used+0x4b75>
outsl  %ds:(%esi),(%dx)
jb     808b080 <_IO_stdin_used+0x4bbc>
imul   $0x75207972,0x61(%esi),%ebp
jae    808b08a <_IO_stdin_used+0x4bc6>
jb     808b09a <_IO_stdin_used+0x4bd6>
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,0x72(%ecx)
addr16 jne 808b0a5 <_IO_stdin_used+0x4be1>
outsb  %gs:(%esi),(%dx)
je     808b0af <_IO_stdin_used+0x4beb>
and    %ah,0x72(%ecx)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     808b0ab <_IO_stdin_used+0x4be7>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
fs
gs
jb     808b07a <_IO_stdin_used+0x4bb6>
popa
jae    808b07d <_IO_stdin_used+0x4bb9>
je     808b0c7 <_IO_stdin_used+0x4c03>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808b087 <_IO_stdin_used+0x4bc3>
imul   $0x20656874,0x20(%esi),%ebp
popa
jb     808b0d4 <_IO_stdin_used+0x4c10>
push   $0x657669
add    %al,(%eax)
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    808b09e <_IO_stdin_used+0x4bda>
jae    808b0e5 <_IO_stdin_used+0x4c21>
je     808b0f6 <_IO_stdin_used+0x4c32>
imul   $0x646f6d20,0x67(%esi),%ebp
imul   $0x69746163,0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    808b0b9 <_IO_stdin_used+0x4bf5>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     808b10e <_IO_stdin_used+0x4c4a>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x66(%edi)
and    %ah,0x78(%ebp)
je     808b122 <_IO_stdin_used+0x4c5e>
popa
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x746e7520,0x73(%ebp),%esp
imul   $0x65206568,0x74(%eax,%eiz,1),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x78(%ebp)
je     808b149 <_IO_stdin_used+0x4c85>
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x66(%ebp)
data16
arpl   %si,%gs:0x6f(%eax,%eiz,1)
data16
and    %ch,0x6c65642d
popa
jns    808b12a <_IO_stdin_used+0x4c66>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    808b134 <_IO_stdin_used+0x4c70>
jb     808b16e <_IO_stdin_used+0x4caa>
jae    808b17f <_IO_stdin_used+0x4cbb>
outsl  %ds:(%esi),(%dx)
jb     808b173 <_IO_stdin_used+0x4caf>
and    %ch,0x70(%edi)
je     808b17c <_IO_stdin_used+0x4cb8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %cl,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x67(%esi),%ebp
gs
js     808b19b <_IO_stdin_used+0x4cd7>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x74(%ecx)
je     808b1a8 <_IO_stdin_used+0x4ce4>
imul   $0x3a736574,0x75(%edx),%esp
add    %al,(%eax)
add    %al,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
gs
js     808b1be <_IO_stdin_used+0x4cfa>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x74(%ecx)
je     808b1c6 <_IO_stdin_used+0x4d02>
imul   $0x20736574,0x75(%edx),%esp
jae    808b1d2 <_IO_stdin_used+0x4d0e>
jo     808b1cf <_IO_stdin_used+0x4d0b>
outsl  %ds:(%esi),(%dx)
jb     808b1d6 <_IO_stdin_used+0x4d12>
add    %al,(%eax)
inc    %esp
imul   $0x20656c62,0x61(%ebx),%esi
gs
js     808b1e3 <_IO_stdin_used+0x4d1f>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x74(%ecx)
je     808b1eb <_IO_stdin_used+0x4d27>
imul   $0x20736574,0x75(%edx),%esp
jae    808b1f7 <_IO_stdin_used+0x4d33>
jo     808b1f4 <_IO_stdin_used+0x4d30>
outsl  %ds:(%esi),(%dx)
jb     808b1fb <_IO_stdin_used+0x4d37>
add    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    808b1b0 <_IO_stdin_used+0x4cec>
je     808b1fa <_IO_stdin_used+0x4d36>
and    %ch,%gs:0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
and    %dh,%gs:0x61(%eax)
je     808b214 <_IO_stdin_used+0x4d50>
gs
jb     808b211 <_IO_stdin_used+0x4d4d>
and    %ah,0x6f(%esi)
jb     808b1c8 <_IO_stdin_used+0x4d04>
js     808b20b <_IO_stdin_used+0x4d47>
je     808b220 <_IO_stdin_used+0x4d5c>
jb     808b1ce <_IO_stdin_used+0x4d0a>
imul   $0x73,0x79(%ebp),%esp
add    %al,(%eax)
jae    808b226 <_IO_stdin_used+0x4d62>
arpl   %bp,%gs:0x66(%ecx)
jns    808b1dc <_IO_stdin_used+0x4d18>
je     808b226 <_IO_stdin_used+0x4d62>
and    %ah,%gs:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %dh,%gs:0x61(%eax)
je     808b240 <_IO_stdin_used+0x4d7c>
gs
jb     808b23d <_IO_stdin_used+0x4d79>
and    %ah,0x6f(%esi)
jb     808b1f4 <_IO_stdin_used+0x4d30>
js     808b237 <_IO_stdin_used+0x4d73>
je     808b24c <_IO_stdin_used+0x4d88>
jb     808b1fa <_IO_stdin_used+0x4d36>
imul   $0x73,0x79(%ebp),%esp
add    %al,(%eax)
inc    %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     808b251 <_IO_stdin_used+0x4d8d>
and    %dl,%gs:0x45(%ebx)
dec    %esp
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808b25d <_IO_stdin_used+0x4d99>
js     808b26e <_IO_stdin_used+0x4daa>
and    %dh,0x75(%ebx)
jo     808b26f <_IO_stdin_used+0x4dab>
outsl  %ds:(%esi),(%dx)
jb     808b276 <_IO_stdin_used+0x4db2>
add    %al,(%eax)
inc    %esp
imul   $0x20656c62,0x61(%ebx),%esi
je     808b276 <_IO_stdin_used+0x4db2>
and    %dl,%gs:0x45(%ebx)
dec    %esp
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808b282 <_IO_stdin_used+0x4dbe>
js     808b293 <_IO_stdin_used+0x4dcf>
and    %dh,0x75(%ebx)
jo     808b294 <_IO_stdin_used+0x4dd0>
outsl  %ds:(%esi),(%dx)
jb     808b29b <_IO_stdin_used+0x4dd7>
add    %al,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     808b29a <_IO_stdin_used+0x4dd6>
and    %dl,%gs:0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %al,0x43(%ecx)
dec    %esp
jae    808b25f <_IO_stdin_used+0x4d9b>
jae    808b2b6 <_IO_stdin_used+0x4df2>
jo     808b2b3 <_IO_stdin_used+0x4def>
outsl  %ds:(%esi),(%dx)
jb     808b2ba <_IO_stdin_used+0x4df6>
add    %al,(%eax)
inc    %esp
gs
jbe    808b2b5 <_IO_stdin_used+0x4df1>
arpl   %sp,0x20(%ebp)
jae    808b2b6 <_IO_stdin_used+0x4df2>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x77(%ebx)
imul   $0x3a676e69,0x68(%ebx,%eiz,2),%esi
add    %dh,0x73(%ebp)
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b2d8 <_IO_stdin_used+0x4e14>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x43524120,0x65(%ebx),%esp
dec    %eax
dec    %ecx
push   %esi
inc    %ebp
add    %al,(%eax)
popa
jb     808b2f2 <_IO_stdin_used+0x4e2e>
push   $0x20657669
imul   $0x7369,0x20(%ebp,%eiz,2),%bp
and    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x74(%ecx)
and    %ch,0x61(%eax)
jae    808b2d1 <_IO_stdin_used+0x4e0d>
popa
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
jne    808b331 <_IO_stdin_used+0x4e6d>
and    %ah,%gs:0x69(%edi)
jbe    808b329 <_IO_stdin_used+0x4e65>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%edx)
je     808b2ea <_IO_stdin_used+0x4e26>
inc    %ebx
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %ch,0x6e(%ecx)
jae    808b34a <_IO_stdin_used+0x4e86>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x6d(%edx)
je     808b2e1 <_IO_stdin_used+0x4e1d>
add    %al,(%eax)
add    %dh,0x73(%ebp)
and    %dh,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     808b353 <_IO_stdin_used+0x4e8f>
and    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %ch,0x6e(%ecx)
jae    808b36f <_IO_stdin_used+0x4eab>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x73(%edx)
push   $0x63000000
jb     808b370 <_IO_stdin_used+0x4eac>
popa
je     808b373 <_IO_stdin_used+0x4eaf>
das
insb   (%dx),%es:(%edi)
imul   $0x7478652f,0x74(%ebx),%esi
jb     808b37a <_IO_stdin_used+0x4eb6>
arpl   %si,0x6d(%eax,%eiz,1)
jne    808b38b <_IO_stdin_used+0x4ec7>
je     808b38a <_IO_stdin_used+0x4ec6>
sub    $0x756c6f76,%eax
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b395 <_IO_stdin_used+0x4ed1>
add    %al,(%eax)
add    %al,(%eax)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x61(%si)
jo     808b3a4 <_IO_stdin_used+0x4ee0>
and    %ah,0x66(%ecx)
je     808b3a9 <_IO_stdin_used+0x4ee5>
jb     808b366 <_IO_stdin_used+0x4ea2>
ja     808b3ba <_IO_stdin_used+0x4ef6>
imul   $0x554e2067,0x6e(%ecx,%ebp,2),%esi
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
and    %bh,0x20(%eax)
xor    %esi,(%eax)
xor    (%eax,%eiz,1),%dh
bound  %edi,0x74(%ecx)
gs
jae    808b362 <_IO_stdin_used+0x4e9e>
add    %al,(%eax)
jb     808b3db <_IO_stdin_used+0x4f17>
outsb  %ds:(%esi),(%dx)
and    %dh,0x63(%ebx)
jb     808b3d5 <_IO_stdin_used+0x4f11>
jo     808b3e2 <_IO_stdin_used+0x4f1e>
and    %ah,0x74(%ecx)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
je     808b3e1 <_IO_stdin_used+0x4f1d>
jo     808b3e7 <_IO_stdin_used+0x4f23>
and    %ch,(%eax)
imul   $0x7365696c,0x70(%ebp),%ebp
and    %ch,0x7500294d
jae    808b3f8 <_IO_stdin_used+0x4f34>
das
jne    808b406 <_IO_stdin_used+0x4f42>
fs
popa
je     808b3ff <_IO_stdin_used+0x4f3b>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    808b411 <_IO_stdin_used+0x4f4d>
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x6e(%ecx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
dec    %esi
push   %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
and    %ch,0x66(%edi)
and    %ah,0x79(%edx)
je     808b42b <_IO_stdin_used+0x4f67>
jae    808b3e8 <_IO_stdin_used+0x4f24>
jo     808b42f <_IO_stdin_used+0x4f6b>
jb     808b3ec <_IO_stdin_used+0x4f28>
jb     808b433 <_IO_stdin_used+0x4f6f>
arpl   %bp,0x72(%edi)
fs
sub    $0x20,%al
insl   (%dx),%es:(%edi)
jne    808b443 <_IO_stdin_used+0x4f7f>
je     808b442 <_IO_stdin_used+0x4f7e>
jo     808b447 <_IO_stdin_used+0x4f83>
and    %ch,%gs:0x66(%edi)
and    %dh,0x69003231
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     808b44f <_IO_stdin_used+0x4f8b>
and    %bh,0x65(%edx)
jb     808b45e <_IO_stdin_used+0x4f9a>
gs and %ah,%fs:%gs:0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %ch,0x6e(%ecx)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b468 <_IO_stdin_used+0x4fa4>
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
jae    808b42b <_IO_stdin_used+0x4f67>
inc    %ebp
dec    %edi
inc    %esi
sub    %eax,(%eax)
jb     808b477 <_IO_stdin_used+0x4fb3>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x61,(%eax),%esp
jae    808b43b <_IO_stdin_used+0x4f77>
ja     808b482 <_IO_stdin_used+0x4fbe>
and    %dh,0x65(%edx)
popa
and    %ch,%fs:(%eax)
outsw  %ds:(%esi),(%dx)
jb     808b448 <_IO_stdin_used+0x4f84>
xor    $0x2e,%al
xor    0x53(%edx),%al
inc    %esp
and    %dh,0x69(%eax)
jo     808b498 <_IO_stdin_used+0x4fd4>
jae    808b45e <_IO_stdin_used+0x4f9a>
add    %al,(%eax)
add    %ah,0x72(%ebx)
gs
popa
je     808b4a3 <_IO_stdin_used+0x4fdf>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b4ab <_IO_stdin_used+0x4fe7>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    808b4b7 <_IO_stdin_used+0x4ff3>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     808b4c5 <_IO_stdin_used+0x5001>
popa
je     808b45b <_IO_stdin_used+0x4f97>
add    %al,0x4f(%esi)
push   %edx
dec    %ebp
inc    %ecx
push   %esp
and    %ch,0x73(%ecx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808b4e1 <_IO_stdin_used+0x501d>
outsb  %ds:(%esi),(%dx)
cmp    (%bx,%si),%al
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
and    %dh,(%ecx)
xor    %dh,(%eax)
xor    (%esi),%ebp
xor    %ebp,0x38383931
and    %ch,(%eax)
jne    808b504 <_IO_stdin_used+0x5040>
je     808b4f4 <_IO_stdin_used+0x5030>
jb     808b4be <_IO_stdin_used+0x4ffa>
and    %ah,0x6f(%esi)
jb     808b507 <_IO_stdin_used+0x5043>
popa
je     808b49d <_IO_stdin_used+0x4fd9>
add    %al,(%eax)
add    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %dh,(%ecx)
xor    %dh,(%eax)
xor    (%esi),%ebp
xor    %ebp,0x31303032
and    %ch,(%eax)
jo     808b516 <_IO_stdin_used+0x5052>
js     808b4e0 <_IO_stdin_used+0x501c>
and    %ah,0x6f(%esi)
jb     808b529 <_IO_stdin_used+0x5065>
popa
je     808b4bf <_IO_stdin_used+0x4ffb>
add    %ch,0x65(%ebx)
jns    808b53b <_IO_stdin_used+0x5077>
outsl  %ds:(%esi),(%dx)
jb     808b52b <_IO_stdin_used+0x5067>
pop    %ebx
pop    %ebx
cmp    0x3d(%ebp),%bl
jbe    808b52f <_IO_stdin_used+0x506b>
insb   (%dx),%es:(%edi)
jne    808b536 <_IO_stdin_used+0x5072>
pop    %ebp
pop    %ebx
sub    $0x6b,%al
gs
jns    808b54f <_IO_stdin_used+0x508b>
outsl  %ds:(%esi),(%dx)
jb     808b53f <_IO_stdin_used+0x507b>
pop    %ebx
pop    %ebx
cmp    0x3d(%ebp),%bl
jbe    808b543 <_IO_stdin_used+0x507f>
insb   (%dx),%es:(%edi)
jne    808b54a <_IO_stdin_used+0x5086>
pop    %ebp
pop    %ebp
cs cs add %al,%cs:(%eax)
arpl   %si,0x65(%edx)
popa
je     808b557 <_IO_stdin_used+0x5093>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b55f <_IO_stdin_used+0x509b>
and    %dh,0x69(%edi)
je     808b567 <_IO_stdin_used+0x50a3>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    808b572 <_IO_stdin_used+0x50ae>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x58(%ebp,%eax,2)
push   %esp
cmp    (%eax),%esp
popa
je     808b535 <_IO_stdin_used+0x5071>
insb   (%dx),%es:(%edi)
imul   $0x7478652f,0x74(%ebx),%esi
jb     808b580 <_IO_stdin_used+0x50bc>
arpl   %si,0x74(%eax,%eiz,1)
imul   $0x7375202c,0x65(%ebp),%ebp
and    %dl,%gs:0x58(%ebp,%eax,2)
push   %esp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x69(%edx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bx,%si)
je     808b5b7 <_IO_stdin_used+0x50f3>
gs
jb     808b5b4 <_IO_stdin_used+0x50f0>
and    %ah,0x6f(%esi)
jb     808b56b <_IO_stdin_used+0x50a7>
jbe    808b5bc <_IO_stdin_used+0x50f8>
insb   (%dx),%es:(%edi)
jne    808b5bd <_IO_stdin_used+0x50f9>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
jne    808b5cd <_IO_stdin_used+0x5109>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b5c8 <_IO_stdin_used+0x5104>
and    %dh,0x75(%ebx)
data32 imul $0x6f74,0x20(%eax),%di
and    %ah,0x74(%ebp,%eiz,2)
gs
jb     808b5e1 <_IO_stdin_used+0x511d>
imul   $0x65687420,0x65(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     808b5f3 <_IO_stdin_used+0x512f>
gs
jae    808b5f7 <_IO_stdin_used+0x5133>
imul   $0x6f727020,0x6e(%edi),%ebp
addr16 jb 808b5ef <_IO_stdin_used+0x512b>
insl   (%dx),%es:(%edi)
add    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808b5b7 <_IO_stdin_used+0x50f3>
jne    808b60c <_IO_stdin_used+0x5148>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b607 <_IO_stdin_used+0x5143>
and    %dh,0x75(%ebx)
data32 imul $0x6f74,0x20(%eax),%di
and    %ah,0x74(%ebp,%eiz,2)
gs
jb     808b620 <_IO_stdin_used+0x515c>
imul   $0x65687420,0x65(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     808b632 <_IO_stdin_used+0x516e>
gs
jae    808b636 <_IO_stdin_used+0x5172>
imul   $0x6f727020,0x6e(%edi),%ebp
addr16 jb 808b62e <_IO_stdin_used+0x516a>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
imul   $0x2072,0x65(%esp,%esi,2),%bp
je     808b641 <_IO_stdin_used+0x517d>
jb     808b64a <_IO_stdin_used+0x5186>
jne    808b644 <_IO_stdin_used+0x5180>
push   $0x4f525020
inc    %edi
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
jne    808b65b <_IO_stdin_used+0x5197>
je     808b60a <_IO_stdin_used+0x5146>
popa
arpl   %sp,0x65(%ebx)
jo     808b664 <_IO_stdin_used+0x51a0>
and    %ch,0x2964
add    %al,(%eax)
popa
fs and %ah,%fs:0x69(%edi)
jbe    808b665 <_IO_stdin_used+0x51a1>
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %dh,0x20(%edi,%ebp,2)
je     808b674 <_IO_stdin_used+0x51b0>
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808b67a <_IO_stdin_used+0x51b6>
and    %ch,(%eax)
jne    808b68c <_IO_stdin_used+0x51c8>
gs
data16
jne    808b689 <_IO_stdin_used+0x51c5>
and    %ch,0x66(%ecx)
and    %ch,0x74(%ecx)
jae    808b645 <_IO_stdin_used+0x5181>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x74(%ebx)
popa
jb     808b6a3 <_IO_stdin_used+0x51df>
jae    808b651 <_IO_stdin_used+0x518d>
ja     808b69c <_IO_stdin_used+0x51d8>
je     808b69d <_IO_stdin_used+0x51d9>
and    %ah,0x20(%ecx)
fs
popa
jae    808b6a4 <_IO_stdin_used+0x51e0>
sub    %eax,(%eax)
add    %al,(%eax)
addr16
gs
je     808b664 <_IO_stdin_used+0x51a0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    808b66a <_IO_stdin_used+0x51a6>
je     808b6bb <_IO_stdin_used+0x51f7>
and    %ah,0x78(%ebp)
je     808b6c3 <_IO_stdin_used+0x51ff>
popa
arpl   %si,0x6f(%eax,%eiz,1)
jb     808b678 <_IO_stdin_used+0x51b4>
arpl   %si,0x65(%edx)
popa
je     808b6c3 <_IO_stdin_used+0x51ff>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
sub    $0x65722054,%eax
popa
fs
jae    808b695 <_IO_stdin_used+0x51d1>
outsb  %ds:(%esi),(%dx)
jne    808b6e4 <_IO_stdin_used+0x5220>
insb   (%dx),%es:(%edi)
sub    $0x6d726574,%eax
imul   $0x20646574,0x61(%esi),%ebp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    808b6b7 <_IO_stdin_used+0x51f3>
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
sub    $0x64000043,%eax
imul   $0x20656c62,0x61(%ebx),%esi
je     808b70a <_IO_stdin_used+0x5246>
and    %ah,%gs:0x66(%ebp)
data16
arpl   %si,%gs:0x6f(%eax,%eiz,1)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
gs
jbe    808b720 <_IO_stdin_used+0x525c>
outsl  %ds:(%esi),(%dx)
jne    808b72d <_IO_stdin_used+0x5269>
and    %ch,0x6c756e2d
insb   (%dx),%es:(%edi)
and    %ch,0x70(%edi)
je     808b72f <_IO_stdin_used+0x526b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
jne    808b73c <_IO_stdin_used+0x5278>
jno    808b745 <_IO_stdin_used+0x5281>
outsl  %ds:(%esi),(%dx)
je     808b738 <_IO_stdin_used+0x5274>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    808b6fe <_IO_stdin_used+0x523a>
jb     808b745 <_IO_stdin_used+0x5281>
popa
and    %dh,%fs:0x69(%edi)
je     808b74f <_IO_stdin_used+0x528b>
and    %ch,0x64282054
gs
popaw
jne    808b75e <_IO_stdin_used+0x529a>
je     808b71d <_IO_stdin_used+0x5259>
add    %al,(%eax)
add    %al,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     808b71f <_IO_stdin_used+0x525b>
jne    808b76f <_IO_stdin_used+0x52ab>
jno    808b778 <_IO_stdin_used+0x52b4>
outsl  %ds:(%esi),(%dx)
je     808b76b <_IO_stdin_used+0x52a7>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    808b731 <_IO_stdin_used+0x526d>
jb     808b778 <_IO_stdin_used+0x52b4>
popa
and    %dh,%fs:0x69(%edi)
je     808b782 <_IO_stdin_used+0x52be>
and    %ch,0x54
gs
js     808b786 <_IO_stdin_used+0x52c2>
insb   (%dx),%es:(%edi)
jne    808b78a <_IO_stdin_used+0x52c6>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808b75a <_IO_stdin_used+0x5296>
and    %ah,0x69(%edi)
jbe    808b798 <_IO_stdin_used+0x52d4>
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
add    %al,(%eax)
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %dh,%gs:0x61(%eax)
je     808b7c4 <_IO_stdin_used+0x5300>
gs
jb     808b7c1 <_IO_stdin_used+0x52fd>
jae    808b775 <_IO_stdin_used+0x52b1>
insb   (%dx),%es:(%edi)
imul   $0x69206465,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     808b7d6 <_IO_stdin_used+0x5312>
outsb  %ds:(%esi),(%dx)
je     808b7e7 <_IO_stdin_used+0x5323>
and    %ch,0x66(%edi)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b7ea <_IO_stdin_used+0x5326>
imul   $0x4320676e,0x69(%esi),%ebp
inc    %ecx
inc    %ebx
dec    %eax
inc    %ebp
inc    %esp
dec    %ecx
push   %edx
cs
push   %esp
inc    %ecx
inc    %edi
sub    $0x20,%al
gs
js     808b803 <_IO_stdin_used+0x533f>
gs
jo     808b817 <_IO_stdin_used+0x5353>
and    %ah,0x6f(%esi)
jb     808b7c8 <_IO_stdin_used+0x5304>
je     808b812 <_IO_stdin_used+0x534e>
and    %dh,%gs:0x67(%ecx,%eiz,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x74(%ecx)
jae    808b81e <_IO_stdin_used+0x535a>
insb   (%dx),%es:(%edi)
data16
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x76(%ebp)
gs
jb     808b842 <_IO_stdin_used+0x537e>
je     808b833 <_IO_stdin_used+0x536f>
imul   $0x646e7520,0x67(%esi),%ebp
gs
jb     808b7f5 <_IO_stdin_used+0x5331>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b847 <_IO_stdin_used+0x5383>
imul   $0x4320676e,0x69(%esi),%ebp
inc    %ecx
inc    %ebx
dec    %eax
inc    %ebp
inc    %esp
dec    %ecx
push   %edx
cs
push   %esp
inc    %ecx
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
gs
js     808b862 <_IO_stdin_used+0x539e>
insb   (%dx),%es:(%edi)
jne    808b866 <_IO_stdin_used+0x53a2>
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b876 <_IO_stdin_used+0x53b2>
imul   $0x4320676e,0x69(%esi),%ebp
inc    %ecx
inc    %ebx
dec    %eax
inc    %ebp
inc    %esp
dec    %ecx
push   %edx
cs
push   %esp
inc    %ecx
inc    %edi
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     808b89a <_IO_stdin_used+0x53d6>
outsb  %ds:(%esi),(%dx)
je     808b8ab <_IO_stdin_used+0x53e7>
and    %ch,0x66(%edi)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b8ae <_IO_stdin_used+0x53ea>
imul   $0x4620676e,0x69(%esi),%ebp
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x20,%al
gs
js     808b8bf <_IO_stdin_used+0x53fb>
gs
jo     808b8d3 <_IO_stdin_used+0x540f>
and    %ah,0x6f(%esi)
jb     808b884 <_IO_stdin_used+0x53c0>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x74(%ecx)
jae    808b8d2 <_IO_stdin_used+0x540e>
insb   (%dx),%es:(%edi)
data16
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x76(%ebp)
gs
jb     808b8f6 <_IO_stdin_used+0x5432>
je     808b8e7 <_IO_stdin_used+0x5423>
imul   $0x646e7520,0x67(%esi),%ebp
gs
jb     808b8a9 <_IO_stdin_used+0x53e5>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b8fb <_IO_stdin_used+0x5437>
imul   $0x4620676e,0x69(%esi),%ebp
dec    %ecx
dec    %esp
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
gs
js     808b90e <_IO_stdin_used+0x544a>
insb   (%dx),%es:(%edi)
jne    808b912 <_IO_stdin_used+0x544e>
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6e6f6320,0x73(%ebp),%esp
je     808b922 <_IO_stdin_used+0x545e>
imul   $0x4620676e,0x69(%esi),%ebp
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %dh,%gs:0x65(%esi)
jb     808b94b <_IO_stdin_used+0x5487>
imul   $0x6e6f6320,0x6e(%edi),%ebp
je     808b953 <_IO_stdin_used+0x548f>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%ebx)
jae    808b95c <_IO_stdin_used+0x5498>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x76610000,0x73(%ebp),%esp
outsl  %ds:(%esi),(%dx)
imul   $0x65637365,0x64(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
imul   $0x74756120,%fs:0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     808b97a <_IO_stdin_used+0x54b6>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    808b937 <_IO_stdin_used+0x5473>
imul   $0x65726964,0x20(%esi),%ebp
arpl   %si,0x72(%edi,%ebp,2)
imul   $0x73000000,0x73(%ebp),%esp
je     808b98c <_IO_stdin_used+0x54c8>
jns    808b94d <_IO_stdin_used+0x5489>
imul   $0x61636f6c,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    808b9b3 <_IO_stdin_used+0x54ef>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     808b9b6 <_IO_stdin_used+0x54f2>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bx,%di)
arpl   %bp,0x69(%eax)
jbe    808b9bc <_IO_stdin_used+0x54f8>
add    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    808b9c4 <_IO_stdin_used+0x5500>
and    %ch,0x6e(%ecx)
je     808b9d3 <_IO_stdin_used+0x550f>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x65642820,0x73(%ebp),%esp
popaw
jne    808b9e4 <_IO_stdin_used+0x5520>
je     808b9a3 <_IO_stdin_used+0x54df>
add    %al,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     808b9a2 <_IO_stdin_used+0x54de>
jae    808b9f8 <_IO_stdin_used+0x5534>
jb     808b9ef <_IO_stdin_used+0x552b>
jo     808b9a8 <_IO_stdin_used+0x54e4>
insb   (%dx),%es:(%edi)
gs
popa
imul   $0x272f2720,%fs:0x67(%esi),%ebp
jae    808b9b5 <_IO_stdin_used+0x54f1>
data16
jb     808ba07 <_IO_stdin_used+0x5543>
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808b9a5 <_IO_stdin_used+0x54e1>
add    %al,(%eax)
add    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808b9cf <_IO_stdin_used+0x550b>
jae    808ba2a <_IO_stdin_used+0x5566>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x61203b73,0x6b(%esi),%ebp
jb     808ba1f <_IO_stdin_used+0x555b>
push   $0x20657669
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6d(%ebp,%esi,2)
jo     808b9ea <_IO_stdin_used+0x5526>
je     808ba34 <_IO_stdin_used+0x5570>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808b9f4 <_IO_stdin_used+0x5530>
je     808ba3e <_IO_stdin_used+0x557a>
gs
jns    808b9f9 <_IO_stdin_used+0x5535>
jo     808ba4a <_IO_stdin_used+0x5586>
imul   $0x6f7420,0x74(%esi),%ebp
add    %al,(%eax)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808ba0b <_IO_stdin_used+0x5547>
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x61203b73,0x6b(%esi),%ebp
jb     808ba5d <_IO_stdin_used+0x5599>
push   $0x20657669
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6d(%ebp,%esi,2)
jo     808ba28 <_IO_stdin_used+0x5564>
je     808ba72 <_IO_stdin_used+0x55ae>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ba32 <_IO_stdin_used+0x556e>
je     808ba7c <_IO_stdin_used+0x55b8>
gs
jns    808ba37 <_IO_stdin_used+0x5573>
jb     808ba7e <_IO_stdin_used+0x55ba>
data16
gs
jb     808ba3d <_IO_stdin_used+0x5579>
je     808ba8e <_IO_stdin_used+0x55ca>
add    %ah,0x65(%edx)
imul   $0x6d207461,0x20(%bp),%ebp
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %cl,0x45(%ebp)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
sub    $0x454d414e,%eax
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
imul   $0x65687420,%fs:0x67(%esi),%ebp
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808bab9 <_IO_stdin_used+0x55f5>
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    808ba7d <_IO_stdin_used+0x55b9>
jae    808bad3 <_IO_stdin_used+0x560f>
outsl  %ds:(%esi),(%dx)
jb     808bac7 <_IO_stdin_used+0x5603>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808ba89 <_IO_stdin_used+0x55c5>
outsb  %ds:(%esi),(%dx)
gs
ja     808bad2 <_IO_stdin_used+0x560e>
jb     808ba8f <_IO_stdin_used+0x55cb>
je     808bad9 <_IO_stdin_used+0x5615>
popa
outsb  %ds:(%esi),(%dx)
and    %al,0x54(%ecx,%eax,2)
inc    %ebp
sub    $0x462d524f,%eax
dec    %ecx
dec    %esp
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
arpl   %bp,0x6d(%edi)
jo     808baea <_IO_stdin_used+0x5626>
jb     808baf0 <_IO_stdin_used+0x562c>
and    %ah,0x74(%ecx,%eiz,2)
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x6e(%bx)
insb   (%dx),%es:(%edi)
jns    808bab1 <_IO_stdin_used+0x55ed>
add    %al,(%eax)
add    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808badb <_IO_stdin_used+0x5617>
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     808bb26 <_IO_stdin_used+0x5662>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808bb29 <_IO_stdin_used+0x5665>
insb   (%dx),%es:(%edi)
sub    $0x20,%al
arpl   %bp,0x6f(%eax)
outsl  %ds:(%esi),(%dx)
jae    808bb36 <_IO_stdin_used+0x5672>
and    %dh,0x65(%esi)
jb     808bb49 <_IO_stdin_used+0x5685>
imul   $0x4e4f4320,0x6e(%edi),%ebp
push   %esp
push   %edx
dec    %edi
dec    %esp
add    %al,(%eax)
add    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808bb0b <_IO_stdin_used+0x5647>
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     808bb56 <_IO_stdin_used+0x5692>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808bb59 <_IO_stdin_used+0x5695>
insb   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jbe    808bb63 <_IO_stdin_used+0x569f>
jb     808bb72 <_IO_stdin_used+0x56ae>
imul   $0x61757375,0x20(%ebp,%eiz,2),%esp
insb   (%dx),%es:(%edi)
and    %dh,0x75(%ebx)
data32 imul $0x2728,0x20(%eax),%di
jle    808bb3c <_IO_stdin_used+0x5678>
and    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
gs
jae    808bb8f <_IO_stdin_used+0x56cb>
and    %ch,0x76(%edi)
gs
jb     808bb94 <_IO_stdin_used+0x56d0>
imul   $0x7962206e,0x65(%esp,%eiz,2),%esp
and    %ah,0x6e(%ebp)
jbe    808bb98 <_IO_stdin_used+0x56d4>
jb     808bba0 <_IO_stdin_used+0x56dc>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     808bb57 <_IO_stdin_used+0x5693>
jbe    808bb9a <_IO_stdin_used+0x56d6>
jb     808bba4 <_IO_stdin_used+0x56e0>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
push   %ebx
dec    %ecx
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
sub    %eax,(%eax)
add    %al,(%eax)
jae    808bbce <_IO_stdin_used+0x570a>
jb     808bbc5 <_IO_stdin_used+0x5701>
jo     808bb7e <_IO_stdin_used+0x56ba>
dec    %esi
push   %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x6d6f6320,%fs:0x67(%esi),%ebp
jo     808bbe1 <_IO_stdin_used+0x571d>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     808bbea <_IO_stdin_used+0x5726>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808bba8 <_IO_stdin_used+0x56e4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808bc01 <_IO_stdin_used+0x573d>
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dh,0x73(%ebp)
and    %dh,%gs:0x65(%ebx)
and    %dh,%fs:0x65(%edx)
jo     808bc10 <_IO_stdin_used+0x574c>
popa
arpl   %sp,0x20(%ebp)
inc    %ebp
pop    %eax
push   %eax
push   %edx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
je     808bc2a <_IO_stdin_used+0x5766>
popa
outsb  %ds:(%esi),(%dx)
jae    808bc22 <_IO_stdin_used+0x575e>
outsl  %ds:(%esi),(%dx)
jb     808bc2c <_IO_stdin_used+0x5768>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808bbcb <_IO_stdin_used+0x5707>
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%ebp)
je     808bc3d <_IO_stdin_used+0x5779>
push   $0x20676e69
outsl  %ds:(%esi),(%dx)
jo     808bc56 <_IO_stdin_used+0x5792>
imul   $0x61282073,0x6e(%edi),%ebp
data16
data16
arpl   %si,%gs:0x62(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
je     808bc5b <_IO_stdin_used+0x5797>
and    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x6e(%ecx)
and    %ch,%fs:0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
and    %dh,%gs:0x61(%eax)
je     808bc80 <_IO_stdin_used+0x57bc>
gs
jb     808bc7d <_IO_stdin_used+0x57b9>
jae    808bc3a <_IO_stdin_used+0x5776>
cmp    (%eax),%al
add    %dh,0x61(%eax)
je     808bc8c <_IO_stdin_used+0x57c8>
gs
jb     808bc89 <_IO_stdin_used+0x57c5>
jae    808bc3d <_IO_stdin_used+0x5779>
insl   (%dx),%es:(%edi)
popa
je     808bc84 <_IO_stdin_used+0x57c0>
push   $0x6c696620
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x74(%ebx)
popa
jb     808bca6 <_IO_stdin_used+0x57e2>
add    %al,(%eax)
jo     808bc97 <_IO_stdin_used+0x57d3>
je     808bcac <_IO_stdin_used+0x57e8>
gs
jb     808bca9 <_IO_stdin_used+0x57e5>
jae    808bc5d <_IO_stdin_used+0x5799>
insl   (%dx),%es:(%edi)
popa
je     808bca4 <_IO_stdin_used+0x57e0>
push   $0x74666120
gs
jb     808bc69 <_IO_stdin_used+0x57a5>
popa
outsb  %ds:(%esi),(%dx)
jns    808bc6d <_IO_stdin_used+0x57a9>
daa
das
daa
and    %ch,(%eax)
fs
gs
popaw
jne    808bcc4 <_IO_stdin_used+0x5800>
je     808bc7a <_IO_stdin_used+0x57b6>
outsw  %ds:(%esi),(%dx)
jb     808bc7e <_IO_stdin_used+0x57ba>
gs
js     808bcc4 <_IO_stdin_used+0x5800>
insb   (%dx),%es:(%edi)
jne    808bcd7 <_IO_stdin_used+0x5813>
imul   $0x29,0x6e(%edi),%ebp
add    %ah,0x61(%ebx)
jae    808bcd5 <_IO_stdin_used+0x5811>
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    808bcdf <_IO_stdin_used+0x581b>
je     808bce1 <_IO_stdin_used+0x581d>
jbe    808bcdf <_IO_stdin_used+0x581b>
and    %ch,0x61(%ebp)
je     808bce2 <_IO_stdin_used+0x581e>
push   $0x20676e69
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    808bcf7 <_IO_stdin_used+0x5833>
je     808bcb6 <_IO_stdin_used+0x57f2>
add    %al,(%eax)
add    %dh,0x73(%ebp)
and    %dh,%gs:0x69(%edi)
insb   (%dx),%es:(%edi)
arpl   %sp,%fs:0x72(%ecx)
fs
jae    808bcbe <_IO_stdin_used+0x57fa>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    808bd11 <_IO_stdin_used+0x584d>
je     808bcc7 <_IO_stdin_used+0x5803>
outsw  %ds:(%esi),(%dx)
jb     808bccb <_IO_stdin_used+0x5807>
gs
js     808bd11 <_IO_stdin_used+0x584d>
insb   (%dx),%es:(%edi)
jne    808bd24 <_IO_stdin_used+0x5860>
imul   $0x29,0x6e(%edi),%ebp
ja     808bd23 <_IO_stdin_used+0x585f>
insb   (%dx),%es:(%edi)
arpl   %sp,%fs:0x72(%ecx)
fs
jae    808bce2 <_IO_stdin_used+0x581e>
insl   (%dx),%es:(%edi)
popa
je     808bd29 <_IO_stdin_used+0x5865>
push   $0x272f2720
and    %ch,(%eax)
fs
gs
popaw
jne    808bd3f <_IO_stdin_used+0x587b>
je     808bcf5 <_IO_stdin_used+0x5831>
outsw  %ds:(%esi),(%dx)
jb     808bcf9 <_IO_stdin_used+0x5835>
gs
js     808bd3f <_IO_stdin_used+0x587b>
insb   (%dx),%es:(%edi)
jne    808bd52 <_IO_stdin_used+0x588e>
imul   $0x65760029,0x6e(%edi),%ebp
jb     808bd4a <_IO_stdin_used+0x5886>
outsl  %ds:(%esi),(%dx)
jae    808bd50 <_IO_stdin_used+0x588c>
insb   (%dx),%es:(%edi)
jns    808bd0e <_IO_stdin_used+0x584a>
insb   (%dx),%es:(%edi)
imul   $0x6c696620,0x74(%ebx),%esi
gs
jae    808bd19 <_IO_stdin_used+0x5855>
jo     808bd6d <_IO_stdin_used+0x58a9>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    808bd66 <_IO_stdin_used+0x58a2>
add    %al,%fs:(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
jo     808bd80 <_IO_stdin_used+0x58bc>
outsl  %ds:(%esi),(%dx)
addr16 jb 808bd77 <_IO_stdin_used+0x58b3>
jae    808bd87 <_IO_stdin_used+0x58c3>
and    %ch,0x65(%ebp)
jae    808bd8c <_IO_stdin_used+0x58c8>
popa
addr16
gs
jae    808bd3e <_IO_stdin_used+0x587a>
gs
jbe    808bd86 <_IO_stdin_used+0x58c2>
jb     808bd9c <_IO_stdin_used+0x58d8>
and    %cl,0x55(%esi)
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
je     808bd94 <_IO_stdin_used+0x58d0>
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ch,%fs:(%eax)
fs
gs
popaw
jne    808bda7 <_IO_stdin_used+0x58e3>
je     808bd5d <_IO_stdin_used+0x5899>
xor    %esi,(%eax)
sub    %eax,(%eax)
add    %al,(%eax)
add    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %al,%gs:0x43(%ecx)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x6e(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
arpl   %bp,0x65(%eax)
arpl   %bp,0x70(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x70000000,0x74(%esi),%ebp
jb     808bdd4 <_IO_stdin_used+0x5910>
outsb  %ds:(%esi),(%dx)
je     808bd8e <_IO_stdin_used+0x58ca>
popa
and    %ch,0x65(%ebp)
jae    808bde7 <_IO_stdin_used+0x5923>
popa
and    %ch,%gs:0x66(%bx,%di)
and    %ch,0x6f(%esi)
je     808bd9f <_IO_stdin_used+0x58db>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x61,0x20(%ebx),%esi
jb     808bdf1 <_IO_stdin_used+0x592d>
and    %ah,0x6d(%ebp,%esi,2)
jo     808bdf7 <_IO_stdin_used+0x5933>
add    %dh,%fs:0x72(%eax)
imul   $0x746f7420,0x74(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     808be09 <_IO_stdin_used+0x5945>
jae    808bdc6 <_IO_stdin_used+0x5902>
popa
data16
je     808be0f <_IO_stdin_used+0x594b>
jb     808bdcc <_IO_stdin_used+0x5908>
jo     808be20 <_IO_stdin_used+0x595c>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    808be1d <_IO_stdin_used+0x5959>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808be27 <_IO_stdin_used+0x5963>
cmp    (%eax),%esp
ja     808be2f <_IO_stdin_used+0x596b>
je     808be30 <_IO_stdin_used+0x596c>
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
addr16 jne 808be3e <_IO_stdin_used+0x597a>
outsb  %gs:(%esi),(%dx)
je     808bdf5 <_IO_stdin_used+0x5931>
sub    $0x69727020,%eax
outsb  %ds:(%esi),(%dx)
je     808bdfd <_IO_stdin_used+0x5939>
je     808be4e <_IO_stdin_used+0x598a>
je     808be42 <_IO_stdin_used+0x597e>
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     808be4c <_IO_stdin_used+0x5988>
jae    808be09 <_IO_stdin_used+0x5945>
ja     808be53 <_IO_stdin_used+0x598f>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%eax,%ebp,2)
jae    808be13 <_IO_stdin_used+0x594f>
push   %ebx
dec    %ecx
inc    %edi
dec    %esi
inc    %ecx
dec    %esp
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ebp,%eiz,2)
imul   $0x3b646572,0x65(%esi),%esi
and    %al,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808be73 <_IO_stdin_used+0x59af>
and    %dh,%fs:0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
jae    808be38 <_IO_stdin_used+0x5974>
popa
jb     808be80 <_IO_stdin_used+0x59bc>
cmp    (%eax),%ah
push   %ebx
dec    %ecx
inc    %edi
dec    %eax
push   %ebp
push   %eax
sub    $0x20,%al
push   %ebx
dec    %ecx
inc    %edi
push   %ecx
push   %ebp
dec    %ecx
push   %esp
sub    $0x20,%al
push   %ebx
dec    %ecx
inc    %edi
dec    %ecx
dec    %esi
push   %esp
sub    $0x20,%al
push   %ebx
dec    %ecx
inc    %edi
push   %ebp
push   %ebx
push   %edx
xor    %esp,(%eax)
popa
outsb  %ds:(%esi),(%dx)
and    %dl,%fs:0x49(%ebx)
inc    %edi
push   %ebp
push   %ebx
push   %edx
xor    (%ebx),%bh
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808be75 <_IO_stdin_used+0x59b1>
ja     808bec0 <_IO_stdin_used+0x59fc>
je     808bec1 <_IO_stdin_used+0x59fd>
outsl  %ds:(%esi),(%dx)
jne    808bed0 <_IO_stdin_used+0x5a0c>
and    %dl,0x49(%ebx)
inc    %edi
and    %dh,0x72(%eax)
imul   $0x7261,%gs:0x20(%eax),%di
and    %ah,%gs:0x6c(%ecx)
jae    808bedf <_IO_stdin_used+0x5a1b>
and    %ah,0x63(%ecx)
arpl   %sp,0x70(%ebp)
je     808bedd <_IO_stdin_used+0x5a19>
add    %al,%fs:(%eax)
add    %dh,0x72(%eax)
imul   $0x6c696620,0x74(%esi),%ebp
and    %ch,%gs:0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    808beba <_IO_stdin_used+0x59f6>
imul   $0x435455,0x20(%esi),%ebp
add    %al,(%eax)
add    %dh,0x72(%eax)
imul   $0x6c696620,0x74(%esi),%ebp
and    %dh,%gs:0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
imul   $0x6c6c7566,0x20(%ebx,%esi,2),%esi
and    %dh,0x65(%edx)
jae    808bf33 <_IO_stdin_used+0x5a6f>
insb   (%dx),%es:(%edi)
jne    808bf3b <_IO_stdin_used+0x5a77>
imul   $0x68730000,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
ja     808bef1 <_IO_stdin_used+0x5a2d>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x6e,(%eax),%esp
jne    808bf47 <_IO_stdin_used+0x5a83>
bound  %esp,0x72(%ebp)
and    %dh,0x69(%edi)
je     808bf4a <_IO_stdin_used+0x5a86>
imul   $0x68637261,0x20(%esi),%ebp
imul   $0x74697720,0x65(%esi),%esi
push   $0x63616520
push   $0x73656d20
jae    808bf5d <_IO_stdin_used+0x5a99>
add    %al,%gs:(%bx,%si)
popa
jae    808bf6e <_IO_stdin_used+0x5aaa>
and    %ah,0x6f(%esi)
jb     808bf28 <_IO_stdin_used+0x5a64>
arpl   %bp,0x6e(%edi)
imul   $0x7461,0x6d(%edx),%si
imul   $0x726f6620,0x6e(%edi),%ebp
and    %ah,0x76(%ebp)
gs
jb     808bf97 <_IO_stdin_used+0x5ad3>
and    %ah,0x63(%ecx)
je     808bf8c <_IO_stdin_used+0x5ac8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     808bf4d <_IO_stdin_used+0x5a89>
jbe    808bf90 <_IO_stdin_used+0x5acc>
insb   (%dx),%es:(%edi)
imul   $0x65676e61,0x72(%eax,%eiz,1),%esp
jae    808bf5a <_IO_stdin_used+0x5a96>
outsw  %ds:(%esi),(%dx)
jb     808bf5e <_IO_stdin_used+0x5a9a>
jae    808bfae <_IO_stdin_used+0x5aea>
popa
jo     808bfb6 <_IO_stdin_used+0x5af2>
push   $0x662d746f
imul   $0x6c656966,0x20(%ebp,%eiz,2),%ebp
fs
jae    808bf53 <_IO_stdin_used+0x5a8f>
add    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,0x73(%ecx,%ebp,2)
je     808bfc7 <_IO_stdin_used+0x5b03>
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%bx)
and    %ah,0x78(%ebp)
je     808bfda <_IO_stdin_used+0x5b16>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
addr16 sub $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x63616520,0x74(%ebx),%esi
push   $0x72696420
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808bfa4 <_IO_stdin_used+0x5ae0>
je     808bfee <_IO_stdin_used+0x5b2a>
popa
je     808bfa9 <_IO_stdin_used+0x5ae5>
outsl  %fs:(%esi),(%dx)
gs
jae    808bfae <_IO_stdin_used+0x5aea>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808bfb2 <_IO_stdin_used+0x5aee>
insl   (%dx),%es:(%edi)
popa
je     808bff9 <_IO_stdin_used+0x5b35>
push   $0x61657320
jb     808c000 <_IO_stdin_used+0x5b3c>
push   $0x69726320
je     808c009 <_IO_stdin_used+0x5b45>
jb     808c00f <_IO_stdin_used+0x5b4b>
popa
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     808bfcd <_IO_stdin_used+0x5b09>
imul   $0x726f,0x20(%ebp,%eiz,2),%bp
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808c021 <_IO_stdin_used+0x5b5d>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808bfe3 <_IO_stdin_used+0x5b1f>
popa
data16
je     808c02c <_IO_stdin_used+0x5b68>
jb     808bfe9 <_IO_stdin_used+0x5b25>
je     808c03d <_IO_stdin_used+0x5b79>
popa
outsb  %ds:(%esi),(%dx)
jae    808c035 <_IO_stdin_used+0x5b71>
outsl  %ds:(%esi),(%dx)
jb     808c03f <_IO_stdin_used+0x5b7b>
popa
je     808c03e <_IO_stdin_used+0x5b7a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%ebx)
je     808bffc <_IO_stdin_used+0x5b38>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     808c04f <_IO_stdin_used+0x5b8b>
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%bp,%di)
jns    808c059 <_IO_stdin_used+0x5b95>
cmp    %gs:(%eax),%esp
jae    808c057 <_IO_stdin_used+0x5b93>
and    %ah,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808c01a <_IO_stdin_used+0x5b56>
outsw  %ds:(%esi),(%dx)
jb     808c01e <_IO_stdin_used+0x5b5a>
jbe    808c061 <_IO_stdin_used+0x5b9d>
insb   (%dx),%es:(%edi)
imul   $0x454c5954,0x53(%eax,%eiz,1),%esp
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    808c074 <_IO_stdin_used+0x5bb0>
jae    808c011 <_IO_stdin_used+0x5b4d>
add    %al,(%eax)
add    %ah,0x64(%ecx)
imul   $0x6c6c616e,%fs:0x6f(%ecx,%ebp,2),%esi
6c
jns    808c041 <_IO_stdin_used+0x5b7d>
jno    808c098 <_IO_stdin_used+0x5bd4>
outsl  %ds:(%esi),(%dx)
je     808c08b <_IO_stdin_used+0x5bc7>
and    %ah,0x68(%ebx)
popa
jb     808c08d <_IO_stdin_used+0x5bc9>
arpl   %si,0x72(%ebp,%eiz,2)
jae    808c052 <_IO_stdin_used+0x5b8e>
data16
jb     808c0a4 <_IO_stdin_used+0x5be0>
insl   (%dx),%es:(%edi)
and    %dl,0x54(%ebx)
push   %edx
dec    %ecx
dec    %esi
inc    %edi
add    %al,(%eax)
add    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jno    808c0bf <_IO_stdin_used+0x5bfb>
outsl  %ds:(%esi),(%dx)
je     808c0b6 <_IO_stdin_used+0x5bf2>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp)
jb     808c074 <_IO_stdin_used+0x5bb0>
arpl   %bp,0x61(%eax)
jb     808c0ba <_IO_stdin_used+0x5bf6>
arpl   %si,0x72(%ebp,%eiz,2)
jae    808c07f <_IO_stdin_used+0x5bbb>
data16
jb     808c0d1 <_IO_stdin_used+0x5c0d>
insl   (%dx),%es:(%edi)
and    %dl,0x54(%ebx)
push   %edx
dec    %ecx
dec    %esi
inc    %edi
add    %al,(%eax)
ja     808c0d6 <_IO_stdin_used+0x5c12>
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     808c0e0 <_IO_stdin_used+0x5c1c>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x20,%al
jae    808c0de <_IO_stdin_used+0x5c1a>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x646c6f2d
sub    $0x68637261,%eax
imul   $0x6877203b,0x65(%esi),%esi
outsb  %gs:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     808c10d <_IO_stdin_used+0x5c49>
popa
arpl   %si,0x6e(%ecx,%ebp,2)
addr16 sub $0x20,%al
jae    808c106 <_IO_stdin_used+0x5c42>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x2d6f6e2d
jae    808c113 <_IO_stdin_used+0x5c4f>
insl   (%dx),%es:(%edi)
gs
sub    $0x656e776f,%eax
jb     808c0bb <_IO_stdin_used+0x5bf7>
add    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jne    808c139 <_IO_stdin_used+0x5c75>
and    %ch,%gs:0x66(%edi)
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%eax)
je     808c139 <_IO_stdin_used+0x5c75>
outsb  %ds:(%esi),(%dx)
je     808c140 <_IO_stdin_used+0x5c7c>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    808c0fc <_IO_stdin_used+0x5c38>
push   $0x666d7261
jne    808c14f <_IO_stdin_used+0x5c8b>
and    %ch,0x70(%edi)
je     808c151 <_IO_stdin_used+0x5c8d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    808c0ec <_IO_stdin_used+0x5c28>
fsubs  -0x5f77f7fa(%eax)
push   %es
or     %bl,-0x5ff7f960(%eax)
mov    0xa0a80806,%al
push   %es
or     %dh,-0x47f7f960(%eax)
mov    0xa0c00806,%al
push   %es
or     %cl,%al
mov    0xa0d00806,%al
push   %es
or     %bh,%bh
lods   %ds:(%esi),%eax
push   %es
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,-0x5ff7f953(%eax)
lods   %ds:(%esi),%eax
push   %es
or     %ah,-0x5ff7f953(%eax)
lods   %ds:(%esi),%eax
push   %es
or     %ah,-0x5ff7f953(%eax)
lods   %ds:(%esi),%eax
push   %es
or     %ah,-0x5ff7f953(%eax)
lods   %ds:(%esi),%eax
push   %es
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %al,-0x521ff7fa(%ebp,%ebp,4)
push   %es
or     %cl,%bh
lods   %ds:(%esi),%al
push   %es
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %bh,0x2f0806ac(%ebx)
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %ch,-0x2df7f954(%ebp)
lods   %ds:(%esi),%eax
push   %es
or     %ch,%dh
lods   %ds:(%esi),%eax
push   %es
or     %dl,-0x53(%esi)
push   %es
or     %bl,%dh
lods   %ds:(%esi),%al
push   %es
or     %al,%al
scas   %es:(%edi),%eax
push   %es
or     %bl,0x3a0806af(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %bl,-0x4f(%edx)
push   %es
or     %ah,%ah
mov    $0x6,%bh
or     %cl,0x6(%ecx,%esi,4)
or     %bh,(%esi)
mov    $0x6,%cl
or     %bl,0xc0806b1
mov    $0x6,%cl
or     %bh,%bh
mov    $0x6,%al
or     %ah,%al
mov    $0x6,%al
or     %bl,-0x50(%esi)
push   %es
or     %ah,%ah
mov    $0x6,%bh
or     %ch,%dh
mov    $0x6,%al
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %cl,0x6(%eax,%esi,4)
or     %bl,%ch
scas   %es:(%edi),%eax
push   %es
or     %al,(%ebx,%esi,4)
push   %es
or     %ah,%cl
mov    $0x6,%dl
or     %ah,%ah
mov    $0x6,%bh
or     %dh,0x1f0806b2(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %ch,-0x65f7f94e(%eax)
mov    $0x6,%dl
or     %cl,0x780806b2(%ecx)
mov    $0x6,%dl
or     %ah,-0x4e(%edi)
push   %es
or     %bl,-0x4e(%ecx)
push   %es
or     %cl,-0x4e(%eax)
push   %es
or     %bh,(%ecx)
mov    $0x6,%dl
or     %ch,(%eax)
mov    $0x6,%dl
or     %ah,%ah
mov    $0x6,%bh
or     %cl,(%edx)
mov    $0x6,%dl
or     %bh,%ah
mov    $0x6,%cl
or     %dl,%dl
mov    $0x6,%cl
or     %dh,-0x66f7f94f(%ecx)
mov    $0x6,%cl
or     %cl,0x680806b1(%ebx)
mov    $0x6,%cl
or     %ah,%ah
mov    $0x6,%bh
or     %bl,%dh
mov    $0x6,%dh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %ah,%ah
mov    $0x6,%bh
or     %al,%bl
mov    $0x6,%dh
or     %dh,0x640806b6(%ecx)
mov    $0x6,%dh
or     %al,-0x4a(%edi)
push   %es
or     %bh,(%ecx)
mov    $0x6,%dh
or     %dh,%bh
mov    $0x6,%ch
or     %ch,%al
mov    $0x6,%ch
or     %bl,%dl
mov    $0x6,%ch
or     %cl,%ah
mov    $0x6,%ch
or     %ch,-0x6af7f94b(%ebx)
mov    $0x6,%ch
or     %dh,-0x4b(%edx)
push   %es
or     %cl,-0x4b(%edi)
push   %es
or     %ch,-0x4b0ef7fa(,%esi,4)
push   %es
or     %cl,0x6f0806b7(%esi)
mov    $0x6,%bh
or     %dl,-0x49(%eax)
push   %es
or     %bh,0x2f0806b7
mov    $0x6,%bh
or     %ah,(%ecx)
mov    $0x6,%bh
or     %bh,%dh
mov    $0x6,%dh
or     %ch,%bh
mov    $0x6,%dh
or     %dl,%dh
mov    $0x6,%bh
or     %cl,%al
mov    $0x6,%bh
or     %bh,-0x52f7f949(%ebx)
mov    $0x6,%bh
or     %dl,0x610806a8(%edx)
test   $0x6,%al
or     %dl,-0x51(%edi)
push   %es
or     %cl,0xa0806af(%ebp)
scas   %es:(%edi),%eax
push   %es
or     %dl,%ch
scas   %es:(%edi),%al
push   %es
or     %ch,-0x51(%eax)
push   %es
or     %dl,%dh
cmpsb  %es:(%edi),%ds:(%esi)
push   %es
or     %al,%ah
scas   %es:(%edi),%al
push   %es
or     %ch,0x370806ae(%ebx)
scas   %es:(%edi),%eax
push   %es
or     %ch,(%ecx)
scas   %es:(%edi),%eax
push   %es
or     %bl,(%ebx)
scas   %es:(%edi),%eax
push   %es
or     %cl,%dh
scas   %es:(%edi),%eax
push   %es
or     %bl,0x490806ae(%ebp)
scas   %es:(%edi),%eax
push   %es
or     %al,%bh
test   $0x6,%al
or     %ah,0x500806a6(%ebx)
test   $0x6,%al
or     %bh,(%edi)
test   $0x6,%al
or     %ch,(%esi)
test   $0x6,%al
or     %bl,0xc0806a8
test   $0x6,%al
or     %bh,%dh
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %ch,%bh
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %bl,%ch
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %cl,%ah
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %bh,-0x4ff7f959(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
push   %es
or     %bl,-0x59(%esi)
push   %es
or     %dl,-0x59(%eax)
push   %es
or     %al,-0x59(%ebp)
push   %es
or     %bl,-0x5374f7fa(%esp,%ebp,4)
push   %es
or     %dl,%al
stos   %eax,%es:(%edi)
push   %es
or     %dh,%dh
test   $0xa9e50806,%eax
push   %es
or     %bl,-0x34f7f957(%ecx)
cmpsb  %es:(%edi),%ds:(%esi)
push   %es
or     %bl,%al
test   $0x6,%al
or     %bh,(%edx)
test   $0xa9290806,%eax
push   %es
or     %bh,-0x54(%ebp)
push   %es
or     %ch,-0x54(%edi)
push   %es
or     %ah,-0x54(%ecx)
push   %es
or     %dl,0x6(%esp,%ebp,4)
or     %al,-0x54(%edi)
push   %es
or     %dh,(%esi)
lods   %ds:(%esi),%al
push   %es
or     %bl,(%ebx)
lods   %ds:(%esi),%al
push   %es
or     %dh,%bl
stos   %eax,%es:(%edi)
push   %es
or     %bh,-0x5cf7f958(%ecx)
test   $0x6,%al
or     %ah,%bl
mov    $0x6,%ah
or     %dl,%dl
mov    $0x6,%ah
or     %dl,-0x4c(%ebp)
push   %es
or     %cl,(%ecx)
mov    $0x6,%ah
or     %bh,-0x19f7f94c(%ebp)
mov    $0x6,%bl
or     %bh,-0x4d(%ecx)
push   %es
or     %bl,-0x4d(%edi)
push   %es
or     %dl,-0x4d(%eax)
push   %es
or     %al,-0x4d(%edx)
push   %es
or     %dh,(%ebx,%esi,4)
push   %es
or     %ah,(%edi)
mov    $0x6,%bl
or     %cl,0x7f0806ae(%esi)
scas   %es:(%edi),%al
push   %es
or     %ch,-0x52(%ebp)
push   %es
or     %dl,-0x52(%edx)
push   %es
or     %bh,(%ecx)
scas   %es:(%edi),%al
push   %es
or     %bh,(%ecx)
scas   %es:(%edi),%al
push   %es
or     %dl,%bh
mov    $0xbccd0804,%esp
add    $0x8,%al
int    $0xbc
add    $0x8,%al
sub    %edi,-0x42caf7fc(%ebp)
add    $0x8,%al
inc    %ebp
mov    $0xbd5b0804,%ebp
add    $0x8,%al
jbe    808c487 <_IO_stdin_used+0x5fc3>
add    $0x8,%al
int    $0xbc
add    $0x8,%al
cmpb   $0x0,0x804(%ecx)
add    %ch,0xa080894(%eax)
add    %al,(%eax)
add    %ch,0xa080894(%ebx)
add    %al,(%eax)
add    %dh,0xc080894(%eax)
add    %al,(%eax)
add    %dh,0xc080894(%ebx)
add    %al,(%eax)
add    %bh,0x1080894(%eax)
add    %al,(%eax)
add    %bh,0x1080894(%ebx)
add    %al,(%eax)
add    %bh,0x2080894(%edi)
add    %al,(%eax)
add    %al,%dl
xchg   %eax,%esp
or     %cl,(%eax)
add    (%eax),%al
add    %al,(%eax)
(bad)
xchg   %eax,%esp
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
leave
xchg   %eax,%esp
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%dl
xchg   %eax,%esp
or     %cl,(%eax)
notb   0x894f908(%eax,%ecx,1)
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%ch
xchg   %eax,%esp
or     %cl,(%eax)
add    %edx,-0x6af3f7f8(%ebp)
or     %cl,(%eax)
adc    %dl,-0x6aeaf7f8(%ebp)
or     %cl,(%eax)
sbb    -0x6ae0f7f8(%ebp),%dl
or     %cl,(%eax)
sub    -0x6acbf7f8(%ebp),%dl
or     %cl,(%eax)
cmp    -0x6ab8f7f8(%ebp),%edx
or     %cl,(%eax)
push   %esp
xchg   %eax,%ebp
or     %cl,(%eax)
pop    %esp
xchg   %eax,%ebp
or     %cl,(%eax)
popa
xchg   %eax,%ebp
or     %cl,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%ebp
or     %cl,(%eax)
jne    808c553 <_IO_stdin_used+0x608f>
or     %cl,(%eax)
jns    808c557 <_IO_stdin_used+0x6093>
or     %cl,(%eax)
adcl   $0x8,-0x6a74f7f8(%ebp)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,0x3f080895(%edx)
pushf
or     %cl,(%eax)
inc    %edi
dec    %esi
push   %ebp
and    %ah,(%edi)
je     808c668 <_IO_stdin_used+0x61a4>
jb     808c630 <_IO_stdin_used+0x616c>
and    %dh,0x61(%ebx)
jbe    808c673 <_IO_stdin_used+0x61af>
jae    808c630 <_IO_stdin_used+0x616c>
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
jns    808c635 <_IO_stdin_used+0x6171>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
addr16
gs
je     808c689 <_IO_stdin_used+0x61c5>
gs
jb     808c644 <_IO_stdin_used+0x6180>
imul   $0x2061206f,0x74(%esi),%ebp
jae    808c696 <_IO_stdin_used+0x61d2>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %dh,%gs:0x70(%ecx,%eiz,2)
and    %ch,%gs:0x72(%edi)
and    %ah,0x73(%ecx,%ebp,2)
imul   $0x61,(%eax),%esp
jb     808c6a5 <_IO_stdin_used+0x61e1>
push   $0x2c657669
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
jae    808c6c8 <_IO_stdin_used+0x6204>
outsl  %ds:(%esi),(%dx)
jb     808c6bc <_IO_stdin_used+0x61f8>
and    %ch,0x6e(%ecx)
imul   $0x6c617564,%fs:0x69(%esi),%esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808c689 <_IO_stdin_used+0x61c5>
data16
jb     808c6db <_IO_stdin_used+0x6217>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808c6de <_IO_stdin_used+0x621a>
or     %cs:(%edx),%cl
inc    %ebp
js     808c6e0 <_IO_stdin_used+0x621c>
insl   (%dx),%es:(%edi)
jo     808c6ee <_IO_stdin_used+0x622a>
gs
jae    808c6bf <_IO_stdin_used+0x61fb>
or     (%eax),%ah
and    %dh,0x72(%ecx,%eiz,2)
and    %ch,0x61206663
jb     808c6f6 <_IO_stdin_used+0x6232>
push   $0x2e657669
je     808c6fb <_IO_stdin_used+0x6237>
jb     808c6bc <_IO_stdin_used+0x61f8>
outsw  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%edx)
jb     808c6c4 <_IO_stdin_used+0x6200>
and    %ah,(%ebx)
and    %al,0x72(%ebx)
gs
popa
je     808c712 <_IO_stdin_used+0x624e>
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808c71a <_IO_stdin_used+0x6256>
je,pn  808c719 <_IO_stdin_used+0x6255>
jb     808c6da <_IO_stdin_used+0x6216>
data16
jb     808c72c <_IO_stdin_used+0x6268>
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808c6e5 <_IO_stdin_used+0x6221>
outsw  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x61(%edx)
jb     808c6ff <_IO_stdin_used+0x623b>
or     (%eax),%ah
and    %dh,0x72(%ecx,%eiz,2)
and    %ch,0x20667674
popa
jb     808c743 <_IO_stdin_used+0x627f>
push   $0x2e657669
je     808c748 <_IO_stdin_used+0x6284>
jb     808c709 <_IO_stdin_used+0x6245>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    (%eax),%esp
dec    %esp
imul   $0x6c6c6120,0x74(%ebx),%esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808c722 <_IO_stdin_used+0x625e>
imul   $0x68637261,0x20(%esi),%ebp
imul   $0x7261742e,0x65(%esi),%esi
and    %dh,0x65(%esi)
jb     808c777 <_IO_stdin_used+0x62b3>
outsl  %ds:(%esi),(%dx)
jae    808c77d <_IO_stdin_used+0x62b9>
insb   (%dx),%es:(%edi)
jns    808c749 <_IO_stdin_used+0x6285>
or     (%eax),%ah
and    %dh,0x72(%ecx,%eiz,2)
and    %ch,0x61206678
jb     808c78c <_IO_stdin_used+0x62c8>
push   $0x2e657669
je     808c791 <_IO_stdin_used+0x62cd>
jb     808c752 <_IO_stdin_used+0x628e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%ebx)
and    %al,0x78(%ebp)
je     808c7b3 <_IO_stdin_used+0x62ef>
popa
arpl   %si,0x61(%eax,%eiz,1)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    808c76f <_IO_stdin_used+0x62ab>
data16
jb     808c7c1 <_IO_stdin_used+0x62fd>
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    808c7c0 <_IO_stdin_used+0x62fc>
je,pn  808c7bf <_IO_stdin_used+0x62fb>
jb     808c78e <_IO_stdin_used+0x62ca>
or     (%ebx),%cl
push   %esp
push   $0x61622065
arpl   %bp,0x75(%ebx)
jo     808c78d <_IO_stdin_used+0x62c9>
jae    808c7e4 <_IO_stdin_used+0x6320>
data32 imul $0x7369,0x20(%eax),%di
and    %ah,(%edi)
jle    808c7a1 <_IO_stdin_used+0x62dd>
sub    $0x20,%al
jne    808c7ec <_IO_stdin_used+0x6328>
insb   (%dx),%es:(%edi)
gs
jae    808c7f5 <_IO_stdin_used+0x6331>
and    %dh,0x65(%ebx)
je     808c7a7 <_IO_stdin_used+0x62e3>
ja     808c7f2 <_IO_stdin_used+0x632e>
je     808c7f3 <_IO_stdin_used+0x632f>
and    %ch,0x6675732d
imul   $0x726f,0x20(%eax),%di
and    %dl,0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
or     %cs:0x65(%eax,%ebp,2),%dl
and    %dh,0x65(%esi)
jb     808c829 <_IO_stdin_used+0x6365>
imul   $0x6e6f6320,0x6e(%edi),%ebp
je     808c831 <_IO_stdin_used+0x636d>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x61(%ebp)
jns    808c7e6 <_IO_stdin_used+0x6322>
bound  %esp,0x20(%ebp)
jae    808c830 <_IO_stdin_used+0x636c>
je     808c7ed <_IO_stdin_used+0x6329>
ja     808c838 <_IO_stdin_used+0x6374>
je     808c839 <_IO_stdin_used+0x6375>
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
outsl  %ds:(%esi),(%dx)
jb     808c7fe <_IO_stdin_used+0x633a>
push   %esi
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
sub    $0x20,%al
jbe    808c852 <_IO_stdin_used+0x638e>
insb   (%dx),%es:(%edi)
jne    808c859 <_IO_stdin_used+0x6395>
jae    808c816 <_IO_stdin_used+0x6352>
popa
jb     808c85e <_IO_stdin_used+0x639a>
cmp    (%edx),%cl
or     (%eax),%ah
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
data16
data16
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
jbe    808c877 <_IO_stdin_used+0x63b3>
jb     808c834 <_IO_stdin_used+0x6370>
insl   (%dx),%es:(%edi)
popa
imul   $0x62,0x20(%ebp),%esp
popa
arpl   %bp,0x75(%ebx)
jo     808c893 <_IO_stdin_used+0x63cf>
or     (%eax),%ah
and    %dh,0x20(%esp,%ebp,1)
outsb  %ds:(%esi),(%dx)
jne    808c896 <_IO_stdin_used+0x63d2>
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x6e,0x20(%ebp),%esp
jne    808c8a8 <_IO_stdin_used+0x63e4>
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808c8bb <_IO_stdin_used+0x63f7>
or     (%eax),%ah
and    %ch,0x69(%esi)
insb   (%dx),%es:(%edi)
sub    $0x20,%al
gs
js     808c8bc <_IO_stdin_used+0x63f8>
jae    808c8c9 <_IO_stdin_used+0x6405>
imul   $0x6e202020,0x67(%esi),%ebp
jne    808c8cb <_IO_stdin_used+0x6407>
bound  %esp,0x72(%ebp)
gs and %ch,%fs:%gs:0x66(%ecx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     808c8ea <_IO_stdin_used+0x6426>
and    %ah,0x78(%ebp)
imul   $0x6973202c,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     808c8f0 <_IO_stdin_used+0x642c>
and    %ch,%gs:0x74(%edi)
push   $0x69777265
jae    808c8f4 <_IO_stdin_used+0x6430>
or     (%eax),%ah
and    %ch,0x65(%esi)
jbe    808c8fb <_IO_stdin_used+0x6437>
jb     808c8c4 <_IO_stdin_used+0x6400>
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     808c90a <_IO_stdin_used+0x6446>
and    %ah,%gs:(%eax)
and    %ah,0x6c(%ecx)
ja     808c907 <_IO_stdin_used+0x6443>
jns    808c91b <_IO_stdin_used+0x6457>
and    %ch,0x61(%ebp)
imul   $0x73,0x20(%ebp),%esp
imul   $0x6220656c,0x70(%ebp),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     808c92f <_IO_stdin_used+0x646b>
or     (%eax),%al
add    %al,(%eax)
lock cltd
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
pop    %es
lcall  $0x0,$0x20808
dec    %edx
lcall  $0x0,$0x30808
pop    %eax
lcall  $0x0,$0x40808
cs
lcall  $0x0,$0x60808
push   %edx
lcall  $0x0,$0x40808
add    %al,(%eax)
addb   $0x6,-0x40(%eax,%edi,2)
or     %ah,-0x5ff7f940(%eax)
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0x800806c0,%al
rolb   $0x8,(%esi)
mov    %al,%al
push   %es
or     %ah,-0x5ff7f940(%eax)
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
nop
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0xa00806c0,%al
rolb   $0x8,(%esi)
mov    0x980806c0,%al
rolb   $0x8,(%esi)
jo     808c96a <_IO_stdin_used+0x64a6>
push   %es
or     %bh,-0x3bf7f93a(%edx)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
jne    808c99c <_IO_stdin_used+0x64d8>
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %dh,-0x3a(%ebp)
push   %es
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
dec    %esp
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
and    %esi,%eax
push   %es
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
cli
lds    (%esi),%eax
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
lock lds (%esi),%eax
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
out    %al,$0xc5
push   %es
or     %bl,%ah
lds    (%esi),%eax
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
rol    %cl,%ch
push   %es
or     %al,%ah
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
test   $0xc40806c5,%eax
movb   $0x8,(%esi)
mov    %al,0xc40806c5
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
(bad)
movb   $0x8,(%esi)
fwait
lds    (%esi),%eax
or     %al,%ah
movb   $0x8,(%esi)
xchg   %eax,%esp
lds    (%esi),%eax
or     %ch,-0x3b(%ebx)
push   %es
or     %al,-0x3b(%ebp)
push   %es
or     %ah,0x6c(%esi)
popa
addr16 jae 808cb33 <_IO_stdin_used+0x666f>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    808cb6b <_IO_stdin_used+0x66a7>
outsl  %ds:(%esi),(%dx)
jb     808cb75 <_IO_stdin_used+0x66b1>
and    %ah,0x6c(%esi)
popa
cmp    (%bx,%si),%ah
and    $0x6e490063,%eax
jbe    808cb77 <_IO_stdin_used+0x66b3>
insb   (%dx),%es:(%edi)
imul   $0x736e6172,0x74(%eax,%eiz,1),%esp
outsw  %ds:(%esi),(%dx)
jb     808cb90 <_IO_stdin_used+0x66cc>
and    %ah,0x78(%ebp)
jo     808cb9a <_IO_stdin_used+0x66d6>
gs
jae    808cb9e <_IO_stdin_used+0x66da>
imul   $0x6e550000,0x6e(%edi),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%esi)
popa
and    %ch,0x6e(%bx,%di)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    808cbac <_IO_stdin_used+0x66e8>
outsl  %ds:(%esi),(%dx)
jb     808cbb6 <_IO_stdin_used+0x66f2>
and    %ah,0x78(%ebp)
jo     808cbc0 <_IO_stdin_used+0x66fc>
gs
jae    808cbc4 <_IO_stdin_used+0x6700>
imul   $0x6325203a,0x6e(%edi),%ebp
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    808cbc1 <_IO_stdin_used+0x66fd>
insb   (%dx),%es:(%edi)
imul   $0x736e6172,0x74(%eax,%eiz,1),%esp
outsw  %ds:(%esi),(%dx)
jb     808cbda <_IO_stdin_used+0x6716>
and    %ah,0x78(%ebp)
jo     808cbe4 <_IO_stdin_used+0x6720>
gs
jae    808cbe8 <_IO_stdin_used+0x6724>
imul   $0x7325203a,0x6e(%edi),%ebp
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    808cbe5 <_IO_stdin_used+0x6721>
insb   (%dx),%es:(%edi)
imul   $0x736e6172,0x74(%eax,%eiz,1),%esp
outsw  %ds:(%esi),(%dx)
jb     808cbfe <_IO_stdin_used+0x673a>
and    %dh,0x65(%edx)
jo     808cc02 <_IO_stdin_used+0x673e>
popa
arpl   %sp,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     808cbd8 <_IO_stdin_used+0x6714>
and    %ah,0x61(%edx)
arpl   %bp,0x20(%ebx)
jb     808cc0b <_IO_stdin_used+0x6747>
data16
gs
jb     808cc0f <_IO_stdin_used+0x674b>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
jne    808cc25 <_IO_stdin_used+0x6761>
and    %ch,0x66(%edi)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:(%di)
jae    808cbf8 <_IO_stdin_used+0x6734>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x68(%ebx)
jb     808cc29 <_IO_stdin_used+0x6765>
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    808cbee <_IO_stdin_used+0x672a>
and    $0x79622073,%eax
je     808cc3a <_IO_stdin_used+0x6776>
jae    808cbd7 <_IO_stdin_used+0x6713>
and    $0x46203a73,%eax
imul   $0x61726873,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x62,(%eax),%esp
jns    808cc0a <_IO_stdin_used+0x6746>
and    $0x79622073,%eax
je     808cc56 <_IO_stdin_used+0x6792>
add    %al,(%eax)
add    %ah,-0x2d(%eax)
push   %es
or     %cl,0x600806d3(%eax)
roll   %cl,(%esi)
or     %ah,-0x55f7f92e(%eax)
rolb   %cl,(%esi)
or     %ch,-0x2d(%eax)
push   %es
or     %bh,%al
roll   %cl,(%esi)
or     %ch,(%esp,%edx,8)
push   %es
or     %ah,-0x2d(%eax)
push   %es
or     %ch,(%esp,%edx,8)
push   %es
or     %ah,-0x2d(%eax)
push   %es
or     %dl,0x54(%ebp)
inc    %esi
sub    $0x6f6e0038,%eax
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x6f(%esi)
sub    $0x772d2d00,%eax
popa
jb     808cca3 <_IO_stdin_used+0x67df>
imul   $0x6f6c6100,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
sub    $0x6f72657a,%eax
sub    $0x636f6c62,%eax
imul   $0x62,(%eax),%eax
popa
fs
sub    $0x706d7564,%eax
imul   $0x68636163,%fs:0x0(%edx),%esi
gs imul $0x746e6f63,%fs:%gs:0x0(%edx),%esi
74
imul   $0x2d73756f,0x75(%edi),%esp
arpl   %sp,0x73(%ecx)
je     808cc6f <_IO_stdin_used+0x67ab>
imul   $0x6863,0x2d(%ebp,%eiz,2),%bp
popa
outsb  %ds:(%esi),(%dx)
gs add %ah,%fs:%gs:0x69(%bp)
insb   (%dx),%es:(%edi)
gs
sub    $0x6f6e6769,%eax
jb     808ccec <_IO_stdin_used+0x6828>
add    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
sub    $0x6f6d6572,%eax
jbe    808ccf9 <_IO_stdin_used+0x6835>
add    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
sub    $0x61726873,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x66,(%eax),%eax
imul   $0x68636e75,0x2d(%ebp,%eiz,2),%ebp
popa
outsb  %ds:(%esi),(%dx)
gs add %ah,%fs:%gs:0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x68746977,%eax
sub    $0x736c756e,%eax
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     808cd2f <_IO_stdin_used+0x686b>
sub    $0x68637261,%eax
imul   $0x6e676900,0x65(%esi),%esi
outsl  %ds:(%esi),(%dx)
jb     808cd3e <_IO_stdin_used+0x687a>
sub    $0x6577656e,%eax
jb     808cce0 <_IO_stdin_used+0x681c>
outsb  %ds:(%esi),(%dx)
gs
ja     808cd11 <_IO_stdin_used+0x684d>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    808ccee <_IO_stdin_used+0x682a>
jb     808cd55 <_IO_stdin_used+0x6891>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    808ccff <_IO_stdin_used+0x683b>
jae    808cd7a <_IO_stdin_used+0x68b6>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x7361632d,0x6b(%esi),%ebp
je     808cd0c <_IO_stdin_used+0x6848>
je     808cd77 <_IO_stdin_used+0x68b3>
insl   (%dx),%es:(%edi)
gs
jae    808cd86 <_IO_stdin_used+0x68c2>
popa
insl   (%dx),%es:(%edi)
jo     808cd16 <_IO_stdin_used+0x6852>
jne    808cd86 <_IO_stdin_used+0x68c2>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
sub    $0x74736163,%eax
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
sub    $0x7779656b,%eax
outsl  %ds:(%esi),(%dx)
jb     808cd96 <_IO_stdin_used+0x68d2>
add    %bh,0x64(%eax)
gs
jbe    808cd38 <_IO_stdin_used+0x6874>
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     808cdb1 <_IO_stdin_used+0x68ed>
gs
jae    808cdb5 <_IO_stdin_used+0x68f1>
sub    $0x676f7270,%eax
jb     808cdaa <_IO_stdin_used+0x68e6>
insl   (%dx),%es:(%edi)
add    %ah,0x78(%ebp)
imul   $0x2d676e69,0x74(%ebx),%esi
imul   $0x6178,0x0(%ebp,%eiz,2),%bp
je     808cdd1 <_IO_stdin_used+0x690d>
jb     808cd8c <_IO_stdin_used+0x68c8>
ja     808cdd3 <_IO_stdin_used+0x690f>
imul   $0x0,0x0(%ebp,%eiz,2),%esi
add    %al,(%eax)
add    %ch,%bl
fwait
or     %cl,(%eax)
cmp    %ecx,%esp
or     %cl,(%eax)
dec    %edx
int3
or     %cl,(%eax)
push   %esi
int3
or     %cl,(%eax)
pop    %edi
int3
or     %cl,(%eax)
outsl  %ds:(%esi),(%dx)
int3
or     %cl,(%eax)
jl     808cd66 <_IO_stdin_used+0x68a2>
or     %cl,(%eax)
mov    %ecx,%esp
or     %cl,(%eax)
xchg   %eax,%esi
int3
or     %cl,(%eax)
mov    %al,0xb10808cc
int3
or     %cl,(%eax)
(bad)
int3
or     %cl,(%eax)
ror    %cl,%esp
or     %cl,(%eax)
loopne 808cd82 <_IO_stdin_used+0x68be>
or     %cl,(%eax)
out    %al,(%dx)
int3
or     %cl,(%eax)
dec    %esp
or     %cl,(%eax)
or     $0xcd,%al
or     %cl,(%eax)
push   %ss
int    $0x8
or     %ah,(%ebx)
int    $0x8
or     %dh,(%ebx)
int    $0x8
or     %bh,(%eax)
int    $0x8
or     %cl,-0x33(%ebx)
or     %cl,(%eax)
pop    %ecx
int    $0x8
or     %ch,0x80899(%ecx)
add    %al,(%eax)
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     808ce5a <_IO_stdin_used+0x6996>
insl   (%dx),%es:(%edi)
pop    %edi
je     808ce54 <_IO_stdin_used+0x6990>
js     808ce65 <_IO_stdin_used+0x69a1>
add    %dh,0x73(%ebp)
gs
jb     808ce25 <_IO_stdin_used+0x6961>
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
pop    %edi
push   $0x615f7361
arpl   %bp,0x61(%edi,%ebx,2)
je     808ce08 <_IO_stdin_used+0x6944>
popa
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     808ce6f <_IO_stdin_used+0x69ab>
imul   $0x7461,0x5f(%ebp,%eiz,2),%bp
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
je     808ce8d <_IO_stdin_used+0x69c9>
pop    %edi
je     808ce86 <_IO_stdin_used+0x69c2>
js     808ce97 <_IO_stdin_used+0x69d3>
add    %ch,0x69(%esp,%ebp,2)
jae    808ce9d <_IO_stdin_used+0x69d9>
js     808ce8c <_IO_stdin_used+0x69c8>
je     808cea1 <_IO_stdin_used+0x69dd>
jb     808ce90 <_IO_stdin_used+0x69cc>
je     808ce31 <_IO_stdin_used+0x696d>
data16
insb   (%dx),%es:(%edi)
imul   $0x74746178,0x74(%ebx),%esi
jb     808ce3c <_IO_stdin_used+0x6978>
insb   (%dx),%es:(%edi)
addr16
gs
je     808ceb9 <_IO_stdin_used+0x69f5>
popa
je     808ceb8 <_IO_stdin_used+0x69f4>
jb     808cea7 <_IO_stdin_used+0x69e3>
je     808ce48 <_IO_stdin_used+0x6984>
data16
addr16
gs
je     808cec5 <_IO_stdin_used+0x6a01>
popa
je     808cec4 <_IO_stdin_used+0x6a00>
jb     808ce52 <_IO_stdin_used+0x698e>
data16
addr16
gs
je     808cebd <_IO_stdin_used+0x69f9>
imul   $0x6c006e6f,0x63(%ebp,%eiz,2),%ebp
addr16
gs
je     808cec9 <_IO_stdin_used+0x6a05>
imul   $0x74616e6f,0x63(%ebp,%eiz,2),%ebp
add    %ch,0x65(%ebx,%esi,2)
je     808ced7 <_IO_stdin_used+0x6a13>
imul   $0x74616e6f,0x63(%ebp,%eiz,2),%ebp
add    %dh,0x65(%ebx)
je     808cef6 <_IO_stdin_used+0x6a32>
popa
je     808cef5 <_IO_stdin_used+0x6a31>
jb     808cee4 <_IO_stdin_used+0x6a20>
je     808ce85 <_IO_stdin_used+0x69c1>
insb   (%dx),%es:(%edi)
jae    808ceed <_IO_stdin_used+0x6a29>
je     808cf02 <_IO_stdin_used+0x6a3e>
popa
je     808cf01 <_IO_stdin_used+0x6a3d>
jb     808ce8f <_IO_stdin_used+0x69cb>
jae    808cef6 <_IO_stdin_used+0x6a32>
arpl   %si,0x72(%ebp)
imul   $0x61706163,0x2e(%ecx,%edi,2),%esi
bound  %ebp,0x6c(%ecx)
imul   $0x3a732020,0x0(%ecx,%edi,2),%esi
and    %ah,0x20000a73
and    %ah,0x3a(%ecx)
and    %al,(%eax)
fs
gs
popaw
jne    808cf24 <_IO_stdin_used+0x6a60>
je     808cef4 <_IO_stdin_used+0x6a30>
add    %ah,(%eax)
and    %bh,0x3a(%eax)
and    %ah,0x2520756c
jae    808ced1 <_IO_stdin_used+0x6a0d>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    808cf33 <_IO_stdin_used+0x6a6f>
je     808cf2f <_IO_stdin_used+0x6a6b>
imul   $0x7461,0x5f(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cf00 <_IO_stdin_used+0x6a3c>
jae    808cf47 <_IO_stdin_used+0x6a83>
je     808cf04 <_IO_stdin_used+0x6a40>
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
and    %al,0x43(%ecx)
dec    %esp
jae    808cf0f <_IO_stdin_used+0x6a4b>
outsw  %ds:(%esi),(%dx)
jb     808cf13 <_IO_stdin_used+0x6a4f>
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    808cf23 <_IO_stdin_used+0x6a5f>
add    %al,(%eax)
add    %al,(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cf2b <_IO_stdin_used+0x6a67>
jae    808cf72 <_IO_stdin_used+0x6aae>
je     808cf2f <_IO_stdin_used+0x6a6b>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     808cf81 <_IO_stdin_used+0x6abd>
js     808cf92 <_IO_stdin_used+0x6ace>
and    %ah,0x6f(%esi)
jb     808cf43 <_IO_stdin_used+0x6a7f>
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    808cf53 <_IO_stdin_used+0x6a8f>
add    %al,(%eax)
add    %al,(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cf5b <_IO_stdin_used+0x6a97>
jae    808cfa2 <_IO_stdin_used+0x6ade>
je     808cf5f <_IO_stdin_used+0x6a9b>
daa
and    $0x65202773,%eax
js     808cfbb <_IO_stdin_used+0x6af7>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x74(%ecx)
je     808cfc3 <_IO_stdin_used+0x6aff>
imul   $0x66206574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
jb     808cf7b <_IO_stdin_used+0x6ab7>
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    808cf8b <_IO_stdin_used+0x6ac7>
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cf90 <_IO_stdin_used+0x6acc>
and    $0x73250073,%eax
cmp    (%eax),%ah
push   %edi
popa
jb     808cfe9 <_IO_stdin_used+0x6b25>
imul   $0x6143203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cfa7 <_IO_stdin_used+0x6ae3>
and    $0x73250073,%eax
cmp    (%eax),%ah
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cfb5 <_IO_stdin_used+0x6af1>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x6f(%di)
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
and    $0x78650073,%eax
arpl   %ax,%gs:(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808cfd7 <_IO_stdin_used+0x6b13>
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
and    $0x6b6d0073,%eax
imul   $0x69666b6d,%fs:0x0(%edx),%esi
outsw  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,%fs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x646d7200,0x6b(%esi),%ebp
imul   $0x65766173,0x0(%edx),%esi
imul   $0x203a7325,%fs:0x0(%edx),%esi
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d021 <_IO_stdin_used+0x6b5d>
jae    808d068 <_IO_stdin_used+0x6ba4>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x74730073
popa
je     808d011 <_IO_stdin_used+0x6b4d>
je     808d085 <_IO_stdin_used+0x6bc1>
jne    808d083 <_IO_stdin_used+0x6bbf>
arpl   %sp,0x74(%ecx)
add    %dh,%gs:0x74(%ebp)
imul   $0x69617700,0x65(%ebp),%ebp
je     808d095 <_IO_stdin_used+0x6bd1>
imul   $0x72696468,0x63(%eax,%eax,1),%esp
add    %al,(%eax)
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d05b <_IO_stdin_used+0x6b97>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x77(%bx)
outsb  %ds:(%esi),(%dx)
gs
jb     808d0bb <_IO_stdin_used+0x6bf7>
push   $0x74207069
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%ebp)
and    %ah,%fs:0x202c756c
imul   $0x756c25,0x20(%si),%esp
and    $0x52203a73,%eax
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     808d0dc <_IO_stdin_used+0x6c18>
jb     808d08f <_IO_stdin_used+0x6bcb>
popa
je     808d092 <_IO_stdin_used+0x6bce>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     808d0e8 <_IO_stdin_used+0x6c24>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     808d0f6 <_IO_stdin_used+0x6c32>
jae    808d093 <_IO_stdin_used+0x6bcf>
add    %ah,0x52203a73
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     808d110 <_IO_stdin_used+0x6c4c>
jb     808d0c3 <_IO_stdin_used+0x6bff>
popa
je     808d0c6 <_IO_stdin_used+0x6c02>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     808d11c <_IO_stdin_used+0x6c58>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     808d12a <_IO_stdin_used+0x6c66>
add    %al,(%eax)
add    %ah,0x57203a73
popa
jb     808d13e <_IO_stdin_used+0x6c7a>
imul   $0x6552203a,0x67(%esi),%ebp
popa
and    %ah,%fs:0x72(%ebp)
jb     808d14d <_IO_stdin_used+0x6c89>
jb     808d100 <_IO_stdin_used+0x6c3c>
popa
je     808d103 <_IO_stdin_used+0x6c3f>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     808d159 <_IO_stdin_used+0x6c95>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     808d167 <_IO_stdin_used+0x6ca3>
jae    808d104 <_IO_stdin_used+0x6c40>
and    $0x57203a73,%eax
popa
jb     808d17a <_IO_stdin_used+0x6cb6>
imul   $0x6552203a,0x67(%esi),%ebp
popa
and    %ah,%fs:0x72(%ebp)
jb     808d189 <_IO_stdin_used+0x6cc5>
jb     808d13c <_IO_stdin_used+0x6c78>
popa
je     808d13f <_IO_stdin_used+0x6c7b>
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x77202c73
push   $0x20656c69
jb     808d195 <_IO_stdin_used+0x6cd1>
popa
imul   $0x756c2520,%fs:0x67(%esi),%ebp
and    %ah,0x79(%edx)
je     808d1a3 <_IO_stdin_used+0x6cdf>
add    %al,(%eax)
and    $0x57203a73,%eax
popa
jb     808d1b6 <_IO_stdin_used+0x6cf2>
imul   $0x6143203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d174 <_IO_stdin_used+0x6cb0>
jae    808d1bb <_IO_stdin_used+0x6cf7>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x25000073
jae    808d19d <_IO_stdin_used+0x6cd9>
and    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d18b <_IO_stdin_used+0x6cc7>
arpl   %si,0x65(%edx)
popa
je     808d1d6 <_IO_stdin_used+0x6d12>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
and    $0x73250073,%eax
cmp    (%eax),%ah
push   %edi
jb     808d1f6 <_IO_stdin_used+0x6d32>
je     808d1ee <_IO_stdin_used+0x6d2a>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808d1af <_IO_stdin_used+0x6ceb>
and    $0x6f20756c,%eax
data16
and    %ah,0x6220756c
jns    808d211 <_IO_stdin_used+0x6d4d>
gs
jae    808d1a0 <_IO_stdin_used+0x6cdc>
and    $0x57203a73,%eax
jb     808d216 <_IO_stdin_used+0x6d52>
je     808d20e <_IO_stdin_used+0x6d4a>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    808d1cf <_IO_stdin_used+0x6d0b>
and    $0x6f20756c,%eax
data16
and    %ah,0x6220756c
jns    808d231 <_IO_stdin_used+0x6d6d>
add    %al,%gs:(%eax)
push   %ebx
jne    808d225 <_IO_stdin_used+0x6d61>
jae    808d239 <_IO_stdin_used+0x6d75>
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
pusha
cs
daa
and    %ah,0x6f(%esi)
jb     808d1f5 <_IO_stdin_used+0x6d31>
gs
insl   (%dx),%es:(%edi)
jo     808d24d <_IO_stdin_used+0x6d89>
jns    808d1fb <_IO_stdin_used+0x6d37>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
push   %ebx
jne    808d24d <_IO_stdin_used+0x6d89>
jae    808d261 <_IO_stdin_used+0x6d9d>
imul   $0x20676e69,0x74(%ebp,%esi,2),%esi
pusha
cs
daa
and    %ah,0x6f(%esi)
jb     808d21d <_IO_stdin_used+0x6d59>
gs
insl   (%dx),%es:(%edi)
jo     808d275 <_IO_stdin_used+0x6db1>
jns    808d223 <_IO_stdin_used+0x6d5f>
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x72617420,0x6b(%esi),%ebp
addr16
gs
je     808d214 <_IO_stdin_used+0x6d50>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808d283 <_IO_stdin_used+0x6dbf>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
popa
imul   $0x73256020,%fs:0x67(%esi),%ebp
daa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    808d23c <_IO_stdin_used+0x6d78>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808d2ab <_IO_stdin_used+0x6de7>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
popa
imul   $0x73256020,%fs:0x67(%esi),%ebp
daa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x61(%eax)
jb     808d2bf <_IO_stdin_used+0x6dfb>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,(%eax),%esp
popa
jb     808d2cc <_IO_stdin_used+0x6e08>
gs
je     808d2db <_IO_stdin_used+0x6e17>
add    %al,(%eax)
add    %al,(%eax)
rcl    $0x8,%cl
or     %ch,%al
rorl   (%eax)
or     %dl,(%edx,%edx,8)
or     %cl,(%eax)
cmp    $0xd2,%al
or     %cl,(%eax)
sub    $0x6143006c,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d2a6 <_IO_stdin_used+0x6de2>
gs
js     808d2ee <_IO_stdin_used+0x6e2a>
arpl   %si,0x74(%ebp)
and    %dh,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     808d2f9 <_IO_stdin_used+0x6e35>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %cl,0x25(%edi)
jae    808d2a9 <_IO_stdin_used+0x6de5>
add    %ah,0x43002064
or     (%eax),%al
push   %edx
and    $0xa756c,%eax
push   %edi
and    $0xa756c,%eax
dec    %esp
and    $0x64250a73,%eax
or     (%eax),%al
dec    %ecx
and    $0x73250a64,%eax
or     (%eax),%al
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d2eb <_IO_stdin_used+0x6e27>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
and    %ah,0x72203a73
gs
jae    808d34d <_IO_stdin_used+0x6e89>
insb   (%dx),%es:(%edi)
jbe    808d346 <_IO_stdin_used+0x6e82>
and    %ah,0x61(%esi)
imul   $0x0,0x64(%ebp,%eiz,2),%ebp
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     808d313 <_IO_stdin_used+0x6e4f>
jb     808d35a <_IO_stdin_used+0x6e96>
imul   $0x66207463,%fs:0x65(%edx),%esi
imul   $0x726f6620,0x73(%ebp,%eiz,2),%ebp
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     808d371 <_IO_stdin_used+0x6ead>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,(%edi)
fs
gs
jbe    808d347 <_IO_stdin_used+0x6e83>
outsb  %ds:(%esi),(%dx)
jne    808d387 <_IO_stdin_used+0x6ec3>
insb   (%dx),%es:(%edi)
add    %ch,(%edi)
fs
gs
jbe    808d351 <_IO_stdin_used+0x6e8d>
data16
jne    808d391 <_IO_stdin_used+0x6ecd>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
and    $0x203a6434,%eax
and    $0x25203a70,%eax
and    (%eax),%esi
xor    $0x78,%al
and    %ch,(%eax)
and    $0x253a2973,%eax
jae    808d386 <_IO_stdin_used+0x6ec2>
add    %ah,0x203a6434
and    $0x25203a70,%eax
and    (%eax),%esi
xor    $0x78,%al
and    %ch,(%eax)
and    $0x253a2973,%eax
sub    %cs:0x3b(%ebx),%dh
add    %ah,0x62(%ecx)
arpl   %sp,0x66(%ebp,%eiz,2)
inc    %ecx
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
add    %ah,(%eax)
and    (%eax),%al
and    $0x32302525,%eax
pop    %eax
add    %ah,0x6f3330
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     808d3f8 <_IO_stdin_used+0x6f34>
jb     808d38b <_IO_stdin_used+0x6ec7>
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x6f(%edi)
jb     808d3fb <_IO_stdin_used+0x6f37>
jae    808d409 <_IO_stdin_used+0x6f45>
insb   (%dx),%es:(%edi)
imul   $0x65676173,0x75(%eax,%eiz,1),%esi
add    %dh,0x6e(%ebp)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ah,0x75(%ebx)
jb     808d41e <_IO_stdin_used+0x6f5a>
jns    808d3d4 <_IO_stdin_used+0x6f10>
bound  %esi,0x61(%edx)
arpl   %sp,0x0(%ebp)
jne    808d42a <_IO_stdin_used+0x6f66>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
jbe    808d427 <_IO_stdin_used+0x6f63>
jb     808d431 <_IO_stdin_used+0x6f6d>
popa
bound  %ebp,0x0(%ebp,%eiz,2)
imul   $0x65207475,0x70(%esi),%ebp
js     808d43e <_IO_stdin_used+0x6f7a>
popa
jne    808d44c <_IO_stdin_used+0x6f88>
je     808d440 <_IO_stdin_used+0x6f7c>
add    %dh,%fs:0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     808d458 <_IO_stdin_used+0x6f94>
jb     808d3eb <_IO_stdin_used+0x6f27>
and    %cl,(%ecx)
or     (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jo     808d468 <_IO_stdin_used+0x6fa4>
je     808d42f <_IO_stdin_used+0x6f6b>
and    $0x3b732a2e,%eax
add    %dl,0x65(%edx)
jae    808d473 <_IO_stdin_used+0x6faf>
popa
jb     808d476 <_IO_stdin_used+0x6fb2>
cmp    0x3b732a2e,%ah
add    %cl,0x6e(%ecx)
imul   $0x696c206c,0x61(%ecx,%ebp,2),%esi
jae    808d489 <_IO_stdin_used+0x6fc5>
cmp    (%eax),%al
inc    %ecx
data16
je     808d480 <_IO_stdin_used+0x6fbc>
jb     808d43d <_IO_stdin_used+0x6f79>
push   %edi
push   %ebx
and    %dh,0x69(%edx,%esi,2)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
imul   $0x7845003a,0x67(%esi),%ebp
jo     808d48f <_IO_stdin_used+0x6fcb>
outsb  %ds:(%esi),(%dx)
fs gs and %ch,%fs:%gs:0x73(%ecx,%ebp,2)
je     808d472 <_IO_stdin_used+0x6fae>
add    %al,0x66(%ecx)
je     808d4a2 <_IO_stdin_used+0x6fde>
jb     808d45f <_IO_stdin_used+0x6f9b>
jno    808d4b6 <_IO_stdin_used+0x6ff2>
outsl  %ds:(%esi),(%dx)
je     808d4a9 <_IO_stdin_used+0x6fe5>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    808d4ac <_IO_stdin_used+0x6fe8>
insb   (%dx),%es:(%edi)
cmp    (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
gs
jae    808d4b8 <_IO_stdin_used+0x6ff4>
gs and %ch,%fs:%gs:0x73(%ecx,%ebp,2)
je     808d497 <_IO_stdin_used+0x6fd3>
add    %ch,0x69(%ebp)
jae    808d4d5 <_IO_stdin_used+0x7011>
imul   $0x6f6c6320,0x67(%esi),%ebp
jae    808d4d4 <_IO_stdin_used+0x7010>
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%bx,%di)
outsl  %ds:(%esi),(%dx)
je     808d4d8 <_IO_stdin_used+0x7014>
add    %ch,0x69(%ebp)
jae    808d4eb <_IO_stdin_used+0x7027>
imul   $0x6f6c6320,0x67(%esi),%ebp
jae    808d4ea <_IO_stdin_used+0x7026>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
arpl   %sp,(%eax)
sub    %dh,0x74(%ebx)
popa
jb     808d501 <_IO_stdin_used+0x703d>
and    %ch,0x65(%esi)
popa
jb     808d4b3 <_IO_stdin_used+0x6fef>
and    0x29756c,%esp
add    %al,(%eax)
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x206e6f69,0x74(%ebp,%esi,2),%esi
imul   $0x20746f6e,0x20(%ebx),%esi
jns    808d51f <_IO_stdin_used+0x705b>
je     808d4dc <_IO_stdin_used+0x7018>
jae    808d533 <_IO_stdin_used+0x706f>
jo     808d530 <_IO_stdin_used+0x706c>
outsl  %ds:(%esi),(%dx)
jb     808d537 <_IO_stdin_used+0x7073>
gs add %al,%fs:%gs:(%eax)
add    %ah,(%ecx)
and    (%ebx),%ah
and    $0x25,%al
es
daa
sub    %ch,(%ecx)
sub    (%ebx),%ch
sub    $0x2d,%al
cs
das
cmp    (%ebx),%bh
cmp    $0x3d,%al
ds
aas
inc    %eax
pop    %ebx
pop    %esp
pop    %ebp
pop    %esi
pop    %edi
pusha
jnp    808d562 <_IO_stdin_used+0x709e>
jge    808d566 <_IO_stdin_used+0x70a2>
add    %al,(%eax)
add    %al,(%eax)
ja     808d54f <_IO_stdin_used+0x708b>
jb     808d55e <_IO_stdin_used+0x709a>
imul   $0x6e75203a,0x67(%esi),%ebp
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
jbe    808d562 <_IO_stdin_used+0x709e>
jb     808d56c <_IO_stdin_used+0x70a8>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
pusha
and    $0x27732a2e,%eax
add    %al,(%eax)
push   %eax
sbb    $0x7,%al
or     %ch,0x1c(%eax)
pop    %es
or     %ch,-0x4ff7f8e4(%eax)
sbb    (%edi),%eax
or     %dl,%ah
sbb    (%edi),%eax
or     %cl,(%eax)
sbb    $0x7,%al
or     %ah,(%eax)
sbb    $0x7,%al
or     %bh,(%eax)
sbb    $0x7,%al
or     %ch,0x6e(%ecx)
jbe    808d595 <_IO_stdin_used+0x70d1>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     808d561 <_IO_stdin_used+0x709d>
and    $0x6f662073,%eax
jb     808d568 <_IO_stdin_used+0x70a4>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    808d5c1 <_IO_stdin_used+0x70fd>
jne    808d5c7 <_IO_stdin_used+0x7103>
and    %ah,0x72(%ecx)
addr16 jne 808d5c7 <_IO_stdin_used+0x7103>
outsb  %gs:(%esi),(%dx)
je     808d57e <_IO_stdin_used+0x70ba>
and    $0x6f662073,%eax
jb     808d585 <_IO_stdin_used+0x70c1>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     808d5ea <_IO_stdin_used+0x7126>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x5b200073,%eax
sub    $0x5d7325,%eax
and    %bl,0x2d(%ebx)
sub    $0x3d5b7325,%eax
and    $0x5d5d73,%eax
and    %bl,0x2d(%ebx)
sub    $0x253d7325,%eax
jae    808d605 <_IO_stdin_used+0x7141>
add    %ah,(%eax)
pop    %ebx
sub    $0x5d73252d,%eax
add    %ah,(%eax)
pop    %ebx
sub    $0x255b6325,%eax
jae    808d617 <_IO_stdin_used+0x7153>
pop    %ebp
add    %bl,0x2d(%ebx)
and    $0x73252063,%eax
pop    %ebp
add    %ah,0x72(%ecx)
addr16 jo 808d5f7 <_IO_stdin_used+0x7133>
push   $0x2e706c65
arpl   %ax,(%eax)
push   $0x21006c6f
and    %ch,(%eax)
sub    %ch,0x70(%edi)
je     808d650 <_IO_stdin_used+0x718c>
sub    %ebp,0x616c663e
addr16 jae 808d606 <_IO_stdin_used+0x7142>
and    %dh,%es:(%eax)
js     808d61f <_IO_stdin_used+0x715b>
sub    %eax,(%eax)
outsb  %gs:(%esi),(%dx)
je     808d663 <_IO_stdin_used+0x719f>
imul   $0x20262620,0x73(%ebp),%esp
jae    808d662 <_IO_stdin_used+0x719e>
outsl  %ds:(%esi),(%dx)
jb     808d671 <_IO_stdin_used+0x71ad>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     808d675 <_IO_stdin_used+0x71b1>
imul   $0x6e550073,0x6e(%edi),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
jae    808d686 <_IO_stdin_used+0x71c2>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     808d688 <_IO_stdin_used+0x71c4>
jb     808d61b <_IO_stdin_used+0x7157>
fs
jne    808d68e <_IO_stdin_used+0x71ca>
sub    $0x73677261,%eax
add    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
add    %al,0x61(%edi)
jb     808d698 <_IO_stdin_used+0x71d4>
popa
and    %ch,%gs:0x6e(%bx,%di)
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
cmp    (%eax),%ah
and    $0x6d720073,%eax
popa
jb     808d6bb <_IO_stdin_used+0x71f7>
imul   $0x706c6568,0x0(%esi),%ebp
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%al
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     808d6a2 <_IO_stdin_used+0x71de>
and    %al,(%eax)
and    %bl,0x4f(%ebx)
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
cs
cs
cs
pop    %ebp
add    %bl,0x25(%ebx)
jae    808d6d8 <_IO_stdin_used+0x7214>
add    %ch,0x73252d
cmp    $0x5b007325,%eax
cmp    $0x5d7325,%eax
push   %edx
gs
jo     808d6fe <_IO_stdin_used+0x723a>
jb     808d705 <_IO_stdin_used+0x7241>
and    %ah,0x75(%edx)
addr16 jae 808d6b7 <_IO_stdin_used+0x71f3>
je     808d708 <_IO_stdin_used+0x7244>
and    %ah,0xa2e73
fs
jne    808d712 <_IO_stdin_used+0x724e>
sub    $0x73677261,%eax
sub    $0x65746f6e,%eax
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jb     808d726 <_IO_stdin_used+0x7262>
sub    $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ch,0x6e(%edi,%ebp,2)
addr16 sub $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ah,0x63(%edi,%ebp,2)
sub    $0x2d74706f,%eax
arpl   %bp,0x6c(%edi)
add    %ch,0x70(%edi)
je     808d705 <_IO_stdin_used+0x7241>
outsl  %fs:(%esi),(%dx)
arpl   %bp,0x6c6f63
push   $0x65646165
jb     808d714 <_IO_stdin_used+0x7250>
arpl   %bp,0x6c(%edi)
add    %dh,0x73(%ebp)
popa
addr16
gs
sub    $0x65646e69,%eax
outsb  %ds:(%esi),(%dx)
je     808d6f8 <_IO_stdin_used+0x7234>
push   $0x3e2d6c6f
outsb  %gs:(%esi),(%dx)
je     808d773 <_IO_stdin_used+0x72af>
imul   $0x20262620,0x73(%ebp),%esp
push   $0x3e2d6c6f
jae    808d777 <_IO_stdin_used+0x72b3>
outsl  %ds:(%esi),(%dx)
jb     808d786 <_IO_stdin_used+0x72c2>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     808d78a <_IO_stdin_used+0x72c6>
imul   $0x68000073,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
sub    $0x6d756e3e,%eax
pop    %edi
outsb  %gs:(%esi),(%dx)
je     808d79b <_IO_stdin_used+0x72d7>
imul   $0x203d3c20,0x73(%ebp),%esp
sub    %ch,(%eax)
jae    808d79d <_IO_stdin_used+0x72d9>
jp     808d79b <_IO_stdin_used+0x72d7>
pop    %edi
je     808d762 <_IO_stdin_used+0x729e>
and    %ch,0x2f202931
and    %dh,0x69(%ebx)
jp     808d7a9 <_IO_stdin_used+0x72e5>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
jae    808d7be <_IO_stdin_used+0x72fa>
jb     808d7c1 <_IO_stdin_used+0x72fd>
arpl   %si,0x68(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     808d7c9 <_IO_stdin_used+0x7305>
jns    808d782 <_IO_stdin_used+0x72be>
add    %al,(%eax)
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     808d7d6 <_IO_stdin_used+0x7312>
imul   $0x203d3c20,0x73(%ebp),%esp
sub    %ch,(%eax)
jae    808d7d8 <_IO_stdin_used+0x7314>
jp     808d7d6 <_IO_stdin_used+0x7312>
pop    %edi
je     808d79d <_IO_stdin_used+0x72d9>
and    %ch,0x2f202931
and    %dh,0x69(%ebx)
jp     808d7e4 <_IO_stdin_used+0x7320>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
jae    808d7f9 <_IO_stdin_used+0x7335>
jb     808d7fc <_IO_stdin_used+0x7338>
arpl   %si,0x68(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
je     808d804 <_IO_stdin_used+0x7340>
jns    808d7bd <_IO_stdin_used+0x72f9>
add    %al,(%eax)
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     808d811 <_IO_stdin_used+0x734d>
insl   (%dx),%es:(%edi)
gs
je     808d819 <_IO_stdin_used+0x7355>
jb     808d7d6 <_IO_stdin_used+0x7312>
jb     808d81d <_IO_stdin_used+0x7359>
jno    808d82f <_IO_stdin_used+0x736b>
imul   $0x20612073,0x65(%edx),%esi
jbe    808d824 <_IO_stdin_used+0x7360>
insb   (%dx),%es:(%edi)
jne    808d82b <_IO_stdin_used+0x7367>
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     808d841 <_IO_stdin_used+0x737d>
insl   (%dx),%es:(%edi)
gs
je     808d849 <_IO_stdin_used+0x7385>
jb     808d806 <_IO_stdin_used+0x7342>
insl   (%dx),%es:(%edi)
jne    808d85c <_IO_stdin_used+0x7398>
je     808d80b <_IO_stdin_used+0x7347>
bound  %esp,0x20(%ebp)
jo     808d85f <_IO_stdin_used+0x739b>
jae    808d85b <_IO_stdin_used+0x7397>
je     808d85d <_IO_stdin_used+0x7399>
jbe    808d85b <_IO_stdin_used+0x7397>
add    %al,(%eax)
and    $0x3a732a2e,%eax
and    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x52(%ecx)
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
and    %dh,0x61(%eax)
jb     808d879 <_IO_stdin_used+0x73b5>
insl   (%dx),%es:(%edi)
gs
je     808d881 <_IO_stdin_used+0x73bd>
jb     808d81e <_IO_stdin_used+0x735a>
add    %al,(%eax)
inc    %ecx
push   %edx
inc    %edi
push   %eax
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
pop    %edi
inc    %esi
dec    %ebp
push   %esp
cmp    (%eax),%ah
and    $0x61762073,%eax
insb   (%dx),%es:(%edi)
jne    808d89c <_IO_stdin_used+0x73d8>
and    %ch,0x73(%ecx)
and    %ch,0x73(%ebp,%eiz,2)
jae    808d860 <_IO_stdin_used+0x739c>
je     808d8aa <_IO_stdin_used+0x73e6>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
and    %ah,0x71(%ebp)
jne    808d8ad <_IO_stdin_used+0x73e9>
insb   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
and    $0x72540073,%eax
jns    808d878 <_IO_stdin_used+0x73b4>
daa
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ch,0x72(%edi)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
jne    808d8e2 <_IO_stdin_used+0x741e>
popa
addr16
gs
daa
and    %ah,0x6f(%esi)
jb     808d898 <_IO_stdin_used+0x73d4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     808d8e1 <_IO_stdin_used+0x741d>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     808d8f0 <_IO_stdin_used+0x742c>
popa
je     808d8ef <_IO_stdin_used+0x742b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %cl,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     808d902 <_IO_stdin_used+0x743e>
jb     808d90e <_IO_stdin_used+0x744a>
and    %ch,0x72(%edi)
and    %ch,0x70(%edi)
je     808d906 <_IO_stdin_used+0x7442>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ecx)
addr16 jne 808d914 <_IO_stdin_used+0x7450>
outsb  %gs:(%esi),(%dx)
je     808d91e <_IO_stdin_used+0x745a>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     808d921 <_IO_stdin_used+0x745d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    808d8dc <_IO_stdin_used+0x7418>
popa
jb     808d924 <_IO_stdin_used+0x7460>
and    %ah,0x6c(%ecx)
jae    808d933 <_IO_stdin_used+0x746f>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     808d93b <_IO_stdin_used+0x7477>
jb     808d947 <_IO_stdin_used+0x7483>
and    %ch,0x72(%edi)
and    %ch,0x70(%edi)
je     808d93f <_IO_stdin_used+0x747b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     808d8ff <_IO_stdin_used+0x743b>
popa
outsb  %ds:(%esi),(%dx)
jns    808d903 <_IO_stdin_used+0x743f>
arpl   %bp,0x72(%edi)
jb     808d94d <_IO_stdin_used+0x7489>
jae    808d95a <_IO_stdin_used+0x7496>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6f687320,%fs:0x67(%esi),%ebp
jb     808d96a <_IO_stdin_used+0x74a6>
and    %ch,0x70(%edi)
je     808d964 <_IO_stdin_used+0x74a0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    808d92d <_IO_stdin_used+0x7469>
add    %ch,0x6f(%eax)
insb   (%dx),%es:(%edi)
pop    %edi
popa
jo     808d977 <_IO_stdin_used+0x74b3>
outsb  %gs:(%esi),(%dx)
add    %ch,%fs:0x61(%ebp)
imul   $0x68,0x5f(%ebp),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %bl,(%ebx)
(bad)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lahf
(bad)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
(bad)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x808d6,%ebx
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x8d6,$0x8
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
aam    $0xd6
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
loopne 808d940 <_IO_stdin_used+0x747c>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
jmp    808d94c <_IO_stdin_used+0x7488>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
dec    %edi
(bad)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xor    (%esi),%esi
xor    %dh,(%eax)
add    %bh,(%edi)
aas
aas
add    %ch,0x203a6325
and    $0x2d2d0073,%eax
and    $0x25203a73,%eax
jae    808d9b2 <_IO_stdin_used+0x74ee>
and    $0x54203a73,%eax
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    808d9df <_IO_stdin_used+0x751b>
popa
jb     808da29 <_IO_stdin_used+0x7565>
jne    808da31 <_IO_stdin_used+0x756d>
outsb  %gs:(%esi),(%dx)
je     808da3b <_IO_stdin_used+0x7577>
or     (%eax),%al
insb   (%dx),%es:(%edi)
imul   $0x69727000,0x63(%edx),%esp
outsb  %ds:(%esi),(%dx)
je     808d9f5 <_IO_stdin_used+0x7531>
jo     808da49 <_IO_stdin_used+0x7585>
outsl  %ds:(%esi),(%dx)
addr16 jb 808da3c <_IO_stdin_used+0x7578>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%esi)
jb     808da54 <_IO_stdin_used+0x7590>
imul   $0x76696700,0x6e(%edi),%ebp
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    808da0f <_IO_stdin_used+0x754b>
push   $0x20706c65
insb   (%dx),%es:(%edi)
imul   $0x76696700,0x74(%ebx),%esi
and    %ah,%gs:0x20(%ecx)
jae    808da6a <_IO_stdin_used+0x75a6>
outsl  %ds:(%esi),(%dx)
jb     808da79 <_IO_stdin_used+0x75b5>
and    %dh,0x73(%ebp)
popa
and    %ch,%gs:0x65(%di)
jae    808da83 <_IO_stdin_used+0x75bf>
popa
add    %dh,%gs:0x72(%bx,%si)
outsl  %ds:(%esi),(%dx)
addr16 jb 808da7b <_IO_stdin_used+0x75b7>
insl   (%dx),%es:(%edi)
sub    $0x656d616e,%eax
add    %dh,0x65(%ebx)
je     808da45 <_IO_stdin_used+0x7581>
je     808da8f <_IO_stdin_used+0x75cb>
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 808da90 <_IO_stdin_used+0x75cc>
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x41(%eax)
dec    %esi
inc    %edi
add    %dl,0x45(%ebx)
inc    %ebx
push   %ebx
add    %ch,(%eax)
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
sub    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%esi)
jb     808daca <_IO_stdin_used+0x7606>
imul   $0x6f6e6b20,0x6e(%edi),%ebp
ja     808dace <_IO_stdin_used+0x760a>
and    %edi,(%edi)
add    %al,(%eax)
push   $0x20676e61
outsw  %ds:(%esi),(%dx)
jb     808da8d <_IO_stdin_used+0x75c9>
push   %ebx
inc    %ebp
inc    %ebx
push   %ebx
and    %dh,0x65(%ebx)
arpl   %bp,0x6e(%edi)
fs
jae    808da9a <_IO_stdin_used+0x75d6>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    808daed <_IO_stdin_used+0x7629>
je     808daa3 <_IO_stdin_used+0x75df>
xor    (%esi),%esi
xor    %dh,(%eax)
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
sub    %esp,(%eax)
dec    %edi
jo     808db27 <_IO_stdin_used+0x7663>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    808db28 <_IO_stdin_used+0x7664>
and    %ch,%fs:0x61(%eax)
jbe    808db27 <_IO_stdin_used+0x7663>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x3f2164,0x65(%edx),%edi
add    %al,(%eax)
add    %al,(%eax)
fisttpl (%eax)
or     %dh,0x7d(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,%dl
(bad)  (%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ch
(bad)  (%eax)
or     %dl,0x0(%esi)
add    %al,(%eax)
iret
(bad)  (%eax)
or     %bh,%bh
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %ah,-0x25(%eax)
or     %cl,(%eax)
xor    %bh,0x7(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %cl,%dl
(bad)  (%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x2a(%edi)
or     %cl,(%eax)
aas
add    %al,(%eax)
add    %ah,%ch
(bad)  (%eax)
or     %bh,%bh
(bad)
(bad)
lcall  *-0x2f7f72d(%ebp)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%cl
(bad)  (%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx,%ebx,8)
or     %cl,(%eax)
(bad)
(bad)
(bad)
ljmp   *-0x64(%ebp)
or     %cl,(%eax)
add    (%eax),%al
add    %al,(%eax)
and    %ebx,%edx
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
fimull %ss:(%eax)
or     %bh,%ah
(bad)
(bad)
(bad)
cmp    %edx,%ebx
or     %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
fimull %fs:(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi,%edx,2)
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
add    %ch,0x66(%edi)
data16
add    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     808dc5e <_IO_stdin_used+0x779a>
add    %ch,%gs:0x65(%esi)
jbe    808dc5d <_IO_stdin_used+0x7799>
jb     808dbfa <_IO_stdin_used+0x7736>
gs
js     808dc66 <_IO_stdin_used+0x77a2>
jae    808dc73 <_IO_stdin_used+0x77af>
imul   $0x6c696e00,0x67(%esi),%ebp
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,(%esi)
int3
or     %cl,(%eax)
jmp    f510e524 <_end+0xed06ffc0>
fisttpl (%eax)
or     %dh,%ah
fisttpl (%eax)
or     %bh,%dl
fisttpl (%eax)
or     %al,(%ebx)
fmull  (%eax)
or     %al,(%edi)
fmull  (%eax)
or     %bl,0x80892(%edi)
add    %al,(%eax)
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     808dc70 <_IO_stdin_used+0x77ac>
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     808dcdb <_IO_stdin_used+0x7817>
jb     808dca6 <_IO_stdin_used+0x77e2>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     808dcf4 <_IO_stdin_used+0x7830>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     808dcc4 <_IO_stdin_used+0x7800>
arpl   %si,%ds:0x72(%ebp)
jo,pn  808dd12 <_IO_stdin_used+0x784e>
jb     808dcc0 <_IO_stdin_used+0x77fc>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     808dcda <_IO_stdin_used+0x7816>
arpl   %si,%ds:0x72(%ebp)
ja,pn  808dd17 <_IO_stdin_used+0x7853>
and    %bh,0x30203d
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     808dd25 <_IO_stdin_used+0x7861>
jb     808dd21 <_IO_stdin_used+0x785d>
insl   (%dx),%es:(%edi)
jne    808dd31 <_IO_stdin_used+0x786d>
je     808dd30 <_IO_stdin_used+0x786c>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     808dd40 <_IO_stdin_used+0x787c>
add    %ah,(%ebx)
and    %ah,0x6e(%ebp)
je     808dd45 <_IO_stdin_used+0x7881>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     808dd21 <_IO_stdin_used+0x785d>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 808dd76 <_IO_stdin_used+0x78b2>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
add    %ah,(%ebx)
and    %ah,0x75(%edx)
arpl   %bp,0x65(%ebx)
je     808dd94 <_IO_stdin_used+0x78d0>
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x2e,0x25(%edi)
xor    %cl,0x0(%esi,%eiz,2)
and    $0x664c312e,%eax
add    %al,0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
pop    %edi
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %al,0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %ah,0x45(%ebp)
addr16 inc %edi
imul   $0x4d,0x6d(%ebx),%ecx
jo     808ddef <_IO_stdin_used+0x792b>
je     808ddf5 <_IO_stdin_used+0x7931>
jns    808ddfc <_IO_stdin_used+0x7938>
jp     808ddff <_IO_stdin_used+0x793b>
xor    %al,(%eax)
push   $0x6e616d75
sub    $0x64616572,%eax
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jae    808de21 <_IO_stdin_used+0x795d>
add    %al,(%eax)
add    %al,(%eax)
mov    $0x0,%al
add    %al,(%eax)
nop
add    %al,(%eax)
add    %ah,-0x49f7f723(%edi)
fisttpll (%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ebx
dec    %ebp
inc    %edi
push   %esp
push   %eax
inc    %ebp
pop    %edx
pop    %ecx
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
inc    %ecx
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
das
jne    808de66 <_IO_stdin_used+0x79a2>
jb     808de24 <_IO_stdin_used+0x7960>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
sbb    (%eax),%al
add    %ch,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     808de31 <_IO_stdin_used+0x796d>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    808dead <_IO_stdin_used+0x79e9>
je     808deab <_IO_stdin_used+0x79e7>
jb     808dea7 <_IO_stdin_used+0x79e3>
insl   (%dx),%es:(%edi)
jne    808deb7 <_IO_stdin_used+0x79f3>
je     808deb6 <_IO_stdin_used+0x79f2>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     808dec6 <_IO_stdin_used+0x7a02>
add    %al,(%eax)
call   3f10e628 <_end+0x370700c4>
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %bl,(%eax)
rolb   (%edi)
or     %dl,(%eax)
rolb   (%edi)
or     %cl,(%eax)
rolb   (%edi)
or     %dh,(%edi)
iret
pop    %es
or     %dh,(%edi)
iret
pop    %es
or     %al,(%eax)
rolb   (%edi)
or     %bh,%al
iret
pop    %es
or     %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     808df50 <_IO_stdin_used+0x7a8c>
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x75(%ebx)
jb     808df5f <_IO_stdin_used+0x7a9b>
outsb  %gs:(%esi),(%dx)
je     808df11 <_IO_stdin_used+0x7a4d>
ja     808df62 <_IO_stdin_used+0x7a9e>
jb     808df60 <_IO_stdin_used+0x7a9c>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808df03 <_IO_stdin_used+0x7a3f>
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     808df75 <_IO_stdin_used+0x7ab1>
je     808df87 <_IO_stdin_used+0x7ac3>
jb     808df82 <_IO_stdin_used+0x7abe>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6c616974,0x69(%esi),%ebp
and    %dh,0x6f(%edi)
jb     808df8f <_IO_stdin_used+0x7acb>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    808df32 <_IO_stdin_used+0x7a6e>
push   %esp
pop    %edx
add    %al,0x4d(%edi)
push   %esp
add    %dl,0x45(%edi)
push   %esp
add    %al,0x4d(%ecx)
add    %cl,0x41(%edx)
dec    %esi
push   %ebp
inc    %ecx
push   %edx
pop    %ecx
add    %bl,0x45(%ecx)
inc    %ecx
push   %edx
add    %dl,0x4d(%edi,%ecx,2)
dec    %edi
push   %edx
push   %edx
dec    %edi
push   %edi
add    %al,0x54(%ebx,%edx,2)
add    %dl,0x3d(%edx,%ebx,2)
and    (%eax),%al
pop    %eax
pop    %eax
pop    %eax
and    $0x646c2573,%eax
cmp    0x643230,%ah
inc    %edx
add    %dl,0x0(%ecx)
push   %ebp
add    %dl,0x0(%esi)
push   %edi
inc    %ebp
push   %ebx
push   %esp
add    %al,0x53(%edx)
push   %esp
add    %al,0x52(%ecx)
push   %esp
add    %al,0x52(%edx)
push   %esp
add    %al,0x52(%edx)
push   %ebx
push   %esp
add    %cl,0x53(%esi)
push   %esp
add    %cl,0x44(%esi)
push   %esp
add    %al,0x4c(%ebx)
push   %esp
add    %al,0x4c(%ebx)
push   %ebx
push   %esp
add    %al,0x44(%ebp)
push   %esp
add    %al,0x53(%ebx)
push   %esp
add    %al,0x44(%ebx)
push   %esp
add    %cl,0x53(%ebp)
push   %esp
add    %cl,0x44(%ebp)
push   %esp
add    %dl,0x53(%eax)
push   %esp
add    %dl,0x44(%eax)
push   %esp
add    %al,0x4b(%ecx)
push   %ebx
push   %esp
add    %al,0x4b(%ecx)
inc    %esp
push   %esp
add    %cl,0x53(%eax)
push   %esp
add    %cl,0x41(%eax)
push   %ebx
push   %esp
add    %cl,0x41(%eax)
inc    %esp
push   %esp
add    %dl,0x53(%ebx)
push   %esp
add    %dl,0x41(%edi)
push   %esp
add    %al,0x45(%ebx)
push   %esp
add    %al,0x45(%ebx)
push   %ebx
push   %esp
add    %cl,0x45(%ebp)
push   %esp
add    %cl,0x45(%ebp)
pop    %edx
add    %cl,0x45(%ebp)
push   %ebx
push   %esp
add    %cl,0x45(%ebp)
push   %ebx
pop    %edx
add    %al,0x45(%ebp)
push   %esp
add    %al,0x45(%ebp)
push   %ebx
push   %esp
add    %al,0x41(%ebx)
push   %esp
add    %dl,0x41(%ebx)
push   %ebx
push   %esp
add    %al,0x41(%ebp)
push   %esp
add    %cl,0x53(%ebp)
dec    %ebx
add    %cl,0x53(%ebp)
inc    %esp
add    %cl,0x53(%ecx)
push   %esp
add    %dl,0x47(%ebx)
push   %esp
add    %cl,0x53(%edx)
push   %esp
add    %al,0x53(%edi)
push   %esp
add    %cl,0x5a(%esi)
push   %ebx
push   %esp
add    %cl,0x5a(%esi)
inc    %esp
push   %esp
add    %dl,0x54(%ebp)
add    %dl,0x54(%ebp)
inc    %ebx
add    %bl,0x45(%ecx)
push   %ebx
push   %esp
inc    %ebp
push   %edx
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x44(%edi,%ecx,2)
inc    %ecx
pop    %ecx
add    %cl,0x4f(%esi)
push   %edi
add    %cl,0x53(%ecx,%eax,2)
push   %esp
add    %dl,0x49(%eax,%ecx,2)
push   %ebx
add    %cl,0x45(%esi)
pop    %eax
push   %esp
add    %al,0x49(%esi)
push   %edx
push   %ebx
push   %esp
add    %dl,0x49(%eax,%ecx,2)
push   %edx
inc    %esp
add    %al,0x4f(%esi)
push   %ebp
push   %edx
push   %esp
dec    %eax
add    %al,0x49(%esi)
inc    %esi
push   %esp
dec    %eax
add    %dl,0x49(%ebx)
pop    %eax
push   %esp
dec    %eax
add    %dl,0x45(%ebx)
push   %esi
inc    %ebp
dec    %esi
push   %esp
dec    %eax
add    %al,0x49(%ebp)
inc    %edi
dec    %eax
push   %esp
dec    %eax
add    %cl,0x49(%esi)
dec    %esi
push   %esp
dec    %eax
add    %dl,0x4e(%ebp,%eax,2)
push   %esp
dec    %eax
add    %al,0x4c(%ebp)
inc    %ebp
push   %esi
inc    %ebp
dec    %esi
push   %esp
dec    %eax
add    %dl,0x45(%edi,%edx,2)
dec    %esp
inc    %esi
push   %esp
dec    %eax
add    %al,0x47(%ecx)
dec    %edi
add    %cl,0x45(%eax)
dec    %esi
inc    %ebx
inc    %ebp
add    %cl,0x4f(%ebp)
dec    %esi
push   %esp
dec    %eax
add    %al,0x4f(%esi)
push   %edx
push   %esp
dec    %esi
dec    %ecx
inc    %edi
dec    %eax
push   %esp
add    %dl,0x45(%edi)
inc    %ebp
dec    %ebx
add    %cl,0x4f(%eax)
push   %ebp
push   %edx
add    %cl,0x49(%ebp)
dec    %esi
push   %ebp
push   %esp
inc    %ebp
add    %cl,0x49(%ebp)
dec    %esi
add    %dl,0x45(%ebx)
inc    %ebx
dec    %edi
dec    %esi
inc    %esp
add    %dl,0x45(%ebx)
inc    %ebx
add    %al,0x45(%esi)
inc    %edx
push   %edx
push   %ebp
inc    %ecx
push   %edx
pop    %ecx
add    %cl,0x41(%ebp)
push   %edx
inc    %ebx
dec    %eax
add    %al,0x50(%ecx)
push   %edx
dec    %ecx
dec    %esp
add    %cl,0x41(%ebp)
pop    %ecx
add    %cl,0x55(%edx)
dec    %esi
inc    %ebp
add    %cl,0x55(%edx)
dec    %esp
pop    %ecx
add    %al,0x55(%ecx)
inc    %edi
push   %ebp
push   %ebx
push   %esp
add    %dl,0x45(%ebx)
push   %eax
push   %esp
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
add    %dl,0x45(%ebx)
push   %eax
push   %esp
add    %cl,0x43(%edi)
push   %esp
dec    %edi
inc    %edx
inc    %ebp
push   %edx
add    %cl,0x4f(%esi)
push   %esi
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
add    %al,0x43(%ebp,%eax,2)
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
add    %dl,0x55(%ebx)
dec    %esi
inc    %esp
inc    %ecx
pop    %ecx
add    %cl,0x4f(%ebp)
dec    %esi
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x45(%ebp,%edx,2)
push   %ebx
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x45(%ebp,%edx,2)
push   %ebx
add    %dl,0x45(%edi)
inc    %esp
dec    %esi
inc    %ebp
push   %ebx
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x45(%edi)
inc    %esp
dec    %esi
inc    %ebp
push   %ebx
add    %dl,0x55(%eax,%ecx,2)
push   %edx
push   %ebx
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x55(%eax,%ecx,2)
push   %edx
add    %dl,0x55(%eax,%ecx,2)
push   %edx
push   %ebx
add    %al,0x52(%esi)
dec    %ecx
inc    %esp
inc    %ecx
pop    %ecx
add    %dl,0x41(%ebx)
push   %esp
push   %ebp
push   %edx
inc    %esp
inc    %ecx
pop    %ecx
add    %al,0x2e(%ecx)
dec    %ebp
add    %dl,%cs:0x4d(%eax)
add    %dl,0x2e(%eax)
dec    %ebp
add    %al,%cs:(%eax)
add    %ah,(%ebx)
jecxz  808e1aa <_IO_stdin_used+0x7ce6>
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %dl,(%edx)
jecxz  808e1b6 <_IO_stdin_used+0x7cf2>
or     %al,0xf80807e3
loop   808e1be <_IO_stdin_used+0x7cfa>
or     %ch,%bl
loop   808e1c2 <_IO_stdin_used+0x7cfe>
or     %bl,%dh
loop   808e1c6 <_IO_stdin_used+0x7d02>
or     %dl,%cl
loop   808e1ca <_IO_stdin_used+0x7d06>
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %ah,-0x21e8f7f9(%edx,%eiz,8)
pop    %es
or     %cl,%ah
fldl   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %ch,%dh
fiadd  (%edi)
or     %al,%al
fiadd  (%edi)
or     %bh,-0x22(%edi)
pop    %es
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %al,-0x22(%edi)
pop    %es
or     %al,%bl
loopne 808e20a <_IO_stdin_used+0x7d46>
or     %bl,0x2d0807e0(%esi)
fild   (%edi)
or     %bl,0x180807df
in     $0x7,%al
or     %al,%dh
jecxz  808e21e <_IO_stdin_used+0x7d5a>
or     %cl,0x720807e3(%ebx)
jecxz  808e226 <_IO_stdin_used+0x7d62>
or     %bl,-0x1d(%eax)
pop    %es
or     %bh,(%edi)
jecxz  808e22e <_IO_stdin_used+0x7d6a>
or     %dl,%bl
loope  808e232 <_IO_stdin_used+0x7d6e>
or     %al,0x6a0807e2(%edx)
loop   808e23a <_IO_stdin_used+0x7d76>
or     %al,%bh
loope  808e23e <_IO_stdin_used+0x7d7a>
or     %dl,0x7a0807e1(%eax)
loope  808e246 <_IO_stdin_used+0x7d82>
or     %dl,-0x1f(%ecx)
pop    %es
or     %bh,(%eax)
loope  808e24e <_IO_stdin_used+0x7d8a>
or     %ah,(%edx)
loope  808e252 <_IO_stdin_used+0x7d8e>
or     %cl,(%edx)
loope  808e256 <_IO_stdin_used+0x7d92>
or     %ah,%al
loopne 808e25a <_IO_stdin_used+0x7d96>
or     %cl,(%eax)
flds   (%edi)
or     %dh,%dl
fild   (%edi)
or     %cl,0x220807df(%esi)
faddl  (%edi)
or     %ah,(%edx)
faddl  (%edi)
or     %dl,%dh
fild   (%edi)
or     %ch,-0x24(%ebx)
pop    %es
or     %ch,%ch
loope  808e27a <_IO_stdin_used+0x7db6>
or     %bl,0x700807e2(%eax)
fldl   (%edi)
or     %dh,(%ebx)
loop   808e286 <_IO_stdin_used+0x7dc2>
or     %ah,(%edx,%eiz,8)
pop    %es
or     %ah,-0x55f7f824(%ebp)
fldl   (%edi)
or     %al,-0x1bf7f821(%edx)
faddl  (%edi)
or     %cl,-0x21(%ebx)
pop    %es
or     %bh,(%edi)
fild   (%edi)
or     %dh,(%esi)
fldl   (%edi)
or     %al,-0x20(%edx)
pop    %es
or     %dh,(%esi)
loopne 808e2ae <_IO_stdin_used+0x7dea>
or     %dl,%al
fadds  (%edi)
or     %dh,-0x4af7f823(%ebp)
fldl   (%edi)
or     %ah,(%ecx)
loopne 808e2be <_IO_stdin_used+0x7dfa>
or     %cl,(%eax)
flds   (%edi)
or     %ch,-0x24(%ebx)
pop    %es
or     %dh,-0x23(%eax)
pop    %es
or     %ah,-0x1bf7f824(%ebp)
faddl  (%edi)
or     %dh,(%esi)
fldl   (%edi)
or     %dl,%al
fadds  (%edi)
or     %ch,0x80807dd(%edx)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %bl,(%esi)
fldl   (%edi)
or     %cl,(%eax)
flds   (%edi)
or     %bl,(%esi)
fldl   (%edi)
or     %bh,-0x20(%ecx)
pop    %es
or     %al,(%ecx)
faddl  (%edi)
or     %cl,-0x1df7f81e(%ebx)
fild   (%edi)
or     %dl,0x11080892(%ebx)
add    %eax,(%eax)
add    %al,%ah
(bad)
(bad)
ljmp   *-0x21(%ebp)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
mov    %bh,%bh
(bad)
(bad)
fsub   %st(0),%st
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
dec    %esp
(bad)
(bad)
lcall  *0x11080892(%ecx)
add    %eax,(%eax)
add    %dl,(%eax)
(bad)
(bad)
ljmp   *0x110808e0(%eax)
add    %eax,(%eax)
add    %dl,%ah
(bad)
(bad)
pushl  -0x2d(%ecx)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
cwtl
(bad)
(bad)
dec    %ecx
xchg   %eax,%ebx
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
pop    %esp
(bad)
(bad)
jmp    *%edi
loopne 808e35f <_IO_stdin_used+0x7e9b>
or     %dl,(%ecx)
add    %eax,(%eax)
add    %ah,(%eax)
(bad)
(bad)
(bad)
std
fisttpll (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %ah,%ah
std
(bad)
(bad)
mov    $0x110808e0,%ebp
add    %eax,(%eax)
add    %ch,-0x42000003(%eax)
popf
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
std
(bad)
(bad)
fisttp %ds:(%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %dh,(%eax)
std
(bad)
dec    %ebp
loopne 808e39b <_IO_stdin_used+0x7ed7>
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,0x110808e0
add    %eax,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
mov    $0x11080866,%ecx
add    %eax,(%eax)
add    %dh,-0x20910000(%eax,%eax,1)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
lock add %al,(%eax)
add    %cl,-0x21(%ebx)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
adc    0x1110808(%ebp),%edx
add    %al,(%eax)
push   $0x98000001
mov    (%eax),%ecx
or     %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x21(%ecx)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
loopne 808e3ef <_IO_stdin_used+0x7f2b>
add    %al,(%eax)
jae    808e3d1 <_IO_stdin_used+0x7f0d>
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
sbb    $0x2,%al
add    %al,(%eax)
inc    %esp
loopne 808e407 <_IO_stdin_used+0x7f43>
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
jnp    808e3dd <_IO_stdin_used+0x7f19>
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%al
add    %dh,-0x1f(%edx)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
rolb   (%edx)
add    %al,(%eax)
test   %esp,0x8(%esi)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bh,(%ecx)
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x21(%ebp)
or     %cl,(%eax)
or     $0x1,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jp     808e439 <_IO_stdin_used+0x7f75>
or     %cl,(%eax)
or     $0x1,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jle    808e445 <_IO_stdin_used+0x7f81>
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
dec    %esp
(bad)
(bad)
incl   0x110808df(%edx)
add    %eax,(%eax)
add    %cl,-0x1(%edi,%edi,8)
incl   0xc0808df(%esi)
add    %eax,(%eax)
add    %cl,-0x1(%edi,%edi,8)
decl   0x110808df(%ebx)
add    %eax,(%eax)
add    %ch,(%esi)
(bad)
(bad)
decl   0xc0808df(%edi)
add    %eax,(%eax)
add    %ch,(%esi)
(bad)
(bad)
inc    %edi
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%eax)
(bad)
(bad)
dec    %esp
fisttp (%eax)
or     %cl,(%ecx,%eax,1)
add    %al,(%eax)
adc    %bh,%bh
(bad)
call   *0x110808df(%ebx)
add    %eax,(%eax)
add    %dl,(%eax)
(bad)
(bad)
call   *0xc0808df(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
(bad)
(bad)
(bad)
fstp   %st(7)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
aam    $0xfe
(bad)
lcall  *0x10c0808(%edi,%ebx,8)
add    %al,(%eax)
aam    $0xfe
(bad)
jmp    *0x110808df(%eax)
add    %eax,(%eax)
add    %bl,-0x5b000002(%eax)
fisttp (%eax)
or     %cl,(%ecx,%eax,1)
add    %al,(%eax)
cwtl
(bad)
(bad)
ljmp   *0x110808df(%eax)
add    %eax,(%eax)
add    %bl,-0x1(%esi,%edi,8)
ljmp   *0x10c0808(%edi,%ebx,8)
add    %al,(%eax)
pop    %esp
(bad)
(bad)
pushl  0x110808df(%eax)
add    %eax,(%eax)
add    %ah,(%eax)
(bad)
(bad)
pushl  0x10c0808(%edi,%ebx,8)
add    %al,(%eax)
and    %bh,%dh
(bad)
(bad)
mov    $0x110808df,%eax
add    %eax,(%eax)
add    %ah,%ah
std
(bad)
(bad)
mov    $0xc0808df,%ebp
add    %eax,(%eax)
add    %ah,%ah
std
(bad)
inc    %edx
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %ch,-0x39000003(%eax)
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %ch,-0x34000003(%eax)
fisttp (%eax)
or     %cl,(%ecx,%eax,1)
add    %al,(%eax)
test   $0xfd,%al
(bad)
call   *%eax
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %dh,(%eax)
std
(bad)
call   *%esp
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
fcomp  %st(7)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
(bad)
or     %cl,(%eax)
or     $0x1,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loope  808e57d <_IO_stdin_used+0x80b9>
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     $0xdf,%eax
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jmp    1410ee98 <_end+0xc070934>
add    %eax,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
out    %al,(%dx)
fisttp (%eax)
or     %cl,(%ecx,%eax,1)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
repz fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
neg    %edi
or     %cl,(%eax)
or     $0x1,%al
add    %al,(%eax)
js     808e5e2 <_IO_stdin_used+0x811e>
add    %al,(%eax)
cld
fisttp (%eax)
or     %dl,(%ecx)
add    %eax,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
add    %ah,%al
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
js     808e5fa <_IO_stdin_used+0x8136>
add    %al,(%eax)
add    $0x110808e0,%eax
add    %eax,(%eax)
add    %dh,-0x1ff70000(%eax,%eax,1)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
or     $0xc0808e0,%eax
add    %eax,(%eax)
add    %dh,-0x1fef0000(%eax,%eax,1)
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
dec    %edx
add    %eax,(%eax)
add    %dl,0x110808e0
add    %eax,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %bh,0x110808df(%ecx)
add    %eax,(%eax)
add    %bl,(%edx,%eax,1)
add    %al,(%eax)
sbb    %esp,%eax
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
sbb    $0x2,%al
add    %al,(%eax)
sbb    $0x110808e0,%eax
add    %eax,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
and    %esp,%eax
or     %cl,(%eax)
adc    %eax,(%ecx)
add    %al,(%eax)
rolb   (%edx)
add    %al,(%eax)
es
loopne 808e673 <_IO_stdin_used+0x81af>
or     %cl,(%ecx,%eax,1)
add    %al,(%eax)
rolb   (%edx)
add    %al,(%eax)
xor    $0x110808df,%eax
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%ebx)
loopne 808e697 <_IO_stdin_used+0x81d3>
or     %dl,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%esi)
loopne 808e6a3 <_IO_stdin_used+0x81df>
or     %dl,(%ecx)
add    %eax,(%eax)
add    %cl,-0x21(%ebp)
or     %cl,(%eax)
or     (%ecx),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
xor    %al,%ah
or     %cl,(%eax)
or     (%ecx),%al
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
cmp    $0xe0,%al
or     %cl,(%eax)
or     (%ecx),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %edx
loopne 808e6ef <_IO_stdin_used+0x822b>
or     %cl,(%edx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x20(%esi)
or     %cl,(%eax)
adc    %al,(%ecx)
add    %al,(%eax)
(bad)
(bad)
(bad)
decl   -0x20(%ebx)
or     %cl,(%eax)
adc    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
loopne 808e713 <_IO_stdin_used+0x824f>
or     %dl,(%eax)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,-0x20(%ebp)
or     %cl,(%eax)
adc    %al,(%ecx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
pop    %ebx
loopne 808e72b <_IO_stdin_used+0x8267>
or     %dl,(%eax)
add    %eax,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,-0x20(%ecx)
or     %cl,(%eax)
adc    %al,(%ecx)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
push   $0x100808e0
add    %eax,(%eax)
add    %al,0x6e000000
loopne 808e74f <_IO_stdin_used+0x828b>
or     %dl,(%eax)
add    %eax,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dh,0x8(%eax,%eiz,8)
or     %dl,(%eax)
add    %eax,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %bh,0x8(%eax,%eiz,8)
or     %dl,(%eax)
add    %eax,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x100808e0(%ebx)
add    %eax,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,0x100808e0(%ecx)
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %cl,0x100808e0(%edi)
add    %eax,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %bl,0x100808e0(%eax)
add    %eax,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
mov    0x20808e0,%al
add    %eax,(%eax)
add    %bh,%bh
(bad)
(bad)
jmp    *0x1020808(%eax,%eiz,8)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
dec    %eax
fisttp (%eax)
or     %al,(%ecx,%eax,1)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
stos   %al,%es:(%edi)
loopne 808e7d7 <_IO_stdin_used+0x8313>
or     %al,0x1000001
add    %al,(%eax)
add    %dh,0x90808e0(%eax)
add    %eax,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %bh,0x90808e0(%edx)
add    %eax,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,-0x1f(%eax)
or     %cl,(%eax)
or     %eax,(%ecx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
mov    $0x60808e0,%edi
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,%ah
loopne 808e813 <_IO_stdin_used+0x834f>
or     %al,(%edi)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%bl
loopne 808e81f <_IO_stdin_used+0x835b>
or     %al,(%edi)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%bh
loopne 808e82b <_IO_stdin_used+0x8367>
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,%dh
loopne 808e837 <_IO_stdin_used+0x8373>
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,-0x21(%eax)
or     %cl,(%eax)
sgdtl  (%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,%dl
loopne 808e877 <_IO_stdin_used+0x83b3>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %ah,%bl
loopne 808e883 <_IO_stdin_used+0x83bf>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ch,%cl
loopne 808e88f <_IO_stdin_used+0x83cb>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
out    %eax,(%dx)
loopne 808e89b <_IO_stdin_used+0x83d7>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,0xf3000000
loopne 808e8a7 <_IO_stdin_used+0x83e3>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bh,%al
loopne 808e8b3 <_IO_stdin_used+0x83ef>
or     %cl,(%edi)
add    %eax,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %bh,%ch
loopne 808e8bf <_IO_stdin_used+0x83fb>
or     %cl,(%edi)
add    %eax,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%ecx,%eiz,8)
or     %cl,(%eax)
sgdtl  (%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,(%esi)
loope  808e8d7 <_IO_stdin_used+0x8413>
or     %cl,(%edi)
add    %eax,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %dl,(%ebx)
loope  808e8e3 <_IO_stdin_used+0x841f>
or     %cl,(%edi)
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
loope  808e8ef <_IO_stdin_used+0x842b>
or     %cl,(%edi)
add    %eax,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %ah,(%ecx,%eiz,8)
or     %cl,(%eax)
sgdtl  (%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0xb0808e1,%eax
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%ecx,%eiz,8)
or     %cl,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
cmp    %ecx,%esp
or     %cl,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ebx
loope  808e92b <_IO_stdin_used+0x8467>
or     %cl,(%ebx)
add    %eax,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %cl,-0x1f(%eax)
or     %cl,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
push   %edx
loope  808e943 <_IO_stdin_used+0x847f>
or     %cl,(%ebx)
add    %eax,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %bl,-0x1f(%ecx)
or     %cl,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
(bad)
or     %cl,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
loopew 808e967 <_IO_stdin_used+0x84a3>
or     %cl,(%ebx)
add    %eax,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
loope  808e973 <_IO_stdin_used+0x84af>
or     %cl,(%ebx)
add    %eax,(%eax)
add    %al,0x74000000
loope  808e97f <_IO_stdin_used+0x84bb>
or     %cl,(%ebx)
add    %eax,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,-0x21(%esi)
or     %cl,(%eax)
add    (%ecx),%eax
add    %al,(%eax)
cmp    $0xe0808df,%eax
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1f(%ebp)
or     %cl,(%eax)
push   %cs
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0xe0808e1(%edx)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe0808e1(%ebp)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x9080706,%eax
or     (%esp,%ecx,1),%al
pcmpgtd (%edi),%mm1
adc    %dl,(%ebx)
movlps %xmm2,(%ebx)
adc    $0x13,%al
sbb    %esi,0x19(%eax)
adc    (%ebx),%ebx
add    $0x9080706,%eax
or     0x9080706,%al
or     (%ebx),%dl
adc    (%ebx),%edx
imul   $0x14,(%ebx),%edx
sbb    %ebx,(%ecx)
sbb    %esi,0x13(%ecx)
adc    $0x15,%al
push   %ss
sbb    %eax,0x9080706
or     (%ebx),%cl
or     $0xd,%al
push   %cs
pop    %ss
adc    %dl,(%ecx)
adc    (%ebx),%dl
adc    $0x15,%al
push   %ss
pusha
sbb    %al,0x9080706
or     (%eax),%al
or     $0x5,%al
push   %es
pop    %es
or     %cl,(%ecx)
or     (%ecx),%bl
add    $0x1b,%al
sbb    (%esi,%ebx,1),%dl
push   %ss
or     %ecx,(%ecx)
adc    (%eax),%ebx
add    (%ebx),%edx
sbb    (%esp,%edx,1),%dl
adc    $0x3b,%al
sbb    0x14(%esp,%edx,1),%edx
call   *(%esp,%edx,1)
adc    %edi,%edi
sbb    %eax,(%eax)
add    %al,(%eax)
dec    %edi
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
inc    %edi
dec    %eax
cmp    0x64(%ecx),%cl
imul   $0x65,0x4b(%edx),%ecx
outsb  %ds:(%esi),(%dx)
dec    %esp
xor    %esi,(%edx)
gs
data16
jno    808eac3 <_IO_stdin_used+0x85ff>
cmp    0x3d(%esi),%ecx
ds
aas
inc    %eax
inc    %ecx
inc    %edx
cmp    $0x41403f3e,%eax
inc    %edx
gs
gs
pop    %esp
outsl  %ds:(%esi),(%dx)
pop    %edx
pop    %ebx
push   $0x70
pop    %eax
outsl  %ds:(%esi),(%dx)
add    $0x58080706,%eax
or     $0x11100f0e,%eax
adc    (%ebx),%dl
adc    $0x15,%al
push   %ss
add    %edx,(%edi)
sbb    %bl,(%ecx)
sbb    (%ebx),%bl
sbb    $0x1d,%al
dec    %edi
push   %ds
xor    0xc383736(,%esi,1),%esi
cmp    %edi,0x41403f3e
inc    %edx
cmp    $0x30,%al
push   %eax
das
push   %es
push   %ebx
or     %dl,0x52(%ecx)
sbb    0x56(%ebp,%edx,2),%dl
push   %edi
pop    %esi
pop    %edi
pusha
pop    %ecx
imul   $0x6d6c0063,0x62(%ecx),%esp
add    %bl,%gs:-0x5d(%eax)
mov    %eax,0xa3a3a3a3
mov    %eax,0xe5bc14a3
mov    %eax,0xa3a3a3a3
mov    %eax,0xa3a33ca3
mov    %eax,0x2ba3a3a4
add    %ah,(%esi)
sbb    -0x5d(%ebp),%ecx
mov    %eax,%cs:0xa3a3a3a3
mov    %eax,0xa3a3a3a3
mov    %eax,0xa3a3a3a3
mov    %eax,%ds:0x342fd52
dec    %edx
cld
push   %ebx
push   %esp
dec    %ebx
mov    %eax,0xa3a3a3a3
mov    %eax,0x47a3a3a3
mov    %eax,0xa3a3a35d
mov    %eax,0x484ea3a3
mov    %eax,0xa3a3a3a3
mov    %eax,0xa319a3a3
mov    %eax,0xa3a3a3a3
mov    %eax,0xa3a3a3a3
mov    %eax,0x15a3a3a3
adc    0x50(%edi),%ecx
mov    %eax,0xa3a3a3a3
push   %ecx
mov    %eax,0xa35655a3
mov    %eax,0xfaa3a3a3
dec    %esp
adc    %esp,0x57a3a3a3(%ebx)
inc    %ebp
mov    %eax,0xff5958a3
mov    %eax,0x45a3a312
pop    %ebx
incl   (%edx)
add    (%edi,%ebx,1),%eax
and    %ah,(%ecx)
and    (%ebx),%ah
addr16 push $0x27262524
sub    %ch,(%ecx)
sub    (%ebx),%ch
sub    $0x9,%al
or     (%ebx),%cl
sub    $0x5d2e,%eax
add    %al,(%eax)
add    $0x3020000,%eax
push   %ebp
push   %edi
push   %esp
push   %esi
add    $0x52,%al
push   %ebx
add    %edi,(%eax)
cmp    0x44(%ecx),%eax
dec    %ecx
ds
push   %ecx
and    $0x1c23,%eax
push   %ds
add    %bl,0x0(%eax)
add    %bl,(%edi)
push   %es
pop    %es
adc    %cl,(%eax)
adc    $0xb0c0a09,%eax
xor    %ecx,0xe354a34
(bad)
sbb    $0x39362d00,%eax
aas
inc    %edx
inc    %ebp
cmp    $0x27,%al
and    $0x5a,%al
and    %cl,0x4c(%ebx)
dec    %esi
dec    %edi
push   %eax
dec    %ebp
aaa
cmp    0x43(%eax),%al
inc    %esi
cmp    $0x5a2f1228,%eax
add    %al,(%eax)
push   %ss
pop    %ecx
inc    %edi
dec    %eax
and    %eax,(%eax)
xor    (%eax,%eax,1),%ebp
add    %ah,(%edx)
sub    (%eax),%esi
xor    (%ebx),%bl
sbb    %ebp,(%ecx)
add    %dl,(%ecx)
cs
pop    %ebx
adc    0x0(%edx),%ebx
pop    %ss
sbb    (%eax),%al
add    %bl,(%ecx)
sub    (%ecx),%bl
adc    $0x18,%al
add    %bl,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %eax,(%ecx)
add    (%eax),%al
add    (%ecx),%al
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ebx)
add    (%esi,%eax,1),%al
add    %eax,(%edx)
add    $0x6,%al
add    %al,(%ecx)
add    (%ecx),%al
add    (%ecx),%al
add    %eax,(%edx)
add    (%ebx),%al
add    %eax,(%edx)
add    %eax,(%edx)
add    (%edx),%al
add    0x4020303,%eax
add    (%ebx),%al
add    %eax,(%ebx)
add    (%ecx),%al
add    %eax,(%edx)
add    (%ecx),%al
add    (%edx),%al
add    %eax,(%edx)
add    (%ecx),%al
add    (%edx),%al
add    %eax,(%edx)
add    (%ecx),%al
add    (%edx),%al
add    (%edx),%al
add    %eax,(%ecx)
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x1d,%al
sbb    $0x201f1f1e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %esp,(%edx)
and    (%ebx),%esp
and    (%ebx),%esp
and    $0x24,%al
and    $0x25,%al
and    $0x28272726,%eax
sub    %ch,(%eax)
sub    %ch,(%eax)
sub    %ch,(%eax)
sub    %ebp,(%ecx)
sub    %ebp,(%ecx)
sub    (%edx),%ch
sub    (%edx),%ch
sub    (%edx),%ch
sub    (%edx),%ch
sub    (%ebx),%ch
sub    $0x2c,%al
sub    $0x2d,%al
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
cs
cs
cs
cs
cs
cs
das
xor    %dh,(%eax)
xor    %esi,(%ecx)
xor    (%edx),%dh
xor    0x35(,%esi,1),%esi
add    %al,(%eax)
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%bl
add    (%edx),%al
sbb    (%edx),%eax
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%ecx),%bl
add    (%edx),%al
add    (%edx),%al
add    (%edi),%dl
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%eax),%bl
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%ecx),%al
add    (%ebx),%al
add    $0x5,%al
push   %es
pop    %es
or     %cl,(%ecx)
or     (%ebx),%cl
or     $0xd,%al
push   %cs
movups (%ecx),%xmm2
adc    (%ebx),%dl
adc    $0x15,%al
push   %ss
add    %al,(%eax)
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 808ee5f <_IO_stdin_used+0x899b>
xor    %bl,0x20(%ebp)
ja     808ee6a <_IO_stdin_used+0x89a6>
jae    808ee2b <_IO_stdin_used+0x8967>
jo     808ee6e <_IO_stdin_used+0x89aa>
jae    808ee82 <_IO_stdin_used+0x89be>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    808ee7f <_IO_stdin_used+0x89bb>
push   $0x206e6120
gs
js     808ee85 <_IO_stdin_used+0x89c1>
arpl   %sp,(%eax)
jae    808ee9d <_IO_stdin_used+0x89d9>
jae    808ee9a <_IO_stdin_used+0x89d6>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x7a100af(%ecx)
gs
add    %ah,%dl
sbbb   $0x69,0x6c006000(%eax)
je     808eeb6 <_IO_stdin_used+0x89f2>
jb     808eeb4 <_IO_stdin_used+0x89f0>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    808eed4 <_IO_stdin_used+0x8a10>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    808eeca <_IO_stdin_used+0x8a06>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
clc
pop    %es
or     %dl,%al
std
pop    %es
or     %al,(%eax)
incb   (%edi)
or     %ah,-0x3(%eax)
pop    %es
or     %ah,0x400807fd(%eax)
incb   (%edi)
or     %ch,-0x2(%eax)
pop    %es
or     %ch,-0x2(%eax)
pop    %es
or     %ch,-0x2(%eax)
pop    %es
or     %bh,-0x5(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %dh,-0x5(%eax)
pop    %es
or     %cl,-0x5(%eax)
pop    %es
or     %ch,-0x5(%eax)
pop    %es
or     %ah,-0x5(%eax)
pop    %es
or     %bl,-0x5(%eax)
pop    %es
or     %dl,-0x5(%eax)
pop    %es
or     %ah,(%eax)
sti
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %bl,-0x60f7f806(%edi)
cli
pop    %es
or     %bl,-0x68f7f806(%edi)
cli
pop    %es
or     %bl,-0x77f7f806(%edi)
stc
pop    %es
or     %bl,0x100807fa(%edi)
cld
pop    %es
or     %bl,-0x60f7f806(%edi)
cli
pop    %es
or     %bl,-0x77f7f806(%edi)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x60f7f807(%eax)
cli
pop    %es
or     %bl,-0x60f7f806(%edi)
cli
pop    %es
or     %bl,-0x2ff7f806(%edi)
clc
pop    %es
or     %ch,-0x4(%eax)
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %bl,-0xff7f806(%edi)
sti
pop    %es
or     %cl,-0x60f7f807(%eax)
cli
pop    %es
or     %cl,-0x60f7f807(%eax)
cli
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %cl,-0x77f7f807(%eax)
stc
pop    %es
or     %al,-0x60f7f806(%eax)
cli
pop    %es
or     %al,-0x68f7f806(%eax)
cli
pop    %es
or     %al,%al
cli
pop    %es
or     %al,%al
cli
pop    %es
or     %dl,(%eax)
add    %cl,(%eax)
or     %al,%al
cli
pop    %es
or     %dl,(%eax)
add    %cl,(%eax)
or     %al,%al
cli
pop    %es
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %dl,(%eax)
add    %cl,(%eax)
or     %al,%al
cli
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,-0x12(%ebp)
or     %cl,(%eax)
xchg   %eax,%ebp
rorb   %cl,(%eax)
or     %dl,-0x12(%ebp)
or     %cl,(%eax)
adc    %cl,%bl
or     %cl,(%eax)
(bad)
out    %al,(%dx)
or     %cl,(%eax)
push   $0xffffffee
or     %cl,(%eax)
outsl  %ds:(%esi),(%dx)
xchg   %eax,%esp
or     %cl,(%eax)
jno    808f16c <_IO_stdin_used+0x8ca8>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    $0x25282073,%eax
jae    808f1b4 <_IO_stdin_used+0x8cf0>
and    %ah,0x25000a73
jae    808f1b3 <_IO_stdin_used+0x8cef>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     808f207 <_IO_stdin_used+0x8d43>
je     808f214 <_IO_stdin_used+0x8d50>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     808f217 <_IO_stdin_used+0x8d53>
je     808f224 <_IO_stdin_used+0x8d60>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     808f22e <_IO_stdin_used+0x8d6a>
je     808f23b <_IO_stdin_used+0x8d77>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f200 <_IO_stdin_used+0x8d3c>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     808f252 <_IO_stdin_used+0x8d8e>
jb     808f259 <_IO_stdin_used+0x8d95>
and    %ah,0x75(%edx)
addr16 jae 808f20b <_IO_stdin_used+0x8d47>
je     808f25c <_IO_stdin_used+0x8d98>
cmp    (%eax),%ah
and    $0x62000a73,%eax
jne    808f25d <_IO_stdin_used+0x8d99>
sub    $0x40726174,%eax
outsb  %ds:(%si),(%dx)
jne    808f22d <_IO_stdin_used+0x8d69>
outsl  %ds:(%esi),(%dx)
jb     808f269 <_IO_stdin_used+0x8da5>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    808f253 <_IO_stdin_used+0x8d8f>
or     (%eax),%al
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    808f259 <_IO_stdin_used+0x8d95>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     808f2a8 <_IO_stdin_used+0x8de4>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     808f25e <_IO_stdin_used+0x8d9a>
insb   (%dx),%es:(%edi)
popa
je     808f2a7 <_IO_stdin_used+0x8de3>
jb     808f264 <_IO_stdin_used+0x8da0>
cmp    $0x68,%al
je     808f2bc <_IO_stdin_used+0x8df8>
jo     808f284 <_IO_stdin_used+0x8dc0>
das
das
outsb  %ds:(%si),(%dx)
jne    808f27e <_IO_stdin_used+0x8dba>
outsl  %ds:(%esi),(%dx)
jb     808f2ba <_IO_stdin_used+0x8df6>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 808f2cc <_IO_stdin_used+0x8e08>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    808f28d <_IO_stdin_used+0x8dc9>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     808f2f1 <_IO_stdin_used+0x8e2d>
popa
jb     808f2e2 <_IO_stdin_used+0x8e1e>
cmp    (%eax),%ah
jns    808f2f0 <_IO_stdin_used+0x8e2c>
jne    808f2a3 <_IO_stdin_used+0x8ddf>
popa
jb     808f2eb <_IO_stdin_used+0x8e27>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     808f30b <_IO_stdin_used+0x8e47>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     808f315 <_IO_stdin_used+0x8e51>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     808f332 <_IO_stdin_used+0x8e6e>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     808f331 <_IO_stdin_used+0x8e6d>
outsb  %ds:(%esi),(%dx)
je     808f2ef <_IO_stdin_used+0x8e2b>
jo     808f336 <_IO_stdin_used+0x8e72>
jb     808f340 <_IO_stdin_used+0x8e7c>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     808f350 <_IO_stdin_used+0x8e8c>
je     808f35d <_IO_stdin_used+0x8e99>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f322 <_IO_stdin_used+0x8e5e>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f370 <_IO_stdin_used+0x8eac>
je     808f37d <_IO_stdin_used+0x8eb9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f342 <_IO_stdin_used+0x8e7e>
and    %ah,0x250a2c73
jae    808f34a <_IO_stdin_used+0x8e86>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f394 <_IO_stdin_used+0x8ed0>
je     808f3a1 <_IO_stdin_used+0x8edd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f366 <_IO_stdin_used+0x8ea2>
and    %ah,0x250a2c73
jae    808f36e <_IO_stdin_used+0x8eaa>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f3bc <_IO_stdin_used+0x8ef8>
je     808f3c9 <_IO_stdin_used+0x8f05>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f38e <_IO_stdin_used+0x8eca>
and    %ah,0x250a2c73
jae    808f396 <_IO_stdin_used+0x8ed2>
and    %ah,0x25202c73
jae    808f39e <_IO_stdin_used+0x8eda>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f3e8 <_IO_stdin_used+0x8f24>
je     808f3f5 <_IO_stdin_used+0x8f31>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f3ba <_IO_stdin_used+0x8ef6>
and    %ah,0x250a2c73
jae    808f3c2 <_IO_stdin_used+0x8efe>
and    %ah,0x25202c73
jae    808f3ca <_IO_stdin_used+0x8f06>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f418 <_IO_stdin_used+0x8f54>
je     808f425 <_IO_stdin_used+0x8f61>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f3ea <_IO_stdin_used+0x8f26>
and    %ah,0x250a2c73
jae    808f3f2 <_IO_stdin_used+0x8f2e>
and    %ah,0x25202c73
jae    808f3fa <_IO_stdin_used+0x8f36>
and    %ah,0x250a2c73
jae    808f402 <_IO_stdin_used+0x8f3e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     808f44c <_IO_stdin_used+0x8f88>
je     808f459 <_IO_stdin_used+0x8f95>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    808f41e <_IO_stdin_used+0x8f5a>
and    %ah,0x250a2c73
jae    808f426 <_IO_stdin_used+0x8f62>
and    %ah,0x25202c73
jae    808f42e <_IO_stdin_used+0x8f6a>
and    %ah,0x250a2c73
jae    808f436 <_IO_stdin_used+0x8f72>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
push   $0x3a707474
das
das
ja     808f49c <_IO_stdin_used+0x8fd8>
ja     808f455 <_IO_stdin_used+0x8f91>
outsb  %ds:(%si),(%dx)
jne    808f459 <_IO_stdin_used+0x8f95>
outsl  %ds:(%esi),(%dx)
jb     808f495 <_IO_stdin_used+0x8fd1>
das
jae    808f4a0 <_IO_stdin_used+0x8fdc>
data16
je     808f4ab <_IO_stdin_used+0x8fe7>
popa
jb     808f49c <_IO_stdin_used+0x8fd8>
das
je     808f49b <_IO_stdin_used+0x8fd7>
jb     808f46b <_IO_stdin_used+0x8fa7>
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     808f4a7 <_IO_stdin_used+0x8fe3>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     808f46d <_IO_stdin_used+0x8fa9>
jne    808f4c2 <_IO_stdin_used+0x8ffe>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     808f4d3 <_IO_stdin_used+0x900f>
popa
jb     808f4c4 <_IO_stdin_used+0x9000>
cmp    (%eax),%ah
cmp    $0x68,%al
je     808f4d9 <_IO_stdin_used+0x9015>
jo     808f4a1 <_IO_stdin_used+0x8fdd>
das
das
ja     808f4e2 <_IO_stdin_used+0x901e>
ja     808f49b <_IO_stdin_used+0x8fd7>
outsb  %ds:(%si),(%dx)
jne    808f49f <_IO_stdin_used+0x8fdb>
outsl  %ds:(%esi),(%dx)
jb     808f4db <_IO_stdin_used+0x9017>
das
addr16
gs
je     808f4e1 <_IO_stdin_used+0x901d>
gs
insb   (%dx),%es:(%edi)
jo     808f4ac <_IO_stdin_used+0x8fe8>
or     %ds:(%eax),%al
inc    %eax
adc    %ecx,(%eax)
or     %cl,0x11(%eax)
or     %cl,(%eax)
mov    %dl,(%ecx)
or     %cl,(%eax)
rclb   (%ecx)
or     %cl,(%eax)
sub    %dl,(%edx)
or     %cl,(%eax)
adcb   $0x8,(%edx)
or     %ch,%al
adc    (%eax),%cl
or     %ah,0x13(%eax)
or     %cl,(%eax)
add    %dl,(%eax)
or     %cl,(%eax)
cwtl
adc    %cl,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     808f53d <_IO_stdin_used+0x9079>
jb     808f52f <_IO_stdin_used+0x906b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     808f551 <_IO_stdin_used+0x908d>
popa
jb     808f542 <_IO_stdin_used+0x907e>
and    %al,0x6f(%esi)
jne    808f550 <_IO_stdin_used+0x908c>
fs
popa
je     808f54f <_IO_stdin_used+0x908b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %bh,0x73(%eax)
je     808f565 <_IO_stdin_used+0x90a1>
je     808f564 <_IO_stdin_used+0x90a0>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,(%eax)
and    %bh,0x72747320(,%edi,1)
je     808f575 <_IO_stdin_used+0x90b1>
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     808f588 <_IO_stdin_used+0x90c4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
cmp    (%eax),%ah
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
nop
pop    %ds
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
lock push %ds
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
fwait
push   %ds
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
lret
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %ch,%bl
sbb    $0x1ab00808,%eax
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
inc    %edi
sbb    $0x1ab00808,%eax
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
cltd
sbb    $0x8,%al
or     %ch,%bl
sbb    (%eax),%ecx
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,-0x3df7f7e6(%eax)
sbb    (%eax),%ecx
or     %al,-0x4ff7f7e5(%edx)
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,%al
push   %ds
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
fwait
push   %ds
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
lret
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %dh,-0x4ff7f7e6(%eax)
sbb    (%eax),%cl
or     %al,0x1d(%edi)
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
mov    $0x1a,%al
or     %cl,(%eax)
lcall  $0x7473,$0x7808081b
jb     808f675 <_IO_stdin_used+0x91b1>
outsl  %ds:(%esi),(%dx)
jne    808f671 <_IO_stdin_used+0x91ad>
popa
js     808f607 <_IO_stdin_used+0x9143>
arpl   %bp,0x64(%eax)
imul   $0x676e6f6c,0x2d(%edx),%esi
arpl   %ax,%cs:(%eax)
and    %esp,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
popaw
imul   $0x6c203c20,0x30(%eax,%eax,1),%ebp
outsb  %gs:(%esi),(%dx)
add    %dh,(%eax,%esi,1)
cmp    %esi,(%esi)
and    %bh,0x6e656c20(,%edi,1)
add    %ch,(%edx)
imul   $0x27203d21,%fs:0x20(%edx),%esi
das
daa
add    %ah,0x72(%ecx,%ebp,2)
and    %bh,0x72696420(,%edi,1)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x6c(%ebx)
popa
jae    808f6bd <_IO_stdin_used+0x91f9>
and    %ch,0x72696420
and    %bh,(%eax,%eiz,1)
xor    $0x30,%al
cmp    %esi,(%esi)
add    %ah,0x64(%ebx)
bound  %ebx,0x66(%edi)
jb     808f6cf <_IO_stdin_used+0x920b>
add    %ah,%gs:0x68(%ebx)
imul   $0x676e6f6c,%fs:0x5f(%edx),%esi
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs add %ch,%fs:%gs:(%edi)
jo     808f6f6 <_IO_stdin_used+0x9232>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    808f6ee <_IO_stdin_used+0x922a>
insb   (%dx),%es:(%edi)
data16
das
data16
add    %ch,%fs:(%esi)
cs
das
data16
add    %ch,%fs:(%edi)
jo     808f70a <_IO_stdin_used+0x9246>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    808f702 <_IO_stdin_used+0x923e>
insb   (%dx),%es:(%edi)
data16
das
data16
fs
das
and    $0x73252f64,%eax
add    %dh,0x74(%ebp)
imul   $0x632e736e,0x65(%ebp),%ebp
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    808f729 <_IO_stdin_used+0x9265>
arpl   %ax,%gs:(%eax)
jbe    808f71f <_IO_stdin_used+0x925b>
insb   (%dx),%es:(%edi)
imul   $0x69745f65,0x74(%ecx,%eiz,2),%esp
insl   (%dx),%es:(%edi)
gs
jae    808f73b <_IO_stdin_used+0x9277>
arpl   %ax,%gs:(%eax)
and    %ah,(%edi)
sub    $0x2773252d,%eax
add    %ah,0x69203a73
outsb  %ds:(%esi),(%dx)
jbe    808f73f <_IO_stdin_used+0x927b>
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,0x2527202d
arpl   %sp,(%edi)
or     (%eax),%al
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     808f76f <_IO_stdin_used+0x92ab>
imul   $0x73252720,0x6e(%edi),%ebp
daa
and    %ch,0x73(%ecx)
and    %ah,0x6d(%ecx)
bound  %ebp,0x67(%ecx)
jne    808f77d <_IO_stdin_used+0x92b9>
jne    808f783 <_IO_stdin_used+0x92bf>
cmp    (%eax),%esp
jo     808f783 <_IO_stdin_used+0x92bf>
jae    808f789 <_IO_stdin_used+0x92c5>
imul   $0x6974696c,0x69(%edx),%esp
gs
jae    808f75a <_IO_stdin_used+0x9296>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     808f79f <_IO_stdin_used+0x92db>
imul   $0x2d2d2720,0x6e(%edi),%ebp
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    808f7a9 <_IO_stdin_used+0x92e5>
daa
je     808f75e <_IO_stdin_used+0x929a>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808f764 <_IO_stdin_used+0x92a0>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 808f7b9 <_IO_stdin_used+0x92f5>
outsb  %gs:(%esi),(%dx)
je     808f75a <_IO_stdin_used+0x9296>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     808f7cf <_IO_stdin_used+0x930b>
imul   $0x63252720,0x6e(%edi),%ebp
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    808f7d9 <_IO_stdin_used+0x9315>
daa
je     808f78e <_IO_stdin_used+0x92ca>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808f794 <_IO_stdin_used+0x92d0>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 808f7e9 <_IO_stdin_used+0x9325>
outsb  %gs:(%esi),(%dx)
je     808f78a <_IO_stdin_used+0x92c6>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f203a73,%eax
jo     808f7ff <_IO_stdin_used+0x933b>
imul   $0x2d2d2720,0x6e(%edi),%ebp
and    $0x72202773,%eax
gs
jno    808f80f <_IO_stdin_used+0x934b>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 808f814 <_IO_stdin_used+0x9350>
outsb  %gs:(%esi),(%dx)
je     808f7b5 <_IO_stdin_used+0x92f1>
add    %ah,0x75203a73
outsb  %ds:(%esi),(%dx)
jb     808f819 <_IO_stdin_used+0x9355>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x706f2064,0x65(%edx),%edi
je     808f82a <_IO_stdin_used+0x9366>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
sub    $0x2773252d,%eax
or     (%eax),%al
and    $0x75203a73,%eax
outsb  %ds:(%esi),(%dx)
jb     808f839 <_IO_stdin_used+0x9375>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x706f2064,0x65(%edx),%edi
je     808f84a <_IO_stdin_used+0x9386>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x27732563,%eax
or     (%eax),%al
and    $0x6f203a73,%eax
jo     808f867 <_IO_stdin_used+0x93a3>
imul   $0x71657220,0x6e(%edi),%ebp
jne    808f865 <_IO_stdin_used+0x93a1>
jb     808f863 <_IO_stdin_used+0x939f>
jae    808f820 <_IO_stdin_used+0x935c>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 808f875 <_IO_stdin_used+0x93b1>
outsb  %gs:(%esi),(%dx)
je     808f82c <_IO_stdin_used+0x9368>
sub    $0x2527202d,%eax
arpl   %sp,(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f203a73
jo     808f893 <_IO_stdin_used+0x93cf>
imul   $0x572d2720,0x6e(%edi),%ebp
and    %ah,0x69202773
jae    808f84e <_IO_stdin_used+0x938a>
popa
insl   (%dx),%es:(%edi)
bound  %ebp,0x67(%ecx)
jne    808f8a4 <_IO_stdin_used+0x93e0>
jne    808f8aa <_IO_stdin_used+0x93e6>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f203a73
jo     808f8b7 <_IO_stdin_used+0x93f3>
imul   $0x572d2720,0x6e(%edi),%ebp
and    %ah,0x64202773
outsl  %ds:(%esi),(%dx)
gs
jae    808f8c2 <_IO_stdin_used+0x93fe>
daa
je     808f877 <_IO_stdin_used+0x93b3>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     808f87d <_IO_stdin_used+0x93b9>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 808f8d2 <_IO_stdin_used+0x940e>
outsb  %gs:(%esi),(%dx)
je     808f873 <_IO_stdin_used+0x93af>
add    %al,(%eax)
add    %ah,0x6f203a73
jo     808f8e7 <_IO_stdin_used+0x9423>
imul   $0x572d2720,0x6e(%edi),%ebp
and    %ah,0x72202773
gs
jno    808f8f8 <_IO_stdin_used+0x9434>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 808f8fd <_IO_stdin_used+0x9439>
outsb  %gs:(%esi),(%dx)
je     808f89e <_IO_stdin_used+0x93da>
add    %al,(%eax)
add    %al,(%eax)
add    %ch,-0x581ff7fc(%eax)
add    $0x8,%al
shlb   $0x0,0x8(%esp,%eax,1)
add    %ebx,(%ebx)
add    (%ebx),%edi
cmp    %bl,(%ecx)
add    %al,(%eax)
add    %es:(%eax),%eax
add    %bl,0x54fffbaa(%eax)
sbb    %eax,(%eax)
add    %cl,(%eax)
mov    $0xfb,%bh
pushl  (%ebx,%eiz,2)
add    %al,(%eax)
cmp    %dh,0x634cfffb(%edi)
add    %al,(%eax)
xchg   %eax,%edx
mov    $0xfb,%bh
pushl  0x63(%eax)
add    %al,(%eax)
in     (%dx),%al
mov    $0xfb,%bh
call   *-0x47c80000(%ecx,%ebp,2)
sti
call   *0x0(%edx,%ebp,2)
add    %ch,-0x38(%eax)
sti
(bad)
js     808f903 <_IO_stdin_used+0x943f>
add    %al,(%eax)
fmul   %st(0),%st
sti
inc    %eax
sbb    %eax,(%eax)
add    %cl,(%eax)
leave
sti
(bad)
in     (%dx),%al
sbb    %eax,(%eax)
add    %cl,-0x35(%eax)
sti
pushl  (%eax)
sbb    (%eax),%al
add    %cl,-0x77000434(%eax)
sbb    (%eax),%al
add    %bh,%al
int3
sti
ljmp   *-0x32680000(%edx,%ebx,1)
sti
dec    %eax
sbb    (%eax),%al
add    %ch,%al
int    $0xfb
(bad)
fcompl (%edx)
add    %al,(%eax)
mov    %cl,%dh
sti
jmp    *(%ebx,%ebx,1)
add    %al,(%eax)
test   $0xce,%al
sti
(bad)
cmp    $0x1b,%al
add    %al,(%eax)
fmul   %st(6),%st
sti
call   *0x0(%ebx,%ebx,1)
add    %bh,%al
into
sti
ljmp   *0x1b(%eax)
add    %al,(%eax)
sbb    %cl,%bh
sti
(bad)
jl     808f965 <_IO_stdin_used+0x94a1>
add    %al,(%eax)
sub    %cl,%bh
sti
call   *0x6800001b(%eax)
iret
sti
ljmp   *-0x37ffffe5(%eax)
iret
sti
inc    %eax
sbb    (%eax),%eax
add    %ch,-0x30(%eax)
sti
(bad)
call   f008f988 <_end+0xe7ff1424>
sar    %bl
jmp    *(%esp,%ebx,1)
add    %al,(%eax)
push   $0x54fffbd3
sbb    $0x0,%al
add    %cl,0x68fffbd3(%eax)
sbb    $0x0,%al
add    %cl,%al
sar    %cl,%ebx
(bad)
jl     808f9a6 <_IO_stdin_used+0x94e2>
add    %al,(%eax)
or     %dl,%ah
sti
lcall  *-0x67ffffe4(%eax)
aam    $0xfb
(bad)
mov    $0xa800001c,%eax
aam    $0xfb
dec    %esp
sbb    $0x0,%al
add    %ch,%al
aam    $0xfb
(bad)
in     (%dx),%al
sbb    $0x0,%al
add    %ch,(%eax)
aad    $0xfb
decl   -0x2a980000(,%ebx,1)
sti
ljmp   *(%eax)
sbb    $0xd5f80000,%eax
sti
incl   0x0(%ebp,%ebx,1)
add    %bh,%al
xlat   %ds:(%ebx)
sti
incl   -0x27280000(%ebp,%ebx,1)
sti
ljmp   *0x6800001d(%eax)
(bad)
incl   (%eax)
push   %ds
add    %al,(%eax)
mov    $0x1cfffbdb,%eax
push   %ds
add    %al,(%eax)
or     %bl,%ch
sti
jmp    *0x0(%esi,%ebx,1)
add    %cl,%al
(bad)
call   *-0x21880000(%esi,%ebx,1)
sti
(bad)
fcompl (%esi)
add    %al,(%eax)
push   $0x34fffbe0
pop    %ds
add    %al,(%eax)
push   $0x50fffbe1
pop    %ds
add    %al,(%eax)
js     808f9f0 <_IO_stdin_used+0x952c>
sti
decl   -0x1ce80000(%edi,%ebx,1)
sti
inc    %esp
pop    %ds
add    %al,(%eax)
dec    %eax
jmp    808fa1a <_IO_stdin_used+0x9556>
lcall  *(%eax,%eiz,1)
add    %al,(%eax)
clc
lock sti
lcall  *0x0(%eax,%eiz,1)
add    %bl,-0x63000409(%eax)
and    %al,(%eax)
add    %bh,(%eax)
clc
sti
jmp    *%esp
and    %al,(%eax)
add    %cl,-0x8(%eax)
sti
(bad)
clc
and    %al,(%eax)
add    %ch,-0x8(%eax)
sti
call   *(%eax)
and    %eax,(%eax)
add    %cl,0x54fffc03(%eax)
and    %eax,(%eax)
add    %bh,%al
add    %esp,%edi
decl   0x4480000(%ecx,%eiz,1)
cld
(bad)
mov    $0xc8000021,%eax
add    $0x21f8fffc,%eax
add    %al,(%eax)
cwtl
pop    %es
cld
jmp    *0x0(%edx,%eiz,1)
add    %ch,%al
pop    %es
cld
(bad)
jl     808fa9c <_IO_stdin_used+0x95d8>
add    %al,(%eax)
dec    %eax
or     %ah,%bh
call   *%esp
and    (%eax),%al
add    %bl,0xa(%eax)
cld
(bad)
call   7008faaf <_end+0x67ff154b>
or     %esp,%edi
(bad)
cmp    $0x23,%al
add    %al,(%eax)
cwtl
or     %esp,%edi
call   *0x0(%ebx,%eiz,1)
add    %ch,(%eax)
or     $0xfc,%al
(bad)
js     808fac5 <_IO_stdin_used+0x9601>
add    %al,(%eax)
cmp    %cl,0x23c0fffc
add    %al,(%eax)
cwtl
or     $0x23f0fffc,%eax
add    %al,(%eax)
cwtl
push   %cs
cld
lcall  *(%esp)
add    %al,(%eax)
sbb    %cl,(%edi)
cld
(bad)
cmp    %ah,(%eax,%eax,1)
add    %bl,(%eax)
sbb    %bh,%ah
ljmp   *0x1c480000(%esp)
cld
(bad)
fsubl  (%eax,%eax,1)
add    %cl,-0xb0003e4(%eax)
and    $0x0,%al
add    %bh,0x18fffc1c(%eax)
and    $0x22280000,%eax
cld
lcall  *0x0(%ebp,%eiz,1)
add    %bl,0x7cfffc22(%eax)
and    $0x23080000,%eax
cld
lcall  *0x23880000(%ebp,%eiz,1)
cld
dec    %eax
and    $0x24080000,%eax
cld
decl   (%eax)
add    %al,%es:(%eax)
js     808fb32 <_IO_stdin_used+0x966e>
cld
ljmp   *(%esi,%eiz,1)
add    %al,(%eax)
or     %ah,0x265cfffc
add    %al,(%eax)
sub    %ah,(%esi)
cld
lcall  *0x26880000(%esi,%eiz,1)
cld
inc    %eax
add    %al,%es:(%eax)
enter  $0xfc26,$0xff
loopne 808fb58 <_IO_stdin_used+0x9694>
add    %al,(%eax)
or     %ah,(%edi)
cld
incl   (%eax)
daa
add    %al,(%eax)
pop    %eax
daa
cld
ljmp   *(%edi,%eiz,1)
add    %al,(%eax)
call   6108f770 <_end+0x58ff120c>
daa
add    %al,(%eax)
pop    %eax
sub    %bh,%ah
(bad)
jl     808fb79 <_IO_stdin_used+0x96b5>
add    %al,(%eax)
cwtl
sub    %bh,%ah
call   *0x28e80000(%edi,%eiz,1)
cld
pushl  0x29880000(%edi,%eiz,1)
cld
jmp    *%esp
daa
add    %al,(%eax)
sbb    %ch,(%ebx)
cld
jmp    *(%eax,%ebp,1)
add    %al,(%eax)
push   $0x64fffc2c
sub    %al,(%eax)
add    %ch,%al
sub    $0xfc,%al
lcall  *0x78000028(%eax)
sub    $0x28ccfffc,%eax
add    %al,(%eax)
mov    %ch,(%edi)
cld
decl   (%ecx,%ebp,1)
add    %al,(%eax)
sub    %bh,(%edx)
cld
jmp    *0x0(%ecx,%ebp,1)
add    %bh,%al
cmp    %ah,%bh
jmp    *-0x67ffffd7(%eax)
cmp    %esp,%edi
jmp    *%eax
sub    %eax,(%eax)
add    %bh,(%eax)
ds
cld
jmp    *(%eax)
sub    (%eax),%al
add    %cl,0x4cfffc3e(%eax)
sub    (%eax),%al
add    %ch,(%eax)
aas
cld
(bad)
js     808fbec <_IO_stdin_used+0x9728>
add    %al,(%eax)
enter  $0xfc3f,$0xff
mov    $0x5800002a,%eax
inc    %eax
cld
decl   (%ebx,%ebp,1)
add    %al,(%eax)
test   $0x41,%al
cld
incl   0x0(%ebx,%ebp,1)
add    %cl,(%eax)
inc    %edx
cld
pushl  0x2b(%eax)
add    %al,(%eax)
cmp    %al,-0x4(%ebp)
pushl  -0x67ffffd5(%eax)
pop    %edx
cld
jmp    *%esp
sub    (%eax),%eax
add    %cl,0x5d(%eax)
cld
jmp    *(%esp,%ebp,1)
add    %al,(%eax)
dec    %eax
pop    %esi
cld
jmp    *0x2c(%eax)
add    %al,(%eax)
sbb    %bl,-0x4(%edi)
jmp    *0x1800002c(%eax)
addr16 cld
jmp    *%eax
sub    $0x0,%al
add    %ch,0x67(%eax)
cld
push   %esp
sub    $0x0,%al
add    %bh,0x8fffc67(%eax)
sub    $0x67c80000,%eax
cld
lcall  *0x67d80000(,%ebp,1)
cld
pushl  0x67e80000(,%ebp,1)
cld
decl   0x0(%ebp,%ebp,1)
add    %ch,-0x7b000397(%eax)
sub    $0x6a180000,%eax
cld
(bad)
mov    $0x2800002d,%eax
insb   (%dx),%es:(%edi)
cld
call   *(%eax)
add    %al,%cs:(%eax)
mov    $0x64fffc6d,%eax
add    %al,%cs:(%eax)
sub    %ch,-0x4(%esi)
ljmp   *0x72d80000(%esi,%ebp,1)
cld
push   %eax
add    %al,%cs:(%eax)
enter  $0xfc75,$0xff
xor    $0x2f,%al
add    %al,(%eax)
cwtl
js     808fc73 <_IO_stdin_used+0x97af>
(bad)
js     808fca9 <_IO_stdin_used+0x97e5>
add    %al,(%eax)
enter  $0xfc78,$0xff
nop
das
add    %al,(%eax)
pop    %eax
jns    808fc83 <_IO_stdin_used+0x97bf>
inc    %eax
das
add    %al,(%eax)
fdivrs -0x4(%edx)
lcall  *(%eax)
xor    %al,(%eax)
add    %ch,0x60fffc7b(%eax)
xor    %al,(%eax)
add    %bl,-0x47000384(%eax)
xor    %al,(%eax)
add    %bh,%al
jle    808fca3 <_IO_stdin_used+0x97df>
call   *(%eax)
xor    %eax,(%eax)
add    %bh,-0x7f(%eax)
cld
ljmp   *0x31(%eax)
add    %al,(%eax)
push   $0xb4fffc82
xor    %eax,(%eax)
add    %bl,(%eax)
xchg   %edi,%esp
jmp    *(%edx,%esi,1)
add    %al,(%eax)
clc
mov    %?,%esp
(bad)
jl     808fcfc <_IO_stdin_used+0x9838>
add    %al,(%eax)
push   $0xa8fffc8d
xor    (%eax),%al
add    %bl,%al
xchg   %eax,%ecx
cld
incl   0x0(%ebx,%esi,1)
add    %bl,%al
xchg   %eax,%edx
cld
incl   -0x6d180000(%ebx,%esi,1)
cld
lcall  *-0x7ffffcd(%eax)
xchg   %eax,%edx
cld
ljmp   *-0x6cb80000(%ebx,%esi,1)
cld
jmp    *%esp
xor    (%eax),%eax
add    %bl,0x20fffc93(%eax)
xor    $0x0,%al
add    %bl,%al
xchg   %eax,%ebx
cld
call   *0x0(%esp,%esi,1)
add    %ch,(%eax)
xchg   %eax,%esp
cld
incl   0x38000034(%eax)
xchg   %eax,%esp
cld
call   *-0x6bb80000(%esp,%esi,1)
cld
ljmp   *0x58000034(%eax)
xchg   %eax,%esp
cld
(bad)
mov    $0x68000034,%esp
xchg   %eax,%esp
cld
call   *%eax
xor    $0x0,%al
add    %bh,-0x6c(%eax)
cld
jmp    *%esp
xor    $0x0,%al
add    %cl,-0x700036c(%eax)
xor    $0x0,%al
add    %bh,%al
xchg   %eax,%esp
cld
pushl  -0x6ad80000(,%esi,1)
cld
jmp    *0x35(%eax)
add    %al,(%eax)
pop    %eax
xchg   %eax,%ebp
cld
decl   -0x6a380000(%ebp,%esi,1)
cld
call   *%esp
xor    $0x96180000,%eax
cld
call   *(%eax)
add    %al,%ss:(%eax)
js     808fd04 <_IO_stdin_used+0x9840>
cld
jmp    *0x0(%esi,%esi,1)
add    %cl,-0x69(%eax)
cld
jmp    *-0x66780000(%esi,%esi,1)
cld
(bad)
cld
add    %al,%ss:(%eax)
enter  $0xfc99,$0xff
sub    %dh,(%edi)
add    %al,(%eax)
sub    %bl,0x3780ff(%esp,%edi,8)
add    %cl,%al
pushf
cld
(bad)
mov    $0x18000037,%esp
popf
cld
(bad)
fdivl  (%edi)
add    %al,(%eax)
push   $0x18fffc9d
cmp    %al,(%eax)
add    %bh,0x4cfffc9d(%eax)
cmp    %al,(%eax)
add    %ch,-0x61(%eax)
cld
decl   -0x60680000(%eax,%edi,1)
cld
inc    %eax
cmp    %al,(%eax)
add    %bh,%al
lahf
cld
(bad)
clc
cmp    %al,(%eax)
add    %bl,(%eax)
mov    0x390cfffc,%al
add    %al,(%eax)
cmp    %ah,0x3920fffc(%eax)
add    %al,(%eax)
pop    %eax
mov    0x3934fffc,%al
add    %al,(%eax)
js     808fd86 <_IO_stdin_used+0x98c2>
cld
decl   0x39(%eax)
add    %al,(%eax)
cwtl
mov    0x395cfffc,%al
add    %al,(%eax)
mov    $0x70fffca0,%eax
cmp    %eax,(%eax)
add    %bh,(%eax)
mov    0x39a8fffc,%eax
add    %al,(%eax)
push   $0xbcfffca1
cmp    %eax,(%eax)
add    %cl,-0x2f00035f(%eax)
cmp    %eax,(%eax)
add    %ch,-0x1b00035f(%eax)
cmp    %eax,(%eax)
add    %bl,%al
mov    0x3a18fffc,%eax
add    %al,(%eax)
mov    $0x58fffca2,%eax
cmp    (%eax),%al
add    %bh,%al
mov    %al,0x3a70fffc
add    %al,(%eax)
cmp    %ah,0x3a88fffc(%ebx)
add    %al,(%eax)
js     808fde1 <_IO_stdin_used+0x991d>
cld
jmp    *0x7800003a(%eax)
movsb  %ds:(%esi),%es:(%edi)
cld
(bad)
clc
cmp    (%eax),%al
add    %bh,0x10fffca4(%eax)
cmp    (%eax),%eax
add    %bh,%al
movsb  %ds:(%esi),%es:(%edi)
cld
ljmp   *(%eax)
cmp    (%eax),%eax
add    %bh,(%eax)
movsl  %ds:(%esi),%es:(%edi)
cld
lcall  *0x0(%ebx,%edi,1)
add    %cl,0x74fffca5(%eax)
cmp    (%eax),%eax
add    %bl,%al
movsl  %ds:(%esi),%es:(%edi)
cld
decl   -0x59680000(%ebx,%edi,1)
cld
dec    %eax
cmp    (%eax),%eax
add    %bl,-0x59(%eax)
cld
push   %esp
cmp    (%eax),%eax
add    %ch,0xcfffca7(%eax)
cmp    $0x0,%al
add    %ch,%al
cmpsl  %es:(%edi),%ds:(%esi)
cld
jmp    *(%esp,%edi,1)
add    %al,(%eax)
sub    %ch,0x3c3cfffc(%eax)
add    %al,(%eax)
js     808fe46 <_IO_stdin_used+0x9982>
cld
call   *0x0(%esp,%edi,1)
add    %bl,%al
test   $0xfc,%al
(bad)
js     808fee6 <_IO_stdin_used+0x9a22>
add    %al,(%eax)
pop    %eax
test   $0x3cb8fffc,%eax
add    %al,(%eax)
mov    %ch,0x3cccfffc(%ecx)
add    %al,(%eax)
mov    $0xe0fffca9,%eax
cmp    $0x0,%al
add    %ch,%al
test   $0x3cf4fffc,%eax
add    %al,(%eax)
sbb    %ch,0x3d08fffc(%edx)
add    %al,(%eax)
dec    %eax
stos   %al,%es:(%edi)
cld
lcall  *-0x55880000(,%edi,1)
cld
pushl  (%eax)
cmp    $0xaaa80000,%eax
cld
incl   0x0(%ebp,%edi,1)
add    %ch,%al
stos   %al,%es:(%edi)
cld
lcall  *0x3d(%eax)
add    %al,(%eax)
sub    %ch,0x3d6cfffc(%ebx)
add    %al,(%eax)
pop    %eax
stos   %eax,%es:(%edi)
cld
incl   -0x77ffffc3(%eax)
stos   %eax,%es:(%edi)
cld
call   *-0x54080000(%ebp,%edi,1)
cld
inc    %esp
cmp    $0xac680000,%eax
cld
push   %esp
cmp    $0xacb80000,%eax
cld
ljmp   *(%esi,%edi,1)
add    %al,(%eax)
js     808fed3 <_IO_stdin_used+0x9a0f>
cld
call   *-0x4f780000(%esi,%edi,1)
cld
call   *%esp
add    %al,%ds:(%eax)
mov    %dh,0x3f14fffc(%ebx)
add    %al,(%eax)
fdivs  0x3f30fffc(%ebx)
add    %al,(%eax)
mov    %dh,0x3f5cff(%esp,%edi,8)
add    %cl,%al
mov    $0xfc,%ah
pushl  0x3f(%eax)
add    %al,(%eax)
sbb    %dh,0x3facfffc(%ebp)
add    %al,(%eax)
test   $0xb5,%al
cld
(bad)
call   c008ffa4 <_end+0xb7ff1a40>
mov    $0xfc,%dh
lcall  *(%eax)
inc    %eax
add    %al,(%eax)
sub    %dh,0x4054fffc(%edi)
add    %al,(%eax)
test   $0xb7,%al
cld
(bad)
js     808ffba <_IO_stdin_used+0x9af6>
add    %al,(%eax)
dec    %eax
mov    $0x40b0fffc,%eax
add    %al,(%eax)
fdivrs 0x40e8fffc(%eax)
add    %al,(%eax)
clc
mov    $0x4128fffc,%ecx
add    %al,(%eax)
js     808ff50 <_IO_stdin_used+0x9a8c>
cld
ljmp   *0x41(%eax)
add    %al,(%eax)
fdivrs 0x418cfffc(%edx)
add    %al,(%eax)
pop    %eax
mov    $0x41ccfffc,%esp
add    %al,(%eax)
clc
mov    $0x4208fffc,%esp
add    %al,(%eax)
sbb    %bh,0x421cfffc(%ebp)
add    %al,(%eax)
mov    %bh,0x4270fffc(%ebp)
add    %al,(%eax)
cmp    %al,%al
cld
pushl  0x78000042(%eax)
sar    $0xff,%ah
enter  $0x42,$0x0
mov    $0xf8fffcc0,%eax
inc    %edx
add    %al,(%eax)
sbb    %al,%cl
cld
incl   0x43(%eax)
add    %al,(%eax)
dec    %eax
sar    $0xff,%esp
pusha
inc    %ebx
add    %al,(%eax)
test   $0xc1,%al
cld
lcall  *-0x3db80000(%ebx,%eax,2)
cld
(bad)
fadds  0x0(%ebx)
add    %ch,0x4fffcc2(%eax)
inc    %esp
add    %al,(%eax)
sbb    %al,%bl
cld
(bad)
cmp    $0x44,%al
add    %al,(%eax)
cmp    %al,%bl
cld
call   *0x44(%eax)
add    %al,(%eax)
mov    $0xa4fffcc3,%eax
inc    %esp
add    %al,(%eax)
call   c508fce4 <_end+0xbcff1780>
inc    %esp
add    %al,(%eax)
cmp    %al,%ch
cld
(bad)
cld
inc    %esp
add    %al,(%eax)
fadd   %st(6),%st
cld
(bad)
cmp    $0x45,%al
add    %al,(%eax)
cmp    %cl,%ch
cld
(bad)
jl     809007f <_IO_stdin_used+0x9bbb>
add    %al,(%eax)
dec    %eax
int    $0xfc
call   *-0x67ffffbb(%eax)
into
cld
call   *%eax
inc    %ebp
add    %al,(%eax)
js     809001d <_IO_stdin_used+0x9b59>
cld
call   *(%eax)
inc    %esi
add    %al,(%eax)
mov    %dl,%bl
cld
call   *0x0(%esi,%eax,2)
add    %bl,-0x2a(%eax)
cld
call   *-0x28b80000(%esi,%eax,2)
cld
call   *%esp
inc    %esi
add    %al,(%eax)
sub    %bl,%al
cld
incl   (%edi,%eax,2)
add    %al,(%eax)
push   $0x30fffcd8
inc    %edi
add    %al,(%eax)
enter  $0xfcd8,$0xff
push   %esp
inc    %edi
add    %al,(%eax)
fcomp  %st(0)
cld
ljmp   *0x47(%eax)
add    %al,(%eax)
dec    %eax
frndint
jmp    *-0x21580000(%edi,%eax,2)
cld
(bad)
call   d00900e4 <_end+0xc7ff1b80>
fdivrp %st,%st(4)
(bad)
cld
inc    %edi
add    %al,(%eax)
clc
fdivrp %st,%st(4)
call   *(%eax)
dec    %eax
add    %al,(%eax)
fsub   %st(1),%st
cld
lcall  *0x48(%eax)
add    %al,(%eax)
call   a108fd9b <_end+0x98ff1837>
dec    %eax
add    %al,(%eax)
dec    %eax
lock cld
dec    %eax
dec    %eax
add    %al,(%eax)
pop    %eax
repnz cld
incl   (%eax)
dec    %ecx
add    %al,(%eax)
cwtl
repnz cld
jmp    *(%ecx,%ecx,2)
add    %al,(%eax)
call   8508fdd2 <_end+0x7cff186e>
dec    %ecx
add    %al,(%eax)
call   c508fddb <_end+0xbcff1877>
dec    %ecx
add    %al,(%eax)
mov    %bh,%bl
cld
(bad)
in     (%dx),%al
dec    %ecx
add    %al,(%eax)
fadds  0x4a1cfffd
add    %al,(%eax)
or     %al,(%esi)
std
(bad)
cmp    %cl,0x0(%edx)
add    %bl,0x6(%eax)
std
call   *0x4a(%eax)
add    %al,(%eax)
test   $0x6,%al
std
ljmp   *0x4a(%eax)
add    %al,(%eax)
clc
push   %es
std
incl   -0x47ffffb6(%eax)
pop    %es
std
ljmp   *0x8880000(%edx,%ecx,2)
std
(bad)
in     (%dx),%al
dec    %edx
add    %al,(%eax)
push   $0x44fffd0d
dec    %ebx
add    %al,(%eax)
mov    $0x5cfffd0d,%eax
dec    %ebx
add    %al,(%eax)
mov    $0xa0fffd14,%eax
dec    %ebx
add    %al,(%eax)
or     %dl,0x4bb8fffd
add    %al,(%eax)
sub    %dl,(%edi)
std
call   *(%eax)
dec    %esp
add    %al,(%eax)
sub    %bl,(%edi)
std
call   *0x0(%esp,%ecx,2)
add    %bl,(%eax)
and    %bh,%ch
decl   0x20880000(%esp,%ecx,2)
std
(bad)
mov    $0xa800004c,%eax
and    %edi,%ebp
(bad)
call   900901b9 <_end+0x87ff1c55>
and    %ch,%bh
lcall  *(%eax)
dec    %ebp
add    %al,(%eax)
clc
and    %ch,%bh
incl   0x0(%ebp,%ecx,2)
add    %cl,%al
daa
std
(bad)
jl     80901cf <_IO_stdin_used+0x9d0b>
add    %al,(%eax)
pop    %eax
sub    %bh,%ch
lcall  *0x28780000(%ebp,%ecx,2)
std
pushl  0x7800004d(%eax)
sub    %edi,%ebp
call   *%esp
dec    %ebp
add    %al,(%eax)
cwtl
sub    %edi,%ebp
push   %eax
dec    %ebp
add    %al,(%eax)
test   $0x29,%al
std
incl   (%esi,%ecx,2)
add    %al,(%eax)
fsubrs (%ecx)
std
pushl  (%eax)
dec    %esi
add    %al,(%eax)
test   $0x2b,%al
std
jmp    *0x4e(%eax)
add    %al,(%eax)
call   8908feec <_end+0x80ff1988>
dec    %esi
add    %al,(%eax)
sub    %ch,0x4ebcfffd
add    %al,(%eax)
or     %ch,(%esi)
std
(bad)
cld
dec    %esi
add    %al,(%eax)
fsubrs (%esi)
std
call   *0x0(%edi,%ecx,2)
add    %ch,(%eax)
das
std
(bad)
js     8090231 <_IO_stdin_used+0x9d6d>
add    %al,(%eax)
mov    %dh,(%eax)
std
(bad)
mov    $0x8800004f,%eax
xor    %edi,%ebp
call   *(%eax)
push   %eax
add    %al,(%eax)
sub    %dh,(%edx)
std
call   *0x50(%eax)
add    %al,(%eax)
fdivs  (%ebx)
std
call   *0x68000050(%eax)
xor    $0xfd,%al
jmp    *0x34b80000(%eax,%edx,2)
std
dec    %eax
push   %eax
add    %al,(%eax)
sbb    %dh,(%edi)
std
call   *(%ecx,%edx,2)
add    %al,(%eax)
push   $0x50fffd38
push   %ecx
add    %al,(%eax)
test   $0x38,%al
std
ljmp   *0x51(%eax)
add    %al,(%eax)
cmp    %bh,(%ecx)
std
(bad)
mov    $0xc8000051,%esp
cmp    %edi,%ebp
(bad)
cld
push   %ecx
add    %al,(%eax)
sbb    %bh,(%edx)
std
call   *(%edx,%edx,2)
add    %al,(%eax)
cmp    %bh,(%edx)
std
ljmp   *(%eax)
push   %edx
add    %al,(%eax)
pop    %eax
cmp    %ch,%bh
(bad)
cmp    $0x52,%al
add    %al,(%eax)
js     8090290 <_IO_stdin_used+0x9dcc>
std
call   *0x52(%eax)
add    %al,(%eax)
mov    $0x88fffd3b,%eax
push   %edx
add    %al,(%eax)
fdivrs (%ebx)
std
lcall  *0x3c180000(%edx,%edx,2)
std
inc    %eax
push   %edx
add    %al,(%eax)
cmp    %bh,0x52d4ff(,%edi,8)
add    %bl,0x3c(%eax)
std
(bad)
call   900902d7 <_end+0x87ff1d73>
cmp    $0xfd,%al
(bad)
cld
push   %edx
add    %al,(%eax)
test   $0x3c,%al
std
call   *(%eax)
push   %ebx
add    %al,(%eax)
cmp    %bh,0x5348fffd
add    %al,(%eax)
push   $0x5cfffd3d
push   %ebx
add    %al,(%eax)
test   $0x3d,%al
std
(bad)
js     80902fd <_IO_stdin_used+0x9e39>
add    %al,(%eax)
clc
cmp    $0x5394fffd,%eax
add    %al,(%eax)
cmp    %bh,(%esi)
std
(bad)
mov    $0x98000053,%eax
ds
std
(bad)
in     (%dx),%al
push   %ebx
add    %al,(%eax)
mov    $0xcfffd3e,%eax
push   %esp
add    %al,(%eax)
sub    %bh,(%edi)
std
decl   0x0(%esp,%edx,2)
add    %bh,0x3f(%eax)
std
(bad)
js     809032e <_IO_stdin_used+0x9e6a>
add    %al,(%eax)
test   $0x3f,%al
std
lcall  *0x68000054(%eax)
inc    %ecx
std
call   *%esp
push   %esp
add    %al,(%eax)
dec    %eax
inc    %edx
std
lcall  *0x43980000(,%edx,2)
std
pushl  0x55(%eax)
add    %al,(%eax)
mov    %al,-0x1(%ebp,%edi,8)
enter  $0x55,$0x0
mov    $0xe0fffd44,%eax
push   %ebp
add    %al,(%eax)
fadds  -0x1(%ebp,%edi,8)
hlt
push   %ebp
add    %al,(%eax)
dec    %eax
inc    %ebp
std
call   *(%eax)
push   %esi
add    %al,(%eax)
js     8090363 <_IO_stdin_used+0x9e9f>
std
ljmp   *(%eax)
push   %esi
add    %al,(%eax)
test   $0x45,%al
std
decl   0x56(%eax)
add    %al,(%eax)
call   7d090076 <_end+0x74ff1b12>
push   %esi
add    %al,(%eax)
test   $0x46,%al
std
call   *0x46b80000(%esi,%edx,2)
std
ljmp   *0x58000056(%eax)
inc    %edi
std
(bad)
call   b00903a3 <_end+0xa7ff1e3f>
inc    %edi
std
jmp    *(%eax)
push   %edi
add    %al,(%eax)
dec    %eax
dec    %eax
std
lcall  *0x0(%edi,%edx,2)
add    %cl,-0x470002b1(%eax)
push   %edi
add    %al,(%eax)
sbb    %dl,-0x3(%eax)
jmp    *%esp
push   %edi
add    %al,(%eax)
test   $0x50,%al
std
call   *(%eax)
pop    %eax
add    %al,(%eax)
dec    %eax
push   %ecx
std
pushl  (%eax,%ebx,2)
add    %al,(%eax)
call   610900d2 <_end+0x58ff1b6e>
pop    %eax
add    %al,(%eax)
sub    %dl,-0x3(%edx)
(bad)
js     80903e2 <_IO_stdin_used+0x9f1e>
add    %al,(%eax)
dec    %eax
push   %edx
std
call   *0x78000058(%eax)
push   %edx
std
ljmp   *-0x37ffffa8(%eax)
push   %edx
std
inc    %eax
pop    %eax
add    %al,(%eax)
call   e10900fb <_end+0xd8ff1b97>
pop    %eax
add    %al,(%eax)
or     %dl,-0x3(%ebx)
push   %esp
pop    %eax
add    %al,(%eax)
js     8090409 <_IO_stdin_used+0x9f45>
std
jmp    *(%eax)
pop    %ecx
add    %al,(%eax)
fcoms  -0x1(%ebp,%edi,8)
pop    %esp
pop    %ecx
add    %al,(%eax)
pop    %eax
push   %edi
std
jmp    *-0x67ffffa7(%eax)
push   %edi
std
pushl  0x58f80000(%ecx,%ebx,2)
std
(bad)
in     (%dx),%al
pop    %ecx
add    %al,(%eax)
test   $0x59,%al
std
call   *0x0(%edx,%ebx,2)
add    %ch,(%eax)
pop    %ebx
std
incl   0x5c480000(%edx,%ebx,2)
std
call   *%eax
pop    %edx
add    %al,(%eax)
test   $0x60,%al
std
call   *(%ebx,%ebx,2)
add    %al,(%eax)
or     %ah,-0x3(%ecx)
incl   0x5b(%eax)
add    %al,(%eax)
js     8090467 <_IO_stdin_used+0x9fa3>
std
lcall  *0x5b(%eax)
add    %al,(%eax)
test   $0x61,%al
std
ljmp   *0x0(%ebx,%ebx,2)
add    %bh,(%eax)
(bad)
std
ljmp   *0x5800005b(%eax)
(bad)
std
inc    %eax
pop    %ebx
add    %al,(%eax)
mov    $0xe4fffd62,%eax
pop    %ebx
add    %al,(%eax)
or     %ah,-0x3(%ebx)
decl   (%eax)
pop    %esp
add    %al,(%eax)
sbb    %ah,-0x3(%ebx)
lcall  *(%esp,%ebx,2)
add    %al,(%eax)
sub    %ah,-0x3(%ebx)
pushl  (%eax)
pop    %esp
add    %al,(%eax)
pop    %eax
arpl   %di,%bp
incl   0x0(%esp,%ebx,2)
add    %bh,0x70fffd63(%eax)
pop    %esp
add    %al,(%eax)
sbb    %ah,-0x1(%ebp,%edi,8)
pushf
pop    %esp
add    %al,(%eax)
mov    $0xd4fffd64,%eax
pop    %esp
add    %al,(%eax)
test   $0x65,%al
std
jmp    *(%eax)
pop    %ebp
add    %al,(%eax)
cmp    %ah,-0x3(%esi)
(bad)
js     80904cf <_IO_stdin_used+0xa00b>
add    %al,(%eax)
js     80904dd <_IO_stdin_used+0xa019>
std
(bad)
mov    $0xb800005d,%eax
imul   $0x5e28ff,%ebp,%edi
add    %cl,(%eax)
imul   $0xffffffff,%ebp,%edi
sbbb   $0x0,0x0(%esi)
cwtl
insb   (%dx),%es:(%edi)
std
inc    %eax
pop    %esi
add    %al,(%eax)
sbb    %ch,-0x3(%edi)
incl   (%eax)
pop    %edi
add    %al,(%eax)
fsubrs -0x3(%edi)
call   *0x0(%edi,%ebx,2)
add    %bh,0x71(%eax)
std
inc    %eax
pop    %edi
add    %al,(%eax)
fdivs  -0x3(%edx)
ljmp   *(%eax,%eiz,2)
add    %al,(%eax)
cmp    %dh,-0x3(%esi)
ljmp   *0x0(%eax,%eiz,2)
add    %bh,%al
jge    80904bc <_IO_stdin_used+0x9ff8>
ljmp   *0x7e980000(%eax,%eiz,2)
std
(bad)
call   6009052d <_end+0x57ff1fc9>
cmp    $0xff,%ch
sub    %ah,0x0(%ecx)
add    %ch,%al
(bad)
std
ljmp   *0x61(%eax)
add    %al,(%eax)
cmp    %al,0x6194ff(%ebp,%edi,8)
add    %bh,-0x7c(%eax)
std
pushl  -0x7b580000(%ecx,%eiz,2)
std
dec    %esp
popa
add    %al,(%eax)
fadds  0x6204fffd(%ebp)
add    %al,(%eax)
mov    %al,0x624cfffd(%esi)
add    %al,(%eax)
enter  $0xfd87,$0xff
mov    %fs,0x0(%edx)
add    %bl,-0x78(%eax)
std
dec    %eax
bound  %eax,(%eax)
add    %bh,%al
mov    %bh,%ch
(bad)
call   7009057f <_end+0x67ff201b>
mov    %edi,%ebp
decl   (%eax)
arpl   %ax,(%eax)
add    %bl,-0x75(%eax)
std
call   *-0x74580000(%ebx,%eiz,2)
std
pushl  -0x73880000(%ebx,%eiz,2)
std
(bad)
in     (%dx),%al
arpl   %ax,(%eax)
add    %ch,0x4fffd8c(%eax)
add    %al,%fs:(%eax)
clc
mov    %?,%ebp
pushl  (%esp,%eiz,2)
add    %al,(%eax)
push   $0x48fffd8d
add    %al,%fs:(%eax)
sbb    %cl,0x6478fffd(%esi)
add    %al,(%eax)
call   b90902ef <_end+0xb0ff1d8b>
add    %al,%fs:(%eax)
mov    %cl,0x64f8fffd(%edi)
add    %al,(%eax)
test   $0x8f,%al
std
decl   -0x70380000(,%eiz,2)
std
jmp    *(%eax)
add    %al,%gs:(%eax)
or     %dl,0x6550fffd(%eax)
add    %al,(%eax)
pop    %eax
nop
std
pushl  0x0(%ebp,%eiz,2)
add    %ch,-0x6b000270(%eax)
add    %al,%gs:(%eax)
sub    %dl,0x65ccff(%ebp,%edi,8)
add    %bh,-0x69(%eax)
std
decl   (%esi,%eiz,2)
add    %al,(%eax)
mov    %bl,0x6644fffd(%edx)
add    %al,(%eax)
sub    %bl,0x6680ff(%ebp,%edi,8)
add    %bh,%al
sahf
std
inc    %eax
data16
add    %al,(%eax)
push   $0xf8fffda0
data16
add    %al,(%eax)
fsubs  0x6710fffd(%eax)
add    %al,(%eax)
sbb    %ah,0x673cfffd(%ecx)
add    %al,(%eax)
dec    %eax
mov    0x6754fffd,%eax
add    %al,(%eax)
test   $0xa2,%al
std
decl   -0x58780000(%edi,%eiz,2)
std
incl   0x68(%eax)
add    %al,(%eax)
enter  $0xfda7,$0xff
push   %esp
push   $0xa8480000
std
pushl  0x68(%eax)
add    %al,(%eax)
mov    %ch,0x6890fffd(%eax)
add    %al,(%eax)
enter  $0xfda8,$0xff
mov    $0x68,%al
add    %al,(%eax)
or     %ch,0x68c4fffd(%ecx)
add    %al,(%eax)
js     80905bf <_IO_stdin_used+0xa0fb>
std
(bad)
call   20090685 <_end+0x17ff2121>
stos   %eax,%es:(%edi)
std
jmp    *(%ecx,%ebp,2)
add    %al,(%eax)
cwtl
lods   %ds:(%esi),%al
std
ljmp   *0x8000069(%eax)
lods   %ds:(%esi),%eax
std
dec    %esp
imul   $0xfdad9800,(%eax),%eax
(bad)
clc
imul   $0xfdc4f800,(%eax),%eax
(bad)
cmp    %ch,0x0(%edx)
add    %cl,-0x3b(%eax)
std
incl   -0x3a580000(%edx,%ebp,2)
std
jmp    *-0x39c80000(%edx,%ebp,2)
std
(bad)
fsubrs 0x0(%edx)
add    %cl,-0x39(%eax)
std
(bad)
cld
push   $0x0
add    %bl,0x10fffdc7(%eax)
imul   $0x0,(%eax),%eax
mov    $0x24fffdc7,%eax
imul   $0x0,(%eax),%eax
or     %cl,%al
std
(bad)
cmp    %ch,0x0(%ebx)
add    %cl,-0x38(%eax)
std
jmp    *0x0(%ebx,%ebp,2)
add    %cl,-0x6f000238(%eax)
imul   $0x0,(%eax),%eax
fmul   %st(0),%st
std
inc    %esp
imul   $0x0,(%eax),%eax
call   d090468 <_end+0x4ff1f04>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
clc
sar    %ch
pushl  0x6c(%eax)
add    %al,(%eax)
sbb    %dl,%cl
std
decl   -0x47ffff94(%eax)
(bad)
std
(bad)
clc
insb   (%dx),%es:(%edi)
add    %al,(%eax)
call   1909048f <_end+0x10ff1f2b>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
clc
(bad)
std
jmp    *-0x27880000(,%ebp,2)
std
jmp    *0x0(%ebp,%ebp,2)
add    %bh,-0x7b000228(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
cwtl
fscale
pushl  -0x20f80000(%ebp,%ebp,2)
std
(bad)
clc
insl   (%dx),%es:(%edi)
add    %al,(%eax)
sbb    %ah,%al
std
incl   0x6e(%eax)
add    %al,(%eax)
dec    %eax
loopne 80906ec <_IO_stdin_used+0xa228>
call   *0x0(%esi,%ebp,2)
add    %bh,(%eax)
loope  80906f4 <_IO_stdin_used+0xa230>
ljmp   *-0x1cd80000(%esi,%ebp,2)
std
(bad)
in     (%dx),%al
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
dec    %eax
in     $0xfd,%eax
ljmp   *(%edi,%ebp,2)
add    %al,(%eax)
or     %ah,%bh
std
ljmp   *0x0(%edi,%ebp,2)
add    %bh,(%eax)
out    %eax,$0xfd
decl   -0x15480000(%edi,%ebp,2)
std
dec    %esp
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
sbb    %ch,%bl
std
call   *(%eax)
jo     809072b <_IO_stdin_used+0xa267>
add    %cl,0x60fffdeb(%eax)
jo     8090733 <_IO_stdin_used+0xa26f>
add    %bl,-0x47000213(%eax)
jo     809073b <_IO_stdin_used+0xa277>
add    %bl,(%eax)
out    %eax,(%dx)
std
(bad)
clc
jo     8090743 <_IO_stdin_used+0xa27f>
add    %cl,0x4cfffdef(%eax)
jno    809074b <_IO_stdin_used+0xa287>
add    %bl,(%eax)
lock std
pushl  0x71(%eax)
add    %al,(%eax)
pop    %eax
lock std
decl   -0xca80000(%ecx,%esi,2)
std
jmp    *%esp
jno    8090763 <_IO_stdin_used+0xa29f>
add    %ch,%al
repz std
jmp    *(%eax)
jb     809076b <_IO_stdin_used+0xa2a7>
add    %ch,0x5cfffdf4(%eax)
jb     8090773 <_IO_stdin_used+0xa2af>
add    %bl,-0xa(%eax)
std
lcall  *-0x8c80000(%edx,%esi,2)
std
(bad)
fdivs  0x0(%edx)
add    %bl,0x18fffdf8(%eax)
jae    809078b <_IO_stdin_used+0xa2c7>
add    %bl,0x2cfffdf9(%eax)
jae    8090793 <_IO_stdin_used+0xa2cf>
add    %cl,(%eax)
cli
std
lcall  *0x73(%eax)
add    %al,(%eax)
push   $0x78fffdfa
jae    80907a3 <_IO_stdin_used+0xa2df>
add    %cl,%al
cli
std
jmp    *-0x4980000(%ebx,%esi,2)
std
(bad)
fdivl  0x0(%ebx)
add    %bl,%al
sti
std
decl   (%eax)
je     80907bb <_IO_stdin_used+0xa2f7>
add    %bh,%al
sti
std
jmp    *(%eax)
je     80907c3 <_IO_stdin_used+0xa2ff>
add    %bl,(%eax)
cld
std
(bad)
cmp    %dh,0x0(%eax,%eax,1)
cmp    %bh,%ah
std
decl   0x0(%esp,%esi,2)
add    %bh,-0x7f000204(%eax)
je     80907db <_IO_stdin_used+0xa317>
add    %bl,%al
cld
std
lcall  *-0x7ffff8c(%eax)
cld
std
pushl  0x18000074(%eax)
std
std
dec    %eax
je     80907f3 <_IO_stdin_used+0xa32f>
add    %bh,(%eax)
std
std
jmp    *%eax
je     80907fb <_IO_stdin_used+0xa337>
add    %bl,-0x3(%eax)
std
push   %esp
je     8090803 <_IO_stdin_used+0xa33f>
add    %bh,-0x3(%eax)
std
decl   -0x2680000(,%esi,2)
std
jmp    *-0x1a80000(,%esi,2)
std
jmp    *0x0(%ebp,%esi,2)
add    %cl,(%eax)
(bad)
std
jmp    *-0xd80000(%ebp,%esi,2)
std
(bad)
mov    $0xc8000075,%eax
(bad)
std
jmp    *%eax
jne    8090833 <_IO_stdin_used+0xa36f>
add    %ch,%al
(bad)
std
(bad)
clc
jne    809083b <_IO_stdin_used+0xa377>
add    %cl,(%eax)
add    %bh,%dh
call   *(%eax)
jbe    8090843 <_IO_stdin_used+0xa37f>
add    %ch,(%eax)
add    %bh,%dh
ljmp   *(%eax)
jbe    809084b <_IO_stdin_used+0xa387>
add    %cl,0x0(%eax)
(bad)
incl   0x76(%eax)
add    %al,(%eax)
push   $0x58fffe00
jbe    809085b <_IO_stdin_used+0xa397>
add    %cl,0x70fffe00(%eax)
jbe    8090863 <_IO_stdin_used+0xa39f>
add    %bh,(%eax)
add    %edi,%esi
pushl  0x58000076(%eax)
add    %edi,%esi
dec    %eax
jbe    8090873 <_IO_stdin_used+0xa3af>
add    %bh,%al
add    %edi,%esi
decl   (%eax)
ja     809087b <_IO_stdin_used+0xa3b7>
add    %bh,0x2(%eax)
(bad)
(bad)
cmp    $0x77,%al
add    %al,(%eax)
cwtl
add    %dh,%bh
call   *0x77(%eax)
add    %al,(%eax)
mov    $0x68fffe02,%eax
ja     8090893 <_IO_stdin_used+0xa3cf>
add    %bl,%al
add    %dh,%bh
incl   -0x7ffff89(%eax)
add    %dh,%bh
lcall  *0x18000077(%eax)
add    %esi,%edi
pushl  0x38000077(%eax)
add    %esi,%edi
dec    %eax
ja     80908b3 <_IO_stdin_used+0xa3ef>
add    %bl,0x3(%eax)
(bad)
jmp    *%eax
ja     80908bb <_IO_stdin_used+0xa3f7>
add    %bh,0x3(%eax)
(bad)
(bad)
clc
ja     80908c3 <_IO_stdin_used+0xa3ff>
add    %bl,0x10fffe03(%eax)
js     80908cb <_IO_stdin_used+0xa407>
add    %ch,(%eax)
add    $0xfe,%al
lcall  *0x78(%eax)
add    %al,(%eax)
dec    %eax
add    $0xfe,%al
ljmp   *0x0(%eax,%edi,2)
add    %ch,0x4(%eax)
(bad)
incl   0x4780000(%eax,%edi,2)
(bad)
lcall  *-0x37ffff88(%eax)
add    $0xfe,%al
(bad)
mov    $0xb8000078,%eax
push   %es
(bad)
(bad)
clc
js     80908fb <_IO_stdin_used+0xa437>
add    %bh,0x7(%eax)
(bad)
(bad)
cmp    %bh,0x0(%ecx)
add    %cl,(%eax)
or     %bh,%dh
pushl  0x0(%ecx,%edi,2)
add    %bl,0x8(%eax)
(bad)
jmp    *-0x27ffff87(%eax)
or     %bh,%dh
jmp    *%eax
jns    809091b <_IO_stdin_used+0xa457>
add    %ch,%al
or     %edi,%esi
pushl  (%edx,%edi,2)
add    %al,(%eax)
pop    %eax
or     %dh,%bh
call   *0x7a(%eax)
add    %al,(%eax)
cmp    %dl,(%ecx)
(bad)
inc    %eax
jp     8090933 <_IO_stdin_used+0xa46f>
add    %bh,0x11(%eax)
(bad)
(bad)
in     (%dx),%al
jp     809093b <_IO_stdin_used+0xa477>
add    %ch,0x12(%eax)
(bad)
ljmp   *(%ebx,%edi,2)
add    %al,(%eax)
push   $0x6cfffe13
jnp    809094b <_IO_stdin_used+0xa487>
add    %bl,%al
adc    $0x7bb0fffe,%eax
add    %al,(%eax)
sub    %bl,(%eax)
(bad)
push   %eax
jnp    809095b <_IO_stdin_used+0xa497>
add    %cl,%al
sbb    %bh,%dh
ljmp   *(%eax)
jl     8090963 <_IO_stdin_used+0xa49f>
add    %bl,0x19(%eax)
(bad)
(bad)
cmp    $0x7c,%al
add    %al,(%eax)
sbb    %bl,(%edx)
(bad)
(bad)
js     80909ee <_IO_stdin_used+0xa52a>
add    %al,(%eax)
pop    %eax
sbb    %dh,%bh
lcall  *0x1b180000(%esp,%edi,2)
(bad)
push   %esp
jl     8090983 <_IO_stdin_used+0xa4bf>
add    %cl,%al
sbb    %esi,%edi
pushl  0x1d280000(,%edi,2)
(bad)
pushl  0x0(%ebp,%edi,2)
add    %bh,0x1d(%eax)
(bad)
decl   0x1db80000(%ebp,%edi,2)
(bad)
ljmp   *-0x17ffff83(%eax)
sbb    $0x7dc8fffe,%eax
add    %al,(%eax)
pop    %eax
push   %ds
(bad)
(bad)
clc
jge    80909b3 <_IO_stdin_used+0xa4ef>
add    %bl,0x10fffe1e(%eax)
jle    80909bb <_IO_stdin_used+0xa4f7>
add    %bl,%al
push   %ds
(bad)
pushl  (%eax)
jle    80909c3 <_IO_stdin_used+0xa4ff>
add    %bl,(%eax)
pop    %ds
(bad)
incl   0x0(%esi,%edi,2)
add    %cl,0x1f(%eax)
(bad)
lcall  *0x7e(%eax)
add    %al,(%eax)
or     %ah,(%eax)
(bad)
lcall  *0x7800007e(%eax)
and    %bh,%dh
call   *%esp
jle    80909e3 <_IO_stdin_used+0xa51f>
add    %cl,(%eax)
and    %dh,%bh
call   *(%edi,%edi,2)
add    %al,(%eax)
pop    %eax
and    %dh,%bh
incl   0x7f(%eax)
add    %al,(%eax)
mov    $0x5cfffe22,%eax
jg     80909fb <_IO_stdin_used+0xa537>
add    %ch,%al
and    %dh,%bh
(bad)
jl     8090a81 <_IO_stdin_used+0xa5bd>
add    %al,(%eax)
cmp    %ah,(%esi,%edi,8)
dec    %eax
jg     8090a0b <_IO_stdin_used+0xa547>
add    %bl,%al
and    $0xfe,%al
(bad)
clc
jg     8090a13 <_IO_stdin_used+0xa54f>
add    %bl,(%eax)
and    $0x8030fffe,%eax
add    %al,(%eax)
cwtl
and    $0x8088fffe,%eax
add    %al,(%eax)
mov    %ah,(%esi)
(bad)
jmp    *%eax
addb   $0x0,(%eax)
clc
sub    %dh,%bh
call   *-0x7f(%eax)
add    %al,(%eax)
cmp    %ch,(%ebx)
(bad)
pushl  0x0(%ecx,%eax,4)
add    %bh,%al
cmp    $0xfe,%al
call   *%eax
addl   $0xfe3d1800,(%eax)
jmp    *%esp
addl   $0xfe3f8800,(%eax)
jmp    *(%edx,%eax,4)
add    %al,(%eax)
clc
inc    %ecx
(bad)
jmp    *0x0(%edx,%eax,4)
add    %cl,0x44(%eax)
(bad)
jmp    *0x46980000(%edx,%eax,4)
(bad)
jmp    *%esp
(bad)
add    %al,(%eax)
enter  $0xfe48,$0xff
and    $0x83,%al
add    %al,(%eax)
clc
dec    %edx
(bad)
jmp    *0x0(%ebx,%eax,4)
add    %cl,(%eax)
dec    %ebx
(bad)
(bad)
js     8090a05 <_IO_stdin_used+0xa541>
add    %al,(%eax)
or     %cl,-0x1(%esi,%edi,8)
rolb   0x4ca80000(%ebx)
(bad)
incl   (%eax)
test   %al,(%eax)
add    %cl,%al
dec    %ebp
(bad)
call   *0x0(%esp,%eax,4)
add    %bh,(%eax)
dec    %esi
(bad)
call   *0x4e880000(%esp,%eax,4)
(bad)
call   *%eax
test   %al,(%eax)
add    %ch,0x4f(%eax)
(bad)
call   *(%eax)
test   %eax,(%eax)
add    %ch,0x3cfffe4f(%eax)
test   %eax,(%eax)
add    %ch,(%eax)
push   %eax
(bad)
call   *0x28000085(%eax)
push   %edx
(bad)
inc    %eax
test   %eax,(%eax)
add    %bh,0x52(%eax)
(bad)
(bad)
in     (%dx),%al
test   %eax,(%eax)
add    %bh,0x55(%eax)
(bad)
incl   0x0(%esi,%eax,4)
add    %bh,%al
push   %ebp
(bad)
pushl  0x0(%esi,%eax,4)
add    %cl,0x56(%eax)
(bad)
(bad)
mov    $0x88000086,%eax
pop    %eax
(bad)
(bad)
clc
xchg   %al,(%eax)
add    %ch,%al
pop    %ecx
(bad)
call   *-0x79(%eax)
add    %al,(%eax)
cwtl
pop    %esi
(bad)
call   *0x48000087(%eax)
pop    %edi
(bad)
inc    %eax
xchg   %eax,(%eax)
add    %bl,(%eax)
pusha
(bad)
ljmp   *(%eax,%ecx,4)
add    %al,(%eax)
sub    %ah,-0x2(%edx)
lcall  *0x62680000(%eax,%ecx,4)
(bad)
(bad)
mov    $0xf8000088,%esp
(bad)
(bad)
jmp    *(%ecx,%ecx,4)
add    %al,(%eax)
js     8090b97 <_IO_stdin_used+0xa6d3>
(bad)
jmp    *0x0(%ecx,%ecx,4)
add    %ch,%al
imul   $0x89a0ff,%esi,%edi
add    %cl,0x6a(%eax)
(bad)
call   *%eax
mov    %eax,(%eax)
add    %cl,0x14fffe6c(%eax)
mov    (%eax),%al
add    %bh,0x7f(%eax)
(bad)
incl   0x0(%edx,%ecx,4)
add    %bh,0x70fffe7f(%eax)
mov    (%eax),%al
add    %bl,-0x80(%eax)
(bad)
jmp    *0x7800008a(%eax)
cmp    $0x8ad8ff,%esi
add    %bh,%al
cmp    $0x8b04ff,%esi
add    %cl,%al
test   %bh,%dh
incl   0x0(%ebx,%ecx,4)
add    %cl,0x74fffe85(%eax)
mov    (%eax),%eax
add    %bl,-0x5300017a(%eax)
mov    (%eax),%eax
add    %cl,-0x2300016d(%eax)
mov    (%eax),%eax
add    %cl,%al
xchg   %eax,%ebx
(bad)
push   %eax
mov    (%eax),%eax
add    %cl,(%eax)
xchg   %eax,%esp
(bad)
decl   (%eax)
mov    %es,(%eax)
add    %ch,(%eax)
xchg   %eax,%esp
(bad)
lcall  *(%esp,%ecx,4)
add    %al,(%eax)
push   $0x34fffe94
mov    %es,(%eax)
add    %cl,%al
xchg   %eax,%edi
(bad)
decl   -0x68180000(%esp,%ecx,4)
(bad)
jmp    *0x3800008c(%eax)
cwtl
(bad)
inc    %esp
mov    %es,(%eax)
add    %cl,-0x68(%eax)
(bad)
(bad)
fmuls  -0x167a800(%eax,%eax,1)
(bad)
in     (%dx),%al
mov    %es,(%eax)
add    %ch,(%eax)
cltd
(bad)
lcall  *(%eax)
lea    (%eax),%eax
add    %cl,%al
cltd
(bad)
ljmp   *0x0(%ebp,%ecx,4)
add    %ch,%al
cltd
(bad)
decl   0x3800008d(%eax)
lcall  $0x0,$0x8db4fffe
test   $0x9a,%al
(bad)
push   %esp
lea    (%eax),%eax
add    %cl,(%eax)
fwait
(bad)
call   *(%esi,%ecx,4)
add    %al,(%eax)
dec    %eax
fwait
(bad)
(bad)
cmp    %cl,-0x64880000(%esi)
(bad)
lcall  *-0x72(%eax)
add    %al,(%eax)
mov    %bl,-0x71930002(%ebx)
add    %al,(%eax)
test   $0x9b,%al
(bad)
incl   -0x64380000(%esi,%ecx,4)
(bad)
lcall  *-0x64280000(%esi,%ecx,4)
(bad)
pushl  -0x27ffff72(%eax)
pushf
(bad)
incl   0x0(%edi,%ecx,4)
add    %ch,(%eax)
lahf
(bad)
incl   -0x60480000(%edi,%ecx,4)
(bad)
pushl  -0x60280000(%edi,%ecx,4)
(bad)
dec    %esp
popl   (%eax)
add    %cl,-0x60(%eax)
(bad)
incl   (%eax)
nop
add    %al,(%eax)
call   49090b09 <_end+0x40ff25a5>
nop
add    %al,(%eax)
mov    %ah,-0x6f6b0002(%edx)
add    %al,(%eax)
js     8090c1a <_IO_stdin_used+0xa756>
(bad)
(bad)
in     (%dx),%al
nop
add    %al,(%eax)
test   $0xa6,%al
(bad)
incl   0x0(%ecx,%edx,4)
add    %bh,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
ljmp   *-0x6f(%eax)
add    %al,(%eax)
test   $0xa7,%al
(bad)
(bad)
mov    $0xf8000091,%esp
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
jmp    *%eax
xchg   %eax,%ecx
add    %al,(%eax)
mov    %ch,-0x6de30002(%eax)
add    %al,(%eax)
cwtl
test   $0xfe,%al
pushl  (%eax)
xchg   %eax,%edx
add    %al,(%eax)
test   $0xa8,%al
(bad)
incl   0x0(%edx,%edx,4)
add    %bl,%al
test   $0xfe,%al
ljmp   *-0x6e(%eax)
add    %al,(%eax)
cwtl
test   $0x92d4fffe,%eax
add    %al,(%eax)
dec    %eax
stos   %al,%es:(%edi)
(bad)
(bad)
call   60090d5f <_end+0x57ff27fb>
stos   %eax,%es:(%edi)
(bad)
(bad)
cmp    $0x93,%al
add    %al,(%eax)
push   $0x50fffeab
xchg   %eax,%ebx
add    %al,(%eax)
js     8090c89 <_IO_stdin_used+0xa7c5>
(bad)
jmp    *0x0(%ebx,%edx,4)
add    %cl,0x78fffeab(%eax)
xchg   %eax,%ebx
add    %al,(%eax)
fsubrs -0x6c630002(%ebx)
add    %al,(%eax)
cmp    %ch,0x93d8ff(%esi,%edi,8)
add    %cl,-0x53(%eax)
(bad)
call   *(%esp,%edx,4)
add    %al,(%eax)
test   $0xad,%al
(bad)
lcall  *0x0(%esp,%edx,4)
add    %ch,%al
lods   %ds:(%esi),%eax
(bad)
(bad)
jl     8090ca6 <_IO_stdin_used+0xa7e2>
add    %al,(%eax)
dec    %eax
scas   %es:(%edi),%al
(bad)
(bad)
mov    $0xa8000094,%eax
scas   %es:(%edi),%al
(bad)
push   %eax
xchg   %eax,%esp
add    %al,(%eax)
sub    %ch,-0x6ad30002(%edi)
add    %al,(%eax)
push   $0x50fffeaf
xchg   %eax,%ebp
add    %al,(%eax)
cwtl
scas   %es:(%edi),%eax
(bad)
jmp    *0x0(%ebp,%edx,4)
add    %bl,%al
mov    $0xfe,%al
(bad)
mov    $0x68000095,%esp
mov    $0xfe,%cl
push   %eax
xchg   %eax,%ebp
add    %al,(%eax)
cmp    %dh,-0x69d70002(%edx)
add    %al,(%eax)
enter  $0xfeb3,$0xff
cwtl
xchg   %eax,%esi
add    %al,(%eax)
cwtl
mov    $0xfe,%ch
push   %esp
xchg   %eax,%esi
add    %al,(%eax)
test   $0xb5,%al
(bad)
decl   (%eax)
xchg   %eax,%edi
add    %al,(%eax)
call   35090c26 <_end+0x2cff26c2>
xchg   %eax,%edi
add    %al,(%eax)
pop    %eax
mov    $0xfe,%bh
ljmp   *0x0(%edi,%edx,4)
add    %bh,-0x4f00013b(%eax)
xchg   %eax,%edi
add    %al,(%eax)
mov    %al,%bh
(bad)
(bad)
clc
xchg   %eax,%edi
add    %al,(%eax)
push   $0x4cfffec8
cwtl
add    %al,(%eax)
dec    %eax
leave
(bad)
jmp    *-0x37ffff68(%eax)
leave
(bad)
call   *%esp
cwtl
add    %al,(%eax)
mov    %cl,%ch
(bad)
call   *(%ecx,%ebx,4)
add    %al,(%eax)
mov    $0x34fffecd,%eax
cltd
add    %al,(%eax)
sbb    %cl,%dh
(bad)
ljmp   *0x0(%ecx,%ebx,4)
add    %bh,(%eax)
into
(bad)
incl   0x78000099(%eax)
aad    $0xfe
inc    %eax
cltd
add    %al,(%eax)
test   $0xd8,%al
(bad)
lcall  *(%eax)
lcall  $0xfffe,$0xd9080000
cmp    $0x9a,%al
add    %al,(%eax)
js     8090db8 <_IO_stdin_used+0xa8f4>
(bad)
(bad)
jl     8090d7c <_IO_stdin_used+0xa8b8>
add    %al,(%eax)
mov    $0x90fffeda,%eax
lcall  $0xfffe,$0xdaf80000
movsb  %ds:(%esi),%es:(%edi)
lcall  $0xfffe,$0xdc180000
cld
lcall  $0xfffe,$0xdc680000
adc    %bl,-0x23380000(%ebx)
(bad)
pushl  (%ebx,%ebx,4)
add    %al,(%eax)
sub    %bl,%ch
(bad)
ljmp   *0x0(%ebx,%ebx,4)
add    %bl,-0x6b000123(%eax)
fwait
add    %al,(%eax)
dec    %eax
fdivrp %st,%st(6)
(bad)
fcompl -0xe980000(%ebx)
(bad)
jmp    *(%eax)
pushf
add    %al,(%eax)
push   $0x64fffefc
pushf
add    %al,(%eax)
sbb    %bh,%ch
(bad)
jmp    *-0x2580000(%esp,%ebx,4)
(bad)
(bad)
in     (%dx),%al
pushf
add    %al,(%eax)
clc
std
(bad)
decl   -0x1d80000(,%ebx,4)
(bad)
(bad)
cmp    %bl,-0xe80000(%ebp)
(bad)
pushl  -0x63(%eax)
add    %al,(%eax)
sub    %cl,(%ecx)
(bad)
pushl  0xac80000(%ebp,%ebx,4)
(bad)
push   %esp
popf
add    %al,(%eax)
or     %cl,(%ebx)
(bad)
ljmp   *(%eax)
sahf
add    %al,(%eax)
sub    %cl,(%ebx)
(bad)
(bad)
cmp    $0x9e,%al
add    %al,(%eax)
dec    %eax
or     %edi,%edi
call   *-0x62(%eax)
add    %al,(%eax)
mov    %cl,(%ebx)
(bad)
pushl  0x0(%esi,%ebx,4)
add    %ch,-0x770000f5(%eax)
sahf
add    %al,(%eax)
call   b5090da4 <_end+0xacff2840>
sahf
add    %al,(%eax)
dec    %eax
or     $0xff,%al
jmp    *%eax
sahf
add    %al,(%eax)
sub    %cl,0x9f1cffff
add    %al,(%eax)
pop    %eax
or     $0x9f34ffff,%eax
add    %al,(%eax)
call   71090dc6 <_end+0x68ff2862>
lahf
add    %al,(%eax)
or     %cl,(%esi)
(bad)
(bad)
jl     8090e61 <_IO_stdin_used+0xa99d>
add    %al,(%eax)
sub    %cl,(%esi)
(bad)
call   *0x4800009f(%eax)
push   %cs
(bad)
jmp    *0xe680000(%edi,%ebx,4)
(bad)
(bad)
mov    $0x9800009f,%eax
push   %cs
(bad)
(bad)
fcomps 0xec80000(%edi)
(bad)
(bad)
clc
lahf
add    %al,(%eax)
clc
push   %cs
(bad)
call   *(%eax)
mov    0xf280000,%al
(bad)
ljmp   *(%eax)
mov    0xfd80000,%al
(bad)
decl   0x0(%eax,%eiz,4)
add    %cl,(%eax)
adc    %bh,%bh
jmp    *0x0(%eax,%eiz,4)
add    %bh,(%eax)
adc    %bh,%bh
(bad)
jl     8090eb2 <_IO_stdin_used+0xa9ee>
add    %al,(%eax)
push   $0x94ffff10
mov    0x11180000,%al
(bad)
(bad)
mov    $0x580000a0,%eax
adc    %edi,%edi
call   *%eax
mov    0x11980000,%al
(bad)
(bad)
call   e0090fd5 <_end+0xd7ff2a71>
adc    %edi,%edi
incl   (%eax)
mov    0x11f80000,%eax
(bad)
call   *(%ecx,%eiz,4)
add    %al,(%eax)
sbb    %dl,(%edx)
(bad)
ljmp   *(%eax)
mov    0x12380000,%eax
(bad)
(bad)
cmp    $0xa1,%al
add    %al,(%eax)
pop    %eax
adc    %bh,%bh
call   *-0x5f(%eax)
add    %al,(%eax)
mov    $0x8cffff12,%eax
mov    0x13180000,%eax
(bad)
dec    %eax
mov    0x13980000,%eax
(bad)
push   %esp
mov    0x13c80000,%eax
(bad)
decl   (%eax)
mov    %al,0x13f80000
(bad)
ljmp   *(%eax)
mov    %al,0x15380000
(bad)
ljmp   *-0x5e(%eax)
add    %al,(%eax)
cwtl
adc    $0xa2b0ffff,%eax
add    %al,(%eax)
mov    $0xc8ffff15,%eax
mov    %al,0x15d80000
(bad)
jmp    *%eax
mov    %al,0x16180000
(bad)
lcall  *(%eax)
mov    %eax,0x16480000
(bad)
pushl  (%eax)
mov    %eax,0x16880000
(bad)
ljmp   *0x0(%ebx,%eiz,4)
add    %bh,%al
sbb    %edi,%edi
decl   (%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
dec    %eax
sbb    $0xff,%al
jmp    *(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
test   $0x1c,%al
(bad)
incl   0x0(%esp,%eiz,4)
add    %ch,%al
sbb    $0xff,%al
lcall  *0x0(%esp,%eiz,4)
add    %bl,-0x7f0000e3(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
enter  $0xff1d,$0xff
movsb  %ds:(%esi),%es:(%edi)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
clc
sbb    $0xa4c8ffff,%eax
add    %al,(%eax)
or     %bl,(%esi)
(bad)
(bad)
fsubl  -0xe1a800(%eax,%eax,1)
decl   0x1e980000(,%eiz,4)
(bad)
(bad)
cmp    %ah,0x1ef80000(%ebp)
(bad)
ljmp   *-0x5b(%eax)
add    %al,(%eax)
dec    %eax
pop    %ds
(bad)
decl   0x1f780000(%ebp,%eiz,4)
(bad)
ljmp   *0x1fa80000(%ebp,%eiz,4)
(bad)
dec    %eax
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
fcomps (%edi)
(bad)
(bad)
call   100910da <_end+0x7ff2b76>
and    %bh,%bh
decl   (%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
dec    %eax
and    %bh,%bh
ljmp   *(%esi,%eiz,4)
add    %al,(%eax)
mov    %ch,(%eax)
(bad)
incl   0x28a80000(%esi,%eiz,4)
(bad)
lcall  *0x28e80000(%esi,%eiz,4)
(bad)
(bad)
mov    $0x280000a6,%eax
sub    %edi,%edi
jmp    *%esp
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
fsubrs (%ebx)
(bad)
call   *0x0(%edi,%eiz,4)
add    %bh,%al
sub    $0xff,%al
lcall  *0x2d280000(%edi,%eiz,4)
(bad)
pushl  0x2d880000(%edi,%eiz,4)
(bad)
(bad)
in     (%dx),%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
test   $0x2d,%al
(bad)
decl   (%eax,%ebp,4)
add    %al,(%eax)
fsubrs 0xa82cffff
add    %al,(%eax)
or     %ch,(%esi)
(bad)
decl   0x0(%eax,%ebp,4)
add    %bl,0x2e(%eax)
(bad)
jmp    *0x0(%eax,%ebp,4)
add    %ch,0x7cffff2e(%eax)
test   $0x0,%al
add    %bh,%al
cs
(bad)
call   *0x2f480000(%eax,%ebp,4)
(bad)
ljmp   *0x31c80000(%eax,%ebp,4)
(bad)
lcall  *(%eax)
test   $0x33180000,%eax
(bad)
lcall  *-0x57(%eax)
add    %al,(%eax)
sub    %dh,0xa998ffff
add    %al,(%eax)
cmp    %dh,(%edi)
(bad)
(bad)
fsubrs 0x39480000(%ecx)
(bad)
lcall  *(%eax)
stos   %al,%es:(%edi)
add    %al,(%eax)
pop    %eax
cmp    %edi,%edi
lcall  *-0x56(%eax)
add    %al,(%eax)
enter  $0xff3d,$0xff
cwtl
stos   %al,%es:(%edi)
add    %al,(%eax)
mov    %bh,(%edi)
(bad)
decl   (%eax)
stos   %eax,%es:(%edi)
add    %al,(%eax)
enter  $0xff3f,$0xff
and    %ch,0x40380000(%ebx)
(bad)
incl   0x0(%ebx,%ebp,4)
add    %bl,0x45(%eax)
(bad)
pushl  0x45a80000(%ebx,%ebp,4)
(bad)
(bad)
fsubrs 0x46780000(%ebx)
(bad)
jmp    *(%eax)
lods   %ds:(%esi),%al
add    %al,(%eax)
or     %al,-0x1(%edi)
pushl  0x0(%esp,%ebp,4)
add    %ch,%al
dec    %eax
(bad)
pushl  0x49580000(%esp,%ebp,4)
(bad)
(bad)
in     (%dx),%al
lods   %ds:(%esi),%al
add    %al,(%eax)
mov    %cl,-0x1(%ecx)
incl   0x4a080000(,%ebp,4)
(bad)
lcall  *0x0(%ebp,%ebp,4)
add    %bh,%al
dec    %edx
(bad)
lcall  *0x4b280000(%ebp,%ebp,4)
(bad)
pushl  -0x7ffff53(%eax)
dec    %ebx
(bad)
(bad)
call   e0091212 <_end+0xd7ff2cae>
dec    %esp
(bad)
ljmp   *(%eax)
scas   %es:(%edi),%al
add    %al,(%eax)
or     %cl,-0x1(%ebp)
incl   -0x52(%eax)
add    %al,(%eax)
cwtl
push   %ecx
(bad)
dec    %eax
scas   %es:(%edi),%al
add    %al,(%eax)
enter  $0xff51,$0xff
loopne 8091130 <_IO_stdin_used+0xac6c>
add    %al,(%eax)
fcoms  -0x1(%ebx)
ljmp   *(%edi,%ebp,4)
add    %al,(%eax)
test   $0x54,%al
(bad)
ljmp   *0x0(%edi,%ebp,4)
add    %cl,0x55(%eax)
(bad)
pushl  0x56280000(%edi,%ebp,4)
(bad)
push   %esp
scas   %es:(%edi),%eax
add    %al,(%eax)
enter  $0xff64,$0xff
jl     809115a <_IO_stdin_used+0xac96>
add    %al,(%eax)
pop    %eax
gs
(bad)
call   *0x65a80000(%eax,%esi,4)
(bad)
ljmp   *0x67280000(%eax,%esi,4)
(bad)
jmp    *%esp
mov    $0x0,%al
add    %bh,%al
push   $0xb11cffff
add    %al,(%eax)
sub    %ch,-0x1(%edx)
decl   -0x77ffff4f(%eax)
imul   $0xffffffff,%edi,%edi
hlt
mov    $0x0,%cl
add    %bh,%al
imul   $0xffffffff,%edi,%edi
.byte 0x30
mov    $0x0,%dl
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     80911fb <_IO_stdin_used+0xad37>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x91,%al
sti
pushl  0xc(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     809121b <_IO_stdin_used+0xad57>
js     8091219 <_IO_stdin_used+0xad55>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %esp
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
call   75090ddb <_end+0x6cff2877>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,0x10000000(%eax)
scas   %es:(%edi),%eax
sti
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %bl,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,-0x50ec0000(%eax,%eax,1)
sti
pushl  (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0xbc00e46
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%al
add    %al,(%eax)
add    %dl,(%eax)
mov    $0xfb,%cl
pushl  (%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %eax,(%eax)
add    %bh,%al
mov    $0xfb,%cl
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
je     809135b <_IO_stdin_used+0xae97>
add    %al,(%eax)
inc    %esp
mov    $0xfb,%dl
call   *0x0(%esi)
add    0xe(%ebx),%dl
addb   $0x79,(%ecx)
or     (%esi),%cl
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,-0x37ffffff(%eax)
mov    $0xfb,%dl
decl   0x0(%ebp)
add    %al,(%eax)
add    %dl,0x20(%esi,%ecx,1)
inc    %esp
add    %al,(%eax)
add    %ah,-0x4cfc0000(%ecx,%eax,1)
sti
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
or     %fs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
in     (%dx),%al
add    %eax,(%eax)
add    %bl,-0x5(%ebx,%esi,4)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0x2,%al
add    %al,(%eax)
fs
mov    $0xfb,%bl
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ah,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0x2,%al
add    %al,(%eax)
jl     80913b9 <_IO_stdin_used+0xaef5>
sti
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%al
add    %cl,0x1afffbb3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %dl,0xbfffb(%ebx,%esi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %dl,0x34fffbb3(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jo     8091458 <_IO_stdin_used+0xaf94>
add    %al,(%eax)
mov    $0x57fffbb3,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
push   %ebx
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %cl,0x2(%eax)
mov    $0xfb,%ah
call   *0x0(%edx)
push   %ecx
push   %cs
or     %al,-0x3cb9fdfe(%ebx)
push   %cs
add    $0x49,%al
push   %cs
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x2,%al
add    %al,(%eax)
js     809144e <_IO_stdin_used+0xaf8a>
sti
(bad)
jp     809149e <_IO_stdin_used+0xafda>
add    %al,(%eax)
add    %al,0xe(%esi)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa4d0204(%ebx)
ret
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx,%eax,8),%edx
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%al
add    %bh,0x27afffb(%esp,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
pusha
add    0xc0e0a01(%ecx),%ebp
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
or     $0xb7,%al
sti
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
sbb    %dh,0x37fffb(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
inc    %esp
add    (%eax),%eax
add    %al,-0x5(%edi,%esi,4)
pushl  0x0
inc    %ebx
push   %cs
adc    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pusha
add    (%eax),%eax
add    %ch,-0x49(%eax)
sti
decl   0x0(%esi)
inc    %ebx
push   %cs
and    %al,(%edx)
jo     8091561 <_IO_stdin_used+0xb09d>
push   %cs
add    $0x45,%al
or     0xe(%ebp),%edx
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,-0x27fffffd(%eax)
mov    $0xfb,%bh
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%eax
add    %dl,%ah
mov    $0xfb,%bh
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%esp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
hlt
mov    $0xfb,%bh
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    (%eax),%eax
add    %dl,(%eax,%edi,4)
sti
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,0xa(%edx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%eax
add    %bh,(%eax)
mov    $0x81fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%edx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0x1f5fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e48
int3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,0x0(%esp,%eax,1)
add    %ch,-0x5(%edx,%edi,4)
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
push   $0xa
push   %cs
add    $0x4b,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x4(%eax)
add    %al,(%eax)
sub    %bh,0x28ffffb(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
outsb  %ds:(%esi),(%dx)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
enter  $0x4,$0x0
pusha
mov    $0x48fffb,%ebp
add    %al,(%eax)
add    %bl,0xe(%esi)
and    %ah,0xa(%eax)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ah,%ah
add    $0x0,%al
add    %dl,0x141fffb(%ebp,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %cl,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
sub    $0x5,%al
add    %al,(%eax)
pushf
mov    $0xb5fffb,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
push   %eax
add    0x410c0e0a(%ebx),%ah
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,0x0(%ebp,%eax,1)
add    %ch,(%edi,%edi,4)
sti
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%edx)
orl    $0xc3430c0e,(%edx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebp),%eax
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %ah,-0x406c0000(%ebp,%eax,1)
sti
jmp    *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,%ah
add    $0xc12c0000,%eax
sti
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
mov    0x45040e0a,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%esi)
add    %al,(%eax)
adc    %al,%dl
sti
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   %esp
push   %es
add    %al,(%eax)
in     $0xc2,%al
sti
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,-0x3cb40000(%esi,%eax,1)
sti
jmp    *(%esi)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
xor    (%ebx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
and    $0xcb,%al
sti
jmp    *0x5(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2c00e46
mov    $0x41140e0a,%esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0x7,%al
add    %al,(%eax)
xchg   %eax,%esp
sar    %bl
lcall  *0x6(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
mov    $0x41140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %ah,0x0(%edi,%eax,1)
add    %dh,%ah
(bad)
sti
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %es
add    %al,(%eax)
dec    %esp
xlat   %ds:(%ebx)
sti
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
rolb   $0x0,(%edi)
add    %cl,-0x29(%eax)
sti
call   *0x0
inc    %ebx
push   %cs
and    %dl,0xe(%ecx)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,%al
pop    %es
add    %al,(%eax)
push   %eax
xlat   %ds:(%ebx)
sti
jmp    *(%eax)
or     (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2c00e46
or     $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sbb    $0x8,%al
add    %al,(%eax)
sub    $0xe2,%al
sti
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %ah,-0x5(%edx,%eiz,8)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
orb    $0x0,(%eax)
add    %cl,0x72fffbe2(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffeb,0x2600e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   $0xc0000000
or     %al,(%eax)
add    %cl,%al
jecxz  8091aa6 <_IO_stdin_used+0xb5e2>
dec    %eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    %ah,%cl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
sub    $0x9,%al
add    %al,(%eax)
sub    $0xe5,%al
sti
incl   0x0(%ebx)
add    %al,(%eax)
add    %dh,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,0x0(%ecx,%ecx,1)
add    %ah,-0x5(%ebp,%eiz,8)
lcall  *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pushf
or     %eax,(%eax)
add    %ch,-0x5(%edi,%eiz,8)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    $0x9,%al
add    %al,(%eax)
push   $0x4fffbe7
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    $0xa,%al
add    %al,(%eax)
and    $0xe8,%al
sti
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%ebx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
sbb    $0xa,%al
add    %al,(%eax)
cmp    $0xe8,%al
sti
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xe(%ebp),%bh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,0xa(%eax)
add    %al,(%eax)
test   $0xe8,%al
sti
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jb     8091c4b <_IO_stdin_used+0xb787>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xc(%esi,%ecx,1),%esp
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
mov    %cl,(%edx)
add    %al,(%eax)
jo     8091c5b <_IO_stdin_used+0xb797>
sti
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jns    8091c8d <_IO_stdin_used+0xb7c9>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0xa000000a,%eax
jmp    9061ca1 <_end+0xfc373d>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebp
xchg   %al,(%ebx)
addl   $0xffffff8e,(%edx,%eax,1)
or     %bl,%al
inc    %ecx
movb   $0xc,-0x3b(%ecx)
add    $0x4,%al
dec    %eax
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
in     $0xa,%al
add    %al,(%eax)
je     8091cb8 <_IO_stdin_used+0xb7f4>
sti
(bad)
jg     8091cd2 <_IO_stdin_used+0xb80e>
add    %al,(%eax)
add    %al,0xe(%ebx)
addb   $0x2,(%ecx)
push   %ebp
or     (%esi),%cl
add    $0x48,%al
or     0x0(%eax),%esi
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
fsubr  %st(2),%st
sti
push   %esp
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0xff1b9fc(%ebx)
add    %eax,(%ebx)
lds    (%edx),%eax
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
adc    (%ecx),%eax
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
jecxz  8091d39 <_IO_stdin_used+0xb875>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
xchg   %eax,%edi
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
je     8091d65 <_IO_stdin_used+0xb8a1>
add    %al,(%eax)
fs
repz sti
ljmp   *(%esp,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
pusha
add    %eax,%esi
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     (%eax),%eax
add    %ah,-0x5(%edi,%esi,8)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%esi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    $0x8c00000b,%esp
idiv   %ebx
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x68,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %ah,%al
or     (%eax),%eax
add    %bl,0x70fffbf7(%eax)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x1c00e48
sbb    (%ecx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
and    $0xc,%al
add    %al,(%eax)
(bad)
cld
sti
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %esp
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
or     $0x0,%al
add    %dl,0x65fffb(,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %esp
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esp,%ecx,1)
add    %ah,-0x5(%ebp,%edi,8)
(bad)
jp     8091e52 <_IO_stdin_used+0xb98e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pop    %ebx
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
nop
or     $0x0,%al
add    %bh,-0x7f000403(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
rorb   (%eax,%eax,1)
add    %bh,%al
std
sti
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
hlt
or     $0x0,%al
add    %al,-0x5(%esi,%edi,8)
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xa640204(%ebx)
ret
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0xd,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
sti
call   *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
dec    %edx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
inc    %eax
dec    %ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
push   %cs
inc    %eax
addl   $0xffffff86,(%ebx)
add    (%edx),%al
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
fs
or     $0xff840000,%eax
sti
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xa(%edi),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    %cl,0xffc00000
sti
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
jne    8091f91 <_IO_stdin_used+0xbacd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,-0x1ffffff3(%eax)
(bad)
sti
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
jne    8091fb1 <_IO_stdin_used+0xbaed>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,%al
or     $0x0,%eax
cld
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
hlt
or     $0x240000,%eax
cld
decl   0x0(%ebx)
pop    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
imul   $0xc,(%esi),%ecx
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
push   %cs
add    %al,(%eax)
mov    %al,(%eax)
cld
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    0xa(%ecx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
inc    %esp
push   %cs
add    %al,(%eax)
aam    $0x0
cld
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0x4(%esi,%ecx,1)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
push   %cs
add    %al,(%eax)
cld
add    %bh,%ah
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jge    8092065 <_IO_stdin_used+0xbba1>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %bh,0x0(%esi,%ecx,1)
add    %ch,(%ecx,%eax,1)
cld
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %cs
add    %al,(%eax)
pushf
add    %edi,%esp
incl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     (%dx),%al
push   %cs
add    %al,(%eax)
in     (%dx),%al
add    %ah,%bh
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4d00e46
dec    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esi
add    %al,(%eax)
add    %ch,(%edi,%ecx,1)
add    %al,(%eax)
cld
add    %esp,%edi
(bad)
jnp    809211a <_IO_stdin_used+0xbc56>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ebx),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
pusha
sldt   (%eax)
dec    %eax
add    $0xfc,%al
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%esi),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
sldt   (%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0xfc,%al
decl   (%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffab,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%ah
sldt   (%eax)
je     80921c4 <_IO_stdin_used+0xbd00>
cld
lcall  *0xa(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2e,0x3500e43
add    $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
and    (%ebx),%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,(%eax,%edx,1)
add    %al,(%eax)
mov    $0xc6fffc10,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebx),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%eax
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   $0x50000010
adc    %edi,%esp
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   $0x10,%al
add    %al,(%eax)
mov    $0x11,%al
cld
lcall  *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3700e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ch,%al
adc    %al,(%eax)
add    %dl,(%eax)
adc    $0xfc,%al
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jbe    80922ed <_IO_stdin_used+0xbe29>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%edx,1)
add    %al,(%eax)
xor    $0x14,%al
cld
call   *0x0(%edi)
dec    %esi
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
orl    $0xec3410c,(%esi)
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
adc    %eax,(%eax)
add    %ch,-0x680003ec(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x43,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %al,0x8000011(%eax)
adc    $0x82fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x11
add    %al,(%eax)
inc    %esp
adc    $0x149fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
(bad)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
or     $0x12,%al
add    %al,(%eax)
pop    %esp
push   %ss
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
mov    0xe520202,%al
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
cmp    %dl,(%edx)
add    %al,(%eax)
nop
push   %ss
cld
jmp    *(%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2c00e46
jne    809244e <_IO_stdin_used+0xbf8a>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,0x12(%eax)
add    %al,(%eax)
sbbb   $0xfc,(%ecx)
lcall  *0x15(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0xffffffc3,0xa010d03
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    (%eax),%al
add    %ch,0x2a4fffc(%esi,%ebp,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9d,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,%ah
adc    (%eax),%al
add    %bl,(%ecx,%esi,1)
cld
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %al,(%edx)
cwtl
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
dec    %edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %dl,(%ebx)
add    %al,(%eax)
loopne 8092543 <_IO_stdin_used+0xc07f>
cld
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff90,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
push   $0x70000013
xor    %ah,%bh
push   %ebx
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb4,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
test   $0x13,%al
add    %al,(%eax)
xor    %bh,(%edx)
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x3a6c0000(%ebx,%edx,1)
cld
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
adc    (%eax),%eax
add    %ch,0x6fffc3a(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x13,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %ah,%bh
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %cl,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cld
adc    (%eax),%eax
add    %bl,0xefffc(%edx,%edi,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %cl,0xe(%edx)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
adc    $0x14,%al
add    %al,(%eax)
xchg   %eax,%esp
cmp    %ah,%bh
pushl  0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4504(%ebx)
add    %ah,%bh
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esp,%edx,1)
add    %bl,(%esp,%edi,1)
cld
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
pop    %ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,0x58000014(%eax)
cmp    $0xfc,%al
incl   (%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5a,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
fcoms  (%eax,%eax,1)
add    %dl,(%eax)
ds
cld
call   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e48
fmuls  (%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
fwait
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,0x3f4c0000(,%edx,1)
cld
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%esi)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%eax),%ecx
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0x0(%ebp,%edx,1)
add    %dh,-0x4(%edi,%edi,1)
ljmp   *0x41000000(%esp,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e48
sbb    %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,-0x1fffffeb(%eax)
inc    %ebx
cld
jmp    *%ebp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3b00e46
mov    $0x2,%dl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%ah
adc    $0x468c0000,%eax
cld
dec    %ebp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3a00e46
mov    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
push   %ss
add    %al,(%eax)
sbb    %cl,-0x4(%ecx)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xe(%esi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
pop    %eax
push   %ss
add    %al,(%eax)
xor    %cl,-0x4(%ecx)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x2,(%ecx)
inc    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,-0x6fffffea(%eax)
dec    %ecx
cld
(bad)
jp     8092877 <_IO_stdin_used+0xc3b3>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
je     809289e <_IO_stdin_used+0xc3da>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ah,%al
push   %ss
add    %al,(%eax)
mov    $0xc8fffc4a,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4804(%ebx)
add    0xa(%edx),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %ch,(%eax)
pop    %ss
add    %al,(%eax)
inc    %eax
dec    %ebx
cld
(bad)
call   8092919 <_IO_stdin_used+0xc455>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7d,0x2500e48
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,-0x27ffffe9(%eax)
dec    %ebx
cld
lcall  *0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1900e45
inc    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bl,%al
pop    %ss
add    %al,(%eax)
loopne 8092a0f <_IO_stdin_used+0xc54b>
cld
(bad)
jp     80929c8 <_IO_stdin_used+0xc504>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
add    %ecx,%ds:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
decb   (%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
xor    %bl,(%eax)
add    %al,(%eax)
or     %dl,-0x4(%eax)
(bad)
in     (%dx),%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%esi),%ah
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%edx
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,0x0(%eax,%ebx,1)
add    %ch,0x4adfffc(%eax,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
push   %eax
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
ja     8092ac0 <_IO_stdin_used+0xc5fc>
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,%ah
sbb    %al,(%eax)
add    %ch,%ah
push   %esp
cld
call   *%ebp
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
cmpsl  %es:(%edi),%ds:(%esi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
inc    %esp
sbb    %eax,(%eax)
add    %dh,-0x4(%edx,%ebx,2)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ecx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %dh,0x19(%eax)
add    %al,(%eax)
mov    $0x63fffc5a,%eax
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%ebx),%eax
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
or     $0x1a,%al
add    %al,(%eax)
mov    %ds,-0x4(%esi)
push   %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa3,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
sbb    (%eax),%al
add    %cl,-0x4(%edi,%ebx,2)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1a(%eax)
add    %al,(%eax)
dec    %eax
pop    %edi
cld
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
je     8092c74 <_IO_stdin_used+0xc7b0>
add    %al,(%eax)
inc    %esp
pop    %edi
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    (%eax),%al
add    %bl,-0x4(%edi,%ebx,2)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xe,0x73300e43
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
call   78092ceb <_end+0x6fff4787>
pop    %edi
cld
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
imul   $0xec34110,(%esi),%ecx
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%ebx,%ebx,1)
add    %al,(%eax)
jl     8092d65 <_IO_stdin_used+0xc8a1>
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bh,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %eax
sbb    (%eax),%eax
add    %ah,0xdfffc5f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx,%ebx,1)
add    %bl,0xbfffc(%edi,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jo     8092d71 <_IO_stdin_used+0xc8ad>
add    %al,(%eax)
cwtl
pop    %edi
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x5f940000(%ebx,%ebx,1)
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x6fffffe5(%eax)
pop    %edi
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x5f8c0000(%ebx,%ebx,1)
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,%al
sbb    (%eax),%eax
add    %cl,0x69fffc5f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x2300e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,%ah
sbb    (%eax),%eax
add    %bh,0x2cfffc(%edi,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    %bl,(%eax,%eax,1)
add    %al,%al
pop    %edi
cld
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x0(%esp,%ebx,1)
add    %al,%ah
pop    %edi
cld
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
pushf
sbb    $0x0,%al
add    %ch,%ah
pop    %edi
cld
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7b300e45
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %bl,%al
sbb    $0x0,%al
add    %al,(%eax)
pusha
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x64200e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xe(%esi),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    $0x1d,%al
add    %al,(%eax)
or     $0x60,%al
cld
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2700e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,0x0(%ebp,%ebx,1)
add    %bl,0x235fffc(%eax,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%ah
sbb    $0x62840000,%eax
cld
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,%al
sbb    $0x62980000,%eax
cld
call   *0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
sti
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
dec    %eax
push   %ds
add    %al,(%eax)
mov    0x9efffc64,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %ebx
xchg   %al,(%ebx,%eax,2)
addl   $0x41,0xc30a7a02
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     -0x3d(%edx),%edx
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x65040000(%esi,%ebx,1)
cld
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
jns    809308d <_IO_stdin_used+0xcbc9>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x65340000(%esi,%ebx,1)
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x76300e45
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
loopne 80930e4 <_IO_stdin_used+0xcc20>
add    %al,(%eax)
dec    %eax
gs
cld
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
je     80930f3 <_IO_stdin_used+0xcc2f>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x1f,%al
add    %al,(%eax)
fs
gs
cld
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5d,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dl,0x0(%edi,%ebx,1)
add    %dl,%ah
data16
cld
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    %bl,(%edi)
add    %al,(%eax)
shlb   -0x4(%esi)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4504(%ebx)
js     8093197 <_IO_stdin_used+0xccd3>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
rcrb   $0x0,(%edi)
add    %bh,%al
data16
cld
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
pop    %ds
add    %al,(%eax)
add    $0x67,%al
cld
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%al
pop    %ds
add    %al,(%eax)
adc    %ah,-0x4(%edi)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cld
pop    %ds
add    %al,(%eax)
sbb    $0x67,%al
cld
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ah,(%eax)
add    %al,(%eax)
sub    %ah,-0x4(%edi)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    $0x20,%al
add    %al,(%eax)
xor    $0x67,%al
cld
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    %ah,(%eax)
add    %al,(%eax)
inc    %eax
addr16 cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%ebp),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x20(%eax)
add    %al,(%eax)
mov    %ah,-0x4(%edi)
ljmp   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x67a40000(%eax,%eiz,1)
cld
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x4fffffe0(%eax)
addr16 cld
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,0x67bc0000(%eax,%eiz,1)
cld
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
loopne 80932e6 <_IO_stdin_used+0xce22>
add    %al,(%eax)
mov    $0xdffffc67,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %ebx
xchg   %al,(%esi,%eax,2)
addl   $0xffffffc6,0x41c30a7f
inc    %ecx
movl   $0x4104040c,-0x3b(%ecx)
or     (%edx),%eax
pop    %eax
or     %bl,%al
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x45,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
and    %ah,(%ecx)
add    %al,(%eax)
pop    %eax
push   $0x34fffc
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    %ah,(%ecx)
add    %al,(%eax)
subb   $0xff,-0x4(%eax)
xor    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
push   %eax
and    %eax,(%eax)
add    %ch,0x34fffc68(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,0x21(%eax)
add    %al,(%eax)
shrb   -0x4(%eax)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
shlb   $0x0,(%ecx)
add    %bh,0x69(%eax)
cld
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fsubs  (%ecx)
add    %al,(%eax)
mov    0x3afffc69,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dh,0xe(%esi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
lock and %eax,(%eax)
add    %cl,%al
imul   $0x40ff,%esp,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
je     8093403 <_IO_stdin_used+0xcf3f>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
and    $0x22,%al
add    %al,(%eax)
aam    $0x69
cld
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    $0x22,%al
add    %al,(%eax)
or     $0x6a,%al
cld
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%esi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
push   %esp
and    (%eax),%al
add    %al,-0x4(%edx,%ebp,2)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ecx),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
dec    %ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
nop
and    (%eax),%al
add    %cl,%al
push   $0xfffffffc
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0x6b5c0000(%edx,%eiz,1)
cld
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x22
add    %al,(%eax)
xchg   %eax,%esp
imul   $0xffffffff,%esp,%edi
cmp    $0x0,%eax
inc    %ebx
push   %cs
xor    %bh,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
and    (%eax),%al
add    %bh,0x3dfffc(%ebx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0x23,%al
add    %al,(%eax)
in     $0x6b,%al
cld
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
sbb    $0x23,%al
add    %al,(%eax)
sbb    $0x6c,%al
cld
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%ecx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
and    (%eax),%eax
add    %bl,0x6c(%eax)
cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x60,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
andb   $0x0,(%ebx)
add    %bl,0x22fffc6c(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x6cb40000(%ebx,%eiz,1)
cld
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x2fffffdd(%eax)
insb   (%dx),%es:(%edi)
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x6cec0000(%ebx,%eiz,1)
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
and    (%eax),%eax
add    %cl,(%eax)
insl   (%dx),%es:(%edi)
cld
jmp    *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
and    (%eax),%eax
add    %ah,0x25fffc(,%ebp,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
clc
and    (%eax),%eax
add    %al,0x6d(%eax)
cld
jmp    *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%esp)
add    %al,(%eax)
pop    %esp
insl   (%dx),%es:(%edi)
cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
and    $0x0,%al
add    %cl,0x32fffc6d(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%esp)
add    %al,(%eax)
mov    $0x6d,%ah
cld
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x24(%eax)
add    %al,(%eax)
shrb   -0x4(%ebp)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
and    $0x0,%al
add    %ch,%ah
insl   (%dx),%es:(%edi)
cld
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
push   %eax
add    0xa(%ecx),%bl
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    %fs,(%eax,%eax,1)
add    %ch,(%esi,%ebp,2)
cld
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
push   %eax
add    0xa(%ecx),%bl
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0x6c000024,%esp
outsb  %ds:(%esi),(%dx)
cld
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edi)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,%fs:(%eax)
add    %dh,%ah
and    $0x0,%al
add    %al,0xb1fffc(%esi,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,0x0(%ebp,%eiz,1)
add    %bl,%ah
outsb  %ds:(%esi),(%dx)
cld
decl   (%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pushf
and    $0x71ac0000,%eax
cld
(bad)
incb   (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %bl,%ah
and    $0x746c0000,%eax
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,%al
and    $0x74a00000,%eax
cld
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,(%esi,%eiz,1)
add    %al,(%eax)
and    $0x75,%al
cld
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cmp    %ah,(%esi)
add    %al,(%eax)
push   %eax
jne    809381f <_IO_stdin_used+0xd35b>
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xe,0x75300e43
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
je     8093880 <_IO_stdin_used+0xd3bc>
add    %al,(%eax)
fs
jne    809385b <_IO_stdin_used+0xd397>
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %dh,-0x47ffffda(%eax)
jne    8093897 <_IO_stdin_used+0xd3d3>
incl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30ade02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
loopne 80938ec <_IO_stdin_used+0xd428>
add    %al,(%eax)
cwtl
jbe    80938c7 <_IO_stdin_used+0xd403>
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x2300e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bl,(%edi,%eiz,1)
add    %al,(%eax)
int3
jbe    8093903 <_IO_stdin_used+0xd43f>
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%ebx),%ch
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
daa
add    %al,(%eax)
sub    %dh,-0x4(%edi)
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
dec    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
js     8093985 <_IO_stdin_used+0xd4c1>
add    %al,(%eax)
nop
ja     809395f <_IO_stdin_used+0xd49b>
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
push   %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x27,%al
add    %al,(%eax)
call   26093614 <_end+0x1dff50b0>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb4,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
lock daa
add    %al,(%eax)
enter  $0xfc78,$0xff
jbe    80939de <_IO_stdin_used+0xd51a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xor    %ch,(%eax)
add    %al,(%eax)
or     %bh,-0x4(%ecx)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jnp    8093a35 <_IO_stdin_used+0xd571>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
sub    %al,(%eax)
add    %al,-0x4(%ecx,%edi,2)
(bad)
jl     8093a43 <_IO_stdin_used+0xd57f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sub    %al,(%eax)
add    %al,0x91fffc(%edx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
or     0x410c,%cl
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
shrb   (%eax)
add    %al,(%eax)
call   1c093737 <_end+0x13ff51d3>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
in     $0x28,%al
add    %al,(%eax)
hlt
jp     8093acb <_IO_stdin_used+0xd607>
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x52300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cmp    %ch,(%ecx)
add    %al,(%eax)
adc    %bh,-0x4(%ebx)
ljmp   *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7d,0x1800e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
js     8093b87 <_IO_stdin_used+0xd6c3>
add    %al,(%eax)
cmpb   $0xff,-0x4(%ebp)
xor    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%edi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
nop
sub    %eax,(%eax)
add    %ch,0x34fffc7d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x59,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ebp),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %al,%al
sub    %eax,(%eax)
add    %bh,0x5cfffc7d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
imul   $0xc341100e,(%edx),%ecx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%eax),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x42,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
or     %ch,(%edx)
add    %al,(%eax)
sarb   -0x4(%ebp)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ch,(%eax)
sub    (%eax),%al
add    %ah,%al
jge    8093c0f <_IO_stdin_used+0xd74b>
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4d,0x2400e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x0(%edx,%ebp,1)
add    %al,(%esi,%edi,2)
cld
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff83,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,0x6800002a(%eax)
jle    8093c87 <_IO_stdin_used+0xd7c3>
call   *0x0(%ebx)
add    %al,(%eax)
add    %cl,0xe(%ebx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
int3
sub    (%eax),%al
add    %bl,0x6cfffc(%esi,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%ebx,%ebp,1)
add    %al,(%eax)
aam    $0x7e
cld
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
sbb    %ch,(%ebx)
add    %al,(%eax)
loopne 8093d80 <_IO_stdin_used+0xd8bc>
cld
(bad)
jns    8093d06 <_IO_stdin_used+0xd842>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    (%eax),%eax
add    %cl,(%edi,%edi,2)
cld
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
test   %ch,(%ebx)
add    %al,(%eax)
and    $0x7f,%al
cld
incl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x11,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
les    (%ebx),%ebp
add    %al,(%eax)
xor    $0x80,%al
cld
lcall  *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffea,0x2500e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
add    $0x2c,%al
add    %al,(%eax)
xchg   %eax,%esp
cmp    $0x652ff,%esp
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x70600e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esp,%ebp,1)
add    %dh,0x10fffc(%edi,%eax,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
sub    $0x0,%al
add    %dh,0x4afffc87(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9e,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cwtl
sub    $0x0,%al
add    %al,%al
mov    %bh,%ah
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa7,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bl,%al
sub    $0x0,%al
add    %ah,-0x77(%eax)
cld
decl   (%edx)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
(bad)
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x2d,%al
add    %al,(%eax)
sub    $0x8d,%al
cld
inc    %ebp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %esp
sub    $0x8fbc0000,%eax
cld
(bad)
jmp    8093f4a <_IO_stdin_used+0xda86>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
pushf
sub    $0x906c0000,%eax
cld
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
inc    %eax
add    0xa(%esi),%bh
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
int3
sub    $0x911c0000,%eax
cld
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,%al
sub    $0x91300000,%eax
cld
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%eax),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0x2e,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%ecx
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,%cs:(%eax)
push   $0x61fffc91
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x2,(%ecx)
inc    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%esi),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x0(%esi,%ebp,1)
add    %bl,0x556fffc(%ecx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2e00e46
add    (%ecx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x2e,%al
add    %al,(%eax)
mov    $0x1bfffc96,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
add    %al,%cs:(%eax)
les    0x26fffc(%esi),%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,%al
add    %al,%cs:(%eax)
loopne 8094058 <_IO_stdin_used+0xdb94>
cld
jmp    *%eax
add    (%eax),%al
add    %al,(%eax)
dec    %edi
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x3700e43
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
push   %cs
jo     809407c <_IO_stdin_used+0xdbb8>
add    $0x4860285,%eax
xchg   %eax,(%ebx)
cmp    $0x0,%al
add    %al,(%eax)
and    %ch,(%edi)
add    %al,(%eax)
js     80940a3 <_IO_stdin_used+0xdbdf>
cld
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff6,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
pusha
das
add    %al,(%eax)
dec    %eax
lcall  $0x0,$0xd54fffc
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa046403,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
nop
das
add    %al,(%eax)
js     8094121 <_IO_stdin_used+0xdc5d>
cld
incl   0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0x1(%ebx),%ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
enter  $0x2f,$0x0
push   %eax
test   $0x38fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
pop    %esp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,%ah
das
add    %al,(%eax)
insb   (%dx),%es:(%edi)
test   $0x74cfffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
icebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
adc    %eax,0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
inc    %esp
xor    %al,(%eax)
add    %ah,-0x4(%eax,%esi,4)
incl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff89,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
test   %dh,(%eax)
add    %al,(%eax)
and    $0xb1,%al
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     0xe(%edx,%ecx,1),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0x30,%ah
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xfc,%cl
incl   0xa(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa030803,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %ah,%ah
xor    %al,(%eax)
add    %dh,0x2ffffc(%ebx,%edi,4)
add    %al,(%eax)
add    %cl,0xe(%ebx)
or     %al,0xec76302(%edi)
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    %dh,(%ecx)
add    %al,(%eax)
enter  $0xfcbb,$0xff
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %ecx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,(%eax)
xor    %eax,(%eax)
add    %al,(%eax)
mov    $0x45fffc,%esp
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ecx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,(%eax)
xor    %eax,(%eax)
add    %bh,(%eax)
mov    $0x45fffc,%esp
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ecx
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,0x31(%eax)
add    %al,(%eax)
jo     80942ee <_IO_stdin_used+0xde2a>
cld
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x300e4302(%ebx)
add    0xe(%edx,%ecx,1),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx),%esi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
je     809438b <_IO_stdin_used+0xdec7>
add    %al,(%eax)
add    $0xbd,%al
cld
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x72400e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x426c0000(%ecx,%esi,1)
cld
(bad)
flds   (%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
jb     80943d8 <_IO_stdin_used+0xdf14>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
or     $0x32,%al
add    %al,(%eax)
sbb    $0xc2,%al
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esp
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,(%edx,%esi,1)
add    %al,(%eax)
push   %esp
ret    $0xfffc
icebp
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
pusha
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
push   $0x10000032
leave
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esp
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,0x48000032(%eax)
leave
cld
call   *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe7,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
decl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
fdivs  (%edx)
add    %al,(%eax)
adc    %cl,%bl
cld
(bad)
cld
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e48
pop    %esi
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sbb    $0x33,%al
add    %al,(%eax)
int3
sar    %cl,%ah
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
push   %es
add    %ch,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
xor    (%eax),%eax
add    %al,0x61fffc(%ebx,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
xorb   $0x0,(%ebx)
add    %cl,%al
sar    %cl,%esp
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
pusha
add    0x410c0e0a(%ebp),%dh
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0x33,%al
add    %al,(%eax)
mov    $0xd8fffcd4,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %al,(%edx)
pop    %ecx
or     (%esi),%cl
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
loopne 80945f9 <_IO_stdin_used+0xe135>
add    %al,(%eax)
push   $0x6dfffcd5
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4b,%al
or     0xe(%edi),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
or     $0x34,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
aad    $0xfc
inc    %esi
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4504(%ebx)
add    0x1(%esi),%esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
inc    %esp
xor    $0x0,%al
add    %al,-0x4(%edx,%ebx,8)
call   *0x0(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x0(%esp,%esi,1)
add    %dh,0x15fffc(%edx,%ebx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
js     8094692 <_IO_stdin_used+0xe1ce>
add    %al,(%eax)
rcr    $0xfc,%dl
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     809467d <_IO_stdin_used+0xe1b9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
pushf
xor    $0x0,%al
add    %bl,0x17fffc(%ebx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec35502(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x5fffffcc(%eax)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%ah
xor    $0x0,%al
add    %bl,0x2dfffc(%ebx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
clc
xor    $0x0,%al
add    %ah,-0x37000325(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,-0x3cf58ffc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
sub    %dh,0xdd400000
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
ja     8094731 <_IO_stdin_used+0xe26d>
or     %al,-0x3d(%ebx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,0x35(%eax)
add    %al,(%eax)
pusha
(bad)
pushl  (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30ab202
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   %dh,0xde640000
cld
(bad)
fildl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff83,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,%ah
xor    $0xdf040000,%eax
cld
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%esi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sbb    $0x36,%al
add    %al,(%eax)
jl     80947e5 <_IO_stdin_used+0xe321>
cld
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf59afe(%ebx)
push   %cs
add    $0x4a,%al
or     -0x3d(%ecx),%edx
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,%ss:(%eax)
test   $0xdf,%al
cld
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,-0x37ffffca(%eax)
loopne 8094867 <_IO_stdin_used+0xe3a3>
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc8,0x2180e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
fdivs  (%esi)
add    %al,(%eax)
jo     80948a3 <_IO_stdin_used+0xe3df>
cld
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sbb    %dh,(%edi)
add    %al,(%eax)
shl    %cl
cld
pushl  0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa8,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
aaa
add    %al,(%eax)
inc    %eax
jecxz  809493f <_IO_stdin_used+0xe47b>
decl   0x0(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi,%esi,1)
add    %bh,0x42fffc(%ebx,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %dl,-0x17ffffc9(%eax)
jecxz  8094977 <_IO_stdin_used+0xe4b3>
lcall  *0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x6ff1bcfc(%ebx)
add    %eax,(%edx)
int    $0xa
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
ja     80949b4 <_IO_stdin_used+0xe4f0>
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,%ah
aaa
add    %al,(%eax)
cld
in     $0xfc,%eax
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
dec    %edx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ebx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
push   %cs
xor    %al,-0x78fc79fc(%ebx)
add    (%eax,%eax,1),%dl
add    %al,(%eax)
sbb    %bh,(%eax)
add    %al,(%eax)
adc    %ah,%bh
cld
pushl  0x0
inc    %ebx
push   %cs
xor    %dh,0xe(%ecx)
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dh,(%eax)
cmp    %al,(%eax)
add    %bh,(%eax)
out    %eax,$0xfc
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x66300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
test   %bh,(%eax)
add    %al,(%eax)
je     8094a55 <_IO_stdin_used+0xe591>
cld
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6f300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
les    (%eax),%edi
add    %al,(%eax)
(bad)
out    %eax,$0xfc
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
add    0xe(%eax),%cl
add    $0x10,%al
add    %al,(%eax)
add    %bl,%ah
cmp    %al,(%eax)
add    %bh,%ah
out    %eax,$0xfc
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
cmp    %al,(%eax)
add    %cl,(%eax)
call   81e4ada <_end+0x146576>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    $0x39,%al
add    %al,(%eax)
adc    $0xe8,%al
cld
lcall  *0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %bh,(%ecx)
add    %al,(%eax)
and    %ch,%al
cld
pushl  (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x39(%eax)
add    %al,(%eax)
sub    %ch,%cl
cld
lcall  *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx,%edi,1)
add    %dh,(%ecx,%ebp,8)
cld
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
dec    %eax
push   %cs
or     %al,-0x3cf59cfe(%ebx)
push   %cs
add    $0x45,%al
or     -0x3d(%ecx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %bh,(%ecx)
add    %al,(%eax)
push   %eax
jmp    8274b72 <_end+0x1d660e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pushf
cmp    %eax,(%eax)
add    %bl,-0x4(%ecx,%ebp,8)
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x68000039(%eax)
jmp    8374b9a <_end+0x2d6636>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
les    (%ecx),%edi
add    %al,(%eax)
test   %ch,%cl
cld
lcall  *0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
fdivrs (%ecx)
add    %al,(%eax)
nop
jmp    8974bc2 <_end+0x8d665e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,(%eax)
cmp    (%eax),%al
add    %ch,%al
jmp    82e4bfa <_end+0x246696>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%edx,%edi,1)
add    %al,(%eax)
add    $0xea,%al
cld
(bad)
cmp    $0x0,%eax
inc    %ebx
push   %cs
and    %cl,0xa(%ebp)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x3a(%eax)
add    %al,(%eax)
sub    %ch,%dl
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edx,%edi,1)
add    %bl,-0x4(%edx,%ebp,8)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0x43080e0a
ret
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,(%edx)
add    %bh,-0x16(%eax)
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x3a,%ah
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
ljmp   $0x0,$0x1ffffc
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,%ah
cmp    (%eax),%al
add    %ah,0x66fffc(%edx,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
adc    $0x3b,%al
add    %al,(%eax)
aam    $0xea
cld
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
cmp    (%eax),%eax
add    %bh,%al
ljmp   $0x0,$0x27fffc
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x3b(%eax)
add    %al,(%eax)
or     %ch,%bl
cld
(bad)
mov    $0x1,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
orl    $0xe,(%edx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
repnz or (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%eax
add    %bl,-0x13740000(%ebx,%edi,1)
cld
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%edx
add    %al,(%eax)
in     $0x3b,%al
add    %al,(%eax)
and    $0xed,%al
cld
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x79400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,(%eax)
cmp    $0x0,%al
add    %ah,(%eax)
out    %al,(%dx)
cld
jmp    *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff85,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
nop
cmp    $0x0,%al
add    %bh,0x26fffcee(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   $0x3c,%al
add    %al,(%eax)
shr    %dh
cld
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,-0x11240000(%esp,%edi,1)
cld
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
fdivrs (%eax,%eax,1)
add    %dh,(%eax)
out    %eax,(%dx)
cld
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ebx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
lock cmp $0x0,%al
add    %cl,-0x11(%eax)
cld
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,(%eax)
cmp    $0xef580000,%eax
cld
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %dh,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0x3d,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
out    %eax,(%dx)
cld
pushl  0x0(%esi)
push   %eax
push   %cs
and    %bl,0xe(%edx,%ecx,1)
add    $0x44,%al
or     (%edx),%eax
jp     8094f47 <_IO_stdin_used+0xea83>
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebp,%edi,1)
add    %cl,(%eax,%esi,8)
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jo     8094f93 <_IO_stdin_used+0xeacf>
add    %al,(%eax)
or     %dh,%al
cld
call   *0x0(%edx)
inc    %edi
push   %cs
or     %al,0xc0e4702(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf598fc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%esp
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x3d,%al
add    %al,(%eax)
push   $0x50fffcf0
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
call   8809500e <_end+0x7fff6aaa>
lock cld
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2400e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x58,%al
add    %al,(%eax)
add    %ah,(%esi,%edi,1)
add    %al,(%eax)
in     $0xf0,%al
cld
pushl  0x7
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
pop    %edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
dec    %esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,(%esi)
add    %cl,%al
idiv   %esp
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,%ds:(%eax)
sub    $0xf8,%al
cld
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
fdivrs (%esi)
add    %al,(%eax)
nop
clc
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%ch
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,%ah
add    %al,%ds:(%eax)
or     $0xf9,%al
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebp),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
and    %bh,(%edi)
add    %al,(%eax)
mov    %bh,%cl
cld
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
js     8095129 <_IO_stdin_used+0xec65>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x3f(%eax)
add    %al,(%eax)
test   $0xf9,%al
cld
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%ebx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
aas
add    %al,(%eax)
mov    $0xf9,%al
cld
jmp    *0x0
inc    %ebx
push   %cs
adc    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jo     8095195 <_IO_stdin_used+0xecd1>
add    %al,(%eax)
enter  $0xfcf9,$0xff
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %bh,(%edi)
add    %al,(%eax)
add    %bh,%dl
cld
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
mov    0x800003f,%al
cli
cld
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x5f40000(%edi,%edi,1)
cld
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
add    0xa(%ecx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
call   58095210 <_end+0x4fff6cac>
cli
cld
call   *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
fimull (%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,(%eax,%eax,2)
add    %al,(%eax)
je     8095209 <_IO_stdin_used+0xed45>
cld
incl   0x2(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2d00e46
std
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   $0xb0000040
std
cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
jl     80952a2 <_IO_stdin_used+0xedde>
add    %al,(%eax)
fdivr  %st,%st(5)
cld
call   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%dl
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%esp
add    %dh,-0xfc0000(%eax,%eax,2)
cld
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %bl,(%ecx,%eax,2)
add    %al,(%eax)
dec    %esp
(bad)
cld
(bad)
jns    809530b <_IO_stdin_used+0xee47>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%ebx)
push   %esi
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %cl,0x0(%eax)
add    %al,(%eax)
dec    %esp
inc    %ecx
add    %al,(%eax)
pushf
add    %bh,%ch
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
test   %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,0x70000041(%eax)
add    %edi,%ebp
call   *0x4(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2c00e46
or     $0x2,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
faddl  0x0(%ecx)
add    %cl,0x57fffd(%ebp,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
add    0xa(%eax),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %al,0x0(%edx)
add    %al,%al
add    $0x68fffd,%eax
add    %al,(%eax)
add    %dh,0xe(%ebx)
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    %al,0x0(%edx)
add    %bl,(%eax)
push   %es
std
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,(%edx,%eax,2)
add    %al,(%eax)
xor    $0x6,%al
std
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x73,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,0x42(%eax)
add    %al,(%eax)
mov    %al,(%esi)
std
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%eax)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    %al,0x0(%edx)
add    %dl,0x59fffd06(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf583fe(%ebx)
push   %cs
add    $0x43,%al
or     -0x3d(%eax),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
inc    %edx
add    %al,(%eax)
int3
push   %es
std
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf597fe(%ebx)
push   %cs
add    $0x47,%al
or     -0x3d(%ecx),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
rolb   0x0(%edx)
add    %bh,%al
push   %es
std
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
inc    %edx
add    %al,(%eax)
hlt
push   %es
std
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%al
inc    %edx
add    %al,(%eax)
lock push %es
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,(%ebx,%eax,2)
add    %al,(%eax)
or     $0x7,%al
std
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edx
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
inc    %ebx
add    %al,(%eax)
inc    %eax
pop    %es
std
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edx
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
fs
inc    %ebx
add    %al,(%eax)
je     8095555 <_IO_stdin_used+0xf091>
std
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jg     8095573 <_IO_stdin_used+0xf0af>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %bl,0x7dc0000(%ebx,%eax,2)
std
(bad)
jmp    809558d <_IO_stdin_used+0xf0c9>
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%ebx
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,%al
inc    %ebx
add    %al,(%eax)
orb    $0xfd,(%eax)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x42,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
inc    %esp
add    %al,(%eax)
mov    $0x3bfffd08,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x56,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,-0x47ffffbc(%eax)
or     %edi,%ebp
(bad)
cmp    (%edx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
out    %eax,$0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,%al
inc    %esp
add    %al,(%eax)
mov    %cl,(%ebx)
std
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcf,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
inc    %ebp
add    %al,(%eax)
orb    $0x0,0x185ff(,%edi,8)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x4f00e48
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    %al,0x0(%ebp)
add    %dl,%al
or     $0x275fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4d00e46
pop    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%edx
add    %al,(%eax)
enter  $0x45,$0x0
adc    %dl,(%eax)
std
(bad)
mov    $0x0,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ecx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
sbb    $0x46,%al
add    %al,(%eax)
jl     8095816 <_IO_stdin_used+0xf352>
std
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%esi),%cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
mov    %al,0x0(%esi)
add    %dh,0x54fffd11(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2300e48
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jg     80958b4 <_IO_stdin_used+0xf3f0>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
inc    %esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %ch,%bh
lcall  *0x3(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1800e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x47,%al
add    %al,(%eax)
les    0x7b4fffd,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x36,0x3700e43
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x0(%edi,%eax,2)
add    %al,-0x3(%ebp,%ebx,1)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff87,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,-0x57ffffb9(%eax)
sbb    $0x1bdfffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x3500e43
add    %ecx,(%esi)
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lock inc %edi
add    %al,(%eax)
sub    %bl,(%edi)
std
incl   0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4f00e48
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,(%eax)
dec    %eax
add    %al,(%eax)
js     8095a3b <_IO_stdin_used+0xf577>
std
incl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
pusha
push   %eax
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
pop    %esp
dec    %eax
add    %al,(%eax)
pushf
and    %ch,%bh
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
push   %eax
insb   (%dx),%es:(%edi)
or     (%esi),%cl
add    $0x41,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jl     8095aaa <_IO_stdin_used+0xf5e6>
add    %al,(%eax)
mov    $0x30fffd22,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
push   %eax
insb   (%dx),%es:(%edi)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
dec    %eax
add    %al,(%eax)
aam    $0x22
std
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
push   %edx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,%ah
dec    %eax
add    %al,(%eax)
int3
and    %ebp,%edi
ljmp   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
push   %eax
pop    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
imul   $0xc3460c0e,(%edx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%eax
or     $0x47,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x49,%al
add    %al,(%eax)
xor    $0x24,%al
std
pushl  0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcf,0x2600e48
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
push   %esp
dec    %ecx
add    %al,(%eax)
xor    $0x25,%al
std
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,-0x77ffffb7(%eax)
and    $0x91fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
addb   $0x0,(%ecx)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x49,%al
add    %al,(%eax)
or     %ah,(%esi)
std
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,%al
dec    %ecx
add    %al,(%eax)
pop    %eax
es
std
(bad)
in     (%dx),%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x1a00e46
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cld
dec    %ecx
add    %al,(%eax)
int3
push   %ebx
sti
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0x4(%esi,%ecx,1)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%edx,%ecx,2)
add    %al,(%eax)
in     $0x53,%al
sti
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4502(%ebx)
add    0xe(%edx),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cmp    %cl,0x0(%edx)
add    %bl,(%edx)
push   %esp
sti
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edx),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pop    %esp
dec    %edx
add    %al,(%eax)
mov    $0x50fffd27,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
addb   $0x6a,(%ecx)
or     (%esi),%cl
add    $0x4b,%al
or     0x4(%esi,%ecx,1),%edx
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
jl     8095cac <_IO_stdin_used+0xf7e8>
add    %al,(%eax)
in     (%dx),%al
daa
std
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ecx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x4a,%ah
add    %al,(%eax)
test   %ch,(%eax)
std
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ebp)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
int3
dec    %edx
add    %al,(%eax)
pushf
sub    %bh,%ch
decl   0x0(%eax)
add    %al,(%eax)
add    %cl,0xe(%edi)
or     %al,0xc0e4102(%esi)
addl   $0x55,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ecx),%ebx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
dec    %edx
add    %al,(%eax)
mov    $0x65fffd28,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
adc    %cl,0x0(%ebx)
add    %bl,(%eax)
sub    %edi,%ebp
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
dec    %eax
push   %cs
addb   $0x7f,(%ecx)
or     (%esi),%cl
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
dec    %ebx
add    %al,(%eax)
cwtl
sub    %edi,%ebp
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bh,0x4b(%eax)
add    %al,(%eax)
xor    %ch,(%edx)
std
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,%al
dec    %ebx
add    %al,(%eax)
mov    %ch,(%edx)
std
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
dec    %ebx
add    %al,(%eax)
xchg   %eax,%esp
sub    %ch,%bh
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
call   a8095e1c <_end+0x9fff78b8>
sub    %ch,%bh
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x57,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
dec    %esp
add    %al,(%eax)
mov    $0x2a,%al
std
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jnp    8095e1d <_IO_stdin_used+0xf959>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0x4c,%al
add    %al,(%eax)
fsubrl (%edx)
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
pop    %esp
dec    %esp
add    %al,(%eax)
or     $0x2b,%al
std
(bad)
jnp    8095e4d <_IO_stdin_used+0xf989>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jbe    8095e6b <_IO_stdin_used+0xf9a7>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
dec    %esp
add    %al,(%eax)
push   %esp
cs
std
incl   0x3(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x76500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x4c
add    %al,(%eax)
fs
xor    %edi,%ebp
decl   (%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%edi),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,0x343c0000(,%ecx,2)
std
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    %al,%al
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
dec    %ebp
add    %al,(%eax)
mov    0xc9fffd35,%al
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    %cl,0x0(%ebp)
add    %dh,(%eax)
cmp    %bh,%ch
pushl  0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
rorb   $0x0,0x0(%ebp)
push   $0x61fffd39
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
pop    %ebp
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bl,%al
dec    %ebp
add    %al,(%eax)
sarb   $0xfd,(%ecx)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    $0x4e,%al
add    %al,(%eax)
aam    $0x39
std
jmp    *0x0
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
sbb    $0x4e,%al
add    %al,(%eax)
in     (%dx),%al
cmp    %edi,%ebp
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x500e4504(%ebx)
add    %dh,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,0x54000000(%eax)
dec    %esi
add    %al,(%eax)
adc    $0x3b,%al
std
(bad)
fiaddl (%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5e,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
ja     809608e <_IO_stdin_used+0xfbca>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
pop    %eax
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
dec    %edi
add    %al,(%eax)
inc    %eax
aas
std
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%edi,%ecx,2)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
aas
std
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ah,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,0x0(%edi)
add    %dl,%al
aas
std
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%ecx
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pop    %eax
dec    %edi
add    %al,(%eax)
lock aas
std
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%ecx
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
js     80961ad <_IO_stdin_used+0xfce9>
add    %al,(%eax)
adc    %al,-0x3(%eax)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x403c0000(%edi,%ecx,2)
std
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x4f,%al
add    %al,(%eax)
mov    %al,-0x3(%eax)
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x430c0e0a(%esi),%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0xa,%cl
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%ebp
add    %ch,%ah
dec    %edi
add    %al,(%eax)
in     (%dx),%al
inc    %ecx
std
(bad)
jl     80961db <_IO_stdin_used+0xfd17>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e48
jb     8096202 <_IO_stdin_used+0xfd3e>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jae    8096219 <_IO_stdin_used+0xfd55>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
push   %eax
add    %al,(%eax)
push   %eax
dec    %esi
sti
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x50(%eax)
add    %al,(%eax)
call   74095f9f <_end+0x6bff7a3b>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
push   %eax
add    %al,(%eax)
xor    $0x43,%al
std
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %dh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rclb   $0x0,0x0(%eax)
cwtl
inc    %ebx
std
lcall  *0x0(%edi,%edx,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %al,(%eax)
push   %ecx
add    %al,(%eax)
mov    $0x4bfffd5a,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
jnp    8096300 <_IO_stdin_used+0xfe3c>
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x51,%al
add    %al,(%eax)
fmull  -0x5(%ebp)
(bad)
cmp    (%edi),%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa091c03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
dec    %esp
push   %ecx
add    %al,(%eax)
mov    $0x5efffd5a,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x38f586fe(%edi)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ecx
add    %al,(%eax)
cld
pop    %edx
std
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
js     8096371 <_IO_stdin_used+0xfead>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%esp
or     %al,-0x3d(%esi)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,0x58000051(%eax)
pop    %ebx
std
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%edi)
add    %ah,%bl
or     (%esi),%cl
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,%ah
push   %ecx
add    %al,(%eax)
inc    %esp
pop    %esp
std
incl   0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fcoms  0x0(%ecx)
add    %al,0x13fffd5c(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
push   %ecx
add    %al,(%eax)
mov    %ds,-0x1(%ebp,%edi,8)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %edx
add    %al,(%eax)
enter  $0xfd5c,$0xff
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebp),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%edx,%edx,2)
add    %al,(%eax)
fcompl -0x1(%ebp,%edi,8)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
pop    %eax
push   %edx
add    %al,(%eax)
lock pop %esp
std
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jge    809646b <_IO_stdin_used+0xffa7>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    %ss,0x0(%edx)
add    %cl,0x705fffd(,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4e00e46
stos   %al,%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
int3
push   %edx
add    %al,(%eax)
fsubl  -0x3(%ebx)
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cmp    %dl,0x0(%ebx)
add    %al,0x1efffd64(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xe(%edx)
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,0x53(%eax)
add    %al,(%eax)
mov    %ah,-0x1(%ebp,%edi,8)
xchg   %eax,%edx
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2a,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
fildl  (%edx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
rclb   $0x0,0x0(%ebx)
mov    $0x2bfffd69,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fcoms  0x0(%ebx)
add    %dl,%al
imul   $0xbff,%ebp,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
push   %ebx
add    %al,(%eax)
int3
imul   $0x17cff,%ebp,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x19,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sub    $0x54,%al
add    %al,(%eax)
or     $0x6b,%al
std
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
jo     8096635 <_IO_stdin_used+0x10171>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %cl,0x0(%esp,%edx,2)
add    %ch,(%ebx,%ebp,2)
std
(bad)
fadds  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    %cs,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x0(%esp,%edx,2)
add    %bl,%ah
imul   $0xffffffff,%ebp,%edi
insb   (%dx),%es:(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
or     %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,%al
push   %esp
add    %al,(%eax)
or     %dh,-0x3(%ecx)
incl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ecx),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,(%eax)
push   %ebp
add    %al,(%eax)
(bad)
jno    80966f0 <_IO_stdin_used+0x1022c>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x71ec0000(,%edx,2)
std
(bad)
jmp    809670d <_IO_stdin_used+0x10249>
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
bound  %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebp),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,0x0(%ebp,%edx,2)
add    %al,0x1f0fffd(%edx,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x20900e48
fwait
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x55,%ah
add    %al,(%eax)
xor    $0x74,%al
std
lcall  *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x20900e48
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
hlt
push   %ebp
add    %al,(%eax)
adc    $0x76,%al
std
(bad)
mov    $0x1,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x20900e46
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
xor    $0x56,%al
add    %al,(%eax)
xchg   %eax,%esp
ja     809681c <_IO_stdin_used+0x10358>
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ecx
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
push   %esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
ja     809683c <_IO_stdin_used+0x10378>
pushl  0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x23,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
xchg   %eax,%esp
push   %esi
add    %al,(%eax)
in     $0x7a,%al
std
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jbe    80968a3 <_IO_stdin_used+0x103df>
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4c,%al
add    %al,(%eax)
add    %bl,%al
push   %esi
add    %al,(%eax)
add    %bh,-0x3(%ebx)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%edi)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf59afc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%eax
ret
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%eax
ret
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%eax)
push   %edi
add    %al,(%eax)
and    %bh,-0x3(%ebx)
decl   (%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57700e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x140e0a01,%ecx
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adcb   $0x0,0x0(%edi)
fdivrs -0x1(%ebp,%edi,8)
jge    809696f <_IO_stdin_used+0x104ab>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffec,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %al,%al
push   %edi
add    %al,(%eax)
sbb    %bh,-0x3(%esi)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7e300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
adc    $0x58,%al
add    %al,(%eax)
xor    $0x7e,%al
std
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
cmp    %bl,0x0(%eax)
add    %ah,0x3afffd7e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x0(%eax,%ebx,2)
add    %al,%ah
jle    8096a3c <_IO_stdin_used+0x10578>
push   %edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2d,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
scas   %es:(%edi),%al
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,-0x7e940000(%eax,%ebx,2)
std
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
popa
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
call   c8096b29 <_end+0xbfff85c5>
cmp    $0xb4ff,%ebp
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0x59,%al
add    %al,(%eax)
inc    %esp
(bad)
std
jmp    *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,0x0(%ecx,%ebx,2)
add    %dh,0xdffffd(%ebx,%eax,4)
add    %al,(%eax)
add    %cl,0xe(%eax)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xaa50204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx,%eax,8),%esp
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,0x58000059(%eax)
test   %bh,%ch
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
loopne 8096c1f <_IO_stdin_used+0x1075b>
add    %al,(%eax)
js     8096b4f <_IO_stdin_used+0x1068b>
std
incl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,%ah
pop    %ecx
add    %al,(%eax)
fs
xchg   %bh,%ch
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    %bl,0x0(%edx)
add    %ch,0x5bfffd86(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,0x5a(%eax)
add    %al,(%eax)
call   650969b3 <_end+0x5cff844f>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
push   %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %edx
add    %al,(%eax)
sbb    $0x87,%al
std
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%edi),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x787c0000(%edx,%ebx,2)
std
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pushw  %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
rcrb   0x0(%edx)
add    %cl,%al
xchg   %edi,%ebp
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
call   d8096d2b <_end+0xcfff87c7>
xchg   %edi,%ebp
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx)
add    %bl,%al
xchg   %edi,%ebp
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%ebx,%ebx,2)
add    %al,(%eax)
in     $0x87,%al
std
(bad)
jp     8096d02 <_IO_stdin_used+0x1083e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
pop    %ebx
add    %al,(%eax)
xor    %cl,0x1bfffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
pop    %ebx
add    %al,(%eax)
cmp    %cl,0x1bfffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
js     8096db9 <_IO_stdin_used+0x108f5>
add    %al,(%eax)
inc    %eax
mov    %bh,%ch
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
pop    %ebx
add    %al,(%eax)
dec    %eax
mov    %bh,%ch
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   $0x5b,%al
add    %al,(%eax)
push   %eax
mov    %bh,%ch
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x5c00005b,%esp
mov    %bh,%ch
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x5b
add    %al,(%eax)
fs
mov    %bh,%ch
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
pop    %ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    %bh,%ch
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    $0x5c,%al
add    %al,(%eax)
in     (%dx),%al
mov    %bh,%ch
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %esp
add    %al,(%eax)
pop    %esp
mov    %edi,%ebp
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,(%eax,%eax,1)
add    %al,(%eax)
sbbb   $0x68,0x0(%eax,%eax,1)
mov    %edi,%ebp
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x14600e43
add    %al,(%eax)
test   $0x5c,%al
add    %al,(%eax)
loopne 8096e1b <_IO_stdin_used+0x10957>
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rcrb   $0xe8,0x0(%eax,%eax,1)
mov    %edi,%ebp
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fcomps 0x0(%eax,%eax,1)
lock mov %edi,%ebp
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock pop %esp
add    %al,(%eax)
clc
mov    %edi,%ebp
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %bl,0x0(%ebp)
add    %al,(%eax)
mov    %ch,%bh
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    %bl,0x0(%ebp)
add    %cl,(%eax)
mov    %ch,%bh
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
cmp    %bl,0x0(%ebp)
add    %dl,(%eax)
mov    %ch,%bh
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
js     8096fbb <_IO_stdin_used+0x10af7>
add    %al,(%eax)
orb    $0x0,0x1bfffd(%edx)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
nop
pop    %ebp
add    %al,(%eax)
mov    %cl,0x98fffd(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
rcrb   0x0(%ebp)
add    %ch,%al
mov    %ch,%bh
(bad)
jp     8096fbe <_IO_stdin_used+0x10afa>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0x5e,%al
add    %al,(%eax)
xor    $0x8b,%al
std
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %bl,0x0(%esi)
add    %al,-0x75(%eax)
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    %bl,0x0(%esi)
add    %cl,-0x75(%eax)
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
pop    %esi
add    %al,(%eax)
push   %eax
mov    %ebp,%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
pop    %esi
add    %al,(%eax)
pop    %eax
mov    %ebp,%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
js     80970bc <_IO_stdin_used+0x10bf8>
add    %al,(%eax)
pusha
mov    %ebp,%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
pop    %esi
add    %al,(%eax)
push   $0x1bfffd8b
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
test   $0x5e,%al
add    %al,(%eax)
jo     809701d <_IO_stdin_used+0x10b59>
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rcrb   $0x0,0x0(%esi)
js     8097035 <_IO_stdin_used+0x10b71>
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bl,%al
pop    %esi
add    %al,(%eax)
orb    $0x0,0x8ffffd(%ebx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %bl,0x0(%edi)
add    %cl,%al
mov    %ebp,%edi
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x5f,%al
add    %al,(%eax)
aam    $0x8b
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi,%ebx,2)
add    %bl,%ah
mov    %ebp,%edi
incl   0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pusha
pop    %edi
add    %al,(%eax)
fmuls  0x48fffd(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbbb   $0x0,0x0(%edi)
or     %cl,0x1e8ff(%ebp,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb1,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rcrb   $0x0,0x0(%edi)
mov    $0xbefffd8d,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %bh,(%eax)
mov    %ebp,%?
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,(%eax,%eiz,2)
add    %al,(%eax)
mov    %cs,0x4afffd(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   $0xb0000060
mov    %ebp,%?
(bad)
jnp    8097256 <_IO_stdin_used+0x10d92>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x52,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,-0xfffffa0(%eax)
mov    %ebp,%?
decl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x48,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
lahf
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
cld
pusha
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
std
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
jo     80972f3 <_IO_stdin_used+0x10e2f>
inc    %esi
or     (%esi),%cl
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bl,(%eax)
popa
add    %al,(%eax)
add    %dl,0x6defffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x65500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
adc    (%ebx),%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
and    (%ecx),%eax
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x70000061(%eax)
xchg   %eax,%esi
std
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x61,%ah
add    %al,(%eax)
test   %dl,0xe7fffd(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
hlt
popa
add    %al,(%eax)
xor    $0x97,%al
std
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
les    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
xor    $0x62,%al
add    %al,(%eax)
hlt
xchg   %eax,%edi
std
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e46
mov    $0x1,%dh
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
js     80974c0 <_IO_stdin_used+0x10ffc>
add    %al,(%eax)
and    %bl,0x24efffd(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    $0x30000062,%eax
pushf
std
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lock bound %eax,(%eax)
add    %bl,-0x77000264(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%ebx,%eiz,2)
add    %al,(%eax)
adc    $0x9d,%al
std
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa4,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %al,0x63(%eax)
add    %al,(%eax)
cwtl
popf
std
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x79,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,0x0(%ebx,%eiz,2)
add    %dh,0xb6fffd(%ebp,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x5d300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x1c000063,%esp
sahf
std
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cld
arpl   %ax,(%eax)
add    %cl,0x155fffd(%esi,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6a400e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x64,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
lahf
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xe(%ebp)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,%fs:(%eax)
in     $0x9f,%al
std
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     80976ba <_IO_stdin_used+0x111f6>
add    %al,(%eax)
or     %ah,0x24fffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %dl,0x18000064(%eax)
mov    0x6cfffd,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %al,(%edx)
push   %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
shlb   $0x58,0x0(%eax,%eax,1)
mov    0x33fffd,%al
add    %al,(%eax)
add    %bl,0xe(%ebx)
and    %cl,0xe(%esi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fsubs  0x0(%eax,%eax,1)
andb   $0x0,0x3dfffd(%eax)
add    %al,(%eax)
inc    %edi
push   %cs
or     %al,0xec34f02(%ebx)
add    $0x62,%al
push   %cs
or     %al,0x100002(%ebx)
add    %al,(%eax)
clc
add    %al,%fs:(%eax)
mov    0x3dfffda0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x5f340000(,%eiz,2)
std
ljmp   *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %ah,0x0(%ebp)
add    %ch,%al
mov    0xb7fffd,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x2300e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
pusha
add    %al,%gs:(%eax)
push   $0x6bfffda1
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5f,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,-0x5e640000(%ebp,%eiz,2)
std
incl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
fsubl  0x0(%ebp)
add    %ch,%ah
mov    %al,0x50fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
data16
add    %al,(%eax)
adc    %ah,0x5afffd(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    $0x66,%al
add    %al,(%eax)
push   %esp
mov    %eax,0x27fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %al,0x0(%esi,%eiz,2)
add    %ah,-0x3(%ebx,%eiz,4)
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
cltd
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
nop
data16
add    %al,(%eax)
push   $0x98fffda4
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
shlb   $0x0,0x0(%esi)
fsubs  0x3cff(%ebp,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,%al
data16
add    %al,(%eax)
loopne 8097886 <_IO_stdin_used+0x113c2>
std
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x44,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x67(%eax)
add    %al,(%eax)
or     %ah,0xe6fffd(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x57400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pushf
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,-0x5fffff99(%eax)
movsl  %ds:(%esi),%es:(%edi)
std
jmp    *0x4(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
xchg   %eax,%edx
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
push   $0xa9a00000
std
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
pop    %eax
add    %al,(%eax)
add    %bh,(%eax,%ebp,2)
add    %al,(%eax)
mov    $0xb4fffda9,%esp
adc    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
mov    %es,0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
xchg   %eax,%ebx
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cwtl
push   $0xbb200000
std
lcall  *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   $0xbb2c0000
std
pushl  0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
fmull  (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     (%dx),%al
push   $0xbd5c0000
std
pushl  0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
fmull  (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    $0x69,%al
add    %al,(%eax)
mov    %?,0x248fffd(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
rorl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0xfdc19c00,(%eax),%eax
decl   0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
rorl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
lods   %ds:(%esi),%al
imul   $0xfdc3ac00,(%eax),%eax
pushl  (%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
mov    $0x41140e0a,%esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     (%dx),%al
imul   $0xfdc59c00,(%eax),%eax
pushl  (%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
mov    $0x41140e0a,%esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,(%edx,%ebp,2)
add    %al,(%eax)
mov    %es,%edi
std
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0x0(%eax,%eax,1)
add    %al,0x6a(%eax)
add    %al,(%eax)
mov    %al,%bh
std
push   %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
cwtl
push   $0x0
add    %dh,(%eax)
enter  $0xfffd,$0xa0
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     8097ca3 <_IO_stdin_used+0x117df>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,%al
push   $0x0
add    %ah,0x1efffdc8(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x6b,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
leave
std
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx,%ebp,2)
add    %bl,0x4dfffd(%ecx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
cwtl
imul   $0x0,(%eax),%eax
mov    $0xc9,%al
std
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
fsubrs 0x0(%ebx)
add    %dl,-0x36(%eax)
std
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %ch,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %al,(%esp,%ebp,2)
add    %al,(%eax)
fs
lret   $0xfffd
jge    8097df2 <_IO_stdin_used+0x1192e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5e,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
nop
lret   $0xfffd
stc
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a69,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
mov    %ch,0x0(%eax,%eax,1)
pusha
int3
std
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x337c0000(%esp,%ebp,2)
std
(bad)
cli
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jno    8097ee0 <_IO_stdin_used+0x11a1c>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
or     $0x6d,%al
add    %al,(%eax)
sub    $0xcf,%al
std
(bad)
jp     8097efa <_IO_stdin_used+0x11a36>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
pop    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,-0x30840000(,%ebp,2)
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
push   $0xa
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,-0x77ffff93(%eax)
iret
std
(bad)
aas
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x1d,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %al,%al
insl   (%dx),%es:(%edi)
add    %al,(%eax)
mov    %dl,%cl
std
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbd,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    %ch,0x0(%esi)
add    %dl,-0x5200022e(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
pop    %eax
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,%bh
std
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x88000000
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
adc    $0xfd,%bh
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dh,%ah
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
in     $0xd7,%al
std
incl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   $0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
outsl  %fs:(%esi),(%dx)
add    %al,(%eax)
test   %bl,%cl
std
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5b1fe(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %al,-0x265c0000(%edi,%ebp,2)
std
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%ebx),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
int3
fscale
pushl  0x0(%esi,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x3700e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,(%eax,%esi,2)
add    %al,(%eax)
or     $0xe0,%al
std
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebp)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4e,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %ch,0x70(%eax)
add    %al,(%eax)
inc    %eax
loopne 8098250 <_IO_stdin_used+0x11d8c>
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,0x70000070(%eax)
loopne 8098280 <_IO_stdin_used+0x11dbc>
(bad)
aas
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
push   %esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fdivl  0x0(%eax)
add    %ch,-0x3(%edx,%eiz,8)
(bad)
ljmp   $0xe41,$0x12
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30af002,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
or     $0x71,%al
add    %al,(%eax)
sub    $0xf5,%al
std
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
addl   $0x48,(%ebx)
push   %cs
pusha
insl   (%dx),%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
cmp    %dh,0x0(%ecx)
add    %al,-0xb(%eax)
std
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   $0xb0000071
cmc
std
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%edx),%bh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x67ffff8f(%eax)
idiv   %ch
(bad)
jp     809838e <_IO_stdin_used+0x11eca>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
adc    %al,(%edx)
jo     80983af <_IO_stdin_used+0x11eeb>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
int3
jno    80983b3 <_IO_stdin_used+0x11eef>
add    %ch,%ah
idiv   %ch
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
or     $0x72,%al
add    %al,(%eax)
jl     80983ef <_IO_stdin_used+0x11f2b>
std
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ebx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    $0x72,%al
add    %al,(%eax)
or     $0xfa,%al
std
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jl     8098441 <_IO_stdin_used+0x11f7d>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
je     80984cc <_IO_stdin_used+0x12008>
add    %al,(%eax)
in     $0xfa,%al
std
jmp    *%ebp
or     $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa041203,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x7a40000(%edx,%esi,2)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xd0000072,%eax
pop    %es
(bad)
pushl  0x0
inc    %ebx
push   %cs
xor    %dh,0xe(%ecx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
(bad)
jb     80984b7 <_IO_stdin_used+0x11ff3>
add    %bh,%al
pop    %es
(bad)
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x72,%al
add    %al,(%eax)
add    $0x8,%al
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,%ah
jb     80984e3 <_IO_stdin_used+0x1201f>
add    %ch,(%eax,%ecx,1)
(bad)
call   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x60,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
push   %esp
jae    809853b <_IO_stdin_used+0x12077>
add    %dh,(%ebx,%ecx,1)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x73(%eax)
add    %al,(%eax)
inc    %eax
or     %esi,%edi
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xa(%ebp),%ebx
push   %cs
add    $0x43,%al
or     0xe(%ebp),%eax
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %?,0x0(%ebx)
add    %ch,-0x2(%ebx,%ecx,1)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x68000073(%eax)
or     %esi,%edi
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0xb640000(%ebx,%esi,2)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
loopne 8098639 <_IO_stdin_used+0x12175>
add    %al,(%eax)
or     %cl,(%esi,%edi,8)
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dh,(%esp,%esi,2)
add    %al,(%eax)
push   %esp
or     $0xfe,%al
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x74(%eax)
add    %al,(%eax)
pop    %eax
or     $0xfe,%al
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
jl     80986d6 <_IO_stdin_used+0x12212>
add    %al,(%eax)
jl     8098672 <_IO_stdin_used+0x121ae>
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    $0xac000074,%esp
or     $0xfe,%al
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,%ah
je     80986c3 <_IO_stdin_used+0x121ff>
add    %ch,%ah
or     $0xfe,%al
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %cl,(%eax)
or     $0x2efffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%eax)
jne    8098707 <_IO_stdin_used+0x12243>
add    %bl,(%eax)
or     $0x5fffe,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x75,%al
add    %al,(%eax)
adc    $0xd,%al
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
jne    8098733 <_IO_stdin_used+0x1226f>
add    %bl,0x20fffe(,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp,%esi,2)
add    %ah,0x5fffe(,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
nop
add    %al,(%eax)
add    %bh,0x75(%eax)
add    %al,(%eax)
and    %cl,0xf4fffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,(%esi,%esi,2)
add    %al,(%eax)
mov    %cs,0x24ffffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
cltd
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
dec    %esp
jbe    8098833 <_IO_stdin_used+0x1236f>
add    %bl,0x8dfffe(%edi,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
orb    $0xc3,(%edx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     -0x3d(%ebx),%eax
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jl     80988d8 <_IO_stdin_used+0x12414>
add    %al,(%eax)
cld
paddd  %mm7,%mm7
adc    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
jbe    809887b <_IO_stdin_used+0x123b7>
add    %al,(%eax,%edx,1)
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
enter  $0x76,$0x0
inc    %eax
adc    %bh,%dh
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %cl,(%eax)
ja     80988ef <_IO_stdin_used+0x1242b>
add    %ah,-0x6b0001f0(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa8,0x2400e43
or     (%esi),%cl
adc    $0x4c,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
int    $0xe
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,0x0(%edi,%esi,2)
add    %ch,%ah
adc    %edi,%esi
(bad)
ljmp   $0xe41,$0x1
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x13840000(%edi,%esi,2)
(bad)
ljmp   *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
or     $0x78,%al
add    %al,(%eax)
pop    %esp
adc    $0x83fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dh,(%eax)
js     8098a17 <_IO_stdin_used+0x12553>
add    %cl,%al
adc    $0x65fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   %bh,0x0(%eax)
add    %ah,%ah
adc    $0x46fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
test   $0x78,%al
add    %al,(%eax)
adc    %dl,(%esi)
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     $0x78,%al
add    %al,(%eax)
fs
push   %ss
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%al
js     8098adf <_IO_stdin_used+0x1261b>
add    %ah,0x16(%eax)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     $0x79,%al
add    %al,(%eax)
pop    %esp
push   %ss
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x30000000
jns    8098b17 <_IO_stdin_used+0x12653>
add    %ch,0x16(%eax)
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
pushf
jns    8098b83 <_IO_stdin_used+0x126bf>
add    %bh,0xaffffe(%esi,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dh,0x58000079(%eax)
pop    %ss
(bad)
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0x7a,%al
add    %al,(%eax)
adc    $0x18,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
jp     8098bff <_IO_stdin_used+0x1273b>
add    %dl,(%eax)
sbb    %bh,%dh
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%edx,%edi,2)
add    %al,(%eax)
or     $0x18,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x7a(%eax)
add    %al,(%eax)
or     %bl,(%eax)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x0(%edx,%edi,2)
add    %dh,(%eax,%ebx,1)
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x5800007a(%eax)
sbb    %bh,%dh
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bl,%ah
jp     8098cc3 <_IO_stdin_used+0x127ff>
add    %ch,(%ecx,%ebx,1)
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
and    $0x7b,%al
add    %al,(%eax)
inc    %esp
sbb    %edi,%esi
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %al,0x0(%ebx,%edi,2)
add    %ah,-0x2(%ecx,%ebx,1)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,-0x77ffff85(%eax)
sbb    %edi,%esi
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,-0x4fffff85(%eax)
sbb    %edi,%esi
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,%ah
jnp    8098ddb <_IO_stdin_used+0x12917>
add    %dh,%ah
sbb    %edi,%esi
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    %bh,0x0(%eax,%eax,1)
adc    %bl,(%edx)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%esp,%edi,2)
add    %al,(%eax)
sub    $0x1a,%al
(bad)
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %al,0x1b140000(%esp,%edi,2)
(bad)
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
mov    $0x7000007c,%eax
sbb    %esi,%edi
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %dh,%al
jl     8098ed7 <_IO_stdin_used+0x12a13>
add    %cl,(%eax)
sbb    $0xfe,%al
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %ah,0x7d(%eax)
add    %al,(%eax)
sub    %bl,0x1c6fffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    8098f6f <_IO_stdin_used+0x12aab>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    8098f82 <_IO_stdin_used+0x12abe>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x1e9c0000(%ebp,%edi,2)
(bad)
incl   0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%al
jge    8098fb7 <_IO_stdin_used+0x12af3>
add    %bl,0x3cfffe1e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
hlt
jge    8098fdb <_IO_stdin_used+0x12b17>
add    %dh,0x165fffe(%esi,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,(%esi,%edi,2)
add    %al,(%eax)
in     $0x1f,%al
(bad)
call   *0xe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pushw  %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x7e(%eax)
add    %al,(%eax)
add    %ch,(%esi)
(bad)
dec    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ecx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%edx
add    %al,(%eax)
sarb   $0x0,0x0(%esi)
mov    %ch,(%edi)
(bad)
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dl,(%edi,%edi,2)
add    %al,(%eax)
adc    $0x30,%al
(bad)
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
push   $0xa000007f
xor    %bh,%dh
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pushf
jg     8099183 <_IO_stdin_used+0x12cbf>
add    %ch,%ah
xor    %bh,%dh
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
fdivrl 0x0(%edi)
add    %ch,-0x2(%esp,%esi,1)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bh,%ah
jg     80991e3 <_IO_stdin_used+0x12d1f>
add    %bh,-0x2(%esp,%esi,1)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    $0x80,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    $0xfe,%al
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
addb   $0x0,(%eax)
mov    $0x34,%al
(bad)
(bad)
cmp    $0x7,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
lock or (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,-0x4fffff80(%eax)
cmp    %esi,%edi
jmp    *(%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
icebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
loopne 8099246 <_IO_stdin_used+0x12d82>
add    %al,(%eax)
mov    %bh,(%esi)
(bad)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1bcfe(%ebx)
add    %eax,(%edx)
push   %esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
add    $0x81,%al
add    %al,(%eax)
les    (%esi),%edi
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x3210e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,4)
add    %dh,%ah
aas
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x7f(%eax)
add    %al,(%eax)
and    %al,-0x2(%eax)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0x0(%eax,%eax,1)
add    %ch,0x0(%ecx,%eax,4)
add    %cl,-0x2(%eax,%eax,2)
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2180e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
addl   $0xfe411400,(%eax)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fadds  0x41500000(%ecx)
(bad)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jnp    80993dd <_IO_stdin_used+0x12f19>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cld
addl   $0xfe418c00,(%eax)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%ecx
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
xor    $0x82,%al
add    %al,(%eax)
mov    $0x41,%ah
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x76,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bl,0x0(%edx,%eax,4)
add    %bh,%ah
inc    %ecx
(bad)
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
arpl   %cx,(%esi)
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x42640000(%edx,%eax,4)
(bad)
lcall  *(%edx)
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x6900e46
(bad)
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%al
(bad)
add    %al,(%eax)
inc    %eax
push   %ebp
(bad)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4b00e46
pop    %esp
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    $0x83,%al
add    %al,(%eax)
cld
pop    %edi
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ch,0x0(%ebx,%eax,4)
add    %ch,-0x2(%eax,%eiz,2)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x83,%ah
add    %al,(%eax)
mov    $0x60,%ah
(bad)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%edx
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
aam    $0x83
add    %al,(%eax)
in     $0x60,%al
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
add    %al,-0x19f1800(%eax,%eax,1)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
test   %al,(%eax)
add    %ah,0xafffe61(%eax)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
push   %edx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jl     80995e6 <_IO_stdin_used+0x13122>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0xffffffff,%esi,%edi
xchg   %eax,%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,0x6ccc0000(%esp,%eax,4)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
test   %al,(%eax)
add    %bl,%al
insb   (%dx),%es:(%edi)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x6ce40000(,%eax,4)
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
test   %eax,(%eax)
add    %dh,%al
insb   (%dx),%es:(%edi)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x85,%al
add    %al,(%eax)
or     $0x6d,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,-0x7b(%eax)
add    %al,(%eax)
sbb    %ch,-0x2(%ebp)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
je     80996df <_IO_stdin_used+0x1321b>
add    %al,(%eax)
xor    $0x6d,%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
test   $0x85,%al
add    %al,(%eax)
pusha
insl   (%dx),%es:(%edi)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,%ah
test   %eax,(%eax)
add    %al,(%esi,%ebp,2)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
cld
test   %eax,(%eax)
add    %bl,(%esi,%ebp,2)
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xor    %al,0x6e780000(%esi)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi,%eax,4)
add    %al,0x19fffe(%esi,%ebp,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
xchg   %al,(%eax)
add    %dl,0x18fffe6e(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi,%eax,4)
add    %bl,0x17fffe(%esi,%ebp,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
addb   $0xfe,0x6ea80000(%esi)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,-0x47ffff7a(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,%al
xchg   %al,(%eax)
add    %cl,%al
outsb  %ds:(%esi),(%dx)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fadds  0x6ee00000(%esi)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
lock xchg %al,(%eax)
add    %bh,%al
outsb  %ds:(%esi),(%dx)
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x87,%al
add    %al,(%eax)
test   %ch,-0x2(%edi)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    $0x87,%al
add    %al,(%eax)
pushf
outsl  %ds:(%esi),(%dx)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
xchg   %eax,(%eax)
add    %dh,0x23fffe(%edi,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %esp
xchg   %eax,(%eax)
add    %cl,%ah
outsl  %ds:(%esi),(%dx)
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
addb   $0xfe,0x70580000(%edi)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cwtl
xchg   %eax,(%eax)
add    %al,0x33fffe70(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x87,%al
add    %al,(%eax)
test   $0x70,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
enter  $0x87,$0x0
(bad)
jo     80999b1 <_IO_stdin_used+0x134ed>
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
xchg   %eax,(%eax)
add    %bl,%ah
jo     80999c5 <_IO_stdin_used+0x13501>
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
xchg   %eax,(%eax)
add    %ch,%al
jo     80999d9 <_IO_stdin_used+0x13515>
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%ecx,4)
add    %al,(%eax)
hlt
jo     80999ed <_IO_stdin_used+0x13529>
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
jno    8099a01 <_IO_stdin_used+0x1353d>
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dl,0x0(%eax,%ecx,4)
add    %ah,(%ecx,%esi,2)
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,0x48000088(%eax)
jno    8099a79 <_IO_stdin_used+0x135b5>
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%al
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%ebx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x9c000088,%esp
jno    8099aa5 <_IO_stdin_used+0x135e1>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
rorb   0x71b80000(%eax)
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,%al
mov    %al,(%eax)
add    %cl,%al
jno    8099ad9 <_IO_stdin_used+0x13615>
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x16,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,(%eax)
mov    %eax,(%eax)
add    %cl,%al
jb     8099b19 <_IO_stdin_used+0x13655>
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
js     8099ae7 <_IO_stdin_used+0x13623>
add    %al,(%eax)
loopne 8099bd4 <_IO_stdin_used+0x13710>
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
mov    %eax,(%eax)
add    %ch,%al
jb     8099b79 <_IO_stdin_used+0x136b5>
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
test   $0x89,%al
add    %al,(%eax)
lock jb 8099b91 <_IO_stdin_used+0x136cd>
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
loopne 8099b4f <_IO_stdin_used+0x1368b>
add    %al,(%eax)
clc
jb     8099bc9 <_IO_stdin_used+0x13705>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
clc
mov    %eax,(%eax)
add    %dl,(%eax)
jae    8099be1 <_IO_stdin_used+0x1371d>
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %dh,(%edx,%ecx,4)
add    %al,(%eax)
adc    $0x73,%al
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
rorb   0x77e80000(%edx)
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,%al
mov    (%eax),%al
add    %ah,(%eax)
js     8099cd1 <_IO_stdin_used+0x1380d>
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     $0x8b,%al
add    %al,(%eax)
pop    %esp
js     8099cf5 <_IO_stdin_used+0x13831>
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
and    $0x8b,%al
add    %al,(%eax)
test   %bh,-0x2(%eax)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
dec    %eax
mov    (%eax),%eax
add    %dl,(%eax)
jns    8099d31 <_IO_stdin_used+0x1386d>
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    (%eax),%eax
add    %bl,(%ecx,%edi,2)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
nop
mov    (%eax),%eax
add    %ch,(%eax)
jns    8099d79 <_IO_stdin_used+0x138b5>
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    (%eax),%eax
add    %ah,(%ecx,%edi,2)
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
aam    $0x8b
add    %al,(%eax)
inc    %esp
jns    8099dbd <_IO_stdin_used+0x138f9>
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
add    %cl,-0x186a800(%eax,%eax,1)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xor    %cl,-0x1867800(%eax,%eax,1)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
push   %esp
mov    %es,(%eax)
add    %dh,0x29fffe(%ecx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %dh,0x0(%esp,%ecx,4)
add    %al,%ah
jns    8099e5d <_IO_stdin_used+0x13999>
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
nop
mov    %es,(%eax)
add    %bl,%al
jns    8099e79 <_IO_stdin_used+0x139b5>
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,-0x17ffff74(%eax)
jns    8099e99 <_IO_stdin_used+0x139d5>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,%al
mov    %es,(%eax)
add    %bh,%al
jns    8099eb9 <_IO_stdin_used+0x139f5>
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,%ah
mov    %es,(%eax)
add    %dl,(%edx,%edi,2)
(bad)
pushl  (%ebx)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   $0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
lea    (%eax),%eax
add    %bh,%ah
cmp    $0x1bff,%esi
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
lea    %fs:(%eax),%eax
add    %al,(%edx,%eax,4)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
and    %cl,0xe(%edi)
add    $0x42,%al
push   %cs
and    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,0x2800008d(%eax)
(bad)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %ch,-0x7dc40000(%ebp,%ecx,4)
(bad)
jmp    *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
add    %al,(%ecx)
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,(%esi,%ecx,4)
add    %al,(%eax)
jl     8099f8a <_IO_stdin_used+0x13ac6>
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
mov    %fs:(%eax),%es
add    %dl,-0x2(%ebp,%eax,4)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
jl     8099ff0 <_IO_stdin_used+0x13b2c>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
test   %edi,%esi
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x8e,%ah
add    %al,(%eax)
xchg   %eax,%esp
test   %edi,%esi
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%ah
mov    (%eax),%es
add    %dl,0x23fffe(%ebp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,%ah
mov    (%eax),%es
add    %ah,0x23fffe(%ebp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dl,(%edi,%ecx,4)
add    %al,(%eax)
mov    $0x85,%ah
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    $0x8f,%al
add    %al,(%eax)
in     (%dx),%al
test   %edi,%esi
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x0(%edi,%ecx,4)
add    %ah,(%esi,%eax,4)
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
popl   (%eax)
add    %bl,-0x2(%esi,%eax,4)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %dh,0x0(%edi,%ecx,4)
add    %dl,0x275fffe(%esi,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
dec    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
nop
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
loopne 809a155 <_IO_stdin_used+0x13c91>
add    %al,(%eax)
test   $0x88,%al
(bad)
incl   0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
and    %dl,-0x76480000(%eax)
(bad)
call   *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pusha
nop
add    %al,(%eax)
mov    %cl,0x210fffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    0x58000090,%al
(bad)
(bad)
call   *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
loopne 809a256 <_IO_stdin_used+0x13d92>
add    %al,(%eax)
sub    %cl,0x210fffe(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e46
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    %dl,-0x6f080000(%ecx)
(bad)
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e48
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %ah,-0x6f(%eax)
add    %al,(%eax)
sub    %dl,0x1b9fffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
jns    809a376 <_IO_stdin_used+0x13eb2>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorl   $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
rclb   -0x6b880000(%ecx)
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
call   a809a462 <_end+0x9fffbefe>
xchg   %eax,%esp
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%bl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %cl,(%edx,%edx,4)
add    %al,(%eax)
in     (%dx),%al
xchg   %eax,%esp
(bad)
call   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
in     $0x3,%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jl     809a3f4 <_IO_stdin_used+0x13f30>
add    %al,(%eax)
pushf
cltd
(bad)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%al
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,-0x37ffff6e(%eax)
cltd
(bad)
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jg     809a4c2 <_IO_stdin_used+0x13ffe>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%edx
add    %al,(%eax)
call   5809a563 <_end+0x4fffbfff>
lcall  $0x0,$0x83fffe
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x93,%al
add    %al,(%eax)
mov    %ds,0x1d6fffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
jl     809a4f5 <_IO_stdin_used+0x14031>
add    %al,(%eax)
sub    $0x9c,%al
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x93,%ah
add    %al,(%eax)
fs
pushf
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,%ah
xchg   %eax,%ebx
add    %al,(%eax)
jl     809a552 <_IO_stdin_used+0x1408e>
(bad)
(bad)
js     809a5ba <_IO_stdin_used+0x140f6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     809a5db <_IO_stdin_used+0x14117>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    $0x94,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pushf
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
fs
xchg   %eax,%esp
add    %al,(%eax)
push   %esp
popf
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
js     809a5f2 <_IO_stdin_used+0x1412e>
add    %al,(%eax)
jo     809a5ff <_IO_stdin_used+0x1413b>
(bad)
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x94,%al
add    %al,(%eax)
or     %bl,0xdafffe(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lock xchg %eax,%esp
add    %al,(%eax)
test   $0x9e,%al
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
test   %al,(%eax)
add    %al,(%eax)
or     %dl,-0x61400000(%ebp)
(bad)
incl   0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jge    809a736 <_IO_stdin_used+0x14272>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
nop
xchg   %eax,%ebp
add    %al,(%eax)
enter  $0xfea2,$0xff
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %ch,-0x1fffff6b(%eax)
mov    %al,0x20ffffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
hlt
xchg   %eax,%ebp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
movsb  %ds:(%esi),%es:(%edi)
(bad)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %dh,(%esi,%edx,4)
add    %al,(%eax)
xor    $0xa5,%al
(bad)
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
jl     809a7f8 <_IO_stdin_used+0x14334>
add    %al,(%eax)
mov    %fs,0xd4fffe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x22c0e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
test   %al,(%eax)
add    %al,(%eax)
mov    $0x2c000096,%esp
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
call   *0xe(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
mov    $0x46140e0a,%ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
call   1c17b310 <_end+0x140dcdac>
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
xchg   %eax,%edi
add    %al,(%eax)
inc    %esp
mov    $0xfe,%ah
incl   0x0(%ebx)
inc    %ebx
push   %cs
xor    %al,(%edx)
jg     809a949 <_IO_stdin_used+0x14485>
add    $0x14,%al
add    %al,(%eax)
add    %bl,0x0(%edi,%edx,4)
add    %bh,0x43fffe(%esp,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
je     809a8f1 <_IO_stdin_used+0x1442d>
add    %al,(%eax)
hlt
mov    $0xfe,%ah
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
xchg   %eax,%edi
add    %al,(%eax)
cmp    $0xb6,%al
(bad)
inc    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0x41100e0a(%ebp),%al
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
in     $0x97,%al
add    %al,(%eax)
aam    $0xb7
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
push   %eax
cwtl
add    %al,(%eax)
cwtl
mov    $0x157fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     809aa5f <_IO_stdin_used+0x1459b>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    809aa96 <_IO_stdin_used+0x145d2>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,-0x46740000(%eax,%ebx,4)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,%al
cwtl
add    %al,(%eax)
sarb   $0x0,0x2fffe(%ecx)
loopne 809beba <_IO_stdin_used+0x159f6>
add    $0x8,%al
rol    $0x4,%al
.byte 0x8
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
loopne 809bf12 <_IO_stdin_used+0x15a4e>
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sbb    $0x1,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
sbb    %ah,0xd0804(%ebx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %cl,%fs:(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
clc
mov    $0x1b0809,%esi
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
mov    $0x1c0809,%esi
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
enter  $0x490,$0x8
push   %es
add    %al,(%eax)
add    %bl,0xa080482(%eax)
add    %al,(%eax)
add    %dh,(%eax)
or     %eax,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
rorb   $0x8,(%ecx)
add    (%eax),%al
add    %al,(%eax)
xor    %al,(%esi)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ch,%al
pushf
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0x9c,%al
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x40(%edi)
fwait
add    $0x8,%al
(bad)
(bad)
ljmp   *0x2(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x8(%edi)
cltd
add    $0x8,%al
add    %al,(%eax)
add    $0xbf,%al
or     %ecx,(%eax)
push   %esi
mov    %eax,0xa3660804
add    $0x8,%al
jbe    809bfb9 <_IO_stdin_used+0x15af5>
add    $0x8,%al
xchg   %ah,-0x5c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    %eax,0xa3b60804
add    $0x8,%al
(bad)
mov    %eax,0xa3d60804
add    $0x8,%al
out    %al,$0xa3
add    $0x8,%al
mulb   -0x5bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
data16
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
jbe    809bffa <_IO_stdin_used+0x15b36>
add    $0x8,%al
xchg   %ah,0x4a49608(%esp,%eax,1)
or     %ah,-0x49f7fb5c(%esi)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa4
add    $0x8,%al
mulb   0x4a50608(%esp,%eax,1)
or     %dl,(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsw  %ds:(%esi),%es:(%edi)
add    $0x8,%al
jbe    809c03b <_IO_stdin_used+0x15b77>
add    $0x8,%al
xchg   %ah,-0x5a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa5,%dh
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa5
add    $0x8,%al
mulb   -0x59f9f7fc(%ebp)
add    $0x8,%al
push   %ss
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%es:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ss:(%esi)
add    $0x8,%al
inc    %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
data16
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
jbe    809c07c <_IO_stdin_used+0x15bb8>
add    $0x8,%al
xchg   %ah,-0x5969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xa6,%dh
add    $0x8,%al
(bad)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
(bad)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
out    %al,$0xa6
add    $0x8,%al
mulb   -0x58f9f7fc(%esi)
add    $0x8,%al
push   %ss
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsl  %es:(%edi),%es:(%esi)
add    $0x8,%al
cmpsl  %es:(%edi),%ss:(%esi)
add    $0x8,%al
inc    %esi
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %esi
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsw  %es:(%edi),%ds:(%esi)
add    $0x8,%al
jbe    809c0bd <_IO_stdin_used+0x15bf9>
add    $0x8,%al
xchg   %ah,-0x5869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xa7,%dh
add    $0x8,%al
(bad)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
(bad)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
out    %al,$0xa7
add    $0x8,%al
mulb   -0x57f9f7fc(%edi)
add    $0x8,%al
push   %ss
test   $0x4,%al
or     %ah,(%esi)
test   $0x4,%al
or     %dh,(%esi)
test   $0x4,%al
or     %al,-0x58(%esi)
add    $0x8,%al
push   %esi
test   $0x4,%al
or     %ah,-0x58(%esi)
add    $0x8,%al
jbe    809c0fe <_IO_stdin_used+0x15c3a>
add    $0x8,%al
xchg   %ch,-0x5769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
test   $0x4,%al
or     %dh,-0x39f7fb58(%esi)
test   $0x4,%al
or     %dl,%dh
test   $0x4,%al
or     %ah,%dh
test   $0x4,%al
or     %dh,%dh
test   $0x4,%al
or     %al,(%esi)
test   $0xa9160804,%eax
add    $0x8,%al
es
test   $0xa9360804,%eax
add    $0x8,%al
inc    %esi
test   $0xa9560804,%eax
add    $0x8,%al
test   $0x804,%ax
jbe    809c13f <_IO_stdin_used+0x15c7b>
add    $0x8,%al
xchg   %ch,-0x5669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
test   $0xa9b60804,%eax
add    $0x8,%al
(bad)
test   $0xa9d60804,%eax
add    $0x8,%al
out    %al,$0xa9
add    $0x8,%al
imulb  -0x55f9f7fc(%ecx)
add    $0x8,%al
push   %ss
stos   %al,%es:(%edi)
add    $0x8,%al
es
stos   %al,%es:(%edi)
add    $0x8,%al
ss
stos   %al,%es:(%edi)
add    $0x8,%al
inc    %esi
stos   %al,%es:(%edi)
add    $0x8,%al
push   %esi
stos   %al,%es:(%edi)
add    $0x8,%al
data16
stos   %al,%es:(%edi)
add    $0x8,%al
jbe    809c180 <_IO_stdin_used+0x15cbc>
add    $0x8,%al
xchg   %ch,-0x5569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
stos   %al,%es:(%edi)
add    $0x8,%al
mov    $0xaa,%dh
add    $0x8,%al
(bad)
stos   %al,%es:(%edi)
add    $0x8,%al
(bad)
stos   %al,%es:(%edi)
add    $0x8,%al
out    %al,$0xaa
add    $0x8,%al
imulb  -0x54f9f7fc(%edx)
add    $0x8,%al
push   %ss
stos   %eax,%es:(%edi)
add    $0x8,%al
es
stos   %eax,%es:(%edi)
add    $0x8,%al
ss
stos   %eax,%es:(%edi)
add    $0x8,%al
inc    %esi
stos   %eax,%es:(%edi)
add    $0x8,%al
push   %esi
stos   %eax,%es:(%edi)
add    $0x8,%al
stos   %ax,%es:(%edi)
add    $0x8,%al
jbe    809c1c1 <_IO_stdin_used+0x15cfd>
add    $0x8,%al
xchg   %ch,-0x5469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
stos   %eax,%es:(%edi)
add    $0x8,%al
mov    $0xab,%dh
add    $0x8,%al
(bad)
stos   %eax,%es:(%edi)
add    $0x8,%al
(bad)
stos   %eax,%es:(%edi)
add    $0x8,%al
out    %al,$0xab
add    $0x8,%al
imulb  -0x53f9f7fc(%ebx)
add    $0x8,%al
push   %ss
lods   %ds:(%esi),%al
add    $0x8,%al
lods   %es:(%esi),%al
add    $0x8,%al
lods   %ss:(%esi),%al
add    $0x8,%al
inc    %esi
lods   %ds:(%esi),%al
add    $0x8,%al
push   %esi
lods   %ds:(%esi),%al
add    $0x8,%al
data16
lods   %ds:(%esi),%al
add    $0x8,%al
jbe    809c202 <_IO_stdin_used+0x15d3e>
add    $0x8,%al
xchg   %ch,0x4ac9608(%esp,%eax,1)
or     %ah,-0x49f7fb54(%esi)
lods   %ds:(%esi),%al
add    $0x8,%al
(bad)
lods   %ds:(%esi),%al
add    $0x8,%al
(bad)
lods   %ds:(%esi),%al
add    $0x8,%al
out    %al,$0xac
add    $0x8,%al
imulb  0x4ad0608(%esp,%eax,1)
or     %dl,(%esi)
lods   %ds:(%esi),%eax
add    $0x8,%al
lods   %es:(%esi),%eax
add    $0x8,%al
lods   %ss:(%esi),%eax
add    $0x8,%al
inc    %esi
lods   %ds:(%esi),%eax
add    $0x8,%al
push   %esi
lods   %ds:(%esi),%eax
add    $0x8,%al
lods   %ds:(%esi),%ax
add    $0x8,%al
jbe    809c243 <_IO_stdin_used+0x15d7f>
add    $0x8,%al
xchg   %ch,-0x5269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lods   %ds:(%esi),%eax
add    $0x8,%al
mov    $0xad,%dh
add    $0x8,%al
(bad)
lods   %ds:(%esi),%eax
add    $0x8,%al
(bad)
lods   %ds:(%esi),%eax
add    $0x8,%al
out    %al,$0xad
add    $0x8,%al
imulb  -0x51f9f7fc(%ebp)
add    $0x8,%al
push   %ss
scas   %es:(%edi),%al
add    $0x8,%al
es
scas   %es:(%edi),%al
add    $0x8,%al
ss
scas   %es:(%edi),%al
add    $0x8,%al
inc    %esi
scas   %es:(%edi),%al
add    $0x8,%al
push   %esi
scas   %es:(%edi),%al
add    $0x8,%al
data16
scas   %es:(%edi),%al
add    $0x8,%al
jbe    809c284 <_IO_stdin_used+0x15dc0>
add    $0x8,%al
xchg   %ch,-0x5169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
scas   %es:(%edi),%al
add    $0x8,%al
mov    $0xae,%dh
add    $0x8,%al
(bad)
scas   %es:(%edi),%al
add    $0x8,%al
(bad)
scas   %es:(%edi),%al
add    $0x8,%al
out    %al,$0xae
add    $0x8,%al
imulb  -0x50f9f7fc(%esi)
add    $0x8,%al
push   %ss
scas   %es:(%edi),%eax
add    $0x8,%al
es
scas   %es:(%edi),%eax
add    $0x8,%al
ss
scas   %es:(%edi),%eax
add    $0x8,%al
inc    %esi
scas   %es:(%edi),%eax
add    $0x8,%al
push   %esi
scas   %es:(%edi),%eax
add    $0x8,%al
scas   %es:(%edi),%ax
add    $0x8,%al
jbe    809c2c5 <_IO_stdin_used+0x15e01>
add    $0x8,%al
xchg   %ch,-0x5069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
scas   %es:(%edi),%eax
add    $0x8,%al
add    (%eax),%al
add    %al,(%eax)
in     $0x9a,%al
or     %cl,(%eax)
test   %ah,0x8(%esi)
or     %al,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
fwait
or     %cl,(%eax)
xchg   %esp,0x8(%esi)
or     %al,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
fwait
or     %cl,(%eax)
xchg   %esp,0x8(%esi)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
mov    0x8(%esi),%fs
or     %cl,0x4080866(%edx)
add    %al,(%eax)
add    %cl,-0x75f7f79a(%ebp)
data16
or     %cl,(%eax)
add    $0x96000000,%eax
data16
or     %cl,(%eax)
xchg   %eax,%esp
data16
or     %cl,(%eax)
push   %es
add    %al,(%eax)
add    %ah,(%esi)
(bad)
or     %bl,0x6080866(%ebx)
add    %al,(%eax)
add    %ah,(%esi)
(bad)
or     %ah,0x7080866(%edx)
add    %al,(%eax)
add    %ah,-0x5af7f79a(%edi)
data16
or     %cl,(%eax)
or     %al,(%eax)
add    %al,(%eax)
es
(bad)
or     %ah,0x80866(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %bl,0xffff(%edi,%edi,8)
add    %al,(%eax)
into
xchg   %eax,%esp
or     %cl,(%eax)
fistl  0x8(%eax,%ecx,1)
add    %al,-0x3c(%eax)
or     %ecx,(%eax)
inc    %eax
cmpsb  %es:(%edi),%ds:(%esi)
push   %es
or     %ch,%al
xchg   %eax,%esp
or     %cl,(%eax)
add    %al,%dh
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
fwait
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0xa080895(%edx)
add    %al,(%eax)
add    %dh,%ah
(bad)  (%eax)
or     %dh,0x0(%eax,%eax,1)
add    %cl,0xb0808(%esi,%eiz,4)
add    %al,(%eax)
and    0x8(%esi),%esi
or     %bh,0x0(%eax)
add    %al,(%eax)
scas   %es:(%edi),%eax
xchg   %eax,%ebp
or     %cl,(%eax)
or     (%eax),%eax
add    %al,(%eax)
int    $0x95
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
rcll   0x630808(%ebp)
add    %al,(%eax)
fcoms  0xb0808(%ebp)
add    %al,(%eax)
in     (%dx),%eax
xchg   %eax,%ebp
or     %cl,(%eax)
add    %al,%fs:(%eax)
add    %ch,0xb0808(%esi,%eiz,4)
add    %al,(%eax)
repnz xchg %eax,%ebp
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
cli
xchg   %eax,%ebp
or     %cl,(%eax)
jb     809c4ee <_IO_stdin_used+0x1602a>
add    %al,(%eax)
loopne 809c4a0 <_IO_stdin_used+0x15fdc>
or     %cl,(%eax)
or     (%eax),%eax
add    %al,(%eax)
dec    %ebp
xchg   %eax,%ebp
or     %cl,(%eax)
jne    809c506 <_IO_stdin_used+0x16042>
add    %al,(%eax)
or     %ah,0xb0808(%edi)
add    %al,(%eax)
add    $0x96,%al
or     %cl,(%eax)
inc    %ecx
add    %al,(%eax)
add    %bh,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
or     %cl,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    %edx,0x808(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
in     (%dx),%al
ja     809c553 <_IO_stdin_used+0x1608f>
or     %cl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,-0x59(%eax)
or     %cl,(%eax)
or     (%eax),%eax
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
or     %cl,(%eax)
aam    $0x0
add    %al,(%eax)
test   %ah,0xb0808(%edi)
add    %al,(%eax)
or     $0x14080896,%eax
add    %al,(%eax)
add    %ah,(%edx)
xchg   %eax,%esi
or     %cl,(%eax)
push   %ebx
add    %al,(%eax)
add    %ch,0x150808(%edi,%eiz,4)
add    %al,(%eax)
sub    %edx,0xd10808(%esi)
add    %al,(%eax)
cmp    %dl,0x808(%esi)
add    %al,(%eax)
int3
cmpsl  %es:(%edi),%ds:(%esi)
or     %cl,(%eax)
adc    $0x4d000000,%eax
xchg   %eax,%esi
or     %cl,(%eax)
inc    %edi
add    %al,(%eax)
add    %cl,(%eax)
test   $0x8,%al
or     %dl,0x46000000
xchg   %eax,%esi
or     %cl,(%eax)
add    %al,(%bx,%si)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0xa8,%al
or     %cl,(%eax)
adc    $0x59000000,%eax
xchg   %eax,%esi
or     %cl,(%eax)
pushf
add    %al,(%eax)
add    %bl,-0x6a(%edi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pusha
test   $0x8,%al
or     %dl,0x66000000
xchg   %eax,%esi
or     %cl,(%eax)
cwtl
add    %al,(%eax)
add    %dl,0x150808(%eax,%ebp,4)
add    %al,(%eax)
jns    809c5b8 <_IO_stdin_used+0x160f4>
or     %cl,(%eax)
mov    $0x5f000000,%eax
xchg   %eax,%esi
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
les    0x150808(%eax),%ebp
add    %al,(%eax)
fwait
xchg   %eax,%esi
or     %cl,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x150808(%esi,%edx,4)
add    %al,(%eax)
cwtl
xchg   %eax,%esi
or     %cl,(%eax)
mov    $0x0,%al
add    %al,(%eax)
mov    0x15080896,%al
add    %al,(%eax)
add    %bh,-0x59f7f76a(%eax)
add    %al,(%eax)
add    %bl,%ah
test   $0x150808,%eax
add    %al,(%eax)
mov    $0x84080896,%ebx
add    %al,(%eax)
add    %bl,(%edx,%ebp,4)
or     %cl,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %cl,%al
xchg   %eax,%esi
or     %cl,(%eax)
push   %ds
add    %al,(%eax)
add    %bl,%bl
xchg   %eax,%esi
or     %cl,(%eax)
push   %edi
add    %al,(%eax)
add    %ah,-0x56(%eax)
or     %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %ah,%dl
xchg   %eax,%esi
or     %cl,(%eax)
movb   $0x0,(%eax)
add    %dl,0x1f0808aa(%eax)
add    %al,(%eax)
add    %ch,%bh
xchg   %eax,%esi
or     %cl,(%eax)
imul   $0x0,(%eax),%eax
add    %al,%al
stos   %al,%es:(%edi)
or     %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %bh,%dh
xchg   %eax,%esi
or     %cl,(%eax)
rolb   (%eax)
add    %al,(%eax)
add    $0xab,%al
or     %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %cl,0x9b080897
add    %al,(%eax)
add    %cl,0x8(%ebx,%ebp,4)
or     %bl,(%edi)
add    %al,(%eax)
add    %bl,(%esi)
xchg   %eax,%edi
or     %cl,(%eax)
mov    $0x0,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x1f0808(%ebx,%ebp,4)
add    %al,(%eax)
sub    %dl,0x550808(%edi)
add    %al,(%eax)
shrb   $0x0,0x1f0808(%ebx)
add    %dh,0xc5080897
add    %al,(%eax)
add    %dh,%al
stos   %eax,%es:(%edi)
or     %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %al,-0x69(%esi)
or     %cl,(%eax)
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %ah,(%eax)
lods   %ds:(%esi),%al
or     %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %cl,-0x69(%ecx)
or     %cl,(%eax)
mov    $0x0,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x8(%esp,%ebp,4)
or     %bl,(%edi)
add    %al,(%eax)
add    %dl,-0x69(%edi)
or     %cl,(%eax)
lcall  $0x0,$0x0
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x1f0808(%esp,%ebp,4)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
xchg   %eax,%edi
or     %cl,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
test   %dl,0x4f0808(%edi)
add    %al,(%eax)
shrb   0x2908(%eax,%ecx,1)
add    %cl,-0x29f7f769(%esi)
add    %al,(%eax)
add    %bh,-0x6f(%ebx)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
hlt
lods   %ds:(%esi),%al
or     %cl,(%eax)
sub    %eax,(%eax)
add    %al,(%eax)
mov    $0x97080897,%edx
add    %al,(%eax)
add    %bl,0x29080897(%ecx)
add    %al,(%eax)
add    %dh,-0x56f7f769(%edi)
add    %al,(%eax)
add    %bl,0x290808(,%ebp,4)
add    %al,(%eax)
iret
xchg   %eax,%edi
or     %cl,(%eax)
xor    (%eax),%al
add    %al,(%eax)
das
cwtl
or     %cl,(%eax)
mov    $0x6d000000,%ebp
pushf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %esp
lods   %ds:(%esi),%eax
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
in     (%dx),%al
xchg   %eax,%edi
or     %cl,(%eax)
xchg   %eax,%ebp
add    %al,(%eax)
add    %ch,-0x64(%ebp)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     809c81f <_IO_stdin_used+0x1635b>
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
xchg   %eax,%ebx
or     %cl,(%eax)
mov    0xf2000000,%eax
xchg   %eax,%edi
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
lods   %ds:(%esi),%eax
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
call   *0xa00808(%edi)
add    %al,(%eax)
add    $0x98,%al
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
shrb   $0x0,0x330808(%ebp)
add    %ch,-0x7df7f76d(%edi)
add    %al,(%eax)
add    %cl,(%eax,%ebx,4)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
lock lods %ds:(%esi),%eax
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
adc    0x6d0808(%eax),%ebx
add    %al,(%eax)
mov    0x330808ae,%al
add    %al,(%eax)
add    %bl,(%eax,%ebx,4)
or     %cl,(%eax)
lret   $0x0
add    %al,%ah
scas   %es:(%edi),%al
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
sbb    %ebx,0xae0808(%eax)
add    %al,(%eax)
and    $0xaf,%al
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
daa
cwtl
or     %cl,(%eax)
mov    $0x0,%bh
add    %al,(%eax)
pop    %esp
scas   %es:(%edi),%eax
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
xor    $0x70080898,%eax
add    %al,(%eax)
add    %al,0x330808(%edi,%ebp,4)
add    %al,(%eax)
dec    %ebp
cwtl
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
dec    %edx
cwtl
or     %cl,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
add    %cl,%al
scas   %es:(%edi),%eax
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
pop    %esi
cwtl
or     %cl,(%eax)
jae    809c96e <_IO_stdin_used+0x164aa>
add    %al,(%eax)
sub    $0xb0,%al
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
pop    %ecx
xchg   %eax,%esp
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
mov    $0x93,%ch
or     %cl,(%eax)
rolb   $0x0,(%eax)
add    %ch,-0x68(%ebp)
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
xchg   %ebx,0x870808(%eax)
add    %al,(%eax)
js     809c972 <_IO_stdin_used+0x164ae>
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
test   %bl,0xa70808(%eax)
add    %al,(%eax)
loopne 809c98a <_IO_stdin_used+0x164c6>
or     %cl,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
sbb    %dh,0x370808(%ecx)
add    %al,(%eax)
mov    %al,0xde080898
add    %al,(%eax)
add    %al,-0x4f(%eax)
or     %cl,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
lahf
cwtl
or     %cl,(%eax)
mov    $0x0,%ch
add    %al,(%eax)
fs
mov    $0x8,%cl
or     %bh,(%eax)
add    %al,(%eax)
add    %ch,-0x1ff7f768(%ecx)
add    %al,(%eax)
add    %bh,0x80898(%eax)
add    %al,(%eax)
add    %cl,0x380808b1(%eax)
add    %al,(%eax)
add    %bh,-0x20f7f768(%ebp)
add    %al,(%eax)
add    %bh,0x80898(%eax)
add    %al,(%eax)
add    %dh,0x380808(%ecx,%esi,4)
add    %al,(%eax)
iret
cwtl
or     %cl,(%eax)
lret
add    %al,(%eax)
add    %ah,%al
mov    $0x8,%cl
or     %bh,(%eax)
add    %al,(%eax)
add    %cl,%ah
cwtl
or     %cl,(%eax)
mov    $0x0,%cl
add    %al,(%eax)
add    $0xb2,%al
or     %cl,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
clc
cwtl
or     %cl,(%eax)
addb   $0x0,(%eax)
add    %dl,%bh
cwtl
or     %cl,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cmc
cwtl
or     %cl,(%eax)
mov    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
mov    $0x8,%dl
or     %bh,(%eax)
add    %al,(%eax)
add    %cl,-0x4e(%eax)
or     %cl,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %ds
jbe    809cadb <_IO_stdin_used+0x16617>
or     %ah,0x0(%esi)
add    %al,(%eax)
adcl   $0x0,0x808(%eax)
add    %ch,-0x4e(%eax)
or     %cl,(%eax)
cmp    $0xfd000000,%eax
cwtl
or     %cl,(%eax)
xchg   %eax,%ebx
add    %al,(%eax)
add    %cl,0x3d0808(%edx,%esi,4)
add    %al,(%eax)
or     %ebx,0xc80808(%ecx)
add    %al,(%eax)
jnp    809ca9b <_IO_stdin_used+0x165d7>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x3d0808b2,%esp
add    %al,(%eax)
add    %dl,0xc9080899
add    %al,(%eax)
add    %bh,-0x6f(%ebx)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
in     $0xb2,%al
or     %cl,(%eax)
cmp    $0x0,%eax
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%eax
add    %al,(%eax)
add    %dh,0x0
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %dh,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %bh,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x21000000
cltd
or     %cl,(%eax)
dec    %ebp
add    %al,(%eax)
add    %cl,(%eax)
mov    $0x8,%bl
or     %bh,0x2e000000
cltd
or     %cl,(%eax)
dec    %esp
add    %al,(%eax)
add    %bl,-0x6a(%edi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0xb3,%al
or     %cl,(%eax)
cmp    $0x3a000000,%eax
cltd
or     %cl,(%eax)
inc    %esi
add    %al,(%eax)
add    %ch,-0x64(%ebp)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
fs
mov    $0x8,%bl
or     %bh,0x46000000
cltd
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x58000000,%eax
cltd
or     %cl,(%eax)
fiaddl (%eax)
add    %al,(%eax)
out    %eax,(%dx)
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
nop
mov    $0x8,%bl
or     %bh,0x0
add    %al,(%eax)
add    %ah,-0x67(%ebx)
or     %cl,(%eax)
inc    %esi
add    %al,(%eax)
add    %dh,0x8(%ecx,%ebx,4)
or     %ah,0x0(%edx)
add    %al,(%eax)
test   %bl,0x808(%ecx)
add    %al,(%eax)
mov    0x470808(%ecx),%ebx
add    %al,(%eax)
test   $0xc3080899,%eax
add    %al,(%eax)
add    %bl,-0x6a(%edi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x470808b3,%eax
add    %al,(%eax)
add    %dh,0x69080899(%ebp)
add    %al,(%eax)
add    %ah,%ah
mov    $0x8,%bl
or     %al,0x0(%edi)
add    %al,(%eax)
ret    $0x899
or     %al,0x0(%edx)
add    %al,(%eax)
adc    %dh,0x4708(%eax,%ecx,1)
add    %dl,%ah
cltd
or     %cl,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,%cl
jle    809cd33 <_IO_stdin_used+0x1686f>
or     %cl,0x0(%eax)
add    %al,(%eax)
scas   %es:(%edi),%al
nop
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    %dh,0x5108(%eax,%ecx,1)
add    %bl,0x8(%esp,%esi,4)
or     %dl,0x0(%edx)
add    %al,(%eax)
out    %al,(%dx)
cltd
or     %cl,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
repz cltd
or     %cl,(%eax)
push   %ebx
add    %al,(%eax)
add    %al,0x8089a
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,(%esi)
lcall  $0x0,$0x530808
sub    $0x9a,%al
or     %cl,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xor    0x530808(%edx),%bl
add    %al,(%eax)
dec    %eax
lcall  $0x0,$0x808
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
jl     809cd66 <_IO_stdin_used+0x168a2>
or     %cl,(%eax)
push   %ebx
add    %al,(%eax)
add    %dl,-0x66(%eax)
or     %cl,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    0x530808b4,%al
add    %al,(%eax)
add    %dl,-0x66(%esi)
or     %cl,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %esi
lcall  $0x0,$0x530808
push   $0xffffff9a
or     %cl,(%eax)
mov    $0x0,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x66(%esi)
or     %cl,(%eax)
pop    %eax
add    %al,(%eax)
add    %cl,0x8089a(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bl,-0x66(%eax)
or     %cl,(%eax)
mov    $0x0,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x5808089a(%esi)
add    %al,(%eax)
add    %bh,%cl
xchg   %eax,%ebx
or     %cl,(%eax)
mov    $0xc0000000,%esi
mov    $0x8,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x5808089a(%ebp)
add    %al,(%eax)
add    %ch,0x56080892(%ebx)
add    %al,(%eax)
add    %al,%dl
lcall  $0x0,$0x808
in     (%dx),%al
mov    $0x8,%ah
or     %bl,0x0(%eax)
add    %al,(%eax)
(bad)
lcall  $0x0,$0x5a0808
fistp  0x610808(%edx)
add    %al,(%eax)
pop    %eax
mov    $0x8,%ch
or     %bl,0x0(%ebx)
add    %al,(%eax)
fcompl 0xa50808(%edx)
add    %al,(%eax)
nop
mov    $0x8,%ch
or     %bl,0x0(%ebx)
add    %al,(%eax)
in     (%dx),%eax
lcall  $0x0,$0x490808
add    0x808(%ebx),%bl
add    %al,(%eax)
(bad)
mov    $0x8,%ch
or     %bl,0x0(%ebx)
add    %al,(%eax)
mov    0x8(%esi),%fs
or     %ch,0x0(%edx)
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %dl,(%eax)
fwait
or     %cl,(%eax)
jp     809cede <_IO_stdin_used+0x16a1a>
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %al,(%edi)
fwait
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %cl,(%esi)
fwait
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %ah,%ah
lcall  $0x0,$0x5a0808
pop    %ebx
add    %al,(%eax)
add    %dl,0x8089b
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %dl,-0x62f7f79a(%esi)
add    %al,(%eax)
add    %bl,0x0(%ebx)
add    %al,(%eax)
popf
data16
or     %cl,(%eax)
sahf
add    %al,(%eax)
add    %bl,0x0(%ebx)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
data16
or     %cl,(%eax)
lahf
add    %al,(%eax)
add    %bl,0x0(%ebx)
add    %al,(%eax)
es
(bad)
or     %cl,0x0(%edx)
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %ah,(%eax)
fwait
or     %cl,(%eax)
add    %al,%fs:(%eax)
add    %dh,(%esi)
fwait
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
out    %eax,(%dx)
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
clc
mov    $0x8,%ch
or     %ah,0x0(%ebp)
add    %al,(%eax)
cmc
int3
or     %cl,(%eax)
inc    %ebx
add    %al,(%eax)
add    %dl,-0x65(%ebx)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
aas
fwait
or     %cl,(%eax)
add    %al,%gs:(%eax)
add    %dl,-0x65(%edi)
or     %cl,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
mov    $0x8,%dh
or     %ah,0x0(%ebp)
add    %al,(%eax)
fwait
fwait
or     %cl,(%eax)
mov    $0x0,%dh
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x8,%dh
or     %ah,0x0(%ebp)
add    %al,(%eax)
bound  %ebx,0xaa0808(%ebx)
add    %al,(%eax)
cwtl
mov    $0x8,%dh
or     %ah,0x0(%ebp)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
fwait
or     %cl,(%eax)
fadds  (%eax)
add    %al,(%eax)
int3
mov    $0x8,%dh
or     %ah,0x0(%ebp)
add    %al,(%eax)
push   $0xffffff9b
or     %cl,(%eax)
mov    $0x0,%dl
add    %al,(%eax)
clc
mov    $0x8,%dh
or     %ah,0x0(%ebp)
add    %al,(%eax)
les    0x8e0808(%eax),%ebx
add    %al,(%eax)
jne    809d015 <_IO_stdin_used+0x16b51>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %dh,0x650808(%edi)
add    %al,(%eax)
jge    809d025 <_IO_stdin_used+0x16b61>
or     %cl,(%eax)
pop    %eax
add    %al,(%eax)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
mov    $0x8,%bh
or     %ah,0x0(%ebp)
add    %al,(%eax)
mov    0x8b0808(%ebx),%bl
add    %al,(%eax)
fs
mov    $0x8,%bh
or     %ah,0x0(%ebp)
add    %al,(%eax)
cltd
fwait
or     %cl,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
mov    $0x650808b7,%esp
add    %al,(%eax)
add    %ch,-0x72f7f765(%esi)
add    %al,(%eax)
add    %bh,%ah
mov    $0x8,%bh
or     %ah,0x0(%ebp)
add    %al,(%eax)
rcrl   $0x0,0x8f0808(%ebx)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %bh,0x650808(%eax)
add    %al,(%eax)
int    $0x9b
or     %cl,(%eax)
nop
add    %al,(%eax)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     809d0ca <_IO_stdin_used+0x16c06>
or     %cl,(%eax)
add    %al,%gs:(%eax)
add    %bl,%bh
fwait
or     %cl,(%eax)
xchg   %eax,%ecx
add    %al,(%eax)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
test   $0xb8,%al
or     %cl,(%eax)
add    %al,%gs:(%eax)
add    %ch,%bh
fwait
or     %cl,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
add    %cl,%ah
mov    $0x650808,%eax
add    %al,(%eax)
sti
fwait
or     %cl,(%eax)
mov    (%eax),%al
add    %al,(%eax)
or     0x6508(%eax,%ecx,1),%ebx
add    %ch,(%ecx)
pushf
or     %cl,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,%al
mov    $0x650808,%eax
add    %al,(%eax)
ss
pushf
or     %cl,(%eax)
mov    $0x0,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
mov    $0x650808,%ecx
add    %al,(%eax)
sub    $0x9c,%al
or     %cl,(%eax)
les    (%eax),%eax
add    %al,(%eax)
pop    %eax
mov    $0x650808,%ecx
add    %al,(%eax)
inc    %esi
pushf
or     %cl,(%eax)
push   %eax
add    %al,(%eax)
add    %bh,0x8(%ecx,%edi,4)
or     %ah,0x0(%ebp)
add    %al,(%eax)
pop    %edx
pushf
or     %cl,(%eax)
push   $0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x650808b9(%eax)
add    %al,(%eax)
add    %dl,-0x64(%ebp)
or     %cl,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
in     $0xb9,%al
or     %cl,(%eax)
add    %al,%gs:(%eax)
add    %cl,-0x6c(%ebx)
or     %cl,(%eax)
dec    %ebx
add    %al,(%eax)
add    %ah,-0x64(%esi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %bh,0x650808(%edx)
add    %al,(%eax)
fcmove %st(4),%st
or     %cl,(%eax)
dec    %esi
add    %al,(%eax)
add    %dh,%dl
xchg   %eax,%edi
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
mov    $0x650808,%edx
add    %al,(%eax)
es
xchg   %eax,%ebx
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %bl,(%eax)
xchg   %eax,%ebx
or     %cl,(%eax)
mov    %al,0x72000000
pushf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
test   %bh,0x650808(%edx)
add    %al,(%eax)
mov    0x83080894,%eax
add    %al,(%eax)
add    %ah,%cl
fisttpl (%eax)
or     %al,(%ecx)
add    %al,(%eax)
add    %dh,0x650808(%edx,%edi,4)
add    %al,(%eax)
ja     809d206 <_IO_stdin_used+0x16d42>
or     %cl,(%eax)
roll   %cl,(%eax)
add    %al,(%eax)
jle    809d20e <_IO_stdin_used+0x16d4a>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
in     $0xba,%al
or     %cl,(%eax)
add    %al,%gs:(%eax)
add    %al,0x6e08089c(%ebp)
add    %al,(%eax)
add    %ah,-0x2df7f764(%eax)
add    %al,(%eax)
add    %bl,-0x6a(%edi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
mov    $0x6f0808,%ebx
add    %al,(%eax)
mov    $0x9c,%cl
or     %cl,(%eax)
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,0x8089c(%ebx)
add    %al,(%eax)
add    %bl,0x6f0808bb(%eax)
add    %al,(%eax)
add    %al,%dh
pushf
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %cl,%ah
mov    $0x780808,%ebx
add    %al,(%eax)
out    %eax,$0x9c
or     %cl,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
add    %cl,%ah
pushf
or     %cl,(%eax)
jns    809d30e <_IO_stdin_used+0x16e4a>
add    %al,(%eax)
fistpl 0x8108(%eax,%ecx,1)
add    %dl,(%esp,%edi,4)
or     %cl,(%eax)
jns    809d326 <_IO_stdin_used+0x16e62>
add    %al,(%eax)
fcomps 0xa408(%eax,%ecx,1)
add    %dh,(%esp,%edi,4)
or     %cl,(%eax)
jns    809d33e <_IO_stdin_used+0x16e7a>
add    %al,(%eax)
in     $0x9c,%al
or     %cl,(%eax)
test   $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x790808,%esp
add    %al,(%eax)
negb   0xdd08(%eax,%ecx,1)
add    %dl,0x790808bc(%eax)
add    %al,(%eax)
add    %dh,%bl
pushf
or     %cl,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
add    %bl,0x790808(%ebp)
add    %al,(%eax)
sbb    %ebx,0xb30808(%ebp)
add    %al,(%eax)
xor    0x790808(%ebp),%bl
add    %al,(%eax)
sbb    $0x9d,%al
or     %cl,(%eax)
faddl  (%eax)
add    %al,(%eax)
mov    $0x790808bc,%eax
add    %al,(%eax)
add    %cl,-0x63(%ebp)
or     %cl,(%eax)
(bad)
add    %al,(%eax)
add    %ah,-0x63(%ecx)
or     %cl,(%eax)
jbe    809d3d6 <_IO_stdin_used+0x16f12>
add    %al,(%eax)
in     $0xbc,%al
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %dh,(%ecx)
int3
or     %cl,(%eax)
fildl  (%eax)
add    %al,(%eax)
imul   $0x9d710000,0x808(%ebp),%ebx
9d
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %al,-0x7af7f763(%ecx)
add    %al,(%eax)
add    %bl,-0x6a(%edi)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0xbd,%al
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %cl,0x860808(%ebp,%ebx,4)
add    %al,(%eax)
sahf
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
mov    $0x830808,%ebp
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
popf
or     %cl,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,-0x43(%eax)
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %dh,-0x2af7f763(%ecx)
add    %al,(%eax)
add    %bh,0x108089d(%eax)
add    %al,(%eax)
add    %dl,0x830808(%ebp,%edi,4)
add    %al,(%eax)
mov    $0xd908089d,%edi
add    %al,(%eax)
add    %bh,0x8(%esi,%edi,4)
or     %al,-0x3d000000(%ebx)
popf
or     %cl,(%eax)
xchg   %eax,%esp
add    %al,(%eax)
add    %ah,0x830808(%esi,%edi,4)
add    %al,(%eax)
int    $0x9d
or     %cl,(%eax)
cltd
add    %al,(%eax)
add    %ch,%bh
popf
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
fcomps 0x830808(%ebp)
add    %al,(%eax)
hlt
popf
or     %cl,(%eax)
push   %edx
add    %al,(%eax)
add    %cl,%ah
mov    $0x830808,%esi
add    %al,(%eax)
add    %ebx,0x770808(%esi)
add    %al,(%eax)
add    %bh,0x830808(%edi)
add    %al,(%eax)
or     $0x8089e,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addl   $0x0,(%eax)
add    %bl,(%edx)
sahf
or     %cl,(%eax)
int3
add    %al,(%eax)
add    %ch,(%eax)
sahf
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %bh,(%edx)
sahf
or     %cl,(%eax)
into
add    %al,(%eax)
add    %ch,(%eax)
mov    $0x830808,%edi
add    %al,(%eax)
push   %ebp
sahf
or     %cl,(%eax)
int    $0x0
add    %al,(%eax)
push   %esp
mov    $0x830808,%edi
add    %al,(%eax)
addr16 sahf
or     %cl,(%eax)
iret
add    %al,(%eax)
add    %ch,-0x7cf7f741(%eax)
add    %al,(%eax)
add    %bh,-0x62(%esi)
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addl   $0x0,(%eax)
add    %dl,-0x3df7f762(%eax)
add    %al,(%eax)
add    %bl,0x8089e(%esi)
add    %al,(%eax)
add    %bl,%al
mov    $0x830808,%edi
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
sahf
or     %cl,(%eax)
roll   $0x0,(%eax)
add    %bh,-0x64(%esi)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0xc0,%al
or     %cl,(%eax)
addl   $0x0,(%eax)
add    %ah,0xac0808(%esi,%ebx,4)
add    %al,(%eax)
jle    809d53e <_IO_stdin_used+0x1707a>
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
rorb   $0x8,(%eax)
addl   $0x0,(%eax)
add    %dh,-0x73f7f762(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
rorb   $0x8,(%eax)
lea    (%eax),%eax
add    %al,(%eax)
lret   $0x89e
or     %dl,-0x27000000(%esi)
sahf
or     %cl,(%eax)
movl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0xff0808c0,%esp
(bad)
(bad)
incl   (%eax)
loop   809d5c8 <_IO_stdin_used+0x17104>
or     %cl,(%eax)
hlt
sahf
or     %cl,(%eax)
pop    %es
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
iret
cmpsl  %es:(%edi),%ds:(%esi)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
iret
cmpsl  %es:(%edi),%ds:(%esi)
incl   (%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %ch,(%edx,%edx,4)
or     %cl,(%eax)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,0x5e0808d3(%edx)
aam    $0x8
or     %dl,0x74(%edx)
or     %cl,(%eax)
pushf
aam    $0x8
or     %cl,-0x5cf7f72d(%ebx)
rorl   %cl,(%eax)
or     %bh,-0x32f7f72d(%edx)
rorl   %cl,(%eax)
or     %bl,0x22(%esp,%ebx,2)
and    0x7(%ecx),%ah
bound  %ecx,(%eax)
data16
or     $0x6e,%al
or     0xd(%edx),%dh
je     809d799 <argp_program_version+0x16d>
jbe    809d79d <argp_program_version+0x171>
add    %al,(%eax)
mov    0x80743,%al
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bl,0x1000000
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%bh
xchg   %eax,%esp
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,(%eax,%ebx,8)
or     %ecx,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
shl    $0x9,%al
or     %al,(%ecx)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
je     63 <_init-0x804a2b5>
jb     4 <_init-0x804a314>
.byte 0x84
.byte 0x3d
adc    $0x22,%al
