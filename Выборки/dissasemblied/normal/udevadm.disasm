das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%edi)
data16
and    $0x60,%al
fs
mov    $0xec,%ah
pop    %ss
sbb    -0x74(%ebp),%dl
test   $0x42,%al
dec    %edx
inc    %esp
.byte 0x38
mov    $0x1b,%dh
.byte 0xa3
pop    %ss
add    (%eax),%eax
add    %al,(%eax)
roll   (%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
push   %es
in     $0x4d,%eax
add    (%eax),%eax
add    %al,(%eax)
add    %dl,%cl
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %bh,(%eax)
repnz mov (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481b8 <_init-0x22dc>
mov    $0xea0ef18d,%ecx
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
inc    %eax
or     (%eax),%al
add    %ah,(%eax)
xor    %cl,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%edx)
add    %dl,0xa(%ebx)
add    %al,(%eax)
nop
cmp    %cl,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%ebx)
add    %al,0xa(%edi)
add    %al,(%eax)
and    %dh,(%eax)
or     %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    (%eax),%eax
ja     8048251 <_init-0x2243>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%bl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x6
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
or     (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x9(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ecx,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     8048332 <_init-0x2162>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%eax),%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cld
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x8(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%esi,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x1
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x5,$0x0
adc    (%eax),%al
add    %al,(%eax)
int    $0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repnz or %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x9(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x7(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x6(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %cl,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebp
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cwtl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%al
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    804852c <_init-0x1f68>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     80485bd <_init-0x1ed7>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aad    $0x3
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%eax),%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ecx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fwait
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%edi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fs
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x8(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    8048712 <_init-0x1d82>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %es:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x7(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x5,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x8(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x7
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jl     8048882 <_init-0x1c12>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    8048893 <_init-0x1c01>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x8,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    80488ba <_init-0x1bda>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    80488d0 <_init-0x1bc4>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x9(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x8(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     8048932 <_init-0x1b62>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x7,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x9(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  80489b0 <_init-0x1ae4>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x5
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x9(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %es
or     (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%esi,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x9(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x8(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x9
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ds
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x8(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
imul   $0x0,(%esi),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bl
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x9(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
or     %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,0x5(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x8(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebp
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x7
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x7(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x6(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x7,%bh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cwtl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ss
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jg     8048ebe <_init-0x15d6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%esi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     8048ee0 <_init-0x15b4>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jg     8048ef3 <_init-0x15a1>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fwait
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%al
pop    %es
add    %al,(%eax)
and    %dh,(%eax)
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    (%eax),%eax
jmp    c8048f31 <_end+0xbffc56a1>
in     (%dx),%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
js     8048f3a <_init-0x155a>
add    %al,(%eax)
xchg   %eax,%esp
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
call   ac048f4d <_end+0xa3fc56bd>
in     (%dx),%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %bh,(%ebx)
add    $0x30400000,%eax
or     %cl,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    (%eax),%eax
loope  8048f71 <_init-0x1523>
add    %al,(%eax)
inc    %esp
xor    %cl,(%eax)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    (%eax),%eax
add    %ch,0x62(%ecx,%ebp,2)
jae    8048fe3 <_init-0x14b1>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048ff7 <_init-0x149d>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8049022 <_init-0x1472>
popa
jb     8049025 <_init-0x146f>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8049017 <_init-0x147d>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8049038 <_init-0x145c>
gs
jae    8048fc8 <_init-0x14cc>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8049034 <_init-0x1460>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jae    8049049 <_init-0x144b>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x62616c65,0x73(%eax,%eax,1),%esi
gs
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8049066 <_init-0x142e>
outsb  %ds:(%esi),(%dx)
add    %ch,0x73(%ecx)
pop    %edi
jae    804906d <_init-0x1427>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x65746567,0x5f(%ecx,%edi,2),%esi
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     804908b <_init-0x1409>
add    %dh,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
jb     804909c <_init-0x13f8>
ja     804903d <_init-0x1457>
data16
jb     80490a5 <_init-0x13ef>
arpl   %bp,%gs:0x6e(%edi)
add    %ch,0x65(%ebx,%esi,2)
je     80490b0 <_init-0x13e4>
imul   $0x73006e6f,0x63(%ebp,%eiz,2),%ebp
gs
je     80490bb <_init-0x13d9>
jae    80490ba <_init-0x13da>
jb     80490be <_init-0x13d6>
popa
je     80490c1 <_init-0x13d3>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
bound  %ebp,0x69(%ebx,%ebp,2)
fs
jae,pn 80490e0 <_init-0x13b4>
xor    %eax,%cs:(%eax)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     80490ee <_init-0x13a6>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
jbe    80490ea <_init-0x13aa>
insb   (%dx),%es:(%edi)
jne    80490f1 <_init-0x13a3>
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     8049107 <_init-0x138d>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8049103 <_init-0x1391>
jb     8049118 <_init-0x137c>
imul   $0x6200736e,0x6f(%ecx,%ebp,2),%esi
insb   (%dx),%es:(%edi)
imul   $0x5f,0x64(%ecx),%ebp
jo     8049125 <_init-0x136f>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
addr16
gs
je     804911a <_init-0x137a>
jae    8049126 <_init-0x136e>
jp     8049124 <_init-0x1370>
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     8049129 <_init-0x136b>
jo     804913e <_init-0x1356>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     804914a <_init-0x134a>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8049143 <_init-0x1351>
je     804913f <_init-0x1355>
jo     8049143 <_init-0x1351>
jb     8049158 <_init-0x133c>
imul   $0x665f736e,0x6f(%ecx,%ebp,2),%esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 80490f1 <_init-0x13a3>
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     804916b <_init-0x1329>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    804917b <_init-0x1319>
jo     804916d <_init-0x1327>
jb     804916c <_init-0x1328>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
outsl  %fs:(%esi),(%dx)
pop    %edi
jae    804917c <_init-0x1318>
data16
gs
jo     8049191 <_init-0x1303>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     804919d <_init-0x12f7>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
addr16
gs
je     8049192 <_init-0x1302>
jbe    8049196 <_init-0x12fe>
insb   (%dx),%es:(%edi)
jne    804919d <_init-0x12f7>
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     80491b3 <_init-0x12e1>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
addr16
gs
je     80491a8 <_init-0x12ec>
data16
add    %ah,%fs:0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     80491c6 <_init-0x12ce>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
outsb  %ds:(%esi),(%dx)
jne    80491c8 <_init-0x12cc>
outsl  %ds:(%esi),(%dx)
pop    %di
jbe    80491c1 <_init-0x12d3>
insb   (%dx),%es:(%edi)
jne    80491c8 <_init-0x12cc>
jae    8049165 <_init-0x132f>
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
outsl  %fs:(%esi),(%dx)
pop    %edi
data16
jne    80491dd <_init-0x12b7>
insb   (%dx),%es:(%edi)
jo     80491e6 <_init-0x12ae>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x64(%edi)
gs
pop    %edi
jae    80491fb <_init-0x1299>
jb     80491f2 <_init-0x12a2>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
jae    80491f5 <_init-0x129f>
data16
gs
pop    %edi
jae    804920d <_init-0x1287>
jb     8049204 <_init-0x1290>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
jo     8049218 <_init-0x127c>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8049211 <_init-0x1283>
je     804920d <_init-0x1287>
jae    8049225 <_init-0x126f>
jo     8049217 <_init-0x127d>
jb     8049216 <_init-0x127e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 80491c0 <_init-0x12d4>
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
data16
jb     804922e <_init-0x1266>
gs
pop    %edi
jo     804923f <_init-0x1255>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     804924b <_init-0x1249>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
imul   $0x5f72,0x65(%esp,%esi,2),%bp
jae    804925b <_init-0x1239>
jo     804924d <_init-0x1247>
jb     804924c <_init-0x1248>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
pop    %edi
jne    8049265 <_init-0x122f>
popa
add    %ah,%gs:0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
jo     8049270 <_init-0x1224>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8049269 <_init-0x122b>
je     8049265 <_init-0x122f>
fs
gs
jbe    8049273 <_init-0x1221>
arpl   %sp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8049287 <_init-0x120d>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
imul   $0x6c6f6877,0x5f(%ebx),%esi
gs imul $0x62696c00,%fs:%gs:0x6b(%ebx),%esi
62
imul   $0x64,0x6f(%ebp),%ebp
jae,pn 804929f <_init-0x11f5>
xor    %cs:(%eax),%al
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80492a9 <_init-0x11eb>
gs
pop    %edi
addr16
gs
je     80492a2 <_init-0x11f2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80492b4 <_init-0x11e0>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80492c0 <_init-0x11d4>
gs
pop    %edi
jo     80492ca <_init-0x11ca>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
imul   $0x5f747265,0x73(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80492d4 <_init-0x11c0>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
pop    %edi
jb     80492db <_init-0x11b9>
jae    80492e7 <_init-0x11ad>
jne    80492ec <_init-0x11a8>
arpl   %sp,0x73(%ebp)
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jne    80492f3 <_init-0x11a1>
jb     80492ec <_init-0x11a8>
data16
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80492ff <_init-0x1195>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     80492f8 <_init-0x119c>
data16
jb     804930b <_init-0x1189>
insl   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    804931b <_init-0x1179>
gs
pop    %edi
addr16
gs
je     8049314 <_init-0x1180>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x78656e5f,0x74(%ebx),%esi
je     80492c9 <_init-0x11cb>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    804933f <_init-0x1155>
gs
pop    %edi
jne    8049345 <_init-0x114f>
jb     804933e <_init-0x1156>
pop    %di
insb   (%dx),%es:(%edi)
imul   $0x6f6d6b00,0x74(%ebx),%esi
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    8049356 <_init-0x113e>
gs
pop    %edi
jne    804935c <_init-0x1138>
jb     8049355 <_init-0x113f>
data16
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jbe    804935a <_init-0x113a>
insb   (%dx),%es:(%edi)
imul   $0x65725f65,0x74(%ecx,%eiz,2),%esp
jae    8049373 <_init-0x1121>
jne    8049378 <_init-0x111c>
arpl   %sp,0x73(%ebp)
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     8049313 <_init-0x1181>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
jae    804937f <_init-0x1115>
je     804937b <_init-0x1119>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
data16
outsb  %ds:(%esi),(%dx)
add    %ch,0x62(%ecx,%ebp,2)
popa
arpl   %bp,0x73(%esi,%ebp,1)
outsl  %ds:(%esi),(%dx)
xor    %eax,%cs:(%eax)
popa
arpl   %bp,0x61(%edi,%ebx,2)
fs
fs
pop    %edi
jo     804939e <_init-0x10f6>
jb     80493a8 <_init-0x10ec>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
fs
gs
insb   (%dx),%es:(%edi)
gs
je     80493ab <_init-0x10e9>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     80493bd <_init-0x10d7>
jns    804934d <_init-0x1147>
popa
arpl   %bp,0x63(%edi,%ebx,2)
jb     80493b9 <_init-0x10db>
popa
je     80493bc <_init-0x10d8>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     80493ce <_init-0x10c6>
jns    804935e <_init-0x1136>
popa
arpl   %bp,0x73(%edi,%ebx,2)
gs
je     80493c5 <_init-0x10cf>
jno    80493dd <_init-0x10b7>
popa
insb   (%dx),%es:(%edi)
imul   $0x61007265,0x69(%esi),%esp
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     80493d7 <_init-0x10bd>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     80493e4 <_init-0x10b0>
jno    80493fc <_init-0x1098>
popa
insb   (%dx),%es:(%edi)
imul   $0x61007265,0x69(%esi),%esp
arpl   %bp,0x73(%edi,%ebx,2)
gs
je     80493f6 <_init-0x109e>
je     80493fa <_init-0x109a>
addr16 pop %edi
je     8049416 <_init-0x107e>
jo     8049404 <_init-0x1090>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8049407 <_init-0x108d>
outsb  %gs:(%esi),(%dx)
je     804941e <_init-0x1076>
jns    80493ae <_init-0x10e6>
popa
arpl   %bp,0x63(%edi,%ebx,2)
popa
insb   (%dx),%es:(%edi)
arpl   %bx,0x6d(%edi)
popa
jae    8049426 <_init-0x106e>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8049423 <_init-0x1071>
jo     804942b <_init-0x1069>
jb     8049435 <_init-0x105f>
jae    804942f <_init-0x1065>
je     80493cc <_init-0x10c8>
popa
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     8049433 <_init-0x1061>
jo     804943b <_init-0x1059>
jb     8049445 <_init-0x104f>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8049440 <_init-0x1054>
je     8049444 <_init-0x1050>
addr16 pop %edi
je     8049460 <_init-0x1034>
jo     804944e <_init-0x1046>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    8049455 <_init-0x103f>
je     8049451 <_init-0x1043>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     8049463 <_init-0x1031>
add    %ch,%gs:0x62(%ecx,%ebp,2)
arpl   %sp,0x6d(%edi)
popa
outsb  %ds:(%esi),(%dx)
popa
addr16
gs
jb     804943b <_init-0x1059>
jae    804947e <_init-0x1016>
xor    %al,%cs:(%eax)
insb   (%dx),%es:(%edi)
imul   $0x732e6869,0x6e(%edx),%esp
outsl  %ds:(%esi),(%dx)
xor    %eax,%cs:(%eax)
insb   (%dx),%es:(%edi)
imul   $0x642d6869,0x6e(%edx),%esp
bound  %esi,0x73(%ebp)
jae,pn 804949b <_init-0xff9>
xor    %eax,%cs:(%eax)
insb   (%dx),%es:(%edi)
imul   $0x2d737562,0x64(%edx),%esp
xor    %ebp,(%esi)
jae    80494aa <_init-0xfea>
xor    %cs:(%eax),%eax
insb   (%dx),%es:(%edi)
imul   $0x6f732e74,0x72(%edx),%esp
xor    %eax,%cs:(%eax)
arpl   %bp,0x63(%edi,%ebp,2)
imul   $0x65,0x67(%edi),%ebx
je     80494c7 <_init-0xfcd>
imul   $0x62696c00,0x65(%ebp),%ebp
arpl   %bp,(%esi)
jae    80494cd <_init-0xfc7>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80494db <_init-0xfb9>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     8049477 <_init-0x101d>
imul   $0x79666974,0x6f(%esi),%ebp
pop    %edi
imul   $0x66003174,0x69(%esi),%ebp
arpl   %bp,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jo     8049502 <_init-0xf92>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8049502 <_init-0xf92>
push   $0x72747300
jae    804950f <_init-0xf85>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     804951d <_init-0xf77>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8049520 <_init-0xf74>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8049530 <_init-0xf64>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jae    804953a <_init-0xf5a>
jb     804952c <_init-0xf68>
jne    804953a <_init-0xf5a>
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x5f(%eax,%eax,1)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     804953d <_init-0xf57>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jo     8049519 <_init-0xf7b>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
js     804955d <_init-0xf37>
je     804954d <_init-0xf47>
je     804954f <_init-0xf45>
je     8049526 <_init-0xf6e>
xor    $0x0,%al
addr16
gs
je     8049555 <_init-0xf3f>
arpl   %si,0x72(%ebp)
jb     8049560 <_init-0xf34>
outsb  %ds:(%esi),(%dx)
je     804955d <_init-0xf37>
imul   $0x656d616e,%fs:0x5f(%edx),%esi
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x63007461,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804957a <_init-0xf1a>
imul   $0x6f6e616e,%fs:0x0(%edx),%esi
jae    804958b <_init-0xf09>
gs
gs
jo     8049523 <_init-0xf71>
gs
jo     8049595 <_init-0xeff>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
ja     804958c <_init-0xf08>
imul   $0x636e7274,0x73(%eax,%eax,1),%esi
jo     80495ae <_init-0xee6>
add    %dh,0x75(%eax)
je     80495ad <_init-0xee7>
add    %ah,0x6f(%esi)
jb     80495aa <_init-0xeea>
add    %dh,0x69(%ebx)
addr16 jo 80495b7 <_init-0xedd>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    80495b6 <_init-0xede>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8049557 <_init-0xf3d>
pop    %edi
pop    %edi
jae    80495cf <_init-0xec5>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x69746f6e,0x69(%eax,%eax,1),%ebp
data16
jns    80495cf <_init-0xec5>
jb     80495df <_init-0xeb5>
pop    %edi
ja     80495d6 <_init-0xebe>
je     80495da <_init-0xeba>
push   $0x6c6e7500
imul   $0x74757000,0x6b(%esi),%ebp
arpl   %bp,0x61(%eax)
jb     8049588 <_init-0xf0c>
insl   (%dx),%es:(%edi)
imul   $0x0,0x72(%ecx,%ebp,2),%esp
jb     80495f5 <_init-0xe9f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     804959c <_init-0xef8>
pop    %edi
gs
js     8049609 <_init-0xe8b>
je     80495a2 <_init-0xef2>
addr16
gs
je     8049616 <_init-0xe7e>
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
jae    8049624 <_init-0xe70>
jb     8049625 <_init-0xe6f>
jo     8049622 <_init-0xe72>
add    %dh,0x74(%ebx)
jb     804961f <_init-0xe75>
je     8049624 <_init-0xe70>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
jb     8049636 <_init-0xe5e>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     804963e <_init-0xe56>
jns    80495cc <_init-0xec8>
addr16
gs
je     8049637 <_init-0xe5d>
jb     8049640 <_init-0xe54>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     80495d7 <_init-0xebd>
jae    804964d <_init-0xe47>
jb     804963e <_init-0xe56>
push   $0x6c756e72
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x65676600,0x6b(%esi),%ebp
je     8049661 <_init-0xe33>
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804966c <_init-0xe28>
jb     8049666 <_init-0xe2e>
outsb  %gs:(%esi),(%dx)
add    %dh,0x72(%eax)
arpl   %si,0x0(%esp,%ebp,2)
jae    804966a <_init-0xe2a>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
data16
add    %dh,%fs:0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     804968c <_init-0xe08>
jns    804968d <_init-0xe07>
gs
je     804961d <_init-0xe77>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    8049687 <_init-0xe0d>
je     8049624 <_init-0xe70>
ja     8049698 <_init-0xdfc>
imul   $0x72747300,0x76(%ebp,%eiz,2),%esi
jae    80496a4 <_init-0xdf0>
jb     8049632 <_init-0xe62>
jae    80496a8 <_init-0xdec>
jb     8049699 <_init-0xdfb>
jae    80496a8 <_init-0xdec>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp)
imul   $0x7461736e,0x65(%ebp),%ebp
add    %dh,0x6d(%edx)
imul   $0x72655f5f,%fs:0x0(%edx),%esi
jb     80496be <_init-0xdd6>
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6e696200,0x6e(%edi),%ebp
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     80496de <_init-0xdb6>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ebx)
jo     80496e5 <_init-0xdaf>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     80496da <_init-0xdba>
jo     80496f2 <_init-0xda2>
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
js     80496f7 <_init-0xd9d>
je     80496e7 <_init-0xdad>
je     80496be <_init-0xdd6>
xor    $0x0,%al
jo     80496fb <_init-0xd99>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
data16
jo     8049706 <_init-0xd8e>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x65736464,0x61(%edi),%esp
je     80496a7 <_init-0xded>
data16
jo     804971f <_init-0xd75>
je     804970f <_init-0xd85>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %dh,0x74(%ebx)
jb     8049728 <_init-0xd6c>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8049730 <_init-0xd64>
add    %bl,0x5f(%edi)
jbe    8049743 <_init-0xd51>
outsb  %ds:(%esi),(%dx)
jo     8049745 <_init-0xd4f>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
imul   $0x74,0x73(%edi),%ebp
gs
insl   (%dx),%es:(%edi)
jo     804971b <_init-0xd79>
xor    $0x0,%al
jae    804975d <_init-0xd37>
jb     804975f <_init-0xd35>
outsl  %ds:(%esi),(%dx)
jne    804975a <_init-0xd3a>
add    %dh,0x65(%ebx)
je     8049766 <_init-0xd2e>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ebx)
jo     804976d <_init-0xd27>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8049770 <_init-0xd24>
popa
jae    8049771 <_init-0xd23>
add    %dh,0x74(%ebx)
jb     804976e <_init-0xd26>
popa
jae    8049773 <_init-0xd21>
arpl   %bp,0x70(%ebp)
add    %ah,0x74(%esi)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
outsw  %fs:(%esi),(%dx)
jo     8049785 <_init-0xd0f>
outsb  %ds:(%esi),(%dx)
imul   $0x74735f5f,%fs:0x0(%edx),%esi
jb     8049799 <_init-0xcfb>
fs
jne    804979e <_init-0xcf6>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     80497a7 <_init-0xced>
je     8049797 <_init-0xcfd>
je     804976e <_init-0xd26>
xor    $0x0,%al
pop    %edi
pop    %edi
js     80497b1 <_init-0xce3>
je     80497a1 <_init-0xcf3>
je     8049778 <_init-0xd1c>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80497c7 <_init-0xccd>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     80497be <_init-0xcd6>
jb     80497c6 <_init-0xcce>
add    %dh,0x74(%ebx)
fs
gs
jb     80497d8 <_init-0xcbc>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
insl   (%dx),%es:(%edi)
jne    80497de <_init-0xcb6>
insl   (%dx),%es:(%edi)
popa
jo     8049774 <_init-0xd20>
pop    %edi
pop    %edi
jae    80497e6 <_init-0xcae>
jo     80497ec <_init-0xca8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     80497fc <_init-0xc98>
imul   $0x6c646165,0x72(%eax,%eax,1),%esp
imul   $0x65786500,0x6b(%esi),%ebp
arpl   %si,0x65(%esi)
add    %ah,0x65(%edi)
je     804980d <_init-0xc87>
jo     8049814 <_init-0xc80>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x61(%di)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6567006f,0x66(%esi),%ebp
je     8049823 <_init-0xc71>
ja     8049823 <_init-0xc71>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     80497ba <_init-0xcda>
jae    8049821 <_init-0xc73>
outsb  %ds:(%esi),(%dx)
fs
insl   (%dx),%es:(%edi)
jae    8049828 <_init-0xc6c>
add    %dh,0x74(%ebx)
jb     804983a <_init-0xc5a>
outsl  %ds:(%esi),(%dx)
jne    8049835 <_init-0xc5f>
insb   (%dx),%es:(%edi)
add    %dh,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
jb     8049844 <_init-0xc50>
pop    %edi
jb     80497d3 <_init-0xcc1>
imul   $0x6f,0x6e(%ebp,%eiz,2),%bp
jne    804984f <_init-0xc45>
insb   (%dx),%es:(%edi)
gs
gs
jo     80497e1 <_init-0xcb3>
arpl   %bp,0x6f(%eax)
ja     8049854 <_init-0xc40>
add    %ah,0x77(%esi)
jb     8049854 <_init-0xc40>
je     8049852 <_init-0xc42>
add    %ah,0x72(%esi)
gs
popa
add    %dh,%fs:0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x61(%edi)
imul   $0x6f6c0064,0x69(%eax,%esi,2),%esi
arpl   %sp,0x6c(%ecx)
je     8049894 <_init-0xc00>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
jb     8049895 <_init-0xbff>
push   $0x65730072
arpl   %si,0x72(%ebp)
gs
pop    %edi
addr16
gs
je     80498a5 <_init-0xbef>
outsb  %ds:(%esi),(%dx)
jbe    8049843 <_init-0xc51>
addr16
gs
je     80498ba <_init-0xbda>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6e(%ebx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %si,0x65(%edx)
popa
je     80498c0 <_init-0xbd4>
xor    %eax,(%eax)
pop    %edi
pop    %edi
jbe    80498c7 <_init-0xbcd>
jo     80498d5 <_init-0xbbf>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x70,(%eax),%eax
jb     80498de <_init-0xbb6>
addr16 jb 80498d3 <_init-0xbc1>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     80498f8 <_init-0xb9c>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     80498f4 <_init-0xba0>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     8049914 <_init-0xb80>
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
pop    %edi
imul   $0x616e,0x5f(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     8049926 <_init-0xb6e>
data16
jns    804991f <_init-0xb75>
popa
fs
fs
pop    %edi
ja     8049927 <_init-0xb6d>
je     804992b <_init-0xb69>
push   $0x61747300
je     8049935 <_init-0xb5f>
jae    8049907 <_init-0xb8d>
xor    $0x0,%al
jae    804994e <_init-0xb46>
jae    804993a <_init-0xb5a>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jbe    8049940 <_init-0xb54>
jae    8049951 <_init-0xb43>
jb     804994c <_init-0xb48>
outsb  %ds:(%esi),(%dx)
je     804994c <_init-0xb48>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
popa
fs imul $0x725f34,%fs:0x36(%edx),%esi
00
pop    %edi
pop    %edi
jae    804996b <_init-0xb29>
jb     8049966 <_init-0xb2e>
outsb  %ds:(%esi),(%dx)
je     8049966 <_init-0xb2e>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8049971 <_init-0xb23>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%esi)
jo     804997c <_init-0xb18>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
popa
arpl   %sp,0x65(%ebx)
jae    8049994 <_init-0xb00>
add    %dh,0x69(%eax)
jo     804998b <_init-0xb09>
xor    (%eax),%al
outsl  %ds:(%esi),(%dx)
jo     8049990 <_init-0xb04>
outsb  %ds:(%esi),(%dx)
popa
je     8049965 <_init-0xb2f>
xor    $0x0,%al
jae    80499a7 <_init-0xaed>
jb     8049998 <_init-0xafc>
insl   (%dx),%es:(%edi)
jo     8049938 <_init-0xb5c>
jb     804999f <_init-0xaf5>
arpl   %si,0x6d(%esi)
jae    80499a6 <_init-0xaee>
add    %dh,0x74(%ebx)
jb     80499a9 <_init-0xaeb>
jb     80499b8 <_init-0xadc>
outsl  %ds:(%esi),(%dx)
jb     8049949 <_init-0xb4b>
pop    %edi
pop    %edi
popa
jae    80499be <_init-0xad6>
jb     80499b9 <_init-0xadb>
outsb  %ds:(%esi),(%dx)
je     80499b9 <_init-0xadb>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80499d8 <_init-0xabc>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %ah,%fs:0x65(%esi)
jb     80499e6 <_init-0xaae>
outsl  %ds:(%esi),(%dx)
jb     8049977 <_init-0xb1d>
jae    80499ed <_init-0xaa7>
jo     80499de <_init-0xab6>
jo     80499f6 <_init-0xa9e>
add    %dh,0x6e(%ebx)
jo     80499f4 <_init-0xaa0>
imul   $0x79730066,0x74(%esi),%ebp
jae    80499ee <_init-0xaa6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %bl,0x5f(%edi)
jo     8049a05 <_init-0xa8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x2d(%esp,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
pop    %edi
pop    %edi
pop    %edi
je     8049a19 <_init-0xa7b>
jae    8049a0e <_init-0xa86>
addr16
gs
je     8049a12 <_init-0xa82>
popa
fs
fs
jb     80499b8 <_init-0xadc>
pop    %edi
gs
fs
popa
je     8049a1f <_init-0xa75>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8049a3b <_init-0xa59>
popa
jb     8049a3e <_init-0xa56>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edx
dec    %esp
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %edi,(%eax)
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,0x4c434100
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
dec    %esp
dec    %ecx
inc    %edx
dec    %ebx
dec    %ebp
dec    %edi
inc    %esp
pop    %edi
xor    $0x494c4700,%eax
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x200,%eax
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%esi)
add    %al,(%edx)
add    %cl,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %cl,(%eax,%eax,1)
or     (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
or     (%eax),%eax
add    (%eax),%al
add    (%eax),%al
or     $0x2000700,%eax
add    %cl,(%eax)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%esi)
add    %cl,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%edx)
add    %cl,(%edi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%esi)
add    %dl,(%eax)
add    %al,(%edx)
add    %dl,(%eax)
add    %al,(%edx)
add    %cl,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %dl,(%ecx)
add    %dl,(%edx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %dl,(%ebx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %cl,(%eax)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %dl,(%ebx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %dl,(%eax)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%esi)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %dl,(%ebx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %dl,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
push   %es
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%edx)
add    %dl,(%ecx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,0x2000e00
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%eax,%eax,1)
push   %ss
add    %al,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%esi)
add    %cl,(%eax,%eax,1)
add    (%eax),%al
or     (%eax),%al
adc    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
push   %cs
add    %dl,0x2001500
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %dl,(%edi)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
add    %eax,(%eax)
movb   $0x0,(%eax,%eax,1)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x160000,%eax
pop    %eax
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %ah,(%edx)
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0xd0000,0xd(%ecx),%ebp
bound  %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
out    %al,(%dx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0xda641,%eax
add    %dl,(%edx)
add    %ch,0x0(%edx,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0xda641(%edi)
add    %cl,(%ebx)
add    %dh,0xa(%edi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x41,%ch
cmpsb  %es:(%edi),%ds:(%esi)
or     $0x80000,%eax
(bad)
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %ch,0x10000003(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x24(%eax)
(bad)
add    $0x60000,%eax
lea    (%edx),%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
scas   %es:(%edi),%al
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%ch
push   $0x2
pop    %es
add    %al,(%eax)
add    (%eax),%eax
xchg   %eax,%ebp
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %cl,(%edi)
add    %bl,%bh
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x170000,0xd(%ecx),%ebp
bound  %ecx,(%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %ebp,0x69(%ecx)
or     $0x150000,%eax
lahf
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ecx)
imul   $0x140000,(%ecx),%ecx
test   $0x1000000a,%eax
add    %al,(%eax)
add    %bl,(%eax)
imul   $0x130000,0xd(%ecx),%ebp
mov    $0xa,%ch
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jb     8049d7f <_init-0x715>
imul   $0x110000,(%ecx),%ecx
mov    $0x1000000a,%edi
add    %al,(%eax)
add    %dl,(%edi)
imul   $0x100000,0xd(%ecx),%ebp
lret
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1a(%ebx)
imul   $0xf0000,(%ecx),%ecx
aad    $0xa
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xe0000,%eax
pop    %eax
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%edx)
imul   $0xc0000,(%ecx),%ecx
loope  8049db8 <_init-0x6dc>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0xaed,0xa0000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
or     %eax,(%eax)
(bad)
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
imul   $0x70000,0xd(%ecx),%ebp
add    (%ebx),%cl
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %ss
imul   $0x50000,0xd(%ecx),%ebp
or     $0xb,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8049e0f <_init-0x685>
imul   $0x40000,(%ecx),%ecx
push   %ss
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
and    (%ebx),%cl
add    %al,(%eax)
add    %al,(%eax)
loopne 8049e45 <_init-0x64f>
or     %cl,(%eax)
push   %es
roll   (%eax)
add    %ah,%ah
das
or     %cl,(%eax)
push   %es
aad    $0x0
add    %ch,%al
das
or     %cl,(%eax)
push   %es
pop    %esi
add    %al,(%eax)
in     (%dx),%al
das
or     %cl,(%eax)
push   %es
lods   %ds:(%esi),%eax
add    %al,(%eax)
lock das
or     %cl,(%eax)
push   %es
(bad)
add    %al,(%eax)
and    %dh,(%eax)
or     %cl,(%eax)
add    $0x400000d1,%eax
xor    %cl,(%eax)
or     %al,0x440000d5
xor    %cl,(%eax)
.byte 0x8
.byte 0x5
(bad)
shrb   $0x8,(%eax,%ecx,1)
pop    %es
add    $0x0,%al
add    %al,%ah
sub    $0x8,%al
or     %al,(%edi)
add    $0x2cc80000,%eax
or     %cl,(%eax)
pop    %es
push   %es
add    %al,(%eax)
int3
sub    $0x8,%al
or     %al,(%edi)
pop    %es
add    %al,(%eax)
shrb   (%eax,%ecx,1)
or     %al,(%edi)
or     %al,(%eax)
add    %dl,%ah
sub    $0x8,%al
or     %al,(%edi)
or     %eax,(%eax)
add    %bl,%al
sub    $0x8,%al
or     %al,(%edi)
or     (%eax),%al
add    %bl,%ah
sub    $0x8,%al
or     %al,(%edi)
or     $0x0,%al
add    %ah,%al
sub    $0x8,%al
or     %al,(%edi)
or     $0x2ce40000,%eax
or     %cl,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
call   f0ca6d5 <_end+0x7046e45>
sldt   (%eax)
in     (%dx),%al
sub    $0x8,%al
or     %al,(%edi)
adc    %al,(%eax)
add    %dh,%al
sub    $0x8,%al
or     %al,(%edi)
adc    %eax,(%eax)
add    %dh,%ah
sub    $0x8,%al
or     %al,(%edi)
adc    (%eax),%al
add    %bh,%al
sub    $0x8,%al
or     %al,(%edi)
adc    (%eax),%eax
add    %bh,%ah
sub    $0x8,%al
or     %al,(%edi)
adc    $0x2d000000,%eax
or     %cl,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
add    $0x2d,%al
or     %cl,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
or     %ch,0x18070808
add    %al,(%eax)
or     $0x2d,%al
or     %cl,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %dl,(%eax)
sub    $0x1a070808,%eax
add    %al,(%eax)
adc    $0x2d,%al
or     %cl,(%eax)
pop    %es
sbb    (%eax),%eax
add    %bl,(%eax)
sub    $0x1c070808,%eax
add    %al,(%eax)
sbb    $0x2d,%al
or     %cl,(%eax)
pop    %es
sbb    $0x2d200000,%eax
or     %cl,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
and    $0x2d,%al
or     %cl,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
sub    %ch,0x20070808
add    %al,(%eax)
sub    $0x2d,%al
or     %cl,(%eax)
pop    %es
and    %eax,(%eax)
add    %dh,(%eax)
sub    $0x22070808,%eax
add    %al,(%eax)
xor    $0x2d,%al
or     %cl,(%eax)
pop    %es
and    (%eax),%eax
add    %bh,(%eax)
sub    $0x24070808,%eax
add    %al,(%eax)
cmp    $0x2d,%al
or     %cl,(%eax)
pop    %es
and    $0x2d400000,%eax
or     %cl,(%eax)
pop    %es
add    %al,%es:(%eax)
inc    %esp
sub    $0x27070808,%eax
add    %al,(%eax)
dec    %eax
sub    $0x28070808,%eax
add    %al,(%eax)
dec    %esp
sub    $0x29070808,%eax
add    %al,(%eax)
push   %eax
sub    $0x2a070808,%eax
add    %al,(%eax)
push   %esp
sub    $0x2b070808,%eax
add    %al,(%eax)
pop    %eax
sub    $0x2c070808,%eax
add    %al,(%eax)
pop    %esp
sub    $0x2d070808,%eax
add    %al,(%eax)
pusha
sub    $0x2e070808,%eax
add    %al,(%eax)
fs
sub    $0x2f070808,%eax
add    %al,(%eax)
push   $0x708082d
xor    %al,(%eax)
add    %ch,0x8(%ebp,%ebp,1)
or     %al,(%edi)
xor    %eax,(%eax)
add    %dh,0x2d(%eax)
or     %cl,(%eax)
pop    %es
xor    (%eax),%al
add    %dh,0x8(%ebp,%ebp,1)
or     %al,(%edi)
xor    (%eax),%eax
add    %bh,0x2d(%eax)
or     %cl,(%eax)
pop    %es
xor    $0x0,%al
add    %bh,0x8(%ebp,%ebp,1)
or     %al,(%edi)
xor    $0x2d800000,%eax
or     %cl,(%eax)
pop    %es
add    %al,%ss:(%eax)
test   %ch,0x37070808
add    %al,(%eax)
mov    %ch,0x38070808
add    %al,(%eax)
mov    %gs,0x39070808
add    %al,(%eax)
nop
sub    $0x3a070808,%eax
add    %al,(%eax)
xchg   %eax,%esp
sub    $0x3b070808,%eax
add    %al,(%eax)
cwtl
sub    $0x3c070808,%eax
add    %al,(%eax)
pushf
sub    $0x3d070808,%eax
add    %al,(%eax)
mov    0x708082d,%al
add    %al,%ds:(%eax)
movsb  %ds:(%esi),%es:(%edi)
sub    $0x3f070808,%eax
add    %al,(%eax)
test   $0x2d,%al
or     %cl,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
lods   %ds:(%esi),%al
sub    $0x41070808,%eax
add    %al,(%eax)
mov    $0x2d,%al
or     %cl,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
mov    $0x2d,%ah
or     %cl,(%eax)
pop    %es
inc    %ebx
add    %al,(%eax)
mov    $0x708082d,%eax
inc    %esp
add    %al,(%eax)
mov    $0x708082d,%esp
inc    %ebp
add    %al,(%eax)
shrb   $0x0,0x46070808
add    %al,%ah
sub    $0x47070808,%eax
add    %al,(%eax)
enter  $0x82d,$0x8
pop    %es
dec    %eax
add    %al,(%eax)
int3
sub    $0x49070808,%eax
add    %al,(%eax)
shrb   0x4a070808
add    %al,(%eax)
aam    $0x2d
or     %cl,(%eax)
pop    %es
dec    %ebx
add    %al,(%eax)
fsubrs 0x4c070808
add    %al,(%eax)
fsubrl 0x4d070808
add    %al,(%eax)
loopne 804a0c3 <_init-0x3d1>
or     %cl,(%eax)
pop    %es
dec    %esi
add    %al,(%eax)
in     $0x2d,%al
or     %cl,(%eax)
pop    %es
dec    %edi
add    %al,(%eax)
call   f0ca8d6 <_end+0x7047046>
push   %eax
add    %al,(%eax)
in     (%dx),%al
sub    $0x51070808,%eax
add    %al,(%eax)
lock sub $0x52070808,%eax
add    %al,(%eax)
hlt
sub    $0x53070808,%eax
add    %al,(%eax)
clc
sub    $0x54070808,%eax
add    %al,(%eax)
cld
sub    $0x55070808,%eax
add    %al,(%eax)
add    %ch,(%esi)
or     %cl,(%eax)
pop    %es
push   %esi
add    %al,(%eax)
add    $0x2e,%al
or     %cl,(%eax)
pop    %es
push   %edi
add    %al,(%eax)
or     %ch,(%esi)
or     %cl,(%eax)
pop    %es
pop    %eax
add    %al,(%eax)
or     $0x2e,%al
or     %cl,(%eax)
pop    %es
pop    %ecx
add    %al,(%eax)
adc    %ch,(%esi)
or     %cl,(%eax)
pop    %es
pop    %edx
add    %al,(%eax)
adc    $0x2e,%al
or     %cl,(%eax)
pop    %es
pop    %ebx
add    %al,(%eax)
sbb    %ch,(%esi)
or     %cl,(%eax)
pop    %es
pop    %esp
add    %al,(%eax)
sbb    $0x2e,%al
or     %cl,(%eax)
pop    %es
pop    %ebp
add    %al,(%eax)
and    %ch,(%esi)
or     %cl,(%eax)
pop    %es
pop    %esi
add    %al,(%eax)
and    $0x2e,%al
or     %cl,(%eax)
pop    %es
pop    %edi
add    %al,(%eax)
sub    %ch,(%esi)
or     %cl,(%eax)
pop    %es
pusha
add    %al,(%eax)
sub    $0x2e,%al
or     %cl,(%eax)
pop    %es
popa
add    %al,(%eax)
xor    %ch,(%esi)
or     %cl,(%eax)
pop    %es
bound  %eax,(%eax)
add    %dh,(%esi,%ebp,1)
or     %cl,(%eax)
pop    %es
arpl   %ax,(%eax)
add    %bh,(%eax)
or     %cl,%cs:(%eax)
pop    %es
add    %al,%fs:(%eax)
cmp    $0x2e,%al
or     %cl,(%eax)
pop    %es
add    %al,%gs:(%eax)
inc    %eax
or     %cl,%cs:(%eax)
pop    %es
data16
add    %al,(%eax)
inc    %esp
or     %cl,%cs:(%eax)
pop    %es
add    %al,(%bx,%si)
dec    %eax
or     %cl,%cs:(%eax)
pop    %es
push   $0x2e4c0000
or     %cl,(%eax)
pop    %es
imul   $0x82e5000,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %dl,0x8(%esi,%ebp,1)
or     %al,(%edi)
imul   $0x0,(%eax),%eax
pop    %eax
or     %cl,%cs:(%eax)
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
pop    %esp
or     %cl,%cs:(%eax)
pop    %es
insl   (%dx),%es:(%edi)
add    %al,(%eax)
pusha
or     %cl,%cs:(%eax)
pop    %es
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
fs or  %cl,%cs:%fs:(%eax)
pop    %es
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
push   $0x708082e
jo     804a1ab <_init-0x2e9>
add    %ch,0x8(%esi,%ebp,1)
or     %al,(%edi)
jno    804a1b3 <_init-0x2e1>
add    %dh,0x2e(%eax)
or     %cl,(%eax)
pop    %es
jb     804a1bb <_init-0x2d9>
add    %dh,0x8(%esi,%ebp,1)
or     %al,(%edi)
jae    804a1c3 <_init-0x2d1>
add    %bh,0x2e(%eax)
or     %cl,(%eax)
pop    %es
je     804a1cb <_init-0x2c9>
add    %bh,0x8(%esi,%ebp,1)
or     %al,(%edi)
jne    804a1d3 <_init-0x2c1>
add    %al,0x708082e(%eax)
jbe    804a1db <_init-0x2b9>
add    %al,0x77070808(%esi,%ebp,1)
add    %al,(%eax)
mov    %ch,(%esi)
or     %cl,(%eax)
pop    %es
js     804a1eb <_init-0x2a9>
add    %cl,0x79070808(%esi,%ebp,1)
add    %al,(%eax)
nop
or     %cl,%cs:(%eax)
pop    %es
jp     804a1fb <_init-0x299>
add    %dl,0x7b070808(%esi,%ebp,1)
add    %al,(%eax)
cwtl
or     %cl,%cs:(%eax)
pop    %es
jl     804a20b <_init-0x289>
add    %bl,0x7d070808(%esi,%ebp,1)
add    %al,(%eax)
mov    0x708082e,%al
jle    804a21b <_init-0x279>
add    %ah,0x7f070808(%esi,%ebp,1)
add    %al,(%eax)
test   $0x2e,%al
or     %cl,(%eax)
pop    %es
addb   $0x0,(%eax)
lods   %ds:(%esi),%al
or     %cl,%cs:(%eax)
pop    %es
addl   $0x82eb000,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
mov    $0x2e,%ah
or     %cl,(%eax)
pop    %es
addl   $0x0,(%eax)
mov    $0x708082e,%eax
test   %al,(%eax)
add    %bh,-0x7af8f7f8(%esi,%ebp,1)
add    %al,(%eax)
shrb   $0x8,(%esi)
or     %al,(%edi)
xchg   %al,(%eax)
add    %al,%ah
or     %cl,%cs:(%eax)
pop    %es
xchg   %eax,(%eax)
add    %cl,%al
or     %cl,%cs:(%eax)
pop    %es
mov    %al,(%eax)
add    %cl,%ah
or     %cl,%cs:(%eax)
pop    %es
mov    %eax,(%eax)
add    %dl,%al
or     %cl,%cs:(%eax)
pop    %es
mov    (%eax),%al
add    %dl,%ah
or     %cl,%cs:(%eax)
pop    %es
mov    (%eax),%eax
add    %bl,%al
or     %cl,%cs:(%eax)
pop    %es
mov    %es,(%eax)
add    %bl,%ah
or     %cl,%cs:(%eax)
pop    %es
lea    (%eax),%eax
add    %ah,%al
or     %cl,%cs:(%eax)
pop    %es
mov    (%eax),%es
add    %ah,%ah
or     %cl,%cs:(%eax)
pop    %es
popl   (%eax)
add    %ch,%al
or     %cl,%cs:(%eax)
pop    %es
nop
add    %al,(%eax)
in     (%dx),%al
or     %cl,%cs:(%eax)
pop    %es
xchg   %eax,%ecx
add    %al,(%eax)
lock or %cl,%cs:(%eax)
pop    %es
xchg   %eax,%edx
add    %al,(%eax)
hlt
or     %cl,%cs:(%eax)
pop    %es
xchg   %eax,%ebx
add    %al,(%eax)
clc
or     %cl,%cs:(%eax)
pop    %es
xchg   %eax,%esp
add    %al,(%eax)
cld
or     %cl,%cs:(%eax)
pop    %es
xchg   %eax,%ebp
add    %al,(%eax)
add    %ch,(%edi)
or     %cl,(%eax)
pop    %es
xchg   %eax,%esi
add    %al,(%eax)
add    $0x2f,%al
or     %cl,(%eax)
pop    %es
xchg   %eax,%edi
add    %al,(%eax)
or     %ch,(%edi)
or     %cl,(%eax)
pop    %es
cwtl
add    %al,(%eax)
or     $0x2f,%al
or     %cl,(%eax)
pop    %es
cltd
add    %al,(%eax)
adc    %ch,(%edi)
or     %cl,(%eax)
pop    %es
lcall  $0x808,$0x2f140000
pop    %es
fwait
add    %al,(%eax)
sbb    %ch,(%edi)
or     %cl,(%eax)
pop    %es
pushf
add    %al,(%eax)
sbb    $0x2f,%al
or     %cl,(%eax)
pop    %es
popf
add    %al,(%eax)
and    %ch,(%edi)
or     %cl,(%eax)
pop    %es
sahf
add    %al,(%eax)
and    $0x2f,%al
or     %cl,(%eax)
pop    %es
lahf
add    %al,(%eax)
sub    %ch,(%edi)
or     %cl,(%eax)
pop    %es
mov    0x2f2c0000,%al
or     %cl,(%eax)
pop    %es
mov    0x2f300000,%eax
or     %cl,(%eax)
pop    %es
mov    %al,0x2f340000
or     %cl,(%eax)
pop    %es
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
cmp    %ch,(%edi)
or     %cl,(%eax)
pop    %es
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
cmp    $0x2f,%al
or     %cl,(%eax)
pop    %es
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
inc    %eax
das
or     %cl,(%eax)
pop    %es
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
inc    %esp
das
or     %cl,(%eax)
pop    %es
test   $0x0,%al
add    %cl,0x2f(%eax)
or     %cl,(%eax)
pop    %es
test   $0x2f4c0000,%eax
or     %cl,(%eax)
pop    %es
stos   %al,%es:(%edi)
add    %al,(%eax)
push   %eax
das
or     %cl,(%eax)
pop    %es
stos   %eax,%es:(%edi)
add    %al,(%eax)
push   %esp
das
or     %cl,(%eax)
pop    %es
lods   %ds:(%esi),%al
add    %al,(%eax)
pop    %eax
das
or     %cl,(%eax)
pop    %es
scas   %es:(%edi),%al
add    %al,(%eax)
pop    %esp
das
or     %cl,(%eax)
pop    %es
scas   %es:(%edi),%eax
add    %al,(%eax)
pusha
das
or     %cl,(%eax)
pop    %es
mov    $0x0,%al
add    %ah,0x8(%edi,%ebp,1)
or     %al,(%edi)
mov    $0x0,%cl
add    %ch,0x2f(%eax)
or     %cl,(%eax)
pop    %es
mov    $0x0,%dl
add    %ch,0x8(%edi,%ebp,1)
or     %al,(%edi)
mov    $0x0,%bl
add    %dh,0x2f(%eax)
or     %cl,(%eax)
pop    %es
mov    $0x0,%ch
add    %dh,0x8(%edi,%ebp,1)
or     %al,(%edi)
mov    $0x0,%dh
add    %bh,0x2f(%eax)
or     %cl,(%eax)
pop    %es
mov    $0x0,%bh
add    %bh,0x8(%edi,%ebp,1)
or     %al,(%edi)
mov    $0x2f800000,%eax
or     %cl,(%eax)
pop    %es
mov    $0x2f840000,%ecx
or     %cl,(%eax)
pop    %es
mov    $0x2f880000,%edx
or     %cl,(%eax)
pop    %es
mov    $0x2f8c0000,%ebx
or     %cl,(%eax)
pop    %es
mov    $0x2f900000,%esp
or     %cl,(%eax)
pop    %es
mov    $0x2f940000,%ebp
or     %cl,(%eax)
pop    %es
mov    $0x2f980000,%esi
or     %cl,(%eax)
pop    %es
mov    $0x2f9c0000,%edi
or     %cl,(%eax)
pop    %es
rolb   $0x0,(%eax)
mov    0x708082f,%al
roll   $0x0,(%eax)
movsb  %ds:(%esi),%es:(%edi)
das
or     %cl,(%eax)
pop    %es
ret    $0x0
test   $0x2f,%al
or     %cl,(%eax)
pop    %es
ret
add    %al,(%eax)
lods   %ds:(%esi),%al
das
or     %cl,(%eax)
pop    %es
les    (%eax),%eax
add    %dh,0x708082f(%eax)
lds    (%eax),%eax
add    %dh,-0x39f8f7f8(%edi,%ebp,1)
add    %al,(%eax)
mov    $0x708082f,%eax
movl   $0x82fbc00,(%eax)
or     %al,(%edi)
enter  $0x0,$0xc0
das
or     %cl,(%eax)
pop    %es
leave
add    %al,(%eax)
les    (%edi),%ebp
or     %cl,(%eax)
pop    %es
lret   $0x0
enter  $0x82f,$0x8
pop    %es
lret
add    %al,(%eax)
int3
das
or     %cl,(%eax)
pop    %es
int3
add    %al,(%eax)
shrb   (%edi)
or     %cl,(%eax)
pop    %es
int    $0x0
add    %dl,%ah
das
or     %cl,(%eax)
pop    %es
into
add    %al,(%eax)
fsubrs (%edi)
or     %cl,(%eax)
pop    %es
iret
add    %al,(%eax)
fsubrl (%edi)
or     %cl,(%eax)
pop    %es
rolb   (%eax)
push   %ebx
sub    $0x8,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x38817,%ebx
mov    0x334(%ebx),%eax
test   %eax,%eax
je     804a4b2 <_init+0x1e>
call   804aa50 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8082cb8
jmp    *0x8082cbc
add    %al,(%eax)
jmp    *0x8082cc0
push   $0x0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cc4
push   $0x8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cc8
push   $0x10
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ccc
push   $0x18
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cd0
push   $0x20
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cd4
push   $0x28
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cd8
push   $0x30
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cdc
push   $0x38
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ce0
push   $0x40
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ce4
push   $0x48
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ce8
push   $0x50
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cec
push   $0x58
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cf0
push   $0x60
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cf4
push   $0x68
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cf8
push   $0x70
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082cfc
push   $0x78
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d00
push   $0x80
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d04
push   $0x88
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d08
push   $0x90
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d0c
push   $0x98
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d10
push   $0xa0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d14
push   $0xa8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d18
push   $0xb0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d1c
push   $0xb8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d20
push   $0xc0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d24
push   $0xc8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d28
push   $0xd0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d2c
push   $0xd8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d30
push   $0xe0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d34
push   $0xe8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d38
push   $0xf0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d3c
push   $0xf8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d40
push   $0x100
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d44
push   $0x108
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d48
push   $0x110
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d4c
push   $0x118
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d50
push   $0x120
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d54
push   $0x128
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d58
push   $0x130
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d5c
push   $0x138
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d60
push   $0x140
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d64
push   $0x148
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d68
push   $0x150
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d6c
push   $0x158
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d70
push   $0x160
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d74
push   $0x168
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d78
push   $0x170
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d7c
push   $0x178
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d80
push   $0x180
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d84
push   $0x188
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d88
push   $0x190
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d8c
push   $0x198
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d90
push   $0x1a0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d94
push   $0x1a8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d98
push   $0x1b0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082d9c
push   $0x1b8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082da0
push   $0x1c0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082da4
push   $0x1c8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082da8
push   $0x1d0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dac
push   $0x1d8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082db0
push   $0x1e0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082db4
push   $0x1e8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082db8
push   $0x1f0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dbc
push   $0x1f8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dc0
push   $0x200
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dc4
push   $0x208
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dc8
push   $0x210
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dcc
push   $0x218
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dd0
push   $0x220
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dd4
push   $0x228
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dd8
push   $0x230
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ddc
push   $0x238
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082de0
push   $0x240
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082de4
push   $0x248
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082de8
push   $0x250
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dec
push   $0x258
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082df0
push   $0x260
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082df4
push   $0x268
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082df8
push   $0x270
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082dfc
push   $0x278
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e00
push   $0x280
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e04
push   $0x288
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e08
push   $0x290
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e0c
push   $0x298
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e10
push   $0x2a0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e14
push   $0x2a8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e18
push   $0x2b0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e1c
push   $0x2b8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e20
push   $0x2c0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e24
push   $0x2c8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e28
push   $0x2d0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e2c
push   $0x2d8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e30
push   $0x2e0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e34
push   $0x2e8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e38
push   $0x2f0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e3c
push   $0x2f8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e40
push   $0x300
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e44
push   $0x308
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e48
push   $0x310
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e4c
push   $0x318
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e50
push   $0x320
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e54
push   $0x328
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e58
push   $0x330
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e5c
push   $0x338
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e60
push   $0x340
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e64
push   $0x348
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e68
push   $0x350
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e6c
push   $0x358
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e70
push   $0x360
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e74
push   $0x368
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e78
push   $0x370
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e7c
push   $0x378
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e80
push   $0x380
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e84
push   $0x388
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e88
push   $0x390
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e8c
push   $0x398
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e90
push   $0x3a0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e94
push   $0x3a8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e98
push   $0x3b0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082e9c
push   $0x3b8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ea0
push   $0x3c0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ea4
push   $0x3c8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ea8
push   $0x3d0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082eac
push   $0x3d8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082eb0
push   $0x3e0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082eb4
push   $0x3e8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082eb8
push   $0x3f0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ebc
push   $0x3f8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ec0
push   $0x400
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ec4
push   $0x408
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ec8
push   $0x410
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ecc
push   $0x418
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ed0
push   $0x420
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ed4
push   $0x428
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ed8
push   $0x430
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082edc
push   $0x438
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ee0
push   $0x440
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ee4
push   $0x448
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ee8
push   $0x450
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082eec
push   $0x458
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ef0
push   $0x460
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ef4
push   $0x468
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082ef8
push   $0x470
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082efc
push   $0x478
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f00
push   $0x480
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f04
push   $0x488
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f08
push   $0x490
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f0c
push   $0x498
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f10
push   $0x4a0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f14
push   $0x4a8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f18
push   $0x4b0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f1c
push   $0x4b8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f20
push   $0x4c0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f24
push   $0x4c8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f28
push   $0x4d0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f2c
push   $0x4d8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f30
push   $0x4e0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f34
push   $0x4e8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f38
push   $0x4f0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f3c
push   $0x4f8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f40
push   $0x500
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f44
push   $0x508
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f48
push   $0x510
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f4c
push   $0x518
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f50
push   $0x520
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f54
push   $0x528
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f58
push   $0x530
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f5c
push   $0x538
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f60
push   $0x540
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f64
push   $0x548
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f68
push   $0x550
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f6c
push   $0x558
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f70
push   $0x560
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f74
push   $0x568
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f78
push   $0x570
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f7c
push   $0x578
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f80
push   $0x580
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f84
push   $0x588
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f88
push   $0x590
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f8c
push   $0x598
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f90
push   $0x5a0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f94
push   $0x5a8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f98
push   $0x5b0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082f9c
push   $0x5b8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fa0
push   $0x5c0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fa4
push   $0x5c8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fa8
push   $0x5d0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fac
push   $0x5d8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fb0
push   $0x5e0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fb4
push   $0x5e8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fb8
push   $0x5f0
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fbc
push   $0x5f8
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fc0
push   $0x600
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fc4
push   $0x608
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fc8
push   $0x610
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fcc
push   $0x618
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fd0
push   $0x620
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fd4
push   $0x628
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fd8
push   $0x630
jmp    804a4c0 <_init+0x2c>
jmp    *0x8082fdc
push   $0x638
jmp    804a4c0 <_init+0x2c>
push   %ebp
mov    %esp,%ebp
push   %edi
mov    $0x1,%edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x30,%esp
mov    0xc(%ebp),%esi
call   806dcc0 <fchmod@plt+0x22b80>
test   %eax,%eax
mov    %eax,%ebx
je     804b1d5 <fchmod@plt+0x95>
call   8062300 <fchmod@plt+0x171c0>
call   8061aa0 <fchmod@plt+0x16960>
movl   $0x804b4c0,0x4(%esp)
mov    %ebx,(%esp)
call   806db10 <fchmod@plt+0x229d0>
movl   $0x8076de2,(%esp)
call   806dfe0 <fchmod@plt+0x22ea0>
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x806eea0,0xc(%esp)
movl   $0x806edd4,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804b239 <fchmod@plt+0xf9>
cmp    $0x64,%eax
je     804b218 <fchmod@plt+0xd8>
cmp    $0x68,%eax
je     804b201 <fchmod@plt+0xc1>
cmp    $0x56,%eax
mov    $0x1,%edi
je     804b1f1 <fchmod@plt+0xb1>
call   806e390 <fchmod@plt+0x23250>
mov    %ebx,(%esp)
call   806dab0 <fchmod@plt+0x22970>
call   8061eb0 <fchmod@plt+0x16d70>
lea    -0xc(%ebp),%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806edc4,(%esp)
xor    %edi,%edi
call   804aa10 <puts@plt>
jmp    804b1d5 <fchmod@plt+0x95>
mov    0x8(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804b520 <fchmod@plt+0x3e0>
mov    %eax,%edi
jmp    804b1d5 <fchmod@plt+0x95>
movl   $0x7,(%esp)
call   8062120 <fchmod@plt+0x16fe0>
movl   $0x7,0x4(%esp)
mov    %ebx,(%esp)
call   806dc30 <fchmod@plt+0x22af0>
jmp    804b195 <fchmod@plt+0x55>
mov    0x8083040,%eax
mov    %eax,0x28(%esp)
lea    (%esi,%eax,4),%eax
mov    %eax,0x24(%esp)
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,%edi
je     804b284 <fchmod@plt+0x144>
xor    %edx,%edx
mov    %esi,0xc(%ebp)
mov    %edx,%esi
mov    %ebx,0x2c(%esp)
mov    0x806eee0(,%esi,4),%ebx
mov    %edi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     804b2c6 <fchmod@plt+0x186>
add    $0x1,%esi
cmp    $0xa,%esi
jne    804b25c <fchmod@plt+0x11c>
mov    0x2c(%esp),%ebx
mov    0xc(%ebp),%esi
mov    0x8083020,%eax
mov    $0x2,%edi
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806edfc,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
mov    0x8(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804b520 <fchmod@plt+0x3e0>
jmp    804b1d5 <fchmod@plt+0x95>
mov    %ebx,%edi
mov    0x8(%ebp),%esi
sub    0x28(%esp),%esi
cmpl   $0x0,0xc(%edi)
mov    0x2c(%esp),%ebx
movl   $0x0,0x8083040
00
je     804b2ef <fchmod@plt+0x1af>
movl   $0x7,(%esp)
call   8062120 <fchmod@plt+0x16fe0>
mov    (%edi),%eax
movl   $0x806edd9,0x10(%esp)
movl   $0x806ee75,0xc(%esp)
movl   $0x52,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x806ede6,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   *0x4(%edi)
mov    %eax,%edi
jmp    804b1d5 <fchmod@plt+0x95>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
pushf
pushf
pop    %eax
mov    %eax,%edx
xor    $0x200000,%eax
push   %eax
popf
pushf
pop    %eax
popf
xor    %edx,%eax
test   $0x200000,%eax
je     804b3a1 <fchmod@plt+0x261>
push   %ebp
xor    %eax,%eax
mov    %esp,%ebp
push   %esi
and    $0xfffffff0,%esp
sub    $0x204,%esp
xchg   %ebx,%esi
cpuid
xchg   %ebx,%esi
test   %eax,%eax
je     804b39d <fchmod@plt+0x25d>
mov    $0x1,%eax
xchg   %ebx,%esi
cpuid
xchg   %ebx,%esi
test   $0x2000000,%edx
je     804b39d <fchmod@plt+0x25d>
and    $0x1000000,%edx
jne    804b3a2 <fchmod@plt+0x262>
stmxcsr (%esp)
mov    (%esp),%eax
or     $0x80,%ah
mov    %eax,(%esp)
ldmxcsr (%esp)
mov    -0x4(%ebp),%esi
leave
ret
movl   $0x0,0x20(%esp)
fxsave 0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,%edx
or     $0x40,%edx
testb  $0x40,0x20(%esp)
cmovne %edx,%eax
jmp    804b393 <fchmod@plt+0x253>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x806ed80
push   $0x806ed10
push   %ecx
push   %esi
push   $0x804b150
call   804ab60 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8083023,%eax
sub    $0x8083020,%eax
cmp    $0x6,%eax
ja     804b410 <fchmod@plt+0x2d0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804b40f <fchmod@plt+0x2cf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8083020,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8083020,%eax
sub    $0x8083020,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804b449 <fchmod@plt+0x309>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804b448 <fchmod@plt+0x308>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8083020,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8083048
jne    804b48c <fchmod@plt+0x34c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804b400 <fchmod@plt+0x2c0>
movb   $0x1,0x8083048
leave
repz ret
xchg   %ax,%ax
mov    0x807f31c,%eax
test   %eax,%eax
je     804b4b8 <fchmod@plt+0x378>
mov    $0x0,%eax
test   %eax,%eax
je     804b4b8 <fchmod@plt+0x378>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x807f31c,(%esp)
call   *%eax
leave
jmp    804b430 <fchmod@plt+0x2f0>
nop
jmp    804b430 <fchmod@plt+0x2f0>
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%eax
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
mov    %ecx,0x18(%esp)
mov    %ebx,0x1c(%esp)
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    8061f20 <fchmod@plt+0x16de0>
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x806edc4,(%esp)
call   804aa10 <puts@plt>
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
mov    0x8083020,%eax
movl   $0x48,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806ee2c,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806eee0(,%ebx,4),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     804b57c <fchmod@plt+0x43c>
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x806edc8,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
add    $0x1,%ebx
cmp    $0xa,%ebx
jne    804b550 <fchmod@plt+0x410>
mov    0x8083020,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804ae80 <fputc@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
movl   $0x806ef28,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
je     804b5ee <fchmod@plt+0x4ae>
add    $0x5,%eax
mov    %eax,0x8(%esp)
movl   $0x806ef2f,0x4(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,(%esp)
call   80686a0 <fchmod@plt+0x1d560>
test   %eax,%eax
jne    804b6a0 <fchmod@plt+0x560>
mov    %esi,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%ebx
je     804b641 <fchmod@plt+0x501>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x806ef3d,0x4(%esp)
movl   $0x1,(%esp)
lea    0x5(%eax),%edx
mov    %edx,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804b610 <fchmod@plt+0x4d0>
mov    %esi,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%ebx
je     804b68c <fchmod@plt+0x54c>
nop
mov    %ebx,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,0xc(%esp)
movl   $0x806ef44,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804b650 <fchmod@plt+0x510>
movl   $0xa,(%esp)
call   804acc0 <putchar@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
movl   $0x806ef36,0x4(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
jmp    804b5fe <fchmod@plt+0x4be>
xchg   %ax,%ax
nop
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x490,%esp
mov    %gs:0x14,%eax
mov    %eax,0x48c(%esp)
xor    %eax,%eax
test   %ecx,%ecx
je     804b6f6 <fchmod@plt+0x5b6>
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804b7c8 <fchmod@plt+0x688>
movl   $0x806ef4e,0x4(%esp)
mov    %ebx,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804b768 <fchmod@plt+0x628>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
js     804b7c0 <fchmod@plt+0x680>
mov    0x3c(%esp),%edx
and    $0xf000,%edx
cmp    $0x6000,%edx
je     804b790 <fchmod@plt+0x650>
xor    %eax,%eax
cmp    $0x2000,%edx
je     804b7b8 <fchmod@plt+0x678>
mov    0x48c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804b7f4 <fchmod@plt+0x6b4>
add    $0x490,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806ef54,0x4(%esp)
mov    %ebx,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804b7c0 <fchmod@plt+0x680>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
jmp    804b746 <fchmod@plt+0x606>
lea    0x0(%esi),%esi
mov    $0x62,%eax
mov    0x4c(%esp),%ecx
mov    0x50(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
call   8066e00 <fchmod@plt+0x1bcc0>
jmp    804b746 <fchmod@plt+0x606>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x63,%al
jmp    804b795 <fchmod@plt+0x655>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804b746 <fchmod@plt+0x606>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0xc(%esp)
lea    0x8c(%esp),%ebx
movl   $0x0,0x10(%esp)
mov    %edi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebx,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    804b6f6 <fchmod@plt+0x5b6>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   8065af0 <fchmod@plt+0x1a9b0>
test   %eax,%eax
mov    %eax,%edi
je     804b8ba <fchmod@plt+0x77a>
nop
mov    %edi,(%esp)
xor    %ebx,%ebx
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0x806f83c(,%ebx,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     804b8a8 <fchmod@plt+0x768>
add    $0x1,%ebx
cmp    $0x7,%ebx
jne    804b830 <fchmod@plt+0x6f0>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edx
je     804b8a8 <fchmod@plt+0x768>
cmpb   $0x2f,(%edx)
je     804b8a8 <fchmod@plt+0x768>
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   804ab30 <strlen@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
je     804b8d0 <fchmod@plt+0x790>
call   804b0e0 <__ctype_b_loc@plt>
mov    0x18(%esp),%edx
mov    (%eax),%ecx
jmp    804b894 <fchmod@plt+0x754>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804b8d0 <fchmod@plt+0x790>
sub    $0x1,%ebx
movsbl (%edx,%ebx,1),%eax
testb  $0x40,0x1(%ecx,%eax,2)
jne    804b890 <fchmod@plt+0x750>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    804b820 <fchmod@plt+0x6e0>
movl   $0xa,(%esp)
call   804acc0 <putchar@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x806ef5a,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    804b820 <fchmod@plt+0x6e0>
jmp    804b8ba <fchmod@plt+0x77a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x8c,%esp
mov    %eax,(%esp)
lea    0x20(%esp),%edi
call   804af10 <readdir64@plt>
lea    -0x1(%esi),%edx
mov    %edx,0x18(%esp)
test   %eax,%eax
je     804b9ac <fchmod@plt+0x86c>
nop
cmpb   $0x2e,0x13(%eax)
je     804b9a0 <fchmod@plt+0x860>
mov    %ebx,(%esp)
lea    0x13(%eax),%esi
call   804a670 <dirfd@plt>
movl   $0x100,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a870 <__fxstatat64@plt>
test   %eax,%eax
jne    804b9a0 <fchmod@plt+0x860>
mov    0x30(%esp),%eax
test   %eax,%ebp
jne    804b9a0 <fchmod@plt+0x860>
and    $0xf000,%eax
cmp    $0x4000,%eax
mov    %ebx,(%esp)
je     804b9b8 <fchmod@plt+0x878>
call   804a670 <dirfd@plt>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a630 <unlinkat@plt>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    804b938 <fchmod@plt+0x7f8>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   804a670 <dirfd@plt>
movl   $0x90800,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ab50 <openat64@plt>
mov    %eax,(%esp)
call   804aeb0 <fdopendir@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804b9fc <fchmod@plt+0x8bc>
mov    0x18(%esp),%ecx
test   %ecx,%ecx
jle    804b9f0 <fchmod@plt+0x8b0>
mov    %ebp,%edx
call   804b910 <fchmod@plt+0x7d0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804b0b0 <closedir@plt>
mov    %ebx,(%esp)
call   804a670 <dirfd@plt>
movl   $0x200,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a630 <unlinkat@plt>
jmp    804b9a0 <fchmod@plt+0x860>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    $0x4,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x4ac,%esp
mov    %gs:0x14,%eax
mov    %eax,0x49c(%esp)
xor    %eax,%eax
mov    0x4c0(%esp),%ebp
mov    0x4c8(%esp),%ebx
movl   $0x0,0x24(%esp)
movb   $0x0,0x2a(%esp)
movb   $0x0,0x2b(%esp)
movl   $0x0,0x20(%esp)
mov    0x4c4(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x806f860,0xc(%esp)
movl   $0x806ef72,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804be40 <fchmod@plt+0xd00>
sub    $0x50,%eax
cmp    $0x28,%eax
ja     804be00 <fchmod@plt+0xcc0>
jmp    *0x806f798(,%eax,4)
nop
mov    $0x1,%esi
jmp    804ba68 <fchmod@plt+0x928>
nop
movl   $0x806eff3,(%esp)
call   804a810 <unlink@plt>
movl   $0x806f007,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804baed <fchmod@plt+0x9ad>
mov    $0x1,%ecx
mov    $0x200,%edx
call   804b910 <fchmod@plt+0x7d0>
mov    %ebx,(%esp)
call   804b0b0 <closedir@plt>
movl   $0x806f016,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804bb13 <fchmod@plt+0x9d3>
mov    $0x2,%ecx
xor    %edx,%edx
call   804b910 <fchmod@plt+0x7d0>
mov    %ebx,(%esp)
call   804b0b0 <closedir@plt>
movl   $0x806f026,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804bb39 <fchmod@plt+0x9f9>
mov    $0x2,%ecx
xor    %edx,%edx
call   804b910 <fchmod@plt+0x7d0>
mov    %ebx,(%esp)
call   804b0b0 <closedir@plt>
movl   $0x806f035,(%esp)
xor    %ebx,%ebx
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     804bb68 <fchmod@plt+0xa28>
mov    $0x1,%ecx
xor    %edx,%edx
call   804b910 <fchmod@plt+0x7d0>
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %ebx,%eax
mov    0x49c(%esp),%edx
xor    %gs:0x14,%edx
jne    804c3b1 <fchmod@plt+0x1271>
add    $0x4ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8083044,%eax
mov    $0x2,%esi
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x9c(%esp),%eax
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
jmp    804ba68 <fchmod@plt+0x928>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8069340 <fchmod@plt+0x1e200>
test   %eax,%eax
mov    %eax,%esi
je     804bedc <fchmod@plt+0xd9c>
mov    %eax,(%esp)
call   8069b40 <fchmod@plt+0x1ea00>
mov    %esi,(%esp)
call   8069560 <fchmod@plt+0x1e420>
test   %eax,%eax
mov    %eax,%ebx
je     804bc25 <fchmod@plt+0xae5>
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
mov    %eax,%edi
je     804bc17 <fchmod@plt+0xad7>
call   804b5a0 <fchmod@plt+0x460>
mov    %edi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804bbf0 <fchmod@plt+0xab0>
mov    %esi,(%esp)
xor    %ebx,%ebx
call   8069460 <fchmod@plt+0x1e320>
jmp    804bb68 <fchmod@plt+0xa28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f198,(%esp)
xor    %ebx,%ebx
call   804aa10 <puts@plt>
jmp    804bb68 <fchmod@plt+0xa28>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
test   %eax,%eax
jne    804c0ab <fchmod@plt+0xf6b>
mov    0x8083044,%edx
mov    $0x806ef4e,%ecx
mov    %ebp,%eax
call   804b6c0 <fchmod@plt+0x580>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    804ba68 <fchmod@plt+0x928>
mov    0x8083020,%eax
mov    $0x2,%ebx
movl   $0x16,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806ef9f,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
test   %eax,%eax
jne    804c0ab <fchmod@plt+0xf6b>
mov    0x8083044,%edx
mov    $0x806efb6,%ecx
mov    %ebp,%eax
call   804b6c0 <fchmod@plt+0x580>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    804ba68 <fchmod@plt+0x928>
mov    0x8083020,%eax
mov    $0x2,%ebx
movl   $0x12,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806efbb,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
mov    $0x806efce,%edi
mov    $0x9,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804be30 <fchmod@plt+0xcf0>
movzbl (%eax),%ecx
cmp    $0x65,%ecx
mov    %ecx,0x2c(%esp)
je     804be10 <fchmod@plt+0xcd0>
mov    $0x5,%ecx
mov    %eax,%esi
mov    $0x8077022,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     804bee3 <fchmod@plt+0xda3>
mov    $0x806efd7,%edi
mov    $0x8,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804c09f <fchmod@plt+0xf5f>
mov    $0x8076d56,%edi
mov    $0x5,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804c0da <fchmod@plt+0xf9a>
cmpl   $0x61,0x2c(%esp)
jne    804c0e6 <fchmod@plt+0xfa6>
cmpb   $0x6c,0x1(%eax)
jne    804c0e6 <fchmod@plt+0xfa6>
cmpb   $0x6c,0x2(%eax)
jne    804c0e6 <fchmod@plt+0xfa6>
cmpb   $0x0,0x3(%eax)
jne    804c0e6 <fchmod@plt+0xfa6>
mov    $0x4,%edi
xor    %esi,%esi
jmp    804ba68 <fchmod@plt+0x928>
xchg   %ax,%ax
movb   $0x1,0x2b(%esp)
jmp    804ba68 <fchmod@plt+0x928>
lea    0x0(%esi),%esi
mov    0x8083044,%eax
mov    %eax,0x24(%esp)
jmp    804ba68 <fchmod@plt+0x928>
xchg   %ax,%ax
movl   $0x806edc4,(%esp)
xor    %ebx,%ebx
call   804aa10 <puts@plt>
jmp    804bb68 <fchmod@plt+0xa28>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2a(%esp)
jmp    804ba68 <fchmod@plt+0x928>
lea    0x0(%esi),%esi
mov    $0x1,%ebx
jmp    804bb68 <fchmod@plt+0xa28>
lea    0x0(%esi),%esi
cmpb   $0x6e,0x1(%eax)
jne    804bd39 <fchmod@plt+0xbf9>
cmpb   $0x76,0x2(%eax)
jne    804bd39 <fchmod@plt+0xbf9>
cmpb   $0x0,0x3(%eax)
jne    804bd39 <fchmod@plt+0xbf9>
xchg   %ax,%ax
mov    $0x3,%edi
xor    %esi,%esi
jmp    804ba68 <fchmod@plt+0x928>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%esi
je     804bf29 <fchmod@plt+0xde9>
cmp    $0x2,%esi
jne    804beec <fchmod@plt+0xdac>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    804be00 <fchmod@plt+0xcc0>
cmpb   $0x0,0x2a(%esp)
je     804c139 <fchmod@plt+0xff9>
mov    0x24(%esp),%ecx
mov    $0x806ef6c,%eax
mov    %eax,%esi
mov    0x3c(%esp),%eax
mov    0x40(%esp),%edx
movl   $0x806f0d4,0x4(%esp)
test   %ecx,%ecx
cmovne %ecx,%esi
mov    %eax,%ecx
shrd   $0xc,%edx,%ecx
movzbl %al,%ebx
xor    %cl,%cl
or     %ebx,%ecx
mov    %ecx,0x14(%esp)
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
xor    %ebx,%ebx
jmp    804bb68 <fchmod@plt+0xa28>
xor    %edi,%edi
xor    %esi,%esi
jmp    804ba68 <fchmod@plt+0x928>
mov    0x20(%esp),%eax
test   %eax,%eax
je     804c2f6 <fchmod@plt+0x11b6>
cmp    $0x2,%edi
je     804c261 <fchmod@plt+0x1121>
jbe    804c115 <fchmod@plt+0xfd5>
cmp    $0x3,%edi
je     804c184 <fchmod@plt+0x1044>
cmp    $0x4,%edi
jne    804c227 <fchmod@plt+0x10e7>
mov    0x20(%esp),%eax
xor    %ebx,%ebx
call   804b5a0 <fchmod@plt+0x460>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x20(%esp),%esi
test   %esi,%esi
je     804c34a <fchmod@plt+0x120a>
movl   $0x806f638,(%esp)
mov    $0x807176e,%ebx
call   804aa10 <puts@plt>
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
movl   $0x806f0f2,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x806f10d,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
movl   $0x806f066,0x4(%esp)
movl   $0x1,(%esp)
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,(%esp)
call   8065200 <fchmod@plt+0x1a0c0>
movl   $0x806f07b,0x4(%esp)
movl   $0x1,(%esp)
test   %eax,%eax
cmove  %ebx,%eax
mov    %esi,%ebx
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %esi,%eax
mov    $0x806f08d,%edx
call   804b800 <fchmod@plt+0x6c0>
mov    $0x807176e,%esi
jmp    804c086 <fchmod@plt+0xf46>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
movl   $0x806f614,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x806f092,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
movl   $0x806f0a5,0x4(%esp)
movl   $0x1,(%esp)
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   8065200 <fchmod@plt+0x1a0c0>
movl   $0x806f0bb,0x4(%esp)
movl   $0x1,(%esp)
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    $0x806f0ce,%edx
mov    %ebx,%eax
call   804b800 <fchmod@plt+0x6c0>
mov    %ebx,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%ebx
jne    804bff0 <fchmod@plt+0xeb0>
xor    %ebx,%ebx
jmp    804bb68 <fchmod@plt+0xa28>
mov    $0x2,%edi
xor    %esi,%esi
jmp    804ba68 <fchmod@plt+0x928>
mov    0x8083020,%eax
mov    $0x2,%ebx
movl   $0x19,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806ef85,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    $0x1,%edi
xor    %esi,%esi
jmp    804ba68 <fchmod@plt+0x928>
mov    0x8083020,%eax
mov    $0x3,%ebx
movl   $0x13,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806efdf,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
cmp    $0x1,%edi
jne    804c227 <fchmod@plt+0x10e7>
mov    0x20(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %eax,(%esp)
call   804aa10 <puts@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x3c(%esp),%eax
mov    0x40(%esp),%edx
movl   $0x806f0eb,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,%ecx
movzbl %al,%ebx
shrd   $0xc,%edx,%ecx
xor    %cl,%cl
or     %ebx,%ecx
xor    %ebx,%ebx
mov    %ecx,0xc(%esp)
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfff,%eax
and    $0xfffff000,%ecx
or     %eax,%ecx
mov    %ecx,0x8(%esp)
call   804ada0 <__printf_chk@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%ebx
je     804bedc <fchmod@plt+0xd9c>
mov    $0x807176e,%esi
jmp    804c1f0 <fchmod@plt+0x10b0>
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,%ebp
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,(%esp)
mov    %eax,%edi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x806f05b,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
je     804bedc <fchmod@plt+0xd9c>
cmpb   $0x0,0x2a(%esp)
jne    804c1a1 <fchmod@plt+0x1061>
mov    %ebx,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0xc(%esp)
movl   $0x806ef47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
jmp    804c1de <fchmod@plt+0x109e>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
je     804c3e5 <fchmod@plt+0x12a5>
mov    0x20(%esp),%eax
cmpb   $0x0,0x2b(%esp)
mov    %eax,(%esp)
je     804c39a <fchmod@plt+0x125a>
call   8067d60 <fchmod@plt+0x1cc20>
xor    %ebx,%ebx
mov    %eax,(%esp)
call   804aa10 <puts@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%ebx
je     804c2e3 <fchmod@plt+0x11a3>
movzbl 0x2b(%esp),%esi
mov    %ebx,(%esp)
mov    %esi,%eax
test   %al,%al
je     804c2c1 <fchmod@plt+0x1181>
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x8076d4d,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
je     804c2e3 <fchmod@plt+0x11a3>
movl   $0x20,(%esp)
call   804acc0 <putchar@plt>
mov    %esi,%eax
test   %al,%al
mov    %ebx,(%esp)
jne    804c281 <fchmod@plt+0x1141>
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x8076d4d,0x4(%esp)
movl   $0x1,(%esp)
add    $0x5,%eax
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
jmp    804c29e <fchmod@plt+0x115e>
movl   $0xa,(%esp)
xor    %ebx,%ebx
call   804acc0 <putchar@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x8083040,%eax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
je     804c3b6 <fchmod@plt+0x1276>
xor    %ecx,%ecx
mov    %ebp,%eax
call   804b6c0 <fchmod@plt+0x580>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    804bef8 <fchmod@plt+0xdb8>
mov    0x8083020,%eax
mov    $0x4,%ebx
movl   $0x4e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f588,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x8083040,%eax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
je     804c31b <fchmod@plt+0x11db>
xor    %ecx,%ecx
mov    %ebp,%eax
call   804b6c0 <fchmod@plt+0x580>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    804bf35 <fchmod@plt+0xdf5>
mov    0x8083020,%eax
mov    $0x4,%ebx
movl   $0x39,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f5d8,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
call   8067d60 <fchmod@plt+0x1cc20>
xor    %ebx,%ebx
add    $0x5,%eax
mov    %eax,(%esp)
call   804aa10 <puts@plt>
jmp    804bb68 <fchmod@plt+0xa28>
call   804a7c0 <__stack_chk_fail@plt>
mov    0x8083020,%eax
mov    $0x2,%ebx
movl   $0x806f198,0xc(%esp)
movl   $0x806ef32,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804bb68 <fchmod@plt+0xa28>
mov    0x8083020,%eax
mov    $0x5,%ebx
movl   $0x15,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f045,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804bb68 <fchmod@plt+0xa28>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%edi
mov    0x58(%esp),%esi
call   804a7e0 <getuid@plt>
test   %eax,%eax
jne    804c6a0 <fchmod@plt+0x1560>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8058380 <fchmod@plt+0xd240>
mov    %eax,%ecx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    $0x2,%eax
je     804c4e3 <fchmod@plt+0x13a3>
mov    $0x1,%ebx
mov    $0x3c,%ebp
lea    0x0(%esi),%esi
movl   $0x0,0x10(%esp)
movl   $0x806fd20,0xc(%esp)
movl   $0x806f95a,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804c4a0 <fchmod@plt+0x1360>
sub    $0x52,%eax
cmp    $0x22,%eax
ja     804c468 <fchmod@plt+0x1328>
jmp    *0x806fc88(,%eax,4)
mov    0x8083040,%eax
mov    (%esi,%eax,4),%edx
test   %edx,%edx
je     804c702 <fchmod@plt+0x15c2>
mov    0x8083020,%eax
movl   $0xf,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f992,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80581f0 <fchmod@plt+0xd0b0>
mov    %ebx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
test   %eax,%eax
js     804c6d8 <fchmod@plt+0x1598>
mov    %eax,%ebp
jmp    804c468 <fchmod@plt+0x1328>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80583c0 <fchmod@plt+0xd280>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
lea    0x0(%esi),%esi
mov    0x8083044,%edx
movl   $0x3d,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804ab10 <strchr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804c760 <fchmod@plt+0x1620>
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8058450 <fchmod@plt+0xd310>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
nop
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8083044,%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    0x2c(%esp),%edx
cmpb   $0x0,(%edx)
jne    804c735 <fchmod@plt+0x15f5>
test   %eax,%eax
jle    804c735 <fchmod@plt+0x15f5>
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   8058470 <fchmod@plt+0xd330>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
mov    %eax,(%esp)
call   806d240 <fchmod@plt+0x22100>
test   %eax,%eax
mov    0x8083044,%eax
js     804c73a <fchmod@plt+0x15fa>
mov    %eax,(%esp)
call   806d240 <fchmod@plt+0x22100>
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80583a0 <fchmod@plt+0xd260>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806fa54,(%esp)
xor    %ebx,%ebx
call   804aa10 <puts@plt>
jmp    804c468 <fchmod@plt+0x1328>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80584c0 <fchmod@plt+0xd380>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80583f0 <fchmod@plt+0xd2b0>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8058420 <fchmod@plt+0xd2e0>
sar    $0x1f,%eax
mov    %eax,%ebx
and    $0x2,%ebx
jmp    804c468 <fchmod@plt+0x1328>
lea    0x0(%esi),%esi
mov    0x8083020,%eax
movl   $0x19,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f940,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8083020,%eax
movl   $0x16,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f97b,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804c468 <fchmod@plt+0x1328>
cmp    $0x1,%eax
jne    804c4d5 <fchmod@plt+0x1395>
mov    0x8083020,%eax
movl   $0xf,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f9a2,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804c4d5 <fchmod@plt+0x1395>
mov    0x8083044,%eax
mov    %eax,0xc(%esp)
mov    0x8083020,%eax
movl   $0x806f966,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804c4d5 <fchmod@plt+0x1395>
mov    0x8083020,%eax
mov    %edx,0xc(%esp)
movl   $0x806fa2c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804c4d5 <fchmod@plt+0x1395>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
cmp    $0xf,%eax
jne    804c7a8 <fchmod@plt+0x1668>
movb   $0x1,0x8083049
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%eax
je     804c799 <fchmod@plt+0x1659>
repz ret
nop
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x4c,%esp
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   804af70 <clock_gettime@plt>
mov    %ebx,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    %ebx,(%esp)
mov    %eax,0x2c(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8065650 <fchmod@plt+0x1a510>
mov    0x2c(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %esi,0x8(%esp)
movl   $0x806fdf0,0x4(%esp)
mov    %edx,0x20(%esp)
mov    $0x10624dd3,%edx
movl   $0x1,(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%eax
mull   0x3c(%esp)
mov    0x38(%esp),%eax
shr    $0x6,%edx
mov    %eax,0xc(%esp)
sar    $0x1f,%eax
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
call   804ada0 <__printf_chk@plt>
test   %edi,%edi
jne    804c848 <fchmod@plt+0x1708>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%ebx
je     804c894 <fchmod@plt+0x1754>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,0xc(%esp)
movl   $0x806ef47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804c858 <fchmod@plt+0x1718>
movl   $0xa,(%esp)
call   804acc0 <putchar@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3cc,%esp
mov    0x3e0(%esp),%ebp
lea    0x1bc(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x3bc(%esp)
xor    %eax,%eax
lea    0x48(%esp),%eax
mov    0x3e4(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x3e8(%esp),%ebx
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x64(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
movb   $0x0,0x18(%esp)
movb   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8070240,0xc(%esp)
movl   $0x806fe0e,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804ca78 <fchmod@plt+0x1938>
sub    $0x65,%eax
cmp    $0x10,%eax
ja     804ca68 <fchmod@plt+0x1928>
jmp    *0x80701e8(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x1c(%esp)
jmp    804c924 <fchmod@plt+0x17e4>
nop
movl   $0x806fecc,(%esp)
xor    %ebx,%ebx
call   804aa10 <puts@plt>
xor    %ebp,%ebp
xor    %edi,%edi
mov    %edi,(%esp)
call   806b630 <fchmod@plt+0x204f0>
mov    %ebp,(%esp)
call   806b630 <fchmod@plt+0x204f0>
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x64(%esp),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    %ebx,%eax
mov    0x3bc(%esp),%edx
xor    %gs:0x14,%edx
jne    804d0cf <fchmod@plt+0x1f8f>
add    $0x3cc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x20(%esp)
jmp    804c924 <fchmod@plt+0x17e4>
lea    0x0(%esi),%esi
movb   $0x1,0x18(%esp)
jmp    804c924 <fchmod@plt+0x17e4>
lea    0x0(%esi),%esi
mov    0x8083044,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x64(%esp),%eax
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
jmp    804c924 <fchmod@plt+0x17e4>
lea    0x0(%esi),%esi
mov    0x8083044,%eax
movl   $0x200,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     804ca4b <fchmod@plt+0x190b>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
jmp    804c924 <fchmod@plt+0x17e4>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804c97e <fchmod@plt+0x183e>
lea    0x0(%esi),%esi
cmpb   $0x1,0x18(%esp)
jne    804cc48 <fchmod@plt+0x1b08>
lea    0x130(%esp),%ebx
xor    %eax,%eax
mov    %ebx,%edi
mov    $0x23,%ecx
rep stos %eax,%es:(%edi)
lea    0x134(%esp),%eax
mov    %eax,(%esp)
movl   $0x804c790,0x130(%esp)
08
call   804ae10 <sigemptyset@plt>
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x2,(%esp)
movl   $0x10000000,0x1b4(%esp)
10
call   804af80 <sigaction@plt>
mov    %ebx,0x4(%esp)
lea    0xb0(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0xf,(%esp)
call   804af80 <sigaction@plt>
mov    %ebx,(%esp)
call   804ae10 <sigemptyset@plt>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   804abd0 <sigaddset@plt>
movl   $0xf,0x4(%esp)
mov    %ebx,(%esp)
call   804abd0 <sigaddset@plt>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   804a650 <sigprocmask@plt>
movl   $0x80000,(%esp)
call   804b080 <epoll_create1@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
js     804cda3 <fchmod@plt+0x1c63>
movl   $0x807005c,(%esp)
xor    %edi,%edi
call   804aa10 <puts@plt>
cmpb   $0x0,0x18(%esp)
movl   $0xffffffff,0x24(%esp)
jne    804ce37 <fchmod@plt+0x1cf7>
cmpb   $0x0,0x1c(%esp)
jne    804cc6f <fchmod@plt+0x1b2f>
movl   $0xffffffff,0x18(%esp)
xor    %ebp,%ebp
movl   $0xa,(%esp)
call   804acc0 <putchar@plt>
movzbl 0x20(%esp),%eax
mov    %edi,0x2c(%esp)
mov    %ebp,0x1c(%esp)
mov    %eax,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x8083049
jne    804cd88 <fchmod@plt+0x1c48>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,(%esp)
call   804add0 <epoll_wait@plt>
test   %eax,%eax
mov    %eax,%edi
js     804cd58 <fchmod@plt+0x1c18>
xor    %esi,%esi
test   %eax,%eax
lea    0x84(%esp),%ebx
je     804cba0 <fchmod@plt+0x1a60>
mov    (%ebx),%eax
cmp    0x18(%esp),%eax
je     804cc14 <fchmod@plt+0x1ad4>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x24(%esp)
je     804cd18 <fchmod@plt+0x1bd8>
add    $0x1,%esi
add    $0xc,%ebx
cmp    %edi,%esi
je     804cba0 <fchmod@plt+0x1a60>
mov    (%ebx),%eax
cmp    0x18(%esp),%eax
jne    804cbf8 <fchmod@plt+0x1ab8>
testb  $0x1,-0x4(%ebx)
je     804cbf8 <fchmod@plt+0x1ab8>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806b6c0 <fchmod@plt+0x20580>
test   %eax,%eax
mov    %eax,%ebp
je     804cc02 <fchmod@plt+0x1ac2>
mov    0x20(%esp),%ecx
mov    $0x806fe92,%edx
call   804c7b0 <fchmod@plt+0x1670>
mov    %ebp,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
jmp    804cc02 <fchmod@plt+0x1ac2>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1c(%esp),%ecx
mov    $0x1,%eax
movzbl 0x18(%esp),%ebx
mov    %ecx,%edx
xor    $0x1,%dl
cmovne %eax,%ebx
cmovne %eax,%ecx
mov    %bl,0x18(%esp)
mov    %cl,0x1c(%esp)
jmp    804ca83 <fchmod@plt+0x1943>
mov    %ebp,(%esp)
movl   $0x806fe70,0x4(%esp)
call   806b080 <fchmod@plt+0x1ff40>
test   %eax,%eax
mov    %eax,%ebp
je     804cfd6 <fchmod@plt+0x1e96>
movl   $0x8000000,0x4(%esp)
mov    %eax,(%esp)
call   806b5e0 <fchmod@plt+0x204a0>
mov    %ebp,(%esp)
call   806b6a0 <fchmod@plt+0x20560>
mov    %eax,0x18(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%ebx
jne    804ccd2 <fchmod@plt+0x1b92>
jmp    804cdd6 <fchmod@plt+0x1c96>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
je     804cdd6 <fchmod@plt+0x1c96>
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%esi
call   806bdb0 <fchmod@plt+0x20c70>
test   %eax,%eax
jns    804ccc0 <fchmod@plt+0x1b80>
mov    0x8083020,%eax
mov    %esi,0xc(%esp)
movl   $0x80700b0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804ccc0 <fchmod@plt+0x1b80>
nop
testb  $0x1,-0x4(%ebx)
je     804cc02 <fchmod@plt+0x1ac2>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806b6c0 <fchmod@plt+0x20580>
test   %eax,%eax
mov    %eax,%ebp
je     804cc02 <fchmod@plt+0x1ac2>
mov    0x20(%esp),%ecx
mov    $0x806fe99,%edx
call   804c7b0 <fchmod@plt+0x1670>
mov    %ebp,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
jmp    804cc02 <fchmod@plt+0x1ac2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     804cba0 <fchmod@plt+0x1a60>
mov    0x8083020,%eax
movl   $0x80701a0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804cba0 <fchmod@plt+0x1a60>
mov    0x2c(%esp),%edi
xor    %ebx,%ebx
mov    0x1c(%esp),%ebp
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804b0a0 <close@plt>
jmp    804c982 <fchmod@plt+0x1842>
movl   $0x806fe18,0x10(%esp)
xor    %ebx,%ebx
movl   $0x807022c,0xc(%esp)
movl   $0xa5,0x8(%esp)
movl   $0x806fe35,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804c97e <fchmod@plt+0x183e>
mov    %ebp,(%esp)
call   806b470 <fchmod@plt+0x20330>
test   %eax,%eax
js     804cfa7 <fchmod@plt+0x1e67>
lea    0x30(%esp),%eax
mov    0x18(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,0x38(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
movl   $0x1,0x30(%esp)
mov    %ecx,0x34(%esp)
call   804a980 <epoll_ctl@plt>
test   %eax,%eax
js     804d067 <fchmod@plt+0x1f27>
movl   $0x806fe77,(%esp)
call   804aa10 <puts@plt>
jmp    804cb7f <fchmod@plt+0x1a3f>
movl   $0x807088b,0x4(%esp)
mov    %ebp,(%esp)
call   806b080 <fchmod@plt+0x1ff40>
test   %eax,%eax
mov    %eax,%edi
je     804d036 <fchmod@plt+0x1ef6>
movl   $0x8000000,0x4(%esp)
mov    %eax,(%esp)
call   806b5e0 <fchmod@plt+0x204a0>
mov    %edi,(%esp)
call   806b6a0 <fchmod@plt+0x20560>
mov    %eax,0x24(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    804ce96 <fchmod@plt+0x1d56>
jmp    804cedf <fchmod@plt+0x1d9f>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     804cedf <fchmod@plt+0x1d9f>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,(%esp)
mov    %eax,%ebx
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   806bdb0 <fchmod@plt+0x20c70>
test   %eax,%eax
jns    804ce88 <fchmod@plt+0x1d48>
mov    0x8083020,%eax
mov    %ebx,0xc(%esp)
movl   $0x80700b0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804ce88 <fchmod@plt+0x1d48>
lea    0x64(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%ebx
jne    804cf06 <fchmod@plt+0x1dc6>
jmp    804cf43 <fchmod@plt+0x1e03>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
je     804cf43 <fchmod@plt+0x1e03>
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%esi
call   806be00 <fchmod@plt+0x20cc0>
test   %eax,%eax
jns    804cef8 <fchmod@plt+0x1db8>
mov    0x8083020,%eax
mov    %esi,0xc(%esp)
movl   $0x80700e0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804cef8 <fchmod@plt+0x1db8>
mov    %edi,(%esp)
call   806b470 <fchmod@plt+0x20330>
test   %eax,%eax
lea    0x0(%esi),%esi
js     804d005 <fchmod@plt+0x1ec5>
lea    0x3c(%esp),%eax
mov    0x24(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,0x44(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
movl   $0x1,0x3c(%esp)
mov    %ecx,0x40(%esp)
call   804a980 <epoll_ctl@plt>
test   %eax,%eax
js     804d09a <fchmod@plt+0x1f5a>
movl   $0x8070134,(%esp)
call   804aa10 <puts@plt>
jmp    804cb6a <fchmod@plt+0x1a2a>
mov    0x8083020,%eax
mov    $0x4,%ebx
movl   $0x2c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8070170,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804cd92 <fchmod@plt+0x1c52>
mov    0x8083020,%eax
mov    $0x3,%ebx
movl   $0x27,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8070088,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804cd92 <fchmod@plt+0x1c52>
mov    0x8083020,%eax
mov    $0x2,%ebx
xor    %ebp,%ebp
movl   $0x2a,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8070108,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804cd92 <fchmod@plt+0x1c52>
mov    0x8083020,%eax
mov    $0x1,%ebx
xor    %ebp,%ebp
movl   $0x27,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8070088,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804cd92 <fchmod@plt+0x1c52>
movl   $0x806fe53,0x10(%esp)
xor    %ebx,%ebx
movl   $0x807022c,0xc(%esp)
movl   $0xf3,0x8(%esp)
movl   $0x806fe35,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804cd92 <fchmod@plt+0x1c52>
movl   $0x806fe53,0x10(%esp)
xor    %ebx,%ebx
xor    %ebp,%ebp
movl   $0x807022c,0xc(%esp)
movl   $0xcf,0x8(%esp)
movl   $0x806fe35,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804cd92 <fchmod@plt+0x1c52>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movzbl (%eax),%eax
movzbl (%edx),%edx
sub    %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
cmpb   $0x0,0x8(%edx)
mov    %eax,0x8(%esp)
je     804d147 <fchmod@plt+0x2007>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%eax
mov    0x4(%eax,%ebx,1),%edx
mov    0x8(%esp),%eax
call   804d100 <fchmod@plt+0x1fc0>
add    $0x1,%esi
movzbl 0x8(%ebp),%ecx
adc    $0x0,%edi
xor    %edx,%edx
add    $0x8,%ebx
cmp    %edi,%edx
jae    804d1e0 <fchmod@plt+0x20a0>
mov    0x8(%esp),%edi
mov    0x8(%edi),%eax
mov    0xc(%edi),%edx
add    $0x18,%eax
adc    $0x0,%edx
xor    %esi,%esi
mov    %eax,0x8(%edi)
mov    %edx,0xc(%edi)
xor    %edi,%edi
cmpb   $0x0,0x8(%ebp)
je     804d18c <fchmod@plt+0x204c>
nop
mov    0x8(%esp),%ecx
add    $0x10,%eax
adc    $0x0,%edx
add    $0x1,%esi
adc    $0x0,%edi
mov    %eax,0x8(%ecx)
mov    %edx,0xc(%ecx)
movzbl 0x8(%ebp),%ebx
mov    %ebx,0xc(%esp)
xor    %ebx,%ebx
cmp    %edi,%ebx
jae    804d1f8 <fchmod@plt+0x20b8>
mov    0x10(%ebp),%eax
test   %eax,%eax
je     804d1c7 <fchmod@plt+0x2087>
mov    0x8(%esp),%eax
xor    %esi,%esi
xor    %edi,%edi
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%ebx
add    $0x10,%eax
adc    $0x0,%edx
add    $0x1,%esi
adc    $0x0,%edi
mov    %eax,0x8(%ebx)
mov    %edx,0xc(%ebx)
xor    %ebx,%ebx
mov    0x10(%ebp),%ecx
cmp    %edi,%ebx
jae    804d1d0 <fchmod@plt+0x2090>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
ja     804d1a8 <fchmod@plt+0x2068>
cmp    %esi,%ecx
ja     804d1a8 <fchmod@plt+0x2068>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
ja     804d120 <fchmod@plt+0x1fe0>
cmp    %esi,%ecx
jbe    804d147 <fchmod@plt+0x2007>
xchg   %ax,%ax
jmp    804d120 <fchmod@plt+0x1fe0>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
ja     804d168 <fchmod@plt+0x2028>
cmp    %esi,0xc(%esp)
lea    0x0(%esi),%esi
jbe    804d18c <fchmod@plt+0x204c>
jmp    804d168 <fchmod@plt+0x2028>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x8(%eax)
je     804d247 <fchmod@plt+0x2107>
nop
mov    0x4(%esi),%eax
mov    0x4(%eax,%ebx,8),%eax
add    $0x1,%ebx
call   804d220 <fchmod@plt+0x20e0>
movzbl 0x8(%esi),%eax
cmp    %ebx,%eax
ja     804d230 <fchmod@plt+0x20f0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0xc(%esp),%eax
mov    0x8(%esp),%edx
mov    0x4(%eax),%eax
mov    (%edx),%ecx
mov    0x4(%esp),%edx
mov    (%eax),%eax
add    %eax,%ecx
mov    %ecx,0x8(%esp)
add    (%edx),%eax
mov    %eax,0x4(%esp)
jmp    804a550 <strcmp@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
movl   $0x0,0x44(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x18,%eax
jb     804d2b7 <fchmod@plt+0x2177>
mov    (%esi),%eax
xor    %edx,%edx
add    0x8(%edi),%eax
mov    0x10(%esi),%ebx
adc    0xc(%edi),%edx
mov    %eax,0x44(%esp)
movzbl 0x8(%esi),%eax
movl   $0x0,0x58(%esp)
mov    %edx,0x48(%esp)
mov    %ebx,0x54(%esp)
test   %al,%al
mov    %al,0x4c(%esp)
movl   $0x0,0x24(%esp)
jne    804d407 <fchmod@plt+0x22c7>
mov    (%edi),%eax
mov    %eax,(%esp)
call   804aa90 <ftello64@plt>
movl   $0x1,0x8(%esp)
movl   $0x18,0x4(%esp)
mov    %eax,0x28(%esp)
mov    (%edi),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0xc(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
addl   $0x1,0x10(%edi)
adcl   $0x0,0x14(%edi)
movzbl 0x8(%esi),%eax
test   %al,%al
jne    804d4c0 <fchmod@plt+0x2380>
mov    0x10(%esi),%eax
test   %eax,%eax
je     804d3d1 <fchmod@plt+0x2291>
xor    %ecx,%ecx
xor    %ebx,%ebx
mov    %esi,%eax
mov    %ebx,%esi
mov    %ecx,%ebx
mov    %eax,%ecx
nop
lea    0x0(,%ebx,8),%ebp
xor    %edx,%edx
add    0xc(%ecx),%ebp
mov    %ecx,0x18(%esp)
mov    0x0(%ebp),%eax
add    0x8(%edi),%eax
adc    0xc(%edi),%edx
mov    %eax,0x34(%esp)
mov    %edx,0x38(%esp)
mov    0x4(%ebp),%eax
xor    %edx,%edx
add    0x8(%edi),%eax
adc    0xc(%edi),%edx
movl   $0x1,0x8(%esp)
mov    %eax,0x3c(%esp)
mov    (%edi),%eax
movl   $0x10,0x4(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0xc(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
mov    0x18(%esp),%ecx
addl   $0x1,0x20(%edi)
adcl   $0x0,0x24(%edi)
add    $0x1,%ebx
adc    $0x0,%esi
xor    %edx,%edx
cmp    %esi,%edx
mov    0x10(%ecx),%eax
jae    804d3f8 <fchmod@plt+0x22b8>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    0x5c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    804d506 <fchmod@plt+0x23c6>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
ja     804d360 <fchmod@plt+0x2220>
cmp    %ebx,%eax
jbe    804d3d1 <fchmod@plt+0x2291>
jmp    804d360 <fchmod@plt+0x2220>
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804d4f7 <fchmod@plt+0x23b7>
mov    0x24(%esp),%ebx
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %ebx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    0x0(,%eax,8),%ebx
mov    0x4(%esi),%eax
mov    0x4(%eax,%ebx,1),%edx
mov    %edi,%eax
call   804d2a0 <fchmod@plt+0x2160>
test   %edx,%edx
js     804d498 <fchmod@plt+0x2358>
mov    0x4(%esi),%ecx
addl   $0x1,0x18(%esp)
adcl   $0x0,0x1c(%esp)
add    $0x10,%ebp
movzbl (%ecx,%ebx,1),%ecx
xor    %ebx,%ebx
mov    %eax,-0x8(%ebp)
mov    %edx,-0x4(%ebp)
mov    %cl,-0x10(%ebp)
movzbl 0x8(%esi),%eax
cmp    0x1c(%esp),%ebx
jb     804d300 <fchmod@plt+0x21c0>
ja     804d440 <fchmod@plt+0x2300>
cmp    0x18(%esp),%eax
jbe    804d300 <fchmod@plt+0x21c0>
jmp    804d440 <fchmod@plt+0x2300>
mov    %eax,0x28(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x28(%esp),%eax
mov    0x18(%esp),%edx
jmp    804d3d9 <fchmod@plt+0x2299>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
mov    0x24(%esp),%ebx
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ebx,(%esp)
call   804a910 <fwrite@plt>
movzbl 0x8(%esi),%eax
xor    %edx,%edx
add    %eax,0x18(%edi)
adc    %edx,0x1c(%edi)
mov    %ebx,(%esp)
call   804a690 <free@plt>
jmp    804d348 <fchmod@plt+0x2208>
mov    $0xfffffff4,%eax
mov    $0xffffffff,%edx
jmp    804d3d9 <fchmod@plt+0x2299>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    %edx,0x1c(%esp)
mov    0x48(%esp),%ebp
movzbl (%esi),%eax
lea    0x8(,%eax,8),%eax
mov    %eax,0x4(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     804d5a0 <fchmod@plt+0x2460>
mov    0x1c(%esp),%edx
mov    %ebp,%ecx
mov    %eax,(%ebx)
addl   $0x1,(%edx)
movzbl (%esi),%edx
mov    (%ebx),%eax
mov    %cl,(%eax,%edx,8)
mov    0x44(%esp),%ecx
movzbl (%esi),%edx
mov    (%ebx),%eax
mov    %ecx,0x4(%eax,%edx,8)
movzbl (%esi),%eax
add    $0x1,%eax
mov    %al,(%esi)
movzbl %al,%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
movl   $0x804d0e0,0xc(%esp)
movl   $0x8,0x8(%esp)
mov    %eax,(%esp)
call   804af20 <qsort@plt>
xor    %eax,%eax
addl   $0x1,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff4,%eax
jmp    804d591 <fchmod@plt+0x2451>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8062b00 <fchmod@plt+0x179c0>
mov    %eax,%esi
test   %esi,%esi
js     804d67e <fchmod@plt+0x253e>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8062b00 <fchmod@plt+0x179c0>
test   %eax,%eax
mov    %eax,%edx
js     804d67e <fchmod@plt+0x253e>
mov    (%edi),%eax
test   %eax,%eax
jne    804d688 <fchmod@plt+0x2548>
xor    %eax,%eax
lea    0x8(,%eax,8),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     804d6df <fchmod@plt+0x259f>
addl   $0x1,0x10(%ebx)
mov    0x1c(%esp),%edx
mov    %eax,0x0(%ebp)
mov    (%edi),%ecx
mov    %esi,(%eax,%ecx,8)
mov    0x0(%ebp),%eax
mov    (%edi),%ecx
mov    %edx,0x4(%eax,%ecx,8)
mov    (%edi),%eax
mov    %ebx,0x10(%esp)
movl   $0x804d270,0xc(%esp)
movl   $0x8,0x8(%esp)
add    $0x1,%eax
mov    %eax,(%edi)
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804ab80 <qsort_r@plt>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebx,0x14(%esp)
movl   $0x804d270,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x2c(%esp)
mov    %edx,0x1c(%esp)
mov    %esi,0x28(%esp)
mov    %eax,0x4(%esp)
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   8064950 <fchmod@plt+0x19810>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804d6d8 <fchmod@plt+0x2598>
mov    %edx,0x4(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
jmp    804d617 <fchmod@plt+0x24d7>
mov    $0xfffffff4,%eax
jmp    804d67e <fchmod@plt+0x253e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x5c,%esp
movl   $0x3d,0x4(%esp)
mov    0x70(%esp),%ebx
mov    %ecx,(%esp)
mov    %eax,0x30(%esp)
mov    %ecx,0x48(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     804da9f <fchmod@plt+0x295f>
lea    0x1(%eax),%edi
mov    %edi,0x4c(%esp)
mov    0x48(%esp),%edi
movb   $0x0,(%eax)
cmpb   $0x0,(%edi)
je     804da5a <fchmod@plt+0x291a>
cmpb   $0x0,0x1(%eax)
je     804da5a <fchmod@plt+0x291a>
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
mov    0x30(%esp),%ebx
lea    0xc(%ebx),%esi
add    $0x8,%ebx
mov    %esi,0x3c(%esp)
test   %eax,%eax
mov    %eax,0x44(%esp)
mov    %ebx,0x40(%esp)
je     804d9d2 <fchmod@plt+0x2892>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x28(%esp)
mov    %eax,0x34(%esp)
mov    0x30(%esp),%eax
mov    (%eax),%ebp
mov    %ebp,0x2c(%esp)
xchg   %ax,%ax
mov    0x2c(%esp),%eax
mov    (%eax),%edi
mov    0x30(%esp),%eax
mov    0x4(%eax),%eax
mov    (%eax),%ebx
add    %edi,%ebx
movzbl (%ebx),%edx
mov    %ebx,%eax
xor    %ebx,%ebx
test   %dl,%dl
je     804d8ad <fchmod@plt+0x276d>
movzbl %dl,%ebp
mov    0x34(%esp),%edx
xor    %ebx,%ebx
add    0x28(%esp),%edx
movsbl (%edx),%ecx
cmp    %ecx,%ebp
jne    804d7db <fchmod@plt+0x269b>
add    $0x1,%ebx
movzbl (%eax,%ebx,1),%ecx
lea    (%edi,%ebx,1),%esi
test   %cl,%cl
je     804d8ad <fchmod@plt+0x276d>
movzbl %cl,%ebp
movsbl (%edx,%ebx,1),%ecx
cmp    %ecx,%ebp
je     804d7bc <fchmod@plt+0x267c>
mov    %esi,%edi
movl   $0x1,0x4(%esp)
movl   $0x14,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804da1d <fchmod@plt+0x28dd>
mov    0x2c(%esp),%ecx
add    $0x1,%edi
mov    %edi,(%eax)
mov    0x4(%ecx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ecx),%eax
mov    %al,0x8(%esi)
mov    0xc(%ecx),%eax
mov    %eax,0xc(%esi)
mov    0x10(%ecx),%eax
mov    %eax,0x10(%esi)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    0x4(%eax),%eax
mov    (%eax),%eax
add    (%ecx),%eax
mov    %eax,(%esp)
call   804a840 <__strndup@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x38(%esp)
je     804da25 <fchmod@plt+0x28e5>
mov    0x30(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%edx),%eax
mov    %eax,(%esp)
call   8062b00 <fchmod@plt+0x179c0>
test   %eax,%eax
js     804da25 <fchmod@plt+0x28e5>
mov    0x2c(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %eax,(%ecx)
mov    %ecx,%eax
add    $0x4,%ecx
add    $0x8,%eax
movl   $0x0,(%ecx)
movb   $0x0,0x4(%ecx)
movl   $0x0,0x8(%ecx)
movl   $0x0,0xc(%ecx)
mov    %eax,(%esp)
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
call   804d510 <fchmod@plt+0x23d0>
test   %eax,%eax
jne    804da25 <fchmod@plt+0x28e5>
mov    %edi,(%esp)
call   804a690 <free@plt>
mov    0x34(%esp),%eax
add    0x28(%esp),%ebx
mov    %ebx,0x38(%esp)
movzbl (%eax,%ebx,1),%ebx
test   %bl,%bl
je     804da3e <fchmod@plt+0x28fe>
mov    0x2c(%esp),%eax
xor    %ecx,%ecx
mov    0x4(%eax),%edi
movzbl 0x8(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %ecx,%eax
jbe    804d921 <fchmod@plt+0x27e1>
lea    (%ecx,%eax,1),%edx
mov    %ebx,%ebp
shr    %edx
lea    (%edi,%edx,8),%esi
movzbl (%esi),%eax
sub    %eax,%ebp
jns    804d9f4 <fchmod@plt+0x28b4>
mov    %edi,0x28(%esp)
jmp    804d91d <fchmod@plt+0x27dd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%esi
lea    (%edx,%ecx,1),%eax
mov    %ebx,%edi
shr    %eax
lea    (%esi,%eax,8),%esi
movzbl (%esi),%ebp
sub    %ebp,%edi
mov    %edi,%ebp
jns    804d9e0 <fchmod@plt+0x28a0>
mov    %eax,%edx
cmp    %edx,%ecx
jb     804d900 <fchmod@plt+0x27c0>
movl   $0x1,0x4(%esp)
mov    0x2c(%esp),%ebp
mov    %ebx,%edi
movl   $0x14,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d9ba <fchmod@plt+0x287a>
mov    0x34(%esp),%eax
mov    0x38(%esp),%esi
lea    0x1(%eax,%esi,1),%esi
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8062b00 <fchmod@plt+0x179c0>
test   %eax,%eax
js     804da4d <fchmod@plt+0x290d>
mov    %eax,(%ebx)
lea    0x8(%ebp),%eax
mov    0x3c(%esp),%edx
mov    %eax,(%esp)
mov    0x40(%esp),%eax
lea    0x4(%ebp),%ecx
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
call   804d510 <fchmod@plt+0x23d0>
test   %eax,%eax
jne    804da4d <fchmod@plt+0x290d>
lea    0x10(%ebx),%ecx
lea    0xc(%ebx),%edx
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804d5b0 <fchmod@plt+0x2470>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,0x44(%esp)
jne    804d764 <fchmod@plt+0x2624>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    0x28(%esp),%edi
je     804d9fe <fchmod@plt+0x28be>
lea    0x1(%eax),%ecx
mov    %edx,0x28(%esp)
jmp    804d8d6 <fchmod@plt+0x2796>
test   %ebp,%ebp
mov    %edx,%eax
mov    0x28(%esp),%edx
jne    804d9e8 <fchmod@plt+0x28a8>
mov    0x4(%esi),%eax
test   %eax,%eax
je     804d921 <fchmod@plt+0x27e1>
mov    0x38(%esp),%esi
mov    %eax,0x2c(%esp)
add    $0x1,%esi
mov    %esi,0x28(%esp)
jmp    804d788 <fchmod@plt+0x2648>
movl   $0x0,0x38(%esp)
mov    %esi,(%esp)
call   804a690 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    804d9ba <fchmod@plt+0x287a>
mov    0x2c(%esp),%ebp
lea    0x10(%ebp),%ecx
lea    0xc(%ebp),%edx
jmp    804d9a2 <fchmod@plt+0x2862>
mov    %ebx,(%esp)
call   804a690 <free@plt>
jmp    804d9ba <fchmod@plt+0x287a>
mov    0x48(%esp),%eax
mov    %ebx,0x18(%esp)
movl   $0x8070308,0x10(%esp)
movl   $0x8070789,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x1a7,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x5c,%esp
mov    $0xffffffea,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x48(%esp),%eax
mov    %ebx,0x18(%esp)
movl   $0x80702d0,0x10(%esp)
movl   $0x8070789,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x19f,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x5c,%esp
mov    $0xffffffea,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x85c,%esp
mov    %ecx,0x28(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x84c(%esp)
xor    %ecx,%ecx
lea    0x30(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x2c(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
movl   $0x807586b,0x4(%esp)
mov    %edi,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804dd7c <fchmod@plt+0x2c3c>
mov    $0x2,%edi
lea    0x4c(%esp),%esi
nop
mov    %ebp,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %esi,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     804dcc0 <fchmod@plt+0x2b80>
cmpb   $0x23,0x4c(%esp)
je     804db50 <fchmod@plt+0x2a10>
movl   $0x23,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     804db8a <fchmod@plt+0x2a4a>
movb   $0x0,(%eax)
mov    %esi,%ebx
mov    (%ebx),%edx
add    $0x4,%ebx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804db8c <fchmod@plt+0x2a4c>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ebx),%edx
cmove  %edx,%ebx
add    %al,%al
sbb    $0x3,%ebx
sub    %esi,%ebx
je     804dbdd <fchmod@plt+0x2a9d>
call   804b0e0 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    804dbce <fchmod@plt+0x2a8e>
nop
test   %eax,%eax
je     804dc28 <fchmod@plt+0x2ae8>
mov    %eax,%ebx
movsbl -0x1(%esi,%ebx,1),%edx
lea    -0x1(%ebx),%eax
testb  $0x20,0x1(%ecx,%edx,2)
jne    804dbc8 <fchmod@plt+0x2a88>
cmp    $0x1,%edi
movb   $0x0,0x4c(%esp,%ebx,1)
je     804dc34 <fchmod@plt+0x2af4>
cmp    $0x2,%edi
jne    804dc90 <fchmod@plt+0x2b50>
test   %ebx,%ebx
je     804db50 <fchmod@plt+0x2a10>
cmpb   $0x20,0x4c(%esp)
je     804dd3f <fchmod@plt+0x2bff>
lea    0x30(%esp),%eax
xor    %edi,%edi
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
jmp    804db50 <fchmod@plt+0x2a10>
lea    0x0(%esi),%esi
xor    %ebx,%ebx
cmp    $0x1,%edi
movb   $0x0,0x4c(%esp,%ebx,1)
jne    804dbe7 <fchmod@plt+0x2aa7>
test   %ebx,%ebx
je     804dc77 <fchmod@plt+0x2b37>
cmpb   $0x20,0x4c(%esp)
je     804dc9f <fchmod@plt+0x2b5f>
mov    0x28(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x8070398,0x10(%esp)
movl   $0x8070795,0xc(%esp)
mov    %eax,0x18(%esp)
movl   $0x1ff,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    0x30(%esp),%eax
mov    $0x2,%edi
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
jmp    804db50 <fchmod@plt+0x2a10>
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     804dcf5 <fchmod@plt+0x2bb5>
cmpb   $0x20,0x4c(%esp)
jne    804dc03 <fchmod@plt+0x2ac3>
mov    0x28(%esp),%eax
mov    %esi,%ecx
mov    $0x1,%edi
lea    0x30(%esp),%edx
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
call   804d6f0 <fchmod@plt+0x25b0>
jmp    804db50 <fchmod@plt+0x2a10>
nop
mov    %ebp,(%esp)
call   804a730 <fclose@plt>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
xor    %eax,%eax
mov    0x84c(%esp),%edi
xor    %gs:0x14,%edi
jne    804dd8a <fchmod@plt+0x2c4a>
add    $0x85c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%eax
mov    $0x2,%edi
movl   $0x8070364,0x10(%esp)
movl   $0x8070795,0xc(%esp)
movl   $0x1e5,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
jmp    804db50 <fchmod@plt+0x2a10>
mov    0x28(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x8070334,0x10(%esp)
movl   $0x8070795,0xc(%esp)
mov    %eax,0x18(%esp)
movl   $0x1da,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804db50 <fchmod@plt+0x2a10>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    804dcd6 <fchmod@plt+0x2b96>
call   804a7c0 <__stack_chk_fail@plt>
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    0xf4(%esp),%esi
mov    0xf8(%esp),%ebx
movl   $0x807176e,0x30(%esp)
mov    %eax,0x3c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0xcc(%esp)
xor    %eax,%eax
movl   $0x0,0x38(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80707c0,0xc(%esp)
movl   $0x8070698,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804de78 <fchmod@plt+0x2d38>
cmp    $0x72,%eax
je     804de58 <fchmod@plt+0x2d18>
jle    804de20 <fchmod@plt+0x2ce0>
cmp    $0x74,%eax
lea    0x0(%esi,%eiz,1),%esi
je     804de68 <fchmod@plt+0x2d28>
cmp    $0x75,%eax
cmove  %ebp,%edi
jmp    804ddd9 <fchmod@plt+0x2c99>
lea    0x0(%esi),%esi
cmp    $0x68,%eax
jne    804ddd9 <fchmod@plt+0x2c99>
movl   $0x80703c4,(%esp)
call   804aa10 <puts@plt>
xor    %eax,%eax
mov    0xcc(%esp),%edx
xor    %gs:0x14,%edx
jne    804e78c <fchmod@plt+0x364c>
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8083044,%eax
mov    %eax,0x30(%esp)
jmp    804ddd9 <fchmod@plt+0x2c99>
xchg   %ax,%ax
mov    0x8083044,%eax
mov    %eax,0x38(%esp)
jmp    804ddd9 <fchmod@plt+0x2c99>
xchg   %ax,%ax
mov    0x38(%esp),%ebp
test   %ebp,%ebp
je     804e49c <fchmod@plt+0x335c>
mov    %edi,%eax
xor    %esi,%esi
xor    %ebx,%ebx
test   %al,%al
jne    804df40 <fchmod@plt+0x2e00>
mov    0x38(%esp),%edi
test   %edi,%edi
je     804df10 <fchmod@plt+0x2dd0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   806a4b0 <fchmod@plt+0x1f370>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     804df10 <fchmod@plt+0x2dd0>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806a8b0 <fchmod@plt+0x1f770>
test   %eax,%eax
mov    %eax,%ebp
je     804df04 <fchmod@plt+0x2dc4>
mov    %ebp,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,0xc(%esp)
movl   $0x806ef47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    804dec8 <fchmod@plt+0x2d88>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806a430 <fchmod@plt+0x1f2f0>
test   %ebx,%ebx
je     804e4fb <fchmod@plt+0x33bb>
mov    (%ebx),%eax
test   %eax,%eax
je     804df25 <fchmod@plt+0x2de5>
xchg   %ax,%ax
call   804d220 <fchmod@plt+0x20e0>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8062ac0 <fchmod@plt+0x17980>
mov    %ebx,(%esp)
call   804a690 <free@plt>
mov    %esi,%eax
jmp    804de33 <fchmod@plt+0x2cf3>
nop
movl   $0x1,0x4(%esp)
movl   $0x14,(%esp)
movl   $0x0,0x4c(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804e502 <fchmod@plt+0x33c2>
call   80629e0 <fchmod@plt+0x178a0>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     804e4e5 <fchmod@plt+0x33a5>
movl   $0x1,0x4(%esp)
movl   $0x14,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,(%ebx)
je     804e4e5 <fchmod@plt+0x33a5>
mov    0x30(%esp),%eax
addl   $0x1,0x8(%ebx)
movl   $0x8070820,0xc(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
movl   $0x807069f,0x4(%esp)
mov    %eax,(%esp)
call   805f630 <fchmod@plt+0x144f0>
test   %eax,%eax
js     804e4ab <fchmod@plt+0x336b>
mov    0x48(%esp),%esi
test   %esi,%esi
je     804e785 <fchmod@plt+0x3645>
mov    (%esi),%eax
test   %eax,%eax
je     804e02a <fchmod@plt+0x2eea>
mov    %eax,%ecx
mov    0x3c(%esp),%edi
jmp    804dfe6 <fchmod@plt+0x2ea6>
xchg   %ax,%ax
mov    (%esi),%ecx
test   %ecx,%ecx
je     804e026 <fchmod@plt+0x2ee6>
mov    %ecx,0x14(%esp)
movl   $0x80706a5,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x262,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    (%esi),%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804daf0 <fchmod@plt+0x29b0>
add    $0x4,%esi
jne    804dfe0 <fchmod@plt+0x2ea0>
mov    0x48(%esp),%esi
mov    %esi,(%esp)
call   8062df0 <fchmod@plt+0x17cb0>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8062a90 <fchmod@plt+0x17950>
movl   $0x80706b7,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x269,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x8(%ebx),%eax
movl   $0x80704b8,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x26b,0x8(%esp)
mov    %eax,0x18(%esp)
lea    (%eax,%eax,4),%eax
shl    $0x2,%eax
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0xc(%ebx),%eax
movl   $0x80704e0,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x26d,0x8(%esp)
mov    %eax,0x18(%esp)
shl    $0x3,%eax
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x10(%ebx),%eax
movl   $0x8070508,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x26f,0x8(%esp)
mov    %eax,0x18(%esp)
shl    $0x3,%eax
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4(%ebx),%eax
mov    0x4(%eax),%eax
movl   $0x80706cf,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x271,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4(%ebx),%eax
mov    0x10(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x14(%eax),%eax
movl   $0x8070530,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x273,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4(%ebx),%eax
mov    0x1c(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x18(%eax),%eax
movl   $0x8070558,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x275,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x30(%esp),%eax
movl   $0x80706ed,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     804e4e5 <fchmod@plt+0x33a5>
mov    0x4c(%esp),%eax
lea    0x54(%esp),%edi
movl   $0x1ed,0x4(%esp)
lea    0x54(%esp),%esi
mov    %eax,(%esp)
call   806e8c0 <fchmod@plt+0x23780>
xor    %eax,%eax
mov    $0xa,%ecx
rep stos %eax,%es:(%edi)
lea    0x7c(%esp),%edi
mov    0x4c(%esp),%ebp
mov    %ebx,0x58(%esp)
mov    $0x14,%cl
rep stos %eax,%es:(%edi)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x806edc4,(%esp)
movb   $0x4b,0x7c(%esp)
movb   $0x53,0x7d(%esp)
movb   $0x4c,0x7e(%esp)
movb   $0x50,0x7f(%esp)
movb   $0x48,0x80(%esp)
movb   $0x48,0x81(%esp)
movb   $0x52,0x82(%esp)
movb   $0x48,0x83(%esp)
call   804b040 <strtol@plt>
mov    (%ebx),%edx
movl   $0x50,0x94(%esp)
00
movl   $0x0,0x98(%esp)
00
movl   $0x18,0x9c(%esp)
00
movl   $0x0,0xa0(%esp)
00
movl   $0x10,0xa4(%esp)
00
mov    %eax,0x84(%esp)
sar    $0x1f,%eax
mov    %eax,0x88(%esp)
mov    %esi,%eax
movl   $0x0,0xa8(%esp)
00
movl   $0x10,0xac(%esp)
00
movl   $0x0,0xb0(%esp)
00
movl   $0x50,0x5c(%esp)
movl   $0x0,0x60(%esp)
call   804d100 <fchmod@plt+0x1fc0>
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8064450 <fchmod@plt+0x19310>
test   %eax,%eax
js     804e739 <fchmod@plt+0x35f9>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804ad20 <fileno@plt>
movl   $0x124,0x4(%esp)
mov    %eax,(%esp)
call   804b140 <fchmod@plt>
mov    0x54(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x50,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a760 <fseeko64@plt>
mov    (%ebx),%edx
mov    %esi,%eax
call   804d2a0 <fchmod@plt+0x2160>
mov    %eax,0xb4(%esp)
mov    0x54(%esp),%eax
mov    %edx,0xb8(%esp)
mov    %eax,(%esp)
call   804aa90 <ftello64@plt>
add    $0xffffffb0,%eax
adc    $0xffffffff,%edx
mov    %eax,0xbc(%esp)
mov    0x4(%ebx),%eax
mov    %edx,0xc0(%esp)
mov    0x54(%esp),%edx
movl   $0x1,0x8(%esp)
mov    %edx,0xc(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
mov    0x4(%ebx),%eax
mov    0x4(%eax),%eax
movl   $0x0,0xc8(%esp)
00
mov    %eax,0xc4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804aa90 <ftello64@plt>
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x30(%esp)
mov    %eax,0x8c(%esp)
mov    0x54(%esp),%eax
mov    %edx,0x34(%esp)
mov    %edx,0x90(%esp)
mov    %eax,(%esp)
call   804a760 <fseeko64@plt>
mov    0x54(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x50,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x7c(%esp),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804a700 <ferror@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e506 <fchmod@plt+0x33c6>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x54(%esp),%eax
neg    %esi
mov    %eax,(%esp)
call   804a730 <fclose@plt>
test   %esi,%esi
jns    804e512 <fchmod@plt+0x33d2>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a810 <unlink@plt>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
test   %esi,%esi
js     804e737 <fchmod@plt+0x35f7>
xor    %esi,%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    804de92 <fchmod@plt+0x2d52>
mov    %edi,%eax
cmp    $0x1,%al
je     804de84 <fchmod@plt+0x2d44>
jmp    804de25 <fchmod@plt+0x2ce5>
neg    %eax
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
movl   $0x8070494,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x25d,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    $0x1,%esi
call   804a690 <free@plt>
jmp    804df10 <fchmod@plt+0x2dd0>
mov    %esi,%eax
jmp    804de33 <fchmod@plt+0x2cf3>
xor    %eax,%eax
jmp    804e4e9 <fchmod@plt+0x33a9>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804a730 <fclose@plt>
mov    0x50(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804aae0 <rename@plt>
test   %eax,%eax
js     804e469 <fchmod@plt+0x3329>
movl   $0x8070703,0x10(%esp)
movl   $0x807077e,0xc(%esp)
movl   $0x188,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movl   $0x8070580,0x10(%esp)
movl   $0x807077e,0xc(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x189,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x50,0x14(%esp)
movl   $0x8070719,0x10(%esp)
movl   $0x807077e,0xc(%esp)
movl   $0x18a,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x68(%esp),%edx
mov    0x64(%esp),%eax
movl   $0x80705a0,0x10(%esp)
movl   $0x807077e,0xc(%esp)
imul   $0x18,%edx,%ecx
mov    %edx,0x20(%esp)
mov    $0x18,%edx
mov    %eax,0x1c(%esp)
mul    %edx
movl   $0x18c,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
add    %ecx,%edx
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x6c(%esp),%eax
mov    0x70(%esp),%edx
movl   $0x80705c8,0x10(%esp)
movl   $0x807077e,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x20(%esp)
shld   $0x4,%eax,%edx
shl    $0x4,%eax
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x18e,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x74(%esp),%eax
mov    0x78(%esp),%edx
movl   $0x80705f0,0x10(%esp)
movl   $0x807077e,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x20(%esp)
shld   $0x4,%eax,%edx
shl    $0x4,%eax
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x190,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4(%ebx),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x18(%esp)
movl   $0x8070618,0x10(%esp)
movl   $0x807077e,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x191,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x5c(%esp),%eax
mov    0x60(%esp),%edx
movl   $0x8070737,0x10(%esp)
movl   $0x807077e,0xc(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
movl   $0x192,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    804e489 <fchmod@plt+0x3349>
mov    %esi,%eax
neg    %eax
mov    $0x1,%esi
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
movl   $0x8070638,0x10(%esp)
movl   $0x80707a1,0xc(%esp)
movl   $0x27e,0x8(%esp)
movl   $0x807067d,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x14(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804e48b <fchmod@plt+0x334b>
xor    %esi,%esi
jmp    804e02a <fchmod@plt+0x2eea>
lea    0x0(%esi,%eiz,1),%esi
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x78,%ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x10ec,%esp
mov    0x1100(%esp),%eax
movl   $0x1,(%esp)
mov    0x1104(%esp),%edi
mov    0x1108(%esp),%esi
mov    %eax,0x58(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x10dc(%esp)
xor    %eax,%eax
call   8063460 <fchmod@plt+0x18320>
movl   $0x0,0x68(%esp)
movl   $0xffffffff,0x64(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x30(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8070c40,0xc(%esp)
movl   $0x807082c,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804e940 <fchmod@plt+0x3800>
sub    $0x45,%eax
cmp    $0x2f,%eax
ja     804e930 <fchmod@plt+0x37f0>
xchg   %ax,%ax
jmp    *0x8070b70(,%eax,4)
nop
movl   $0x1,0x4c(%esp)
jmp    804e825 <fchmod@plt+0x36e5>
lea    0x0(%esi),%esi
movl   $0x80708e4,(%esp)
call   804aa10 <puts@plt>
movl   $0x0,(%esp)
call   804aa70 <exit@plt>
mov    0x8083044,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x40(%esp)
mov    %edx,0x30(%esp)
jmp    804e825 <fchmod@plt+0x36e5>
lea    0x0(%esi),%esi
mov    0x8083044,%ebx
jmp    804e825 <fchmod@plt+0x36e5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
test   %eax,%eax
js     804eb88 <fchmod@plt+0x3a48>
mov    %eax,%ebp
jmp    804e825 <fchmod@plt+0x36e5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x44(%esp)
mov    %edx,0x48(%esp)
jmp    804e825 <fchmod@plt+0x36e5>
lea    0x0(%esi),%esi
movl   $0x1,(%esp)
call   804aa70 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    0x44(%esp),%edi
mov    0x48(%esp),%esi
mov    %eax,0x50(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x54(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806be50 <fchmod@plt+0x20d10>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     804eeed <fchmod@plt+0x3dad>
mov    %esi,%eax
or     %edi,%eax
jne    804ece8 <fchmod@plt+0x3ba8>
mov    0x54(%esp),%eax
or     0x50(%esp),%eax
jne    804ebf5 <fchmod@plt+0x3ab5>
call   804a7e0 <getuid@plt>
test   %eax,%eax
je     804ebb8 <fchmod@plt+0x3a78>
mov    $0x1,%ecx
movl   $0x80000,(%esp)
mov    %cx,0x68(%esp)
call   804b090 <inotify_init1@plt>
test   %eax,%eax
mov    %eax,0x64(%esp)
js     804edbb <fchmod@plt+0x3c7b>
movl   $0x80,0x8(%esp)
movl   $0x8070886,0x4(%esp)
mov    %eax,(%esp)
call   804ac00 <inotify_add_watch@plt>
test   %eax,%eax
js     804ee87 <fchmod@plt+0x3d47>
mov    %ebp,0x30(%esp)
movl   $0x0,0x34(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804ea0c <fchmod@plt+0x38cc>
lea    0x6c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
je     804eaf4 <fchmod@plt+0x39b4>
mov    %esi,%eax
or     %edi,%eax
je     804eae0 <fchmod@plt+0x39a0>
mov    0x50(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806c370 <fchmod@plt+0x21230>
cmp    $0x1,%eax
je     804eaf4 <fchmod@plt+0x39b4>
mov    0x64(%esp),%edx
test   %edx,%edx
js     804eb60 <fchmod@plt+0x3a20>
mov    %edi,%eax
or     %esi,%eax
jne    804ea5e <fchmod@plt+0x391e>
test   %ebx,%ebx
mov    $0x3e8,%eax
je     804ea63 <fchmod@plt+0x3923>
mov    $0x64,%eax
mov    %eax,0x8(%esp)
lea    0x64(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a8f0 <poll@plt>
test   %eax,%eax
jle    804ea8a <fchmod@plt+0x394a>
testb  $0x1,0x6a(%esp)
jne    804eb38 <fchmod@plt+0x39f8>
test   %ebp,%ebp
je     804e9e8 <fchmod@plt+0x38a8>
movl   $0x1,(%esp)
call   8063460 <fchmod@plt+0x18320>
movl   $0xf4240,0x8(%esp)
movl   $0x0,0xc(%esp)
sub    0x38(%esp),%eax
sbb    0x3c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
cmp    $0x0,%edx
jbe    804eb78 <fchmod@plt+0x3a38>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     804ec36 <fchmod@plt+0x3af6>
mov    $0x1,%ebx
jmp    804eaf6 <fchmod@plt+0x39b6>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806c280 <fchmod@plt+0x21140>
test   %eax,%eax
je     804ea43 <fchmod@plt+0x3903>
xor    %ebx,%ebx
mov    0x64(%esp),%edx
test   %edx,%edx
js     804eb06 <fchmod@plt+0x39c6>
mov    %edx,(%esp)
call   804b0a0 <close@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bec0 <fchmod@plt+0x20d80>
mov    %ebx,%eax
mov    0x10dc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804eef9 <fchmod@plt+0x3db9>
add    $0x10ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xcc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
movl   $0x1010,0x8(%esp)
mov    %eax,(%esp)
call   804a5a0 <read@plt>
jmp    804ea8a <fchmod@plt+0x394a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   804a780 <sleep@plt>
jmp    804ea8a <fchmod@plt+0x394a>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x30(%esp),%eax
jb     804e9e8 <fchmod@plt+0x38a8>
jmp    804eacb <fchmod@plt+0x398b>
nop
mov    0x8083020,%eax
movl   $0x16,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f97b,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804e825 <fchmod@plt+0x36e5>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8058380 <fchmod@plt+0xd240>
test   %eax,%eax
je     804e995 <fchmod@plt+0x3855>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8058490 <fchmod@plt+0xd350>
mov    0x30(%esp),%edx
test   %eax,%eax
js     804ee48 <fchmod@plt+0x3d08>
mov    %edx,(%esp)
call   80581f0 <fchmod@plt+0xd0b0>
jmp    804e995 <fchmod@plt+0x3855>
movl   $0x8070ab0,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x81,0x8(%esp)
movl   $0x8070837,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0x50(%esp)
movl   $0x0,0x54(%esp)
jmp    804e988 <fchmod@plt+0x3848>
mov    0x2c(%esp),%ebx
mov    %ebx,(%esp)
call   806c520 <fchmod@plt+0x213e0>
test   %eax,%eax
je     804ead7 <fchmod@plt+0x3997>
movl   $0x8070ae0,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0xd1,0x8(%esp)
movl   $0x8070837,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %ebp,0x8(%esp)
movl   $0x8070b00,0x4(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806c520 <fchmod@plt+0x213e0>
test   %eax,%eax
mov    %eax,%ebx
je     804ead7 <fchmod@plt+0x3997>
mov    %ebx,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,0xc(%esp)
movl   $0x80708ab,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804eca0 <fchmod@plt+0x3b60>
jmp    804ead7 <fchmod@plt+0x3997>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806bfc0 <fchmod@plt+0x20e80>
mov    %eax,0x5c(%esp)
mov    0x30(%esp),%eax
mov    %edx,%ecx
or     0x40(%esp),%eax
je     804eecc <fchmod@plt+0x3d8c>
cmp    %esi,0x30(%esp)
ja     804edec <fchmod@plt+0x3cac>
jb     804ed1e <fchmod@plt+0x3bde>
cmp    %edi,0x40(%esp)
jae    804edec <fchmod@plt+0x3cac>
mov    %ecx,0x30(%esp)
movl   $0x8070a1c,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x74,0x8(%esp)
movl   $0x8070837,0x4(%esp)
xor    %edi,%edi
xor    %esi,%esi
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x30(%esp),%ecx
movl   $0x0,0x50(%esp)
movl   $0x0,0x54(%esp)
mov    0x5c(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x18(%esp)
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
movl   $0x8070a8c,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x7e,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x54(%esp),%eax
movl   $0x8070837,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x20(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804e988 <fchmod@plt+0x3848>
movl   $0x807086d,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x99,0x8(%esp)
movl   $0x8070837,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804e9d7 <fchmod@plt+0x3897>
cmp    %ecx,0x30(%esp)
jbe    804ee13 <fchmod@plt+0x3cd3>
mov    %ecx,0x30(%esp)
movl   $0x8070a48,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x7a,0x8(%esp)
jmp    804ed3a <fchmod@plt+0x3bfa>
jb     804ee1f <fchmod@plt+0x3cdf>
mov    0x5c(%esp),%eax
cmp    %eax,0x40(%esp)
ja     804edf2 <fchmod@plt+0x3cb2>
cmp    %ecx,%esi
ja     804edf2 <fchmod@plt+0x3cb2>
jb     804ee2b <fchmod@plt+0x3ceb>
cmp    0x5c(%esp),%edi
ja     804edf2 <fchmod@plt+0x3cb2>
mov    0x40(%esp),%eax
mov    0x44(%esp),%edi
mov    0x48(%esp),%esi
mov    %eax,0x50(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x54(%esp)
jmp    804ed66 <fchmod@plt+0x3c26>
movl   $0x8070854,0x10(%esp)
xor    %ebx,%ebx
movl   $0x8070c30,0xc(%esp)
movl   $0x8d,0x8(%esp)
movl   $0x8070837,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x30(%esp),%edx
mov    %edx,(%esp)
call   80581f0 <fchmod@plt+0xd0b0>
jmp    804eaf6 <fchmod@plt+0x39b6>
movl   $0x8070890,0x10(%esp)
movl   $0x8070c30,0xc(%esp)
movl   $0x9c,0x8(%esp)
movl   $0x8070837,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   804b0a0 <close@plt>
movl   $0xffffffff,0x64(%esp)
jmp    804e9d7 <fchmod@plt+0x3897>
mov    0x2c(%esp),%eax
mov    %edx,0x50(%esp)
mov    %eax,(%esp)
call   806bfc0 <fchmod@plt+0x20e80>
mov    0x50(%esp),%ecx
mov    %eax,0x40(%esp)
mov    %edx,0x30(%esp)
jmp    804ed08 <fchmod@plt+0x3bc8>
movl   $0x2,(%esp)
call   804aa70 <exit@plt>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    %eax,(%esp)
lea    0x2c(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
call   8069560 <fchmod@plt+0x1e420>
test   %eax,%eax
mov    %eax,%ebx
jne    804ef53 <fchmod@plt+0x3e13>
jmp    804eff0 <fchmod@plt+0x3eb0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x808304c,%eax
test   %eax,%eax
je     804ef76 <fchmod@plt+0x3e36>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
je     804eff0 <fchmod@plt+0x3eb0>
mov    0x8083050,%edx
test   %edx,%edx
je     804ef38 <fchmod@plt+0x3df8>
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,(%esp)
call   804aa10 <puts@plt>
mov    0x808304c,%eax
test   %eax,%eax
jne    804ef41 <fchmod@plt+0x3e01>
mov    %ebx,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x10(%esp)
movl   $0x8070cc0,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     804ef41 <fchmod@plt+0x3e01>
mov    %ebp,(%esp)
call   804ab30 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804ab90 <write@plt>
test   %eax,%eax
js     804f010 <fchmod@plt+0x3ed0>
mov    %esi,(%esp)
call   804b0a0 <close@plt>
mov    %ebx,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebx
jne    804ef53 <fchmod@plt+0x3e13>
xchg   %ax,%ax
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    804f046 <fchmod@plt+0x3f06>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x18(%esp)
mov    %ebp,0x14(%esp)
movl   $0x8070db4,0x10(%esp)
movl   $0x8071308,0xc(%esp)
movl   $0x38,0x8(%esp)
movl   $0x8070cc8,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804efd4 <fchmod@plt+0x3e94>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
sub    $0x14,%esp
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     804f087 <fchmod@plt+0x3f47>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %eax,(%edi)
add    $0x14,%esp
mov    %esi,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%eax
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    0x458(%esp),%ebx
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8069340 <fchmod@plt+0x1e200>
test   %eax,%eax
mov    %eax,%ebp
je     804f348 <fchmod@plt+0x4208>
movl   $0x8070ce6,0x18(%esp)
xor    %esi,%esi
mov    0x454(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8071340,0xc(%esp)
movl   $0x8070ced,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804f358 <fchmod@plt+0x4218>
sub    $0x41,%eax
cmp    $0x38,%eax
ja     804f348 <fchmod@plt+0x4208>
jmp    *0x8071224(,%eax,4)
nop
mov    0x8083044,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8069af0 <fchmod@plt+0x1e9b0>
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x8083050
00
jmp    804f0e8 <fchmod@plt+0x3fa8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
mov    $0x8070d07,%edi
mov    $0x8,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f0e6 <fchmod@plt+0x3fa6>
mov    $0x8070d0f,%edi
mov    $0xb,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804f42a <fchmod@plt+0x42ea>
mov    $0x1,%esi
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
mov    0x8083044,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80698b0 <fchmod@plt+0x1e770>
jmp    804f0e8 <fchmod@plt+0x3fa8>
xchg   %ax,%ax
mov    0x8083044,%eax
lea    0x28(%esp),%edx
lea    0x2c(%esp),%ecx
call   804f050 <fchmod@plt+0x3f10>
mov    0x28(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80699f0 <fchmod@plt+0x1e8b0>
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x808304c
00
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
movl   $0x8070df4,(%esp)
xor    %ebx,%ebx
call   804aa10 <puts@plt>
mov    %ebp,(%esp)
call   8069460 <fchmod@plt+0x1e320>
mov    %ebx,%eax
mov    0x42c(%esp),%edi
xor    %gs:0x14,%edi
jne    804f464 <fchmod@plt+0x4324>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8083044,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8069a40 <fchmod@plt+0x1e900>
jmp    804f0e8 <fchmod@plt+0x3fa8>
xchg   %ax,%ax
mov    0x8083044,%eax
mov    %eax,0x18(%esp)
jmp    804f0e8 <fchmod@plt+0x3fa8>
xchg   %ax,%ax
mov    0x8083044,%edi
movl   $0x806efb6,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804f380 <fchmod@plt+0x4240>
lea    0x2c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
movl   $0x2f,0x4(%esp)
call   806d380 <fchmod@plt+0x22240>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
mov    %eax,%edi
je     804f3eb <fchmod@plt+0x42ab>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8069a90 <fchmod@plt+0x1e950>
mov    %edi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
jmp    804f0e8 <fchmod@plt+0x3fa8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
lea    0x28(%esp),%edx
lea    0x2c(%esp),%ecx
call   804f050 <fchmod@plt+0x3f10>
mov    0x28(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8069950 <fchmod@plt+0x1e810>
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083044,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8069900 <fchmod@plt+0x1e7c0>
jmp    804f0e8 <fchmod@plt+0x3fa8>
xchg   %ax,%ax
mov    0x8083044,%eax
lea    0x28(%esp),%edx
lea    0x2c(%esp),%ecx
call   804f050 <fchmod@plt+0x3f10>
mov    0x28(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80699a0 <fchmod@plt+0x1e860>
jmp    804f0e8 <fchmod@plt+0x3fa8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804f1f6 <fchmod@plt+0x40b6>
lea    0x0(%esi),%esi
test   %esi,%esi
je     804f3d1 <fchmod@plt+0x4291>
cmp    $0x1,%esi
jne    804f3ad <fchmod@plt+0x426d>
mov    %ebp,(%esp)
xor    %ebx,%ebx
call   8069c50 <fchmod@plt+0x1eb10>
mov    0x18(%esp),%edx
mov    %ebp,%eax
call   804ef00 <fchmod@plt+0x3dc0>
jmp    804f1f6 <fchmod@plt+0x40b6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x806efb6,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    804f27e <fchmod@plt+0x413e>
movl   $0x8071312,0xc(%esp)
movl   $0xd9,0x8(%esp)
movl   $0x8070cc8,0x4(%esp)
movl   $0x8070d32,(%esp)
call   8062180 <fchmod@plt+0x17040>
mov    %ebp,(%esp)
xor    %ebx,%ebx
call   8069b40 <fchmod@plt+0x1ea00>
mov    0x18(%esp),%edx
mov    %ebp,%eax
call   804ef00 <fchmod@plt+0x3dc0>
jmp    804f1f6 <fchmod@plt+0x40b6>
mov    0x8083044,%eax
mov    $0x2,%ebx
movl   $0x8070dd4,0x10(%esp)
movl   $0x807131e,0xc(%esp)
movl   $0xae,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x8070cc8,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804f1f6 <fchmod@plt+0x40b6>
mov    %eax,0x14(%esp)
mov    $0x2,%ebx
movl   $0x8070d1a,0x10(%esp)
movl   $0x807131e,0xc(%esp)
movl   $0x82,0x8(%esp)
movl   $0x8070cc8,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804f1f6 <fchmod@plt+0x40b6>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x8071430,%ebp
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x94c,%esp
mov    0x960(%esp),%eax
movl   $0x806edc4,0x14(%esp)
mov    0x968(%esp),%ebx
movl   $0x8071434,0x10(%esp)
movl   $0x80716a0,0xc(%esp)
movl   $0x37,0x8(%esp)
movl   $0x8071440,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x93c(%esp)
xor    %eax,%eax
call   8062020 <fchmod@plt+0x16ee0>
mov    0x964(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8071660,0xc(%esp)
movl   $0x807145b,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804f5a8 <fchmod@plt+0x4468>
cmp    $0x61,%eax
je     804f528 <fchmod@plt+0x43e8>
cmp    $0x68,%eax
je     804f578 <fchmod@plt+0x4438>
cmp    $0x4e,%eax
je     804f530 <fchmod@plt+0x43f0>
movl   $0x1,(%esp)
call   804aa70 <exit@plt>
mov    0x8083044,%ebp
jmp    804f4d9 <fchmod@plt+0x4399>
mov    0x8083044,%eax
mov    $0x8071464,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f590 <fchmod@plt+0x4450>
mov    $0x807146a,%edi
mov    %eax,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f5a0 <fchmod@plt+0x4460>
mov    $0x807146f,%edi
mov    %eax,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804f8f1 <fchmod@plt+0x47b1>
mov    $0xffffffff,%esi
jmp    804f4d9 <fchmod@plt+0x4399>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8071534,(%esp)
call   804aa10 <puts@plt>
movl   $0x0,(%esp)
call   804aa70 <exit@plt>
mov    $0x1,%esi
jmp    804f4d9 <fchmod@plt+0x4399>
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    804f4d9 <fchmod@plt+0x4399>
nop
mov    0x8083040,%eax
mov    (%ebx,%eax,4),%ebx
test   %ebx,%ebx
je     804f7fb <fchmod@plt+0x46bb>
movl   $0x8071590,(%esp)
lea    0xbc(%esp),%edi
call   804aa10 <puts@plt>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   804a650 <sigprocmask@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80584f0 <fchmod@plt+0xd3b0>
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8055dc0 <fchmod@plt+0xac80>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804f8bd <fchmod@plt+0x477d>
movl   $0x806efb6,0x4(%esp)
mov    %ebx,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804f88d <fchmod@plt+0x474d>
lea    0x13c(%esp),%esi
mov    %ebx,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   806d380 <fchmod@plt+0x22240>
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
mov    %eax,%ebx
je     804f865 <fchmod@plt+0x4725>
mov    %eax,(%esp)
call   80652b0 <fchmod@plt+0x1a170>
mov    %ebx,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    %ebp,0x4(%esp)
lea    0x3c(%esp),%ebp
mov    %ebx,(%esp)
call   8067dc0 <fchmod@plt+0x1cc80>
mov    %ebx,(%esp)
call   804fc70 <fchmod@plt+0x4b30>
mov    %ebp,(%esp)
mov    %eax,%esi
call   804ac20 <sigfillset@plt>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   804a650 <sigprocmask@plt>
movl   $0x80800,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0xffffffff,(%esp)
call   804a8e0 <signalfd@plt>
test   %eax,%eax
mov    %eax,0x54(%esi)
js     804f836 <fchmod@plt+0x46f6>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051500 <fchmod@plt+0x63c0>
mov    %ebx,(%esp)
mov    %eax,0x2c(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%edi
je     804f734 <fchmod@plt+0x45f4>
nop
mov    %edi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0xc(%esp)
movl   $0x806ef47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804ada0 <__printf_chk@plt>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    804f6f8 <fchmod@plt+0x45b8>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804f796 <fchmod@plt+0x4656>
xor    %edi,%edi
mov    0x54(%esi),%eax
test   %eax,%eax
js     804f74d <fchmod@plt+0x460d>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    %esi,(%esp)
call   804fd00 <fchmod@plt+0x4bc0>
mov    %ebx,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8055bd0 <fchmod@plt+0xaa90>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8058540 <fchmod@plt+0xd400>
mov    %edi,%eax
mov    0x93c(%esp),%edx
xor    %gs:0x14,%edx
jne    804f8ec <fchmod@plt+0x47ac>
add    $0x94c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x24(%esi),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%ebp
je     804f73c <fchmod@plt+0x45fc>
lea    0x53c(%esp),%edi
xchg   %ax,%ax
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x400,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    %edi,0x8(%esp)
movl   $0x80714da,0x4(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    804f7b0 <fchmod@plt+0x4670>
jmp    804f73c <fchmod@plt+0x45fc>
mov    0x8083020,%eax
mov    $0x2,%edi
movl   $0x1a,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8071475,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
movl   $0x0,0x28(%esp)
xor    %ebx,%ebx
xor    %esi,%esi
jmp    804f74d <fchmod@plt+0x460d>
mov    0x8083020,%eax
mov    $0x5,%edi
movl   $0x18,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80714c1,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804f73e <fchmod@plt+0x45fe>
mov    0x8083020,%eax
mov    $0x4,%edi
mov    %esi,0xc(%esp)
movl   $0x80714a5,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    804f82d <fchmod@plt+0x46ed>
lea    0x13c(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x806efb6,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    804f63e <fchmod@plt+0x44fe>
mov    0x8083020,%eax
mov    $0x3,%edi
movl   $0x14,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8071490,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
jmp    804f82d <fchmod@plt+0x46ed>
call   804a7c0 <__stack_chk_fail@plt>
mov    0x8083020,%eax
movl   $0x2b,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8071508,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
movl   $0x8071508,0x10(%esp)
movl   $0x80716a0,0xc(%esp)
movl   $0x4d,0x8(%esp)
movl   $0x8071440,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x1,(%esp)
call   804aa70 <exit@plt>
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8083020,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804ae80 <fputc@plt>
mov    0x8083020,%eax
movl   $0x34,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80716bc,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
mov    %ebx,(%esp)
call   8058590 <fchmod@plt+0xd450>
mov    0x8083020,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804ae80 <fputc@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%edi
mov    0x454(%esp),%esi
mov    0x458(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
jmp    804f9f9 <fchmod@plt+0x48b9>
cmp    $0x68,%eax
je     804fb20 <fchmod@plt+0x49e0>
movl   $0x0,0x10(%esp)
movl   $0x80717a0,0xc(%esp)
movl   $0x806f964,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
jne    804f9f0 <fchmod@plt+0x48b0>
mov    0x8083040,%eax
lea    0x1(%eax),%edx
mov    %edx,0x8083040
mov    (%ebx,%eax,4),%esi
lea    0x0(,%eax,4),%edx
test   %esi,%esi
je     804fb91 <fchmod@plt+0x4a51>
add    $0x2,%eax
mov    %eax,0x8083040
mov    0x4(%ebx,%edx,1),%ebp
test   %ebp,%ebp
je     804fbd0 <fchmod@plt+0x4a90>
mov    %edi,(%esp)
call   80584f0 <fchmod@plt+0xd3b0>
mov    %esi,(%esp)
call   8058640 <fchmod@plt+0xd500>
cmp    $0xa,%eax
mov    %eax,%ebx
ja     804fb60 <fchmod@plt+0x4a20>
movl   $0x806efb6,0x4(%esp)
mov    %ebp,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     804fc34 <fchmod@plt+0x4af4>
mov    %ebp,0x8(%esp)
lea    0x2c(%esp),%ebp
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2f,0x4(%esp)
mov    %ebp,(%esp)
call   806d380 <fchmod@plt+0x22240>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
je     804fc01 <fchmod@plt+0x4ac1>
mov    %ebx,0x4(%esp)
movl   $0x1,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   80586f0 <fchmod@plt+0xd5b0>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
jns    804fb2b <fchmod@plt+0x49eb>
mov    %eax,0x10(%esp)
mov    0x8083020,%eax
mov    $0x6,%ebx
mov    %esi,0xc(%esp)
movl   $0x80716f4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
mov    0x1c(%esp),%edx
jmp    804fb2b <fchmod@plt+0x49eb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
xor    %ebx,%ebx
call   804f950 <fchmod@plt+0x4810>
xor    %edx,%edx
mov    %edx,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %edi,(%esp)
call   8058540 <fchmod@plt+0xd400>
mov    %ebx,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804fc61 <fchmod@plt+0x4b21>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083020,%eax
mov    $0x5,%ebx
mov    %esi,0xc(%esp)
movl   $0x807173c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
mov    %edi,%eax
call   804f950 <fchmod@plt+0x4810>
xor    %edx,%edx
jmp    804fb2b <fchmod@plt+0x49eb>
mov    0x8083020,%eax
mov    $0x2,%ebx
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8071719,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
mov    %edi,%eax
call   804f950 <fchmod@plt+0x4810>
xor    %edx,%edx
jmp    804fb2b <fchmod@plt+0x49eb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8083020,%eax
mov    $0x3,%ebx
movl   $0x11,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x807172a,(%esp)
mov    %eax,0xc(%esp)
call   804a910 <fwrite@plt>
xor    %edx,%edx
jmp    804fb2b <fchmod@plt+0x49eb>
mov    %eax,0x1c(%esp)
mov    0x8083020,%eax
mov    $0x4,%ebx
mov    %ebp,0xc(%esp)
movl   $0x8071752,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
mov    0x1c(%esp),%edx
jmp    804fb2b <fchmod@plt+0x49eb>
mov    %ebp,0xc(%esp)
lea    0x2c(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x806efb6,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    804faa1 <fchmod@plt+0x4961>
call   804a7c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x33038,%ebx
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
movl   $0x6c,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,%ebp
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804fcee <fchmod@plt+0x4bae>
mov    %edi,0x4(%eax)
lea    0x24(%eax),%eax
mov    %ebp,-0x24(%eax)
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
movl   $0x1,(%esp)
movl   $0xffffffff,0x54(%esi)
call   8063460 <fchmod@plt+0x18320>
movl   $0x1c9c380,0x4c(%esi)
movl   $0x0,0x50(%esi)
mov    %eax,0x44(%esi)
mov    %edx,0x48(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x32fa6,%ebx
test   %esi,%esi
je     804fd41 <fchmod@plt+0x4c01>
lea    0x24(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc5c,%esp
mov    0xc70(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x32f4e,%ebx
mov    0xc74(%esp),%ebp
mov    %gs:0x14,%ecx
mov    %ecx,0xc4c(%esp)
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x4(%eax),%eax
mov    %ebp,0x34(%esp)
mov    %eax,0x30(%esp)
mov    0xc78(%esp),%eax
mov    %eax,0x44(%esp)
lea    -0x11322(%ebx),%eax
mov    %eax,0x38(%esp)
jmp    804fde1 <fchmod@plt+0x4ca1>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%al
je     804fe80 <fchmod@plt+0x4d40>
mov    0xc7c(%esp),%edi
test   %edi,%edi
je     804fe50 <fchmod@plt+0x4d10>
movzbl 0x0(%ebp),%eax
add    $0x1,%ebp
mov    0x44(%esp),%edx
subl   $0x1,0xc7c(%esp)
mov    %al,(%edx)
addl   $0x1,0x44(%esp)
movzbl 0x0(%ebp),%eax
test   %al,%al
je     804fe50 <fchmod@plt+0x4d10>
cmp    $0x24,%al
jne    804fdb0 <fchmod@plt+0x4c70>
xor    %ecx,%ecx
cmpb   $0x24,0x1(%ebp)
lea    0x1(%ebp),%eax
mov    %eax,0x24(%esp)
je     804ff80 <fchmod@plt+0x4e40>
mov    %ebp,0x28(%esp)
mov    %ecx,%ebp
xchg   %ax,%ax
lea    0x0(%ebp,%ebp,2),%esi
mov    0x24(%esp),%eax
shl    $0x2,%esi
mov    -0x3994(%esi,%ebx,1),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
jne    804fee0 <fchmod@plt+0x4da0>
add    $0x1,%ebp
cmp    $0x12,%ebp
jne    804fe08 <fchmod@plt+0x4cc8>
mov    0xc7c(%esp),%edi
mov    0x28(%esp),%ebp
test   %edi,%edi
jne    804fdc7 <fchmod@plt+0x4c87>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc4c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x44(%esp),%eax
movb   $0x0,(%eax)
mov    0xc7c(%esp),%eax
jne    8050533 <fchmod@plt+0x53f3>
add    $0xc5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%ecx
xor    %eax,%eax
cmp    $0x25,%cl
jne    804fe9c <fchmod@plt+0x4d5c>
jmp    804ff87 <fchmod@plt+0x4e47>
add    $0x1,%eax
cmp    $0x12,%eax
je     804fdb8 <fchmod@plt+0x4c78>
lea    (%eax,%eax,2),%edx
shl    $0x2,%edx
cmp    -0x3990(%edx,%ebx,1),%cl
jne    804fe90 <fchmod@plt+0x4d50>
mov    -0x398c(%ebx,%edx,1),%eax
add    $0x2,%ebp
xor    %esi,%esi
cmpb   $0x7b,0x0(%ebp)
mov    %eax,0x24(%esp)
je     804ff03 <fchmod@plt+0x4dc3>
mov    0x24(%esp),%eax
cmp    $0x10,%eax
ja     805040c <fchmod@plt+0x52cc>
mov    -0x11134(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    -0x398c(%ebx,%esi,1),%eax
xor    %esi,%esi
mov    %edi,(%esp)
mov    0x28(%esp),%ebp
mov    %eax,0x24(%esp)
call   804ab30 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebp
cmpb   $0x7b,0x0(%ebp)
jne    804fec1 <fchmod@plt+0x4d81>
movzbl 0x1(%ebp),%eax
lea    0x1(%ebp),%ecx
cmp    $0x7d,%al
je     80504f0 <fchmod@plt+0x53b0>
test   %al,%al
je     804ff90 <fchmod@plt+0x4e50>
xor    %esi,%esi
jmp    804ff24 <fchmod@plt+0x4de4>
lea    0x0(%esi),%esi
test   %al,%al
je     804ff90 <fchmod@plt+0x4e50>
add    $0x1,%esi
movzbl 0x1(%ebp,%esi,1),%eax
cmp    $0x7d,%al
jne    804ff20 <fchmod@plt+0x4de0>
cmp    $0x3ff,%esi
ja     804fe50 <fchmod@plt+0x4d10>
lea    0x1(%esi),%ebp
lea    0x4c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
movl   $0x400,0xc(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x28(%esp)
call   804aa40 <__memcpy_chk@plt>
mov    0x3c(%esp),%ecx
mov    0x28(%esp),%edx
movb   $0x0,0x4c(%esp,%esi,1)
add    %ecx,%ebp
mov    %edx,%esi
jmp    804fec1 <fchmod@plt+0x4d81>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
jmp    804fdb8 <fchmod@plt+0x4c78>
add    $0x1,%ebp
jmp    804fdb8 <fchmod@plt+0x4c78>
nop
mov    0x34(%esp),%eax
movl   $0xb2,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x114e4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x11098(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804fe50 <fchmod@plt+0x4d10>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0xc7c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   8063170 <fchmod@plt+0x18030>
mov    %eax,0xc7c(%esp)
jmp    804fde1 <fchmod@plt+0x4ca1>
mov    0x2c(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
jne    804ffd3 <fchmod@plt+0x4e93>
jmp    804fde1 <fchmod@plt+0x4ca1>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %edx,%ecx
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
mov    %ecx,0x10(%esp)
lea    -0xbec7(%ebx),%eax
lea    0x84c(%esp),%esi
mov    %eax,0xc(%esp)
movl   $0x400,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804b120 <__sprintf_chk@plt>
mov    %esi,0x8(%esp)
jmp    804ffe4 <fchmod@plt+0x4ea4>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %eax,%esi
movzbl %al,%eax
shrd   $0xc,%edx,%esi
and    $0xffffff00,%esi
or     %eax,%esi
mov    %esi,0x10(%esp)
jmp    805003a <fchmod@plt+0x4efa>
mov    0x2c(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
test   %esi,%esi
je     804ffe0 <fchmod@plt+0x4ea0>
lea    0x48(%esp),%eax
mov    %esi,(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
test   %esi,%esi
mov    0x14(%eax),%eax
jle    804ffe0 <fchmod@plt+0x4ea0>
lea    0x44c(%esp),%edi
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
lea    0x0(%esi),%esi
sub    $0x1,%esi
je     8050449 <fchmod@plt+0x5309>
movzbl (%edi),%edx
test   %dl,%dl
mov    %edx,0x24(%esp)
je     80504e0 <fchmod@plt+0x53a0>
call   804b0e0 <__ctype_b_loc@plt>
mov    0x24(%esp),%edx
mov    (%eax),%eax
jmp    8050122 <fchmod@plt+0x4fe2>
lea    0x0(%esi),%esi
add    $0x1,%edi
movzbl (%edi),%edx
test   %dl,%dl
je     8050136 <fchmod@plt+0x4ff6>
movsbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
je     8050118 <fchmod@plt+0x4fd8>
jmp    8050133 <fchmod@plt+0x4ff3>
xchg   %ax,%ax
add    $0x1,%edi
movzbl (%edi),%edx
movsbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8050130 <fchmod@plt+0x4ff0>
jmp    80500f0 <fchmod@plt+0x4fb0>
mov    0x2c(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
add    $0x5,%eax
jmp    804ffe0 <fchmod@plt+0x4ea0>
mov    0x2c(%esp),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
jne    804ffe0 <fchmod@plt+0x4ea0>
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
je     804ffcf <fchmod@plt+0x4e8f>
mov    %edi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
jmp    8050169 <fchmod@plt+0x5029>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%edi
je     804fde1 <fchmod@plt+0x4ca1>
mov    %eax,(%esp)
lea    0x44(%esp),%esi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,(%esp)
add    $0x5,%eax
mov    %eax,0x8(%esp)
mov    0xc7c(%esp),%eax
mov    %eax,0x4(%esp)
call   8063170 <fchmod@plt+0x18030>
mov    %edi,(%esp)
mov    %eax,0xc7c(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     804fde1 <fchmod@plt+0x4ca1>
mov    %ebp,0x28(%esp)
mov    0xc7c(%esp),%ebp
lea    -0xbcbe(%ebx),%eax
mov    %eax,0x24(%esp)
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x4(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,(%esp)
add    $0x5,%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8050208 <fchmod@plt+0x50c8>
mov    %ebp,0xc7c(%esp)
mov    0x28(%esp),%ebp
jmp    804fde1 <fchmod@plt+0x4ca1>
lea    -0xbed2(%ebx),%eax
jmp    804ffe0 <fchmod@plt+0x4ea0>
lea    -0x13cfe(%ebx),%eax
jmp    804ffe0 <fchmod@plt+0x4ea0>
mov    0x2c(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
mov    %eax,(%esp)
call   8065200 <fchmod@plt+0x1a0c0>
test   %eax,%eax
jne    804ffe0 <fchmod@plt+0x4ea0>
jmp    804fde1 <fchmod@plt+0x4ca1>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
jmp    804ffe0 <fchmod@plt+0x4ea0>
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   8065600 <fchmod@plt+0x1a4c0>
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
mov    %edi,(%esp)
call   8065600 <fchmod@plt+0x1a4c0>
jmp    804ffe0 <fchmod@plt+0x4ea0>
test   %esi,%esi
je     80504fc <fchmod@plt+0x53bc>
mov    0x2c(%esp),%eax
lea    0x84c(%esp),%edi
movl   $0x1,0x10(%esp)
movl   $0x200,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806cd50 <fchmod@plt+0x21c10>
test   %eax,%eax
jne    8050491 <fchmod@plt+0x5351>
mov    %edi,%eax
cmp    %edi,%eax
je     8050316 <fchmod@plt+0x51d6>
mov    %eax,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %edi,%esi
mov    (%esi),%edx
add    $0x4,%esi
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     8050318 <fchmod@plt+0x51d8>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%esi),%edx
cmove  %edx,%esi
add    %al,%al
sbb    $0x3,%esi
sub    %edi,%esi
je     805036e <fchmod@plt+0x522e>
call   804b0e0 <__ctype_b_loc@plt>
mov    (%eax),%edx
jmp    8050360 <fchmod@plt+0x5220>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
movb   $0x0,(%edi,%esi,1)
je     805036e <fchmod@plt+0x522e>
sub    $0x1,%esi
movsbl (%edi,%esi,1),%eax
testb  $0x20,0x1(%edx,%eax,2)
jne    8050358 <fchmod@plt+0x5218>
lea    -0x11343(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
test   %eax,%eax
jle    80503ba <fchmod@plt+0x527a>
mov    %eax,0x14(%esp)
lea    -0x1133c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x11098(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x135,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %edi,0x8(%esp)
jmp    804ffe4 <fchmod@plt+0x4ea4>
test   %esi,%esi
je     804fde1 <fchmod@plt+0x4ca1>
mov    0x2c(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8068450 <fchmod@plt+0x1d310>
test   %eax,%eax
jne    804ffe0 <fchmod@plt+0x4ea0>
jmp    804fde1 <fchmod@plt+0x4ca1>
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
mov    %edi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
jmp    804ffe0 <fchmod@plt+0x4ea0>
mov    0x24(%esp),%eax
movl   $0x16f,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0x11098(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804fde1 <fchmod@plt+0x4ca1>
mov    %edi,0x8(%esp)
lea    0x84c(%esp),%edi
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x48(%esp),%eax
cmpb   $0x2b,(%eax)
je     80503ba <fchmod@plt+0x527a>
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80503ba <fchmod@plt+0x527a>
movb   $0x0,(%eax)
jmp    80503ba <fchmod@plt+0x527a>
mov    0x2c(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
jne    80502fe <fchmod@plt+0x51be>
mov    0x2c(%esp),%ecx
mov    0x8(%ecx),%eax
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
cmp    0x4(%ecx),%eax
je     804fde1 <fchmod@plt+0x4ca1>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     804fde1 <fchmod@plt+0x4ca1>
jmp    80502fe <fchmod@plt+0x51be>
lea    0x0(%esi),%esi
call   804b0e0 <__ctype_b_loc@plt>
mov    0x24(%esp),%edx
mov    (%eax),%eax
jmp    8050136 <fchmod@plt+0x4ff6>
mov    $0x1,%ebp
xor    %esi,%esi
jmp    804ff3f <fchmod@plt+0x4dff>
lea    -0x114bc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x11098(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x11a,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    804fde1 <fchmod@plt+0x4ca1>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x32768,%ebx
mov    0x34(%esp),%esi
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8050661 <fchmod@plt+0x5521>
test   %esi,%esi
je     8050676 <fchmod@plt+0x5536>
movzbl (%esi),%eax
xor    %edi,%edi
mov    0x3c(%esp),%ebp
test   %al,%al
je     805067f <fchmod@plt+0x553f>
nop
cmp    $0x27,%al
je     8050608 <fchmod@plt+0x54c8>
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8050648 <fchmod@plt+0x5508>
movb   $0x0,(%eax)
lea    0x1(%eax),%edx
mov    %esi,0x0(%ebp)
cmpb   $0x20,0x1(%eax)
jne    8050652 <fchmod@plt+0x5512>
mov    %edx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmpb   $0x20,(%esi)
je     80505c0 <fchmod@plt+0x5480>
add    $0x1,%edi
test   %esi,%esi
je     80505d9 <fchmod@plt+0x5499>
movzbl (%esi),%eax
add    $0x4,%ebp
test   %al,%al
jne    8050588 <fchmod@plt+0x5448>
lea    0x0(,%edi,4),%eax
mov    0x3c(%esp),%edx
movl   $0x0,(%edx,%eax,1)
mov    0x38(%esp),%eax
test   %eax,%eax
je     80505f9 <fchmod@plt+0x54b9>
mov    0x38(%esp),%eax
mov    %edi,(%eax)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%esi),%ecx
mov    %ecx,(%esp)
movl   $0x27,0x4(%esp)
mov    %ecx,0xc(%esp)
call   804ab10 <strchr@plt>
mov    0xc(%esp),%ecx
test   %eax,%eax
je     805065c <fchmod@plt+0x551c>
movb   $0x0,(%eax)
lea    0x1(%eax),%esi
mov    %ecx,0x0(%ebp)
cmpb   $0x20,0x1(%eax)
jne    8050650 <fchmod@plt+0x5510>
xchg   %ax,%ax
add    $0x1,%esi
cmpb   $0x20,(%esi)
je     8050638 <fchmod@plt+0x54f8>
jmp    80505c8 <fchmod@plt+0x5488>
lea    0x0(%esi),%esi
mov    %esi,0x0(%ebp)
add    $0x1,%edi
jmp    80505d9 <fchmod@plt+0x5499>
mov    %esi,%edx
add    $0x1,%edi
mov    %edx,%esi
jmp    80505cf <fchmod@plt+0x548f>
mov    %ecx,0x0(%ebp)
jmp    805064b <fchmod@plt+0x550b>
mov    0x3c(%esp),%eax
mov    $0x1,%edi
mov    %esi,(%eax)
mov    $0x4,%eax
jmp    80505e0 <fchmod@plt+0x54a0>
xor    %eax,%eax
xor    %edi,%edi
jmp    80505e0 <fchmod@plt+0x54a0>
xor    %eax,%eax
jmp    80505e0 <fchmod@plt+0x54a0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1acc,%esp
mov    0x1ae8(%esp),%ecx
lea    0x2bc(%esp),%edi
mov    0x1ae0(%esp),%ebp
lea    0xbc(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x325f9,%ebx
mov    0x1ae4(%esp),%eax
mov    %gs:0x14,%edx
mov    %edx,0x1abc(%esp)
xor    %edx,%edx
mov    %ecx,0x30(%esp)
mov    0x1aec(%esp),%ecx
mov    0x0(%ebp),%edx
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x3c(%esp)
mov    0x1af0(%esp),%ecx
movl   $0x400,0x4(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    %ecx,0x38(%esp)
movl   $0xffffffff,0x64(%esp)
movl   $0xffffffff,0x68(%esp)
movl   $0xffffffff,0x6c(%esp)
movl   $0xffffffff,0x70(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %edi,0x4(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8050540 <fchmod@plt+0x5400>
mov    0x38(%esp),%edi
test   %edi,%edi
je     8050fb0 <fchmod@plt+0x5e70>
lea    0x64(%esp),%eax
movl   $0x800,0x4(%esp)
mov    %eax,(%esp)
call   804af00 <pipe2@plt>
test   %eax,%eax
jne    8050a30 <fchmod@plt+0x58f0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x5,%eax
jg     8050bb8 <fchmod@plt+0x5a78>
mov    0xbc(%esp),%eax
cmpb   $0x2f,(%eax)
je     80507c9 <fchmod@plt+0x5689>
mov    %eax,0xc(%esp)
lea    0x6bc(%esp),%edi
lea    -0x112ef(%ebx),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0xbc(%esp)
call   804ae00 <fork@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x34(%esp)
je     8050988 <fchmod@plt+0x5848>
test   %eax,%eax
jne    8050a78 <fchmod@plt+0x5938>
mov    0x64(%esp),%eax
test   %eax,%eax
js     80507fb <fchmod@plt+0x56bb>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
movl   $0xffffffff,0x64(%esp)
mov    0x6c(%esp),%eax
test   %eax,%eax
js     8050813 <fchmod@plt+0x56d3>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
movl   $0xffffffff,0x6c(%esp)
mov    0x28(%esp),%eax
movl   $0x2c4,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x112e4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110a9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x34(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x70(%esp),%eax
movl   $0x2,0x4(%esp)
mov    0x68(%esp),%ebp
mov    %eax,0x2c(%esp)
lea    -0x112d5(%ebx),%eax
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8050cd0 <fchmod@plt+0x5b90>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a500 <dup2@plt>
test   %ebp,%ebp
js     80512af <fchmod@plt+0x616f>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
js     805129a <fchmod@plt+0x615a>
mov    %edi,(%esp)
lea    -0x110b4(%ebx),%edi
call   804b0a0 <close@plt>
test   %ebp,%ebp
js     80508cb <fchmod@plt+0x578b>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a500 <dup2@plt>
mov    %ebp,(%esp)
call   804b0a0 <close@plt>
mov    0x2c(%esp),%ebp
test   %ebp,%ebp
js     80508eb <fchmod@plt+0x57ab>
movl   $0x2,0x4(%esp)
mov    %ebp,(%esp)
call   804a500 <dup2@plt>
mov    %ebp,(%esp)
call   804b0a0 <close@plt>
movl   $0xf,0x4(%esp)
movl   $0x1,(%esp)
call   804ad30 <prctl@plt>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     805091f <fchmod@plt+0x57df>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   804a650 <sigprocmask@plt>
mov    0x30(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,(%esp)
call   804ab70 <execve@plt>
mov    0x28(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1a2,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x11498(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x2,(%esp)
call   804a620 <_exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
movl   $0x2cb,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x112b0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110a9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0xffffffff,0x2c(%esp)
mov    0x64(%esp),%eax
test   %eax,%eax
js     80509da <fchmod@plt+0x589a>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    0x68(%esp),%eax
test   %eax,%eax
js     80509ea <fchmod@plt+0x58aa>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    0x6c(%esp),%eax
test   %eax,%eax
js     80509fa <fchmod@plt+0x58ba>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    0x70(%esp),%eax
test   %eax,%eax
js     8050a0a <fchmod@plt+0x58ca>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    0x1abc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x2c(%esp),%eax
jne    80514f7 <fchmod@plt+0x63b7>
add    $0x1acc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x2a5,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x2c(%esp)
lea    -0x11300(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110a9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
negl   0x2c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80509ca <fchmod@plt+0x588a>
xchg   %ax,%ax
mov    0x68(%esp),%eax
test   %eax,%eax
js     8050a90 <fchmod@plt+0x5950>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
movl   $0xffffffff,0x68(%esp)
mov    0x70(%esp),%eax
test   %eax,%eax
js     8050aa8 <fchmod@plt+0x5968>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
movl   $0xffffffff,0x70(%esp)
mov    0x6c(%esp),%eax
mov    0x64(%esp),%edx
mov    %eax,0x60(%esp)
shr    $0x1f,%eax
test   %al,%al
mov    %edx,0x5c(%esp)
je     8050c20 <fchmod@plt+0x5ae0>
shr    $0x1f,%edx
test   %dl,%dl
je     8050c20 <fchmod@plt+0x5ae0>
mov    0x34(%esp),%ecx
mov    $0x1,%edx
mov    0x54(%ebp),%eax
mov    %dx,0x90(%esp)
movl   $0x0,0x2c(%esp)
test   %ecx,%ecx
mov    %eax,0x8c(%esp)
jle    80509ca <fchmod@plt+0x588a>
lea    0x8c(%esp),%eax
mov    %eax,0x30(%esp)
lea    -0x1124a(%ebx),%eax
mov    %eax,0x38(%esp)
jmp    8050b50 <fchmod@plt+0x5a10>
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a8f0 <poll@plt>
test   %eax,%eax
js     8050e00 <fchmod@plt+0x5cc0>
je     8050e50 <fchmod@plt+0x5d10>
testb  $0x1,0x92(%esp)
jne    8050eae <fchmod@plt+0x5d6e>
mov    0x34(%esp),%eax
test   %eax,%eax
jle    80509ca <fchmod@plt+0x588a>
mov    0x50(%ebp),%edx
mov    $0xffffffff,%eax
or     0x4c(%ebp),%edx
je     8050b10 <fchmod@plt+0x59d0>
movl   $0x1,(%esp)
call   8063460 <fchmod@plt+0x18320>
mov    0x50(%ebp),%edi
mov    0x4c(%ebp),%esi
sub    0x44(%ebp),%eax
sbb    0x48(%ebp),%edx
cmp    %edi,%edx
ja     8050fa0 <fchmod@plt+0x5e60>
jb     8050b87 <fchmod@plt+0x5a47>
cmp    %esi,%eax
jae    8050fa0 <fchmod@plt+0x5e60>
sub    %eax,%esi
sbb    %edx,%edi
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
add    $0x3e8,%eax
jmp    8050b10 <fchmod@plt+0x59d0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x6c(%esp),%eax
movl   $0x800,0x4(%esp)
mov    %eax,(%esp)
call   804af00 <pipe2@plt>
test   %eax,%eax
je     8050789 <fchmod@plt+0x5649>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x2ac,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x2c(%esp)
lea    -0x11300(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110a9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
negl   0x2c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80509ca <fchmod@plt+0x588a>
lea    0x0(%esi),%esi
movl   $0x80000,(%esp)
call   804b080 <epoll_create1@plt>
test   %eax,%eax
mov    %eax,0x44(%esp)
js     80512ff <fchmod@plt+0x61bf>
mov    0x5c(%esp),%eax
test   %eax,%eax
js     8050d08 <fchmod@plt+0x5bc8>
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
lea    0x74(%esp),%ecx
lea    0x5c(%esp),%edx
mov    %ecx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x7c(%esp)
movl   $0x1,0x74(%esp)
mov    %edx,0x78(%esp)
call   804a980 <epoll_ctl@plt>
test   %eax,%eax
jns    8050d08 <fchmod@plt+0x5bc8>
lea    -0x12e61(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x1be,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
xchg   %ax,%ax
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804b0a0 <close@plt>
jmp    8050ace <fchmod@plt+0x598e>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x112cb(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
lea    -0x110b4(%ebx),%edi
mov    %edi,0xc(%esp)
movl   $0x18a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80508af <fchmod@plt+0x576f>
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
test   %eax,%eax
js     8050d5c <fchmod@plt+0x5c1c>
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
lea    0x80(%esp),%ecx
lea    0x60(%esp),%edx
mov    %ecx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x88(%esp)
00
movl   $0x1,0x80(%esp)
00
mov    %edx,0x84(%esp)
call   804a980 <epoll_ctl@plt>
test   %eax,%eax
js     8051400 <fchmod@plt+0x62c0>
lea    -0x132a6(%ebx),%eax
movl   $0x0,0x4c(%esp)
mov    %eax,0x30(%esp)
mov    %ebp,0x48(%esp)
mov    0x5c(%esp),%edi
test   %edi,%edi
js     8051218 <fchmod@plt+0x60d8>
mov    0x48(%esp),%ecx
mov    0x50(%ecx),%eax
or     0x4c(%ecx),%eax
je     8050fd0 <fchmod@plt+0x5e90>
movl   $0x1,(%esp)
call   8063460 <fchmod@plt+0x18320>
mov    0x48(%esp),%ecx
mov    0x50(%ecx),%edi
mov    0x4c(%ecx),%esi
sub    0x44(%ecx),%eax
sbb    0x48(%ecx),%edx
cmp    %edi,%edx
jb     805119d <fchmod@plt+0x605d>
jbe    8051195 <fchmod@plt+0x6055>
mov    0x28(%esp),%eax
movl   $0x1d9,0x8(%esp)
mov    0x48(%esp),%ebp
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x11297(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050cb8 <fchmod@plt+0x5b78>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
je     8050b44 <fchmod@plt+0x5a04>
neg    %eax
mov    %eax,0x2c(%esp)
lea    -0x11289(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x23d,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80509ca <fchmod@plt+0x588a>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    0x34(%esp),%edi
movl   $0x241,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x18(%esp)
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x9,0x4(%esp)
mov    %edi,(%esp)
call   804aa80 <kill@plt>
testb  $0x1,0x92(%esp)
je     8050b44 <fchmod@plt+0x5a04>
lea    0xabc(%esp),%eax
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x54(%ebp),%eax
mov    %eax,(%esp)
call   804a5a0 <read@plt>
add    $0xffffff80,%eax
jne    8050b44 <fchmod@plt+0x5a04>
mov    0xabc(%esp),%eax
cmp    $0xf,%eax
je     8051291 <fchmod@plt+0x6151>
cmp    $0x11,%eax
jne    8050b44 <fchmod@plt+0x5a04>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   804a930 <waitpid@plt>
test   %eax,%eax
js     8050b44 <fchmod@plt+0x5a04>
mov    0x80(%esp),%eax
mov    %eax,%edx
and    $0x7f,%edx
je     805139c <fchmod@plt+0x625c>
lea    0x1(%edx),%ecx
cmp    $0x1,%cl
jle    8051336 <fchmod@plt+0x61f6>
mov    %edx,(%esp)
call   804a850 <strsignal@plt>
movl   $0x25a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x20(%esp)
mov    0x80(%esp),%eax
and    $0x7f,%eax
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x1142c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0xffffffff,0x2c(%esp)
jmp    80509ca <fchmod@plt+0x588a>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x3e8,%eax
jmp    8050b10 <fchmod@plt+0x59d0>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x5,%eax
jg     8050758 <fchmod@plt+0x5618>
jmp    8050774 <fchmod@plt+0x5634>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
mov    %eax,0xc(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %eax,(%esp)
call   804add0 <epoll_wait@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
js     8051248 <fchmod@plt+0x6108>
je     8051437 <fchmod@plt+0x62f7>
lea    0x90(%esp),%esi
movl   $0x0,0x2c(%esp)
jmp    805103e <fchmod@plt+0x5efe>
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x10,%al
jne    8051128 <fchmod@plt+0x5fe8>
addl   $0x1,0x2c(%esp)
add    $0xc,%esi
mov    0x2c(%esp),%eax
cmp    %eax,0x3c(%esp)
jle    8050d72 <fchmod@plt+0x5c32>
mov    -0x4(%esi),%eax
mov    (%esi),%edi
test   $0x1,%al
je     8051020 <fchmod@plt+0x5ee0>
lea    0xabc(%esp),%ebp
movl   $0xfff,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a5a0 <read@plt>
test   %eax,%eax
jle    8051028 <fchmod@plt+0x5ee8>
mov    0x38(%esp),%edx
movb   $0x0,0xabc(%esp,%eax,1)
test   %edx,%edx
je     8051084 <fchmod@plt+0x5f44>
mov    0x5c(%esp),%ecx
cmp    %ecx,(%edi)
je     8051160 <fchmod@plt+0x6020>
mov    0x60(%esp),%eax
test   %eax,%eax
js     8051028 <fchmod@plt+0x5ee8>
mov    %esi,0x40(%esp)
mov    %ebp,%esi
jmp    80510f7 <fchmod@plt+0x5fb7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
mov    0x5c(%esp),%eax
cmp    %eax,(%edi)
lea    -0x11304(%ebx),%eax
cmove  0x30(%esp),%eax
mov    %esi,0x1c(%esp)
movl   $0x20b,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x11259(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
test   %ebp,%ebp
je     8051118 <fchmod@plt+0x5fd8>
mov    %ebp,%esi
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    8051098 <fchmod@plt+0x5f58>
cmpb   $0x0,(%esi)
je     8051118 <fchmod@plt+0x5fd8>
xor    %ebp,%ebp
jmp    805109e <fchmod@plt+0x5f5e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%esi
jmp    8051028 <fchmod@plt+0x5ee8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
mov    (%edi),%eax
movl   $0x2,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804a980 <epoll_ctl@plt>
test   %eax,%eax
js     80512c4 <fchmod@plt+0x6184>
movl   $0xffffffff,(%edi)
jmp    8051028 <fchmod@plt+0x5ee8>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%ecx
lea    (%eax,%ecx,1),%edx
cmp    %edx,0x1af4(%esp)
jbe    80511c8 <fchmod@plt+0x6088>
add    0x38(%esp),%ecx
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0x40(%esp)
call   804a6e0 <memcpy@plt>
mov    0x40(%esp),%edx
mov    %edx,0x4c(%esp)
jmp    8051084 <fchmod@plt+0x5f44>
cmp    %esi,%eax
jae    8050db8 <fchmod@plt+0x5c78>
sub    %eax,%esi
sbb    %edx,%edi
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
add    $0x3e8,%eax
jmp    8050fd5 <fchmod@plt+0x5e95>
nop
mov    0x1af4(%esp),%eax
movl   $0x1ff,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x11275(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8051084 <fchmod@plt+0x5f44>
lea    0x0(%esi),%esi
mov    0x60(%esp),%esi
test   %esi,%esi
jns    8050d7e <fchmod@plt+0x5c3e>
mov    0x38(%esp),%eax
mov    0x48(%esp),%ebp
test   %eax,%eax
je     8050cb8 <fchmod@plt+0x5b78>
mov    0x4c(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
jmp    8050cb8 <fchmod@plt+0x5b78>
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     8050d72 <fchmod@plt+0x5c32>
lea    -0x11289(%ebx),%eax
mov    0x48(%esp),%ebp
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x1e5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050cb8 <fchmod@plt+0x5b78>
movb   $0x1,0x60(%ebp)
jmp    8050b44 <fchmod@plt+0x5a04>
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   804a500 <dup2@plt>
jmp    80508a1 <fchmod@plt+0x5761>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804a500 <dup2@plt>
jmp    8050895 <fchmod@plt+0x5755>
lea    -0x11474(%ebx),%eax
mov    0x48(%esp),%ebp
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x210,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050cb8 <fchmod@plt+0x5b78>
lea    -0x12e9c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x1b5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050ace <fchmod@plt+0x598e>
cmp    $0x7f,%al
je     80514c9 <fchmod@plt+0x6389>
cmp    $0xffff,%eax
je     805147a <fchmod@plt+0x633a>
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
movl   $0x263,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x11404(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0xffffffff,0x2c(%esp)
jmp    80509ca <fchmod@plt+0x588a>
movzbl %ah,%eax
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
movl   $0x256,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x11450(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    $0xffffffff,%eax
cmpb   $0x0,0x81(%esp)
cmove  0x2c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    80509ca <fchmod@plt+0x588a>
lea    -0x12e61(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
movl   $0x1c8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050cb8 <fchmod@plt+0x5b78>
mov    0x28(%esp),%eax
movl   $0x1e9,0x8(%esp)
mov    0x48(%esp),%ebp
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x11297(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110bf(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8050cb8 <fchmod@plt+0x5b78>
mov    0x34(%esp),%eax
movl   $0x260,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x1121b(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0xffffffff,0x2c(%esp)
jmp    80509ca <fchmod@plt+0x588a>
mov    0x34(%esp),%eax
movl   $0x25d,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x1122e(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110ca(%ebx),%eax
mov    %eax,0xc(%esp)
jmp    80514a6 <fchmod@plt+0x6366>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x45c,%esp
mov    0x474(%esp),%eax
mov    0x470(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x31797,%ebx
mov    %eax,0x24(%esp)
mov    0x478(%esp),%eax
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x44c(%esp)
xor    %eax,%eax
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,%esi
mov    %eax,0x20(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
je     8051bcc <fchmod@plt+0x6a8c>
mov    %esi,(%esp)
lea    -0x11206(%ebx),%edi
call   8065650 <fchmod@plt+0x1a510>
mov    $0x7,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8051630 <fchmod@plt+0x64f0>
mov    0x20(%esp),%edi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
mov    %edi,(%esp)
call   8065170 <fchmod@plt+0x1a030>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8064b10 <fchmod@plt+0x199d0>
mov    %edi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    8051b50 <fchmod@plt+0x6a10>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
xor    %ebp,%ebp
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8056150 <fchmod@plt+0xb010>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    8051b38 <fchmod@plt+0x69f8>
mov    0x44c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebp,%eax
jne    8051df3 <fchmod@plt+0x6cb3>
add    $0x45c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80668c0 <fchmod@plt+0x1b780>
test   %eax,%eax
mov    %eax,0xc(%ebp)
je     80516b3 <fchmod@plt+0x6573>
mov    0x20(%esp),%edi
mov    %edi,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1b940>
mov    %edi,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    %eax,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
movl   $0x0,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   80652b0 <fchmod@plt+0x1a170>
mov    %edi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    8051ba0 <fchmod@plt+0x6a60>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8056150 <fchmod@plt+0xb010>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
test   %eax,%eax
jle    80516f0 <fchmod@plt+0x65b0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8065650 <fchmod@plt+0x1a510>
cmpb   $0x61,(%eax)
je     8051820 <fchmod@plt+0x66e0>
movl   $0x0,0x24(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
je     80517af <fchmod@plt+0x666f>
mov    0xc(%ebp),%eax
test   %eax,%eax
je     8051734 <fchmod@plt+0x65f4>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80528e0 <fchmod@plt+0x77a0>
cmpb   $0x0,0x65(%ebp)
je     8051af0 <fchmod@plt+0x69b0>
cmpb   $0x0,0x63(%ebp)
je     8051ad8 <fchmod@plt+0x6998>
cmpb   $0x0,0x67(%ebp)
je     8051b08 <fchmod@plt+0x69c8>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8065650 <fchmod@plt+0x1a510>
cmpb   $0x61,(%eax)
jne    8051ab0 <fchmod@plt+0x6970>
cmpb   $0x64,0x1(%eax)
jne    8051ab0 <fchmod@plt+0x6970>
cmpb   $0x64,0x2(%eax)
jne    8051ab0 <fchmod@plt+0x6970>
cmpb   $0x0,0x3(%eax)
jne    8051ab0 <fchmod@plt+0x6970>
mov    $0x1,%edx
mov    0x20(%ebp),%eax
mov    %eax,0x10(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80529e0 <fchmod@plt+0x78a0>
mov    0xc(%ebp),%eax
test   %eax,%eax
je     80517c6 <fchmod@plt+0x6686>
mov    %eax,(%esp)
call   8065670 <fchmod@plt+0x1a530>
or     %eax,%edx
jne    8051b68 <fchmod@plt+0x6a28>
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8065670 <fchmod@plt+0x1a530>
or     %eax,%edx
je     8051b90 <fchmod@plt+0x6a50>
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8064c20 <fchmod@plt+0x19ae0>
movl   $0x1,0x8(%esp)
mov    0xc(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064b10 <fchmod@plt+0x199d0>
mov    %esi,(%esp)
call   8065b90 <fchmod@plt+0x1aa50>
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
movl   $0x0,0xc(%ebp)
mov    0x24(%esp),%ebp
jmp    805160b <fchmod@plt+0x64cb>
nop
cmpb   $0x64,0x1(%eax)
jne    80516f0 <fchmod@plt+0x65b0>
cmpb   $0x64,0x2(%eax)
jne    80516f0 <fchmod@plt+0x65b0>
cmpb   $0x0,0x3(%eax)
jne    80516f0 <fchmod@plt+0x65b0>
mov    0x10(%ebp),%eax
test   %eax,%eax
je     80516f0 <fchmod@plt+0x65b0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    0x10(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     80516f0 <fchmod@plt+0x65b0>
mov    0x4(%ebp),%eax
lea    0x4c(%esp),%esi
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0x18(%esp)
movl   $0x2f5,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x113e0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x110f0(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    %eax,0xc(%esp)
lea    -0x1135c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x28(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
movl   $0x2,(%esp)
call   804af40 <socket@plt>
mov    %eax,%edi
xor    %eax,%eax
test   %edi,%edi
js     8051bfd <fchmod@plt+0x6abd>
movl   $0x0,(%esi,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     80518e9 <fchmod@plt+0x67a9>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x10(%ebp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %esi,0x8(%esp)
movl   $0x8923,0x4(%esp)
mov    %edi,(%esp)
call   804a8b0 <ioctl@plt>
test   %eax,%eax
je     8051bd6 <fchmod@plt+0x6a96>
call   804acd0 <__errno_location@plt>
mov    %eax,%edx
mov    (%eax),%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
cmpl   $0xffffffef,0x24(%esp)
je     8051c8a <fchmod@plt+0x6b4a>
mov    0x24(%esp),%eax
test   %eax,%eax
js     8051c4b <fchmod@plt+0x6b0b>
mov    %edi,(%esp)
call   804b0a0 <close@plt>
mov    0x24(%esp),%edi
test   %edi,%edi
jne    80516f8 <fchmod@plt+0x65b8>
mov    0x10(%ebp),%eax
lea    -0x110e3(%ebx),%edi
mov    %edi,0xc(%esp)
movl   $0x35c,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x111dc(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x111c5(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    %esi,(%esp)
mov    %esi,0x20(%esp)
lea    0x4c(%esp),%esi
call   8065440 <fchmod@plt+0x1a300>
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     80516f8 <fchmod@plt+0x65b8>
mov    0x10(%ebp),%edx
add    $0x1,%eax
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    %esi,%edx
sub    %eax,%edx
add    $0x400,%edx
mov    %edx,0x4(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %esi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1b940>
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x111b7(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    %esi,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %edi,0xc(%esp)
movl   $0x369,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x111ad(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80516f8 <fchmod@plt+0x65b8>
cmpb   $0x0,0x65(%ebp)
mov    $0x1,%edx
jne    805178a <fchmod@plt+0x664a>
cmpb   $0x0,0x63(%ebp)
jne    805178a <fchmod@plt+0x664a>
movzbl 0x67(%ebp),%edx
jmp    805178a <fchmod@plt+0x664a>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067d30 <fchmod@plt+0x1cbf0>
mov    %eax,0x20(%ebp)
jmp    8051748 <fchmod@plt+0x6608>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067d00 <fchmod@plt+0x1cbc0>
mov    %eax,0x1c(%ebp)
jmp    805173e <fchmod@plt+0x65fe>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067cd0 <fchmod@plt+0x1cb90>
test   %eax,%eax
jne    8051bb8 <fchmod@plt+0x6a78>
cmpl   $0x1,0x20(%ebp)
sbb    %eax,%eax
and    $0xffffffd0,%eax
add    $0x1b0,%eax
mov    %eax,0x18(%ebp)
jmp    8051752 <fchmod@plt+0x6612>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052e30 <fchmod@plt+0x7cf0>
jmp    805160b <fchmod@plt+0x64cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8051e10 <fchmod@plt+0x6cd0>
jmp    80515cc <fchmod@plt+0x648c>
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8065670 <fchmod@plt+0x1a530>
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1b8a0>
jmp    80517d9 <fchmod@plt+0x6699>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8063460 <fchmod@plt+0x18320>
jmp    8051b73 <fchmod@plt+0x6a33>
xchg   %ax,%ax
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8051e10 <fchmod@plt+0x6cd0>
jmp    80516b3 <fchmod@plt+0x6573>
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067cd0 <fchmod@plt+0x1cb90>
mov    %eax,0x18(%ebp)
jmp    8051752 <fchmod@plt+0x6612>
mov    $0xffffffff,%ebp
jmp    805160b <fchmod@plt+0x64cb>
mov    0x34(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x113b0(%ebx),%eax
mov    %eax,(%esp)
call   806d8d0 <fchmod@plt+0x22790>
movl   $0x0,0x24(%esp)
jmp    805197b <fchmod@plt+0x683b>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x2fa,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x24(%esp)
lea    -0x111ff(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
negl   0x24(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8051983 <fchmod@plt+0x6843>
mov    0x38(%esp),%ebp
mov    0x30(%esp),%esi
mov    %eax,0x24(%esp)
mov    0x34(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x32c,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
lea    -0x1138c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805197b <fchmod@plt+0x683b>
mov    0x30(%esp),%eax
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x111e5(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8923,0x4(%esp)
mov    %edi,(%esp)
call   804a8b0 <ioctl@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
js     8051de4 <fchmod@plt+0x6ca4>
mov    0x34(%esp),%eax
mov    %edx,0x30(%esp)
lea    -0x113b0(%ebx),%edx
mov    %edx,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x3c(%esp)
call   806d8d0 <fchmod@plt+0x22790>
mov    0x34(%esp),%eax
mov    %esi,(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x10(%ebp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x30(%esp),%edx
mov    $0x708,%ecx
lea    0x44(%esp),%eax
mov    %ebp,0x38(%esp)
mov    %esi,0x30(%esp)
mov    %ecx,%esi
mov    %eax,0x24(%esp)
mov    %edx,%ebp
jmp    8051d77 <fchmod@plt+0x6c37>
mov    0x0(%ebp),%eax
neg    %eax
cmp    $0xffffffef,%eax
jne    8051df8 <fchmod@plt+0x6cb8>
sub    $0x1,%esi
je     8051c3f <fchmod@plt+0x6aff>
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,0x44(%esp)
movl   $0x2faf080,0x48(%esp)
mov    %eax,(%esp)
call   804af30 <nanosleep@plt>
mov    0x30(%esp),%eax
movl   $0x8923,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804a8b0 <ioctl@plt>
test   %eax,%eax
jne    8051d60 <fchmod@plt+0x6c20>
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
mov    0x38(%esp),%ebp
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806d8d0 <fchmod@plt+0x22790>
movl   $0x0,0x24(%esp)
jmp    805197b <fchmod@plt+0x683b>
mov    (%edx),%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
jmp    805196f <fchmod@plt+0x682f>
call   806ed90 <fchmod@plt+0x23c50>
mov    %eax,0x24(%esp)
mov    0x38(%esp),%ebp
mov    0x30(%esp),%esi
jmp    805196f <fchmod@plt+0x682f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x30e9c,%ebx
sub    $0x430,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x444(%esp),%esi
mov    0x34c(%ebx),%eax
test   %eax,%eax
js     8051e52 <fchmod@plt+0x6d12>
mov    %esi,(%esp)
call   80686e0 <fchmod@plt+0x1d5a0>
test   %eax,%eax
mov    %eax,%edi
jns    8051e70 <fchmod@plt+0x6d30>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    8051f0f <fchmod@plt+0x6dcf>
add    $0x430,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
movl   $0x88,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x1100d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10ff5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x11080(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34c(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804b010 <inotify_rm_watch@plt>
lea    -0x11051(%ebx),%eax
mov    %edi,0x14(%esp)
lea    0x2c(%esp),%edi
mov    %eax,0x10(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %edi,(%esp)
call   804a810 <unlink@plt>
movl   $0xffffffff,0x4(%esp)
mov    %esi,(%esp)
call   8065c80 <fchmod@plt+0x1ab40>
jmp    8051e52 <fchmod@plt+0x6d12>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8cc,%esp
mov    %eax,0x2c(%esp)
mov    0x8e0(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x8bc(%esp)
xor    %eax,%eax
movzbl (%edx),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x30d66,%ebx
movb   $0x0,0x9c(%esp)
test   %al,%al
je     8052371 <fchmod@plt+0x7231>
cmp    (%esi),%al
jne    8052371 <fchmod@plt+0x7231>
mov    $0x1,%ecx
xor    %edi,%edi
mov    %al,0x1c(%esp)
jmp    8051f92 <fchmod@plt+0x6e52>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%ecx
movzbl -0x1(%esi,%ecx,1),%eax
cmp    %al,0x1c(%esp)
jne    80521f8 <fchmod@plt+0x70b8>
movzbl 0x0(%ebp,%ecx,1),%eax
mov    %ecx,%edx
cmpb   $0x2f,0x1c(%esp)
cmove  %ecx,%edi
test   %al,%al
mov    %al,0x1c(%esp)
jne    8051f80 <fchmod@plt+0x6e40>
movzbl (%esi,%ecx,1),%eax
mov    %edi,0x24(%esp)
lea    0x9c(%esp),%ecx
test   %al,%al
mov    %ecx,0x20(%esp)
mov    %ecx,0x38(%esp)
je     8052363 <fchmod@plt+0x7223>
lea    -0xbcf2(%ebx),%ecx
lea    (%esi,%edx,1),%edi
mov    %eax,%edx
mov    %ecx,0x1c(%esp)
mov    $0x400,%eax
jmp    8051fea <fchmod@plt+0x6eaa>
xchg   %ax,%ax
add    $0x1,%edi
movzbl (%edi),%edx
test   %dl,%dl
je     8052018 <fchmod@plt+0x6ed8>
cmp    $0x2f,%dl
jne    8051fe0 <fchmod@plt+0x6ea0>
mov    0x1c(%esp),%ecx
add    $0x1,%edi
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   8063170 <fchmod@plt+0x18030>
movzbl (%edi),%edx
test   %dl,%dl
jne    8051fea <fchmod@plt+0x6eaa>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%edx
mov    0x24(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
add    %ebp,%edi
mov    %edi,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
test   %eax,%eax
je     8052359 <fchmod@plt+0x7219>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804b070 <__lxstat64@plt>
test   %eax,%eax
jne    8052250 <fchmod@plt+0x7110>
mov    0x4c(%esp),%eax
mov    %eax,%edx
and    $0xb000,%eax
and    $0xf000,%edx
cmp    $0x2000,%eax
je     8052318 <fchmod@plt+0x71d8>
cmp    $0xa000,%edx
je     8052383 <fchmod@plt+0x7243>
lea    -0x10cf5(%ebx),%eax
mov    %eax,0x28(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x49c(%esp),%edi
lea    -0x10fce(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x65,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
movl   $0x0,0x14(%esp)
mov    %esi,0x8(%esp)
movl   $0x420,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
lea    -0x10fb5(%ebx),%eax
mov    %eax,0xc(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,(%esp)
call   804a810 <unlink@plt>
mov    0x20(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1ed,0x4(%esp)
mov    %edi,(%esp)
call   806e8e0 <fchmod@plt+0x237a0>
cmp    $0xfffffffe,%eax
jne    8052208 <fchmod@plt+0x70c8>
movl   $0xa000,0x4(%esp)
mov    %edi,(%esp)
call   806e3c0 <fchmod@plt+0x23280>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804aea0 <symlink@plt>
test   %eax,%eax
je     8052178 <fchmod@plt+0x7038>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
call   806e4c0 <fchmod@plt+0x23380>
mov    0x1c(%esp),%eax
cmp    $0xfffffffe,%eax
je     8052118 <fchmod@plt+0x6fd8>
test   %eax,%eax
mov    %eax,%ebp
jne    8052212 <fchmod@plt+0x70d2>
jmp    805217d <fchmod@plt+0x703d>
call   806e4c0 <fchmod@plt+0x23380>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804aae0 <rename@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80521d0 <fchmod@plt+0x7090>
lea    -0x10f91(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
movl   $0x78,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %edi,(%esp)
call   804a810 <unlink@plt>
lea    0x0(%esi),%esi
mov    0x8bc(%esp),%esi
xor    %gs:0x14,%esi
mov    %ebp,%eax
jne    805246f <fchmod@plt+0x732f>
add    $0x8cc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x24(%esp)
jmp    8051fb1 <fchmod@plt+0x6e71>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8052131 <fchmod@plt+0x6ff1>
mov    %eax,%ebp
mov    0x20(%esp),%eax
mov    %edi,0x18(%esp)
movl   $0x73,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10faf(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80521d0 <fchmod@plt+0x7090>
xchg   %ax,%ax
mov    0x20(%esp),%edi
lea    -0x10ea8(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10cf5(%ebx),%eax
mov    %eax,0x28(%esp)
mov    %eax,0xc(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
movl   $0x56,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x24(%esp)
call   8062020 <fchmod@plt+0x16ee0>
xchg   %ax,%ax
movl   $0x1ed,0x4(%esp)
mov    %esi,(%esp)
call   806e8e0 <fchmod@plt+0x237a0>
cmp    $0xfffffffe,%eax
jne    8052308 <fchmod@plt+0x71c8>
movl   $0xa000,0x4(%esp)
mov    %esi,(%esp)
call   806e3c0 <fchmod@plt+0x23280>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804aea0 <symlink@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80522f8 <fchmod@plt+0x71b8>
call   804acd0 <__errno_location@plt>
mov    (%eax),%ebp
call   806e4c0 <fchmod@plt+0x23380>
neg    %ebp
cmp    $0xfffffffe,%ebp
je     8052298 <fchmod@plt+0x7158>
test   %ebp,%ebp
je     80521d0 <fchmod@plt+0x7090>
lea    0x49c(%esp),%edi
jmp    805209d <fchmod@plt+0x6f5d>
xchg   %ax,%ax
call   806e4c0 <fchmod@plt+0x23380>
jmp    80521d0 <fchmod@plt+0x7090>
lea    0x0(%esi),%esi
test   %eax,%eax
lea    0x0(%esi),%esi
je     80522ad <fchmod@plt+0x716d>
jmp    80522ea <fchmod@plt+0x71aa>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x10f20(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10cf5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %ebp,0x18(%esp)
xor    %ebp,%ebp
mov    %esi,0x14(%esp)
movl   $0x44,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    80521d0 <fchmod@plt+0x7090>
mov    $0xffffffea,%ebp
jmp    80521d0 <fchmod@plt+0x7090>
mov    0x20(%esp),%edx
mov    $0x400,%eax
jmp    805201c <fchmod@plt+0x6edc>
movzbl (%esi),%eax
xor    %edx,%edx
movl   $0x0,0x24(%esp)
jmp    8051fb1 <fchmod@plt+0x6e71>
lea    0x49c(%esp),%edi
movl   $0x400,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a860 <readlink@plt>
lea    -0x1(%eax),%edx
cmp    $0x3fe,%edx
ja     8052456 <fchmod@plt+0x7316>
movb   $0x0,0x49c(%esp,%eax,1)
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
lea    -0x10cf5(%ebx),%ecx
mov    %ecx,0x28(%esp)
lea    -0x10fe6(%ebx),%ecx
mov    %ecx,0x24(%esp)
test   %eax,%eax
jne    805209d <fchmod@plt+0x6f5d>
mov    0x20(%esp),%eax
xor    %ebp,%ebp
mov    %ecx,0x4(%esp)
mov    %esi,0x14(%esp)
movl   $0x4e,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x10ed8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   806e200 <fchmod@plt+0x230c0>
movl   $0x100,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   804a530 <utimensat@plt>
jmp    80521d0 <fchmod@plt+0x7090>
lea    -0x10cf5(%ebx),%eax
mov    %eax,0x28(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %eax,0x24(%esp)
jmp    805209d <fchmod@plt+0x6f5d>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x30829,%ebx
sub    $0x146c,%esp
mov    0x1480(%esp),%ecx
lea    0x5c(%esp),%esi
mov    %eax,(%esp)
mov    %edx,0x44(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x145c(%esp)
xor    %edi,%edi
mov    %eax,%edi
mov    %ecx,0x38(%esp)
mov    %eax,0x20(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %esi,0x4(%esp)
movl   $0x400,0x8(%esp)
mov    %eax,0x4c(%esp)
mov    %ebp,%eax
add    $0x4,%eax
mov    %eax,(%esp)
lea    0xc5c(%esp),%ebp
call   806d2f0 <fchmod@plt+0x221b0>
lea    -0x10f74(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x45c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %eax,%esi
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
movl   $0x0,0x14(%esp)
mov    %esi,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
lea    -0x1033a(%ebx),%eax
mov    %eax,0xc(%esp)
call   8063320 <fchmod@plt+0x181e0>
cmpb   $0x0,0x38(%esp)
je     8052830 <fchmod@plt+0x76f0>
mov    0x20(%esp),%edi
lea    0x85c(%esp),%esi
mov    %edi,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %edi,(%esp)
mov    %eax,0x3c(%esp)
call   80686a0 <fchmod@plt+0x1d560>
mov    %edi,(%esp)
mov    %eax,0x40(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %esi,0x34(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804b0d0 <opendir@plt>
mov    %eax,%edi
test   %edi,%edi
lea    -0x10fe6(%ebx),%eax
mov    %eax,0x28(%esp)
je     8052750 <fchmod@plt+0x7610>
lea    -0x10f63(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     8052748 <fchmod@plt+0x7608>
movzbl 0x13(%eax),%edx
test   %dl,%dl
je     8052748 <fchmod@plt+0x7608>
cmp    $0x2e,%dl
je     80525d0 <fchmod@plt+0x7490>
lea    0x13(%eax),%esi
mov    0x24(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x9a,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0x10ce8(%ebx),%eax
mov    %eax,0x30(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     80525d0 <fchmod@plt+0x7490>
mov    0x3c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8067760 <fchmod@plt+0x1c620>
test   %eax,%eax
mov    %eax,%esi
je     80525d0 <fchmod@plt+0x7490>
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
test   %eax,%eax
mov    %eax,%ecx
je     805272d <fchmod@plt+0x75ed>
mov    0x34(%esp),%edx
test   %edx,%edx
je     805269c <fchmod@plt+0x755c>
mov    %esi,(%esp)
mov    %eax,0x48(%esp)
call   80686a0 <fchmod@plt+0x1d560>
mov    0x48(%esp),%ecx
cmp    0x40(%esp),%eax
jle    805272d <fchmod@plt+0x75ed>
mov    %esi,(%esp)
mov    %ecx,0x48(%esp)
call   80686a0 <fchmod@plt+0x1d560>
mov    %esi,(%esp)
mov    %eax,0x34(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    0x24(%esp),%ecx
mov    0x34(%esp),%edx
movl   $0xa8,0x8(%esp)
movl   $0x7,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x10e88(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   80686a0 <fchmod@plt+0x1d560>
mov    0x48(%esp),%ecx
lea    0x85c(%esp),%edx
mov    %edx,(%esp)
movl   $0x400,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x40(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x30(%esp),%edx
mov    %edx,0x34(%esp)
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    80525e0 <fchmod@plt+0x74a0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   804b0b0 <closedir@plt>
mov    0x34(%esp),%eax
test   %eax,%eax
je     8052868 <fchmod@plt+0x7728>
lea    -0x10f49(%ebx),%eax
mov    0x34(%esp),%edi
mov    %eax,0x10(%esp)
lea    -0x10cd2(%ebx),%eax
mov    0x44(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0xcc,0x8(%esp)
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x20(%esp),%eax
mov    %edi,%edx
mov    %esi,(%esp)
call   8051f20 <fchmod@plt+0x6de0>
cmpb   $0x0,0x38(%esp)
jne    80527c5 <fchmod@plt+0x7685>
jmp    8052806 <fchmod@plt+0x76c6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804b0a0 <close@plt>
cmp    $0xfffffffe,%esi
jne    8052806 <fchmod@plt+0x76c6>
movl   $0x1ed,0x4(%esp)
mov    %ebp,(%esp)
call   806e8c0 <fchmod@plt+0x23780>
cmp    $0xfffffffe,%eax
mov    %eax,%esi
jne    8052828 <fchmod@plt+0x76e8>
movl   $0x124,0x8(%esp)
movl   $0xa0241,0x4(%esp)
mov    %ebp,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
jns    80527b8 <fchmod@plt+0x7678>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
cmp    $0xfffffffe,%esi
je     80527c5 <fchmod@plt+0x7685>
mov    0x145c(%esp),%eax
xor    %gs:0x14,%eax
jne    80528da <fchmod@plt+0x779a>
add    $0x146c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     80527dc <fchmod@plt+0x769c>
jmp    8052806 <fchmod@plt+0x76c6>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   804a810 <unlink@plt>
test   %eax,%eax
je     80528c9 <fchmod@plt+0x7789>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
mov    %eax,0x3c(%esp)
jmp    805259f <fchmod@plt+0x745f>
lea    0x0(%esi),%esi
lea    -0x10e64(%ebx),%eax
mov    0x44(%esp),%edi
mov    %eax,0x10(%esp)
lea    -0x10cd2(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0xc8,0x8(%esp)
mov    %edi,0x14(%esp)
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %edi,(%esp)
call   804a810 <unlink@plt>
test   %eax,%eax
jne    80527aa <fchmod@plt+0x766a>
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   806c930 <fchmod@plt+0x217f0>
jmp    80527aa <fchmod@plt+0x766a>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a740 <rmdir@plt>
jmp    8052840 <fchmod@plt+0x7700>
call   806ed90 <fchmod@plt+0x23c50>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x303c8,%ebx
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
mov    %eax,%edi
test   %edi,%edi
lea    -0x10e44(%ebx),%eax
mov    %eax,0x1c(%esp)
je     8052964 <fchmod@plt+0x7824>
xchg   %ax,%ax
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,%esi
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%ebp
jne    805293e <fchmod@plt+0x77fe>
jmp    8052970 <fchmod@plt+0x7830>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
je     8052970 <fchmod@plt+0x7830>
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    8052930 <fchmod@plt+0x77f0>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8052910 <fchmod@plt+0x77d0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %esi,0x14(%esp)
movl   $0xfa,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0x10cc6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x40(%esp),%eax
mov    %esi,%edx
movl   $0x0,(%esp)
call   8052480 <fchmod@plt+0x7340>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8052910 <fchmod@plt+0x77d0>
jmp    8052964 <fchmod@plt+0x7824>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4bc,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x302c5,%ebx
mov    0x4d0(%esp),%ebp
mov    0x4d4(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x38(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4ac(%esp)
xor    %eax,%eax
call   80679f0 <fchmod@plt+0x1c8b0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8067d60 <fchmod@plt+0x1cc20>
mov    0x4e0(%esp),%edi
mov    0x4dc(%esp),%ecx
mov    %esi,0x18(%esp)
movl   $0x12f,0x8(%esp)
mov    %edi,0x24(%esp)
mov    0x4d8(%esp),%edi
mov    %ecx,0x20(%esp)
mov    %eax,0x14(%esp)
lea    -0x10e10(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10d03(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10fe6(%ebx),%eax
mov    %edi,0x1c(%esp)
lea    -0x10f2d(%ebx),%edi
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x3c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %ebp,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %ebp,(%esp)
mov    %edx,0x34(%esp)
mov    %eax,0x30(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    $0x6,%ecx
mov    %edi,0x2c(%esp)
mov    %eax,%esi
mov    0x4d8(%esp),%eax
repz cmpsb %es:(%edi),%ds:(%esi)
mov    0x4d8(%esp),%esi
movl   $0x3,(%esp)
seta   %dl
setb   %cl
or     $0x20,%ah
or     $0x6000,%esi
cmp    %cl,%dl
cmovne %eax,%esi
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   804b070 <__lxstat64@plt>
test   %eax,%eax
jne    8052d20 <fchmod@plt+0x7be0>
mov    0x5c(%esp),%eax
xor    %esi,%eax
test   $0xf0,%ah
jne    8052dd8 <fchmod@plt+0x7c98>
mov    0x34(%esp),%edx
mov    0x30(%esp),%ecx
xor    0x70(%esp),%edx
xor    0x6c(%esp),%ecx
or     %ecx,%edx
jne    8052dd8 <fchmod@plt+0x7c98>
cmpb   $0x0,0x38(%esp)
je     8052be6 <fchmod@plt+0x7aa6>
test   $0x1ff,%eax
jne    8052b4e <fchmod@plt+0x7a0e>
mov    0x64(%esp),%eax
cmp    %eax,0x4dc(%esp)
je     8052d70 <fchmod@plt+0x7c30>
mov    0x4e0(%esp),%eax
mov    0x28(%esp),%edi
mov    %esi,0x18(%esp)
movl   $0x11a,0x8(%esp)
mov    %eax,0x20(%esp)
mov    0x4dc(%esp),%eax
mov    %edi,0x14(%esp)
movl   $0x7,(%esp)
mov    %eax,0x1c(%esp)
lea    -0x10d74(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10d1a(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804afc0 <chmod@plt>
mov    0x4e0(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x4dc(%esp),%eax
mov    %eax,0x4(%esp)
call   804a5b0 <chown@plt>
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806e200 <fchmod@plt+0x230c0>
mov    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   804a530 <utimensat@plt>
mov    %ebp,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %ebp,(%esp)
mov    %eax,%esi
movzbl %al,%eax
shrd   $0xc,%edx,%esi
mov    %esi,%ecx
xor    %cl,%cl
mov    %ecx,0x30(%esp)
or     %eax,0x30(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %ebp,(%esp)
mov    %edx,0x28(%esp)
shrd   $0x8,%edx,%eax
andl   $0xfffff000,0x28(%esp)
and    $0xfff,%eax
or     %eax,0x28(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    0x2c(%esp),%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x10f27(%ebx),%eax
lea    0xac(%esp),%esi
mov    %esi,(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
setb   %dl
seta   %cl
cmp    %dl,%cl
mov    0x30(%esp),%ecx
cmove  0x2c(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    0x28(%esp),%ecx
mov    %eax,0x14(%esp)
lea    -0xb797(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ecx,0x18(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %ebp,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
mov    %esi,(%esp)
mov    %eax,%edx
mov    %ebp,%eax
call   8051f20 <fchmod@plt+0x6de0>
mov    %ebp,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%esi
je     8052cfe <fchmod@plt+0x7bbe>
nop
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x1,(%esp)
mov    %eax,%edx
mov    %ebp,%eax
call   8052480 <fchmod@plt+0x7340>
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    8052cd8 <fchmod@plt+0x7b98>
mov    0x4ac(%esp),%eax
xor    %gs:0x14,%eax
jne    8052e27 <fchmod@plt+0x7ce7>
add    $0x4bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x28(%esp),%eax
movl   $0x10d,0x8(%esp)
movl   $0x7,(%esp)
neg    %esi
mov    %eax,0x14(%esp)
lea    -0x10dd0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10d1a(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
test   %esi,%esi
js     8052cfe <fchmod@plt+0x7bbe>
jmp    8052c0a <fchmod@plt+0x7aca>
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
cmp    %eax,0x4e0(%esp)
jne    8052b4e <fchmod@plt+0x7a0e>
mov    0x4e0(%esp),%eax
mov    %esi,0x18(%esp)
movl   $0x11e,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x20(%esp)
mov    0x4dc(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10d48(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10d1a(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8052bca <fchmod@plt+0x7a8a>
mov    %ebp,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8067d60 <fchmod@plt+0x1cc20>
mov    %esi,0x18(%esp)
movl   $0x114,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10db0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10d1a(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8052cfe <fchmod@plt+0x7bbe>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x44c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2fe75,%ebx
mov    0x460(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x43c(%esp)
xor    %eax,%eax
mov    %esi,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%edi
je     8052e96 <fchmod@plt+0x7d56>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,(%esp)
mov    %eax,%edx
mov    %esi,%eax
call   8052480 <fchmod@plt+0x7340>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8052e70 <fchmod@plt+0x7d30>
mov    %esi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %esi,(%esp)
mov    %eax,%edi
movzbl %al,%eax
shrd   $0xc,%edx,%edi
mov    %edi,%ecx
xor    %cl,%cl
mov    %ecx,0x28(%esp)
or     %eax,0x28(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %esi,(%esp)
shrd   $0x8,%edx,%eax
mov    %edx,%ebp
and    $0xfff,%eax
and    $0xfffff000,%ebp
or     %eax,%ebp
call   8066410 <fchmod@plt+0x1b2d0>
mov    $0x6,%ecx
lea    -0x10f27(%ebx),%edx
mov    %eax,%esi
lea    -0x10f2d(%ebx),%eax
mov    %eax,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %eax,0x2c(%esp)
mov    %ebp,0x18(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
mov    0x28(%esp),%eax
cmove  0x2c(%esp),%edx
lea    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    -0xb797(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   804a810 <unlink@plt>
mov    0x43c(%esp),%eax
xor    %gs:0x14,%eax
jne    8052f63 <fchmod@plt+0x7e23>
add    $0x44c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x14(%eax),%ecx
mov    0x18(%eax),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2fd2e,%ebx
lea    0x1(%ecx),%edx
cmp    %eax,%edx
jb     8052fe8 <fchmod@plt+0x7ea8>
cmp    $0x8,%eax
mov    $0x8,%ebp
cmovae %eax,%ebp
add    %ebp,%eax
lea    (%eax,%eax,2),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     8052fed <fchmod@plt+0x7ead>
add    %ebp,0x18(%esi)
mov    0x14(%esi),%ecx
mov    %eax,0x10(%esi)
lea    (%ecx,%ecx,2),%edx
lea    (%eax,%edx,4),%eax
mov    (%edi),%edx
mov    %edx,(%eax)
mov    0x4(%edi),%edx
mov    %edx,0x4(%eax)
mov    0x8(%edi),%edx
mov    %edx,0x8(%eax)
xor    %eax,%eax
addl   $0x1,0x14(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x10(%esi),%eax
jmp    8052fc2 <fchmod@plt+0x7e82>
mov    $0xffffffff,%eax
jmp    8052fde <fchmod@plt+0x7e9e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2fca9,%ebx
sub    $0x44c,%esp
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x43c(%esp)
xor    %eax,%eax
call   804b0e0 <__ctype_b_loc@plt>
mov    %edi,%edx
mov    %eax,0x20(%esp)
mov    (%eax),%esi
jmp    8053043 <fchmod@plt+0x7f03>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
jne    8053040 <fchmod@plt+0x7f00>
test   %al,%al
je     8053268 <fchmod@plt+0x8128>
cmp    $0x23,%al
je     8053268 <fchmod@plt+0x8128>
movl   $0x3d,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8053268 <fchmod@plt+0x8128>
mov    0x20(%esp),%edi
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
movsbl 0x1(%eax),%eax
mov    0x24(%esp),%edx
mov    (%edi),%esi
testb  $0x20,0x1(%esi,%eax,2)
je     80530a6 <fchmod@plt+0x7f66>
nop
add    $0x1,%ebp
movsbl 0x0(%ebp),%eax
testb  $0x20,0x1(%esi,%eax,2)
jne    8053098 <fchmod@plt+0x7f58>
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     8053268 <fchmod@plt+0x8128>
mov    0x24(%esp),%edx
jmp    80530c2 <fchmod@plt+0x7f82>
mov    %edi,%eax
movsbl -0x1(%edx,%eax,1),%ecx
lea    -0x1(%eax),%edi
testb  $0x20,0x1(%esi,%ecx,2)
jne    80530c0 <fchmod@plt+0x7f80>
movb   $0x0,(%edx,%eax,1)
mov    %ebp,(%esp)
mov    %edx,0x24(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     8053268 <fchmod@plt+0x8128>
mov    0x20(%esp),%edi
mov    0x24(%esp),%edx
mov    (%edi),%edi
mov    %edx,0x20(%esp)
jmp    8053102 <fchmod@plt+0x7fc2>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
movsbl -0x1(%ebp,%eax,1),%ecx
lea    -0x1(%eax),%edx
lea    0x0(%ebp,%edx,1),%esi
testb  $0x20,0x1(%edi,%ecx,2)
jne    8053100 <fchmod@plt+0x7fc0>
test   %eax,%eax
mov    0x20(%esp),%edx
mov    %esi,%edi
movb   $0x0,0x0(%ebp,%eax,1)
je     8053268 <fchmod@plt+0x8128>
movzbl 0x0(%ebp),%eax
cmp    $0x27,%al
je     8053134 <fchmod@plt+0x7ff4>
cmp    $0x22,%al
jne    8053142 <fchmod@plt+0x8002>
cmp    (%edi),%al
jne    805322b <fchmod@plt+0x80eb>
movb   $0x0,(%edi)
add    $0x1,%ebp
mov    $0x8,%ecx
mov    %edx,%esi
lea    -0x1063b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80531a8 <fchmod@plt+0x8068>
mov    0x28(%esp),%eax
xor    %esi,%esi
mov    %edx,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    0x20(%esp),%edx
cmpb   $0x2e,(%edx)
je     8053186 <fchmod@plt+0x8046>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
mov    0x43c(%esp),%edi
xor    %gs:0x14,%edi
mov    %esi,%eax
jne    8053272 <fchmod@plt+0x8132>
add    $0x44c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x28(%esp),%edi
lea    0x3c(%esp),%esi
mov    %edi,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %ebp,0x18(%esp)
movl   $0x25a,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10c84(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff9c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    -0x13cfe(%ebx),%eax
mov    %esi,(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %edi,(%esp)
call   8066a80 <fchmod@plt+0x1b940>
jmp    8053186 <fchmod@plt+0x8046>
mov    0x2c(%esp),%eax
movl   $0x24e,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10ca8(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff9c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    0x0(%esi),%esi
mov    $0xffffffff,%esi
jmp    8053186 <fchmod@plt+0x8046>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2fa29,%ebx
sub    $0x43c,%esp
mov    0x1c(%eax),%eax
mov    0x450(%esp),%esi
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    (%eax),%ebp
add    0x4(%edx),%ebp
test   %esi,%esi
lea    -0x11546(%ebx),%eax
cmove  %eax,%esi
cmpb   $0x5,0x2(%edx)
ja     80533a8 <fchmod@plt+0x8268>
movzbl 0x2(%edx),%eax
mov    -0x10168(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     80533a8 <fchmod@plt+0x8268>
cmpb   $0x1,0x1(%edi)
je     80533b2 <fchmod@plt+0x8272>
mov    $0xffffffff,%eax
mov    0x42c(%esp),%edi
xor    %gs:0x14,%edi
jne    805344a <fchmod@plt+0x830a>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebp,0x8(%esp)
lea    0x2c(%esp),%ebp
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
jmp    8053374 <fchmod@plt+0x8234>
lea    0x0(%esi),%esi
movb   $0x0,(%eax)
lea    0x1(%eax),%edx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x18(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
je     80532f9 <fchmod@plt+0x81b9>
mov    0x18(%esp),%edx
test   %edx,%edx
je     80533a8 <fchmod@plt+0x8268>
mov    %edx,%ebp
movl   $0x7c,0x4(%esp)
mov    %ebp,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    8053348 <fchmod@plt+0x8208>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
je     80532f9 <fchmod@plt+0x81b9>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2,0x1(%edi)
jne    8053303 <fchmod@plt+0x81c3>
xor    %eax,%eax
jmp    8053308 <fchmod@plt+0x81c8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%esi)
setne  %al
jmp    80532f1 <fchmod@plt+0x81b1>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
sete   %al
jmp    80532f1 <fchmod@plt+0x81b1>
xchg   %ax,%ax
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x18(%esp)
jmp    8053403 <fchmod@plt+0x82c3>
xchg   %ax,%ax
lea    0x1(%ecx),%ebp
movl   $0x7c,0x4(%esp)
mov    %ebp,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%ecx
je     80532e0 <fchmod@plt+0x81a0>
sub    %ebp,%eax
cmp    0x18(%esp),%eax
jne    8053400 <fchmod@plt+0x82c0>
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x8(%esp)
call   804afa0 <strncmp@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    8053400 <fchmod@plt+0x82c0>
jmp    80532f9 <fchmod@plt+0x81b9>
call   806ed90 <fchmod@plt+0x23c50>
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x44c,%esp
mov    0x464(%esp),%esi
mov    %edx,0x20(%esp)
mov    0x460(%esp),%ecx
mov    %gs:0x14,%eax
mov    %eax,0x43c(%esp)
xor    %eax,%eax
mov    0x1c(%ebp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2f82f,%ebx
movzbl 0x3(%esi),%edx
mov    (%eax),%eax
add    0x8(%esi),%eax
shr    $0x4,%dl
movzbl %dl,%edi
cmp    $0x2,%edi
je     80534b8 <fchmod@plt+0x8378>
cmp    $0x3,%edi
je     80535e8 <fchmod@plt+0x84a8>
cmp    $0x1,%edi
je     80534d6 <fchmod@plt+0x8396>
mov    $0xffffffff,%eax
jmp    8053504 <fchmod@plt+0x83c4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x3c(%esp),%edi
movl   $0x200,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    %edi,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edi
je     80534ad <fchmod@plt+0x836d>
mov    %edi,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
jne    8053528 <fchmod@plt+0x83e8>
mov    %edi,(%esp)
mov    %esi,%edx
mov    %ebp,%eax
call   8053280 <fchmod@plt+0x8140>
mov    0x43c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805362e <fchmod@plt+0x84ee>
add    $0x44c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
call   804b0e0 <__ctype_b_loc@plt>
mov    0x20(%esp),%edx
mov    (%eax),%ecx
mov    %eax,0x24(%esp)
lea    -0x1(%edx),%eax
mov    %eax,0x20(%esp)
movsbl -0x1(%edi,%edx,1),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     80534f8 <fchmod@plt+0x83b8>
mov    0x1c(%ebp),%eax
mov    %ecx,0x2c(%esp)
mov    (%eax),%edx
add    0x4(%esi),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   804ab30 <strlen@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
je     80534f8 <fchmod@plt+0x83b8>
movsbl -0x1(%edx,%eax,1),%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    80534f8 <fchmod@plt+0x83b8>
lea    0x23c(%esp),%edx
cmp    %edx,%edi
je     80535af <fchmod@plt+0x846f>
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %edx,0x28(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
mov    (%eax),%ecx
mov    0x20(%esp),%edi
movsbl 0x23c(%esp,%edi,1),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     80535df <fchmod@plt+0x849f>
mov    %edi,%eax
add    %edx,%eax
jmp    80535d6 <fchmod@plt+0x8496>
movsbl -0x1(%edi),%edi
sub    $0x1,%eax
testb  $0x20,0x1(%ecx,%edi,2)
je     80535df <fchmod@plt+0x849f>
cmp    %edx,%eax
mov    %eax,%edi
movb   $0x0,(%eax)
jne    80535c8 <fchmod@plt+0x8488>
mov    %edx,%edi
jmp    80534f8 <fchmod@plt+0x83b8>
xchg   %ax,%ax
lea    0x23c(%esp),%edi
movl   $0x1,0x10(%esp)
movl   $0x200,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   806cd50 <fchmod@plt+0x21c10>
test   %eax,%eax
jne    80534ad <fchmod@plt+0x836d>
mov    %edi,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     80534f8 <fchmod@plt+0x83b8>
jmp    8053528 <fchmod@plt+0x83e8>
xchg   %ax,%ax
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2f668,%ebx
sub    $0x10,%esp
mov    %edx,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8062b00 <fchmod@plt+0x179c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x310(%eax),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2f61e,%ebx
cmp    $0x33,%edx
lea    (%eax,%eax,2),%eax
lea    0x10(%edi,%eax,4),%esi
movl   $0x0,(%esi)
movl   $0x0,0x4(%esi)
movl   $0x0,0x8(%esi)
ja     80539e0 <fchmod@plt+0x88a0>
mov    -0x10150(%ebx,%edx,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esi)
mov    0x44(%esp),%eax
movl   $0x0,0x48(%esp)
test   %eax,%eax
setne  %dl
test   %dl,%dl
je     8053729 <fchmod@plt+0x85e9>
cmp    $0x1e,%ebp
jbe    8053729 <fchmod@plt+0x85e9>
mov    0x44(%esp),%eax
cmpb   $0x5b,(%eax)
je     8053940 <fchmod@plt+0x8800>
mov    0x44(%esp),%eax
movl   $0x25,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80539f0 <fchmod@plt+0x88b0>
movzbl 0x3(%esi),%eax
and    $0xfffffff0,%eax
or     $0x2,%eax
mov    %al,0x3(%esi)
mov    0x48(%esp),%edx
test   %edx,%edx
je     8053767 <fchmod@plt+0x8627>
mov    0x48(%esp),%eax
cmpb   $0x5b,(%eax)
je     8053850 <fchmod@plt+0x8710>
mov    0x48(%esp),%eax
movl   $0x25,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8053958 <fchmod@plt+0x8818>
movzbl 0x3(%esi),%eax
and    $0xf,%eax
or     $0x20,%eax
mov    %al,0x3(%esi)
mov    %ebp,%eax
mov    %al,(%esi)
mov    0x40(%esp),%eax
mov    %al,0x1(%esi)
mov    0x310(%edi),%eax
add    $0x1,%eax
cmp    $0x3f,%eax
mov    %eax,0x310(%edi)
ja     8053a1e <fchmod@plt+0x88de>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    0x44(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    %eax,0x4(%esi)
mov    0x48(%esp),%eax
test   %eax,%eax
je     80537c2 <fchmod@plt+0x8682>
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esi)
movl   $0x0,0x48(%esp)
mov    0x44(%esp),%ecx
test   %ecx,%ecx
setne  %al
cmp    $0x1d,%ebp
setbe  %dl
and    %al,%dl
mov    %edx,0x1c(%esp)
je     8053938 <fchmod@plt+0x87f8>
mov    0x44(%esp),%eax
movl   $0x7c,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
movl   $0x2a,0x4(%esp)
test   %eax,%eax
mov    0x44(%esp),%eax
setne  0x1b(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8053988 <fchmod@plt+0x8848>
cmpb   $0x0,0x1b(%esp)
mov    $0x4,%eax
jne    8053848 <fchmod@plt+0x8708>
mov    0x44(%esp),%ecx
mov    $0x2,%eax
cmpb   $0x3f,(%ecx)
jne    8053848 <fchmod@plt+0x8708>
cmpb   $0x2a,0x1(%ecx)
jne    8053848 <fchmod@plt+0x8708>
cmpb   $0x1,0x2(%ecx)
sbb    %eax,%eax
and    $0x3,%eax
add    $0x2,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %al,0x2(%esi)
jmp    80536ea <fchmod@plt+0x85aa>
movzbl 0x3(%esi),%eax
and    $0xf,%eax
or     $0x30,%eax
mov    %al,0x3(%esi)
jmp    8053767 <fchmod@plt+0x8627>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esi)
mov    (%edi),%eax
mov    0x44(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
movl   $0x0,0x48(%esp)
mov    %eax,0x4(%esi)
jmp    80537c2 <fchmod@plt+0x8682>
nop
mov    (%edi),%eax
mov    0x44(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    0x48(%esp),%edx
mov    %eax,0x4(%esi)
mov    (%edi),%eax
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    %eax,0x8(%esi)
jmp    80537c2 <fchmod@plt+0x8682>
nop
lea    -0x10633(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff3d(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %edx,0x14(%esp)
movl   $0x3bb,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    $0xffffffff,%eax
jmp    805378c <fchmod@plt+0x864c>
mov    (%edi),%eax
mov    0x44(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    %eax,0x4(%esi)
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esi)
movl   $0x0,0x48(%esp)
jmp    80537c2 <fchmod@plt+0x8682>
nop
mov    (%edi),%eax
mov    0x44(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    %eax,0x4(%esi)
jmp    80536d9 <fchmod@plt+0x8599>
xchg   %ax,%ax
mov    %eax,%edx
jmp    80536ea <fchmod@plt+0x85aa>
nop
movzbl 0x3(%esi),%eax
and    $0xfffffff0,%eax
or     $0x3,%eax
mov    %al,0x3(%esi)
jmp    8053729 <fchmod@plt+0x85e9>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
movl   $0x24,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805375a <fchmod@plt+0x861a>
movzbl 0x3(%esi),%eax
and    $0xf,%eax
or     $0x10,%eax
mov    %al,0x3(%esi)
jmp    8053767 <fchmod@plt+0x8627>
xchg   %ax,%ax
mov    0x44(%esp),%eax
movl   $0x3f,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8053818 <fchmod@plt+0x86d8>
mov    0x44(%esp),%eax
movl   $0x5b,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8053818 <fchmod@plt+0x86d8>
cmpb   $0x1,0x1b(%esp)
sbb    %eax,%eax
and    $0xfffffffe,%eax
add    $0x3,%eax
mov    %al,0x2(%esi)
jmp    80536ea <fchmod@plt+0x85aa>
lea    0x0(%esi),%esi
movl   $0x0,0x48(%esp)
jmp    80537c2 <fchmod@plt+0x8682>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
movl   $0x24,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805371c <fchmod@plt+0x85dc>
movzbl 0x3(%esi),%eax
and    $0xfffffff0,%eax
or     $0x1,%eax
mov    %al,0x3(%esi)
jmp    8053729 <fchmod@plt+0x85e9>
lea    -0x10c60(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff3d(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
movl   $0x3ee,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    $0xffffffff,%eax
jmp    805378c <fchmod@plt+0x864c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2f24d,%ebx
sub    $0x24,%esp
movl   $0x7b,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8053aa8 <fchmod@plt+0x8968>
lea    0x1(%eax),%esi
movl   $0x7d,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8053aac <fchmod@plt+0x896c>
movb   $0x0,(%eax)
mov    %esi,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    8053aa0 <fchmod@plt+0x8960>
lea    -0x10c40(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff30(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
movl   $0x357,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
xor    %eax,%eax
jmp    8053aa0 <fchmod@plt+0x8960>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2f1bb,%ebx
sub    $0x439c,%esp
mov    %edx,(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x438c(%esp)
xor    %edi,%edi
mov    %eax,0x44(%esp)
mov    %edx,0x58(%esp)
call   8064340 <fchmod@plt+0x19200>
test   %eax,%eax
mov    %eax,0x5c(%esp)
jne    80544c0 <fchmod@plt+0x9380>
mov    0x58(%esp),%edi
lea    -0x1060f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff15(%ebx),%eax
mov    %eax,0x64(%esp)
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %edi,0x14(%esp)
movl   $0x5e6,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x54(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x48(%esp)
je     8054805 <fchmod@plt+0x96c5>
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x14(%eax),%esi
mov    0x1c(%eax),%eax
mov    %esi,0x68(%esp)
call   8053640 <fchmod@plt+0x8500>
movl   $0x0,0x3c(%esp)
mov    %eax,0x60(%esp)
lea    0x38c(%esp),%eax
mov    %eax,0x2c(%esp)
lea    -0x10549(%ebx),%eax
mov    %eax,0x6c(%esp)
nop
mov    0x48(%esp),%eax
movl   $0x4000,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     8054286 <fchmod@plt+0x9146>
addl   $0x1,0x3c(%esp)
call   804b0e0 <__ctype_b_loc@plt>
mov    0x2c(%esp),%edx
mov    %eax,0x40(%esp)
mov    (%eax),%esi
jmp    8053c0b <fchmod@plt+0x8acb>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
jne    8053c08 <fchmod@plt+0x8ac8>
cmp    $0x23,%al
je     8053bc8 <fchmod@plt+0x8a88>
mov    0x2c(%esp),%esi
mov    (%esi),%ecx
add    $0x4,%esi
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8053c20 <fchmod@plt+0x8ae0>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%esi),%ecx
cmove  %ecx,%esi
add    %al,%al
sbb    $0x3,%esi
sub    0x2c(%esp),%esi
cmp    $0x2,%esi
jbe    8053bc8 <fchmod@plt+0x8a88>
cmpb   $0x5c,0x38a(%esp,%esi,1)
lea    -0x2(%esi),%ebp
jne    8053cf4 <fchmod@plt+0x8bb4>
mov    $0x4002,%edi
mov    %ebp,%ecx
mov    %edx,0x30(%esp)
nop
mov    0x2c(%esp),%eax
mov    0x48(%esp),%edx
lea    (%eax,%ecx,1),%ebp
mov    %edi,%eax
sub    %esi,%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     8053cf0 <fchmod@plt+0x8bb0>
mov    %ebp,(%esp)
call   804ab30 <strlen@plt>
cmp    $0x1,%eax
jbe    8053cf0 <fchmod@plt+0x8bb0>
addl   $0x1,0x3c(%esp)
mov    0x2c(%esp),%esi
mov    (%esi),%edx
add    $0x4,%esi
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     8053cb1 <fchmod@plt+0x8b71>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%esi),%ecx
cmove  %ecx,%esi
add    %al,%al
sbb    $0x3,%esi
sub    0x2c(%esp),%esi
lea    -0x2(%esi),%ecx
cmpb   $0x5c,0x38c(%esp,%ecx,1)
je     8053c78 <fchmod@plt+0x8b38>
mov    0x30(%esp),%edx
add    $0x1,%esi
cmp    $0x3fff,%esi
jbe    8053d42 <fchmod@plt+0x8c02>
mov    0x3c(%esp),%eax
movl   $0x60c,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10c1c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053bc8 <fchmod@plt+0x8a88>
xor    %eax,%eax
mov    $0xc5,%ecx
lea    0x78(%esp),%edi
mov    %edi,0x38(%esp)
rep stos %eax,%es:(%edi)
mov    0x44(%esp),%eax
cmpl   $0xfffe,0x60(%esp)
movb   $0x1,0x7c(%esp)
mov    %eax,0x78(%esp)
ja     8053d77 <fchmod@plt+0x8c37>
movzwl 0x60(%esp),%eax
mov    %ax,0x84(%esp)
movzwl 0x3c(%esp),%eax
mov    %edx,%ebp
mov    %ax,0x86(%esp)
xchg   %ax,%ax
movzbl 0x0(%ebp),%eax
test   %al,%al
je     8053dfb <fchmod@plt+0x8cbb>
mov    0x40(%esp),%edi
mov    (%edi),%edx
jmp    8053d9f <fchmod@plt+0x8c5f>
add    $0x1,%ebp
movzbl 0x0(%ebp),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%edx,%ecx,2)
jne    8053d98 <fchmod@plt+0x8c58>
cmp    $0x2c,%al
je     8053d98 <fchmod@plt+0x8c58>
test   %al,%al
je     8053dfb <fchmod@plt+0x8cbb>
mov    %ebp,%esi
movzbl 0x1(%esi),%eax
lea    0x1(%esi),%ecx
test   %al,%al
je     8053dfb <fchmod@plt+0x8cbb>
xchg   %ax,%ax
movsbl %al,%edi
testb  $0x20,0x1(%edx,%edi,2)
jne    8053ed8 <fchmod@plt+0x8d98>
cmp    $0x3d,%al
je     8054098 <fchmod@plt+0x8f58>
cmp    $0x2b,%al
je     8053fd8 <fchmod@plt+0x8e98>
cmp    $0x21,%al
je     8053fd8 <fchmod@plt+0x8e98>
cmp    $0x3a,%al
je     8053fd8 <fchmod@plt+0x8e98>
mov    %ecx,%esi
movzbl 0x1(%esi),%eax
lea    0x1(%esi),%ecx
test   %al,%al
jne    8053dc0 <fchmod@plt+0x8c80>
movzwl 0x388(%esp),%eax
lea    0x7c(%esp),%edx
add    $0x1,%eax
mov    %ax,0x7e(%esp)
mov    0x44(%esp),%eax
call   8052f70 <fchmod@plt+0x7e30>
test   %eax,%eax
jne    8054241 <fchmod@plt+0x9101>
mov    0x388(%esp),%esi
movl   $0x0,0x34(%esp)
movl   $0x0,0x30(%esp)
test   %esi,%esi
je     8053bc8 <fchmod@plt+0x8a88>
mov    0x30(%esp),%edi
cmp    %esi,%edi
jae    80546d5 <fchmod@plt+0x9595>
mov    0x38(%esp),%edx
lea    (%edi,%edi,2),%eax
xor    %ebp,%ebp
lea    0x10(%edx,%eax,4),%edx
mov    %edi,%eax
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx),%ecx
test   %cl,%cl
je     8053e74 <fchmod@plt+0x8d34>
test   %ebp,%ebp
jne    8053ff0 <fchmod@plt+0x8eb0>
movzbl %cl,%ebp
mov    %eax,%edi
add    $0x1,%eax
add    $0xc,%edx
cmp    %esi,%eax
jne    8053e60 <fchmod@plt+0x8d20>
mov    0x38(%esp),%eax
lea    (%edi,%edi,2),%ebp
shl    $0x2,%ebp
lea    0x10(%eax,%ebp,1),%edx
mov    0x44(%esp),%eax
call   8052f70 <fchmod@plt+0x7e30>
test   %eax,%eax
jne    8054241 <fchmod@plt+0x9101>
xor    %eax,%eax
cmp    %edi,0x30(%esp)
movb   $0x0,0x88(%esp,%ebp,1)
sete   %al
add    %eax,0x30(%esp)
lea    0x1(%edi),%eax
cmp    %eax,%esi
cmove  %edi,%esi
addl   $0x1,0x34(%esp)
mov    0x34(%esp),%eax
cmp    0x388(%esp),%eax
jb     8053e3f <fchmod@plt+0x8cff>
jmp    8053bc8 <fchmod@plt+0x8a88>
lea    0x0(%esi),%esi
add    $0x1,%ecx
movzbl (%ecx),%eax
movsbl %al,%edi
testb  $0x20,0x1(%edx,%edi,2)
jne    8053ed8 <fchmod@plt+0x8d98>
test   %al,%al
je     8053dfb <fchmod@plt+0x8cbb>
cmp    $0x3d,%al
je     8054098 <fchmod@plt+0x8f58>
cmp    $0x21,%al
je     80540bd <fchmod@plt+0x8f7d>
cmp    $0x2b,%al
je     80540d7 <fchmod@plt+0x8f97>
cmp    $0x3a,%al
jne    8053dfb <fchmod@plt+0x8cbb>
cmpb   $0x3d,0x1(%ecx)
jne    8053dfb <fchmod@plt+0x8cbb>
lea    0x2(%ecx),%edx
movl   $0x6,0x30(%esp)
mov    0x40(%esp),%eax
movb   $0x0,0x1(%esi)
mov    (%eax),%esi
movzbl (%edx),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
je     8053f50 <fchmod@plt+0x8e10>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl (%edx),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%esi,%ecx,2)
jne    8053f40 <fchmod@plt+0x8e00>
cmp    $0x22,%al
jne    8053dfb <fchmod@plt+0x8cbb>
lea    0x1(%edx),%eax
movl   $0x22,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x50(%esp)
mov    %eax,0x34(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8053dfb <fchmod@plt+0x8cbb>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    $0x7,%ecx
mov    %eax,0x4c(%esp)
lea    -0x105fa(%ebx),%edi
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    0x50(%esp),%edx
jne    8054000 <fchmod@plt+0x8ec0>
cmpl   $0x3,0x30(%esp)
ja     8054507 <fchmod@plt+0x93c7>
mov    0x34(%esp),%eax
mov    $0x2,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
mov    0x4c(%esp),%ebp
jmp    8053d88 <fchmod@plt+0x8c48>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x3d,0x1(%ecx)
je     8053ee8 <fchmod@plt+0x8da8>
mov    %ecx,%esi
jmp    8053df0 <fchmod@plt+0x8cb0>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%ebp
jbe    8053e74 <fchmod@plt+0x8d34>
mov    %ecx,%ebp
jmp    8053e72 <fchmod@plt+0x8d32>
nop
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x1063b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054048 <fchmod@plt+0x8f08>
cmpl   $0x3,0x30(%esp)
ja     805454f <fchmod@plt+0x940f>
mov    0x34(%esp),%eax
mov    $0x3,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x12e22(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80540f1 <fchmod@plt+0x8fb1>
cmpl   $0x3,0x30(%esp)
ja     8054625 <fchmod@plt+0x94e5>
mov    0x34(%esp),%eax
mov    $0x4,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    0x0(%esi),%esi
cmpb   $0x3d,0x1(%ecx)
lea    0x1(%ecx),%edx
movl   $0x5,0x30(%esp)
jne    8053f25 <fchmod@plt+0x8de5>
lea    0x2(%ecx),%edx
movl   $0x1,0x30(%esp)
jmp    8053f25 <fchmod@plt+0x8de5>
cmpb   $0x3d,0x1(%ecx)
jne    8053dfb <fchmod@plt+0x8cbb>
lea    0x2(%ecx),%edx
movl   $0x2,0x30(%esp)
jmp    8053f25 <fchmod@plt+0x8de5>
cmpb   $0x3d,0x1(%ecx)
jne    8053dfb <fchmod@plt+0x8cbb>
lea    0x2(%ecx),%edx
movl   $0x4,0x30(%esp)
jmp    8053f25 <fchmod@plt+0x8de5>
mov    $0xa,%ecx
mov    %ebp,%esi
lea    -0x105a4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80541ce <fchmod@plt+0x908e>
cmpl   $0x3,0x30(%esp)
ja     80547d0 <fchmod@plt+0x9690>
mov    0x34(%esp),%esi
mov    $0xa,%ecx
lea    -0xb55e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80543fd <fchmod@plt+0x92bd>
movzbl 0x1(%edx),%eax
cmp    $0x62,%al
je     805416f <fchmod@plt+0x902f>
mov    0x34(%esp),%esi
mov    $0x6,%ecx
lea    -0x1057d(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8054181 <fchmod@plt+0x9041>
movl   $0x0,0x8(%esp)
lea    -0x10577(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    $0x9,%edx
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
cmpb   $0x75,0x2(%edx)
jne    8054130 <fchmod@plt+0x8ff0>
cmpb   $0x73,0x3(%edx)
jne    8054130 <fchmod@plt+0x8ff0>
cmpb   $0x0,0x4(%edx)
jne    8054130 <fchmod@plt+0x8ff0>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x455,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10bfc(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054143 <fchmod@plt+0x9003>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0xd775(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054435 <fchmod@plt+0x92f5>
cmpl   $0x3,0x30(%esp)
ja     805465a <fchmod@plt+0x951a>
mov    0x34(%esp),%eax
mov    $0xa,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    $0x7,%edx
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
test   %eax,%eax
je     8053fca <fchmod@plt+0x8e8a>
lea    -0xff1e(%ebx),%esi
mov    0x3c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x5d5,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10352(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053bc8 <fchmod@plt+0x8a88>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a730 <fclose@plt>
mov    0x44(%esp),%esi
mov    0x68(%esp),%edi
mov    0x14(%esi),%edx
mov    %edi,%eax
add    $0x1,%eax
cmp    %edx,%eax
jae    805437b <fchmod@plt+0x923b>
lea    (%eax,%eax,2),%eax
mov    %edx,%ebp
shl    $0x2,%eax
mov    %eax,0x2c(%esp)
mov    %edi,%eax
add    $0x2,%eax
mov    %eax,%ecx
lea    -0x10908(%ebx),%eax
mov    %eax,0x40(%esp)
jmp    80542e2 <fchmod@plt+0x91a2>
lea    0x0(%esi,%eiz,1),%esi
addl   $0xc,0x2c(%esp)
cmp    %ecx,%ebp
lea    0x1(%ecx),%eax
jbe    805437b <fchmod@plt+0x923b>
mov    %eax,%ecx
mov    0x44(%esp),%eax
mov    0x2c(%esp),%edx
add    0x10(%eax),%edx
cmpb   $0x32,(%edx)
jne    80542d0 <fchmod@plt+0x9190>
mov    0x1c(%eax),%eax
mov    (%eax),%eax
mov    %eax,0x34(%esp)
add    0x4(%edx),%eax
cmp    %ebp,%ecx
mov    %eax,0x30(%esp)
jae    805435d <fchmod@plt+0x921d>
mov    %edx,%esi
mov    %ecx,%edi
mov    %ecx,0x38(%esp)
mov    %edx,0x3c(%esp)
jmp    8054322 <fchmod@plt+0x91e2>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
add    $0xc,%esi
cmp    %ebp,%edi
jae    805439e <fchmod@plt+0x925e>
cmpb   $0x1,0xc(%esi)
jne    8054318 <fchmod@plt+0x91d8>
mov    0x10(%esi),%eax
test   %eax,%eax
je     8054318 <fchmod@plt+0x91d8>
add    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    8054318 <fchmod@plt+0x91d8>
mov    0x3c(%esp),%edx
mov    0x44(%esp),%eax
mov    0x38(%esp),%ecx
mov    %edi,0x8(%edx)
mov    0x2c(%esp),%edx
add    0x10(%eax),%edx
mov    0x8(%edx),%eax
test   %eax,%eax
je     80543ad <fchmod@plt+0x926d>
mov    0x44(%esp),%eax
addl   $0xc,0x2c(%esp)
mov    0x14(%eax),%ebp
lea    0x1(%ecx),%eax
cmp    %ecx,%ebp
ja     80542e0 <fchmod@plt+0x91a0>
mov    0x438c(%esp),%edi
xor    %gs:0x14,%edi
mov    0x5c(%esp),%eax
jne    8054812 <fchmod@plt+0x96d2>
add    $0x439c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x3c(%esp),%edx
mov    0x38(%esp),%ecx
mov    0x8(%edx),%eax
test   %eax,%eax
jne    8054364 <fchmod@plt+0x9224>
mov    0x58(%esp),%eax
movl   $0x624,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x34(%esp)
mov    %eax,0x18(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x44(%esp),%eax
mov    0x34(%esp),%ecx
mov    0x14(%eax),%ebp
jmp    80542d0 <fchmod@plt+0x9190>
movzbl 0x1(%edx),%ebp
mov    %ebp,%eax
cmp    $0x62,%al
je     8054496 <fchmod@plt+0x9356>
mov    0x34(%esp),%esi
mov    $0x6,%ecx
lea    -0x1057d(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
jne    8054614 <fchmod@plt+0x94d4>
mov    %ebp,%eax
jmp    805412c <fchmod@plt+0x8fec>
mov    0x6c(%esp),%eax
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8054584 <fchmod@plt+0x9444>
lea    0x4(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
test   %eax,%eax
je     8054817 <fchmod@plt+0x96d7>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
cmpl   $0x2,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
ja     805453c <fchmod@plt+0x93fc>
mov    0x38(%esp),%eax
mov    $0xc,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
cmpb   $0x75,0x2(%edx)
jne    805440b <fchmod@plt+0x92cb>
cmpb   $0x73,0x3(%edx)
jne    805440b <fchmod@plt+0x92cb>
cmpb   $0x0,0x4(%edx)
je     8054175 <fchmod@plt+0x9035>
jmp    805440b <fchmod@plt+0x92cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movl   $0x5e3,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10624(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff15(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0x5c(%esp)
jmp    805437b <fchmod@plt+0x923b>
lea    -0x105f3(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x431,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
mov    0x38(%esp),%eax
mov    $0x2f,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x105d9(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x43a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x10525(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80545ca <fchmod@plt+0x948a>
cmpl   $0x3,0x30(%esp)
ja     805479b <fchmod@plt+0x965b>
mov    0x34(%esp),%eax
mov    $0xe,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    $0xb,%ecx
mov    %ebp,%esi
lea    -0x10502(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805468f <fchmod@plt+0x954f>
cmpl   $0x3,0x30(%esp)
ja     8054900 <fchmod@plt+0x97c0>
mov    0x34(%esp),%eax
mov    $0xf,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
movl   $0x0,0x8(%esp)
mov    0x34(%esp),%eax
jmp    8054151 <fchmod@plt+0x9011>
lea    -0x105be(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x443,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x10563(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x45e,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x104d9(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80546dc <fchmod@plt+0x959c>
cmpl   $0x3,0x30(%esp)
ja     80548cb <fchmod@plt+0x978b>
mov    0x34(%esp),%eax
mov    $0x10,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
xor    %edi,%edi
jmp    8053e7e <fchmod@plt+0x8d3e>
lea    -0x104b6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8054881 <fchmod@plt+0x9741>
cmpl   $0x3,0x30(%esp)
ja     805484c <fchmod@plt+0x970c>
lea    0x5(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
test   %eax,%eax
mov    %eax,%esi
je     8054994 <fchmod@plt+0x9854>
lea    -0x10496(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8054935 <fchmod@plt+0x97f5>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x49a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10b9c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34(%esp),%eax
mov    $0x11,%edx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x1051d(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x475,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x1059a(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x44c,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
movl   $0xffffffff,0x5c(%esp)
jmp    805437b <fchmod@plt+0x923b>
call   806ed90 <fchmod@plt+0x23c50>
lea    -0x10543(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x468,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x104af(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x490,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
mov    $0x5,%ecx
mov    %ebp,%esi
lea    -0x1048e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80549fe <fchmod@plt+0x98be>
cmpl   $0x3,0x30(%esp)
ja     80549c9 <fchmod@plt+0x9889>
mov    0x34(%esp),%eax
mov    $0x12,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x104d1(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x487,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x104f7(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x47e,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0xbcf2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8054775 <fchmod@plt+0x9635>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x49d,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10b48(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054775 <fchmod@plt+0x9635>
lea    -0x10bbc(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x495,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x10489(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x4a4,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x10471(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8054a8d <fchmod@plt+0x994d>
lea    0x3(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
test   %eax,%eax
mov    %eax,%esi
je     8054b33 <fchmod@plt+0x99f3>
cmpl   $0x2,0x30(%esp)
lea    -0x38b4(%ebx),%edi
lea    0x2c(%edi),%ebp
jbe    8054218 <fchmod@plt+0x90d8>
mov    (%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     8054aea <fchmod@plt+0x99aa>
add    $0x4,%edi
cmp    %ebp,%edi
jne    8054a42 <fchmod@plt+0x9902>
mov    0x34(%esp),%eax
mov    $0x2b,%edx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
test   %eax,%eax
je     8053fca <fchmod@plt+0x8e8a>
jmp    8054241 <fchmod@plt+0x9101>
cmpb   $0x54,0x0(%ebp)
jne    8054b7b <fchmod@plt+0x9a3b>
cmpb   $0x41,0x1(%ebp)
jne    8054b7b <fchmod@plt+0x9a3b>
cmpb   $0x47,0x2(%ebp)
jne    8054b7b <fchmod@plt+0x9a3b>
cmpb   $0x0,0x3(%ebp)
jne    8054b7b <fchmod@plt+0x9a3b>
mov    0x34(%esp),%eax
cmpl   $0x2,0x30(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
ja     8054b68 <fchmod@plt+0x9a28>
mov    0x38(%esp),%eax
mov    $0x8,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x3c(%esp),%eax
mov    %esi,0x14(%esp)
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x4c7,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
lea    -0x10ad8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x1046c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x4ae,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
mov    0x38(%esp),%eax
mov    $0x2c,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0xe7a2(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8054bd2 <fchmod@plt+0x9a92>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x1044f(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054c31 <fchmod@plt+0x9af1>
cmpl   $0x3,0x30(%esp)
ja     8054bfc <fchmod@plt+0x9abc>
mov    0x34(%esp),%eax
mov    $0x1d,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x16,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x10448(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x4df,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x1042e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8054e88 <fchmod@plt+0x9d48>
lea    0x6(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
mov    0x50(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     80555e7 <fchmod@plt+0xa4a7>
mov    %eax,%esi
mov    $0x8,%ecx
lea    -0x10427(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
jne    8054ccf <fchmod@plt+0x9b8f>
cmpb   $0x2f,0x1(%edx)
je     8054ca5 <fchmod@plt+0x9b65>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8058640 <fchmod@plt+0xd500>
cmp    $0xa,%eax
mov    %eax,0x74(%esp)
jbe    8054f13 <fchmod@plt+0x9dd3>
mov    0x34(%esp),%eax
mov    $0x18,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x11540(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8054d89 <fchmod@plt+0x9c49>
mov    $0x5,%ecx
mov    %ebp,%esi
lea    -0x13b3e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8054d5f <fchmod@plt+0x9c1f>
cmpb   $0x64,0x0(%ebp)
jne    8054d0b <fchmod@plt+0x9bcb>
cmpb   $0x62,0x1(%ebp)
jne    8054d0b <fchmod@plt+0x9bcb>
cmpb   $0x0,0x2(%ebp)
je     80556d0 <fchmod@plt+0xa590>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x10280(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8054e11 <fchmod@plt+0x9cd1>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x1113d(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054dcc <fchmod@plt+0x9c8c>
mov    0x34(%esp),%eax
mov    $0x1c,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x17,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8058640 <fchmod@plt+0xd500>
cmp    $0xa,%eax
mov    %eax,0x74(%esp)
ja     8054e3b <fchmod@plt+0x9cfb>
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    $0x19,%edx
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x50a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10a20(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x1b,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x500,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10a48(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x1041f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8054fac <fchmod@plt+0x9e6c>
cmpl   $0x3,0x30(%esp)
movl   $0x0,0x74(%esp)
ja     8054f77 <fchmod@plt+0x9e37>
lea    0x4(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
test   %eax,%eax
je     8054f6a <fchmod@plt+0x9e2a>
movl   $0x8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    %eax,0x74(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    $0x14,%edx
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    0x34(%esp),%edi
mov    %edx,0xc(%esp)
movl   $0x4f4,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %edi,0x14(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
lea    -0x10a74(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,%eax
jmp    8054dae <fchmod@plt+0x9c6e>
movl   $0x0,0x8(%esp)
jmp    8054ef1 <fchmod@plt+0x9db1>
lea    -0x1041a(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x512,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    -0x10402(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8055032 <fchmod@plt+0x9ef2>
lea    0x3(%ebp),%eax
call   8053a60 <fchmod@plt+0x8920>
test   %eax,%eax
je     8055000 <fchmod@plt+0x9ec0>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x11540(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8055671 <fchmod@plt+0xa531>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x10427(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805562c <fchmod@plt+0xa4ec>
lea    0x74(%esp),%eax
mov    $0x31,%edx
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0xb,0x74(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    $0x9,%ecx
mov    %ebp,%esi
lea    -0x103fe(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8055054 <fchmod@plt+0x9f14>
mov    $0xf,%ecx
mov    %ebp,%esi
lea    -0x103f5(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805507e <fchmod@plt+0x9f3e>
mov    0x34(%esp),%eax
mov    $0xb,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0xd1be(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80556b4 <fchmod@plt+0xa574>
mov    $0x5,%ecx
mov    %ebp,%esi
lea    -0xe7f4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80551ce <fchmod@plt+0xa08e>
lea    -0x10179(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x50(%esp),%edx
test   %eax,%eax
je     805518c <fchmod@plt+0xa04c>
cmpl   $0x2,0x30(%esp)
jbe    8055165 <fchmod@plt+0xa025>
movzbl 0x1(%edx),%eax
cmp    $0x25,%al
jne    805511c <fchmod@plt+0x9fdc>
cmpb   $0x6b,0x2(%edx)
jne    80550ed <fchmod@plt+0x9fad>
cmpb   $0x0,0x3(%edx)
je     8055883 <fchmod@plt+0xa743>
mov    0x34(%esp),%eax
mov    $0x2d,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
orb    $0x1,0x7d(%esp)
jmp    8053fca <fchmod@plt+0x8e8a>
test   %al,%al
jne    80550ed <fchmod@plt+0x9fad>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x550,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10968(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x6,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x103e6(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805520b <fchmod@plt+0xa0cb>
mov    0x34(%esp),%eax
cmpl   $0x2,0x30(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
ja     80551f8 <fchmod@plt+0xa0b8>
mov    0x38(%esp),%eax
mov    $0x5,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x34(%esp),%eax
mov    $0x32,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x38(%esp),%eax
mov    $0x2e,%edx
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0x103de(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80557f8 <fchmod@plt+0xa6b8>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0x103d5(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805555c <fchmod@plt+0xa41c>
mov    $0x5,%ecx
mov    %ebp,%esi
lea    -0xe92a(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8055505 <fchmod@plt+0xa3c5>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0x103cf(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80554bc <fchmod@plt+0xa37c>
lea    -0x103c7(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     80552bd <fchmod@plt+0xa17d>
add    $0xe,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    $0x23,%edx
movl   $0x0,0x4(%esp)
mov    %eax,0x74(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
lea    -0x103b8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     805531b <fchmod@plt+0xa1db>
add    $0xe,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    $0x15,%edx
movl   $0x0,0x4(%esp)
mov    %eax,0x74(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
lea    -0x103a9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8055377 <fchmod@plt+0xa237>
lea    0xe(%eax),%esi
lea    -0x1039a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     805544d <fchmod@plt+0xa30d>
mov    0x30(%esp),%eax
mov    $0x1f,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
lea    -0x1038d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     80553b6 <fchmod@plt+0xa276>
mov    0x30(%esp),%eax
mov    $0x21,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
lea    -0x10382(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8055491 <fchmod@plt+0xa351>
movl   $0x0,0x74(%esp)
lea    0x74(%esp),%eax
mov    $0x22,%edx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
lea    -0x1037a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8053fca <fchmod@plt+0x8e8a>
add    $0xc,%eax
mov    $0x2a,%edx
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
orb    $0x2,0x7d(%esp)
jmp    8053fca <fchmod@plt+0x8e8a>
lea    -0x10395(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8055377 <fchmod@plt+0xa237>
mov    0x30(%esp),%eax
mov    $0x20,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055377 <fchmod@plt+0xa237>
lea    -0x13c75(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8055401 <fchmod@plt+0xa2c1>
movl   $0x1,0x74(%esp)
jmp    80553dc <fchmod@plt+0xa29c>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%esi
mov    %ebp,0x14(%esp)
mov    %esi,0xc(%esp)
movl   $0x5c6,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
lea    -0x1036d(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8054247 <fchmod@plt+0x9107>
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    %eax,0x70(%esp)
mov    0x74(%esp),%eax
cmpb   $0x0,(%eax)
jne    80558c8 <fchmod@plt+0xa788>
lea    0x70(%esp),%eax
mov    $0x29,%edx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %edx,0x50(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    0x50(%esp),%edx
mov    %eax,0x70(%esp)
mov    0x74(%esp),%eax
cmpb   $0x0,(%eax)
je     80557ce <fchmod@plt+0xa68e>
mov    0x44(%esp),%eax
cmpl   $0x0,0xc(%eax)
jle    80557bc <fchmod@plt+0xa67c>
movsbl 0x1(%edx),%eax
mov    %eax,0x4(%esp)
lea    -0x103d8(%ebx),%eax
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80556fa <fchmod@plt+0xa5ba>
mov    0x34(%esp),%eax
mov    $0x25,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x4e9,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10aa4(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x530,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x109f0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8058640 <fchmod@plt+0xd500>
cmp    $0xa,%eax
mov    %eax,0x74(%esp)
ja     80558fe <fchmod@plt+0xa7be>
lea    0x74(%esp),%eax
mov    $0x30,%edx
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x44(%esp),%eax
mov    0x34(%esp),%edx
mov    0x1c(%eax),%eax
call   8053640 <fchmod@plt+0x8500>
mov    %eax,0x80(%esp)
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x1a,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x44(%esp),%edi
mov    0x30(%edi),%ebp
test   %ebp,%ebp
je     805573d <fchmod@plt+0xa5fd>
mov    0x1c(%edi),%eax
mov    0x2c(%edi),%esi
xor    %edi,%edi
mov    (%eax),%edx
mov    0x34(%esp),%eax
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
mov    %edx,%eax
add    (%esi),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
je     80557c7 <fchmod@plt+0xa687>
add    $0x1,%edi
add    $0x8,%esi
cmp    %ebp,%edi
jne    805570f <fchmod@plt+0xa5cf>
mov    0x44(%esp),%esi
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806cbb0 <fchmod@plt+0x21a70>
mov    0x30(%esi),%edx
lea    0x1(%edx),%ecx
mov    %eax,%edi
mov    0x34(%esi),%eax
cmp    %eax,%ecx
jb     80558f2 <fchmod@plt+0xa7b2>
test   %eax,%eax
mov    0x44(%esp),%ebp
mov    $0x8,%esi
cmovne %eax,%esi
add    %esi,%eax
shl    $0x3,%eax
mov    %eax,0x4(%esp)
mov    0x2c(%ebp),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     80557ca <fchmod@plt+0xa68a>
add    %esi,0x34(%ebp)
mov    0x30(%ebp),%edx
mov    %eax,0x2c(%ebp)
mov    0x44(%esp),%esi
mov    %edi,0x4(%eax,%edx,8)
mov    0x34(%esp),%edx
mov    0x1c(%esi),%eax
call   8053640 <fchmod@plt+0x8500>
test   %eax,%eax
je     80557ca <fchmod@plt+0xa68a>
mov    0x30(%esi),%ecx
mov    0x2c(%esi),%edx
mov    %eax,(%edx,%ecx,8)
addl   $0x1,0x30(%esi)
jmp    80557ca <fchmod@plt+0xa68a>
je     80555bd <fchmod@plt+0xa47d>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x4(%esi),%edi
mov    %edi,0x70(%esp)
lea    0x70(%esp),%eax
mov    $0x28,%edx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %edx,0x50(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    0x50(%esp),%edx
mov    %eax,0x70(%esp)
mov    0x74(%esp),%eax
cmpb   $0x0,(%eax)
je     8055a1f <fchmod@plt+0xa8df>
mov    0x44(%esp),%eax
cmpl   $0x0,0xc(%eax)
jle    8055a0d <fchmod@plt+0xa8cd>
movsbl 0x1(%edx),%eax
mov    %eax,0x4(%esp)
lea    -0x103d8(%ebx),%eax
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     805594b <fchmod@plt+0xa80b>
mov    0x34(%esp),%eax
mov    $0x24,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x54b,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x109c8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x34(%esp),%eax
mov    $0x26,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x44(%esp),%eax
mov    0x2c(%eax),%eax
jmp    8055795 <fchmod@plt+0xa655>
mov    0x3c(%esp),%eax
lea    -0xff1e(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x52a,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x10a48(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8053fca <fchmod@plt+0x8e8a>
mov    0x44(%esp),%edi
mov    0x24(%edi),%ebp
test   %ebp,%ebp
je     805598e <fchmod@plt+0xa84e>
mov    0x1c(%edi),%eax
mov    0x20(%edi),%esi
xor    %edi,%edi
mov    (%eax),%edx
mov    0x34(%esp),%eax
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
mov    %edx,%eax
add    (%esi),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
je     8055a18 <fchmod@plt+0xa8d8>
add    $0x1,%edi
add    $0x8,%esi
cmp    %ebp,%edi
jne    8055960 <fchmod@plt+0xa820>
mov    0x44(%esp),%esi
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806ca20 <fchmod@plt+0x218e0>
mov    0x24(%esi),%edx
lea    0x1(%edx),%ecx
mov    %eax,%edi
mov    0x28(%esi),%eax
cmp    %eax,%ecx
jb     8055a49 <fchmod@plt+0xa909>
test   %eax,%eax
mov    0x44(%esp),%ebp
mov    $0x8,%esi
cmovne %eax,%esi
add    %esi,%eax
shl    $0x3,%eax
mov    %eax,0x4(%esp)
mov    0x20(%ebp),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     8055a1b <fchmod@plt+0xa8db>
add    %esi,0x28(%ebp)
mov    0x24(%ebp),%edx
mov    %eax,0x20(%ebp)
mov    0x44(%esp),%esi
mov    %edi,0x4(%eax,%edx,8)
mov    0x34(%esp),%edx
mov    0x1c(%esi),%eax
call   8053640 <fchmod@plt+0x8500>
test   %eax,%eax
je     8055a1b <fchmod@plt+0xa8db>
mov    0x24(%esi),%ecx
mov    0x20(%esi),%edx
mov    %eax,(%edx,%ecx,8)
addl   $0x1,0x24(%esi)
jmp    8055a1b <fchmod@plt+0xa8db>
je     8055859 <fchmod@plt+0xa719>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x4(%esi),%edi
mov    %edi,0x70(%esp)
lea    0x70(%esp),%eax
mov    $0x27,%edx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x38(%esp),%eax
call   8053680 <fchmod@plt+0x8540>
jmp    8055112 <fchmod@plt+0x9fd2>
mov    0x44(%esp),%eax
mov    0x20(%eax),%eax
jmp    80559e6 <fchmod@plt+0xa8a6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2d249,%ebx
sub    $0x4ac,%esp
mov    %esi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x49c(%esp)
xor    %eax,%eax
lea    -0x1033c(%ebx),%edi
mov    %edi,0x4(%esp)
call   804a520 <strstr@plt>
movl   $0x0,0x2c(%esp)
test   %eax,%eax
je     8055b84 <fchmod@plt+0xaa44>
lea    0x9c(%esp),%ebp
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8055bb2 <fchmod@plt+0xaa72>
mov    0x28(%esp),%eax
movb   $0x0,(%eax)
mov    %ebp,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%edi
je     8055b84 <fchmod@plt+0xaa44>
mov    %eax,(%esp)
call   804af10 <readdir64@plt>
lea    -0x1033a(%ebx),%ecx
mov    %ecx,0x2c(%esp)
test   %eax,%eax
je     8055b74 <fchmod@plt+0xaa34>
lea    0x0(%esi),%esi
cmpb   $0x2e,0x13(%eax)
je     8055b68 <fchmod@plt+0xaa28>
mov    0x28(%esp),%ecx
add    $0x13,%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %ebp,0x8(%esp)
lea    0x2(%ecx),%edx
mov    %edx,0x14(%esp)
mov    %eax,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
je     8055ba8 <fchmod@plt+0xaa68>
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8055b10 <fchmod@plt+0xa9d0>
movl   $0x0,0x2c(%esp)
mov    %edi,(%esp)
call   804b0b0 <closedir@plt>
mov    0x49c(%esp),%edx
xor    %gs:0x14,%edx
mov    0x2c(%esp),%eax
jne    8055bbc <fchmod@plt+0xaa7c>
add    $0x4ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x2c(%esp)
jmp    8055b7c <fchmod@plt+0xaa3c>
movl   $0xffffffff,0x2c(%esp)
jmp    8055b84 <fchmod@plt+0xaa44>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2d0d6,%ebx
test   %esi,%esi
je     8055c32 <fchmod@plt+0xaaf2>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   8062ac0 <fchmod@plt+0x17980>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8062df0 <fchmod@plt+0x17cb0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2d05e,%ebx
test   %edi,%edi
je     8055da0 <fchmod@plt+0xac60>
mov    0x4(%edi),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8055da0 <fchmod@plt+0xac60>
lea    0x40(%esp),%ecx
xor    %ebp,%ebp
mov    %ecx,0x2c(%esp)
lea    -0x108dc(%ebx),%ecx
movl   $0x0,0x28(%esp)
movb   $0x0,0x3b(%esp)
mov    %ecx,0x3c(%esp)
jmp    8055cc0 <fchmod@plt+0xab80>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esi)
mov    %edx,0x4(%esi)
add    $0x1,%ebp
lea    0x0(,%ebp,4),%eax
mov    %eax,0x28(%esp)
mov    0xc0(%esp),%eax
mov    0x4(%eax),%eax
mov    (%eax,%ebp,4),%eax
test   %eax,%eax
je     8055da8 <fchmod@plt+0xac68>
mov    0x2c(%esp),%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %esi,0x8(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
js     8055c9d <fchmod@plt+0xab5d>
lea    0x0(,%ebp,8),%eax
mov    %eax,0x30(%esp)
mov    %eax,%esi
mov    0xc0(%esp),%eax
add    0x8(%eax),%esi
mov    0x4(%esi),%edx
mov    (%esi),%eax
mov    %edx,%edi
lea    0x88(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x34(%esp)
call   8063360 <fchmod@plt+0x18220>
mov    %edi,%ecx
mov    %edi,0x24(%esp)
xor    %edx,%ecx
mov    %ecx,%edi
mov    0x20(%esp),%ecx
xor    %eax,%ecx
or     %ecx,%edi
je     8055c9d <fchmod@plt+0xab5d>
mov    0x24(%esp),%edi
or     0x20(%esp),%edi
je     8055c98 <fchmod@plt+0xab58>
mov    0xc0(%esp),%eax
mov    0x28(%esp),%edi
mov    0x4(%eax),%eax
mov    (%eax,%edi,1),%eax
movl   $0x6a3,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0xff58(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0xc0(%esp),%eax
mov    0x30(%esp),%esi
add    0x8(%eax),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8063360 <fchmod@plt+0x18220>
movb   $0x1,0x3b(%esp)
jmp    8055c98 <fchmod@plt+0xab58>
movb   $0x0,0x3b(%esp)
lea    0x0(%esi),%esi
movzbl 0x3b(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2ceeb,%ebx
sub    $0x6c,%esp
movl   $0x38,0x4(%esp)
mov    0x80(%esp),%edi
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     805613d <fchmod@plt+0xaffd>
mov    %edi,(%eax)
mov    0x84(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esi)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
movl   $0x6000,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x10(%esi)
je     80560bc <fchmod@plt+0xaf7c>
movl   $0x800,0x18(%esi)
call   80629e0 <fchmod@plt+0x178a0>
test   %eax,%eax
mov    %eax,0x1c(%esi)
je     80560bc <fchmod@plt+0xaf7c>
lea    -0x10338(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x10326(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x10314(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
call   8063060 <fchmod@plt+0x17f20>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     80560d0 <fchmod@plt+0xaf90>
mov    %eax,(%esp)
call   8062640 <fchmod@plt+0x17500>
test   %eax,%eax
je     8056118 <fchmod@plt+0xafd8>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8063130 <fchmod@plt+0x17ff0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8062f10 <fchmod@plt+0x17dd0>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804b110 <calloc@plt>
mov    %esi,(%esp)
test   %eax,%eax
mov    %eax,0x8(%esi)
je     80560bf <fchmod@plt+0xaf7f>
call   8055c40 <fchmod@plt+0xab00>
mov    0x4(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0x10302(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805f630 <fchmod@plt+0x144f0>
test   %eax,%eax
js     805607c <fchmod@plt+0xaf3c>
mov    0x34(%esp),%eax
test   %eax,%eax
mov    %eax,%edi
je     8056136 <fchmod@plt+0xaff6>
mov    (%eax),%edx
test   %edx,%edx
jne    8055f16 <fchmod@plt+0xadd6>
jmp    8055f56 <fchmod@plt+0xae16>
lea    0x0(%esi),%esi
mov    (%edi),%edx
test   %edx,%edx
je     8055f23 <fchmod@plt+0xade3>
mov    0x1c(%esi),%eax
call   8053640 <fchmod@plt+0x8500>
add    $0x4,%edi
jne    8055f10 <fchmod@plt+0xadd0>
mov    0x34(%esp),%eax
test   %eax,%eax
mov    %eax,%edi
je     8056136 <fchmod@plt+0xaff6>
mov    (%eax),%edx
test   %edx,%edx
jne    8055f46 <fchmod@plt+0xae06>
jmp    8055f56 <fchmod@plt+0xae16>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
test   %edx,%edx
je     8055f52 <fchmod@plt+0xae12>
mov    %esi,%eax
call   8053af0 <fchmod@plt+0x89b0>
add    $0x4,%edi
jne    8055f40 <fchmod@plt+0xae00>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
lea    -0xff0a(%ebx),%ebp
call   8062df0 <fchmod@plt+0x17cb0>
lea    0x38(%esp),%edx
mov    %esi,%eax
movl   $0x0,0x38(%esp)
lea    -0x10654(%ebx),%edi
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movb   $0x33,0x38(%esp)
call   8052f70 <fchmod@plt+0x7e30>
mov    0x1c(%esi),%edx
mov    0x18(%esi),%eax
mov    0x4(%edx),%edx
mov    %eax,0x18(%esp)
lea    (%eax,%eax,2),%eax
shl    $0x2,%eax
mov    %eax,0x14(%esp)
lea    -0x1083c(%ebx),%eax
mov    %edx,0x20(%esp)
movl   $0xc,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x66c,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x1c(%esi),%eax
mov    0xc(%eax),%edx
mov    %edx,0x24(%esp)
mov    0x18(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x1c(%eax),%edx
mov    %edx,0x1c(%esp)
mov    0x14(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x10(%eax),%eax
mov    %ebp,0xc(%esp)
movl   $0x671,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x107f8(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   8062a90 <fchmod@plt+0x17950>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esi),%eax
movl   $0x0,0x20(%esi)
movl   $0x0,0x24(%esi)
movl   $0x0,0x28(%esi)
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,%eax
movl   $0x0,0x2c(%esi)
movl   $0x0,0x30(%esi)
movl   $0x0,0x34(%esi)
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
neg    %eax
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
movl   $0x658,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10864(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff0a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   8055bd0 <fchmod@plt+0xaa90>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x108b8(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff0a(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x648,0x8(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   8055bd0 <fchmod@plt+0xaa90>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x10890(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff0a(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x64c,0x8(%esp)
jmp    80560ec <fchmod@plt+0xafac>
xor    %eax,%eax
jmp    8055f56 <fchmod@plt+0xae16>
xor    %eax,%eax
jmp    8056074 <fchmod@plt+0xaf34>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x48dc,%esp
mov    0x48f0(%esp),%eax
mov    0x48f8(%esp),%edi
mov    0x48f4(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2cb40,%ebx
mov    0x10(%eax),%ebp
mov    %edi,0x4c(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x48cc(%esp)
xor    %edi,%edi
mov    %eax,0x2c(%esp)
test   %ebp,%ebp
mov    %ecx,0x28(%esp)
je     8058037 <fchmod@plt+0xcef7>
mov    0x4(%ecx),%eax
lea    -0x11206(%ebx),%edi
mov    %eax,(%esp)
call   8065650 <fchmod@plt+0x1a510>
mov    $0x7,%ecx
movb   $0x0,0x53(%esp)
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %al
cmp    %al,%dl
jne    8057acd <fchmod@plt+0xc98d>
mov    0x2c(%esp),%eax
movl   $0x0,0x44(%esp)
mov    0x10(%eax),%ebp
lea    -0x10633(%ebx),%eax
mov    %eax,0x54(%esp)
mov    %ebp,0x30(%esp)
mov    %ebp,%edi
lea    0x0(%esi),%esi
movzbl (%edi),%eax
cmp    $0x33,%al
ja     8056238 <fchmod@plt+0xb0f8>
mov    -0x10080(%ebx,%eax,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
mov    0x48cc(%esp),%edi
xor    %gs:0x14,%edi
jne    805806a <fchmod@plt+0xcf2a>
add    $0x48dc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x44(%esp)
add    $0xc,%edi
jmp    80561f0 <fchmod@plt+0xb0b0>
lea    0x0(%esi),%esi
movzbl 0x1(%edi),%eax
sub    $0x5,%eax
cmp    $0x1,%al
mov    0x28(%esp),%eax
lea    0x24(%eax),%esi
jbe    8057e8c <fchmod@plt+0xcd4c>
mov    0x30(%esp),%ecx
mov    0x2c(%esp),%ebp
movzwl 0xa(%ecx),%edx
mov    0x1c(%ebp),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movzwl 0x8(%ecx),%edx
lea    -0xff72(%ebx),%ecx
add    %eax,%edx
mov    %edx,0x18(%esp)
add    0x4(%edi),%eax
mov    %ecx,0xc(%esp)
movl   $0x9a6,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x101ca(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0x8(%esp)
mov    0x1c(%ebp),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x8(%edi),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
jmp    8056238 <fchmod@plt+0xb0f8>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
mov    0x1c(%eax),%eax
mov    (%eax),%esi
mov    0x28(%esp),%eax
add    0x8(%edi),%esi
movl   $0x0,0x10(%esp)
movl   $0x400,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806cd50 <fchmod@plt+0x21c10>
test   %eax,%eax
jne    8057b15 <fchmod@plt+0xc9d5>
mov    %ebp,%eax
call   8055a60 <fchmod@plt+0xa920>
mov    0x2c(%esp),%eax
lea    0x4cc(%esp),%esi
movl   $0x200,0xc(%esp)
mov    0x28(%esp),%ecx
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x30(%esp),%ecx
movzwl 0xa(%ecx),%eax
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%edx
movzwl 0x8(%ecx),%eax
add    (%edx),%eax
mov    %esi,0x18(%esp)
mov    %ebp,0x14(%esp)
mov    %eax,0x1c(%esp)
lea    -0x10207(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%eax
mov    %eax,0x38(%esp)
mov    %eax,0xc(%esp)
lea    -0x10654(%ebx),%eax
movl   $0x992,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x3c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    -0x101e9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edx
je     8057da1 <fchmod@plt+0xcc61>
lea    -0xbf67(%ebx),%eax
mov    %edx,(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x34(%esp)
call   804af60 <__fprintf_chk@plt>
mov    0x34(%esp),%edx
test   %eax,%eax
jle    8057e99 <fchmod@plt+0xcd59>
mov    %edx,(%esp)
call   804a730 <fclose@plt>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x6a(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
je     8056238 <fchmod@plt+0xb0f8>
movzbl 0x1(%edi),%eax
cmp    $0x6,%al
je     8058012 <fchmod@plt+0xced2>
sub    $0x5,%eax
cmp    $0x1,%al
jbe    8058023 <fchmod@plt+0xcee3>
mov    0x2c(%esp),%eax
lea    0x4cc(%esp),%esi
movl   $0x400,0xc(%esp)
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8057fbd <fchmod@plt+0xce7d>
cmpl   $0x2,0x44(%esp)
je     8058041 <fchmod@plt+0xcf01>
call   804b0e0 <__ctype_b_loc@plt>
mov    %esi,%edx
mov    %eax,0x3c(%esp)
mov    (%eax),%eax
jmp    80564b3 <fchmod@plt+0xb373>
xchg   %ax,%ax
add    $0x1,%edx
movzbl (%edx),%ecx
movsbl %cl,%esi
testb  $0x20,0x1(%eax,%esi,2)
jne    80564b0 <fchmod@plt+0xb370>
mov    %edx,(%esp)
movl   $0x20,0x4(%esp)
mov    %ecx,0x38(%esp)
mov    %edx,0x34(%esp)
call   804ab10 <strchr@plt>
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
test   %eax,%eax
je     80565fd <fchmod@plt+0xb4bd>
lea    -0x10654(%ebx),%ecx
lea    -0x10218(%ebx),%esi
mov    %ecx,0x34(%esp)
lea    -0xff72(%ebx),%ecx
mov    %esi,0x40(%esp)
lea    -0x13d66(%ebx),%esi
mov    %edi,0x5c(%esp)
lea    0x8cc(%esp),%ebp
mov    %edx,%edi
mov    %ecx,0x58(%esp)
mov    %eax,%ecx
mov    %esi,0x48(%esp)
nop
movb   $0x0,(%ecx)
mov    %ecx,0x38(%esp)
mov    0x30(%esp),%ecx
movzwl 0xa(%ecx),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%esi
movzwl 0x8(%ecx),%eax
add    (%esi),%eax
mov    %edi,0x14(%esp)
movl   $0x975,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x48(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065b40 <fchmod@plt+0x1aa00>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%eax
movsbl 0x1(%ecx),%edx
mov    %ecx,%esi
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%edx,2)
je     80565d6 <fchmod@plt+0xb496>
lea    0x0(%esi),%esi
add    $0x1,%esi
movsbl 0x1(%esi),%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    80565c8 <fchmod@plt+0xb488>
lea    0x1(%esi),%edi
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%ecx
jne    8056520 <fchmod@plt+0xb3e0>
mov    %edi,%edx
movzbl 0x1(%esi),%ecx
mov    0x5c(%esp),%edi
test   %cl,%cl
je     8056238 <fchmod@plt+0xb0f8>
mov    0x30(%esp),%esi
lea    0x8cc(%esp),%ebp
mov    %edx,0x34(%esp)
movzwl 0xa(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%ecx
movzwl 0x8(%esi),%eax
add    (%ecx),%eax
lea    -0xff72(%ebx),%ecx
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
lea    -0x10218(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x97f,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34(%esp),%edx
lea    -0x13d66(%ebx),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ebp,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065b40 <fchmod@plt+0x1aa00>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    0x4(%edi),%edx
mov    0x1c(%eax),%eax
mov    (%eax),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x69(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e5d <fchmod@plt+0xcd1d>
lea    (%esi,%edx,1),%eax
mov    %eax,0x3c(%esp)
lea    0x8cc(%esp),%ebp
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0x400,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
testb  $0x1,0x44(%esp)
je     8057dd8 <fchmod@plt+0xcc98>
lea    -0x10654(%ebx),%eax
mov    %eax,0x34(%esp)
lea    -0xff72(%ebx),%ecx
mov    0x28(%esp),%eax
mov    %ecx,0x38(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    0x38(%esp),%ecx
shrd   $0x8,%edx,%eax
mov    %edx,%esi
and    $0xfffff000,%esi
and    $0xfff,%eax
or     %eax,%esi
je     8056767 <fchmod@plt+0xb627>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
mov    %ebp,(%esp)
add    $0x5,%eax
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
mov    0x38(%esp),%ecx
test   %eax,%eax
jne    8057cb3 <fchmod@plt+0xcb73>
mov    0x28(%esp),%esi
mov    %ecx,0x38(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %ebp,(%esp)
call   804acb0 <__strdup@plt>
mov    0x30(%esp),%ecx
mov    %eax,0x10(%esi)
movzwl 0xa(%ecx),%edx
mov    %edx,0x1c(%esp)
mov    0x2c(%esp),%edx
mov    0x1c(%edx),%esi
movzwl 0x8(%ecx),%edx
mov    0x38(%esp),%ecx
add    (%esi),%edx
mov    %eax,0x14(%esp)
lea    -0x1022c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0xc(%esp)
movl   $0x954,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x400,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
movzbl 0x1(%edi),%eax
sub    $0x5,%eax
cmp    $0x1,%al
jbe    8057e78 <fchmod@plt+0xcd38>
movzbl 0x8cc(%esp),%eax
test   %al,%al
je     8056893 <fchmod@plt+0xb753>
mov    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
jbe    8057a08 <fchmod@plt+0xc8c8>
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    8057a08 <fchmod@plt+0xc8c8>
cmp    $0x2d,%al
je     8057a08 <fchmod@plt+0xc8c8>
cmp    $0x5f,%al
je     8057a08 <fchmod@plt+0xc8c8>
lea    -0x106f0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %ebp,0x14(%esp)
mov    %ecx,0xc(%esp)
movl   $0x932,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065ba0 <fchmod@plt+0x1aa60>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%eax
mov    (%eax),%edx
mov    0x8(%edi),%eax
add    %edx,%eax
add    0x4(%edi),%edx
mov    %eax,0x34(%esp)
cmpb   $0x0,(%edx)
je     8057a38 <fchmod@plt+0xc8f8>
cmpb   $0x4,0x1(%edi)
je     8057ed4 <fchmod@plt+0xcd94>
mov    0x28(%esp),%eax
lea    0x4cc(%esp),%esi
movl   $0x200,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    %esi,0x8(%esp)
mov    0x28(%esp),%eax
mov    0x34(%esp),%esi
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
cmpb   $0x2e,(%esi)
je     8056238 <fchmod@plt+0xb0f8>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x68(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e66 <fchmod@plt+0xcd26>
mov    0x28(%esp),%eax
mov    0x30(%esp),%esi
movb   $0x1,0x67(%eax)
mov    0x8(%edi),%edx
mov    %edx,0x18(%eax)
movzwl 0xa(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%ecx
movzwl 0x8(%esi),%eax
add    (%ecx),%eax
lea    -0xff72(%ebx),%ecx
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
lea    -0x1023c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x904,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
xchg   %ax,%ax
mov    0x28(%esp),%eax
cmpb   $0x0,0x64(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e6f <fchmod@plt+0xcd2f>
mov    0x28(%esp),%eax
mov    0x30(%esp),%esi
movb   $0x1,0x63(%eax)
mov    0x8(%edi),%edx
mov    %edx,0x20(%eax)
movzwl 0xa(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%ecx
movzwl 0x8(%esi),%eax
add    (%ecx),%eax
lea    -0xff72(%ebx),%ecx
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
lea    -0x10268(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x8f8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
xchg   %ax,%ax
mov    0x28(%esp),%eax
cmpb   $0x0,0x66(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e39 <fchmod@plt+0xccf9>
mov    0x28(%esp),%eax
mov    0x30(%esp),%esi
movb   $0x1,0x65(%eax)
mov    0x8(%edi),%edx
mov    %edx,0x1c(%eax)
movzwl 0xa(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%ecx
movzwl 0x8(%esi),%eax
add    (%ecx),%eax
lea    -0xff72(%ebx),%ecx
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
lea    -0x10278(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x8ec,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
xchg   %ax,%ax
mov    0x28(%esp),%eax
cmpb   $0x0,0x68(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x200,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
lea    0x6c(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804b040 <strtol@plt>
mov    0x6c(%esp),%edx
cmpb   $0x0,(%edx)
jne    8057c78 <fchmod@plt+0xcb38>
cmpb   $0x6,0x1(%edi)
je     8057f68 <fchmod@plt+0xce28>
mov    0x28(%esp),%ecx
mov    0x30(%esp),%esi
mov    %eax,0x18(%ecx)
movb   $0x1,0x67(%ecx)
movzwl 0xa(%esi),%edx
mov    %edx,0x1c(%esp)
mov    0x2c(%esp),%edx
mov    0x1c(%edx),%ecx
movzwl 0x8(%esi),%edx
add    (%ecx),%edx
mov    %eax,0x14(%esp)
lea    -0x1023c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0xc(%esp)
movl   $0x8df,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
mov    0x8(%edi),%eax
test   %eax,%eax
je     8056238 <fchmod@plt+0xb0f8>
lea    (%eax,%eax,2),%edx
mov    0x2c(%esp),%eax
mov    0x10(%eax),%eax
lea    (%eax,%edx,4),%edi
jmp    80561f0 <fchmod@plt+0xb0b0>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    0x14(%eax),%eax
nop
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
mov    %edi,%edx
call   8053280 <fchmod@plt+0x8140>
test   %eax,%eax
je     8056238 <fchmod@plt+0xb0f8>
mov    0x30(%esp),%ecx
movzwl 0x2(%ecx),%eax
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%edi
jmp    80561f0 <fchmod@plt+0xb0b0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8068730 <fchmod@plt+0x1d5f0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x44(%esp)
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x64(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e42 <fchmod@plt+0xcd02>
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x200,0xc(%esp)
mov    0x28(%esp),%esi
mov    %ebp,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
movb   $0x1,0x63(%esi)
mov    %ebp,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806cbb0 <fchmod@plt+0x21a70>
mov    0x2c(%esp),%ecx
mov    %eax,0x20(%esi)
mov    0x30(%esp),%esi
movzwl 0xa(%esi),%edx
mov    %edx,0x1c(%esp)
mov    0x1c(%ecx),%ecx
movzwl 0x8(%esi),%edx
add    (%ecx),%edx
mov    %eax,0x14(%esp)
lea    -0x10268(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0xc(%esp)
movl   $0x8c8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x66(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e4b <fchmod@plt+0xcd0b>
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x200,0xc(%esp)
mov    0x28(%esp),%esi
mov    %ebp,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
movb   $0x1,0x65(%esi)
mov    %ebp,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806ca20 <fchmod@plt+0x218e0>
mov    %eax,0x1c(%esi)
mov    0x30(%esp),%esi
movzwl 0xa(%esi),%edx
mov    %edx,0x1c(%esp)
mov    0x2c(%esp),%edx
mov    0x1c(%edx),%ecx
movzwl 0x8(%esi),%edx
add    (%ecx),%edx
mov    %eax,0x14(%esp)
lea    -0x10278(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0xc(%esp)
movl   $0x8b8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065c60 <fchmod@plt+0x1ab20>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
cmpb   $0x0,0x62(%eax)
jne    8056238 <fchmod@plt+0xb0f8>
cmpb   $0x6,0x1(%edi)
je     8057e54 <fchmod@plt+0xcd14>
mov    0x8(%edi),%esi
mov    0x28(%esp),%eax
test   %esi,%esi
setne  0x61(%eax)
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x400,0xc(%esp)
mov    0x28(%esp),%esi
mov    %ebp,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
je     8057612 <fchmod@plt+0xc4d2>
mov    %eax,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
je     8056238 <fchmod@plt+0xb0f8>
mov    %ebp,0x34(%esp)
mov    %eax,%ebp
mov    %edi,0x3c(%esp)
jmp    8056e3e <fchmod@plt+0xbcfe>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
je     8056ea8 <fchmod@plt+0xbd68>
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806ae90 <fchmod@plt+0x1fd50>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8056e30 <fchmod@plt+0xbcf0>
mov    0x38(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
cmpb   $0x2e,(%edi)
je     8056e30 <fchmod@plt+0xbcf0>
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    8056e3e <fchmod@plt+0xbcfe>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%edi
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x10286(%ebx),%eax
mov    %eax,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057612 <fchmod@plt+0xc4d2>
lea    0x8cc(%esp),%ebp
mov    %eax,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebp,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     8057a6b <fchmod@plt+0xc92b>
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%eax
mov    (%eax),%eax
mov    %eax,0x34(%esp)
mov    0x4(%edi),%eax
add    %eax,0x34(%esp)
mov    0x34(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8057a6b <fchmod@plt+0xc92b>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
add    %eax,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
mov    %edx,0x38(%esp)
je     8056f5e <fchmod@plt+0xbe1e>
call   804b0e0 <__ctype_b_loc@plt>
mov    0x38(%esp),%edx
movsbl %dl,%ecx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ecx,2)
je     8057a62 <fchmod@plt+0xc922>
lea    -0xc041(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    0x1c(%eax),%eax
mov    (%eax),%esi
add    0x4(%edi),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8068450 <fchmod@plt+0x1d310>
test   %eax,%eax
je     8057612 <fchmod@plt+0xc4d2>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8058620 <fchmod@plt+0xd4e0>
test   %al,%al
je     8057023 <fchmod@plt+0xbee3>
mov    0x28(%esp),%eax
mov    $0x1,%esi
mov    0x8(%edi),%ecx
mov    %esi,%edx
mov    0x58(%eax),%eax
shl    %cl,%edx
test   %eax,%edx
jne    8057b53 <fchmod@plt+0xca13>
or     %eax,%edx
mov    0x28(%esp),%eax
mov    %edx,0x58(%eax)
mov    0x2c(%esp),%esi
lea    0x8cc(%esp),%ebp
movl   $0x400,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    0x1c(%esi),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x30(%esp),%ecx
mov    0x1c(%esi),%eax
movzwl 0x8(%ecx),%esi
add    (%eax),%esi
mov    0x8(%edi),%eax
movzwl 0xa(%ecx),%edx
mov    %eax,(%esp)
mov    %edx,0x34(%esp)
call   8058600 <fchmod@plt+0xd4c0>
mov    0x34(%esp),%edx
mov    %esi,0x18(%esp)
lea    -0xff72(%ebx),%esi
mov    %esi,0xc(%esp)
movl   $0x845,0x8(%esp)
mov    %edx,0x1c(%esp)
lea    -0x10654(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x102a1(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x7,(%esp)
mov    %edx,0x34(%esp)
call   8062020 <fchmod@plt+0x16ee0>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   80586f0 <fchmod@plt+0xd5b0>
test   %eax,%eax
je     8056238 <fchmod@plt+0xb0f8>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8058600 <fchmod@plt+0xd4c0>
mov    %esi,0xc(%esp)
movl   $0x84a,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10718(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x8(%edi),%ecx
mov    $0x1,%eax
mov    0x28(%esp),%edx
shl    %cl,%eax
or     %eax,0x5c(%edx)
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
lea    0x4cc(%esp),%esi
movl   $0x400,0xc(%esp)
mov    0x28(%esp),%ebp
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x30(%esp),%ecx
movzwl 0xa(%ecx),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%edx
movzwl 0x8(%ecx),%eax
lea    -0xff72(%ebx),%ecx
add    (%edx),%eax
mov    %ecx,0xc(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x18(%esp)
lea    -0x102b4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
movl   $0x826,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4(%ebp),%ecx
mov    %ebp,0x28(%esp)
lea    0x8cc(%esp),%ebp
mov    %ecx,(%esp)
mov    %ecx,0x34(%esp)
call   8068600 <fchmod@plt+0x1d4c0>
mov    0x4c(%esp),%edx
movl   $0x4000,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8050690 <fchmod@plt+0x5550>
test   %eax,%eax
js     8057612 <fchmod@plt+0xc4d2>
mov    %edi,0x38(%esp)
mov    0x34(%esp),%esi
jmp    8057231 <fchmod@plt+0xc0f1>
xchg   %ax,%ax
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    %ebp,%edx
mov    %esi,%eax
call   8053000 <fchmod@plt+0x7ec0>
test   %edi,%edi
je     8058058 <fchmod@plt+0xcf18>
mov    %edi,%ebp
movl   $0xa,0x4(%esp)
mov    %ebp,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    8057218 <fchmod@plt+0xc0d8>
mov    0x34(%esp),%eax
mov    %ebp,%edx
mov    0x38(%esp),%edi
call   8053000 <fchmod@plt+0x7ec0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%ebp
lea    0x4cc(%esp),%esi
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esp),%eax
movl   $0x0,0x14(%ebp)
movl   $0x400,0xc(%esp)
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x4(%ebp),%eax
mov    %ebp,0x28(%esp)
lea    0x8cc(%esp),%ebp
mov    %eax,(%esp)
call   8068600 <fchmod@plt+0x1d4c0>
mov    0x30(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %eax,0x34(%esp)
movzwl 0xa(%edx),%eax
mov    %eax,0x1c(%esp)
mov    0x1c(%ecx),%ecx
movzwl 0x8(%edx),%eax
add    (%ecx),%eax
lea    -0xff72(%ebx),%ecx
mov    %ecx,0x38(%esp)
mov    %eax,0x18(%esp)
lea    -0x102c8(%ebx),%eax
mov    %ecx,0xc(%esp)
lea    -0x10654(%ebx),%ecx
mov    %ecx,0x4(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x802,0x8(%esp)
movl   $0x7,(%esp)
mov    %ecx,0x3c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4c(%esp),%ecx
mov    0x34(%esp),%edx
mov    0x28(%esp),%eax
movl   $0x400,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8050690 <fchmod@plt+0x5550>
test   %eax,%eax
js     8057612 <fchmod@plt+0xc4d2>
movl   $0xa,0x4(%esp)
mov    %ebp,(%esp)
call   806d380 <fchmod@plt+0x22240>
testb  $0x1,0x44(%esp)
je     8057d50 <fchmod@plt+0xcc10>
mov    %ebp,(%esp)
call   804acb0 <__strdup@plt>
mov    0x28(%esp),%edx
mov    %eax,0x14(%edx)
cmpb   $0x2,0x1(%edi)
jne    8056238 <fchmod@plt+0xb0f8>
jmp    8056bc6 <fchmod@plt+0xba86>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
lea    -0xff72(%ebx),%ecx
mov    %ecx,0xc(%esp)
movl   $0x7f3,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x102e2(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%ecx
imul   $0xf4240,0x8(%edi),%eax
mov    %eax,0x4c(%ecx)
sar    $0x1f,%eax
mov    %eax,0x50(%ecx)
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
lea    0x4cc(%esp),%esi
mov    %esi,0x8(%esp)
mov    0x28(%esp),%ebp
movl   $0x400,0xc(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x4(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x34(%esp)
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057612 <fchmod@plt+0xc4d2>
mov    %edi,0x38(%esp)
lea    0x8cc(%esp),%ebp
mov    0x34(%esp),%edi
jmp    8057451 <fchmod@plt+0xc311>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
mov    %edi,%eax
call   8053000 <fchmod@plt+0x7ec0>
mov    %esi,0x8(%esp)
movl   $0x4000,0x4(%esp)
mov    %ebp,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
jne    8057448 <fchmod@plt+0xc308>
mov    %esi,(%esp)
mov    0x38(%esp),%edi
call   804a730 <fclose@plt>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
lea    0x4cc(%esp),%esi
movl   $0x400,0xc(%esp)
mov    0x28(%esp),%ebp
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
movl   $0x0,0x10(%esp)
movl   $0x400,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   806cd50 <fchmod@plt+0x21c10>
test   %eax,%eax
je     8057534 <fchmod@plt+0xc3f4>
cmpb   $0x2f,0x4cc(%esp)
je     8057534 <fchmod@plt+0xc3f4>
lea    0x8cc(%esp),%ebp
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,%eax
call   8055a60 <fchmod@plt+0xa920>
lea    0x6c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    8057570 <fchmod@plt+0xc430>
mov    0x8(%edi),%eax
test   %eax,%eax
je     8057374 <fchmod@plt+0xc234>
test   %eax,0x7c(%esp)
jne    8057374 <fchmod@plt+0xc234>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x1,0x1(%edi)
jne    8056238 <fchmod@plt+0xb0f8>
jmp    8056bc6 <fchmod@plt+0xba86>
nop
mov    0x28(%esp),%eax
mov    0x10(%eax),%eax
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065200 <fchmod@plt+0x1a0c0>
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
mov    %eax,%esi
je     8057612 <fchmod@plt+0xc4d2>
mov    0x2c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    (%eax),%edx
add    0x4(%edi),%edx
mov    %edx,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     8056238 <fchmod@plt+0xb0f8>
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    80575e0 <fchmod@plt+0xc4a0>
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%esi
mov    0x1c(%esi),%eax
mov    (%eax),%eax
add    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8068450 <fchmod@plt+0x1d310>
lea    -0x11546(%ebx),%edx
test   %eax,%eax
cmove  %edx,%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8053280 <fchmod@plt+0x8140>
test   %eax,%eax
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%edx
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
mov    %edi,0x4(%esp)
call   8053450 <fchmod@plt+0x8310>
test   %eax,%eax
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
lea    0xcc(%esp),%esi
movl   $0x400,0xc(%esp)
mov    0x28(%esp),%ebp
mov    %esi,0x8(%esp)
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804fd50 <fchmod@plt+0x4c10>
mov    0x4(%ebp),%eax
cmpb   $0x2f,0xcc(%esp)
movb   $0x0,0x8cc(%esp)
mov    %esi,0x48(%esp)
je     8057740 <fchmod@plt+0xc600>
mov    %eax,(%esp)
lea    0x8cc(%esp),%ebp
call   8065440 <fchmod@plt+0x1a300>
movl   $0x0,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    -0x1033a(%ebx),%eax
mov    %esi,0x10(%esp)
lea    0x4cc(%esp),%esi
movl   $0x0,0x14(%esp)
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,0x48(%esp)
lea    -0x10654(%ebx),%ecx
mov    $0x1f3,%esi
lea    -0xff80(%ebx),%ebp
lea    0x6c(%esp),%eax
mov    %ecx,0x34(%esp)
lea    -0x10758(%ebx),%ecx
mov    %edi,0x58(%esp)
mov    0x48(%esp),%edi
mov    %ebp,0x38(%esp)
mov    %eax,%ebp
movl   $0x1f4,0x3c(%esp)
mov    %ecx,0x40(%esp)
jmp    805780a <fchmod@plt+0xc6ca>
xchg   %ax,%ax
cmpb   $0x0,0x8cc(%esp)
je     80577ad <fchmod@plt+0xc66d>
lea    0x8cc(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    8057d07 <fchmod@plt+0xcbc7>
mov    0x40(%esp),%eax
movl   $0x14,0x18(%esp)
mov    %edi,0x14(%esp)
movl   $0x2c8,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    0x64(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804af30 <nanosleep@plt>
mov    %esi,%eax
sub    $0x1,%eax
je     8057a84 <fchmod@plt+0xc944>
mov    %esi,0x3c(%esp)
mov    %eax,%esi
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
movl   $0x0,0x64(%esp)
movl   $0x1312d00,0x68(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    8057780 <fchmod@plt+0xc640>
mov    $0x1f4,%ax
mov    0x38(%esp),%ebp
sub    0x3c(%esp),%eax
movl   $0x2c0,0x8(%esp)
mov    0x58(%esp),%edi
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x14(%esp)
lea    -0x107a8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%esi
lea    0x0(%esi),%esi
add    $0xc,%esi
movzbl (%esi),%eax
sub    $0xe,%eax
cmp    $0x4,%al
jbe    8057890 <fchmod@plt+0xc750>
mov    0x28(%esp),%edx
cmp    %esi,%edi
mov    0x4(%edx),%eax
mov    %eax,0x8(%edx)
jae    80579fb <fchmod@plt+0xc8bb>
mov    %edi,%ebp
movzbl 0x0(%ebp),%eax
sub    $0xe,%eax
cmp    $0x4,%al
ja     8056bc6 <fchmod@plt+0xba86>
movzbl %al,%eax
mov    -0xffb0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
xchg   %ax,%ax
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065650 <fchmod@plt+0x1a510>
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
lea    -0xff72(%ebx),%ecx
mov    %ecx,0xc(%esp)
movl   $0x9b7,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056bc6 <fchmod@plt+0xba86>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x53(%esp)
je     8057a20 <fchmod@plt+0xc8e0>
mov    %edi,0x30(%esp)
movl   $0x0,0x44(%esp)
jmp    8056238 <fchmod@plt+0xb0f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
jmp    8056bb0 <fchmod@plt+0xba70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%esi
je     8056bc6 <fchmod@plt+0xba86>
mov    0x2c(%esp),%ebp
jmp    80579aa <fchmod@plt+0xc86a>
nop
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     8056bc6 <fchmod@plt+0xba86>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,%edx
add    $0x5,%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   8053280 <fchmod@plt+0x8140>
test   %eax,%eax
jne    8057998 <fchmod@plt+0xc858>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x28(%esp),%eax
mov    0x8(%eax),%edx
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,0x4(%esp)
call   8053450 <fchmod@plt+0x8310>
test   %eax,%eax
jne    8057bfc <fchmod@plt+0xcabc>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%ebp
cmp    %esi,%ebp
jb     80578b1 <fchmod@plt+0xc771>
mov    %esi,%edi
jmp    80561f0 <fchmod@plt+0xb0b0>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%eax
test   %al,%al
jne    8056830 <fchmod@plt+0xb6f0>
jmp    8056893 <fchmod@plt+0xb753>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x1(%edi)
mov    %edi,0x30(%esp)
jne    8056bc6 <fchmod@plt+0xba86>
xchg   %ax,%ax
jmp    8057937 <fchmod@plt+0xc7f7>
lea    0x0(%esi),%esi
cmpb   $0x4,0x1(%edi)
je     8056238 <fchmod@plt+0xb0f8>
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8056238 <fchmod@plt+0xb0f8>
cmp    $0x3d,%dl
je     8057f75 <fchmod@plt+0xce35>
mov    %esi,(%esp)
xchg   %ax,%ax
call   804a730 <fclose@plt>
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x48(%esp),%eax
mov    0x38(%esp),%ebp
mov    0x58(%esp),%edi
movl   $0x2cb,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x102fb(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
movb   $0x1,0x53(%esp)
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    80561ce <fchmod@plt+0xb08e>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
test   %eax,%eax
setg   0x53(%esp)
jmp    80561ce <fchmod@plt+0xb08e>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    8056321 <fchmod@plt+0xb1e1>
mov    0x2c(%esp),%eax
mov    0x30(%esp),%edx
mov    0x1c(%eax),%eax
movzwl 0xa(%edx),%ebp
movzwl 0x8(%edx),%edx
add    (%eax),%edx
mov    %ecx,(%esp)
mov    %edx,0x34(%esp)
call   8058600 <fchmod@plt+0xd4c0>
mov    0x34(%esp),%edx
lea    -0xff72(%ebx),%ecx
mov    %ecx,0xc(%esp)
mov    %ebp,0x1c(%esp)
movl   $0x836,0x8(%esp)
mov    %edx,0x18(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0x10738(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x8(%edi),%ecx
mov    0x28(%esp),%eax
shl    %cl,%esi
test   %esi,0x5c(%eax)
je     8056238 <fchmod@plt+0xb0f8>
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x28(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8065200 <fchmod@plt+0x1a0c0>
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,%edx
call   8053280 <fchmod@plt+0x8140>
test   %eax,%eax
je     80579f0 <fchmod@plt+0xc8b0>
mov    0x28(%esp),%ebp
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,0x8(%ebp)
jne    80578af <fchmod@plt+0xc76f>
jmp    8056bc6 <fchmod@plt+0xba86>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
jmp    8057be6 <fchmod@plt+0xcaa6>
mov    0x28(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
jmp    8057be6 <fchmod@plt+0xcaa6>
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%eax
mov    (%eax),%eax
add    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8068630 <fchmod@plt+0x1d4f0>
test   %eax,%eax
je     8057f56 <fchmod@plt+0xce16>
cmpb   $0x2,0x1(%ebp)
jne    80579f0 <fchmod@plt+0xc8b0>
jmp    8057bfc <fchmod@plt+0xcabc>
lea    0x0(%esi),%esi
lea    -0x10258(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %ebp,0x14(%esp)
mov    %ecx,0xc(%esp)
movl   $0x8d5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x30(%esp),%esi
movzwl 0xa(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    0x1c(%eax),%edx
movzwl 0x8(%esi),%eax
add    (%edx),%eax
mov    %ecx,0xc(%esp)
movl   $0x94c,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0x106d0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x48(%esp),%eax
mov    0x38(%esp),%ebp
mov    0x58(%esp),%edi
movl   $0x2c5,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x10784(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
cmpb   $0x2,0x1(%edi)
jne    8056bc6 <fchmod@plt+0xba86>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    -0x11343(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806d510 <fchmod@plt+0x223d0>
test   %eax,%eax
jle    8057365 <fchmod@plt+0xc225>
mov    %eax,0x14(%esp)
lea    -0x1133c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
movl   $0x80e,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8057365 <fchmod@plt+0xc225>
lea    -0x1067c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %ebp,0x14(%esp)
movl   $0x999,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8056238 <fchmod@plt+0xb0f8>
lea    -0x1033a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806d510 <fchmod@plt+0x223d0>
test   %eax,%eax
jle    8056701 <fchmod@plt+0xb5c1>
mov    %eax,0x14(%esp)
lea    -0x1133c(%ebx),%eax
lea    -0xff72(%ebx),%ecx
mov    %eax,0x10(%esp)
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x946,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %ecx,0x38(%esp)
mov    %eax,0x34(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x38(%esp),%ecx
jmp    8056711 <fchmod@plt+0xb5d1>
movb   $0x1,0x66(%eax)
jmp    8056a50 <fchmod@plt+0xb910>
movb   $0x1,0x64(%eax)
jmp    8056c20 <fchmod@plt+0xbae0>
movb   $0x1,0x66(%eax)
jmp    8056cd8 <fchmod@plt+0xbb98>
movb   $0x1,0x62(%eax)
jmp    8056db0 <fchmod@plt+0xbc70>
movb   $0x1,0x69(%eax)
jmp    80566cc <fchmod@plt+0xb58c>
movb   $0x1,0x68(%eax)
jmp    8056950 <fchmod@plt+0xb810>
movb   $0x1,0x64(%eax)
jmp    80569d0 <fchmod@plt+0xb890>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065c30 <fchmod@plt+0x1aaf0>
jmp    805681e <fchmod@plt+0xb6de>
mov    %esi,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
jmp    8056256 <fchmod@plt+0xb116>
lea    -0x101e6(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %ebp,0x14(%esp)
movl   $0x996,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34(%esp),%edx
jmp    8056400 <fchmod@plt+0xb2c0>
mov    0x34(%esp),%eax
mov    %edx,0x38(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8068450 <fchmod@plt+0x1d310>
mov    0x38(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
je     80568d8 <fchmod@plt+0xb798>
mov    0x28(%esp),%eax
lea    0x8cc(%esp),%ebp
movl   $0x200,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804fd50 <fchmod@plt+0x4c10>
lea    -0xbcbe(%ebx),%eax
mov    %esi,0x8(%esp)
lea    0x4cc(%esp),%esi
movl   $0x0,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x200,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    80568fb <fchmod@plt+0xb7bb>
cmpb   $0x1,0x1(%ebp)
jne    80579f0 <fchmod@plt+0xc8b0>
jmp    8057bfc <fchmod@plt+0xcabc>
lea    0x0(%esi),%esi
mov    0x28(%esp),%edx
movb   $0x1,0x68(%edx)
jmp    8056b24 <fchmod@plt+0xb9e4>
lea    0x1(%ebp),%edx
mov    %edx,%ecx
mov    %edx,0x38(%esp)
movsbl 0x1(%ebp),%edx
test   %dl,%dl
je     8058061 <fchmod@plt+0xcf21>
testb  $0x20,0x1(%eax,%edx,2)
jne    8058061 <fchmod@plt+0xcf21>
mov    %ecx,%edx
jmp    8057fa7 <fchmod@plt+0xce67>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x20,0x1(%eax,%ecx,2)
jne    8057fb1 <fchmod@plt+0xce71>
add    $0x1,%edx
movsbl (%edx),%ecx
test   %cl,%cl
jne    8057fa0 <fchmod@plt+0xce60>
movb   $0x0,(%edx)
mov    0x38(%esp),%eax
jmp    8056f64 <fchmod@plt+0xbe24>
lea    -0x1021b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
test   %eax,%eax
jle    805649f <fchmod@plt+0xb35f>
mov    %eax,0x14(%esp)
lea    -0x1133c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xff72(%ebx),%ecx
lea    -0x10654(%ebx),%eax
mov    %ecx,0xc(%esp)
movl   $0x96d,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805649f <fchmod@plt+0xb35f>
mov    0x28(%esp),%eax
movb   $0x1,0x6a(%eax)
movzbl 0x1(%edi),%eax
jmp    805644e <fchmod@plt+0xb30e>
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8065620 <fchmod@plt+0x1a4e0>
jmp    8056459 <fchmod@plt+0xb319>
mov    $0xffffffff,%eax
jmp    805620a <fchmod@plt+0xb0ca>
lea    -0x1033a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
jmp    8057fcf <fchmod@plt+0xce8f>
mov    0x38(%esp),%edi
jmp    8056238 <fchmod@plt+0xb0f8>
mov    0x38(%esp),%edx
jmp    8057fb1 <fchmod@plt+0xce71>
call   806ed90 <fchmod@plt+0x23c50>
nop
push   %ebp
mov    $0x46,%ecx
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x15c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
mov    0x174(%esp),%ebp
lea    0x34(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2ac14,%ebx
mov    %edi,0x1c(%esp)
test   %ebp,%ebp
rep stos %eax,%es:(%edi)
movl   $0x76656475,0x34(%esp)
movl   $0x3430322d,0x38(%esp)
movl   $0xdead1dea,0x44(%esp)
mov    %edx,0x48(%esp)
je     80581b8 <fchmod@plt+0xd078>
lea    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
cmpb   $0x0,0x82(%esi)
jne    8058119 <fchmod@plt+0xcfd9>
lea    0xc(%esi),%eax
mov    0x7c(%esi),%edx
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804b060 <connect@plt>
test   %eax,%eax
js     80581a8 <fchmod@plt+0xd068>
movb   $0x1,0x82(%esi)
mov    0x1c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x118,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804b100 <send@plt>
test   %eax,%eax
js     80581a8 <fchmod@plt+0xd068>
imul   $0x3e8,0x178(%esp),%edi
00
lea    0x2c(%esp),%ebp
mov    0x8(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
mov    $0x1,%eax
mov    %ax,0x30(%esp)
call   804a8f0 <poll@plt>
test   %eax,%eax
jns    80581c8 <fchmod@plt+0xd088>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
je     805814f <fchmod@plt+0xd00f>
neg    %eax
mov    0x14c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80581df <fchmod@plt+0xd09f>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    8058186 <fchmod@plt+0xd046>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x170(%esp),%eax
mov    %eax,0x4c(%esp)
jmp    80580e8 <fchmod@plt+0xcfa8>
mov    $0xffffff92,%eax
je     8058186 <fchmod@plt+0xd046>
movzwl 0x32(%esp),%eax
shl    $0x1c,%eax
sar    $0x1f,%eax
and    $0xfffffffb,%eax
jmp    8058186 <fchmod@plt+0xd046>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2aab6,%ebx
test   %esi,%esi
je     8058240 <fchmod@plt+0xd100>
mov    (%esi),%eax
lea    -0x1(%eax),%edx
mov    %esi,%eax
test   %edx,%edx
mov    %edx,(%esi)
jle    8058220 <fchmod@plt+0xd0e0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
js     805822f <fchmod@plt+0xd0ef>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    8058215 <fchmod@plt+0xd0d5>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8058215 <fchmod@plt+0xd0d5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2aa5c,%ebx
sub    $0x30,%esp
movl   $0x84,0x4(%esp)
mov    0x44(%esp),%edi
movl   $0x1,(%esp)
movl   $0x1,0x2c(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8058378 <fchmod@plt+0xd238>
movl   $0x1,(%eax)
mov    0x40(%esp),%eax
test   %edi,%edi
mov    %eax,0x4(%esi)
js     8058310 <fchmod@plt+0xd1d0>
movb   $0x1,0x80(%esi)
mov    %edi,0x8(%esi)
lea    0x2c(%esp),%eax
mov    %edi,(%esp)
lea    0xe(%esi),%edi
movl   $0x4,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a4d0 <setsockopt@plt>
mov    $0x1,%eax
mov    %ax,0xc(%esi)
lea    -0xfea5(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %edi,(%esp)
call   804ab30 <strlen@plt>
add    $0x2,%eax
mov    %eax,0x7c(%esi)
mov    %esi,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
movl   $0x80805,0x4(%esp)
movl   $0x1,(%esp)
call   804af40 <socket@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
jns    80582a6 <fchmod@plt+0xd166>
lea    -0xfebf(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xfe78(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xfeea(%ebx),%eax
movl   $0x57,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   80581f0 <fchmod@plt+0xd0b0>
xor    %eax,%eax
jmp    8058304 <fchmod@plt+0xd1c4>
nop
xor    %eax,%eax
jmp    8058304 <fchmod@plt+0xd1c4>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8058250 <fchmod@plt+0xd110>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    $0x1,%edx
jmp    8058070 <fchmod@plt+0xcf30>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    $0x2,%edx
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
call   8058070 <fchmod@plt+0xcf30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    $0x3,%edx
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
call   8058070 <fchmod@plt+0xcf30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    $0x4,%edx
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
call   8058070 <fchmod@plt+0xcf30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    $0x5,%edx
movl   $0x0,0x4(%esp)
jmp    8058070 <fchmod@plt+0xcf30>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    $0x6,%edx
jmp    8058070 <fchmod@plt+0xcf30>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    $0x7,%edx
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
call   8058070 <fchmod@plt+0xcf30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    $0x8,%edx
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
call   8058070 <fchmod@plt+0xcf30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a7bb,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
cmpb   $0x0,0x3a0(%ebx)
jne    8058534 <fchmod@plt+0xd3f4>
lea    -0x174(%ebx),%esi
lea    0x2c(%esi),%edi
mov    (%esi),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     8058526 <fchmod@plt+0xd3e6>
mov    %ebp,(%esp)
call   *%eax
add    $0x4,%esi
cmp    %edi,%esi
jne    8058518 <fchmod@plt+0xd3d8>
movb   $0x1,0x3a0(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a76b,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
cmpb   $0x0,0x3a0(%ebx)
je     8058584 <fchmod@plt+0xd444>
lea    -0x174(%ebx),%esi
lea    0x2c(%esi),%edi
mov    (%esi),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     8058576 <fchmod@plt+0xd436>
mov    %ebp,(%esp)
call   *%eax
add    $0x4,%esi
cmp    %edi,%esi
jne    8058568 <fchmod@plt+0xd428>
movb   $0x0,0x3a0(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a71b,%ebx
sub    $0x2c,%esp
mov    0x32c(%ebx),%esi
lea    -0x174(%ebx),%ebp
lea    0x2c(%ebp),%eax
mov    %eax,0x1c(%esp)
lea    -0x13eec(%ebx),%edi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
add    $0x4,%ebp
mov    0x8(%eax),%ecx
mov    %ecx,0x10(%esp)
mov    (%eax),%eax
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
cmp    0x1c(%esp),%ebp
jne    80585c0 <fchmod@plt+0xd480>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
call   8058845 <fchmod@plt+0xd705>
add    $0x2a6af,%ecx
mov    0x4(%esp),%eax
mov    -0x174(%ecx,%eax,4),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
call   8058845 <fchmod@plt+0xd705>
add    $0x2a68f,%ecx
mov    0x4(%esp),%eax
mov    -0x174(%ecx,%eax,4),%eax
movzbl 0x18(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x420,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a666,%ebx
lea    0x1c(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x41c(%esp)
xor    %eax,%eax
mov    0x430(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8058699 <fchmod@plt+0xd559>
movb   $0x0,(%eax)
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x174(%ebx,%esi,4),%eax
mov    %edi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     80586e0 <fchmod@plt+0xd5a0>
add    $0x1,%esi
cmp    $0xb,%esi
jne    80586a0 <fchmod@plt+0xd560>
mov    $0xb,%eax
mov    0x41c(%esp),%edx
xor    %gs:0x14,%edx
jne    80586e4 <fchmod@plt+0xd5a4>
add    $0x420,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%eax
jmp    80586c6 <fchmod@plt+0xd586>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a5bb,%ebx
sub    $0x63c,%esp
mov    0x65c(%esp),%eax
lea    0x22c(%esp),%ebp
mov    0x650(%esp),%esi
lea    0x2c(%esp),%edi
mov    %gs:0x14,%edx
mov    %edx,0x62c(%esp)
xor    %edx,%edx
mov    %eax,0x1c(%esp)
mov    0x330(%ebx),%eax
movl   $0x0,(%eax)
mov    0x658(%esp),%eax
mov    %ebp,(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %esi,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
lea    0x28(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   8050540 <fchmod@plt+0x5400>
mov    0x654(%esp),%eax
movzbl 0x1c(%esp),%ebp
mov    0x28(%esp),%edx
mov    %edi,0x8(%esp)
mov    -0x174(%ebx,%eax,4),%eax
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   *0x4(%eax)
mov    0x62c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80587bd <fchmod@plt+0xd67d>
add    $0x63c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a4d8,%ebx
mov    0x38(%esp),%esi
mov    0x3c(%esp),%edi
mov    0x30(%esp),%eax
mov    0x34(%esp),%ebp
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
cmpb   $0x2e,(%esi)
je     8058817 <fchmod@plt+0xd6d7>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
mov    %ebp,%eax
test   %al,%al
je     805883b <fchmod@plt+0xd6fb>
lea    -0x13d6d(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   804ada0 <__printf_chk@plt>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%esp),%ecx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a457,%ebx
sub    $0x103c,%esp
mov    0x1050(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x102c(%esp)
xor    %eax,%eax
lea    -0xfe62(%ebx),%eax
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     8058930 <fchmod@plt+0xd7f0>
mov    0x8(%ebp),%eax
lea    0x2c(%esp),%ebp
movl   $0xff8,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %ebp,0x8(%esp)
movl   $0x90009427,0x4(%esp)
mov    %esi,(%esp)
call   804a8b0 <ioctl@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
call   804b0a0 <close@plt>
test   %ebp,%ebp
js     8058930 <fchmod@plt+0xd7f0>
movzbl 0x1c(%esp),%ebp
lea    -0xc282(%ebx),%edx
lea    -0xc041(%ebx),%eax
cmovne %edx,%eax
mov    %eax,0xc(%esp)
lea    -0xfe4f(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80587d0 <fchmod@plt+0xd690>
xor    %eax,%eax
mov    0x102c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8058937 <fchmod@plt+0xd7f7>
add    $0x103c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    $0x1,%eax
jmp    8058914 <fchmod@plt+0xd7d4>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a364,%ebx
mov    0x2c(%esp),%edx
cmpl   $0x3,0x28(%esp)
mov    0x30(%esp),%ebp
mov    %eax,(%esp)
je     8058978 <fchmod@plt+0xd838>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%edx),%esi
mov    $0x6,%ecx
lea    -0xfe40(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
jne    8058968 <fchmod@plt+0xd828>
mov    %ebp,%eax
movzbl %al,%ebp
mov    (%esp),%eax
mov    %ebp,0x24(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8058850 <fchmod@plt+0xd710>
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a2fe,%ebx
sub    $0x18,%esp
mov    0x3a4(%ebx),%eax
mov    %eax,(%esp)
call   806a810 <fchmod@plt+0x1f6d0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a2ce,%ebx
sub    $0x18,%esp
mov    0x3a4(%ebx),%eax
mov    %eax,(%esp)
call   806a430 <fchmod@plt+0x1f2f0>
mov    %eax,0x3a4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
xor    %eax,%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a29c,%ebx
sub    $0x18,%esp
mov    0x3a4(%ebx),%edx
test   %edx,%edx
je     8058a30 <fchmod@plt+0xd8f0>
add    $0x18,%esp
pop    %ebx
ret
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806a4b0 <fchmod@plt+0x1f370>
cmp    $0x1,%eax
mov    %eax,0x3a4(%ebx)
sbb    %eax,%eax
add    $0x18,%esp
and    $0xfffffff4,%eax
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a25b,%ebx
sub    $0x2c,%esp
movzbl 0x50(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x4c(%esp),%esi
mov    %cl,0x1c(%esp)
mov    0x3a4(%ebx),%edx
test   %edx,%edx
je     8058b87 <fchmod@plt+0xda47>
test   %eax,%eax
movl   $0x0,0x8(%esp)
je     8058b70 <fchmod@plt+0xda30>
mov    0x48(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80645f0 <fchmod@plt+0x194b0>
test   %eax,%eax
mov    %eax,%edi
je     8058b60 <fchmod@plt+0xda20>
mov    %eax,0x4(%esp)
mov    0x3a4(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806a8b0 <fchmod@plt+0x1f770>
mov    %edi,(%esp)
mov    %eax,%ebp
call   804a690 <free@plt>
movzbl 0x1c(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x1c(%esp)
xor    %eax,%eax
test   %ebp,%ebp
je     8058b55 <fchmod@plt+0xda15>
xchg   %ax,%ax
test   %esi,%esi
je     8058b0c <fchmod@plt+0xd9cc>
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x2,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8058b43 <fchmod@plt+0xda03>
mov    %ebp,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
test   %eax,%eax
js     8058b60 <fchmod@plt+0xda20>
addl   $0x1,0x18(%esp)
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    8058ae8 <fchmod@plt+0xd9a8>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    $0xfffffff4,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   806a8b0 <fchmod@plt+0x1f770>
mov    %eax,%ebp
jmp    8058acf <fchmod@plt+0xd98f>
mov    $0xfffffffe,%eax
jmp    8058b55 <fchmod@plt+0xda15>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2a111,%ebx
mov    0x88(%esp),%esi
mov    %eax,0x2c(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    %al,0x3b(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x3a4(%ebx),%eax
test   %eax,%eax
je     8058d00 <fchmod@plt+0xdbc0>
movl   $0x0,0x28(%esp)
lea    -0x3854(%ebx),%ebp
movl   $0x0,0x34(%esp)
lea    -0xfe1c(%ebx),%edi
movl   $0x0,0x30(%esp)
movl   $0x0,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8058ca0 <fchmod@plt+0xdb60>
cmp    $0x66,%eax
je     8058c78 <fchmod@plt+0xdb38>
lea    0x0(%esi),%esi
jle    8058c60 <fchmod@plt+0xdb20>
cmp    $0x70,%eax
je     8058c88 <fchmod@plt+0xdb48>
cmp    $0x73,%eax
jne    8058c10 <fchmod@plt+0xdad0>
mov    0x33c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x34(%esp)
jmp    8058c10 <fchmod@plt+0xdad0>
lea    0x0(%esi),%esi
cmp    $0x64,%eax
jne    8058c10 <fchmod@plt+0xdad0>
mov    0x33c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x30(%esp)
jmp    8058c10 <fchmod@plt+0xdad0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x33c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jmp    8058c10 <fchmod@plt+0xdad0>
xchg   %ax,%ax
mov    0x33c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jmp    8058c10 <fchmod@plt+0xdad0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x330(%ebx),%eax
mov    (%eax),%eax
mov    (%esi,%eax,4),%eax
test   %eax,%eax
je     8058d08 <fchmod@plt+0xdbc8>
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
movzbl 0x3c(%esp),%edx
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   8058a50 <fchmod@plt+0xd910>
test   %eax,%eax
setle  %al
movzbl %al,%eax
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8058ea2 <fchmod@plt+0xdd62>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %eax,%eax
mov    %eax,%esi
jne    8058d2e <fchmod@plt+0xdbee>
nop
mov    $0x1,%eax
jmp    8058ce0 <fchmod@plt+0xdba0>
nop
mov    0x30(%esp),%edi
mov    0x2c(%esp),%eax
test   %edi,%edi
je     8058cf9 <fchmod@plt+0xdbb9>
mov    %eax,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8067760 <fchmod@plt+0x1c620>
test   %eax,%eax
mov    %eax,%esi
je     8058d00 <fchmod@plt+0xdbc0>
lea    -0xfe13(%ebx),%edi
mov    0x34(%esp),%ebp
mov    %edi,0x30(%esp)
jmp    8058d7f <fchmod@plt+0xdc3f>
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
movzbl 0x3b(%esp),%edx
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   8058a50 <fchmod@plt+0xd910>
test   %eax,%eax
jg     8058e9b <fchmod@plt+0xdd5b>
mov    %esi,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%esi
je     8058d00 <fchmod@plt+0xdbc0>
mov    %esi,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
mov    %eax,%edi
je     8058d71 <fchmod@plt+0xdc31>
test   %ebp,%ebp
je     8058da1 <fchmod@plt+0xdc61>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    8058d71 <fchmod@plt+0xdc31>
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8068450 <fchmod@plt+0x1d310>
test   %eax,%eax
jne    8058d40 <fchmod@plt+0xdc00>
cmpb   $0x75,(%edi)
jne    8058d71 <fchmod@plt+0xdc31>
cmpb   $0x73,0x1(%edi)
xchg   %ax,%ax
jne    8058d71 <fchmod@plt+0xdc31>
cmpb   $0x62,0x2(%edi)
jne    8058d71 <fchmod@plt+0xdc31>
cmpb   $0x0,0x3(%edi)
jne    8058d71 <fchmod@plt+0xdc31>
lea    -0xfe0a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8058d71 <fchmod@plt+0xdc31>
lea    -0xfe01(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     8058d71 <fchmod@plt+0xdc31>
mov    0x34(%esp),%edx
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804b040 <strtol@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
jle    8058d71 <fchmod@plt+0xdc31>
mov    0x3c(%esp),%ecx
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
call   804b040 <strtol@plt>
test   %eax,%eax
jle    8058d71 <fchmod@plt+0xdc31>
mov    0x34(%esp),%edx
mov    %eax,0x18(%esp)
lea    -0xfdf7(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %edx,0x14(%esp)
lea    0x4c(%esp),%edx
mov    %edx,(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %edx,0x34(%esp)
call   804a510 <__snprintf_chk@plt>
mov    0x34(%esp),%edx
mov    %edx,%eax
jmp    8058d40 <fchmod@plt+0xdc00>
xor    %eax,%eax
jmp    8058ce0 <fchmod@plt+0xdba0>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x29dfb,%ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%ecx
mov    0x1078(%esp),%esi
mov    %edx,0x4(%esp)
mov    0x1074(%esp),%edi
mov    %eax,(%esp)
mov    %edx,0x34(%esp)
mov    %ecx,0x28(%esp)
mov    %esi,0x3c(%esp)
mov    %gs:0x14,%esi
mov    %esi,0x104c(%esp)
xor    %esi,%esi
mov    %edx,%esi
call   8065690 <fchmod@plt+0x1a550>
movl   $0x1000,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xbf67(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,%ebp
mov    %eax,0x24(%esp)
call   804ac80 <snprintf@plt>
lea    -0xfdc0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xfb89(%ebx),%eax
mov    %eax,0x30(%esp)
mov    %eax,0xc(%esp)
lea    -0xfc74(%ebx),%eax
mov    %esi,0x14(%esp)
xor    %esi,%esi
mov    %ebp,0x18(%esp)
movl   $0x3c,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x2c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%ecx
mov    %edi,0x8(%esp)
shr    $0x2,%edi
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
call   804ac60 <memset@plt>
lea    -0xfc50(%ebx),%eax
mov    %eax,0x38(%esp)
jmp    8058fa6 <fchmod@plt+0xde66>
nop
mov    0x28(%esp),%ecx
mov    %eax,(%ecx,%esi,4)
movb   $0x0,0x0(%ebp)
add    $0x1,%esi
mov    0x24(%esp),%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
test   %eax,%eax
mov    %eax,%ebp
je     8059020 <fchmod@plt+0xdee0>
lea    0x1(%ebp),%eax
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
cmp    %edi,%esi
jb     8058f98 <fchmod@plt+0xde58>
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
movl   $0x45,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8058f9f <fchmod@plt+0xde5f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
cmp    %edi,%esi
jae    8059158 <fchmod@plt+0xe018>
mov    0x28(%esp),%edx
mov    %eax,(%edx,%esi,4)
cmpb   $0x0,0x3c(%esp)
jne    8059068 <fchmod@plt+0xdf28>
mov    0x104c(%esp),%eax
xor    %gs:0x14,%eax
jne    8059197 <fchmod@plt+0xe057>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xfda3(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
movl   $0x8,0x14(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
mov    0x34(%esp),%eax
movl   $0x52,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xfd8d(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%eax
mov    -0x4(%eax,%edi,4),%ecx
test   %ecx,%ecx
jne    80590f3 <fchmod@plt+0xdfb3>
test   %edi,%edi
je     8059042 <fchmod@plt+0xdf02>
sub    $0x1,%edi
mov    -0x4(%eax,%edi,4),%edx
test   %edx,%edx
je     80590e0 <fchmod@plt+0xdfa0>
test   %edi,%edi
je     8059042 <fchmod@plt+0xdf02>
mov    %edi,0x34(%esp)
mov    0x30(%esp),%ebp
xor    %esi,%esi
mov    0x28(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi,%esi,4),%eax
mov    %ebp,0xc(%esp)
movl   $0x58,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x18(%esp)
mov    %esi,%eax
add    $0x1,%esi
shl    $0x5,%eax
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
cmp    0x34(%esp),%esi
jne    8059110 <fchmod@plt+0xdfd0>
jmp    8059042 <fchmod@plt+0xdf02>
xchg   %ax,%ax
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
movl   $0x4d,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xfc50(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805903b <fchmod@plt+0xdefb>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x29b05,%ebx
mov    0xc0(%esp),%ebp
mov    0xcc(%esp),%eax
test   %ebp,%ebp
mov    %eax,0x1c(%esp)
lea    -0xfd72(%ebx),%esi
lea    -0xfd78(%ebx),%edi
jne    80591fe <fchmod@plt+0xe0be>
jmp    8059316 <fchmod@plt+0xe1d6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%ebp
je     8059316 <fchmod@plt+0xe1d6>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     80591e0 <fchmod@plt+0xe0a0>
movzbl 0x1c(%esp),%eax
mov    %eax,%edi
mov    %eax,0x28(%esp)
lea    -0xc041(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    %eax,0xc(%esp)
lea    -0xfce1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
lea    0x30(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
mov    %edi,0x8(%esp)
movl   $0x4,0x4(%esp)
call   8058eb0 <fchmod@plt+0xdd70>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
lea    -0xfcd8(%ebx),%edx
mov    %ebp,%eax
mov    %edi,0x8(%esp)
movl   $0x8,0x4(%esp)
call   8058eb0 <fchmod@plt+0xdd70>
lea    0x34(%esp),%eax
mov    %eax,(%esp)
lea    -0xfcc7(%ebx),%edx
mov    %ebp,%eax
mov    %edi,0x8(%esp)
movl   $0x4,0x4(%esp)
call   8058eb0 <fchmod@plt+0xdd70>
lea    0x40(%esp),%eax
mov    %eax,0x20(%esp)
lea    -0xfcb6(%ebx),%edx
mov    %eax,(%esp)
mov    %ebp,%eax
mov    %edi,0x8(%esp)
movl   $0x60,0x4(%esp)
call   8058eb0 <fchmod@plt+0xdd70>
mov    0x30(%esp),%eax
test   $0x2,%al
jne    8059328 <fchmod@plt+0xe1e8>
test   $0x8,%al
je     80592e4 <fchmod@plt+0xe1a4>
mov    0x38(%esp),%eax
test   $0x1,%al
je     80592e4 <fchmod@plt+0xe1a4>
and    $0x6,%eax
cmp    $0x6,%eax
je     8059552 <fchmod@plt+0xe412>
lea    -0xfc14(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xfb92(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xfc74(%ebx),%eax
movl   $0x9a,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x8,%al
je     8059380 <fchmod@plt+0xe240>
mov    0x38(%esp),%edx
and    $0x3,%edx
cmp    $0x3,%edx
jne    8059380 <fchmod@plt+0xe240>
mov    0x68(%esp),%edx
mov    %edx,%ecx
shr    $0xb,%ecx
or     %edx,%ecx
and    $0x1,%ecx
je     8059562 <fchmod@plt+0xe422>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd4b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x30(%esp),%eax
xor    %edx,%edx
jmp    8059384 <fchmod@plt+0xe244>
nop
xor    %esi,%esi
xor    %edx,%edx
test   $0x4,%al
jne    80594d8 <fchmod@plt+0xe398>
test   %edx,%edx
jne    80594f3 <fchmod@plt+0xe3b3>
test   %esi,%esi
jne    8059524 <fchmod@plt+0xe3e4>
testb  $0x2,0x30(%esp)
je     80592e4 <fchmod@plt+0xe1a4>
lea    -0xfc74(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x1c(%esp)
lea    -0xfbf4(%ebx),%eax
xor    %esi,%esi
lea    -0xfb92(%ebx),%edi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
or     (%eax,%esi,4),%ebp
mov    %edi,0xc(%esp)
movl   $0xa2,0x8(%esp)
setne  %al
movzbl %al,%eax
mov    %eax,0x18(%esp)
mov    %esi,%eax
add    $0x1,%esi
shl    $0x5,%eax
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
cmp    $0x8,%esi
jne    80593c8 <fchmod@plt+0xe288>
test   %ebp,%ebp
jne    8059468 <fchmod@plt+0xe328>
mov    $0x160,%ecx
jmp    805942b <fchmod@plt+0xe2eb>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmp    $0x2c0,%ecx
je     8059491 <fchmod@plt+0xe351>
mov    %ecx,%eax
shr    $0x5,%eax
mov    0x40(%esp,%eax,4),%eax
shr    %cl,%eax
test   $0x1,%al
je     8059420 <fchmod@plt+0xe2e0>
lea    -0xfbb8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edi,0xc(%esp)
movl   $0xa8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfca5(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x40(%esp),%eax
and    $0xfffffffe,%eax
cmp    $0xfffffffe,%eax
jne    8059316 <fchmod@plt+0xe1d6>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfcf3(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x34(%esp),%eax
and    $0x3,%eax
cmp    $0x3,%eax
jne    805938c <fchmod@plt+0xe24c>
testb  $0x1,0x62(%esp)
je     805938c <fchmod@plt+0xe24c>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd14(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
test   %esi,%esi
je     805939c <fchmod@plt+0xe25c>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd05(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805939c <fchmod@plt+0xe25c>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd62(%ebx),%eax
jmp    8059532 <fchmod@plt+0xe3f2>
test   $0x20,%dl
je     8059573 <fchmod@plt+0xe433>
mov    $0x1,%esi
xor    %edx,%edx
jmp    8059384 <fchmod@plt+0xe244>
mov    0x64(%esp),%esi
mov    %esi,%ecx
shr    $0x10,%ecx
or     %esi,%ecx
and    $0x1,%ecx
jne    80595b0 <fchmod@plt+0xe470>
mov    0x60(%esp),%ecx
test   $0x2,%cl
jne    80595b0 <fchmod@plt+0xe470>
and    $0x10000,%ecx
jne    80595c3 <fchmod@plt+0xe483>
and    $0x4,%dh
je     8059380 <fchmod@plt+0xe240>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd29(%ebx),%eax
jmp    805935a <fchmod@plt+0xe21a>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xfd3b(%ebx),%eax
jmp    805935a <fchmod@plt+0xe21a>
xor    %esi,%esi
mov    $0x1,%edx
jmp    8059384 <fchmod@plt+0xe244>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x405c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x296d5,%ebx
mov    0x4070(%esp),%eax
mov    %gs:0x14,%edx
mov    %edx,0x404c(%esp)
xor    %edx,%edx
mov    %eax,(%esp)
mov    %eax,0x3c(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%edi
je     80597ce <fchmod@plt+0xe68e>
lea    -0xfb7c(%ebx),%eax
mov    %eax,0x28(%esp)
lea    -0xdf74(%ebx),%eax
movl   $0x0,0x34(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x30(%esp)
jmp    8059680 <fchmod@plt+0xe540>
lea    -0xe0c8(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xdd14(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xe09c(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x5d,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     80597c0 <fchmod@plt+0xe680>
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,%esi
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     805966e <fchmod@plt+0xe52e>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
lea    0xd(%esi),%eax
movl   $0x10,0x8(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,0x2c(%esp)
mov    0x48(%esp),%eax
cmpb   $0x0,(%eax)
jne    8059638 <fchmod@plt+0xe4f8>
mov    %edi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
cmpb   $0x21,(%eax)
mov    %eax,%esi
je     8059830 <fchmod@plt+0xe6f0>
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
lea    -0x1(%eax),%edx
cmp    $0xf,%edx
ja     80597f0 <fchmod@plt+0xe6b0>
cmp    $0x2,%eax
mov    %eax,%edx
je     805971e <fchmod@plt+0xe5de>
cmp    $0x3,%eax
je     8059710 <fchmod@plt+0xe5d0>
cmp    $0x1,%eax
je     805972c <fchmod@plt+0xe5ec>
movzbl 0x3(%esi),%ecx
movzwl -0xdf14(%ebx,%ecx,2),%ecx
add    %ecx,%edx
movzbl 0x2(%esi),%ecx
movzwl -0xdf14(%ebx,%ecx,2),%ecx
add    %ecx,%edx
movzbl 0x1(%esi),%ecx
movzwl -0xdf14(%ebx,%ecx,2),%ecx
add    %ecx,%edx
movzbl (%esi),%ecx
movzbl -0x1(%esi,%eax,1),%eax
movzbl %cl,%ebp
movzwl -0xdf14(%ebx,%ebp,2),%ebp
add    %ebp,%edx
movzwl -0xdf14(%ebx,%eax,2),%ebp
add    %edx,%ebp
cmp    $0x67f,%ebp
ja     80597f0 <fchmod@plt+0xe6b0>
mov    -0x37b4(%ebx,%ebp,8),%eax
test   %eax,%eax
je     80597f0 <fchmod@plt+0xe6b0>
cmp    %cl,(%eax)
jne    80597f0 <fchmod@plt+0xe6b0>
add    $0x1,%eax
mov    %eax,0x4(%esp)
lea    0x1(%esi),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    80597f0 <fchmod@plt+0xe6b0>
mov    0x24(%esp),%edx
mov    0x2c(%esp),%ecx
movzwl -0x37b0(%ebx,%ebp,8),%eax
cmp    $0x3ff,%edx
mov    %ecx,0x104c(%esp,%edx,8)
mov    %eax,0x1050(%esp,%edx,8)
mov    %edi,(%esp)
adcl   $0x0,0x24(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8059680 <fchmod@plt+0xe540>
nop
mov    0x24(%esp),%eax
or     0x34(%esp),%eax
jne    8059858 <fchmod@plt+0xe718>
xor    %eax,%eax
mov    0x404c(%esp),%edx
xor    %gs:0x14,%edx
jne    8059b37 <fchmod@plt+0xe9f7>
add    $0x405c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x30(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x72,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
lea    -0xdd14(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xe09c(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805966e <fchmod@plt+0xe52e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    0x2c(%esp),%edx
cmp    $0x3ff,%eax
adcl   $0x0,0x34(%esp)
cmpb   $0x0,0x1(%esi)
mov    %edx,0x4c(%esp,%eax,4)
je     805966e <fchmod@plt+0xe52e>
add    $0x1,%esi
jmp    80596dd <fchmod@plt+0xe59d>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
mov    %eax,%esi
mov    0x3c(%esp),%eax
test   %esi,%esi
mov    %eax,(%esp)
je     8059ad0 <fchmod@plt+0xe990>
call   8067d60 <fchmod@plt+0x1cc20>
movl   $0x80902,0x4(%esp)
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     8059b15 <fchmod@plt+0xe9d5>
mov    0x24(%esp),%edx
test   %edx,%edx
je     8059980 <fchmod@plt+0xe840>
lea    -0xe09c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x28(%esp)
lea    -0xe038(%ebx),%eax
mov    %eax,0x30(%esp)
lea    -0xdff8(%ebx),%eax
lea    0x1050(%esp),%edi
lea    -0xdd14(%ebx),%ebp
mov    %eax,0x38(%esp)
jmp    80598e8 <fchmod@plt+0xe7a8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0x8,%edi
cmp    0x24(%esp),%esi
je     8059980 <fchmod@plt+0xe840>
mov    -0x4(%edi),%eax
mov    (%edi),%ecx
mov    %ebp,0xc(%esp)
movl   $0x90,0x8(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    -0x4(%edi),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x40084504,0x4(%esp)
mov    %eax,(%esp)
call   804a8b0 <ioctl@plt>
test   %eax,%eax
jns    80598d8 <fchmod@plt+0xe798>
mov    0x38(%esp),%eax
add    $0x1,%esi
add    $0x8,%edi
mov    %ebp,0xc(%esp)
movl   $0x92,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
cmp    0x24(%esp),%esi
jne    80598e8 <fchmod@plt+0xe7a8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
test   %eax,%eax
jne    8059999 <fchmod@plt+0xe859>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804b0a0 <close@plt>
jmp    80597ce <fchmod@plt+0xe68e>
lea    -0xfb6e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8059988 <fchmod@plt+0xe848>
lea    -0xfb68(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     8059988 <fchmod@plt+0xe848>
lea    0x48(%esp),%esi
xor    %edi,%edi
lea    0x304c(%esp),%edx
mov    %esi,(%esp)
lea    0x4c(%esp),%ebp
mov    %eax,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %edx,0x48(%esp)
call   8063170 <fchmod@plt+0x18030>
lea    -0xfb5a(%ebx),%edx
mov    %edx,0x24(%esp)
mov    %esi,%edx
mov    %edi,%esi
mov    %edx,%edi
xchg   %ax,%ax
mov    0x0(%ebp,%esi,4),%edx
add    $0x1,%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x8(%esp)
call   8063230 <fchmod@plt+0x180f0>
cmp    0x34(%esp),%esi
jne    8059a18 <fchmod@plt+0xe8d8>
mov    0x30(%esp),%ebp
lea    -0xdfd4(%ebx),%eax
lea    -0xdf2e(%ebx),%edi
lea    -0xe09c(%ebx),%esi
mov    %eax,0x10(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0xc(%esp)
movl   $0x3e,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x38(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80658d0 <fchmod@plt+0x1a790>
test   %eax,%eax
jns    8059988 <fchmod@plt+0xe848>
neg    %eax
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
mov    %edi,0xc(%esp)
movl   $0x41,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0xdfa0(%ebx),%eax
mov    %eax,0x10(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8059988 <fchmod@plt+0xe848>
call   8065440 <fchmod@plt+0x1a300>
movl   $0x83,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0xe078(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xdd14(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xe09c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    $0x1,%eax
jmp    80597d0 <fchmod@plt+0xe690>
lea    -0xe058(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xdd14(%ebx),%eax
mov    %esi,0x14(%esp)
mov    %eax,0xc(%esp)
movl   $0x89,0x8(%esp)
jmp    8059af5 <fchmod@plt+0xe9b5>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2916a,%ebx
sub    $0x170,%esp
mov    %eax,(%esp)
lea    0x6c(%esp),%esi
mov    %gs:0x14,%edx
mov    %edx,0x16c(%esp)
xor    %edx,%edx
call   8065440 <fchmod@plt+0x1a300>
mov    %esi,(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdd03(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xd449(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8059be5 <fchmod@plt+0xeaa5>
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
call   804a970 <fread@plt>
cmp    $0x1,%eax
je     8059c08 <fchmod@plt+0xeac8>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    0x16c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    8059c16 <fchmod@plt+0xead6>
add    $0x170,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x3a(%esp),%edi
mov    %edi,%eax
shr    $0x7,%al
mov    %eax,%edi
jmp    8059bdd <fchmod@plt+0xea9d>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x19,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x2ec,%esp
mov    0x30c(%esp),%eax
lea    0x78(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x29075,%ebx
mov    0x300(%esp),%ebp
mov    %eax,0x3c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x2dc(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x11f7b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     8059cc0 <fchmod@plt+0xeb80>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
cmp    $0x1,%eax
je     8059cd0 <fchmod@plt+0xeb90>
movl   $0x0,0x38(%esp)
mov    0x2dc(%esp),%edx
xor    %gs:0x14,%edx
mov    0x38(%esp),%eax
jne    805ab18 <fchmod@plt+0xf9d8>
add    $0x2ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x1,0x38(%esp)
jmp    8059c9c <fchmod@plt+0xeb5c>
lea    0x0(%esi),%esi
lea    -0xdcf6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%esi
je     8059cc0 <fchmod@plt+0xeb80>
lea    -0xdcee(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     8059cc0 <fchmod@plt+0xeb80>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
mov    %eax,0x38(%esp)
jne    8059c94 <fchmod@plt+0xeb54>
mov    %ebp,(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     805a7a8 <fchmod@plt+0xf668>
mov    $0x5,%ecx
mov    %eax,%edi
lea    -0xf3f3(%ebx),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0xdcf9(%ebx),%esi
mov    %esi,0x44(%esp)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8059d6f <fchmod@plt+0xec2f>
lea    -0xf28b(%ebx),%esi
mov    %eax,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0xfa40(%ebx),%esi
setb   %al
seta   %dl
cmp    %al,%dl
lea    -0xf1e8(%ebx),%eax
cmovne %esi,%eax
mov    %eax,0x44(%esp)
lea    -0xdce7(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     8059da5 <fchmod@plt+0xec65>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
test   %eax,%eax
je     805a500 <fchmod@plt+0xf3c0>
movzbl 0x82(%esp),%eax
test   %al,%al
jne    805a5d7 <fchmod@plt+0xf497>
mov    %ebp,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%edi
je     8059c9c <fchmod@plt+0xeb5c>
mov    %eax,(%esp)
lea    -0xdc7b(%ebx),%esi
call   8066410 <fchmod@plt+0x1b2d0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063940 <fchmod@plt+0x18800>
test   %al,%al
je     805a731 <fchmod@plt+0xf5f1>
movl   $0x1,0x78(%esp)
mov    %edi,0x84(%esp)
lea    -0xdc77(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     805a8bd <fchmod@plt+0xf77d>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
test   %eax,%eax
jle    8059e83 <fchmod@plt+0xed43>
mov    %eax,0x14(%esp)
lea    -0xdc6c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xa8(%esp),%eax
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xc01d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %eax,0xb8(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %eax,%edi
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
lea    0x68(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x64(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x60(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xdc68(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x3,%eax
jne    805a1b4 <fchmod@plt+0xf074>
lea    -0xdc5a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
movl   $0x0,0x40(%esp)
test   %eax,%eax
je     8059f10 <fchmod@plt+0xedd0>
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    %eax,0x40(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x6c(%esp)
mov    0x64(%esp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x60(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xdc53(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x6c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x48(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%edx
mov    0x68(%esp),%eax
test   %eax,%eax
jne    8059f73 <fchmod@plt+0xee33>
mov    0x84(%esp),%eax
mov    %edx,0x4c(%esp)
call   8059b40 <fchmod@plt+0xea00>
mov    0x4c(%esp),%edx
test   %al,%al
je     8059f93 <fchmod@plt+0xee53>
mov    0x68(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xdc4c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%edx
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    805a760 <fchmod@plt+0xf620>
test   %edx,%edx
jne    8059fab <fchmod@plt+0xee6b>
movb   $0x0,0x98(%esp)
lea    -0xb55e(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,0x4c(%esp)
je     805a1a8 <fchmod@plt+0xf068>
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdc44(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xdc(%esp),%eax
mov    %eax,%esi
mov    %eax,(%esp)
mov    %eax,0x50(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     805a1a8 <fchmod@plt+0xf068>
mov    %eax,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     805a2cc <fchmod@plt+0xf18c>
lea    -0xdc3b(%ebx),%edx
mov    %edx,0x54(%esp)
mov    %ebp,0x5c(%esp)
cmpb   $0x2e,0x13(%eax)
je     805a2b8 <fchmod@plt+0xf178>
lea    0x13(%eax),%ebp
lea    0x70(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804b040 <strtol@plt>
mov    %eax,%edi
mov    0x70(%esp),%eax
cmpb   $0x0,(%eax)
jne    805a2b8 <fchmod@plt+0xf178>
test   %edi,%edi
jle    805a2b8 <fchmod@plt+0xf178>
mov    0x50(%esp),%eax
mov    %ebp,0x18(%esp)
lea    0x1dc(%esp),%ebp
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0x100,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   805f770 <fchmod@plt+0x14630>
test   %eax,%eax
js     805a2b8 <fchmod@plt+0xf178>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x58(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    0x58(%esp),%ecx
mov    0x74(%esp),%ebp
mov    %ecx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804afa0 <strncmp@plt>
test   %eax,%eax
jne    805a2ab <fchmod@plt+0xf16b>
mov    %ebp,%edx
mov    0x5c(%esp),%ebp
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
lea    0x88(%esp),%eax
mov    %eax,0x6c(%esp)
lea    -0xdc50(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%esi
mov    0x68(%esp),%eax
test   %eax,%eax
jne    805a16f <fchmod@plt+0xf02f>
mov    0x84(%esp),%eax
call   8059b40 <fchmod@plt+0xea00>
test   %al,%al
je     805a18f <fchmod@plt+0xf04f>
mov    0x68(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xdc4c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%esi
mov    0x40(%esp),%eax
test   %eax,%eax
jne    805a8e3 <fchmod@plt+0xf7a3>
test   %esi,%esi
jne    805a1a8 <fchmod@plt+0xf068>
movb   $0x0,0x98(%esp)
nop
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
cmpl   $0x1,0x78(%esp)
jne    805a2e0 <fchmod@plt+0xf1a0>
cmpb   $0x0,0xa8(%esp)
jne    805a7b7 <fchmod@plt+0xf677>
mov    0xb8(%esp),%eax
test   %eax,%eax
je     805a21e <fchmod@plt+0xf0de>
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbce(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jle    805a899 <fchmod@plt+0xf759>
cmpb   $0x0,0x98(%esp)
jne    805a828 <fchmod@plt+0xf6e8>
cmpb   $0x0,0x88(%esp)
je     8059c9c <fchmod@plt+0xeb5c>
lea    0x88(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbce(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     8059c9c <fchmod@plt+0xeb5c>
mov    %esi,0xc(%esp)
lea    -0xdbf3(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    8059c9c <fchmod@plt+0xeb5c>
mov    %ebp,(%esp)
call   804a690 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    805a040 <fchmod@plt+0xef00>
mov    0x5c(%esp),%ebp
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
jmp    805a1a8 <fchmod@plt+0xf068>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xdbe2(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xdbd4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
je     805a90c <fchmod@plt+0xf7cc>
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x100,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1dc(%esp),%eax
mov    %eax,%esi
mov    %eax,(%esp)
mov    %eax,0x4c(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,0x74(%esp)
je     805a90c <fchmod@plt+0xf7cc>
lea    0x1(%eax),%esi
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,0x74(%esp)
je     805a90c <fchmod@plt+0xf7cc>
movb   $0x0,(%eax)
mov    0x74(%esp),%edi
movl   $0x2e,0x4(%esp)
lea    0x1(%edi),%eax
mov    %eax,(%esp)
mov    %eax,0x48(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,0x74(%esp)
je     805a90c <fchmod@plt+0xf7cc>
movb   $0x0,(%eax)
mov    0x74(%esp),%eax
mov    %esi,0x74(%esp)
mov    %eax,0x40(%esp)
mov    %esi,%eax
jmp    805a3af <fchmod@plt+0xf26f>
lea    0x0(%esi),%esi
movb   $0x75,(%eax)
mov    0x74(%esp),%eax
movl   $0x2e,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,0x74(%esp)
jne    805a3a8 <fchmod@plt+0xf268>
lea    0xbc(%esp),%eax
mov    %eax,0x50(%esp)
mov    %eax,0x74(%esp)
lea    -0xc0fd(%ebx),%eax
mov    %esi,0xc(%esp)
lea    0x74(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
call   80632b0 <fchmod@plt+0x18170>
cmpb   $0x31,0x1(%edi)
je     805a798 <fchmod@plt+0xf658>
mov    0x48(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
lea    -0xc607(%ebx),%eax
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    0x40(%esp),%edx
cmpb   $0x30,0x1(%edx)
je     805a789 <fchmod@plt+0xf649>
mov    0x40(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
add    $0x1,%eax
mov    %eax,0xc(%esp)
lea    -0xb716(%ebx),%eax
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
test   %eax,%eax
je     805a90c <fchmod@plt+0xf7cc>
cmpb   $0x0,0x98(%esp)
movl   $0x2,0x78(%esp)
jne    805aa22 <fchmod@plt+0xf8e2>
cmpb   $0x0,0x88(%esp)
je     8059c9c <fchmod@plt+0xeb5c>
mov    0x50(%esp),%eax
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xdbd0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     8059c9c <fchmod@plt+0xeb5c>
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
jmp    805a28b <fchmod@plt+0xf14b>
lea    0x0(%esi),%esi
lea    -0xdc35(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     8059db5 <fchmod@plt+0xec75>
lea    0x74(%esp),%edx
mov    %edx,0x1c(%esp)
lea    0x70(%esp),%edx
mov    %edx,0x18(%esp)
lea    0x6c(%esp),%edx
mov    %edx,0x14(%esp)
lea    0x68(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x64(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x60(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xdcd6(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x6,%eax
jne    8059db5 <fchmod@plt+0xec75>
mov    0x70(%esp),%edi
mov    0x60(%esp),%esi
mov    0x64(%esp),%ecx
mov    0x68(%esp),%edx
mov    %edi,0x48(%esp)
mov    0x74(%esp),%edi
mov    0x6c(%esp),%eax
mov    %edi,0x4c(%esp)
lea    (%ecx,%esi,1),%edi
add    %edx,%edi
add    %eax,%edi
add    0x48(%esp),%edi
add    0x4c(%esp),%edi
mov    %eax,0x40(%esp)
test   %edi,%edi
je     8059db5 <fchmod@plt+0xec75>
mov    %esi,%eax
mov    %al,0x7c(%esp)
movzbl 0x40(%esp),%eax
mov    %cl,0x7d(%esp)
mov    %dl,0x7e(%esp)
movb   $0x1,0x82(%esp)
mov    %al,0x7f(%esp)
movzbl 0x48(%esp),%eax
mov    %al,0x80(%esp)
movzbl 0x4c(%esp),%eax
mov    %al,0x81(%esp)
movzbl 0x81(%esp),%eax
lea    0xdc(%esp),%edi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x2c(%esp)
movzbl 0x80(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x28(%esp)
movzbl 0x7f(%esp),%eax
mov    %eax,0x24(%esp)
movzbl 0x7e(%esp),%eax
mov    %eax,0x20(%esp)
movzbl 0x7d(%esp),%eax
mov    %eax,0x1c(%esp)
movzbl 0x7c(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xdcc4(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
movzbl 0x3c(%esp),%esi
lea    -0xdca8(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
mov    %esi,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
cmpb   $0x0,0x82(%esp)
je     8059db5 <fchmod@plt+0xec75>
lea    -0xdb94(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x7c(%esp),%eax
movl   $0x3,0x8(%esp)
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
je     8059db5 <fchmod@plt+0xec75>
movzbl 0x81(%esp),%eax
lea    0x1dc(%esp),%edi
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,0x28(%esp)
movzbl 0x80(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
movzbl 0x7f(%esp),%eax
mov    %eax,0x20(%esp)
movzbl 0x7e(%esp),%eax
mov    %eax,0x1c(%esp)
movzbl 0x7d(%esp),%eax
mov    %eax,0x18(%esp)
movzbl 0x7c(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xdc98(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8058a50 <fchmod@plt+0xd910>
jmp    8059db5 <fchmod@plt+0xec75>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x84(%esp)
jne    8059df8 <fchmod@plt+0xecb8>
jmp    8059c9c <fchmod@plt+0xeb5c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xdc48(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%edx
jmp    8059f9f <fchmod@plt+0xee5f>
cmpb   $0x0,0x2(%edx)
je     805a46f <fchmod@plt+0xf32f>
jmp    805a442 <fchmod@plt+0xf302>
cmpb   $0x0,0x2(%edi)
je     805a434 <fchmod@plt+0xf2f4>
jmp    805a40a <fchmod@plt+0xf2ca>
nop
lea    -0xfa40(%ebx),%eax
mov    %eax,0x44(%esp)
jmp    8059d6f <fchmod@plt+0xec2f>
lea    0xa8(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbce(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     805a1cd <fchmod@plt+0xf08d>
lea    -0xdc2d(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805a1cd <fchmod@plt+0xf08d>
lea    0x98(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbce(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     805a22c <fchmod@plt+0xf0ec>
lea    -0xdc04(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805a22c <fchmod@plt+0xf0ec>
lea    -0xdc19(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805a21e <fchmod@plt+0xf0de>
lea    -0xdc72(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
jne    8059e12 <fchmod@plt+0xecd2>
jmp    8059e83 <fchmod@plt+0xed43>
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xdc48(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8063230 <fchmod@plt+0x180f0>
mov    %eax,%esi
jmp    805a19b <fchmod@plt+0xf05b>
lea    -0xdbba(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
je     8059c9c <fchmod@plt+0xeb5c>
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
lea    0x74(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xdbc9(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x1,%eax
jne    8059c9c <fchmod@plt+0xeb5c>
mov    0x74(%esp),%eax
test   %eax,%eax
jne    805a9e8 <fchmod@plt+0xf8a8>
cmpb   $0x0,0x98(%esp)
movl   $0x3,0x78(%esp)
jne    805aa9c <fchmod@plt+0xf95c>
cmpb   $0x0,0x88(%esp)
je     8059c9c <fchmod@plt+0xeb5c>
lea    0xcc(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbd0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     8059c9c <fchmod@plt+0xeb5c>
jmp    805a287 <fchmod@plt+0xf147>
xchg   %ax,%ax
mov    %eax,0x14(%esp)
lea    -0xdbbe(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xcc(%esp),%eax
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
jmp    805a965 <fchmod@plt+0xf825>
mov    0x50(%esp),%eax
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xdbd0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     805a48d <fchmod@plt+0xf34d>
mov    0x4c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xdc04(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805a48d <fchmod@plt+0xf34d>
lea    0xcc(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
lea    0x1dc(%esp),%esi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xdbd0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
cmp    $0xf,%eax
jg     805a97b <fchmod@plt+0xf83b>
lea    -0xdc04(%ebx),%eax
mov    %eax,0x8(%esp)
movzbl 0x3c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805a97b <fchmod@plt+0xf83b>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x28186,%ebx
test   %eax,%eax
je     805ab6c <fchmod@plt+0xfa2c>
mov    %edx,%ebp
mov    %eax,%esi
jmp    805ab60 <fchmod@plt+0xfa20>
xchg   %ax,%ax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    805ab6c <fchmod@plt+0xfa2c>
mov    %esi,(%esp)
mov    %esi,%edi
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
je     805ab6c <fchmod@plt+0xfa2c>
mov    %eax,%esi
mov    %esi,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
jne    805ab40 <fchmod@plt+0xfa00>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x34,%esp
lea    0x48(%esp),%eax
mov    0x40(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x28122,%ebx
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   804ac40 <__vasprintf_chk@plt>
test   %eax,%eax
js     805ac18 <fchmod@plt+0xfad8>
mov    (%esi),%edx
test   %edx,%edx
je     805ac20 <fchmod@plt+0xfae0>
mov    0x28(%esp),%eax
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xdad0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   804a690 <free@plt>
mov    0x1c(%esp),%eax
test   %eax,%eax
js     805ac18 <fchmod@plt+0xfad8>
mov    (%esi),%edx
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esp),%edx
mov    0x1c(%esp),%eax
mov    %edx,(%esi)
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x28(%esp),%edx
mov    %edx,(%esi)
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %edx,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2807b,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   8065600 <fchmod@plt+0x1a4c0>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
cmp    $0xff,%eax
jbe    805ac98 <fchmod@plt+0xfb58>
mov    %eax,%edx
movzwl %ax,%eax
mov    %eax,0x8(%esp)
shr    $0x10,%edx
lea    -0xdb89(%ebx),%eax
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   805ab80 <fchmod@plt+0xfa40>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
lea    -0xdb90(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805ab80 <fchmod@plt+0xfa40>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x25c,%esp
mov    0x270(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x27fde,%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,%esi
mov    %eax,0x18(%esp)
mov    0x27c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x24c(%esp)
xor    %eax,%eax
lea    -0xdb72(%ebx),%eax
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%esi
je     805af18 <fchmod@plt+0xfdd8>
lea    -0xdb6e(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xdb62(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%ebp
je     805ad92 <fchmod@plt+0xfc52>
lea    -0xdb5d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %ebp,(%esp)
mov    %eax,%edi
lea    -0xdb56(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
lea    -0xdb51(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %edi,%edi
jne    805aed8 <fchmod@plt+0xfd98>
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xdb37(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
lea    -0xdb72(%ebx),%edx
mov    %esi,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    0x34(%esp),%esi
test   %esi,%esi
je     805b505 <fchmod@plt+0x103c5>
movzbl (%esi),%eax
xor    %edx,%edx
mov    %esi,%ebp
test   %al,%al
jne    805ae18 <fchmod@plt+0xfcd8>
jmp    805b4fc <fchmod@plt+0x103bc>
lea    0x0(%esi),%esi
mov    %eax,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
jbe    805ae22 <fchmod@plt+0xfce2>
cmp    $0x2d,%al
je     805ae22 <fchmod@plt+0xfce2>
test   %edx,%edx
je     805ae06 <fchmod@plt+0xfcc6>
cmpb   $0x5f,0x4b(%esp,%edx,1)
je     805ae06 <fchmod@plt+0xfcc6>
movb   $0x5f,0x4c(%esp,%edx,1)
add    $0x1,%edx
add    $0x1,%ebp
movzbl 0x0(%ebp),%eax
test   %al,%al
je     805ae34 <fchmod@plt+0xfcf4>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%eax),%edi
mov    %edi,%ecx
cmp    $0x9,%cl
ja     805ade0 <fchmod@plt+0xfca0>
add    $0x1,%ebp
mov    %al,0x4c(%esp,%edx,1)
movzbl 0x0(%ebp),%eax
add    $0x1,%edx
test   %al,%al
jne    805ae18 <fchmod@plt+0xfcd8>
test   %edx,%edx
je     805b4fc <fchmod@plt+0x103bc>
lea    -0x1(%edx),%eax
cmpb   $0x5f,0x4c(%esp,%eax,1)
jne    805b566 <fchmod@plt+0x10426>
lea    0x4c(%esp),%edi
jmp    805ae5c <fchmod@plt+0xfd1c>
cmpb   $0x5f,-0x1(%edi,%eax,1)
lea    -0x1(%eax),%edx
jne    805ae62 <fchmod@plt+0xfd22>
mov    %edx,%eax
test   %eax,%eax
jne    805ae50 <fchmod@plt+0xfd10>
xor    %eax,%eax
movb   $0x0,0x4c(%esp,%eax,1)
movzbl 0x20(%esp),%ebp
lea    -0xd951(%ebx),%eax
mov    %esi,0xc(%esp)
mov    0x18(%esp),%esi
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80587d0 <fchmod@plt+0xd690>
lea    -0xd949(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
mov    0x24c(%esp),%esi
xor    %gs:0x14,%esi
jne    805b75e <fchmod@plt+0x1061e>
add    $0x25c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     805ad92 <fchmod@plt+0xfc52>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     805ad92 <fchmod@plt+0xfc52>
mov    %eax,0x10(%esp)
lea    -0xdb49(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805adb4 <fchmod@plt+0xfc74>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    -0xdb62(%ebx),%esi
movb   $0x0,0x24(%esp)
mov    %esi,0x1c(%esp)
test   %eax,%eax
mov    %eax,%ebp
je     805b08d <fchmod@plt+0xff4d>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
je     805b070 <fchmod@plt+0xff30>
mov    $0xa,%ecx
mov    %eax,%esi
lea    -0xdb30(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805b0c8 <fchmod@plt+0xff88>
mov    0x1c(%esp),%edi
mov    $0x5,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805b1d0 <fchmod@plt+0x10090>
lea    -0xd9d8(%ebx),%edi
mov    $0x6,%ecx
mov    %edi,0x28(%esp)
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805b210 <fchmod@plt+0x100d0>
movzbl (%eax),%esi
cmp    $0x75,%esi
mov    %esi,0x28(%esp)
jne    805b138 <fchmod@plt+0xfff8>
cmpb   $0x73,0x1(%eax)
je     805b270 <fchmod@plt+0x10130>
mov    $0x6,%ecx
mov    %eax,%esi
lea    -0xfb6e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     805b348 <fchmod@plt+0x10208>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd99e(%ebx),%edi
mov    $0x9,%ecx
mov    %eax,%esi
mov    %edi,0x2c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     805b4c8 <fchmod@plt+0x10388>
lea    -0xd989(%ebx),%edi
mov    $0x5,%ecx
mov    %eax,%esi
mov    %edi,0x2c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     805b30d <fchmod@plt+0x101cd>
cmpl   $0x78,0x28(%esp)
jne    805b447 <fchmod@plt+0x10307>
cmpb   $0x65,0x1(%eax)
jne    805b02d <fchmod@plt+0xfeed>
cmpb   $0x6e,0x2(%eax)
je     805b657 <fchmod@plt+0x10517>
mov    $0x7,%ecx
mov    %eax,%esi
lea    -0xd971(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805b070 <fchmod@plt+0xff30>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd96a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    %ebp,%eax
lea    -0xd971(%ebx),%edx
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
nop
mov    %ebp,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%ebp
jne    805af38 <fchmod@plt+0xfdf8>
cmpb   $0x0,0x24(%esp)
jne    805adc1 <fchmod@plt+0xfc81>
mov    0x18(%esp),%eax
lea    -0x10f2d(%ebx),%edi
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805adc1 <fchmod@plt+0xfc81>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    $0x1,%eax
jmp    805aeb2 <fchmod@plt+0xfd72>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
test   %edx,%edx
jne    805b070 <fchmod@plt+0xff30>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,%esi
lea    -0xdb26(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     805b50f <fchmod@plt+0x103cf>
movsbl 0x3(%esi),%edi
lea    -0xdb22(%ebx),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     805b50f <fchmod@plt+0x103cf>
lea    -0xdb1e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805b070 <fchmod@plt+0xff30>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x6,%ecx
mov    %eax,%esi
lea    -0xfb6e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     805b348 <fchmod@plt+0x10208>
cmpl   $0x70,0x28(%esp)
jne    805afc8 <fchmod@plt+0xfe88>
cmpb   $0x63,0x1(%eax)
jne    805afc8 <fchmod@plt+0xfe88>
cmpb   $0x69,0x2(%eax)
jne    805afc8 <fchmod@plt+0xfe88>
cmpb   $0x0,0x3(%eax)
jne    805afc8 <fchmod@plt+0xfe88>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd963(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
lea    -0xdc7b(%ebx),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
mov    %ebp,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%ebp
jne    805af38 <fchmod@plt+0xfdf8>
jmp    805b082 <fchmod@plt+0xff42>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     805b1f1 <fchmod@plt+0x100b1>
mov    $0xc,%ecx
mov    %eax,%esi
lea    -0xdb6e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805b390 <fchmod@plt+0x10250>
mov    %ebp,(%esp)
movb   $0x1,0x24(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%ebp
jne    805af38 <fchmod@plt+0xfdf8>
jmp    805b082 <fchmod@plt+0xff42>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
lea    0x48(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x44(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xd9d2(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x2,%eax
jne    805b440 <fchmod@plt+0x10300>
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xd9c8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x28(%esp),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
jmp    805b1f1 <fchmod@plt+0x100b1>
cmpb   $0x62,0x2(%eax)
jne    805afa3 <fchmod@plt+0xfe63>
cmpb   $0x0,0x3(%eax)
jne    805afa3 <fchmod@plt+0xfe63>
mov    %ebp,(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     805b1f1 <fchmod@plt+0x100b1>
mov    $0xe,%ecx
mov    %eax,%esi
lea    -0xdbe2(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805b2ba <fchmod@plt+0x1017a>
mov    $0xb,%ecx
mov    %eax,%esi
lea    -0xd9bb(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805b1f1 <fchmod@plt+0x100b1>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x2d,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     805b1f1 <fchmod@plt+0x100b1>
lea    -0xdbd4(%ebx),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
add    $0x1,%esi
mov    %esi,0x8(%esp)
mov    %eax,%ebp
lea    -0xd9b0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805b1f1 <fchmod@plt+0x100b1>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd984(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x2c(%esp),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
jmp    805b070 <fchmod@plt+0xff30>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8065600 <fchmod@plt+0x1a4c0>
mov    %eax,0x8(%esp)
lea    -0xd9a7(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
lea    -0xfb6e(%ebx),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
mov    %ebp,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%ebp
jne    805af38 <fchmod@plt+0xfdf8>
jmp    805b082 <fchmod@plt+0xff42>
lea    -0xdb18(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%esi
je     805b571 <fchmod@plt+0x10431>
mov    0x1c(%esp),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %esi,0x8(%esp)
mov    %eax,%ebp
lea    -0xdb0c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805b1f1 <fchmod@plt+0x100b1>
lea    -0xda9c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     805b854 <fchmod@plt+0x10714>
mov    %ebp,(%esp)
mov    %ebp,%esi
call   80652c0 <fchmod@plt+0x1a180>
lea    -0xcdd3(%ebx),%edi
movl   $0x0,0x48(%esp)
mov    %eax,0x24(%esp)
jmp    805b42c <fchmod@plt+0x102ec>
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
jne    805b763 <fchmod@plt+0x10623>
mov    %esi,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%esi
jne    805b410 <fchmod@plt+0x102d0>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    805b1f1 <fchmod@plt+0x100b1>
mov    $0x7,%ecx
mov    %eax,%esi
lea    -0xd971(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     805b03e <fchmod@plt+0xfefe>
cmpl   $0x73,0x28(%esp)
jne    805b070 <fchmod@plt+0xff30>
cmpb   $0x63,0x1(%eax)
jne    805b070 <fchmod@plt+0xff30>
cmpb   $0x6d,0x2(%eax)
jne    805b070 <fchmod@plt+0xff30>
cmpb   $0x0,0x3(%eax)
jne    805b070 <fchmod@plt+0xff30>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd95c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    %ebp,%eax
lea    -0xd955(%ebx),%edx
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
jmp    805b070 <fchmod@plt+0xff30>
nop
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd995(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x2c(%esp),%edx
mov    %ebp,%eax
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
jmp    805b1f1 <fchmod@plt+0x100b1>
lea    0x4c(%esp),%edi
jmp    805ae60 <fchmod@plt+0xfd20>
mov    $0x1,%eax
jmp    805aeb2 <fchmod@plt+0xfd72>
lea    -0xfa2a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     805b070 <fchmod@plt+0xff30>
movsbl 0x2(%esi),%esi
lea    -0xdb22(%ebx),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     805b070 <fchmod@plt+0xff30>
lea    -0xdb1d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805b070 <fchmod@plt+0xff30>
mov    %edx,%eax
lea    0x4c(%esp),%edi
jmp    805ae62 <fchmod@plt+0xfd22>
mov    %ebp,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,%esi
lea    -0xdafe(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     805b697 <fchmod@plt+0x10557>
mov    %ebp,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %ebp,(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,%esi
lea    -0xdaf6(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
je     805b440 <fchmod@plt+0x10300>
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0xdaea(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,%esi
je     805b440 <fchmod@plt+0x10300>
lea    -0xdadd(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edi
je     805b757 <fchmod@plt+0x10617>
lea    0x48(%esp),%edx
mov    %ebp,%eax
call   805ac30 <fchmod@plt+0xfaf0>
mov    0x48(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0xdad3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x48(%esp),%eax
test   %eax,%eax
je     805b64a <fchmod@plt+0x1050a>
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
jmp    805b1f1 <fchmod@plt+0x100b1>
cmpb   $0x0,0x3(%eax)
jne    805b02d <fchmod@plt+0xfeed>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xd97c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    %ebp,%eax
lea    -0xd975(%ebx),%edx
call   805ab20 <fchmod@plt+0xf9e0>
mov    %eax,%ebp
jmp    805b070 <fchmod@plt+0xff30>
lea    -0xdaca(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     805b3d8 <fchmod@plt+0x10298>
mov    %ebp,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %ebp,(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,%esi
lea    -0xdaf6(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
je     805b440 <fchmod@plt+0x10300>
mov    %eax,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
je     805b440 <fchmod@plt+0x10300>
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0xdabd(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,%esi
je     805b440 <fchmod@plt+0x10300>
lea    -0xdab2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edi
je     805b757 <fchmod@plt+0x10617>
lea    0x48(%esp),%edx
mov    %ebp,%eax
call   805ac30 <fchmod@plt+0xfaf0>
mov    0x48(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0xdaa6(%ebx),%eax
jmp    805b62a <fchmod@plt+0x104ea>
xor    %ebp,%ebp
jmp    805b64a <fchmod@plt+0x1050a>
call   806ed90 <fchmod@plt+0x23c50>
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,0x8(%esp)
lea    -0xda93(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,%edi
je     805b440 <fchmod@plt+0x10300>
lea    -0xda85(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805bb7a <fchmod@plt+0x10a3a>
mov    %esi,(%esp)
call   8065600 <fchmod@plt+0x1a4c0>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xda7a(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     805bb7a <fchmod@plt+0x10a3a>
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xda6b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
mov    %eax,%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
test   %esi,%esi
je     805bb7a <fchmod@plt+0x10a3a>
lea    -0xda5a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %esi,(%esp)
mov    %eax,0x24(%esp)
lea    -0xda47(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%ecx
jne    805bb10 <fchmod@plt+0x109d0>
xor    %ebp,%ebp
mov    %edi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
jmp    805b64a <fchmod@plt+0x1050a>
lea    -0xda22(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
jne    805b440 <fchmod@plt+0x10300>
lea    -0xda1d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     805b968 <fchmod@plt+0x10828>
lea    -0xda15(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %ebp,(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
je     805b440 <fchmod@plt+0x10300>
mov    %eax,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
je     805b440 <fchmod@plt+0x10300>
lea    -0xda0b(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%esi
je     805b440 <fchmod@plt+0x10300>
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
cmp    $0x24,%eax
jbe    805b440 <fchmod@plt+0x10300>
cmpb   $0x7b,(%esi)
jne    805b440 <fchmod@plt+0x10300>
cmpb   $0x7d,0x24(%esi)
jne    805b440 <fchmod@plt+0x10300>
xor    %eax,%eax
mov    $0x1,%edx
movzbl (%esi,%edx,1),%ecx
cmp    $0x2d,%cl
je     805b919 <fchmod@plt+0x107d9>
mov    %cl,0x4c(%esp,%eax,1)
add    $0x1,%eax
add    $0x1,%edx
cmp    $0x24,%edx
jne    805b909 <fchmod@plt+0x107c9>
movb   $0x0,0x4c(%esp,%eax,1)
lea    0x48(%esp),%edx
mov    %ebp,%eax
call   805ac30 <fchmod@plt+0xfaf0>
mov    0x48(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xda01(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    805b1f1 <fchmod@plt+0x100b1>
lea    -0xda15(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     805b440 <fchmod@plt+0x10300>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
lea    0x44(%esp),%edx
mov    %edx,0x14(%esp)
lea    0x40(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x3c(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x38(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xd9f5(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x4,%eax
jne    805b440 <fchmod@plt+0x10300>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805b440 <fchmod@plt+0x10300>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     805baff <fchmod@plt+0x109bf>
movb   $0x0,(%eax)
mov    %ebp,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%edi
je     805baff <fchmod@plt+0x109bf>
mov    %eax,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
mov    %eax,%edx
je     805baf7 <fchmod@plt+0x109b7>
lea    -0xda10(%ebx),%eax
mov    $0xffffffff,%esi
mov    %eax,0x28(%esp)
cmpb   $0x2e,0x13(%edx)
je     805ba9e <fchmod@plt+0x1095e>
movzbl 0x12(%edx),%eax
cmp    $0xa,%al
je     805ba4f <fchmod@plt+0x1090f>
cmp    $0x4,%al
jne    805ba9e <fchmod@plt+0x1095e>
mov    0x28(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
lea    0x13(%edx),%eax
mov    %eax,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     805ba9e <fchmod@plt+0x1095e>
mov    0x2c(%esp),%edx
lea    0x48(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
add    $0x17,%edx
mov    %edx,(%esp)
call   804ab00 <strtoul@plt>
mov    0x48(%esp),%edx
cmpb   $0x0,(%edx)
jne    805ba9e <fchmod@plt+0x1095e>
cmp    %esi,%eax
jl     805ba9c <fchmod@plt+0x1095c>
cmp    $0xffffffff,%esi
cmovne %esi,%eax
mov    %eax,%esi
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
mov    %eax,%edx
jne    805ba3d <fchmod@plt+0x108fd>
mov    %edi,(%esp)
call   804b0b0 <closedir@plt>
cmp    $0xffffffff,%esi
je     805baff <fchmod@plt+0x109bf>
mov    0x44(%esp),%edx
mov    0x38(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x40(%esp),%edx
sub    %esi,%eax
mov    %eax,0x38(%esp)
mov    %eax,0x8(%esp)
lea    -0xd9e9(%ebx),%eax
mov    %edx,0x10(%esp)
mov    0x3c(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   805ab80 <fchmod@plt+0xfa40>
jmp    805baff <fchmod@plt+0x109bf>
mov    %edi,(%esp)
call   804b0b0 <closedir@plt>
mov    %ebp,(%esp)
call   804a690 <free@plt>
mov    0x24(%esp),%ebp
jmp    805b1f1 <fchmod@plt+0x100b1>
mov    0x24(%esp),%eax
test   %eax,%eax
je     805b845 <fchmod@plt+0x10705>
lea    0x48(%esp),%edx
mov    %ebp,%eax
mov    %ecx,0x2c(%esp)
call   805ac30 <fchmod@plt+0xfaf0>
mov    0x48(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xda37(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   805ab80 <fchmod@plt+0xfa40>
mov    0x48(%esp),%eax
test   %eax,%eax
je     805b847 <fchmod@plt+0x10707>
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    805b847 <fchmod@plt+0x10707>
xor    %esi,%esi
xor    %ebp,%ebp
jmp    805b847 <fchmod@plt+0x10707>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2711b,%ebx
sub    $0x1007c,%esp
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
movl   $0x0,0x4c(%esp)
mov    %gs:0x14,%edx
mov    %edx,0x1006c(%esp)
xor    %edx,%edx
call   8065440 <fchmod@plt+0x1a300>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xd915(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     805bd80 <fchmod@plt+0x10c40>
mov    0x4c(%esp),%eax
movl   $0x80000,0x4(%esp)
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
js     805bdc0 <fchmod@plt+0x10c80>
mov    0x30(%esp),%eax
lea    0x5b(%esp),%ebp
movl   $0x10011,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a5a0 <read@plt>
cmp    $0x10011,%eax
mov    %eax,0x24(%esp)
je     805bdf8 <fchmod@plt+0x10cb8>
cmp    $0x11,%eax
jle    805bdf8 <fchmod@plt+0x10cb8>
mov    0x2c(%esp),%eax
mov    $0x7,%edi
xor    %esi,%esi
xor    %edx,%edx
mov    %edi,0x28(%esp)
mov    %ebp,0x20(%esp)
movb   $0x0,(%eax)
lea    -0xd906(%ebx),%eax
mov    %eax,0x3c(%esp)
jmp    805bc8c <fchmod@plt+0x10b4c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,0x24(%esp)
jle    805bd40 <fchmod@plt+0x10c00>
lea    0x7(%edx),%eax
cmp    $0x1fd,%eax
mov    %eax,0x28(%esp)
ja     805bda8 <fchmod@plt+0x10c68>
mov    0x20(%esp),%eax
add    %esi,%eax
movzbl (%eax),%ecx
cmp    $0x2,%cl
jbe    805bd40 <fchmod@plt+0x10c00>
add    %ecx,%esi
cmpb   $0x4,0x1(%eax)
jne    805bc70 <fchmod@plt+0x10b30>
movzbl 0x7(%eax),%ecx
mov    %edx,0x38(%esp)
mov    %ecx,0x1c(%esp)
movzbl 0x6(%eax),%ecx
mov    %ecx,0x18(%esp)
movzbl 0x5(%eax),%eax
lea    0x53(%esp),%ecx
mov    %ecx,(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
movl   $0x8,0x4(%esp)
mov    %ecx,0x34(%esp)
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
mov    0x34(%esp),%ecx
mov    0x38(%esp),%edx
cmp    $0x7,%eax
jne    805bc70 <fchmod@plt+0x10b30>
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x34(%esp)
mov    %eax,(%esp)
call   804a520 <strstr@plt>
mov    0x34(%esp),%edx
test   %eax,%eax
jne    805bc70 <fchmod@plt+0x10b30>
mov    0x2c(%esp),%eax
mov    0x53(%esp),%edi
mov    0x57(%esp),%ebp
mov    %edi,(%eax,%edx,1)
mov    %ebp,0x4(%eax,%edx,1)
mov    0x28(%esp),%edx
jmp    805bc70 <fchmod@plt+0x10b30>
nop
xor    %esi,%esi
test   %edx,%edx
jne    805bda8 <fchmod@plt+0x10c68>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,%eax
mov    0x1006c(%esp),%edi
xor    %gs:0x14,%edi
jne    805be02 <fchmod@plt+0x10cc2>
add    $0x1007c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0xd4e8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xd750(%ebx),%eax
movl   $0xad,0x4(%esp)
mov    %eax,(%esp)
call   80621c0 <fchmod@plt+0x17080>
mov    %eax,%esi
jmp    805bd52 <fchmod@plt+0x10c12>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
xor    %esi,%esi
movb   $0x3a,(%eax,%edx,1)
movb   $0x0,0x1(%eax,%edx,1)
jmp    805bd46 <fchmod@plt+0x10c06>
lea    0x0(%esi,%eiz,1),%esi
mov    0x32c(%ebx),%eax
mov    (%eax),%eax
movl   $0x2c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xd72c(%ebx),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    805bd52 <fchmod@plt+0x10c12>
mov    $0xfffffffb,%esi
jmp    805bd46 <fchmod@plt+0x10c06>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8bc,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x26e95,%ebx
mov    0x8d0(%esp),%ebp
mov    0x8dc(%esp),%eax
movb   $0x0,0x6c(%esp)
movb   $0x0,0xac(%esp)
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
movb   $0x0,0x4ac(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8ac(%esp)
xor    %eax,%eax
movb   $0x0,0x6ac(%esp)
movb   $0x0,0xec(%esp)
movb   $0x0,0x12c(%esp)
movb   $0x0,0x16c(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     805bea4 <fchmod@plt+0x10d64>
mov    %ebp,(%esp)
lea    -0xd9bb(%ebx),%edi
call   8067be0 <fchmod@plt+0x1caa0>
mov    $0xb,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805bf50 <fchmod@plt+0x10e10>
lea    -0xdbe2(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xdbd4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%esi
je     805c720 <fchmod@plt+0x115e0>
lea    -0xd8c2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %esi,(%esp)
mov    %eax,0x30(%esp)
lea    -0x13b83(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %esi,(%esp)
mov    %eax,0x34(%esp)
lea    -0xd8b1(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     805c768 <fchmod@plt+0x11628>
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
cmp    $0x8,%eax
mov    %eax,%edi
je     805c4e0 <fchmod@plt+0x113a0>
cmp    $0xe,%eax
ja     805c548 <fchmod@plt+0x11408>
mov    -0xd580(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x6ac(%esp),%eax
mov    %ebp,%esi
mov    %eax,0x4c(%esp)
mov    %eax,%edx
mov    %ebp,%eax
call   805bb90 <fchmod@plt+0x10a50>
movl   $0x0,0x34(%esp)
movl   $0x0,0x30(%esp)
lea    -0xfe0a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
mov    %esi,(%esp)
mov    %eax,0x38(%esp)
lea    -0xfe01(%ebx),%eax
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
cmpb   $0x0,0x6c(%esp)
mov    %eax,0x3c(%esp)
je     805c218 <fchmod@plt+0x110d8>
cmpb   $0x0,0xac(%esp)
lea    0x2ac(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0xac(%esp),%eax
mov    %eax,0x24(%esp)
je     805c288 <fchmod@plt+0x11148>
cmpb   $0x0,0xec(%esp)
je     805c304 <fchmod@plt+0x111c4>
lea    0xec(%esp),%eax
mov    %eax,0x44(%esp)
cmpb   $0x0,0x4ac(%esp)
je     805c35d <fchmod@plt+0x1121d>
mov    0x24(%esp),%eax
lea    -0xb171(%ebx),%edx
lea    0x68(%esp),%esi
mov    %edx,0xc(%esp)
lea    0x3ac(%esp),%edi
movl   $0x0,0x14(%esp)
mov    %eax,0x10(%esp)
lea    0x6c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x48(%esp)
mov    %edi,0x68(%esp)
mov    %eax,0x40(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    0x48(%esp),%edx
cmpb   $0x0,0x4ac(%esp)
jne    805c4b8 <fchmod@plt+0x11378>
cmpb   $0x0,0x16c(%esp)
jne    805c488 <fchmod@plt+0x11348>
mov    0x40(%esp),%eax
movzbl 0x28(%esp),%esi
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd82b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
call   80587d0 <fchmod@plt+0xd690>
lea    0x1ac(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd821(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd813(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd806(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x2c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd7fd(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x3c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd7f0(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd7e4(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
lea    -0xd7d8(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
cmpb   $0x0,0x4ac(%esp)
jne    805c460 <fchmod@plt+0x11320>
cmpb   $0x0,0x12c(%esp)
jne    805c438 <fchmod@plt+0x112f8>
cmpb   $0x0,0x16c(%esp)
jne    805c410 <fchmod@plt+0x112d0>
lea    -0xdbd4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd7aa(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
cmpb   $0x0,0x6ac(%esp)
jne    805c3e8 <fchmod@plt+0x112a8>
mov    0x30(%esp),%eax
test   %eax,%eax
je     805c1cf <fchmod@plt+0x1108f>
mov    %eax,0xc(%esp)
lea    -0xd791(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x34(%esp),%eax
xor    %edi,%edi
test   %eax,%eax
je     805c1f3 <fchmod@plt+0x110b3>
mov    %eax,0xc(%esp)
lea    -0xd77c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x8ac(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    805cbe8 <fchmod@plt+0x11aa8>
add    $0x8bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd851(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edi
je     805c7d8 <fchmod@plt+0x11698>
lea    0x1ac(%esp),%eax
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806d600 <fchmod@plt+0x224c0>
lea    0x6c(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x3f,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0x24(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
mov    0x24(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   806d510 <fchmod@plt+0x223d0>
jmp    805bfad <fchmod@plt+0x10e6d>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd844(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edi
je     805c820 <fchmod@plt+0x116e0>
lea    0x2ac(%esp),%eax
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   806d600 <fchmod@plt+0x224c0>
lea    0xac(%esp),%eax
movl   $0x3f,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806d510 <fchmod@plt+0x223d0>
cmpb   $0x0,0xec(%esp)
jne    805bfdf <fchmod@plt+0x10e9f>
lea    -0xd83c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
lea    0xec(%esp),%ecx
mov    %ecx,%edi
mov    %ecx,0x44(%esp)
test   %eax,%eax
je     805bfea <fchmod@plt+0x10eaa>
mov    %ecx,0x4(%esp)
movl   $0x3f,0x8(%esp)
mov    %eax,(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
cmpb   $0x0,0x4ac(%esp)
jne    805bff8 <fchmod@plt+0x10eb8>
lea    -0xd832(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%esi
je     805bff8 <fchmod@plt+0x10eb8>
movzbl (%eax),%eax
test   %al,%al
je     805c3b6 <fchmod@plt+0x11276>
lea    -0x20(%eax),%edx
cmp    $0x5f,%dl
ja     805bff8 <fchmod@plt+0x10eb8>
cmp    $0x2c,%al
je     805bff8 <fchmod@plt+0x10eb8>
mov    %esi,%ecx
jmp    805c3ac <fchmod@plt+0x1126c>
lea    -0x20(%eax),%edx
cmp    $0x5f,%dl
ja     805bff8 <fchmod@plt+0x10eb8>
cmp    $0x2c,%al
je     805bff8 <fchmod@plt+0x10eb8>
add    $0x1,%ecx
movzbl (%ecx),%eax
test   %al,%al
jne    805c398 <fchmod@plt+0x11258>
lea    0x4ac(%esp),%edi
movl   $0x1ff,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
jmp    805bff8 <fchmod@plt+0x10eb8>
xchg   %ax,%ax
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0xd7a3(%ebx),%eax
mov    %eax,0x8(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805c1ad <fchmod@plt+0x1106d>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x16c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd7b6(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805c17f <fchmod@plt+0x1103f>
xchg   %ax,%ax
lea    0x12c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd7be(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805c171 <fchmod@plt+0x11031>
xchg   %ax,%ax
lea    0x4ac(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd7ce(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805c163 <fchmod@plt+0x11023>
xchg   %ax,%ax
lea    0x16c(%esp),%edx
mov    %edx,0xc(%esp)
lea    -0xbc0a(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80632b0 <fchmod@plt+0x18170>
jmp    805c061 <fchmod@plt+0x10f21>
xchg   %ax,%ax
lea    0x4ac(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80632b0 <fchmod@plt+0x18170>
jmp    805c053 <fchmod@plt+0x10f13>
lea    -0xd8a1(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065690 <fchmod@plt+0x1a550>
movl   $0x0,0x24(%esp)
test   %eax,%eax
mov    %eax,%edx
je     805c57b <fchmod@plt+0x1143b>
lea    0x68(%esp),%eax
mov    %edx,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x38(%esp)
call   804ab00 <strtoul@plt>
mov    0x38(%esp),%edx
cmp    0x68(%esp),%edx
mov    %eax,0x24(%esp)
je     805c880 <fchmod@plt+0x11740>
cmp    $0x6,%eax
ja     805c880 <fchmod@plt+0x11740>
mov    -0xd544(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
lea    -0xd8f8(%ebx),%eax
xchg   %ax,%ax
mov    %eax,0x4(%esp)
lea    0x12c(%esp),%eax
movl   $0x3f,0x8(%esp)
mov    %eax,(%esp)
call   804acf0 <strncpy@plt>
movb   $0x0,0x16a(%esp)
movl   $0x0,0x24(%esp)
mov    %esi,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    0x24(%esp),%ecx
mov    %edi,0x18(%esp)
lea    -0xd4d5(%ebx),%edi
mov    %edi,0xc(%esp)
movl   $0x131,0x8(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd88e(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd750(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x38(%esp)
call   8062020 <fchmod@plt+0x16ee0>
lea    -0xd9bb(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,%esi
je     805c798 <fchmod@plt+0x11658>
lea    0x6ac(%esp),%eax
mov    %eax,0x4c(%esp)
mov    %eax,%edx
mov    %esi,%eax
call   805bb90 <fchmod@plt+0x10a50>
mov    0x24(%esp),%eax
and    $0xfffffffb,%eax
cmp    $0x2,%eax
jne    805bf76 <fchmod@plt+0x10e36>
lea    -0xdb6e(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xdb62(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8067c30 <fchmod@plt+0x1caf0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805caa8 <fchmod@plt+0x11968>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
lea    0x64(%esp),%edx
mov    %edx,0x14(%esp)
lea    0x60(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x5c(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x58(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0xd9f5(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x4,%eax
je     805c888 <fchmod@plt+0x11748>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0xc(%esp)
movl   $0x14c,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd871(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
nop
lea    -0xf925(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xf54f(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd8db(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd8df(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xf638(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd8d3(%ebx),%eax
jmp    805c550 <fchmod@plt+0x11410>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8065440 <fchmod@plt+0x1a300>
movl   $0x118,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0xd6fc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd4d5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd750(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805c1f3 <fchmod@plt+0x110b3>
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
movl   $0x122,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0xd6cc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd4d5(%ebx),%eax
mov    %eax,0xc(%esp)
jmp    805c748 <fchmod@plt+0x11608>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %edi,0xc(%esp)
mov    $0x1,%edi
movl   $0x137,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd6a0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805c1f3 <fchmod@plt+0x110b3>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    805cae3 <fchmod@plt+0x119a3>
lea    -0xd5a8(%ebx),%eax
mov    $0x1,%di
mov    %eax,0x10(%esp)
lea    -0xd4d5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd750(%ebx),%eax
movl   $0x189,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805c1f3 <fchmod@plt+0x110b3>
nop
mov    0x3c(%esp),%eax
test   %eax,%eax
jne    805cbed <fchmod@plt+0x11aad>
mov    $0x1,%edi
jmp    805c1f3 <fchmod@plt+0x110b3>
lea    -0xdb62(%ebx),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
lea    0x12c(%esp),%eax
movl   $0x3f,0x4(%esp)
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
jmp    805c57b <fchmod@plt+0x1143b>
lea    -0xd8e3(%ebx),%eax
jmp    805c840 <fchmod@plt+0x11700>
lea    -0xdb2b(%ebx),%eax
jmp    805c840 <fchmod@plt+0x11700>
lea    -0xd8f0(%ebx),%eax
jmp    805c840 <fchmod@plt+0x11700>
lea    -0xd8ea(%ebx),%eax
jmp    805c840 <fchmod@plt+0x11700>
lea    -0xd8f8(%ebx),%eax
jmp    805c840 <fchmod@plt+0x11700>
lea    -0xf539(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edx
je     805caec <fchmod@plt+0x119ac>
lea    0x1ac(%esp),%eax
mov    %edx,(%esp)
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x3c(%esp)
call   806d600 <fchmod@plt+0x224c0>
mov    0x3c(%esp),%edx
lea    0x6c(%esp),%ecx
mov    %ecx,0x4(%esp)
movl   $0x3f,0x8(%esp)
mov    %ecx,0x24(%esp)
mov    %edx,(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
mov    0x24(%esp),%ecx
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
call   806d510 <fchmod@plt+0x223d0>
lea    -0xd857(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edx
je     805cb2b <fchmod@plt+0x119eb>
lea    0x2ac(%esp),%eax
mov    %edx,(%esp)
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x3c(%esp)
call   806d600 <fchmod@plt+0x224c0>
mov    0x3c(%esp),%edx
lea    0xac(%esp),%eax
movl   $0x3f,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x24(%esp)
mov    %edx,(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806d510 <fchmod@plt+0x223d0>
lea    -0x11f7b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edx
je     805cb6a <fchmod@plt+0x11a2a>
lea    0x68(%esp),%eax
mov    %edx,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x24(%esp)
call   804ab00 <strtoul@plt>
mov    0x24(%esp),%edx
cmp    0x68(%esp),%edx
je     805ca9d <fchmod@plt+0x1195d>
cmp    $0xf,%eax
ja     805ca9d <fchmod@plt+0x1195d>
mov    -0xd528(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    -0xd8cf(%ebx),%eax
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
lea    0x12c(%esp),%eax
movl   $0x3f,0x4(%esp)
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
lea    -0xf298(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     805cba9 <fchmod@plt+0x11a69>
lea    0xec(%esp),%ecx
mov    %ecx,%edi
mov    %ecx,0x4(%esp)
movl   $0x3f,0x8(%esp)
mov    %eax,(%esp)
call   806d3e0 <fchmod@plt+0x222a0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   806d510 <fchmod@plt+0x223d0>
mov    0x64(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0xd9ef(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x16c(%esp),%eax
mov    %eax,(%esp)
call   804b120 <__sprintf_chk@plt>
jmp    805bf76 <fchmod@plt+0x10e36>
lea    -0xf9bd(%ebx),%eax
jmp    805c9d8 <fchmod@plt+0x11898>
lea    -0xd8ca(%ebx),%eax
jmp    805c9d8 <fchmod@plt+0x11898>
lea    -0xdb2b(%ebx),%eax
jmp    805c9d8 <fchmod@plt+0x11898>
lea    -0xd8f8(%ebx),%eax
jmp    805c9d8 <fchmod@plt+0x11898>
mov    %ebp,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %edi,0xc(%esp)
movl   $0x148,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd674(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
mov    0x38(%esp),%edi
jmp    805c234 <fchmod@plt+0x110f4>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0xc(%esp)
movl   $0x154,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd644(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0xc(%esp)
movl   $0x15e,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd61c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0xc(%esp)
movl   $0x168,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd5f4(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %edi,0xc(%esp)
movl   $0x170,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd5d0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805bf76 <fchmod@plt+0x10e36>
call   806ed90 <fchmod@plt+0x23c50>
mov    0x3c(%esp),%edi
jmp    805c2a4 <fchmod@plt+0x11164>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x260a7,%ebx
sub    $0x2c,%esp
mov    %edi,(%esp)
lea    -0x101e9(%ebx),%eax
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     805cc68 <fchmod@plt+0x11b28>
lea    -0x13d82(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804af60 <__fprintf_chk@plt>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xd4c6(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd391(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd42c(%ebx),%eax
mov    %edi,0x14(%esp)
movl   $0x24,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xe3c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x25ff5,%ebx
mov    0xe50(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0xe2c(%esp)
xor    %eax,%eax
mov    %edi,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
lea    -0xd4ac(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8068450 <fchmod@plt+0x1d310>
test   %eax,%eax
mov    %eax,%ebp
je     805ce58 <fchmod@plt+0x11d18>
lea    0xa6(%esp),%eax
mov    %eax,(%esp)
lea    0xa2c(%esp),%esi
call   804a7a0 <uname@plt>
lea    -0x1033a(%ebx),%eax
lea    -0xd486(%ebx),%edx
mov    %eax,0x10(%esp)
lea    0x128(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x18(%esp)
mov    %ebp,0x14(%esp)
mov    %eax,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ecx
jne    805ce90 <fchmod@plt+0x11d50>
mov    0x2c(%esp),%edx
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ecx
jne    805ce90 <fchmod@plt+0x11d50>
mov    %edi,(%esp)
lea    0x22c(%esp),%esi
call   8065440 <fchmod@plt+0x1a300>
lea    -0xd477(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    -0xd408(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd377(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd42c(%ebx),%eax
mov    %ebp,0x14(%esp)
movl   $0x73,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
call   8064890 <fchmod@plt+0x19750>
test   %al,%al
je     805d0e0 <fchmod@plt+0x11fa0>
movl   $0x1,0x2c(%esp)
mov    0xe2c(%esp),%edi
xor    %gs:0x14,%edi
mov    0x2c(%esp),%eax
jne    805d1d5 <fchmod@plt+0x12095>
add    $0xe3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0xd4a3(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd377(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd42c(%ebx),%eax
movl   $0x5d,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805ce2a <fchmod@plt+0x11cea>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    -0xd477(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x22c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
js     805cef7 <fchmod@plt+0x11db7>
mov    0x74(%esp),%eax
or     0x70(%esp),%eax
jne    805cf28 <fchmod@plt+0x11de8>
mov    %ecx,0x28(%esp)
call   8064890 <fchmod@plt+0x19750>
mov    0x28(%esp),%ecx
movl   $0x1,0x2c(%esp)
test   %al,%al
je     805d0c8 <fchmod@plt+0x11f88>
mov    %ecx,(%esp)
call   804a730 <fclose@plt>
jmp    805ce32 <fchmod@plt+0x11cf2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
lea    -0xc041(%ebx),%edx
mov    %ecx,0x34(%esp)
call   805cc00 <fchmod@plt+0x11ac0>
mov    0x34(%esp),%ecx
movl   $0x0,0x2c(%esp)
test   %al,%al
je     805cf14 <fchmod@plt+0x11dd4>
mov    %edi,(%esp)
lea    0x62c(%esp),%edi
mov    %ecx,0x38(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    -0x13ca4(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x70(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   804a9f0 <malloc@plt>
mov    0x38(%esp),%ecx
test   %eax,%eax
mov    %eax,0x34(%esp)
je     805d0f2 <fchmod@plt+0x11fb2>
mov    0x2c(%esp),%eax
mov    %esi,0x14(%esp)
mov    %edi,0x1c(%esp)
movl   $0x38,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0xd46b(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd385(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd42c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %ecx,0x38(%esp)
mov    %eax,0x3c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   804a8c0 <fopen64@plt>
mov    0x38(%esp),%ecx
mov    %ecx,0x28(%esp)
test   %eax,%eax
mov    %eax,%esi
je     805d188 <fchmod@plt+0x12048>
lea    -0x101e9(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
mov    0x28(%esp),%ecx
test   %eax,%eax
mov    %eax,%edi
je     805d19a <fchmod@plt+0x1205a>
mov    0x2c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ecx,0x38(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a970 <fread@plt>
mov    0x38(%esp),%ecx
movb   $0x0,0x28(%esp)
cmp    $0x1,%eax
je     805d1a4 <fchmod@plt+0x12064>
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   804a730 <fclose@plt>
mov    0x2c(%esp),%ecx
mov    %esi,(%esp)
mov    %ecx,0x2c(%esp)
call   804a730 <fclose@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esp),%ecx
cmpb   $0x0,0x28(%esp)
je     805d130 <fchmod@plt+0x11ff0>
mov    0x30(%esp),%eax
lea    -0xc282(%ebx),%edx
mov    %ecx,0x28(%esp)
call   805cc00 <fchmod@plt+0x11ac0>
mov    0x28(%esp),%ecx
movl   $0x0,0x2c(%esp)
jmp    805cf14 <fchmod@plt+0x11dd4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
lea    -0xd46e(%ebx),%edx
call   805cc00 <fchmod@plt+0x11ac0>
mov    0x28(%esp),%ecx
jmp    805cf14 <fchmod@plt+0x11dd4>
lea    -0xd46e(%ebx),%edx
mov    %esi,%eax
call   805cc00 <fchmod@plt+0x11ac0>
jmp    805ce2a <fchmod@plt+0x11cea>
lea    -0xd3e4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd385(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd42c(%ebx),%eax
movl   $0x34,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x3c(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x28(%esp),%ecx
lea    -0xd3b8(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd377(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %ebp,0x14(%esp)
movl   $0x8b,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x28(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x30(%esp),%eax
lea    -0xd46e(%ebx),%edx
call   805cc00 <fchmod@plt+0x11ac0>
mov    0x28(%esp),%ecx
movl   $0x1,0x2c(%esp)
jmp    805cf14 <fchmod@plt+0x11dd4>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x28(%esp),%ecx
jmp    805d130 <fchmod@plt+0x11ff0>
movb   $0x0,0x28(%esp)
jmp    805d076 <fchmod@plt+0x11f36>
mov    0x2c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a910 <fwrite@plt>
mov    0x38(%esp),%ecx
cmp    $0x1,%eax
sete   0x28(%esp)
jmp    805d066 <fchmod@plt+0x11f26>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x25ace,%ebx
sub    $0x28,%esp
movl   $0x78,0x8(%esp)
movl   $0x7,(%esp)
lea    -0xd366(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd23b(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd298(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x3a8(%ebx),%edx
xor    %eax,%eax
test   %edx,%edx
je     805d23a <fchmod@plt+0x120fa>
mov    %edx,(%esp)
call   804a820 <kmod_validate_resources@plt>
test   %eax,%eax
setne  %al
add    $0x28,%esp
pop    %ebx
ret
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x25a6e,%ebx
sub    $0x28,%esp
movl   $0x71,0x8(%esp)
movl   $0x7,(%esp)
lea    -0xd34f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd24d(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd298(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x3a8(%ebx),%eax
mov    %eax,(%esp)
call   804a5f0 <kmod_unref@plt>
mov    %eax,0x3a8(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x48(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x25a07,%ebx
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b4c0 <fchmod@plt+0x380>
add    $0x28,%esp
pop    %ebx
ret
push   %esi
xor    %esi,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x259bb,%ebx
sub    $0x24,%esp
mov    0x3a8(%ebx),%eax
test   %eax,%eax
je     805d318 <fchmod@plt+0x121d8>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804ac30 <kmod_new@plt>
test   %eax,%eax
mov    %eax,0x3a8(%ebx)
je     805d39b <fchmod@plt+0x1225b>
lea    -0xd34d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd25f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd298(%ebx),%eax
movl   $0x68,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x25a14(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3a8(%ebx),%eax
mov    %eax,(%esp)
call   804b130 <kmod_set_log_fn@plt>
mov    0x3a8(%ebx),%eax
mov    %eax,(%esp)
call   804a4f0 <kmod_load_resources@plt>
jmp    805d30c <fchmod@plt+0x121cc>
mov    $0xfffffff4,%esi
jmp    805d30c <fchmod@plt+0x121cc>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x258f8,%ebx
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    0x3a8(%ebx),%eax
test   %eax,%eax
je     805d5a8 <fchmod@plt+0x12468>
cmpl   $0x2,0x74(%esp)
jle    805d5b8 <fchmod@plt+0x12478>
mov    0x78(%esp),%eax
mov    $0x5,%ecx
lea    -0x132cd(%ebx),%edi
mov    0x4(%eax),%eax
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805d5b8 <fchmod@plt+0x12478>
mov    0x78(%esp),%ecx
mov    0x8(%ecx),%edx
lea    0x8(%ecx),%esi
test   %edx,%edx
je     805d5a8 <fchmod@plt+0x12468>
add    $0xc,%ecx
mov    %ecx,0x2c(%esp)
lea    -0xd33a(%ebx),%ecx
mov    %ecx,0x38(%esp)
lea    -0xd26c(%ebx),%ecx
mov    %ecx,0x3c(%esp)
lea    0x4c(%esp),%ecx
mov    %ecx,0x34(%esp)
lea    -0xd2e4(%ebx),%ecx
lea    -0xd298(%ebx),%edi
mov    %ecx,0x28(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x57,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x34(%esp),%eax
mov    (%esi),%edx
movl   $0x0,0x4c(%esp)
mov    %eax,0x8(%esp)
mov    0x3a8(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %eax,(%esp)
call   804b030 <kmod_module_new_from_lookup@plt>
test   %eax,%eax
js     805d64c <fchmod@plt+0x1250c>
mov    0x4c(%esp),%esi
lea    -0xd278(%ebx),%eax
mov    %eax,0x24(%esp)
mov    0x30(%esp),%edx
test   %esi,%esi
jne    805d51d <fchmod@plt+0x123dd>
jmp    805d670 <fchmod@plt+0x12530>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a560 <kmod_module_get_name@plt>
movl   $0x38,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd2f3(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %ebp,(%esp)
call   804a6d0 <kmod_module_unref@plt>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <kmod_list_next@plt>
test   %eax,%eax
mov    %eax,%esi
je     805d640 <fchmod@plt+0x12500>
mov    %esi,(%esp)
call   804ace0 <kmod_module_get_module@plt>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   804a950 <kmod_module_probe_insert_module@plt>
mov    %ebp,(%esp)
cmp    $0x20000,%eax
je     805d608 <fchmod@plt+0x124c8>
test   %eax,%eax
je     805d4c8 <fchmod@plt+0x12388>
call   804a560 <kmod_module_get_name@plt>
movl   $0x3a,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805d4fb <fchmod@plt+0x123bb>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
mov    (%eax),%eax
movl   $0x52,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd2cd(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd26c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd298(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804a560 <kmod_module_get_name@plt>
movl   $0x36,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xd30f(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805d4fb <fchmod@plt+0x123bb>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a8a0 <kmod_module_unref_list@plt>
mov    0x2c(%esp),%esi
addl   $0x4,0x2c(%esp)
mov    0x2c(%esp),%eax
mov    -0x4(%eax),%edx
test   %edx,%edx
je     805d5a8 <fchmod@plt+0x12468>
mov    0x78(%esp),%eax
mov    0x4(%eax),%eax
jmp    805d448 <fchmod@plt+0x12308>
lea    -0xd327(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x2f,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x4c(%esp),%esi
test   %esi,%esi
jne    805d51d <fchmod@plt+0x123dd>
xor    %eax,%eax
jmp    805d644 <fchmod@plt+0x12504>
xchg   %ax,%ax
push   %ebp
mov    $0x5,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
mov    %eax,0x14(%esp)
mov    0x154(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x255e5,%ebx
mov    0x150(%esp),%ebp
movb   $0x0,0x23(%esp)
mov    %eax,0x18(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
mov    %ebp,%esi
lea    -0xd1a6(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d828 <fchmod@plt+0x126e8>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0xd214(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d890 <fchmod@plt+0x12750>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0xd208(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d870 <fchmod@plt+0x12730>
mov    $0x5,%ecx
mov    %ebp,%esi
lea    -0xd1fa(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d8a0 <fchmod@plt+0x12760>
mov    $0x9,%ecx
mov    %ebp,%esi
lea    -0xd1e0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d920 <fchmod@plt+0x127e0>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0xd1be(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d988 <fchmod@plt+0x12848>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0xd1a8(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805d880 <fchmod@plt+0x12740>
mov    $0x10,%ecx
mov    %ebp,%esi
lea    -0xd18b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805da80 <fchmod@plt+0x12940>
mov    $0x10,%ecx
mov    %ebp,%esi
lea    -0xd178(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %edx,0x1c(%esp)
seta   %cl
setb   %al
cmp    %al,%cl
je     805dab0 <fchmod@plt+0x12970>
lea    -0xd168(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805d9f0 <fchmod@plt+0x128b0>
lea    -0xd15c(%ebx),%eax
lea    0x23(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x109,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%edx
mov    0x14(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805d84a <fchmod@plt+0x1270a>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd225(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
mov    0x12c(%esp),%eax
xor    %gs:0x14,%eax
jne    805db65 <fchmod@plt+0x12a25>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd20e(%ebx),%eax
jmp    805d836 <fchmod@plt+0x126f6>
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd1a1(%ebx),%eax
jmp    805d836 <fchmod@plt+0x126f6>
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xd21a(%ebx),%eax
jmp    805d836 <fchmod@plt+0x126f6>
mov    0x18(%esp),%ebp
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %ebp,(%esp)
call   804a800 <blkid_safe_string@plt>
mov    0x1c(%esp),%edx
lea    -0xd200(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %esi,0xc(%esp)
movzbl %dl,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd1f5(%ebx),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
jmp    805d84a <fchmod@plt+0x1270a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebp
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %ebp,(%esp)
call   804a800 <blkid_safe_string@plt>
mov    0x1c(%esp),%edx
lea    -0xd1e6(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %esi,0xc(%esp)
movzbl %dl,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd1d7(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805d903 <fchmod@plt+0x127c3>
mov    0x18(%esp),%ebp
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %ebp,(%esp)
call   804a800 <blkid_safe_string@plt>
mov    0x1c(%esp),%edx
lea    -0xd1c4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %esi,0xc(%esp)
movzbl %dl,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80587d0 <fchmod@plt+0xd690>
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd1b8(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805d903 <fchmod@plt+0x127c3>
mov    $0xa,%ecx
mov    %ebp,%esi
lea    -0xd152(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805dad8 <fchmod@plt+0x12998>
mov    $0xd,%ecx
mov    %ebp,%esi
lea    -0xd142(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805db07 <fchmod@plt+0x129c7>
mov    $0xf,%ecx
mov    %ebp,%esi
lea    -0xd12f(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805db36 <fchmod@plt+0x129f6>
mov    $0xf,%ecx
mov    %ebp,%esi
lea    -0xd11a(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805d84a <fchmod@plt+0x1270a>
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd120(%ebx),%eax
mov    %esi,0xc(%esp)
xchg   %ax,%ax
mov    %eax,0x8(%esp)
jmp    805d80c <fchmod@plt+0x126cc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd18e(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805da70 <fchmod@plt+0x12930>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd17b(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805da70 <fchmod@plt+0x12930>
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd158(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805da70 <fchmod@plt+0x12930>
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd148(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805da70 <fchmod@plt+0x12930>
mov    0x18(%esp),%eax
lea    0x23(%esp),%esi
movl   $0x109,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804af90 <blkid_encode_string@plt>
lea    -0xd135(%ebx),%eax
mov    %esi,0xc(%esp)
jmp    805da70 <fchmod@plt+0x12930>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2513b,%ebx
sub    $0xcc,%esp
movzbl 0xec(%esp),%eax
mov    0xe4(%esp),%ebp
movb   $0x0,0x2c(%esp)
movl   $0x0,0x30(%esp)
mov    %al,0x40(%esp)
movl   $0x0,0x34(%esp)
lea    -0x2f4(%ebx),%edi
lea    -0xd108(%ebx),%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0xe8(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804aac0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     805dc28 <fchmod@plt+0x12ae8>
cmp    $0x52,%eax
je     805dc20 <fchmod@plt+0x12ae0>
cmp    $0x6f,%eax
jne    805dbc0 <fchmod@plt+0x12a80>
mov    0x33c(%ebx),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
jmp    805dbc0 <fchmod@plt+0x12a80>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2c(%esp)
jmp    805dbc0 <fchmod@plt+0x12a80>
nop
call   804ac50 <blkid_new_probe@plt>
mov    $0x1,%edi
test   %eax,%eax
mov    %eax,%esi
je     805de85 <fchmod@plt+0x12d45>
movl   $0x1ea,0x4(%esp)
mov    %eax,(%esp)
call   804a9b0 <blkid_probe_set_superblocks_flags@plt>
cmpb   $0x0,0x2c(%esp)
jne    805de98 <fchmod@plt+0x12d58>
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
movl   $0x80000,0x4(%esp)
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
js     805deb8 <fchmod@plt+0x12d78>
mov    0x30(%esp),%eax
mov    $0x1,%edi
mov    0x34(%esp),%edx
mov    0x3c(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804a790 <blkid_probe_set_device@plt>
test   %eax,%eax
js     805de75 <fchmod@plt+0x12d35>
mov    0xe0(%esp),%ecx
lea    -0x11546(%ebx),%eax
cmpb   $0x0,0x2c(%esp)
lea    -0xd10b(%ebx),%edi
mov    %ecx,(%esp)
cmove  %eax,%edi
call   8067d60 <fchmod@plt+0x1cc20>
mov    0x30(%esp),%edx
mov    0x34(%esp),%ecx
mov    %edi,0x18(%esp)
movl   $0xc0,0x8(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x14(%esp)
lea    -0xd0f6(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xd07f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xd0c4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   804b020 <blkid_probe_get_fd@plt>
lea    0x60(%esp),%ecx
mov    %ecx,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x48(%esp)
mov    %eax,0x4(%esp)
call   804a920 <__fxstat64@plt>
test   %eax,%eax
mov    %eax,%edi
jne    805df00 <fchmod@plt+0x12dc0>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a6f0 <blkid_probe_enable_partitions@plt>
mov    0x70(%esp),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     805dd8b <fchmod@plt+0x12c4b>
mov    %esi,(%esp)
call   804ae50 <blkid_probe_get_size@plt>
cmp    $0x0,%edx
jle    805df16 <fchmod@plt+0x12dd6>
movl   $0x4,0x4(%esp)
mov    %esi,(%esp)
call   804abe0 <blkid_probe_set_partitions_flags@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a6a0 <blkid_probe_enable_superblocks@plt>
mov    %esi,(%esp)
call   804a750 <blkid_do_safeprobe@plt>
test   %eax,%eax
js     805df00 <fchmod@plt+0x12dc0>
mov    %esi,(%esp)
xor    %ebp,%ebp
call   804a640 <blkid_probe_numof_values@plt>
lea    0x58(%esp),%ecx
mov    %ecx,0x30(%esp)
lea    0x5c(%esp),%ecx
mov    %ecx,0x38(%esp)
movzbl 0x40(%esp),%ecx
test   %eax,%eax
mov    %eax,0x2c(%esp)
mov    %ecx,0x44(%esp)
jle    805de6d <fchmod@plt+0x12d2d>
mov    %edi,0x4c(%esp)
mov    %ebp,%edi
mov    0x48(%esp),%ebp
jmp    805de01 <fchmod@plt+0x12cc1>
xchg   %ax,%ax
add    $0x1,%edi
cmp    0x2c(%esp),%edi
je     805de69 <fchmod@plt+0x12d29>
mov    0x30(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
call   804ab40 <blkid_probe_get_value@plt>
test   %eax,%eax
jne    805ddf8 <fchmod@plt+0x12cb8>
mov    0x58(%esp),%edx
add    $0x1,%edi
mov    0x60(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x40(%esp)
call   804adc0 <strnlen@plt>
mov    0x40(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x44(%esp),%edx
mov    %eax,0x60(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
mov    0xe0(%esp),%eax
call   805d6b0 <fchmod@plt+0x12570>
cmp    0x2c(%esp),%edi
jne    805de01 <fchmod@plt+0x12cc1>
mov    0x4c(%esp),%edi
mov    %esi,(%esp)
call   804adf0 <blkid_free_probe@plt>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     805de85 <fchmod@plt+0x12d45>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
add    $0xcc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a6c0 <blkid_probe_filter_superblocks_usage@plt>
jmp    805dc57 <fchmod@plt+0x12b17>
lea    0x0(%esi),%esi
mov    0xe0(%esp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xd105(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x32c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
add    $0xcc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
mov    $0x1,%edi
test   %eax,%eax
jne    805de7d <fchmod@plt+0x12d3d>
jmp    805de85 <fchmod@plt+0x12d45>
jl     805df26 <fchmod@plt+0x12de6>
cmp    $0x168000,%eax
lea    0x0(%esi),%esi
ja     805dd8b <fchmod@plt+0x12c4b>
mov    %esi,(%esp)
call   804a990 <blkid_probe_is_wholedisk@plt>
test   %eax,%eax
je     805dd8b <fchmod@plt+0x12c4b>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a6a0 <blkid_probe_enable_superblocks@plt>
mov    %esi,(%esp)
call   804aa20 <blkid_do_fullprobe@plt>
test   %eax,%eax
js     805df00 <fchmod@plt+0x12dc0>
lea    -0xd1a8(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a5c0 <blkid_probe_lookup_value@plt>
test   %eax,%eax
jne    805dd8b <fchmod@plt+0x12c4b>
jmp    805ddbb <fchmod@plt+0x12c7b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24d19,%ebx
sub    $0x3c,%esp
movl   $0x6,(%esp)
mov    0x50(%esp),%esi
call   80620a0 <fchmod@plt+0x16f60>
call   8062300 <fchmod@plt+0x171c0>
call   8061aa0 <fchmod@plt+0x16960>
movl   $0x12,(%esp)
call   804b000 <umask@plt>
lea    -0xd06b(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad80 <access@plt>
test   %eax,%eax
js     805e078 <fchmod@plt+0x12f38>
mov    %esi,(%esp)
call   8067d60 <fchmod@plt+0x1cc20>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    -0xd057(%ebx),%eax
mov    %eax,0x4(%esp)
call   8068450 <fchmod@plt+0x1d310>
movl   $0x0,0x4(%esp)
test   %eax,%eax
mov    %eax,%esi
lea    -0xd071(%ebx),%eax
cmove  %eax,%esi
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   805e7f0 <fchmod@plt+0x136b0>
cmp    $0xfffffffe,%eax
mov    %eax,%edi
je     805e088 <fchmod@plt+0x12f48>
test   %eax,%eax
js     805e0e0 <fchmod@plt+0x12fa0>
mov    0x2c(%esp),%eax
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805e1d0 <fchmod@plt+0x13090>
test   %eax,%eax
mov    %eax,%edi
js     805e120 <fchmod@plt+0x12fe0>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     805e0ce <fchmod@plt+0x12f8e>
mov    0x1c(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805e1d0 <fchmod@plt+0x13090>
test   %eax,%eax
js     805e170 <fchmod@plt+0x13030>
shr    $0x1f,%edi
add    $0x3c,%esp
mov    %edi,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0xd00c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xcfbd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcfe0(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x41,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805e08a <fchmod@plt+0x12f4a>
nop
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
movl   $0x47,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xd04f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xcfbd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcfe0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805e08a <fchmod@plt+0x12f4a>
lea    0x0(%esi),%esi
neg    %eax
mov    $0x1,%ebp
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
movl   $0x55,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xd04f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xcfbd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcfe0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    805e078 <fchmod@plt+0x12f38>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edx
mov    0x60(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24ad0,%ebx
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
test   %edx,%edx
mov    %eax,0x18(%esp)
je     805e4df <fchmod@plt+0x1339f>
mov    0x50(%esp),%eax
movl   $0x8000,0x4(%esp)
mov    %eax,(%esp)
call   804abf0 <acl_get_file@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x24(%esp)
je     805e4c0 <fchmod@plt+0x13380>
mov    %edi,%eax
test   %al,%al
jne    805e268 <fchmod@plt+0x13128>
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    805e438 <fchmod@plt+0x132f8>
xor    %edi,%edi
xor    %esi,%esi
cmpb   $0x0,0x18(%esp)
mov    0x64(%esp),%eax
jne    805e2f8 <fchmod@plt+0x131b8>
mov    %edi,%eax
test   %al,%al
jne    805e3f0 <fchmod@plt+0x132b0>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804b0f0 <acl_free@plt>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x28(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad50 <acl_get_entry@plt>
movb   $0x0,0x1f(%esp)
test   %eax,%eax
jle    805e490 <fchmod@plt+0x13350>
lea    0x2c(%esp),%ebp
jmp    805e2b4 <fchmod@plt+0x13174>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804ad50 <acl_get_entry@plt>
test   %eax,%eax
jle    805e490 <fchmod@plt+0x13350>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <acl_get_tag_type@plt>
test   %eax,%eax
js     805e4a0 <fchmod@plt+0x13360>
cmpl   $0x2,0x2c(%esp)
jne    805e298 <fchmod@plt+0x13158>
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804ae60 <acl_delete_entry@plt>
test   %eax,%eax
js     805e4a0 <fchmod@plt+0x13360>
movb   $0x1,0x1f(%esp)
jmp    805e298 <fchmod@plt+0x13158>
lea    0x0(%esi),%esi
test   %eax,%eax
je     805e245 <fchmod@plt+0x13105>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
lea    0x28(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   806e950 <fchmod@plt+0x23810>
test   %eax,%eax
mov    %eax,%esi
js     805e24f <fchmod@plt+0x1310f>
jne    805e378 <fchmod@plt+0x13238>
lea    0x24(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a830 <acl_create_entry@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
mov    0x28(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a7f0 <acl_set_tag_type@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
lea    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804aa60 <acl_set_qualifier@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a610 <acl_get_permset@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
mov    0x2c(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   804ae70 <acl_get_perm@plt>
test   %eax,%eax
mov    %eax,%ebp
js     805e428 <fchmod@plt+0x132e8>
mov    0x2c(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804ae70 <acl_get_perm@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
je     805e3d6 <fchmod@plt+0x13296>
test   %ebp,%ebp
lea    0x0(%esi),%esi
jne    805e245 <fchmod@plt+0x13105>
mov    0x2c(%esp),%eax
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   804a570 <acl_add_perm@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
xchg   %ax,%ax
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804af50 <acl_calc_mask@plt>
test   %eax,%eax
js     805e428 <fchmod@plt+0x132e8>
mov    0x24(%esp),%eax
xor    %esi,%esi
movl   $0x8000,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804aa00 <acl_set_file@plt>
test   %eax,%eax
jns    805e24f <fchmod@plt+0x1310f>
xchg   %ax,%ax
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    805e24f <fchmod@plt+0x1310f>
xchg   %ax,%ax
mov    %ebp,%eax
test   %al,%al
je     805e232 <fchmod@plt+0x130f2>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806e950 <fchmod@plt+0x23810>
test   %eax,%eax
mov    %eax,%esi
js     805e24f <fchmod@plt+0x1310f>
je     805e4d8 <fchmod@plt+0x13398>
mov    0x2c(%esp),%eax
mov    $0x1,%edi
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804ae60 <acl_delete_entry@plt>
test   %eax,%eax
jns    805e236 <fchmod@plt+0x130f6>
jmp    805e428 <fchmod@plt+0x132e8>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
movzbl 0x1f(%esp),%esi
je     805e4b1 <fchmod@plt+0x13371>
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
test   %esi,%esi
js     805e24f <fchmod@plt+0x1310f>
test   %esi,%esi
setne  %al
mov    %eax,%edi
jmp    805e236 <fchmod@plt+0x130f6>
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    805e236 <fchmod@plt+0x130f6>
lea    -0xcf77(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcfad(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x48,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24797,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
js     805e540 <fchmod@plt+0x13400>
test   %edx,%edx
je     805e540 <fchmod@plt+0x13400>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805f150 <fchmod@plt+0x14010>
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    805e53b <fchmod@plt+0x133fb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x34,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24758,%ebx
test   %edx,%edx
je     805e5db <fchmod@plt+0x1349b>
test   %eax,%eax
je     805e590 <fchmod@plt+0x13450>
mov    %eax,0x4(%esp)
lea    -0xcf3c(%ebx),%eax
mov    %eax,(%esp)
call   80641c0 <fchmod@plt+0x19080>
test   %eax,%eax
je     805e5d4 <fchmod@plt+0x13494>
mov    %eax,(%esi)
xor    %eax,%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805e510 <fchmod@plt+0x133d0>
test   %eax,%eax
js     805e584 <fchmod@plt+0x13444>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0xcf3c(%ebx),%eax
mov    %eax,(%esp)
call   80641c0 <fchmod@plt+0x19080>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   804a690 <free@plt>
mov    0x1c(%esp),%eax
jmp    805e57c <fchmod@plt+0x1343c>
mov    $0xfffffff4,%eax
jmp    805e584 <fchmod@plt+0x13444>
lea    -0xce47(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcf54(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad20(%ebx),%eax
movl   $0xd9,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24695,%ebx
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %edi,%edi
je     805e6d0 <fchmod@plt+0x13590>
mov    %edx,%esi
lea    0x28(%esp),%edx
call   805e550 <fchmod@plt+0x13410>
test   %eax,%eax
js     805e6b8 <fchmod@plt+0x13578>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xcf0d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,(%esp)
call   8060180 <fchmod@plt+0x15040>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
js     805e697 <fchmod@plt+0x13557>
test   %edx,%edx
je     805e6c0 <fchmod@plt+0x13580>
cmpb   $0x0,(%edx)
je     805e6c2 <fchmod@plt+0x13582>
mov    %edx,(%edi)
xor    %esi,%esi
xor    %edx,%edx
movl   $0x0,0x2c(%esp)
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edx
mov    %eax,%esi
jmp    805e697 <fchmod@plt+0x13557>
xor    %edx,%edx
mov    $0xfffffffe,%esi
jmp    805e697 <fchmod@plt+0x13557>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    $0xffffffea,%esi
jmp    805e697 <fchmod@plt+0x13557>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
call   8058845 <fchmod@plt+0xd705>
add    $0x245cf,%ecx
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x4(%esp)
lea    -0xd054(%ecx),%edx
jmp    805e610 <fchmod@plt+0x134d0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x34,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24598,%ebx
test   %edx,%edx
je     805e7bd <fchmod@plt+0x1367d>
test   %eax,%eax
je     805e750 <fchmod@plt+0x13610>
mov    %eax,0x4(%esp)
lea    -0xd06b(%ebx),%eax
mov    %eax,(%esp)
call   80641c0 <fchmod@plt+0x19080>
test   %eax,%eax
je     805e7b6 <fchmod@plt+0x13676>
mov    %eax,(%esi)
xor    %eax,%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x2c(%esp)
call   805e6e0 <fchmod@plt+0x135a0>
test   %eax,%eax
js     805e7a0 <fchmod@plt+0x13660>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0xd06b(%ebx),%eax
mov    %eax,(%esp)
call   80641c0 <fchmod@plt+0x19080>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   804a690 <free@plt>
mov    0x1c(%esp),%eax
jmp    805e740 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edx
mov    %eax,0x1c(%esp)
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x1c(%esp),%eax
jmp    805e748 <fchmod@plt+0x13608>
mov    $0xfffffff4,%eax
jmp    805e748 <fchmod@plt+0x13608>
lea    -0xce54(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcf54(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad20(%ebx),%eax
movl   $0x168,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x244b6,%ebx
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
test   %esi,%esi
movl   $0x0,0x2c(%esp)
je     805e908 <fchmod@plt+0x137c8>
mov    0x40(%esp),%eax
lea    0x24(%esp),%edx
call   805e710 <fchmod@plt+0x135d0>
test   %eax,%eax
js     805e8d8 <fchmod@plt+0x13798>
lea    0x2c(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xcf1f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0xced0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xcf0d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %eax,(%esp)
call   8060180 <fchmod@plt+0x15040>
test   %eax,%eax
js     805e8d8 <fchmod@plt+0x13798>
test   %esi,%esi
je     805e88f <fchmod@plt+0x1374f>
mov    0x28(%esp),%edx
test   %edx,%edx
je     805e926 <fchmod@plt+0x137e6>
mov    0x48(%esp),%eax
test   %eax,%eax
je     805e8b3 <fchmod@plt+0x13773>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     805e91d <fchmod@plt+0x137dd>
mov    0x48(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8063f20 <fchmod@plt+0x18de0>
test   %eax,%eax
js     805e8d8 <fchmod@plt+0x13798>
test   %esi,%esi
je     805e8c9 <fchmod@plt+0x13789>
mov    0x28(%esp),%eax
test   %eax,%eax
je     805e8c9 <fchmod@plt+0x13789>
mov    %eax,(%esi)
movl   $0x0,0x28(%esp)
mov    0x2c(%esp),%edx
xor    %esi,%esi
jmp    805e8de <fchmod@plt+0x1379e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edx
mov    %eax,%esi
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
add    $0x34,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    805e824 <fchmod@plt+0x136e4>
xor    %edx,%edx
mov    $0xffffffea,%esi
jmp    805e8de <fchmod@plt+0x1379e>
xor    %edx,%edx
mov    $0xfffffffe,%esi
jmp    805e8de <fchmod@plt+0x1379e>
mov    0x2c(%esp),%edx
mov    $0xfffffffe,%esi
jmp    805e8de <fchmod@plt+0x1379e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2436b,%ebx
test   %eax,%eax
je     805e984 <fchmod@plt+0x13844>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     805e980 <fchmod@plt+0x13840>
cmpb   $0x2f,(%eax)
jne    805e97b <fchmod@plt+0x1383b>
lea    0x1(%eax),%edx
nop
mov    %edx,%eax
add    $0x1,%edx
cmpb   $0x2f,-0x1(%edx)
je     805e970 <fchmod@plt+0x13830>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805e97b <fchmod@plt+0x1383b>
lea    -0xcc3d(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf66f(%ebx),%eax
movl   $0x64d,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x242f4,%ebx
test   %ebp,%ebp
je     805ea0d <fchmod@plt+0x138cd>
mov    $0xd,%ecx
mov    %ebp,%esi
lea    -0xce66(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0xce61(%ebx),%edx
seta   %cl
setb   %al
cmp    %al,%cl
je     805ea03 <fchmod@plt+0x138c3>
lea    -0xcdf9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
lea    0x5(%ebp),%edx
test   %eax,%eax
cmove  %ebp,%edx
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xcc11(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xce04(%ebx),%eax
movl   $0x247,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24264,%ebx
test   %eax,%eax
je     805eb30 <fchmod@plt+0x139f0>
mov    0x34(%esp),%edx
test   %edx,%edx
je     805eb06 <fchmod@plt+0x139c6>
lea    -0xcde5(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80627b0 <fchmod@plt+0x17670>
test   %eax,%eax
je     805eaf0 <fchmod@plt+0x139b0>
call   805e940 <fchmod@plt+0x13800>
test   %eax,%eax
mov    %eax,%esi
je     805eaf0 <fchmod@plt+0x139b0>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804aca0 <strchrnul@plt>
mov    %eax,%ebp
sub    %esi,%ebp
cmp    $0x7,%ebp
jle    805eaf0 <fchmod@plt+0x139b0>
sub    $0x8,%eax
lea    -0xcdd4(%ebx),%ecx
movl   $0x8,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
mov    %eax,%edi
jne    805eaf0 <fchmod@plt+0x139b0>
lea    -0x8(%ebp),%edx
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804a840 <__strndup@plt>
test   %eax,%eax
je     805eaff <fchmod@plt+0x139bf>
mov    0x34(%esp),%ecx
mov    %eax,(%ecx)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0xfffffffe,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xfffffff4,%edi
jmp    805eae0 <fchmod@plt+0x139a0>
lea    -0xcc51(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcdd3(%ebx),%eax
movl   $0x6af,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xcc51(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x6ae,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24144,%ebx
mov    0x34(%esp),%eax
test   %edi,%edi
je     805ebf0 <fchmod@plt+0x13ab0>
test   %al,%al
jne    805ebd0 <fchmod@plt+0x13a90>
movsbl (%edi),%eax
cmp    $0x5f,%al
sete   %cl
test   %al,%al
sete   %dl
or     %dl,%cl
mov    %cl,0xf(%esp)
jne    805ebf0 <fchmod@plt+0x13ab0>
mov    %edi,%ebp
lea    -0xcd20(%ebx),%esi
jmp    805ebb3 <fchmod@plt+0x13a73>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
movsbl 0x0(%ebp),%eax
test   %al,%al
je     805ec08 <fchmod@plt+0x13ac8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805eba8 <fchmod@plt+0x13a68>
movzbl 0xf(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xcdf9(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
cmovne %eax,%edi
jmp    805eb82 <fchmod@plt+0x13a42>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0xf(%esp)
movzbl 0xf(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%edx
sub    %edi,%edx
cmp    $0x1000,%edx
setle  0xf(%esp)
movzbl 0xf(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x85c,%esp
mov    0x10(%ebp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x24070,%ebx
mov    0x8(%ebp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,-0x1c(%ebp)
xor    %ecx,%ecx
mov    0xc(%ebp),%esi
test   %eax,%eax
mov    %eax,-0x854(%ebp)
je     805ef8d <fchmod@plt+0x13e4d>
test   %esi,%esi
js     805ef63 <fchmod@plt+0x13e23>
test   %edi,%edi
je     805eebb <fchmod@plt+0x13d7b>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805eb60 <fchmod@plt+0x13a20>
test   %al,%al
je     805ef4f <fchmod@plt+0x13e0f>
mov    %edi,(%esp)
lea    -0xcd61(%ebx),%edi
call   805e9b0 <fchmod@plt+0x13870>
test   %esi,%esi
mov    %eax,-0x840(%ebp)
jne    805eed5 <fchmod@plt+0x13d95>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,-0x84c(%ebp)
je     805ef2a <fchmod@plt+0x13dea>
mov    -0x840(%ebp),%eax
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,%edi
lea    -0x81c(%ebp),%eax
mov    %eax,-0x848(%ebp)
lea    -0x1133e(%ebx),%eax
mov    %eax,-0x830(%ebp)
mov    -0x84c(%ebp),%eax
movl   $0x800,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x848(%ebp),%eax
mov    %eax,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     805ef0a <fchmod@plt+0x13dca>
mov    -0x848(%ebp),%esi
mov    %esi,(%esp)
call   8064030 <fchmod@plt+0x18ef0>
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     805ecf6 <fchmod@plt+0x13bb6>
add    $0x1,%eax
movl   $0x3a,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
mov    %eax,-0x82c(%ebp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,-0x850(%ebp)
je     805ecf6 <fchmod@plt+0x13bb6>
movb   $0x0,(%eax)
lea    -0x820(%ebp),%eax
mov    %eax,-0x838(%ebp)
mov    %eax,0xc(%esp)
mov    -0x830(%ebp),%eax
mov    %esi,(%esp)
movl   $0x0,-0x820(%ebp)
00
mov    %eax,0x8(%esp)
lea    -0x824(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %eax,-0x834(%ebp)
call   8063fc0 <fchmod@plt+0x18e80>
test   %eax,%eax
mov    %eax,%esi
je     805ecf6 <fchmod@plt+0x13bb6>
lea    -0xcdf9(%ebx),%eax
mov    %eax,-0x844(%ebp)
jmp    805ee38 <fchmod@plt+0x13cf8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x5(%edi),%eax
cmp    %eax,%edx
jne    805ee02 <fchmod@plt+0x13cc2>
mov    -0x844(%ebp),%eax
movl   $0x5,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
jne    805ee02 <fchmod@plt+0x13cc2>
mov    -0x840(%ebp),%eax
lea    0x5(%esi),%ecx
mov    %edi,0x8(%esp)
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
je     805ee70 <fchmod@plt+0x13d30>
mov    -0x838(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x830(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x834(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x82c(%ebp),%eax
mov    %eax,(%esp)
call   8063fc0 <fchmod@plt+0x18e80>
test   %eax,%eax
mov    %eax,%esi
je     805ecf6 <fchmod@plt+0x13bb6>
mov    -0x824(%ebp),%edx
cmp    %edi,%edx
jne    805edc0 <fchmod@plt+0x13c80>
mov    -0x840(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,-0x83c(%ebp)
mov    %eax,0x4(%esp)
call   804a770 <memcmp@plt>
mov    -0x83c(%ebp),%edx
test   %eax,%eax
jne    805edc0 <fchmod@plt+0x13c80>
mov    -0x850(%ebp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
je     805ef45 <fchmod@plt+0x13e05>
mov    -0x854(%ebp),%ecx
xor    %esi,%esi
mov    %eax,(%ecx)
mov    -0x84c(%ebp),%eax
mov    %eax,(%esp)
call   804a730 <fclose@plt>
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    805efb7 <fchmod@plt+0x13e77>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xce66(%ebx),%eax
test   %esi,%esi
mov    %eax,-0x840(%ebp)
lea    -0xcd61(%ebx),%edi
je     805ecae <fchmod@plt+0x13b6e>
sub    $0x30,%esp
lea    0x23(%esp),%edi
and    $0xfffffff0,%edi
lea    -0xcd4f(%ebx),%eax
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x19,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804b120 <__sprintf_chk@plt>
jmp    805ecae <fchmod@plt+0x13b6e>
mov    -0x84c(%ebp),%eax
mov    %eax,(%esp)
call   804a700 <ferror@plt>
test   %eax,%eax
je     805ef59 <fchmod@plt+0x13e19>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    805ee93 <fchmod@plt+0x13d53>
call   804acd0 <__errno_location@plt>
mov    $0xfffffffd,%esi
mov    (%eax),%eax
mov    %eax,%edx
neg    %edx
cmp    $0x2,%eax
cmovne %edx,%esi
jmp    805eea1 <fchmod@plt+0x13d61>
mov    $0xfffffff4,%esi
jmp    805ee93 <fchmod@plt+0x13d53>
mov    $0xffffffea,%esi
jmp    805eea1 <fchmod@plt+0x13d61>
mov    $0xfffffffe,%esi
jmp    805ee93 <fchmod@plt+0x13d53>
lea    -0xcc21(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcd83(%ebx),%eax
movl   $0x3e6,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xcc21(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x3e5,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23ce5,%ebx
test   %esi,%esi
je     805f03a <fchmod@plt+0x13efa>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xce66(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805ec30 <fchmod@plt+0x13af0>
test   %eax,%eax
js     805f024 <fchmod@plt+0x13ee4>
mov    0x1c(%esp),%edi
lea    -0xcd3e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063990 <fchmod@plt+0x18850>
cmp    %eax,%edi
je     805f030 <fchmod@plt+0x13ef0>
test   %eax,%eax
je     805f020 <fchmod@plt+0x13ee0>
movb   $0x0,(%eax)
mov    0x1c(%esp),%edi
mov    %edi,(%esi)
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%edi)
mov    0x1c(%esp),%edi
jmp    805f020 <fchmod@plt+0x13ee0>
lea    -0xcc32(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x581,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23c3c,%ebx
sub    $0x20,%esp
lea    0x18(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x18(%esp)
call   805efc0 <fchmod@plt+0x13e80>
test   %eax,%eax
mov    %eax,%esi
js     805f10e <fchmod@plt+0x13fce>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0xce66(%ebx),%eax
mov    %eax,(%esp)
call   805ec30 <fchmod@plt+0x13af0>
test   %eax,%eax
js     805f138 <fchmod@plt+0x13ff8>
mov    0x1c(%esp),%edi
mov    0x18(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80627b0 <fchmod@plt+0x17670>
mov    0x38(%esp),%edx
test   %eax,%eax
lea    -0x1(%eax),%esi
cmove  %edi,%esi
test   %edx,%edx
je     805f0f7 <fchmod@plt+0x13fb7>
mov    %esi,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
je     805f13c <fchmod@plt+0x13ffc>
mov    0x38(%esp),%ecx
mov    0x1c(%esp),%edi
mov    %eax,(%ecx)
mov    0x34(%esp),%eax
test   %eax,%eax
je     805f128 <fchmod@plt+0x13fe8>
movb   $0x0,(%esi)
mov    0x34(%esp),%edx
xor    %esi,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%edx)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
xor    %esi,%esi
call   804a690 <free@plt>
jmp    805f10e <fchmod@plt+0x13fce>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
jmp    805f10e <fchmod@plt+0x13fce>
mov    0x1c(%esp),%eax
mov    $0xfffffff4,%esi
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    805f10e <fchmod@plt+0x13fce>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23b55,%ebx
movl   $0x0,0x1c(%esp)
test   %edi,%edi
je     805f1ba <fchmod@plt+0x1407a>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805f070 <fchmod@plt+0x13f30>
test   %eax,%eax
mov    %eax,%esi
js     805f1a5 <fchmod@plt+0x14065>
mov    0x1c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805ea40 <fchmod@plt+0x13900>
mov    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0xcc64(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xce27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcdd3(%ebx),%eax
movl   $0x6cc,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23ab6,%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   80624c0 <fchmod@plt+0x17380>
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   80624c0 <fchmod@plt+0x17380>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23a7b,%ebx
sub    $0x16c,%esp
mov    %eax,0x28(%esp)
mov    0x184(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x15c(%esp)
xor    %eax,%eax
test   %edx,%edx
lea    -0x11546(%ebx),%eax
cmovne %edx,%eax
mov    0x180(%esp),%edx
mov    %eax,0xc(%esp)
lea    -0xdbce(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     805f45e <fchmod@plt+0x1431e>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     805f424 <fchmod@plt+0x142e4>
lea    0x44(%esp),%eax
mov    %eax,0x20(%esp)
lea    -0x1033a(%ebx),%eax
lea    0x40(%esp),%ebp
mov    %eax,0x2c(%esp)
nop
mov    0x20(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804aaf0 <readdir64_r@plt>
test   %eax,%eax
jne    805f3e8 <fchmod@plt+0x142a8>
mov    0x40(%esp),%edi
test   %edi,%edi
je     805f420 <fchmod@plt+0x142e0>
mov    0x24(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80643d0 <fchmod@plt+0x19290>
test   %al,%al
je     805f2d8 <fchmod@plt+0x14198>
mov    0x2c(%esp),%eax
add    $0x13,%edi
mov    %edi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80645f0 <fchmod@plt+0x194b0>
test   %eax,%eax
mov    %eax,%edi
je     805f443 <fchmod@plt+0x14303>
mov    %eax,(%esp)
call   80624c0 <fchmod@plt+0x17380>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80608d0 <fchmod@plt+0x15790>
cmp    $0xffffffef,%eax
je     805f3c0 <fchmod@plt+0x14280>
test   %eax,%eax
js     805f44a <fchmod@plt+0x1430a>
lea    0x0(%esi),%esi
jne    805f2d8 <fchmod@plt+0x14198>
lea    -0xcbc3(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xcb7f(%ebx),%eax
mov    %edi,0x14(%esp)
mov    %eax,0xc(%esp)
movl   $0x52,0x8(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %edi,(%esp)
call   804a690 <free@plt>
jmp    805f2d8 <fchmod@plt+0x14198>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xcbfc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xcb7f(%ebx),%eax
mov    %edi,0x14(%esp)
mov    %eax,0xc(%esp)
movl   $0x4c,0x8(%esp)
jmp    805f396 <fchmod@plt+0x14256>
lea    0x0(%esi),%esi
neg    %eax
mov    %eax,%edi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
mov    0x15c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    805f465 <fchmod@plt+0x14325>
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
jmp    805f3ec <fchmod@plt+0x142ac>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,%edi
neg    %edi
cmp    $0x2,%eax
cmove  %esi,%edi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
jmp    805f400 <fchmod@plt+0x142c0>
mov    $0xfffffff4,%edi
jmp    805f3ec <fchmod@plt+0x142ac>
mov    %edi,(%esp)
mov    %eax,0x20(%esp)
call   804a690 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,%edi
jmp    805f3ec <fchmod@plt+0x142ac>
mov    $0xfffffff4,%edi
jmp    805f435 <fchmod@plt+0x142f5>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23838,%ebx
test   %eax,%eax
mov    0x54(%esp),%esi
mov    %eax,0x2c(%esp)
je     805f5f7 <fchmod@plt+0x144b7>
test   %edx,%edx
mov    %edx,%ebp
je     805f5cd <fchmod@plt+0x1448d>
mov    %esi,(%esp)
call   8062760 <fchmod@plt+0x17620>
test   %eax,%eax
je     805f5c0 <fchmod@plt+0x14480>
lea    -0x225e4(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x22614(%ebx),%eax
mov    %eax,(%esp)
call   8060700 <fchmod@plt+0x155c0>
test   %eax,%eax
mov    %eax,%edi
je     805f5c0 <fchmod@plt+0x14480>
test   %esi,%esi
je     805f568 <fchmod@plt+0x14428>
mov    (%esi),%eax
test   %eax,%eax
je     805f568 <fchmod@plt+0x14428>
lea    -0xcba4(%ebx),%ecx
mov    %ecx,0x28(%esp)
jmp    805f4fb <fchmod@plt+0x143bb>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esi
je     805f568 <fchmod@plt+0x14428>
mov    (%esi),%eax
test   %eax,%eax
je     805f568 <fchmod@plt+0x14428>
mov    0x50(%esp),%edx
mov    %eax,(%esp)
mov    %edi,%eax
mov    %ebp,0x4(%esp)
call   805f230 <fchmod@plt+0x140f0>
cmp    $0xfffffff4,%eax
je     805f5b8 <fchmod@plt+0x14478>
test   %eax,%eax
jns    805f4f0 <fchmod@plt+0x143b0>
neg    %eax
mov    %eax,(%esp)
call   804aa30 <strerror@plt>
mov    %eax,0x18(%esp)
mov    (%esi),%eax
movl   $0x79,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0xcb75(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x4,%esi
jne    805f4f5 <fchmod@plt+0x143b5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8060b50 <fchmod@plt+0x15a10>
test   %eax,%eax
mov    %eax,%esi
je     805f5b8 <fchmod@plt+0x14478>
mov    %edi,(%esp)
call   8060b30 <fchmod@plt+0x159f0>
lea    -0x23ac4(%ebx),%edx
mov    %edx,0xc(%esp)
mov    %esi,(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
call   804af20 <qsort@plt>
mov    0x2c(%esp),%eax
mov    %esi,(%eax)
mov    %edi,(%esp)
call   8060880 <fchmod@plt+0x15740>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8060b00 <fchmod@plt+0x159c0>
add    $0x3c,%esp
mov    $0xfffffff4,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xcb57(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcbac(%ebx),%eax
movl   $0x68,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xcb57(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcbb1(%ebx),%eax
movl   $0x67,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x23674,%ebx
mov    0x34(%esp),%ebp
test   %edi,%edi
je     805f6c1 <fchmod@plt+0x14581>
test   %ebp,%ebp
je     805f697 <fchmod@plt+0x14557>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8062e40 <fchmod@plt+0x17d00>
test   %eax,%eax
mov    %eax,%esi
je     805f690 <fchmod@plt+0x14550>
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   805f470 <fchmod@plt+0x14330>
mov    %eax,%edi
mov    %esi,(%esp)
call   8062df0 <fchmod@plt+0x17cb0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff4,%edi
jmp    805f67a <fchmod@plt+0x1453a>
lea    -0xcb39(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcbac(%ebx),%eax
movl   $0x8d,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xcb39(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcbde(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcbb1(%ebx),%eax
movl   $0x8c,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x235b4,%ebx
mov    0x30(%esp),%esi
mov    (%eax),%eax
jmp    805f728 <fchmod@plt+0x145e8>
xchg   %ax,%ax
lea    0x8(%eax),%ebp
mov    -0x4(%ebp),%edi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     805f748 <fchmod@plt+0x14608>
mov    %ebp,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    805f710 <fchmod@plt+0x145d0>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%edi)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x82c,%esp
mov    0x840(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2352e,%ebx
mov    0x844(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x81c(%esp)
xor    %ecx,%ecx
test   %eax,%eax
je     805f89d <fchmod@plt+0x1475d>
test   %edi,%edi
je     805f873 <fchmod@plt+0x14733>
lea    -0xd449(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     805f828 <fchmod@plt+0x146e8>
lea    0x1c(%esp),%ebp
mov    %eax,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %ebp,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     805f838 <fchmod@plt+0x146f8>
mov    %ebp,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805f867 <fchmod@plt+0x14727>
mov    %eax,(%esp)
call   8064030 <fchmod@plt+0x18ef0>
mov    %ebp,(%edi)
xor    %edi,%edi
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    0x81c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    805f86e <fchmod@plt+0x1472e>
add    $0x82c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804acd0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
jmp    805f809 <fchmod@plt+0x146c9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a700 <ferror@plt>
test   %eax,%eax
je     805f860 <fchmod@plt+0x14720>
call   804acd0 <__errno_location@plt>
mov    $0xfffffffb,%edi
mov    (%eax),%eax
mov    %eax,%edx
neg    %edx
test   %eax,%eax
cmovne %edx,%edi
jmp    805f801 <fchmod@plt+0x146c1>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1c(%esp)
jmp    805f7e7 <fchmod@plt+0x146a7>
mov    $0xfffffff4,%edi
jmp    805f801 <fchmod@plt+0x146c1>
call   806ed90 <fchmod@plt+0x23c50>
lea    -0xca85(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf6f1(%ebx),%eax
movl   $0x60,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca85(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf77f(%ebx),%eax
movl   $0x5f,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x233ce,%ebx
test   %eax,%eax
je     805fac9 <fchmod@plt+0x14989>
mov    0xa4(%esp),%edx
test   %edx,%edx
je     805fa9f <fchmod@plt+0x1495f>
lea    -0xd449(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     805f968 <fchmod@plt+0x14828>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804ad20 <fileno@plt>
lea    0x20(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a920 <__fxstat64@plt>
test   %eax,%eax
js     805fa18 <fchmod@plt+0x148d8>
mov    0x50(%esp),%eax
mov    0x4c(%esp),%esi
cmp    $0x0,%eax
jle    805f980 <fchmod@plt+0x14840>
xor    %edx,%edx
mov    $0xfffffff9,%esi
jmp    805f9f7 <fchmod@plt+0x148b7>
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
add    $0x8c,%esp
pop    %ebx
neg    %esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
jl     805fa61 <fchmod@plt+0x14921>
cmp    $0x400000,%esi
ja     805f956 <fchmod@plt+0x14816>
test   %eax,%eax
jle    805fa58 <fchmod@plt+0x14918>
xor    %ebp,%ebp
xor    %edi,%edi
jmp    805f9dd <fchmod@plt+0x1489d>
lea    0x0(%esi,%eiz,1),%esi
lea    (%eax,%edi,1),%ebp
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   804a970 <fread@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
je     805fa28 <fchmod@plt+0x148e8>
add    %esi,%esi
add    %eax,%edi
cmp    $0x400000,%esi
ja     805fa50 <fchmod@plt+0x14910>
mov    %edx,%ebp
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
jne    805f9a0 <fchmod@plt+0x14860>
mov    %ebp,%edx
mov    $0xfffffff4,%esi
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a730 <fclose@plt>
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804acd0 <__errno_location@plt>
xor    %edx,%edx
mov    (%eax),%esi
neg    %esi
jmp    805f9f7 <fchmod@plt+0x148b7>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a700 <ferror@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
je     805fa70 <fchmod@plt+0x14930>
call   804acd0 <__errno_location@plt>
mov    0x18(%esp),%edx
mov    (%eax),%esi
neg    %esi
jmp    805f9f7 <fchmod@plt+0x148b7>
lea    0x0(%esi),%esi
mov    $0xfffffff9,%esi
jmp    805f9f7 <fchmod@plt+0x148b7>
nop
cmp    $0x0,%esi
ja     805f996 <fchmod@plt+0x14856>
mov    $0x800,%esi
jmp    805f996 <fchmod@plt+0x14856>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%eax
movb   $0x0,0x0(%ebp)
mov    %edx,(%eax)
mov    0xa8(%esp),%eax
test   %eax,%eax
je     805fa98 <fchmod@plt+0x14958>
mov    0xa8(%esp),%eax
xor    %edx,%edx
mov    %edi,(%eax)
jmp    805f9f7 <fchmod@plt+0x148b7>
xor    %edx,%edx
jmp    805f9f7 <fchmod@plt+0x148b7>
lea    -0xca94(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcb0d(%ebx),%eax
movl   $0x7e,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca94(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf77f(%ebx),%eax
movl   $0x7d,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x231a8,%ebx
test   %eax,%eax
mov    %edx,0x18(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
je     8060153 <fchmod@plt+0x15013>
mov    0x18(%esp),%edx
test   %edx,%edx
je     8060129 <fchmod@plt+0x14fe9>
lea    0x3c(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805f8d0 <fchmod@plt+0x14790>
test   %eax,%eax
js     80600ee <fchmod@plt+0x14fae>
mov    0x3c(%esp),%edi
movzbl (%edi),%esi
mov    %esi,%eax
test   %al,%al
je     805fc5d <fchmod@plt+0x14b1d>
lea    -0xcf0f(%ebx),%eax
xor    %ebp,%ebp
movl   $0xffffffff,0x20(%esp)
movl   $0xffffffff,0x28(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0x2c(%esp)
nop
cmp    $0xa,%ebp
ja     805fbf0 <fchmod@plt+0x14ab0>
mov    -0xcad8(%ebx,%ebp,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    %esi,%eax
movsbl %al,%ecx
lea    -0xcaf6(%ebx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x24(%esp)
call   804ab10 <strchr@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     8060018 <fchmod@plt+0x14ed8>
mov    $0x9,%ebp
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%esi
mov    %esi,%eax
test   %al,%al
jne    805fbb0 <fchmod@plt+0x14a70>
lea    -0x2(%ebp),%eax
cmp    $0x6,%eax
ja     805fc5d <fchmod@plt+0x14b1d>
mov    0x40(%esp),%eax
mov    0x1c(%esp),%edx
movb   $0x0,(%eax,%edx,1)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     805fc20 <fchmod@plt+0x14ae0>
mov    0x14(%esp),%edx
movb   $0x0,(%eax,%edx,1)
cmp    $0x3,%ebp
je     806010f <fchmod@plt+0x14fcf>
mov    0x20(%esp),%edx
cmp    $0xffffffff,%edx
je     805fc3a <fchmod@plt+0x14afa>
mov    0x40(%esp),%eax
movb   $0x0,(%eax,%edx,1)
mov    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   *0x70(%esp)
test   %eax,%eax
js     806007e <fchmod@plt+0x14f3e>
xor    %esi,%esi
mov    0x40(%esp),%edx
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x3c(%esp),%edx
mov    %edx,(%esp)
call   804a690 <free@plt>
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
cmp    $0x5c,%al
je     8060008 <fchmod@plt+0x14ec8>
movsbl %al,%esi
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    $0x0,%eax
cmovne %eax,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    $0x7,%ebp
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80649d0 <fchmod@plt+0x19890>
test   %eax,%eax
je     8060079 <fchmod@plt+0x14f39>
mov    0x14(%esp),%ecx
mov    %esi,%edx
mov    0x4c(%esp),%eax
mov    %dl,(%eax,%ecx,1)
lea    0x1(%ecx),%eax
mov    %eax,0x14(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    %esi,%eax
cmp    $0x22,%al
je     805ff38 <fchmod@plt+0x14df8>
cmp    $0x5c,%al
jne    805fce0 <fchmod@plt+0x14ba0>
mov    $0x8,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    %esi,%eax
movsbl %al,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     805ff58 <fchmod@plt+0x14e18>
mov    0x40(%esp),%eax
mov    0x1c(%esp),%edx
movb   $0x0,(%eax,%edx,1)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     805fd79 <fchmod@plt+0x14c39>
mov    0x14(%esp),%edx
movb   $0x0,(%eax,%edx,1)
mov    0x28(%esp),%edx
cmp    $0xffffffff,%edx
je     805fd8a <fchmod@plt+0x14c4a>
mov    0x4c(%esp),%eax
movb   $0x0,(%eax,%edx,1)
mov    0x20(%esp),%edx
cmp    $0xffffffff,%edx
je     805fd9b <fchmod@plt+0x14c5b>
mov    0x40(%esp),%eax
movb   $0x0,(%eax,%edx,1)
mov    0x74(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   *0x70(%esp)
test   %eax,%eax
js     806007e <fchmod@plt+0x14f3e>
movl   $0x0,0x4c(%esp)
xor    %ebp,%ebp
movl   $0x0,0x48(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x1c(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
mov    %esi,%eax
cmp    $0x27,%al
je     805ff38 <fchmod@plt+0x14df8>
cmp    $0x5c,%al
jne    805fce0 <fchmod@plt+0x14ba0>
mov    $0x6,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    $0x3,%ebp
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805fbf0 <fchmod@plt+0x14ab0>
jmp    805fce0 <fchmod@plt+0x14ba0>
nop
mov    %esi,%eax
mov    $0x5,%ebp
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805fbf0 <fchmod@plt+0x14ab0>
jmp    805fce0 <fchmod@plt+0x14ba0>
nop
mov    %esi,%eax
movsbl %al,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    805ff48 <fchmod@plt+0x14e08>
mov    %esi,%eax
cmp    $0x3d,%al
je     80600c8 <fchmod@plt+0x14f88>
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8060102 <fchmod@plt+0x14fc2>
mov    0x20(%esp),%eax
cmp    $0xffffffff,%eax
cmove  0x1c(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x1c(%esp),%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   80649d0 <fchmod@plt+0x19890>
test   %eax,%eax
je     8060079 <fchmod@plt+0x14f39>
mov    0x1c(%esp),%ecx
mov    %esi,%edx
mov    0x40(%esp),%eax
mov    %dl,(%eax,%ecx,1)
lea    0x1(%ecx),%eax
mov    %eax,0x1c(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
nop
mov    %esi,%eax
movsbl %al,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     805ff90 <fchmod@plt+0x14e50>
mov    0x40(%esp),%eax
mov    0x1c(%esp),%edx
movb   $0x0,(%eax,%edx,1)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     805fd8a <fchmod@plt+0x14c4a>
mov    0x14(%esp),%edx
movb   $0x0,(%eax,%edx,1)
jmp    805fd8a <fchmod@plt+0x14c4a>
xchg   %ax,%ax
mov    $0x2,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
movl   $0x0,0x1c(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
nop
mov    %esi,%eax
cmp    $0x5c,%al
je     80600b0 <fchmod@plt+0x14f70>
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80600f5 <fchmod@plt+0x14fb5>
mov    0x28(%esp),%eax
cmp    $0xffffffff,%eax
cmove  0x14(%esp),%eax
mov    %eax,0x28(%esp)
jmp    805fce0 <fchmod@plt+0x14ba0>
nop
mov    %esi,%eax
cmp    $0x27,%al
je     80600a0 <fchmod@plt+0x14f60>
cmp    $0x22,%al
je     80600da <fchmod@plt+0x14f9a>
cmp    $0x5c,%al
je     80600e4 <fchmod@plt+0x14fa4>
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805fbf0 <fchmod@plt+0x14ab0>
mov    0x14(%esp),%ebp
mov    %ebp,%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80649d0 <fchmod@plt+0x19890>
test   %eax,%eax
je     8060079 <fchmod@plt+0x14f39>
mov    0x4c(%esp),%eax
mov    %esi,%edx
mov    %dl,(%eax,%ebp,1)
mov    %ebp,%eax
mov    $0x3,%ebp
add    $0x1,%eax
mov    %eax,0x14(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
nop
mov    $0xa,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    805fbf0 <fchmod@plt+0x14ab0>
mov    0x1c(%esp),%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   80649d0 <fchmod@plt+0x19890>
test   %eax,%eax
je     8060079 <fchmod@plt+0x14f39>
mov    0x1c(%esp),%ecx
mov    %esi,%edx
mov    $0x1,%ebp
mov    0x40(%esp),%eax
movl   $0xffffffff,0x20(%esp)
mov    %dl,(%eax,%ecx,1)
lea    0x1(%ecx),%eax
mov    %eax,0x1c(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    $0xfffffff4,%eax
mov    0x4c(%esp),%edx
mov    %eax,0x14(%esp)
mov    %edx,(%esp)
call   804a690 <free@plt>
mov    0x14(%esp),%eax
mov    %eax,%esi
jmp    805fc5f <fchmod@plt+0x14b1f>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x5,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
mov    $0x4,%ebp
movl   $0xffffffff,0x28(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
lea    0x0(%esi),%esi
mov    $0x2,%ebp
movl   $0xffffffff,0x28(%esp)
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    $0x7,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    $0x4,%ebp
jmp    805fbf0 <fchmod@plt+0x14ab0>
mov    %eax,%esi
jmp    805fc5f <fchmod@plt+0x14b1f>
movl   $0xffffffff,0x28(%esp)
jmp    805fce0 <fchmod@plt+0x14ba0>
movl   $0xffffffff,0x20(%esp)
jmp    805feaf <fchmod@plt+0x14d6f>
mov    0x28(%esp),%edx
cmp    $0xffffffff,%edx
je     805fc29 <fchmod@plt+0x14ae9>
mov    0x4c(%esp),%eax
movb   $0x0,(%eax,%edx,1)
jmp    805fc29 <fchmod@plt+0x14ae9>
lea    -0xcaac(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcafe(%ebx),%eax
movl   $0xcc,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xcaac(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xcb24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcb04(%ebx),%eax
movl   $0xcb,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22b2e,%ebx
sub    $0x28,%esp
mov    0x34(%esp),%edx
test   %edx,%edx
lea    -0xcf0d(%ebx),%eax
cmove  %eax,%edx
lea    0x38(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x235c4(%ebx),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   805fb00 <fchmod@plt+0x149c0>
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%eax
xor    %edx,%edx
cmp    %eax,0x4(%esp)
mov    $0xffffffff,%eax
seta   %dl
cmovae %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22aaa,%ebx
test   %eax,%eax
je     80602de <fchmod@plt+0x1519e>
test   %edx,%edx
je     80602b4 <fchmod@plt+0x15174>
mov    0x10(%edx),%ecx
test   %ecx,%ecx
je     8060268 <fchmod@plt+0x15128>
mov    0x14(%edx),%esi
mov    %esi,0x14(%ecx)
mov    0x14(%edx),%ecx
test   %ecx,%ecx
je     8060278 <fchmod@plt+0x15138>
mov    0x10(%edx),%esi
mov    %esi,0x10(%ecx)
mov    0x8(%edx),%ecx
test   %ecx,%ecx
je     806024a <fchmod@plt+0x1510a>
mov    0xc(%edx),%esi
mov    %esi,0xc(%ecx)
mov    0x8(%edx),%ecx
mov    0xc(%edx),%edx
test   %edx,%edx
je     8060280 <fchmod@plt+0x15140>
mov    %ecx,0x8(%edx)
mov    0x10(%eax),%edx
test   %edx,%edx
je     806028a <fchmod@plt+0x1514a>
sub    $0x1,%edx
mov    %edx,0x10(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x14(%edx),%ecx
mov    %ecx,0xc(%eax)
mov    0x14(%edx),%ecx
test   %ecx,%ecx
jne    8060234 <fchmod@plt+0x150f4>
lea    0x0(%esi),%esi
mov    0x10(%edx),%ecx
mov    %ecx,0x8(%eax)
jmp    806023a <fchmod@plt+0x150fa>
mov    0x20(%esp),%edx
mov    %ecx,0x18(%eax,%edx,4)
jmp    8060254 <fchmod@plt+0x15114>
lea    -0xc9f6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xca5a(%ebx),%eax
movl   $0x109,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc9f6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf66f(%ebx),%eax
movl   $0xf3,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc9f6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x13350(%ebx),%eax
movl   $0xf2,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2299a,%ebx
test   %eax,%eax
je     80603ec <fchmod@plt+0x152ac>
test   %edx,%edx
je     80603c2 <fchmod@plt+0x15282>
mov    0x20(%esp),%ecx
lea    0x18(%eax,%ecx,4),%ecx
mov    (%ecx),%esi
movl   $0x0,0xc(%edx)
mov    %esi,0x8(%edx)
mov    (%ecx),%esi
test   %esi,%esi
je     806034d <fchmod@plt+0x1520d>
mov    %edx,0xc(%esi)
mov    %edx,(%ecx)
mov    0xc(%eax),%ecx
movl   $0x0,0x10(%edx)
mov    %ecx,0x14(%edx)
mov    0xc(%eax),%ecx
test   %ecx,%ecx
je     8060388 <fchmod@plt+0x15248>
mov    0x8(%eax),%esi
test   %esi,%esi
je     8060416 <fchmod@plt+0x152d6>
mov    %edx,0x10(%ecx)
mov    0x10(%eax),%esi
mov    %edx,0xc(%eax)
lea    0x1(%esi),%edx
test   %edx,%edx
mov    %edx,0x10(%eax)
je     8060398 <fchmod@plt+0x15258>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x8(%eax),%ecx
test   %ecx,%ecx
jne    8060440 <fchmod@plt+0x15300>
mov    %edx,0x8(%eax)
jmp    8060371 <fchmod@plt+0x15231>
lea    -0xca17(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xca5a(%ebx),%eax
movl   $0xee,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca17(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf66f(%ebx),%eax
movl   $0xd8,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca17(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x13350(%ebx),%eax
movl   $0xd7,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca17(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xca47(%ebx),%eax
movl   $0xe5,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca17(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xca48(%ebx),%eax
movl   $0xe8,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22832,%ebx
test   %ecx,%ecx
je     80604ad <fchmod@plt+0x1536d>
mov    0x8(%ecx),%esi
mov    0x4(%ecx),%eax
cmp    %eax,%esi
jae    80604af <fchmod@plt+0x1536f>
lea    0x1(%esi),%eax
mov    %eax,0x8(%ecx)
imul   %ebp,%esi
mov    (%edi),%eax
lea    0xc(%eax,%esi,1),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
lea    (%eax,%eax,1),%esi
call   80638d0 <fchmod@plt+0x18790>
cmp    $0x200,%esi
mov    $0x200,%edx
cmovae %esi,%edx
imul   %ebp,%edx
lea    0xb(%eax,%edx,1),%ecx
neg    %eax
and    %eax,%ecx
xor    %edx,%edx
lea    -0xc(%ecx),%eax
div    %ebp
mov    %ecx,(%esp)
mov    %eax,%esi
call   804a9f0 <malloc@plt>
test   %eax,%eax
je     80604fb <fchmod@plt+0x153bb>
mov    (%edi),%edx
mov    %eax,%ecx
mov    %esi,0x4(%eax)
xor    %esi,%esi
movl   $0x0,0x8(%eax)
mov    %edx,(%eax)
mov    %eax,(%edi)
jmp    8060496 <fchmod@plt+0x15356>
xor    %eax,%eax
jmp    80604a5 <fchmod@plt+0x15365>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x227a6,%ebx
test   %eax,%eax
mov    0x30(%esp),%ebp
je     806058c <fchmod@plt+0x1544c>
cmp    $0x7e,%edx
ja     8060562 <fchmod@plt+0x15422>
mov    0x18(%eax,%edx,4),%esi
test   %esi,%esi
jne    8060537 <fchmod@plt+0x153f7>
jmp    8060558 <fchmod@plt+0x15418>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%esi
test   %esi,%esi
je     8060558 <fchmod@plt+0x15418>
mov    %ebp,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   *0x4(%edi)
test   %eax,%eax
jne    8060530 <fchmod@plt+0x153f0>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xca0c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xca32(%ebx),%eax
movl   $0x168,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xca0c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x13350(%ebx),%eax
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x226e7,%ebx
test   %eax,%eax
je     8060669 <fchmod@plt+0x15529>
test   %edx,%edx
mov    %edx,%esi
je     806063f <fchmod@plt+0x154ff>
mov    (%edx),%eax
mov    %eax,(%esp)
call   *(%edi)
mov    $0x2040811,%edx
mov    %eax,%ecx
mul    %edx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x6,%edx
mov    %edx,%eax
shl    $0x7,%eax
sub    %edx,%eax
mov    %esi,%edx
sub    %eax,%ecx
mov    %edi,%eax
mov    %ecx,(%esp)
call   8060200 <fchmod@plt+0x150c0>
cmpb   $0x0,0x14(%edi)
je     8060630 <fchmod@plt+0x154f0>
mov    0x3ac(%ebx),%eax
mov    %esi,0x3ac(%ebx)
mov    %eax,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0xc9e9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf66f(%ebx),%eax
movl   $0x111,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc9e9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x13350(%ebx),%eax
movl   $0x110,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    0x8(%esp),%ecx
mov    $0x1505,%eax
movsbl (%ecx),%edx
test   %dl,%dl
je     80606cb <fchmod@plt+0x1558b>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
add    $0x1,%ecx
shl    $0x5,%esi
add    %esi,%edx
add    %edx,%eax
movsbl (%ecx),%edx
test   %dl,%dl
jne    80606b8 <fchmod@plt+0x15578>
pop    %esi
ret
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x225d7,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x225ab,%ebx
sub    $0x1c,%esp
call   80646c0 <fchmod@plt+0x19580>
test   %al,%al
mov    %eax,%ebp
je     80607d8 <fchmod@plt+0x15698>
mov    0x3b4(%ebx),%edx
test   %edx,%edx
je     8060828 <fchmod@plt+0x156e8>
mov    (%edx),%eax
mov    %eax,0x3b4(%ebx)
test   $0x1,%dl
mov    %edx,%edi
mov    $0x214,%esi
jne    8060800 <fchmod@plt+0x156c0>
test   $0x2,%edi
jne    8060810 <fchmod@plt+0x156d0>
mov    %esi,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%esi
rep stos %eax,%es:(%edi)
jne    80607c8 <fchmod@plt+0x15688>
and    $0x1,%esi
jne    80607c0 <fchmod@plt+0x15680>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%ecx
lea    -0x22ae4(%ebx),%eax
mov    0x34(%esp),%esi
movl   $0x0,0x10(%edx)
movl   $0x0,0xc(%edx)
test   %ecx,%ecx
cmovne 0x30(%esp),%eax
test   %esi,%esi
movl   $0x0,0x8(%edx)
mov    %eax,(%edx)
lea    -0x22ad4(%ebx),%eax
cmovne 0x34(%esp),%eax
mov    %eax,0x4(%edx)
mov    %ebp,%eax
mov    %al,0x14(%edx)
mov    %edx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
jmp    8060770 <fchmod@plt+0x15630>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%esi
je     8060770 <fchmod@plt+0x15630>
jmp    80607c0 <fchmod@plt+0x15680>
movl   $0x1,0x4(%esp)
movl   $0x214,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    8060770 <fchmod@plt+0x15630>
xor    %eax,%eax
jmp    80607b3 <fchmod@plt+0x15673>
lea    0x0(%esi),%esi
movb   $0x0,(%edx)
lea    0x1(%edx),%edi
mov    $0x213,%si
jmp    8060747 <fchmod@plt+0x15607>
nop
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%esi
jmp    8060753 <fchmod@plt+0x15613>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x214,%edx
lea    0x3b8(%ebx),%eax
call   8060470 <fchmod@plt+0x15330>
test   %eax,%eax
mov    %eax,%edx
jne    8060737 <fchmod@plt+0x155f7>
xor    %eax,%eax
jmp    80607b3 <fchmod@plt+0x15673>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
jne    8060867 <fchmod@plt+0x15727>
jmp    806086e <fchmod@plt+0x1572e>
xchg   %ax,%ax
mov    %esi,%eax
call   80605c0 <fchmod@plt+0x15480>
mov    0x8(%esi),%edx
test   %edx,%edx
jne    8060860 <fchmod@plt+0x15720>
add    $0x8,%esp
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22426,%ebx
test   %esi,%esi
je     80608b4 <fchmod@plt+0x15774>
mov    %esi,(%esp)
call   8060850 <fchmod@plt+0x15710>
cmpb   $0x0,0x14(%esi)
je     80608c0 <fchmod@plt+0x15780>
mov    0x3b4(%ebx),%eax
mov    %esi,0x3b4(%ebx)
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x223d4,%ebx
mov    0x34(%esp),%ebp
test   %edi,%edi
je     80609b5 <fchmod@plt+0x15875>
mov    %ebp,(%esp)
call   *(%edi)
mov    $0x2040811,%edx
mov    %ebp,(%esp)
mov    %eax,%ecx
mul    %edx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
lea    (%edx,%eax,1),%esi
shr    $0x6,%esi
mov    %esi,%eax
shl    $0x7,%eax
sub    %esi,%eax
sub    %eax,%ecx
mov    %edi,%eax
mov    %ecx,%edx
mov    %ecx,%esi
call   8060500 <fchmod@plt+0x153c0>
test   %eax,%eax
je     8060948 <fchmod@plt+0x15808>
mov    0x38(%esp),%edi
xor    %edx,%edx
cmp    %edi,0x4(%eax)
mov    $0xffffffef,%eax
cmovne %eax,%edx
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x14(%edi)
je     8060988 <fchmod@plt+0x15848>
mov    0x3ac(%ebx),%edx
test   %edx,%edx
je     80609a1 <fchmod@plt+0x15861>
mov    (%edx),%eax
mov    %eax,0x3ac(%ebx)
mov    0x38(%esp),%eax
mov    %ebp,(%edx)
mov    %eax,0x4(%edx)
mov    %edi,%eax
mov    %esi,(%esp)
call   8060310 <fchmod@plt+0x151d0>
add    $0x1c,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x18,(%esp)
call   804a9f0 <malloc@plt>
mov    %eax,%edx
test   %edx,%edx
jne    8060960 <fchmod@plt+0x15820>
mov    $0xfffffff4,%edx
jmp    8060938 <fchmod@plt+0x157f8>
mov    $0x18,%edx
lea    0x3b0(%ebx),%eax
call   8060470 <fchmod@plt+0x15330>
mov    %eax,%edx
jmp    8060996 <fchmod@plt+0x15856>
lea    -0xca02(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x13350(%ebx),%eax
movl   $0x175,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x222c5,%ebx
mov    0x20(%esp),%esi
mov    0x28(%esp),%ecx
test   %edx,%edx
je     8060a64 <fchmod@plt+0x15924>
test   %esi,%esi
je     8060a40 <fchmod@plt+0x15900>
mov    (%edx),%eax
cmp    $0xffffffff,%eax
je     8060a40 <fchmod@plt+0x15900>
test   %eax,%eax
xchg   %ax,%ax
je     8060a38 <fchmod@plt+0x158f8>
mov    0x10(%eax),%edi
mov    $0xffffffff,%esi
test   %edi,%edi
cmovne %edi,%esi
test   %ecx,%ecx
mov    %esi,(%edx)
je     8060a29 <fchmod@plt+0x158e9>
mov    (%eax),%edx
mov    %edx,(%ecx)
mov    0x4(%eax),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
jne    8060a12 <fchmod@plt+0x158d2>
nop
test   %ecx,%ecx
movl   $0xffffffff,(%edx)
je     8060a60 <fchmod@plt+0x15920>
movl   $0x0,(%ecx)
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8060a2c <fchmod@plt+0x158ec>
lea    -0xca27(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xca72(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xb716(%ebx),%eax
movl   $0x23f,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%eax
test   %eax,%eax
je     8060ab8 <fchmod@plt+0x15978>
mov    0x8(%eax),%edx
test   %edx,%edx
je     8060ab8 <fchmod@plt+0x15978>
mov    0x4(%edx),%esi
call   80605c0 <fchmod@plt+0x15480>
mov    %esi,%eax
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8060aad <fchmod@plt+0x1596d>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x221e6,%ebx
test   %esi,%esi
jne    8060ae8 <fchmod@plt+0x159a8>
jmp    8060af4 <fchmod@plt+0x159b4>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   8060a90 <fchmod@plt+0x15950>
test   %eax,%eax
jne    8060ae0 <fchmod@plt+0x159a0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
test   %esi,%esi
je     8060b28 <fchmod@plt+0x159e8>
mov    %esi,(%esp)
call   8060ac0 <fchmod@plt+0x15980>
mov    %esi,0x20(%esp)
add    $0x18,%esp
pop    %esi
jmp    8060880 <fchmod@plt+0x15740>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
pop    %esi
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     8060b40 <fchmod@plt+0x15a00>
mov    0x10(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22154,%ebx
mov    0x10(%edi),%ecx
add    $0x1,%ecx
je     8060bff <fchmod@plt+0x15abf>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x3,%eax
jbe    8060bff <fchmod@plt+0x15abf>
shl    $0x2,%ecx
mov    %ecx,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8060bff <fchmod@plt+0x15abf>
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0xc(%esp)
call   80609e0 <fchmod@plt+0x158a0>
test   %eax,%eax
je     8060bfb <fchmod@plt+0x15abb>
xor    %ebp,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
mov    %eax,-0x4(%esi,%ebp,4)
mov    0xc(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80609e0 <fchmod@plt+0x158a0>
test   %eax,%eax
jne    8060bc0 <fchmod@plt+0x15a80>
lea    0x0(,%ebp,4),%edx
movl   $0x0,(%esi,%edx,1)
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edx,%edx
jmp    8060bea <fchmod@plt+0x15aaa>
xor    %eax,%eax
jmp    8060bf3 <fchmod@plt+0x15ab3>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2209e,%ebx
sub    $0x18,%esp
mov    0x354(%ebx),%eax
test   %eax,%eax
js     8060c30 <fchmod@plt+0x15af0>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    -0xc9dc(%ebx),%eax
movl   $0x80101,0x4(%esp)
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,0x354(%ebx)
jns    8060c29 <fchmod@plt+0x15ae9>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    8060c2b <fchmod@plt+0x15aeb>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
or     $0x80800,%eax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x22048,%ebx
sub    $0x14,%esp
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   804af40 <socket@plt>
test   %eax,%eax
mov    %eax,%esi
js     8060cb0 <fchmod@plt+0x15b70>
movl   $0x800000,0x4(%esp)
mov    %eax,(%esp)
call   80647e0 <fchmod@plt+0x196a0>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
neg    %eax
ret
nop
push   %esi
xor    %esi,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x21feb,%ebx
sub    $0x14,%esp
mov    0x35c(%ebx),%eax
test   %eax,%eax
js     8060ce8 <fchmod@plt+0x15ba8>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804a9a0 <getpid@plt>
cmp    $0x1,%eax
je     8060d08 <fchmod@plt+0x15bc8>
movl   $0x2,0x35c(%ebx)
00
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc9d2(%ebx),%eax
movl   $0x80101,0x4(%esp)
mov    %eax,(%esp)
call   8064210 <fchmod@plt+0x190d0>
test   %eax,%eax
mov    %eax,0x35c(%ebx)
cmovle %eax,%esi
jmp    8060cdc <fchmod@plt+0x15b9c>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x21f79,%ebx
sub    $0x9c,%esp
mov    0x338(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x68(%esp)
mov    0xc0(%esp),%eax
test   %eax,%eax
je     8060f30 <fchmod@plt+0x15df0>
mov    0xbc(%esp),%eax
movl   $0x800,0x88(%esp)
00
mov    %eax,0x78(%esp)
lea    -0x11547(%ebx),%eax
mov    %eax,0x8c(%esp)
mov    0xb8(%esp),%eax
test   %eax,%eax
je     8060f60 <fchmod@plt+0x15e20>
lea    -0xc9c5(%ebx),%eax
lea    -0x11547(%ebx),%edi
movl   $0x800,0x84(%esp)
00
mov    %eax,0x74(%esp)
mov    0xb4(%esp),%ebp
test   %ebp,%ebp
je     8060ef0 <fchmod@plt+0x15db0>
lea    -0xc9b6(%ebx),%ecx
mov    %ecx,0x70(%esp)
mov    0xb0(%esp),%ecx
lea    -0x11547(%ebx),%eax
movl   $0x1,0x80(%esp)
00
test   %ecx,%ecx
je     8060f14 <fchmod@plt+0x15dd4>
lea    -0xc9ab(%ebx),%ebp
lea    -0x11547(%ebx),%ecx
movl   $0x800,0x7c(%esp)
mov    %ebp,0x6c(%esp)
mov    %eax,0x38(%esp)
mov    0xb4(%esp),%eax
mov    0x68(%esp),%ebp
mov    %edi,0x48(%esp)
mov    0xb8(%esp),%edi
mov    %ecx,0x28(%esp)
mov    %eax,0x34(%esp)
mov    0x80(%esp),%eax
mov    %ebp,0x5c(%esp)
mov    0x8c(%esp),%ebp
mov    %edi,0x44(%esp)
mov    0x84(%esp),%edi
mov    %eax,0x30(%esp)
mov    0x70(%esp),%eax
mov    %ebp,0x58(%esp)
mov    0xc0(%esp),%ebp
mov    %edi,0x40(%esp)
mov    0x74(%esp),%edi
mov    %eax,0x2c(%esp)
mov    0xb0(%esp),%eax
mov    %ebp,0x54(%esp)
mov    0x88(%esp),%ebp
mov    %edi,0x3c(%esp)
mov    %eax,0x24(%esp)
mov    0x7c(%esp),%eax
mov    %ebp,0x50(%esp)
mov    0x78(%esp),%ebp
mov    %eax,0x20(%esp)
mov    0x6c(%esp),%eax
mov    %ebp,0x4c(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%eax
and    $0x3f8,%eax
sar    $0x3,%eax
mov    %eax,0x18(%esp)
mov    %edx,%eax
and    $0x7,%eax
mov    %eax,0x14(%esp)
lea    -0xc884(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x800,0x4(%esp)
call   804a510 <__snprintf_chk@plt>
xor    %eax,%eax
movb   $0x0,0x7ff(%esi)
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%ecx
lea    -0x11546(%ebx),%eax
movl   $0x0,0x80(%esp)
00
mov    %eax,0x70(%esp)
test   %ecx,%ecx
jne    8060de8 <fchmod@plt+0x15ca8>
lea    -0x11546(%ebx),%ecx
movl   $0x0,0x7c(%esp)
mov    %ecx,0x6c(%esp)
jmp    8060e00 <fchmod@plt+0x15cc0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x11546(%ebx),%eax
mov    %eax,0x8c(%esp)
mov    %eax,0x78(%esp)
mov    0xb8(%esp),%eax
movl   $0x0,0x88(%esp)
00
test   %eax,%eax
jne    8060d94 <fchmod@plt+0x15c54>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x11546(%ebx),%edi
movl   $0x0,0x84(%esp)
00
mov    %edi,0x74(%esp)
jmp    8060daf <fchmod@plt+0x15c6f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x87c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x21d23,%ebx
mov    0x8a0(%esp),%edi
mov    %eax,0x20(%esp)
mov    0x894(%esp),%ecx
mov    0x898(%esp),%ebp
mov    0x89c(%esp),%eax
mov    %edi,0x24(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x86c(%esp)
xor    %edi,%edi
lea    0x4c(%esp),%edi
movl   $0x0,(%edi,%esi,1)
add    $0x4,%esi
cmp    $0x20,%esi
jb     8060fcf <fchmod@plt+0x15e8f>
lea    0x30(%esp),%esi
mov    %esi,0x28(%esp)
xor    %esi,%esi
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
movl   $0x0,(%eax,%esi,1)
add    $0x4,%esi
cmp    $0x1c,%esi
jb     8060fec <fchmod@plt+0x15eac>
xor    %esi,%esi
mov    0x2c(%esp),%eax
cmpl   $0x0,0x350(%ebx)
js     80610e9 <fchmod@plt+0x15fa9>
mov    %eax,0x10(%esp)
mov    0x890(%esp),%eax
lea    0x6c(%esp),%esi
mov    %edx,(%esp)
mov    0x20(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8060d30 <fchmod@plt+0x15bf0>
mov    %esi,%edx
mov    %esi,0x4c(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8061041 <fchmod@plt+0x15f01>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
lea    -0xc9a0(%ebx),%eax
sbb    $0x3,%edx
mov    %eax,0x54(%esp)
mov    0x24(%esp),%eax
sub    %esi,%edx
mov    %edx,0x50(%esp)
mov    $0x1,%esi
movl   $0x8,0x58(%esp)
mov    %eax,(%esp)
mov    %eax,0x5c(%esp)
call   804ab30 <strlen@plt>
movl   $0x4000,0x8(%esp)
movl   $0x1,0x68(%esp)
mov    %edi,0x38(%esp)
movl   $0x4,0x3c(%esp)
mov    %eax,0x60(%esp)
lea    -0x11547(%ebx),%eax
mov    %eax,0x64(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x350(%ebx),%eax
mov    %eax,(%esp)
call   804ae30 <sendmsg@plt>
test   %eax,%eax
jns    80610e9 <fchmod@plt+0x15fa9>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
mov    0x86c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    8061106 <fchmod@plt+0x15fc6>
add    $0x87c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10c,%esp
mov    0x124(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x21b8e,%ebx
mov    %eax,0x34(%esp)
mov    %edx,0x38(%esp)
mov    %edi,0x3c(%esp)
mov    0x128(%esp),%edi
mov    %edi,0x40(%esp)
mov    0x12c(%esp),%edi
mov    %edi,0x44(%esp)
mov    0x130(%esp),%edi
mov    %edi,0x28(%esp)
mov    %gs:0x14,%edi
mov    %edi,0xfc(%esp)
xor    %edi,%edi
cmpl   $0x8,0xbd4(%ebx)
je     806197d <fchmod@plt+0x1683d>
test   $0x3f8,%eax
je     8061872 <fchmod@plt+0x16732>
movl   $0x0,0x48(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%esi
jmp    806119b <fchmod@plt+0x1605b>
xchg   %ax,%ax
add    $0x1,%esi
movzbl (%esi),%ecx
mov    %esi,%eax
movsbl %cl,%edx
cmp    $0xa,%edx
je     8061198 <fchmod@plt+0x16058>
cmp    $0xd,%edx
je     8061198 <fchmod@plt+0x16058>
test   %cl,%cl
jne    80611d0 <fchmod@plt+0x16090>
jmp    806136c <fchmod@plt+0x1622c>
xchg   %ax,%ax
cmp    $0xd,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
je     80611d5 <fchmod@plt+0x16095>
add    $0x1,%eax
movsbl (%eax),%edx
test   %dl,%dl
je     8061390 <fchmod@plt+0x16250>
cmp    $0xa,%edx
jne    80611b8 <fchmod@plt+0x16078>
lea    0x1(%eax),%edi
mov    %edi,0x28(%esp)
movb   $0x0,(%eax)
mov    0xbd4(%ebx),%edx
cmp    $0x6,%edx
je     8061300 <fchmod@plt+0x161c0>
lea    -0x2(%edx),%eax
cmp    $0x1,%eax
jbe    8061300 <fchmod@plt+0x161c0>
lea    -0x4(%edx),%eax
cmp    $0x1,%eax
jbe    806152e <fchmod@plt+0x163ee>
xchg   %ax,%ax
lea    0x74(%esp),%eax
mov    %eax,0x2c(%esp)
lea    -0x5(%edx),%eax
cmp    $0x2,%eax
jbe    806139d <fchmod@plt+0x1625d>
and    $0xfffffffd,%edx
cmp    $0x1,%edx
je     806139d <fchmod@plt+0x1625d>
mov    0x2c(%esp),%edi
xor    %eax,%eax
mov    $0xa,%ecx
rep stos %eax,%es:(%edi)
mov    0x35c(%ebx),%eax
test   %eax,%eax
js     8061360 <fchmod@plt+0x16220>
mov    0x34(%esp),%eax
xor    %edx,%edx
mov    $0x1,%edi
and    $0x7,%eax
cmp    $0x3,%eax
movzbl 0xbd1(%ebx),%eax
cmovle %eax,%edx
xor    %ebp,%ebp
cmpb   $0x0,0xbd0(%ebx)
jne    80618c9 <fchmod@plt+0x16789>
test   %dl,%dl
je     8061858 <fchmod@plt+0x16718>
mov    0x2c(%esp),%ecx
lea    -0xc977(%ebx),%edx
lea    (%ecx,%ebp,8),%eax
lea    (%ecx,%edi,8),%edi
mov    %edx,(%eax)
movl   $0x7,0x4(%eax)
mov    %esi,(%edi)
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
lea    -0xc96f(%ebx),%edx
mov    %eax,0x4(%edi)
mov    0x2c(%esp),%eax
lea    0x3(%ebp),%edi
add    $0x2,%ebp
lea    (%eax,%ebp,8),%eax
mov    %edx,(%eax)
movl   $0x4,0x4(%eax)
mov    0x2c(%esp),%esi
lea    -0x11547(%ebx),%edx
lea    (%esi,%edi,8),%eax
add    $0x1,%edi
mov    %edx,(%eax)
movl   $0x1,0x4(%eax)
mov    0x35c(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ac90 <writev@plt>
test   %eax,%eax
jns    8061360 <fchmod@plt+0x16220>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
test   %eax,%eax
jns    8061360 <fchmod@plt+0x16220>
jmp    8061370 <fchmod@plt+0x16230>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    0x38(%esp),%edx
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x120(%esp),%eax
mov    %eax,(%esp)
mov    0x34(%esp),%eax
call   8060f80 <fchmod@plt+0x15e40>
test   %eax,%eax
js     806181c <fchmod@plt+0x166dc>
je     806184d <fchmod@plt+0x1670d>
mov    0xbd4(%ebx),%edx
addl   $0x1,0x48(%esp)
lea    -0x4(%edx),%ecx
cmp    $0x1,%ecx
jbe    806152e <fchmod@plt+0x163ee>
test   %eax,%eax
jle    8061208 <fchmod@plt+0x160c8>
mov    0x28(%esp),%edx
test   %edx,%edx
jne    8061190 <fchmod@plt+0x16050>
mov    0x48(%esp),%eax
mov    0xfc(%esp),%edi
xor    %gs:0x14,%edi
jne    8061995 <fchmod@plt+0x16855>
add    $0x10c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x0,0x28(%esp)
jmp    80611df <fchmod@plt+0x1609f>
mov    0x2c(%esp),%edi
xor    %eax,%eax
mov    $0xa,%ecx
rep stos %eax,%es:(%edi)
mov    0x354(%ebx),%ecx
test   %ecx,%ecx
js     8061228 <fchmod@plt+0x160e8>
mov    0x34(%esp),%eax
lea    0xac(%esp),%ebp
movl   $0x10,0xc(%esp)
lea    0xbc(%esp),%edi
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xc997(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,(%esp)
call   804a510 <__snprintf_chk@plt>
movb   $0x0,0xbb(%esp)
call   804a9a0 <getpid@plt>
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
lea    -0xc988(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %ebp,%edx
movb   $0x0,0xcb(%esp)
mov    %ebp,0x74(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8061441 <fchmod@plt+0x16301>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
mov    0x338(%ebx),%eax
sbb    $0x3,%edx
sub    %ebp,%edx
mov    %edx,0x78(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x7c(%esp)
call   804ab30 <strlen@plt>
mov    %edi,%ecx
mov    %edi,0x84(%esp)
mov    %eax,0x80(%esp)
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     8061499 <fchmod@plt+0x16359>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmove  %edx,%ecx
add    %al,%al
sbb    $0x3,%ecx
sub    %edi,%ecx
mov    %esi,(%esp)
mov    %ecx,0x88(%esp)
mov    %esi,0x8c(%esp)
call   804ab30 <strlen@plt>
movl   $0x5,0x8(%esp)
movl   $0x1,0x98(%esp)
00
mov    %eax,0x90(%esp)
lea    -0x11547(%ebx),%eax
mov    %eax,0x94(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x354(%ebx),%eax
mov    %eax,(%esp)
call   804ac90 <writev@plt>
test   %eax,%eax
js     8061886 <fchmod@plt+0x16746>
addl   $0x1,0x48(%esp)
jmp    8061360 <fchmod@plt+0x16220>
lea    0x74(%esp),%edi
xor    %eax,%eax
mov    $0xa,%ecx
mov    %edi,0x2c(%esp)
rep stos %eax,%es:(%edi)
lea    0x58(%esp),%eax
mov    %eax,0x30(%esp)
xor    %eax,%eax
mov    0x30(%esp),%edi
movl   $0x0,(%edi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     8061549 <fchmod@plt+0x16409>
mov    0x2c(%esp),%eax
cmpl   $0x0,0x358(%ebx)
movl   $0x5,0x64(%esp)
mov    %eax,0x60(%esp)
js     8061210 <fchmod@plt+0x160d0>
mov    0x34(%esp),%eax
lea    0x9c(%esp),%ebp
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xc997(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,(%esp)
call   804a510 <__snprintf_chk@plt>
movl   $0x0,(%esp)
movb   $0x0,0xab(%esp)
call   8063460 <fchmod@plt+0x18320>
movl   $0xf4240,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
mov    %eax,0x54(%esp)
lea    0x54(%esp),%eax
mov    %eax,(%esp)
call   804aad0 <localtime@plt>
test   %eax,%eax
je     8061951 <fchmod@plt+0x16811>
mov    %eax,0xc(%esp)
lea    0xbc(%esp),%edi
lea    -0xc992(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %edi,(%esp)
call   804aab0 <strftime@plt>
test   %eax,%eax
je     8061951 <fchmod@plt+0x16811>
call   804a9a0 <getpid@plt>
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xc988(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x4c(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %ebp,%edx
movb   $0x0,0xbb(%esp)
mov    %ebp,0x74(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8061673 <fchmod@plt+0x16533>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    %edi,%ecx
sub    %ebp,%edx
mov    %edx,0x78(%esp)
mov    %edi,0x7c(%esp)
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     80616ad <fchmod@plt+0x1656d>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmove  %edx,%ecx
add    %al,%al
mov    0x338(%ebx),%eax
sbb    $0x3,%ecx
sub    %edi,%ecx
mov    %ecx,0x80(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x84(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x88(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x8c(%esp)
mov    %eax,%edx
mov    (%edx),%eax
add    $0x4,%edx
lea    -0x1010101(%eax),%ecx
not    %eax
and    %eax,%ecx
and    $0x80808080,%ecx
je     806170f <fchmod@plt+0x165cf>
mov    %ecx,%eax
shr    $0x10,%eax
test   $0x8080,%ecx
cmove  %eax,%ecx
lea    0x2(%edx),%eax
cmove  %eax,%edx
add    %cl,%cl
sbb    $0x3,%edx
sub    0x4c(%esp),%edx
mov    %esi,(%esp)
mov    %esi,0x94(%esp)
mov    %edx,0x90(%esp)
call   804ab30 <strlen@plt>
cmpb   $0x0,0xbd2(%ebx)
mov    %eax,0x98(%esp)
je     8061773 <fchmod@plt+0x16633>
add    $0x1,%eax
mov    %eax,0x98(%esp)
lea    0x94(%esp),%edi
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
movl   $0x4000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x358(%ebx),%eax
mov    %eax,(%esp)
call   804ae30 <sendmsg@plt>
test   %eax,%eax
js     806193f <fchmod@plt+0x167ff>
cmpb   $0x0,0xbd2(%ebx)
je     8061524 <fchmod@plt+0x163e4>
mov    0x78(%esp),%ecx
mov    0x80(%esp),%edx
add    %ecx,%edx
add    0x88(%esp),%edx
add    0x90(%esp),%edx
add    0x98(%esp),%edx
cmp    %edx,%eax
jae    8061524 <fchmod@plt+0x163e4>
test   %eax,%eax
je     8061780 <fchmod@plt+0x16640>
cmp    %ecx,%eax
mov    %ecx,%edx
cmovbe %eax,%edx
sub    %edx,%ecx
sub    %edx,%eax
add    %edx,0x74(%esp)
mov    0x2c(%esp),%edx
mov    %ecx,0x78(%esp)
test   %eax,%eax
je     8061780 <fchmod@plt+0x16640>
mov    0xc(%edx),%ebp
mov    %eax,%ecx
cmp    %eax,%ebp
cmovbe %ebp,%ecx
sub    %ecx,%ebp
sub    %ecx,%eax
mov    %ebp,0xc(%edx)
add    %ecx,0x8(%edx)
add    $0x8,%edx
cmp    %edi,%edx
jne    80617f8 <fchmod@plt+0x166b8>
jmp    8061780 <fchmod@plt+0x16640>
cmp    $0xfffffff5,%eax
je     806183d <fchmod@plt+0x166fd>
mov    0x350(%ebx),%eax
test   %eax,%eax
js     806183d <fchmod@plt+0x166fd>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
call   8060c10 <fchmod@plt+0x15ad0>
mov    0xbd4(%ebx),%edx
jmp    80611fa <fchmod@plt+0x160ba>
mov    0xbd4(%ebx),%edx
jmp    80611fa <fchmod@plt+0x160ba>
mov    0x2c(%esp),%eax
lea    (%eax,%ebp,8),%ebp
mov    %esi,0x0(%ebp)
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x4(%ebp)
jmp    80612b7 <fchmod@plt+0x16177>
andl   $0x7,0x34(%esp)
mov    0x360(%ebx),%eax
or     %eax,0x34(%esp)
jmp    8061181 <fchmod@plt+0x16041>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
test   %eax,%eax
jns    80618b9 <fchmod@plt+0x16779>
mov    0x354(%ebx),%eax
test   %eax,%eax
js     80618af <fchmod@plt+0x1676f>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x354(%ebx)
ff
call   8060cc0 <fchmod@plt+0x15b80>
jmp    8061228 <fchmod@plt+0x160e8>
je     8061228 <fchmod@plt+0x160e8>
addl   $0x1,0x48(%esp)
jmp    8061360 <fchmod@plt+0x16220>
mov    0x120(%esp),%eax
lea    0xbc(%esp),%edi
mov    $0x1,%bp
mov    %edi,(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x38(%esp),%eax
movl   $0x40,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %eax,0x14(%esp)
lea    -0xc980(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edi,0x74(%esp)
mov    0x30(%esp),%edx
movb   $0x0,0xfb(%esp)
repnz scas %es:(%edi),%al
mov    $0x2,%edi
not    %ecx
sub    $0x1,%ecx
mov    %ecx,0x78(%esp)
jmp    806126d <fchmod@plt+0x1612d>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
test   %eax,%eax
jns    8061984 <fchmod@plt+0x16844>
cmp    $0xfffffff5,%eax
je     806196d <fchmod@plt+0x1682d>
mov    0x358(%ebx),%eax
test   %eax,%eax
js     806196d <fchmod@plt+0x1682d>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
call   8060c10 <fchmod@plt+0x15ad0>
mov    0xbd4(%ebx),%edx
jmp    8061210 <fchmod@plt+0x160d0>
xor    %eax,%eax
jmp    8061370 <fchmod@plt+0x16230>
jne    8061524 <fchmod@plt+0x163e4>
mov    0xbd4(%ebx),%edx
jmp    8061210 <fchmod@plt+0x160d0>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2130b,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebp
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x18(%esp)
mov    %edi,0x1c(%esp)
lea    0x3cc(%ebx),%esi
mov    %ebp,0x20(%esp)
mov    %eax,0x10(%esp)
movl   $0x800,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   804a510 <__snprintf_chk@plt>
mov    0x2c(%esp),%edx
mov    $0x2,%eax
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
movb   $0x0,0xbcb(%ebx)
mov    %esi,0xbcc(%ebx)
call   8061110 <fchmod@plt+0x15fd0>
call   804afd0 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2126d,%ebx
sub    $0x14,%esp
mov    0x35c(%ebx),%esi
test   %esi,%esi
js     8061a64 <fchmod@plt+0x16924>
call   804a9a0 <getpid@plt>
cmp    $0x1,%eax
je     8061a70 <fchmod@plt+0x16930>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
cmp    $0x2,%esi
jg     8061a88 <fchmod@plt+0x16948>
movl   $0xffffffff,0x35c(%ebx)
ff
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
jmp    8061a75 <fchmod@plt+0x16935>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x2120b,%ebx
sub    $0xac,%esp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
mov    0xbd4(%ebx),%esi
cmp    $0x8,%esi
je     8061c88 <fchmod@plt+0x16b48>
lea    -0x6(%esi),%eax
cmp    $0x1,%eax
jbe    8061b78 <fchmod@plt+0x16a38>
lea    -0x2(%esi),%eax
mov    %esi,%edx
cmp    $0x1,%eax
jbe    8061b8f <fchmod@plt+0x16a4f>
lea    -0x4(%esi),%eax
cmp    $0x1,%eax
jbe    8061d48 <fchmod@plt+0x16c08>
sub    $0x5,%esi
cmp    $0x2,%esi
jbe    8061c30 <fchmod@plt+0x16af0>
and    $0xfffffffd,%edx
cmp    $0x1,%edx
je     8061c30 <fchmod@plt+0x16af0>
mov    0x350(%ebx),%eax
test   %eax,%eax
js     8061b2d <fchmod@plt+0x169ed>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
mov    0x358(%ebx),%eax
test   %eax,%eax
js     8061b49 <fchmod@plt+0x16a09>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
call   8061a40 <fchmod@plt+0x16900>
call   8060cc0 <fchmod@plt+0x15b80>
mov    0x9c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8061e6f <fchmod@plt+0x16d2f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804a9a0 <getpid@plt>
cmp    $0x1,%eax
jne    8061db8 <fchmod@plt+0x16c78>
cmp    $0x6,%esi
jne    8061adf <fchmod@plt+0x1699f>
lea    0x1c(%esp),%esi
xor    %eax,%eax
mov    0x350(%ebx),%ebp
mov    $0x20,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    $0x1,%edi
mov    %di,0x1c(%esp)
lea    0x3c(%esp),%edi
test   %ebp,%ebp
movl   $0x6e75722f,0x1e(%esp)
movl   $0x7379732f,0x22(%esp)
movl   $0x646d6574,0x26(%esp)
mov    $0x13,%cl
movl   $0x756f6a2f,0x2a(%esp)
movl   $0x6c616e72,0x2e(%esp)
movl   $0x636f732f,0x32(%esp)
movl   $0x74656b,0x36(%esp)
rep stos %eax,%es:(%edi)
js     8061cd0 <fchmod@plt+0x16b90>
xor    %eax,%eax
mov    0x358(%ebx),%edx
test   %edx,%edx
js     8061c1c <fchmod@plt+0x16adc>
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
mov    0xc(%esp),%eax
movl   $0xffffffff,0x358(%ebx)
ff
mov    %eax,0xc(%esp)
call   8061a40 <fchmod@plt+0x16900>
mov    0xc(%esp),%eax
jmp    8061b53 <fchmod@plt+0x16a13>
xchg   %ax,%ax
call   8060c10 <fchmod@plt+0x15ad0>
test   %eax,%eax
mov    %eax,%esi
js     8061b11 <fchmod@plt+0x169d1>
mov    0x350(%ebx),%eax
test   %eax,%eax
js     8061c5b <fchmod@plt+0x16b1b>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
mov    0x358(%ebx),%eax
test   %eax,%eax
js     8061c77 <fchmod@plt+0x16b37>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
call   8061a40 <fchmod@plt+0x16900>
mov    %esi,%eax
jmp    8061b53 <fchmod@plt+0x16a13>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x350(%ebx),%eax
test   %eax,%eax
js     8061ca4 <fchmod@plt+0x16b64>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
mov    0x358(%ebx),%eax
test   %eax,%eax
js     8061cc0 <fchmod@plt+0x16b80>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
call   8061a40 <fchmod@plt+0x16900>
xor    %eax,%eax
jmp    8061b53 <fchmod@plt+0x16a13>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%al
call   8060c60 <fchmod@plt+0x15b20>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x350(%ebx)
js     8061d37 <fchmod@plt+0x16bf7>
lea    0x1e(%esp),%eax
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
add    $0x2,%eax
mov    %eax,0x8(%esp)
call   804b060 <connect@plt>
test   %eax,%eax
jns    8061bf6 <fchmod@plt+0x16ab6>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x350(%ebx),%eax
neg    %esi
test   %eax,%eax
js     8061d2f <fchmod@plt+0x16bef>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
test   %esi,%esi
jns    8061ea8 <fchmod@plt+0x16d68>
mov    0xbd4(%ebx),%edx
mov    %edx,%esi
jmp    8061aed <fchmod@plt+0x169ad>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%esi
xor    %eax,%eax
mov    $0x20,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
lea    0x2c(%esp),%edi
mov    $0x1,%edx
mov    %dx,0x1c(%esp)
movl   $0x7665642f,0x1e(%esp)
movl   $0x676f6c2f,0x22(%esp)
mov    $0x17,%cl
rep stos %eax,%es:(%edi)
mov    0x358(%ebx),%ecx
test   %ecx,%ecx
js     8061dd1 <fchmod@plt+0x16c91>
xor    %eax,%eax
mov    0x350(%ebx),%edx
test   %edx,%edx
js     8061c1c <fchmod@plt+0x16adc>
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
mov    0xc(%esp),%eax
movl   $0xffffffff,0x350(%ebx)
ff
jmp    8061c1c <fchmod@plt+0x16adc>
lea    0x0(%esi),%esi
movl   $0x2,(%esp)
call   804afb0 <isatty@plt>
test   %eax,%eax
jg     8061b11 <fchmod@plt+0x169d1>
jmp    8061b86 <fchmod@plt+0x16a46>
mov    $0x2,%al
call   8060c60 <fchmod@plt+0x15b20>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x358(%ebx)
js     8061e13 <fchmod@plt+0x16cd3>
lea    0x1e(%esp),%ebp
mov    %ebp,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
add    $0x2,%eax
mov    %eax,0x8(%esp)
call   804b060 <connect@plt>
test   %eax,%eax
js     8061e20 <fchmod@plt+0x16ce0>
movb   $0x0,0xbd2(%ebx)
jmp    8061d83 <fchmod@plt+0x16c43>
mov    0xbd4(%ebx),%edx
mov    %edx,%esi
jmp    8061af9 <fchmod@plt+0x169b9>
mov    0x358(%ebx),%eax
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
mov    $0x1,%eax
call   8060c60 <fchmod@plt+0x15b20>
test   %eax,%eax
mov    %eax,%edx
mov    %eax,0x358(%ebx)
js     8061e13 <fchmod@plt+0x16cd3>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebp,%edi
repnz scas %es:(%edi),%al
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
neg    %ecx
mov    %ecx,0x8(%esp)
call   804b060 <connect@plt>
test   %eax,%eax
js     8061e74 <fchmod@plt+0x16d34>
movb   $0x1,0xbd2(%ebx)
jmp    8061d83 <fchmod@plt+0x16c43>
call   806ed90 <fchmod@plt+0x23c50>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x358(%ebx),%eax
neg    %esi
test   %eax,%eax
js     8061e99 <fchmod@plt+0x16d59>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
test   %esi,%esi
js     8061e13 <fchmod@plt+0x16cd3>
mov    %esi,%eax
jmp    8061d85 <fchmod@plt+0x16c45>
mov    %esi,%eax
jmp    8061bf8 <fchmod@plt+0x16ab8>
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20dfe,%ebx
sub    $0x18,%esp
mov    0x350(%ebx),%eax
test   %eax,%eax
js     8061edb <fchmod@plt+0x16d9b>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x350(%ebx)
ff
mov    0x358(%ebx),%eax
test   %eax,%eax
js     8061ef7 <fchmod@plt+0x16db7>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x358(%ebx)
ff
mov    0x354(%ebx),%eax
test   %eax,%eax
js     8061f13 <fchmod@plt+0x16dd3>
mov    %eax,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
movl   $0xffffffff,0x354(%ebx)
ff
add    $0x18,%esp
pop    %ebx
jmp    8061a40 <fchmod@plt+0x16900>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x84c,%esp
mov    0x864(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20d7e,%ebx
mov    0x870(%esp),%edi
mov    0x874(%esp),%ebp
mov    %eax,0x24(%esp)
mov    0x86c(%esp),%eax
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x83c(%esp)
xor    %eax,%eax
call   804acd0 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%ecx
mov    0x860(%esp),%eax
and    $0x7,%eax
cmp    0x364(%ebx),%eax
jle    8061fa7 <fchmod@plt+0x16e67>
xor    %eax,%eax
mov    0x83c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ecx,(%esi)
jne    8061fa2 <fchmod@plt+0x16e62>
add    $0x84c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   806ed90 <fchmod@plt+0x23c50>
mov    %edi,0x10(%esp)
lea    0x3c(%esp),%edi
mov    %ebp,0x14(%esp)
movl   $0x800,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   804ad60 <__vsnprintf_chk@plt>
mov    0x28(%esp),%eax
mov    0x24(%esp),%edx
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x868(%esp),%eax
movl   $0x0,0x8(%esp)
movb   $0x0,0x83b(%esp)
mov    %eax,(%esp)
mov    0x860(%esp),%eax
call   8061110 <fchmod@plt+0x15fd0>
mov    0x2c(%esp),%ecx
jmp    8061f85 <fchmod@plt+0x16e45>
xchg   %ax,%ax
sub    $0x2c,%esp
lea    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8061f20 <fchmod@plt+0x16de0>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20c4e,%ebx
sub    $0x18,%esp
mov    0x24(%esp),%edx
lea    -0xc82c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x20(%esp),%eax
call   80619a0 <fchmod@plt+0x16860>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20c07,%ebx
test   %eax,%eax
js     80620c7 <fchmod@plt+0x16f87>
cmp    $0x8,%eax
jg     80620f1 <fchmod@plt+0x16fb1>
mov    %eax,0xbd4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    -0xc6a6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc956(%ebx),%eax
movl   $0x115,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc6a6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc94a(%ebx),%eax
movl   $0x116,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20b87,%ebx
mov    %eax,%edx
and    $0x7,%edx
cmp    %edx,%eax
jne    8062147 <fchmod@plt+0x17007>
mov    %eax,0x364(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    -0xc6b8(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc931(%ebx),%eax
movl   $0x127,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20b2e,%ebx
sub    $0x18,%esp
mov    0x24(%esp),%edx
lea    -0xc7f0(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x20(%esp),%eax
call   80619a0 <fchmod@plt+0x16860>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20aee,%ebx
sub    $0x28,%esp
movl   $0x3,(%esp)
lea    -0xc919(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x28,%esp
mov    $0xfffffff4,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20a9b,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8064720 <fchmod@plt+0x195e0>
test   %eax,%eax
js     8062239 <fchmod@plt+0x170f9>
mov    %eax,(%esp)
call   8062120 <fchmod@plt+0x16fe0>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20a65,%ebx
test   %edi,%edi
je     8062299 <fchmod@plt+0x17159>
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x274(%ebx,%esi,4),%eax
test   %eax,%eax
je     806227b <fchmod@plt+0x1713b>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     8062290 <fchmod@plt+0x17150>
add    $0x1,%esi
cmp    $0x9,%esi
jne    8062260 <fchmod@plt+0x17120>
add    $0x10,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0xc6e5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x39f,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8062240 <fchmod@plt+0x17100>
test   %eax,%eax
js     80622f8 <fchmod@plt+0x171b8>
mov    %eax,(%esp)
call   80620a0 <fchmod@plt+0x16f60>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    80622ed <fchmod@plt+0x171ad>
nop
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x209ad,%ebx
sub    $0x24,%esp
lea    -0xc90a(%ebx),%eax
mov    %eax,(%esp)
call   804a600 <secure_getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     8062334 <fchmod@plt+0x171f4>
mov    %eax,(%esp)
call   80622d0 <fchmod@plt+0x17190>
test   %eax,%eax
js     8062470 <fchmod@plt+0x17330>
lea    -0xc8f7(%ebx),%eax
mov    %eax,(%esp)
call   804a600 <secure_getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     8062358 <fchmod@plt+0x17218>
mov    %eax,(%esp)
call   8062210 <fchmod@plt+0x170d0>
test   %eax,%eax
js     8062430 <fchmod@plt+0x172f0>
lea    -0xc8e5(%ebx),%eax
mov    %eax,(%esp)
call   804a600 <secure_getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     806237f <fchmod@plt+0x1723f>
mov    %eax,(%esp)
call   8063d40 <fchmod@plt+0x18c00>
test   %eax,%eax
js     80623f0 <fchmod@plt+0x172b0>
setne  0xbd1(%ebx)
lea    -0xc8d3(%ebx),%eax
mov    %eax,(%esp)
call   804a600 <secure_getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     80623a6 <fchmod@plt+0x17266>
mov    %eax,(%esp)
call   8063d40 <fchmod@plt+0x18c00>
test   %eax,%eax
js     80623b0 <fchmod@plt+0x17270>
setne  0xbd0(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc708(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xc6ce(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x363,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc708(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xc6ce(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x35f,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    806237f <fchmod@plt+0x1723f>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc730(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xc6ce(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x35b,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8062358 <fchmod@plt+0x17218>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc75c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xc6ce(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc96a(%ebx),%eax
mov    %esi,0x14(%esp)
movl   $0x357,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    8062334 <fchmod@plt+0x171f4>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
cmpb   $0x2f,(%eax)
sete   %al
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x207e6,%ebx
test   %esi,%esi
je     80624f8 <fchmod@plt+0x173b8>
mov    %esi,(%esp)
movl   $0x2f,0x4(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %esi,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    -0xc640(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc697(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad1f(%ebx),%eax
movl   $0x33,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20777,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
je     8062585 <fchmod@plt+0x17445>
cmpb   $0x2f,(%eax)
je     8062578 <fchmod@plt+0x17438>
test   %edx,%edx
je     8062578 <fchmod@plt+0x17438>
mov    %eax,0x8(%esp)
lea    -0x1033a(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80645f0 <fchmod@plt+0x194b0>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    -0xc653(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc697(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad1f(%ebx),%eax
movl   $0x75,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x206f5,%ebx
test   %esi,%esi
je     806260c <fchmod@plt+0x174cc>
cmpb   $0x2f,(%esi)
je     80625f8 <fchmod@plt+0x174b8>
call   804a5d0 <get_current_dir_name@plt>
test   %eax,%eax
mov    %eax,%edi
je     8062608 <fchmod@plt+0x174c8>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062530 <fchmod@plt+0x173f0>
mov    %edi,(%esp)
mov    %eax,%esi
call   804a690 <free@plt>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   804acb0 <__strdup@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %eax,%eax
jmp    80625f1 <fchmod@plt+0x174b1>
lea    -0xc66a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc697(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad1f(%ebx),%eax
movl   $0x83,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20664,%ebx
test   %eax,%eax
je     8062740 <fchmod@plt+0x17600>
mov    0x30(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8062750 <fchmod@plt+0x17610>
mov    0x30(%esp),%esi
xor    %ebp,%ebp
movb   $0x0,0xf(%esp)
jmp    80626c4 <fchmod@plt+0x17584>
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804aee0 <canonicalize_file_name@plt>
mov    0x8(%esp),%ecx
test   %eax,%eax
je     8062710 <fchmod@plt+0x175d0>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804a690 <free@plt>
mov    0x8(%esp),%eax
mov    0x30(%esp),%edx
mov    %eax,(%edx,%ebp,4)
add    $0x1,%ebp
add    $0x4,%esi
je     80626f0 <fchmod@plt+0x175b0>
mov    (%esi),%eax
test   %eax,%eax
je     80626f0 <fchmod@plt+0x175b0>
mov    %eax,(%esp)
call   80625b0 <fchmod@plt+0x17470>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
test   %edi,%edi
movl   $0x0,(%esi)
jne    8062680 <fchmod@plt+0x17540>
movb   $0x1,0xf(%esp)
add    $0x4,%esi
jne    80626be <fchmod@plt+0x1757e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x0,(%eax,%ebp,4)
xor    %eax,%eax
cmpb   $0x0,0xf(%esp)
cmove  0x30(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpl   $0x2,(%ecx)
je     8062738 <fchmod@plt+0x175f8>
mov    %edi,(%esp)
call   804a690 <free@plt>
mov    0x8(%esp),%ecx
mov    (%ecx),%eax
test   %eax,%eax
je     80626e2 <fchmod@plt+0x175a2>
cmp    $0xc,%eax
jne    80626b9 <fchmod@plt+0x17579>
movb   $0x1,0xf(%esp)
jmp    80626e7 <fchmod@plt+0x175a7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
jmp    80626af <fchmod@plt+0x1756f>
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20546,%ebx
test   %esi,%esi
je     8062798 <fchmod@plt+0x17658>
mov    (%esi),%eax
test   %eax,%eax
je     80627a0 <fchmod@plt+0x17660>
mov    %esi,(%esp)
call   8062640 <fchmod@plt+0x17500>
test   %eax,%eax
je     8062792 <fchmod@plt+0x17652>
mov    %esi,(%esp)
call   8063130 <fchmod@plt+0x17ff0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x204f4,%ebx
mov    0x44(%esp),%edi
test   %eax,%eax
je     8062956 <fchmod@plt+0x17816>
test   %edi,%edi
je     806292c <fchmod@plt+0x177ec>
mov    0x40(%esp),%eax
movzbl (%edi),%ecx
movzbl (%eax),%ebp
mov    %ebp,%eax
cmp    $0x2f,%al
sete   %dl
cmp    $0x2f,%cl
mov    %edx,%esi
sete   %dl
mov    %esi,%eax
cmp    %dl,%al
jne    8062913 <fchmod@plt+0x177d3>
mov    %ebp,%eax
cmp    $0x2f,%al
jne    80628e2 <fchmod@plt+0x177a2>
nop
mov    0x40(%esp),%eax
lea    0x1(%eax),%edx
nop
mov    %edx,%esi
add    $0x1,%edx
movzbl -0x1(%edx),%eax
cmp    $0x2f,%al
je     8062810 <fchmod@plt+0x176d0>
cmp    $0x2f,%cl
mov    %esi,0x1c(%esp)
jne    80628f3 <fchmod@plt+0x177b3>
add    $0x1,%edi
lea    0x0(%esi),%esi
mov    %edi,%ebp
add    $0x1,%edi
movzbl -0x1(%edi),%edx
cmp    $0x2f,%dl
je     8062830 <fchmod@plt+0x176f0>
test   %dl,%dl
je     80628ff <fchmod@plt+0x177bf>
test   %al,%al
je     8062913 <fchmod@plt+0x177d3>
mov    0x1c(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     806291d <fchmod@plt+0x177dd>
cmp    $0x2f,%al
je     806291d <fchmod@plt+0x177dd>
mov    %ecx,%eax
xor    %ecx,%ecx
add    $0x1,%eax
jmp    8062878 <fchmod@plt+0x17738>
xchg   %ax,%ax
add    $0x1,%eax
cmp    $0x2f,%dl
je     8062884 <fchmod@plt+0x17744>
movzbl (%eax),%edx
add    $0x1,%ecx
mov    %eax,%esi
test   %dl,%dl
jne    8062870 <fchmod@plt+0x17730>
mov    %esi,0x40(%esp)
movzbl 0x0(%ebp),%eax
test   %al,%al
je     806290b <fchmod@plt+0x177cb>
cmp    $0x2f,%al
je     806290b <fchmod@plt+0x177cb>
lea    0x1(%ebp),%eax
xor    %esi,%esi
jmp    80628a8 <fchmod@plt+0x17768>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x2f,%dl
je     80628b4 <fchmod@plt+0x17774>
movzbl (%eax),%edx
add    $0x1,%esi
mov    %eax,%edi
test   %dl,%dl
jne    80628a0 <fchmod@plt+0x17760>
cmp    %esi,%ecx
jne    8062913 <fchmod@plt+0x177d3>
mov    0x1c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
jne    8062913 <fchmod@plt+0x177d3>
mov    0x40(%esp),%eax
movzbl (%edi),%ecx
movzbl (%eax),%eax
cmp    $0x2f,%al
je     8062808 <fchmod@plt+0x176c8>
mov    0x40(%esp),%esi
cmp    $0x2f,%cl
mov    %esi,0x1c(%esp)
je     806282a <fchmod@plt+0x176ea>
mov    %ecx,%edx
mov    %edi,%ebp
test   %dl,%dl
jne    8062846 <fchmod@plt+0x17706>
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %esi,%esi
mov    %ebp,%edi
cmp    %esi,%ecx
je     80628b8 <fchmod@plt+0x17778>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esp),%eax
xor    %ecx,%ecx
mov    %eax,0x40(%esp)
jmp    8062888 <fchmod@plt+0x17748>
lea    -0xc67a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc697(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xfdd9(%ebx),%eax
movl   $0x10a,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc67a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc697(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x109,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
push   %edi
mov    %eax,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x20325,%ebx
cmpb   $0x0,0xc(%eax)
je     80629b7 <fchmod@plt+0x17877>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    0x4(%eax,%esi,8),%eax
add    $0x1,%esi
call   8062980 <fchmod@plt+0x17840>
movzbl 0xc(%edi),%eax
cmp    %esi,%eax
ja     80629a0 <fchmod@plt+0x17860>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %edi,(%esp)
call   804a690 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x202cb,%ebx
sub    $0x1c,%esp
movl   $0x20,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8062a60 <fchmod@plt+0x17920>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,(%esi)
je     8062a68 <fchmod@plt+0x17928>
movl   $0x10,0x4(%esp)
movl   $0x1,(%esp)
movl   $0x1,0x4(%esi)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8062a88 <fchmod@plt+0x17948>
movl   $0x1,0xc(%esi)
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8062a53 <fchmod@plt+0x17913>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%ebp
mov    %edi,(%esp)
call   804a690 <free@plt>
mov    %ebp,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    8062a53 <fchmod@plt+0x17913>
nop
xor    %ebp,%ebp
jmp    8062a6b <fchmod@plt+0x1792b>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
je     8062aaf <fchmod@plt+0x1796f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8062aa8 <fchmod@plt+0x17968>
call   8062980 <fchmod@plt+0x17840>
movl   $0x0,0x8(%esi)
add    $0x8,%esp
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x201e6,%ebx
test   %esi,%esi
je     8062af6 <fchmod@plt+0x179b6>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8062ae4 <fchmod@plt+0x179a4>
call   8062980 <fchmod@plt+0x17840>
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x201a4,%ebx
mov    0x8(%eax),%eax
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x20(%esp)
je     8062de1 <fchmod@plt+0x17ca1>
mov    0x58(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
je     8062d4d <fchmod@plt+0x17c0d>
mov    0x50(%esp),%eax
mov    0x58(%esp),%esi
movl   $0x0,0x2c(%esp)
addl   $0x1,0x10(%eax)
add    %esi,0x14(%eax)
mov    0x4(%edi),%eax
mov    (%edi),%esi
mov    0x54(%esp),%edi
add    0x58(%esp),%edi
add    %eax,%esi
sub    0x58(%esp),%esi
mov    %edi,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x58(%esp)
ja     8062b96 <fchmod@plt+0x17a56>
mov    0x58(%esp),%eax
mov    0x50(%esp),%edi
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
add    %esi,%eax
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
je     8062db2 <fchmod@plt+0x17c72>
mov    0x20(%esp),%edi
mov    0x24(%esp),%eax
movzbl 0xc(%edi),%esi
movzbl -0x1(%eax),%eax
mov    0x8(%edi),%ebp
mov    %esi,0x1c(%esp)
xor    %esi,%esi
mov    %al,0x2b(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %esi,%eax
jbe    8062c03 <fchmod@plt+0x17ac3>
lea    (%esi,%eax,1),%edx
mov    0x18(%esp),%ecx
shr    %edx
lea    0x0(%ebp,%edx,8),%edi
movzbl (%edi),%eax
sub    %eax,%ecx
jns    8062d6c <fchmod@plt+0x17c2c>
mov    %ebp,0x1c(%esp)
jmp    8062bff <fchmod@plt+0x17abf>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%edi
lea    (%edx,%esi,1),%eax
shr    %eax
mov    0x18(%esp),%ebp
lea    (%edi,%eax,8),%edi
movzbl (%edi),%ecx
sub    %ecx,%ebp
mov    %ebp,%ecx
jns    8062d58 <fchmod@plt+0x17c18>
mov    %eax,%edx
cmp    %edx,%esi
jb     8062be0 <fchmod@plt+0x17aa0>
mov    0x50(%esp),%eax
mov    0x58(%esp),%esi
mov    0x4(%eax),%eax
lea    0x1(%esi,%eax,1),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     8062dd7 <fchmod@plt+0x17c97>
mov    0x50(%esp),%esi
mov    0x58(%esp),%edi
mov    %eax,(%esi)
mov    0x4(%esi),%esi
mov    %edi,0x8(%esp)
mov    0x54(%esp),%edi
add    %esi,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,0x1c(%esp)
call   804a6e0 <memcpy@plt>
mov    0x50(%esp),%edi
mov    0x58(%esp),%eax
add    0x4(%edi),%eax
mov    (%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,0x4(%edi)
movb   $0x0,(%edx,%eax,1)
movl   $0x10,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8062dd7 <fchmod@plt+0x17c97>
mov    %esi,(%eax)
mov    0x58(%esp),%esi
mov    %esi,0x4(%eax)
mov    0x20(%esp),%esi
movzbl 0xc(%esi),%eax
lea    0x8(,%eax,8),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8062dcb <fchmod@plt+0x17c8b>
mov    0x50(%esp),%eax
xor    %ecx,%ecx
movzbl 0x2b(%esp),%ebp
addl   $0x1,0xc(%eax)
mov    0x20(%esp),%eax
mov    %edi,0x8(%eax)
movzbl 0xc(%eax),%eax
mov    %eax,%esi
cmp    %esi,%ecx
mov    %eax,0x24(%esp)
jge    8062d09 <fchmod@plt+0x17bc9>
lea    (%ecx,%esi,1),%eax
sar    %eax
movzbl (%edi,%eax,8),%edx
sub    %ebp,%edx
test   %edx,%edx
jle    8062d02 <fchmod@plt+0x17bc2>
cmp    %eax,%ecx
mov    %eax,%esi
jge    8062d09 <fchmod@plt+0x17bc9>
add    %ecx,%eax
sar    %eax
movzbl (%edi,%eax,8),%edx
sub    %ebp,%edx
test   %edx,%edx
jg     8062cee <fchmod@plt+0x17bae>
lea    0x1(%eax),%ecx
cmp    %esi,%ecx
jl     8062cdf <fchmod@plt+0x17b9f>
mov    0x24(%esp),%eax
lea    0x0(,%ecx,8),%esi
sub    %ecx,%eax
shl    $0x3,%eax
mov    %eax,0x8(%esp)
lea    (%edi,%esi,1),%eax
mov    %eax,0x4(%esp)
lea    0x8(%edi,%esi,1),%eax
mov    %eax,(%esp)
call   804a680 <memmove@plt>
mov    0x20(%esp),%edi
movzbl 0x2b(%esp),%eax
add    0x8(%edi),%esi
mov    %al,(%esi)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x1c(%esp),%eax
addb   $0x1,0xc(%edi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %ecx,%ecx
mov    0x1c(%esp),%ebp
je     8062d76 <fchmod@plt+0x17c36>
lea    0x1(%eax),%esi
mov    %edx,0x1c(%esp)
jmp    8062bb7 <fchmod@plt+0x17a77>
test   %ecx,%ecx
mov    %edx,%eax
mov    0x1c(%esp),%edx
jne    8062d60 <fchmod@plt+0x17c20>
mov    0x4(%edi),%eax
addl   $0x1,0x2c(%esp)
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x58(%esp)
jb     8062c03 <fchmod@plt+0x17ac3>
mov    0x20(%esp),%edi
subl   $0x1,0x24(%esp)
mov    0x4(%edi),%eax
mov    (%edi),%esi
mov    0x2c(%esp),%edi
add    %eax,%esi
sub    0x58(%esp),%esi
cmp    0x58(%esp),%edi
jne    8062b68 <fchmod@plt+0x17a28>
mov    0x50(%esp),%eax
mov    0x58(%esp),%edi
add    %edi,0x18(%eax)
addl   $0x1,0x1c(%eax)
add    $0x3c,%esp
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    $0xfffffff4,%eax
jmp    8062d4d <fchmod@plt+0x17c0d>
mov    $0xffffffea,%eax
jmp    8062d4d <fchmod@plt+0x17c0d>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1feb5,%ebx
test   %edi,%edi
je     8062e31 <fchmod@plt+0x17cf1>
mov    (%edi),%eax
mov    %edi,%esi
test   %eax,%eax
je     8062e29 <fchmod@plt+0x17ce9>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
add    $0x4,%esi
call   804a690 <free@plt>
mov    (%esi),%eax
test   %eax,%eax
jne    8062e18 <fchmod@plt+0x17cd8>
mov    %edi,(%esp)
call   804a690 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1fe64,%ebx
test   %esi,%esi
je     8062ed5 <fchmod@plt+0x17d95>
mov    (%esi),%edi
test   %edi,%edi
je     8062f01 <fchmod@plt+0x17dc1>
xor    %edx,%edx
jmp    8062e6a <fchmod@plt+0x17d2a>
mov    %eax,%edx
lea    0x1(%edx),%eax
mov    (%esi,%eax,4),%ecx
test   %ecx,%ecx
jne    8062e68 <fchmod@plt+0x17d28>
mov    %edx,%ecx
add    $0x2,%ecx
je     8062ecb <fchmod@plt+0x17d8b>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x3,%eax
jbe    8062ecb <fchmod@plt+0x17d8b>
shl    $0x2,%ecx
mov    %ecx,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8062ecb <fchmod@plt+0x17d8b>
mov    (%esi),%edx
mov    %eax,%ebp
test   %edx,%edx
jne    8062eb4 <fchmod@plt+0x17d74>
jmp    8062ef0 <fchmod@plt+0x17db0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esi
mov    (%esi),%edx
add    $0x4,%ebp
test   %edx,%edx
je     8062ef0 <fchmod@plt+0x17db0>
mov    %edx,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
jne    8062ea8 <fchmod@plt+0x17d68>
mov    %edi,(%esp)
call   8062df0 <fchmod@plt+0x17cb0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x4,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8062ecb <fchmod@plt+0x17d8b>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x0(%ebp)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%ecx
jmp    8062e89 <fchmod@plt+0x17d49>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
je     8062f30 <fchmod@plt+0x17df0>
mov    (%edx),%ecx
test   %ecx,%ecx
je     8062f32 <fchmod@plt+0x17df2>
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    8062f20 <fchmod@plt+0x17de0>
repz ret
lea    0x0(%esi,%eiz,1),%esi
repz ret
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1fd64,%ebx
mov    0x34(%esp),%ebp
test   %esi,%esi
je     8063040 <fchmod@plt+0x17f00>
xor    %ecx,%ecx
cmp    $0xffffffff,%esi
setne  %cl
mov    %ebp,%edx
jmp    8062f7b <fchmod@plt+0x17e3b>
xchg   %ax,%ax
cmp    $0xffffffff,%eax
setne  %al
movzbl %al,%eax
add    %eax,%ecx
add    $0x4,%edx
mov    -0x4(%edx),%eax
test   %eax,%eax
jne    8062f70 <fchmod@plt+0x17e30>
add    $0x1,%ecx
je     8063034 <fchmod@plt+0x17ef4>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x3,%eax
jbe    8063034 <fchmod@plt+0x17ef4>
shl    $0x2,%ecx
mov    %ecx,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8063034 <fchmod@plt+0x17ef4>
xor    %edi,%edi
cmp    $0xffffffff,%esi
je     8062fd8 <fchmod@plt+0x17e98>
mov    %esi,(%esp)
call   804acb0 <__strdup@plt>
mov    0xc(%esp),%ecx
test   %eax,%eax
mov    %eax,(%ecx)
je     8063028 <fchmod@plt+0x17ee8>
mov    $0x1,%edi
lea    0x0(%esi),%esi
add    $0x4,%ebp
mov    -0x4(%ebp),%edx
test   %edx,%edx
je     8063009 <fchmod@plt+0x17ec9>
cmp    $0xffffffff,%edx
je     8062fd8 <fchmod@plt+0x17e98>
mov    0xc(%esp),%eax
mov    %edx,(%esp)
lea    (%eax,%edi,4),%esi
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%esi)
je     8063028 <fchmod@plt+0x17ee8>
add    $0x4,%ebp
mov    -0x4(%ebp),%edx
add    $0x1,%edi
test   %edx,%edx
jne    8062fe2 <fchmod@plt+0x17ea2>
lea    0x0(,%edi,4),%ecx
mov    0xc(%esp),%eax
movl   $0x0,(%eax,%ecx,1)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8062df0 <fchmod@plt+0x17cb0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x4,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8063034 <fchmod@plt+0x17ef4>
xor    %ecx,%ecx
jmp    8063010 <fchmod@plt+0x17ed0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8062f40 <fchmod@plt+0x17e00>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1fc24,%ebx
test   %edx,%edx
je     80630fe <fchmod@plt+0x17fbe>
mov    0x34(%esp),%eax
test   %eax,%eax
je     8063102 <fchmod@plt+0x17fc2>
mov    0x30(%esp),%eax
mov    (%eax),%ebp
mov    %eax,%esi
mov    %eax,%edi
test   %ebp,%ebp
jne    80630c7 <fchmod@plt+0x17f87>
jmp    80630ec <fchmod@plt+0x17fac>
lea    0x0(%esi),%esi
add    $0x4,%edi
add    $0x4,%esi
mov    %ebp,-0x4(%esi)
mov    (%edi),%ebp
test   %ebp,%ebp
je     80630ec <fchmod@plt+0x17fac>
mov    0x34(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    80630b8 <fchmod@plt+0x17f78>
mov    %ebp,(%esp)
add    $0x4,%edi
call   804a690 <free@plt>
mov    (%edi),%ebp
test   %ebp,%ebp
jne    80630c7 <fchmod@plt+0x17f87>
mov    0x30(%esp),%eax
movl   $0x0,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    80630f6 <fchmod@plt+0x17fb6>
lea    -0xc605(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc62d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x1bd,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%edi
test   %edi,%edi
je     8063161 <fchmod@plt+0x18021>
mov    (%edi),%edx
test   %edx,%edx
je     8063161 <fchmod@plt+0x18021>
mov    %edi,%esi
jmp    806314e <fchmod@plt+0x1800e>
nop
mov    (%esi),%edx
test   %edx,%edx
je     8063161 <fchmod@plt+0x18021>
add    $0x4,%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8063080 <fchmod@plt+0x17f40>
test   %esi,%esi
jne    8063148 <fchmod@plt+0x18008>
add    $0x14,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1fb38,%ebx
mov    0x38(%esp),%edi
mov    0x34(%esp),%esi
mov    0x30(%esp),%ebp
mov    %edi,(%esp)
call   804ab30 <strlen@plt>
cmp    %esi,%eax
jb     80631c8 <fchmod@plt+0x18088>
cmp    $0x1,%esi
jbe    80631e0 <fchmod@plt+0x180a0>
sub    $0x1,%esi
mov    %esi,0x8(%esp)
xor    %esi,%esi
mov    %edi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804adb0 <mempcpy@plt>
mov    %eax,0x0(%ebp)
movb   $0x0,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %eax,%eax
jne    80631f8 <fchmod@plt+0x180b8>
mov    0x0(%ebp),%eax
movb   $0x0,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
xor    %esi,%esi
movb   $0x0,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804adb0 <mempcpy@plt>
mov    0xc(%esp),%edx
sub    %edx,%esi
mov    %eax,0x0(%ebp)
movb   $0x0,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
lea    0x3c(%esp),%eax
mov    0x34(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x30(%esp),%edi
mov    0x38(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1fa65,%ebx
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    %esi,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804ad60 <__vsnprintf_chk@plt>
cmp    %eax,%esi
jg     8063290 <fchmod@plt+0x18150>
mov    (%edi),%edx
xor    %eax,%eax
add    %esi,%edx
mov    %edx,(%edi)
movb   $0x0,(%edx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%edi),%edx
sub    %eax,%esi
add    %eax,%edx
mov    %esi,%eax
mov    %edx,(%edi)
movb   $0x0,(%edx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%edi
lea    0x30(%esp),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
lea    0x0(%esi),%esi
mov    %edx,0x8(%esp)
add    $0x4,%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063170 <fchmod@plt+0x18030>
mov    -0x8(%esi),%edx
test   %edx,%edx
jne    80632c8 <fchmod@plt+0x18188>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8063170 <fchmod@plt+0x18030>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
sub    $0x24,%esp
mov    0x30(%esp),%ecx
lea    0x40(%esp),%esi
mov    0x34(%esp),%eax
lea    0x1c(%esp),%edi
mov    0x38(%esp),%edx
mov    %ecx,0x1c(%esp)
lea    0x0(%esi),%esi
mov    %edx,0x8(%esp)
add    $0x4,%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063170 <fchmod@plt+0x18030>
mov    -0x8(%esi),%edx
test   %edx,%edx
jne    8063340 <fchmod@plt+0x18200>
add    $0x24,%esp
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f944,%ebx
test   %eax,%eax
je     8063431 <fchmod@plt+0x182f1>
mov    (%eax),%esi
cmp    $0xffffffff,%esi
je     8063418 <fchmod@plt+0x182d8>
mov    0x4(%eax),%eax
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %esi,%ebp
movl   $0x3e8,0x8(%esp)
sar    $0x1f,%ebp
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
movl   $0xf4240,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,%edx
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
not    %edx
mov    %edx,(%esp)
not    %eax
mov    %eax,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
cmp    %edx,%ebp
jbe    80633f8 <fchmod@plt+0x182b8>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jb     80633fe <fchmod@plt+0x182be>
cmp    %eax,%esi
ja     80633e2 <fchmod@plt+0x182a2>
mov    $0xf4240,%eax
imul   %esi
add    0x18(%esp),%eax
adc    0x1c(%esp),%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%eax),%ecx
mov    $0xffffffff,%edx
mov    $0xffffffff,%eax
cmp    $0xffffffff,%ecx
je     80633ec <fchmod@plt+0x182ac>
mov    %ecx,%eax
jmp    806338c <fchmod@plt+0x1824c>
lea    -0xc356(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc5f9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf482(%ebx),%eax
movl   $0x5e,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f84a,%ebx
mov    0x30(%esp),%eax
lea    0x18(%esp),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804af70 <clock_gettime@plt>
test   %eax,%eax
jne    8063496 <fchmod@plt+0x18356>
mov    %esi,(%esp)
call   8063360 <fchmod@plt+0x18220>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0xc348(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc5f9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc3b4(%ebx),%eax
movl   $0x1f,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x88(%esp),%eax
mov    0x80(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f7da,%ebx
mov    0x8c(%esp),%esi
mov    %eax,0x38(%esp)
mov    0x90(%esp),%eax
test   %edx,%edx
mov    %eax,0x58(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x40(%esp)
je     80638a0 <fchmod@plt+0x18760>
mov    0x84(%esp),%eax
test   %eax,%eax
je     8063876 <fchmod@plt+0x18736>
mov    0x38(%esp),%edx
mov    %edx,%eax
and    %esi,%eax
cmp    $0xffffffff,%eax
je     806386f <fchmod@plt+0x1872f>
mov    %edx,%eax
or     %esi,%eax
je     8063830 <fchmod@plt+0x186f0>
lea    -0x230(%ebx),%eax
mov    %eax,0x3c(%esp)
add    $0x60,%eax
mov    %eax,0x48(%esp)
mov    0x80(%esp),%eax
lea    -0x11546(%ebx),%edx
mov    %edx,0x5c(%esp)
mov    %eax,0x44(%esp)
xor    %eax,%eax
mov    0x3c(%esp),%edi
mov    (%edi),%ecx
mov    0x4(%edi),%edi
cmp    %esi,%edi
ja     8063679 <fchmod@plt+0x18539>
jb     8063578 <fchmod@plt+0x18438>
cmp    0x38(%esp),%ecx
ja     8063679 <fchmod@plt+0x18539>
cmpl   $0x1,0x84(%esp)
jbe    80636a0 <fchmod@plt+0x18560>
mov    0x38(%esp),%ebp
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x34(%esp)
call   806ea80 <fchmod@plt+0x23940>
mov    0x34(%esp),%ecx
mov    %ebp,(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
call   806ebb0 <fchmod@plt+0x23a70>
mov    0x4c(%esp),%ecx
mov    %eax,%ebp
mov    %edx,%eax
or     %ebp,%eax
mov    %edx,0x34(%esp)
je     80635f0 <fchmod@plt+0x184b0>
cmp    $0x0,%esi
ja     80635f0 <fchmod@plt+0x184b0>
cmpl   $0x39386ff,0x38(%esp)
jbe    80636d0 <fchmod@plt+0x18590>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
mov    0x44(%esp),%esi
cmp    %esi,0x80(%esp)
mov    0x54(%esp),%ecx
mov    -0x4(%eax),%edx
lea    -0xbcbe(%ebx),%eax
cmovae 0x5c(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x14(%esp)
lea    -0xc515(%ebx),%eax
mov    %edx,0x20(%esp)
mov    0x50(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x84(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
call   804a510 <__snprintf_chk@plt>
mov    0x34(%esp),%esi
mov    %ebp,0x38(%esp)
cmp    0x84(%esp),%eax
cmova  0x84(%esp),%eax
sub    %eax,0x84(%esp)
add    %eax,0x44(%esp)
mov    $0x1,%eax
mov    0x48(%esp),%ecx
cmp    %ecx,0x3c(%esp)
je     80636a0 <fchmod@plt+0x18560>
mov    0x38(%esp),%ecx
or     %esi,%ecx
je     80636a0 <fchmod@plt+0x18560>
addl   $0xc,0x3c(%esp)
cmp    0x40(%esp),%esi
jae    80636b8 <fchmod@plt+0x18578>
test   %al,%al
je     806355b <fchmod@plt+0x1841b>
xchg   %ax,%ax
mov    0x44(%esp),%eax
movb   $0x0,(%eax)
mov    0x80(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
ja     806355b <fchmod@plt+0x1841b>
mov    0x58(%esp),%edx
cmp    %edx,0x38(%esp)
jae    806355b <fchmod@plt+0x1841b>
jmp    8063696 <fchmod@plt+0x18556>
xchg   %ax,%ax
cmp    $0x0,%edi
ja     80637f0 <fchmod@plt+0x186b0>
xor    %esi,%esi
cmp    $0x1,%ecx
xchg   %ax,%ax
ja     80637f0 <fchmod@plt+0x186b0>
xchg   %ax,%ax
cmpl   $0x0,0x40(%esp)
ja     80636f6 <fchmod@plt+0x185b6>
cmpl   $0x1,0x58(%esp)
jbe    8063765 <fchmod@plt+0x18625>
mov    0x58(%esp),%ecx
mov    %ebp,%eax
mov    %esi,%ebp
mov    0x40(%esp),%edi
mov    %ecx,%esi
mov    %eax,%ecx
xchg   %ax,%ax
mov    0x34(%esp),%eax
sub    $0x1,%ebp
mov    %ecx,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
call   806ea80 <fchmod@plt+0x23940>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x34(%esp)
call   806ea80 <fchmod@plt+0x23940>
mov    0x38(%esp),%ecx
cmp    $0x0,%edx
mov    %eax,%esi
mov    %edx,%edi
ja     8063708 <fchmod@plt+0x185c8>
cmp    $0x1,%eax
ja     8063708 <fchmod@plt+0x185c8>
mov    %ebp,%esi
mov    %ecx,%ebp
test   %esi,%esi
jle    80635f0 <fchmod@plt+0x184b0>
mov    0x3c(%esp),%eax
mov    0x44(%esp),%ecx
cmp    %ecx,0x80(%esp)
mov    0x34(%esp),%edi
mov    -0x4(%eax),%edx
lea    -0xbcbe(%ebx),%eax
cmovae 0x5c(%esp),%eax
mov    %esi,0x20(%esp)
mov    0x50(%esp),%esi
mov    %edi,0x28(%esp)
mov    0x54(%esp),%edi
mov    %eax,0x14(%esp)
lea    -0xc525(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x84(%esp),%eax
mov    %esi,0x18(%esp)
xor    %esi,%esi
mov    %edx,0x2c(%esp)
mov    %ebp,0x24(%esp)
mov    %edi,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804a510 <__snprintf_chk@plt>
movl   $0x0,0x38(%esp)
jmp    806365a <fchmod@plt+0x1851a>
xchg   %ax,%ax
xor    %esi,%esi
lea    0x0(%esi),%esi
mov    %ecx,(%esp)
add    $0x1,%esi
mov    %edi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   806ea80 <fchmod@plt+0x23940>
cmp    $0x0,%edx
mov    %eax,%ecx
mov    %edx,%edi
ja     80637f8 <fchmod@plt+0x186b8>
cmp    $0x1,%eax
ja     80637f8 <fchmod@plt+0x186b8>
jmp    80636e8 <fchmod@plt+0x185a8>
lea    0x0(%esi),%esi
lea    -0xc282(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   804ac80 <snprintf@plt>
mov    0x80(%esp),%eax
mov    0x84(%esp),%esi
movb   $0x0,-0x1(%eax,%esi,1)
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    80636ae <fchmod@plt+0x1856e>
lea    -0xc366(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc5f9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc5df(%ebx),%eax
movl   $0xf9,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xc366(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc5f9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbcc9(%ebx),%eax
movl   $0xf8,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f3dd,%ebx
sub    $0x14,%esp
mov    %gs:0x0,%eax
sub    $0x4,%eax
mov    (%eax),%edx
mov    %eax,%esi
test   %edx,%edx
je     80638fc <fchmod@plt+0x187bc>
mov    %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x1e,(%esp)
call   804a7d0 <sysconf@plt>
test   %eax,%eax
jle    8063910 <fchmod@plt+0x187d0>
mov    %eax,(%esi)
jmp    80638f6 <fchmod@plt+0x187b6>
lea    -0xb8fb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc319(%ebx),%eax
movl   $0x5b,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f367,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
jne    8063970 <fchmod@plt+0x18830>
test   %eax,%eax
sete   %al
test   %edx,%edx
sete   %dl
add    $0x18,%esp
and    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
je     806395b <fchmod@plt+0x1881b>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f314,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8063a0c <fchmod@plt+0x188cc>
test   %edi,%edi
je     8063a36 <fchmod@plt+0x188f6>
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebp
call   804ab30 <strlen@plt>
test   %eax,%eax
je     80639f8 <fchmod@plt+0x188b8>
cmp    %eax,%ebp
jb     8063a08 <fchmod@plt+0x188c8>
sub    %eax,%ebp
add    %ebp,%esi
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a770 <memcmp@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
cmove  %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
lea    (%esi,%ebp,1),%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80639ed <fchmod@plt+0x188ad>
lea    -0xb904(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x71,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb904(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc313(%ebx),%eax
movl   $0x72,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f246,%ebx
test   %eax,%eax
je     8063b88 <fchmod@plt+0x18a48>
cmpb   $0x2e,(%eax)
je     8063af0 <fchmod@plt+0x189b0>
mov    $0xb,%ecx
mov    %eax,%esi
lea    -0xc30b(%ebx),%edi
mov    $0x1,%edx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %al
cmp    %al,%cl
je     8063ae0 <fchmod@plt+0x189a0>
mov    $0xc,%ecx
mov    %ebp,%esi
lea    -0xc300(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8063ae0 <fchmod@plt+0x189a0>
mov    $0xd,%ecx
mov    %ebp,%esi
lea    -0xc2f4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8063ae0 <fchmod@plt+0x189a0>
lea    -0xc2e7(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   8063990 <fchmod@plt+0x18850>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8063b00 <fchmod@plt+0x189c0>
nop
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0xc2df(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063990 <fchmod@plt+0x18850>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8063ae0 <fchmod@plt+0x189a0>
lea    -0xc2d6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063990 <fchmod@plt+0x18850>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8063ae0 <fchmod@plt+0x189a0>
lea    -0xc2cd(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063990 <fchmod@plt+0x18850>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8063ae0 <fchmod@plt+0x189a0>
lea    -0xc2c3(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063990 <fchmod@plt+0x18850>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8063ae0 <fchmod@plt+0x189a0>
lea    -0xc2b9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8063990 <fchmod@plt+0x18850>
test   %eax,%eax
setne  %dl
jmp    8063ae0 <fchmod@plt+0x189a0>
lea    -0xb977(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xcae9(%ebx),%eax
movl   $0x5ad,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f0e7,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
je     8063c39 <fchmod@plt+0x18af9>
test   %edx,%edx
jne    8063bf8 <fchmod@plt+0x18ab8>
jmp    8063c0f <fchmod@plt+0x18acf>
lea    0x0(%esi,%eiz,1),%esi
cmp    (%eax),%cl
lea    0x0(%esi),%esi
jne    8063c08 <fchmod@plt+0x18ac8>
add    $0x1,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
jne    8063be8 <fchmod@plt+0x18aa8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    -0xb90f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xfdd9(%ebx),%eax
movl   $0x87,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb90f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x86,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1f037,%ebx
test   %eax,%eax
js     8063c98 <fchmod@plt+0x18b58>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
test   %eax,%eax
js     8063cc2 <fchmod@plt+0x18b82>
add    $0x18,%esp
pop    %ebx
ret
lea    -0xb91c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc2af(%ebx),%eax
movl   $0xbe,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
xor    %eax,%eax
mov    %edx,%ecx
neg    %ecx
cmp    $0x4,%edx
cmovne %ecx,%eax
jmp    8063c93 <fchmod@plt+0x18b53>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1efcc,%ebx
sub    $0x10,%esp
call   804acd0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8063c70 <fchmod@plt+0x18b30>
test   %eax,%eax
jne    8063d13 <fchmod@plt+0x18bd3>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0xb930(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc2a7(%ebx),%eax
movl   $0xd7,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ef65,%ebx
test   %esi,%esi
je     8063dfe <fchmod@plt+0x18cbe>
movzbl (%esi),%edx
movzbl %dl,%edi
cmp    $0x31,%edi
je     8063dc8 <fchmod@plt+0x18c88>
mov    %edx,%eax
and    $0xffffffdf,%eax
cmp    $0x59,%al
mov    %edx,0x1c(%esp)
je     8063de0 <fchmod@plt+0x18ca0>
cmp    $0x54,%al
je     8063de0 <fchmod@plt+0x18ca0>
lea    -0xc3f9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804abb0 <strcasecmp@plt>
mov    %eax,%ecx
mov    $0x1,%eax
test   %ecx,%ecx
je     8063dd3 <fchmod@plt+0x18c93>
cmp    $0x30,%edi
mov    0x1c(%esp),%edx
je     8063df0 <fchmod@plt+0x18cb0>
and    $0xffffffd7,%edx
cmp    $0x46,%dl
je     8063dfa <fchmod@plt+0x18cba>
lea    -0xf5cd(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804abb0 <strcasecmp@plt>
mov    $0xffffffea,%edx
test   %eax,%eax
cmovne %edx,%eax
jmp    8063dd3 <fchmod@plt+0x18c93>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%esi)
mov    $0x1,%eax
jne    8063d68 <fchmod@plt+0x18c28>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %al,%al
cmpb   $0x0,0x1(%esi)
je     8063dd3 <fchmod@plt+0x18c93>
jmp    8063d9f <fchmod@plt+0x18c5f>
xor    %eax,%eax
jmp    8063dd3 <fchmod@plt+0x18c93>
lea    -0xb93e(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xfd64(%ebx),%eax
movl   $0xef,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ee74,%ebx
mov    0x44(%esp),%edi
movl   $0x0,0x1c(%esp)
test   %esi,%esi
je     8063ec5 <fchmod@plt+0x18d85>
test   %edi,%edi
je     8063eef <fchmod@plt+0x18daf>
call   804acd0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804ab00 <strtoul@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
je     8063ec0 <fchmod@plt+0x18d80>
cmp    %edx,%esi
je     8063ec0 <fchmod@plt+0x18d80>
cmpb   $0x0,(%edx)
mov    0x0(%ebp),%edx
je     8063eb0 <fchmod@plt+0x18d70>
mov    %edx,%eax
neg    %eax
test   %edx,%edx
mov    $0xffffffea,%edx
cmovg  %eax,%edx
add    $0x2c,%esp
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %edx,%edx
jne    8063e97 <fchmod@plt+0x18d57>
mov    %eax,(%edi)
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x0(%ebp),%edx
jmp    8063e97 <fchmod@plt+0x18d57>
lea    -0xb952(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x12a,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb952(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc280(%ebx),%eax
movl   $0x12b,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ed86,%ebx
mov    0x34(%esp),%esi
movl   $0x0,0x1c(%esp)
test   %eax,%eax
je     8063f6a <fchmod@plt+0x18e2a>
test   %esi,%esi
je     8063f94 <fchmod@plt+0x18e54>
lea    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8063e30 <fchmod@plt+0x18cf0>
test   %eax,%eax
js     8063f64 <fchmod@plt+0x18e24>
mov    0x1c(%esp),%eax
mov    %eax,(%esi)
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0xb948(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x116,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb948(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xc272(%ebx),%eax
movl   $0x117,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x3c(%esp),%edi
mov    0x30(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ece0,%ebx
mov    0x38(%esp),%ebp
mov    (%edi),%esi
test   %esi,%esi
cmove  %eax,%esi
cmpb   $0x0,(%esi)
je     8064020 <fchmod@plt+0x18ee0>
cmpb   $0x0,(%eax)
je     8064020 <fchmod@plt+0x18ee0>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804b0c0 <strspn@plt>
mov    %ebp,0x4(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   804a5e0 <strcspn@plt>
mov    0x34(%esp),%edx
mov    %eax,(%edx)
add    %esi,%eax
mov    %eax,(%edi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ec76,%ebx
test   %eax,%eax
je     806408b <fchmod@plt+0x18f4b>
movzbl (%eax),%edx
test   %dl,%dl
je     8064087 <fchmod@plt+0x18f47>
movsbl %dl,%ecx
cmp    $0xa,%ecx
je     8064087 <fchmod@plt+0x18f47>
cmp    $0xd,%ecx
lea    0x1(%eax),%edx
jne    8064075 <fchmod@plt+0x18f35>
jmp    8064087 <fchmod@plt+0x18f47>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%ecx
je     806407e <fchmod@plt+0x18f3e>
add    $0x1,%edx
cmp    $0xd,%ecx
je     806407e <fchmod@plt+0x18f3e>
movsbl (%edx),%ecx
mov    %edx,%esi
test   %cl,%cl
jne    8064068 <fchmod@plt+0x18f28>
movb   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %eax,%esi
jmp    806407e <fchmod@plt+0x18f3e>
lea    -0xb95e(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x246,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ebe0,%ebx
test   %eax,%eax
sete   %al
test   %edx,%edx
sete   %dl
test   %al,%al
jne    8064170 <fchmod@plt+0x19030>
mov    0x30(%esp),%eax
test   %dl,%dl
mov    %eax,(%esp)
jne    80641b0 <fchmod@plt+0x19070>
call   804ab30 <strlen@plt>
xor    %ecx,%ecx
mov    %eax,%edi
not    %eax
cmp    %eax,0x38(%esp)
ja     8064164 <fchmod@plt+0x19024>
mov    0x38(%esp),%ebp
add    %edi,%ebp
mov    %ebp,%eax
add    $0x1,%eax
je     8064164 <fchmod@plt+0x19024>
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804a9f0 <malloc@plt>
mov    0xc(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8064164 <fchmod@plt+0x19024>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a6e0 <memcpy@plt>
mov    0x38(%esp),%eax
lea    (%esi,%edi,1),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   804a6e0 <memcpy@plt>
mov    %esi,%ecx
movb   $0x0,(%esi,%ebp,1)
add    $0x1c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %dl,%dl
jne    8064190 <fchmod@plt+0x19050>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a840 <__strndup@plt>
mov    %eax,%ecx
jmp    8064164 <fchmod@plt+0x19024>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
mov    %eax,%ecx
mov    %ecx,%eax
ret
call   804acb0 <__strdup@plt>
mov    %eax,%ecx
jmp    8064164 <fchmod@plt+0x19024>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1eae6,%ebx
test   %esi,%esi
je     8064200 <fchmod@plt+0x190c0>
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80640c0 <fchmod@plt+0x18f80>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80641e0 <fchmod@plt+0x190a0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    $0x15,%esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ea93,%ebx
mov    0x30(%esp),%ebp
mov    0x34(%esp),%edi
jmp    8064244 <fchmod@plt+0x19104>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc350,(%esp)
call   804a940 <usleep@plt>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804abc0 <__open64_2@plt>
test   %eax,%eax
jns    8064298 <fchmod@plt+0x19158>
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x5,%edx
jne    8064288 <fchmod@plt+0x19148>
sub    $0x1,%esi
jne    8064238 <fchmod@plt+0x190f8>
mov    $0xfffffffb,%edx
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
neg    %edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   804afb0 <isatty@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
js     8064274 <fchmod@plt+0x19134>
jne    806426a <fchmod@plt+0x1912a>
mov    %edx,(%esp)
call   8063ce0 <fchmod@plt+0x18ba0>
mov    $0xffffffe7,%edx
jmp    806426a <fchmod@plt+0x1912a>
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e9e7,%ebx
test   %eax,%eax
je     8064315 <fchmod@plt+0x191d5>
mov    0x10(%eax),%edx
mov    %edx,%ecx
and    $0xf000,%ecx
cmp    $0x8000,%ecx
je     8064300 <fchmod@plt+0x191c0>
and    $0xb000,%edx
cmp    $0x2000,%edx
sete   %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
cmpl   $0x0,0x30(%eax)
jl     806430e <fchmod@plt+0x191ce>
jg     80642ea <fchmod@plt+0x191aa>
cmpl   $0x0,0x2c(%eax)
ja     80642ea <fchmod@plt+0x191aa>
mov    $0x1,%eax
jmp    80642f9 <fchmod@plt+0x191b9>
lea    -0xb985(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xfa2a(%ebx),%eax
movl   $0xd72,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
nop
push   %esi
push   %ebx
sub    $0x74,%esp
mov    0x80(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e963,%ebx
test   %eax,%eax
je     8064397 <fchmod@plt+0x19257>
lea    0x10(%esp),%esi
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
js     8064388 <fchmod@plt+0x19248>
mov    %esi,(%esp)
call   80642c0 <fchmod@plt+0x19180>
add    $0x74,%esp
pop    %ebx
pop    %esi
movzbl %al,%eax
ret
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x74,%esp
pop    %ebx
pop    %esi
neg    %eax
ret
lea    -0xb998(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf77f(%ebx),%eax
movl   $0xd80,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e8d6,%ebx
test   %edx,%edx
je     8064423 <fchmod@plt+0x192e3>
movzbl 0x12(%edx),%eax
cmp    $0xa,%al
je     80643f6 <fchmod@plt+0x192b6>
xor    %ecx,%ecx
test   $0xf7,%al
jne    806441b <fchmod@plt+0x192db>
lea    0x13(%edx),%esi
mov    %esi,%eax
call   8063a60 <fchmod@plt+0x18920>
xor    %ecx,%ecx
test   %al,%al
jne    806441b <fchmod@plt+0x192db>
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063990 <fchmod@plt+0x18850>
test   %eax,%eax
setne  %cl
add    $0x14,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
lea    -0xb9b3(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf690(%ebx),%eax
movl   $0xe3c,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e854,%ebx
test   %edi,%edi
je     8064567 <fchmod@plt+0x19427>
mov    0x44(%esp),%esi
test   %esi,%esi
je     80645bb <fchmod@plt+0x1947b>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     8064591 <fchmod@plt+0x19451>
mov    %edi,(%esp)
call   804ab30 <strlen@plt>
add    $0x8,%eax
je     8064560 <fchmod@plt+0x19420>
mov    %eax,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8064560 <fchmod@plt+0x19420>
mov    %edi,(%esp)
call   80624c0 <fchmod@plt+0x17380>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ebp
sub    %edi,%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0x1c(%esp)
call   804a6e0 <memcpy@plt>
mov    0x1c(%esp),%ecx
lea    0x1(%esi,%ebp,1),%eax
movb   $0x2e,(%esi,%ebp,1)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804a7b0 <stpcpy@plt>
mov    $0x5858,%edx
movl   $0x58585858,(%eax)
mov    %dx,0x4(%eax)
movb   $0x0,0x6(%eax)
movl   $0x80001,0x4(%esp)
mov    %esi,(%esp)
call   804a900 <mkostemp64@plt>
test   %eax,%eax
js     8064540 <fchmod@plt+0x19400>
lea    -0x101e9(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804aaa0 <fdopen@plt>
test   %eax,%eax
je     8064538 <fchmod@plt+0x193f8>
mov    0x44(%esp),%edx
mov    %eax,(%edx)
mov    0x48(%esp),%eax
mov    %esi,(%eax)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a810 <unlink@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff4,%eax
jmp    806452c <fchmod@plt+0x193ec>
lea    -0xb9c3(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0xf46,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb9c3(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf64(%ebx),%eax
movl   $0xf48,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xb9c3(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xf211(%ebx),%eax
movl   $0xf47,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e6b4,%ebx
test   %edi,%edi
je     80646a0 <fchmod@plt+0x19560>
mov    %edi,(%esp)
lea    0x38(%esp),%ebp
call   804ab30 <strlen@plt>
mov    %eax,%esi
mov    0x34(%esp),%eax
test   %eax,%eax
jne    8064636 <fchmod@plt+0x194f6>
jmp    8064650 <fchmod@plt+0x19510>
xchg   %ax,%ax
add    %eax,%esi
mov    0x0(%ebp),%eax
lea    0x4(%ebp),%edx
test   %eax,%eax
je     8064650 <fchmod@plt+0x19510>
mov    %edx,%ebp
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %esi,%edx
not    %edx
cmp    %edx,%eax
jbe    8064628 <fchmod@plt+0x194e8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%esi
je     8064646 <fchmod@plt+0x19506>
mov    %esi,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8064646 <fchmod@plt+0x19506>
mov    %edi,0x4(%esp)
lea    0x3c(%esp),%edi
mov    %esi,(%esp)
call   804a7b0 <stpcpy@plt>
mov    0x34(%esp),%edx
test   %edx,%edx
je     8064696 <fchmod@plt+0x19556>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x4(%esp)
add    $0x4,%edi
mov    %eax,(%esp)
call   804a7b0 <stpcpy@plt>
mov    -0x8(%edi),%edx
test   %edx,%edx
jne    8064680 <fchmod@plt+0x19540>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
je     8064646 <fchmod@plt+0x19506>
movb   $0x0,(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e5ec,%ebx
sub    $0x10,%esp
mov    %gs:0x0,%eax
sub    $0x8,%eax
mov    (%eax),%edx
mov    %eax,%esi
test   %edx,%edx
je     80646f1 <fchmod@plt+0x195b1>
test   %edx,%edx
setg   %al
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a9a0 <getpid@plt>
movl   $0xe0,(%esp)
mov    %eax,%edi
call   804ad00 <syscall@plt>
xor    %edx,%edx
cmp    %eax,%edi
sete   %dl
lea    -0x1(%edx,%edx,1),%edx
mov    %edx,(%esi)
jmp    80646e5 <fchmod@plt+0x195a5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e585,%ebx
movl   $0x0,0x1c(%esp)
test   %edi,%edi
je     80647a8 <fchmod@plt+0x19668>
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1b4(%ebx,%esi,4),%eax
test   %eax,%eax
je     8064763 <fchmod@plt+0x19623>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     8064798 <fchmod@plt+0x19658>
add    $0x1,%esi
cmp    $0x8,%esi
jne    8064748 <fchmod@plt+0x19608>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063e30 <fchmod@plt+0x18cf0>
test   %eax,%eax
js     80647a1 <fchmod@plt+0x19661>
mov    0x1c(%esp),%edx
mov    $0xffffffff,%eax
cmp    $0x7,%edx
cmovbe %edx,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0xffffffff,%eax
jmp    806478e <fchmod@plt+0x1964e>
lea    -0xb9d9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xc344(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf66(%ebx),%eax
movl   $0x124a,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e4c8,%ebx
mov    0x50(%esp),%esi
lea    0x2c(%esp),%eax
lea    0x28(%esp),%ebp
mov    0x54(%esp),%edi
mov    %eax,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
movl   $0x4,0x2c(%esp)
call   804a890 <getsockopt@plt>
test   %eax,%eax
js     8064835 <fchmod@plt+0x196f5>
cmpl   $0x4,0x2c(%esp)
je     8064880 <fchmod@plt+0x19740>
movl   $0x4,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,0x28(%esp)
call   804a4d0 <setsockopt@plt>
mov    $0x1,%edx
test   %eax,%eax
jns    806486f <fchmod@plt+0x1972f>
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
neg    %edx
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    (%edi,%edi,1),%eax
xor    %edx,%edx
cmp    %eax,0x28(%esp)
jb     8064835 <fchmod@plt+0x196f5>
jmp    806486f <fchmod@plt+0x1972f>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e41b,%ebx
lea    0xfffffff4,%edi
sub    $0x7c,%esp
mov    %gs:0x0,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi,%eax,1),%eax
test   %eax,%eax
js     80648d0 <fchmod@plt+0x19790>
setne  %al
add    $0x7c,%esp
mov    %eax,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xbd12(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad80 <access@plt>
test   %eax,%eax
js     8064940 <fchmod@plt+0x19800>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1033a(%ebx),%eax
mov    %eax,(%esp)
call   804a9e0 <statfs64@plt>
test   %eax,%eax
js     8064940 <fchmod@plt+0x19800>
mov    0x1c(%esp),%eax
cmp    $0x858458f6,%eax
sete   %dl
cmp    $0x1021994,%eax
sete   %al
mov    %edx,%esi
or     %eax,%esi
mov    %esi,%eax
movzbl %al,%ebp
mov    %gs:0x0,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%edi,%eax,1)
add    $0x7c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
xor    %ebp,%ebp
jmp    8064921 <fchmod@plt+0x197e1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
test   %eax,%eax
jne    8064973 <fchmod@plt+0x19833>
jmp    80649ab <fchmod@plt+0x1986b>
lea    0x0(%esi),%esi
je     80649b8 <fchmod@plt+0x19878>
lea    0x1(%esi),%ebp
cmp    0x28(%esp),%ebp
jae    80649ab <fchmod@plt+0x1986b>
mov    0x28(%esp),%esi
mov    0x34(%esp),%eax
mov    0x2c(%esp),%edi
add    %ebp,%esi
shr    %esi
imul   %esi,%edi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
add    0x24(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   *0x30(%esp)
test   %eax,%eax
jns    8064968 <fchmod@plt+0x19828>
mov    %esi,0x28(%esp)
cmp    0x28(%esp),%ebp
jb     8064973 <fchmod@plt+0x19833>
add    $0x10,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x38(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e2d0,%ebx
mov    0x30(%esp),%edi
cmp    %eax,(%esi)
jb     8064a00 <fchmod@plt+0x198c0>
mov    (%edi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    (%eax,%eax,1),%ebp
mov    $0x40,%eax
cmp    $0x40,%ebp
cmovb  %eax,%ebp
mov    %ebp,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     8064a2c <fchmod@plt+0x198ec>
mov    %eax,(%edi)
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    80649f4 <fchmod@plt+0x198b4>
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e27a,%ebx
sub    $0x430,%esp
mov    %eax,(%esp)
mov    0x440(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
call   80679f0 <fchmod@plt+0x1c8b0>
test   %eax,%eax
je     8064adb <fchmod@plt+0x1999b>
mov    %eax,0x14(%esp)
lea    -0x1033a(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb8f1(%ebx),%eax
mov    %esi,0xc(%esp)
lea    0x2c(%esp),%esi
movl   $0x0,0x18(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,%eax
test   %al,%al
je     8064af8 <fchmod@plt+0x199b8>
movl   $0x1ed,0x4(%esp)
mov    %esi,(%esp)
call   806e8c0 <fchmod@plt+0x23780>
movl   $0x124,0x8(%esp)
movl   $0xa0241,0x4(%esp)
mov    %esi,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
js     8064adb <fchmod@plt+0x1999b>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    8064b02 <fchmod@plt+0x199c2>
add    $0x430,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804a810 <unlink@plt>
jmp    8064adb <fchmod@plt+0x1999b>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e194,%ebx
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
test   %eax,%eax
jne    8064b7c <fchmod@plt+0x19a3c>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8066080 <fchmod@plt+0x1af40>
movzbl 0xc(%esp),%ebp
mov    0x30(%esp),%edi
test   %eax,%eax
mov    %eax,%esi
je     8064b72 <fchmod@plt+0x19a32>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,%edx
mov    %edi,%eax
call   8064a30 <fchmod@plt+0x198f0>
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    8064b50 <fchmod@plt+0x19a10>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0xc(%esp)
je     8064b32 <fchmod@plt+0x199f2>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
mov    %eax,%ebp
je     8064b32 <fchmod@plt+0x199f2>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
mov    %eax,%edi
jne    8064bc6 <fchmod@plt+0x19a86>
jmp    8064bf8 <fchmod@plt+0x19ab8>
xchg   %ax,%ax
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     8064bf8 <fchmod@plt+0x19ab8>
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    8064bb8 <fchmod@plt+0x19a78>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    8064b98 <fchmod@plt+0x19a58>
jmp    8064b32 <fchmod@plt+0x199f2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %esi,%edx
movl   $0x0,(%esp)
call   8064a30 <fchmod@plt+0x198f0>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    8064b98 <fchmod@plt+0x19a58>
jmp    8064b32 <fchmod@plt+0x199f2>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x85c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1e085,%ebx
mov    0x870(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x84c(%esp)
xor    %eax,%eax
mov    %edi,(%esp)
call   80652c0 <fchmod@plt+0x1a180>
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
test   %eax,%eax
mov    %eax,%esi
je     806504b <fchmod@plt+0x19f0b>
mov    %edi,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
je     8065058 <fchmod@plt+0x19f18>
lea    -0xb8ad(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
movb   $0x1,0x33(%esp)
lea    -0xb8db(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x44c(%esp),%eax
mov    %eax,%esi
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,(%esp)
movl   $0x1ed,0x4(%esp)
call   806e8c0 <fchmod@plt+0x23780>
lea    -0x101e9(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8064ff8 <fchmod@plt+0x19eb8>
mov    %edi,(%esp)
call   8068720 <fchmod@plt+0x1d5e0>
test   %al,%al
jne    8064f08 <fchmod@plt+0x19dc8>
cmpb   $0x0,0x33(%esp)
jne    8064df8 <fchmod@plt+0x19cb8>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804aae0 <rename@plt>
test   %eax,%eax
js     806504b <fchmod@plt+0x19f0b>
mov    0x2c(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jg     8064d88 <fchmod@plt+0x19c48>
mov    0x84c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    806515c <fchmod@plt+0x1a01c>
add    $0x85c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
lea    -0x13b58(%ebx),%edx
cmpb   $0x0,0x33(%esp)
lea    -0xb8e1(%ebx),%ecx
movl   $0xb1,0xc(%esp)
cmove  %ecx,%edx
mov    %edx,0x18(%esp)
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0xb844(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb825(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb86c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    8064d61 <fchmod@plt+0x19c21>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    8064f58 <fchmod@plt+0x19e18>
mov    %edi,(%esp)
call   8065670 <fchmod@plt+0x1a530>
or     %eax,%edx
jne    8064f28 <fchmod@plt+0x19de8>
mov    %edi,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
mov    %eax,%ebp
test   %ebp,%ebp
lea    -0xb8bc(%ebx),%eax
mov    %eax,0x38(%esp)
je     8064eae <fchmod@plt+0x19d6e>
mov    %edi,0x3c(%esp)
mov    %ebp,%edi
jmp    8064e5e <fchmod@plt+0x19d1e>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     8064eaa <fchmod@plt+0x19d6a>
mov    %edi,(%esp)
call   806aeb0 <fchmod@plt+0x1fd70>
test   %eax,%eax
je     8064e50 <fchmod@plt+0x19d10>
mov    %edi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
call   804af60 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8064e5e <fchmod@plt+0x19d1e>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
call   8066080 <fchmod@plt+0x1af40>
mov    %eax,%ebp
test   %ebp,%ebp
lea    -0xb8b3(%ebx),%eax
je     8064d2a <fchmod@plt+0x19bea>
mov    %edi,0x38(%esp)
mov    %ebp,%edi
mov    %eax,%ebp
xchg   %ax,%ax
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804af60 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8064ed0 <fchmod@plt+0x19d90>
mov    0x38(%esp),%edi
jmp    8064d2a <fchmod@plt+0x19bea>
nop
mov    %esi,(%esp)
call   804ad20 <fileno@plt>
movl   $0x3a4,0x4(%esp)
mov    %eax,(%esp)
call   804b140 <fchmod@plt>
jmp    8064d1f <fchmod@plt+0x19bdf>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8065670 <fchmod@plt+0x1a530>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb8c4(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    8064e29 <fchmod@plt+0x19ce9>
nop
mov    %edi,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
mov    %eax,%ebp
test   %ebp,%ebp
lea    -0xb8d6(%ebx),%eax
je     8064fad <fchmod@plt+0x19e6d>
mov    %edi,0x38(%esp)
mov    %ebp,%edi
mov    %eax,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
add    $0x5,%eax
mov    %eax,0xc(%esp)
call   804af60 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8064f78 <fchmod@plt+0x19e38>
mov    0x38(%esp),%edi
mov    %edi,(%esp)
call   80686a0 <fchmod@plt+0x1d560>
test   %eax,%eax
jne    8065112 <fchmod@plt+0x19fd2>
mov    %edi,(%esp)
call   80686e0 <fchmod@plt+0x1d5a0>
test   %eax,%eax
js     8064e19 <fchmod@plt+0x19cd9>
mov    %edi,(%esp)
call   80686e0 <fchmod@plt+0x1d5a0>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb8ca(%ebx),%eax
mov    %eax,0x8(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    8064e19 <fchmod@plt+0x19cd9>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806504b <fchmod@plt+0x19f0b>
mov    0x34(%esp),%eax
movl   $0x86,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0xb89c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb825(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb86c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
mov    $0xffffffff,%esi
jmp    8064d61 <fchmod@plt+0x19c21>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80686a0 <fchmod@plt+0x1d560>
test   %eax,%eax
jne    8064c79 <fchmod@plt+0x19b39>
mov    %edi,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%ebp
je     8065096 <fchmod@plt+0x19f56>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   806aeb0 <fchmod@plt+0x1fd70>
test   %eax,%eax
jne    8064c79 <fchmod@plt+0x19b39>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
jne    8065078 <fchmod@plt+0x19f38>
mov    %edi,(%esp)
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
jne    8064c79 <fchmod@plt+0x19b39>
mov    %edi,(%esp)
call   80686e0 <fchmod@plt+0x1d5a0>
test   %eax,%eax
jns    8064c79 <fchmod@plt+0x19b39>
lea    -0xb8ad(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
je     806513d <fchmod@plt+0x19ffd>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x33(%esp)
jmp    8064cac <fchmod@plt+0x19b6c>
mov    %edi,(%esp)
call   80686a0 <fchmod@plt+0x1d560>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb8d0(%ebx),%eax
mov    %eax,0x8(%esp)
call   804af60 <__fprintf_chk@plt>
jmp    8064fbd <fchmod@plt+0x19e7d>
mov    %edi,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
test   %eax,%eax
mov    %eax,%esi
jne    8065108 <fchmod@plt+0x19fc8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a810 <unlink@plt>
jmp    8064d61 <fchmod@plt+0x19c21>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x434,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1db37,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x440(%esp),%eax
mov    %eax,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
test   %eax,%eax
je     80651f2 <fchmod@plt+0x1a0b2>
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%esi
lea    -0xb8ad(%ebx),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,(%esp)
call   804a810 <unlink@plt>
xor    %eax,%eax
mov    0x42c(%esp),%edx
xor    %gs:0x14,%edx
jne    80651f9 <fchmod@plt+0x1a0b9>
add    $0x434,%esp
pop    %ebx
pop    %esi
ret
mov    $0xffffffff,%eax
jmp    80651d9 <fchmod@plt+0x1a099>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x230,%esp
mov    0x240(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1da9f,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     806529b <fchmod@plt+0x1a15b>
cmpb   $0x0,0x10e(%esi)
je     8065258 <fchmod@plt+0x1a118>
mov    0x30(%esi),%eax
mov    0x22c(%esp),%edx
xor    %gs:0x14,%edx
jne    806529f <fchmod@plt+0x1a15f>
add    $0x230,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%edi
movb   $0x1,0x10e(%esi)
movl   $0x200,0x10(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esi),%eax
mov    %eax,0x8(%esp)
lea    -0x13b83(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806d030 <fchmod@plt+0x21ef0>
test   %eax,%eax
jle    8065237 <fchmod@plt+0x1a0f7>
mov    %edi,(%esp)
call   804acb0 <__strdup@plt>
mov    %eax,0x30(%esi)
jmp    806523a <fchmod@plt+0x1a0fa>
xor    %eax,%eax
jmp    806523a <fchmod@plt+0x1a0fa>
nop
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
movb   $0x1,0x10f(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     80652d0 <fchmod@plt+0x1a190>
mov    (%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     80652ef <fchmod@plt+0x1a1af>
addl   $0x1,0xec(%eax)
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d9a6,%ebx
test   %esi,%esi
je     8065410 <fchmod@plt+0x1a2d0>
mov    0xec(%esi),%eax
lea    -0x1(%eax),%edx
mov    %esi,%eax
test   %edx,%edx
mov    %edx,0xec(%esi)
jle    8065338 <fchmod@plt+0x1a1f8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esi),%eax
test   %eax,%eax
je     8065347 <fchmod@plt+0x1a207>
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
lea    0x4c(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x68(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x84(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0xa0(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0xbc(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x30(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x3c(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    8065331 <fchmod@plt+0x1a1f1>
nop
xor    %eax,%eax
jmp    8065331 <fchmod@plt+0x1a1f1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     8065430 <fchmod@plt+0x1a2f0>
mov    0xc(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     8065450 <fchmod@plt+0x1a310>
mov    0x8(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4ac,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d843,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x49c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     80655cc <fchmod@plt+0x1a48c>
xor    %eax,%eax
cmpb   $0x0,0x113(%edi)
je     80654b8 <fchmod@plt+0x1a378>
mov    0x49c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80655d6 <fchmod@plt+0x1a496>
add    $0x4ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     80655cc <fchmod@plt+0x1a48c>
mov    %eax,(%esp)
call   804af10 <readdir64@plt>
movl   $0x0,0x2c(%esp)
test   %eax,%eax
je     80655b4 <fchmod@plt+0x1a474>
lea    -0x1033a(%ebx),%ecx
mov    %ecx,0x28(%esp)
mov    %edi,0x24(%esp)
jmp    8065510 <fchmod@plt+0x1a3d0>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     80655b0 <fchmod@plt+0x1a470>
movzbl 0x12(%eax),%edx
and    $0xfffffffd,%edx
cmp    $0x8,%dl
jne    8065500 <fchmod@plt+0x1a3c0>
lea    0x13(%eax),%ebp
mov    0x24(%esp),%eax
lea    0x9c(%esp),%edi
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    0x28(%esp),%ecx
movl   $0x0,0x14(%esp)
mov    %ebp,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804b070 <__lxstat64@plt>
test   %eax,%eax
jne    8065500 <fchmod@plt+0x1a3c0>
testb  $0x1,0x4d(%esp)
je     8065500 <fchmod@plt+0x1a3c0>
mov    0x24(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
add    $0xa0,%eax
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    %esi,(%esp)
addl   $0x1,0x2c(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8065510 <fchmod@plt+0x1a3d0>
nop
mov    0x24(%esp),%edi
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
mov    0x2c(%esp),%eax
movb   $0x1,0x113(%edi)
jmp    8065499 <fchmod@plt+0x1a359>
mov    $0xffffffff,%eax
jmp    8065499 <fchmod@plt+0x1a359>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     80655f0 <fchmod@plt+0x1a4b0>
mov    0x10(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     8065610 <fchmod@plt+0x1a4d0>
mov    0x14(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d687,%ebx
movb   $0x0,0x10b(%eax)
add    $0x4c,%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     8065660 <fchmod@plt+0x1a520>
mov    0x34(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0xe4(%eax),%edx
mov    0xe0(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x149c,%esp
mov    0x14b0(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d60e,%ebx
mov    0x14b4(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x148c(%esp)
xor    %eax,%eax
test   %edx,%edx
je     806579d <fchmod@plt+0x1a65d>
test   %ebp,%ebp
je     806579d <fchmod@plt+0x1a65d>
lea    0x84(%edx),%eax
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   806ae20 <fchmod@plt+0x1fce0>
mov    0x18(%esp),%edx
test   %eax,%eax
je     8065728 <fchmod@plt+0x1a5e8>
mov    %eax,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    0x148c(%esp),%edi
xor    %gs:0x14,%edi
jne    80658c8 <fchmod@plt+0x1a788>
add    $0x149c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
lea    0x8c(%esp),%esi
mov    %edx,0x18(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    -0x1033a(%ebx),%ecx
mov    %ecx,0xc(%esp)
movl   $0x0,0x14(%esp)
mov    %ebp,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804b070 <__lxstat64@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
je     80657a8 <fchmod@plt+0x1a668>
mov    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
xor    %eax,%eax
jmp    8065704 <fchmod@plt+0x1a5c4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ecx
mov    %ecx,%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8065858 <fchmod@plt+0x1a718>
cmp    $0x4000,%eax
je     806579d <fchmod@plt+0x1a65d>
and    $0x1,%ch
je     806579d <fchmod@plt+0x1a65d>
mov    %esi,(%esp)
movl   $0x80000,0x4(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     806579d <fchmod@plt+0x1a65d>
lea    0x48c(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x1000,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   804a5a0 <read@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   804b0a0 <close@plt>
test   %edi,%edi
js     806579d <fchmod@plt+0x1a65d>
cmp    $0x1000,%edi
je     806579d <fchmod@plt+0x1a65d>
mov    0x18(%esp),%edx
movb   $0x0,0x48c(%esp,%edi,1)
movl   $0xa,0x4(%esp)
mov    %edx,(%esp)
call   806d380 <fchmod@plt+0x22240>
mov    0x18(%esp),%edx
mov    %edx,0x8(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
jmp    80656fc <fchmod@plt+0x1a5bc>
lea    0x0(%esi),%esi
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x13b83(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     806588f <fchmod@plt+0x1a74f>
mov    $0xa,%ecx
mov    %ebp,%esi
lea    -0xb55e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     806588f <fchmod@plt+0x1a74f>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x13b7c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806579d <fchmod@plt+0x1a65d>
lea    0x48c(%esp),%esi
movl   $0x1000,0x10(%esp)
mov    %esi,0xc(%esp)
mov    0x8(%edx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   806d030 <fchmod@plt+0x21ef0>
test   %eax,%eax
js     806579d <fchmod@plt+0x1a65d>
mov    %esi,0x8(%esp)
jmp    8065840 <fchmod@plt+0x1a700>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4ac,%esp
mov    0x4c8(%esp),%eax
mov    0x4c0(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d3c7,%ebx
mov    0x4c4(%esp),%edi
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x49c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     8065a48 <fchmod@plt+0x1a908>
test   %edi,%edi
je     8065a48 <fchmod@plt+0x1a908>
mov    0x20(%esp),%eax
test   %eax,%eax
je     8065aa8 <fchmod@plt+0x1a968>
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x24(%esp)
mov    %esi,(%esp)
lea    0x9c(%esp),%ebp
call   8065440 <fchmod@plt+0x1a300>
lea    -0x1033a(%ebx),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804b070 <__lxstat64@plt>
test   %eax,%eax
mov    %eax,%edx
jne    8065a70 <fchmod@plt+0x1a930>
mov    0x4c(%esp),%ecx
mov    %ecx,%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8065a48 <fchmod@plt+0x1a908>
cmp    $0x4000,%eax
je     8065aa0 <fchmod@plt+0x1a960>
and    $0x1,%ch
je     8065a98 <fchmod@plt+0x1a958>
cmpl   $0x1000,0x24(%esp)
jg     8065a48 <fchmod@plt+0x1a908>
mov    0x20(%esp),%eax
movl   $0xa,0x4(%esp)
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   806d380 <fchmod@plt+0x22240>
mov    %ebp,(%esp)
movl   $0x80001,0x4(%esp)
call   804a590 <open64@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
js     8065ab8 <fchmod@plt+0x1a978>
mov    0x24(%esp),%eax
mov    %ebp,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804ab90 <write@plt>
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   804b0a0 <close@plt>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
test   %ecx,%ecx
js     8065ab8 <fchmod@plt+0x1a978>
cmp    %ecx,0x24(%esp)
jle    8065ac3 <fchmod@plt+0x1a983>
mov    $0xfffffffb,%edx
jmp    8065a4d <fchmod@plt+0x1a90d>
nop
mov    $0xffffffea,%edx
mov    0x49c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edx,%eax
jne    8065aea <fchmod@plt+0x1a9aa>
add    $0x4ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x84,%esi
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    $0xfffffffa,%edx
jmp    8065a4d <fchmod@plt+0x1a90d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff3,%edx
jmp    8065a4d <fchmod@plt+0x1a90d>
nop
mov    $0xffffffeb,%edx
jmp    8065a4d <fchmod@plt+0x1a90d>
nop
movl   $0x0,0x24(%esp)
jmp    8065935 <fchmod@plt+0x1a7f5>
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
neg    %edx
jmp    8065a4d <fchmod@plt+0x1a90d>
mov    0x20(%esp),%eax
add    $0x84,%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x8(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x24(%esp),%edx
jmp    8065a4d <fchmod@plt+0x1a90d>
call   806ed90 <fchmod@plt+0x23c50>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d1b6,%ebx
cmpb   $0x0,0x113(%esi)
jne    8065b18 <fchmod@plt+0x1a9d8>
mov    %esi,%eax
call   8065460 <fchmod@plt+0x1a320>
test   %eax,%eax
js     8065b30 <fchmod@plt+0x1a9f0>
add    $0xa0,%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8065b26 <fchmod@plt+0x1a9e6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d167,%ebx
mov    0x24(%esp),%edx
movb   $0x0,0x10b(%eax)
add    $0x4c,%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x18,%esp
and    $0xfffffff4,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movb   $0x1,0x112(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d10a,%ebx
mov    0x24(%esp),%esi
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
jne    8065c18 <fchmod@plt+0x1aad8>
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
mov    $0xffffffea,%edx
test   %eax,%eax
jne    8065c0d <fchmod@plt+0x1aacd>
mov    0x20(%esp),%eax
movb   $0x0,0x10d(%eax)
add    $0xbc,%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffffff4,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
mov    $0xffffffea,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1d077,%ebx
movb   $0x0,0x10d(%eax)
add    $0xbc,%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0xe8(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0xfc(%eax)
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x444c,%esp
mov    0x4464(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1cffe,%ebx
mov    0x4460(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x443c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     8065f30 <fchmod@plt+0x1adf0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     8065f7b <fchmod@plt+0x1ae3b>
lea    -0x13d66(%ebx),%eax
movb   $0x1,0x112(%ebp)
lea    0x43c(%esp),%esi
mov    %eax,0x2c(%esp)
xchg   %ax,%ax
mov    %edi,0x8(%esp)
movl   $0x4000,0x4(%esp)
mov    %esi,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     8065eb0 <fchmod@plt+0x1ad70>
mov    %esi,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8065d2e <fchmod@plt+0x1abee>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %esi,%edx
cmp    $0x3,%edx
jle    8065eb0 <fchmod@plt+0x1ad70>
movb   $0x0,0x43b(%esp,%edx,1)
movzbl 0x43c(%esp),%eax
sub    $0x45,%eax
cmp    $0x12,%al
ja     8065d10 <fchmod@plt+0x1abd0>
movzbl %al,%eax
mov    -0xb600(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
lea    0x43e(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8065c80 <fchmod@plt+0x1ab40>
jmp    8065d10 <fchmod@plt+0x1abd0>
lea    0x43e(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
lea    0x3c(%esp),%edx
mov    %edx,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    0x28(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   8065b40 <fchmod@plt+0x1aa00>
jmp    8065d10 <fchmod@plt+0x1abd0>
lea    0x43e(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b040 <strtol@plt>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8065c60 <fchmod@plt+0x1ab20>
jmp    8065d10 <fchmod@plt+0x1abd0>
lea    0x43e(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80669e0 <fchmod@plt+0x1b8a0>
jmp    8065d10 <fchmod@plt+0x1abd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x43e(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065ba0 <fchmod@plt+0x1aa60>
jmp    8065d10 <fchmod@plt+0x1abd0>
lea    0x43e(%esp),%edx
mov    %ebp,%eax
call   8066690 <fchmod@plt+0x1b550>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806aed0 <fchmod@plt+0x1fd90>
jmp    8065d10 <fchmod@plt+0x1abd0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804a730 <fclose@plt>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jg     8065ef0 <fchmod@plt+0x1adb0>
xor    %eax,%eax
mov    0x443c(%esp),%edi
xor    %gs:0x14,%edi
jne    8065fd2 <fchmod@plt+0x1ae92>
add    $0x444c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb644(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb597(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb664(%ebx),%eax
mov    %ebp,0x18(%esp)
movl   $0x240,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    8065ec8 <fchmod@plt+0x1ad88>
nop
cmpb   $0x0,0x110(%ebp)
jne    8065ec8 <fchmod@plt+0x1ad88>
movb   $0x1,0x110(%ebp)
mov    %ebp,(%esp)
call   80679f0 <fchmod@plt+0x1c8b0>
test   %eax,%eax
je     8065fc8 <fchmod@plt+0x1ae88>
mov    %eax,0xc(%esp)
lea    0x3c(%esp),%esi
lea    -0xb8ad(%ebx),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    8065cda <fchmod@plt+0x1ab9a>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    8065fc8 <fchmod@plt+0x1ae88>
lea    -0xb80f(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb597(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb664(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x218,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
mov    $0xffffffff,%eax
jmp    8065eca <fchmod@plt+0x1ad8a>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ccc6,%ebx
test   %esi,%esi
je     8066030 <fchmod@plt+0x1aef0>
cmpb   $0x0,0x10f(%esi)
je     8066018 <fchmod@plt+0x1aed8>
add    $0x4c,%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
jmp    8066001 <fchmod@plt+0x1aec1>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806600c <fchmod@plt+0x1aecc>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1cc66,%ebx
cmpb   $0x0,0x10f(%esi)
jne    806606d <fchmod@plt+0x1af2d>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
movzbl 0x112(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1cc26,%ebx
test   %esi,%esi
je     80660d0 <fchmod@plt+0x1af90>
cmpb   $0x0,0x10f(%esi)
je     80660b8 <fchmod@plt+0x1af78>
add    $0xbc,%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
jmp    80660a1 <fchmod@plt+0x1af61>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80660af <fchmod@plt+0x1af6f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1cbbe,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     806631b <fchmod@plt+0x1b1db>
cmpb   $0x0,0x10f(%esi)
je     8066160 <fchmod@plt+0x1b020>
cmpb   $0x0,0x10b(%esi)
je     8066181 <fchmod@plt+0x1b041>
cmpb   $0x0,0x10d(%esi)
je     806625b <fchmod@plt+0x1b11b>
add    $0x68,%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
mov    0x42c(%esp),%edx
xor    %gs:0x14,%edx
jne    8066322 <fchmod@plt+0x1b1e2>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
cmpb   $0x0,0x10b(%esi)
jne    8066125 <fchmod@plt+0x1afe5>
movb   $0x1,0x10b(%esi)
mov    %esi,(%esp)
call   8065fe0 <fchmod@plt+0x1aea0>
test   %eax,%eax
mov    %eax,%edx
je     8066125 <fchmod@plt+0x1afe5>
lea    0x2c(%esp),%eax
mov    %edx,(%esp)
lea    0x28(%esp),%edi
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x28(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0xc(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    0x14(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   806ad90 <fchmod@plt+0x1fc50>
mov    %eax,%edx
test   %edx,%edx
lea    -0xbcbe(%ebx),%eax
mov    %eax,0x14(%esp)
je     8066234 <fchmod@plt+0x1b0f4>
mov    %esi,0x1c(%esp)
mov    %edx,%esi
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x4(%esp)
movl   $0x0,0x10(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    %esi,(%esp)
mov    %eax,%ebp
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    80661f8 <fchmod@plt+0x1b0b8>
mov    0x1c(%esp),%esi
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x10174(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
cmpb   $0x0,0x10d(%esi)
jne    8066132 <fchmod@plt+0x1aff2>
movb   $0x1,0x10d(%esi)
mov    %esi,(%esp)
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
je     8066132 <fchmod@plt+0x1aff2>
lea    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x28(%esp),%edi
mov    %eax,0x28(%esp)
lea    -0x11faf(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    %esi,(%esp)
mov    %eax,%ebp
call   8066080 <fchmod@plt+0x1af40>
test   %eax,%eax
je     80662fc <fchmod@plt+0x1b1bc>
mov    %esi,0x1c(%esp)
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    0x14(%esp),%ecx
mov    %ebp,0x4(%esp)
movl   $0x0,0x10(%esp)
mov    %edi,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    %esi,(%esp)
mov    %eax,%ebp
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    80662c0 <fchmod@plt+0x1b180>
mov    0x1c(%esp),%esi
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x1048e(%ebx),%eax
mov    %eax,0x4(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8066132 <fchmod@plt+0x1aff2>
xor    %eax,%eax
jmp    806613d <fchmod@plt+0x1affd>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%edx
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c973,%ebx
test   %edx,%edx
movb   $0x0,0x10c(%eax)
je     8066370 <fchmod@plt+0x1b230>
mov    0x24(%esp),%ecx
add    $0x68,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   806aac0 <fchmod@plt+0x1f980>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    %eax,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
mov    0x24(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   806ae20 <fchmod@plt+0x1fce0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8066369 <fchmod@plt+0x1b229>
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   806acb0 <fchmod@plt+0x1fb70>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c8f6,%ebx
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x28(%esi)
je     8066408 <fchmod@plt+0x1b2c8>
movb   $0x1,0x109(%esi)
mov    %eax,0x8(%esp)
lea    -0x105a4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    $0xfffffff4,%eax
jmp    8066401 <fchmod@plt+0x1b2c1>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    0x250(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c88e,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     8066552 <fchmod@plt+0x1b412>
cmpb   $0x0,0x109(%esi)
je     8066470 <fchmod@plt+0x1b330>
mov    0x28(%esi),%eax
mov    0x22c(%esp),%edx
xor    %gs:0x14,%edx
jne    806658a <fchmod@plt+0x1b44a>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x2c(%esp),%edi
movb   $0x1,0x109(%esi)
lea    -0xb55e(%ebx),%ebp
movl   $0x200,0x10(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   806d030 <fchmod@plt+0x21ef0>
test   %eax,%eax
jg     80664e0 <fchmod@plt+0x1b3a0>
mov    0xc(%esi),%edi
lea    -0xb75f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80664f8 <fchmod@plt+0x1b3b8>
lea    -0x13b7c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
mov    0x28(%esi),%eax
jmp    806644f <fchmod@plt+0x1b30f>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
mov    0x28(%esi),%eax
jmp    806644f <fchmod@plt+0x1b30f>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb7f4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8066528 <fchmod@plt+0x1b3e8>
lea    -0xb7ea(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
mov    0x28(%esi),%eax
jmp    806644f <fchmod@plt+0x1b30f>
lea    -0xb785(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8066559 <fchmod@plt+0x1b419>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
mov    0x28(%esi),%eax
jmp    806644f <fchmod@plt+0x1b30f>
xor    %eax,%eax
jmp    806644f <fchmod@plt+0x1b30f>
lea    -0xb76b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
jne    806653e <fchmod@plt+0x1b3fe>
lea    -0xb775(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
jne    806653e <fchmod@plt+0x1b3fe>
jmp    806644c <fchmod@plt+0x1b30c>
lea    0x0(%esi),%esi
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c708,%ebx
sub    $0x10,%esp
mov    0x2c(%eax),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %edi,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x2c(%esi)
je     80665f8 <fchmod@plt+0x1b4b8>
mov    %eax,0x8(%esp)
lea    -0x10198(%ebx),%eax
movb   $0x1,0x10a(%esi)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    $0xfffffff4,%eax
jmp    80665ee <fchmod@plt+0x1b4ae>
nop
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c6aa,%ebx
sub    $0x50,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
lea    0x2c(%esp),%edi
mov    %edx,0xf8(%esi)
mov    %edx,0x14(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
lea    -0xc0fe(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0x10184(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
xor    %eax,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8066683 <fchmod@plt+0x1b543>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c61a,%ebx
sub    $0x4020,%esp
lea    0x1c(%esp),%esi
mov    %edx,0x8(%esp)
movl   $0x4000,0x4(%esp)
mov    %esi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x401c(%esp)
xor    %eax,%eax
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%edx
je     806671c <fchmod@plt+0x1b5dc>
movb   $0x0,(%eax)
lea    0x1(%eax),%ecx
xor    %eax,%eax
cmpb   $0x0,0x1(%edx)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
cmovne %ecx,%eax
mov    %eax,0x8(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    0x401c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8066720 <fchmod@plt+0x1b5e0>
add    $0x4020,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    8066702 <fchmod@plt+0x1b5c2>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c571,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x100(%ebp),%edi
test   %edi,%edi
jle    8066874 <fchmod@plt+0x1b734>
mov    0x104(%ebp),%ecx
mov    %edi,%esi
xor    %edx,%edx
and    $0xfff,%edi
and    $0xfffff000,%esi
shl    $0x8,%edi
mov    %ecx,%eax
movzbl %cl,%ecx
xor    %al,%al
or     %ecx,%edi
shld   $0xc,%eax,%edx
mov    %edx,0x1c(%esp)
shl    $0xc,%eax
or     0x1c(%esp),%esi
or     %edi,%eax
mov    %eax,%edx
mov    %eax,0xf0(%ebp)
mov    %esi,0xf4(%ebp)
mov    %esi,%ecx
mov    %esi,%eax
mov    %edx,%esi
and    $0xfffff000,%eax
shrd   $0x8,%ecx,%esi
and    $0xfff,%esi
or     %esi,%eax
mov    %eax,0x14(%esp)
lea    -0xc0fe(%ebx),%eax
mov    %eax,0x18(%esp)
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
movl   $0x20,0xc(%esp)
mov    %eax,%edi
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0x10190(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edi,0x24(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x24(%esp),%edi
mov    0x18(%esp),%eax
mov    %edx,%esi
movzbl %dl,%edx
shrd   $0xc,%ecx,%esi
and    $0xffffff00,%esi
or     %edx,%esi
mov    %esi,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0x1018a(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    0xc(%ebp),%eax
movl   $0x0,0x100(%ebp)
00
movl   $0x0,0x104(%ebp)
00
test   %eax,%eax
je     80668ad <fchmod@plt+0x1b76d>
cmpl   $0x1,0x28(%ebp)
sbb    %eax,%eax
and    $0xffffffea,%eax
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80668b4 <fchmod@plt+0x1b774>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffea,%eax
jmp    8066898 <fchmod@plt+0x1b758>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c3e4,%ebx
test   %esi,%esi
je     80669da <fchmod@plt+0x1b89a>
movl   $0x118,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     80669da <fchmod@plt+0x1b89a>
mov    %esi,(%eax)
lea    0x4c(%eax),%eax
movl   $0x1,0xa0(%eax)
00
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x68(%edi),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x84(%edi),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0xa0(%edi),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0xbc(%edi),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
mov    %esi,(%esp)
movl   $0xffffffff,0xfc(%edi)
ff
call   806db80 <fchmod@plt+0x22a40>
test   %eax,%eax
mov    %eax,%esi
je     80669d0 <fchmod@plt+0x1b890>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %esi,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    80669a0 <fchmod@plt+0x1b860>
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    80669d2 <fchmod@plt+0x1b892>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c2cc,%ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
lea    0x2c(%esp),%edi
mov    0x64(%esp),%eax
mov    0x68(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x4c(%esp)
xor    %ecx,%ecx
mov    %eax,0xe0(%esi)
mov    %edx,0xe4(%esi)
mov    %eax,0x14(%esp)
lea    -0xb502(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb7e2(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    8066a76 <fchmod@plt+0x1b936>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c224,%ebx
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     8066b8d <fchmod@plt+0x1ba4d>
add    $0x4,%eax
mov    %eax,0xc(%ebp)
mov    %eax,0x8(%esp)
lea    -0x1063b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
movl   $0x2f,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     8066b94 <fchmod@plt+0x1ba54>
add    $0x1,%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x10(%ebp)
je     8066b8d <fchmod@plt+0x1ba4d>
movzbl (%eax),%edx
xor    %esi,%esi
test   %dl,%dl
jne    8066b20 <fchmod@plt+0x1b9e0>
jmp    8066b7c <fchmod@plt+0x1ba3c>
mov    0x10(%ebp),%edi
add    $0x1,%esi
lea    (%edi,%esi,1),%eax
movzbl (%eax),%edx
test   %dl,%dl
je     8066b38 <fchmod@plt+0x1b9f8>
cmp    $0x21,%dl
jne    8066b10 <fchmod@plt+0x1b9d0>
movb   $0x2f,(%eax)
mov    0x10(%ebp),%edi
add    $0x1,%esi
lea    (%edi,%esi,1),%eax
movzbl (%eax),%edx
test   %dl,%dl
jne    8066b20 <fchmod@plt+0x1b9e0>
test   %esi,%esi
je     8066b7c <fchmod@plt+0x1ba3c>
call   804b0e0 <__ctype_b_loc@plt>
mov    %ebp,0x30(%esp)
jmp    8066b53 <fchmod@plt+0x1ba13>
nop
mov    0x30(%esp),%ecx
test   %esi,%esi
mov    %edx,0x14(%ecx)
je     8066b78 <fchmod@plt+0x1ba38>
sub    $0x1,%esi
mov    (%eax),%ebp
movsbl (%edi,%esi,1),%ecx
lea    (%edi,%esi,1),%edx
testb  $0x8,0x1(%ebp,%ecx,2)
jne    8066b48 <fchmod@plt+0x1ba08>
test   %esi,%esi
mov    0x30(%esp),%ebp
je     8066b7c <fchmod@plt+0x1ba3c>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x30(%esp),%ebp
movl   $0x0,0x14(%ebp)
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xfffffff4,%eax
jmp    8066b85 <fchmod@plt+0x1ba45>
mov    $0xffffffea,%eax
jmp    8066b85 <fchmod@plt+0x1ba45>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x89c,%esp
mov    0x8b0(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1c0fe,%ebx
mov    0x8b4(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x88c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     8066d60 <fchmod@plt+0x1bc20>
test   %esi,%esi
je     8066d60 <fchmod@plt+0x1bc20>
lea    -0x13cfe(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8066d18 <fchmod@plt+0x1bbd8>
lea    0x4(%esi),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     8066d60 <fchmod@plt+0x1bc20>
cmpb   $0x0,0x1(%eax)
je     8066d60 <fchmod@plt+0x1bc20>
lea    0x6(%esi),%edx
cmp    %edx,%eax
jb     8066d60 <fchmod@plt+0x1bc20>
mov    %esi,0x8(%esp)
lea    0x8c(%esp),%esi
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x400,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   806d120 <fchmod@plt+0x21fe0>
lea    -0xb7c1(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x90(%esp),%eax
mov    %eax,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8066db8 <fchmod@plt+0x1bc78>
lea    -0x11ff4(%ebx),%eax
lea    0x48c(%esp),%ebp
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    8066d60 <fchmod@plt+0x1bc20>
mov    %edi,(%esp)
call   80668c0 <fchmod@plt+0x1b780>
test   %eax,%eax
mov    %eax,%ebp
je     8066d60 <fchmod@plt+0x1bc20>
mov    %esi,0x4(%esp)
mov    %ebp,%esi
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1b940>
mov    %edi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jg     8066d68 <fchmod@plt+0x1bc28>
mov    0x88c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    8066def <fchmod@plt+0x1bcaf>
add    $0x89c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    8066d60 <fchmod@plt+0x1bc20>
lea    -0xb7d1(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb5b4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb664(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x2b6,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %edi,(%esp)
call   806da60 <fchmod@plt+0x22920>
nop
xor    %esi,%esi
jmp    8066cf6 <fchmod@plt+0x1bbb6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %ebp,0x18(%esp)
movl   $0x2d6,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
lea    -0xb7b7(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb5b4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb664(%ebx),%eax
mov    %eax,0x8(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    8066cf6 <fchmod@plt+0x1bbb6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
jne    8066d60 <fchmod@plt+0x1bc20>
mov    0x3c(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8066cc9 <fchmod@plt+0x1bb89>
xor    %esi,%esi
jmp    8066cf6 <fchmod@plt+0x1bbb6>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x44c,%esp
mov    0x464(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x43c(%esp)
xor    %eax,%eax
mov    0x460(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1be88,%ebx
mov    0x468(%esp),%edx
mov    0x46c(%esp),%ecx
mov    %esi,%eax
cmp    $0x62,%al
je     8066ee8 <fchmod@plt+0x1bda8>
xor    %edi,%edi
cmp    $0x63,%al
jne    8066eca <fchmod@plt+0x1bd8a>
lea    -0x10f27(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    %edx,%esi
movzbl %dl,%eax
shrd   $0xc,%ecx,%esi
and    $0xffffff00,%esi
or     %eax,%esi
mov    %ecx,%eax
shrd   $0x8,%ecx,%edx
and    $0xfffff000,%eax
and    $0xfff,%edx
or     %edx,%eax
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
lea    0x3c(%esp),%esi
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0xb79b(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
mov    %eax,%edi
mov    0x43c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    8066ef7 <fchmod@plt+0x1bdb7>
add    $0x44c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x10f2d(%ebx),%eax
mov    %eax,0x2c(%esp)
jmp    8066e5a <fchmod@plt+0x1bd1a>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    $0xa,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x6ac,%esp
mov    0x6c0(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1bd99,%ebx
mov    0x6c4(%esp),%ebp
mov    0x6c8(%esp),%edx
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x69c(%esp)
xor    %eax,%eax
mov    %ebp,%esi
lea    -0xb55e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8067148 <fchmod@plt+0x1c008>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0x13b7c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8067210 <fchmod@plt+0x1c0d0>
mov    $0x8,%ecx
mov    %ebp,%esi
lea    -0xb7ea(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8067050 <fchmod@plt+0x1bf10>
lea    0x9c(%esp),%edi
mov    %edx,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x3a,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     806725d <fchmod@plt+0x1c11d>
movb   $0x0,(%eax)
lea    0x1(%eax),%ecx
lea    -0xb7f4(%ebx),%edx
lea    -0xb789(%ebx),%eax
lea    0x29c(%esp),%esi
mov    %ecx,0x14(%esp)
lea    0x3c(%esp),%ebp
mov    %edx,0x10(%esp)
movl   $0x0,0x18(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8067268 <fchmod@plt+0x1c128>
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
mov    0x69c(%esp),%edx
xor    %gs:0x14,%edx
jne    806729c <fchmod@plt+0x1c15c>
add    $0x6ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0xb7c1(%ebx),%ecx
lea    -0xb789(%ebx),%eax
lea    0x29c(%esp),%esi
mov    %edx,0x14(%esp)
lea    0x3c(%esp),%edi
mov    %ecx,0x10(%esp)
movl   $0x0,0x18(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
mov    %ecx,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
test   %eax,%eax
je     8067020 <fchmod@plt+0x1bee0>
lea    -0xb779(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %ecx,0x10(%esp)
movl   $0x0,0x18(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
je     8067020 <fchmod@plt+0x1bee0>
lea    -0x1033a(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb76f(%ebx),%eax
movl   $0x0,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
jmp    8067209 <fchmod@plt+0x1c0c9>
xchg   %ax,%ax
lea    -0xb789(%ebx),%eax
lea    0x29c(%esp),%esi
mov    %edx,0xc(%esp)
lea    0x3c(%esp),%edi
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x28(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
je     8067020 <fchmod@plt+0x1bee0>
lea    -0xb779(%ebx),%eax
mov    %edx,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
je     8067020 <fchmod@plt+0x1bee0>
lea    -0xb76f(%ebx),%eax
movl   $0x0,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %edi,0x8(%esp)
jmp    8067245 <fchmod@plt+0x1c105>
nop
lea    -0xb763(%ebx),%eax
lea    0x29c(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
je     8067020 <fchmod@plt+0x1bee0>
xor    %eax,%eax
jmp    8067030 <fchmod@plt+0x1bef0>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb779(%ebx),%eax
movl   $0x0,0x18(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %ebp,0x8(%esp)
jmp    8067245 <fchmod@plt+0x1c105>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b9f9,%ebx
sub    $0x42c,%esp
lea    0x1c(%esp),%esi
mov    %edx,0x8(%esp)
lea    0x21(%esp),%edi
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x41c(%esp)
xor    %eax,%eax
call   80632f0 <fchmod@plt+0x181b0>
lea    0x23(%esp),%eax
mov    %eax,0xc(%esp)
jmp    806731c <fchmod@plt+0x1c1dc>
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8067330 <fchmod@plt+0x1c1f0>
movb   $0x0,(%eax)
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
jne    8067332 <fchmod@plt+0x1c1f2>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
jne    8067300 <fchmod@plt+0x1c1c0>
xor    %eax,%eax
mov    0x41c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806734d <fchmod@plt+0x1c20d>
add    $0x42c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
je     80673a0 <fchmod@plt+0x1c260>
cmpb   $0x0,0x108(%esi)
je     8067380 <fchmod@plt+0x1c240>
mov    0x4(%esi),%eax
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    %esi,%eax
movb   $0x1,0x108(%esi)
call   80672b0 <fchmod@plt+0x1c170>
mov    %eax,0x4(%esi)
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8067378 <fchmod@plt+0x1c238>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b8f5,%ebx
mov    0x24(%esp),%edi
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
cmpb   $0x2f,(%edi)
je     8067428 <fchmod@plt+0x1c2e8>
lea    -0xb756(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esi),%eax
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     8067438 <fchmod@plt+0x1c2f8>
mov    0x18(%esi),%eax
test   %eax,%eax
je     806744b <fchmod@plt+0x1c30b>
mov    %eax,0x8(%esp)
lea    -0x1017c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804acb0 <__strdup@plt>
mov    %eax,0x18(%esi)
jmp    8067401 <fchmod@plt+0x1c2c1>
lea    0x0(%esi),%esi
movl   $0x0,0x18(%esi)
add    $0x10,%esp
mov    $0xfffffff4,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0xfffffff4,%eax
jmp    806741d <fchmod@plt+0x1c2dd>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b849,%ebx
sub    $0x443c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x442c(%esp)
xor    %eax,%eax
lea    0x2c(%esp),%esi
movl   $0x0,0x10(%esp)
lea    -0x11ff4(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x8(%ebp),%eax
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     80676ef <fchmod@plt+0x1c5af>
lea    -0xb74e(%ebx),%eax
movb   $0x1,0x111(%ebp)
lea    0x42c(%esp),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0x14(%esp)
nop
mov    %edi,0x8(%esp)
movl   $0x4000,0x4(%esp)
mov    %esi,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     8067598 <fchmod@plt+0x1c458>
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80674f8 <fchmod@plt+0x1c3b8>
movb   $0x0,(%eax)
mov    0x14(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067550 <fchmod@plt+0x1c410>
lea    0x434(%esp),%edx
mov    %ebp,%eax
call   80665a0 <fchmod@plt+0x1b460>
jmp    80674f8 <fchmod@plt+0x1c3b8>
nop
lea    -0xb745(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067600 <fchmod@plt+0x1c4c0>
lea    0x434(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,%edx
mov    %ebp,%eax
call   8066600 <fchmod@plt+0x1b4c0>
jmp    80674f8 <fchmod@plt+0x1c3b8>
nop
mov    0x1c(%esp),%esi
xor    %edx,%edx
mov    0x18(%esp),%eax
mov    %esi,%ecx
xor    %al,%al
and    $0xfffff000,%ecx
shld   $0xc,%eax,%edx
or     %edx,%ecx
mov    %esi,%edx
movzbl 0x18(%esp),%esi
and    $0xfff,%edx
shl    $0x8,%edx
shl    $0xc,%eax
or     %esi,%edx
or     %edx,%eax
mov    %eax,0xf0(%ebp)
mov    %ecx,0xf4(%ebp)
mov    %edi,(%esp)
call   804a730 <fclose@plt>
xor    %eax,%eax
mov    0x442c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80676f9 <fchmod@plt+0x1c5b9>
add    $0x443c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0xb73c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067630 <fchmod@plt+0x1c4f0>
lea    0x434(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   80673b0 <fchmod@plt+0x1c270>
jmp    80674f8 <fchmod@plt+0x1c3b8>
xchg   %ax,%ax
lea    -0xb733(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067677 <fchmod@plt+0x1c537>
lea    0x432(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x1c(%esp)
mov    %esi,%edx
mov    %ebp,%eax
call   8066690 <fchmod@plt+0x1b550>
jmp    80674f8 <fchmod@plt+0x1c3b8>
lea    -0xb72c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80676b2 <fchmod@plt+0x1c572>
lea    0x432(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x18(%esp)
jmp    8067669 <fchmod@plt+0x1c529>
lea    -0xb725(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067669 <fchmod@plt+0x1c529>
lea    0x434(%esp),%eax
movl   $0x8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,0x1c(%ebp)
jmp    8067669 <fchmod@plt+0x1c529>
mov    $0xffffffff,%eax
jmp    80675df <fchmod@plt+0x1c49f>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
mov    0x4(%esp),%eax
cmpb   $0x0,0x111(%eax)
je     8067710 <fchmod@plt+0x1c5d0>
xor    %eax,%eax
ret
jmp    8067460 <fchmod@plt+0x1c320>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b586,%ebx
cmpb   $0x0,0x10f(%esi)
jne    8067745 <fchmod@plt+0x1c605>
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    0xf8(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x454(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x450(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b528,%ebx
movzbl (%edx),%eax
cmp    $0x63,%al
jg     8067898 <fchmod@plt+0x1c758>
cmp    $0x62,%al
jge    8067818 <fchmod@plt+0x1c6d8>
cmp    $0x2b,%al
jne    80678c0 <fchmod@plt+0x1c780>
add    $0x1,%edx
lea    0x2c(%esp),%edi
mov    %edx,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x3a,0x4(%esp)
mov    %edi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     80678c0 <fchmod@plt+0x1c780>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8067985 <fchmod@plt+0x1c845>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x23(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb71c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804ae90 <sscanf@plt>
cmp    $0x3,%eax
jne    80678c0 <fchmod@plt+0x1c780>
mov    0x28(%esp),%edi
xor    %edx,%edx
mov    0x24(%esp),%ebp
mov    %esi,(%esp)
mov    %edi,%eax
xor    %al,%al
mov    %ebp,%ecx
shld   $0xc,%eax,%edx
and    $0xfffff000,%ecx
or     %edx,%ecx
and    $0xfff,%ebp
mov    %edi,%edx
shl    $0x8,%ebp
movzbl %dl,%edi
shl    $0xc,%eax
or     %edi,%ebp
or     %ebp,%eax
mov    %eax,0x8(%esp)
movsbl 0x23(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8066e00 <fchmod@plt+0x1bcc0>
jmp    80677f2 <fchmod@plt+0x1c6b2>
xchg   %ax,%ax
cmp    $0x6e,%al
jne    80678c0 <fchmod@plt+0x1c780>
add    $0x1,%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804ab00 <strtoul@plt>
test   %eax,%eax
mov    %eax,%edi
jg     80678c8 <fchmod@plt+0x1c788>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80677f2 <fchmod@plt+0x1c6b2>
nop
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
movl   $0x2,(%esp)
call   804af40 <socket@plt>
test   %eax,%eax
mov    %eax,%ebp
js     80678c0 <fchmod@plt+0x1c780>
lea    0x2c(%esp),%ecx
xor    %edx,%edx
movl   $0x0,(%ecx,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     80678f0 <fchmod@plt+0x1c7b0>
mov    %ecx,0x8(%esp)
movl   $0x8910,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edi,0x3c(%esp)
call   804a8b0 <ioctl@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     8067932 <fchmod@plt+0x1c7f2>
mov    %ebp,(%esp)
call   804b0a0 <close@plt>
xor    %eax,%eax
jmp    80677f2 <fchmod@plt+0x1c6b2>
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
call   804b0a0 <close@plt>
mov    0x1c(%esp),%ecx
lea    -0xb714(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,%esi
je     80678c0 <fchmod@plt+0x1c780>
mov    %eax,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
mov    %eax,%edx
mov    %esi,%eax
cmp    %edi,%edx
je     80677f2 <fchmod@plt+0x1c6b2>
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
xor    %eax,%eax
jmp    80677f2 <fchmod@plt+0x1c6b2>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b316,%ebx
test   %esi,%esi
je     80679d8 <fchmod@plt+0x1c898>
cmpb   $0x0,0x10f(%esi)
je     80679c8 <fchmod@plt+0x1c888>
mov    0xf0(%esi),%eax
mov    0xf4(%esi),%edx
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
jmp    80679b1 <fchmod@plt+0x1c871>
lea    0x0(%esi),%esi
add    $0x14,%esp
xor    %eax,%eax
xor    %edx,%edx
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b2b4,%ebx
mov    0x3c(%eax),%ebp
test   %ebp,%ebp
je     8067a18 <fchmod@plt+0x1c8d8>
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
je     8067bcb <fchmod@plt+0x1ca8b>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfff,%eax
and    $0xfffff000,%ecx
or     %eax,%ecx
mov    0x40(%esp),%eax
mov    %eax,(%esp)
jne    8067aa8 <fchmod@plt+0x1c968>
call   8067720 <fchmod@plt+0x1c5e0>
test   %eax,%eax
jle    8067b68 <fchmod@plt+0x1ca28>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xb708(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
add    $0x3c,%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
mov    0x40(%esp),%eax
js     8067b5a <fchmod@plt+0x1ca1a>
mov    0x3c(%eax),%ebp
jmp    8067a0d <fchmod@plt+0x1c8cd>
lea    0x0(%esi),%esi
call   8067990 <fchmod@plt+0x1c850>
mov    %eax,%esi
movzbl %al,%eax
shrd   $0xc,%edx,%esi
mov    %esi,%edi
and    $0xffffff00,%edi
mov    %edi,0x1c(%esp)
lea    -0x10f2d(%ebx),%edi
or     %eax,0x1c(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8067990 <fchmod@plt+0x1c850>
mov    %edx,0x18(%esp)
shrd   $0x8,%edx,%eax
andl   $0xfffff000,0x18(%esp)
and    $0xfff,%eax
or     %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x1,0x4(%esp)
setb   %dl
seta   %al
sub    %edx,%eax
mov    0x1c(%esp),%edx
movsbl %al,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x63,%eax
mov    %eax,0xc(%esp)
lea    -0xb710(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x18(%esp),%edx
add    $0x3c,%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
mov    0x40(%esp),%eax
jns    8067a9a <fchmod@plt+0x1c95a>
movl   $0x0,0x3c(%eax)
jmp    8067a0d <fchmod@plt+0x1c8cd>
xchg   %ax,%ax
mov    0x40(%esp),%eax
movl   $0x2f,0x4(%esp)
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     8067bcb <fchmod@plt+0x1ca8b>
mov    0x40(%esp),%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    %esi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xb704(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
add    $0x3c,%eax
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
mov    0x40(%esp),%eax
jns    8067a9a <fchmod@plt+0x1c95a>
jmp    8067b5a <fchmod@plt+0x1ca1a>
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    8067a0f <fchmod@plt+0x1c8cf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b0c6,%ebx
test   %esi,%esi
je     8067c28 <fchmod@plt+0x1cae8>
cmpb   $0x0,0x10a(%esi)
je     8067c10 <fchmod@plt+0x1cad0>
mov    0x2c(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movb   $0x1,0x10a(%esi)
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
jmp    8067c01 <fchmod@plt+0x1cac1>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8067c04 <fchmod@plt+0x1cac4>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1b074,%ebx
mov    0x38(%esp),%ebp
test   %edi,%edi
je     8067caa <fchmod@plt+0x1cb6a>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%esi
je     8067caa <fchmod@plt+0x1cb6a>
mov    %esi,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
test   %eax,%eax
je     8067c9c <fchmod@plt+0x1cb5c>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    8067c9c <fchmod@plt+0x1cb5c>
test   %ebp,%ebp
je     8067cb8 <fchmod@plt+0x1cb78>
mov    %esi,(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     8067c9c <fchmod@plt+0x1cb5c>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
je     8067cb8 <fchmod@plt+0x1cb78>
mov    %esi,(%esp)
call   8067360 <fchmod@plt+0x1c220>
test   %eax,%eax
mov    %eax,%esi
jne    8067c60 <fchmod@plt+0x1cb20>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1afd6,%ebx
cmpb   $0x0,0x10f(%esi)
jne    8067cf5 <fchmod@plt+0x1cbb5>
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    0x1c(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1afa6,%ebx
cmpb   $0x0,0x10f(%esi)
jne    8067d25 <fchmod@plt+0x1cbe5>
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    0x20(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1af76,%ebx
cmpb   $0x0,0x10f(%esi)
jne    8067d55 <fchmod@plt+0x1cc15>
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    0x24(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1af46,%ebx
test   %esi,%esi
je     8067db0 <fchmod@plt+0x1cc70>
mov    0x18(%esi),%edx
test   %edx,%edx
mov    %edx,%eax
je     8067d88 <fchmod@plt+0x1cc48>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
cmpb   $0x0,0x10f(%esi)
je     8067da0 <fchmod@plt+0x1cc60>
mov    %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8067700 <fchmod@plt+0x1c5c0>
mov    0x18(%esi),%edx
mov    %edx,%eax
jmp    8067d93 <fchmod@plt+0x1cc53>
nop
xor    %eax,%eax
jmp    8067d81 <fchmod@plt+0x1cc41>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1aee6,%ebx
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x34(%esi)
je     8067e10 <fchmod@plt+0x1ccd0>
mov    %eax,0x8(%esp)
lea    -0x105fa(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    $0xfffffff4,%eax
jmp    8067e0a <fchmod@plt+0x1ccca>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1ae8b,%ebx
sub    $0x43c,%esp
mov    0x454(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x450(%esp),%edi
mov    %esi,(%esp)
lea    -0xb6fd(%ebx),%eax
mov    %eax,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067ec0 <fchmod@plt+0x1cd80>
add    $0x8,%esi
mov    %esi,0xc(%esp)
lea    -0x13cfe(%ebx),%eax
lea    0x2c(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8066a80 <fchmod@plt+0x1b940>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    80680f6 <fchmod@plt+0x1cfb6>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xb6f4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067ee8 <fchmod@plt+0x1cda8>
add    $0xa,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80663b0 <fchmod@plt+0x1b270>
jmp    8067ea1 <fchmod@plt+0x1cd61>
nop
lea    -0xb74e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067f10 <fchmod@plt+0x1cdd0>
lea    0x8(%esi),%edx
mov    %edi,%eax
call   80665a0 <fchmod@plt+0x1b460>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    0x0(%esi),%esi
lea    -0xb73c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067f40 <fchmod@plt+0x1ce00>
add    $0x8,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80673b0 <fchmod@plt+0x1c270>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    0x0(%esi),%esi
lea    -0xb6e9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8067fbb <fchmod@plt+0x1ce7b>
add    $0x9,%esi
lea    0x2c(%esp),%ebp
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebp,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
jmp    8067f8a <fchmod@plt+0x1ce4a>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
mov    %ebp,0x4(%esp)
lea    0x1(%esi),%ebp
mov    %edi,(%esp)
call   8065b40 <fchmod@plt+0x1aa00>
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8067f78 <fchmod@plt+0x1ce38>
cmpb   $0x0,0x0(%ebp)
je     8067ea1 <fchmod@plt+0x1cd61>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8065b40 <fchmod@plt+0x1aa00>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb6df(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8068057 <fchmod@plt+0x1cf17>
add    $0x5,%esi
mov    %esi,0x8(%esp)
lea    0x2c(%esp),%esi
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     8067ea1 <fchmod@plt+0x1cd61>
cmpb   $0x0,0x1(%eax)
lea    0x1(%eax),%ebp
jne    806803c <fchmod@plt+0x1cefc>
jmp    8067ea1 <fchmod@plt+0x1cd61>
xchg   %ax,%ax
movb   $0x0,(%eax)
lea    0x1(%eax),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8065ba0 <fchmod@plt+0x1aa60>
cmpb   $0x0,0x1(%esi)
je     8067ea1 <fchmod@plt+0x1cd61>
mov    0x1c(%esp),%ebp
movl   $0x3a,0x4(%esp)
mov    %ebp,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8068018 <fchmod@plt+0x1ced8>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb6d9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806809d <fchmod@plt+0x1cf5d>
add    $0x13,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad10 <strtoull@plt>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80669e0 <fchmod@plt+0x1b8a0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb6c7(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80680fb <fchmod@plt+0x1cfbb>
mov    0x30(%edi),%eax
add    $0x7,%esi
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x30(%edi)
je     8067ea1 <fchmod@plt+0x1cd61>
movb   $0x1,0x10e(%edi)
mov    %eax,0x8(%esp)
lea    -0xd775(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
call   806ed90 <fchmod@plt+0x23c50>
lea    -0xb6bf(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8068125 <fchmod@plt+0x1cfe5>
add    $0x7,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8067dc0 <fchmod@plt+0x1cc80>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb733(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     8068161 <fchmod@plt+0x1d021>
add    $0x6,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x100(%edi)
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb72c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806819d <fchmod@plt+0x1d05d>
add    $0x6,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0x104(%edi)
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb6b7(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80681ef <fchmod@plt+0x1d0af>
mov    0x38(%edi),%eax
add    $0xc,%esi
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x38(%edi)
je     8067ea1 <fchmod@plt+0x1cd61>
mov    %eax,0x8(%esp)
lea    -0xb6aa(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb69e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806827d <fchmod@plt+0x1d13d>
add    $0x7,%esi
mov    %esi,(%esp)
lea    0x2c(%esp),%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,0xd8(%edi)
mov    %edx,0xdc(%edi)
mov    %eax,0x14(%esp)
lea    -0xb502(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb696(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb745(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80682bc <fchmod@plt+0x1d17c>
add    $0x8,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad10 <strtoull@plt>
mov    %eax,%edx
mov    %edi,%eax
call   8066600 <fchmod@plt+0x1b4c0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb725(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806833d <fchmod@plt+0x1d1fd>
add    $0x8,%esi
mov    %esi,(%esp)
lea    0x2c(%esp),%esi
movl   $0x8,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,0x1c(%edi)
mov    %eax,0x14(%esp)
lea    -0xb68f(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb68b(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb683(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     80683be <fchmod@plt+0x1d27e>
add    $0x7,%esi
mov    %esi,(%esp)
lea    0x2c(%esp),%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,0x20(%edi)
mov    %eax,0x14(%esp)
lea    -0xc0fe(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb67b(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
lea    -0xb674(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806843f <fchmod@plt+0x1d2ff>
add    $0x7,%esi
mov    %esi,(%esp)
lea    0x2c(%esp),%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804ab00 <strtoul@plt>
mov    %eax,0x24(%edi)
mov    %eax,0x14(%esp)
lea    -0xc0fe(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb66c(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8066330 <fchmod@plt+0x1b1f0>
jmp    8067ea1 <fchmod@plt+0x1cd61>
mov    %esi,%edx
mov    %edi,%eax
call   8066690 <fchmod@plt+0x1b550>
jmp    8067ea1 <fchmod@plt+0x1cd61>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a856,%ebx
mov    0x24(%esp),%esi
test   %eax,%eax
je     8068498 <fchmod@plt+0x1d358>
test   %esi,%esi
je     8068498 <fchmod@plt+0x1d358>
mov    %eax,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806ae20 <fchmod@plt+0x1fce0>
mov    %eax,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806848c <fchmod@plt+0x1d34c>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a809,%ebx
sub    $0x4c,%esp
mov    0x44(%eax),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
movl   $0x0,0x48(%ebp)
movl   $0x1000,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x44(%ebp)
je     80685f4 <fchmod@plt+0x1d4b4>
mov    0x40(%ebp),%eax
test   %eax,%eax
je     80685dd <fchmod@plt+0x1d49d>
mov    %ebp,(%esp)
mov    %esi,0x3c(%esp)
xor    %esi,%esi
call   80660e0 <fchmod@plt+0x1afa0>
movl   $0x1000,0x20(%esp)
mov    %eax,%edi
test   %edi,%edi
lea    -0xb6c9(%ebx),%eax
mov    %eax,0x2c(%esp)
je     80685a9 <fchmod@plt+0x1d469>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
cmpb   $0x2e,(%eax)
mov    %eax,%ecx
je     8068594 <fchmod@plt+0x1d454>
lea    0x1(%esi),%eax
mov    0x3c(%esp),%edx
mov    %eax,0x24(%esp)
mov    0x40(%ebp),%eax
mov    %edx,(%eax,%esi,4)
add    $0x2,%esi
cmp    $0x7f,%esi
ja     80685d0 <fchmod@plt+0x1d490>
mov    %edi,(%esp)
mov    %ecx,0x28(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    0x28(%esp),%ecx
movl   $0x0,0x14(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80632b0 <fchmod@plt+0x18170>
test   %eax,%eax
je     80685d0 <fchmod@plt+0x1d490>
addl   $0x1,0x3c(%esp)
sub    $0x1,%eax
mov    0x24(%esp),%esi
mov    %eax,0x20(%esp)
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
jne    8068518 <fchmod@plt+0x1d3d8>
shl    $0x2,%esi
mov    0x40(%ebp),%eax
movl   $0x0,(%eax,%esi,1)
mov    0x3c(%esp),%eax
sub    0x44(%ebp),%eax
movb   $0x1,0x10c(%ebp)
mov    %eax,0x48(%ebp)
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xffffffea,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x200,(%esp)
call   804a9f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x40(%ebp)
jne    80684ea <fchmod@plt+0x1d3aa>
mov    $0xfffffff4,%eax
jmp    80685d5 <fchmod@plt+0x1d495>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
cmpb   $0x0,0x10c(%esi)
je     8068620 <fchmod@plt+0x1d4e0>
mov    0x40(%esi),%eax
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   80684a0 <fchmod@plt+0x1d360>
test   %eax,%eax
je     8068611 <fchmod@plt+0x1d4d1>
xor    %eax,%eax
jmp    8068614 <fchmod@plt+0x1d4d4>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a676,%ebx
test   %esi,%esi
je     8068690 <fchmod@plt+0x1d550>
cmpb   $0x0,0x10f(%esi)
je     8068678 <fchmod@plt+0x1d538>
mov    %esi,(%esp)
call   8066080 <fchmod@plt+0x1af40>
mov    0x24(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806ae20 <fchmod@plt+0x1fce0>
test   %eax,%eax
setne  %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
nop
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
jmp    8068651 <fchmod@plt+0x1d511>
lea    0x0(%esi),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a606,%ebx
cmpb   $0x0,0x10f(%esi)
jne    80686cd <fchmod@plt+0x1d58d>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
mov    0xe8(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a5c6,%ebx
cmpb   $0x0,0x10f(%esi)
jne    806870d <fchmod@plt+0x1d5cd>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065ca0 <fchmod@plt+0x1ab60>
mov    0xfc(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
movzbl 0x114(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movb   $0x1,0x114(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a561,%ebx
mov    0x4(%eax),%edi
mov    0x4(%edx),%esi
mov    %edi,%ecx
cmp    %edi,%esi
cmovbe %esi,%ecx
mov    %ecx,0x8(%esp)
mov    (%edx),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
jne    806878d <fchmod@plt+0x1d64d>
xor    %edx,%edx
cmp    %esi,%edi
seta   %dl
mov    $0xffffffff,%eax
cmovae %edx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0xf4(%eax),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a4fe,%ebx
cmp    %eax,0xf0(%esi)
jb     80687f8 <fchmod@plt+0x1d6b8>
cmp    $0x400,%eax
mov    $0x400,%edi
cmovae %eax,%edi
add    %edi,%eax
shl    $0x3,%eax
mov    %eax,0x4(%esp)
mov    0xec(%esi),%eax
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
je     8068838 <fchmod@plt+0x1d6f8>
add    %edi,0xf4(%esi)
mov    %eax,0xec(%esi)
mov    %ebp,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
je     8068838 <fchmod@plt+0x1d6f8>
mov    0xf0(%esi),%ecx
mov    0xec(%esi),%edx
lea    (%edx,%ecx,8),%edi
mov    %eax,(%edi)
mov    %eax,(%esp)
call   804ab30 <strlen@plt>
mov    %eax,0x4(%edi)
xor    %eax,%eax
addl   $0x1,0xf0(%esi)
andb   $0xfe,0xf8(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xfffffff4,%eax
jmp    8068830 <fchmod@plt+0x1d6f0>
nop
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a46a,%ebx
sub    $0x10,%esp
lea    0x78(%eax),%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     8068890 <fchmod@plt+0x1d750>
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
je     80688ae <fchmod@plt+0x1d76e>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    80688a0 <fchmod@plt+0x1d760>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    8068870 <fchmod@plt+0x1d730>
xor    %eax,%eax
jmp    8068895 <fchmod@plt+0x1d755>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a3eb,%ebx
sub    $0x2c,%esp
lea    0x94(%eax),%esi
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806899b <fchmod@plt+0x1d85b>
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80689c0 <fchmod@plt+0x1d880>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80660e0 <fchmod@plt+0x1afa0>
test   %eax,%eax
mov    %eax,%ebp
jne    806893e <fchmod@plt+0x1d7fe>
jmp    80689a8 <fchmod@plt+0x1d868>
mov    %ebp,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%ebp
je     80689a8 <fchmod@plt+0x1d868>
mov    %ebp,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806ae90 <fchmod@plt+0x1fd50>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%esi
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8068930 <fchmod@plt+0x1d7f0>
mov    0x14(%esp),%eax
test   %eax,%eax
sete   %al
test   %esi,%esi
je     80689c8 <fchmod@plt+0x1d888>
test   %al,%al
jne    8068930 <fchmod@plt+0x1d7f0>
mov    0x14(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8068930 <fchmod@plt+0x1d7f0>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,0x18(%esp)
jne    8068900 <fchmod@plt+0x1d7c0>
xor    %eax,%eax
jmp    80689a0 <fchmod@plt+0x1d860>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     8068930 <fchmod@plt+0x1d7f0>
jmp    806899b <fchmod@plt+0x1d85b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a2cd,%ebx
sub    $0x14,%esp
mov    %edx,0x4(%esp)
mov    0x20(%esp),%esi
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
mov    %eax,%edx
je     8068a38 <fchmod@plt+0x1d8f8>
test   %esi,%esi
mov    $0x1,%eax
je     8068a2b <fchmod@plt+0x1d8eb>
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a267,%ebx
sub    $0x1c,%esp
lea    0x5c(%eax),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    8068a7e <fchmod@plt+0x1d93e>
jmp    8068aa8 <fchmod@plt+0x1d968>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     8068aa8 <fchmod@plt+0x1d968>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8068a70 <fchmod@plt+0x1d930>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x40,%ebp
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     8068af6 <fchmod@plt+0x1d9b6>
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    8068ad6 <fchmod@plt+0x1d996>
jmp    8068a9e <fchmod@plt+0x1d95e>
nop
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     8068a9e <fchmod@plt+0x1d95e>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    8068ac8 <fchmod@plt+0x1d988>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
test   %eax,%eax
je     8068b58 <fchmod@plt+0x1da18>
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a196,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   8065420 <fchmod@plt+0x1a2e0>
mov    %esi,(%esp)
mov    %eax,%edi
call   8065420 <fchmod@plt+0x1a2e0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
setne  %al
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a149,%ebx
sub    $0x1c,%esp
mov    %eax,0xc(%esp)
add    $0x24,%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    8068b9e <fchmod@plt+0x1da5e>
jmp    8068bd0 <fchmod@plt+0x1da90>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     8068bd0 <fchmod@plt+0x1da90>
mov    %esi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %esi,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,%edx
mov    %edi,%eax
call   80689e0 <fchmod@plt+0x1d8a0>
test   %eax,%eax
je     8068b90 <fchmod@plt+0x1da50>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%ebp
add    $0x8,%ebp
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     8068c30 <fchmod@plt+0x1daf0>
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    8068c06 <fchmod@plt+0x1dac6>
jmp    8068c30 <fchmod@plt+0x1daf0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     8068c30 <fchmod@plt+0x1daf0>
mov    %esi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %esi,(%esp)
mov    %eax,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %ebp,(%esp)
mov    %eax,%edx
mov    %edi,%eax
call   80689e0 <fchmod@plt+0x1d8a0>
test   %eax,%eax
jne    8068bf8 <fchmod@plt+0x1dab8>
jmp    8068bc0 <fchmod@plt+0x1da80>
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1a069,%ebx
sub    $0x43c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
lea    0xb0(%edi),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
lea    -0xb8f1(%ebx),%ecx
mov    %ecx,0x18(%esp)
lea    0x2c(%esp),%ecx
mov    %ecx,0x1c(%esp)
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8068d52 <fchmod@plt+0x1dc12>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    0x1c(%esp),%esi
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     8068d3a <fchmod@plt+0x1dbfa>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     8068d32 <fchmod@plt+0x1dbf2>
cmpb   $0x2e,0x13(%eax)
je     8068ce0 <fchmod@plt+0x1dba0>
lea    0x13(%eax),%edx
mov    (%edi),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8067760 <fchmod@plt+0x1c620>
test   %eax,%eax
mov    %eax,%ebp
je     8068ce0 <fchmod@plt+0x1dba0>
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    %eax,%edx
mov    %edi,%eax
call   8068a40 <fchmod@plt+0x1d900>
test   %al,%al
jne    8068d70 <fchmod@plt+0x1dc30>
mov    %ebp,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %esi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8068cec <fchmod@plt+0x1dbac>
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8068c98 <fchmod@plt+0x1db58>
xor    %eax,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8068dce <fchmod@plt+0x1dc8e>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebp,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,%edx
mov    %edi,%eax
call   8068840 <fchmod@plt+0x1d700>
test   %al,%al
je     8068d1e <fchmod@plt+0x1dbde>
mov    0xcc(%edi),%eax
mov    %ebp,%edx
call   8068b10 <fchmod@plt+0x1d9d0>
test   %al,%al
je     8068d1e <fchmod@plt+0x1dbde>
mov    %ebp,%edx
mov    %edi,%eax
call   80688c0 <fchmod@plt+0x1d780>
test   %al,%al
je     8068d1e <fchmod@plt+0x1dbde>
mov    %ebp,%edx
mov    %edi,%eax
call   8068b60 <fchmod@plt+0x1da20>
test   %al,%al
je     8068d1e <fchmod@plt+0x1dbde>
mov    %ebp,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,%edx
mov    %edi,%eax
call   80687a0 <fchmod@plt+0x1d660>
jmp    8068d1e <fchmod@plt+0x1dbde>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19ec7,%ebx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
mov    %eax,%esi
je     8068e78 <fchmod@plt+0x1dd38>
mov    %eax,(%esp)
call   8066410 <fchmod@plt+0x1b2d0>
mov    %eax,%edx
mov    %edi,%eax
call   8068a40 <fchmod@plt+0x1d900>
test   %al,%al
jne    8068e28 <fchmod@plt+0x1dce8>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80655e0 <fchmod@plt+0x1a4a0>
mov    %eax,%edx
mov    %edi,%eax
call   8068840 <fchmod@plt+0x1d700>
test   %al,%al
je     8068e1c <fchmod@plt+0x1dcdc>
mov    %esi,%edx
mov    %edi,%eax
call   80688c0 <fchmod@plt+0x1d780>
test   %al,%al
je     8068e1c <fchmod@plt+0x1dcdc>
mov    %esi,%edx
mov    %edi,%eax
call   8068b60 <fchmod@plt+0x1da20>
test   %al,%al
je     8068e1c <fchmod@plt+0x1dcdc>
mov    %esi,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,%edx
mov    %edi,%eax
call   80687a0 <fchmod@plt+0x1d660>
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    $0x1,%eax
jmp    8068e1e <fchmod@plt+0x1dcde>
nop
mov    $0xffffffed,%eax
jmp    8068e1e <fchmod@plt+0x1dcde>
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19e29,%ebx
sub    $0x3c,%esp
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     8068f68 <fchmod@plt+0x1de28>
mov    %eax,(%esp)
lea    -0xc054(%ebx),%ebp
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8068ed9 <fchmod@plt+0x1dd99>
jmp    8068f50 <fchmod@plt+0x1de10>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   804af10 <readdir64@plt>
test   %eax,%eax
je     8068f50 <fchmod@plt+0x1de10>
cmpb   $0x2e,0x13(%eax)
je     8068ec8 <fchmod@plt+0x1dd88>
cmpb   $0x4,0x12(%eax)
jne    8068ec8 <fchmod@plt+0x1dd88>
add    $0x13,%eax
mov    %eax,0x10(%esp)
lea    0x2c(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a9c0 <__asprintf_chk@plt>
test   %eax,%eax
js     8068ec8 <fchmod@plt+0x1dd88>
mov    0x2c(%esp),%edx
mov    0x1c(%esp),%eax
call   8068de0 <fchmod@plt+0x1dca0>
mov    0x50(%esp),%eax
test   %eax,%eax
jle    8068f38 <fchmod@plt+0x1ddf8>
mov    0x50(%esp),%ecx
mov    0x2c(%esp),%edx
lea    -0x1(%ecx),%eax
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   8068e80 <fchmod@plt+0x1dd40>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8068ed9 <fchmod@plt+0x1dd99>
mov    %esi,(%esp)
call   804b0b0 <closedir@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19d29,%ebx
sub    $0x84c,%esp
mov    0x860(%esp),%ecx
lea    0x38(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x83c(%esp)
xor    %eax,%eax
lea    0x3c(%esp),%eax
mov    0x864(%esp),%esi
mov    %eax,0x24(%esp)
mov    %eax,0x38(%esp)
movl   $0x0,0x10(%esp)
lea    -0x13d60(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x28(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     8069018 <fchmod@plt+0x1ded8>
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80632b0 <fchmod@plt+0x18170>
test   %esi,%esi
je     806903e <fchmod@plt+0x1defe>
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%edi
je     806922c <fchmod@plt+0x1e0ec>
mov    %eax,(%esp)
call   804af10 <readdir64@plt>
lea    -0x1033a(%ebx),%ecx
mov    %ecx,0x28(%esp)
test   %eax,%eax
jne    8069080 <fchmod@plt+0x1df40>
jmp    8069120 <fchmod@plt+0x1dfe0>
nop
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     8069120 <fchmod@plt+0x1dfe0>
cmpb   $0x2e,0x13(%eax)
je     8069070 <fchmod@plt+0x1df30>
lea    0x13(%eax),%esi
mov    %ebp,%eax
mov    %esi,%edx
call   8068840 <fchmod@plt+0x1d700>
test   %al,%al
je     8069070 <fchmod@plt+0x1df30>
mov    0x28(%esp),%eax
mov    %esi,0x10(%esp)
lea    0x43c(%esp),%esi
mov    %esi,(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8066ba0 <fchmod@plt+0x1ba60>
test   %eax,%eax
mov    %eax,%esi
je     8069070 <fchmod@plt+0x1df30>
cmpb   $0x0,0xf9(%ebp)
je     80690f7 <fchmod@plt+0x1dfb7>
mov    %eax,(%esp)
call   8066040 <fchmod@plt+0x1af00>
test   %eax,%eax
je     80691b8 <fchmod@plt+0x1e078>
mov    0xcc(%ebp),%eax
mov    %esi,%edx
call   8068b10 <fchmod@plt+0x1d9d0>
test   %al,%al
jne    8069150 <fchmod@plt+0x1e010>
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %edi,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    8069080 <fchmod@plt+0x1df40>
mov    %edi,(%esp)
call   804b0b0 <closedir@plt>
xor    %eax,%eax
mov    0x83c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8069236 <fchmod@plt+0x1e0f6>
add    $0x84c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0xb0(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     80691f4 <fchmod@plt+0x1e0b4>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     80691f4 <fchmod@plt+0x1e0b4>
mov    %edi,0x2c(%esp)
mov    %eax,%edi
jmp    8069196 <fchmod@plt+0x1e056>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     80691f0 <fchmod@plt+0x1e0b0>
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8068630 <fchmod@plt+0x1d4f0>
test   %eax,%eax
jne    8069188 <fchmod@plt+0x1e048>
mov    0x2c(%esp),%edi
jmp    8069108 <fchmod@plt+0x1dfc8>
nop
mov    %esi,(%esp)
call   8067990 <fchmod@plt+0x1c850>
shrd   $0x8,%edx,%eax
mov    %edx,%ecx
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
jne    8069108 <fchmod@plt+0x1dfc8>
mov    %esi,(%esp)
call   8067720 <fchmod@plt+0x1c5e0>
test   %eax,%eax
jg     8069108 <fchmod@plt+0x1dfc8>
jmp    80690f7 <fchmod@plt+0x1dfb7>
xchg   %ax,%ax
mov    0x2c(%esp),%edi
mov    %esi,%edx
mov    %ebp,%eax
call   80688c0 <fchmod@plt+0x1d780>
test   %al,%al
je     8069108 <fchmod@plt+0x1dfc8>
mov    %esi,%edx
mov    %ebp,%eax
call   8068b60 <fchmod@plt+0x1da20>
test   %al,%al
je     8069108 <fchmod@plt+0x1dfc8>
mov    %esi,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,%edx
mov    %ebp,%eax
call   80687a0 <fchmod@plt+0x1d660>
jmp    8069108 <fchmod@plt+0x1dfc8>
mov    $0xfffffffe,%eax
jmp    806912a <fchmod@plt+0x1dfea>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19a6b,%ebx
sub    $0x43c,%esp
mov    0x450(%esp),%ecx
lea    0x2c(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x454(%esp),%edi
mov    %edx,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x400,0x4(%esp)
lea    -0x13d60(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
call   8063320 <fchmod@plt+0x181e0>
mov    %esi,(%esp)
call   804b0d0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebp
je     806932d <fchmod@plt+0x1e1ed>
nop
mov    %ebp,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
je     8069308 <fchmod@plt+0x1e1c8>
cmpb   $0x2e,0x13(%eax)
je     80692b8 <fchmod@plt+0x1e178>
lea    0x13(%eax),%esi
mov    0x14(%esp),%eax
test   %edi,%edi
mov    %esi,%edx
cmovne %edi,%edx
call   8068a40 <fchmod@plt+0x1d900>
test   %al,%al
je     80692b8 <fchmod@plt+0x1e178>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
call   8068f80 <fchmod@plt+0x1de40>
mov    %ebp,(%esp)
call   804af10 <readdir64@plt>
test   %eax,%eax
jne    80692c4 <fchmod@plt+0x1e184>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   804b0b0 <closedir@plt>
xor    %eax,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8069334 <fchmod@plt+0x1e1f4>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    8069312 <fchmod@plt+0x1e1d2>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19965,%ebx
test   %edi,%edi
je     8069450 <fchmod@plt+0x1e310>
movl   $0xfc,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8069450 <fchmod@plt+0x1e310>
movl   $0x1,0x4(%eax)
lea    0x8(%eax),%eax
mov    %edi,-0x8(%eax)
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x24(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x40(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x5c(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x78(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x94(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0xb0(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0xd0(%esi),%eax
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %eax,%eax
jmp    8069448 <fchmod@plt+0x1e308>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19845,%ebx
test   %esi,%esi
je     8069490 <fchmod@plt+0x1e350>
mov    0x4(%esi),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x4(%esi)
jle    8069498 <fchmod@plt+0x1e358>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %eax,%eax
jmp    8069488 <fchmod@plt+0x1e348>
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(%esi),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x24(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x40(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x5c(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x78(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x94(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0xb0(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    0xcc(%esi),%eax
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
lea    0xd0(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    0xf0(%esi),%eax
test   %eax,%eax
je     8069534 <fchmod@plt+0x1e3f4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esi),%eax
mov    (%eax,%edi,8),%eax
add    $0x1,%edi
mov    %eax,(%esp)
call   804a690 <free@plt>
cmp    %edi,0xf0(%esi)
ja     8069518 <fchmod@plt+0x1e3d8>
mov    0xec(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    8069488 <fchmod@plt+0x1e348>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19744,%ebx
test   %ecx,%ecx
je     806989a <fchmod@plt+0x1e75a>
mov    0x50(%esp),%eax
testb  $0x1,0xf8(%eax)
je     80695a8 <fchmod@plt+0x1e468>
add    $0xd0,%eax
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x50(%esp),%eax
add    $0xd0,%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    -0x1a574(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
movl   $0x8,0x8(%esp)
mov    0xf0(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    0xec(%eax),%eax
mov    %eax,(%esp)
call   804af20 <qsort@plt>
mov    0x50(%esp),%eax
mov    0xf0(%eax),%eax
test   %eax,%eax
mov    %eax,0x24(%esp)
je     806974c <fchmod@plt+0x1e60c>
lea    -0xb579(%ebx),%eax
xor    %esi,%esi
movl   $0x0,0x28(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x50(%esp),%ecx
shl    $0x3,%eax
mov    %eax,0x1c(%esp)
add    0xec(%ecx),%eax
test   %esi,%esi
mov    %eax,%ecx
mov    %eax,0x18(%esp)
je     80697e0 <fchmod@plt+0x1e6a0>
mov    0x4(%eax),%eax
cmp    0x4(%esi),%eax
je     80697b8 <fchmod@plt+0x1e678>
mov    (%ecx),%edi
lea    0x4(%edi),%esi
lea    -0x190(%ebx),%ebp
lea    -0xb583(%ebx),%eax
jmp    8069686 <fchmod@plt+0x1e546>
lea    0x0(%esi),%esi
add    $0x4,%ebp
mov    -0x4(%ebp),%eax
test   %eax,%eax
je     8069768 <fchmod@plt+0x1e628>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     8069678 <fchmod@plt+0x1e538>
mov    0x50(%esp),%eax
mov    %edi,%edx
call   80687a0 <fchmod@plt+0x1d660>
mov    0x50(%esp),%eax
mov    0x1c(%esp),%esi
add    0xec(%eax),%esi
addl   $0x1,0x10(%esp)
mov    0x24(%esp),%eax
cmp    %eax,0x10(%esp)
jne    8069630 <fchmod@plt+0x1e4f0>
mov    0x20(%esp),%edx
test   %edx,%edx
je     80696e8 <fchmod@plt+0x1e5a8>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x50(%esp),%eax
mov    0xf0(%eax),%eax
cmp    %eax,0x24(%esp)
jae    806974c <fchmod@plt+0x1e60c>
mov    0x24(%esp),%eax
lea    0x0(,%eax,8),%edi
mov    %eax,%esi
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
add    $0x1,%esi
mov    0xec(%eax),%ebp
movl   $0x0,0x8(%esp)
add    %edi,%ebp
add    $0x8,%edi
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x50(%esp),%eax
cmp    %esi,0xf0(%eax)
ja     8069708 <fchmod@plt+0x1e5c8>
mov    0x50(%esp),%eax
mov    0x24(%esp),%edx
orb    $0x1,0xf8(%eax)
mov    %edx,0xf0(%eax)
jmp    8069594 <fchmod@plt+0x1e454>
xchg   %ax,%ax
mov    0x20(%esp),%eax
test   %eax,%eax
je     806981b <fchmod@plt+0x1e6db>
mov    0x20(%esp),%eax
mov    (%eax),%esi
mov    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
call   804afa0 <strncmp@plt>
test   %eax,%eax
jne    80697f0 <fchmod@plt+0x1e6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x18(%esp),%esi
jmp    80696af <fchmod@plt+0x1e56f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edx
mov    (%edx),%edi
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
je     80696af <fchmod@plt+0x1e56f>
jmp    8069661 <fchmod@plt+0x1e521>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    (%eax),%edi
jmp    8069661 <fchmod@plt+0x1e521>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
mov    0x18(%esp),%eax
movl   $0x0,0x20(%esp)
mov    (%eax),%edi
jmp    8069792 <fchmod@plt+0x1e652>
mov    0x2c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
je     806988d <fchmod@plt+0x1e74d>
movzbl 0xb(%eax),%edx
lea    0xb(%eax),%esi
test   %dl,%dl
je     8069859 <fchmod@plt+0x1e719>
cmp    $0x2f,%dl
je     8069859 <fchmod@plt+0x1e719>
add    $0xc,%eax
jmp    8069850 <fchmod@plt+0x1e710>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x2f,%dl
je     8069859 <fchmod@plt+0x1e719>
movzbl (%eax),%edx
mov    %eax,%esi
test   %dl,%dl
jne    8069848 <fchmod@plt+0x1e708>
lea    -0xb56d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806988d <fchmod@plt+0x1e74d>
sub    %edi,%esi
add    $0x1,%esi
mov    %esi,0x28(%esp)
je     8069792 <fchmod@plt+0x1e652>
mov    0x18(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%esi
jmp    80696af <fchmod@plt+0x1e56f>
movl   $0x0,0x28(%esp)
jmp    8069792 <fchmod@plt+0x1e652>
xor    %eax,%eax
jmp    80695a0 <fchmod@plt+0x1e460>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x193f7,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     80698f5 <fchmod@plt+0x1e7b5>
xor    %eax,%eax
test   %ecx,%ecx
je     80698f0 <fchmod@plt+0x1e7b0>
add    $0x40,%edx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    80698f0 <fchmod@plt+0x1e7b0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x193a7,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     8069945 <fchmod@plt+0x1e805>
xor    %eax,%eax
test   %ecx,%ecx
je     8069940 <fchmod@plt+0x1e800>
add    $0x5c,%edx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    8069940 <fchmod@plt+0x1e800>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19357,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     8069995 <fchmod@plt+0x1e855>
xor    %eax,%eax
test   %ecx,%ecx
je     8069990 <fchmod@plt+0x1e850>
mov    0x28(%esp),%eax
add    $0x8,%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    8069990 <fchmod@plt+0x1e850>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19307,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     80699e5 <fchmod@plt+0x1e8a5>
xor    %eax,%eax
test   %ecx,%ecx
je     80699e0 <fchmod@plt+0x1e8a0>
mov    0x28(%esp),%eax
add    $0x24,%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    80699e0 <fchmod@plt+0x1e8a0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x192b7,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     8069a38 <fchmod@plt+0x1e8f8>
xor    %eax,%eax
test   %ecx,%ecx
je     8069a33 <fchmod@plt+0x1e8f3>
mov    0x28(%esp),%eax
add    $0x94,%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    8069a33 <fchmod@plt+0x1e8f3>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19267,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     8069a88 <fchmod@plt+0x1e948>
xor    %eax,%eax
test   %ecx,%ecx
je     8069a83 <fchmod@plt+0x1e943>
add    $0xb0,%edx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    8069a83 <fchmod@plt+0x1e943>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19215,%ebx
mov    0x24(%esp),%edi
test   %esi,%esi
je     8069ae9 <fchmod@plt+0x1e9a9>
test   %edi,%edi
je     8069ae0 <fchmod@plt+0x1e9a0>
mov    0xcc(%esi),%eax
test   %eax,%eax
je     8069ac3 <fchmod@plt+0x1e983>
mov    %eax,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    %edi,(%esp)
call   80652e0 <fchmod@plt+0x1a1a0>
mov    %eax,0xcc(%esi)
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0xffffffea,%eax
jmp    8069ad3 <fchmod@plt+0x1e993>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x191b7,%ebx
mov    0x24(%esp),%ecx
test   %edx,%edx
je     8069b35 <fchmod@plt+0x1e9f5>
xor    %eax,%eax
test   %ecx,%ecx
je     8069b30 <fchmod@plt+0x1e9f0>
add    $0x78,%edx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffea,%eax
jmp    8069b30 <fchmod@plt+0x1e9f0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19162,%ebx
test   %esi,%esi
je     8069c38 <fchmod@plt+0x1eaf8>
lea    0xb0(%esi),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     8069b80 <fchmod@plt+0x1ea40>
mov    %esi,%eax
call   8068c40 <fchmod@plt+0x1db00>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0xcc(%esi),%eax
test   %eax,%eax
je     8069bb8 <fchmod@plt+0x1ea78>
mov    %eax,(%esp)
call   8065440 <fchmod@plt+0x1a300>
mov    %eax,%edi
mov    %eax,%edx
mov    %esi,%eax
call   8068de0 <fchmod@plt+0x1dca0>
mov    %edi,%edx
mov    %esi,%eax
movl   $0x100,(%esp)
call   8068e80 <fchmod@plt+0x1dd40>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb563(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
movl   $0x0,0x4(%esp)
test   %eax,%eax
lea    -0x11fad(%ebx),%eax
mov    %eax,(%esp)
je     8069c20 <fchmod@plt+0x1eae0>
lea    -0x10567(%ebx),%edx
mov    %esi,%eax
call   8069240 <fchmod@plt+0x1e100>
lea    -0x1057d(%ebx),%edx
mov    %esi,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8069240 <fchmod@plt+0x1e100>
xor    %eax,%eax
jmp    8069b79 <fchmod@plt+0x1ea39>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb55e(%ebx),%edx
mov    %esi,%eax
call   8069240 <fchmod@plt+0x1e100>
xor    %eax,%eax
jmp    8069b79 <fchmod@plt+0x1ea39>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    8069b79 <fchmod@plt+0x1ea39>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x19051,%ebx
test   %esi,%esi
je     8069d40 <fchmod@plt+0x1ec00>
lea    -0x13b7c(%ebx),%edx
mov    %esi,%eax
call   8068a40 <fchmod@plt+0x1d900>
test   %al,%al
jne    8069d18 <fchmod@plt+0x1ebd8>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb563(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x10567(%ebx),%edi
movl   $0x3,(%esp)
call   804afe0 <__xstat64@plt>
lea    -0xb55e(%ebx),%edx
test   %eax,%eax
mov    %esi,%eax
cmove  %edx,%edi
call   8068a40 <fchmod@plt+0x1d900>
test   %al,%al
jne    8069cf8 <fchmod@plt+0x1ebb8>
lea    -0xb7ea(%ebx),%edx
mov    %esi,%eax
call   8068a40 <fchmod@plt+0x1d900>
xor    %ebp,%ebp
test   %al,%al
je     8069ce9 <fchmod@plt+0x1eba9>
lea    -0xb7ea(%ebx),%eax
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   8069240 <fchmod@plt+0x1e100>
add    $0x7c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %edi,%edx
mov    %esi,%eax
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1de40>
jmp    8069cc0 <fchmod@plt+0x1eb80>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
lea    -0x13b7c(%ebx),%edx
mov    %esi,%eax
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1de40>
jmp    8069c86 <fchmod@plt+0x1eb46>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%ebp
jmp    8069ce9 <fchmod@plt+0x1eba9>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
movzbl 0x8(%edx),%esi
mov    %eax,0xc(%esp)
mov    0x28(%eax),%ebp
add    0x20(%eax),%edx
movzbl 0x20(%esp),%eax
mov    %esi,0x8(%esp)
xor    %esi,%esi
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esp),%eax
cmp    %esi,%eax
jbe    8069dc2 <fchmod@plt+0x1ec82>
lea    (%esi,%eax,1),%edx
mov    0x4(%esp),%ecx
shr    %edx
mov    %edx,%edi
imul   %ebp,%edi
add    (%esp),%edi
movzbl (%edi),%eax
sub    %eax,%ecx
jns    8069de1 <fchmod@plt+0x1eca1>
mov    %ebp,0x8(%esp)
jmp    8069dbe <fchmod@plt+0x1ec7e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edi
lea    (%edx,%esi,1),%eax
shr    %eax
mov    0x4(%esp),%ebp
imul   %eax,%edi
add    (%esp),%edi
movzbl (%edi),%ecx
sub    %ecx,%ebp
mov    %ebp,%ecx
jns    8069dd0 <fchmod@plt+0x1ec90>
mov    %eax,%edx
cmp    %edx,%esi
jb     8069da0 <fchmod@plt+0x1ec60>
xor    %eax,%eax
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%ebp
test   %ecx,%ecx
je     8069de9 <fchmod@plt+0x1eca9>
lea    0x1(%eax),%esi
mov    %edx,0x8(%esp)
jmp    8069d76 <fchmod@plt+0x1ec36>
mov    %edx,%eax
mov    0x8(%esp),%edx
jmp    8069dd4 <fchmod@plt+0x1ec94>
mov    0xc(%esp),%eax
add    0x8(%edi),%eax
jmp    8069dc4 <fchmod@plt+0x1ec84>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18eae,%ebx
sub    $0x18,%esp
movl   $0x5f,0x8(%esp)
lea    -0xb3f9(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xb549(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xb52b(%ebx),%eax
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18e6b,%ebx
sub    $0x3c,%esp
mov    0x6c(%eax),%esi
add    (%edx),%esi
add    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,0x28(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   804ab30 <strlen@plt>
mov    0x804(%ebp),%ecx
mov    %eax,0x2c(%esp)
add    %ecx,%eax
cmp    $0x7ff,%eax
ja     8069ea6 <fchmod@plt+0x1ed66>
mov    0x2c(%esp),%edi
add    %ebp,%ecx
mov    %ecx,(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
call   804a6e0 <memcpy@plt>
mov    0x804(%ebp),%ecx
add    %edi,%ecx
mov    %ecx,0x804(%ebp)
mov    0x1c(%esp),%eax
cmpb   $0x0,0x8(%eax)
je     8069f58 <fchmod@plt+0x1ee18>
xor    %esi,%esi
mov    0x28(%esp),%edi
mov    %esi,0x18(%esp)
jmp    8069eea <fchmod@plt+0x1edaa>
mov    0x804(%ebp),%ecx
test   %ecx,%ecx
je     806a057 <fchmod@plt+0x1ef17>
mov    0x1c(%esp),%eax
sub    $0x1,%ecx
mov    %ecx,0x804(%ebp)
addl   $0x1,0x18(%esp)
movzbl 0x8(%eax),%eax
cmp    0x18(%esp),%eax
jbe    8069f58 <fchmod@plt+0x1ee18>
mov    0x6c(%edi),%eax
mov    0x1c(%esp),%esi
add    0x20(%eax),%esi
mov    %eax,0x20(%esp)
mov    0x18(%esp),%eax
shl    $0x4,%eax
add    %esi,%eax
movzbl (%eax),%edx
lea    0x1(%ecx),%esi
cmp    $0x7ff,%esi
mov    %dl,0x27(%esp)
mov    0x20(%esp),%edx
ja     8069f29 <fchmod@plt+0x1ede9>
movzbl 0x27(%esp),%edx
mov    %esi,0x804(%ebp)
mov    %dl,0x0(%ebp,%ecx,1)
mov    0x6c(%edi),%edx
add    0x8(%eax),%edx
mov    0x58(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,%eax
call   8069e40 <fchmod@plt+0x1ed00>
test   %eax,%eax
jns    8069ec0 <fchmod@plt+0x1ed80>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%esp),%edi
mov    0x14(%edi),%eax
or     0x10(%edi),%eax
jne    8069f88 <fchmod@plt+0x1ee48>
mov    0x2c(%esp),%eax
cmp    %ecx,%eax
ja     806a057 <fchmod@plt+0x1ef17>
sub    %eax,%ecx
xor    %eax,%eax
mov    %ecx,0x804(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%ecx),%edx
xor    %eax,%eax
cmp    $0x7ff,%edx
jbe    806a024 <fchmod@plt+0x1eee4>
mov    0x58(%esp),%edi
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   804a880 <fnmatch@plt>
test   %eax,%eax
jne    806a019 <fchmod@plt+0x1eed9>
mov    0x1c(%esp),%edx
mov    0x14(%edx),%eax
or     0x10(%edx),%eax
je     806a019 <fchmod@plt+0x1eed9>
mov    0x28(%esp),%eax
xor    %esi,%esi
mov    %ebp,0x54(%esp)
lea    0x70(%eax),%edi
mov    %edi,0x18(%esp)
mov    %edx,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
movzbl 0x8(%edi),%edx
mov    0x6c(%eax),%eax
mov    0x20(%eax),%ecx
imul   0x28(%eax),%edx
add    %edi,%ecx
add    %ecx,%edx
mov    %esi,%ecx
shl    $0x4,%ecx
add    %ecx,%edx
mov    (%edx),%ebp
mov    0x8(%edx),%ecx
add    %eax,%ebp
cmpb   $0x20,0x0(%ebp)
mov    %ebp,%edx
je     806a030 <fchmod@plt+0x1eef0>
add    $0x1,%esi
xor    %edx,%edx
cmp    0x14(%edi),%edx
jb     8069fd8 <fchmod@plt+0x1ee98>
ja     806a015 <fchmod@plt+0x1eed5>
cmp    0x10(%edi),%esi
jb     8069fd8 <fchmod@plt+0x1ee98>
mov    0x54(%esp),%ebp
mov    0x804(%ebp),%ecx
jmp    8069f64 <fchmod@plt+0x1ee24>
movb   $0x0,0x0(%ebp,%ecx,1)
mov    %ebp,%eax
jmp    8069f99 <fchmod@plt+0x1ee59>
add    %ecx,%eax
add    $0x1,%edx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
test   %eax,%eax
jne    806a004 <fchmod@plt+0x1eec4>
mov    $0xfffffff4,%eax
jmp    8069f4e <fchmod@plt+0x1ee0e>
call   8069e00 <fchmod@plt+0x1ecc0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x83c,%esp
mov    %eax,0x10(%esp)
mov    0x6c(%eax),%eax
mov    %gs:0x14,%edi
mov    %edi,0x82c(%esp)
xor    %edi,%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18c2e,%ebx
movl   $0x0,0x824(%esp)
00
movl   $0x0,0x828(%esp)
00
mov    %eax,%edi
add    0x38(%eax),%edi
mov    %edx,0x18(%esp)
mov    %eax,0xc(%esp)
je     806a2e8 <fchmod@plt+0x1f1a8>
lea    0x24(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    (%edi),%eax
mov    %eax,%esi
or     0x4(%edi),%esi
je     806a157 <fchmod@plt+0x1f017>
add    0xc(%esp),%eax
movzbl (%eax),%ecx
test   %cl,%cl
je     806a38d <fchmod@plt+0x1f24d>
cmp    $0x2a,%cl
je     806a386 <fchmod@plt+0x1f246>
cmp    $0x3f,%cl
je     806a386 <fchmod@plt+0x1f246>
cmp    $0x5b,%cl
je     806a386 <fchmod@plt+0x1f246>
mov    0x18(%esp),%esi
add    0x14(%esp),%esi
mov    %esi,%ebp
movzbl %cl,%esi
movsbl 0x0(%ebp),%ecx
cmp    %ecx,%esi
jne    806a2e8 <fchmod@plt+0x1f1a8>
xor    %ecx,%ecx
jmp    806a148 <fchmod@plt+0x1f008>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%dl
je     806a2f0 <fchmod@plt+0x1f1b0>
cmp    $0x2a,%dl
je     806a2f0 <fchmod@plt+0x1f1b0>
cmp    $0x5b,%dl
je     806a2f0 <fchmod@plt+0x1f1b0>
movsbl 0x0(%ebp,%ecx,1),%esi
cmp    %esi,%edx
jne    806a2e8 <fchmod@plt+0x1f1a8>
add    $0x1,%ecx
movzbl (%eax,%ecx,1),%edx
test   %dl,%dl
jne    806a120 <fchmod@plt+0x1efe0>
add    %ecx,0x14(%esp)
mov    0xc(%esp),%eax
mov    %edi,%edx
movl   $0x2a,(%esp)
call   8069d50 <fchmod@plt+0x1ec10>
test   %eax,%eax
je     806a379 <fchmod@plt+0x1f239>
mov    0x828(%esp),%edx
lea    0x1(%edx),%ecx
cmp    $0x7ff,%ecx
jbe    806a338 <fchmod@plt+0x1f1f8>
mov    0x18(%esp),%esi
mov    %eax,%edx
mov    0x1c(%esp),%ecx
add    0x14(%esp),%esi
mov    0x10(%esp),%eax
movl   $0x0,(%esp)
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
call   8069e40 <fchmod@plt+0x1ed00>
test   %eax,%eax
js     806a316 <fchmod@plt+0x1f1d6>
mov    0x828(%esp),%eax
test   %eax,%eax
je     806a425 <fchmod@plt+0x1f2e5>
sub    $0x1,%eax
mov    %eax,0x828(%esp)
mov    0x10(%esp),%eax
mov    0x6c(%eax),%eax
mov    %eax,0xc(%esp)
mov    0xc(%esp),%eax
mov    %edi,%edx
movl   $0x3f,(%esp)
call   8069d50 <fchmod@plt+0x1ec10>
test   %eax,%eax
je     806a24d <fchmod@plt+0x1f10d>
mov    0x828(%esp),%edx
lea    0x1(%edx),%ecx
cmp    $0x7ff,%ecx
jbe    806a350 <fchmod@plt+0x1f210>
mov    0x1c(%esp),%ecx
mov    %eax,%edx
mov    0x10(%esp),%ebp
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4(%esp)
mov    %ebp,%eax
call   8069e40 <fchmod@plt+0x1ed00>
test   %eax,%eax
js     806a316 <fchmod@plt+0x1f1d6>
mov    0x828(%esp),%eax
test   %eax,%eax
je     806a425 <fchmod@plt+0x1f2e5>
sub    $0x1,%eax
mov    %eax,0x828(%esp)
mov    0x6c(%ebp),%eax
mov    %eax,0xc(%esp)
mov    0xc(%esp),%eax
mov    %edi,%edx
movl   $0x5b,(%esp)
call   8069d50 <fchmod@plt+0x1ec10>
test   %eax,%eax
je     806a2b4 <fchmod@plt+0x1f174>
mov    0x828(%esp),%edx
lea    0x1(%edx),%ecx
cmp    $0x7ff,%ecx
jbe    806a368 <fchmod@plt+0x1f228>
mov    0x1c(%esp),%ecx
mov    %eax,%edx
mov    0x10(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4(%esp)
call   8069e40 <fchmod@plt+0x1ed00>
test   %eax,%eax
js     806a316 <fchmod@plt+0x1f1d6>
mov    0x828(%esp),%eax
test   %eax,%eax
je     806a425 <fchmod@plt+0x1f2e5>
sub    $0x1,%eax
mov    %eax,0x828(%esp)
movzbl (%esi),%eax
test   %al,%al
je     806a394 <fchmod@plt+0x1f254>
mov    0x10(%esp),%esi
mov    %edi,%edx
mov    0x6c(%esi),%esi
mov    %eax,(%esp)
mov    %esi,%eax
mov    %esi,0xc(%esp)
call   8069d50 <fchmod@plt+0x1ec10>
addl   $0x1,0x14(%esp)
test   %eax,%eax
mov    %eax,%edi
jne    806a0c5 <fchmod@plt+0x1ef85>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806a316 <fchmod@plt+0x1f1d6>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edx
mov    0x14(%esp),%eax
mov    %edx,(%esp)
add    %edx,%eax
mov    %edi,%edx
add    0x18(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
call   8069e40 <fchmod@plt+0x1ed00>
mov    0x82c(%esp),%edi
xor    %gs:0x14,%edi
jne    806a420 <fchmod@plt+0x1f2e0>
add    $0x83c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x828(%esp)
movb   $0x2a,0x24(%esp,%edx,1)
jmp    806a187 <fchmod@plt+0x1f047>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x828(%esp)
movb   $0x3f,0x24(%esp,%edx,1)
jmp    806a205 <fchmod@plt+0x1f0c5>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x828(%esp)
movb   $0x5b,0x24(%esp,%edx,1)
jmp    806a279 <fchmod@plt+0x1f139>
mov    0x18(%esp),%esi
add    0x14(%esp),%esi
jmp    806a1d9 <fchmod@plt+0x1f099>
xor    %edx,%edx
jmp    806a2f2 <fchmod@plt+0x1f1b2>
xor    %ecx,%ecx
jmp    806a153 <fchmod@plt+0x1f013>
mov    0x14(%edi),%eax
or     0x10(%edi),%eax
je     806a2e8 <fchmod@plt+0x1f1a8>
mov    0x10(%esp),%eax
xor    %esi,%esi
lea    0x70(%eax),%ebp
mov    %ebp,0xc(%esp)
mov    0x10(%esp),%eax
movzbl 0x8(%edi),%edx
mov    0x6c(%eax),%eax
mov    0x20(%eax),%ecx
imul   0x28(%eax),%edx
add    %edi,%ecx
add    %ecx,%edx
mov    %esi,%ecx
shl    $0x4,%ecx
add    %ecx,%edx
mov    (%edx),%ebp
mov    0x8(%edx),%ecx
add    %eax,%ebp
cmpb   $0x20,0x0(%ebp)
mov    %ebp,%edx
je     806a3f5 <fchmod@plt+0x1f2b5>
add    $0x1,%esi
xor    %edx,%edx
cmp    0x14(%edi),%edx
jb     806a3ad <fchmod@plt+0x1f26d>
ja     806a2e8 <fchmod@plt+0x1f1a8>
cmp    0x10(%edi),%esi
jb     806a3ad <fchmod@plt+0x1f26d>
xor    %eax,%eax
jmp    806a316 <fchmod@plt+0x1f1d6>
add    %ecx,%eax
add    $0x1,%edx
mov    %eax,0x8(%esp)
mov    0xc(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
test   %eax,%eax
jne    806a3d9 <fchmod@plt+0x1f299>
mov    $0xfffffff4,%eax
jmp    806a316 <fchmod@plt+0x1f1d6>
lea    0x0(%esi,%eiz,1),%esi
call   806ed90 <fchmod@plt+0x23c50>
call   8069e00 <fchmod@plt+0x1ecc0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18876,%ebx
test   %esi,%esi
je     806a4a0 <fchmod@plt+0x1f360>
mov    0x4(%esi),%eax
lea    -0x1(%eax),%edx
mov    %esi,%eax
test   %edx,%edx
mov    %edx,0x4(%esi)
jle    806a460 <fchmod@plt+0x1f320>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x6c(%esi),%eax
test   %eax,%eax
je     806a476 <fchmod@plt+0x1f336>
mov    0x38(%esi),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804ade0 <munmap@plt>
mov    0x8(%esi),%eax
test   %eax,%eax
je     806a485 <fchmod@plt+0x1f345>
mov    %eax,(%esp)
call   804a730 <fclose@plt>
lea    0x70(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    806a457 <fchmod@plt+0x1f317>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    806a457 <fchmod@plt+0x1f317>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x187fb,%ebx
sub    $0x3c,%esp
movl   $0x8c,0x4(%esp)
mov    0x50(%esp),%edi
movl   $0x1,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
movb   $0x4b,0x24(%esp)
movb   $0x53,0x25(%esp)
movb   $0x4c,0x26(%esp)
movb   $0x50,0x27(%esp)
movb   $0x48,0x28(%esp)
movb   $0x48,0x29(%esp)
movb   $0x52,0x2a(%esp)
movb   $0x48,0x2b(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806a7c8 <fchmod@plt+0x1f688>
movl   $0x1,0x4(%eax)
lea    0x70(%eax),%eax
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x125c4(%ebx),%eax
mov    %eax,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     806a7cc <fchmod@plt+0x1f68c>
mov    %eax,(%esp)
call   804ad20 <fileno@plt>
lea    0xc(%esi),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a920 <__fxstat64@plt>
test   %eax,%eax
js     806a7a8 <fchmod@plt+0x1f668>
cmpl   $0x4f,0x38(%esi)
jbe    806a7a8 <fchmod@plt+0x1f668>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804ad20 <fileno@plt>
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x1,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esi),%eax
mov    %eax,0x4(%esp)
call   804ad70 <mmap64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
mov    %eax,0x6c(%esi)
je     806a7ea <fchmod@plt+0x1f6aa>
lea    0x24(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
jne    806a768 <fchmod@plt+0x1f628>
mov    0x38(%esi),%eax
xor    0x10(%edi),%eax
or     0x14(%edi),%eax
jne    806a768 <fchmod@plt+0x1f628>
lea    -0xb3ed(%ebx),%ebp
lea    -0xb549(%ebx),%edi
lea    -0x125b1(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x132,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x6c(%esi),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ebp,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0xb519(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x38(%esi),%eax
mov    0x3c(%esi),%edx
mov    %ebp,0xc(%esp)
movl   $0x134,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0xb478(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x6c(%esi),%eax
mov    0x1c(%eax),%edx
mov    0x18(%eax),%eax
mov    %ebp,0xc(%esp)
movl   $0x135,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0xb458(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x6c(%esi),%eax
mov    0x4c(%eax),%edx
mov    0x48(%eax),%eax
mov    %ebp,0xc(%esp)
movl   $0x136,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0xb438(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    0x6c(%esi),%eax
mov    0x44(%eax),%edx
mov    0x40(%eax),%eax
mov    %ebp,0xc(%esp)
movl   $0x137,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0xb418(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,%eax
mov    0x2c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806a80b <fchmod@plt+0x1f6cb>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0xb4ac(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb3ed(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x12d,0x8(%esp)
lea    -0xb549(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
mov    %esi,(%esp)
call   806a430 <fchmod@plt+0x1f2f0>
xor    %eax,%eax
jmp    806a74d <fchmod@plt+0x1f60d>
xchg   %ax,%ax
lea    -0xb4fc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb3ed(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x11f,0x8(%esp)
jmp    806a784 <fchmod@plt+0x1f644>
xchg   %ax,%ax
xor    %eax,%eax
jmp    806a74d <fchmod@plt+0x1f60d>
lea    -0xb4fc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb3ed(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x118,0x8(%esp)
jmp    806a784 <fchmod@plt+0x1f644>
lea    -0xb4d4(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb3ed(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x126,0x8(%esp)
jmp    806a784 <fchmod@plt+0x1f644>
call   806ed90 <fchmod@plt+0x23c50>
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18492,%ebx
test   %esi,%esi
je     806a898 <fchmod@plt+0x1f758>
mov    0x8(%esi),%edx
xor    %eax,%eax
test   %edx,%edx
je     806a87d <fchmod@plt+0x1f73d>
mov    %edx,(%esp)
call   804ad20 <fileno@plt>
lea    0x10(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a920 <__fxstat64@plt>
test   %eax,%eax
js     806a888 <fchmod@plt+0x1f748>
add    $0x54,%esi
mov    %esi,(%esp)
call   8063360 <fchmod@plt+0x18220>
mov    %eax,%edi
mov    %edx,%esi
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   8063360 <fchmod@plt+0x18220>
xor    %edi,%eax
xor    %esi,%edx
or     %edx,%eax
setne  %al
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x70,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x70,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x183f5,%ebx
test   %esi,%esi
je     806a910 <fchmod@plt+0x1f7d0>
mov    0x8(%esi),%eax
test   %eax,%eax
je     806a910 <fchmod@plt+0x1f7d0>
lea    0x70(%esi),%edi
mov    %edi,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    0x24(%esp),%edx
mov    %esi,%eax
call   806a060 <fchmod@plt+0x1ef20>
test   %eax,%eax
mov    %eax,%esi
js     806a900 <fchmod@plt+0x1f7c0>
mov    %edi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
neg    %esi
mov    %esi,(%eax)
xor    %eax,%eax
jmp    806a8f4 <fchmod@plt+0x1f7b4>
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    806a8f4 <fchmod@plt+0x1f7b4>
nop
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x18384,%ebx
mov    %edx,0xc(%esp)
jmp    806a945 <fchmod@plt+0x1f805>
lea    0x0(%esi,%eiz,1),%esi
je     806a988 <fchmod@plt+0x1f848>
lea    0x1(%esi),%ebp
cmp    %ebp,0xc(%esp)
jbe    806a978 <fchmod@plt+0x1f838>
mov    0xc(%esp),%eax
lea    (%eax,%ebp,1),%esi
shr    %esi
mov    (%edi,%esi,4),%eax
mov    0xc(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jns    806a940 <fchmod@plt+0x1f800>
cmp    %ebp,%esi
jbe    806a978 <fchmod@plt+0x1f838>
mov    %esi,0xc(%esp)
jmp    806a94b <fchmod@plt+0x1f80b>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
not    %eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
cmp    %eax,(%eax)
sete   %al
movzbl %al,%eax
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%ecx
mov    %edx,0x4(%ecx)
mov    %ecx,(%edx)
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    $0x1c,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x182bf,%ebx
mov    0x38(%esp),%ebp
test   $0x1,%cl
mov    %ecx,%edx
jne    806aa60 <fchmod@plt+0x1f920>
test   $0x2,%dl
jne    806aa70 <fchmod@plt+0x1f930>
mov    %esi,%edi
xor    %eax,%eax
and    $0xfffffffc,%edi
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    %edi,%eax
jb     806aa12 <fchmod@plt+0x1f8d2>
add    %eax,%edx
test   $0x2,%esi
je     806aa33 <fchmod@plt+0x1f8f3>
xor    %eax,%eax
add    $0x2,%edx
mov    %ax,-0x2(%edx)
and    $0x1,%esi
je     806aa3b <fchmod@plt+0x1f8fb>
movb   $0x0,(%edx)
mov    0x30(%esp),%eax
add    $0x4,%ecx
mov    %eax,-0x4(%ecx)
mov    %ebp,%eax
mov    %al,0x14(%ecx)
mov    %ecx,(%esp)
call   806a9a0 <fchmod@plt+0x1f860>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%ecx),%edx
mov    $0x1b,%si
test   $0x2,%dl
movb   $0x0,(%ecx)
je     806aa0b <fchmod@plt+0x1f8cb>
nop
xor    %edi,%edi
add    $0x2,%edx
mov    %di,-0x2(%edx)
sub    $0x2,%esi
jmp    806aa0b <fchmod@plt+0x1f8cb>
xchg   %ax,%ax
push   %esi
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
mov    0x8(%edx),%ecx
lea    0x4(%edx),%esi
mov    %eax,0x8(%edx)
mov    %esi,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,(%ecx)
mov    %edx,0x8(%eax)
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x4(%edx),%ecx
mov    %eax,0x4(%edx)
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,(%ecx)
mov    0x8(%edx),%edx
mov    %edx,0x8(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x181e4,%ebx
cmpb   $0x0,0x18(%edi)
je     806ab38 <fchmod@plt+0x1f9f8>
mov    0xc(%edi),%esi
mov    0x34(%esp),%eax
mov    0x10(%edi),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   806a920 <fchmod@plt+0x1f7e0>
test   %eax,%eax
mov    %eax,%ebp
js     806ab3a <fchmod@plt+0x1f9fa>
mov    (%esi,%eax,4),%esi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
je     806ac70 <fchmod@plt+0x1fb30>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x10(%esi)
je     806ac8e <fchmod@plt+0x1fb4e>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806ac8e <fchmod@plt+0x1fb4e>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0xc(%esi)
je     806ac86 <fchmod@plt+0x1fb46>
mov    0x38(%esp),%eax
test   %eax,%eax
je     806ab8e <fchmod@plt+0x1fa4e>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804acb0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x10(%esi)
je     806ac7b <fchmod@plt+0x1fb3b>
cmpb   $0x0,0x18(%edi)
je     806ac40 <fchmod@plt+0x1fb00>
mov    0x10(%edi),%edx
mov    0x14(%edi),%eax
cmp    %eax,%edx
jb     806abd9 <fchmod@plt+0x1fa99>
test   %eax,%eax
mov    $0x40,%edx
cmovne %eax,%edx
add    %edx,%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0xc(%edi),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   804a9d0 <realloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
je     806ac92 <fchmod@plt+0x1fb52>
add    %edx,0x14(%edi)
mov    0x10(%edi),%edx
mov    %eax,0xc(%edi)
not    %ebp
cmp    %edx,%ebp
jae    806ac58 <fchmod@plt+0x1fb18>
mov    0xc(%edi),%eax
lea    0x0(,%ebp,4),%ecx
mov    %ecx,0xc(%esp)
mov    (%eax,%ebp,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806aaa0 <fchmod@plt+0x1f960>
mov    0xc(%esp),%ecx
mov    0x10(%edi),%eax
mov    0xc(%edi),%edx
mov    %ecx,0xc(%esp)
sub    %ebp,%eax
shl    $0x2,%eax
mov    %eax,0x8(%esp)
lea    (%edx,%ecx,1),%eax
mov    %eax,0x4(%esp)
lea    0x4(%edx,%ebp,4),%eax
mov    %eax,(%esp)
call   804a680 <memmove@plt>
mov    0xc(%edi),%eax
mov    0xc(%esp),%ecx
mov    %esi,(%eax,%ecx,1)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806aa80 <fchmod@plt+0x1f940>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806aa80 <fchmod@plt+0x1f940>
lea    0x0(,%ebp,4),%ecx
jmp    806ac00 <fchmod@plt+0x1fac0>
lea    0x0(%esi),%esi
movl   $0x0,0x10(%esi)
mov    %esi,%eax
jmp    806ac36 <fchmod@plt+0x1faf6>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    806ac36 <fchmod@plt+0x1faf6>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x10(%esi),%eax
jmp    806ac7e <fchmod@plt+0x1fb3e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17ff4,%ebx
mov    0x8(%esi),%edi
mov    0xc(%edi),%ebp
test   %ebp,%ebp
je     806ad1a <fchmod@plt+0x1fbda>
mov    0x10(%edi),%ecx
mov    0xc(%esi),%eax
mov    %ecx,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
mov    %ecx,0xc(%esp)
call   806a920 <fchmod@plt+0x1f7e0>
test   %eax,%eax
js     806ad1a <fchmod@plt+0x1fbda>
mov    0xc(%esp),%ecx
lea    0x4(,%eax,4),%edx
sub    %eax,%ecx
lea    -0x4(,%ecx,4),%eax
mov    %eax,0x8(%esp)
lea    0x0(%ebp,%edx,1),%eax
mov    %eax,0x4(%esp)
lea    -0x4(%ebp,%edx,1),%eax
mov    %eax,(%esp)
call   804a680 <memmove@plt>
subl   $0x1,0x10(%edi)
mov    %esi,(%esp)
call   806a9c0 <fchmod@plt+0x1f880>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17f5a,%ebx
mov    0x20(%esp),%esi
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   806a9b0 <fchmod@plt+0x1f870>
test   %eax,%eax
jne    806ad80 <fchmod@plt+0x1fc40>
mov    0x4(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     806ada8 <fchmod@plt+0x1fc68>
mov    0x8(%eax),%ecx
mov    (%eax),%edx
xor    %eax,%eax
add    $0x4,%ecx
cmp    %ecx,%edx
cmovne %edx,%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17ef5,%ebx
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804a690 <free@plt>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
movl   $0x0,0x14(%esi)
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
mov    %eax,(%esp)
mov    %eax,%edi
call   806ad90 <fchmod@plt+0x1fc50>
test   %edi,%edi
mov    %eax,%esi
jne    806ae04 <fchmod@plt+0x1fcc4>
jmp    806ae18 <fchmod@plt+0x1fcd8>
nop
mov    %esi,%edi
mov    %eax,%esi
mov    %edi,(%esp)
call   806acb0 <fchmod@plt+0x1fb70>
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %esi,%esi
jne    806ae00 <fchmod@plt+0x1fcc0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     806ae60 <fchmod@plt+0x1fd20>
mov    0x8(%eax),%edx
xor    %esi,%esi
cmpb   $0x0,0x18(%edx)
je     806ae53 <fchmod@plt+0x1fd13>
mov    0xc(%edx),%edi
mov    0x24(%esp),%eax
mov    0x10(%edx),%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   806a920 <fchmod@plt+0x1f7e0>
test   %eax,%eax
js     806ae53 <fchmod@plt+0x1fd13>
mov    (%edi,%eax,4),%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    806ae53 <fchmod@plt+0x1fd13>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     806ae80 <fchmod@plt+0x1fd40>
mov    0xc(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     806aea0 <fchmod@plt+0x1fd60>
mov    0x10(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     806aebc <fchmod@plt+0x1fd7c>
mov    0x14(%eax),%eax
ret
mov    $0xffffffea,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     806aedf <fchmod@plt+0x1fd9f>
mov    0x8(%esp),%edx
mov    %edx,0x14(%eax)
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17db4,%ebx
mov    0x44(%esp),%eax
test   %ebp,%ebp
je     806b068 <fchmod@plt+0x1ff28>
test   %eax,%eax
je     806b078 <fchmod@plt+0x1ff38>
mov    $0x5,%ecx
mov    %eax,%esi
lea    -0x12429(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806afd8 <fchmod@plt+0x1fe98>
mov    $0x2,%edi
movl   $0x1cc,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806b068 <fchmod@plt+0x1ff28>
movl   $0x1,0x4(%eax)
lea    0x190(%eax),%eax
mov    %ebp,-0x190(%eax)
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    0x1ac(%esi),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
js     806aff8 <fchmod@plt+0x1feb8>
mov    0x48(%esp),%eax
movb   $0x1,0x1c8(%esi)
mov    %eax,0x8(%esi)
mov    $0x10,%eax
mov    $0x10,%edx
mov    %ax,0xc(%esi)
mov    %esi,%eax
mov    %edi,0x14(%esi)
mov    %dx,0x10c(%esi)
movl   $0x2,0x114(%esi)
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x7,%ecx
mov    %eax,%esi
lea    -0x12e44(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806b068 <fchmod@plt+0x1ff28>
mov    $0x1,%edi
jmp    806af34 <fchmod@plt+0x1fdf4>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xf,0x8(%esp)
movl   $0x80803,0x4(%esp)
movl   $0x10,(%esp)
call   804af40 <socket@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x8(%esi)
jne    806afa9 <fchmod@plt+0x1fe69>
mov    %ebp,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806b05f <fchmod@plt+0x1ff1f>
lea    -0xfebf(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb214(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb384(%ebx),%eax
movl   $0x84,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   806da60 <fchmod@plt+0x22920>
mov    %esi,(%esp)
call   804a690 <free@plt>
nop
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
jmp    806af34 <fchmod@plt+0x1fdf4>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17c27,%ebx
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806aef0 <fchmod@plt+0x1fdb0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x103c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17bf5,%ebx
mov    0x1050(%esp),%eax
add    $0x190,%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    0x1050(%esp),%eax
lea    0x1ac(%eax),%ebp
je     806b438 <fchmod@plt+0x202f8>
lea    0x30(%esp),%esi
xor    %eax,%eax
mov    $0x400,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    $0x20,%ecx
mov    $0x6,%eax
mov    $0x15,%edi
mov    %ebp,(%esp)
mov    %cx,0x30(%esp)
movl   $0x8,0x34(%esp)
mov    %di,0x38(%esp)
movb   $0x1,0x3a(%esp)
movl   $0xfeedcafe,0x3c(%esp)
mov    %ax,0x40(%esp)
movl   $0xffffffff,0x44(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b418 <fchmod@plt+0x202d8>
mov    %ebp,(%esp)
xor    %edi,%edi
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b16f <fchmod@plt+0x2002f>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
add    $0x1,%edi
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
jne    806b160 <fchmod@plt+0x20020>
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b44c <fchmod@plt+0x2030c>
lea    -0x3(%edi,%edi,2),%edi
mov    %esi,%ebp
mov    %esi,0x18(%esp)
lea    0x1(%edi,%edi,1),%edi
mov    %eax,%esi
movl   $0x3,0x14(%esp)
nop
mov    %esi,(%esp)
add    $0x30,%ebp
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,(%esp)
call   806d820 <fchmod@plt+0x226e0>
mov    $0x20,%ecx
mov    %cx,-0x18(%ebp)
mov    $0x54,%ecx
mov    %cx,-0x10(%ebp)
mov    $0x15,%ecx
mov    %cx,-0x8(%ebp)
mov    $0x54,%ecx
movl   $0x20,-0x14(%ebp)
movb   $0x0,-0x6(%ebp)
mov    %edx,-0xc(%ebp)
mov    %edx,-0x4(%ebp)
mov    $0x20,%edx
mov    %dx,0x0(%ebp)
mov    $0x15,%edx
mov    %dx,0x10(%ebp)
mov    %edi,%edx
sub    $0x6,%edi
movb   $0x3,-0x5(%ebp)
movl   $0x24,0x4(%ebp)
mov    %cx,0x8(%ebp)
mov    %eax,0xc(%ebp)
mov    %dl,0x12(%ebp)
movb   $0x0,0x13(%ebp)
mov    %eax,0x14(%ebp)
mov    %esi,(%esp)
addl   $0x6,0x14(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
jne    806b198 <fchmod@plt+0x20058>
mov    0x14(%esp),%edx
mov    0x18(%esp),%esi
mov    %edx,%eax
shl    $0x3,%eax
lea    0x8(%eax),%ecx
mov    %ecx,0x18(%esp)
lea    0x1(%edx),%ecx
lea    0x2(%edx),%edi
mov    %ecx,0x14(%esp)
add    %esi,%eax
mov    $0x6,%ebp
mov    %bp,(%eax)
movl   $0x0,0x4(%eax)
mov    0x1c(%esp),%ebp
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b3a0 <fchmod@plt+0x20260>
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b37d <fchmod@plt+0x2023d>
mov    %eax,%edi
jmp    806b302 <fchmod@plt+0x201c2>
mov    0x18(%esp),%ecx
movb   $0x3,0x3(%eax)
mov    %ecx,0x4(%eax)
lea    0x10(%esi,%ebp,1),%eax
mov    $0x20,%ecx
mov    %cx,(%eax)
movl   $0x1c,0x4(%eax)
mov    %edi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %eax,(%esp)
call   806d760 <fchmod@plt+0x22620>
lea    0x18(%esi,%ebp,1),%ecx
mov    $0x15,%ebp
mov    %bp,(%ecx)
mov    0x14(%esp),%ebp
movb   $0x0,0x2(%ecx)
movb   $0x1,0x3(%ecx)
add    $0x4,%ebp
mov    %eax,0x4(%ecx)
lea    (%esi,%ebp,8),%eax
mov    $0x6,%edx
mov    %dx,(%eax)
movl   $0xffffffff,0x4(%eax)
lea    0x1(%ebp),%eax
add    $0x2,%ebp
cmp    $0x1ff,%ebp
mov    %eax,0x14(%esp)
ja     806b408 <fchmod@plt+0x202c8>
mov    %edi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%edi
je     806b370 <fchmod@plt+0x20230>
mov    %edi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %eax,(%esp)
call   806d760 <fchmod@plt+0x22620>
mov    $0x20,%edx
mov    %eax,0x18(%esp)
mov    0x14(%esp),%eax
lea    0x0(,%eax,8),%ebp
lea    (%esi,%ebp,1),%eax
mov    %dx,(%eax)
movl   $0x18,0x4(%eax)
mov    %edi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    $0x15,%ecx
test   %eax,%eax
lea    0x8(%esi,%ebp,1),%eax
mov    %cx,(%eax)
movb   $0x0,0x2(%eax)
jne    806b280 <fchmod@plt+0x20140>
mov    0x18(%esp),%edx
mov    0x14(%esp),%ebp
movb   $0x1,0x3(%eax)
mov    %edx,0x4(%eax)
add    $0x2,%ebp
jmp    806b2cc <fchmod@plt+0x2018c>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
mov    %ebp,%edi
shl    $0x3,%eax
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    $0x6,%ecx
add    %esi,%eax
mov    %cx,(%eax)
movl   $0x0,0x4(%eax)
lea    0x0(,%edi,8),%eax
add    $0x1,%edi
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    $0x6,%edx
movl   $0x0,0x28(%esp)
mov    %esi,0x2c(%esp)
mov    %di,0x28(%esp)
add    %esi,%eax
mov    %dx,(%eax)
movl   $0xffffffff,0x4(%eax)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x1050(%esp),%eax
movl   $0x8,0x10(%esp)
movl   $0x1a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   804a4d0 <setsockopt@plt>
add    $0x103c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x103c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%edi
movl   $0x18,0x18(%esp)
movl   $0x3,0x14(%esp)
jmp    806b255 <fchmod@plt+0x20115>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
jne    806b0f2 <fchmod@plt+0x1ffb2>
xor    %eax,%eax
jmp    806b3f8 <fchmod@plt+0x202b8>
mov    $0x5,%edi
mov    $0x18,%eax
movl   $0x20,0x18(%esp)
movl   $0x4,0x14(%esp)
jmp    806b244 <fchmod@plt+0x20104>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0xb0,%esp
mov    0xc0(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1782f,%ebx
mov    %gs:0x14,%eax
mov    %eax,0xac(%esp)
xor    %eax,%eax
movl   $0x1,0x24(%esp)
cmpw   $0x0,0xc(%esi)
je     806b5c8 <fchmod@plt+0x20488>
mov    %esi,(%esp)
call   806b0b0 <fchmod@plt+0x1ff70>
cmpb   $0x0,0x1c8(%esi)
je     806b538 <fchmod@plt+0x203f8>
lea    0x2c(%esp),%eax
lea    0x28(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
movl   $0xc,0x28(%esp)
mov    %eax,(%esp)
call   804aed0 <getsockname@plt>
test   %eax,%eax
jne    806b4ec <fchmod@plt+0x203ac>
mov    0x30(%esp),%eax
mov    %eax,0x10(%esi)
lea    0x24(%esp),%eax
movl   $0x4,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804a4d0 <setsockopt@plt>
xor    %eax,%eax
mov    0xac(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806b5d2 <fchmod@plt+0x20492>
add    $0xb0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0xc(%esi),%eax
movl   $0xc,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804ac10 <bind@plt>
test   %eax,%eax
mov    %eax,%edi
je     806b5b8 <fchmod@plt+0x20478>
jns    806b4be <fchmod@plt+0x2037e>
mov    (%esi),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
mov    %eax,%edx
mov    %edi,%eax
cmp    $0x2,%edx
jle    806b519 <fchmod@plt+0x203d9>
lea    -0xfefb(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0xb240(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0xb384(%ebx),%edx
movl   $0x18d,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    (%esi),%edx
mov    %edi,0x1c(%esp)
mov    %edx,(%esp)
call   806da60 <fchmod@plt+0x22920>
mov    0x1c(%esp),%eax
jmp    806b519 <fchmod@plt+0x203d9>
xchg   %ax,%ax
movb   $0x1,0x1c8(%esi)
jmp    806b4be <fchmod@plt+0x2037e>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    806b519 <fchmod@plt+0x203d9>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x176c7,%ebx
test   %eax,%eax
je     806b628 <fchmod@plt+0x204e8>
lea    0x34(%esp),%edx
movl   $0x4,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x21,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   804a4d0 <setsockopt@plt>
add    $0x28,%esp
pop    %ebx
ret
nop
mov    $0xffffffff,%eax
jmp    806b622 <fchmod@plt+0x204e2>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x17676,%ebx
test   %esi,%esi
je     806b698 <fchmod@plt+0x20558>
mov    0x4(%esi),%eax
lea    -0x1(%eax),%edx
mov    %esi,%eax
test   %edx,%edx
mov    %edx,0x4(%esi)
jle    806b660 <fchmod@plt+0x20520>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
js     806b66f <fchmod@plt+0x2052f>
mov    %eax,(%esp)
call   804b0a0 <close@plt>
lea    0x190(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x1ac(%esi),%eax
mov    %eax,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    806b657 <fchmod@plt+0x20517>
nop
xor    %eax,%eax
jmp    806b657 <fchmod@plt+0x20517>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     806b6ac <fchmod@plt+0x2056c>
mov    0x8(%eax),%eax
ret
mov    $0xffffffff,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x211c,%esp
mov    0x2130(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x175de,%ebx
mov    %gs:0x14,%edx
mov    %edx,0x210c(%esp)
xor    %edx,%edx
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     806ba29 <fchmod@plt+0x208e9>
lea    0x10c(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x3c(%esp)
lea    -0xb3ac(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0x24(%esp),%eax
movl   $0x2000,0x4c(%esp)
mov    %eax,0x48(%esp)
xor    %eax,%eax
mov    0x30(%esp),%ecx
movl   $0x0,(%ecx,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     806b737 <fchmod@plt+0x205f7>
mov    0x38(%esp),%eax
movl   $0x1,0x64(%esp)
movl   $0x18,0x6c(%esp)
mov    %eax,0x60(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x68(%esp)
mov    0x2c(%esp),%eax
cmpw   $0x0,0xc(%eax)
jne    806b9cf <fchmod@plt+0x2088f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   804aec0 <recvmsg@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
js     806bbc3 <fchmod@plt+0x20a83>
mov    0x28(%esp),%eax
sub    $0x20,%eax
cmp    $0x1fdf,%eax
mov    0x2c(%esp),%eax
ja     806bb92 <fchmod@plt+0x20a52>
cmpw   $0x0,0xc(%eax)
je     806b7f6 <fchmod@plt+0x206b6>
mov    0x94(%esp),%eax
test   %eax,%eax
jne    806bad8 <fchmod@plt+0x20998>
mov    0x2c(%esp),%eax
mov    0x90(%eax),%eax
test   %eax,%eax
je     806bd00 <fchmod@plt+0x20bc0>
cmp    0x90(%esp),%eax
jne    806bd00 <fchmod@plt+0x20bc0>
cmpl   $0xb,0x6c(%esp)
jbe    806bb38 <fchmod@plt+0x209f8>
mov    0x68(%esp),%esi
test   %esi,%esi
je     806bb38 <fchmod@plt+0x209f8>
cmpl   $0x2,0x8(%esi)
jne    806bb38 <fchmod@plt+0x209f8>
mov    0x10(%esi),%edx
test   %edx,%edx
jne    806bc09 <fchmod@plt+0x20ac9>
mov    0x34(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a770 <memcmp@plt>
test   %eax,%eax
jne    806ba30 <fchmod@plt+0x208f0>
cmpl   $0xfecaedfe,0x114(%esp)
fe
jne    806bd38 <fchmod@plt+0x20bf8>
mov    0x11c(%esp),%esi
lea    0x20(%esi),%eax
cmp    %eax,0x28(%esp)
jb     806ba29 <fchmod@plt+0x208e9>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   80668c0 <fchmod@plt+0x1b780>
test   %eax,%eax
mov    %eax,%edi
je     806ba29 <fchmod@plt+0x208e9>
mov    %eax,(%esp)
call   80652b0 <fchmod@plt+0x1a170>
cmp    0x28(%esp),%esi
jl     806b8ae <fchmod@plt+0x2076e>
jmp    806b8c1 <fchmod@plt+0x20781>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
lea    0x1(%esi,%eax,1),%esi
mov    %edi,(%esp)
call   8067e20 <fchmod@plt+0x1cce0>
cmp    %esi,0x28(%esp)
jle    806b8c1 <fchmod@plt+0x20781>
mov    0x24(%esp),%eax
lea    (%eax,%esi,1),%ebp
mov    %ebp,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
jne    806b898 <fchmod@plt+0x20758>
mov    %edi,(%esp)
call   8066730 <fchmod@plt+0x1b5f0>
test   %eax,%eax
js     806bc6a <fchmod@plt+0x20b2a>
mov    0x2c(%esp),%eax
lea    0x190(%eax),%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b95e <fchmod@plt+0x2081e>
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    806b912 <fchmod@plt+0x207d2>
jmp    806b9e8 <fchmod@plt+0x208a8>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     806b9e8 <fchmod@plt+0x208a8>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,(%esp)
mov    %eax,%ebp
call   8066410 <fchmod@plt+0x1b2d0>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    806b900 <fchmod@plt+0x207c0>
mov    %esi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
test   %eax,%eax
mov    %eax,%ebp
je     806b95e <fchmod@plt+0x2081e>
mov    %edi,(%esp)
call   8067be0 <fchmod@plt+0x1caa0>
test   %eax,%eax
je     806b900 <fchmod@plt+0x207c0>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a550 <strcmp@plt>
test   %eax,%eax
jne    806b900 <fchmod@plt+0x207c0>
mov    0x2c(%esp),%eax
lea    0x1ac(%eax),%esi
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
je     806b9ae <fchmod@plt+0x2086e>
mov    %esi,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    806b996 <fchmod@plt+0x20856>
jmp    806b9e8 <fchmod@plt+0x208a8>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     806b9e8 <fchmod@plt+0x208a8>
mov    %esi,(%esp)
call   806ae70 <fchmod@plt+0x1fd30>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8068630 <fchmod@plt+0x1d4f0>
test   %eax,%eax
je     806b988 <fchmod@plt+0x20848>
mov    %edi,%eax
mov    0x210c(%esp),%edx
xor    %gs:0x14,%edx
jne    806bda5 <fchmod@plt+0x20c65>
add    $0x211c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x8c(%esp),%eax
mov    %eax,0x58(%esp)
movl   $0x80,0x5c(%esp)
jmp    806b780 <fchmod@plt+0x20640>
nop
mov    %edi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
mov    0x2c(%esp),%eax
mov    0x8(%eax),%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x50(%esp)
mov    $0x1,%eax
mov    %ax,0x54(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a8f0 <poll@plt>
test   %eax,%eax
jg     806b725 <fchmod@plt+0x205e5>
xor    %eax,%eax
jmp    806b9b0 <fchmod@plt+0x20870>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     806ba34 <fchmod@plt+0x208f4>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    0x24(%esp),%edx
add    $0x1,%edx
cmp    0x28(%esp),%edx
mov    %edx,%esi
jge    806bcc8 <fchmod@plt+0x20b88>
cmp    $0x4,%edx
jbe    806bcc8 <fchmod@plt+0x20b88>
lea    -0xb3a4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a520 <strstr@plt>
test   %eax,%eax
jne    806b86b <fchmod@plt+0x2072b>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb3a1(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x28c,0xc(%esp)
jmp    806bb6b <fchmod@plt+0x20a2b>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
jne    806b7f6 <fchmod@plt+0x206b6>
mov    0x90(%esp),%ecx
test   %ecx,%ecx
je     806b7f6 <fchmod@plt+0x206b6>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
mov    0x90(%esp),%eax
movl   $0x265,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb33c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    806bc43 <fchmod@plt+0x20b03>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb304(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x26d,0xc(%esp)
lea    -0xb384(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x7,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
xor    %eax,%eax
jmp    806b9b0 <fchmod@plt+0x20870>
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb3c4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x256,0xc(%esp)
jmp    806bb6b <fchmod@plt+0x20a2b>
call   804acd0 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     806ba29 <fchmod@plt+0x208e9>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb3df(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x251,0xc(%esp)
jmp    806bb6b <fchmod@plt+0x20a2b>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
mov    0x10(%esi),%eax
movl   $0x273,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb2d0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb384(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x7,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
xor    %eax,%eax
jmp    806b9b0 <fchmod@plt+0x20870>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806bcb9 <fchmod@plt+0x20b79>
lea    -0xb620(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb384(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x2a3,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
mov    %edi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
xor    %eax,%eax
jmp    806b9b0 <fchmod@plt+0x20870>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb3c4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x286,0xc(%esp)
jmp    806bb6b <fchmod@plt+0x20a2b>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ba29 <fchmod@plt+0x208e9>
lea    -0xb360(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x25f,0xc(%esp)
jmp    806bb6b <fchmod@plt+0x20a2b>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806ba29 <fchmod@plt+0x208e9>
mov    0x114(%esp),%eax
movl   $0xfecaedfe,0x1c(%esp)
movl   $0x27c,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0xb2b0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb25c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb384(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
xor    %eax,%eax
jmp    806b9b0 <fchmod@plt+0x20870>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16ef7,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
je     806bdf8 <fchmod@plt+0x20cb8>
test   %edx,%edx
je     806bdf8 <fchmod@plt+0x20cb8>
mov    0x28(%esp),%ecx
add    $0x190,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    806bdf0 <fchmod@plt+0x20cb0>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16ea7,%ebx
mov    0x24(%esp),%edx
test   %eax,%eax
je     806be48 <fchmod@plt+0x20d08>
test   %edx,%edx
je     806be48 <fchmod@plt+0x20d08>
add    $0x1ac,%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff4,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    806be40 <fchmod@plt+0x20d00>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16e55,%ebx
test   %edi,%edi
je     806beb0 <fchmod@plt+0x20d70>
movl   $0x24,0x4(%esp)
movl   $0x1,(%esp)
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806beb0 <fchmod@plt+0x20d70>
movl   $0x1,0x4(%eax)
lea    0x8(%eax),%eax
mov    %edi,-0x8(%eax)
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806bea6 <fchmod@plt+0x20d66>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16de6,%ebx
test   %esi,%esi
je     806bef0 <fchmod@plt+0x20db0>
mov    0x4(%esi),%eax
lea    -0x1(%eax),%edx
test   %edx,%edx
mov    %edx,0x4(%esi)
jle    806bef8 <fchmod@plt+0x20db8>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806bee7 <fchmod@plt+0x20da7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(%esi),%edx
mov    %edx,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    806bee7 <fchmod@plt+0x20da7>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16d9b,%ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
movl   $0x80000,0x4(%esp)
lea    -0xb1f3(%ebx),%eax
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     806bf71 <fchmod@plt+0x20e31>
lea    0x1c(%esp),%edi
movl   $0x20,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a5a0 <read@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
call   804b0a0 <close@plt>
cmp    $0x2,%ebp
jg     806bf90 <fchmod@plt+0x20e50>
xor    %eax,%eax
xor    %edx,%edx
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806bfaf <fchmod@plt+0x20e6f>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1b(%esp,%ebp,1)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804ad10 <strtoull@plt>
jmp    806bf75 <fchmod@plt+0x20e35>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    $0xffffffea,%eax
sub    $0x18,%esp
mov    $0xffffffff,%edx
mov    0x20(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16cdd,%ebx
test   %ecx,%ecx
je     806bfeb <fchmod@plt+0x20eab>
mov    (%ecx),%eax
mov    %eax,(%esp)
call   806bf10 <fchmod@plt+0x20dd0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16cb7,%ebx
movl   $0x1,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804a970 <fread@plt>
cmp    $0x1,%eax
setne  %al
add    $0x18,%esp
movzbl %al,%eax
neg    %eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16c67,%ebx
sub    $0x2c,%esp
lea    -0xd449(%ebx),%eax
lea    -0x13cc1(%ebx),%ecx
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     806c090 <fchmod@plt+0x20f50>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   806bff0 <fchmod@plt+0x20eb0>
test   %eax,%eax
js     806c098 <fchmod@plt+0x20f58>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    806c086 <fchmod@plt+0x20f46>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jg     806c0b3 <fchmod@plt+0x20f73>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
xor    %eax,%eax
jmp    806c086 <fchmod@plt+0x20f46>
lea    -0xb1d9(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb1a5(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb1c4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0xe4,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    806c0a7 <fchmod@plt+0x20f67>
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16bba,%ebx
sub    $0x20,%esp
mov    0x8(%ebp),%esi
mov    %gs:0x14,%eax
mov    %eax,-0xc(%ebp)
xor    %eax,%eax
lea    -0xe(%ebp),%eax
movl   $0x1,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   804a970 <fread@plt>
cmp    $0x1,%eax
jne    806c180 <fchmod@plt+0x21040>
movzwl -0xe(%ebp),%edx
lea    0x1e(%edx),%eax
and    $0x1fff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a970 <fread@plt>
movzwl -0xe(%ebp),%edx
cmp    %eax,%edx
jne    806c180 <fchmod@plt+0x21040>
mov    %edx,%eax
mov    -0xc(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    806c187 <fchmod@plt+0x21047>
lea    -0x8(%ebp),%esp
pop    %ebx
pop    %esi
pop    %ebp
ret
nop
mov    $0xffffffff,%eax
jmp    806c16c <fchmod@plt+0x2102c>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16b19,%ebx
sub    $0x3c,%esp
mov    0x8(%ebp),%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x1e(%ebp),%eax
mov    0xc(%ebp),%edi
movl   $0x1,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   804a970 <fread@plt>
cmp    $0x1,%eax
jne    806c270 <fchmod@plt+0x21130>
mov    0x10(%ebp),%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
lea    -0x1(%eax),%edx
movzwl -0x1e(%ebp),%eax
cmp    %eax,%edx
cmova  %eax,%edx
mov    %edx,0x8(%esp)
mov    %edx,-0x2c(%ebp)
call   804a970 <fread@plt>
mov    -0x2c(%ebp),%edx
cmp    %eax,%edx
jne    806c270 <fchmod@plt+0x21130>
movzwl -0x1e(%ebp),%eax
movb   $0x0,(%edi,%edx,1)
cmp    %ax,%dx
je     806c253 <fchmod@plt+0x21113>
sub    %edx,%eax
movzwl %ax,%edi
lea    0x1e(%edi),%eax
and    $0x1fff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   804a970 <fread@plt>
mov    -0x2c(%ebp),%edx
cmp    %eax,%edi
jne    806c270 <fchmod@plt+0x21130>
mov    %edx,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    806c277 <fchmod@plt+0x21137>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    806c255 <fchmod@plt+0x21115>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16a24,%ebx
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
test   %eax,%eax
je     806c367 <fchmod@plt+0x21227>
mov    0x40(%esp),%eax
lea    0x10(%esp),%edx
call   806c040 <fchmod@plt+0x20f00>
test   %eax,%eax
mov    %eax,%esi
je     806c350 <fchmod@plt+0x21210>
xor    %edi,%edi
lea    0x18(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   806bff0 <fchmod@plt+0x20eb0>
test   %eax,%eax
js     806c30c <fchmod@plt+0x211cc>
mov    %esi,(%esp)
call   806c0f0 <fchmod@plt+0x20fb0>
test   %eax,%eax
js     806c30c <fchmod@plt+0x211cc>
je     806c328 <fchmod@plt+0x211e8>
mov    0x18(%esp),%eax
add    $0x1,%edi
mov    0x1c(%esp),%edx
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   806bff0 <fchmod@plt+0x20eb0>
test   %eax,%eax
jns    806c2db <fchmod@plt+0x2119b>
xor    %ebp,%ebp
test   %edi,%edi
jle    806c330 <fchmod@plt+0x211f0>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edi
jmp    806c2cb <fchmod@plt+0x2118b>
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    $0x1,%bp
mov    %eax,(%esp)
call   806bfc0 <fchmod@plt+0x20e80>
cmp    0x14(%esp),%edx
jb     806c312 <fchmod@plt+0x211d2>
jbe    806c35d <fchmod@plt+0x2121d>
xor    %ebp,%ebp
jmp    806c312 <fchmod@plt+0x211d2>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    0x10(%esp),%eax
jbe    806c312 <fchmod@plt+0x211d2>
xor    %ebp,%ebp
jmp    806c312 <fchmod@plt+0x211d2>
mov    $0xffffffea,%eax
jmp    806c31c <fchmod@plt+0x211dc>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x5c(%esp),%edx
mov    0x60(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1692c,%ebx
mov    0x54(%esp),%edi
test   %eax,%eax
mov    0x58(%esp),%ebp
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
je     806c515 <fchmod@plt+0x213d5>
lea    0x28(%esp),%ecx
mov    %ecx,%edx
mov    %ecx,0x14(%esp)
call   806c040 <fchmod@plt+0x20f00>
test   %eax,%eax
mov    %eax,%esi
je     806c508 <fchmod@plt+0x213c8>
mov    0x2c(%esp),%eax
mov    0x28(%esp),%edx
mov    %edi,0x8(%esp)
mov    %ebp,0xc(%esp)
cmp    %eax,%ebp
ja     806c3db <fchmod@plt+0x2129b>
jb     806c438 <fchmod@plt+0x212f8>
cmp    %edx,0x8(%esp)
jb     806c438 <fchmod@plt+0x212f8>
mov    0xc(%esp),%eax
cmp    %eax,0x1c(%esp)
ja     806c40a <fchmod@plt+0x212ca>
jae    806c400 <fchmod@plt+0x212c0>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806c3e7 <fchmod@plt+0x212a7>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
sub    0x8(%esp),%eax
sbb    0xc(%esp),%edx
cmp    $0x0,%edx
ja     806c426 <fchmod@plt+0x212e6>
cmp    $0x7ffffffe,%eax
jbe    806c450 <fchmod@plt+0x21310>
mov    %esi,(%esp)
call   804a730 <fclose@plt>
mov    $0xffffffb5,%eax
jmp    806c3f4 <fchmod@plt+0x212b4>
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
mov    0xc(%esp),%eax
cmp    %eax,0x1c(%esp)
mov    %edx,0x8(%esp)
ja     806c40a <fchmod@plt+0x212ca>
jmp    806c3e5 <fchmod@plt+0x212a5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edi
sub    0x8(%esp),%edi
mov    %edi,0x10(%esp)
jmp    806c498 <fchmod@plt+0x21358>
xchg   %ax,%ax
test   %eax,%eax
jne    806c490 <fchmod@plt+0x21350>
cmp    0xc(%esp),%edx
jb     806c490 <fchmod@plt+0x21350>
ja     806c472 <fchmod@plt+0x21332>
cmp    0x8(%esp),%ecx
jb     806c490 <fchmod@plt+0x21350>
cmp    %edx,0x1c(%esp)
jb     806c490 <fchmod@plt+0x21350>
ja     806c488 <fchmod@plt+0x21348>
cmp    %ecx,0x18(%esp)
xchg   %ax,%ax
jb     806c490 <fchmod@plt+0x21350>
lea    0x0(%esi),%esi
subl   $0x1,0x10(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
test   %eax,%eax
jle    806c4e8 <fchmod@plt+0x213a8>
mov    0x14(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806bff0 <fchmod@plt+0x20eb0>
test   %eax,%eax
js     806c4e8 <fchmod@plt+0x213a8>
mov    %esi,(%esp)
call   806c0f0 <fchmod@plt+0x20fb0>
test   %eax,%eax
js     806c4e8 <fchmod@plt+0x213a8>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
mov    0xc(%esp),%ebp
mov    0x8(%esp),%edi
xor    %edx,%ebp
xor    %ecx,%edi
or     %ebp,%edi
jne    806c460 <fchmod@plt+0x21320>
test   %eax,%eax
je     806c488 <fchmod@plt+0x21348>
addl   $0x1,0x10(%esp)
mov    0x10(%esp),%eax
test   %eax,%eax
jg     806c498 <fchmod@plt+0x21358>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%edi
mov    %esi,(%esp)
call   804a730 <fclose@plt>
xor    %eax,%eax
test   %edi,%edi
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffea,%eax
jmp    806c3f4 <fchmod@plt+0x212b4>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x47c,%esp
mov    0x490(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1677e,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x46c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     806c6bc <fchmod@plt+0x2157c>
lea    0x8(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
lea    0x40(%esp),%eax
mov    %eax,0x28(%esp)
mov    %eax,%edx
mov    %esi,%eax
call   806c040 <fchmod@plt+0x20f00>
test   %eax,%eax
mov    %eax,%edi
je     806c6bc <fchmod@plt+0x2157c>
lea    -0xb502(%ebx),%eax
mov    %eax,0x2c(%esp)
nop
mov    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806bff0 <fchmod@plt+0x20eb0>
test   %eax,%eax
js     806c688 <fchmod@plt+0x21548>
mov    0x40(%esp),%eax
lea    0x4c(%esp),%ebp
mov    0x44(%esp),%edx
lea    0x6c(%esp),%esi
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0x13cfe(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,0x3c(%esp)
call   8063170 <fchmod@plt+0x18030>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   806c190 <fchmod@plt+0x21050>
test   %eax,%eax
js     806c688 <fchmod@plt+0x21548>
je     806c638 <fchmod@plt+0x214f8>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
jmp    806c588 <fchmod@plt+0x21448>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
test   %eax,%eax
mov    %eax,%esi
jne    806c65f <fchmod@plt+0x2151f>
jmp    806c588 <fchmod@plt+0x21448>
nop
call   806ad90 <fchmod@plt+0x1fc50>
test   %eax,%eax
mov    %eax,%esi
je     806c588 <fchmod@plt+0x21448>
mov    %esi,(%esp)
call   806ae90 <fchmod@plt+0x1fd50>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a550 <strcmp@plt>
mov    %esi,(%esp)
test   %eax,%eax
jne    806c650 <fchmod@plt+0x21510>
call   806acb0 <fchmod@plt+0x1fb70>
nop
jmp    806c588 <fchmod@plt+0x21448>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a730 <fclose@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
mov    0x46c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806c6c0 <fchmod@plt+0x21580>
add    $0x47c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    806c6a1 <fchmod@plt+0x21561>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    %eax,%edx
mov    $0x1,%eax
test   %dl,%dl
js     806c6e0 <fchmod@plt+0x215a0>
repz ret
lea    0x0(%esi),%esi
mov    %edx,%ecx
mov    $0x2,%eax
and    $0xffffffe0,%ecx
cmp    $0xc0,%cl
je     806c6db <fchmod@plt+0x2159b>
mov    %edx,%ecx
mov    $0x3,%al
and    $0xfffffff0,%ecx
cmp    $0xe0,%cl
je     806c6db <fchmod@plt+0x2159b>
mov    %edx,%ecx
mov    $0x4,%al
and    $0xfffffff8,%ecx
cmp    $0xf0,%cl
je     806c6db <fchmod@plt+0x2159b>
mov    %edx,%ecx
mov    $0x5,%al
and    $0xfffffffc,%ecx
cmp    $0xf8,%cl
je     806c6db <fchmod@plt+0x2159b>
and    $0xfffffffe,%edx
mov    $0x6,%al
cmp    $0xfc,%dl
mov    $0x0,%edx
cmovne %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
movzbl (%eax),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16576,%ebx
mov    %esi,%eax
call   806c6d0 <fchmod@plt+0x21590>
test   %eax,%eax
mov    %eax,%ebp
je     806c790 <fchmod@plt+0x21650>
cmp    $0x1,%eax
je     806c878 <fchmod@plt+0x21738>
test   %eax,%eax
jle    806c77d <fchmod@plt+0x2163d>
mov    %esi,%eax
test   %al,%al
jns    806c790 <fchmod@plt+0x21650>
lea    0x1(%edi),%edx
lea    (%edi,%ebp,1),%ecx
jmp    806c779 <fchmod@plt+0x21639>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmpb   $0x0,-0x1(%edx)
jns    806c790 <fchmod@plt+0x21650>
cmp    %ecx,%edx
jne    806c770 <fchmod@plt+0x21630>
cmp    $0x6,%ebp
ja     806c790 <fchmod@plt+0x21650>
mov    -0xb194(%ebx,%ebp,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%edx
and    $0x3,%edx
movzbl 0x1(%edi),%esi
mov    %esi,%eax
and    $0xc0,%eax
add    $0xffffff80,%eax
jne    806c790 <fchmod@plt+0x21650>
mov    $0x1,%ecx
jmp    806c7c8 <fchmod@plt+0x21688>
xchg   %ax,%ax
movzbl (%edi,%ecx,1),%esi
mov    %esi,%eax
and    $0xc0,%eax
add    $0xffffff80,%eax
jne    806c790 <fchmod@plt+0x21650>
mov    %edx,%eax
mov    %esi,%edx
shl    $0x6,%eax
and    $0x3f,%edx
add    $0x1,%ecx
or     %eax,%edx
cmp    %ecx,%ebp
jg     806c7b8 <fchmod@plt+0x21678>
cmp    $0x7f,%edx
jle    806c790 <fchmod@plt+0x21650>
cmp    $0x7ff,%edx
mov    $0x2,%eax
jle    806c808 <fchmod@plt+0x216c8>
cmp    $0xffff,%edx
mov    $0x3,%al
jle    806c808 <fchmod@plt+0x216c8>
cmp    $0x1fffff,%edx
mov    $0x4,%al
jg     806c882 <fchmod@plt+0x21742>
lea    0x0(%esi),%esi
cmp    %eax,%ebp
mov    $0xffffffff,%eax
jne    806c795 <fchmod@plt+0x21655>
cmp    $0x10ffff,%edx
jg     806c795 <fchmod@plt+0x21655>
mov    %edx,%ecx
and    $0xfffff800,%ecx
cmp    $0xd800,%ecx
je     806c795 <fchmod@plt+0x21655>
lea    -0xfdd0(%edx),%ecx
cmp    $0x1f,%ecx
jbe    806c795 <fchmod@plt+0x21655>
cmp    $0xffff,%dx
cmovne %ebp,%eax
jmp    806c795 <fchmod@plt+0x21655>
mov    %esi,%edx
and    $0x7,%edx
jmp    806c79f <fchmod@plt+0x2165f>
mov    %esi,%edx
and    $0xf,%edx
jmp    806c79f <fchmod@plt+0x2165f>
mov    %esi,%edx
and    $0x1f,%edx
jmp    806c79f <fchmod@plt+0x2165f>
mov    %esi,%edx
and    $0x1,%edx
jmp    806c79f <fchmod@plt+0x2165f>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
cmp    $0x3ffffff,%edx
setg   %al
add    $0x5,%eax
jmp    806c808 <fchmod@plt+0x216c8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    %eax,%ecx
push   %esi
and    $0xffffffdf,%ecx
push   %ebx
sub    $0x41,%ecx
sub    $0x14,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16402,%ebx
cmp    $0x19,%cl
mov    %edx,0xc(%esp)
jbe    806c8f8 <fchmod@plt+0x217b8>
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    806c8f8 <fchmod@plt+0x217b8>
movsbl %al,%esi
lea    -0xb178(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
mov    0xc(%esp),%edx
mov    %eax,%ecx
mov    $0x1,%eax
test   %ecx,%ecx
je     806c908 <fchmod@plt+0x217c8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
je     806c922 <fchmod@plt+0x217e2>
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    806c8ed <fchmod@plt+0x217ad>
xor    %eax,%eax
jmp    806c8ed <fchmod@plt+0x217ad>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x42c,%esp
mov    0x444(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1636e,%ebx
mov    %gs:0x14,%ecx
mov    %ecx,0x41c(%esp)
xor    %ecx,%ecx
cmpb   $0x2f,(%eax)
je     806c9eb <fchmod@plt+0x218ab>
lea    0x1c(%esp),%edi
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ae40 <strrchr@plt>
cmp    %edi,%eax
mov    %eax,%esi
je     806ca10 <fchmod@plt+0x218d0>
test   %eax,%eax
je     806ca10 <fchmod@plt+0x218d0>
xor    %ebp,%ebp
jmp    806c9b2 <fchmod@plt+0x21872>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     806c9cb <fchmod@plt+0x2188b>
mov    %edi,(%esp)
call   804a740 <rmdir@plt>
test   %eax,%eax
mov    %eax,%ebp
js     806c9f8 <fchmod@plt+0x218b8>
movb   $0x0,(%esi)
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804ae40 <strrchr@plt>
cmp    %edi,%eax
mov    %eax,%esi
jne    806c9a0 <fchmod@plt+0x21860>
mov    %ebp,%eax
mov    0x41c(%esp),%edx
xor    %gs:0x14,%edx
jne    806ca14 <fchmod@plt+0x218d4>
add    $0x42c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%eax
cmpb   $0x2f,0x1(%eax)
je     806c9e8 <fchmod@plt+0x218a8>
jmp    806c965 <fchmod@plt+0x21825>
xchg   %ax,%ax
call   804acd0 <__errno_location@plt>
mov    %eax,%edx
xor    %eax,%eax
cmpl   $0x2,(%edx)
cmovne %ebp,%eax
jmp    806c9cd <fchmod@plt+0x2188d>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    806c9cd <fchmod@plt+0x2188d>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x16289,%ebx
sub    $0x6c,%esp
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%esi
movl   $0x46,(%esp)
mov    %eax,-0x54(%ebp)
mov    %esi,-0x4c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0xc0d6(%ebx),%edi
call   804a7d0 <sysconf@plt>
mov    $0x5,%ecx
mov    %eax,-0x50(%ebp)
add    $0x1e,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x2b(%esp),%edx
and    $0xfffffff0,%edx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806ca98 <fchmod@plt+0x21958>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    806cb9e <fchmod@plt+0x21a5e>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x40(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4c(%ebp),%eax
movl   $0xa,0x8(%esp)
mov    %edx,-0x58(%ebp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    -0x40(%ebp),%ecx
cmpb   $0x0,(%ecx)
je     806ca7a <fchmod@plt+0x2193a>
call   804acd0 <__errno_location@plt>
mov    -0x58(%ebp),%edx
mov    %edx,0x8(%esp)
mov    %eax,%esi
lea    -0x3c(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,0xc(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4c(%ebp),%eax
mov    %eax,(%esp)
call   804a6b0 <getpwnam_r@plt>
mov    -0x3c(%ebp),%edx
test   %edx,%edx
mov    %eax,(%esi)
je     806cb00 <fchmod@plt+0x219c0>
mov    0x8(%edx),%eax
jmp    806ca7a <fchmod@plt+0x2193a>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2(%eax),%edx
cmp    $0x1,%edx
jbe    806cb65 <fchmod@plt+0x21a25>
test   %eax,%eax
je     806cb65 <fchmod@plt+0x21a25>
mov    -0x54(%ebp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806ca78 <fchmod@plt+0x21938>
mov    -0x4c(%ebp),%eax
movl   $0x62,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb0c0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb053(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb152(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x54(%ebp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    806ca78 <fchmod@plt+0x21938>
mov    -0x54(%ebp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806ca78 <fchmod@plt+0x21938>
mov    -0x4c(%ebp),%eax
movl   $0x60,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb16f(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb053(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    806cb43 <fchmod@plt+0x21a03>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x160fb,%ebx
sub    $0x4c,%esp
movl   $0x46,(%esp)
call   804a7d0 <sysconf@plt>
mov    0x64(%esp),%esi
mov    $0x5,%ecx
lea    -0xc0d6(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %eax,%ebp
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
jne    806cbf8 <fchmod@plt+0x21ab8>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,(%esp)
call   804ab00 <strtoul@plt>
mov    0x28(%esp),%edx
cmpb   $0x0,(%edx)
je     806cbed <fchmod@plt+0x21aad>
lea    0x2c(%esp),%eax
xor    %edi,%edi
mov    %eax,0x1c(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804a9d0 <realloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806cd3e <fchmod@plt+0x21bfe>
call   804acd0 <__errno_location@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,%edi
mov    0x1c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   804aff0 <getgrnam_r@plt>
mov    %eax,%edx
mov    %eax,(%edi)
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    806cd47 <fchmod@plt+0x21c07>
cmp    $0x22,%edx
je     806cd08 <fchmod@plt+0x21bc8>
lea    -0x2(%edx),%eax
cmp    $0x1,%eax
mov    0x60(%esp),%eax
mov    %eax,(%esp)
jbe    806ccb8 <fchmod@plt+0x21b78>
test   %edx,%edx
je     806ccb8 <fchmod@plt+0x21b78>
call   806db00 <fchmod@plt+0x229c0>
xor    %edi,%edi
cmp    $0x2,%eax
jg     806cd18 <fchmod@plt+0x21bd8>
mov    %esi,(%esp)
call   804a690 <free@plt>
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   806db00 <fchmod@plt+0x229c0>
xor    %edi,%edi
cmp    $0x2,%eax
jle    806cca0 <fchmod@plt+0x21b60>
mov    0x64(%esp),%eax
movl   $0x83,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb134(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb065(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb152(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    806cca0 <fchmod@plt+0x21b60>
add    %ebp,%ebp
mov    %esi,%edi
jmp    806cc27 <fchmod@plt+0x21ae7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x64(%esp),%eax
movl   $0x85,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xb0a0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb065(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    806cce8 <fchmod@plt+0x21ba8>
mov    %edi,%esi
xor    %edi,%edi
jmp    806cca0 <fchmod@plt+0x21b60>
mov    0x8(%eax),%edi
jmp    806cca0 <fchmod@plt+0x21b60>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x45c,%esp
mov    0x474(%esp),%eax
mov    0x478(%esp),%ecx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15f47,%ebx
mov    0x470(%esp),%edi
mov    %gs:0x14,%esi
mov    %esi,0x44c(%esp)
xor    %esi,%esi
cmpb   $0x5b,(%eax)
mov    %ecx,0x30(%esp)
jne    806cfb0 <fchmod@plt+0x21e70>
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
lea    0x4d(%esp),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     806cfb0 <fchmod@plt+0x21e70>
movb   $0x0,(%eax)
add    $0x1,%eax
movl   $0x5d,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     806cfb0 <fchmod@plt+0x21e70>
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
cmp    $0x2f,%dl
je     806cfc0 <fchmod@plt+0x21e80>
test   %dl,%dl
je     806cec0 <fchmod@plt+0x21d80>
test   %ebp,%ebp
sete   %al
mov    0x480(%esp),%edx
test   %edx,%edx
setne  0x3c(%esp)
test   %al,%al
jne    806cfa0 <fchmod@plt+0x21e60>
mov    0x38(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8066f00 <fchmod@plt+0x1bdc0>
test   %eax,%eax
mov    %eax,%esi
je     806cfb0 <fchmod@plt+0x21e70>
cmpb   $0x0,0x3c(%esp)
je     806ced0 <fchmod@plt+0x21d90>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8065690 <fchmod@plt+0x1a550>
test   %eax,%eax
je     806cfd0 <fchmod@plt+0x21e90>
mov    %eax,0x8(%esp)
mov    0x47c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    %edi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jg     806cfe8 <fchmod@plt+0x21ea8>
mov    %esi,(%esp)
call   8065300 <fchmod@plt+0x1a1c0>
xor    %eax,%eax
mov    0x44c(%esp),%edi
xor    %gs:0x14,%edi
jne    806d025 <fchmod@plt+0x21ee5>
add    $0x45c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
xor    %ebp,%ebp
jmp    806ce11 <fchmod@plt+0x21cd1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x48(%esp)
call   8065440 <fchmod@plt+0x1a300>
lea    0x48(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x8(%esp)
mov    0x47c(%esp),%eax
mov    %eax,0x4(%esp)
call   80632b0 <fchmod@plt+0x18170>
test   %ebp,%ebp
je     806cf31 <fchmod@plt+0x21df1>
mov    0x3c(%esp),%ecx
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80632b0 <fchmod@plt+0x18170>
mov    %edi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ce94 <fchmod@plt+0x21d54>
mov    0x30(%esp),%eax
mov    %ebp,0x20(%esp)
movl   $0xc6,0xc(%esp)
mov    %eax,0x24(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0xb0fb(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb080(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb152(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %edi,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    806ce94 <fchmod@plt+0x21d54>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x3c(%esp)
je     806ce27 <fchmod@plt+0x21ce7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    806ce9e <fchmod@plt+0x21d5e>
lea    0x0(%esi),%esi
lea    0x2(%eax),%ebp
movzbl 0x2(%eax),%edx
jmp    806ce04 <fchmod@plt+0x21cc4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movb   $0x0,(%eax)
mov    %edi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806ce94 <fchmod@plt+0x21d54>
mov    0x30(%esp),%eax
mov    %ebp,0x20(%esp)
movl   $0xbd,0xc(%esp)
mov    %eax,0x24(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0xb116(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xb080(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    806cf7a <fchmod@plt+0x21e3a>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15c7b,%ebx
sub    $0x83c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x82c(%esp)
xor    %eax,%eax
mov    0x854(%esp),%eax
lea    0x2c(%esp),%esi
movl   $0x0,0x14(%esp)
lea    0x42c(%esp),%ebp
mov    0x85c(%esp),%edi
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
lea    -0x1033a(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x858(%esp),%eax
mov    %eax,0x8(%esp)
call   8063320 <fchmod@plt+0x181e0>
movl   $0x400,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804a860 <readlink@plt>
cmp    $0x400,%eax
je     806d110 <fchmod@plt+0x21fd0>
test   %eax,%eax
jle    806d110 <fchmod@plt+0x21fd0>
movb   $0x0,0x42c(%esp,%eax,1)
movl   $0x2f,0x4(%esp)
mov    %ebp,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     806d110 <fchmod@plt+0x21fd0>
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x860(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80632f0 <fchmod@plt+0x181b0>
mov    0x82c(%esp),%edx
xor    %gs:0x14,%edx
jne    806d117 <fchmod@plt+0x21fd7>
add    $0x83c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    806d0f3 <fchmod@plt+0x21fb3>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15b85,%ebx
mov    0x454(%esp),%eax
lea    0x2c(%esp),%esi
movl   $0x400,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   804a860 <readlink@plt>
cmp    $0x400,%eax
je     806d227 <fchmod@plt+0x220e7>
test   %eax,%eax
jle    806d227 <fchmod@plt+0x220e7>
movb   $0x0,0x2c(%esp,%eax,1)
mov    %esi,%edx
xor    %edi,%edi
lea    -0xbcf2(%ebx),%ebp
jmp    806d193 <fchmod@plt+0x22053>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
mov    %edx,(%esp)
mov    %edx,%esi
mov    %ebp,0x4(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
lea    0x3(%esi),%edx
test   %eax,%eax
jne    806d190 <fchmod@plt+0x22050>
xor    %ebp,%ebp
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     806d220 <fchmod@plt+0x220e0>
add    $0x1,%ebp
cmp    %edi,%ebp
movb   $0x0,(%eax)
jle    806d1b0 <fchmod@plt+0x22070>
mov    0x1c(%esp),%ebp
lea    -0x1033a(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
sub    %eax,%ebp
add    0x458(%esp),%ebp
mov    %eax,(%esp)
mov    %ebp,0x4(%esp)
call   8063320 <fchmod@plt+0x181e0>
xor    %eax,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806d22e <fchmod@plt+0x220ee>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xffffffea,%eax
jmp    806d203 <fchmod@plt+0x220c3>
mov    $0xffffffff,%eax
jmp    806d203 <fchmod@plt+0x220c3>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15a69,%ebx
mov    0x30(%esp),%edi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804b040 <strtol@plt>
mov    0x1c(%esp),%edx
movzbl (%edx),%edx
mov    %eax,%esi
test   %dl,%dl
mov    %edx,0xc(%esp)
je     806d2ae <fchmod@plt+0x2216e>
call   804b0e0 <__ctype_b_loc@plt>
mov    0xc(%esp),%edx
movsbl %dl,%edx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%edx,2)
jne    806d2ae <fchmod@plt+0x2216e>
lea    -0x11304(%ebx),%eax
mov    $0x3,%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
je     806d2b8 <fchmod@plt+0x22178>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x13b24(%ebx),%eax
mov    $0x6,%si
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
test   %eax,%eax
jne    806d2ae <fchmod@plt+0x2216e>
lea    -0x13e9b(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8063bc0 <fchmod@plt+0x18a80>
cmp    $0x1,%eax
sbb    %esi,%esi
not    %esi
and    $0x7,%esi
jmp    806d2ae <fchmod@plt+0x2216e>
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
mov    0x10(%esp),%ecx
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebp
movzbl (%ecx),%edx
add    $0x1,%ecx
test   %dl,%dl
jne    806d32c <fchmod@plt+0x221ec>
jmp    806d370 <fchmod@plt+0x22230>
lea    0x0(%esi),%esi
cmp    $0x5c,%dl
je     806d358 <fchmod@plt+0x22218>
lea    0x1(%eax),%esi
cmp    %esi,%ebp
jbe    806d370 <fchmod@plt+0x22230>
mov    %dl,(%edi,%eax,1)
mov    %esi,%eax
add    $0x1,%ecx
movzbl -0x1(%ecx),%edx
test   %dl,%dl
je     806d34c <fchmod@plt+0x2220c>
cmp    $0x2f,%dl
jne    806d310 <fchmod@plt+0x221d0>
lea    0x4(%eax),%edx
cmp    %ebp,%edx
jae    806d370 <fchmod@plt+0x22230>
add    $0x1,%ecx
movl   $0x6632785c,(%edi,%eax,1)
mov    %edx,%eax
movzbl -0x1(%ecx),%edx
test   %dl,%dl
jne    806d32c <fchmod@plt+0x221ec>
movb   $0x0,(%edi,%eax,1)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x4(%eax),%edx
cmp    %edx,%ebp
jbe    806d370 <fchmod@plt+0x22230>
movl   $0x6335785c,(%edi,%eax,1)
mov    %edx,%eax
jmp    806d321 <fchmod@plt+0x221e1>
lea    0x0(%esi),%esi
xor    %eax,%eax
movb   $0x0,(%edi,%eax,1)
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15924,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     806d3d3 <fchmod@plt+0x22293>
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     806d3d3 <fchmod@plt+0x22293>
sub    $0x1,%eax
mov    %edi,%edx
lea    (%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ecx
cmp    %dl,%cl
je     806d3cb <fchmod@plt+0x2228b>
jmp    806d3d3 <fchmod@plt+0x22293>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
cmp    %cl,(%esi,%eax,1)
lea    (%esi,%eax,1),%ebp
jne    806d3d3 <fchmod@plt+0x22293>
test   %eax,%eax
movb   $0x0,0x0(%ebp)
jne    806d3c0 <fchmod@plt+0x22280>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x158c8,%ebx
mov    0x48(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804adc0 <strnlen@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     806d4ff <fchmod@plt+0x223bf>
call   804b0e0 <__ctype_b_loc@plt>
mov    %eax,0x1c(%esp)
mov    (%eax),%edx
mov    0x18(%esp),%eax
jmp    806d432 <fchmod@plt+0x222f2>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     806d4f2 <fchmod@plt+0x223b2>
mov    %ecx,%eax
movsbl -0x1(%esi,%eax,1),%edi
lea    -0x1(%eax),%ecx
testb  $0x20,0x1(%edx,%edi,2)
jne    806d428 <fchmod@plt+0x222e8>
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    0x18(%esp),%edi
jmp    806d45b <fchmod@plt+0x2231b>
lea    0x0(%esi),%esi
cmp    %edi,%eax
je     806d4de <fchmod@plt+0x2239e>
add    $0x1,%eax
movzbl (%esi,%eax,1),%ecx
movsbl %cl,%ebp
movzwl (%edx,%ebp,2),%ebp
test   $0x2000,%bp
jne    806d450 <fchmod@plt+0x22310>
cmp    %eax,0x18(%esp)
jbe    806d4de <fchmod@plt+0x2239e>
mov    %cl,0x17(%esp)
xor    %ecx,%ecx
jmp    806d4ad <fchmod@plt+0x2236d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%ebp
add    $0x1,%eax
movzbl 0x17(%esp),%edx
lea    0x1(%ecx),%edi
cmp    0x18(%esp),%eax
mov    %dl,0x0(%ebp,%ecx,1)
jae    806d4e0 <fchmod@plt+0x223a0>
mov    0x1c(%esp),%edx
movsbl (%esi,%eax,1),%ecx
mov    (%edx),%edx
mov    %cl,0x17(%esp)
movzwl (%edx,%ecx,2),%ebp
mov    %edi,%ecx
test   $0x2000,%bp
je     806d480 <fchmod@plt+0x22340>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movsbl (%esi,%eax,1),%edi
lea    (%esi,%eax,1),%ebp
testb  $0x20,0x1(%edx,%edi,2)
jne    806d4b8 <fchmod@plt+0x22378>
mov    0x44(%esp),%edi
movb   $0x5f,(%edi,%ecx,1)
movzbl 0x0(%ebp),%edx
add    $0x1,%ecx
mov    %dl,0x17(%esp)
jmp    806d480 <fchmod@plt+0x22340>
xor    %edi,%edi
mov    0x44(%esp),%eax
movb   $0x0,(%eax,%edi,1)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x18(%esp)
jmp    806d445 <fchmod@plt+0x22305>
call   804b0e0 <__ctype_b_loc@plt>
mov    %eax,0x1c(%esp)
mov    (%eax),%edx
jmp    806d445 <fchmod@plt+0x22305>
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    %esi,%edi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15797,%ebx
sub    $0x1c,%esp
movl   $0x0,0xc(%esp)
xchg   %ax,%ax
mov    0x30(%esp),%ebp
add    %edi,%ebp
movzbl 0x0(%ebp),%ecx
test   %cl,%cl
je     806d569 <fchmod@plt+0x22429>
mov    0x34(%esp),%edx
movsbl %cl,%esi
mov    %esi,%eax
mov    %ecx,0x8(%esp)
call   806c8a0 <fchmod@plt+0x21760>
mov    0x8(%esp),%ecx
test   %eax,%eax
je     806d578 <fchmod@plt+0x22438>
mov    0x30(%esp),%ebp
add    $0x1,%edi
add    %edi,%ebp
movzbl 0x0(%ebp),%ecx
test   %cl,%cl
jne    806d53e <fchmod@plt+0x223fe>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x5c,%cl
je     806d590 <fchmod@plt+0x22450>
mov    %ebp,%eax
call   806c730 <fchmod@plt+0x215f0>
cmp    $0x1,%eax
jle    806d5a0 <fchmod@plt+0x22460>
add    %eax,%edi
jmp    806d530 <fchmod@plt+0x223f0>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
cmpb   $0x78,0x1(%eax,%edi,1)
jne    806d57d <fchmod@plt+0x2243d>
add    $0x2,%edi
jmp    806d530 <fchmod@plt+0x223f0>
call   804b0e0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%esi,2)
je     806d5e0 <fchmod@plt+0x224a0>
mov    0x34(%esp),%eax
test   %eax,%eax
je     806d5e0 <fchmod@plt+0x224a0>
mov    0x34(%esp),%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     806d5e0 <fchmod@plt+0x224a0>
movb   $0x20,0x0(%ebp)
add    $0x1,%edi
addl   $0x1,0xc(%esp)
jmp    806d530 <fchmod@plt+0x223f0>
nop
movb   $0x5f,0x0(%ebp)
add    $0x1,%edi
addl   $0x1,0xc(%esp)
jmp    806d530 <fchmod@plt+0x223f0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x156a4,%ebx
test   %edx,%edx
je     806d740 <fchmod@plt+0x22600>
mov    0x44(%esp),%eax
test   %eax,%eax
je     806d740 <fchmod@plt+0x22600>
mov    0x40(%esp),%eax
movzbl (%eax),%ecx
test   %cl,%cl
je     806d74d <fchmod@plt+0x2260d>
mov    %eax,%edx
xor    %ebp,%ebp
lea    -0xb0e1(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x1c(%esp)
jmp    806d68e <fchmod@plt+0x2254e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
sub    %ebp,%eax
cmp    %esi,%eax
jb     806d740 <fchmod@plt+0x22600>
mov    0x44(%esp),%eax
lea    -0x1(%edi,%esi,1),%edi
mov    0x18(%esp),%edx
mov    %esi,0x8(%esp)
add    %ebp,%eax
add    %esi,%ebp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a6e0 <memcpy@plt>
mov    0x40(%esp),%edx
add    $0x1,%edi
add    %edi,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     806d6e8 <fchmod@plt+0x225a8>
mov    %edx,%eax
mov    %ecx,0x14(%esp)
mov    %edx,0x18(%esp)
call   806c730 <fchmod@plt+0x215f0>
mov    0x14(%esp),%ecx
cmp    $0x1,%eax
mov    %eax,%esi
jg     806d650 <fchmod@plt+0x22510>
cmp    $0x5c,%cl
je     806d700 <fchmod@plt+0x225c0>
movsbl %cl,%eax
xor    %edx,%edx
mov    %ecx,0x14(%esp)
call   806c8a0 <fchmod@plt+0x21760>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     806d700 <fchmod@plt+0x225c0>
cmp    %ebp,0x48(%esp)
je     806d740 <fchmod@plt+0x22600>
mov    0x40(%esp),%edx
add    $0x1,%edi
mov    0x44(%esp),%eax
add    %edi,%edx
mov    %cl,(%eax,%ebp,1)
movzbl (%edx),%ecx
add    $0x1,%ebp
test   %cl,%cl
jne    806d68e <fchmod@plt+0x2254e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,0x48(%esp)
je     806d740 <fchmod@plt+0x22600>
mov    0x44(%esp),%eax
movb   $0x0,(%eax,%ebp,1)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x48(%esp),%eax
sub    %ebp,%eax
cmp    $0x3,%eax
jbe    806d740 <fchmod@plt+0x22600>
mov    0x1c(%esp),%eax
movzbl %cl,%ecx
mov    %ecx,0x10(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
add    %ebp,%eax
add    $0x4,%ebp
mov    %eax,(%esp)
call   804b120 <__sprintf_chk@plt>
jmp    806d67e <fchmod@plt+0x2253e>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
jmp    806d6e8 <fchmod@plt+0x225a8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15548,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
cmp    $0x3,%eax
jbe    806d810 <fchmod@plt+0x226d0>
lea    -0x4(%eax),%edx
shr    $0x2,%edx
lea    0x4(%esi,%edx,4),%ebp
mov    %eax,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x5bd1e995,(%esi),%edi
add    $0x4,%esi
mov    %edi,%ecx
shr    $0x18,%ecx
xor    %edi,%ecx
imul   $0x5bd1e995,%edx,%edi
imul   $0x5bd1e995,%ecx,%edx
xor    %edi,%edx
cmp    %ebp,%esi
jne    806d798 <fchmod@plt+0x22658>
and    $0x3,%eax
mov    %eax,%ecx
cmp    $0x2,%ecx
je     806d7f9 <fchmod@plt+0x226b9>
cmp    $0x3,%ecx
je     806d7f0 <fchmod@plt+0x226b0>
cmp    $0x1,%ecx
je     806d802 <fchmod@plt+0x226c2>
mov    %edx,%eax
add    $0x1c,%esp
shr    $0xd,%eax
xor    %edx,%eax
imul   $0x5bd1e995,%eax,%edx
pop    %ebx
pop    %esi
pop    %edi
mov    %edx,%eax
shr    $0xf,%eax
xor    %edx,%eax
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x2(%ebp),%eax
shl    $0x10,%eax
xor    %eax,%edx
movzbl 0x1(%ebp),%eax
shl    $0x8,%eax
xor    %eax,%edx
movzbl 0x0(%ebp),%eax
xor    %edx,%eax
imul   $0x5bd1e995,%eax,%edx
jmp    806d7ce <fchmod@plt+0x2268e>
mov    %eax,%ecx
mov    %eax,%edx
mov    %esi,%ebp
jmp    806d7bf <fchmod@plt+0x2267f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15488,%ebx
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806d760 <fchmod@plt+0x22620>
mov    %eax,%ecx
shr    $0x6,%ecx
and    $0x3f,%ecx
mov    %ecx,%ebp
shr    $0x5,%ebp
and    $0x1,%ebp
mov    %ebp,%edi
shl    %cl,%ebp
xor    $0x1,%edi
mov    %ebp,0xc(%esp)
mov    %eax,%ebp
mov    0xc(%esp),%edx
shr    $0xc,%ebp
and    $0x3f,%ebp
shl    %cl,%edi
mov    %ebp,%ecx
mov    %ecx,%ebp
shr    $0x5,%ebp
and    $0x1,%ebp
mov    %edi,0x8(%esp)
mov    %ebp,%edi
xor    $0x1,%edi
shl    %cl,%edi
shl    %cl,%ebp
mov    %eax,%ecx
and    $0x3f,%ecx
mov    %edi,%esi
mov    %ebp,%edi
mov    0x8(%esp),%ebp
or     %edi,%edx
mov    %ecx,%edi
shr    $0x5,%edi
and    $0x1,%edi
or     %esi,%ebp
mov    %edi,%esi
shr    $0x12,%eax
xor    $0x1,%esi
shl    %cl,%esi
shl    %cl,%edi
mov    %eax,%ecx
and    $0x3f,%ecx
or     %edi,%edx
mov    %ecx,%edi
or     %esi,%ebp
shr    $0x5,%edi
and    $0x1,%edi
mov    %edi,%esi
xor    $0x1,%esi
shl    %cl,%esi
shl    %cl,%edi
add    $0x1c,%esp
or     %esi,%ebp
or     %edi,%edx
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x153db,%ebx
sub    $0x43c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x450(%esp),%ebp
movl   $0x80101,0x4(%esp)
lea    -0xc9dc(%ebx),%eax
mov    %eax,(%esp)
call   804a590 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     806d9d0 <fchmod@plt+0x22890>
call   804a9a0 <getpid@plt>
lea    0x2c(%esp),%edi
mov    %edi,(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0xb0da(%ebx),%eax
mov    %eax,0x10(%esp)
call   804a510 <__snprintf_chk@plt>
mov    %ebp,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,%edx
lea    0x454(%esp),%eax
mov    %eax,0x14(%esp)
mov    $0x400,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
lea    (%edi,%edx,1),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   804ad60 <__vsnprintf_chk@plt>
mov    0x1c(%esp),%edx
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
add    %eax,%edx
mov    %edx,0x8(%esp)
call   804ab90 <write@plt>
test   %eax,%eax
mov    %eax,%edi
js     806d9e0 <fchmod@plt+0x228a0>
mov    %esi,(%esp)
call   804b0a0 <close@plt>
mov    %edi,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    806d9eb <fchmod@plt+0x228ab>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    806d9b3 <fchmod@plt+0x22873>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
jmp    806d9a9 <fchmod@plt+0x22869>
call   806ed90 <fchmod@plt+0x23c50>
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x152bd,%ebx
sub    $0x14,%esp
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x32c(%ebx),%esi
lea    -0xb042(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804af60 <__fprintf_chk@plt>
mov    0x38(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a580 <__vfprintf_chk@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x2c,%esp
lea    0x48(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,0x18(%esp)
mov    0x44(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x14(%esp)
mov    0x40(%esp),%edx
mov    %edx,0x10(%esp)
mov    0x3c(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x38(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
mov    %edx,0x4(%esp)
call   *0x4(%eax)
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x151f6,%ebx
test   %esi,%esi
je     806dae0 <fchmod@plt+0x229a0>
mov    (%esi),%eax
lea    -0x1(%eax),%edx
test   %edx,%edx
mov    %edx,(%esi)
jle    806dae8 <fchmod@plt+0x229a8>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    806dad5 <fchmod@plt+0x22995>
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esi),%edx
mov    %edx,(%esp)
call   806adb0 <fchmod@plt+0x1fc70>
mov    %esi,(%esp)
call   804a690 <free@plt>
xor    %eax,%eax
jmp    806dad5 <fchmod@plt+0x22995>
nop
mov    0x4(%esp),%eax
mov    0x28(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15199,%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    %edi,0x4(%esi)
mov    %esi,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x6,%eax
jle    806db73 <fchmod@plt+0x22a33>
lea    -0xaff4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xaf50(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb034(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x107,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   806da60 <fchmod@plt+0x22920>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x15127,%ebx
add    $0xc,%eax
mov    %eax,(%esp)
call   806ad50 <fchmod@plt+0x1fc10>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x150f7,%ebx
test   %eax,%eax
je     806dbe8 <fchmod@plt+0x22aa8>
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   806aac0 <fchmod@plt+0x1f980>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806db80 <fchmod@plt+0x22a40>
mov    0x24(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   806ae20 <fchmod@plt+0x1fce0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     806dbe2 <fchmod@plt+0x22aa2>
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   806acb0 <fchmod@plt+0x1fb70>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1507c,%ebx
sub    $0x50,%esp
mov    0x64(%esp),%eax
lea    0x2c(%esp),%edi
mov    0x60(%esp),%esi
mov    %gs:0x14,%edx
mov    %edx,0x4c(%esp)
xor    %edx,%edx
mov    %eax,0x28(%esi)
mov    %eax,0x14(%esp)
lea    -0xc0fe(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   804a510 <__snprintf_chk@plt>
lea    -0xb01b(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806dbb0 <fchmod@plt+0x22a70>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    806dcb5 <fchmod@plt+0x22b75>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x14feb,%ebx
sub    $0x405c,%esp
movl   $0x2c,0x4(%esp)
movl   $0x1,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x404c(%esp)
xor    %eax,%eax
call   804b110 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x34(%esp)
je     806dfc6 <fchmod@plt+0x22e86>
movl   $0x1,(%eax)
lea    -0x152c4(%ebx),%eax
mov    %eax,0x4(%edi)
lea    0xc(%edi),%eax
movl   $0x3,0x28(%edi)
mov    %eax,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,(%esp)
call   806a9e0 <fchmod@plt+0x1f8a0>
lea    -0xd449(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xb012(%ebx),%eax
mov    %eax,(%esp)
call   804a8c0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     806dec0 <fchmod@plt+0x22d80>
lea    0x4c(%esp),%eax
mov    %eax,0x28(%esp)
lea    -0xaf8c(%ebx),%eax
movl   $0x0,0x30(%esp)
mov    %eax,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x4000,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a710 <fgets@plt>
test   %eax,%eax
je     806deb4 <fchmod@plt+0x22d74>
addl   $0x1,0x30(%esp)
call   804b0e0 <__ctype_b_loc@plt>
mov    0x28(%esp),%esi
mov    %eax,%edi
mov    (%eax),%ecx
jmp    806ddb3 <fchmod@plt+0x22c73>
add    $0x1,%esi
movzbl (%esi),%edx
movsbl %dl,%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    806ddb0 <fchmod@plt+0x22c70>
test   %dl,%dl
je     806dd78 <fchmod@plt+0x22c38>
cmp    $0x23,%dl
je     806dd78 <fchmod@plt+0x22c38>
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   804ab10 <strchr@plt>
test   %eax,%eax
je     806df4c <fchmod@plt+0x22e0c>
movb   $0x0,(%eax)
lea    0x1(%eax),%ebp
mov    (%edi),%edi
movsbl 0x1(%eax),%eax
testb  $0x20,0x1(%edi,%eax,2)
je     806de06 <fchmod@plt+0x22cc6>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
movsbl 0x0(%ebp),%eax
testb  $0x20,0x1(%edi,%eax,2)
jne    806ddf8 <fchmod@plt+0x22cb8>
mov    %esi,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     806dd78 <fchmod@plt+0x22c38>
jmp    806de1a <fchmod@plt+0x22cda>
mov    %ecx,%eax
movsbl -0x1(%esi,%eax,1),%edx
lea    -0x1(%eax),%ecx
testb  $0x20,0x1(%edi,%edx,2)
jne    806de18 <fchmod@plt+0x22cd8>
movb   $0x0,(%esi,%eax,1)
mov    %ebp,(%esp)
call   804ab30 <strlen@plt>
test   %eax,%eax
je     806dd78 <fchmod@plt+0x22c38>
mov    %esi,0x38(%esp)
jmp    806de4a <fchmod@plt+0x22d0a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
movsbl -0x1(%ebp,%eax,1),%ecx
lea    -0x1(%eax),%edx
lea    0x0(%ebp,%edx,1),%esi
testb  $0x20,0x1(%edi,%ecx,2)
jne    806de48 <fchmod@plt+0x22d08>
test   %eax,%eax
mov    %esi,%ecx
mov    0x38(%esp),%esi
movb   $0x0,0x0(%ebp,%eax,1)
je     806dd78 <fchmod@plt+0x22c38>
movzbl 0x0(%ebp),%eax
cmp    $0x27,%al
je     806df0b <fchmod@plt+0x22dcb>
cmp    $0x22,%al
je     806df0b <fchmod@plt+0x22dcb>
mov    $0x9,%ecx
lea    -0xaffe(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806dd78 <fchmod@plt+0x22c38>
mov    %ebp,(%esp)
call   806d240 <fchmod@plt+0x22100>
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806dc30 <fchmod@plt+0x22af0>
jmp    806dd78 <fchmod@plt+0x22c38>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a730 <fclose@plt>
lea    -0xb01b(%ebx),%eax
mov    %eax,(%esp)
call   804a600 <secure_getenv@plt>
mov    0x34(%esp),%esi
test   %eax,%eax
je     806deea <fchmod@plt+0x22daa>
mov    %eax,(%esp)
call   806d240 <fchmod@plt+0x22100>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806dc30 <fchmod@plt+0x22af0>
mov    0x404c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    806dfcd <fchmod@plt+0x22e8d>
add    $0x405c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    (%ecx),%al
je     806dfa8 <fchmod@plt+0x22e68>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806dd78 <fchmod@plt+0x22c38>
mov    0x30(%esp),%eax
movl   $0xbb,0xc(%esp)
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0xaf40(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    806df85 <fchmod@plt+0x22e45>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806db00 <fchmod@plt+0x229c0>
cmp    $0x2,%eax
jle    806dd78 <fchmod@plt+0x22c38>
mov    0x30(%esp),%eax
movl   $0x9b,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xafcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0xaf40(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xb034(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   806da60 <fchmod@plt+0x22920>
jmp    806dd78 <fchmod@plt+0x22c38>
movb   $0x0,(%ecx)
lea    -0xaffe(%ebx),%edi
mov    $0x9,%ecx
add    $0x1,%ebp
repz cmpsb %es:(%edi),%ds:(%esi)
jne    806dd78 <fchmod@plt+0x22c38>
jmp    806de97 <fchmod@plt+0x22d57>
xor    %esi,%esi
jmp    806deea <fchmod@plt+0x22daa>
lea    0x0(%esi),%esi
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x14cc9,%ebx
sub    $0xdc,%esp
mov    0x8(%ebp),%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   806e900 <fchmod@plt+0x237c0>
test   %al,%al
je     806e018 <fchmod@plt+0x22ed8>
mov    0xbd8(%ebx),%eax
test   %eax,%eax
je     806e038 <fchmod@plt+0x22ef8>
xor    %eax,%eax
mov    -0x1c(%ebp),%edx
xor    %gs:0x14,%edx
jne    806e1f6 <fchmod@plt+0x230b6>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0xac(%ebp),%eax
mov    %eax,(%esp)
call   804ad90 <mallinfo@plt>
mov    -0x90(%ebp),%edi
sub    $0x4,%esp
movl   $0x1,(%esp)
call   8063460 <fchmod@plt+0x18320>
test   %esi,%esi
mov    %eax,-0xc0(%ebp)
mov    %edx,-0xbc(%ebp)
je     806e1cf <fchmod@plt+0x2308f>
lea    -0x84(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x4,-0x84(%ebp)
00
mov    %esi,-0x80(%ebp)
call   804ab20 <selabel_open@plt>
mov    %eax,0xbd8(%ebx)
test   %eax,%eax
je     806e170 <fchmod@plt+0x23030>
movl   $0x1,(%esp)
xor    %esi,%esi
call   8063460 <fchmod@plt+0x18320>
lea    -0x84(%ebp),%ecx
mov    %ecx,(%esp)
mov    %eax,-0xc8(%ebp)
mov    %edx,-0xc4(%ebp)
call   804ad90 <mallinfo@plt>
mov    -0x68(%ebp),%ecx
mov    -0xc8(%ebp),%eax
mov    -0xc4(%ebp),%edx
sub    $0x4,%esp
cmp    %ecx,%edi
jge    806e0fa <fchmod@plt+0x22fba>
sub    %edi,%ecx
lea    0x7fe(%ecx),%esi
add    $0x3ff,%ecx
cmovns %ecx,%esi
sar    $0xa,%esi
sub    -0xc0(%ebp),%eax
sbb    -0xbc(%ebp),%edx
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x5c(%ebp),%eax
movl   $0x0,0x14(%esp)
mov    %edx,0xc(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
call   80634c0 <fchmod@plt+0x18380>
mov    %esi,0x18(%esp)
movl   $0x56,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x14(%esp)
lea    -0xaf08(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xad77(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xade0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
jmp    806e018 <fchmod@plt+0x22ed8>
call   804ad40 <security_getenforce@plt>
lea    -0xaf34(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0xad77(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0xade0(%ebx),%edx
mov    %edx,0x4(%esp)
movl   $0x49,0x8(%esp)
cmp    $0x1,%eax
setne  %al
movzbl %al,%eax
lea    0x3(,%eax,4),%eax
mov    %eax,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
call   804ad40 <security_getenforce@plt>
cmp    $0x1,%eax
jne    806e018 <fchmod@plt+0x22ed8>
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    806e01a <fchmod@plt+0x22eda>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804ab20 <selabel_open@plt>
mov    %eax,0xbd8(%ebx)
jmp    806e0a0 <fchmod@plt+0x22f60>
call   806ed90 <fchmod@plt+0x23c50>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x14aab,%ebx
sub    $0x9c,%esp
mov    0xb4(%esp),%esi
mov    0xb8(%esp),%edi
call   806e900 <fchmod@plt+0x237c0>
test   %al,%al
je     806e2e8 <fchmod@plt+0x231a8>
mov    0xbd8(%ebx),%ebp
test   %ebp,%ebp
je     806e2e8 <fchmod@plt+0x231a8>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804b070 <__lxstat64@plt>
test   %eax,%eax
je     806e2f8 <fchmod@plt+0x231b8>
jns    806e2ea <fchmod@plt+0x231aa>
mov    %esi,%eax
test   %al,%al
nop
je     806e27c <fchmod@plt+0x2313c>
call   804acd0 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     806e2e8 <fchmod@plt+0x231a8>
mov    %edi,%eax
test   %al,%al
je     806e28c <fchmod@plt+0x2314c>
call   804acd0 <__errno_location@plt>
cmpl   $0x1e,(%eax)
je     806e2e8 <fchmod@plt+0x231a8>
lea    0x0(%esi,%eiz,1),%esi
call   804ad40 <security_getenforce@plt>
mov    0xb0(%esp),%ecx
lea    -0xadca(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0xad81(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0xade0(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %ecx,0x14(%esp)
movl   $0x82,0x8(%esp)
cmp    $0x1,%eax
setne  %al
movzbl %al,%eax
lea    0x3(,%eax,4),%eax
mov    %eax,(%esp)
call   8062020 <fchmod@plt+0x16ee0>
call   804ad40 <security_getenforce@plt>
cmp    $0x1,%eax
je     806e360 <fchmod@plt+0x23220>
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   804b050 <selabel_lookup_raw@plt>
test   %eax,%eax
js     806e370 <fchmod@plt+0x23230>
jne    806e2ea <fchmod@plt+0x231aa>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   804a660 <lsetfilecon@plt>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804aef0 <freecon@plt>
test   %ebp,%ebp
mov    %ebp,%eax
jns    806e2ea <fchmod@plt+0x231aa>
call   804acd0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
jne    806e26b <fchmod@plt+0x2312b>
jmp    806e2e8 <fchmod@plt+0x231a8>
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    806e2ea <fchmod@plt+0x231aa>
xchg   %ax,%ax
call   804acd0 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    806e26b <fchmod@plt+0x2312b>
xchg   %ax,%ax
jmp    806e2e8 <fchmod@plt+0x231a8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x1491e,%ebx
sub    $0x18,%esp
call   806e900 <fchmod@plt+0x237c0>
test   %al,%al
je     806e3ba <fchmod@plt+0x2327a>
mov    0xbd8(%ebx),%eax
test   %eax,%eax
je     806e3ba <fchmod@plt+0x2327a>
mov    %eax,(%esp)
call   804a960 <selabel_close@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x148ed,%ebx
sub    $0x34,%esp
movl   $0x0,0x2c(%esp)
call   806e900 <fchmod@plt+0x237c0>
xor    %edx,%edx
test   %al,%al
je     806e417 <fchmod@plt+0x232d7>
mov    0xbd8(%ebx),%eax
test   %eax,%eax
je     806e417 <fchmod@plt+0x232d7>
mov    0x44(%esp),%edx
mov    0x40(%esp),%ecx
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
lea    0x2c(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   804b050 <selabel_lookup_raw@plt>
test   %eax,%eax
mov    %eax,%esi
js     806e458 <fchmod@plt+0x23318>
mov    %eax,%edx
je     806e420 <fchmod@plt+0x232e0>
add    $0x34,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804aba0 <setfscreatecon@plt>
test   %eax,%eax
mov    %eax,%esi
js     806e470 <fchmod@plt+0x23330>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804aef0 <freecon@plt>
test   %esi,%esi
mov    %esi,%edx
jns    806e417 <fchmod@plt+0x232d7>
call   804ad40 <security_getenforce@plt>
mov    %eax,%edx
test   %eax,%eax
cmovne %esi,%edx
jmp    806e417 <fchmod@plt+0x232d7>
lea    0x0(%esi),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
je     806e444 <fchmod@plt+0x23304>
neg    %eax
mov    %eax,%esi
jmp    806e43e <fchmod@plt+0x232fe>
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
movl   $0xc6,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0xae94(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xad93(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xade0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    806e432 <fchmod@plt+0x232f2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x147ee,%ebx
sub    $0x18,%esp
call   806e900 <fchmod@plt+0x237c0>
test   %al,%al
je     806e4e4 <fchmod@plt+0x233a4>
movl   $0x0,(%esp)
call   804aba0 <setfscreatecon@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x147b8,%ebx
mov    0x50(%esp),%esi
cmpb   $0x0,0x58(%esp)
movl   $0x0,0x2c(%esp)
je     806e51e <fchmod@plt+0x233de>
call   806e900 <fchmod@plt+0x237c0>
test   %al,%al
jne    806e548 <fchmod@plt+0x23408>
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804ac70 <mkdir@plt>
xor    %edx,%edx
test   %eax,%eax
js     806e5f8 <fchmod@plt+0x234b8>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xbd8(%ebx),%edi
test   %edi,%edi
je     806e51e <fchmod@plt+0x233de>
mov    %esi,(%esp)
call   80624b0 <fchmod@plt+0x17370>
test   %al,%al
jne    806e610 <fchmod@plt+0x234d0>
mov    %esi,(%esp)
call   80625b0 <fchmod@plt+0x17470>
test   %eax,%eax
mov    %eax,%ebp
je     806e6b3 <fchmod@plt+0x23573>
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xbd8(%ebx),%eax
movl   $0x4000,0xc(%esp)
mov    %eax,(%esp)
call   804b050 <selabel_lookup_raw@plt>
mov    %ebp,(%esp)
mov    %eax,%edi
call   804a690 <free@plt>
test   %edi,%edi
je     806e6a0 <fchmod@plt+0x23560>
test   %edi,%edi
js     806e638 <fchmod@plt+0x234f8>
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804ac70 <mkdir@plt>
test   %eax,%eax
mov    %eax,%esi
jns    806e5cf <fchmod@plt+0x2348f>
call   804acd0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
movl   $0x0,(%esp)
call   804aba0 <setfscreatecon@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804aef0 <freecon@plt>
add    $0x3c,%esp
mov    %esi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %edx
mov    %edx,%eax
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %edi,(%esp)
movl   $0x4000,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   804b050 <selabel_lookup_raw@plt>
mov    %eax,%edi
jmp    806e5a0 <fchmod@plt+0x23460>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%edi
je     806e5b0 <fchmod@plt+0x23470>
mov    0x2c(%esp),%eax
mov    %esi,0x18(%esp)
movl   $0x11f,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x14(%esp)
lea    -0xae30(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xad9f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xade0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8062020 <fchmod@plt+0x16ee0>
call   804ad40 <security_getenforce@plt>
cmp    $0x1,%eax
jne    806e5b0 <fchmod@plt+0x23470>
mov    (%edi),%esi
neg    %esi
jmp    806e5cf <fchmod@plt+0x2348f>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804aba0 <setfscreatecon@plt>
mov    %eax,%edi
jmp    806e5a8 <fchmod@plt+0x23468>
mov    $0xfffffff4,%edx
jmp    806e538 <fchmod@plt+0x233f8>
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x9c,%esp
movzbl 0x8(%ebp),%eax
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x145dd,%ebx
mov    %edx,-0x90(%ebp)
mov    %al,-0x8c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
test   %esi,%esi
je     806e891 <fchmod@plt+0x23751>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804ae40 <strrchr@plt>
test   %eax,%eax
je     806e887 <fchmod@plt+0x23747>
sub    %esi,%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804adc0 <strnlen@plt>
lea    0x1f(%eax),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1f(%esp),%edx
and    $0xfffffff0,%edx
movb   $0x0,(%edx,%eax,1)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
call   804a6e0 <memcpy@plt>
lea    -0x7c(%ebp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804afe0 <__xstat64@plt>
test   %eax,%eax
js     806e78d <fchmod@plt+0x2364d>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    806e873 <fchmod@plt+0x23733>
xor    %eax,%eax
mov    -0x1c(%ebp),%esi
xor    %gs:0x14,%esi
jne    806e8bb <fchmod@plt+0x2377b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl (%esi),%eax
lea    0x1(%esi),%edx
mov    %esi,%edi
cmp    $0x2f,%al
jne    806e7ac <fchmod@plt+0x2366c>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%edi
movzbl (%edx),%eax
lea    0x1(%edx),%edx
cmp    $0x2f,%al
je     806e7a0 <fchmod@plt+0x23660>
movzbl -0x8c(%ebp),%ecx
mov    %esi,-0x94(%ebp)
mov    %ecx,-0x98(%ebp)
nop
test   %al,%al
je     806e773 <fchmod@plt+0x23633>
cmp    $0x2f,%al
je     806e7e2 <fchmod@plt+0x236a2>
add    $0x1,%edi
jmp    806e7d7 <fchmod@plt+0x23697>
lea    0x0(%esi),%esi
add    $0x1,%edi
cmp    $0x2f,%al
je     806e7e8 <fchmod@plt+0x236a8>
movzbl (%edi),%eax
mov    %edi,%ecx
test   %al,%al
jne    806e7d0 <fchmod@plt+0x23690>
jmp    806e773 <fchmod@plt+0x23633>
mov    %edi,%ecx
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edi
add    $0x1,%eax
movzbl -0x1(%eax),%edx
cmp    $0x2f,%dl
je     806e7f0 <fchmod@plt+0x236b0>
test   %dl,%dl
je     806e773 <fchmod@plt+0x23633>
mov    -0x94(%ebp),%eax
sub    %eax,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a840 <__strndup@plt>
test   %eax,%eax
mov    %eax,%esi
je     806e87d <fchmod@plt+0x2373d>
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x90(%ebp),%eax
mov    %eax,0x4(%esp)
call   806e4f0 <fchmod@plt+0x233b0>
mov    %esi,(%esp)
mov    %eax,-0x8c(%ebp)
call   804a690 <free@plt>
mov    -0x8c(%ebp),%eax
test   %eax,%eax
js     806e860 <fchmod@plt+0x23720>
movzbl (%edi),%eax
jmp    806e7c0 <fchmod@plt+0x23680>
lea    0x0(%esi,%eiz,1),%esi
call   804acd0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x11,%eax
je     806e854 <fchmod@plt+0x23714>
neg    %eax
jmp    806e775 <fchmod@plt+0x23635>
mov    $0xffffffec,%eax
jmp    806e775 <fchmod@plt+0x23635>
mov    $0xfffffff4,%eax
jmp    806e775 <fchmod@plt+0x23635>
mov    $0xffffffea,%eax
jmp    806e775 <fchmod@plt+0x23635>
lea    -0xad56(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xad6c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xbf5e(%ebx),%eax
movl   $0x46,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
call   806ed90 <fchmod@plt+0x23c50>
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movl   $0x0,0x4(%esp)
jmp    806e6c0 <fchmod@plt+0x23580>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movl   $0x1,0x4(%esp)
jmp    806e6c0 <fchmod@plt+0x23580>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x143ae,%ebx
sub    $0x8,%esp
mov    0x368(%ebx),%eax
test   %eax,%eax
js     806e928 <fchmod@plt+0x237e8>
test   %eax,%eax
setne  %al
add    $0x8,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a540 <is_selinux_enabled@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
test   %eax,%eax
mov    %eax,0x368(%ebx)
setne  %al
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x14354,%ebx
test   %esi,%esi
je     806ea29 <fchmod@plt+0x238e9>
mov    0x58(%esp),%eax
test   %eax,%eax
je     806ea53 <fchmod@plt+0x23913>
lea    0x28(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ad50 <acl_get_entry@plt>
test   %eax,%eax
jle    806ea10 <fchmod@plt+0x238d0>
lea    0x2c(%esp),%ebp
jmp    806e9b8 <fchmod@plt+0x23878>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804ad50 <acl_get_entry@plt>
test   %eax,%eax
jle    806ea10 <fchmod@plt+0x238d0>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a8d0 <acl_get_tag_type@plt>
test   %eax,%eax
js     806ea16 <fchmod@plt+0x238d6>
cmpl   $0x2,0x2c(%esp)
jne    806e9a0 <fchmod@plt+0x23860>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804ae20 <acl_get_qualifier@plt>
test   %eax,%eax
je     806ea16 <fchmod@plt+0x238d6>
mov    (%eax),%ecx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   804b0f0 <acl_free@plt>
mov    0x1c(%esp),%ecx
cmp    0x54(%esp),%ecx
jne    806e9a0 <fchmod@plt+0x23860>
mov    0x58(%esp),%edx
mov    0x28(%esp),%eax
mov    %eax,(%edx)
mov    $0x1,%edx
jmp    806ea1f <fchmod@plt+0x238df>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
test   %eax,%eax
je     806ea1f <fchmod@plt+0x238df>
call   804acd0 <__errno_location@plt>
mov    (%eax),%edx
neg    %edx
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0xad16(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xad46(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad2d(%ebx),%eax
movl   $0x24,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
lea    -0xad16(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xad46(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xad29(%ebx),%eax
movl   $0x25,0x8(%esp)
mov    %eax,(%esp)
call   8062060 <fchmod@plt+0x16f20>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    806ead0 <fchmod@plt+0x23990>
cmp    %ebp,%ecx
ja     806eb08 <fchmod@plt+0x239c8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    806eab8 <fchmod@plt+0x23978>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     806eaf8 <fchmod@plt+0x239b8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806eb18 <fchmod@plt+0x239d8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    806eb88 <fchmod@plt+0x23a48>
cmp    %edx,%eax
jb     806eb88 <fchmod@plt+0x23a48>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     806eb98 <fchmod@plt+0x23a58>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    806eb79 <fchmod@plt+0x23a39>
cmp    (%esp),%esi
je     806eb98 <fchmod@plt+0x23a58>
mov    %edi,%eax
xor    %edx,%edx
jmp    806eafc <fchmod@plt+0x239bc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    806eafc <fchmod@plt+0x239bc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    806ebf8 <fchmod@plt+0x23ab8>
cmp    %edi,%esi
jbe    806ec30 <fchmod@plt+0x23af0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     806ec50 <fchmod@plt+0x23b10>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806ec60 <fchmod@plt+0x23b20>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     806ecf8 <fchmod@plt+0x23bb8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    806ec41 <fchmod@plt+0x23b01>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    806ebeb <fchmod@plt+0x23aab>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     806ece4 <fchmod@plt+0x23ba4>
cmp    %eax,0xc(%esp)
jb     806ece0 <fchmod@plt+0x23ba0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    806ecbe <fchmod@plt+0x23b7e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    806ecbe <fchmod@plt+0x23b7e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     806ec11 <fchmod@plt+0x23ad1>
jmp    806ec21 <fchmod@plt+0x23ae1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x13f99,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x399c(%ebx),%esi
call   804a494 <_init>
lea    -0x39a4(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     806ed69 <fchmod@plt+0x23c29>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x39a4(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    806ed48 <fchmod@plt+0x23c08>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    806ed80 <fchmod@plt+0x23c40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x13f1e,%ebx
sub    $0x8,%esp
call   804a7c0 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   804b3f0 <fchmod@plt+0x2b0>
add    $0x13f07,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    %eax,(%eax)
add    (%eax),%al
xor    (%eax),%dh
xor    $0x0,%al
and    %ah,(%eax)
and    $0x7332312d,%eax
and    %ah,0x2b000a73
fs
push   $0x61630056
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x7325203a,0x67(%esi),%ebp
or     (%eax),%al
cs
cs
das
jae    806ee5d <_IO_stdin_used+0x9d>
arpl   %bp,(%edi)
jne    806ee53 <_IO_stdin_used+0x93>
gs
jbe    806ee21 <_IO_stdin_used+0x61>
jne    806ee58 <_IO_stdin_used+0x98>
gs
jbe    806ee58 <_IO_stdin_used+0x98>
fs
insl   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jb     806ee27 <_IO_stdin_used+0x67>
jne    806ee77 <_IO_stdin_used+0xb7>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%edx),%cl
add    %ah,0x62(%ebp,%eiz,2)
jne    806ee85 <_IO_stdin_used+0xc5>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806ee24 <_IO_stdin_used+0x64>
jbe    806ee8b <_IO_stdin_used+0xcb>
jb     806ee9b <_IO_stdin_used+0xdb>
imul   $0x61735500,0x6e(%edi),%ebp
cmp    %gs:(%bx,%si),%ah
jne    806ee99 <_IO_stdin_used+0xd9>
gs
jbe    806ee99 <_IO_stdin_used+0xd9>
fs
insl   (%dx),%es:(%edi)
and    %bl,0x2d(%ebx)
sub    $0x706c6568,%eax
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x73726576,%eax
imul   $0x2d5b205d,0x6e(%edi),%ebp
sub    $0x75626564,%eax
addr16 pop %ebp
and    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %bl,0x43(%ebx)
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %cl,0x50(%edi)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
pop    %ebp
or     (%eax),%al
jb     806eeec <_IO_stdin_used+0x12c>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
sbb    %ebp,%esi
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
and    $0xee,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
xor    %bh,%cl
push   %es
or     %ah,(%eax)
adc    $0x7,%al
or     %dh,-0x1ff7f8f4(%eax)
std
push   %es
or     %al,%al
add    (%edi),%al
or     %dl,(%eax)
or     %al,(%edi)
or     %ch,0x17c00807(%esi,%edx,1)
pop    %es
or     %bl,(%eax)
out    %eax,(%dx)
push   %es
or     %cl,(%eax)
out    %eax,(%dx)
push   %es
or     %bl,(%edi)
out    %al,(%dx)
push   %es
or     %ah,(%eax)
mov    $0x4,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi,%ebp,8)
push   %es
or     %al,(%eax)
mov    $0x4,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x3a(%eax)
and    %ah,0x4e000a73
cmp    (%eax),%ah
and    $0x4c000a73,%eax
cmp    (%eax),%ah
and    $0x53000a69,%eax
cmp    (%eax),%ah
and    $0x45000a73,%eax
cmp    (%eax),%ah
and    $0x73253d73,%eax
or     (%eax),%al
das
fs
gs
jbe    806ef82 <_IO_stdin_used+0x1c2>
add    %ch,(%edi)
jae    806efd0 <_IO_stdin_used+0x210>
jae    806ef88 <_IO_stdin_used+0x1c8>
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73257b73
jge    806efa2 <_IO_stdin_used+0x1e2>
cmp    $0x22732522,%eax
or     (%eax),%al
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
pop    %edi
add    %ah,0x63(%ecx)
gs cmp %fs:%gs:0x3a(%esi),%ch
jo     806efb5 <_IO_stdin_used+0x1f5>
jno    806efb7 <_IO_stdin_used+0x1f7>
jb     806eff7 <_IO_stdin_used+0x237>
push   %eax
cmp    0x56(%edx),%dl
push   $0x76656400
imul   $0x726c6120,0x65(%ebx),%esp
gs
popa
fs
jns    806efb4 <_IO_stdin_used+0x1f4>
jae    806f006 <_IO_stdin_used+0x246>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6564000a,0x64(%ebp),%esp
jbe    806f00c <_IO_stdin_used+0x24c>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x6f(%esi)
je     806efcf <_IO_stdin_used+0x20f>
outsw  %ds:(%esi),(%dx)
jne    806f021 <_IO_stdin_used+0x261>
or     %fs:(%eax),%al
das
jae    806f032 <_IO_stdin_used+0x272>
jae    806efbb <_IO_stdin_used+0x1fb>
jae    806f036 <_IO_stdin_used+0x276>
jae    806f02f <_IO_stdin_used+0x26f>
popa
je     806f02a <_IO_stdin_used+0x26a>
and    %ch,0x6f(%esi)
je     806efe7 <_IO_stdin_used+0x227>
outsw  %ds:(%esi),(%dx)
jne    806f039 <_IO_stdin_used+0x279>
or     %fs:(%eax),%al
jo     806f042 <_IO_stdin_used+0x282>
outsl  %ds:(%esi),(%dx)
jo     806f038 <_IO_stdin_used+0x278>
jb     806f049 <_IO_stdin_used+0x289>
jns    806efd7 <_IO_stdin_used+0x217>
jae    806f052 <_IO_stdin_used+0x292>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6b6e7500,0x6b(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     806f054 <_IO_stdin_used+0x294>
and    %dh,0x75(%ecx)
gs
jb     806f065 <_IO_stdin_used+0x2a5>
and    %dh,0x70(%ecx,%edi,2)
or     %gs:(%eax),%al
das
jb     806f06b <_IO_stdin_used+0x2ab>
outsb  %ds:(%esi),(%dx)
das
jne    806f05e <_IO_stdin_used+0x29e>
gs
jbe    806f02c <_IO_stdin_used+0x26c>
jno    806f074 <_IO_stdin_used+0x2b4>
gs
jne    806f067 <_IO_stdin_used+0x2a7>
bound  %ebp,%cs:0x6e(%ecx)
add    %ch,(%edi)
jb     806f07f <_IO_stdin_used+0x2bf>
outsb  %ds:(%esi),(%dx)
das
jne    806f072 <_IO_stdin_used+0x2b2>
gs
jbe    806f040 <_IO_stdin_used+0x280>
fs
popa
je     806f076 <_IO_stdin_used+0x2b6>
add    %ch,(%edi)
jb     806f08e <_IO_stdin_used+0x2ce>
outsb  %ds:(%esi),(%dx)
das
jne    806f081 <_IO_stdin_used+0x2c1>
gs
jbe    806f04f <_IO_stdin_used+0x28f>
insb   (%dx),%es:(%edi)
imul   $0x722f0073,0x6b(%esi),%ebp
jne    806f098 <_IO_stdin_used+0x2d8>
das
jne    806f091 <_IO_stdin_used+0x2d1>
gs
jbe    806f05f <_IO_stdin_used+0x29f>
je     806f093 <_IO_stdin_used+0x2d3>
addr16 jae 806f035 <_IO_stdin_used+0x275>
das
jb     806f0ad <_IO_stdin_used+0x2ed>
outsb  %ds:(%esi),(%dx)
das
jne    806f0a0 <_IO_stdin_used+0x2e0>
gs
jbe    806f06e <_IO_stdin_used+0x2ae>
ja     806f0a2 <_IO_stdin_used+0x2e2>
je     806f0a6 <_IO_stdin_used+0x2e6>
push   $0x206f6e00
fs
gs
jbe    806f0b5 <_IO_stdin_used+0x2f5>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x6f(%esi)
jne    806f0c6 <_IO_stdin_used+0x306>
or     %fs:(%eax),%al
and    $0x3d732573,%eax
daa
and    $0xa2773,%eax
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
push   %ebp
inc    %edx
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x49(%edx,%edx,2)
push   %esi
inc    %ebp
push   %edx
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %al,0x54(%ecx)
push   %esp
push   %edx
add    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x45(%ebx)
push   %edx
dec    %esi
inc    %ebp
dec    %esp
push   %ebx
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x55(%ebx)
inc    %edx
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
push   %ebx
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x49(%edx,%edx,2)
push   %esi
inc    %ebp
push   %edx
push   %ebx
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %al,0x54(%ecx)
push   %esp
push   %edx
push   %ebx
add    %ah,0x4a414d73
dec    %edi
push   %edx
cmp    $0x250a6425,%eax
jae    806f12f <_IO_stdin_used+0x36f>
dec    %ecx
dec    %esi
dec    %edi
push   %edx
cmp    $0xa6425,%eax
and    $0x64253a64,%eax
or     (%eax),%al
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x74(%ecx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x73252720,0x65(%ebx),%esp
daa
cmp    (%edx),%cl
add    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x45(%ebx)
push   %edx
dec    %esi
inc    %ebp
dec    %esp
cmp    $0x7325223d,%eax
and    (%edx),%cl
add    %ch,0x6f(%ebp)
fs
popa
insb   (%dx),%es:(%edi)
imul   $0x73657200,0x73(%ecx),%esp
outsl  %ds:(%esi),(%dx)
jne    806f1a0 <_IO_stdin_used+0x3e0>
arpl   %sp,0x0(%ebp)
fs
jb     806f19d <_IO_stdin_used+0x3dd>
jbe    806f19b <_IO_stdin_used+0x3db>
jb     806f138 <_IO_stdin_used+0x378>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    806f1a9 <_IO_stdin_used+0x3e9>
add    %dh,%gs:0x75(%ecx)
gs
jb     806f1bd <_IO_stdin_used+0x3fd>
add    %ah,0x74(%ecx)
je     806f1bb <_IO_stdin_used+0x3fb>
imul   $0x772d6574,0x75(%edx),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x63,(%eax),%eax
insb   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
jne    806f1cb <_IO_stdin_used+0x40b>
sub    $0x65006264,%eax
js     806f1d2 <_IO_stdin_used+0x412>
outsl  %ds:(%esi),(%dx)
jb     806f1d9 <_IO_stdin_used+0x419>
sub    $0x64006264,%eax
gs
jbe    806f1d6 <_IO_stdin_used+0x416>
arpl   %sp,0x2d(%ebp)
imul   $0x69662d66,0x6f(%ebp,%ebp,1),%esp
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x78(%ebp)
jo     806f1ee <_IO_stdin_used+0x42e>
jb     806f1f5 <_IO_stdin_used+0x435>
add    %ah,0x78(%ebp)
jo     806f1f5 <_IO_stdin_used+0x435>
jb     806f1fc <_IO_stdin_used+0x43c>
sub    $0x66657270,%eax
imul   $0x6f666e69,0x0(%eax),%edi
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    806f1fc <_IO_stdin_used+0x43c>
cmp    %gs:(%bx,%si),%ah
jne    806f205 <_IO_stdin_used+0x445>
gs
jbe    806f205 <_IO_stdin_used+0x445>
fs
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %cl,0x50(%edi)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     (%eax),%ah
and    %ch,0x6575712d
jb     806f236 <_IO_stdin_used+0x476>
cmp    $0x7079743c,%eax
gs and %ah,%ds:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ecx)
gs
jb     806f24f <_IO_stdin_used+0x48f>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x666e6920,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jb     806f251 <_IO_stdin_used+0x491>
popa
je     806f250 <_IO_stdin_used+0x490>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x646f6e20,0x65(%ebx),%esp
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20202020,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806f2ae <_IO_stdin_used+0x4ee>
imul   $0x20676e69,0x74(%esi),%ebp
je     806f2b7 <_IO_stdin_used+0x4f7>
and    %ch,0x6f(%esi)
fs or  %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%eax)
je     806f2c0 <_IO_stdin_used+0x500>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x79(%ebx)
jae    806f291 <_IO_stdin_used+0x4d1>
fs
gs
jbe    806f2de <_IO_stdin_used+0x51e>
arpl   %sp,0x20(%ebp)
jo     806f2db <_IO_stdin_used+0x51b>
je     806f2e4 <_IO_stdin_used+0x524>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     806f2ed <_IO_stdin_used+0x52d>
jb     806f2fe <_IO_stdin_used+0x53e>
jns    806f2ac <_IO_stdin_used+0x4ec>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     806f306 <_IO_stdin_used+0x546>
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x6f727020,0x65(%ebx),%esp
jo     806f311 <_IO_stdin_used+0x551>
jb     806f322 <_IO_stdin_used+0x562>
imul   $0x2020200a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    806f33f <_IO_stdin_used+0x57f>
jae    806f2e6 <_IO_stdin_used+0x526>
and    %ah,(%eax)
sub    $0x7461702d,%eax
push   $0x79733c3d
jae    806f35a <_IO_stdin_used+0x59a>
popa
je     806f355 <_IO_stdin_used+0x595>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x79(%ebx)
jae    806f31d <_IO_stdin_used+0x55d>
fs
gs
jbe    806f36a <_IO_stdin_used+0x5aa>
arpl   %sp,0x20(%ebp)
jo     806f367 <_IO_stdin_used+0x5a7>
je     806f370 <_IO_stdin_used+0x5b0>
and    %dh,0x73(%ebp)
gs and %ah,%fs:%gs:0x6f(%esi)
jb     806f332 <_IO_stdin_used+0x572>
jno    806f389 <_IO_stdin_used+0x5c9>
gs
jb     806f390 <_IO_stdin_used+0x5d0>
and    %ch,0x72(%edi)
and    %ah,0x74(%ecx)
je     806f391 <_IO_stdin_used+0x5d1>
imul   $0x77206574,0x75(%edx),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x20,(%edx),%ecx
and    %ch,0x6d616e2d
gs
cmp    $0x6d616e3c,%eax
gs and %ah,%ds:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x72(%edi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6d616e20,0x6b(%esi),%ebp
and    %dh,%gs:0x73(%ebp)
gs and %ah,%fs:%gs:0x6f(%esi)
jb     806f385 <_IO_stdin_used+0x5c5>
jno    806f3dc <_IO_stdin_used+0x61c>
gs
jb     806f3e3 <_IO_stdin_used+0x623>
and    %ch,0x72(%edi)
and    %ah,0x74(%ecx)
je     806f3e4 <_IO_stdin_used+0x624>
imul   $0x77206574,0x75(%edx),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x20,(%edx),%ecx
and    %ch,0x6f6f722d
je     806f3a6 <_IO_stdin_used+0x5e6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806f40e <_IO_stdin_used+0x64e>
gs
jo     806f404 <_IO_stdin_used+0x644>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x76(%ebp,%eiz,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806f3d0 <_IO_stdin_used+0x610>
je     806f421 <_IO_stdin_used+0x661>
and    %dh,0x61(%eax)
je     806f41f <_IO_stdin_used+0x65f>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    806f3c8 <_IO_stdin_used+0x608>
and    %ah,(%eax)
sub    $0x7474612d,%eax
jb     806f430 <_IO_stdin_used+0x670>
bound  %esi,0x74(%ebp)
gs
sub    $0x6b6c6177,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x6c6c6120,0x74(%esi),%ebp
and    %ch,0x65(%ebx)
jns    806f409 <_IO_stdin_used+0x649>
insl   (%dx),%es:(%edi)
popa
je     806f450 <_IO_stdin_used+0x690>
push   $0x77207365
push   $0x20656c69
ja     806f45a <_IO_stdin_used+0x69a>
insb   (%dx),%es:(%edi)
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x6c(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x68(%ebx)
popa
imul   $0x20202020,0xa(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x66(%edi)
and    %dh,0x61(%eax)
jb     806f498 <_IO_stdin_used+0x6d8>
outsb  %ds:(%esi),(%dx)
je     806f456 <_IO_stdin_used+0x696>
fs
gs
jbe    806f4a3 <_IO_stdin_used+0x6e3>
arpl   %sp,0x73(%ebp)
or     (%eax),%ah
and    %ch,0x7665642d
imul   $0x2d64692d,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
sub    $0x6966,%ax
insb   (%dx),%es:(%edi)
gs
cmp    $0x6c69663c,%eax
gs and %dh,%ds:%gs:0x72(%eax)
imul   $0x6a616d20,0x74(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806f4a1 <_IO_stdin_used+0x6e1>
insl   (%dx),%es:(%edi)
imul   $0x666f2072,0x6f(%esi),%ebp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6e6f6320,0x65(%ebx),%esp
je     806f4dd <_IO_stdin_used+0x71d>
imul   $0x7420676e,0x69(%esi),%ebp
push   $0x66207369
imul   $0x2d2d2020,0xa(%ebp,%eiz,2),%ebp
gs
js     806f503 <_IO_stdin_used+0x743>
outsl  %ds:(%esi),(%dx)
jb     806f50a <_IO_stdin_used+0x74a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x78(%ebp)
jo     806f51c <_IO_stdin_used+0x75c>
jb     806f523 <_IO_stdin_used+0x763>
and    %ch,0x65(%ebx)
jns    806f4e3 <_IO_stdin_used+0x723>
jbe    806f517 <_IO_stdin_used+0x757>
insb   (%dx),%es:(%edi)
jne    806f51e <_IO_stdin_used+0x75e>
and    %dh,0x61(%eax)
imul   $0x2d20200a,0x73(%edx),%esi
sub    $0x6f707865,%eax
jb     806f53e <_IO_stdin_used+0x77e>
sub    $0x66657270,%eax
imul   $0x20202020,0x20(%eax),%edi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x78(%ebp)
jo     806f550 <_IO_stdin_used+0x790>
jb     806f557 <_IO_stdin_used+0x797>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jns    806f50c <_IO_stdin_used+0x74c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%edi)
je     806f55d <_IO_stdin_used+0x79d>
and    %ah,0x20(%ecx)
jo     806f56c <_IO_stdin_used+0x7ac>
imul   $0x2020,%gs:0xa(%eax),%di
sub    $0x7078652d,%eax
outsl  %ds:(%esi),(%dx)
jb     806f57d <_IO_stdin_used+0x7bd>
sub    $0x20206264,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
js     806f58f <_IO_stdin_used+0x7cf>
outsl  %ds:(%esi),(%dx)
jb     806f596 <_IO_stdin_used+0x7d6>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806f591 <_IO_stdin_used+0x7d1>
outsb  %ds:(%esi),(%dx)
je     806f54f <_IO_stdin_used+0x78f>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x64(%ebp)
gs
jbe    806f55b <_IO_stdin_used+0x79b>
fs
popa
je     806f5a0 <_IO_stdin_used+0x7e0>
bound  %esp,0x73(%ecx)
or     %gs:(%eax),%ah
and    %ch,0x656c632d
popa
outsb  %ds:(%esi),(%dx)
jne    806f5bf <_IO_stdin_used+0x7ff>
sub    $0x20206264,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ebx)
gs
popa
outsb  %ds:(%esi),(%dx)
jne    806f5d8 <_IO_stdin_used+0x818>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x64(%ebp)
gs
jbe    806f592 <_IO_stdin_used+0x7d2>
fs
popa
je     806f5d7 <_IO_stdin_used+0x817>
bound  %esp,0x73(%ecx)
or     %gs:(%eax),%ah
and    %ch,0x6c65682d
jo     806f58e <_IO_stdin_used+0x7ce>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x2d2d202c,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x2d2d202c,%eax
jo     806f606 <_IO_stdin_used+0x846>
je     806f60f <_IO_stdin_used+0x84f>
cmp    $0x726f202c,%eax
and    %ah,0x62(%ecx)
jae    806f620 <_IO_stdin_used+0x860>
insb   (%dx),%es:(%edi)
jne    806f628 <_IO_stdin_used+0x868>
and    %dh,%gs:0x61(%eax)
je     806f622 <_IO_stdin_used+0x862>
and    %ch,0x6e(%ecx)
and    %ch,(%edi)
fs
gs
jbe    806f5f2 <_IO_stdin_used+0x832>
and    %ch,0x72(%edi)
and    %ch,(%edi)
jae    806f643 <_IO_stdin_used+0x883>
jae    806f5ec <_IO_stdin_used+0x82c>
gs
js     806f63f <_IO_stdin_used+0x87f>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
or     %cs:(%eax),%al
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6261202c,0x65(%ebx),%esp
jae    806f65b <_IO_stdin_used+0x89b>
insb   (%dx),%es:(%edi)
jne    806f663 <_IO_stdin_used+0x8a3>
and    %dh,%gs:0x61(%eax)
je     806f65d <_IO_stdin_used+0x89d>
and    %ch,0x6e(%ecx)
and    %ch,(%edi)
fs
gs
jbe    806f62d <_IO_stdin_used+0x86d>
and    %ch,0x72(%edi)
and    %ch,(%edi)
jae    806f67e <_IO_stdin_used+0x8be>
jae    806f627 <_IO_stdin_used+0x867>
gs
js     806f67a <_IO_stdin_used+0x8ba>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
or     %cs:(%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x74(%ecx)
and    %dh,0x61(%eax)
jb     806f68a <_IO_stdin_used+0x8ca>
outsb  %ds:(%esi),(%dx)
je     806f648 <_IO_stdin_used+0x888>
fs
gs
jbe    806f695 <_IO_stdin_used+0x8d5>
arpl   %sp,0x20(%ebp)
daa
and    $0xa3a2773,%eax
add    %al,(%eax)
add    %cl,(%edx)
push   %ebp
fs
gs
jbe    806f69f <_IO_stdin_used+0x8df>
fs
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %dh,0x74(%ebx)
popa
jb     806f6bf <_IO_stdin_used+0x8ff>
jae    806f66d <_IO_stdin_used+0x8ad>
ja     806f6b8 <_IO_stdin_used+0x8f8>
je     806f6b9 <_IO_stdin_used+0x8f9>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x65707320,0x65(%ebx),%esp
arpl   %bp,0x66(%ecx)
imul   $0x20796220,0x64(%ebp),%esp
je     806f6d4 <_IO_stdin_used+0x914>
and    %ah,%gs:0x76(%ebp,%eiz,2)
jo     806f6d4 <_IO_stdin_used+0x914>
je     806f6dd <_IO_stdin_used+0x91d>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     0x61(%edi),%dh
insb   (%dx),%es:(%edi)
imul   $0x75,0x20(%ebx),%esi
jo     806f6a8 <_IO_stdin_used+0x8e8>
je     806f6f2 <_IO_stdin_used+0x932>
and    %ah,%gs:0x68(%ebx)
popa
imul   $0x7020666f,0x20(%esi),%ebp
popa
jb     806f6fe <_IO_stdin_used+0x93e>
outsb  %ds:(%esi),(%dx)
je     806f6bc <_IO_stdin_used+0x8fc>
fs
gs
jbe    806f709 <_IO_stdin_used+0x949>
arpl   %sp,0x73(%ebp)
and    %cl,%cs:0x74(%ecx)
and    %dh,0x72(%eax)
imul   $0x6f662073,0x74(%esi),%ebp
jb     806f6d3 <_IO_stdin_used+0x913>
gs
jbe    806f71b <_IO_stdin_used+0x95b>
jb     806f731 <_IO_stdin_used+0x971>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x756f660a,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
fs
sub    $0x20,%al
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%eax)
jae    806f742 <_IO_stdin_used+0x982>
imul   $0x74612065,0x6c(%edx),%esp
je     806f74a <_IO_stdin_used+0x98a>
imul   $0x20736574,0x75(%edx),%esp
imul   $0x20656874,0x20(%esi),%ebp
jne    806f74c <_IO_stdin_used+0x98c>
gs
jbe    806f70b <_IO_stdin_used+0x94b>
jb     806f762 <_IO_stdin_used+0x9a2>
insb   (%dx),%es:(%edi)
gs
jae    806f711 <_IO_stdin_used+0x951>
imul   $0x20,0x79(%ebp),%esp
outsw  %ds:(%esi),(%dx)
jb     806f766 <_IO_stdin_used+0x9a6>
popa
je     806f72a <_IO_stdin_used+0x96a>
or     0x20(%ecx),%al
jb     806f776 <_IO_stdin_used+0x9b6>
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     806f76e <_IO_stdin_used+0x9ae>
push   $0x6163202c
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     806f789 <_IO_stdin_used+0x9c9>
jae    806f781 <_IO_stdin_used+0x9c1>
and    %ah,%fs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x74(%ecx)
je     806f79b <_IO_stdin_used+0x9db>
imul   $0x20736574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x646e610a,0x65(%ebx),%esp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x74(%ecx)
je     806f7bc <_IO_stdin_used+0x9fc>
imul   $0x20736574,0x75(%edx),%esp
data16
jb     806f7c3 <_IO_stdin_used+0xa03>
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
and    %dh,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %dh,%gs:0x61(%eax)
jb     806f7ca <_IO_stdin_used+0xa0a>
outsb  %ds:(%esi),(%dx)
je     806f788 <_IO_stdin_used+0x9c8>
fs
gs
jbe    806f7d5 <_IO_stdin_used+0xa15>
arpl   %sp,0x2e(%ebp)
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x75(%ecx)
gs
jb     806f7f2 <_IO_stdin_used+0xa32>
and    %dh,0x79(%ebx)
jae    806f7e4 <_IO_stdin_used+0xa24>
jae    806f7a0 <_IO_stdin_used+0x9e0>
outsl  %ds:(%esi),(%dx)
jb     806f7a3 <_IO_stdin_used+0x9e3>
je     806f7ed <_IO_stdin_used+0xa2d>
and    %dh,%gs:0x64(%ebp)
gs
jbe    806f7ac <_IO_stdin_used+0x9ec>
fs
popa
je     806f7f1 <_IO_stdin_used+0xa31>
bound  %esp,0x73(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
enter  $0x4bd,$0x8
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x4227f7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
mov    $0xba,%al
add    $0x8,%al
add    %bh,-0x4547f7fc(%esi)
add    $0x8,%al
cwtl
mov    $0xbbc80804,%ebx
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
cmp    %bh,0x4be0008(%esp,%eax,1)
or     %al,(%eax)
mov    $0xbe000804,%esi
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
push   %eax
mov    $0xbe000804,%esp
add    $0x8,%al
mov    $0xbc,%al
add    $0x8,%al
adc    %bh,-0x4247f7fc(%ebp)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x41fff7fc(%esi)
add    $0x8,%al
add    %bh,-0x420ff7fc(%esi)
add    $0x8,%al
mov    %esi,%edi
push   %es
or     %ah,%bl
insl   (%dx),%es:(%edi)
pop    %es
or     %bl,(%edi)
icebp
push   %es
or     %ch,(%eax)
icebp
push   %es
or     %dh,(%ecx)
icebp
push   %es
or     %dl,0x77(%esi)
pop    %es
or     %bh,(%eax)
icebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
jo     806f86a <_IO_stdin_used+0xaaa>
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
push   %esi
insl   (%dx),%es:(%edi)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
aas
icebp
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
inc    %ebp
icebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
push   %esp
icebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
pop    %edi
icebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
fisubr 0x7(%ebx)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
imul   $0x10806,%ecx,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %bh,-0xf(%ebx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
(bad)
icebp
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
and    $0xee,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
pop    %ds
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
nop
icebp
push   %es
or     %ah,(%eax)
mov    $0xf7740804,%edx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     806f965 <_IO_stdin_used+0xba5>
jo     806f9b9 <_IO_stdin_used+0xbf9>
imul   $0x6567656c,0x69(%esi),%esi
jae    806f970 <_IO_stdin_used+0xbb0>
jb     806f9b7 <_IO_stdin_used+0xbf7>
jno    806f9c9 <_IO_stdin_used+0xc09>
imul   $0x65000a64,0x65(%edx),%esi
insb   (%dx),%es:(%edi)
cmp    0x53(%ebx),%dh
push   %edx
jo     806f99c <_IO_stdin_used+0xbdc>
insl   (%dx),%es:(%edi)
cmp    0x0(%eax),%ch
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,(%edi)
and    $0xa2773,%eax
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    806f9fe <_IO_stdin_used+0xc3e>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    806f9f5 <_IO_stdin_used+0xc35>
or     (%eax),%al
jne    806fa02 <_IO_stdin_used+0xc42>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     806fa07 <_IO_stdin_used+0xc47>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jo     806fa21 <_IO_stdin_used+0xc61>
imul   $0x7865000a,0x6e(%edi),%ebp
imul   $0x702d676f,0x6c(%eax,%eax,1),%esi
jb     806fa27 <_IO_stdin_used+0xc67>
outsl  %ds:(%esi),(%dx)
jb     806fa2a <_IO_stdin_used+0xc6a>
je     806fa3c <_IO_stdin_used+0xc7c>
add    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     806f9f6 <_IO_stdin_used+0xc36>
gs
js     806fa31 <_IO_stdin_used+0xc71>
arpl   %bp,0x75657571
add    %dh,%gs:0x74(%ebx)
popa
jb     806fa4d <_IO_stdin_used+0xc8d>
sub    $0x63657865,%eax
sub    $0x75657571,%eax
add    %dh,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
add    %dh,%fs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
sub    $0x656c7572,%eax
jae    806f9f9 <_IO_stdin_used+0xc39>
outsb  %gs:(%esi),(%dx)
jbe    806f9fd <_IO_stdin_used+0xc3d>
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
jb     806fa69 <_IO_stdin_used+0xca9>
outsb  %ds:(%esi),(%dx)
sub    $0x78616d,%eax
je     806fa75 <_IO_stdin_used+0xcb5>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    806fa85 <_IO_stdin_used+0xcc5>
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806fa89 <_IO_stdin_used+0xcc9>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x64(%ebp)
gs
jbe    806fa43 <_IO_stdin_used+0xc83>
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,0x78(%ebp)
jo     806fa95 <_IO_stdin_used+0xcd5>
arpl   %si,0x3c(%eax,%eiz,1)
dec    %ebx
inc    %ebp
pop    %ecx
ds
cmp    $0x6c61763c,%eax
jne    806faa4 <_IO_stdin_used+0xce4>
and    %ch,%ds:0x6e(%ecx)
jae    806fab9 <_IO_stdin_used+0xcf9>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
push   %ebp
jae    806fab8 <_IO_stdin_used+0xcf8>
cmp    %gs:(%bx,%si),%ah
jne    806fac1 <_IO_stdin_used+0xd01>
gs
jbe    806fac1 <_IO_stdin_used+0xd01>
fs
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806fada <_IO_stdin_used+0xd1a>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
or     (%eax),%ah
and    %ch,0x6978652d
je     806fa9c <_IO_stdin_used+0xcdc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x63757274,0x73(%esi),%ebp
je     806fab7 <_IO_stdin_used+0xcf7>
je     806fb01 <_IO_stdin_used+0xd41>
and    %ah,%gs:0x65(%ecx,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jne    806fb1c <_IO_stdin_used+0xd5c>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x6c2d2d20,0x20(%edx,%ecx,1),%esi
outsl  %ds:(%esi),(%dx)
addr16 sub $0x6f697270,%eax
jb     806fb2d <_IO_stdin_used+0xd6d>
je     806fb3f <_IO_stdin_used+0xd7f>
cmp    $0x76656c3c,%eax
gs
insb   (%dx),%es:(%edi)
and    %ah,%ds:(%eax)
and    %dh,0x65(%ebx)
je     806faf5 <_IO_stdin_used+0xd35>
je     806fb3f <_IO_stdin_used+0xd7f>
and    %dh,%gs:0x64(%ebp)
gs
jbe    806fafe <_IO_stdin_used+0xd3e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
jbe    806fb4b <_IO_stdin_used+0xd8b>
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     806fb0c <_IO_stdin_used+0xd4c>
je     806fb56 <_IO_stdin_used+0xd96>
and    %ah,%gs:0x65(%ecx,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ch,0x6f74732d
jo     806fb2d <_IO_stdin_used+0xd6d>
gs
js     806fb68 <_IO_stdin_used+0xda8>
arpl   %bp,0x75657571
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     806fb39 <_IO_stdin_used+0xd79>
gs
js     806fb81 <_IO_stdin_used+0xdc1>
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     806fb9a <_IO_stdin_used+0xdda>
sub    $0x20,%al
jno    806fba0 <_IO_stdin_used+0xde0>
gs
jne    806fb93 <_IO_stdin_used+0xdd3>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806fb3e <_IO_stdin_used+0xd7e>
and    %ah,(%eax)
sub    $0x6174732d,%eax
jb     806fbb1 <_IO_stdin_used+0xdf1>
sub    $0x63657865,%eax
sub    $0x75657571,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %ah,%gs:0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     806fbd0 <_IO_stdin_used+0xe10>
sub    $0x20,%al
data16
insb   (%dx),%es:(%edi)
jne    806fbd6 <_IO_stdin_used+0xe16>
push   $0x65757120
jne    806fbcf <_IO_stdin_used+0xe0f>
or     (%eax),%ah
and    %ch,0x6c65722d
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x75(%edx)
insb   (%dx),%es:(%edi)
gs
jae    806fbb3 <_IO_stdin_used+0xdf3>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
gs
jae    806fbab <_IO_stdin_used+0xdeb>
and    %ah,(%eax)
sub    $0x6f72702d,%eax
jo     806fc0f <_IO_stdin_used+0xe4f>
jb     806fc20 <_IO_stdin_used+0xe60>
jns    806fbeb <_IO_stdin_used+0xe2b>
cmp    $0x4b,%al
inc    %ebp
pop    %ecx
ds
cmp    $0x6c61763c,%eax
jne    806fc1f <_IO_stdin_used+0xe5f>
and    %dh,%ds:0x65(%ebx)
je     806fbe0 <_IO_stdin_used+0xe20>
popa
and    %ah,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     806fc33 <_IO_stdin_used+0xe73>
jb     806fc44 <_IO_stdin_used+0xe84>
jns    806fbf2 <_IO_stdin_used+0xe32>
outsw  %ds:(%esi),(%dx)
jb     806fbf6 <_IO_stdin_used+0xe36>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     806fc53 <_IO_stdin_used+0xe93>
or     (%eax),%ah
and    %ch,0x6968632d
insb   (%dx),%es:(%edi)
fs
jb     806fc51 <_IO_stdin_used+0xe91>
outsb  %ds:(%esi),(%dx)
sub    $0x3d78616d,%eax
cmp    $0x4e,%al
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
js     806fc69 <_IO_stdin_used+0xea9>
insl   (%dx),%es:(%edi)
jne    806fc70 <_IO_stdin_used+0xeb0>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x68(%ebx)
imul   $0x200a6e65,0x72(%esp,%eiz,2),%ebp
and    %ch,0x6d69742d
outsl  %gs:(%esi),(%dx)
jne    806fc96 <_IO_stdin_used+0xed6>
cmp    $0x6365733c,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
fs
jae    806fc6a <_IO_stdin_used+0xeaa>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
js     806fc9f <_IO_stdin_used+0xedf>
insl   (%dx),%es:(%edi)
jne    806fca6 <_IO_stdin_used+0xee6>
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
outsl  %ds:(%esi),(%dx)
jb     806fc6c <_IO_stdin_used+0xeac>
popa
and    %dh,0x65(%edx)
jo     806fcbe <_IO_stdin_used+0xefe>
jns    806fc5e <_IO_stdin_used+0xe9e>
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     806fc7d <_IO_stdin_used+0xebd>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806fce3 <_IO_stdin_used+0xf23>
imul   $0x69687420,0x74(%esi),%ebp
jae    806fc9a <_IO_stdin_used+0xeda>
push   $0x20706c65
je     806fce6 <_IO_stdin_used+0xf26>
js     806fcf7 <_IO_stdin_used+0xf37>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x600804c6(%eax)
movb   $0x68,(%eax,%ecx,1)
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
inc    %eax
movb   $0x68,(%eax,%ecx,1)
les    (%eax,%ecx,1),%eax
push   $0x280804c4
movb   $0x68,(%eax,%ecx,1)
les    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
loopne 806fcb7 <_IO_stdin_used+0xef7>
add    $0x8,%al
mov    %al,%ch
add    $0x8,%al
push   $0x680804c4
les    (%eax,%ecx,1),%eax
inc    %eax
lds    (%eax,%ecx,1),%eax
push   $0x680804c4
les    (%eax,%ecx,1),%eax
and    %al,%ch
add    $0x8,%al
lock les (%eax,%ecx,1),%eax
mov    $0xf9,%dl
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
mov    $0xf9,%bh
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %al,%ah
stc
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
aam    $0xf9
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
in     $0xf9,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
in     (%dx),%al
stc
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
into
out    %eax,(%dx)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
stc
stc
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
std
stc
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
or     %dl,%bh
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
pop    %ebp
cs
pop    %es
or     %ah,(%eax)
les    (%eax,%ecx,1),%eax
adc    %dl,%bh
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x5b73362d
and    $0x2e756c6c,%eax
and    $0x5d753630,%eax
and    %ah,0x2073382d
and    $0x25282073,%eax
jae    806fe35 <_IO_stdin_used+0x1075>
or     (%eax),%al
jo     806fe75 <_IO_stdin_used+0x10b5>
imul   $0x3a,0x73(%ebp),%esi
je     806fe50 <_IO_stdin_used+0x1090>
push   $0x72726500
outsl  %ds:(%esi),(%dx)
jb     806fe3e <_IO_stdin_used+0x107e>
arpl   %si,0x65(%edx)
popa
je     806fe8d <_IO_stdin_used+0x10cd>
outsb  %ds:(%esi),(%dx)
and    %ah,0x70(%di)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%esi)
cmp    (%eax),%ah
and    $0x2e000a6d,%eax
cs
das
jae    806feac <_IO_stdin_used+0x10ec>
arpl   %bp,(%edi)
jne    806fea2 <_IO_stdin_used+0x10e2>
gs
jbe    806fe70 <_IO_stdin_used+0x10b0>
jne    806fea7 <_IO_stdin_used+0x10e7>
gs
jbe    806fea7 <_IO_stdin_used+0x10e7>
fs
insl   (%dx),%es:(%edi)
sub    $0x696e6f6d,%eax
je     806febe <_IO_stdin_used+0x10fe>
jb     806fe7f <_IO_stdin_used+0x10bf>
arpl   %ax,(%eax)
popaw
imul   $0x6461206f,0x74(%eax,%eiz,1),%ebp
and    %ah,%fs:0x64(%esi)
and    %dh,0x20(%edi,%ebp,2)
gs
jo     806fed7 <_IO_stdin_used+0x1117>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    (%eax),%ah
and    $0x6b000a6d,%eax
gs
jb     806fee2 <_IO_stdin_used+0x1122>
gs
insb   (%dx),%es:(%edi)
add    %cl,0x45(%ebx)
push   %edx
dec    %esi
inc    %ebp
dec    %esp
and    %ch,0x65687420
and    %ch,0x65(%ebx)
jb     806fef6 <_IO_stdin_used+0x1136>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebp)
jbe    806fef4 <_IO_stdin_used+0x1134>
outsb  %ds:(%esi),(%dx)
je     806fe92 <_IO_stdin_used+0x10d2>
dec    %ebx
inc    %ebp
push   %edx
dec    %esi
inc    %ebp
dec    %esp
add    %dl,0x44(%ebp)
inc    %ebp
push   %esi
add    %ah,0x6e(%ebp)
jbe    806ff0b <_IO_stdin_used+0x114b>
jb     806ff13 <_IO_stdin_used+0x1153>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     806feaa <_IO_stdin_used+0x10ea>
jae    806ff21 <_IO_stdin_used+0x1161>
bound  %esi,0x79(%ebx)
jae    806ff25 <_IO_stdin_used+0x1165>
gs
insl   (%dx),%es:(%edi)
sub    $0x6374616d,%eax
push   $0x67617400
sub    $0x6374616d,%eax
push   $0x6e6f6d00
imul   $0x61735500,0x72(%edi,%ebp,2),%esi
cmp    %gs:(%bx,%si),%ah
jne    806ff39 <_IO_stdin_used+0x1179>
gs
jbe    806ff39 <_IO_stdin_used+0x1179>
fs
insl   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
outsb  %ds:(%esi),(%dx)
imul   $0x2d2d5b20,0x72(%edi,%ebp,2),%esi
jo     806ff5a <_IO_stdin_used+0x119a>
outsl  %ds:(%esi),(%dx)
jo     806ff50 <_IO_stdin_used+0x1190>
jb     806ff61 <_IO_stdin_used+0x11a1>
jns    806ff4c <_IO_stdin_used+0x118c>
and    %bl,0x2d(%ebx)
sub    $0x6e72656b,%eax
gs
insb   (%dx),%es:(%edi)
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x76656475,%eax
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x706c6568,%eax
pop    %ebp
or     (%eax),%ah
and    %ch,0x6f72702d
jo     806ff7b <_IO_stdin_used+0x11bb>
jb     806ff8c <_IO_stdin_used+0x11cc>
jns    806ff3a <_IO_stdin_used+0x117a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     806ff67 <_IO_stdin_used+0x11a7>
jo     806ffbb <_IO_stdin_used+0x11fb>
outsl  %ds:(%esi),(%dx)
jo     806ffb1 <_IO_stdin_used+0x11f1>
jb     806ffc2 <_IO_stdin_used+0x1202>
imul   $0x2d20200a,0x73(%ebp),%esp
sub    $0x6e72656b,%eax
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806fff0 <_IO_stdin_used+0x1230>
imul   $0x72656b20,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebp)
jbe    806fff2 <_IO_stdin_used+0x1232>
outsb  %ds:(%esi),(%dx)
je     8070003 <_IO_stdin_used+0x1243>
or     (%eax),%ah
and    %ch,0x6564752d
jbe    806ffba <_IO_stdin_used+0x11fa>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65647520,0x74(%esi),%ebp
jbe    806ffe6 <_IO_stdin_used+0x1226>
gs
jbe    807002e <_IO_stdin_used+0x126e>
outsb  %ds:(%esi),(%dx)
je     807003f <_IO_stdin_used+0x127f>
or     (%eax),%ah
and    %ch,0x6275732d
jae    807004f <_IO_stdin_used+0x128f>
jae    807004c <_IO_stdin_used+0x128c>
gs
insl   (%dx),%es:(%edi)
sub    $0x6374616d,%eax
push   $0x75733c3d
bound  %esi,0x79(%ebx)
jae    807005d <_IO_stdin_used+0x129d>
gs
insl   (%dx),%es:(%edi)
pop    %ebx
das
fs
gs
jbe    8070065 <_IO_stdin_used+0x12a5>
jns    8070063 <_IO_stdin_used+0x12a3>
gs
pop    %ebp
and    %ah,%ds:0x69(%esi)
insb   (%dx),%es:(%edi)
je     8070061 <_IO_stdin_used+0x12a1>
jb     807001e <_IO_stdin_used+0x125e>
gs
jbe    8070066 <_IO_stdin_used+0x12a6>
outsb  %ds:(%esi),(%dx)
je     8070077 <_IO_stdin_used+0x12b7>
and    %ah,0x79(%edx)
and    %dh,0x75(%ebx)
bound  %esi,0x79(%ebx)
jae    8070083 <_IO_stdin_used+0x12c3>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x6761742d
sub    $0x6374616d,%eax
push   $0x61743c3d
and    %ah,%ds:(%bx,%si)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     80700a6 <_IO_stdin_used+0x12e6>
jb     8070063 <_IO_stdin_used+0x12a3>
gs
jbe    80700ab <_IO_stdin_used+0x12eb>
outsb  %ds:(%esi),(%dx)
je     80700bc <_IO_stdin_used+0x12fc>
and    %ah,0x79(%edx)
and    %dh,0x67(%ecx,%eiz,2)
or     (%eax),%ah
and    %ch,0x6c65682d
jo     8070064 <_IO_stdin_used+0x12a4>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c697720,0x72(%edi,%ebp,2),%esi
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    80700df <_IO_stdin_used+0x131f>
and    %ah,%fs:0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     80700f5 <_IO_stdin_used+0x1335>
and    %ah,0x6f(%esi)
jb     80700c1 <_IO_stdin_used+0x1301>
add    %ah,0x72(%ebp)
jb     80700fb <_IO_stdin_used+0x133b>
jb     80700c8 <_IO_stdin_used+0x1308>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8070107 <_IO_stdin_used+0x1347>
and    %ah,0x72(%ebx)
gs
popa
je     8070104 <_IO_stdin_used+0x1344>
and    %ch,0x65(%esi)
je     8070110 <_IO_stdin_used+0x1350>
imul   $0x636f7320,0x6b(%esi),%ebp
imul   $0xa,0x74(%ebp),%esp
add    %ah,0x72(%ebp)
jb     8070123 <_IO_stdin_used+0x1363>
jb     80700f0 <_IO_stdin_used+0x1330>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     807012f <_IO_stdin_used+0x136f>
and    %ah,0x70(%ecx)
jo     8070131 <_IO_stdin_used+0x1371>
jns    80700e7 <_IO_stdin_used+0x1327>
jae    807013e <_IO_stdin_used+0x137e>
bound  %esi,0x79(%ebx)
jae    8070142 <_IO_stdin_used+0x1382>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     807013b <_IO_stdin_used+0x137b>
jb     80700f8 <_IO_stdin_used+0x1338>
daa
and    $0xa2773,%eax
add    %al,(%eax)
gs
jb     8070155 <_IO_stdin_used+0x1395>
outsl  %ds:(%esi),(%dx)
jb     8070120 <_IO_stdin_used+0x1360>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     807015f <_IO_stdin_used+0x139f>
and    %ah,0x70(%ecx)
jo     8070161 <_IO_stdin_used+0x13a1>
jns    8070117 <_IO_stdin_used+0x1357>
je     807015a <_IO_stdin_used+0x139a>
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
je     8070165 <_IO_stdin_used+0x13a5>
jb     8070122 <_IO_stdin_used+0x1362>
daa
and    $0xa2773,%eax
gs
jb     807017d <_IO_stdin_used+0x13bd>
outsl  %ds:(%esi),(%dx)
jb     8070148 <_IO_stdin_used+0x1388>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8070187 <_IO_stdin_used+0x13c7>
and    %dh,0x75(%ebx)
bound  %esi,0x63(%ebx)
jb     8070189 <_IO_stdin_used+0x13c9>
bound  %esp,0x20(%ebp)
je     8070194 <_IO_stdin_used+0x13d4>
and    %dh,0x64(%ebp)
gs
jbe    807014b <_IO_stdin_used+0x138b>
gs
jbe    8070193 <_IO_stdin_used+0x13d3>
outsb  %ds:(%esi),(%dx)
je     80701a4 <_IO_stdin_used+0x13e4>
or     (%eax),%al
add    %dl,0x44(%ebp)
inc    %ebp
push   %esi
and    %ch,0x65687420
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8070165 <_IO_stdin_used+0x13a5>
ja     80701af <_IO_stdin_used+0x13ef>
imul   $0x65647520,0x68(%ebx),%esp
jbe    8070170 <_IO_stdin_used+0x13b0>
jae    80701b7 <_IO_stdin_used+0x13f7>
outsb  %ds:(%esi),(%dx)
fs
jae    8070176 <_IO_stdin_used+0x13b6>
outsl  %ds:(%esi),(%dx)
jne    80701cd <_IO_stdin_used+0x140d>
and    %ah,0x66(%ecx)
je     80701c3 <_IO_stdin_used+0x1403>
jb     8070180 <_IO_stdin_used+0x13c0>
jb     80701d7 <_IO_stdin_used+0x1417>
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80701d6 <_IO_stdin_used+0x1416>
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%di)
jb     80701e3 <_IO_stdin_used+0x1423>
jb     80701b0 <_IO_stdin_used+0x13f0>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80701ef <_IO_stdin_used+0x142f>
and    %dh,0x75(%ebx)
bound  %esi,0x63(%ebx)
jb     80701f1 <_IO_stdin_used+0x1431>
bound  %esp,0x20(%ebp)
je     80701fc <_IO_stdin_used+0x143c>
and    %ch,0x65(%ebx)
jb     8070200 <_IO_stdin_used+0x1440>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     807020e <_IO_stdin_used+0x144e>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x72(%ebp)
jb     8070213 <_IO_stdin_used+0x1453>
jb     80701c6 <_IO_stdin_used+0x1406>
jb     807020d <_IO_stdin_used+0x144d>
arpl   %sp,0x69(%ebp)
jbe    8070216 <_IO_stdin_used+0x1456>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%di)
jbe    8070219 <_IO_stdin_used+0x1459>
outsb  %ds:(%esi),(%dx)
je     80701d7 <_IO_stdin_used+0x1417>
insl   (%dx),%es:(%edi)
gs
jae    807022e <_IO_stdin_used+0x146e>
popa
cmp    %gs:(%bx,%si),%ah
and    $0x6c000a6d,%eax
imul   $0x74206e65,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jb     8070240 <_IO_stdin_used+0x1480>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x64(%ebp)
gs
jbe    80701fe <_IO_stdin_used+0x143e>
gs
jbe    8070246 <_IO_stdin_used+0x1486>
outsb  %ds:(%esi),(%dx)
je     8070257 <_IO_stdin_used+0x1497>
add    %al,(%eax)
add    %al,(%eax)
ror    %cl
add    $0x8,%al
push   $0x680804ca
lret   $0x804
jo     80701bf <_IO_stdin_used+0x13ff>
add    $0x8,%al
push   $0x680804ca
lret   $0x804
push   $0x680804c9
lret   $0x804
push   $0x680804ca
lret   $0x804
push   $0xd00804ca
leave
add    $0x8,%al
push   $0x680804ca
lret   $0x804
sbb    %cl,%dl
add    $0x8,%al
lock leave
add    $0x8,%al
loopne 80701f3 <_IO_stdin_used+0x1433>
add    $0x8,%al
popa
fs
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x0,0x72(%edi,%ebp,2),%esi
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%dh
out    %eax,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
sahf
incb   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
jo     8070260 <_IO_stdin_used+0x14a0>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
mov    (%eax),%ecx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
stos   %al,%es:(%edi)
incb   (%esi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
mov    $0x10806fe,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
(bad)
incb   (%esi)
or     %dh,-0x3bf7fb38(%eax)
add    %eax,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     8070343 <_IO_stdin_used+0x1583>
jb     8070302 <_IO_stdin_used+0x1542>
and    %ch,0x65(%ebx)
jns    807030a <_IO_stdin_used+0x154a>
jbe    807033e <_IO_stdin_used+0x157e>
insb   (%dx),%es:(%edi)
jne    8070345 <_IO_stdin_used+0x1585>
and    %dh,0x61(%eax)
imul   $0x65707865,0x20(%edx),%esi
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     8070313 <_IO_stdin_used+0x1553>
outsl  %ds:(%si),(%dx)
je     8070317 <_IO_stdin_used+0x1557>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa3a2773,%eax
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     807037b <_IO_stdin_used+0x15bb>
jb     807033a <_IO_stdin_used+0x157a>
and    %ah,0x6d(%ebp)
jo     8070387 <_IO_stdin_used+0x15c7>
jns    8070335 <_IO_stdin_used+0x1575>
imul   $0x20,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     807033c <_IO_stdin_used+0x157c>
jbe    807037f <_IO_stdin_used+0x15bf>
insb   (%dx),%es:(%edi)
jne    8070386 <_IO_stdin_used+0x15c6>
and    %ah,(%edi)
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa3a2773,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
jb     80703a9 <_IO_stdin_used+0x15e9>
outsl  %ds:(%esi),(%dx)
jb     8070366 <_IO_stdin_used+0x15a6>
and    %cl,0x41(%ebp)
push   %esp
inc    %ebx
dec    %eax
and    %ah,0x78(%ebp)
jo     80703aa <_IO_stdin_used+0x15ea>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     807036e <_IO_stdin_used+0x15ae>
outsl  %ds:(%si),(%dx)
je     8070372 <_IO_stdin_used+0x15b2>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa3a2773,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
jb     80703d9 <_IO_stdin_used+0x1619>
outsl  %ds:(%esi),(%dx)
jb     8070396 <_IO_stdin_used+0x15d6>
and    %al,0x54(%ecx,%eax,2)
inc    %ecx
and    %ah,0x78(%ebp)
jo     80703d9 <_IO_stdin_used+0x1619>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     807039d <_IO_stdin_used+0x15dd>
outsl  %ds:(%si),(%dx)
je     80703a1 <_IO_stdin_used+0x15e1>
gs
insl   (%dx),%es:(%edi)
jo     80703f9 <_IO_stdin_used+0x1639>
jns    80703a7 <_IO_stdin_used+0x15e7>
insb   (%dx),%es:(%edi)
imul   $0x206e6920,0x65(%esi),%ebp
daa
and    $0xa3a2773,%eax
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     807040b <_IO_stdin_used+0x164b>
jb     80703ca <_IO_stdin_used+0x160a>
and    %al,0x54(%ecx,%eax,2)
inc    %ecx
and    %ah,0x78(%ebp)
jo     807040d <_IO_stdin_used+0x164d>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     80703d1 <_IO_stdin_used+0x1611>
outsl  %ds:(%si),(%dx)
je     80703d5 <_IO_stdin_used+0x1615>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa3a2773,%eax
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
jne    8070431 <_IO_stdin_used+0x1671>
gs
jbe    8070431 <_IO_stdin_used+0x1671>
fs
insl   (%dx),%es:(%edi)
and    %ch,0x77(%eax)
bound  %esp,%fs:(%eax)
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     (%eax),%ah
and    %ch,0x6470752d
popa
je     807044f <_IO_stdin_used+0x168f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8070468 <_IO_stdin_used+0x16a8>
fs
popa
je     8070461 <_IO_stdin_used+0x16a1>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%eax)
jb     8070469 <_IO_stdin_used+0x16a9>
ja     8070468 <_IO_stdin_used+0x16a8>
jb     807046e <_IO_stdin_used+0x16ae>
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
or     %gs:(%eax),%ah
and    %ch,0x7365742d
je     8070459 <_IO_stdin_used+0x1699>
cmp    $0x6d,%al
outsl  %ds:(%esi),(%dx)
fs
popa
insb   (%dx),%es:(%edi)
imul   $0x2020203e,0x73(%ecx),%esp
jno    80704a0 <_IO_stdin_used+0x16e0>
gs
jb     80704a7 <_IO_stdin_used+0x16e7>
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x72(%eax)
imul   $0x73657220,0x74(%esi),%ebp
jne    80704b3 <_IO_stdin_used+0x16f3>
je     8070453 <_IO_stdin_used+0x1693>
and    %ah,(%eax)
sub    $0x6f6f722d,%eax
je     807048f <_IO_stdin_used+0x16cf>
cmp    $0x70,%al
popa
je     80704bf <_IO_stdin_used+0x16ff>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
je     80704c8 <_IO_stdin_used+0x1708>
jb     80704d3 <_IO_stdin_used+0x1713>
popa
je     80704d1 <_IO_stdin_used+0x1711>
jbe    80704cf <_IO_stdin_used+0x170f>
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8070490 <_IO_stdin_used+0x16d0>
jo     80704d3 <_IO_stdin_used+0x1713>
je     80704dc <_IO_stdin_used+0x171c>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80704fb <_IO_stdin_used+0x173b>
jae    80704f8 <_IO_stdin_used+0x1738>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x6c65682d
jo     807049a <_IO_stdin_used+0x16da>
add    %al,(%eax)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsb  %gs:(%esi),(%dx)
jne    807050f <_IO_stdin_used+0x174f>
gs
jb     8070506 <_IO_stdin_used+0x1746>
je     807050c <_IO_stdin_used+0x174c>
and    %ch,0x77(%eax)
bound  %esp,%fs:(%eax)
imul   $0x203a,0x73(%ebp,%eiz,2),%bp
and    $0x6e000a73,%eax
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80704f8 <_IO_stdin_used+0x1738>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x20757a38,%eax
bound  %edi,0x74(%ecx)
gs
jae    80704f5 <_IO_stdin_used+0x1735>
sub    %ah,0x29757a38
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x68(%ebx)
imul   $0x61206e65,0x72(%esp,%eiz,2),%ebp
jb     807055e <_IO_stdin_used+0x179e>
popa
jns    8070562 <_IO_stdin_used+0x17a2>
cmp    (%eax),%ah
and    %ah,0x20757a38
bound  %edi,0x74(%ecx)
gs
jae    807051d <_IO_stdin_used+0x175d>
sub    %ah,0x29757a38
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8070572 <_IO_stdin_used+0x17b2>
jae    807052f <_IO_stdin_used+0x176f>
popa
jb     8070584 <_IO_stdin_used+0x17c4>
popa
jns    8070588 <_IO_stdin_used+0x17c8>
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,0x20757a38
bound  %edi,0x74(%ecx)
gs
jae    8070545 <_IO_stdin_used+0x1785>
sub    %ah,0x29757a38
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x74(%ebx)
jb     807059d <_IO_stdin_used+0x17dd>
outsb  %ds:(%esi),(%dx)
addr16 jae 8070558 <_IO_stdin_used+0x1798>
imul   $0x6e696d6f,0x63(%esi),%ebp
cmp    (%bx,%si),%ah
and    $0x20757a38,%eax
bound  %edi,0x74(%ecx)
gs
jae    807056d <_IO_stdin_used+0x17ad>
sub    %ah,0x29757a38
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x74(%ebx)
jb     80705c5 <_IO_stdin_used+0x1805>
outsb  %ds:(%esi),(%dx)
addr16 jae 8070580 <_IO_stdin_used+0x17c0>
fs
gs
fs
jne    80705d5 <_IO_stdin_used+0x1815>
daa
gs cmp %fs:%gs:(%eax),%ah
and    $0x20757a38,%eax
bound  %edi,0x74(%ecx)
gs
jae    8070595 <_IO_stdin_used+0x17d5>
sub    %ah,0x29757a38
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x69(%ebx)
jp     80705e9 <_IO_stdin_used+0x1829>
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x79(%edx)
je     8070601 <_IO_stdin_used+0x1841>
jae    80705a8 <_IO_stdin_used+0x17e8>
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80705e0 <_IO_stdin_used+0x1820>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x79(%edx)
je     8070621 <_IO_stdin_used+0x1861>
jae    80705de <_IO_stdin_used+0x181e>
sub    %ah,0x756c6c38
sub    %ecx,(%edx)
add    %al,(%eax)
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
and    %dh,%fs:0x6f(%eax)
imul   $0x3a737265,0x74(%esi),%ebp
and    %ah,(%eax)
and    %ah,0x756c6c38
and    %ah,0x79(%edx)
je     8070649 <_IO_stdin_used+0x1889>
jae    8070606 <_IO_stdin_used+0x1846>
sub    %ah,0x756c6c38
sub    %ecx,(%edx)
add    %al,(%eax)
jbe    8070653 <_IO_stdin_used+0x1893>
insb   (%dx),%es:(%edi)
jne    807065a <_IO_stdin_used+0x189a>
and    %dh,0x6f(%eax)
imul   $0x3a737265,0x74(%esi),%ebp
and    %ah,(%eax)
and    %ah,0x756c6c38
and    %ah,0x79(%edx)
je     8070671 <_IO_stdin_used+0x18b1>
jae    807062e <_IO_stdin_used+0x186e>
sub    %ah,0x756c6c38
sub    %ecx,(%edx)
add    %al,(%eax)
jae    807068e <_IO_stdin_used+0x18ce>
jb     8070685 <_IO_stdin_used+0x18c5>
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%bp,%di)
outsl  %ds:(%esi),(%dx)
jb     8070689 <_IO_stdin_used+0x18c9>
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x79(%edx)
je     8070699 <_IO_stdin_used+0x18d9>
jae    8070640 <_IO_stdin_used+0x1880>
add    %al,(%eax)
inc    %esi
popa
imul   $0x72772065,0x72(%ebp,%esi,2),%ebp
imul   $0x61642067,0x6e(%ecx,%ebp,2),%esi
je     80706ad <_IO_stdin_used+0x18ed>
bound  %esp,0x73(%ecx)
and    %ah,%gs:0x25203a73
jae    8070658 <_IO_stdin_used+0x1898>
insl   (%dx),%es:(%edi)
popa
imul   $0x206e6961,0x74(%esi),%ebp
je     80706cb <_IO_stdin_used+0x190b>
and    %ch,%gs:0x61(%eax)
jb     80706cd <_IO_stdin_used+0x190d>
ja     80706cc <_IO_stdin_used+0x190c>
jb     80706d2 <_IO_stdin_used+0x1912>
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
and    %ch,%gs:0x6e(%ecx)
fs
gs
js     807067d <_IO_stdin_used+0x18bd>
cs
cs
das
jae    80706f4 <_IO_stdin_used+0x1934>
arpl   %bp,(%edi)
jne    80706ea <_IO_stdin_used+0x192a>
gs
jbe    80706b8 <_IO_stdin_used+0x18f8>
jne    80706ef <_IO_stdin_used+0x192f>
gs
jbe    80706ef <_IO_stdin_used+0x192f>
fs
insl   (%dx),%es:(%edi)
sub    $0x62647768,%eax
arpl   %ax,%cs:(%eax)
jne    807070e <_IO_stdin_used+0x194e>
cmp    0x3a(%edx),%dh
push   $0x77682e00
bound  %eax,%fs:(%eax)
jb     807070c <_IO_stdin_used+0x194c>
popa
imul   $0x6c696620,%fs:0x67(%esi),%ebp
and    %ah,%gs:(%edi)
and    $0x3d002773,%eax
cmp    $0x7274203d,%eax
imul   $0x6d2d6e69,0x20(%ebp),%esp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8070742 <_IO_stdin_used+0x1982>
and    %bh,0xa3d3d
jae    8070745 <_IO_stdin_used+0x1985>
jb     807073c <_IO_stdin_used+0x197c>
outsb  %ds:(%esi),(%dx)
addr16 jae 8070711 <_IO_stdin_used+0x1951>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x20757a38,%eax
bound  %edi,0x74(%ecx)
gs
jae    80706f6 <_IO_stdin_used+0x1936>
add    %ah,0x6c2f2f73
imul   $0x76656475,0x2f(%edx),%esp
das
push   $0x2e626477
bound  %ebp,0x6e(%ecx)
add    %bh,0x74203d3d
jb     8070773 <_IO_stdin_used+0x19b3>
and    %ch,%gs:0x6e(%edi)
sub    $0x6b736964,%eax
and    %bh,0xa3d3d
push   $0x65646165
jb     807075a <_IO_stdin_used+0x199a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20757a38
bound  %edi,0x74(%ecx)
gs
jae    8070740 <_IO_stdin_used+0x1980>
add    %dh,0x74(%ebx)
jb     80707a4 <_IO_stdin_used+0x19e4>
outsb  %ds:(%esi),(%dx)
addr16 jae 807075f <_IO_stdin_used+0x199f>
jae    80707b5 <_IO_stdin_used+0x19f5>
popa
jb     80707b8 <_IO_stdin_used+0x19f8>
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,0x756c6c38
or     (%eax),%al
jne    80707c2 <_IO_stdin_used+0x1a02>
fs
popa
je     80707bb <_IO_stdin_used+0x19fb>
add    %dh,0x73(%ebp,%eiz,2)
je     807075c <_IO_stdin_used+0x199c>
das
gs
je     80707c3 <_IO_stdin_used+0x1a03>
das
jne    80707c7 <_IO_stdin_used+0x1a07>
gs
jbe    8070795 <_IO_stdin_used+0x19d5>
push   $0x2e626477
add    %ch,%fs:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x76656475,0x2f(%edx),%esp
das
push   $0x2e626477
add    %dh,%fs:0x69(%edx,%esi,2)
gs
pop    %edi
jae    80707f9 <_IO_stdin_used+0x1a39>
outsl  %ds:(%esi),(%dx)
jb     80707ed <_IO_stdin_used+0x1a2d>
add    %ch,0x6e(%ecx)
jae    80707f2 <_IO_stdin_used+0x1a32>
jb     8070803 <_IO_stdin_used+0x1a43>
pop    %edi
fs
popa
je     80707f5 <_IO_stdin_used+0x1a35>
add    %ch,0x6d(%ecx)
jo     8070808 <_IO_stdin_used+0x1a48>
jb     807080f <_IO_stdin_used+0x1a4f>
pop    %edi
imul   $0x6461,0x0(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
pop    %edi
push   $0x626477
add    %al,(%eax)
push   %eax
pop    %es
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
fisubr 0x7(%ebx)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
push   %edi
pop    %es
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
mov    0x90080706,%al
fldl   (%eax,%ecx,1)
pop    %eax
push   %es
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x7(%edi,%eax,1)
or     %ch,0x7(%ebp)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x3a(%ebx)
cmp    %gs:0x45(%edx,%edi,1),%dh
cmp    0x68(%ecx),%dh
add    %ch,(%esi)
cs
das
jae    80708ae <_IO_stdin_used+0x1aee>
arpl   %bp,(%edi)
jne    80708a4 <_IO_stdin_used+0x1ae4>
gs
jbe    8070872 <_IO_stdin_used+0x1ab2>
jne    80708a9 <_IO_stdin_used+0x1ae9>
gs
jbe    80708a9 <_IO_stdin_used+0x1ae9>
fs
insl   (%dx),%es:(%edi)
sub    $0x74746573,%eax
insb   (%dx),%es:(%edi)
gs arpl %ax,%cs:%gs:(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
imul   $0x79666974,0x6f(%esi),%ebp
pop    %edi
imul   $0x61662074,0x69(%esi),%ebp
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
das
jb     80708fe <_IO_stdin_used+0x1b3e>
outsb  %ds:(%esi),(%dx)
das
jne    80708f1 <_IO_stdin_used+0x1b31>
gs
jbe    8070890 <_IO_stdin_used+0x1ad0>
ja     80708f3 <_IO_stdin_used+0x1b33>
je     80708f7 <_IO_stdin_used+0x1b37>
push   $0x20676e69
das
jb     8070911 <_IO_stdin_used+0x1b51>
outsb  %ds:(%esi),(%dx)
das
jne    8070904 <_IO_stdin_used+0x1b44>
gs
jbe    80708c3 <_IO_stdin_used+0x1b03>
popaw
imul   $0x2020000a,0x64(%ebp,%eiz,2),%ebp
and    $0x25282073,%eax
jae    80708dd <_IO_stdin_used+0x1b1d>
or     (%eax),%al
jae    807091d <_IO_stdin_used+0x1b5d>
jno    80708e7 <_IO_stdin_used+0x1b27>
jae    8070930 <_IO_stdin_used+0x1b70>
popa
jb     8070933 <_IO_stdin_used+0x1b73>
add    %dh,0x65(%ebx)
jno    80708f1 <_IO_stdin_used+0x1b31>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x78(%ebp)
imul   $0x78652d66,0x69(%ebp,%ebp,1),%esi
imul   $0x75710073,0x74(%ebx),%esi
imul   $0x74657300,0x74(%ebp),%esp
je     807094e <_IO_stdin_used+0x1b8e>
add    %dl,%gs:0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
jne    8070951 <_IO_stdin_used+0x1b91>
gs
jbe    8070951 <_IO_stdin_used+0x1b91>
fs
insl   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
je     807096b <_IO_stdin_used+0x1bab>
insb   (%dx),%es:(%edi)
and    %cl,%gs:0x50(%edi)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     (%eax),%ah
and    %ch,0x6d69742d
outsl  %gs:(%esi),(%dx)
jne    8070981 <_IO_stdin_used+0x1bc1>
cmp    $0x6365733c,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
fs
jae    8070955 <_IO_stdin_used+0x1b95>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
js     8070989 <_IO_stdin_used+0x1bc9>
insl   (%dx),%es:(%edi)
jne    8070990 <_IO_stdin_used+0x1bd0>
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
ja     807098f <_IO_stdin_used+0x1bcf>
imul   $0x6520726f,0x66(%eax,%eiz,1),%esi
jbe    807099d <_IO_stdin_used+0x1bdd>
outsb  %ds:(%esi),(%dx)
je     80709ae <_IO_stdin_used+0x1bee>
or     (%eax),%ah
and    %ch,0x7165732d
sub    $0x72617473,%eax
je     8070987 <_IO_stdin_used+0x1bc7>
cmp    $0x73,%al
gs
jno    80709bd <_IO_stdin_used+0x1bfd>
jne    80709be <_IO_stdin_used+0x1bfe>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
imul   $0x2074,0x73(%edx),%si
jae    80709c3 <_IO_stdin_used+0x1c03>
jno    80709ce <_IO_stdin_used+0x1c0e>
jne    80709cf <_IO_stdin_used+0x1c0f>
and    %dh,0x20(%edi,%ebp,2)
ja     80709c9 <_IO_stdin_used+0x1c09>
imul   $0x200a726f,0x66(%eax,%eiz,1),%esi
and    %ch,0x7165732d
sub    $0x3d646e65,%eax
cmp    $0x73,%al
gs
jno    80709ee <_IO_stdin_used+0x1c2e>
jne    80709ef <_IO_stdin_used+0x1c2f>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
popa
jae    8070a01 <_IO_stdin_used+0x1c41>
and    %dh,0x65(%ebx)
jno    8070a00 <_IO_stdin_used+0x1c40>
jne    8070a01 <_IO_stdin_used+0x1c41>
and    %dh,0x20(%edi,%ebp,2)
ja     80709fb <_IO_stdin_used+0x1c3b>
imul   $0x200a726f,0x66(%eax,%eiz,1),%esi
and    %ch,0x6978652d
je     80709d7 <_IO_stdin_used+0x1c17>
imul   $0x73697865,0x2d(%esi),%esp
je     8070a26 <_IO_stdin_used+0x1c66>
cmp    $0x6c69663c,%eax
gs and %dh,%ds:%gs:0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     80709e0 <_IO_stdin_used+0x1c20>
ja     8070a23 <_IO_stdin_used+0x1c63>
imul   $0x66692067,0x6e(%ecx,%ebp,2),%esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x78(%ebp)
imul   $0x20200a73,0x74(%ebx),%esi
sub    $0x6975712d,%eax
gs
je     8070a01 <_IO_stdin_used+0x1c41>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8070a18 <_IO_stdin_used+0x1c58>
jo     8070a6c <_IO_stdin_used+0x1cac>
imul   $0x73696c20,0x74(%esi),%ebp
je     8070a23 <_IO_stdin_used+0x1c63>
popa
data16
je     8070a6c <_IO_stdin_used+0x1cac>
jb     8070a29 <_IO_stdin_used+0x1c69>
je     8070a74 <_IO_stdin_used+0x1cb4>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8070a84 <_IO_stdin_used+0x1cc4>
or     (%eax),%ah
and    %ch,0x6c65682d
jo     8070a24 <_IO_stdin_used+0x1c64>
add    %al,(%eax)
jae    8070a83 <_IO_stdin_used+0x1cc3>
jno    8070a4d <_IO_stdin_used+0x1c8d>
jae    8070a96 <_IO_stdin_used+0x1cd6>
popa
jb     8070a99 <_IO_stdin_used+0x1cd9>
and    %ch,0x72(%ecx,%eiz,2)
addr16
gs
jb     8070a4d <_IO_stdin_used+0x1c8d>
je     8070a97 <_IO_stdin_used+0x1cd7>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
jno    8070a63 <_IO_stdin_used+0x1ca3>
outsb  %gs:(%esi),(%dx)
fs
sub    $0x20,%al
imul   $0x6e69726f,0x6e(%edi),%esp
or     (%bx,%si),%al
add    %al,(%eax)
add    %dh,0x65(%ebx)
jno    8070a79 <_IO_stdin_used+0x1cb9>
jae    8070ac2 <_IO_stdin_used+0x1d02>
popa
jb     8070ac5 <_IO_stdin_used+0x1d05>
and    %ch,0x72(%edi)
and    %dh,0x65(%ebx)
jno    8070a86 <_IO_stdin_used+0x1cc6>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x72(%ecx,%eiz,2)
addr16
gs
jb     8070a84 <_IO_stdin_used+0x1cc4>
je     8070ace <_IO_stdin_used+0x1d0e>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%ebx)
jb     8070adf <_IO_stdin_used+0x1d1f>
outsb  %gs:(%esi),(%dx)
je     8070a91 <_IO_stdin_used+0x1cd1>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8070ae2 <_IO_stdin_used+0x1d22>
sub    $0x20,%al
imul   $0x6e69726f,0x6e(%edi),%esp
or     (%bx,%si),%al
add    %al,(%eax)
add    %dh,0x74(%ebx)
popa
jb     8070b05 <_IO_stdin_used+0x1d45>
cmp    $0x756c6c25,%eax
and    %ah,0x6e(%ebp)
fs
cmp    $0x756c6c25,%eax
and    %ah,0x75(%ebx)
jb     8070b16 <_IO_stdin_used+0x1d56>
outsb  %gs:(%esi),(%dx)
je     8070ae5 <_IO_stdin_used+0x1d25>
and    $0xa756c6c,%eax
add    %al,(%eax)
add    %dh,0x65(%ebx)
jno    8070ae1 <_IO_stdin_used+0x1d21>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x65(%esi)
gs
fs
jae    8070ade <_IO_stdin_used+0x1d1e>
jae    8070b25 <_IO_stdin_used+0x1d65>
jno    8070aef <_IO_stdin_used+0x1d2f>
jae    8070b38 <_IO_stdin_used+0x1d78>
popa
jb     8070b3b <_IO_stdin_used+0x1d7b>
and    %dh,0x61(%eax)
jb     8070b2d <_IO_stdin_used+0x1d6d>
insl   (%dx),%es:(%edi)
gs
je     8070b35 <_IO_stdin_used+0x1d75>
jb     8070afe <_IO_stdin_used+0x1d3e>
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8070b42 <_IO_stdin_used+0x1d82>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%al
add    %al,(%eax)
add    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    8070b5b <_IO_stdin_used+0x1d9b>
and    %dh,0x61(%edi)
imul   $0x6f662067,0x6e(%ecx,%ebp,2),%esi
jb     8070b14 <_IO_stdin_used+0x1d54>
jne    8070b5a <_IO_stdin_used+0x1d9a>
gs
jbe    8070b19 <_IO_stdin_used+0x1d59>
jno    8070b70 <_IO_stdin_used+0x1db0>
gs
jne    8070b63 <_IO_stdin_used+0x1da3>
or     (%eax),%al
or     0x64(%ebp),%dh
gs
jbe    8070b67 <_IO_stdin_used+0x1da7>
fs
insl   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
je     8070b81 <_IO_stdin_used+0x1dc1>
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6d697420
outsl  %gs:(%esi),(%dx)
jne    8070b8d <_IO_stdin_used+0x1dcd>
and    %ch,0x66(%edi)
and    %ah,0x65732069
arpl   %bp,0x6e(%edi)
fs
jae    8070b48 <_IO_stdin_used+0x1d88>
jb     8070b8f <_IO_stdin_used+0x1dcf>
popa
arpl   %bp,0x65(%eax)
fs
sub    $0x20,%al
je     8070b9b <_IO_stdin_used+0x1ddb>
and    %ah,%gs:0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8070b5b <_IO_stdin_used+0x1d9b>
jno    8070bb2 <_IO_stdin_used+0x1df2>
gs
jne    8070ba5 <_IO_stdin_used+0x1de5>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8070ba7 <_IO_stdin_used+0x1de7>
imul   $0x77000a3a,0x73(%esi),%ebp
popa
imul   $0x7420726f,0x66(%eax,%eiz,1),%esi
push   $0x76652065
outsb  %gs:(%esi),(%dx)
je     8070b7f <_IO_stdin_used+0x1dbf>
jno    8070bd6 <_IO_stdin_used+0x1e16>
gs
jne    8070bc9 <_IO_stdin_used+0x1e09>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6873,0x69(%esi),%bp
add    %al,(%eax)
shr    $0x4,%al
or     %dh,(%eax)
jmp    f137137e <_end+0xe92edaee>
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
nop
call   f13713fa <_end+0xe92edb6a>
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
js     8070be6 <_IO_stdin_used+0x1e26>
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
xor    %ch,%cl
add    $0x8,%al
push   $0x300804e8
jmp    f107142e <_end+0xe8fedb9e>
add    $0x8,%al
shr    %al
add    $0x8,%al
popa
fs
insl   (%dx),%es:(%edi)
pop    %edi
jae    8070c9b <_IO_stdin_used+0x1edb>
je     8070cac <_IO_stdin_used+0x1eec>
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x8,%dh
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
rorb   $0x7,(%eax)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
or     %dl,%bh
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %cl,%al
or     %al,(%edi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
xlat   %ds:(%ebx)
or     %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
pop    %ds
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
fisttpll (%eax)
pop    %es
or     %ah,0x4c0804e7(%eax)
or     (%edi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%edi)
jne    8070d28 <_IO_stdin_used+0x1f68>
jbe    8070d2a <_IO_stdin_used+0x1f6a>
outsb  %ds:(%esi),(%dx)
je     8070cc8 <_IO_stdin_used+0x1f08>
cs
cs
das
jae    8070d3f <_IO_stdin_used+0x1f7f>
arpl   %bp,(%edi)
jne    8070d35 <_IO_stdin_used+0x1f75>
gs
jbe    8070d03 <_IO_stdin_used+0x1f43>
jne    8070d3a <_IO_stdin_used+0x1f7a>
gs
jbe    8070d3a <_IO_stdin_used+0x1f7a>
fs
insl   (%dx),%es:(%edi)
sub    $0x67697274,%eax
addr16
gs
jb     8070d12 <_IO_stdin_used+0x1f52>
arpl   %ax,(%eax)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
add    %dh,%gs:0x6e(%bp)
cmp    0x3a(%bx),%ch
je     8070d2f <_IO_stdin_used+0x1f6f>
push   $0x3a703a63
jae    8070d36 <_IO_stdin_used+0x1f76>
push   %ebx
cmp    0x3a(%ecx),%ah
inc    %ecx
cmp    0x3a(%ecx),%bh
bound  %edi,(%edx)
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x75730073,0x65(%ebx),%esp
bound  %esi,0x79(%ebx)
jae    8070d8a <_IO_stdin_used+0x1fca>
gs
insl   (%dx),%es:(%edi)
jae    8070d1a <_IO_stdin_used+0x1f5a>
jne    8070d8a <_IO_stdin_used+0x1fca>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x7079742d
gs
cmp    $0xa7325,%eax
fs
gs
jbe    8070d9f <_IO_stdin_used+0x1fdf>
arpl   %sp,0x5f(%ebp)
je     8070db4 <_IO_stdin_used+0x1ff4>
jo     8070da2 <_IO_stdin_used+0x1fe2>
add    %dh,0x65(%esi)
jb     8070da4 <_IO_stdin_used+0x1fe4>
outsl  %ds:(%esi),(%dx)
jae    8070daa <_IO_stdin_used+0x1fea>
add    %ah,0x79(%edx,%esi,2)
sub    $0x6e7572,%eax
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x75(%ebx)
bound  %esi,0x79(%ebx)
jae    8070dd0 <_IO_stdin_used+0x2010>
gs
insl   (%dx),%es:(%edi)
sub    $0x616d6f6e,%eax
je     8070dc8 <_IO_stdin_used+0x2008>
push   $0x74746100
jb     8070d99 <_IO_stdin_used+0x1fd9>
insl   (%dx),%es:(%edi)
popa
je     8070dd3 <_IO_stdin_used+0x2013>
push   $0x74746100
jb     8070da4 <_IO_stdin_used+0x1fe4>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8070de0 <_IO_stdin_used+0x2020>
push   $0x6f727000
jo     8070de9 <_IO_stdin_used+0x2029>
jb     8070dfa <_IO_stdin_used+0x203a>
jns    8070db5 <_IO_stdin_used+0x1ff5>
insl   (%dx),%es:(%edi)
popa
je     8070def <_IO_stdin_used+0x202f>
push   $0x73797300
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x6374616d,%eax
push   $0x72617000
outsb  %gs:(%esi),(%dx)
je     8070dd0 <_IO_stdin_used+0x2010>
insl   (%dx),%es:(%edi)
popa
je     8070e0a <_IO_stdin_used+0x204a>
push   $0x69727400
addr16
addr16
gs
jb     8070db1 <_IO_stdin_used+0x1ff1>
add    %al,(%eax)
add    %ah,0x72(%ebp)
jb     8070e27 <_IO_stdin_used+0x2067>
jb     8070dda <_IO_stdin_used+0x201a>
ja     8070e2e <_IO_stdin_used+0x206e>
imul   $0x25272067,0x6e(%ecx,%ebp,2),%esi
jae    8070ded <_IO_stdin_used+0x202d>
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0x203a2773,%eax
and    $0x75000a6d,%eax
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8070e4c <_IO_stdin_used+0x208c>
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x73252720,0x65(%ebx),%esp
daa
or     (%eax),%al
push   %ebp
jae    8070e58 <_IO_stdin_used+0x2098>
cmp    %gs:(%bx,%si),%ah
jne    8070e61 <_IO_stdin_used+0x20a1>
gs
jbe    8070e61 <_IO_stdin_used+0x20a1>
fs
insl   (%dx),%es:(%edi)
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     8070e2b <_IO_stdin_used+0x206b>
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     (%eax),%ah
and    %ch,0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %ch,0x73(%ecx,%ebp,2)
je     8070e64 <_IO_stdin_used+0x20a4>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x68772073,0x65(%ebx),%esp
imul   $0x6e6e7572,0x20(%ebp,%eiz,2),%ebp
imul   $0x2d20200a,0x67(%esi),%ebp
sub    $0x2d797264,%eax
jb     8070edc <_IO_stdin_used+0x211c>
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8070ea6 <_IO_stdin_used+0x20e6>
popa
arpl   %si,0x61(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    8070eaf <_IO_stdin_used+0x20ef>
je     8070f03 <_IO_stdin_used+0x2143>
imul   $0x74207265,0x67(%edi),%esp
push   $0x76652065
outsb  %gs:(%esi),(%dx)
je     8070f14 <_IO_stdin_used+0x2154>
or     (%eax),%ah
and    %ch,0x7079742d
gs
cmp    $0x20202020,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x66(%edi)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8070f45 <_IO_stdin_used+0x2185>
and    %dh,0x20(%edi,%ebp,2)
je     8070f4a <_IO_stdin_used+0x218a>
imul   $0x200a7265,0x67(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20202073,0x65(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8070f7d <_IO_stdin_used+0x21bd>
jae    8070f26 <_IO_stdin_used+0x2166>
fs
gs
jbe    8070f73 <_IO_stdin_used+0x21b3>
arpl   %sp,0x73(%ebp)
and    %ch,(%eax)
fs
gs
popaw
jne    8070f81 <_IO_stdin_used+0x21c1>
je     8070f40 <_IO_stdin_used+0x2180>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
bound  %esi,0x79(%ebx)
jae    8070f99 <_IO_stdin_used+0x21d9>
gs
insl   (%dx),%es:(%edi)
jae    8070f49 <_IO_stdin_used+0x2189>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x79(%ebx)
jae    8070f60 <_IO_stdin_used+0x21a0>
jae    8070fb7 <_IO_stdin_used+0x21f7>
bound  %esi,0x79(%ebx)
jae    8070fbb <_IO_stdin_used+0x21fb>
gs
insl   (%dx),%es:(%edi)
jae    8070f6b <_IO_stdin_used+0x21ab>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x69(%edx,%esi,2)
jbe    8070fb9 <_IO_stdin_used+0x21f9>
jb     8070fc9 <_IO_stdin_used+0x2209>
or     (%eax),%ah
and    %ch,0x7463612d
imul   $0x63613c3d,0x6e(%edi),%ebp
je     8070fd0 <_IO_stdin_used+0x2210>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8070f9f <_IO_stdin_used+0x21df>
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8070ff0 <_IO_stdin_used+0x2230>
sub    $0x20,%al
fs
gs
popaw
jne    8070fff <_IO_stdin_used+0x223f>
je     8070fb5 <_IO_stdin_used+0x21f5>
imul   $0x61686322,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %gs:(%bp,%si),%cl
and    %ah,(%eax)
sub    $0x6275732d,%eax
jae    8071023 <_IO_stdin_used+0x2263>
jae    8071020 <_IO_stdin_used+0x2260>
gs
insl   (%dx),%es:(%edi)
sub    $0x6374616d,%eax
push   $0x75733c3d
bound  %esi,0x79(%ebx)
jae    8071031 <_IO_stdin_used+0x2271>
gs
insl   (%dx),%es:(%edi)
and    %ah,%ds:(%eax)
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     8070feb <_IO_stdin_used+0x222b>
fs
gs
jbe    8071038 <_IO_stdin_used+0x2278>
arpl   %sp,0x73(%ebp)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     8071041 <_IO_stdin_used+0x2281>
push   $0x20676e69
jae    807105a <_IO_stdin_used+0x229a>
bound  %esi,0x79(%ebx)
jae    807105e <_IO_stdin_used+0x229e>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x6275732d
jae    807106f <_IO_stdin_used+0x22af>
jae    807106c <_IO_stdin_used+0x22ac>
gs
insl   (%dx),%es:(%edi)
sub    $0x616d6f6e,%eax
je     8071064 <_IO_stdin_used+0x22a4>
push   $0x75733c3d
bound  %esi,0x79(%ebx)
jae    807107f <_IO_stdin_used+0x22bf>
gs
insl   (%dx),%es:(%edi)
and    %ah,%ds:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x72662073,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     807108d <_IO_stdin_used+0x22cd>
push   $0x20676e69
jae    80710a6 <_IO_stdin_used+0x22e6>
bound  %esi,0x79(%ebx)
jae    80710aa <_IO_stdin_used+0x22ea>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x7474612d
jb     807106f <_IO_stdin_used+0x22af>
insl   (%dx),%es:(%edi)
popa
je     80710a9 <_IO_stdin_used+0x22e9>
push   $0x69663c3d
insb   (%dx),%es:(%edi)
gs
pop    %ebx
cmp    $0x6c61763c,%eax
jne    80710ba <_IO_stdin_used+0x22fa>
ds
pop    %ebp
and    %ah,%ds:(%eax)
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     8071083 <_IO_stdin_used+0x22c3>
fs
gs
jbe    80710d0 <_IO_stdin_used+0x2310>
arpl   %sp,0x73(%ebp)
and    %dh,0x69(%edi)
je     80710d7 <_IO_stdin_used+0x2317>
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     80710d9 <_IO_stdin_used+0x2319>
push   $0x20676e69
popa
je     80710f2 <_IO_stdin_used+0x2332>
jb     80710e9 <_IO_stdin_used+0x2329>
bound  %esi,0x74(%ebp)
or     %gs:(%eax),%ah
and    %ch,0x7474612d
jb     80710bb <_IO_stdin_used+0x22fb>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     80710f7 <_IO_stdin_used+0x2337>
push   $0x69663c3d
insb   (%dx),%es:(%edi)
gs
pop    %ebx
cmp    $0x6c61763c,%eax
jne    8071108 <_IO_stdin_used+0x2348>
ds
pop    %ebp
and    %ah,%ds:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x69772073,0x65(%ebx),%esp
je     8071123 <_IO_stdin_used+0x2363>
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     8071125 <_IO_stdin_used+0x2365>
push   $0x20676e69
popa
je     807113e <_IO_stdin_used+0x237e>
jb     8071135 <_IO_stdin_used+0x2375>
bound  %esi,0x74(%ebp)
or     %gs:(%eax),%ah
and    %ch,0x6f72702d
jo     807113f <_IO_stdin_used+0x237f>
jb     8071150 <_IO_stdin_used+0x2390>
jns    807110b <_IO_stdin_used+0x234b>
insl   (%dx),%es:(%edi)
popa
je     8071145 <_IO_stdin_used+0x2385>
push   $0x656b3c3d
jns    8071127 <_IO_stdin_used+0x2367>
cmp    $0x6c61763c,%eax
jne    8071155 <_IO_stdin_used+0x2395>
and    %ah,%ds:(%eax)
je     8071167 <_IO_stdin_used+0x23a7>
imul   $0x64207265,0x67(%edi),%esp
gs
jbe    8071168 <_IO_stdin_used+0x23a8>
arpl   %sp,0x73(%ebp)
and    %dh,0x69(%edi)
je     807116f <_IO_stdin_used+0x23af>
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     8071171 <_IO_stdin_used+0x23b1>
push   $0x20676e69
jo     8071187 <_IO_stdin_used+0x23c7>
outsl  %ds:(%esi),(%dx)
jo     807117d <_IO_stdin_used+0x23bd>
jb     807118e <_IO_stdin_used+0x23ce>
jns    8071126 <_IO_stdin_used+0x2366>
and    %ah,(%eax)
sub    $0x6761742d,%eax
sub    $0x6374616d,%eax
push   $0x656b3c3d
jns    807116d <_IO_stdin_used+0x23ad>
cmp    $0x6c61763c,%eax
jne    807119b <_IO_stdin_used+0x23db>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     8071166 <_IO_stdin_used+0x23a6>
fs
gs
jbe    80711b3 <_IO_stdin_used+0x23f3>
arpl   %sp,0x73(%ebp)
and    %dh,0x69(%edi)
je     80711ba <_IO_stdin_used+0x23fa>
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     80711bc <_IO_stdin_used+0x23fc>
push   $0x20676e69
jo     80711d2 <_IO_stdin_used+0x2412>
outsl  %ds:(%esi),(%dx)
jo     80711c8 <_IO_stdin_used+0x2408>
jb     80711d9 <_IO_stdin_used+0x2419>
jns    8071171 <_IO_stdin_used+0x23b1>
and    %ah,(%eax)
sub    $0x7379732d,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x6374616d,%eax
push   $0x616e3c3d
insl   (%dx),%es:(%edi)
gs and %ah,%ds:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     80711fd <_IO_stdin_used+0x243d>
imul   $0x64207265,0x67(%edi),%esp
gs
jbe    80711fe <_IO_stdin_used+0x243e>
arpl   %sp,0x73(%ebp)
and    %dh,0x69(%edi)
je     8071205 <_IO_stdin_used+0x2445>
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     8071207 <_IO_stdin_used+0x2447>
push   $0x20676e69
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x7261702d
outsb  %gs:(%esi),(%dx)
je     80711e6 <_IO_stdin_used+0x2426>
insl   (%dx),%es:(%edi)
popa
je     8071220 <_IO_stdin_used+0x2460>
push   $0x616e3c3d
insl   (%dx),%es:(%edi)
gs and %ah,%ds:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     80711f8 <_IO_stdin_used+0x2438>
fs
gs
jbe    8071245 <_IO_stdin_used+0x2485>
arpl   %sp,0x73(%ebp)
and    %dh,0x69(%edi)
je     807124c <_IO_stdin_used+0x248c>
and    %dh,0x61(%eax,%ebp,2)
je     807120a <_IO_stdin_used+0x244a>
jo     807124d <_IO_stdin_used+0x248d>
jb     8071253 <_IO_stdin_used+0x2493>
outsb  %ds:(%esi),(%dx)
je     8071211 <_IO_stdin_used+0x2451>
fs
gs
jbe    807125e <_IO_stdin_used+0x249e>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     807120b <_IO_stdin_used+0x244b>
add    %al,(%eax)
add    %dh,0x65(%edx)
jno    807127d <_IO_stdin_used+0x24bd>
gs
jae    807127f <_IO_stdin_used+0x24bf>
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8071285 <_IO_stdin_used+0x24c5>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     807128e <_IO_stdin_used+0x24ce>
gs
insb   (%dx),%es:(%edi)
add    %al,(%eax)
sbb    %dh,%bl
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
add    %dh,%bl
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
(bad)
repnz add $0x8,%al
dec    %eax
repnz add $0x8,%al
cmp    %dh,%dl
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
and    %dh,%dl
add    $0x8,%al
call   500f17b6 <_end+0x4806df26>
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
fdiv   %st(1),%st
add    $0x8,%al
dec    %eax
repz add $0x8,%al
test   $0xf1,%al
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
nop
icebp
add    $0x8,%al
pop    %eax
icebp
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
icebp
add    $0x8,%al
dec    %eax
repz add $0x8,%al
dec    %eax
repz add $0x8,%al
xor    %dh,%cl
add    $0x8,%al
gs
js     8071370 <_IO_stdin_used+0x25b0>
arpl   %bx,0x6c(%edi)
imul   $0x6d646100,0x74(%ebx),%esi
pop    %edi
je     807138a <_IO_stdin_used+0x25ca>
imul   $0x61007265,0x67(%edi),%esp
fs
insl   (%dx),%es:(%edi)
pop    %edi
je     8071396 <_IO_stdin_used+0x25d6>
imul   $0x7265,0x67(%edi),%esp
add    %bh,(%esi)
or     $0x807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    807134e <_IO_stdin_used+0x258e>
add    %al,(%eax)
inc    %esi
or     $0x807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %bh,(%ecx)
or     $0x10807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
je     807136e <_IO_stdin_used+0x25ae>
add    %al,(%eax)
dec    %esi
or     $0x10807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
stos   %al,%es:(%edi)
incb   (%esi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
push   %ebp
or     $0x10807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %ah,0xd(%edi)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
jb     80713bf <_IO_stdin_used+0x25ff>
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
jg     80713cf <_IO_stdin_used+0x260f>
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
mov    $0x10806fe,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
mov    0x10807,%cs
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jns    80713ee <_IO_stdin_used+0x262e>
add    %al,(%eax)
pushf
or     $0x10807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
pop    %ds
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
test   $0xa008070d,%eax
lock add $0x8,%al
add    $0x12,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x64(%ecx)
add    %dh,%fs:0x65(%esi)
jb     80714ab <_IO_stdin_used+0x26eb>
imul   $0xa732520,0x6e(%edi),%ebp
add    %ch,(%esi)
cs
das
jae    80714b7 <_IO_stdin_used+0x26f7>
arpl   %bp,(%edi)
jne    80714ad <_IO_stdin_used+0x26ed>
gs
jbe    807147b <_IO_stdin_used+0x26bb>
jne    80714b2 <_IO_stdin_used+0x26f2>
gs
jbe    80714b2 <_IO_stdin_used+0x26f2>
fs
insl   (%dx),%es:(%edi)
sub    $0x74736574,%eax
arpl   %ax,%cs:(%eax)
popa
cmp    0x3a(%ebx),%dh
dec    %esi
cmp    0x68(%esi),%ah
add    %ah,0x61(%ebp)
jb     80714d4 <_IO_stdin_used+0x2714>
jns    807146a <_IO_stdin_used+0x26aa>
insb   (%dx),%es:(%edi)
popa
je     80714d3 <_IO_stdin_used+0x2713>
add    %ch,0x65(%esi)
jbe    80714d8 <_IO_stdin_used+0x2718>
jb     8071475 <_IO_stdin_used+0x26b5>
jae    80714f0 <_IO_stdin_used+0x2730>
jae    80714e9 <_IO_stdin_used+0x2729>
popa
je     80714e4 <_IO_stdin_used+0x2724>
and    %dh,0x61(%eax)
jb     80714e2 <_IO_stdin_used+0x2722>
insl   (%dx),%es:(%edi)
gs
je     80714ea <_IO_stdin_used+0x272a>
jb     80714a7 <_IO_stdin_used+0x26e7>
insl   (%dx),%es:(%edi)
imul   $0xa676e69,0x73(%ebx),%esi
add    %ah,0x72(%ebp)
jb     8071503 <_IO_stdin_used+0x2743>
jb     80714b6 <_IO_stdin_used+0x26f6>
jb     80714fd <_IO_stdin_used+0x273d>
popa
imul   $0x6c757220,%fs:0x67(%esi),%ebp
gs
jae    80714ae <_IO_stdin_used+0x26ee>
add    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     807151d <_IO_stdin_used+0x275d>
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x73252720,0x65(%ebx),%esp
daa
or     (%eax),%al
gs
jb     8071536 <_IO_stdin_used+0x2776>
outsl  %ds:(%esi),(%dx)
jb     80714e7 <_IO_stdin_used+0x2727>
arpl   %si,0x65(%edx)
popa
je     8071536 <_IO_stdin_used+0x2776>
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%bp,%di)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
data16
or     %fs:(%eax),%al
jb     8071551 <_IO_stdin_used+0x2791>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
daa
and    $0xa2773,%eax
jb     807154c <_IO_stdin_used+0x278c>
jae    8071558 <_IO_stdin_used+0x2798>
insb   (%dx),%es:(%edi)
jbe    8071551 <_IO_stdin_used+0x2791>
sub    $0x656d616e,%eax
jae    80714f3 <_IO_stdin_used+0x2733>
je     807155a <_IO_stdin_used+0x279a>
jae    807156b <_IO_stdin_used+0x27ab>
and    %ah,0x6e(%ecx)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8071521 <_IO_stdin_used+0x2761>
jb     8071578 <_IO_stdin_used+0x27b8>
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
jb     807156f <_IO_stdin_used+0x27af>
jae    807157b <_IO_stdin_used+0x27bb>
insb   (%dx),%es:(%edi)
jbe    8071574 <_IO_stdin_used+0x27b4>
sub    $0x656d616e,%eax
jae    8071536 <_IO_stdin_used+0x2776>
insl   (%dx),%es:(%edi)
jne    807158c <_IO_stdin_used+0x27cc>
je     807153b <_IO_stdin_used+0x277b>
bound  %esp,0x20(%ebp)
gs
popa
jb     807158e <_IO_stdin_used+0x27ce>
jns    8071550 <_IO_stdin_used+0x2790>
and    %ch,0x74(%ecx,%eiz,2)
and    %ch,%gs:0x72(%edi)
and    %ch,0x65(%esi)
jbe    8071596 <_IO_stdin_used+0x27d6>
jb     807153d <_IO_stdin_used+0x277d>
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
jne    80715a1 <_IO_stdin_used+0x27e1>
gs
jbe    80715a1 <_IO_stdin_used+0x27e1>
fs
insl   (%dx),%es:(%edi)
and    %dh,0x73(%ebp,%eiz,2)
je     8071568 <_IO_stdin_used+0x27a8>
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
and    %bh,(%ebx,%esi,2)
jns    80715c7 <_IO_stdin_used+0x2807>
jo     80715b7 <_IO_stdin_used+0x27f7>
je     80715c0 <_IO_stdin_used+0x2800>
or     %ds:(%eax),%ah
and    %ch,0x7463612d
imul   $0x74733c3d,0x6e(%edi),%ebp
jb     80715d3 <_IO_stdin_used+0x2813>
outsb  %ds:(%esi),(%dx)
and    %ah,%ds:(%bx,%si)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8071596 <_IO_stdin_used+0x27d6>
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%ebx)
jb     80715ea <_IO_stdin_used+0x282a>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%ah
and    %ch,0x6c65682d
jo     8071597 <_IO_stdin_used+0x27d7>
add    %al,(%eax)
add    %dl,0x69(%eax,%ebp,2)
jae    80715b5 <_IO_stdin_used+0x27f5>
jo     8071609 <_IO_stdin_used+0x2849>
outsl  %ds:(%esi),(%dx)
addr16 jb 80715fc <_IO_stdin_used+0x283c>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x6f(%esi)
jb     80715c4 <_IO_stdin_used+0x2804>
fs bound %esi,%fs:%gs:0x67(%ebp)
imul   $0x6c6e6f20,0x67(%bp),%ebp
jns    80715df <_IO_stdin_used+0x281f>
and    %ch,0x74(%ecx)
and    %ah,0x65(%edi,%ebp,2)
jae    80715dc <_IO_stdin_used+0x281c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80715e0 <_IO_stdin_used+0x2820>
jb     8071637 <_IO_stdin_used+0x2877>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
jns    80715e8 <_IO_stdin_used+0x2828>
jo     807163c <_IO_stdin_used+0x287c>
outsl  %ds:(%esi),(%dx)
addr16 jb 807162f <_IO_stdin_used+0x286f>
insl   (%dx),%es:(%edi)
or     0x70(%ebx),%dh
arpl   %bp,%gs:0x66(%ecx)
imul   $0x20796220,0x64(%ebp),%esp
popa
and    %dl,0x55(%edx)
dec    %esi
and    %ch,0x65(%ebx)
jns    8071615 <_IO_stdin_used+0x2855>
and    %cl,0x74(%ecx)
and    %ch,0x61(%ebp)
jns    807160f <_IO_stdin_used+0x284f>
jae    8071659 <_IO_stdin_used+0x2899>
outsl  %ds:(%esi),(%dx)
ja     8071614 <_IO_stdin_used+0x2854>
imul   $0x6572726f,0x63(%esi),%ebp
arpl   %si,0x72(%eax,%eiz,1)
gs
jae    8071677 <_IO_stdin_used+0x28b7>
insb   (%dx),%es:(%edi)
je     8071678 <_IO_stdin_used+0x28b8>
sub    $0x20,%al
bound  %esp,0x63(%ebp)
popa
jne    8071680 <_IO_stdin_used+0x28c0>
or     %gs:0x6f(%ebx),%dh
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%esi)
insb   (%dx),%es:(%edi)
jne    807167e <_IO_stdin_used+0x28be>
jae    807163b <_IO_stdin_used+0x287b>
insl   (%dx),%es:(%edi)
popa
jns    807163f <_IO_stdin_used+0x287f>
bound  %esp,0x20(%ebp)
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     8071658 <_IO_stdin_used+0x2898>
and    %ch,0x72(%edi)
and    %ch,0x6f(%esi)
je     8071654 <_IO_stdin_used+0x2894>
popa
jbe    8071698 <_IO_stdin_used+0x28d8>
imul   $0x6120656c,0x62(%ecx,%eiz,2),%ebp
je     8071661 <_IO_stdin_used+0x28a1>
popa
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jne    80716b4 <_IO_stdin_used+0x28f4>
popa
je     80716b4 <_IO_stdin_used+0x28f4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
dec    %esi
or     $0x10807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %ah,%ch
adc    $0x7,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
pop    %ds
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
popa
fs
insl   (%dx),%es:(%edi)
pop    %edi
je     807170b <_IO_stdin_used+0x294b>
jae    807171c <_IO_stdin_used+0x295c>
add    %al,(%eax)
add    %al,(%eax)
push   %edi
pop    %es
pop    %es
or     %dh,-0xc(%eax)
add    $0x8,%al
repz adc $0x7,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
jne    8071729 <_IO_stdin_used+0x2969>
gs
jbe    8071729 <_IO_stdin_used+0x2969>
fs
insl   (%dx),%es:(%edi)
and    %ah,0x75(%edx)
imul   $0x2d5b206e,0x69(%esp,%esi,2),%ebp
sub    $0x706c6568,%eax
pop    %ebp
and    %bh,(%ebx,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs and %bh,%ds:%fs:(%ebx,%esi,2)
jns    807175d <_IO_stdin_used+0x299d>
jo     807174d <_IO_stdin_used+0x298d>
je     8071756 <_IO_stdin_used+0x2996>
or     %ds:(%eax),%al
add    %al,(%eax)
add    %ah,0x72(%ebp)
jb     8071767 <_IO_stdin_used+0x29a7>
jb     807171a <_IO_stdin_used+0x295a>
gs
js     8071762 <_IO_stdin_used+0x29a2>
arpl   %si,0x74(%ebp)
imul   $0x73252720,0x67(%esi),%ebp
daa
sub    $0x20,%al
gs
js     8071776 <_IO_stdin_used+0x29b6>
je     807172f <_IO_stdin_used+0x296f>
arpl   %bp,0x64(%edi)
and    %ah,%gs:0xa0a69
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x69(%ebp)
jae    8071798 <_IO_stdin_used+0x29d8>
imul   $0x7973000a,0x67(%esi),%ebp
jae    807179e <_IO_stdin_used+0x29de>
popa
je     8071799 <_IO_stdin_used+0x29d9>
and    %ch,0x69(%ebp)
jae    80717a9 <_IO_stdin_used+0x29e9>
imul   $0x75000a0a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edi)
and    $0xa2773,%eax
jne    80717c2 <_IO_stdin_used+0x2a02>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80717ca <_IO_stdin_used+0x2a0a>
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x73252720,0x65(%ebx),%esp
daa
or     (%edx),%cl
add    %dh,0x73(%ebp,%eiz,2)
je     80717a1 <_IO_stdin_used+0x29e1>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     80717e3 <_IO_stdin_used+0x2a23>
outsb  %ds:(%esi),(%dx)
add    %dh,0x73(%ebp,%eiz,2)
je     80717a1 <_IO_stdin_used+0x29e1>
popa
and    %ah,0x75(%edx)
imul   $0x63206e69,0x2d(%esp,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
pop    %ss
pop    %es
or     %al,%al
stc
add    $0x8,%al
jl     80717e1 <_IO_stdin_used+0x2a21>
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %ch,0x69(%ebp)
jae    8071847 <_IO_stdin_used+0x2a87>
imul   $0x6f6c6320,0x67(%esi),%ebp
jae    8071846 <_IO_stdin_used+0x2a86>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bp,%si)
popa
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     807180a <_IO_stdin_used+0x2a4a>
outsw  %ds:(%esi),(%dx)
jb     807185b <_IO_stdin_used+0x2a9b>
popa
je     8071811 <_IO_stdin_used+0x2a51>
daa
and    $0xa2773,%eax
add    %ch,0x69(%ebp)
jae    807186f <_IO_stdin_used+0x2aaf>
imul   $0x6c696620,0x67(%esi),%ebp
and    %dh,%gs:0x61(%eax)
jb     807186a <_IO_stdin_used+0x2aaa>
insl   (%dx),%es:(%edi)
gs
je     8071872 <_IO_stdin_used+0x2ab2>
jb     807182f <_IO_stdin_used+0x2a6f>
outsw  %ds:(%esi),(%dx)
jb     8071833 <_IO_stdin_used+0x2a73>
popa
je     807188a <_IO_stdin_used+0x2aca>
jb     8071822 <_IO_stdin_used+0x2a62>
add    %al,(%eax)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     807188e <_IO_stdin_used+0x2ace>
arpl   %si,0x74(%ebp)
and    %ah,%gs:(%edi)
and    $0x27202773,%eax
and    $0x203a2773,%eax
and    $0xa6d,%eax
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     80718b1 <_IO_stdin_used+0x2af1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80718b5 <_IO_stdin_used+0x2af5>
and    %ah,0x64(%esi)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    (%eax),%ah
and    $0x27000a6d,%eax
and    $0x5b202773,%eax
and    $0x65205d75,%eax
js     80718da <_IO_stdin_used+0x2b1a>
je     8071893 <_IO_stdin_used+0x2ad3>
ja     80718de <_IO_stdin_used+0x2b1e>
je     80718df <_IO_stdin_used+0x2b1f>
and    %dh,0x65(%edx)
je     80718f1 <_IO_stdin_used+0x2b31>
jb     80718ec <_IO_stdin_used+0x2b2c>
and    %ah,0x6f(%ebx)
fs and %ah,%fs:%gs:0x27000a69
and    $0x5b202773,%eax
and    $0x74205d75,%eax
gs
jb     8071903 <_IO_stdin_used+0x2b43>
imul   $0x20646574,0x61(%esi),%ebp
bound  %edi,0x20(%ecx)
jae    807190b <_IO_stdin_used+0x2b4b>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x25282069
jae    80718d7 <_IO_stdin_used+0x2b17>
or     (%eax),%al
daa
and    $0x5b202773,%eax
and    $0x65205d75,%eax
js     8071926 <_IO_stdin_used+0x2b66>
je     80718df <_IO_stdin_used+0x2b1f>
ja     807192a <_IO_stdin_used+0x2b6a>
je     807192b <_IO_stdin_used+0x2b6b>
and    %dh,0x74(%ebx)
popa
je     807193e <_IO_stdin_used+0x2b7e>
jae    80718eb <_IO_stdin_used+0x2b2b>
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
or     (%eax),%al
add    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x74656e20,0x67(%bp),%ebp
and    %ch,0x6e(%ecx)
je     807194a <_IO_stdin_used+0x2b8a>
jb     807194d <_IO_stdin_used+0x2b8d>
popa
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2773,%eax
add    %dh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x65(%esi)
je     8071987 <_IO_stdin_used+0x2bc7>
outsl  %ds:(%esi),(%dx)
jb     807197e <_IO_stdin_used+0x2bbe>
and    %ch,0x6e(%ecx)
je     807197d <_IO_stdin_used+0x2bbd>
jb     8071980 <_IO_stdin_used+0x2bc0>
popa
arpl   %sp,0x20(%ebp)
and    $0x6f742073,%eax
and    %ah,0x65000a73
jb     807199d <_IO_stdin_used+0x2bdd>
outsl  %ds:(%esi),(%dx)
jb     807194e <_IO_stdin_used+0x2b8e>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x74656e20,0x67(%bp),%ebp
and    %ch,0x6e(%ecx)
je     80719a4 <_IO_stdin_used+0x2be4>
jb     80719a7 <_IO_stdin_used+0x2be7>
popa
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f742073
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
cs
cs
das
jae    80719cf <_IO_stdin_used+0x2c0f>
arpl   %bp,(%edi)
jne    80719c5 <_IO_stdin_used+0x2c05>
gs
jbe    8071993 <_IO_stdin_used+0x2bd3>
jne    80719ca <_IO_stdin_used+0x2c0a>
gs
jbe    8071996 <_IO_stdin_used+0x2bd6>
gs
jbe    80719d1 <_IO_stdin_used+0x2c11>
outsb  %ds:(%esi),(%dx)
je     807199d <_IO_stdin_used+0x2bdd>
arpl   %ax,(%eax)
das
and    %ah,0x25002c3f(,%eiz,1)
imul   $0x72616863,(%eax),%esp
popa
arpl   %si,0x72(%ebp,%eiz,2)
sub    %dh,0x29(%ebx)
and    %dh,0x65(%edx)
jo     80719f8 <_IO_stdin_used+0x2c38>
popa
arpl   %sp,0x64(%ebp)
or     (%eax),%al
jne    8071a02 <_IO_stdin_used+0x2c42>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x206e6f69,0x74(%ebp,%esi,2),%esi
je     8071a22 <_IO_stdin_used+0x2c62>
jo     8071a10 <_IO_stdin_used+0x2c50>
cmp    $0xa6925,%eax
gs
jb     8071a25 <_IO_stdin_used+0x2c65>
add    %dh,0x69(%eax)
jo     8071a1d <_IO_stdin_used+0x2c5d>
and    %ah,0x61(%esi)
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
das
insb   (%dx),%es:(%edi)
imul   $0x76656475,0x2f(%edx),%esp
das
add    %dh,0x74(%ebx)
popa
jb     8071a49 <_IO_stdin_used+0x2c89>
imul   $0x73252720,0x67(%esi),%ebp
daa
or     (%eax),%al
das
fs
gs
jbe    8071a13 <_IO_stdin_used+0x2c53>
outsb  %ds:(%esi),(%dx)
jne    8071a53 <_IO_stdin_used+0x2c93>
insb   (%dx),%es:(%edi)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,(%edi)
fs
gs
jbe    8071a22 <_IO_stdin_used+0x2c62>
outsb  %ds:(%esi),(%dx)
jne    8071a62 <_IO_stdin_used+0x2ca2>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%esi)
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
outsw  %ds:(%esi),(%dx)
jb     8071a73 <_IO_stdin_used+0x2cb3>
and    %ch,0x66(%edi)
and    %ah,(%edi)
and    $0x66202773,%eax
popa
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
je     8071a88 <_IO_stdin_used+0x2cc8>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8071a98 <_IO_stdin_used+0x2cd8>
and    %ah,(%edi)
and    $0xa2773,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     8071aa6 <_IO_stdin_used+0x2ce6>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    (%eax),%ah
and    $0x27000a6d,%eax
and    $0x72202773,%eax
gs
jae    8071abb <_IO_stdin_used+0x2cfb>
imul   $0x647a2520,0x65(%edx),%edi
and    %dh,0x6f(%edi,%ebp,2)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jb     8071acd <_IO_stdin_used+0x2d0d>
or     (%eax),%al
daa
and    $0x25282773,%eax
jae    8071a8c <_IO_stdin_used+0x2ccc>
and    %ah,(%edi)
and    $0xa2773,%eax
je     8071ad5 <_IO_stdin_used+0x2d15>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8071ae5 <_IO_stdin_used+0x2d25>
cmp    (%eax),%ah
imul   $0x6c,0x6c(%ecx),%ebp
imul   $0x73252720,0x67(%esi),%ebp
daa
and    %bl,0x25(%ebx)
jne    8071ae1 <_IO_stdin_used+0x2d21>
or     (%eax),%al
daa
and    $0x5b202773,%eax
and    $0x73205d75,%eax
je     8071b02 <_IO_stdin_used+0x2d42>
jo     8071b05 <_IO_stdin_used+0x2d45>
gs or  %fs:%gs:(%eax),%al
daa
and    $0x5b202773,%eax
and    $0x63205d75,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8071b11 <_IO_stdin_used+0x2d51>
outsb  %ds:(%esi),(%dx)
jne    8071b10 <_IO_stdin_used+0x2d50>
or     %fs:(%eax),%al
jb     8071b15 <_IO_stdin_used+0x2d55>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8071b19 <_IO_stdin_used+0x2d59>
add    %ah,0x72(%ebp)
jb     8071b28 <_IO_stdin_used+0x2d68>
jb     8071adb <_IO_stdin_used+0x2d1b>
outsl  %ds:(%esi),(%dx)
jo     8071b23 <_IO_stdin_used+0x2d63>
outsb  %ds:(%esi),(%dx)
imul   $0x636f7320,0x67(%esi),%ebp
imul   $0x3a,0x74(%ebp),%esp
and    %ah,0x72000a6d
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
and    $0x65720075,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x65(%esi)
je     8071b4d <_IO_stdin_used+0x2d8d>
data16
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
dec    %ecx
dec    %esi
push   %esp
inc    %ebp
push   %edx
inc    %esi
inc    %ecx
inc    %ebx
inc    %ebp
pop    %edi
dec    %edi
dec    %esp
inc    %esp
add    %cl,0x4e(%ecx)
push   %esp
inc    %ebp
push   %edx
inc    %esi
inc    %ecx
inc    %ebx
inc    %ebp
add    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x65(%si)
jbe    8071b83 <_IO_stdin_used+0x2dc3>
popa
je     8071b7e <_IO_stdin_used+0x2dbe>
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    8071b46 <_IO_stdin_used+0x2d86>
gs
js     8071b8e <_IO_stdin_used+0x2dce>
arpl   %si,0x74(%ebp)
imul   $0x20666f20,0x6e(%edi),%ebp
daa
and    $0xa2773,%eax
fs
gs
jbe    8071bab <_IO_stdin_used+0x2deb>
outsl  %ds:(%esi),(%dx)
fs add %dh,%fs:%gs:0x6d(%ebp,%eiz,2)
jo     8071bb4 <_IO_stdin_used+0x2df4>
outsl  %ds:(%esi),(%dx)
fs add %ah,%fs:%gs:0x74(%ecx)
je     8071bc0 <_IO_stdin_used+0x2e00>
add    %dh,0x79(%ebx)
jae    8071bb9 <_IO_stdin_used+0x2df9>
jae    8071b55 <_IO_stdin_used+0x2d95>
outsb  %ds:(%esi),(%dx)
jne    8071bc5 <_IO_stdin_used+0x2e05>
bound  %esp,0x72(%ebp)
add    %ah,0x76(%ebp,%eiz,2)
jo     8071bc2 <_IO_stdin_used+0x2e02>
je     8071bcb <_IO_stdin_used+0x2e0b>
add    %ch,0x61(%ebp)
push   $0x6f
jb     8071b6a <_IO_stdin_used+0x2daa>
insl   (%dx),%es:(%edi)
imul   $0x65720072,0x6f(%esi),%ebp
jae    8071be9 <_IO_stdin_used+0x2e29>
insb   (%dx),%es:(%edi)
je     8071b77 <_IO_stdin_used+0x2db7>
jo     8071bda <_IO_stdin_used+0x2e1a>
jb     8071be0 <_IO_stdin_used+0x2e20>
outsb  %ds:(%esi),(%dx)
je     8071b7e <_IO_stdin_used+0x2dbe>
add    %al,(%eax)
pop    %eax
xlat   %ds:(%ebx)
cld
pushl  (%edi)
xlat   %ds:(%ebx)
cld
decl   (%ebx)
(bad)
cld
decl   (%edi)
xlat   %ds:(%ebx)
cld
lcall  *(%ebx)
sar    %cl,%esp
(bad)
ljmp   $0xfcd5,$0xb5fffcd5
(bad)
(bad)
cld
call   *-0x2d(%ebx)
cld
jmp    *-0x2d(%ebx)
cld
(bad)
mov    $0xdbfffcd3,%eax
sar    %cl,%esp
decl   -0x4200032c(%esi)
aam    $0xfc
(bad)
ljmp   $0xfcd5,$0x9ffffcd4
ljmp   *0x72fffcd5(%edx)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
je     8071c38 <_IO_stdin_used+0x2e78>
data16
add    %dh,0x64(%ebp)
gs
jbe    8071c35 <_IO_stdin_used+0x2e75>
gs
jbe    8071c3e <_IO_stdin_used+0x2e7e>
outsb  %ds:(%esi),(%dx)
je     8071c3b <_IO_stdin_used+0x2e7b>
gs
js     8071c44 <_IO_stdin_used+0x2e84>
arpl   %si,0x74(%ebp)
gs
pop    %edi
jb     8071c5b <_IO_stdin_used+0x2e9b>
insb   (%dx),%es:(%edi)
gs
jae    8071bea <_IO_stdin_used+0x2e2a>
jae    8071c5c <_IO_stdin_used+0x2e9c>
popa
ja     8071c5d <_IO_stdin_used+0x2e9d>
pop    %edi
ja     8071c53 <_IO_stdin_used+0x2e93>
imul   $0x6e776170,0x73(%eax,%eax,1),%esi
pop    %edi
jb     8071c62 <_IO_stdin_used+0x2ea2>
popa
add    %dh,%fs:0x70(%ebx)
popa
ja     8071c73 <_IO_stdin_used+0x2eb3>
pop    %edi
gs
js     8071c6e <_IO_stdin_used+0x2eae>
arpl   %ax,(%eax)
jne    8071c71 <_IO_stdin_used+0x2eb1>
gs
jbe    8071c6f <_IO_stdin_used+0x2eaf>
gs
jbe    8071c78 <_IO_stdin_used+0x2eb8>
outsb  %ds:(%esi),(%dx)
je     8071c75 <_IO_stdin_used+0x2eb5>
jae    8071c88 <_IO_stdin_used+0x2ec8>
popa
ja     8071c89 <_IO_stdin_used+0x2ec9>
add    %dh,0x64(%ebp)
gs
jbe    8071c80 <_IO_stdin_used+0x2ec0>
gs
jbe    8071c89 <_IO_stdin_used+0x2ec9>
outsb  %ds:(%esi),(%dx)
je     8071c86 <_IO_stdin_used+0x2ec6>
popa
jo     8071c9a <_IO_stdin_used+0x2eda>
insb   (%dx),%es:(%edi)
jns    8071c8c <_IO_stdin_used+0x2ecc>
outsw  %ds:(%esi),(%dx)
jb     8071c9e <_IO_stdin_used+0x2ede>
popa
je     8071c34 <_IO_stdin_used+0x2e74>
cs
cs
das
jae    8071cab <_IO_stdin_used+0x2eeb>
arpl   %bp,(%edi)
jne    8071ca1 <_IO_stdin_used+0x2ee1>
gs
jbe    8071c6f <_IO_stdin_used+0x2eaf>
jne    8071ca6 <_IO_stdin_used+0x2ee6>
gs
jbe    8071c72 <_IO_stdin_used+0x2eb2>
ja     8071ca8 <_IO_stdin_used+0x2ee8>
je     8071cac <_IO_stdin_used+0x2eec>
push   $0x6100632e
fs imul $0x74617720,%fs:0x67(%esi),%ebp
74
arpl   %bp,0x20(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2773,%eax
das
jb     8071cdb <_IO_stdin_used+0x2f1b>
outsb  %ds:(%esi),(%dx)
das
jne    8071cce <_IO_stdin_used+0x2f0e>
gs
jbe    8071c9c <_IO_stdin_used+0x2edc>
ja     8071cd0 <_IO_stdin_used+0x2f10>
je     8071cd4 <_IO_stdin_used+0x2f14>
push   $0x64252f
das
jb     8071cee <_IO_stdin_used+0x2f2e>
outsb  %ds:(%esi),(%dx)
das
jne    8071ce1 <_IO_stdin_used+0x2f21>
gs
jbe    8071caf <_IO_stdin_used+0x2eef>
ja     8071ce3 <_IO_stdin_used+0x2f23>
je     8071ce7 <_IO_stdin_used+0x2f27>
push   $0x646c6f2e
add    %dh,0x65(%edx)
jae    8071d02 <_IO_stdin_used+0x2f42>
outsl  %ds:(%esi),(%dx)
jb     8071cfa <_IO_stdin_used+0x2f3a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6c(%bx)
and    %dh,%fs:0x61(%edi)
je     8071cff <_IO_stdin_used+0x2f3f>
push   $0x206e6f20
daa
and    $0xa2773,%eax
jb     8071d0e <_IO_stdin_used+0x2f4e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8071d16 <_IO_stdin_used+0x2f56>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bx)
je     8071d17 <_IO_stdin_used+0x2f57>
push   $0x206e6f20
daa
and    $0xa2773,%eax
jne    8071d25 <_IO_stdin_used+0x2f65>
gs
jbe    8071d23 <_IO_stdin_used+0x2f63>
ja     8071d27 <_IO_stdin_used+0x2f67>
je     8071d2b <_IO_stdin_used+0x2f6b>
push   $0x646e655f
add    %ch,(%esi)
cs
das
jae    8071d45 <_IO_stdin_used+0x2f85>
arpl   %bp,(%edi)
jne    8071d3b <_IO_stdin_used+0x2f7b>
gs
jbe    8071d09 <_IO_stdin_used+0x2f49>
jne    8071d40 <_IO_stdin_used+0x2f80>
gs
jbe    8071d0c <_IO_stdin_used+0x2f4c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs gs arpl %ax,%cs:%fs:%gs:(%eax)
popa
je     8071d58 <_IO_stdin_used+0x2f98>
insl   (%dx),%es:(%edi)
imul   $0x20796c6c,0x61(%ebx),%esp
jb     8071d58 <_IO_stdin_used+0x2f98>
jo     8071d61 <_IO_stdin_used+0x2fa1>
popa
arpl   %sp,0x20(%ebp)
daa
and    $0xa2773,%eax
je,pn  8071d6f <_IO_stdin_used+0x2faf>
jo     8071d31 <_IO_stdin_used+0x2f71>
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x73252720,0x6b(%esi),%ebp
daa
and    %ah,(%edi)
and    $0x66202773,%eax
popa
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
jb     8071d8a <_IO_stdin_used+0x2fca>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x27202773,%eax
and    $0x66202773,%eax
popa
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
das
jb     8071db8 <_IO_stdin_used+0x2ff8>
outsb  %ds:(%esi),(%dx)
das
jne    8071dab <_IO_stdin_used+0x2feb>
gs
jbe    8071d79 <_IO_stdin_used+0x2fb9>
insb   (%dx),%es:(%edi)
imul   $0x66002f73,0x6b(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    8071dc3 <_IO_stdin_used+0x3003>
and    %ah,%fs:(%edi)
and    $0x63202773,%eax
insb   (%dx),%es:(%edi)
popa
imul   $0x2720676e,0x69(%ebp),%ebp
and    $0xa2773,%eax
arpl   %si,0x65(%edx)
popa
je     8071dda <_IO_stdin_used+0x301a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
imul   $0x27,(%eax),%esp
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2773,%eax
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x63,(%eax),%eax
push   $0x7261
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
fs
gs
jbe    8071e0d <_IO_stdin_used+0x304d>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%edi)
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jne    8071e23 <_IO_stdin_used+0x3063>
fs
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
daa
and    $0x77202773,%eax
imul   $0x20746f6e,0x20(%esp,%ebp,2),%ebp
bound  %esp,0x20(%ebp)
arpl   %si,0x65(%edx)
popa
je     8071e3c <_IO_stdin_used+0x307c>
or     %fs:(%eax),%al
add    %al,(%eax)
jo     8071e50 <_IO_stdin_used+0x3090>
gs
jae    8071e46 <_IO_stdin_used+0x3086>
jb     8071e59 <_IO_stdin_used+0x3099>
and    %ah,%gs:0x6c(%ecx)
jb     8071e4e <_IO_stdin_used+0x308e>
popa
fs
jns    8071e0d <_IO_stdin_used+0x304d>
gs
js     8071e59 <_IO_stdin_used+0x3099>
jae    8071e66 <_IO_stdin_used+0x30a6>
imul   $0x6d797320,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x73252720,0x6b(%esi),%ebp
daa
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
arpl   %si,0x65(%edx)
popa
je     8071e7b <_IO_stdin_used+0x30bb>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%bp,%di)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x73252720,0x6b(%esi),%ebp
daa
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
add    %ah,(%edi)
and    $0x63202773,%eax
insb   (%dx),%es:(%edi)
popa
imul   $0x69727020,0x73(%ebp),%ebp
outsl  %ds:(%esi),(%dx)
jb     8071ea7 <_IO_stdin_used+0x30e7>
je     8071eb9 <_IO_stdin_used+0x30f9>
and    %ah,0x6f662069
jb     8071e68 <_IO_stdin_used+0x30a8>
daa
and    $0xa2773,%eax
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
data16
gs
jb     8071ebe <_IO_stdin_used+0x30fe>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
insb   (%dx),%es:(%edi)
gs
data16
je     8071e8e <_IO_stdin_used+0x30ce>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8071ece <_IO_stdin_used+0x310e>
and    %ah,(%edi)
and    $0xa2773,%eax
jne    8071ee2 <_IO_stdin_used+0x3122>
fs
popa
je     8071edb <_IO_stdin_used+0x311b>
and    %ch,0x6c(%edi)
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
daa
and    $0x6e202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
addr16
gs
jb     8071eb0 <_IO_stdin_used+0x30f0>
bound  %esp,0x6c(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x206f7420,0x67(%bp),%ebp
daa
and    $0xa2773,%eax
add    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
imul   $0x76656420,0x67(%esi),%ebp
imul   $0x646f6e20,0x65(%ebx),%esp
and    %ah,%gs:(%edi)
and    $0x202c2773,%eax
fs
gs
jbe    8071f31 <_IO_stdin_used+0x3171>
jne    8071f32 <_IO_stdin_used+0x3172>
cmp    $0x202c7325,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
cmp    $0x2c6f2325,%eax
and    %dh,0x69(%ebp)
fs
cmp    $0x202c6425,%eax
imul   $0xa6425,0x3d(%si),%esp
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%esi)
je     8071f0c <_IO_stdin_used+0x314c>
jae    8071f62 <_IO_stdin_used+0x31a2>
popa
je     8071f19 <_IO_stdin_used+0x3159>
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%edi)
and    $0x28202773,%eax
and    $0xa296d,%eax
add    %ah,0x6f(%esi)
jne    8071f76 <_IO_stdin_used+0x31b6>
and    %ch,%fs:0x6f(%esi)
fs and %ah,%fs:%gs:(%edi)
and    $0x77202773,%eax
imul   $0x2d6e6f6e,0x20(%eax,%ebp,2),%esi
insl   (%dx),%es:(%edi)
popa
je     8071f84 <_IO_stdin_used+0x31c4>
push   $0x20676e69
fs
gs
jbe    8071f98 <_IO_stdin_used+0x31d8>
jne    8071f99 <_IO_stdin_used+0x31d9>
and    %ah,0x73202c73
imul   $0x20,0x70(%ecx),%ebp
push   $0x6c646e61
imul   $0x6573000a,0x67(%esi),%ebp
je     8071f64 <_IO_stdin_used+0x31a4>
jo     8071fab <_IO_stdin_used+0x31eb>
jb     8071fb5 <_IO_stdin_used+0x31f5>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x25202c73
and    0x2c(%edi),%ebp
and    %dh,0x69(%ebp)
fs
cmp    $0x202c7525,%eax
imul   $0xa7525,0x3d(%si),%esp
add    %al,(%eax)
add    %dh,0x72(%eax)
gs
jae    8071fd6 <_IO_stdin_used+0x3216>
jb     8071fe9 <_IO_stdin_used+0x3229>
and    %dh,%gs:0x65(%eax)
jb     8071fe6 <_IO_stdin_used+0x3226>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x25202c73
and    0x2c(%edi),%ebp
and    %dh,0x69(%ebp)
fs
cmp    $0x202c7525,%eax
imul   $0xa7525,0x3d(%si),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
jo     8072006 <_IO_stdin_used+0x3246>
jb     8072010 <_IO_stdin_used+0x3250>
imul   $0x736e6f69,0x73(%ebx),%esi
pop    %edi
popa
jo     807201e <_IO_stdin_used+0x325e>
insb   (%dx),%es:(%edi)
jns    8071fb1 <_IO_stdin_used+0x31f1>
jne    8072017 <_IO_stdin_used+0x3257>
gs
jbe    8072015 <_IO_stdin_used+0x3255>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
popa
fs add %ch,%fs:0x6f(%esi)
fs
gs
pop    %edi
jae    807203f <_IO_stdin_used+0x327f>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6e696c00,0x6b(%esi),%ebp
imul   $0x69,0x66(%edi),%ebx
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jo     807204a <_IO_stdin_used+0x328a>
imul   $0x7a697469,0x72(%edi),%ebp
gs add %ch,%fs:%gs:0x6e(%ecx,%ebp,2)
imul   $0x70,0x75(%edi),%ebx
fs
popa
je     8072052 <_IO_stdin_used+0x3292>
add    %dh,0x64(%ebp)
gs
jbe    8072052 <_IO_stdin_used+0x3292>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
jne    807206a <_IO_stdin_used+0x32aa>
fs
popa
je     8072063 <_IO_stdin_used+0x32a3>
pop    %edi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x73,0x6b(%esi),%ebp
add    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    807207c <_IO_stdin_used+0x32bc>
jae    8072089 <_IO_stdin_used+0x32c9>
outsb  %gs:(%esi),(%dx)
je     8072039 <_IO_stdin_used+0x3279>
jno    8072090 <_IO_stdin_used+0x32d0>
outsl  %ds:(%esi),(%dx)
je     8072087 <_IO_stdin_used+0x32c7>
outsb  %ds:(%esi),(%dx)
cmp    (%bx,%si),%ah
daa
and    $0x202c2773,%eax
jae    8072095 <_IO_stdin_used+0x32d5>
imul   $0x75000000,0xa(%eax),%esi
jo     8072097 <_IO_stdin_used+0x32d7>
popa
je     807209f <_IO_stdin_used+0x32df>
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    80720ad <_IO_stdin_used+0x32ed>
popa
je     80720a8 <_IO_stdin_used+0x32e8>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2773,%eax
je     80720bb <_IO_stdin_used+0x32fb>
insl   (%dx),%es:(%edi)
jo     80720c8 <_IO_stdin_used+0x3308>
jb     80720bc <_IO_stdin_used+0x32fc>
jb     80720d6 <_IO_stdin_used+0x3316>
and    %dh,0x75(%edx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx)
jb     80720c8 <_IO_stdin_used+0x3308>
jns    8072089 <_IO_stdin_used+0x32c9>
je     80720da <_IO_stdin_used+0x331a>
outsl  %ds:(%esi),(%dx)
and    %dh,0x6d(%ebx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%al
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x61726220,0x67(%esi),%ebp
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     80720ae <_IO_stdin_used+0x32ee>
outsw  %ds:(%esi),(%dx)
jb     80720ff <_IO_stdin_used+0x333f>
popa
je     807209f <_IO_stdin_used+0x32df>
add    %al,(%eax)
add    %ch,0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ah,(%bx)
and    $0x253a2773,%eax
jne    80720da <_IO_stdin_used+0x331a>
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     807211a <_IO_stdin_used+0x335a>
or     %fs:(%eax),%al
daa
and    $0x6d202773,%eax
jne    8072133 <_IO_stdin_used+0x3373>
je     80720e2 <_IO_stdin_used+0x3322>
bound  %esp,0x20(%ebp)
jae    8072137 <_IO_stdin_used+0x3377>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x20736120,0x64(%ebp),%esp
daa
jae    807214a <_IO_stdin_used+0x338a>
bound  %esi,0x79(%ebx)
jae    807214e <_IO_stdin_used+0x338e>
gs
insl   (%dx),%es:(%edi)
daa
and    %cl,(%edx)
jo     807214d <_IO_stdin_used+0x338d>
gs
popa
jae    807214a <_IO_stdin_used+0x338a>
and    %ah,0x69(%esi)
js     807210a <_IO_stdin_used+0x334a>
imul   $0x7325206e,0x69(%eax,%eiz,1),%esi
cmp    0x75,%ah
gs
jb     807216d <_IO_stdin_used+0x33ad>
outsl  %ds:(%esi),(%dx)
jb     807211e <_IO_stdin_used+0x335e>
jo     8072161 <_IO_stdin_used+0x33a1>
jb     8072175 <_IO_stdin_used+0x33b5>
imul   $0x54544120,0x67(%esi),%ebp
push   %edx
push   %ebx
and    %ah,0x74(%ecx)
je     8072182 <_IO_stdin_used+0x33c2>
imul   $0xa6574,0x75(%edx),%esp
add    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
gs
jbe    807218a <_IO_stdin_used+0x33ca>
arpl   %sp,0x27(%ebp)
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x6d,(%eax),%esp
popa
jns    807214e <_IO_stdin_used+0x338e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8072152 <_IO_stdin_used+0x3392>
bound  %esp,0x20(%ebp)
popa
jbe    8072199 <_IO_stdin_used+0x33d9>
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
data16
jne    80721bb <_IO_stdin_used+0x33fb>
jne    80721bb <_IO_stdin_used+0x33fb>
and    %ch,%gs:0x65(%ebx)
jb     80721bd <_IO_stdin_used+0x33fd>
gs
insb   (%dx),%es:(%edi)
sub    $0x20,%al
jo     80721c1 <_IO_stdin_used+0x3401>
gs
popa
jae    80721be <_IO_stdin_used+0x33fe>
and    %ah,0x69(%esi)
js     807217e <_IO_stdin_used+0x33be>
imul   $0x7325206e,0x69(%eax,%eiz,1),%esi
cmp    0x75,%ah
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8072193 <_IO_stdin_used+0x33d3>
jb     80721da <_IO_stdin_used+0x341a>
data16
gs
jb     80721de <_IO_stdin_used+0x341e>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
jo     80721e0 <_IO_stdin_used+0x3420>
jb     80721e6 <_IO_stdin_used+0x3426>
outsb  %ds:(%esi),(%dx)
je     80721a4 <_IO_stdin_used+0x33e4>
jae    80721ff <_IO_stdin_used+0x343f>
jae    80721ee <_IO_stdin_used+0x342e>
jae    80721aa <_IO_stdin_used+0x33ea>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x72696420,0x73(%ebp),%esp
arpl   %si,%gs:0x79(%esp,%ebp,2)
sub    $0x20,%al
imul   $0x62207961,0x6d(%eax,%eiz,1),%esi
jb     807220f <_IO_stdin_used+0x344f>
popa
imul   $0x77,(%eax),%esp
imul   $0x75662061,0x20(%eax,%ebp,2),%esi
je     807222d <_IO_stdin_used+0x346d>
jb     807221f <_IO_stdin_used+0x345f>
and    %ch,0x65(%ebx)
jb     807222d <_IO_stdin_used+0x346d>
gs
insb   (%dx),%es:(%edi)
sub    $0x20,%al
jo     8072231 <_IO_stdin_used+0x3471>
gs
popa
jae    807222e <_IO_stdin_used+0x346e>
and    %ah,0x69(%esi)
js     80721ee <_IO_stdin_used+0x342e>
imul   $0x7325206e,0x69(%eax,%eiz,1),%esi
cmp    0x75,%ah
imul   $0x64696c61,0x76(%esi),%ebp
and    %al,0x4e(%ebp)
push   %esi
and    %ah,0x74(%ecx)
je     807225e <_IO_stdin_used+0x349e>
imul   $0x202c6574,0x75(%edx),%esp
daa
and    $0x63202773,%eax
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8072220 <_IO_stdin_used+0x3460>
bound  %esp,0x20(%ebp)
jae    807226a <_IO_stdin_used+0x34aa>
je     8072227 <_IO_stdin_used+0x3467>
and    $0x75253a73,%eax
or     (%eax),%al
add    %al,(%eax)
dec    %ecx
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
jnp    8072295 <_IO_stdin_used+0x34d5>
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x69(%ebp)
jae    8072295 <_IO_stdin_used+0x34d5>
imul   $0x6769202c,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8072296 <_IO_stdin_used+0x34d6>
outsb  %ds:(%esi),(%dx)
and    %cl,0x4d(%bx,%di)
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x75253a73
or     (%eax),%al
add    %al,(%eax)
dec    %ecx
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x6f(%esi)
jne    80722b9 <_IO_stdin_used+0x34f9>
and    %ah,%fs:0x75(%edx)
imul   $0x2527206e,0x69(%esp,%esi,2),%ebp
jae    8072280 <_IO_stdin_used+0x34c0>
sub    $0x20,%al
jb     80722c2 <_IO_stdin_used+0x3502>
jo     80722cb <_IO_stdin_used+0x350b>
popa
arpl   %bp,0x6e(%ecx)
and    %ah,(%di)
jae    80722a2 <_IO_stdin_used+0x34e2>
and    $0x49000a75,%eax
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
jnp    80722d6 <_IO_stdin_used+0x3516>
jne    80722df <_IO_stdin_used+0x351f>
insb   (%dx),%es:(%edi)
je     80722e2 <_IO_stdin_used+0x3522>
outsb  %ds:(%esi),(%dx)
jge    80722b6 <_IO_stdin_used+0x34f6>
and    %ah,(%edi)
and    $0x75202773,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x75253a73
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
jnp    8072319 <_IO_stdin_used+0x3559>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
gs
sub    $0x20,%al
imul   $0x6e69726f,0x6e(%edi),%esp
and    %cl,0x4d(%bx,%di)
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x75253a73
or     (%eax),%al
add    %al,(%eax)
push   %edx
push   %ebp
dec    %esi
jnp    8072346 <_IO_stdin_used+0x3586>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
gs
sub    $0x20,%al
imul   $0x6e69726f,0x6e(%edi),%esp
and    %dl,0x55(%bp,%si)
dec    %esi
and    %ah,0x75253a73
or     (%eax),%al
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
cmp    $0x6b252522,%eax
and    (%eax),%ah
imul   $0x6f6e6769,0x20(%ebx),%esi
jb     8072365 <_IO_stdin_used+0x35a5>
fs
sub    $0x20,%al
bound  %esp,0x63(%ebp)
popa
jne    807237c <_IO_stdin_used+0x35bc>
and    %ch,%gs:0x74(%ecx)
and    %ah,0x72(%edx)
gs
popa
imul   $0x6b,0x20(%ebx),%esi
gs
jb     8072387 <_IO_stdin_used+0x35c7>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x75(%ebx)
jo     8072390 <_IO_stdin_used+0x35d0>
insb   (%dx),%es:(%edi)
imul   $0x6d616e20,0x64(%ebp),%esp
gs
jae    8072357 <_IO_stdin_used+0x3597>
and    %dh,0x6c(%eax)
gs
popa
jae    8072397 <_IO_stdin_used+0x35d7>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    807239e <_IO_stdin_used+0x35de>
and    %ch,0x74(%ecx)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x75253a73
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x41(%esi)
dec    %ebp
inc    %ebp
cmp    $0x69202222,%eax
jae    8072377 <_IO_stdin_used+0x35b7>
imul   $0x6465726f,0x6e(%edi),%esp
sub    $0x20,%al
bound  %esp,0x63(%ebp)
popa
jne    80723d9 <_IO_stdin_used+0x3619>
and    %dh,%gs:0x64(%ebp)
gs
jbe    807238d <_IO_stdin_used+0x35cd>
ja     80723d8 <_IO_stdin_used+0x3618>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     8072396 <_IO_stdin_used+0x35d6>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     80723e1 <_IO_stdin_used+0x3621>
and    %ah,0x6e(%ecx)
jns    80723a1 <_IO_stdin_used+0x35e1>
fs
gs
jbe    80723ee <_IO_stdin_used+0x362e>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80723ba <_IO_stdin_used+0x35fa>
and    %dh,0x6c(%eax)
gs
popa
jae    80723fa <_IO_stdin_used+0x363a>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8072401 <_IO_stdin_used+0x3641>
and    %ch,0x74(%ecx)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x75253a73
or     (%eax),%al
inc    %edi
dec    %edi
push   %esp
dec    %edi
and    %ah,(%edi)
and    $0x68202773,%eax
popa
jae    80723da <_IO_stdin_used+0x361a>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     8072424 <_IO_stdin_used+0x3664>
push   $0x20676e69
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
and    %ch,0x6e(%ecx)
cmp    (%eax),%ah
daa
and    $0xa2773,%eax
add    %al,(%eax)
jb     807243f <_IO_stdin_used+0x367f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ch,%fs:0x6d697420
gs
jae    807245b <_IO_stdin_used+0x369b>
popa
insl   (%dx),%es:(%edi)
jo     807240b <_IO_stdin_used+0x364b>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,(%edi)
and    $0x63202773,%eax
push   $0x65676e61
or     %fs:(%eax),%al
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6964,0x20(%edi),%sp
jb     807247c <_IO_stdin_used+0x36bc>
arpl   %si,0x72(%edi,%ebp,2)
jns    807243d <_IO_stdin_used+0x367d>
popa
jb     8072492 <_IO_stdin_used+0x36d2>
popa
jns    8072423 <_IO_stdin_used+0x3663>
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6964,0x20(%edi),%sp
jb     80724ab <_IO_stdin_used+0x36eb>
arpl   %si,0x72(%edi,%ebp,2)
imul   $0x6600000a,0x73(%ebp),%esp
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsb  %gs:(%esi),(%dx)
jne    80724cb <_IO_stdin_used+0x370b>
gs
jb     80724c2 <_IO_stdin_used+0x3702>
je     80724c8 <_IO_stdin_used+0x3708>
and    %dh,0x75(%edx)
insb   (%dx),%es:(%edi)
gs
jae    807248a <_IO_stdin_used+0x36ca>
imul   $0x203a,0x73(%ebp,%eiz,2),%bp
and    $0xa73,%eax
add    %al,(%eax)
jb     80724ef <_IO_stdin_used+0x372f>
insb   (%dx),%es:(%edi)
gs
jae    807249e <_IO_stdin_used+0x36de>
arpl   %bp,0x6e(%edi)
je     80724e4 <_IO_stdin_used+0x3724>
imul   $0x20757a25,0x20(%esi),%ebp
bound  %edi,0x74(%ecx)
gs
jae    80724b0 <_IO_stdin_used+0x36f0>
je     8072501 <_IO_stdin_used+0x3741>
imul   $0x73,0x6e(%ebp),%esp
and    %ch,(%eax)
and    $0x202a2075,%eax
and    $0x6220757a,%eax
jns    8072518 <_IO_stdin_used+0x3758>
gs
jae    80724d0 <_IO_stdin_used+0x3710>
sub    $0x20,%al
and    $0x6220757a,%eax
jns    8072524 <_IO_stdin_used+0x3764>
gs
jae    80724d3 <_IO_stdin_used+0x3713>
jae    8072529 <_IO_stdin_used+0x3769>
jb     8072520 <_IO_stdin_used+0x3760>
outsb  %ds:(%esi),(%dx)
addr16 jae 80724c5 <_IO_stdin_used+0x3705>
add    %ah,0x7320757a
je     8072535 <_IO_stdin_used+0x3775>
imul   $0x25282073,0x67(%esi),%ebp
jp     8072541 <_IO_stdin_used+0x3781>
and    %ah,0x79(%edx)
je     8072536 <_IO_stdin_used+0x3776>
jae    80724fc <_IO_stdin_used+0x373c>
sub    $0x20,%al
and    $0x6420757a,%eax
gs
sub    $0x6c707564,%eax
imul   $0x20646574,0x61(%ebx),%esp
sub    %ah,0x6220757a
jns    8072563 <_IO_stdin_used+0x37a3>
gs
jae    807251b <_IO_stdin_used+0x375b>
sub    $0x20,%al
and    $0x7420757a,%eax
jb     8072564 <_IO_stdin_used+0x37a4>
and    %ch,%gs:0x6f(%esi)
fs
gs
jae    8072523 <_IO_stdin_used+0x3763>
jne    8072578 <_IO_stdin_used+0x37b8>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x61202773,%eax
jo     8072589 <_IO_stdin_used+0x37c9>
gs
popa
jb     8072582 <_IO_stdin_used+0x37c2>
and    %ah,%fs:0x66(%ecx)
je     8072588 <_IO_stdin_used+0x37c8>
jb     8072545 <_IO_stdin_used+0x3785>
and    $0x6f6c2069,%eax
outsl  %ds:(%esi),(%dx)
jo     80725a0 <_IO_stdin_used+0x37e0>
or     (%eax),%al
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x73696420,0x65(%ebx),%esp
popa
jo     80725ad <_IO_stdin_used+0x37ed>
gs
popa
jb     80725a6 <_IO_stdin_used+0x37e6>
and    %dh,%fs:0x68(%edi)
imul   $0x74696177,0x20(%ebp,%eiz,2),%ebp
imul   $0x726f6620,0x67(%esi),%ebp
and    %ah,(%edi)
and    $0xa2773,%eax
add    %dh,0x61(%edi)
imul   $0x2720726f,0x66(%eax,%eiz,1),%esi
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     807258e <_IO_stdin_used+0x37ce>
and    $0x736d2069,%eax
arpl   %bp,%gs:0x6e(%edi)
fs
jae    8072584 <_IO_stdin_used+0x37c4>
add    %al,(%eax)
dec    %ecx
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x75(%edx)
imul   $0x6b73206e,0x69(%esp,%esi,2),%ebp
imul   $0x27732527,0x20(%eax),%esi
and    %ah,0x75253a73
or     (%eax),%al
dec    %ecx
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x75(%edx)
imul   $0x2527206e,0x69(%esp,%esi,2),%ebp
jae    80725d6 <_IO_stdin_used+0x3816>
and    %dh,0x65(%edx)
je     8072629 <_IO_stdin_used+0x3869>
jb     8072624 <_IO_stdin_used+0x3864>
gs and %ch,%fs:%gs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x6f72657a,%eax
or     (%eax),%al
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8072633 <_IO_stdin_used+0x3873>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
jbe    8072632 <_IO_stdin_used+0x3872>
insb   (%dx),%es:(%edi)
imul   $0x6e206761,0x74(%eax,%eiz,1),%esp
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0xa2773,%eax
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
cmp    $0x22732522,%eax
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8072659 <_IO_stdin_used+0x3899>
fs
sub    $0x20,%al
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x646f6e20,0x65(%ebx),%esp
gs
jae    807262b <_IO_stdin_used+0x386b>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%esi)
je     8072633 <_IO_stdin_used+0x3873>
bound  %esp,0x20(%ebp)
jb     807267d <_IO_stdin_used+0x38bd>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs cmp %fs:%gs:(%eax),%esp
jo     807268d <_IO_stdin_used+0x38cd>
gs
popa
jae    807268a <_IO_stdin_used+0x38ca>
and    %ah,0x69(%esi)
js     807264a <_IO_stdin_used+0x388a>
imul   $0x7325206e,0x69(%eax,%eiz,1),%esi
cmp    0xa75,%ah
gs
jb     80726ad <_IO_stdin_used+0x38ed>
outsl  %ds:(%esi),(%dx)
jb     807265e <_IO_stdin_used+0x389e>
outsl  %ds:(%esi),(%dx)
jo     80726a6 <_IO_stdin_used+0x38e6>
outsb  %ds:(%esi),(%dx)
imul   $0x54544120,0x67(%esi),%ebp
push   %edx
jnp    8072671 <_IO_stdin_used+0x38b1>
jae    80726cb <_IO_stdin_used+0x390b>
and    %ah,0x6f(%esi)
jb     8072673 <_IO_stdin_used+0x38b3>
ja     80726c7 <_IO_stdin_used+0x3907>
imul   $0x25203a67,0x6e(%ecx,%ebp,2),%esi
insl   (%dx),%es:(%edi)
or     (%eax),%al
cs
cs
das
jae    80726d7 <_IO_stdin_used+0x3917>
arpl   %bp,(%edi)
jne    80726cd <_IO_stdin_used+0x390d>
gs
jbe    807269b <_IO_stdin_used+0x38db>
jne    80726d2 <_IO_stdin_used+0x3912>
gs
jbe    807269e <_IO_stdin_used+0x38de>
jb     80726e8 <_IO_stdin_used+0x3928>
insb   (%dx),%es:(%edi)
gs
jae    80726a5 <_IO_stdin_used+0x38e5>
arpl   %ax,(%eax)
inc    %esp
inc    %ebp
push   %esi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%si)
jo     80726f0 <_IO_stdin_used+0x3930>
and    %ah,0x73000a75
imul   $0x20,0x70(%ecx),%ebp
gs
insl   (%dx),%es:(%edi)
jo     807270d <_IO_stdin_used+0x394d>
jns    80726bb <_IO_stdin_used+0x38fb>
imul   $0x2520,0x3a(%ebp,%eiz,2),%bp
jae    80726ae <_IO_stdin_used+0x38ee>
add    %dh,0x65(%edx)
popa
and    %dh,%fs:0x75(%edx)
insb   (%dx),%es:(%edi)
gs
jae    80726d0 <_IO_stdin_used+0x3910>
imul   $0x2520,0x3a(%ebp,%eiz,2),%bp
jae    80726c3 <_IO_stdin_used+0x3903>
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ch,0x6e(%ecx)
jbe    8072726 <_IO_stdin_used+0x3966>
insb   (%dx),%es:(%edi)
imul   $0x4f495443,0x41(%eax,%eiz,1),%esp
dec    %esi
and    %ch,0x70(%edi)
gs
jb     8072736 <_IO_stdin_used+0x3976>
je     8072740 <_IO_stdin_used+0x3980>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %al,0x56(%ebp,%eax,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
and    %ch,0x70(%edi)
gs
jb     8072751 <_IO_stdin_used+0x3991>
je     807275b <_IO_stdin_used+0x399b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %cl,0x45(%ebx)
push   %edx
dec    %esi
inc    %ebp
dec    %esp
and    %ch,0x70(%edi)
gs
jb     807276b <_IO_stdin_used+0x39ab>
je     8072775 <_IO_stdin_used+0x39b5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
push   %ebx
push   %ebp
inc    %edx
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
add    %ch,0x6e(%ecx)
jbe    807277f <_IO_stdin_used+0x39bf>
insb   (%dx),%es:(%edi)
imul   $0x59534255,0x53(%eax,%eiz,1),%esp
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
and    %ch,0x70(%edi)
gs
jb     8072792 <_IO_stdin_used+0x39d2>
je     807279c <_IO_stdin_used+0x39dc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
arpl   %bp,0x73(%ecx,%eiz,2)
jae    807273d <_IO_stdin_used+0x397d>
jae    80727b4 <_IO_stdin_used+0x39f4>
bound  %esi,0x79(%ebx)
jae    80727b8 <_IO_stdin_used+0x39f8>
gs
insl   (%dx),%es:(%edi)
jl     80727ab <_IO_stdin_used+0x39eb>
insb   (%dx),%es:(%edi)
popa
jae    80727bf <_IO_stdin_used+0x39ff>
jl     80727b0 <_IO_stdin_used+0x39f0>
jne    80727c3 <_IO_stdin_used+0x3a03>
add    %ch,0x6e(%ecx)
jbe    80727b6 <_IO_stdin_used+0x39f6>
insb   (%dx),%es:(%edi)
imul   $0x45564952,0x44(%eax,%eiz,1),%esp
push   %edx
and    %ch,0x70(%edi)
gs
jb     80727c6 <_IO_stdin_used+0x3a06>
je     80727d0 <_IO_stdin_used+0x3a10>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %ecx
push   %esp
push   %esp
push   %edx
jnp    8072771 <_IO_stdin_used+0x39b1>
gs
jb     80727e6 <_IO_stdin_used+0x3a26>
outsl  %ds:(%esi),(%dx)
jb     8072797 <_IO_stdin_used+0x39d7>
jo     80727da <_IO_stdin_used+0x3a1a>
jb     80727ee <_IO_stdin_used+0x3a2e>
imul   $0x54544120,0x67(%esi),%ebp
push   %edx
and    %ah,0x74(%ecx)
je     80727fa <_IO_stdin_used+0x3a3a>
imul   $0xa6574,0x75(%edx),%esp
dec    %ebx
inc    %ebp
push   %edx
dec    %esi
inc    %ebp
dec    %esp
push   %ebx
add    %ch,0x6e(%ecx)
jbe    80727fc <_IO_stdin_used+0x3a3c>
insb   (%dx),%es:(%edi)
imul   $0x454e5245,0x4b(%eax,%eiz,1),%esp
dec    %esp
push   %ebx
and    %ch,0x70(%edi)
gs
jb     807280d <_IO_stdin_used+0x3a4d>
je     8072817 <_IO_stdin_used+0x3a57>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
push   %ebx
push   %ebp
inc    %edx
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
push   %ebx
add    %ch,0x6e(%ecx)
jbe    8072822 <_IO_stdin_used+0x3a62>
insb   (%dx),%es:(%edi)
imul   $0x59534255,0x53(%eax,%eiz,1),%esp
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
push   %ebx
and    %ch,0x70(%edi)
gs
jb     8072836 <_IO_stdin_used+0x3a76>
je     8072840 <_IO_stdin_used+0x3a80>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %esp
push   %edx
dec    %ecx
push   %esi
inc    %ebp
push   %edx
push   %ebx
add    %ch,0x6e(%ecx)
jbe    8072848 <_IO_stdin_used+0x3a88>
insb   (%dx),%es:(%edi)
imul   $0x45564952,0x44(%eax,%eiz,1),%esp
push   %edx
push   %ebx
and    %ch,0x70(%edi)
gs
jb     8072859 <_IO_stdin_used+0x3a99>
je     8072863 <_IO_stdin_used+0x3aa3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %ecx
push   %esp
push   %esp
push   %edx
push   %ebx
jnp    8072805 <_IO_stdin_used+0x3a45>
imul   $0x64696c61,0x76(%esi),%ebp
and    %al,0x54(%ecx)
push   %esp
push   %edx
push   %ebx
and    %ch,0x70(%edi)
gs
jb     8072879 <_IO_stdin_used+0x3ab9>
je     8072883 <_IO_stdin_used+0x3ac3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
fs
gs
jbe    807288b <_IO_stdin_used+0x3acb>
arpl   %sp,0x2f(%ebp)
add    %dl,0x47(%ecx,%eax,2)
push   %ebx
add    %ch,0x6e(%ecx)
jbe    8072890 <_IO_stdin_used+0x3ad0>
insb   (%dx),%es:(%edi)
imul   $0x20534741,0x54(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jo     80728a0 <_IO_stdin_used+0x3ae0>
jb     807289e <_IO_stdin_used+0x3ade>
je     80728a8 <_IO_stdin_used+0x3ae8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %ebp
dec    %esi
push   %esi
jnp    8072848 <_IO_stdin_used+0x3a88>
gs
jb     80728bd <_IO_stdin_used+0x3afd>
outsl  %ds:(%esi),(%dx)
jb     807286e <_IO_stdin_used+0x3aae>
jo     80728b1 <_IO_stdin_used+0x3af1>
jb     80728c5 <_IO_stdin_used+0x3b05>
imul   $0x564e4520,0x67(%esi),%ebp
and    %ah,0x74(%ecx)
je     80728d0 <_IO_stdin_used+0x3b10>
imul   $0xa6574,0x75(%edx),%esp
push   %edx
inc    %ebp
push   %ebx
push   %ebp
dec    %esp
push   %esp
add    %ch,0x6e(%ecx)
jbe    80728d1 <_IO_stdin_used+0x3b11>
insb   (%dx),%es:(%edi)
imul   $0x4c555345,0x52(%eax,%eiz,1),%esp
push   %esp
and    %ch,0x70(%edi)
gs
jb     80728e1 <_IO_stdin_used+0x3b21>
je     80728eb <_IO_stdin_used+0x3b2b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
dec    %ecx
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80728f4 <_IO_stdin_used+0x3b34>
insl   (%dx),%es:(%edi)
add    %dl,0x53(%ebp,%eax,2)
push   %esp
add    %ch,0x6e(%ecx)
jbe    80728ff <_IO_stdin_used+0x3b3f>
insb   (%dx),%es:(%edi)
imul   $0x20545345,0x54(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jo     807290f <_IO_stdin_used+0x3b4f>
jb     807290d <_IO_stdin_used+0x3b4d>
je     8072917 <_IO_stdin_used+0x3b57>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
push   %edx
push   %ebp
dec    %esi
add    %dl,0x41(%edi)
dec    %ecx
push   %esp
pop    %edi
inc    %esi
dec    %edi
push   %edx
add    %dl,0x41(%edi)
dec    %ecx
push   %esp
pop    %edi
inc    %esi
dec    %edi
push   %edx
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
inc    %esi
push   %ebx
add    %dl,0x59(%ebx)
dec    %ebp
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
add    %cl,0x57(%edi)
dec    %esi
inc    %ebp
push   %edx
add    %ah,0x4f524700(,%eiz,1)
push   %ebp
push   %eax
add    %cl,0x50(%edi)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %ch,0x6e(%ecx,%ebp,2)
imul   $0x72,0x70(%edi),%ebx
imul   $0x3d797469,0x72(%edi),%ebp
add    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8072961 <_IO_stdin_used+0x3ba1>
je     807296d <_IO_stdin_used+0x3bad>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    807297d <_IO_stdin_used+0x3bbd>
cmp    $0x72747300,%eax
imul   $0x6373655f,0x67(%esi),%ebp
popa
jo     807297d <_IO_stdin_used+0x3bbd>
cmp    $0x6e6f6e00,%eax
add    %dh,%gs:0x65(%edx)
jo     807298f <_IO_stdin_used+0x3bcf>
popa
arpl   %sp,0x0(%ebp)
bound  %ebx,%fs:0x70(%edi)
gs
jb     80729a1 <_IO_stdin_used+0x3be1>
imul   $0x776f6e00,0x74(%ebx),%esi
popa
je     807299b <_IO_stdin_used+0x3bdb>
push   $0x61747300
je     80729a8 <_IO_stdin_used+0x3be8>
arpl   %bx,0x6e(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
cmp    $0x6b6e7500,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     80729bc <_IO_stdin_used+0x3bfc>
and    %ch,0x65(%ebx)
jns    8072973 <_IO_stdin_used+0x3bb3>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,0x75253a73
or     (%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x75(%edx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x75253a73,%eax
daa
or     (%eax),%al
das
sub    (%edi),%ch
add    %ch,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x76656475,0x2f(%edx),%esp
das
jb     80729fd <_IO_stdin_used+0x3c3d>
insb   (%dx),%es:(%edi)
gs
jae    80729ba <_IO_stdin_used+0x3bfa>
add    %ch,%fs:(%edi)
jb     8072a06 <_IO_stdin_used+0x3c46>
outsb  %ds:(%esi),(%dx)
das
jne    80729f9 <_IO_stdin_used+0x3c39>
gs
jbe    80729c7 <_IO_stdin_used+0x3c07>
jb     8072a0f <_IO_stdin_used+0x3c4f>
insb   (%dx),%es:(%edi)
gs
jae    80729cc <_IO_stdin_used+0x3c0c>
add    %ch,%fs:(%edi)
gs
je     8072a07 <_IO_stdin_used+0x3c47>
das
jne    8072a0b <_IO_stdin_used+0x3c4b>
gs
jbe    80729d9 <_IO_stdin_used+0x3c19>
jb     8072a21 <_IO_stdin_used+0x3c61>
insb   (%dx),%es:(%edi)
gs
jae    80729de <_IO_stdin_used+0x3c1e>
add    %ch,%fs:(%esi)
jb     8072a2a <_IO_stdin_used+0x3c6a>
insb   (%dx),%es:(%edi)
gs
jae    80729b9 <_IO_stdin_used+0x3bf9>
ja     8072a1c <_IO_stdin_used+0x3c5c>
imul   $0x6f662067,0x6e(%ecx,%ebp,2),%esi
jb     80729e5 <_IO_stdin_used+0x3c25>
daa
and    $0x66202773,%eax
popa
imul   $0x504f000a,0x64(%ebp,%eiz,2),%ebp
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
je     8072a3f <_IO_stdin_used+0x3c7f>
je     8072a4b <_IO_stdin_used+0x3c8b>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8072a5b <_IO_stdin_used+0x3c9b>
cmp    $0xa7525,%eax
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
and    %ah,(%edi)
and    $0x25202773,%eax
jae    8072a36 <_IO_stdin_used+0x3c76>
and    $0x49000a75,%eax
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,(%edi)
and    $0x25202773,%eax
jae    8072a49 <_IO_stdin_used+0x3c89>
and    $0x49000a75,%eax
dec    %ebp
push   %eax
dec    %edi
push   %edx
push   %esp
and    %ah,0x75(%edx)
imul   $0x2527206e,0x69(%esp,%esi,2),%ebp
jae    8072a4d <_IO_stdin_used+0x3c8d>
and    %ah,0x75253a73
or     (%eax),%al
das
jo     8072aa3 <_IO_stdin_used+0x3ce3>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
arpl   %bp,0x64(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x4e574f00,0x65(%esi),%ebp
inc    %ebp
push   %edx
and    %ah,0x73252075
cmp    0x47000a75,%ah
push   %edx
dec    %edi
push   %ebp
push   %eax
and    %ah,0x73252075
cmp    0x69000a75,%ah
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8072acb <_IO_stdin_used+0x3d0b>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
jbe    8072aca <_IO_stdin_used+0x3d0a>
insb   (%dx),%es:(%edi)
imul   $0x2065646f,0x6d(%eax,%eiz,1),%esp
daa
and    $0xa2773,%eax
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
and    %ah,0x25206f23
jae    8072abe <_IO_stdin_used+0x3cfe>
and    $0x4e000a75,%eax
inc    %ecx
dec    %ebp
inc    %ebp
and    %ah,(%edi)
and    $0x25202773,%eax
jae    8072acf <_IO_stdin_used+0x3d0f>
and    $0x2f000a75,%eax
and    %al,(%eax)
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
and    %ah,(%edi)
and    $0x25202773,%eax
jae    8072ae3 <_IO_stdin_used+0x3d23>
and    $0x41000a75,%eax
push   %esp
push   %esp
push   %edx
and    %ah,(%edi)
and    $0x77202773,%eax
jb     8072b23 <_IO_stdin_used+0x3d63>
je     8072b25 <_IO_stdin_used+0x3d65>
outsb  %ds:(%esi),(%dx)
and    %ah,(%bx)
and    $0x25202773,%eax
jae    8072b01 <_IO_stdin_used+0x3d41>
and    $0x77000a75,%eax
add    %ah,%gs:0x72(%ebp)
jb     8072b41 <_IO_stdin_used+0x3d81>
jb     8072af4 <_IO_stdin_used+0x3d34>
ja     8072b48 <_IO_stdin_used+0x3d88>
imul   $0x54412067,0x6e(%ecx,%ebp,2),%esi
push   %esp
push   %edx
jnp    8072b07 <_IO_stdin_used+0x3d47>
jae    8072b61 <_IO_stdin_used+0x3da1>
cmp    (%eax),%ah
and    $0x52000a6d,%eax
push   %ebp
dec    %esi
and    %ah,(%edi)
and    $0x25202773,%eax
jae    8072b30 <_IO_stdin_used+0x3d70>
and    $0x63000a75,%eax
push   $0x20646f6d
daa
and    $0x25202773,%eax
and    0xa(%edi),%ebp
add    %ah,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8072b7d <_IO_stdin_used+0x3dbd>
and    %ah,(%edi)
and    $0x25202773,%eax
jne    8072b38 <_IO_stdin_used+0x3d78>
and    $0x44000a75,%eax
inc    %ebp
push   %esi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x41(%ebp)
dec    %edx
dec    %edi
push   %edx
add    %cl,0x49(%ebp)
dec    %esi
dec    %edi
push   %edx
add    %cl,0x46(%ecx)
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
add    %al,0x56(%ebp,%eax,2)
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %al,0x56(%ebp,%eax,2)
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
push   %ebx
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
push   %es
std
ljmp   *(%esi,%eax,1)
std
lcall  *(%edi,%eax,1)
std
(bad)
cmp    $0x7,%al
std
pushl  -0x3(%esi,%eax,1)
decl   (%edi,%eax,1)
std
incl   (%esp,%ecx,1)
std
incl   (%esp,%ecx,1)
std
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xdcfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
fmull  (%ebx)
std
incl   (%esp,%ecx,1)
std
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xdcfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0x4fffd0b,%ebp
or     $0xfd,%al
jmp    *%esp
or     %ch,%bh
(bad)
std
or     %ch,%bh
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0x44fffd0b,%ebp
or     $0xfd,%al
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
incl   (%esp,%ecx,1)
std
ljmp   *0xd2cfffd(,%ecx,1)
std
ljmp   *0xafdfffd(,%ecx,1)
std
(bad)
std
or     %ch,%bh
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0x1cfffd0b,%ebp
or     %ch,%bh
lcall  *(%edx,%ecx,1)
std
lcall  *(%edx,%ecx,1)
std
ljmp   *-0x3(%esp,%ecx,1)
(bad)
fmull  (%ebx)
std
(bad)
mov    $0xbdfffd0b,%ebp
or     %ebp,%edi
(bad)
mov    $0xdcfffd0b,%ebp
or     %ebp,%edi
pushl  0xbb4fffd(%ebx,%ecx,1)
std
(bad)
mov    $0x4fffd0b,%ebp
or     $0xfd,%al
pushl  (%esp,%ecx,2)
std
pushl  -0x3(%esp,%ecx,2)
lcall  *(%esp,%ecx,2)
std
ljmp   *0x4c94fffd(%esp,%ecx,2)
std
inc    %esp
dec    %esp
std
dec    %esp
dec    %eax
std
pushl  -0x3(%ecx,%ecx,2)
decl   (%ecx,%ecx,2)
std
push   %esp
dec    %eax
std
(bad)
fmull  -0x3(%eax)
jmp    *%esp
dec    %ecx
std
(bad)
mov    $0x34fffd49,%esp
dec    %esp
std
call   *%esp
dec    %ebx
std
call   *%esp
dec    %ebx
std
call   *%esp
dec    %ebx
std
call   *%esp
dec    %ebx
std
call   *%esp
dec    %ebx
std
pushl  (%esp,%ecx,2)
std
dec    %esp
inc    %edi
std
call   *%esp
inc    %esi
std
ljmp   *0x472cfffd(%ebp,%eax,2)
std
decl   0x433cfffd(%esp,%eax,2)
std
(bad)
in     (%dx),%al
inc    %edx
std
incl   (%edx,%eax,2)
std
call   *(%ecx,%eax,2)
std
push   %esp
ds
std
pushl  (%esp,%ecx,2)
std
(bad)
jl     8072ce7 <_IO_stdin_used+0x3f27>
std
incl   -0x3(%edi,%edi,1)
ljmp   *(%edi,%edi,1)
std
jmp    *%esp
inc    %eax
std
inc    %esp
inc    %eax
std
decl   (%eax,%eax,2)
std
call   *-0x3(%edi,%edi,1)
incl   (%esi,%edi,1)
std
incl   0x3d04fffd(%ebp,%edi,1)
std
incl   0x3584fffd(%esp,%edi,1)
std
(bad)
cld
cmp    %ebp,%edi
ljmp   *(%ebx,%edi,1)
std
push   %esp
cmp    %edi,%ebp
lcall  *-0x3(%edi,%esi,1)
ljmp   *(%esi,%esi,1)
std
decl   0x358cfffd(%ebp,%esi,1)
std
call   *%esp
ds
std
call   *-0x3(%ebp,%esi,1)
(bad)
jge    8072d55 <_IO_stdin_used+0x3f95>
std
ljmp   *-0x3(%edi,%ecx,2)
jmp    *(%ebx)
dec    %edi
std
call   *(%esi)
dec    %ebp
std
decl   0x69fffd4f(%esi)
insl   (%dx),%es:(%edi)
jo     8072d8b <_IO_stdin_used+0x3fcb>
jb     8072d92 <_IO_stdin_used+0x3fd2>
pop    %edi
jo     8072d93 <_IO_stdin_used+0x3fd3>
outsl  %ds:(%esi),(%dx)
jo     8072d89 <_IO_stdin_used+0x3fc9>
jb     8072d9a <_IO_stdin_used+0x3fda>
jns    8072d87 <_IO_stdin_used+0x3fc7>
data16
jb     8072d9a <_IO_stdin_used+0x3fda>
insl   (%dx),%es:(%edi)
pop    %edi
jae    8072da3 <_IO_stdin_used+0x3fe3>
jb     8072d9a <_IO_stdin_used+0x3fda>
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%bx)
imul   $0x665f726f,0x66(%edi,%ebx,2),%esi
imul   $0x76656475,0x0(%ebp,%eiz,2),%ebp
pop    %edi
jb     8072dbe <_IO_stdin_used+0x3ffe>
insb   (%dx),%es:(%edi)
gs
jae    8072dac <_IO_stdin_used+0x3fec>
popa
jo     8072dc0 <_IO_stdin_used+0x4000>
insb   (%dx),%es:(%edi)
jns    8072db2 <_IO_stdin_used+0x3ff2>
je     8072dc4 <_IO_stdin_used+0x4004>
pop    %edi
gs
jbe    8072dbe <_IO_stdin_used+0x3ffe>
outsb  %ds:(%esi),(%dx)
je     8072d5c <_IO_stdin_used+0x3f9c>
jne    8072dc2 <_IO_stdin_used+0x4002>
gs
jbe    8072dc0 <_IO_stdin_used+0x4000>
jb     8072dd8 <_IO_stdin_used+0x4018>
insb   (%dx),%es:(%edi)
gs
jae    8072dc6 <_IO_stdin_used+0x4006>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
je     8072dd8 <_IO_stdin_used+0x4018>
insl   (%dx),%es:(%edi)
gs
jae    8072de7 <_IO_stdin_used+0x4027>
popa
insl   (%dx),%es:(%edi)
jo     8072d77 <_IO_stdin_used+0x3fb7>
jb     8072dee <_IO_stdin_used+0x402e>
insb   (%dx),%es:(%edi)
gs
pop    %edi
popa
fs
fs
pop    %edi
imul   $0x0,0x79(%ebp),%esp
addr16
gs
je     8072de7 <_IO_stdin_used+0x4027>
imul   $0x5f,0x79(%ebp),%esp
popa
je     8072e03 <_IO_stdin_used+0x4043>
jb     8072dfa <_IO_stdin_used+0x403a>
bound  %esi,0x74(%ebp)
add    %ah,%gs:0x64(%ecx)
fs
pop    %edi
jb     8072e11 <_IO_stdin_used+0x4051>
insb   (%dx),%es:(%edi)
add    %dh,%gs:0x61(%eax)
jb     8072e16 <_IO_stdin_used+0x4056>
gs
pop    %edi
imul   $0x6475,0x0(%ebp,%eiz,2),%bp
gs
jbe    8072e0e <_IO_stdin_used+0x404e>
jb     8072e26 <_IO_stdin_used+0x4066>
insb   (%dx),%es:(%edi)
gs
jae    8072e14 <_IO_stdin_used+0x4054>
outsb  %ds:(%esi),(%dx)
gs
ja     8072db9 <_IO_stdin_used+0x3ff9>
bound  %ebp,0x6e(%ecx)
and    %ah,%fs:0x61(%esi)
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
cs
cs
das
jae    8072e41 <_IO_stdin_used+0x4081>
arpl   %bp,(%edi)
jne    8072e37 <_IO_stdin_used+0x4077>
gs
jbe    8072e05 <_IO_stdin_used+0x4045>
jne    8072e3c <_IO_stdin_used+0x407c>
gs
jbe    8072e08 <_IO_stdin_used+0x4048>
arpl   %si,0x6c(%edx,%esi,2)
arpl   %ax,%cs:(%eax)
insb   (%dx),%es:(%edi)
imul   $0x66206e65,0x74(%ebx),%esi
popa
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
gs
jb     8072e6a <_IO_stdin_used+0x40aa>
outsl  %ds:(%esi),(%dx)
jb     8072e1b <_IO_stdin_used+0x405b>
addr16
gs
je     8072e73 <_IO_stdin_used+0x40b3>
imul   $0x636f7320,0x67(%esi),%ebp
imul   $0x3a,0x74(%ebp),%esp
and    %ah,0x2f000a6d
jb     8072e87 <_IO_stdin_used+0x40c7>
outsb  %ds:(%esi),(%dx)
das
jne    8072e7a <_IO_stdin_used+0x40ba>
gs
jbe    8072e48 <_IO_stdin_used+0x4088>
arpl   %bp,0x6e(%edi)
je     8072e90 <_IO_stdin_used+0x40d0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x74(%ebx)
jb     8072e91 <_IO_stdin_used+0x40d1>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     8072ea4 <_IO_stdin_used+0x40e4>
jb     8072e71 <_IO_stdin_used+0x40b1>
and    %ah,0x75000a6d
fs
gs
jbe    8072ea0 <_IO_stdin_used+0x40e0>
arpl   %si,0x6c(%edx,%esi,2)
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     8072ea9 <_IO_stdin_used+0x40e9>
data16
jb     8072ebc <_IO_stdin_used+0x40fc>
insl   (%dx),%es:(%edi)
pop    %edi
data16
add    %ch,%fs:(%edi)
fs
gs
jbe    8072e86 <_IO_stdin_used+0x40c6>
bound  %esi,0x66(%edx,%esi,2)
jae    8072e8a <_IO_stdin_used+0x40ca>
arpl   %bp,0x6e(%edi)
je     8072ed4 <_IO_stdin_used+0x4114>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %cl,0x44(%ecx)
pop    %edi
inc    %edx
push   %esp
push   %edx
inc    %esi
push   %ebx
pop    %edi
push   %edx
inc    %ebp
inc    %ecx
inc    %esp
pop    %ecx
add    %dh,0x65(%edx)
popa
fs
jns    8072e7a <_IO_stdin_used+0x40ba>
bound  %esi,0x66(%edx,%esi,2)
jae    8072e80 <_IO_stdin_used+0x40c0>
bound  %esi,0x66(%edx,%esi,2)
jae    8072ea6 <_IO_stdin_used+0x40e6>
jbe    8072ef7 <_IO_stdin_used+0x4137>
insb   (%dx),%es:(%edi)
jne    8072ef8 <_IO_stdin_used+0x4138>
and    %ch,%gs:0x61(%ebp)
outsb  %ds:(%esi),(%dx)
popa
addr16
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8072e98 <_IO_stdin_used+0x40d8>
data16
cmp    0x73(%edx,%edi,1),%ah
cmp    0x3a(%eax),%dh
add    %cl,0x4f(%ebp)
inc    %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
add    %ch,0x64(%ecx)
push   %esi
outsb  %gs:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
jb     8072eb3 <_IO_stdin_used+0x40f3>
imul   $0x6375646f,0x72(%eax,%edx,2),%esp
je     8072ebd <_IO_stdin_used+0x40fd>
jne    8072f32 <_IO_stdin_used+0x4172>
bound  %edi,(%edx)
jbe    8072ee8 <_IO_stdin_used+0x4128>
xor    %dh,(%eax,%ebx,2)
jo     8072eed <_IO_stdin_used+0x412d>
xor    %dh,(%eax,%ebx,2)
sub    (%eax),%al
imul   $0x72,0x65(%esp,%esi,2),%bp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x2d,0x70(%ebp),%esi
jo     8072f4f <_IO_stdin_used+0x418f>
imul   $0x6168,%gs:0x0(%eax),%di
jb     8072f4a <_IO_stdin_used+0x418a>
ja     8072f49 <_IO_stdin_used+0x4189>
jb     8072f4f <_IO_stdin_used+0x418f>
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
add    %ah,%gs:0x61722073
ja     8072f1b <_IO_stdin_used+0x415b>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x74(%ecx)
je     8072f78 <_IO_stdin_used+0x41b8>
imul   $0x203a6574,0x75(%edx),%esp
and    $0x20000a73,%eax
and    %ah,0x69(%edx)
je     8072f37 <_IO_stdin_used+0x4177>
and    $0x3a753425,%eax
and    %ah,0x7a253025
imul   $0x20732500,0xa(%eax,%ebx,2),%ebp
fs arpl %bp,%fs:%gs:0x64(%edi)
gs and %ah,%fs:%gs:0x69(%edx)
je     8072f56 <_IO_stdin_used+0x4196>
insl   (%dx),%es:(%edi)
popa
jo     8072f74 <_IO_stdin_used+0x41b4>
or     (%eax),%al
imul   $0x63007475,0x70(%esi),%ebp
popa
jo     8072fa7 <_IO_stdin_used+0x41e7>
bound  %ebp,0x6c(%ecx)
imul   $0x76652f73,0x65(%ecx,%ebp,2),%esi
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
inc    %ecx
inc    %ebx
inc    %ebx
inc    %ebp
dec    %esp
inc    %ebp
push   %edx
dec    %edi
dec    %ebp
inc    %ebp
push   %esp
inc    %ebp
push   %edx
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
push   %esp
inc    %ecx
inc    %edx
dec    %esp
inc    %ebp
push   %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
dec    %edx
dec    %edi
pop    %ecx
push   %ebx
push   %esp
dec    %ecx
inc    %ebx
dec    %ebx
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
push   %esp
dec    %edi
push   %ebp
inc    %ebx
dec    %eax
push   %ebx
inc    %ebx
push   %edx
inc    %ebp
inc    %ebp
dec    %esi
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
dec    %ebp
dec    %edi
push   %ebp
push   %ebx
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
push   %esp
dec    %edi
push   %ebp
inc    %ebx
dec    %eax
push   %eax
inc    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
add    %ah,0x61(%ebx)
jo     8073041 <_IO_stdin_used+0x4281>
bound  %ebp,0x6c(%ecx)
imul   $0x62612f73,0x65(%ecx,%ebp,2),%esi
jae    8072fed <_IO_stdin_used+0x422d>
arpl   %sp,0x70(%ecx)
popa
bound  %ebp,0x6c(%ecx)
imul   $0x65722f73,0x65(%ecx,%ebp,2),%esi
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
jo     8073063 <_IO_stdin_used+0x42a3>
bound  %ebp,0x6c(%ecx)
imul   $0x656b2f73,0x65(%ecx,%ebp,2),%esi
jns    807300f <_IO_stdin_used+0x424f>
dec    %ecx
inc    %esp
pop    %edi
dec    %ecx
dec    %esi
push   %eax
push   %ebp
push   %esp
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
add    %ch,0x6e(%ecx)
jo     8073095 <_IO_stdin_used+0x42d5>
je     8073081 <_IO_stdin_used+0x42c1>
imul   $0x7475706e,0x69(%eax,%eax,1),%esp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6f727020,0x65(%ebx),%esp
jo     807309c <_IO_stdin_used+0x42dc>
jb     80730ad <_IO_stdin_used+0x42ed>
imul   $0x0,0x73(%ebp),%esp
cs
cs
das
jae    80730b7 <_IO_stdin_used+0x42f7>
arpl   %bp,(%edi)
jne    80730ad <_IO_stdin_used+0x42ed>
gs
jbe    807307b <_IO_stdin_used+0x42bb>
jne    80730b2 <_IO_stdin_used+0x42f2>
gs
jbe    807307e <_IO_stdin_used+0x42be>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     80730c0 <_IO_stdin_used+0x4300>
outsb  %ds:(%esi),(%dx)
sub    $0x75706e69,%eax
je     80730be <_IO_stdin_used+0x42fe>
imul   $0x6e676900,0x63(%esi,%ebp,1),%esp
outsl  %ds:(%esi),(%dx)
jb     80730d3 <_IO_stdin_used+0x4313>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    8073090 <_IO_stdin_used+0x42d0>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%eax),%esp
insb   (%dx),%es:(%edi)
pop    %eax
and    %dh,0x68(%edi)
imul   $0x20736920,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
jb     80730ee <_IO_stdin_used+0x432e>
gs
jb     80730aa <_IO_stdin_used+0x42ea>
je     80730f4 <_IO_stdin_used+0x4334>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
js     80730fc <_IO_stdin_used+0x433c>
insl   (%dx),%es:(%edi)
jne    8073103 <_IO_stdin_used+0x4343>
and    %dh,0x69(%ebx)
jp     8073100 <_IO_stdin_used+0x4340>
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x73(%ebp,%eiz,2)
je     8073104 <_IO_stdin_used+0x4344>
imul   $0x3a,0x79(%ebp),%esp
and    %ch,0x6f(%esi)
and    %al,0x56(%ebp)
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
and    %ah,0x61(%ebx)
jo     8073119 <_IO_stdin_used+0x4359>
bound  %ebp,0x6c(%ecx)
imul   $0x73657400,0xa(%ecx,%edi,2),%esi
je     8073124 <_IO_stdin_used+0x4364>
imul   $0x3a,0x79(%ebp),%esp
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%bp,%si)
je     80730f7 <_IO_stdin_used+0x4337>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%eax),%esp
insb   (%dx),%es:(%edi)
jne    8073101 <_IO_stdin_used+0x4341>
outsw  %ds:(%esi),(%dx)
jb     8073105 <_IO_stdin_used+0x4345>
popa
outsb  %ds:(%esi),(%dx)
jns    8073109 <_IO_stdin_used+0x4349>
imul   $0x73,0x79(%ebp),%esp
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jne    8073161 <_IO_stdin_used+0x43a1>
fs
cmp    $0xa6925,%eax
add    %al,(%eax)
add    %dh,0x73(%ebp,%eiz,2)
je     8073160 <_IO_stdin_used+0x43a0>
imul   $0x3a,0x79(%ebp),%esp
and    %al,0x6f(%esi)
jne    8073178 <_IO_stdin_used+0x43b8>
and    %ch,%fs:0x65(%ebx)
jns    8073130 <_IO_stdin_used+0x4370>
and    $0x6e692078,%eax
and    %ch,0x69(%eax)
addr16 push $0x6f6c6220
arpl   %bp,0xa(%ebx)
add    %dh,0x73(%ebp,%eiz,2)
je     8073186 <_IO_stdin_used+0x43c6>
imul   $0x0,0x79(%ebp),%esp
addr16
gs
je     807318e <_IO_stdin_used+0x43ce>
arpl   %sp,0x70(%ecx)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jae    80731a2 <_IO_stdin_used+0x43e2>
add    %cl,0x45(%ebx)
pop    %ecx
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
add    %dh,0x65(%ebx)
jb     80731b3 <_IO_stdin_used+0x43f3>
outsl  %ds:(%esi),(%dx)
add    %ah,0x6f(%esi)
jb     80731b3 <_IO_stdin_used+0x43f3>
gs
pop    %edi
jb     80731b9 <_IO_stdin_used+0x43f9>
insb   (%dx),%es:(%edi)
gs
popa
jae    80731be <_IO_stdin_used+0x43fe>
add    %ch,0x61730064(,%eiz,1)
je     8073162 <_IO_stdin_used+0x43a2>
popa
je     80731d9 <_IO_stdin_used+0x4419>
outsb  %gs:(%esi),(%dx)
fs
popa
outsb  %ds:(%esi),(%dx)
je     80731cb <_IO_stdin_used+0x440b>
je     80731dd <_IO_stdin_used+0x441d>
addr32 insb (%dx),%es:(%di)
add    %dh,%gs:0x61(%eax)
jae    80731eb <_IO_stdin_used+0x442b>
add    %dh,%gs:0x78(%ebp,%eiz,2)
je     807317e <_IO_stdin_used+0x43be>
jo     80731e3 <_IO_stdin_used+0x4423>
add    %ah,0x61(%ebx)
insl   (%dx),%es:(%edi)
gs
jb     80731e8 <_IO_stdin_used+0x4428>
pop    %edi
insb   (%dx),%es:(%edi)
gs
data16
je     807318d <_IO_stdin_used+0x43cd>
arpl   %sp,0x6d(%ecx)
gs
jb     80731f4 <_IO_stdin_used+0x4434>
pop    %edi
jb     80731ff <_IO_stdin_used+0x443f>
addr16 push $0x61630074
insl   (%dx),%es:(%edi)
gs
jb     8073201 <_IO_stdin_used+0x4441>
pop    %edi
jp     8073212 <_IO_stdin_used+0x4452>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    807321c <_IO_stdin_used+0x445c>
add    %ah,0x61(%ebx)
insl   (%dx),%es:(%edi)
gs
jb     8073210 <_IO_stdin_used+0x4450>
add    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     80731b5 <_IO_stdin_used+0x43f5>
arpl   %sp,0x6d(%ecx)
gs
jb     807321c <_IO_stdin_used+0x445c>
pop    %edi
jne    807322e <_IO_stdin_used+0x446e>
add    %ah,0x70(%ecx)
outsl  %ds:(%esi),(%dx)
jae    8073238 <_IO_stdin_used+0x4478>
jb     8073235 <_IO_stdin_used+0x4475>
jo     8073230 <_IO_stdin_used+0x4470>
add    %dh,%gs:0x65(%edx)
jae    8073242 <_IO_stdin_used+0x4482>
popa
jb     8073245 <_IO_stdin_used+0x4485>
add    %ah,0x61(%ebx)
insl   (%dx),%es:(%edi)
gs
jb     8073239 <_IO_stdin_used+0x4479>
pop    %edi
outsw  %ds:(%esi),(%dx)
arpl   %si,0x73(%ebp)
add    %dh,0x70(%ebx)
jb     8073248 <_IO_stdin_used+0x4488>
popa
fs
jae    807324f <_IO_stdin_used+0x448f>
gs
gs
je     80731eb <_IO_stdin_used+0x442b>
arpl   %bp,0x6d(%edi)
jo     807325f <_IO_stdin_used+0x449f>
jae    8073257 <_IO_stdin_used+0x4497>
add    %ah,0x74(%ecx)
je     807325c <_IO_stdin_used+0x449c>
outsb  %ds:(%esi),(%dx)
fs
popa
outsb  %ds:(%esi),(%dx)
je     807325c <_IO_stdin_used+0x449c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ch,0x0(%edx)
insl   (%dx),%es:(%edi)
gs
jae    807327e <_IO_stdin_used+0x44be>
outsb  %gs:(%esi),(%dx)
addr16
gs
jb     8073211 <_IO_stdin_used+0x4451>
jo     8073285 <_IO_stdin_used+0x44c5>
outsl  %ds:(%esi),(%dx)
jo     8073289 <_IO_stdin_used+0x44c9>
add    %dh,0x63(%ebx)
jb     807328a <_IO_stdin_used+0x44ca>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    807328f <_IO_stdin_used+0x44cf>
add    %ch,0x61(%ebp)
arpl   %si,0x6f(%edx)
add    %bh,0x0(%edx)
arpl   %bp,0x6d(%edi)
jo     80732a2 <_IO_stdin_used+0x44e2>
je     8073294 <_IO_stdin_used+0x44d4>
jb     8073231 <_IO_stdin_used+0x4471>
arpl   %sp,0x6d(%ecx)
gs
jb     8073298 <_IO_stdin_used+0x44d8>
pop    %edi
outsl  %fs:(%esi),(%dx)
ja     80732aa <_IO_stdin_used+0x44ea>
add    %ah,0x61(%ebx)
insl   (%dx),%es:(%edi)
gs
jb     80732a4 <_IO_stdin_used+0x44e4>
pop    %edi
jp     80732b5 <_IO_stdin_used+0x44f5>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x6d6f6f7a,0x0(%esi),%ebp
jb     80732b6 <_IO_stdin_used+0x44f6>
jae    80732b8 <_IO_stdin_used+0x44f8>
je     8073255 <_IO_stdin_used+0x4495>
je     80732bc <_IO_stdin_used+0x44fc>
outsb  %gs:(%esi),(%dx)
add    %dh,0x72(%eax)
gs
jae    80732c4 <_IO_stdin_used+0x4504>
outsb  %ds:(%esi),(%dx)
je     80732c3 <_IO_stdin_used+0x4503>
je     80732cd <_IO_stdin_used+0x450d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
add    %bh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %dh,0x63(%ebx)
jb     80732d9 <_IO_stdin_used+0x4519>
outsb  %gs:(%esi),(%dx)
add    %ch,0x69(%ebp)
arpl   %bp,0x75(%ebp)
je     80732e3 <_IO_stdin_used+0x4523>
add    %ah,0x6c(%ecx)
je     80732e8 <_IO_stdin_used+0x4528>
jb     80732e6 <_IO_stdin_used+0x4526>
jae    80732ec <_IO_stdin_used+0x452c>
add    %ch,0x73(%ecx,%eiz,2)
je     807328d <_IO_stdin_used+0x44cd>
jae    80732f4 <_IO_stdin_used+0x4534>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x73(%eax,%eax,1)
je     8073306 <_IO_stdin_used+0x4546>
jo     80732fc <_IO_stdin_used+0x453c>
add    %dh,%fs:0x6c(%ebx)
gs
gs
jo     80732a1 <_IO_stdin_used+0x44e1>
jae    8073306 <_IO_stdin_used+0x4546>
jb     8073314 <_IO_stdin_used+0x4554>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %fs:(%esi),(%dx)
ja     8073319 <_IO_stdin_used+0x4559>
add    %ch,0x6e(%ecx)
jae    8073315 <_IO_stdin_used+0x4555>
jb     8073326 <_IO_stdin_used+0x4566>
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x63(%ebx)
popa
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x72(%eax,%eax,1)
gs
jae    807332f <_IO_stdin_used+0x456f>
jb     8073342 <_IO_stdin_used+0x4582>
gs add %ch,%fs:%gs:0x73(%ebp)
outsl  %fs:(%esi),(%dx)
jae    80732d5 <_IO_stdin_used+0x4515>
gs
push   $0x65
arpl   %si,0x64(%ebx,%eiz,2)
add    %ch,0x61(%ebx)
je     8073342 <_IO_stdin_used+0x4582>
imul   $0x61,0x6e(%ecx),%esp
add    %ch,0x70(%edi)
je     8073353 <_IO_stdin_used+0x4593>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x6a(%ebp)
arpl   %si,%gs:0x6c(%ebx,%eiz,2)
outsl  %ds:(%esi),(%dx)
jae    807335c <_IO_stdin_used+0x459c>
arpl   %sp,0x63(%eax,%eax,1)
popa
insb   (%dx),%es:(%edi)
arpl   %ax,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x61(%ebx)
je     807336a <_IO_stdin_used+0x45aa>
imul   $0x61,0x6e(%ecx),%esp
push   $0x67617269
popa
outsb  %ds:(%esi),(%dx)
popa
add    %dh,0x65(%ebx)
insl   (%dx),%es:(%edi)
imul   $0x6e6f6c,0x6f(%ebx),%esp
arpl   %si,0x74(%ebp)
add    %ah,0x64(%ebp)
imul   $0x726f6365,0x72(%eax,%eax,1),%esi
add    %dh,%fs:0x65(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c63,%fs:0x0(%ebp,%eiz,2),%bp
gs
popa
jb     807333f <_IO_stdin_used+0x457f>
arpl   %sp,0x6c(%ecx)
outsb  %gs:(%esi),(%dx)
fs
popa
jb     8073348 <_IO_stdin_used+0x4588>
jb     80733af <_IO_stdin_used+0x45ef>
outsl  %fs:(%esi),(%dx)
add    %dh,0x72(%eax)
imul   $0x74657300,0x74(%esi),%ebp
jne    80733c8 <_IO_stdin_used+0x4608>
add    %ah,0x61(%ebx)
jo     80733d0 <_IO_stdin_used+0x4610>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
bound  %esp,0x73(%ecx)
jae    80733c9 <_IO_stdin_used+0x4609>
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    80733df <_IO_stdin_used+0x461f>
add    %ah,0x74(%ecx)
je     80733d5 <_IO_stdin_used+0x4615>
outsb  %ds:(%esi),(%dx)
fs
popa
outsb  %ds:(%esi),(%dx)
je     80733d5 <_IO_stdin_used+0x4615>
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ch,0x70(%ebx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
add    %ch,0x65(%ebp)
imul   $0x65706572,%fs:0x5f(%ecx),%esp
popa
je     807338f <_IO_stdin_used+0x45cf>
insl   (%dx),%es:(%edi)
gs imul $0x70736964,%fs:%gs:0x0(%ecx),%esp
70
insb   (%dx),%es:(%edi)
popa
jns    8073411 <_IO_stdin_used+0x4651>
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
add    %ch,%gs:0x73(%ecx,%ebp,2)
je     80733a8 <_IO_stdin_used+0x45e8>
je     8073419 <_IO_stdin_used+0x4659>
jne    807340f <_IO_stdin_used+0x464f>
push   $0x5f646170
je     8073422 <_IO_stdin_used+0x4662>
addr32 insb (%dx),%es:(%di)
add    %ah,%gs:0x68(%ebx)
popa
je     80733bd <_IO_stdin_used+0x45fd>
imul   $0x0,0x31(%eax),%esi
imul   $0x70,0x6a(%eax),%esi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
add    %dh,0x63(%ebx)
jb     807343b <_IO_stdin_used+0x467b>
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jo     8073440 <_IO_stdin_used+0x4680>
addr16
gs
jne    8073453 <_IO_stdin_used+0x4693>
add    %ch,0x68(%ebp)
jo     80733e8 <_IO_stdin_used+0x4628>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8073453 <_IO_stdin_used+0x4693>
add    %ah,0x6c(%ebp,%eiz,2)
gs
je     807345a <_IO_stdin_used+0x469a>
imul   $0x6167,0x0(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
gs
jae    8073400 <_IO_stdin_used+0x4640>
popa
jne    807347b <_IO_stdin_used+0x46bb>
add    %ch,0x6f(%eax)
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x63(%ebx)
jb     807347c <_IO_stdin_used+0x46bc>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   $0x70656d6f
popa
add    %dh,%gs:0x65(%bp,%si)
add    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8073426 <_IO_stdin_used+0x4666>
jb     8073489 <_IO_stdin_used+0x46c9>
imul   $0x5f736c61,%fs:0x0(%edi),%ebp
je     80734a1 <_IO_stdin_used+0x46e1>
addr32 insb (%dx),%es:(%di)
add    %ah,%gs:0x75(%ebp)
jb     80734aa <_IO_stdin_used+0x46ea>
add    %dh,0x65(%ebx)
popa
jb     80734a4 <_IO_stdin_used+0x46e4>
push   $0x63726100
push   $0x657669
imul   $0x6e696c5f,0x73(%esi),%ebp
add    %ah,%gs:0x6f(%edi)
je     80734c7 <_IO_stdin_used+0x4707>
add    %ch,0x70(%ebx)
outsb  %gs:(%esi),(%dx)
je     80734c4 <_IO_stdin_used+0x4704>
jb     8073461 <_IO_stdin_used+0x46a1>
imul   $0x69,0x6d(%eax),%esi
outsb  %ds:(%esi),(%dx)
jne    80734db <_IO_stdin_used+0x471b>
add    %dh,0x75(%edi,%ebp,2)
arpl   %bp,0x70(%eax)
popa
fs
pop    %edi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80734df <_IO_stdin_used+0x471f>
js     80734f0 <_IO_stdin_used+0x4730>
pop    %edi
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
jne    8073482 <_IO_stdin_used+0x46c2>
je     80734f9 <_IO_stdin_used+0x4739>
outsb  %ds:(%esi),(%dx)
gs
jb     8073488 <_IO_stdin_used+0x46c8>
jo     80734eb <_IO_stdin_used+0x472b>
gs outsl %fs:%gs:(%si),(%dx)
ja     80734fe <_IO_stdin_used+0x473e>
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x70(%ebx)
outsl  %fs:(%esi),(%dx)
je     807349c <_IO_stdin_used+0x46dc>
jno    8073513 <_IO_stdin_used+0x4753>
gs
jae    8073515 <_IO_stdin_used+0x4755>
imul   $0x6d756e00,0x6e(%edi),%ebp
gs
jb     8073514 <_IO_stdin_used+0x4754>
arpl   %bx,0x31(%edi)
add    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
jne    8073532 <_IO_stdin_used+0x4772>
add    %dh,0x72(%eax)
gs
jbe    8073531 <_IO_stdin_used+0x4771>
outsl  %ds:(%esi),(%dx)
jne    807353e <_IO_stdin_used+0x477e>
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     807353b <_IO_stdin_used+0x477b>
arpl   %bx,0x73(%edi)
je     8073538 <_IO_stdin_used+0x4778>
jb     80734d9 <_IO_stdin_used+0x4719>
jae    807353c <_IO_stdin_used+0x477c>
je     807350f <_IO_stdin_used+0x474f>
add    %dh,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x65(%eax)
arpl   %bp,0x0(%ebx)
jo     807354c <_IO_stdin_used+0x478c>
jne    8073560 <_IO_stdin_used+0x47a0>
arpl   %sp,%gs:0x6e(%eax,%eax,1)
gs
js     8073569 <_IO_stdin_used+0x47a9>
jae    8073566 <_IO_stdin_used+0x47a6>
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%bx)
popa
jo     8073567 <_IO_stdin_used+0x47a7>
imul   $0x74696465,0x73(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jb     8073509 <_IO_stdin_used+0x4749>
jo     807357d <_IO_stdin_used+0x47bd>
outsl  %ds:(%esi),(%dx)
xor    %eax,(%bx,%si)
imul   $0x6c,0x70(%eax),%esi
jne    8073588 <_IO_stdin_used+0x47c8>
add    %bh,0x66(%eax)
gs
jb     807351b <_IO_stdin_used+0x475b>
imul   $0x6c,0x70(%eax),%esi
jne    8073594 <_IO_stdin_used+0x47d4>
insl   (%dx),%es:(%edi)
imul   $0x75730073,0x75(%esi),%ebp
jae    807359b <_IO_stdin_used+0x47db>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x72(%edi)
gs outsb %gs:(%esi),(%dx)
add    %ah,0x6e(%esi)
add    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     807353e <_IO_stdin_used+0x477e>
popaw
jae    80735b6 <_IO_stdin_used+0x47f6>
outsw  %ds:(%esi),(%dx)
jb     80735bd <_IO_stdin_used+0x47fd>
popa
jb     80735ad <_IO_stdin_used+0x47ed>
add    %ch,0x66(%ebp,%eiz,2)
je     80735b0 <_IO_stdin_used+0x47f0>
insb   (%dx),%es:(%edi)
je     8073552 <_IO_stdin_used+0x4792>
insb   (%dx),%es:(%edi)
gs
data16
je     80735ca <_IO_stdin_used+0x480a>
push   $0x746669
push   $0x616a6e61
add    %ch,0x6d(%ecx)
popa
addr16
gs
jae    8073569 <_IO_stdin_used+0x47a9>
jo     80735e1 <_IO_stdin_used+0x4821>
jb     807356d <_IO_stdin_used+0x47ad>
insb   (%dx),%es:(%edi)
gs
data16
je     80735d4 <_IO_stdin_used+0x4814>
jb     80735d5 <_IO_stdin_used+0x4815>
arpl   %sp,0x0(%ebp)
imul   $0x74,0x73(%edx),%si
insb   (%dx),%es:(%edi)
gs
data16
je     80735ef <_IO_stdin_used+0x482f>
gs
je     80735e6 <_IO_stdin_used+0x4826>
add    %ch,0x70(%ebx)
gs
jno    8073600 <_IO_stdin_used+0x4840>
popa
insb   (%dx),%es:(%edi)
add    %dh,0x63(%esi)
jb     8073592 <_IO_stdin_used+0x47d2>
outsl  %fs:(%esi),(%dx)
arpl   %si,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     807360e <_IO_stdin_used+0x484e>
add    %dh,0x79(%ebx)
jae    8073612 <_IO_stdin_used+0x4852>
jno    80735a2 <_IO_stdin_used+0x47e2>
imul   $0x73,0x61(%eax),%esi
je     807360d <_IO_stdin_used+0x484d>
jb     8073613 <_IO_stdin_used+0x4853>
jae    8073617 <_IO_stdin_used+0x4857>
add    %dh,0x6f(%eax)
ja     8073616 <_IO_stdin_used+0x4856>
jb     80735b3 <_IO_stdin_used+0x47f3>
je     8073616 <_IO_stdin_used+0x4856>
bound  %eax,(%eax)
imul   $0x636e,0x61(%esi),%bp
add    %ah,%gs:0x6c(%ebp,%eiz,2)
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x63616200,0x65(%esi),%ebp
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x0(%ebp)
imul   $0x69,0x72(%eax),%esi
addr16 push $0x72617074
outsb  %gs:(%esi),(%dx)
add    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
outsl  %fs:(%esi),(%dx)
ja     8073658 <_IO_stdin_used+0x4898>
add    %ah,0x6c(%ebp,%eiz,2)
pop    %edi
outsl  %gs:(%esi),(%dx)
jae    80735f3 <_IO_stdin_used+0x4833>
jns    807365a <_IO_stdin_used+0x489a>
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%esi)
ja     807366e <_IO_stdin_used+0x48ae>
add    %ch,0x70(%ebx)
insb   (%dx),%es:(%edi)
gs
data16
je     8073673 <_IO_stdin_used+0x48b3>
popa
jb     807366b <_IO_stdin_used+0x48ab>
outsb  %ds:(%esi),(%dx)
add    %dh,0x75(%ebx)
bound  %esi,0x74(%ecx,%ebp,2)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x67(%ecx)
popa
imul   $0x74697773,0x0(%esi),%ebp
arpl   %bp,0x76(%eax)
imul   $0x65646f6d,0x6f(%ebp,%eiz,2),%esp
add    %ah,0x72(%esi)
popa
insl   (%dx),%es:(%edi)
outsw  %gs:(%esi),(%dx)
jb     80736a7 <_IO_stdin_used+0x48e7>
popa
jb     8073697 <_IO_stdin_used+0x48d7>
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     80736a3 <_IO_stdin_used+0x48e3>
arpl   %bx,0x70(%edi)
outsl  %ds:(%esi),(%dx)
jne    80736ae <_IO_stdin_used+0x48ee>
add    %ah,%fs:0x6e(%esi)
pop    %edi
add    %dh,%gs:0x6c(%eax)
popa
jns    80736bc <_IO_stdin_used+0x48fc>
popa
jne    80736c2 <_IO_stdin_used+0x4902>
add    %ah,%gs:0x72(%edx)
gs
popa
imul   $0x73,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jne    80736c9 <_IO_stdin_used+0x4909>
add    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
data16
gs gs add %ah,%fs:%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x72,0x61(%ebp),%ebp
imul   $0x66,0x0(%ebx),%esi
outsb  %ds:(%esi),(%dx)
pop    %edi
gs
jae    80736d9 <_IO_stdin_used+0x4919>
add    %dh,0x6e(%ebp)
outsl  %fs:(%esi),(%dx)
add    %ah,0x75(%ecx)
imul   $0x735f6e66,%fs:0x0(%edi),%ebp
add    %ch,0x70(%ebp)
xor    (%eax),%eax
outsb  %ds:(%esi),(%dx)
jne    80736fb <_IO_stdin_used+0x493b>
gs
jb     80736fa <_IO_stdin_used+0x493a>
arpl   %bx,0x39(%edi)
add    %dh,0x65(%edi,%esi,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x32(%esi)
xor    %eax,(%eax)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
ja     807370e <_IO_stdin_used+0x494e>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     807371d <_IO_stdin_used+0x495d>
add    %ah,0x6e(%ecx)
insb   (%dx),%es:(%di)
add    %ah,%gs:0x73(%ecx,%ebp,2)
jo     8073722 <_IO_stdin_used+0x4962>
popa
jns    8073718 <_IO_stdin_used+0x4958>
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ah,0x61(%edx)
je     8073735 <_IO_stdin_used+0x4975>
gs
jb     807373d <_IO_stdin_used+0x497d>
add    %ch,0x6e(%ecx,%eiz,2)
addr16 jne 807372c <_IO_stdin_used+0x496c>
add    %ch,%gs:0x75(%bp)
insl   (%dx),%es:(%edi)
gs
jb     807373d <_IO_stdin_used+0x497d>
arpl   %bx,0x32(%edi)
add    %dh,0x65(%edx)
jo     8073748 <_IO_stdin_used+0x4988>
jns    80736de <_IO_stdin_used+0x491e>
je     807374f <_IO_stdin_used+0x498f>
jne    8073745 <_IO_stdin_used+0x4985>
push   $0x5f646170
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     807375a <_IO_stdin_used+0x499a>
arpl   %bx,0x38(%edi)
add    %dh,0x6c(%eax)
popa
jns    807375f <_IO_stdin_used+0x499f>
jb     80736fc <_IO_stdin_used+0x493c>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
add    %ah,0x72(%esi)
popa
insl   (%dx),%es:(%edi)
bound  %esp,%gs:0x63(%ecx)
imul   $0x61,(%eax),%eax
fs
fs
jb     8073778 <_IO_stdin_used+0x49b8>
jae    8073788 <_IO_stdin_used+0x49c8>
bound  %ebp,0x6f(%edi)
imul   $0x64,(%eax),%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
popa
jb     8073721 <_IO_stdin_used+0x4961>
gs
jo     807378b <_IO_stdin_used+0x49cb>
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
xor    (%bx,%si),%al
imul   $0x0,0x39(%eax),%esi
jbe    807379a <_IO_stdin_used+0x49da>
fs outsl %fs:%gs:(%esi),(%dx)
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     80737ad <_IO_stdin_used+0x49ed>
add    %ah,0x6e(%esi)
pop    %edi
xor    %eax,(%eax)
jbe    80737aa <_IO_stdin_used+0x49ea>
fs outsl %fs:%gs:(%esi),(%dx)
jo     80737ae <_IO_stdin_used+0x49ee>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x73(%ecx,%eiz,2)
push   $0x72616f62
add    %dh,%fs:0x61(%edi)
imul   $0x70,0x75(%ebp),%esp
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     80737ca <_IO_stdin_used+0x4a0a>
arpl   %bx,0x33(%edi)
add    %dh,0x69(%esi)
fs outsl %fs:%gs:(%esi),(%dx)
add    %dh,0x6f(%eax)
ja     80737d4 <_IO_stdin_used+0x4a14>
jb     80737a3 <_IO_stdin_used+0x49e3>
add    %ch,0x66(%ebp,%eiz,2)
je     80737da <_IO_stdin_used+0x4a1a>
je     80737eb <_IO_stdin_used+0x4a2b>
insb   (%dx),%es:(%edi)
add    %dh,0x65(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
jb     8073782 <_IO_stdin_used+0x49c2>
imul   $0x0,0x32(%eax),%esi
outsb  %ds:(%esi),(%dx)
jne    80737f6 <_IO_stdin_used+0x4a36>
gs
jb     80737f5 <_IO_stdin_used+0x4a35>
arpl   %bx,0x34(%edi)
add    %bh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
imul   $0x75,0x6b(%ecx),%esp
push   $0x616b6e61
imul   $0x6b,0x0(%ebp),%esi
jo     80737da <_IO_stdin_used+0x4a1a>
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     8073812 <_IO_stdin_used+0x4a52>
arpl   %bx,0x30(%edi)
add    %dh,(%ecx)
xor    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
jae    807382d <_IO_stdin_used+0x4a6d>
jo     80737ba <_IO_stdin_used+0x49fa>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    80737c4 <_IO_stdin_used+0x4a04>
jo     8073838 <_IO_stdin_used+0x4a78>
outsl  %ds:(%esi),(%dx)
xor    (%bx,%si),%eax
insl   (%dx),%es:(%edi)
jne    8073835 <_IO_stdin_used+0x4a75>
outsb  %gs:(%esi),(%dx)
imul   $0x0,0x6e(%ecx),%esp
ja     8073845 <_IO_stdin_used+0x4a85>
jae    8073836 <_IO_stdin_used+0x4a76>
bound  %esi,0x74(%ebp)
je     807384b <_IO_stdin_used+0x4a8b>
outsb  %ds:(%esi),(%dx)
add    %dh,0x0(%esi,%esi,2)
jo     8073855 <_IO_stdin_used+0x4a95>
outsl  %ds:(%esi),(%dx)
addr16 xor $0x0,%al
fs
gs
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%esi)
jbe    8073862 <_IO_stdin_used+0x4aa2>
jb     807385e <_IO_stdin_used+0x4a9e>
je     807385c <_IO_stdin_used+0x4a9c>
jae    80737f9 <_IO_stdin_used+0x4a39>
bound  %ebp,0x65(%ebp,%esi,2)
add    %dh,0x6c(%eax)
popa
jns    8073866 <_IO_stdin_used+0x4aa6>
add    %ah,%fs:0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     807383e <_IO_stdin_used+0x4a7e>
add    %dh,0x6f(%esi)
imul   $0x6c69616d,0x65(%ebx),%esp
add    %dh,0x65(%edx)
data16
jb     8073882 <_IO_stdin_used+0x4ac2>
jae    8073887 <_IO_stdin_used+0x4ac7>
add    %dh,0x6f(%edi)
jb     8073888 <_IO_stdin_used+0x4ac8>
jo     8073898 <_IO_stdin_used+0x4ad8>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    807389b <_IO_stdin_used+0x4adb>
jb     807382e <_IO_stdin_used+0x4a6e>
imul   $0x66007374,%fs:0x69(%edi),%esp
xor    %edi,(%ecx)
add    %ah,0x72(%edi)
popa
jbe    80738a3 <_IO_stdin_used+0x4ae3>
add    %dh,0x65(%edx)
ja     80738ac <_IO_stdin_used+0x4aec>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x72(%eax)
gs
jbe    80738b4 <_IO_stdin_used+0x4af4>
outsl  %ds:(%esi),(%dx)
jne    80738c1 <_IO_stdin_used+0x4b01>
jae    80738bf <_IO_stdin_used+0x4aff>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6f(%bp,%di)
jo     80738d0 <_IO_stdin_used+0x4b10>
add    %ch,0x70(%ebx)
jae    80738c8 <_IO_stdin_used+0x4b08>
popa
jae    80738c7 <_IO_stdin_used+0x4b07>
add    %ah,0x72(%edx)
imul   $0x73656e74,0x68(%edi),%esp
jae    80738ca <_IO_stdin_used+0x4b0a>
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     80738e0 <_IO_stdin_used+0x4b20>
arpl   %bx,0x37(%edi)
add    %ah,0x72(%edx)
imul   $0x73656e74,0x68(%edi),%esp
jae    80738fb <_IO_stdin_used+0x4b3b>
jo     8073888 <_IO_stdin_used+0x4ac8>
xor    %esi,(%eax)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
jae    80738f7 <_IO_stdin_used+0x4b37>
outsl  %ds:(%esi),(%dx)
ja     8073904 <_IO_stdin_used+0x4b44>
add    %ah,0x31(%esi)
cmp    %al,(%eax)
imul   $0x69,0x64(%edx),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    8073910 <_IO_stdin_used+0x4b50>
je     8073914 <_IO_stdin_used+0x4b54>
addr32 insb (%dx),%es:(%di)
add    %dh,%gs:0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dh,0x32(%esi,%esi,2)
add    %ch,0x62(%ebx)
imul   $0x70756d,%fs:0x75(%esp,%ebp,2),%ebp
00
ja     807392f <_IO_stdin_used+0x4b6f>
popa
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%edx)
imul   $0x73656e74,0x68(%edi),%esp
jae    8073930 <_IO_stdin_used+0x4b70>
jp     8073938 <_IO_stdin_used+0x4b78>
jb     8073944 <_IO_stdin_used+0x4b84>
add    %ch,0x70(%ebx)
xor    (%eax),%eax
jb     8073945 <_IO_stdin_used+0x4b85>
addr16 push $0x746c6174
add    %dh,0x69(%edx)
addr16 push $0x69687374
data16
je     80738ee <_IO_stdin_used+0x4b2e>
outsb  %ds:(%esi),(%dx)
jne    807395e <_IO_stdin_used+0x4b9e>
gs
jb     807395d <_IO_stdin_used+0x4b9d>
arpl   %bx,0x36(%edi)
add    %dh,0x69(%edx)
addr16 push $0x61726274
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
jne    8073973 <_IO_stdin_used+0x4bb3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jb     8073976 <_IO_stdin_used+0x4bb6>
addr16 push $0x74656d74
popa
add    %ch,0x70(%ebx)
xor    $0x0,%al
xor    %esi,(%eax)
xor    0x64(%esi),%ch
add    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x64(%esi,%esi,2)
add    %ah,0x61(%edx)
arpl   %bp,0x73(%ebx)
insb   (%dx),%es:(%edi)
popa
jae    8073999 <_IO_stdin_used+0x4bd9>
add    %ch,0x70(%ebx)
xor    %al,(%eax)
outsb  %ds:(%esi),(%dx)
jne    80739a6 <_IO_stdin_used+0x4be6>
gs
jb     80739a5 <_IO_stdin_used+0x4be5>
arpl   %bx,0x35(%edi)
add    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    80739b2 <_IO_stdin_used+0x4bf2>
gs
jne    80739b8 <_IO_stdin_used+0x4bf8>
add    %ah,0x72(%edx)
imul   $0x73656e74,0x68(%edi),%esp
jae    80739b8 <_IO_stdin_used+0x4bf8>
outsl  %ds:(%esi),(%dx)
ja     80739c5 <_IO_stdin_used+0x4c05>
add    %ch,0x67(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ah,0x6e(%esi)
pop    %edi
add    %ch,%fs:0x62(%ebx)
imul   $0x776f646d,%fs:0x75(%esp,%ebp,2),%ebp
77
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     80739b2 <_IO_stdin_used+0x4bf2>
add    %dh,0x63(%esi)
jb     80739b0 <_IO_stdin_used+0x4bf0>
add    %dh,0x68(%ebx)
jne    80739e9 <_IO_stdin_used+0x4c29>
data16
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x31(%esi)
xor    (%eax),%eax
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
xor    %ax,(%eax)
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
xor    %si,(%ecx)
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     80739d2 <_IO_stdin_used+0x4c12>
add    %dh,0x66(%edx)
imul   $0x6c,0x6c(%ecx),%ebp
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     80739e8 <_IO_stdin_used+0x4c28>
add    %ah,0x31(%esi)
xor    $0x0,%al
push   $0x65676e61
jne    8073a28 <_IO_stdin_used+0x4c68>
add    %ch,0x67(%ecx,%ebp,2)
push   $0x745f7374
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
add    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8073a3d <_IO_stdin_used+0x4c7d>
gs outsl %fs:%gs:(%esi),(%dx)
ja     8073a43 <_IO_stdin_used+0x4c83>
add    %ah,0x32(%esi)
xor    (%eax),%al
bound  %esi,0x6c(%edx)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073a15 <_IO_stdin_used+0x4c55>
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073a1f <_IO_stdin_used+0x4c5f>
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073a25 <_IO_stdin_used+0x4c65>
xor    %al,(%eax)
outsw  %ds:(%esi),(%dx)
jb     8073a71 <_IO_stdin_used+0x4cb1>
popa
jb     8073a61 <_IO_stdin_used+0x4ca1>
insl   (%dx),%es:(%edi)
popa
imul   $0x325f6e,0x66(%eax,%eax,1),%ebp
imul   $0x0,0x37(%eax),%esi
jb     8073a76 <_IO_stdin_used+0x4cb6>
addr16 push $0x72746374
insb   (%dx),%es:(%edi)
add    %dh,0x69(%esi)
fs outsl %fs:%gs:(%esi),(%dx)
pop    %edi
jo     8073a8f <_IO_stdin_used+0x4ccf>
gs
jbe    8073a20 <_IO_stdin_used+0x4c60>
imul   $0x62,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
popa
jb     8073a8c <_IO_stdin_used+0x4ccc>
add    %dh,0x77(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%edx)
jne    8073a97 <_IO_stdin_used+0x4cd7>
je     8073aa3 <_IO_stdin_used+0x4ce3>
outsl  %ds:(%esi),(%dx)
je     8073a9f <_IO_stdin_used+0x4cdf>
add    %ah,0x6e(%esi)
pop    %edi
cmp    %ax,(%eax)
jae    8073aac <_IO_stdin_used+0x4cec>
outsl  %ds:(%esi),(%dx)
ja     8073a43 <_IO_stdin_used+0x4c83>
bound  %esi,0x6c(%edx)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073a82 <_IO_stdin_used+0x4cc2>
add    %ah,0x32(%esi)
xor    (%eax),%eax
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
xor    (%eax),%al
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
xor    %si,(%edx)
add    %ah,0x6e(%esi)
pop    %edi
bound  %eax,(%eax)
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
cmp    %al,(%eax)
imul   $0x0,0x36(%eax),%esi
data16
xor    (%eax,%eax,1),%dh
xor    %si,(%edi)
add    %ah,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073ab2 <_IO_stdin_used+0x4cf2>
add    %ah,0x32(%esi)
xor    %al,(%eax)
bound  %esi,0x6c(%edx)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8073abe <_IO_stdin_used+0x4cfe>
add    %ah,0x6e(%esi)
pop    %edi
xor    (%eax),%ax
imul   $0x0,0x35(%eax),%esi
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
xor    $0x0,%al
jns    8073b01 <_IO_stdin_used+0x4d41>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8073aa1 <_IO_stdin_used+0x4ce1>
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
add    %ah,0x6e(%esi)
pop    %edi
xor    %si,(%eax)
add    %ah,0x31(%esi)
add    %dh,%ss:0x77(%ebp)
bound  %eax,(%eax)
data16
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
aaa
add    %ah,0x31(%esi)
xor    $0x5f6e6600,%eax
data16
add    %ah,%ss:0x6e(%esi)
pop    %edi
xor    $0x7700,%ax
ja     8073b45 <_IO_stdin_used+0x4d85>
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
push   %ebx
inc    %ebp
push   %edx
push   %esi
inc    %ebp
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
push   %ebx
inc    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
xor    $0x59454b00,%eax
pop    %edi
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
xor    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
push   %ecx
push   %ebp
inc    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
inc    %ecx
inc    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
inc    %edx
push   %edx
inc    %ecx
inc    %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
inc    %edx
push   %edx
inc    %ecx
inc    %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
dec    %esi
push   %esp
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
inc    %ebx
push   %esp
push   %edx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
dec    %ebp
dec    %ecx
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %eax
dec    %edi
push   %ebx
push   %esp
push   %edx
dec    %edi
push   %eax
dec    %eax
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
push   %edx
inc    %ecx
push   %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
push   %ebx
dec    %eax
dec    %ecx
inc    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebx
dec    %esp
inc    %ecx
push   %ebx
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %edi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %esp
inc    %ecx
push   %ebx
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
push   %ebx
dec    %eax
dec    %ecx
inc    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
inc    %ecx
push   %ebx
push   %esp
inc    %ebp
push   %edx
dec    %ecx
push   %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
inc    %ecx
dec    %esp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
push   %eax
push   %ebx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    $0x59454b00,%eax
pop    %edi
inc    %esi
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%eax)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
push   %edx
dec    %edi
dec    %esp
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
dec    %ebp
dec    %ecx
dec    %esi
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    $0x59454b00,%eax
pop    %edi
dec    %ebx
push   %eax
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
push   %eax
dec    %esp
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
xor    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
inc    %esp
dec    %edi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
inc    %ebp
dec    %esi
dec    %ebx
inc    %ecx
dec    %ebx
push   %ebp
dec    %eax
inc    %ecx
dec    %esi
dec    %ebx
inc    %ecx
dec    %ebx
push   %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
xor    %esi,(%eax)
xor    0x44(%esi),%cl
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%ecx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%edx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %ecx
push   %esp
inc    %ecx
dec    %ebx
inc    %ecx
dec    %esi
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
dec    %ecx
push   %edx
inc    %ecx
inc    %edi
inc    %ecx
dec    %esi
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
inc    %ebp
dec    %esi
dec    %ebx
inc    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %ecx
push   %esp
inc    %ecx
dec    %ebx
inc    %ecx
dec    %esi
inc    %ecx
dec    %eax
dec    %ecx
push   %edx
inc    %ecx
inc    %edi
inc    %ecx
dec    %esi
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
push   %ebp
dec    %eax
inc    %ebp
dec    %esi
dec    %ebx
inc    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
dec    %edx
push   %eax
inc    %ebx
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
inc    %ebp
dec    %esi
push   %esp
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
inc    %ebx
push   %esp
push   %edx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
push   %ebx
dec    %esp
inc    %ecx
push   %ebx
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
push   %edx
push   %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
inc    %ecx
dec    %esp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
inc    %esi
inc    %ebp
inc    %ebp
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ecx
inc    %edi
inc    %ebp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ecx
inc    %edi
inc    %ebp
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
dec    %esi
push   %ebx
inc    %ebp
push   %edx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
dec    %esp
inc    %ebp
push   %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ecx
inc    %ebx
push   %edx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
push   %ebp
push   %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %edi
push   %edi
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
inc    %ebp
push   %ecx
push   %ebp
inc    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
push   %eax
dec    %esp
push   %ebp
push   %ebx
dec    %ebp
dec    %ecx
dec    %esi
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ecx
push   %ebp
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
inc    %ecx
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
inc    %ebx
dec    %edi
dec    %ebp
dec    %ebp
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
push   %ebp
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
inc    %ecx
dec    %esi
dec    %edx
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %ecx
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
dec    %ebp
inc    %ebp
push   %esp
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
dec    %ebp
inc    %ebp
push   %esp
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %ebp
push   %eax
dec    %edi
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %esp
dec    %edi
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
inc    %edi
inc    %ecx
dec    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
push   %eax
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebp
dec    %esi
inc    %esp
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
push   %edx
dec    %edi
dec    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %edi
push   %eax
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ecx
push   %ebx
push   %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %ecx
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
push   %ebp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
inc    %ebp
dec    %esp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ebp
dec    %esi
push   %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %esp
inc    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
push   %esp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %esp
inc    %ebp
inc    %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
inc    %ecx
dec    %ebx
inc    %ebp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
dec    %esi
inc    %esp
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
dec    %esp
inc    %ebp
push   %esp
inc    %ebp
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %eax
inc    %esi
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
inc    %edi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
inc    %edi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %edi
push   %edi
push   %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
push   %edx
inc    %ebp
inc    %ebp
dec    %esi
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
pop    %ecx
inc    %ebx
dec    %esp
inc    %ebp
push   %edi
dec    %ecx
dec    %esi
inc    %esp
dec    %edi
push   %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
dec    %edi
dec    %edi
dec    %ebx
dec    %ebp
inc    %ecx
push   %edx
dec    %ebx
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %ebp
push   %eax
push   %ebp
push   %esp
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %edi
push   %edx
push   %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
inc    %ebx
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
inc    %ebp
pop    %eax
push   %esp
push   %ebx
dec    %edi
dec    %esi
inc    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
push   %eax
inc    %ecx
push   %ebp
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
inc    %ebp
push   %esi
dec    %ecx
dec    %edi
push   %ebp
push   %ebx
push   %ebx
dec    %edi
dec    %esi
inc    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %esp
dec    %edi
push   %eax
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
inc    %ebx
dec    %edi
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
push   %edi
dec    %ecx
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %eax
dec    %edi
dec    %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
push   %ebx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
dec    %ecx
inc    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
push   %eax
inc    %ecx
inc    %edi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
inc    %esi
push   %edx
inc    %ebp
push   %ebx
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
pop    %eax
dec    %ecx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
dec    %edi
push   %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
inc    %esp
dec    %ecx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
push   %edx
dec    %edi
dec    %esp
dec    %esp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
push   %edx
dec    %edi
dec    %esp
dec    %esp
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
dec    %esp
inc    %ebp
inc    %esi
push   %esp
push   %eax
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
push   %eax
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
push   %eax
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
inc    %ebp
push   %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
inc    %esp
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%ebx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%eax,%eax,1)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,0x59454b00
pop    %edi
inc    %esi
xor    %esi,(%esi)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %esi,(%edi)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %edi,(%eax)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    %edi,(%ecx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    (%eax),%dh
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    (%ecx),%dh
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    (%edx),%dh
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    (%ebx),%dh
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
xor    (%eax,%eax,1),%dh
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ecx
push   %ebp
push   %ebx
inc    %ebp
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
inc    %edi
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
inc    %edi
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esp
inc    %ecx
push   %ebx
dec    %eax
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %ebp
push   %ebx
push   %eax
inc    %ebp
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
inc    %ecx
push   %ebx
push   %esp
inc    %esi
dec    %edi
push   %edx
push   %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
inc    %ecx
push   %ebx
push   %ebx
inc    %edx
dec    %edi
dec    %edi
push   %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %ecx
dec    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %eax
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %edi
push   %ebp
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ecx
push   %ebp
inc    %ebp
push   %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
inc    %ecx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
inc    %ecx
push   %edx
inc    %ebx
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
dec    %esi
inc    %ebp
inc    %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %ecx
dec    %esi
inc    %ecx
dec    %esi
inc    %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %eax
dec    %edi
push   %edx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %eax
dec    %edi
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
dec    %esp
push   %esp
inc    %ebp
push   %edx
inc    %ecx
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %esi
inc    %ebx
inc    %ebp
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
dec    %esi
inc    %ebp
push   %ebx
push   %ebx
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
dec    %esi
inc    %ebp
push   %ebx
push   %ebx
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ebp
inc    %esp
dec    %ecx
inc    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %edi
dec    %ecx
push   %esp
inc    %ebx
dec    %eax
push   %esi
dec    %ecx
inc    %esp
inc    %ebp
dec    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %edx
inc    %esp
dec    %ecx
dec    %esp
dec    %esp
push   %ebp
dec    %ebp
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %edx
inc    %esp
dec    %ecx
dec    %esp
dec    %esp
push   %ebp
dec    %ebp
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %edx
inc    %esp
dec    %ecx
dec    %esp
dec    %esp
push   %ebp
dec    %ebp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
push   %eax
dec    %esp
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %edi
push   %edx
push   %edi
inc    %ecx
push   %edx
inc    %esp
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ecx
push   %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %edi
inc    %ebx
push   %ebp
dec    %ebp
inc    %ebp
dec    %esi
push   %esp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
dec    %esp
push   %ebp
inc    %ebp
push   %esp
dec    %edi
dec    %edi
push   %esp
dec    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
dec    %esp
inc    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebp
push   %edi
inc    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %ecx
inc    %esp
inc    %ebp
dec    %edi
pop    %edi
dec    %esi
inc    %ebp
pop    %eax
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %ecx
inc    %esp
inc    %ebp
dec    %edi
pop    %edi
push   %eax
push   %edx
inc    %ebp
push   %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
dec    %esi
inc    %ebp
push   %ebx
push   %ebx
pop    %edi
inc    %ebx
pop    %ecx
inc    %ebx
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
dec    %esi
inc    %ebp
push   %ebx
push   %ebx
pop    %edi
pop    %edx
inc    %ebp
push   %edx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %ecx
push   %ebx
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
pop    %edi
dec    %edi
inc    %esi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
push   %edi
inc    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %esi
dec    %ebx
dec    %ecx
dec    %esp
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
dec    %ecx
inc    %ebx
dec    %ebp
push   %ebp
push   %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %edi
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
dec    %esp
inc    %ebp
inc    %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
dec    %edi
push   %esp
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %esp
inc    %ebp
inc    %ecx
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %edi
push   %edi
inc    %ebp
push   %edx
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
inc    %ebp
dec    %esi
inc    %esp
dec    %edi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %edx
inc    %ebx
dec    %eax
dec    %ecx
push   %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
dec    %edi
inc    %edi
push   %edx
inc    %ecx
dec    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
inc    %ecx
push   %esi
dec    %edi
push   %edx
dec    %ecx
push   %esp
inc    %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
push   %eax
inc    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %esi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
dec    %eax
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ecx
dec    %esi
inc    %edi
push   %ebp
inc    %ecx
inc    %edi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
dec    %ecx
push   %esp
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %ebp
inc    %edx
push   %esp
dec    %ecx
push   %esp
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
dec    %esi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ebx
push   %edx
inc    %ebp
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
inc    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
push   %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
push   %esi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %esi
inc    %ebx
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
inc    %ebx
push   %edx
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %ebx
inc    %ecx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
inc    %ecx
push   %esp
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %ebx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
inc    %ecx
push   %eax
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ecx
inc    %esp
dec    %ecx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
push   %ebp
dec    %esi
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
inc    %ebp
pop    %eax
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
push   %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %ebp
pop    %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
push   %eax
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %ecx
push   %ebp
inc    %esp
dec    %ecx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %ecx
inc    %esp
inc    %ebp
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ebp
dec    %ebp
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %esp
inc    %ebp
dec    %esi
inc    %esp
inc    %ecx
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
push   %edx
inc    %ebp
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %ecx
inc    %ebp
dec    %esp
dec    %esp
dec    %edi
push   %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
dec    %esp
push   %ebp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %ecx
push   %edx
push   %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
inc    %ecx
push   %ebx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
inc    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
inc    %ebp
pop    %eax
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edx
inc    %ebp
push   %ebx
push   %esp
inc    %ecx
push   %edx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %esp
dec    %edi
push   %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
dec    %eax
push   %ebp
inc    %esi
inc    %esi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
inc    %ebp
inc    %ecx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
inc    %ebp
push   %esi
dec    %ecx
dec    %edi
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %ecx
inc    %edi
dec    %ecx
push   %esp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
inc    %ebp
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
push   %edi
inc    %ebp
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %ecx
inc    %esp
inc    %ebp
dec    %edi
push   %eax
dec    %eax
dec    %edi
dec    %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
inc    %ecx
dec    %ebp
inc    %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
dec    %edi
push   %ebp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
push   %edx
inc    %ebp
push   %ebx
inc    %ebp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
dec    %edi
push   %edx
inc    %esp
push   %eax
push   %edx
dec    %edi
inc    %ebx
inc    %ebp
push   %ebx
push   %ebx
dec    %edi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
inc    %esp
dec    %ecx
push   %esp
dec    %edi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %eax
push   %edx
inc    %ebp
inc    %ecx
inc    %esp
push   %ebx
dec    %eax
inc    %ebp
inc    %ebp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edi
push   %edx
inc    %ecx
push   %eax
dec    %eax
dec    %ecx
inc    %ebx
push   %ebx
inc    %ebp
inc    %esp
dec    %ecx
push   %esp
dec    %edi
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %eax
push   %edx
inc    %ebp
push   %ebx
inc    %ebp
dec    %esi
push   %esp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
inc    %edx
inc    %ecx
push   %ebx
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
inc    %ebp
push   %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esi
dec    %edi
dec    %ecx
inc    %ebx
inc    %ebp
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
inc    %ebp
push   %ebx
push   %ebx
inc    %edx
dec    %edi
dec    %edi
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ebp
dec    %esi
inc    %edi
inc    %ebp
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %ecx
push   %ebx
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %ebx
push   %eax
inc    %ebp
dec    %esp
dec    %esp
inc    %ebx
dec    %eax
inc    %ebp
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
dec    %edi
inc    %edi
dec    %edi
inc    %esi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
dec    %edi
dec    %esp
dec    %esp
inc    %ecx
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebp
push   %ebp
push   %edx
dec    %edi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
push   %edx
inc    %ecx
dec    %ebp
inc    %ebp
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
push   %edx
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esi
dec    %edi
push   %edx
push   %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
inc    %ebp
pop    %eax
push   %esp
pop    %edi
dec    %ebp
inc    %ebp
dec    %esi
push   %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ebp
inc    %ebp
inc    %esp
dec    %ecx
inc    %ecx
pop    %edi
push   %edx
inc    %ebp
push   %eax
inc    %ebp
inc    %ecx
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
xor    %esi,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
push   %ebx
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
xor    %esi,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
push   %ebx
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
dec    %ebp
inc    %ecx
inc    %edi
inc    %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
inc    %ebp
dec    %edi
dec    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
inc    %ebp
dec    %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %ecx
dec    %esi
push   %ebx
pop    %edi
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %ebp
push   %ebx
inc    %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    $0x59454b00,%eax
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    %esi,(%eax)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    %esi,(%ecx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
xor    %esi,(%edx)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %esi
dec    %esi
pop    %edi
inc    %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    $0x59454b00,%eax
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %esp
pop    %edi
inc    %esp
dec    %edi
push   %esp
xor    %esi,(%eax)
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    (%eax),%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    (%eax),%eax
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    $0x0,%al
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
xor    $0x59454b00,%eax
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
add    %cl,%ss:0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
aaa
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
cmp    %al,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
cmp    %eax,(%eax)
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %edx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
inc    %ebp
push   %edx
dec    %ecx
inc    %ebx
pop    %edi
push   %eax
dec    %edi
push   %ebp
dec    %esi
inc    %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
inc    %esi
dec    %edi
inc    %ebx
push   %ebp
push   %ebx
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %edi
push   %eax
push   %ebx
pop    %edi
inc    %edx
push   %ebp
push   %esp
push   %esp
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
dec    %edi
push   %ebp
inc    %ebx
dec    %eax
push   %eax
inc    %ecx
inc    %esp
pop    %edi
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
dec    %edi
push   %ebp
inc    %ebx
dec    %eax
push   %eax
inc    %ecx
inc    %esp
pop    %edi
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
push   %esp
dec    %edi
push   %ebp
inc    %ebx
dec    %eax
push   %eax
inc    %ecx
inc    %esp
pop    %edi
dec    %edi
inc    %esi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
pop    %edx
dec    %edi
dec    %edi
dec    %ebp
dec    %edi
push   %ebp
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
push   %ebp
push   %eax
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
inc    %esp
dec    %edi
push   %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
dec    %esp
inc    %ebp
inc    %esi
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ebx
inc    %ecx
dec    %ebp
inc    %ebp
push   %edx
inc    %ecx
pop    %edi
push   %edx
dec    %ecx
inc    %edi
dec    %eax
push   %esp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %esp
push   %esp
inc    %ebp
dec    %esi
inc    %esp
inc    %ecx
dec    %esi
push   %esp
pop    %edi
dec    %edi
dec    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %esp
push   %esp
inc    %ebp
dec    %esi
inc    %esp
inc    %ecx
dec    %esi
push   %esp
pop    %edi
dec    %edi
inc    %esi
inc    %esi
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
push   %esp
push   %esp
inc    %ebp
dec    %esi
inc    %esp
inc    %ecx
dec    %esi
push   %esp
pop    %edi
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
dec    %esp
dec    %ecx
inc    %edi
dec    %eax
push   %esp
push   %ebx
pop    %edi
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %cl,0x45(%ebx)
pop    %ecx
pop    %edi
inc    %ecx
dec    %esp
push   %ebx
pop    %edi
push   %esp
dec    %edi
inc    %edi
inc    %edi
dec    %esp
inc    %ebp
add    %al,0x72(%ebp)
jb     8074c5f <_IO_stdin_used+0x5e9f>
jb     8074c1e <_IO_stdin_used+0x5e5e>
and    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8074c6b <_IO_stdin_used+0x5eab>
and    %dh,0x61(%eax)
jb     8074c74 <_IO_stdin_used+0x5eb4>
and    %dh,%gs:0x63(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
fs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0xa2773,%eax
cs
cs
das
jae    8074c8f <_IO_stdin_used+0x5ecf>
arpl   %bp,(%edi)
jne    8074c85 <_IO_stdin_used+0x5ec5>
gs
jbe    8074c53 <_IO_stdin_used+0x5e93>
jne    8074c8a <_IO_stdin_used+0x5eca>
gs
jbe    8074c56 <_IO_stdin_used+0x5e96>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8074c98 <_IO_stdin_used+0x5ed8>
outsb  %ds:(%esi),(%dx)
sub    $0x6279656b,%eax
outsl  %ds:(%esi),(%dx)
popa
jb     8074c9d <_IO_stdin_used+0x5edd>
arpl   %ax,%cs:(%eax)
inc    %ebp
jb     8074cb1 <_IO_stdin_used+0x5ef1>
outsl  %ds:(%esi),(%dx)
jb     8074c6e <_IO_stdin_used+0x5eae>
and    %ch,0x6f(%esi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x646f6e20,0x65(%ebx),%esp
and    %ah,%gs:0x6f(%esi)
jb     8074c76 <_IO_stdin_used+0x5eb6>
daa
and    $0xa2773,%eax
inc    %ebp
jb     8074cd1 <_IO_stdin_used+0x5f11>
outsl  %ds:(%esi),(%dx)
jb     8074c8e <_IO_stdin_used+0x5ece>
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x76656420,0x67(%esi),%ebp
imul   $0x73252720,0x65(%ebx),%esp
daa
cmp    (%eax),%ah
and    $0x6b000a6d,%eax
gs
jns    8074ce2 <_IO_stdin_used+0x5f22>
outsl  %ds:(%esi),(%dx)
popa
jb     8074ce8 <_IO_stdin_used+0x5f28>
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
popa
jo     8074cfa <_IO_stdin_used+0x5f3a>
imul   $0x61637320,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
fs and %ah,%fs:%gs:0x30282064
js     8074cc4 <_IO_stdin_used+0x5f04>
js     8074cca <_IO_stdin_used+0x5f0a>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x20,0x79(%ebp),%esp
arpl   %bp,0x64(%edi)
and    %ah,%gs:0x30282064
js     8074cda <_IO_stdin_used+0x5f1a>
js     8074ce0 <_IO_stdin_used+0x5f20>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     8074d2f <_IO_stdin_used+0x5f6f>
jb     8074ce2 <_IO_stdin_used+0x5f22>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x49564520,0x67(%esi),%ebp
dec    %edi
inc    %ebx
push   %ebx
dec    %ebx
inc    %ebp
pop    %ecx
inc    %ebx
dec    %edi
inc    %esp
inc    %ebp
cmp    (%eax),%ah
and    $0xa6d,%eax
add    %al,(%eax)
imul   $0x62,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
popa
jb     8074d4c <_IO_stdin_used+0x5f8c>
cmp    (%eax),%ah
jne    8074d5c <_IO_stdin_used+0x5f9c>
fs
popa
je     8074d59 <_IO_stdin_used+0x5f99>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp)
jb     8074d5a <_IO_stdin_used+0x5f9a>
gs
sub    $0x656c6572,%eax
popa
jae    8074d65 <_IO_stdin_used+0x5fa5>
and    %ch,0x73(%ecx,%ebp,2)
je     8074d26 <_IO_stdin_used+0x5f66>
ja     8074d71 <_IO_stdin_used+0x5fb1>
je     8074d72 <_IO_stdin_used+0x5fb2>
and    %ah,(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     8074d87 <_IO_stdin_used+0x5fc7>
jb     8074d3a <_IO_stdin_used+0x5f7a>
ja     8074d8e <_IO_stdin_used+0x5fce>
imul   $0x6f662067,0x6e(%ecx,%ebp,2),%esi
jb     8074d89 <_IO_stdin_used+0x5fc9>
gs
sub    $0x656c6572,%eax
popa
jae    8074d94 <_IO_stdin_used+0x5fd4>
and    %ah,0x74(%ecx)
je     8074da6 <_IO_stdin_used+0x5fe6>
imul   $0x203a6574,0x75(%edx),%esp
and    $0x73,%eax
inc    %ebp
jb     8074db5 <_IO_stdin_used+0x5ff5>
outsl  %ds:(%esi),(%dx)
jb     8074d72 <_IO_stdin_used+0x5fb2>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    8074d73 <_IO_stdin_used+0x5fb3>
imul   $0x69666974,0x6e(%ebp,%eiz,2),%esp
gs
jb     8074d7e <_IO_stdin_used+0x5fbe>
daa
and    $0xa2773,%eax
imul   $0x62,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
popa
jb     8074dd0 <_IO_stdin_used+0x6010>
and    %dh,0x63(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
imul   $0x20,0x79(%ebp),%esp
insl   (%dx),%es:(%edi)
popa
jo     8074df2 <_IO_stdin_used+0x6032>
imul   $0x736e6900,0x67(%esi),%ebp
je     8074dec <_IO_stdin_used+0x602c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
outsw  %ds:(%esi),(%dx)
jb     8074df5 <_IO_stdin_used+0x6035>
gs
pop    %edi
jb     8074dfb <_IO_stdin_used+0x603b>
insb   (%dx),%es:(%edi)
gs
popa
jae    8074e00 <_IO_stdin_used+0x6040>
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x7ff97ffa(%eax)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x31,(%esi)
add    %esi,(%edx)
add    %ah,%cl
add    %bl,0xc7012701
add    %ebp,-0x19fe7eff(%ecx)
add    %cl,%ch
add    %al,-0x7ff97ffa(%eax)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
stos   %al,%es:(%edi)
add    %al,0x9000a06(%eax)
add    %ebx,(%ecx)
add    %ah,0x2c000500(%ebp)
add    %eax,0x1(%eax)
cmp    (%ecx),%eax
jge    8074e74 <_IO_stdin_used+0x60b4>
inc    %esi
add    %dh,%al
add    %al,%bl
add    %bl,(%esi)
add    %ah,0x23(%eax,%eax,1)
add    %cl,(%edi)
add    %bh,(%eax,%eax,1)
inc    %ecx
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   %cs
add    %ebp,0x1(%ebp)
lahf
add    %esi,(%edi)
add    %ah,0x1(%ebx)
push   %ebp
add    %al,-0x7ff97ffa(%eax)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
addb   $0x80,(%esi)
push   %es
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     807500f <_IO_stdin_used+0x624f>
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x62,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
popa
jb     8075014 <_IO_stdin_used+0x6254>
add    %ah,0x6f632f73
outsb  %ds:(%esi),(%dx)
imul   $0x6c77,0x0(%edi),%sp
add    %ch,0x66(%ecx)
imul   $0x69007865,0x64(%esi),%ebp
data16
insb   (%dx),%es:(%edi)
imul   $0x64646100,0x6b(%esi),%ebp
jb     8075031 <_IO_stdin_used+0x6271>
popa
jae    8075048 <_IO_stdin_used+0x6288>
imul   $0x7079745f,0x6e(%edi),%esp
add    %ah,%gs:0x78253a78
cmp    0x78253a78,%ah
cmp    0x78253a78,%ah
add    %ah,0x30257873
xor    0x25(%eax),%bh
xor    %dh,(%edx)
js     8075021 <_IO_stdin_used+0x6261>
xor    %dh,(%edx)
js     8075025 <_IO_stdin_used+0x6265>
xor    %dh,(%edx)
js     8075029 <_IO_stdin_used+0x6269>
xor    %dh,(%edx)
js     807502d <_IO_stdin_used+0x626d>
xor    %dh,(%edx)
js     807500c <_IO_stdin_used+0x624c>
dec    %ecx
inc    %esp
pop    %edi
dec    %esi
inc    %ebp
push   %esp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
pop    %edi
dec    %ebp
inc    %ecx
inc    %ebx
add    %cl,0x55(%edi)
dec    %ecx
cmp    0x25583230,%ah
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
add    %dh,0x63(%eax)
imul   $0x69706361,(%eax),%eax
pop    %edi
imul   $0x6f007865,0x64(%esi),%ebp
and    $0x30300064,%eax
xor    %dh,(%eax)
cmp    0x78253a78,%ah
cs
and    $0x65640064,%eax
jbe    80750bd <_IO_stdin_used+0x62fd>
imul   $0x25736425,0x70(%eax,%eax,1),%esp
add    %ah,%fs:0x25(%esi)
add    %ah,%fs:0x64(%ebp,%eiz,1)
add    %ah,0x6c732f73
outsl  %ds:(%esi),(%dx)
je     80750eb <_IO_stdin_used+0x632b>
add    %ah,0x73252f73
das
popa
fs
fs
jb     80750e9 <_IO_stdin_used+0x6329>
jae    80750f9 <_IO_stdin_used+0x6339>
add    %cl,0x44(%ecx)
pop    %edi
dec    %esi
inc    %ebp
push   %esp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
pop    %edi
dec    %edi
dec    %esi
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %esi
inc    %ebp
push   %esp
pop    %edi
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
pop    %edi
dec    %edi
dec    %esi
inc    %edx
dec    %edi
inc    %ecx
push   %edx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %esi
inc    %ebp
push   %esp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %cl,0x44(%ecx)
pop    %edi
dec    %esi
inc    %ebp
push   %esp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
pop    %edi
push   %ebx
dec    %esp
dec    %edi
push   %esp
add    %dh,0x73(%ebp)
bound  %ebx,0x69(%edi)
outsb  %ds:(%esi),(%dx)
je     807513f <_IO_stdin_used+0x637f>
jb     8075142 <_IO_stdin_used+0x6382>
popa
arpl   %sp,0x0(%ebp)
jne    8075155 <_IO_stdin_used+0x6395>
bound  %eax,(%eax)
and    $0x25732573,%eax
jae    80750eb <_IO_stdin_used+0x632b>
bound  %esp,0x6d(%ebx)
popa
and    $0x253a642a,%eax
add    %ah,%fs:0x25(%edx)
add    %ah,%fs:0x63(%edx)
insl   (%dx),%es:(%edi)
popa
add    %ch,0x65(%esi)
je     8075162 <_IO_stdin_used+0x63a2>
imul   $0x6f777465,0x6e(%eax,%eax,1),%esp
jb     8075178 <_IO_stdin_used+0x63b8>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6f727020,0x65(%ebx),%esp
jo     807517f <_IO_stdin_used+0x63bf>
jb     8075190 <_IO_stdin_used+0x63d0>
imul   $0x0,0x73(%ebp),%esp
add    %ch,0x6e(%ebp,%esi,2)
sub    $0x6c006425,%eax
jne    807519c <_IO_stdin_used+0x63dc>
sub    $0x30257830,%eax
xor    $0x78,%al
and    $0x30783430,%eax
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %al,(%eax)
arpl   %sp,0x77(%ebx)
add    %dh,0x63(%ebx)
jae    80751b3 <_IO_stdin_used+0x63f3>
pop    %edi
fs
gs
jbe    80751b8 <_IO_stdin_used+0x63f8>
arpl   %sp,0x0(%ebp)
jae    80751b7 <_IO_stdin_used+0x63f7>
jae    80751bf <_IO_stdin_used+0x63ff>
add    %ch,0x62(%eax)
popa
pop    %edi
imul   $0x6e7077,0x77(%eax,%eax,1),%esp
data16
arpl   %si,0x5f(%eax)
insb   (%dx),%es:(%edi)
jne    80751d8 <_IO_stdin_used+0x6418>
add    %ah,0x63(%ebx)
ja     807519c <_IO_stdin_used+0x63dc>
and    $0x667a2d73,%eax
arpl   %si,0x2d(%eax)
and    $0x73253a73,%eax
add    %ah,0x63(%ebx)
ja     80751ae <_IO_stdin_used+0x63ee>
and    $0x63730073,%eax
jae    80751f1 <_IO_stdin_used+0x6431>
pop    %edi
je     80751ec <_IO_stdin_used+0x642c>
jo     80751f2 <_IO_stdin_used+0x6432>
add    %ch,0x73(%esi)
je     8075192 <_IO_stdin_used+0x63d2>
insb   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
add    %ch,0x73(%esi)
je     80751bf <_IO_stdin_used+0x63ff>
arpl   %ax,(%eax)
imul   $0x39333165,0x65(%ebp),%esp
xor    $0x5f,%al
imul   $0x31656565,0x69(%eax,%eax,1),%esp
xor    (%ecx),%edi
xor    $0x2d,%al
xor    %bh,0x25(%eax)
jae    80751b6 <_IO_stdin_used+0x63f6>
das
jb     8075229 <_IO_stdin_used+0x6469>
outsl  %ds:(%esi),(%dx)
jb     8075230 <_IO_stdin_used+0x6470>
sub    $0x73637300,%eax
imul   $0x65677261,0x74(%edi),%ebx
je     80751ca <_IO_stdin_used+0x640a>
data16
arpl   %bx,0x74(%edi)
jb     8075231 <_IO_stdin_used+0x6471>
outsb  %ds:(%esi),(%dx)
jae    8075243 <_IO_stdin_used+0x6483>
outsl  %ds:(%esi),(%dx)
jb     807524a <_IO_stdin_used+0x648a>
add    %dh,0x6f(%eax)
jb     807524f <_IO_stdin_used+0x648f>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x63(%esi)
sub    $0x252d7325,%eax
jae    80751ea <_IO_stdin_used+0x642a>
das
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
fs
gs
jbe    807525c <_IO_stdin_used+0x649c>
arpl   %sp,0x2d(%ebp)
add    %dh,0x61(%ebx)
jae    807525a <_IO_stdin_used+0x649a>
fs
gs
jbe    8075268 <_IO_stdin_used+0x64a8>
arpl   %sp,0x0(%ebp)
jae    8075265 <_IO_stdin_used+0x64a5>
jae    8075265 <_IO_stdin_used+0x64a5>
popa
fs
fs
jb     8075270 <_IO_stdin_used+0x64b0>
jae    8075280 <_IO_stdin_used+0x64c0>
add    %dh,0x61(%ebx)
jae    807523f <_IO_stdin_used+0x647f>
and    $0x73252d73,%eax
add    %ch,(%edi)
jae    8075280 <_IO_stdin_used+0x64c0>
jae    8075290 <_IO_stdin_used+0x64d0>
imul   $0x63736900,0x6e(%edi),%ebp
jae    807528f <_IO_stdin_used+0x64cf>
pop    %edi
jae    807528e <_IO_stdin_used+0x64ce>
jae    807529e <_IO_stdin_used+0x64de>
imul   $0x72617400,0x6e(%edi),%ebp
addr16
gs
je     80752a4 <_IO_stdin_used+0x64e4>
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    $0x303a73,%eax
imul   $0x635f6973,0x63(%ebx),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%eax)
jb     80752d1 <_IO_stdin_used+0x6511>
imul   $0x5f746e65,0x74(%ebx),%esi
popa
fs
fs
jb     80752cf <_IO_stdin_used+0x650f>
jae    80752df <_IO_stdin_used+0x651f>
add    %dh,0x65(%eax)
jb     80752e4 <_IO_stdin_used+0x6524>
imul   $0x5f746e65,0x74(%ebx),%esi
jo     80752e9 <_IO_stdin_used+0x6529>
jb     80752f0 <_IO_stdin_used+0x6530>
add    %ch,0x70(%ecx)
sub    $0x253a7325,%eax
jae    80752b3 <_IO_stdin_used+0x64f3>
imul   $0x252d6973,0x63(%ebx),%esi
jae    80752bc <_IO_stdin_used+0x64fc>
and    $0x612f0073,%eax
je     80752f7 <_IO_stdin_used+0x6537>
add    %ch,(%edi)
jbe    8075307 <_IO_stdin_used+0x6547>
bound  %esi,0x73(%ebp)
pop    %edi
add    %dh,0x63(%ebx)
jae    807530c <_IO_stdin_used+0x654c>
pop    %edi
push   $0x74736f
fs
gs
jbe    8075316 <_IO_stdin_used+0x6556>
arpl   %sp,0x5f(%ebp)
imul   $0x7375626d,0x76(%eax,%eax,1),%esp
sub    $0x252d7325,%eax
jae    80752bf <_IO_stdin_used+0x64ff>
and    $0x64253a64,%eax
cmp    0x64253a64,%ah
add    %dh,0x63(%ebx)
jae    8075338 <_IO_stdin_used+0x6578>
sub    $0x253a7525,%eax
jne    8075310 <_IO_stdin_used+0x6550>
and    $0x75253a75,%eax
add    %ah,0x63(%ebx)
imul   $0x75256300,0x73(%ebx),%esi
fs
and    $0x732a2575,%eax
add    %ah,0x63(%ebx)
imul   $0x7369642d,0x73(%ebx),%esi
imul   $0x62,0x73750075,%esp
pop    %edi
fs
gs
jbe    807536a <_IO_stdin_used+0x65aa>
arpl   %sp,0x0(%ebp)
jne    8075379 <_IO_stdin_used+0x65b9>
bound  %ebp,0x73253a30
add    %dh,0x65(%ebx)
jb     807537a <_IO_stdin_used+0x65ba>
outsl  %ds:(%esi),(%dx)
sub    $0x70007325,%eax
insb   (%dx),%es:(%edi)
popa
je     8075381 <_IO_stdin_used+0x65c1>
outsl  %ds:(%esi),(%dx)
jb     807538b <_IO_stdin_used+0x65cb>
add    %dh,0x6c(%eax)
popa
je     807538a <_IO_stdin_used+0x65ca>
outsl  %ds:(%esi),(%dx)
jb     8075394 <_IO_stdin_used+0x65d4>
sub    $0x61007325,%eax
arpl   %si,0x69(%eax)
add    %ah,0x63(%ecx)
jo     807539d <_IO_stdin_used+0x65dd>
sub    $0x78007325,%eax
outsb  %gs:(%esi),(%dx)
sub    $0x78007325,%eax
outsb  %gs:(%esi),(%dx)
add    %dh,0x69(%esi)
jb     80753bb <_IO_stdin_used+0x65fb>
imul   $0x74726976,0x0(%edi),%ebp
imul   $0x2d696370,0x2d(%edi),%ebp
and    $0x63730073,%eax
insl   (%dx),%es:(%edi)
sub    $0x73007325,%eax
arpl   %bp,0x0(%ebp)
dec    %ecx
inc    %esp
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %cl,0x44(%ecx)
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
pop    %edi
push   %esp
inc    %ecx
inc    %edi
add    %dh,0x61(%eax)
je     80753e3 <_IO_stdin_used+0x6623>
pop    %edi
imul   $0x706d6f63,0x0(%eax,%eax,1),%esp
outsl  %ds:(%esi),(%dx)
jae    80753ec <_IO_stdin_used+0x662c>
and    %dh,0x65(%eax)
jb     80753ff <_IO_stdin_used+0x663f>
imul   $0x20746e65,0x74(%ebx),%esi
fs
gs
jbe    8075400 <_IO_stdin_used+0x6640>
arpl   %sp,0x20(%ebp)
jo     80753fd <_IO_stdin_used+0x663d>
je     8075406 <_IO_stdin_used+0x6646>
add    %ah,0x65642f73
jae    8075409 <_IO_stdin_used+0x6649>
jb     8075411 <_IO_stdin_used+0x6651>
jo     807541e <_IO_stdin_used+0x665e>
outsl  %ds:(%esi),(%dx)
jb     8075420 <_IO_stdin_used+0x6660>
add    %bh,(%edx)
and    $0x25783230,%eax
xor    %dh,(%edx)
js     80753dd <_IO_stdin_used+0x661d>
xor    %dh,(%edx)
js     80753bc <_IO_stdin_used+0x65fc>
outsb  %gs:(%si),(%dx)
gs
jb     807542b <_IO_stdin_used+0x666b>
arpl   %ax,(%eax)
popa
je     8075428 <_IO_stdin_used+0x6668>
jo     8075432 <_IO_stdin_used+0x6672>
add    %ah,0x6c(%esi)
outsl  %ds:(%esi),(%dx)
jo     807543f <_IO_stdin_used+0x667f>
jns    80753d1 <_IO_stdin_used+0x6611>
jb     8075435 <_IO_stdin_used+0x6675>
arpl   %ax,(%eax)
push   $0x70006469
jb     8075445 <_IO_stdin_used+0x6685>
outsb  %ds:(%esi),(%dx)
je     8075444 <_IO_stdin_used+0x6684>
jb     80753e1 <_IO_stdin_used+0x6621>
push   $0x64006275
imul   $0x74706f00,0x6b(%ebx),%esi
imul   $0x4962006c,0x61(%ebx),%esp
outsb  %ds:(%esi),(%dx)
je     807545c <_IO_stdin_used+0x669c>
jb     807545f <_IO_stdin_used+0x669f>
popa
arpl   %sp,0x4e(%ebp)
jne    807546c <_IO_stdin_used+0x66ac>
bound  %esp,0x72(%ebp)
add    %ah,0x49(%edx)
outsb  %ds:(%esi),(%dx)
je     807546d <_IO_stdin_used+0x66ad>
jb     8075470 <_IO_stdin_used+0x66b0>
popa
arpl   %sp,0x43(%ebp)
insb   (%dx),%es:(%edi)
popa
jae    8075485 <_IO_stdin_used+0x66c5>
add    %ah,0x49(%edx)
outsb  %ds:(%esi),(%dx)
je     807547d <_IO_stdin_used+0x66bd>
jb     8075480 <_IO_stdin_used+0x66c0>
popa
arpl   %sp,0x53(%ebp)
jne    8075482 <_IO_stdin_used+0x66c2>
inc    %ebx
insb   (%dx),%es:(%edi)
popa
jae    8075498 <_IO_stdin_used+0x66d8>
add    %ah,0x69203a73
pop    %di
arpl   %bp,0x73(%ecx,%eiz,2)
jae    8075453 <_IO_stdin_used+0x6693>
and    $0x72702064,%eax
outsl  %ds:(%esi),(%dx)
je     80754aa <_IO_stdin_used+0x66ea>
arpl   %bp,0x6c(%edi)
and    %ah,0x69000a64
outsb  %ds:(%esi),(%dx)
jbe    80754a8 <_IO_stdin_used+0x66e8>
insb   (%dx),%es:(%edi)
imul   $0x20697363,0x73(%eax,%eiz,1),%esp
fs
gs
jbe    80754bd <_IO_stdin_used+0x66fd>
arpl   %sp,0x20(%ebp)
daa
and    $0xa2773,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
insb   (%dx),%es:(%edi)
add    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jne    80754ce <_IO_stdin_used+0x670e>
popa
arpl   %si,0x72(%ebp,%esi,2)
gs
jb     8075470 <_IO_stdin_used+0x66b0>
jo     80754e4 <_IO_stdin_used+0x6724>
outsl  %ds:(%esi),(%dx)
fs
jne    80754d9 <_IO_stdin_used+0x6719>
je     8075478 <_IO_stdin_used+0x66b8>
bound  %esp,0x64(%ebx)
inc    %esp
gs
jbe    80754e8 <_IO_stdin_used+0x6728>
arpl   %sp,0x0(%ebp)
jae    80754e9 <_IO_stdin_used+0x6729>
jb     80754ef <_IO_stdin_used+0x672f>
popa
insb   (%dx),%es:(%edi)
add    %cl,0x44(%ecx)
pop    %edi
push   %esi
inc    %ebp
dec    %esi
inc    %esp
dec    %edi
push   %edx
add    %cl,0x44(%ecx)
pop    %edi
push   %esi
inc    %ebp
dec    %esi
inc    %esp
dec    %edi
push   %edx
pop    %edi
inc    %ebp
dec    %esi
inc    %ebx
add    %cl,0x44(%ecx)
pop    %edi
push   %esi
inc    %ebp
dec    %esi
inc    %esp
dec    %edi
push   %edx
pop    %edi
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
dec    %esp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ebx
add    %cl,0x44(%ecx)
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
push   %edx
inc    %ebp
push   %esi
dec    %ecx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x44(%ecx)
pop    %edi
push   %ebx
inc    %ebp
push   %edx
dec    %ecx
inc    %ecx
dec    %esp
add    %cl,0x44(%ecx)
pop    %edi
push   %ebx
inc    %ebp
push   %edx
dec    %ecx
inc    %ecx
dec    %esp
pop    %edi
push   %ebx
dec    %eax
dec    %edi
push   %edx
push   %esp
add    %cl,0x44(%ecx)
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
dec    %ecx
dec    %esi
push   %ebx
push   %esp
inc    %ecx
dec    %esi
inc    %ebx
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
inc    %edx
push   %ebp
push   %ebx
add    %cl,0x44(%ecx)
pop    %edi
push   %ebp
push   %ebx
inc    %edx
pop    %edi
dec    %ecx
dec    %esi
push   %esp
inc    %ebp
push   %edx
inc    %esi
inc    %ecx
inc    %ebx
inc    %ebp
push   %ebx
add    %cl,0x44(%ecx)
pop    %edi
push   %ebp
push   %ebx
inc    %edx
pop    %edi
dec    %ecx
dec    %esi
push   %esp
inc    %ebp
push   %edx
inc    %esi
inc    %ecx
inc    %ebx
inc    %ebp
pop    %edi
dec    %esi
push   %ebp
dec    %ebp
add    %cl,0x44(%ecx)
pop    %edi
push   %ebp
push   %ebx
inc    %edx
pop    %edi
inc    %esp
push   %edx
dec    %ecx
push   %esi
inc    %ebp
push   %edx
add    %dh,0x73(%ebp)
bound  %ebx,0x69(%edi)
add    %dh,%fs:0x73(%ebp)
bound  %esp,(%eax)
fs
gs
jbe    80755be <_IO_stdin_used+0x67fe>
arpl   %sp,0x20(%ebp)
jo     80755cc <_IO_stdin_used+0x680c>
outsl  %ds:(%esi),(%dx)
jo     80755c2 <_IO_stdin_used+0x6802>
jb     80755d3 <_IO_stdin_used+0x6813>
imul   $0x2e2e0000,0x73(%ebp),%esp
das
jae    80755db <_IO_stdin_used+0x681b>
arpl   %bp,(%edi)
jne    80755d1 <_IO_stdin_used+0x6811>
gs
jbe    807559f <_IO_stdin_used+0x67df>
jne    80755d6 <_IO_stdin_used+0x6816>
gs
jbe    80755a2 <_IO_stdin_used+0x67e2>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     80755e4 <_IO_stdin_used+0x6824>
outsb  %ds:(%esi),(%dx)
sub    $0x5f627375,%eax
imul   $0x65000000,0x63(%esi,%ebp,1),%esp
jb     80755fd <_IO_stdin_used+0x683d>
outsl  %ds:(%esi),(%dx)
jb     80755ae <_IO_stdin_used+0x67ee>
outsl  %ds:(%esi),(%dx)
jo     80755f6 <_IO_stdin_used+0x6836>
outsb  %ds:(%esi),(%dx)
imul   $0x42535520,0x67(%esi),%ebp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x65642720,0x65(%ebx),%esp
jae    8075609 <_IO_stdin_used+0x6849>
jb     8075611 <_IO_stdin_used+0x6851>
jo     807561e <_IO_stdin_used+0x685e>
outsl  %ds:(%esi),(%dx)
jb     8075620 <_IO_stdin_used+0x6860>
daa
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8075630 <_IO_stdin_used+0x6870>
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    80755e9 <_IO_stdin_used+0x6829>
jne    807563e <_IO_stdin_used+0x687e>
bound  %ebx,0x69(%edi)
outsb  %ds:(%esi),(%dx)
je     8075636 <_IO_stdin_used+0x6876>
jb     8075639 <_IO_stdin_used+0x6879>
popa
arpl   %sp,0x20(%ebp)
fs
gs
jbe    8075644 <_IO_stdin_used+0x6884>
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %ah,(%edi)
and    $0xa2773,%eax
add    %ah,0x63203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8075613 <_IO_stdin_used+0x6853>
addr16
gs
je     8075617 <_IO_stdin_used+0x6857>
bound  %ecx,0x6e(%ecx)
je     8075661 <_IO_stdin_used+0x68a1>
jb     8075664 <_IO_stdin_used+0x68a4>
popa
arpl   %sp,0x43(%ebp)
insb   (%dx),%es:(%edi)
popa
jae    8075679 <_IO_stdin_used+0x68b9>
and    %ah,0x74(%ecx)
je     807567d <_IO_stdin_used+0x68bd>
imul   $0xa6574,0x75(%edx),%esp
add    %al,(%eax)
jne    8075684 <_IO_stdin_used+0x68c4>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     807568c <_IO_stdin_used+0x68cc>
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x61(%eax)
jb     807568c <_IO_stdin_used+0x68cc>
outsb  %ds:(%esi),(%dx)
je     807564a <_IO_stdin_used+0x688a>
daa
jne    80756a0 <_IO_stdin_used+0x68e0>
bound  %esp,(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20666f20,0x65(%ebx),%esp
daa
and    $0xa2773,%eax
jne    80756b0 <_IO_stdin_used+0x68f0>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80756b8 <_IO_stdin_used+0x68f8>
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x61(%eax)
jb     80756b8 <_IO_stdin_used+0x68f8>
outsb  %ds:(%esi),(%dx)
je     8075676 <_IO_stdin_used+0x68b6>
daa
jae    80756bc <_IO_stdin_used+0x68fc>
jae    80756c4 <_IO_stdin_used+0x6904>
daa
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20666f20,0x65(%ebx),%esp
daa
and    $0xa2773,%eax
add    %al,(%eax)
add    %ah,0x63203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     807569b <_IO_stdin_used+0x68db>
addr16
gs
je     807569f <_IO_stdin_used+0x68df>
push   %ebx
inc    %ebx
push   %ebx
dec    %ecx
and    %dh,0x65(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
jb     80756ab <_IO_stdin_used+0x68eb>
popa
je     8075702 <_IO_stdin_used+0x6942>
jb     80756f9 <_IO_stdin_used+0x6939>
bound  %esi,0x74(%ebp)
or     %gs:(%eax),%al
add    %al,(%eax)
and    $0x63203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80756c3 <_IO_stdin_used+0x6903>
addr16
gs
je     80756c7 <_IO_stdin_used+0x6907>
push   %ebx
inc    %ebx
push   %ebx
dec    %ecx
and    %ch,0x6f(%ebp)
fs
gs
insb   (%dx),%es:(%edi)
and    %ah,0x74(%ecx)
je     8075728 <_IO_stdin_used+0x6968>
imul   $0xa6574,0x75(%edx),%esp
add    %al,(%eax)
add    %ah,0x63203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80756eb <_IO_stdin_used+0x692b>
addr16
gs
je     80756ef <_IO_stdin_used+0x692f>
push   %ebx
inc    %ebx
push   %ebx
dec    %ecx
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x74(%ecx)
je     807574f <_IO_stdin_used+0x698f>
imul   $0xa6574,0x75(%edx),%esp
and    $0x63203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     807570f <_IO_stdin_used+0x694f>
addr16
gs
je     8075713 <_IO_stdin_used+0x6953>
push   %ebx
inc    %ebx
push   %ebx
dec    %ecx
and    %dh,0x65(%edx)
jbe    8075765 <_IO_stdin_used+0x69a5>
jae    8075767 <_IO_stdin_used+0x69a7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     8075777 <_IO_stdin_used+0x69b7>
imul   $0xa6574,0x75(%edx),%esp
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dl,0x53(%ebp)
inc    %edx
and    %dh,0x65(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
jb     807573a <_IO_stdin_used+0x697a>
imul   $0x616d726f,0x66(%esi),%ebp
je     807578c <_IO_stdin_used+0x69cc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ecx)
popa
imul   $0xa656c,0x62(%ecx,%eiz,2),%ebp
add    %al,(%eax)
add    %dl,-0x65b30003(%eax,%ebx,4)
std
call   *-0x65c30003(%eax,%ebx,4)
std
call   *-0x676b0003(%eax,%ebx,4)
std
decl   (%edx,%ebx,4)
std
ljmp   *(%edx,%ebx,4)
std
call   *-0x65a30003(%eax,%ebx,4)
std
call   *-0x676b0003(%eax,%ebx,4)
std
call   *-0x676b0003(%eax,%ebx,4)
std
lcall  *(%edx,%ebx,4)
std
dec    %esp
fwait
std
ljmp   *-0x64430003(%ebx,%ebx,4)
std
pushl  -0x643b0003(%ebx,%ebx,4)
std
inc    %esp
fwait
std
incl   0x1bfffd9b(%edx)
popf
std
(bad)
ficomp -0x62160003(%ebp)
std
(bad)
jmp    dc07553a <_end+0xd3ff1caa>
popf
std
dec    %eax
popf
std
(bad)
jmp    dc075546 <_end+0xd3ff1cb6>
popf
std
(bad)
jmp    f207554e <_end+0xe9ff1cbe>
popf
std
(bad)
jmp    f2075556 <_end+0xe9ff1cc6>
popf
std
(bad)
jmp    f207555e <_end+0xe9ff1cce>
popf
std
lcall  *(%ebx)
popf
std
call   *%ebx
popf
std
jmp    *0x76(%ebp,%eiz,2)
pop    %edi
imul   $0x6b636170,0x5f(%esi),%esp
gs
fs
pop    %edi
imul   $0x7562006f,0x66(%esi),%ebp
imul   $0x73755f6e,0x69(%esp,%esi,2),%ebp
bound  %ebx,0x69(%edi)
add    %ah,%fs:0x72(%ebp)
jb     8075861 <_IO_stdin_used+0x6aa1>
jb     807582e <_IO_stdin_used+0x6a6e>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     807581d <_IO_stdin_used+0x6a5d>
outsl  %ds:(%esi),(%dx)
jo     8075865 <_IO_stdin_used+0x6aa5>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2773,%eax
inc    %esi
dec    %ecx
push   %edx
dec    %ebp
push   %edi
inc    %ecx
push   %edx
inc    %ebp
add    %ah,0x69(%esi)
jb     8075882 <_IO_stdin_used+0x6ac2>
ja     8075878 <_IO_stdin_used+0x6ab8>
jb     807587e <_IO_stdin_used+0x6abe>
and    %dh,0x61(%eax)
jb     807587f <_IO_stdin_used+0x6abf>
insl   (%dx),%es:(%edi)
gs
je     8075887 <_IO_stdin_used+0x6ac7>
jb     8075844 <_IO_stdin_used+0x6a84>
insl   (%dx),%es:(%edi)
imul   $0xa676e69,0x73(%ebx),%esi
or     (%eax),%al
das
insb   (%dx),%es:(%edi)
imul   $0x6d726966,0x2f(%edx),%esp
ja     807589a <_IO_stdin_used+0x6ada>
jb     80758a0 <_IO_stdin_used+0x6ae0>
das
add    %ch,(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
imul   $0x312d00,%fs:0x67(%esi),%ebp
ja     80758bd <_IO_stdin_used+0x6afd>
imul   $0x25272067,0x6e(%ecx,%ebp,2),%esi
jae    807587c <_IO_stdin_used+0x6abc>
and    %ch,(%eax)
and    $0x2029697a,%eax
je     80758cd <_IO_stdin_used+0x6b0d>
and    %ah,(%edi)
and    $0xa2773,%eax
imul   $0x6177,0x6d(%edx),%si
jb     80758d2 <_IO_stdin_used+0x6b12>
add    %ch,0x65(%ebx)
jb     80758e0 <_IO_stdin_used+0x6b20>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
jb     80758e6 <_IO_stdin_used+0x6b26>
ja     80758dc <_IO_stdin_used+0x6b1c>
jb     80758e2 <_IO_stdin_used+0x6b22>
and    %ch,0x61(%edi,%ebp,2)
fs
gs
jb     8075885 <_IO_stdin_used+0x6ac5>
add    %al,(%eax)
add    %ch,(%esi)
cs
das
jae    80758ff <_IO_stdin_used+0x6b3f>
arpl   %bp,(%edi)
jne    80758f5 <_IO_stdin_used+0x6b35>
gs
jbe    80758c3 <_IO_stdin_used+0x6b03>
jne    80758fa <_IO_stdin_used+0x6b3a>
gs
jbe    80758c6 <_IO_stdin_used+0x6b06>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075908 <_IO_stdin_used+0x6b48>
outsb  %ds:(%esi),(%dx)
sub    $0x6d726966,%eax
ja     8075908 <_IO_stdin_used+0x6b48>
jb     807590e <_IO_stdin_used+0x6b4e>
arpl   %ax,%cs:(%eax)
imul   $0x6620746f,%fs:0x6e(%eax,%eiz,1),%esp
66
imul   $0x72696620,0x64(%esi),%ebp
insl   (%dx),%es:(%edi)
ja     8075920 <_IO_stdin_used+0x6b60>
jb     8075926 <_IO_stdin_used+0x6b66>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
add    %cl,0x6f(%esi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8075952 <_IO_stdin_used+0x6b92>
and    %ah,0x76(%ecx)
popa
imul   $0x7420656c,0x62(%ecx,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%edi,%ebp,2)
and    %ah,%fs:0x69(%esi)
jb     807595d <_IO_stdin_used+0x6b9d>
ja     8075953 <_IO_stdin_used+0x6b93>
jb     8075959 <_IO_stdin_used+0x6b99>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ah,0x72(%ebp)
jb     807596f <_IO_stdin_used+0x6baf>
jb     8075922 <_IO_stdin_used+0x6b62>
jae    8075969 <_IO_stdin_used+0x6ba9>
outsb  %ds:(%esi),(%dx)
imul   $0x72696620,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
ja     8075971 <_IO_stdin_used+0x6bb1>
jb     8075977 <_IO_stdin_used+0x6bb7>
and    %ah,(%edi)
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6573000a,0x65(%ebx),%esp
je     8075986 <_IO_stdin_used+0x6bc6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
imul   $0x706f6300,%fs:0x67(%esi),%ebp
jns    8075993 <_IO_stdin_used+0x6bd3>
imul   $0x6177,0x6d(%edx),%si
jb     80759a1 <_IO_stdin_used+0x6be1>
add    %ah,0x75(%edx)
imul   $0x69665f6e,0x69(%esp,%esi,2),%ebp
jb     80759b6 <_IO_stdin_used+0x6bf6>
ja     80759ac <_IO_stdin_used+0x6bec>
jb     80759b2 <_IO_stdin_used+0x6bf2>
add    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x6f6d2065,0x74(%ecx,%eiz,2),%esp
fs
jne    80759c8 <_IO_stdin_used+0x6c08>
and    %ch,%gs:0x6e(%ecx)
fs
gs
js     807596e <_IO_stdin_used+0x6bae>
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ch,%fs:0x6f(%ebp)
fs
jne    80759dd <_IO_stdin_used+0x6c1d>
and    %ch,%gs:0x6e(%ecx)
fs
gs
js     8075983 <_IO_stdin_used+0x6bc3>
add    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %ah,%gs:(%edi)
and    $0x27202773,%eax
and    $0xa2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
fs
jne    8075a01 <_IO_stdin_used+0x6c41>
and    %ch,%gs:0x61(%ebp)
je     80759fe <_IO_stdin_used+0x6c3e>
push   $0x27207365
and    $0xa2773,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    8075a16 <_IO_stdin_used+0x6c56>
and    %ah,%gs:(%edi)
and    $0x69202773,%eax
jae    80759d4 <_IO_stdin_used+0x6c14>
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
gs or  %fs:%gs:(%eax),%al
imul   $0x65747265,0x73(%esi),%ebp
and    %ah,%fs:(%edi)
and    $0xa2773,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x20747265,0x73(%esi),%ebp
daa
and    $0xa2773,%eax
gs
js     8075a5a <_IO_stdin_used+0x6c9a>
arpl   %si,%gs:0x20(%edx,%edi,1)
and    $0x6f6c2073,%eax
popa
and    %bh,%fs:0x6c75646f(,%ebp,2)
gs or  %ds:%gs:(%eax),%al
imul   $0x64,0x6f(%ebp),%ebp
add    %ch,0x65(%ebx)
jb     8075a78 <_IO_stdin_used+0x6cb8>
gs
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    8075a7e <_IO_stdin_used+0x6cbe>
and    %ch,%gs:0x61(%edi,%ebp,2)
fs
gs
jb     8075a1b <_IO_stdin_used+0x6c5b>
add    %ch,(%esi)
cs
das
jae    8075a93 <_IO_stdin_used+0x6cd3>
arpl   %bp,(%edi)
jne    8075a89 <_IO_stdin_used+0x6cc9>
gs
jbe    8075a57 <_IO_stdin_used+0x6c97>
jne    8075a8e <_IO_stdin_used+0x6cce>
gs
jbe    8075a5a <_IO_stdin_used+0x6c9a>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075a9c <_IO_stdin_used+0x6cdc>
outsb  %ds:(%esi),(%dx)
sub    $0x646f6d6b,%eax
arpl   %ax,%cs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    8075ab2 <_IO_stdin_used+0x6cf2>
add    %ah,%gs:0x75(%edx)
imul   $0x6d6b5f6e,0x69(%esp,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx)
imul   $0x6d6b5f6e,0x69(%esp,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x75620074,0x69(%esi),%ebp
imul   $0x6d6b5f6e,0x69(%esp,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
gs
js     8075ae0 <_IO_stdin_used+0x6d20>
je     8075a79 <_IO_stdin_used+0x6cb9>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075ae8 <_IO_stdin_used+0x6d28>
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
jbe    8075ae9 <_IO_stdin_used+0x6d29>
insb   (%dx),%es:(%edi)
imul   $0x44490065,0x74(%ecx,%eiz,2),%esp
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebp
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %esi
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ebx
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
push   %ebx
push   %ebp
inc    %edx
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
push   %ebx
push   %ebp
inc    %edx
pop    %edi
inc    %ebp
dec    %esi
inc    %ebx
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ebx
add    %dl,0x54(%eax)
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
push   %eax
inc    %ecx
push   %edx
push   %esp
pop    %edi
push   %esp
inc    %ecx
inc    %edx
dec    %esp
inc    %ebp
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
push   %eax
inc    %ecx
push   %edx
push   %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esp
push   %edx
pop    %ecx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %cl,0x44(%ecx)
pop    %edi
push   %eax
inc    %ecx
push   %edx
push   %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esp
push   %edx
pop    %ecx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %dl,0x41(%eax)
push   %edx
push   %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esp
push   %edx
pop    %ecx
pop    %edi
add    %cl,0x44(%ecx)
pop    %edi
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
pop    %edi
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
push   %eax
push   %ebp
inc    %edx
dec    %esp
dec    %ecx
push   %ebx
dec    %eax
inc    %ebp
push   %edx
pop    %edi
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
inc    %ecx
push   %eax
push   %eax
dec    %esp
dec    %ecx
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
dec    %ecx
inc    %esp
add    %cl,0x44(%ecx)
pop    %edi
inc    %esi
push   %ebx
pop    %edi
inc    %edx
dec    %edi
dec    %edi
push   %esp
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
pop    %edi
dec    %ecx
inc    %esp
add    %ch,0x6f(%esi)
add    %ch,0x52(%edi)
add    %ah,0x72(%ebp)
jb     8075c22 <_IO_stdin_used+0x6e62>
jb     8075bef <_IO_stdin_used+0x6e2f>
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
jo     8075c32 <_IO_stdin_used+0x6e72>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
and    $0x73252073,%eax
jb     8075c2c <_IO_stdin_used+0x6e6c>
imul   $0x65736666,0x6f(%eax,%eiz,1),%esp
je     8075c12 <_IO_stdin_used+0x6e52>
and    $0xa756c6c,%eax
add    %ch,0x66(%edi)
data16
jae    8075c45 <_IO_stdin_used+0x6e85>
je     8075be2 <_IO_stdin_used+0x6e22>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8075c47 <_IO_stdin_used+0x6e87>
imul   $0x64696b6c,0x62(%eax,%eax,1),%esp
add    %al,(%eax)
cs
cs
das
jae    8075c67 <_IO_stdin_used+0x6ea7>
arpl   %bp,(%edi)
jne    8075c5d <_IO_stdin_used+0x6e9d>
gs
jbe    8075c2b <_IO_stdin_used+0x6e6b>
jne    8075c62 <_IO_stdin_used+0x6ea2>
gs
jbe    8075c2e <_IO_stdin_used+0x6e6e>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075c70 <_IO_stdin_used+0x6eb0>
outsb  %ds:(%esi),(%dx)
sub    $0x696b6c62,%eax
fs arpl %ax,%cs:%fs:(%eax)
add    %al,(%eax)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8075c93 <_IO_stdin_used+0x6ed3>
jae    8075c90 <_IO_stdin_used+0x6ed0>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x61(%eax)
jb     8075c9b <_IO_stdin_used+0x6edb>
imul   $0x7270206e,0x6f(%ecx,%ebp,2),%esi
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6e(%ecx)
add    %ah,0x75(%bp,%si)
imul   $0x6c625f6e,0x69(%esp,%esi,2),%ebp
imul   $0x0,0x64(%ecx),%ebp
jae    8075caa <_IO_stdin_used+0x6eea>
popa
je     8075c78 <_IO_stdin_used+0x6eb8>
add    %ch,(%edi)
jb     8075cc1 <_IO_stdin_used+0x6f01>
outsb  %ds:(%esi),(%dx)
das
jae    8075cc9 <_IO_stdin_used+0x6f09>
jae    8075cc6 <_IO_stdin_used+0x6f06>
gs
insl   (%dx),%es:(%edi)
fs
das
jae    8075cbd <_IO_stdin_used+0x6efd>
popa
je     8075cce <_IO_stdin_used+0x6f0e>
das
add    %cl,0x44(%ecx)
pop    %edi
push   %ebx
inc    %ebp
inc    %ecx
push   %esp
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
jo     8075ce2 <_IO_stdin_used+0x6f22>
insb   (%dx),%es:(%edi)
jns    8075c95 <_IO_stdin_used+0x6ed5>
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x6e(%edi)
and    %ah,0x25203a73
jae    8075c83 <_IO_stdin_used+0x6ec3>
jne    8075ce6 <_IO_stdin_used+0x6f26>
arpl   %sp,0x65(%ebx)
jae    8075cfd <_IO_stdin_used+0x6f3d>
add    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
popa
and    %ah,%gs:0x65(%si)
jbe    8075cff <_IO_stdin_used+0x6f3f>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:0x73(%ebp)
gs
jb     8075cc3 <_IO_stdin_used+0x6f03>
inc    %ecx
inc    %ebx
dec    %esp
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     8075d1b <_IO_stdin_used+0x6f5b>
jb     8075d25 <_IO_stdin_used+0x6f65>
imul   $0x74636120,0x65(%esi),%ebp
imul   $0x65737520,0x65(%esi),%esi
jb     8075ce8 <_IO_stdin_used+0x6f28>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
popa
je     8075cf0 <_IO_stdin_used+0x6f30>
and    $0x2e002e73,%eax
cs
das
jae    8075d4b <_IO_stdin_used+0x6f8b>
arpl   %bp,(%edi)
jne    8075d41 <_IO_stdin_used+0x6f81>
gs
jbe    8075d0f <_IO_stdin_used+0x6f4f>
jne    8075d46 <_IO_stdin_used+0x6f86>
gs
jbe    8075d12 <_IO_stdin_used+0x6f52>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075d54 <_IO_stdin_used+0x6f94>
outsb  %ds:(%esi),(%dx)
sub    $0x63636175,%eax
gs
jae    8075d67 <_IO_stdin_used+0x6fa7>
arpl   %ax,%cs:(%eax)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     8075d66 <_IO_stdin_used+0x6fa6>
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    8075d62 <_IO_stdin_used+0x6fa2>
arpl   %sp,0x65(%ebx)
jae    8075d79 <_IO_stdin_used+0x6fb9>
add    %ch,(%esi)
cs
das
jae    8075d7e <_IO_stdin_used+0x6fbe>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x69676f6c,0x2f(%bp),%ebp
outsb  %ds:(%esi),(%dx)
fs
sub    $0x2e6c6361,%eax
arpl   %ax,(%eax)
inc    %esi
imul   $0x7520676e,0x69(%eax),%edi
jo     8075d4b <_IO_stdin_used+0x6f8b>
and    $0x6f662073,%eax
jb     8075d52 <_IO_stdin_used+0x6f92>
jae    8075d99 <_IO_stdin_used+0x6fd9>
popa
je     8075d57 <_IO_stdin_used+0x6f97>
and    $0x2e2e2e73,%eax
add    %ah,0x76(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
popa
arpl   %bp,0x2f(%eax,%eax,1)
jb     8075dc1 <_IO_stdin_used+0x7001>
outsb  %ds:(%esi),(%dx)
das
jae    8075dc9 <_IO_stdin_used+0x7009>
jae    8075dc6 <_IO_stdin_used+0x7006>
gs
insl   (%dx),%es:(%edi)
fs
das
jne    8075dcb <_IO_stdin_used+0x700b>
gs
jb     8075dce <_IO_stdin_used+0x700e>
das
and    $0x2e00756c,%eax
cs
das
jae    8075dd7 <_IO_stdin_used+0x7017>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x6c2d6473,0x2f(%bp),%ebp
outsl  %ds:(%esi),(%dx)
imul   $0x722f0063,0x2e(%bp),%ebp
jne    8075dea <_IO_stdin_used+0x702a>
das
jae    8075df8 <_IO_stdin_used+0x7038>
jae    8075df5 <_IO_stdin_used+0x7035>
gs
insl   (%dx),%es:(%edi)
fs
das
jae    8075dec <_IO_stdin_used+0x702c>
jae    8075dfc <_IO_stdin_used+0x703c>
imul   $0x53002f73,0x6e(%edi),%ebp
push   %esp
inc    %ecx
push   %esp
inc    %ebp
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
push   %esi
inc    %ebp
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
add    %dl,0x49(%ebp)
inc    %esp
push   %ebx
add    %ah,(%eax)
or     %ecx,(%edx)
or     $0x4c4e4f00,%eax
dec    %ecx
dec    %esi
inc    %ebp
pop    %edi
push   %ebx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
push   %esi
inc    %ebp
pop    %edi
push   %ebx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %cl,0x4e(%edi)
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
pop    %edi
push   %ebx
inc    %ebp
inc    %ecx
push   %esp
push   %ebx
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
push   %esi
inc    %ebp
pop    %edi
push   %ebx
inc    %ebp
inc    %ecx
push   %esp
push   %ebx
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
push   %esi
inc    %ebp
add    %dl,0x45(%ebx)
push   %edx
push   %esi
dec    %ecx
inc    %ebx
inc    %ebp
add    %al,0x4c(%ebx)
inc    %ecx
push   %ebx
push   %ebx
add    %al,0x53(%ecx,%ecx,2)
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
add    %al,0x41(%ebx)
dec    %esi
pop    %edi
dec    %ebp
push   %ebp
dec    %esp
push   %esp
dec    %ecx
pop    %edi
push   %ebx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
add    %al,0x41(%ebx)
dec    %esi
pop    %edi
push   %esp
push   %esp
pop    %ecx
add    %al,0x41(%ebx)
dec    %esi
pop    %edi
inc    %edi
push   %edx
inc    %ecx
push   %eax
dec    %eax
dec    %ecx
inc    %ebx
inc    %ecx
dec    %esp
add    %ch,(%edi)
jb     8075ea1 <_IO_stdin_used+0x70e1>
outsb  %ds:(%esi),(%dx)
das
jae    8075ea9 <_IO_stdin_used+0x70e9>
jae    8075ea6 <_IO_stdin_used+0x70e6>
gs
insl   (%dx),%es:(%edi)
fs
das
jne    8075eab <_IO_stdin_used+0x70eb>
gs
jb     8075eae <_IO_stdin_used+0x70ee>
das
add    %ch,(%eax)
jne    8075eae <_IO_stdin_used+0x70ee>
jae    8075eab <_IO_stdin_used+0x70eb>
outsb  %ds:(%si),(%dx)
gs sub %esp,%fs:%gs:(%eax)
jb     8075e6a <_IO_stdin_used+0x70aa>
cmp    $0x20,%al
outsb  %ds:(%esi),(%dx)
add    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x74737973,%eax
gs
insl   (%dx),%es:(%edi)
add    %dh,%fs:0x65(%ebx)
popa
je     8075e60 <_IO_stdin_used+0x70a0>
imul   $0x666f,0x5f(%ebp,%eiz,2),%bp
pop    %edi
jae    8075ecf <_IO_stdin_used+0x710f>
popa
je     8075e6d <_IO_stdin_used+0x70ad>
imul   $0x666f,0x5f(%ebp,%eiz,2),%bp
pop    %edi
jae    8075edc <_IO_stdin_used+0x711c>
jae    8075eec <_IO_stdin_used+0x712c>
imul   $0x79732f00,0x6e(%edi),%ebp
jae    8075eb1 <_IO_stdin_used+0x70f1>
data16
jae    8075eb4 <_IO_stdin_used+0x70f4>
arpl   %sp,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8075efb <_IO_stdin_used+0x713b>
das
add    %ch,(%esi)
cs
das
jae    8075f04 <_IO_stdin_used+0x7144>
arpl   %bp,(%edi)
jae    8075efe <_IO_stdin_used+0x713e>
popa
jb     8075efe <_IO_stdin_used+0x713e>
fs
das
arpl   %sp,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8075f11 <_IO_stdin_used+0x7151>
sub    $0x6c697475,%eax
arpl   %ax,%cs:(%eax)
das
je     8075f0d <_IO_stdin_used+0x714d>
jae    8075f19 <_IO_stdin_used+0x7159>
jae    8075eb0 <_IO_stdin_used+0x70f0>
arpl   %bp,0x6e(%edi)
je     8075f27 <_IO_stdin_used+0x7167>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     8075ebb <_IO_stdin_used+0x70fb>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x696e7500,%eax
je     8075ec6 <_IO_stdin_used+0x7106>
das
jae    8075f42 <_IO_stdin_used+0x7182>
jae    8075f3f <_IO_stdin_used+0x717f>
gs
insl   (%dx),%es:(%edi)
das
add    %ch,(%edi)
jne    8075f45 <_IO_stdin_used+0x7185>
gs
jb     8075f04 <_IO_stdin_used+0x7144>
add    %ch,(%edi)
insl   (%dx),%es:(%edi)
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
gs
das
add    %ch,(%esi)
jae    8075f48 <_IO_stdin_used+0x7188>
jae    8075f58 <_IO_stdin_used+0x7198>
imul   $0x746f6e00,0x6e(%edi),%ebp
imul   $0x5f6e6f5f,0x79(%esi),%esp
jb     8075f5a <_IO_stdin_used+0x719a>
insb   (%dx),%es:(%edi)
gs
popa
jae    8075f5f <_IO_stdin_used+0x719f>
add    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
gs
popa
jae    8075f67 <_IO_stdin_used+0x71a7>
pop    %edi
popa
outsb  %gs:(%si),(%dx)
je     8075f09 <_IO_stdin_used+0x7149>
das
jae    8075f85 <_IO_stdin_used+0x71c5>
jae    8075f3d <_IO_stdin_used+0x717d>
data16
jae    8075f40 <_IO_stdin_used+0x7180>
arpl   %sp,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8075f87 <_IO_stdin_used+0x71c7>
add    %ah,0x67(%ebx)
jb     8075f8b <_IO_stdin_used+0x71cb>
jne    8075f8e <_IO_stdin_used+0x71ce>
jo,pn  8075f93 <_IO_stdin_used+0x71d3>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x0(%ebx)
ja     8075f52 <_IO_stdin_used+0x7192>
add    %dh,0x69(%ebx)
and    %bh,0x203d
xor    %al,(%eax)
jo     8075f9c <_IO_stdin_used+0x71dc>
and    %bh,%fs:(%esi)
cmp    $0x25003020,%eax
insb   (%dx),%es:(%edi)
jne    8075f48 <_IO_stdin_used+0x7188>
add    %ah,0x66(%ebx)
jb     8075fb2 <_IO_stdin_used+0x71f2>
insl   (%dx),%es:(%edi)
add    %dh,0x66(%eax)
jb     8075fb8 <_IO_stdin_used+0x71f8>
insl   (%dx),%es:(%edi)
add    %ah,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%eax)
outsl  %ds:(%esi),(%dx)
add    %ch,(%edi)
jo     8075fc8 <_IO_stdin_used+0x7208>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8075fc0 <_IO_stdin_used+0x7200>
insb   (%dx),%es:(%edi)
data16
das
arpl   %sp,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8075fd4 <_IO_stdin_used+0x7214>
add    %ch,(%edi)
jo     8075fda <_IO_stdin_used+0x721a>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x632f756c,%eax
addr16 jb 8075fe2 <_IO_stdin_used+0x7222>
jne    8075fe5 <_IO_stdin_used+0x7225>
add    %ch,(%edi)
jae    8075ff2 <_IO_stdin_used+0x7232>
jae    8075fef <_IO_stdin_used+0x722f>
gs
insl   (%dx),%es:(%edi)
add    %ch,(%edi)
jne    8075ff4 <_IO_stdin_used+0x7234>
gs
jb     8075f84 <_IO_stdin_used+0x71c4>
das
insl   (%dx),%es:(%edi)
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
add    %dh,%gs:0x70(%ebx)
arpl   %ax,%gs:(%eax)
add    %al,(%eax)
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
popa
bound  %esp,0x64(%ebx)
gs
addr16 pushw $0x6a69
imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
jo     8076020 <_IO_stdin_used+0x7260>
jb     8076024 <_IO_stdin_used+0x7264>
je     8076028 <_IO_stdin_used+0x7268>
jbe    807602c <_IO_stdin_used+0x726c>
js     8076030 <_IO_stdin_used+0x7270>
jp     8075ffa <_IO_stdin_used+0x723a>
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
dec    %edx
dec    %ebx
dec    %esp
dec    %ebp
dec    %esi
dec    %edi
push   %eax
push   %ecx
push   %edx
push   %ebx
push   %esp
push   %ebp
push   %esi
push   %edi
pop    %eax
pop    %ecx
pop    %edx
pop    %edi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     807604b <_IO_stdin_used+0x728b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     8075fff <_IO_stdin_used+0x723f>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     8076009 <_IO_stdin_used+0x7249>
jbe    807604c <_IO_stdin_used+0x728c>
insb   (%dx),%es:(%edi)
imul   $0x6f6d6572,0x20(%esp,%ebp,1),%esp
jbe    807605f <_IO_stdin_used+0x729f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8076075 <_IO_stdin_used+0x72b5>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     807607c <_IO_stdin_used+0x72bc>
and    %ch,0x73(%ecx,%ebp,2)
je     807603d <_IO_stdin_used+0x727d>
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8076087 <_IO_stdin_used+0x72c7>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     807603b <_IO_stdin_used+0x727b>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     8076045 <_IO_stdin_used+0x7285>
popa
jbe    8076089 <_IO_stdin_used+0x72c9>
imul   $0x202c656c,0x62(%ecx,%eiz,2),%ebp
jb     8076097 <_IO_stdin_used+0x72d7>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    807609f <_IO_stdin_used+0x72df>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80760b5 <_IO_stdin_used+0x72f5>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     80760bc <_IO_stdin_used+0x72fc>
and    %ch,0x73(%ecx,%ebp,2)
je     807607d <_IO_stdin_used+0x72bd>
add    %ah,0x67(%ebx)
pop    %edi
jo     80760be <_IO_stdin_used+0x72fe>
fs
pop    %edi
addr16
gs
je     80760ba <_IO_stdin_used+0x72fa>
jae    80760c2 <_IO_stdin_used+0x7302>
jae    80760d2 <_IO_stdin_used+0x7312>
imul   $0x5f676300,0x6e(%edi),%ebp
jo     80760c9 <_IO_stdin_used+0x7309>
je     80760d2 <_IO_stdin_used+0x7312>
pop    %edi
addr16
gs
je     80760ce <_IO_stdin_used+0x730e>
jae    80760d6 <_IO_stdin_used+0x7316>
jae    80760e6 <_IO_stdin_used+0x7326>
imul   $0x696b7300,0x6e(%edi),%ebp
jo     80760db <_IO_stdin_used+0x731b>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %ah,0x67(%ebx)
pop    %edi
addr16
gs
je     80760e8 <_IO_stdin_used+0x7328>
jb     80760fa <_IO_stdin_used+0x733a>
outsl  %ds:(%esi),(%dx)
je     80760ed <_IO_stdin_used+0x732d>
jo     80760f1 <_IO_stdin_used+0x7331>
je     80760fa <_IO_stdin_used+0x733a>
add    %ah,0x67(%ebx)
pop    %edi
jo     8076101 <_IO_stdin_used+0x7341>
fs
pop    %edi
addr16
gs
je     80760fd <_IO_stdin_used+0x733d>
jo     8076101 <_IO_stdin_used+0x7341>
je     807610a <_IO_stdin_used+0x734a>
add    %ch,0x6f(%esi)
jb     8076114 <_IO_stdin_used+0x7354>
popa
insb   (%dx),%es:(%edi)
imul   $0x6e6f635f,0x65(%edx),%edi
je     8076124 <_IO_stdin_used+0x7364>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     80760b8 <_IO_stdin_used+0x72f8>
push   %ebx
imul   $0x70,0x70(%ecx),%ebp
imul   $0x65766f20,0x67(%esi),%ebp
jb     8076138 <_IO_stdin_used+0x7378>
imul   $0x6966206e,0x65(%esp,%eiz,2),%esp
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x2e002e73,%eax
cs
das
jae    807614d <_IO_stdin_used+0x738d>
arpl   %bp,(%edi)
jae    8076147 <_IO_stdin_used+0x7387>
popa
jb     8076147 <_IO_stdin_used+0x7387>
fs
das
arpl   %bp,0x6e(%edi)
sub    $0x6966,%ax
insb   (%dx),%es:(%edi)
gs
jae    807611d <_IO_stdin_used+0x735d>
arpl   %ax,(%eax)
inc    %esp
jne    8076164 <_IO_stdin_used+0x73a4>
insb   (%dx),%es:(%edi)
imul   $0x66206574,0x61(%ebx),%esp
imul   $0x73007325,0x20(%ebp,%eiz,2),%ebp
je     8076178 <_IO_stdin_used+0x73b8>
jbe    8076108 <_IO_stdin_used+0x7348>
jae    807617f <_IO_stdin_used+0x73bf>
data32 imul $0x4600,0x0(%eax),%di
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8076181 <_IO_stdin_used+0x73c1>
popa
jb     8076182 <_IO_stdin_used+0x73c2>
push   $0x726f6620
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    807614b <_IO_stdin_used+0x738b>
imul   $0x203a7325,0x20(%esi),%ebp
and    $0x69660073,%eax
insb   (%dx),%es:(%edi)
gs
jae    807619a <_IO_stdin_used+0x73da>
popa
fs add %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %di
imul   $0x6c5f,0x73(%ebp,%eiz,2),%bp
imul   $0x7274735f,0x74(%ebx),%esi
jbe    80761b3 <_IO_stdin_used+0x73f3>
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %di
imul   $0x6c5f,0x73(%ebp,%eiz,2),%bp
imul   $0x7274735f,0x74(%ebx),%esi
jbe    80761d1 <_IO_stdin_used+0x7411>
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %di
imul   $0x6c5f,0x73(%ebp,%eiz,2),%bp
imul   $0x7274735f,0x74(%ebx),%esi
jbe    8076190 <_IO_stdin_used+0x73d0>
cs
cs
das
jae    8076207 <_IO_stdin_used+0x7447>
arpl   %bp,(%edi)
jae    8076201 <_IO_stdin_used+0x7441>
popa
jb     8076201 <_IO_stdin_used+0x7441>
fs
das
imul   $0x2e6f,0x69(%ebp,%eiz,2),%bp
arpl   %ax,(%eax)
arpl   %bp,0x6e(%edi)
je     8076211 <_IO_stdin_used+0x7451>
outsb  %ds:(%esi),(%dx)
je     8076222 <_IO_stdin_used+0x7462>
add    %ah,0x6e(%esi)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%esi)
ja     8076226 <_IO_stdin_used+0x7466>
imul   $0x3b2300,0x65(%esi),%ebp
and    %cl,(%ecx)
or     0x605c2227,%cl
and    $0x0,%al
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
add    %ah,%gs:0x69(%esi)
gs
insb   (%dx),%es:(%edi)
add    %al,%fs:(%eax)
add    %cl,(%edi,%ecx,8)
std
jmp    *-0x2dc30003(%ecx,%edx,8)
std
incl   -0x2eab0003(%eax,%edx,8)
std
pushl  (%ecx,%edx,8)
std
(bad)
jl     80761c7 <_IO_stdin_used+0x7407>
std
ljmp   *-0x3(%eax,%edx,8)
incl   (%eax,%edx,8)
std
call   *%esp
iret
std
pushl  (%ebx)
iret
std
pushl  0x61(%eax)
jb     807627f <_IO_stdin_used+0x74bf>
gs
pop    %edi
outsb  %gs:(%esi),(%dx)
jbe    8076271 <_IO_stdin_used+0x74b1>
imul   $0x6e69,0x5f(%ebp,%eiz,2),%bp
je     8076280 <_IO_stdin_used+0x74c0>
jb     807628b <_IO_stdin_used+0x74cb>
popa
insb   (%dx),%es:(%edi)
add    %dh,0x65(%edx)
popa
fs
pop    %edi
data16
jne    8076294 <_IO_stdin_used+0x74d4>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x6572,0x0(%ebp,%eiz,2),%bp
popa
fs
pop    %edi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6c69665f,0x65(%esi),%ebp
add    %ch,%gs:(%esi)
cs
das
jae    80762b9 <_IO_stdin_used+0x74f9>
arpl   %bp,(%edi)
jae    80762b3 <_IO_stdin_used+0x74f3>
popa
jb     80762b3 <_IO_stdin_used+0x74f3>
fs
das
push   $0x6d687361
popa
jo     8076286 <_IO_stdin_used+0x74c6>
arpl   %ax,(%eax)
push   $0x5f6e3e2d
outsb  %gs:(%esi),(%dx)
je     80762d5 <_IO_stdin_used+0x7515>
imul   $0x203d3e20,0x73(%ebp),%esp
xor    %eax,(%eax)
and    %ebp,0x2d(%eax)
imul   $0x5f657461,%ds:0x72(%ebp,%eiz,2),%esi
5f
insb   (%dx),%es:(%edi)
imul   $0x6165685f,0x74(%ebx),%esi
add    %ch,%fs:0x61(%eax)
jae    80762ee <_IO_stdin_used+0x752e>
and    %bh,(%eax,%eiz,1)
xor    %esi,(%edx)
aaa
add    %ch,0x61(%eax)
jae    80762f9 <_IO_stdin_used+0x7539>
insl   (%dx),%es:(%edi)
popa
jo     80762f4 <_IO_stdin_used+0x7534>
imul   $0x657461,0x72(%ebp,%eiz,2),%esi
insb   (%dx),%es:(%edi)
imul   $0x746e655f,0x6b(%esi),%ebp
jb     8076320 <_IO_stdin_used+0x7560>
add    %ch,0x61(%eax)
jae    8076314 <_IO_stdin_used+0x7554>
pop    %edi
jae    8076312 <_IO_stdin_used+0x7552>
popa
outsb  %ds:(%esi),(%dx)
add    %ch,0x61(%eax)
jae    807631e <_IO_stdin_used+0x755e>
insl   (%dx),%es:(%edi)
popa
jo     8076319 <_IO_stdin_used+0x7559>
jo     8076331 <_IO_stdin_used+0x7571>
je     80762be <_IO_stdin_used+0x74fe>
jne    807632e <_IO_stdin_used+0x756e>
insb   (%dx),%es:(%edi)
imul   $0x746e655f,0x6b(%esi),%ebp
jb     8076343 <_IO_stdin_used+0x7583>
add    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8076336 <_IO_stdin_used+0x7576>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     8076348 <_IO_stdin_used+0x7588>
jns    80762d8 <_IO_stdin_used+0x7518>
das
fs
gs
jbe    807630c <_IO_stdin_used+0x754c>
imul   $0x67,0x73(%ebp),%ebp
add    %ch,(%edi)
fs
gs
jbe    8076316 <_IO_stdin_used+0x7556>
arpl   %bp,0x6e(%edi)
jae    807635b <_IO_stdin_used+0x759b>
insb   (%dx),%es:(%edi)
add    %al,%gs:0x4f(%ebx)
inc    %esp
inc    %ebp
pop    %edi
inc    %esi
push   %ebp
dec    %esi
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
cmp    $0x444f4300,%eax
inc    %ebp
pop    %edi
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
cmp    $0x444f4300,%eax
inc    %ebp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
cmp    $0x53454d00,%eax
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
cmp    $0x69253c00,%eax
add    %ah,%ds:0x65252068
and    %ah,0x5b002054
and    $0x3a5d756c,%eax
and    %al,(%eax)
sub    %ah,0x75253a73
sub    %esp,(%eax)
add    %bl,(%ebx)
pop    %ebx
xor    %edi,(%ebx)
xor    (%ecx),%esi
insl   (%dx),%es:(%edi)
add    %bl,(%ebx)
pop    %ebx
xor    %ch,0x0(%ebp)
cs
cs
das
jae    80763c1 <_IO_stdin_used+0x7601>
arpl   %bp,(%edi)
jae    80763bb <_IO_stdin_used+0x75fb>
popa
jb     80763bb <_IO_stdin_used+0x75fb>
fs
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%bx,%si)
je     80763c1 <_IO_stdin_used+0x7601>
jb     80763c9 <_IO_stdin_used+0x7609>
gs
je     8076385 <_IO_stdin_used+0x75c5>
ds
cmp    $0x74003020,%eax
popa
jb     80763d5 <_IO_stdin_used+0x7615>
gs
je     8076391 <_IO_stdin_used+0x75d1>
cmp    $0x20,%al
pop    %edi
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %ch,(%eax)
insb   (%dx),%es:(%edi)
gs
jbe    80763ed <_IO_stdin_used+0x762d>
insb   (%dx),%es:(%edi)
and    %ah,(%esi)
and    %dh,(%eax)
js     80763bf <_IO_stdin_used+0x75ff>
aaa
sub    %esp,(%eax)
cmp    $0x656c203d,%eax
jbe    80763fe <_IO_stdin_used+0x763e>
insb   (%dx),%es:(%edi)
add    %cl,0x75(%edi)
je     80763bf <_IO_stdin_used+0x75ff>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8076421 <_IO_stdin_used+0x7661>
add    %dl,%cs:0x59(%ebx)
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
add    %dl,0x59(%ebx)
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
pop    %edi
dec    %esp
inc    %ebp
push   %esi
inc    %ebp
dec    %esp
add    %dl,0x59(%ebx)
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
add    %dl,0x59(%ebx)
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
pop    %edi
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ch,0x6f(%edx)
jne    807646c <_IO_stdin_used+0x76ac>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %ch,0x6f(%edx)
jne    8076474 <_IO_stdin_used+0x76b4>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
sub    $0x6b2d726f,%eax
insl   (%dx),%es:(%edi)
jae    8076474 <_IO_stdin_used+0x76b4>
add    %dh,0x79(%ebx)
jae    807647e <_IO_stdin_used+0x76be>
outsl  %ds:(%esi),(%dx)
add    %dh,0x79(%bp,%di)
jae    8076485 <_IO_stdin_used+0x76c5>
outsl  %ds:(%esi),(%dx)
addr16 sub $0x6b2d726f,%eax
insl   (%dx),%es:(%edi)
jae    807648a <_IO_stdin_used+0x76ca>
add    %ah,0x75(%ecx)
je     8076497 <_IO_stdin_used+0x76d7>
add    %dh,0x61(%ebx)
data16
add    %al,%gs:(%eax)
add    %dl,0x52(%eax)
dec    %ecx
dec    %edi
push   %edx
dec    %ecx
push   %esp
pop    %ecx
cmp    $0x530a6925,%eax
pop    %ecx
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %esi
inc    %ecx
inc    %ebx
dec    %ecx
dec    %esp
dec    %ecx
push   %esp
pop    %ecx
cmp    $0x250a6925,%eax
jae    8076477 <_IO_stdin_used+0x76b7>
sub    %cs:0x25(%ebx),%dh
jae    807647d <_IO_stdin_used+0x76bd>
jae    807647f <_IO_stdin_used+0x76bf>
sub    %cs:0x25(%ecx),%ch
jae    8076485 <_IO_stdin_used+0x76c5>
jae    8076487 <_IO_stdin_used+0x76c7>
sub    %cs:0x25(%ebx),%dh
jae    807648d <_IO_stdin_used+0x76cd>
jae    807648f <_IO_stdin_used+0x76cf>
sub    %cs:0x25(%ebx),%dh
jae    80764c3 <_IO_stdin_used+0x7703>
pop    %ecx
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
dec    %ecx
inc    %esp
inc    %ebp
dec    %esi
push   %esp
dec    %ecx
inc    %esi
dec    %ecx
inc    %ebp
push   %edx
cmp    $0xa7325,%eax
add    %al,(%eax)
add    %al,0x73(%ecx)
jae    80764f1 <_IO_stdin_used+0x7731>
jb     8076502 <_IO_stdin_used+0x7742>
imul   $0x73252720,0x6e(%edi),%ebp
daa
and    %ah,0x61(%esi)
imul   $0x20746120,0x64(%ebp,%eiz,2),%ebp
and    $0x75253a73,%eax
sub    $0x20,%al
data16
jne    8076519 <_IO_stdin_used+0x7759>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x2e292873
and    %al,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jb     8076530 <_IO_stdin_used+0x7770>
imul   $0x2e,0x67(%esi),%ebp
add    %al,0x6f(%ebx)
fs and %dh,%fs:%gs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    807653a <_IO_stdin_used+0x777a>
and    %ch,%fs:0x6f(%esi)
je     80764f4 <_IO_stdin_used+0x7734>
bound  %esp,0x20(%ebp)
jb     807653e <_IO_stdin_used+0x777e>
popa
arpl   %bp,0x65(%eax)
and    %ah,%fs:(%edi)
and    $0x61202773,%eax
je     8076507 <_IO_stdin_used+0x7747>
and    $0x75253a73,%eax
sub    $0x20,%al
data16
jne    807655f <_IO_stdin_used+0x779f>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x2e292873
and    %al,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jb     8076576 <_IO_stdin_used+0x77b6>
imul   $0x5f00002e,0x67(%esi),%ebp
imul   $0x3c,(%eax),%esp
and    %ch,(%eax)
jae    8076579 <_IO_stdin_used+0x77b9>
jp     8076577 <_IO_stdin_used+0x77b7>
outsl  %ds:(%esi),(%dx)
data16
sub    %bl,0x61(%edi)
jb     8076580 <_IO_stdin_used+0x77c0>
je     8076594 <_IO_stdin_used+0x77d4>
jo     8076582 <_IO_stdin_used+0x77c2>
jae    8076548 <_IO_stdin_used+0x7788>
das
jae    807658b <_IO_stdin_used+0x77cb>
jp     8076589 <_IO_stdin_used+0x77c9>
outsl  %ds:(%esi),(%dx)
data16
sub    %ch,(%eax)
pop    %edi
popa
jb     8076593 <_IO_stdin_used+0x77d3>
je     80765a7 <_IO_stdin_used+0x77e7>
jo     8076595 <_IO_stdin_used+0x77d5>
jae    807655b <_IO_stdin_used+0x779b>
pop    %ebx
xor    %bl,0x29(%ebp)
sub    %eax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     80765b1 <_IO_stdin_used+0x77f1>
popa
je     8076567 <_IO_stdin_used+0x77a7>
jae    80765bd <_IO_stdin_used+0x77fd>
jb     80765b4 <_IO_stdin_used+0x77f4>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bx,%di)
addr16 jne 80765c0 <_IO_stdin_used+0x7800>
outsb  %gs:(%esi),(%dx)
je     8076585 <_IO_stdin_used+0x77c5>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     80765c5 <_IO_stdin_used+0x7805>
jb     80765d9 <_IO_stdin_used+0x7819>
and    %ch,%gs:0x67(%edi,%ebp,2)
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     8076593 <_IO_stdin_used+0x77d3>
and    $0x49202e73,%eax
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80765e6 <_IO_stdin_used+0x7826>
outsb  %ds:(%esi),(%dx)
add    %al,%cs:(%bx,%si)
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     80765f1 <_IO_stdin_used+0x7831>
jb     8076605 <_IO_stdin_used+0x7845>
and    %ch,%gs:0x67(%edi,%ebp,2)
and    %ch,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,0x49202e73
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8076611 <_IO_stdin_used+0x7851>
outsb  %ds:(%esi),(%dx)
add    %al,%cs:0x61(%bp)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     8076619 <_IO_stdin_used+0x7859>
jb     807662d <_IO_stdin_used+0x786d>
and    %ah,%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x49202e73
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8076634 <_IO_stdin_used+0x7874>
outsb  %ds:(%esi),(%dx)
add    %ch,%cs:0x6f(%si)
addr16 pop %edi
je     8076636 <_IO_stdin_used+0x7876>
jb     807663e <_IO_stdin_used+0x787e>
gs
je     8076639 <_IO_stdin_used+0x7879>
data16
jb     807664c <_IO_stdin_used+0x788c>
insl   (%dx),%es:(%edi)
pop    %edi
jae    8076655 <_IO_stdin_used+0x7895>
jb     807664c <_IO_stdin_used+0x788c>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%si)
addr16 pop %edi
jo     807664d <_IO_stdin_used+0x788d>
jb     8076661 <_IO_stdin_used+0x78a1>
gs
pop    %edi
outsb  %gs:(%esi),(%dx)
jbe    807665d <_IO_stdin_used+0x789d>
jb     8076665 <_IO_stdin_used+0x78a5>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80765fc <_IO_stdin_used+0x783c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    8076667 <_IO_stdin_used+0x78a7>
je     8076663 <_IO_stdin_used+0x78a3>
insl   (%dx),%es:(%edi)
popa
js     8076667 <_IO_stdin_used+0x78a7>
insb   (%dx),%es:(%edi)
gs
jbe    8076671 <_IO_stdin_used+0x78b1>
insb   (%dx),%es:(%edi)
add    %ch,0x67(%edi,%ebp,2)
pop    %edi
jae    8076679 <_IO_stdin_used+0x78b9>
je     8076675 <_IO_stdin_used+0x78b5>
je     8076679 <_IO_stdin_used+0x78b9>
jb     8076681 <_IO_stdin_used+0x78c1>
gs
je     807661d <_IO_stdin_used+0x785d>
cs
cs
das
jae    8076694 <_IO_stdin_used+0x78d4>
arpl   %bp,(%edi)
jae    807668e <_IO_stdin_used+0x78ce>
popa
jb     807668e <_IO_stdin_used+0x78ce>
fs
das
jo     807668e <_IO_stdin_used+0x78ce>
je     8076697 <_IO_stdin_used+0x78d7>
sub    $0x6c697475,%eax
arpl   %ax,%cs:(%eax)
pop    %edi
jb     807663a <_IO_stdin_used+0x787a>
jo     807669d <_IO_stdin_used+0x78dd>
je     80766a6 <_IO_stdin_used+0x78e6>
pop    %edi
jae    80766b5 <_IO_stdin_used+0x78f5>
popa
jb     80766b8 <_IO_stdin_used+0x78f8>
jae    80766bd <_IO_stdin_used+0x78fd>
imul   $0x68746170,0x0(%eax,%ebp,2),%esi
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x61,0x5f(%ebp),%esp
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    80766cf <_IO_stdin_used+0x790f>
gs
pop    %edi
arpl   %si,0x64(%edi)
add    %dh,0x61(%eax)
je     80766cd <_IO_stdin_used+0x790d>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x61,0x5f(%ebp),%esp
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    80766e6 <_IO_stdin_used+0x7926>
add    %dh,%gs:0x61(%eax)
je     80766e0 <_IO_stdin_used+0x7920>
pop    %edi
addr16
gs
je     80766dc <_IO_stdin_used+0x791c>
imul   $0x616e,0x5f(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
add    %ch,%gs:(%esi)
cs
das
jae    80766fe <_IO_stdin_used+0x793e>
arpl   %bp,(%edi)
jae    80766f8 <_IO_stdin_used+0x7938>
popa
jb     80766f8 <_IO_stdin_used+0x7938>
fs
das
jae    807670b <_IO_stdin_used+0x794b>
jb     807670f <_IO_stdin_used+0x794f>
arpl   %ax,%cs:(%eax)
jae    80766be <_IO_stdin_used+0x78fe>
jl     807671c <_IO_stdin_used+0x795c>
and    %ch,0x3c(%eax,%eiz,1)
cmp    $0x69003020,%eax
and    %bh,0x63203d
jae    8076725 <_IO_stdin_used+0x7965>
jb     8076729 <_IO_stdin_used+0x7969>
pop    %edi
jb     807671b <_IO_stdin_used+0x795b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    807671f <_IO_stdin_used+0x795f>
add    %ch,(%esi)
cs
das
jae    8076732 <_IO_stdin_used+0x7972>
arpl   %bp,(%edi)
jae    807672c <_IO_stdin_used+0x796c>
popa
jb     807672c <_IO_stdin_used+0x796c>
fs
das
je     8076734 <_IO_stdin_used+0x7974>
insl   (%dx),%es:(%edi)
gs
sub    $0x6c697475,%eax
arpl   %ax,%cs:(%eax)
insb   (%dx),%es:(%edi)
and    %bh,(%esi)
and    %dh,(%eax)
add    %ah,0x59252061
sub    $0x252d6d25,%eax
and    %ah,%fs:0x4d253a48
cmp    0x5a252053,%ah
add    %ah,0x20756c6c
jns    807675f <_IO_stdin_used+0x799f>
popa
jb     8076770 <_IO_stdin_used+0x79b0>
and    %ah,0x20756c6c
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8076770 <_IO_stdin_used+0x79b0>
jae    807672a <_IO_stdin_used+0x796a>
popa
outsl  %ds:(%si),(%dx)
add    %ah,0x20756c6c
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8076780 <_IO_stdin_used+0x79c0>
jae    807673a <_IO_stdin_used+0x797a>
and    $0x20756c6c,%eax
fs
popa
jns    8076796 <_IO_stdin_used+0x79d6>
and    %ah,0x67(%ecx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x20756c6c
ja     8076794 <_IO_stdin_used+0x79d4>
imul   $0x25,%gs:0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    8076758 <_IO_stdin_used+0x7998>
fs
popa
jns    80767af <_IO_stdin_used+0x79ef>
and    %ah,0x67(%ecx)
outsl  %ds:(%esi),(%dx)
add    %dh,(%ecx)
and    %ah,0x79(%ecx,%eiz,2)
and    %ah,0x68756c6c
and    %ah,0x67(%ecx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x68756c6c
and    %ah,0x6d756c6c
imul   $0x6f6761,0x20(%esi),%ebp
and    $0x6d756c6c,%eax
imul   $0x756c6c25,0x20(%esi),%ebp
jae    8076791 <_IO_stdin_used+0x79d1>
popa
outsl  %ds:(%si),(%dx)
add    %ah,0x6d756c6c
jae    807679c <_IO_stdin_used+0x79dc>
popa
outsl  %ds:(%si),(%dx)
add    %ah,0x75756c6c
jae    80767a7 <_IO_stdin_used+0x79e7>
popa
outsl  %ds:(%si),(%dx)
add    %ch,0x6f(%esi)
ja     807678f <_IO_stdin_used+0x79cf>
and    $0x6c6c2573,%eax
jne    80767c4 <_IO_stdin_used+0x7a04>
and    $0x6c6c2a30,%eax
jne    80767c2 <_IO_stdin_used+0x7a02>
jae    807679f <_IO_stdin_used+0x79df>
and    $0x6c6c2573,%eax
jne    80767cb <_IO_stdin_used+0x7a0b>
jae    80767a8 <_IO_stdin_used+0x79e8>
and    $0x6c253d73,%eax
insb   (%dx),%es:(%edi)
jne    80767d0 <_IO_stdin_used+0x7a10>
and    $0xa756c6c,%eax
add    %ah,0x20696c6c
and    $0x756c6c,%eax
jne    8076835 <_IO_stdin_used+0x7a75>
arpl   %ax,%gs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
je     8076835 <_IO_stdin_used+0x7a75>
insl   (%dx),%es:(%edi)
gs
pop    %edi
jb     80767f9 <_IO_stdin_used+0x7a39>
es
js     8076800 <_IO_stdin_used+0x7a40>
and    %ah,(%esi)
je     8076845 <_IO_stdin_used+0x7a85>
sub    %eax,(%eax)
je     807684b <_IO_stdin_used+0x7a8b>
fs
popa
jns    80767e0 <_IO_stdin_used+0x7a20>
jns    8076847 <_IO_stdin_used+0x7a87>
jae    8076858 <_IO_stdin_used+0x7a98>
gs
jb     807684b <_IO_stdin_used+0x7a8b>
popa
jns    80767ea <_IO_stdin_used+0x7a2a>
je     807685b <_IO_stdin_used+0x7a9b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8076862 <_IO_stdin_used+0x7aa2>
outsl  %ds:(%esi),(%dx)
ja     80767f3 <_IO_stdin_used+0x7a33>
and    $0x6d252d79,%eax
sub    $0x25206425,%eax
dec    %eax
cmp    0x53253a4d,%ah
add    %ah,0x6d252d59
sub    $0x25206425,%eax
dec    %eax
cmp    0x53253a4d,%ah
add    %ah,0x6d252d79
sub    $0x25206425,%eax
dec    %eax
cmp    0x5925004d,%ah
sub    $0x252d6d25,%eax
and    %ah,%fs:0x4d253a48
add    %ah,0x6d252d79
sub    $0x25006425,%eax
pop    %ecx
sub    $0x252d6d25,%eax
add    %ch,%fs:0x73(%esi)
arpl   %ax,%gs:(%eax)
jae    80768b3 <_IO_stdin_used+0x7af3>
arpl   %bp,0x6e(%edi)
fs
jae    8076854 <_IO_stdin_used+0x7a94>
jae    80768bb <_IO_stdin_used+0x7afb>
arpl   %bp,0x6e(%edi)
add    %ch,%fs:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
jne    80768d4 <_IO_stdin_used+0x7b14>
gs
jae    8076863 <_IO_stdin_used+0x7aa3>
insl   (%dx),%es:(%edi)
imul   $0x6d006574,0x75(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80768d7 <_IO_stdin_used+0x7b17>
jae    8076871 <_IO_stdin_used+0x7ab1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80768de <_IO_stdin_used+0x7b1e>
add    %ch,0x73(%ebp)
arpl   %ax,%gs:(%eax)
push   $0x7372756f
add    %ch,0x6f(%eax)
jne    80768f8 <_IO_stdin_used+0x7b38>
add    %ch,0x72(%eax)
add    %ah,0x79(%ecx,%eiz,2)
jae    807688f <_IO_stdin_used+0x7acf>
ja     80768f6 <_IO_stdin_used+0x7b36>
imul   $0x77,%gs:0x0(%ebx),%esi
gs imul $0x79,%gs:(%eax),%eax
gs
popa
jb     8076912 <_IO_stdin_used+0x7b52>
add    %bh,0x65(%ecx)
popa
jb     80768a5 <_IO_stdin_used+0x7ae5>
outsb  %ds:(%esi),(%dx)
jae    80768a8 <_IO_stdin_used+0x7ae8>
push   %ebx
jne    8076919 <_IO_stdin_used+0x7b59>
fs
popa
jns    80768af <_IO_stdin_used+0x7aef>
push   %ebx
jne    8076920 <_IO_stdin_used+0x7b60>
add    %cl,0x6f(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
jns    80768ba <_IO_stdin_used+0x7afa>
dec    %ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dl,0x65(%ebp,%esi,2)
jae    8076927 <_IO_stdin_used+0x7b67>
popa
jns    80768c6 <_IO_stdin_used+0x7b06>
push   %esp
jne    807692e <_IO_stdin_used+0x7b6e>
add    %dl,0x65(%edi)
outsb  %fs:(%esi),(%dx)
gs
jae    8076935 <_IO_stdin_used+0x7b75>
popa
jns    80768d4 <_IO_stdin_used+0x7b14>
push   %edi
gs add %dl,%fs:%gs:0x75(%eax,%ebp,2)
jb     8076950 <_IO_stdin_used+0x7b90>
fs
popa
jns    80768e1 <_IO_stdin_used+0x7b21>
push   %esp
push   $0x72460075
imul   $0x69724600,0x79(%ecx,%eiz,2),%esp
add    %dl,0x61(%ebx)
je     8076969 <_IO_stdin_used+0x7ba9>
jb     807695a <_IO_stdin_used+0x7b9a>
popa
jns    80768f9 <_IO_stdin_used+0x7b39>
push   %ebx
popa
je     80768fd <_IO_stdin_used+0x7b3d>
add    %al,(%eax)
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     807697e <_IO_stdin_used+0x7bbe>
imul   $0x6f6c6328,0x65(%ebp),%ebp
arpl   %bp,0x5f(%ebx)
imul   $0x29737426,0x20(%esp,%ebp,1),%esp
and    %bh,0x30203d
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     8076991 <_IO_stdin_used+0x7bd1>
jb     80769a5 <_IO_stdin_used+0x7be5>
and    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
imul   $0x6d697420,0x68(%ebx),%esi
gs
jae    80769b5 <_IO_stdin_used+0x7bf5>
popa
insl   (%dx),%es:(%edi)
jo     8076965 <_IO_stdin_used+0x7ba5>
jbe    80769a8 <_IO_stdin_used+0x7be8>
insb   (%dx),%es:(%edi)
jne    80769af <_IO_stdin_used+0x7bef>
and    %ah,0x6f660073
jb     80769bf <_IO_stdin_used+0x7bff>
popa
je     80769b4 <_IO_stdin_used+0x7bf4>
je     80769c0 <_IO_stdin_used+0x7c00>
insl   (%dx),%es:(%edi)
gs
jae    80769cb <_IO_stdin_used+0x7c0b>
popa
outsb  %ds:(%esi),(%dx)
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    80769d4 <_IO_stdin_used+0x7c14>
arpl   %bx,%gs:0x6c(%edi)
outsl  %ds:(%esi),(%dx)
popa
add    %ch,%fs:0x6f(%esi)
ja     8076970 <_IO_stdin_used+0x7bb0>
cs
cs
das
jae    80769e7 <_IO_stdin_used+0x7c27>
arpl   %bp,(%edi)
jae    80769e1 <_IO_stdin_used+0x7c21>
popa
jb     80769e1 <_IO_stdin_used+0x7c21>
fs
das
jne    80769f4 <_IO_stdin_used+0x7c34>
imul   $0x665f6e00,0x63(%esi,%ebp,1),%ebp
fs
jae    80769f0 <_IO_stdin_used+0x7c30>
je     80769ad <_IO_stdin_used+0x7bed>
cmp    $0x2030203d,%eax
jl     8076a10 <_IO_stdin_used+0x7c50>
and    %ah,0x64(%esi)
jae    80769fe <_IO_stdin_used+0x7c3e>
je     807699b <_IO_stdin_used+0x7bdb>
jb     80769bd <_IO_stdin_used+0x7bfd>
and    %dh,%ds:(%eax)
add    %dh,0x6f(%eax)
jae    8076a19 <_IO_stdin_used+0x7c59>
imul   $0x6f6c,0x0(%eax),%di
jae    8076a21 <_IO_stdin_used+0x7c61>
sub    0x6f(%esi),%esp
jne    8076a20 <_IO_stdin_used+0x7c60>
add    %ah,%fs:0x71(%ecx)
jne    8076a27 <_IO_stdin_used+0x7c67>
je     8076a1b <_IO_stdin_used+0x7c5b>
jne,pn 8076a30 <_IO_stdin_used+0x7c70>
gs
jb     80769c0 <_IO_stdin_used+0x7c00>
popa
jno    8076a38 <_IO_stdin_used+0x7c78>
outsl  %ds:(%esi),(%dx)
je     8076a27 <_IO_stdin_used+0x7c67>
addr16 jb,pn 8076a39 <_IO_stdin_used+0x7c79>
jne    8076a3c <_IO_stdin_used+0x7c7c>
add    %ch,(%esi)
jb     8076a40 <_IO_stdin_used+0x7c80>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
gs
ja     80769d5 <_IO_stdin_used+0x7c15>
jb,pn  8076a48 <_IO_stdin_used+0x7c88>
insl   (%dx),%es:(%edi)
jae    8076a3c <_IO_stdin_used+0x7c7c>
jbe    8076a42 <_IO_stdin_used+0x7c82>
add    %ch,(%esi)
jb     8076a51 <_IO_stdin_used+0x7c91>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8076a4e <_IO_stdin_used+0x7c8e>
add    %ch,0x7064
imul   $0x6f,0x2d(%edi),%esp
insb   (%dx),%es:(%edi)
add    %ch,%fs:(%esi)
fs
jo     8076a60 <_IO_stdin_used+0x7ca0>
addr16 sub $0x77656e,%eax
jae,pn 8076a75 <_IO_stdin_used+0x7cb5>
jo     8076a00 <_IO_stdin_used+0x7c40>
ja     8076a71 <_IO_stdin_used+0x7cb1>
jb     8076a68 <_IO_stdin_used+0x7ca8>
add    %ah,0x64(%esi)
and    %bh,(%esi)
cmp    $0x63003020,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8076a77 <_IO_stdin_used+0x7cb7>
pop    %edi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x64662872,0x74(%esi),%ebp
sub    %esp,(%eax)
cmp    $0x30203d,%eax
data16
fs
jae    8076a47 <_IO_stdin_used+0x7c87>
jl     8076aa5 <_IO_stdin_used+0x7ce5>
and    %ch,0x5f(%esi)
data16
and    %bh,%fs:0x72003020(,%edi,1)
gs
je     8076a97 <_IO_stdin_used+0x7cd7>
jne    8076a3a <_IO_stdin_used+0x7c7a>
jb     8076aa1 <_IO_stdin_used+0x7ce1>
je     8076a9d <_IO_stdin_used+0x7cdd>
jo     8076aa9 <_IO_stdin_used+0x7ce9>
add    %dh,%fs:0x65(%edx)
je     8076aa5 <_IO_stdin_used+0x7ce5>
jne    8076ab1 <_IO_stdin_used+0x7cf1>
add    %dh,%fs:0x65(%edx)
je     8076aad <_IO_stdin_used+0x7ced>
imul   $0x5f746572,(%eax),%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    8076a58 <_IO_stdin_used+0x7c98>
jb     8076abf <_IO_stdin_used+0x7cff>
je     8076abb <_IO_stdin_used+0x7cfb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x5f746572,(%eax),%eax
add    %bl,%fs:0x70(%edi)
jo     8076ad3 <_IO_stdin_used+0x7d13>
add    %ch,%fs:(%edi)
jo     8076ae1 <_IO_stdin_used+0x7d21>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x732f756c,%eax
je     8076ada <_IO_stdin_used+0x7d1a>
je     8076a7b <_IO_stdin_used+0x7cbb>
and    %ah,0x2520632a
insb   (%dx),%es:(%edi)
jne    8076aa4 <_IO_stdin_used+0x7ce4>
add    %ch,(%edi)
jo     8076afa <_IO_stdin_used+0x7d3a>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8076af2 <_IO_stdin_used+0x7d32>
insb   (%dx),%es:(%edi)
data16
das
jae    8076b06 <_IO_stdin_used+0x7d46>
popa
je     8076a95 <_IO_stdin_used+0x7cd5>
das
jo     8076b0a <_IO_stdin_used+0x7d4a>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8076b02 <_IO_stdin_used+0x7d42>
insb   (%dx),%es:(%edi)
data16
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
add    %ch,(%edi)
jo     8076b1a <_IO_stdin_used+0x7d5a>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x632f756c,%eax
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
add    %dh,0x69(%eax)
and    %bh,%fs:(%esi)
and    %dh,(%eax)
add    %ch,(%edi)
jo     8076b31 <_IO_stdin_used+0x7d71>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x632f756c,%eax
insl   (%dx),%es:(%edi)
fs
insb   (%dx),%es:(%edi)
imul   $0x72702f00,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8076b3b <_IO_stdin_used+0x7d7b>
insb   (%dx),%es:(%edi)
data16
das
gs
js     8076b41 <_IO_stdin_used+0x7d81>
add    %ch,(%edi)
jo     8076b52 <_IO_stdin_used+0x7d92>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x652f756c,%eax
js     8076b4f <_IO_stdin_used+0x7d8f>
add    %ch,(%edi)
jo     8076b60 <_IO_stdin_used+0x7da0>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x732f756c,%eax
je     8076b59 <_IO_stdin_used+0x7d99>
je     8076b6f <_IO_stdin_used+0x7daf>
jae    8076afc <_IO_stdin_used+0x7d3c>
push   %ebp
imul   $0x3a646947,0x0(%edx,%edi,1),%esp
add    %ah,0x68(%ebx)
popa
jb     8076b7e <_IO_stdin_used+0x7dbe>
gs
je     8076b0e <_IO_stdin_used+0x7d4e>
jle    8076b10 <_IO_stdin_used+0x7d50>
outsb  %ds:(%esi),(%dx)
pop    %edi
gs
js     8076b78 <_IO_stdin_used+0x7db8>
gs
jo     8076b8c <_IO_stdin_used+0x7dcc>
and    %bh,0x2030203d
jl     8076b9c <_IO_stdin_used+0x7ddc>
and    %ah,0x78(%ebp)
arpl   %sp,0x70(%ebp)
je     8076b28 <_IO_stdin_used+0x7d68>
das
jo     8076b9d <_IO_stdin_used+0x7ddd>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8076b95 <_IO_stdin_used+0x7dd5>
insb   (%dx),%es:(%edi)
data16
das
data16
add    %ch,%fs:(%edi)
fs
gs
jbe    8076b6a <_IO_stdin_used+0x7daa>
je     8076bb1 <_IO_stdin_used+0x7df1>
jns    8076b6f <_IO_stdin_used+0x7daf>
add    %ch,(%edi)
fs
gs
jbe    8076b74 <_IO_stdin_used+0x7db4>
je     8076bbb <_IO_stdin_used+0x7dfb>
jns    8076b49 <_IO_stdin_used+0x7d89>
bound  %edi,0x74(%ecx)
gs
jae    8076b4f <_IO_stdin_used+0x7d8f>
imul   $0x7665642f,%fs:0x0(%edx),%esi
das
jne    8076bcc <_IO_stdin_used+0x7e0c>
popa
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %dh,0x69(%ebx)
addr16 popa
fs
fs
jae    8076bcd <_IO_stdin_used+0x7e0d>
je     8076b92 <_IO_stdin_used+0x7dd2>
jae    8076bdf <_IO_stdin_used+0x7e1f>
sub    $0x20,%al
jae    8076bd9 <_IO_stdin_used+0x7e19>
sub    %esp,(%bx,%si)
cmp    $0x30203d,%eax
jne    8076be8 <_IO_stdin_used+0x7e28>
popa
insl   (%dx),%es:(%edi)
sub    %ah,%gs:(%esi)
jne    8076baa <_IO_stdin_used+0x7dea>
and    %bh,(%esi)
cmp    $0x28003020,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %eax,%gs:(%eax)
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %ah,(%eax)
and    $0x2520632a,%eax
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
insb   (%dx),%es:(%edi)
jne    8076bc8 <_IO_stdin_used+0x7e08>
add    %ch,(%edi)
fs
gs
jbe    8076bdd <_IO_stdin_used+0x7e1d>
arpl   %bp,0x61(%eax)
jb     8076be2 <_IO_stdin_used+0x7e22>
and    $0x75253a75,%eax
add    %dh,0x74(%eax)
jae    8076bec <_IO_stdin_used+0x7e2c>
and    $0x6600756c,%eax
outsl  %ds:(%esi),(%dx)
jb     8076c32 <_IO_stdin_used+0x7e72>
popa
je     8076bc8 <_IO_stdin_used+0x7e08>
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %cl,0x4e(%ecx,%ecx,2)
inc    %ebp
push   %ebx
add    %ch,(%edi)
jo     8076c4b <_IO_stdin_used+0x7e8b>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
xor    %ebp,(%edi)
jb     8076c4f <_IO_stdin_used+0x7e8f>
outsl  %ds:(%esi),(%dx)
je     8076be3 <_IO_stdin_used+0x7e23>
jo     8076c4a <_IO_stdin_used+0x7e8a>
jb     8076c4a <_IO_stdin_used+0x7e8a>
outsb  %gs:(%esi),(%dx)
je     8076c0b <_IO_stdin_used+0x7e4b>
cmp    $0x3d,%al
and    %dh,(%ecx)
xor    %dh,(%eax)
add    %ch,0x65(%esi)
ja     8076c55 <_IO_stdin_used+0x7e95>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8076c64 <_IO_stdin_used+0x7ea4>
and    %bh,(%esi)
cmp    $0xd003320,%eax
sbb    0x4b(%ebx),%ebx
add    %bl,0x0(%ebx)
pop    %ebp
and    %al,(%eax)
dec    %esp
imul   $0x4e410078,0x75(%esi),%ebp
push   %ebx
dec    %ecx
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
add    %dl,0x52(%eax)
inc    %ebp
push   %esp
push   %esp
pop    %ecx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ch,(%edi)
gs
je     8076c90 <_IO_stdin_used+0x7ed0>
das
outsl  %ds:(%esi),(%dx)
jae    8076c5e <_IO_stdin_used+0x7e9e>
jb     8076c98 <_IO_stdin_used+0x7ed8>
insb   (%dx),%es:(%edi)
gs
popa
jae    8076c9d <_IO_stdin_used+0x7edd>
add    %cl,(%edx)
push   %edi
gs
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
sbb    0x25(%ebx),%ebx
jae    8076cb7 <_IO_stdin_used+0x7ef7>
and    $0x305b1b73,%eax
insl   (%dx),%es:(%edi)
and    %ecx,(%edx)
add    %ch,(%edi)
fs
gs
jbe    8076c87 <_IO_stdin_used+0x7ec7>
imul   $0x2d79622f,%fs:0x6b(%ebx),%esi
and    $0x73252f73,%eax
add    %ah,0x73253d73
add    %dh,0x69(%eax)
and    %bh,%fs:(%esi)
cmp    $0x50003120,%eax
inc    %ecx
push   %edx
push   %esp
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
cmp    $0x72617000,%eax
je     8076cf9 <_IO_stdin_used+0x7f39>
jne    8076cef <_IO_stdin_used+0x7f2f>
add    %dl,%fs:0x41(%eax)
push   %edx
push   %esp
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
cmp    $0x72617000,%eax
je     8076d04 <_IO_stdin_used+0x7f44>
popa
bound  %esp,0x6c(%ebp)
add    %ch,(%edi)
jae    8076d19 <_IO_stdin_used+0x7f59>
jae    8076cd1 <_IO_stdin_used+0x7f11>
arpl   %bp,0x73(%ecx,%eiz,2)
jae    8076cd7 <_IO_stdin_used+0x7f17>
je     8076d1e <_IO_stdin_used+0x7f5e>
jns    8076cdb <_IO_stdin_used+0x7f1b>
arpl   %bp,0x6e(%edi)
jae    8076d20 <_IO_stdin_used+0x7f60>
insb   (%dx),%es:(%edi)
gs
das
popa
arpl   %si,0x76(%ecx,%ebp,2)
add    %dl,%gs:0x52(%ebp,%eax,2)
dec    %ebp
cmp    $0x756e696c,%eax
js     8076cc6 <_IO_stdin_used+0x7f06>
push   %esp
inc    %ebp
push   %edx
dec    %ebp
cmp    $0x30317476,%eax
xor    (%eax),%al
das
jb     8076d49 <_IO_stdin_used+0x7f89>
outsb  %ds:(%esi),(%dx)
das
jo     8076d44 <_IO_stdin_used+0x7f84>
jns    8076d47 <_IO_stdin_used+0x7f87>
outsl  %ds:(%esi),(%dx)
jne    8076d51 <_IO_stdin_used+0x7f91>
push   $0x6469702f
add    %dh,0x65(%edx)
je     8076ce7 <_IO_stdin_used+0x7f27>
jb     8076d4e <_IO_stdin_used+0x7f8e>
jo     8076d57 <_IO_stdin_used+0x7f97>
imul   $0x315b1b00,0x73(%ebp),%esp
cmp    (%ebx),%esi
cmp    %ebp,0x0(%ebp)
inc    %edx
popa
and    %ch,%fs:0x6e(%ecx)
jo     8076d74 <_IO_stdin_used+0x7fb4>
je     8076d2d <_IO_stdin_used+0x7f6d>
and    %dh,0x6c(%eax)
gs
popa
jae    8076d6d <_IO_stdin_used+0x7fad>
and    %dh,0x79(%edx,%esi,2)
and    %ah,0x67(%ecx)
popa
imul   $0x746f6e00,0x2e(%esi),%ebp
imul   $0x203d3e20,0x79(%esi),%esp
xor    %al,(%eax)
jae    8076d96 <_IO_stdin_used+0x7fd6>
gs
jo     8076d45 <_IO_stdin_used+0x7f85>
cmp    $0x3d,%al
and    %ch,(%eax)
jae    8076d94 <_IO_stdin_used+0x7fd4>
jp     8076d92 <_IO_stdin_used+0x7fd2>
pop    %edi
je     8076d59 <_IO_stdin_used+0x7f99>
and    %ch,0x46(%eax,%eax,1)
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8076da4 <_IO_stdin_used+0x7fe4>
jae    8076da6 <_IO_stdin_used+0x7fe6>
je     8076d63 <_IO_stdin_used+0x7fa3>
je     8076daa <_IO_stdin_used+0x7fea>
jb     8076db4 <_IO_stdin_used+0x7ff4>
imul   $0x25203a6c,0x61(%esi),%ebp
jae    8076d50 <_IO_stdin_used+0x7f90>
pop    %edi
je     8076db8 <_IO_stdin_used+0x7ff8>
insl   (%dx),%es:(%edi)
jo     8076db5 <_IO_stdin_used+0x7ff5>
jo     8076db9 <_IO_stdin_used+0x7ff9>
je     8076dc2 <_IO_stdin_used+0x8002>
add    %bl,(%ebx)
pop    %ebx
jb     8076d7a <_IO_stdin_used+0x7fba>
pop    %ebx
dec    %eax
sbb    0x32(%ebx),%ebx
dec    %edx
add    %bl,(%ebx)
pop    %ebx
jb     8076d85 <_IO_stdin_used+0x7fc5>
pop    %ebx
dec    %eax
sbb    0x33(%ebx),%ebx
dec    %edx
add    %ah,0x73(%ecx,%ebp,2)
jo     8076de2 <_IO_stdin_used+0x8022>
popa
jns    8076d79 <_IO_stdin_used+0x7fb9>
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
add    %ch,(%edx)
jne    8076dfa <_IO_stdin_used+0x803a>
gs
jb     8076df8 <_IO_stdin_used+0x8038>
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:(%edi)
bound  %ebp,0x6e(%ecx)
das
jae    8076dfd <_IO_stdin_used+0x803d>
add    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8076e0b <_IO_stdin_used+0x804b>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x67(%esi)
jb     8076e13 <_IO_stdin_used+0x8053>
jne    8076e16 <_IO_stdin_used+0x8056>
jae    8076e07 <_IO_stdin_used+0x8047>
insl   (%dx),%es:(%edi)
popa
js     8076dcc <_IO_stdin_used+0x800c>
and    %dh,%ds:(%eax)
add    %ch,(%edi)
jae    8076e2c <_IO_stdin_used+0x806c>
jae    8076de4 <_IO_stdin_used+0x8024>
fs
gs
jbe    8076de8 <_IO_stdin_used+0x8028>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
jne    8076dfc <_IO_stdin_used+0x803c>
and    $0x75712f75,%eax
gs
jne    8076e2f <_IO_stdin_used+0x806f>
add    %ch,(%edi)
jae    8076e47 <_IO_stdin_used+0x8087>
jae    8076dff <_IO_stdin_used+0x803f>
fs
gs
jbe    8076e03 <_IO_stdin_used+0x8043>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
jne    8076e17 <_IO_stdin_used+0x8057>
and    $0x2e2e2f75,%eax
das
fs
gs
jbe    8076de7 <_IO_stdin_used+0x8027>
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    0x69700064,%esp
and    %bh,%fs:(%esi)
and    %dh,(%ecx)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
ja     8076e65 <_IO_stdin_used+0x80a5>
imul   $0x2520726f,0x66(%eax,%eiz,1),%esi
jae    8076e48 <_IO_stdin_used+0x8088>
and    %ah,0x73250073
and    %ah,0x61(%esi)
imul   $0x74697720,0x64(%ebp,%eiz,2),%ebp
push   $0x72726520
outsl  %ds:(%esi),(%dx)
jb     8076e47 <_IO_stdin_used+0x8087>
arpl   %bp,0x64(%edi)
and    %ah,%gs:0x25002e69
jae    8076e53 <_IO_stdin_used+0x8093>
jae    8076eaa <_IO_stdin_used+0x80ea>
arpl   %sp,0x65(%ebx)
gs fs gs fs add %ah,%cs:%fs:%gs:0x65742073
65
jb     8076eb2 <_IO_stdin_used+0x80f2>
imul   $0x20646574,0x61(%esi),%ebp
bound  %edi,0x20(%ecx)
jae    8076eba <_IO_stdin_used+0x80fa>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x46002e73
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x65(%ebx)
je     8076e9f <_IO_stdin_used+0x80df>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     8076eeb <_IO_stdin_used+0x812b>
cmp    (%eax),%ah
and    $0x6146006d,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     8076ef7 <_IO_stdin_used+0x8137>
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x25203a73
insl   (%dx),%es:(%edi)
add    %dl,0x70(%ebx)
popa
ja     8076f11 <_IO_stdin_used+0x8151>
gs and %ah,%fs:%gs:0x73612073
and    %ah,0x4600756c
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
fs and %dl,%fs:0x49(%eax)
inc    %esp
and    %dh,0x20(%edi,%ebp,2)
jae    8076f2c <_IO_stdin_used+0x816c>
je     8076f03 <_IO_stdin_used+0x8143>
and    %ah,0x61770073
imul   $0x66202928,0x64(%ecx,%ebp,2),%esi
popa
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
add    %ah,0x78652073
imul   $0x63757320,0x64(%ebp,%eiz,2),%esi
arpl   %sp,0x73(%ebp)
jae    8076f59 <_IO_stdin_used+0x8199>
jne    8076f61 <_IO_stdin_used+0x81a1>
insb   (%dx),%es:(%edi)
jns    8076f26 <_IO_stdin_used+0x8166>
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%eax),%eax
push   %ebx
dec    %ecx
inc    %edi
add    %ch,(%edi)
jae    8076f80 <_IO_stdin_used+0x81c0>
jae    8076f38 <_IO_stdin_used+0x8178>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
das
imul   $0x65,0x78(%ebp),%esp
arpl   %bx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs add %ah,%fs:%gs:0x2e756c6c
2e
and    $0x25756c6c,%eax
jae    8076f29 <_IO_stdin_used+0x8169>
and    $0x42756c6c,%eax
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     8076fa1 <_IO_stdin_used+0x81e1>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
fs
gs
jbe    8076f72 <_IO_stdin_used+0x81b2>
je     8076fb9 <_IO_stdin_used+0x81f9>
jns    8076f81 <_IO_stdin_used+0x81c1>
and    %ah,0x6c72006d
imul   $0x6f72702f,0x0(%ebp),%ebp
arpl   %bp,(%edi)
jae    8076fbd <_IO_stdin_used+0x81fd>
insb   (%dx),%es:(%edi)
data16
das
outsb  %gs:(%esi),(%dx)
jbe    8076fc8 <_IO_stdin_used+0x8208>
jb     8076fd0 <_IO_stdin_used+0x8210>
outsb  %ds:(%esi),(%dx)
add    %bl,0x76(%edi)
popa
insb   (%dx),%es:(%edi)
jne    8076fce <_IO_stdin_used+0x820e>
add    %ch,(%edi)
jo     8076fdf <_IO_stdin_used+0x821f>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x652f756c,%eax
outsb  %ds:(%esi),(%dx)
jbe    8076fe1 <_IO_stdin_used+0x8221>
jb     8076fe9 <_IO_stdin_used+0x8229>
outsb  %ds:(%esi),(%dx)
add    %dh,0x72(%ebp)
insb   (%dx),%es:(%edi)
add    %ch,0x74(%eax)
je     8076ff4 <_IO_stdin_used+0x8234>
cmp    (%edi),%ch
das
add    %ch,0x74(%eax)
je     8076ffc <_IO_stdin_used+0x823c>
jae    8076fc8 <_IO_stdin_used+0x8208>
das
das
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%al
imul   $0x6d003a6f,0x66(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%al
das
gs
je     8077009 <_IO_stdin_used+0x8249>
das
imul   $0x2d647274,0x69(%esi),%ebp
jb     8077015 <_IO_stdin_used+0x8255>
insb   (%dx),%es:(%edi)
gs
popa
jae    807701a <_IO_stdin_used+0x825a>
add    %bl,0x68(%edi)
add    %bl,0x27(%edx,%eiz,1)
add    %ch,(%edi)
cs add %ch,%cs:(%edi)
cs
cs
das
add    %ch,(%edi)
add    %ch,%cs:(%edi)
cs
das
add    %dl,0x54(%ebp)
inc    %esi
sub    $0x6c6f0038,%eax
fs
pop    %edi
jae    807704d <_IO_stdin_used+0x828d>
jb     8077044 <_IO_stdin_used+0x8284>
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%bp)
ja     8077041 <_IO_stdin_used+0x8281>
jae    8077058 <_IO_stdin_used+0x8298>
jb     807704f <_IO_stdin_used+0x828f>
outsb  %ds:(%esi),(%dx)
add    %ch,(%bp,%si)
imul   $0x20200066,0x75(%edx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
add    %ch,(%edi)
jae    8077074 <_IO_stdin_used+0x82b4>
jae    807702c <_IO_stdin_used+0x826c>
arpl   %bp,0x73(%ecx,%eiz,2)
jae    8077032 <_IO_stdin_used+0x8272>
jo     8077074 <_IO_stdin_used+0x82b4>
ja     807706c <_IO_stdin_used+0x82ac>
jb     8077068 <_IO_stdin_used+0x82a8>
jae    8077080 <_IO_stdin_used+0x82c0>
jo     807707d <_IO_stdin_used+0x82bd>
insb   (%dx),%es:(%edi)
jns    8077010 <_IO_stdin_used+0x8250>
dec    %ebp
popa
imul   $0x6e6f000a,0x73(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x72696400,0x65(%esi),%ebp
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     807704d <_IO_stdin_used+0x828d>
arpl   %si,0x65(%edx)
popa
je     8077098 <_IO_stdin_used+0x82d8>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    807705e <_IO_stdin_used+0x829e>
and    $0x25203a73,%eax
insl   (%dx),%es:(%edi)
add    %ch,(%edi)
je     80770b5 <_IO_stdin_used+0x82f5>
jo     807704a <_IO_stdin_used+0x828a>
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x25203a73
insl   (%dx),%es:(%edi)
add    %dl,0x65(%ebx)
je     8077085 <_IO_stdin_used+0x82c5>
jae    80770db <_IO_stdin_used+0x831b>
imul   $0x69622079,0x6b(%ebx),%esp
je     8077090 <_IO_stdin_used+0x82d0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x702f0073
jb     80770e9 <_IO_stdin_used+0x8329>
arpl   %bp,(%edi)
jae    80770e3 <_IO_stdin_used+0x8323>
insb   (%dx),%es:(%edi)
data16
das
arpl   %bp,0x64(%ebp)
insb   (%dx),%es:(%edi)
imul   $0xe2005d00,0x65(%esi),%ebp
xchg   %eax,%esp
(bad)
and    %al,(%eax)
loop   8077026 <_IO_stdin_used+0x8266>
pushf
loop   8077029 <_IO_stdin_used+0x8269>
addb   $0xe2,(%eax)
xchg   %eax,%esp
xchg   %eax,%esp
loop   8077030 <_IO_stdin_used+0x8270>
addb   $0xe2,(%eax)
andb   $0x0,0x207c0020(%ebx)
jl     80770d5 <_IO_stdin_used+0x8315>
add    %ah,0x2d(%eax)
add    %bh,(%esi)
and    %al,(%eax)
dec    %eax
push   %ebp
push   %eax
add    %dl,0x55(%ecx)
dec    %ecx
push   %esp
add    %dl,0x41(%edx,%edx,2)
push   %eax
add    %al,0x42(%ecx)
push   %edx
push   %esp
add    %al,0x50(%esi)
inc    %ebp
add    %dl,0x53(%ebp)
push   %edx
xor    %eax,(%eax)
push   %ebx
inc    %ebp
inc    %edi
push   %esi
add    %dl,0x53(%ebp)
push   %edx
xor    (%eax),%al
push   %eax
dec    %ecx
push   %eax
inc    %ebp
add    %dl,0x52(%ebp,%eax,2)
dec    %ebp
add    %dl,0x54(%ebx)
dec    %ebx
inc    %esi
dec    %esp
push   %esp
add    %al,0x48(%ebx)
dec    %esp
inc    %esp
add    %al,0x4f(%ebx)
dec    %esi
push   %esp
add    %dl,0x54(%ebx,%edx,2)
push   %eax
add    %dl,0x49(%esp,%edx,2)
dec    %esi
add    %dl,0x4f(%esp,%edx,2)
push   %ebp
add    %dl,0x52(%ebp)
inc    %edi
add    %bl,0x43(%eax)
push   %eax
push   %ebp
add    %bl,0x46(%eax)
push   %ebx
pop    %edx
add    %dl,0x54(%esi)
inc    %ecx
dec    %esp
push   %edx
dec    %ebp
add    %dl,0x52(%eax)
dec    %edi
inc    %esi
add    %dl,0x49(%edi)
dec    %esi
inc    %ebx
dec    %eax
add    %dl,0x57(%eax)
push   %edx
add    %dl,0x59(%ebx)
push   %ebx
add    %ch,0x77(%edi,%ebp,2)
sub    $0x74736f63,%eax
add    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
imul   $0x74696c69,0x62(%ecx),%esp
jns    807713c <_IO_stdin_used+0x837c>
je     80771a6 <_IO_stdin_used+0x83e6>
jb     80771af <_IO_stdin_used+0x83ef>
jne    80771a9 <_IO_stdin_used+0x83e9>
push   $0x747570
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8077178 <_IO_stdin_used+0x83b8>
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    8077151 <_IO_stdin_used+0x8391>
dec    %esp
imul   $0x55504374,0x69(%ebp),%ebp
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x455a49,0x53(%esi,%eax,2),%esi
dec    %esp
imul   $0x54414474,0x69(%ebp),%ebp
inc    %ecx
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x4b4341,0x54(%ebx,%edx,2),%esi
dec    %esp
imul   $0x524f4374,0x69(%ebp),%ebp
inc    %ebp
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x694c0053,0x53(%edx,%edx,2),%esi
insl   (%dx),%es:(%edi)
imul   $0x434f52,0x50(%esi,%ecx,2),%esi
dec    %esp
imul   $0x464f4e74,0x69(%ebp),%ebp
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x434f4c4d,0x45(%ebp,%ecx,2),%esi
dec    %ebx
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x6d694c00,0x53(%ecx,%eax,2),%esi
imul   $0x534b43,0x4f(%esp,%ecx,2),%esi
dec    %esp
imul   $0x47495374,0x69(%ebp),%ebp
push   %eax
inc    %ebp
dec    %esi
inc    %esp
dec    %ecx
dec    %esi
inc    %edi
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x45555147,0x53(%ebp,%ecx,2),%esi
push   %ebp
inc    %ebp
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x4c004543,0x49(%esi,%ecx,2),%esi
imul   $0x50545274,0x69(%ebp),%ebp
push   %edx
dec    %ecx
dec    %edi
add    %cl,0x6d(%ecx,%ebp,2)
imul   $0x454d4954,0x54(%edx,%edx,2),%esi
add    %ch,0x74(%edi)
push   $0x66007265
imul   $0x74616200,0x6f(%esi),%esp
arpl   %bp,0x0(%eax)
imul   $0x656d6500,0x65(%esp,%ebp,2),%esp
jb     8077286 <_IO_stdin_used+0x84c6>
add    %ah,0x6c(%ecx)
gs
jb     8077299 <_IO_stdin_used+0x84d9>
add    %ah,0x72(%ebx)
imul   $0x696e7261,0x77(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%bp)
je     80772a0 <_IO_stdin_used+0x84e0>
arpl   %sp,0x0(%ebp)
imul   $0x6e,0x72(%ebp),%esp
add    %ah,0x75(%ecx)
je     80772ab <_IO_stdin_used+0x84eb>
add    %ch,0x72(%eax,%esi,2)
add    %dh,0x75(%ebp)
arpl   %si,0x0(%eax)
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%ecx)
je     80772be <_IO_stdin_used+0x84fe>
jo     80772ca <_IO_stdin_used+0x850a>
imul   $0x707466,0x0(%esi),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    %al,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    %eax,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    (%eax),%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    $0x0,%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
xor    $0x636f6c00,%eax
popa
insb   (%dx),%es:(%edi)
add    %ch,%ss:0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
aaa
add    %ah,0x78(%ebp)
imul   $0x6c696b00,0x64(%ebp,%eiz,2),%esi
insb   (%dx),%es:(%edi)
gs add %ah,%fs:%gs:0x6d(%ebp,%esi,2)
jo     807730f <_IO_stdin_used+0x854f>
add    %dh,%fs:0x61(%edx,%esi,2)
jo     8077321 <_IO_stdin_used+0x8561>
gs add %dh,%fs:%gs:0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8077329 <_IO_stdin_used+0x8569>
gs add %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     807732a <_IO_stdin_used+0x856a>
outsb  %ds:(%esi),(%dx)
jne    8077329 <_IO_stdin_used+0x8569>
add    %dh,%fs:0x65(%edx)
popa
insb   (%dx),%es:(%edi)
je     8077335 <_IO_stdin_used+0x8575>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edx)
jae    8077347 <_IO_stdin_used+0x8587>
sub    $0x6f666665,%eax
jb     807734e <_IO_stdin_used+0x858e>
add    %ch,0x67(%edi,%ebp,2)
pop    %edi
insb   (%dx),%es:(%edi)
gs
jbe    8077348 <_IO_stdin_used+0x8588>
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     8077357 <_IO_stdin_used+0x8597>
insl   (%dx),%es:(%edi)
pop    %edi
jae    8077360 <_IO_stdin_used+0x85a0>
jb     8077357 <_IO_stdin_used+0x8597>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6f(%bp)
jo     807735a <_IO_stdin_used+0x859a>
outsb  %ds:(%esi),(%dx)
pop    %edi
je     807735e <_IO_stdin_used+0x859e>
insl   (%dx),%es:(%edi)
jo     807736b <_IO_stdin_used+0x85ab>
jb     807735f <_IO_stdin_used+0x859f>
jb     8077379 <_IO_stdin_used+0x85b9>
add    %ah,0x72(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
je     8077367 <_IO_stdin_used+0x85a7>
imul   $0x656c6966,0x5f(%ebx),%esi
pop    %edi
ja     807737b <_IO_stdin_used+0x85bb>
je     807737c <_IO_stdin_used+0x85bc>
pop    %edi
jae    807738c <_IO_stdin_used+0x85cc>
data32 imul $0x756e,0x0(%eax),%di
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jb     8077383 <_IO_stdin_used+0x85c3>
gs
insl   (%dx),%es:(%edi)
jo     807739c <_IO_stdin_used+0x85dc>
jns    8077389 <_IO_stdin_used+0x85c9>
jo     807738d <_IO_stdin_used+0x85cd>
je     8077396 <_IO_stdin_used+0x85d6>
add    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jb     8077396 <_IO_stdin_used+0x85d6>
gs
insl   (%dx),%es:(%edi)
jo     80773af <_IO_stdin_used+0x85ef>
jns    807733d <_IO_stdin_used+0x857d>
imul   $0x5f65726f,0x6e(%edi),%esp
imul   $0x6c61,0x5f(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80773ae <_IO_stdin_used+0x85ee>
bound  %esp,0x63(%ecx)
imul   $0x0,0x70(%ebp),%esi
je     80773ca <_IO_stdin_used+0x860a>
jne    80773c8 <_IO_stdin_used+0x8608>
arpl   %sp,0x74(%ecx)
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %dh,0x61(%ebx)
data16
gs
pop    %edi
popa
je     80773d9 <_IO_stdin_used+0x8619>
jne    807736c <_IO_stdin_used+0x85ac>
jo     80773cf <_IO_stdin_used+0x860f>
jb     80773e3 <_IO_stdin_used+0x8623>
gs
pop    %edi
jne    80773dd <_IO_stdin_used+0x861d>
add    %dh,%fs:0x61(%eax)
jb     80773ed <_IO_stdin_used+0x862d>
gs
pop    %edi
bound  %ebp,0x6f(%edi)
insb   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    80773ee <_IO_stdin_used+0x862e>
pop    %edi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x6f6e5f72,0x74(%esi),%ebp
popaw
imul   $0x65736f6c,0x63(%eax,%eax,1),%ebp
pop    %edi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x74730072,0x74(%esi),%ebp
popa
jb     807741e <_IO_stdin_used+0x865e>
jae    8077423 <_IO_stdin_used+0x8663>
imul   $0x73646e65,0x0(%eax,%ebp,2),%esi
ja     807741f <_IO_stdin_used+0x865f>
je     8077420 <_IO_stdin_used+0x8660>
add    %dh,0x61(%eax)
addr16
gs
pop    %edi
jae    8077429 <_IO_stdin_used+0x8669>
jp     8077427 <_IO_stdin_used+0x8667>
add    %ch,(%edi)
jb     807743b <_IO_stdin_used+0x867b>
outsb  %ds:(%esi),(%dx)
das
jne    807742e <_IO_stdin_used+0x866e>
gs
jbe    80773fc <_IO_stdin_used+0x863c>
je     8077430 <_IO_stdin_used+0x8670>
addr16 jae 8077401 <_IO_stdin_used+0x8641>
add    %ah,0x6d(%ebp)
jo     807744b <_IO_stdin_used+0x868b>
jns    80773d9 <_IO_stdin_used+0x8619>
je,pn  8077449 <_IO_stdin_used+0x8689>
jo     80773de <_IO_stdin_used+0x861e>
push   %ebx
cmp    0x4c000a73,%ah
cmp    0x57000a69,%ah
cmp    0x49000a69,%ah
cmp    0xa756c6c,%ah
add    %al,0x3a(%ebp)
and    $0x73253d73,%eax
or     (%eax),%al
inc    %edi
cmp    0x2f000a73,%ah
jb     807747f <_IO_stdin_used+0x86bf>
outsb  %ds:(%esi),(%dx)
das
jne    8077472 <_IO_stdin_used+0x86b2>
gs
jbe    8077440 <_IO_stdin_used+0x8680>
fs
popa
je     8077476 <_IO_stdin_used+0x86b6>
das
add    %al,(%eax)
jne    8077488 <_IO_stdin_used+0x86c8>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8077490 <_IO_stdin_used+0x86d0>
and    %ah,0x72(%ebx)
gs
popa
je     807748d <_IO_stdin_used+0x86cd>
and    %dh,0x6d(%ebp,%eiz,2)
jo     807749d <_IO_stdin_used+0x86dd>
jb     8077491 <_IO_stdin_used+0x86d1>
jb     80774ab <_IO_stdin_used+0x86eb>
and    %ah,0x20(%edx,%eiz,2)
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    8077466 <_IO_stdin_used+0x86a6>
cmp    (%eax),%ah
and    $0xa6d,%eax
add    %al,(%eax)
cs
cs
das
jae    80774bf <_IO_stdin_used+0x86ff>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
fs
gs
jbe    80774cc <_IO_stdin_used+0x870c>
arpl   %sp,0x2d(%ebp)
jo     80774da <_IO_stdin_used+0x871a>
imul   $0x632e6574,0x61(%esi),%esi
add    %ah,0x72(%ebx)
gs
popa
je     80774db <_IO_stdin_used+0x871b>
and    %ah,%fs:0x69662073
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     80774a9 <_IO_stdin_used+0x86e9>
daa
and    $0xa2773,%eax
jne    80774f5 <_IO_stdin_used+0x8735>
gs
jbe    80774f3 <_IO_stdin_used+0x8733>
fs
gs
jbe    8077501 <_IO_stdin_used+0x8741>
arpl   %sp,0x5f(%ebp)
jne    807750d <_IO_stdin_used+0x874d>
fs
popa
je     8077506 <_IO_stdin_used+0x8746>
pop    %edi
bound  %eax,%fs:(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x20(%edx,%eiz,2)
imul   $0x6f74,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%edx)
popa
and    %ah,%fs:0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
das
fs
jb     807752d <_IO_stdin_used+0x876d>
jbe    807752b <_IO_stdin_used+0x876b>
jb     807753b <_IO_stdin_used+0x877b>
das
add    %ah,0x69(%edx,%esi,2)
jbe    8077534 <_IO_stdin_used+0x8774>
jb     8077544 <_IO_stdin_used+0x8784>
add    %dl,0x53(%ebp)
inc    %ebp
inc    %ebx
pop    %edi
dec    %ecx
dec    %esi
dec    %ecx
push   %esp
dec    %ecx
inc    %ecx
dec    %esp
dec    %ecx
pop    %edx
inc    %ebp
inc    %esp
add    %ch,0x6f(%esi)
je     8077507 <_IO_stdin_used+0x8747>
imul   $0x20737973,0x20(%esi),%ebp
cmp    0x2f000a73,%ah
fs
gs
jbe    8077561 <_IO_stdin_used+0x87a1>
arpl   %sp,0x73(%ebp)
das
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x20702520,0x65(%ebx),%esp
push   $0x64207361
gs
jbe    807757f <_IO_stdin_used+0x87bf>
popa
je     807757a <_IO_stdin_used+0x87ba>
and    %ah,(%edi)
and    $0xa2773,%eax
das
jae    8077595 <_IO_stdin_used+0x87d5>
jae    807754d <_IO_stdin_used+0x878d>
fs
gs
jbe    8077551 <_IO_stdin_used+0x8791>
and    $0x75252f73,%eax
cmp    0x732f0075,%ah
jns    80775a2 <_IO_stdin_used+0x87e2>
das
jae    80775a7 <_IO_stdin_used+0x87e7>
bound  %esi,0x79(%ebx)
jae    80775ab <_IO_stdin_used+0x87eb>
gs
insl   (%dx),%es:(%edi)
das
add    %ch,(%edi)
jae    80775b7 <_IO_stdin_used+0x87f7>
jae    807756f <_IO_stdin_used+0x87af>
bound  %esi,0x73(%ebp)
das
add    %ch,(%edi)
jae    80775c1 <_IO_stdin_used+0x8801>
jae    8077579 <_IO_stdin_used+0x87b9>
arpl   %bp,0x73(%ecx,%eiz,2)
jae    807757f <_IO_stdin_used+0x87bf>
add    %ch,(%edi)
jae    80775cd <_IO_stdin_used+0x880d>
jae    8077585 <_IO_stdin_used+0x87c5>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    80775c7 <_IO_stdin_used+0x8807>
gs
das
add    %ch,(%edi)
fs
gs
jbe    8077592 <_IO_stdin_used+0x87d2>
and    $0x45440073,%eax
push   %esi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
cmp    $0x49464900,%eax
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
cmp    $0x56454400,%eax
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
cmp    $0x4a414d00,%eax
dec    %edi
push   %edx
cmp    $0x4e494d00,%eax
dec    %edi
push   %edx
cmp    $0x56454400,%eax
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
cmp    $0x25632500,%eax
imul   $0x6e006925,(%edx),%edi
gs
je     80775a4 <_IO_stdin_used+0x87e4>
and    $0x3a752563,%eax
and    $0x256e0075,%eax
jne    80775b0 <_IO_stdin_used+0x87f0>
sub    0x73253a73,%esp
add    %al,0x56(%ebp,%eax,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x42555300,%eax
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
cmp    $0x56454400,%eax
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
push   %ebx
cmp    $0x47415400,%eax
push   %ebx
cmp    $0x45535500,%eax
inc    %ebx
pop    %edi
dec    %ecx
dec    %esi
dec    %ecx
push   %esp
dec    %ecx
inc    %ecx
dec    %esp
dec    %ecx
pop    %edx
inc    %ebp
inc    %esp
cmp    $0x49524400,%eax
push   %esi
inc    %ebp
push   %edx
cmp    $0x54434100,%eax
dec    %ecx
dec    %edi
dec    %esi
cmp    $0x56454400,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
pop    %edi
dec    %edi
dec    %esp
inc    %esp
cmp    $0x56454400,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
pop    %edi
dec    %edi
dec    %esp
inc    %esp
add    %dl,0x45(%ebx)
push   %ecx
dec    %esi
push   %ebp
dec    %ebp
cmp    $0x51455300,%eax
dec    %esi
push   %ebp
dec    %ebp
add    %ah,0x44006f23
inc    %ebp
push   %esi
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
add    %al,0x56(%ebp,%eax,2)
push   %ebp
dec    %ecx
inc    %esp
cmp    $0x56454400,%eax
push   %ebp
dec    %ecx
inc    %esp
add    %al,0x56(%ebp,%eax,2)
inc    %edi
dec    %ecx
inc    %esp
cmp    $0x56454400,%eax
inc    %edi
dec    %ecx
inc    %esp
add    %al,(%eax)
cs
cs
das
jae    80776c7 <_IO_stdin_used+0x8907>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
fs
gs
jbe    80776d4 <_IO_stdin_used+0x8914>
arpl   %sp,0x2e(%ebp)
arpl   %ax,(%eax)
fs
gs
jbe    80776dd <_IO_stdin_used+0x891d>
arpl   %sp,0x20(%ebp)
and    $0x69662070,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     80776ed <_IO_stdin_used+0x892d>
and    %ah,0x20(%edx,%eiz,2)
imul   $0x6164,0x20(%ebp,%eiz,2),%bp
je     80776f3 <_IO_stdin_used+0x8933>
or     (%eax),%al
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
jbe    80776ff <_IO_stdin_used+0x893f>
insb   (%dx),%es:(%edi)
jne    8077706 <_IO_stdin_used+0x8946>
jae    80776cf <_IO_stdin_used+0x890f>
and    %ch,0x6e(%ecx)
jbe    8077709 <_IO_stdin_used+0x8949>
insb   (%dx),%es:(%edi)
imul   $0x63697665,0x64(%eax,%eiz,1),%esp
or     %gs:(%eax),%al
aam    $0x31
(bad)
lcall  *-0x2(%eax,%esi,1)
(bad)
mov    $0x5cfffe31,%esp
xor    %bh,%dh
incl   0x305cfffe(%ecx,%esi,1)
(bad)
lcall  *-0x2(%eax,%esi,1)
call   *-0x2(%ecx,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
decl   (%ecx,%esi,1)
(bad)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
lcall  *-0x2(%eax,%esi,1)
(bad)
fdivl  (%eax)
(bad)
pushl  0x64(%ebp)
gs
jbe    8077764 <_IO_stdin_used+0x89a4>
fs
gs
jbe    8077772 <_IO_stdin_used+0x89b2>
arpl   %sp,0x5f(%ebp)
outsb  %ds:(%esi),(%dx)
gs
ja     807776f <_IO_stdin_used+0x89af>
data16
jb     8077782 <_IO_stdin_used+0x89c2>
insl   (%dx),%es:(%edi)
pop    %edi
jae    8077790 <_IO_stdin_used+0x89d0>
jae    8077789 <_IO_stdin_used+0x89c9>
popa
je     8077784 <_IO_stdin_used+0x89c4>
add    %dh,0x64(%ebp)
gs
jbe    8077781 <_IO_stdin_used+0x89c1>
fs
gs
jbe    807778f <_IO_stdin_used+0x89cf>
arpl   %sp,0x5f(%ebp)
jb     8077790 <_IO_stdin_used+0x89d0>
popa
fs
pop    %edi
bound  %eax,%fs:(%eax)
das
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x6d,(%edi),%ebp
add    %ch,%fs:(%edi)
jae    80777ad <_IO_stdin_used+0x89ed>
jne    80777ae <_IO_stdin_used+0x89ee>
fs
das
arpl   %sp,0x72(%ecx)
add    %ch,%fs:(%edi)
arpl   %bp,0x6e(%edi)
je     80777bf <_IO_stdin_used+0x89ff>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
inc    %ebx
add    %ch,(%edi)
jae    80777cd <_IO_stdin_used+0x8a0d>
jae    8077785 <_IO_stdin_used+0x89c5>
jae    80777cd <_IO_stdin_used+0x8a0d>
bound  %esi,0x79(%ebx)
jae    80777d1 <_IO_stdin_used+0x8a11>
gs
insl   (%dx),%es:(%edi)
add    %ch,(%edi)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x64,(%edi),%ebp
insl   (%dx),%es:(%edi)
sub    $0x2f2e2e00,%eax
jae    80777e2 <_IO_stdin_used+0x8a22>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
push   $0x2e626477
arpl   %ax,(%eax)
bound  %esi,0x66(%ebp)
sub    $0x6e656c3e,%eax
and    %bh,(%esi)
cmp    $0x756f6320,%eax
outsb  %ds:(%esi),(%dx)
je     807779b <_IO_stdin_used+0x89db>
je     807780c <_IO_stdin_used+0x8a4c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%esi)
jb     8077817 <_IO_stdin_used+0x8a57>
imul   $0x2020203a,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x756c6c
add    %ah,0x72(%ebp)
jb     807782b <_IO_stdin_used+0x8a6b>
jb     80777de <_IO_stdin_used+0x8a1e>
jb     8077825 <_IO_stdin_used+0x8a65>
popa
imul   $0x696c2f20,%fs:0x67(%esi),%ebp
bound  %ebp,(%edi)
jne    8077831 <_IO_stdin_used+0x8a71>
gs
jbe    80777ff <_IO_stdin_used+0x8a3f>
push   $0x2e626477
bound  %ebp,0x6e(%ecx)
cmp    (%eax),%ah
and    $0x6d,%eax
add    %ah,0x72(%ebp)
jb     8077853 <_IO_stdin_used+0x8a93>
jb     8077806 <_IO_stdin_used+0x8a46>
insl   (%dx),%es:(%edi)
popa
jo     807785a <_IO_stdin_used+0x8a9a>
imul   $0x696c2f20,0x67(%esi),%ebp
bound  %ebp,(%edi)
jne    8077859 <_IO_stdin_used+0x8a99>
gs
jbe    8077827 <_IO_stdin_used+0x8a67>
push   $0x2e626477
bound  %ebp,0x6e(%ecx)
cmp    (%eax),%ah
and    $0x6d,%eax
add    %ah,0x72(%ebp)
jb     807787b <_IO_stdin_used+0x8abb>
jb     807782e <_IO_stdin_used+0x8a6e>
jb     8077875 <_IO_stdin_used+0x8ab5>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x7420676e,0x69(%edx),%edi
push   $0x6f662065
jb     807788f <_IO_stdin_used+0x8acf>
popa
je     8077845 <_IO_stdin_used+0x8a85>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x76656475,0x2f(%edx),%esp
das
push   $0x2e626477
bound  %ebp,0x6e(%ecx)
add    %al,(%eax)
imul   $0x6973,0x20(%ebp,%eiz,2),%bp
jp     80778aa <_IO_stdin_used+0x8aea>
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x756c6c38
and    %ah,0x79(%edx)
je     80778bd <_IO_stdin_used+0x8afd>
jae    8077864 <_IO_stdin_used+0x8aa4>
add    %al,(%eax)
push   $0x65646165
jb     8077883 <_IO_stdin_used+0x8ac3>
jae    80778ce <_IO_stdin_used+0x8b0e>
jp     80778cc <_IO_stdin_used+0x8b0c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x756c6c38
and    %ah,0x79(%edx)
je     80778dd <_IO_stdin_used+0x8b1d>
jae    8077884 <_IO_stdin_used+0x8ac4>
add    %al,(%eax)
jae    80778f2 <_IO_stdin_used+0x8b32>
jb     80778e9 <_IO_stdin_used+0x8b29>
outsb  %ds:(%esi),(%dx)
addr16 jae 80778a4 <_IO_stdin_used+0x8ae4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x79(%edx)
je     80778fd <_IO_stdin_used+0x8b3d>
jae    80778a4 <_IO_stdin_used+0x8ae4>
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80778c2 <_IO_stdin_used+0x8b02>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x79(%edx)
je     807791d <_IO_stdin_used+0x8b5d>
jae    80778c4 <_IO_stdin_used+0x8b04>
add    %ch,0x6e(%ecx,%ebp,2)
bound  %esi,%gs:0x66(%ebp)
pop    %edi
jb     807792a <_IO_stdin_used+0x8b6a>
insl   (%dx),%es:(%edi)
add    %dh,0x64(%ebp)
gs
jbe    807792b <_IO_stdin_used+0x8b6b>
push   $0x5f626477
outsb  %ds:(%esi),(%dx)
gs
ja     80778d5 <_IO_stdin_used+0x8b15>
jne    8077945 <_IO_stdin_used+0x8b85>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     807794d <_IO_stdin_used+0x8b8d>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    807794b <_IO_stdin_used+0x8b8b>
and    %ch,0x65(%ebp)
jae    807795e <_IO_stdin_used+0x8b9e>
popa
or     %gs:(%bx,%si),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x65(%ebp)
jae    807796f <_IO_stdin_used+0x8baf>
popa
and    %ch,%gs:0x65(%si)
outsb  %ds:(%esi),(%dx)
addr16 je 807796e <_IO_stdin_used+0x8bae>
or     (%eax),%al
insb   (%dx),%es:(%edi)
imul   $0x766564,0x75(%edx),%esp
inc    %eax
das
add    %dh,0x6e(%ebp)
jb     807797c <_IO_stdin_used+0x8bbc>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x656d2064,0x65(%edx),%edi
jae    8077997 <_IO_stdin_used+0x8bd7>
popa
and    %ch,%gs:0x65(%bx,%si)
popa
fs
gs
jb     8077939 <_IO_stdin_used+0x8b79>
add    %ch,(%esi)
cs
das
jae    80779a7 <_IO_stdin_used+0x8be7>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x632e,0x72(%edi,%ebp,2),%esi
add    %al,(%eax)
jne    80779c4 <_IO_stdin_used+0x8c04>
imul   $0x6e207473,0x61(%ebx),%esp
gs
je     80779cc <_IO_stdin_used+0x8c0c>
imul   $0x73656d20,0x6b(%esi),%ebp
jae    80779ca <_IO_stdin_used+0x8c0a>
and    %ch,%gs:0x67(%bx,%di)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80779d7 <_IO_stdin_used+0x8c17>
or     %fs:(%eax),%al
add    %al,(%eax)
add    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     80779e6 <_IO_stdin_used+0x8c26>
arpl   %sp,0x73(%ecx)
je     80779a2 <_IO_stdin_used+0x8be2>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ch,0x65(%esi)
je     80779f9 <_IO_stdin_used+0x8c39>
imul   $0x73656d20,0x6b(%esi),%ebp
jae    80779f7 <_IO_stdin_used+0x8c37>
and    %ah,%gs:0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x69(%eax)
and    %ah,%fs:0x67692064
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8077a10 <_IO_stdin_used+0x8c50>
or     %fs:(%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
gs
jb     80779da <_IO_stdin_used+0x8c1a>
arpl   %si,0x65(%edx)
fs outsb %fs:%gs:(%esi),(%dx)
je     8077a2b <_IO_stdin_used+0x8c6b>
popa
insb   (%dx),%es:(%edi)
jae    80779e6 <_IO_stdin_used+0x8c26>
jb     8077a2d <_IO_stdin_used+0x8c6d>
arpl   %sp,0x69(%ebp)
jbe    8077a32 <_IO_stdin_used+0x8c72>
fs
sub    $0x20,%al
insl   (%dx),%es:(%edi)
gs
jae    8077a47 <_IO_stdin_used+0x8c87>
popa
and    %ch,%gs:0x67(%bx,%di)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8077a43 <_IO_stdin_used+0x8c83>
or     %fs:(%eax),%al
add    %al,(%eax)
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
gs
jb     8077a0b <_IO_stdin_used+0x8c4b>
jne    8077a56 <_IO_stdin_used+0x8c96>
fs
cmp    $0x202c6425,%eax
insl   (%dx),%es:(%edi)
gs
jae    8077a6a <_IO_stdin_used+0x8caa>
popa
and    %ch,%gs:0x67(%bx,%di)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8077a66 <_IO_stdin_used+0x8ca6>
or     %fs:(%eax),%al
jne    8077a74 <_IO_stdin_used+0x8cb4>
jb     8077a6d <_IO_stdin_used+0x8cad>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x656d2064,0x65(%edx),%edi
jae    8077a88 <_IO_stdin_used+0x8cc8>
popa
and    %dh,%gs:0x69(%bp,%di)
outsb  %ds:(%si),(%dx)
popa
je     8077a95 <_IO_stdin_used+0x8cd5>
jb     8077a87 <_IO_stdin_used+0x8cc7>
and    %ch,(%eax)
and    $0x3d212078,%eax
and    %ah,0xa2978
add    %dh,0x61(%eax)
jae    8077aa7 <_IO_stdin_used+0x8ce7>
gs and %ah,%fs:%gs:0x6220697a
jns    8077ab2 <_IO_stdin_used+0x8cf2>
gs
jae    8077a61 <_IO_stdin_used+0x8ca1>
je     8077ab2 <_IO_stdin_used+0x8cf2>
and    %ch,0x65(%esi)
je     8077ab4 <_IO_stdin_used+0x8cf4>
imul   $0x6e6f6d20,0x6b(%esi),%ebp
imul   $0xa702520,0x72(%edi,%ebp,2),%esi
add    %dh,0x64(%ebp)
gs
jbe    8077abc <_IO_stdin_used+0x8cfc>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6365725f,0x72(%edi,%ebp,2),%esi
imul   $0x7665645f,%gs:0x65(%esi),%esi
imul   $0x65647500,0x65(%ebx),%esp
jbe    8077ad8 <_IO_stdin_used+0x8d18>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x616e655f,0x72(%edi,%ebp,2),%esi
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8077aef <_IO_stdin_used+0x8d2f>
arpl   %sp,0x69(%ebp)
jbe    8077af8 <_IO_stdin_used+0x8d38>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %dh,0x64(%ebp)
gs
jbe    8077b04 <_IO_stdin_used+0x8d44>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x77656e5f,0x72(%edi,%ebp,2),%esi
pop    %edi
data16
jb     8077b23 <_IO_stdin_used+0x8d63>
insl   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
je     8077b26 <_IO_stdin_used+0x8d66>
imul   $0x64665f,0x6b(%esi),%ebp
das
jae    8077b3d <_IO_stdin_used+0x8d7d>
jae    8077af5 <_IO_stdin_used+0x8d35>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
das
jne    8077b34 <_IO_stdin_used+0x8d74>
jbe    8077b36 <_IO_stdin_used+0x8d76>
outsb  %ds:(%esi),(%dx)
je     8077b33 <_IO_stdin_used+0x8d73>
jae    8077b3b <_IO_stdin_used+0x8d7b>
jno    8077b46 <_IO_stdin_used+0x8d86>
jne    8077b47 <_IO_stdin_used+0x8d87>
add    %ah,0x6f(%ebx)
jb     8077b51 <_IO_stdin_used+0x8d91>
jne    8077b51 <_IO_stdin_used+0x8d91>
je     8077b03 <_IO_stdin_used+0x8d43>
jno    8077b5a <_IO_stdin_used+0x8d9a>
gs
jne    8077b4d <_IO_stdin_used+0x8d8d>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %ch,(%esi)
cs
das
jae    8077b67 <_IO_stdin_used+0x8da7>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
jno    8077b7e <_IO_stdin_used+0x8dbe>
gs
jne    8077b71 <_IO_stdin_used+0x8db1>
arpl   %ax,%cs:(%eax)
outsl  %ds:(%esi),(%dx)
jo     8077b77 <_IO_stdin_used+0x8db7>
outsb  %ds:(%esi),(%dx)
pop    %edi
jno    8077b8b <_IO_stdin_used+0x8dcb>
gs
jne    8077b7e <_IO_stdin_used+0x8dbe>
pop    %edi
imul   $0xdc00,0x0(%ebp,%eiz,2),%bp
lcall  $0xfffe,$0x9adcfffe
lods   %ds:(%esi),%al
fwait
(bad)
jmp    *-0x67000165(%edx)
fwait
(bad)
jmp    *%esi
lcall  $0xfffe,$0x9bb6fffe
and    (%ebx),%ebp
sub    $0x403d3a2e,%eax
pop    %edi
add    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x65737520,0x64(%ebp),%esp
jb     8077b74 <_IO_stdin_used+0x8db4>
daa
and    $0x75202773,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
cs
cs
das
jae    8077bd9 <_IO_stdin_used+0x8e19>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d766564,0x75(%edx),%esp
jne    8077bef <_IO_stdin_used+0x8e2f>
imul   $0x65707300,0x63(%esi,%ebp,1),%ebp
arpl   %bp,0x66(%ecx)
imul   $0x6f726720,0x64(%ebp),%esp
jne    8077bff <_IO_stdin_used+0x8e3f>
and    %ah,(%edi)
and    $0x75202773,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
jbe    8077c01 <_IO_stdin_used+0x8e41>
insb   (%dx),%es:(%edi)
jne    8077c08 <_IO_stdin_used+0x8e48>
and    %ah,(%edi)
pop    %ebx
and    $0x73252f73,%eax
pop    %ebp
and    $0x69202773,%eax
jae    8077bd3 <_IO_stdin_used+0x8e13>
daa
and    $0xa2773,%eax
jo     8077c1c <_IO_stdin_used+0x8e5c>
je     8077c25 <_IO_stdin_used+0x8e65>
and    %ah,(%edi)
pop    %ebx
and    $0x73252f73,%eax
pop    %ebp
and    $0x69202773,%eax
jae    8077bed <_IO_stdin_used+0x8e2d>
daa
and    $0xa2773,%eax
pop    %esp
js     8077bfb <_IO_stdin_used+0x8e3b>
xor    %dh,(%edx)
js     8077bda <_IO_stdin_used+0x8e1a>
cmp    $0x33,%al
xor    %bh,(%esi)
jae    8077c59 <_IO_stdin_used+0x8e99>
jae    8077c56 <_IO_stdin_used+0x8e96>
gs
insl   (%dx),%es:(%edi)
fs
sub    $0x76656475,%eax
fs
pop    %ebx
and    $0x203a5d75,%eax
add    %al,(%eax)
add    %ah,0x72(%ebp)
jb     8077c67 <_IO_stdin_used+0x8ea7>
jb     8077c1a <_IO_stdin_used+0x8e5a>
jb     8077c61 <_IO_stdin_used+0x8ea1>
jae    8077c6d <_IO_stdin_used+0x8ead>
insb   (%dx),%es:(%edi)
jbe    8077c6a <_IO_stdin_used+0x8eaa>
outsb  %ds:(%esi),(%dx)
and    %dh,0x73(%di)
gs
jb     8077c29 <_IO_stdin_used+0x8e69>
daa
and    $0x203a2773,%eax
and    $0xa6d,%eax
gs
jb     8077c89 <_IO_stdin_used+0x8ec9>
outsl  %ds:(%esi),(%dx)
jb     8077c3a <_IO_stdin_used+0x8e7a>
jb     8077c81 <_IO_stdin_used+0x8ec1>
jae    8077c8d <_IO_stdin_used+0x8ecd>
insb   (%dx),%es:(%edi)
jbe    8077c8a <_IO_stdin_used+0x8eca>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bx)
outsl  %ds:(%esi),(%dx)
jne    8077c99 <_IO_stdin_used+0x8ed9>
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0x75000a6d,%eax
je     8077ca0 <_IO_stdin_used+0x8ee0>
insb   (%dx),%es:(%edi)
pop    %edi
jb     8077ca0 <_IO_stdin_used+0x8ee0>
jae    8077cac <_IO_stdin_used+0x8eec>
insb   (%dx),%es:(%edi)
jbe    8077ca5 <_IO_stdin_used+0x8ee5>
pop    %edi
jae    8077cb8 <_IO_stdin_used+0x8ef8>
bound  %esi,0x79(%ebx)
jae    8077ca7 <_IO_stdin_used+0x8ee7>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebp)
imul   $0x756b6f6f,0x6c(%edi,%ebx,2),%ebp
jo     8077cba <_IO_stdin_used+0x8efa>
addr16 jb 8077ccd <_IO_stdin_used+0x8f0d>
jne    8077cd0 <_IO_stdin_used+0x8f10>
add    %dh,0x74(%ebp)
imul   $0x756b6f6f,0x6c(%edi,%ebx,2),%ebp
jo     8077ccc <_IO_stdin_used+0x8f0c>
jne    8077ce2 <_IO_stdin_used+0x8f22>
gs
jb     8077c72 <_IO_stdin_used+0x8eb2>
insb   (%dx),%es:(%edi)
imul   $0x3a766564,0x75(%edx),%esp
and    %ah,0x203a73
cs
cs
das
jae    8077cf7 <_IO_stdin_used+0x8f37>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2f766564,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2e766564,0x75(%edx),%esp
arpl   %ax,(%eax)
push   %ebp
inc    %esp
inc    %ebp
push   %esi
pop    %edi
dec    %esp
dec    %edi
inc    %edi
add    %ch,(%edi)
gs
je     8077d09 <_IO_stdin_used+0x8f49>
das
jne    8077d0d <_IO_stdin_used+0x8f4d>
gs
jbe    8077cdb <_IO_stdin_used+0x8f1b>
jne    8077d12 <_IO_stdin_used+0x8f52>
gs
jbe    8077cdf <_IO_stdin_used+0x8f1f>
arpl   %bp,0x6e(%edi)
data16
add    %dh,0x64(%ebp)
gs
jbe    8077d1a <_IO_stdin_used+0x8f5a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
arpl   %si,0x73(%ebp)
je     8077d34 <_IO_stdin_used+0x8f74>
insl   (%dx),%es:(%edi)
and    %ch,0x67(%edi,%ebp,2)
imul   $0x6e756620,0x67(%bp),%ebp
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65722070
imul   $0x64657265,0x74(%bp,%di),%esi
or     (%eax),%al
add    %ch,0x69(%ebp)
jae    8077d5f <_IO_stdin_used+0x8f9f>
imul   $0x656b3c20,0x67(%esi),%ebp
jns    8077d33 <_IO_stdin_used+0x8f73>
cmp    $0x6c61763c,%eax
jne    8077d61 <_IO_stdin_used+0x8fa1>
and    %ch,%ds:0x6e(%ecx)
and    %ch,(%edi)
gs
je     8077d68 <_IO_stdin_used+0x8fa8>
das
jne    8077d6c <_IO_stdin_used+0x8fac>
gs
jbe    8077d3a <_IO_stdin_used+0x8f7a>
jne    8077d71 <_IO_stdin_used+0x8fb1>
gs
jbe    8077d3e <_IO_stdin_used+0x8f7e>
arpl   %bp,0x6e(%edi)
pop    %bx
and    $0x203b5d69,%eax
jae    8077d87 <_IO_stdin_used+0x8fc7>
imul   $0x656e696c,0x20(%eax),%esi
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    8077d98 <_IO_stdin_used+0x8fd8>
jae    8077da5 <_IO_stdin_used+0x8fe5>
outsb  %gs:(%esi),(%dx)
je     8077d55 <_IO_stdin_used+0x8f95>
jno    8077dac <_IO_stdin_used+0x8fec>
outsl  %ds:(%esi),(%dx)
je     8077da3 <_IO_stdin_used+0x8fe3>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
and    %ch,(%edi)
gs
je     8077da7 <_IO_stdin_used+0x8fe7>
das
jne    8077dab <_IO_stdin_used+0x8feb>
gs
jbe    8077d79 <_IO_stdin_used+0x8fb9>
jne    8077db0 <_IO_stdin_used+0x8ff0>
gs
jbe    8077d7d <_IO_stdin_used+0x8fbd>
arpl   %bp,0x6e(%edi)
pop    %bx
and    $0x203b5d69,%eax
jae    8077dc6 <_IO_stdin_used+0x9006>
imul   $0x656e696c,0x20(%eax),%esi
or     (%eax),%al
jne    8077dca <_IO_stdin_used+0x900a>
gs
jbe    8077dc8 <_IO_stdin_used+0x9008>
jae    8077dd0 <_IO_stdin_used+0x9010>
je     8077dcc <_IO_stdin_used+0x900c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
data16
outsb  %ds:(%esi),(%dx)
add    %dh,0x64(%ebp)
gs
jbe    8077dd8 <_IO_stdin_used+0x9018>
outsb  %ds:(%esi),(%dx)
gs
ja     8077d7d <_IO_stdin_used+0x8fbd>
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x4c455320,0x65(%edx),%edi
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     8077e07 <_IO_stdin_used+0x9047>
js     8077e18 <_IO_stdin_used+0x9058>
cmp    (%eax),%ah
and    $0x6d,%eax
add    %dl,0x75(%ebx)
arpl   %sp,0x65(%ebx)
jae    8077e26 <_IO_stdin_used+0x9066>
data16
jne    8077e22 <_IO_stdin_used+0x9062>
insb   (%dx),%es:(%edi)
jns    8077dd9 <_IO_stdin_used+0x9019>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %dl,%fs:%gs:0x45(%ebx)
dec    %esp
imul   $0x61642078,0x75(%esi),%ebp
je     8077e2d <_IO_stdin_used+0x906d>
bound  %esp,0x73(%ecx)
and    %ch,%gs:0x6e(%ecx)
and    %ah,0x73202c73
imul   $0x206e6f20,0x65(%edx),%edi
push   $0x20706165
imul   $0x2e4b6925,0x20(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
inc    %ebp
dec    %esp
imul   $0x6f532078,0x75(%esi),%ebp
arpl   %bp,0x65(%ebx)
je     8077e1f <_IO_stdin_used+0x905f>
arpl   %bp,0x6e(%edi)
je     8077e69 <_IO_stdin_used+0x90a9>
js     8077e7a <_IO_stdin_used+0x90ba>
and    %ah,0x6f(%esi)
jb     8077e2b <_IO_stdin_used+0x906b>
and    $0x69772073,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x65(%ebx)
je     8077e3a <_IO_stdin_used+0x907a>
je     8077e8b <_IO_stdin_used+0x90cb>
and    %ah,0x61460073
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8077e91 <_IO_stdin_used+0x90d1>
je     8077e4e <_IO_stdin_used+0x908e>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x69662078,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8077ea5 <_IO_stdin_used+0x90e5>
js     8077eb6 <_IO_stdin_used+0x90f6>
and    %ch,0x6e(%edi)
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8077ec1 <_IO_stdin_used+0x9101>
je     8077e7e <_IO_stdin_used+0x90be>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     8077ed0 <_IO_stdin_used+0x9110>
js     8077ee1 <_IO_stdin_used+0x9121>
and    %ch,(%eax)
and    $0x6f202973,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     8077eb7 <_IO_stdin_used+0x90f7>
and    %ah,0x6d
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8077ef5 <_IO_stdin_used+0x9135>
je     8077eb2 <_IO_stdin_used+0x90f2>
jae    8077ef9 <_IO_stdin_used+0x9139>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     8077f16 <_IO_stdin_used+0x9156>
and    %ah,0x6f662073
jb     8077eca <_IO_stdin_used+0x910a>
and    $0x25203a73,%eax
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
popa
fs
fs
jb     8077f25 <_IO_stdin_used+0x9165>
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
cmp    $0x7a697320,%eax
outsl  %gs:(%esi),(%dx)
data16
sub    %dh,0x61(%ebx)
pop    %edi
popaw
insl   (%dx),%es:(%edi)
imul   $0x2974,0x5f(%ecx,%edi,2),%ebp
cs
cs
das
jae    8077f4b <_IO_stdin_used+0x918b>
arpl   %bp,(%edi)
jae    8077f45 <_IO_stdin_used+0x9185>
popa
jb     8077f45 <_IO_stdin_used+0x9185>
fs
das
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
arpl   %ax,%cs:(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8077f62 <_IO_stdin_used+0x91a2>
and    %ah,0x69(%esi)
js     8077f18 <_IO_stdin_used+0x9158>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8077f10 <_IO_stdin_used+0x9150>
popa
fs
fs
jb     8077f15 <_IO_stdin_used+0x9155>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x0,0x72(%ecx,%ebp,2),%esp
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
je     8077f91 <_IO_stdin_used+0x91d1>
js     8077fa2 <_IO_stdin_used+0x91e2>
pop    %edi
jae    8077f96 <_IO_stdin_used+0x91d6>
je     8077f33 <_IO_stdin_used+0x9173>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
pop    %edi
imul   $0x616c,0x0(%eax),%di
bound  %esp,0x6c(%ebp)
pop    %edi
imul   $0x2e2e0074,0x69(%esi),%ebp
das
jae    8077fbf <_IO_stdin_used+0x91ff>
arpl   %bp,(%edi)
jae    8077fb9 <_IO_stdin_used+0x91f9>
popa
jb     8077fb9 <_IO_stdin_used+0x91f9>
fs
das
insl   (%dx),%es:(%edi)
imul   $0x2e,0x72(%ecx,%ebp,2),%esp
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x69,0x64(%ebp),%esp
jb     8077fc5 <_IO_stdin_used+0x9205>
jo     8077fc9 <_IO_stdin_used+0x9209>
jb     8077fcf <_IO_stdin_used+0x920f>
outsb  %ds:(%esi),(%dx)
je     8077fe0 <_IO_stdin_used+0x9220>
add    %ch,(%esi)
cs
das
jae    8077fe5 <_IO_stdin_used+0x9225>
arpl   %bp,(%edi)
jae    8077fdf <_IO_stdin_used+0x921f>
popa
jb     8077fdf <_IO_stdin_used+0x921f>
fs
das
popa
arpl   %bp,0x75(%ebp,%ebp,1)
je     8077fec <_IO_stdin_used+0x922c>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
popa
arpl   %bp,0x65(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
je     8078001 <_IO_stdin_used+0x9241>
jns    8077f91 <_IO_stdin_used+0x91d1>
popa
arpl   %bp,0x70(%edi,%ebx,2)
add    %ah,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%bx,%di)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x755f,0x64(%esi),%bp
.byte 0x69
fs
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    $0x9600000c,%eax
add    %eax,(%eax)
add    %ah,0xd7cfffd(%ecx,%esi,1)
add    %al,(%eax)
xchg   %eax,%esp
xor    %ebp,%edi
inc    %esp
arpl   %ax,(%eax)
add    %dl,0xd14fffd(,%esi,1)
add    %al,(%eax)
push   %esp
xor    $0xd40fffd,%eax
add    %al,(%eax)
je     807800f <_IO_stdin_used+0x924f>
std
lcall  *0xd(%eax)
add    %al,(%eax)
hlt
xor    $0xdacfffd,%eax
add    %al,(%eax)
adc    $0x37,%al
std
(bad)
fmull  0x38540000
std
call   *(%esi,%ecx,1)
add    %al,(%eax)
fs
cmp    %edi,%ebp
call   *0x0(%esi,%ecx,1)
add    %dh,-0x3(%edx,%edi,1)
call   *0x44740000(%esi,%ecx,1)
std
(bad)
fmuls  (%esi)
add    %al,(%eax)
in     $0x47,%al
std
pushl  (%eax)
sldt   (%eax)
add    $0x48,%al
std
incl   0x0(%edi,%ecx,1)
add    %al,(%ecx,%ecx,2)
std
lcall  *0x3400000f(%eax)
push   %ecx
std
(bad)
fmull  (%edi)
add    %al,(%eax)
push   %esp
push   %ecx
std
push   %eax
sldt   (%eax)
je     807808c <_IO_stdin_used+0x92cc>
std
decl   0x10(%eax)
add    %al,(%eax)
les    -0x3(%edx),%edx
pushl  0x0(%eax,%edx,1)
add    %dh,%ah
push   %edx
std
decl   0x64000010(%eax)
push   %ebp
std
dec    %esp
adc    %al,(%eax)
add    %al,(%esi,%edx,2)
std
decl   (%ecx,%edx,1)
add    %al,(%eax)
inc    %esp
push   %edi
std
jmp    *0x0(%ecx,%edx,1)
add    %al,-0x3(%ebx,%ebx,2)
call   *%eax
adc    %eax,(%eax)
add    %ah,%ah
pop    %ebp
std
call   *(%edx,%edx,1)
add    %al,(%eax)
hlt
addr16 std
call   *0x0(%edx,%edx,1)
add    %dl,-0x3(%edi,%ebp,2)
lcall  *-0x5bffffee(%eax)
jo     8078088 <_IO_stdin_used+0x92c8>
(bad)
fcoms  (%edx)
add    %al,(%eax)
hlt
jo     8078090 <_IO_stdin_used+0x92d0>
incl   (%ebx,%edx,1)
add    %al,(%eax)
les    -0x1(%ebp,%edi,8),%esi
dec    %eax
adc    (%eax),%eax
add    %ah,0x138cfffd(%ecx,%edi,2)
add    %al,(%eax)
adc    $0x7a,%al
std
pushl  -0x3bffffed(%eax)
jl     80780b0 <_IO_stdin_used+0x92f0>
push   %esp
adc    (%eax),%eax
add    %dl,-0x3(%ebp,%edi,2)
pushl  (%eax)
adc    $0x0,%al
add    %ah,0x145cfffd(%ebp,%edi,2)
add    %al,(%eax)
xchg   %eax,%esp
test   %edi,%ebp
jmp    *-0x1bffffec(%eax)
xchg   %bh,%ch
jmp    *%eax
adc    $0x0,%al
add    %dl,-0x3(%ebp,%edx,4)
jmp    *-0x619c0000(,%edx,1)
std
ljmp   *0x15(%eax)
add    %al,(%eax)
je     8078089 <_IO_stdin_used+0x92c9>
std
jmp    *-0x2bffffeb(%eax)
movsb  %ds:(%esi),%es:(%edi)
std
jmp    *%esp
adc    $0xa9340000,%eax
std
ljmp   *(%eax)
push   %ss
add    %al,(%eax)
xor    $0xaa,%al
std
ljmp   *0x16(%eax)
add    %al,(%eax)
test   %ch,0x16acfffd(%esi)
add    %al,(%eax)
les    0x16f0fffd(%edi),%ebp
add    %al,(%eax)
push   %esp
mov    $0xfd,%al
pushl  (%eax)
pop    %ss
add    %al,(%eax)
aam    $0xb2
std
pushl  0x0(%edi,%edx,1)
add    %ah,0x17b4fffd(%esp,%esi,4)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xfd,%dh
push   %esp
pop    %ss
add    %al,(%eax)
aam    $0xb6
std
ljmp   *(%eax)
sbb    %al,(%eax)
add    %dh,0x1868fffd(%edx,%edi,4)
add    %al,(%eax)
inc    %esp
mov    $0x1894fffd,%ebx
add    %al,(%eax)
mov    $0xda,%ah
std
(bad)
fcomps (%eax)
add    %al,(%eax)
and    $0xdc,%al
std
lcall  *(%ecx,%ebx,1)
add    %al,(%eax)
xchg   %eax,%esp
fdivr  %st,%st(5)
decl   0x19(%eax)
add    %al,(%eax)
adc    $0xde,%al
std
decl   -0x5bffffe7(%eax)
loope  8078170 <_IO_stdin_used+0x93b0>
(bad)
clc
sbb    %eax,(%eax)
add    %al,%ah
add    %bh,%dh
(bad)
cmp    $0x1a,%al
add    %al,(%eax)
inc    %esp
add    %dh,%bh
incl   -0x5bffffe6(%eax)
add    %dh,%bh
ljmp   *0x3d40000(%edx,%ebx,1)
(bad)
jmp    *%esp
sbb    (%eax),%al
add    %dh,%ah
add    %esi,%edi
(bad)
cld
sbb    (%eax),%al
add    %dl,(%esp,%eax,1)
(bad)
call   *(%eax)
sbb    (%eax),%eax
add    %al,-0x2(%esp,%eax,1)
ljmp   *(%eax)
sbb    (%eax),%eax
add    %dh,-0x2(%esp,%eax,1)
incl   0x1b(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0xfe,%al
lcall  *0x1b(%eax)
add    %al,(%eax)
les    (%esi,%edi,8),%eax
ljmp   *0x0(%ebx,%ebx,1)
add    %ah,%ah
add    $0xfe,%al
incl   0x1400001b(%eax)
add    $0x1b98fffe,%eax
add    %al,(%eax)
inc    %esp
add    $0x1bb0fffe,%eax
add    %al,(%eax)
xchg   %eax,%esp
add    $0x1becfffe,%eax
add    %al,(%eax)
in     $0x5,%al
(bad)
ljmp   *(%eax)
sbb    $0x0,%al
add    %dl,-0x2(%esi,%eax,1)
jmp    *0x0(%esp,%ebx,1)
add    %dh,-0x2(%esi,%eax,1)
(bad)
js     807821a <_IO_stdin_used+0x945a>
add    %al,(%eax)
xchg   %eax,%esp
push   %es
(bad)
decl   0x7440000(%esp,%ebx,1)
(bad)
inc    %esp
sbb    $0x0,%al
add    %ah,(%eax,%ecx,1)
(bad)
incl   0x8990000(,%ebx,1)
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %bh,%dh
call   *0x0(%ebp,%ebx,1)
add    %dl,0x1d94fffe(%ecx,%ecx,1)
add    %al,(%eax)
add    $0xa,%al
(bad)
(bad)
call   3c078256 <_end+0x33ff49c6>
or     %dh,%bh
decl   (%eax)
push   %ds
add    %al,(%eax)
fs
or     %dh,%bh
ljmp   *(%eax)
push   %ds
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %dh,%bh
call   *0x0(%esi,%ebx,1)
add    %ah,%ah
or     %esi,%edi
ljmp   *0xf040000(%esi,%ebx,1)
(bad)
push   %eax
push   %ds
add    %al,(%eax)
hlt
adc    %edi,%esi
pushl  (%edi,%ebx,1)
add    %al,(%eax)
and    $0x16,%al
(bad)
call   *-0x6bffffe1(%eax)
sbb    %esi,%edi
call   *%esp
pop    %ds
add    %al,(%eax)
je     8078296 <_IO_stdin_used+0x94d6>
(bad)
decl   (%eax,%eiz,1)
add    %al,(%eax)
je     80782ad <_IO_stdin_used+0x94ed>
(bad)
decl   0x0(%eax,%eiz,1)
add    %dl,%ah
sub    %esi,%edi
decl   -0x7bffffe0(%eax)
sub    $0xfe,%al
inc    %eax
and    %al,(%eax)
add    %dl,0x20f8fffe(,%ebp,1)
add    %al,(%eax)
in     $0x3b,%al
(bad)
(bad)
cmp    $0x21,%al
add    %al,(%eax)
fs
ds
(bad)
incl   0x54000021(%eax)
dec    %esp
(bad)
inc    %esp
and    %eax,(%eax)
add    %al,0x2218fffe(,%ecx,2)
add    %al,(%eax)
xor    $0x52,%al
(bad)
lcall  *0x0(%edx,%eiz,1)
add    %dl,0x2280fffe(%edx,%edx,2)
add    %al,(%eax)
hlt
push   %edx
(bad)
jmp    *0x53440000(%edx,%eiz,1)
(bad)
dec    %eax
and    (%eax),%al
add    %al,(%esp,%edx,2)
(bad)
push   %esp
and    (%eax),%al
add    %al,(%edi,%edx,2)
(bad)
decl   0x0(%ebx,%eiz,1)
add    %al,%ah
pop    %ebx
(bad)
call   *-0x1bffffdd(%eax)
pop    %edi
(bad)
(bad)
call   2c078324 <_end+0x23ff4a94>
(bad)
(bad)
incl   0x24(%eax)
add    %al,(%eax)
fs
gs
(bad)
lcall  *-0x5bffffdc(%eax)
gs
(bad)
(bad)
mov    $0x64000024,%esp
data16
(bad)
(bad)
call   3c078345 <_end+0x33ff4ab5>
addr16 (bad)
jmp    *(%eax)
and    $0x67640000,%eax
(bad)
pushl  0x68440000(,%eiz,1)
(bad)
jmp    *0x25(%eax)
add    %al,(%eax)
xchg   %eax,%esp
imul   $0x2590ff,%esi,%edi
add    %al,(%edx,%ebp,2)
(bad)
pushl  0x6a940000(%ebp,%eiz,1)
(bad)
push   %esp
and    $0x6bb40000,%eax
(bad)
decl   0x0(%esi,%eiz,1)
add    %al,0x26b4fffe(%esp,%ebp,2)
add    %al,(%eax)
adc    $0x70,%al
(bad)
jmp    *%esp
add    %al,%es:(%eax)
les    -0x2(%eax),%esi
lcall  *(%edi,%eiz,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jno    8078371 <_IO_stdin_used+0x95b1>
call   *0x0(%edi,%eiz,1)
add    %al,-0x2(%edx,%esi,2)
decl   0x72840000(%edi,%eiz,1)
(bad)
(bad)
mov    $0xc4000027,%eax
je     8078389 <_IO_stdin_used+0x95c9>
(bad)
cld
daa
add    %al,(%eax)
test   %dh,-0x2(%esi)
call   *0x0(%eax,%ebp,1)
add    %al,-0x2(%edi,%esi,2)
call   *0x77c40000(%eax,%ebp,1)
(bad)
(bad)
call   2c0783d1 <_end+0x23ff4b41>
jns    80783a9 <_IO_stdin_used+0x95e9>
ljmp   *(%eax)
sub    %eax,(%eax)
add    %dl,-0x2(%ebx,%edi,2)
incl   -0x2bffffd7(%eax)
cmp    $0x29c0ff,%esi
add    %ah,(%edx,%eax,4)
(bad)
jmp    *%eax
sub    %eax,(%eax)
add    %dh,(%edx,%eax,4)
(bad)
push   %esp
sub    %eax,(%eax)
add    %dl,-0x2(%edx,%eax,4)
decl   (%eax)
sub    (%eax),%al
add    %ah,-0x2(%ebx,%eax,4)
(bad)
cmp    %ch,(%edx)
add    %al,(%eax)
les    0x2a68ff(%esi,%edi,8),%eax
add    %dl,-0x2(%ebp,%eax,4)
ljmp   *0x1400002a(%eax)
xchg   %bh,%dh
incl   (%eax)
sub    (%eax),%eax
add    %dh,%ah
xchg   %bh,%dh
decl   0x2b(%eax)
add    %al,(%eax)
and    $0x87,%al
(bad)
jmp    *0x0(%ebx,%ebp,1)
add    %dl,-0x2(%edi,%eax,4)
incl   -0x775c0000(%ebx,%ebp,1)
(bad)
inc    %esp
sub    (%eax),%eax
add    %dl,%ah
mov    %bh,%dh
jmp    *%esp
sub    (%eax),%eax
add    %ah,(%ecx,%ecx,4)
(bad)
lcall  *(%esp,%ebp,1)
add    %al,(%eax)
xor    $0x8a,%al
(bad)
pushl  0x0(%esp,%ebp,1)
add    %ah,%ah
mov    %dh,%bh
(bad)
mov    $0x1400002c,%esp
mov    %esi,%edi
jmp    *%eax
sub    $0x0,%al
add    %dl,-0x2(%ebx,%ecx,4)
decl   -0x747c0000(,%ebp,1)
(bad)
(bad)
cmp    %ch,0x8ba40000
(bad)
decl   0x0(%ebp,%ebp,1)
add    %ah,-0x2(%esp,%ecx,4)
decl   -0x734c0000(%ebp,%ebp,1)
(bad)
pushl  0x1400002d(%eax)
(bad)
(bad)
(bad)
call   8c07849e <_end+0x83ff4c0e>
(bad)
(bad)
jmp    *(%esi,%ebp,1)
add    %al,(%eax)
aam    $0x8f
(bad)
ljmp   *0x2e(%eax)
add    %al,(%eax)
fs
xchg   %eax,%ecx
(bad)
ljmp   *-0x660c0000(%esi,%ebp,1)
(bad)
push   %eax
add    %al,%cs:(%eax)
xchg   %eax,%esp
lcall  $0x0,$0x2f18fffe
hlt
lcall  $0x0,$0x2f54fffe
add    $0x9f,%al
(bad)
call   *-0x608c0000(%edi,%ebp,1)
(bad)
(bad)
mov    $0x7400002f,%eax
mov    0x2ff8fffe,%al
add    %al,(%eax)
mov    $0xa0,%ah
(bad)
call   *(%eax)
xor    %al,(%eax)
add    %dh,%ah
mov    0x302cfffe,%al
add    %al,(%eax)
je     807846b <_IO_stdin_used+0x96ab>
(bad)
call   *0x30(%eax)
add    %al,(%eax)
aam    $0xa1
(bad)
pushl  0x0(%eax,%esi,1)
add    %dl,(%edx,%eiz,4)
(bad)
call   *0x64000030(%eax)
mov    %al,0x30b0fffe
add    %al,(%eax)
xchg   %eax,%esp
mov    %al,0x30d0fffe
add    %al,(%eax)
and    $0xa3,%al
(bad)
lcall  *(%eax)
xor    %eax,(%eax)
add    %dl,-0x2(%ebx,%eiz,4)
pushl  (%ecx,%esi,1)
add    %al,(%eax)
add    $0xa5,%al
(bad)
pushl  0x31(%eax)
add    %al,(%eax)
adc    $0xa5,%al
(bad)
incl   -0x5a7c0000(%ecx,%esi,1)
(bad)
pushl  0x4000031(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
jmp    *%eax
xor    %eax,(%eax)
add    %dl,0x3228fffe(%esi,%eiz,4)
add    %al,(%eax)
mov    $0xa7,%ah
(bad)
call   *0x4000032(%eax)
test   $0xfe,%al
(bad)
fdivs  (%edx)
add    %al,(%eax)
aam    $0xa9
(bad)
pushl  (%eax)
xor    (%eax),%eax
add    %dh,(%edx,%ebp,4)
(bad)
jmp    *0x0(%ebx,%esi,1)
add    %ah,%ah
stos   %al,%es:(%edi)
(bad)
jmp    *-0x54ec0000(%ebx,%esi,1)
(bad)
inc    %esp
xor    (%eax),%eax
add    %dl,-0x2(%ebx,%ebp,4)
push   %eax
xor    (%eax),%eax
add    %al,-0x2(%esi,%ebp,4)
decl   0x34(%eax)
add    %al,(%eax)
xchg   %eax,%esp
scas   %es:(%edi),%al
(bad)
(bad)
jl     80785a2 <_IO_stdin_used+0x97e2>
add    %al,(%eax)
fs
scas   %es:(%edi),%eax
(bad)
call   *%esp
xor    $0x0,%al
add    %dl,0x34e8fffe(%edi,%ebp,4)
add    %al,(%eax)
mov    $0xb0,%ah
(bad)
incl   0x35(%eax)
add    %al,(%eax)
aam    $0xb0
(bad)
lcall  *0x35(%eax)
add    %al,(%eax)
test   %dh,0x3598fffe(%ecx)
add    %al,(%eax)
les    0x35c4fffe(%ecx),%esi
add    %al,(%eax)
test   %dh,0x3644fffe(%edx)
add    %al,(%eax)
add    $0xb3,%al
(bad)
decl   -0x4cbc0000(%esi,%esi,1)
(bad)
(bad)
mov    $0x74000036,%eax
mov    $0xfe,%bl
call   *%eax
add    %al,%ss:(%eax)
mov    $0xb3,%ah
(bad)
(bad)
cld
add    %al,%ss:(%eax)
mov    $0xb4,%ah
(bad)
call   *0x0(%edi,%esi,1)
add    %dl,0x3780fffe(,%esi,4)
add    %al,(%eax)
and    $0xb9,%al
(bad)
(bad)
fdivl  (%edi)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x3808fffe,%ecx
add    %al,(%eax)
in     $0xb9,%al
(bad)
pushl  (%eax,%edi,1)
add    %al,(%eax)
mov    $0xba,%ah
(bad)
decl   -0x43ec0000(%eax,%edi,1)
(bad)
jmp    *%esp
cmp    %al,(%eax)
add    %al,%ah
mov    $0x3914fffe,%esp
add    %al,(%eax)
xor    $0xbd,%al
(bad)
(bad)
cmp    %bh,(%ecx)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x3970fffe,%ebp
add    %al,(%eax)
test   %bh,0x39b8fffe(%esi)
add    %al,(%eax)
je     80785e1 <_IO_stdin_used+0x9821>
(bad)
call   *(%eax)
cmp    (%eax),%al
add    %dl,(%eax,%eax,8)
(bad)
incl   0x3a(%eax)
add    %al,(%eax)
test   %al,%al
(bad)
call   *-0x3eec0000(%edx,%edi,1)
(bad)
inc    %esp
cmp    (%eax),%al
add    %dl,(%edx,%eax,8)
(bad)
lcall  *(%ebx,%edi,1)
add    %al,(%eax)
fs
ret    $0xfffe
dec    %eax
cmp    (%eax),%eax
add    %dl,(%ebx,%eax,8)
(bad)
jmp    *-0x6bffffc5(%eax)
ret
(bad)
inc    %esp
cmp    (%eax),%eax
add    %ah,(%esp,%eax,8)
(bad)
incl   (%eax)
cmp    $0x0,%al
add    %ah,0x3c30fffe(%esp,%eax,8)
add    %al,(%eax)
inc    %esp
(bad)
(bad)
decl   0x1400003c(%eax)
(bad)
(bad)
push   %esp
cmp    $0x0,%al
add    %dh,-0x2(%edi,%eax,8)
ljmp   *-0x37cc0000(,%edi,1)
(bad)
pushl  0x0(%ebp,%edi,1)
add    %ah,%ah
enter  $0xfffe,$0xb4
cmp    $0xc9a40000,%eax
(bad)
decl   (%esi,%edi,1)
add    %al,(%eax)
and    $0xca,%al
(bad)
call   *0x0(%esi,%edi,1)
add    %al,0x3ea8fffe(%edx,%ecx,8)
add    %al,(%eax)
fs
lret
(bad)
jmp    *%eax
add    %al,%ds:(%eax)
je     8078686 <_IO_stdin_used+0x98c6>
(bad)
jmp    *(%eax)
aas
add    %al,(%eax)
(bad)
sar    %esi
jmp    *0x0(%edi,%edi,1)
add    %dl,-0x2(%edx,%edx,8)
call   *-0x2cfc0000(%edi,%edi,1)
(bad)
dec    %esp
aas
add    %al,(%eax)
adc    $0xd3,%al
(bad)
jmp    *%eax
aas
add    %al,(%eax)
xor    $0xd3,%al
(bad)
push   %esp
aas
add    %al,(%eax)
push   %esp
sar    %cl,%esi
decl   (%eax)
inc    %eax
add    %al,(%eax)
je     80786c6 <_IO_stdin_used+0x9906>
(bad)
pushl  (%eax,%eax,2)
add    %al,(%eax)
xchg   %eax,%esp
aam    $0xfe
decl   0x40(%eax)
add    %al,(%eax)
mov    $0xd4,%ah
(bad)
lcall  *0x0(%eax,%eax,2)
add    %dh,(%esi,%edx,8)
(bad)
lcall  *-0x29ac0000(%eax,%eax,2)
(bad)
pushl  0x74000040(%eax)
(bad)
(bad)
inc    %esp
inc    %eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
jmp    *%esp
inc    %eax
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
clc
inc    %eax
add    %al,(%eax)
in     $0xd6,%al
(bad)
decl   (%ecx,%eax,2)
add    %al,(%eax)
and    $0xd9,%al
(bad)
decl   0x0(%ecx,%eax,2)
add    %al,-0x2(%ebx,%ebx,8)
call   *-0x6bffffbf(%eax)
(bad)
(bad)
mov    $0xe4000041,%esp
(bad)
(bad)
faddl  0x0(%ecx)
add    %dh,%ah
(bad)
push   %eax
inc    %ecx
add    %al,(%eax)
test   %bl,%ah
(bad)
ljmp   *(%eax)
inc    %edx
add    %al,(%eax)
mov    $0xdc,%ah
(bad)
decl   0x42(%eax)
add    %al,(%eax)
aam    $0xdc
(bad)
lcall  *0x0(%edx,%eax,2)
add    %dh,%ah
fdivr  %st,%st(6)
pushl  0x42(%eax)
add    %al,(%eax)
xor    $0xe0,%al
(bad)
pushl  -0x1f6c0000(%edx,%eax,2)
(bad)
jmp    *%eax
inc    %edx
add    %al,(%eax)
aam    $0xe0
(bad)
decl   (%ebx,%eax,2)
add    %al,(%eax)
xor    $0xe1,%al
(bad)
(bad)
cmp    %al,0x0(%ebx)
add    %al,0x4378fffe(%ebx,%eiz,8)
add    %al,(%eax)
add    $0xe4,%al
(bad)
jmp    *-0x1b9c0000(%ebx,%eax,2)
(bad)
call   *%esp
inc    %ebx
add    %al,(%eax)
hlt
in     $0xfe,%eax
call   *(%esp,%eax,2)
add    %al,(%eax)
push   %esp
out    %al,$0xfe
decl   0x0(%esp,%eax,2)
add    %ah,%ah
out    %al,$0xfe
incl   -0x187c0000(%esp,%eax,2)
(bad)
(bad)
mov    $0x14000044,%esp
jmp    4d0887dc <_end+0x45004f4c>
add    %al,(%eax)
xor    $0xea,%al
(bad)
incl   0x45(%eax)
add    %al,(%eax)
aam    $0xea
(bad)
(bad)
js     8078833 <_IO_stdin_used+0x9a73>
add    %al,(%eax)
hlt
jmp    80787f1 <_IO_stdin_used+0x9a31>
call   *%eax
inc    %ebp
add    %al,(%eax)
push   %esp
out    %al,(%dx)
(bad)
call   *(%esi,%eax,2)
add    %al,(%eax)
push   %esp
out    %eax,(%dx)
(bad)
call   *0x0(%esi,%eax,2)
add    %al,(%ebx,%esi,8)
(bad)
lcall  *-0x4bffffba(%eax)
repz (bad)
(bad)
fadds  0x0(%esi)
add    %al,(%esp,%esi,8)
(bad)
decl   (%eax)
inc    %edi
add    %al,(%eax)
mov    $0xf4,%ah
(bad)
call   *0x47(%eax)
add    %al,(%eax)
push   %esp
idiv   %esi
call   *-0x88c0000(%edi,%eax,2)
(bad)
ljmp   *-0x4bffffb9(%eax)
idiv   %esi
call   *%esp
inc    %edi
add    %al,(%eax)
in     $0xf9,%al
(bad)
call   *(%eax,%ecx,2)
add    %al,(%eax)
inc    %esp
cli
(bad)
decl   0x0(%eax,%ecx,2)
add    %dh,(%esp,%edi,8)
(bad)
decl   -0x37c0000(%eax,%ecx,2)
(bad)
(bad)
mov    $0x24000048,%eax
std
(bad)
decl   (%ecx,%ecx,2)
add    %al,(%eax)
push   %esp
std
(bad)
(bad)
cmp    %cl,0x0(%ecx)
add    %al,0x4964fffe(%ebp,%edi,8)
add    %al,(%eax)
mov    $0xfd,%ah
(bad)
call   *0x14000049(%eax)
(bad)
(bad)
dec    %esp
dec    %ecx
add    %al,(%eax)
je     8078888 <_IO_stdin_used+0x9ac8>
(bad)
(bad)
cld
dec    %ecx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0xff,%al
(bad)
cmp    $0x4a,%al
add    %al,(%eax)
hlt
add    $0xff,%al
ljmp   *0x4a(%eax)
add    %al,(%eax)
push   %esp
push   %es
(bad)
inc    %eax
dec    %edx
add    %al,(%eax)
test   %al,(%esi)
(bad)
jmp    *%esp
dec    %edx
add    %al,(%eax)
hlt
push   %es
(bad)
lcall  *(%ebx,%ecx,2)
add    %al,(%eax)
xor    $0x7,%al
(bad)
decl   0x4b(%eax)
add    %al,(%eax)
je     80788c9 <_IO_stdin_used+0x9b09>
(bad)
pushl  0x0(%ebx,%ecx,2)
add    %al,0x4b88ffff(%edi,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
pop    %es
(bad)
lcall  *0x7f40000(%ebx,%ecx,2)
(bad)
call   *%eax
dec    %ebx
add    %al,(%eax)
xchg   %eax,%esp
or     %bh,%bh
call   *(%eax)
dec    %esp
add    %al,(%eax)
adc    $0x9,%al
(bad)
decl   0x4c(%eax)
add    %al,(%eax)
xor    $0xa,%al
(bad)
decl   -0x6bffffb4(%eax)
or     %bh,%bh
inc    %eax
dec    %esp
add    %al,(%eax)
fs
or     %edi,%edi
call   *0xbb40000(,%ecx,2)
(bad)
decl   0x4d(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     $0xff,%al
lcall  *0xe340000(%ebp,%ecx,2)
(bad)
jmp    *%eax
dec    %ebp
add    %al,(%eax)
aam    $0xe
(bad)
lcall  *(%eax)
dec    %esi
add    %al,(%eax)
aam    $0xf
(bad)
ljmp   *0x0(%esi,%ecx,2)
add    %dl,0x4eb0ffff(%edx,%edx,1)
add    %al,(%eax)
xchg   %eax,%esp
adc    %edi,%edi
push   %eax
dec    %esi
add    %al,(%eax)
mov    $0x14,%ah
(bad)
ljmp   *(%eax)
dec    %edi
add    %al,(%eax)
mov    $0x15,%ah
(bad)
jmp    *0x4f(%eax)
add    %al,(%eax)
add    $0x19,%al
(bad)
jmp    *0x5400004f(%eax)
sbb    %edi,%edi
inc    %esp
dec    %edi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    %edi,%edi
(bad)
call   fc0789b8 <_end+0xf3ff5128>
sbb    %edi,%edi
decl   (%eax,%edx,2)
add    %al,(%eax)
inc    %esp
sbb    %bh,%bh
pushl  (%eax)
push   %eax
add    %al,(%eax)
xchg   %eax,%esp
sbb    %bh,%bh
call   *0x0(%eax,%edx,2)
add    %ah,%ah
sbb    %bh,%bh
(bad)
js     80789d6 <_IO_stdin_used+0x9c16>
add    %al,(%eax)
inc    %esp
sbb    %edi,%edi
inc    %eax
push   %eax
add    %al,(%eax)
xchg   %eax,%esp
sbb    %edi,%edi
jmp    *%esp
push   %eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0xff,%al
ljmp   *(%ecx,%edx,2)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0x516cffff,%eax
add    %al,(%eax)
push   %esp
push   %ds
(bad)
jmp    *0x1e940000(%ecx,%edx,2)
(bad)
inc    %eax
push   %ecx
add    %al,(%eax)
mov    $0x20,%ah
(bad)
lcall  *(%eax)
push   %edx
add    %al,(%eax)
test   %ah,(%edi,%edi,8)
lcall  *0x0(%edx,%edx,2)
add    %al,0x5288ffff(,%eiz,1)
add    %al,(%eax)
fs
sub    %bh,%bh
dec    %eax
push   %edx
add    %al,(%eax)
add    $0x29,%al
(bad)
jmp    *(%eax)
push   %ebx
add    %al,(%eax)
je     8078a0b <_IO_stdin_used+0x9c4b>
(bad)
lcall  *0x53(%eax)
add    %al,(%eax)
hlt
sub    %edi,%edi
ljmp   *0x2a040000(%ebx,%edx,2)
(bad)
inc    %eax
push   %ebx
add    %al,(%eax)
adc    $0x2a,%al
(bad)
call   *%esp
push   %ebx
add    %al,(%eax)
xor    $0x2a,%al
(bad)
(bad)
call   dc078a5c <_end+0xd3ff51cc>
sub    %bh,%bh
ljmp   *(%eax)
push   %esp
add    %al,(%eax)
hlt
sub    %bh,%bh
incl   0x0(%esp,%edx,2)
add    %dl,(%ebx,%ebp,1)
(bad)
lcall  *0x54(%eax)
add    %al,(%eax)
add    $0x2d,%al
(bad)
dec    %eax
push   %esp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sub    $0x5504ffff,%eax
add    %al,(%eax)
in     $0x2d,%al
(bad)
(bad)
cmp    $0x55,%al
add    %al,(%eax)
add    $0x2e,%al
(bad)
call   *0x55(%eax)
add    %al,(%eax)
je     8078a70 <_IO_stdin_used+0x9cb0>
(bad)
incl   0x2ec40000(%ebp,%edx,2)
(bad)
pushl  -0x1bffffab(%eax)
cs
(bad)
inc    %esp
push   %ebp
add    %al,(%eax)
add    $0x2f,%al
(bad)
(bad)
fcoms  0x0(%ebp)
add    %ah,(%edi,%ebp,1)
(bad)
(bad)
in     (%dx),%al
push   %ebp
add    %al,(%eax)
inc    %esp
das
(bad)
incl   (%eax)
push   %esi
add    %al,(%eax)
aam    $0x30
(bad)
lcall  *0x56(%eax)
add    %al,(%eax)
add    $0x31,%al
(bad)
(bad)
js     8078ad4 <_IO_stdin_used+0x9d14>
add    %al,(%eax)
les    (%edi,%edi,8),%esi
call   *%eax
push   %esi
add    %al,(%eax)
xor    $0x36,%al
(bad)
decl   (%eax)
push   %edi
add    %al,(%eax)
test   %dh,(%esi)
(bad)
ljmp   *(%edi,%edx,2)
add    %al,(%eax)
hlt
ss
(bad)
lcall  *0x57(%eax)
add    %al,(%eax)
adc    $0x37,%al
(bad)
ljmp   *0x0(%edi,%edx,2)
add    %al,(%esi,%edi,1)
(bad)
pushl  0x54000057(%eax)
ds
(bad)
call   *%esp
push   %edi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
ds
(bad)
(bad)
clc
push   %edi
add    %al,(%eax)
adc    $0x3f,%al
(bad)
pushl  (%eax)
pop    %eax
add    %al,(%eax)
fs
aas
(bad)
lcall  *0x0(%eax,%ebx,2)
add    %dl,(%eax,%eax,2)
(bad)
lcall  *0x40440000(%eax,%ebx,2)
(bad)
(bad)
mov    $0x94000058,%esp
inc    %eax
(bad)
(bad)
fcompl 0x0(%eax)
add    %al,-0x1(%ecx,%eax,2)
lcall  *(%ecx,%ebx,2)
add    %al,(%eax)
in     $0x41,%al
(bad)
decl   0x59(%eax)
add    %al,(%eax)
aam    $0x42
(bad)
(bad)
js     8078b57 <_IO_stdin_used+0x9d97>
add    %al,(%eax)
les    -0x1(%ebx),%eax
call   *%eax
pop    %ecx
add    %al,(%eax)
je     8078b4f <_IO_stdin_used+0x9d8f>
(bad)
(bad)
cmp    $0x5a,%al
add    %al,(%eax)
and    $0x47,%al
(bad)
incl   -0x7bffffa6(%eax)
inc    %edi
(bad)
call   *0x48f40000(%edx,%ebx,2)
(bad)
jmp    *%esp
pop    %edx
add    %al,(%eax)
test   %cl,-0x1(%ecx)
jmp    *(%eax)
pop    %ebx
add    %al,(%eax)
je     8078b7c <_IO_stdin_used+0x9dbc>
(bad)
jmp    *0x5b(%eax)
add    %al,(%eax)
add    $0x4c,%al
(bad)
call   *-0x5bffffa5(%eax)
dec    %ebp
(bad)
(bad)
call   8c078ba4 <_end+0x83ff5314>
push   %eax
(bad)
ljmp   *(%esp,%ebx,2)
add    %al,(%eax)
je     8078ba3 <_IO_stdin_used+0x9de3>
(bad)
ljmp   *0x0(%esp,%ebx,2)
add    %dl,0x5cacffff(%edx,%edx,2)
add    %al,(%eax)
inc    %esp
push   %ebx
(bad)
jmp    *%esp
pop    %esp
add    %al,(%eax)
aam    $0x53
(bad)
jmp    *(%eax)
pop    %ebp
add    %al,(%eax)
xor    $0x54,%al
(bad)
lcall  *0x0(%ebp,%ebx,2)
add    %ah,-0x1(%ebp,%edx,2)
lcall  *0x56540000(%ebp,%ebx,2)
(bad)
(bad)
fcompl 0x0(%ebp)
add    %dh,0x5e34ffff(%edi,%edx,2)
add    %al,(%eax)
je     8078bea <_IO_stdin_used+0x9e2a>
(bad)
pushl  0x0(%esi,%ebx,2)
add    %ah,(%ecx,%ebx,2)
(bad)
pushl  0x4400005e(%eax)
pop    %edx
(bad)
push   %eax
pop    %esi
add    %al,(%eax)
mov    $0x5a,%ah
(bad)
lcall  *(%edi,%ebx,2)
add    %al,(%eax)
add    $0x5b,%al
(bad)
pushl  (%edi,%ebx,2)
add    %al,(%eax)
push   %esp
pop    %ebx
(bad)
jmp    *0x5f(%eax)
add    %al,(%eax)
fs
pop    %ebx
(bad)
pushl  0x0(%edi,%ebx,2)
add    %dl,%ah
pop    %ebx
(bad)
ljmp   *0x400005f(%eax)
pop    %esp
(bad)
dec    %eax
pop    %edi
add    %al,(%eax)
test   %bl,-0x1(%edi,%edi,8)
hlt
pop    %edi
add    %al,(%eax)
adc    $0x5d,%al
(bad)
ljmp   *(%eax,%eiz,2)
add    %al,(%eax)
xor    $0x60,%al
(bad)
pushl  0x60(%eax)
add    %al,(%eax)
push   %esp
(bad)
(bad)
jmp    *-0x1bffffa0(%eax)
arpl   %di,%di
jmp    *%eax
pusha
add    %al,(%eax)
adc    $0x64,%al
(bad)
incl   (%eax)
popa
add    %al,(%eax)
adc    $0x65,%al
(bad)
pushl  (%eax)
popa
add    %al,(%eax)
inc    %esp
gs
(bad)
call   *0x61(%eax)
add    %al,(%eax)
adc    $0x67,%al
(bad)
(bad)
mov    $0x14000061,%esp
imul   $0x61ecff,%edi,%edi
add    %dh,(%ecx,%ebp,2)
(bad)
incl   (%eax)
bound  %eax,(%eax)
add    %dl,-0x1(%ecx,%ebp,2)
call   *(%edx,%eiz,2)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
imul   $0x6240ff,%edi,%edi
add    %dl,%ah
push   $0xffffffff
incl   0x4000062(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
in     (%dx),%al
bound  %eax,(%eax)
add    %ah,-0x1(%ebp,%ebp,2)
lcall  *0x63(%eax)
add    %al,(%eax)
aam    $0x6d
(bad)
call   *0x6de40000(%ebx,%eiz,2)
(bad)
.byte 0xff
test   $0x63,%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8078c7f <_IO_stdin_used+0x9ebf>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    %bl,(%eax)
std
call   *0xc(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8078c9f <_IO_stdin_used+0x9edf>
js     8078c9d <_IO_stdin_used+0x9edd>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8078cbf <_IO_stdin_used+0x9eff>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
clc
daa
std
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37104(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
or     $0x28,%al
std
call   *0x0
inc    %ebx
push   %cs
and    %dl,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pusha
add    %al,(%eax)
add    %dl,(%eax,%ebp,1)
std
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    0xe(%esi),%dh
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
and    %ah,0x1eaff(,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
dec    %ebp
xchg   %al,(%ebx,%eax,4)
add    $0xc30a8c02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
inc    %eax
sub    %bh,%ch
lcall  *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
hlt
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     $0x0,%al
add    %al,(%eax)
xor    %ch,(%ecx)
std
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x5ff1b7fc(%ebx)
or     %eax,(%edx)
xchg   %eax,%ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x1,%al
add    %al,(%eax)
cmp    %ch,(%edx)
std
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc0,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
add    %eax,(%eax)
add    %cl,(%eax)
sub    %ebp,%edi
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1a00e48
xchg   %eax,%edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pushf
add    %eax,(%eax)
add    %bl,%al
sub    %ebp,%edi
push   %esp
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x9c00e46
pop    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %dl,0x366fffd(%ebp,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbf,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
fadds  (%ecx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%edx)
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    %bh,%ch
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
dec    %esp
add    (%eax),%al
add    %bh,-0x70002c8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff82,0x2600e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %ah,0x64000002(%eax)
cmp    %edi,%ebp
jmp    *(%eax,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x7e00e46
or     $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     $0x2,%al
add    %al,(%eax)
push   %eax
inc    %ecx
std
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
add    (%eax),%al
add    %bl,-0x3(%ecx,%eax,2)
lcall  *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbb,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %eax
add    (%eax),%eax
add    %ah,(%edx,%eax,2)
std
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jl     8079029 <_IO_stdin_used+0xa269>
add    %al,(%eax)
dec    %eax
inc    %edx
std
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x64000003(%eax)
inc    %edx
std
ljmp   *0x2(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x1800e43
inc    %edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
aam    $0x3
add    %al,(%eax)
nop
inc    %esp
std
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,(%esp,%eax,1)
add    %al,(%eax)
lock inc %esp
std
pushl  (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    $0x0,%al
add    %bl,%al
inc    %ebp
std
push   %esp
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffdc,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0xa,%ch
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%edi
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
fadds  (%eax,%eax,1)
add    %ch,-0x3(%ecx,%ecx,2)
lcall  *0x2(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x10f00e46
hlt
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x5,%al
add    %al,(%eax)
enter  $0xfd4b,$0xff
add    $0xa,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1f00e46
lods   %ds:(%esi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pop    %esp
add    $0x55980000,%eax
std
lcall  *0x7(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x22800e48
jge    807922f <_IO_stdin_used+0xa46f>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    0xb4000005,%al
pop    %esp
std
decl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,%al
add    $0x5dc40000,%eax
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebp
push   %cs
and    %dh,0xe(%ebx)
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,(%esi,%eax,1)
add    %al,(%eax)
call   d207901a <_end+0xc9ff578a>
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
jo     80792dd <_IO_stdin_used+0xa51d>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x6(%eax)
add    %al,(%eax)
je     807935f <_IO_stdin_used+0xa59f>
std
(bad)
fiadd  (%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x3,0x12e00e46
or     $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
push   %es
add    %al,(%eax)
adc    %ah,-0x3(%esi)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
add    0xe(%edx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x5c000006(%eax)
data16
std
jmp    *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
lea    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cld
push   %es
add    %al,(%eax)
enter  $0xfd68,$0xff
mov    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,(%eax)
pop    %es
add    %al,(%eax)
sbb    $0x69,%al
std
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x0(%edi,%eax,1)
add    %al,0x69(%eax)
std
(bad)
call   8079420 <_IO_stdin_used+0xa660>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x18f00e46
push   %ds
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   $0x7,%al
add    %al,(%eax)
in     (%dx),%al
jo     8079454 <_IO_stdin_used+0xa694>
incl   0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb5,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,%al
pop    %es
add    %al,(%eax)
cld
jno    8079494 <_IO_stdin_used+0xa6d4>
ljmp   *0x0(%esi,%ecx,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x35e00e46
mov    (%ebx),%es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,(%eax,%ecx,1)
add    %al,(%eax)
sub    %al,0x909fffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8f00e46
sbb    $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
jo     8079522 <_IO_stdin_used+0xa762>
add    %al,(%eax)
hlt
mov    %bh,%ch
incl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1aefc(%ebx)
or     %al,(%edx)
dec    %eax
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,-0x33fffff8(%eax)
mov    %edi,%ebp
call   *0x0(%ebp,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x11e00e46
rolb   $0xa,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%ah
or     %al,(%eax)
add    %ch,%al
mov    %ebp,%?
lcall  *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x29800e51
mov    %eax,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xor    %cl,(%ecx)
add    %al,(%eax)
add    $0x93,%al
std
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,0x9(%eax)
add    %al,(%eax)
les    0x44cfffd(%ebx),%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x9d00e46
add    %cs:(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,-0x68300000(%ecx,%ecx,1)
std
(bad)
cmp    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8e00e46
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
clc
or     %eax,(%eax)
add    %cl,%ah
cwtl
std
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x66,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
or     (%eax),%al
add    %bl,(%ecx,%ebx,4)
std
pushl  0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8e00e51
mov    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jl     8079730 <_IO_stdin_used+0xa970>
add    %al,(%eax)
pop    %eax
fwait
std
dec    %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e51
mov    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0xe800000a,%esp
pushf
std
jmp    *%ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8e00e46
ret    $0xe0a
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,%ah
or     (%eax),%al
add    %bl,0x34fffd9e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
pop    %ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    %cl,(%ebx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sahf
std
(bad)
fiaddl (%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,0xb(%eax)
add    %al,(%eax)
inc    %esp
mov    %al,0x82fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pushf
or     (%eax),%eax
add    %ch,0x62fffda2(%eax)
pop    %ds
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x87b00e51
add    0x41140e0a(%eax,%ecx,1),%edx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
loopne 8079895 <_IO_stdin_used+0xaad5>
add    %al,(%eax)
aam    $0xc1
std
jmp    *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x9c00e51
daa
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    $0xc,%al
add    %al,(%eax)
add    %al,%bl
std
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pusha
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
or     $0x0,%al
add    %al,-0x3(%ebx,%eax,8)
(bad)
js     8079903 <_IO_stdin_used+0xab43>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
imul   $0xc341140e,(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax,%eax,1)
add    %dl,-0x7bfffff4(%eax)
(bad)
std
incl   0x41000000(%ebx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
movsl  %ds:(%esi),%es:(%edi)
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
add    %cl,0xc7a40000
std
lcall  *(%edi)
pop    %ds
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x91f00e46
add    %dl,%cl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%ebp,%ecx,1)
add    %al,0x74fffde6(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2f00e46
sbb    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    %cl,0xe7bc0000
std
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    $0xd,%ah
add    %al,(%eax)
lock out %eax,$0xfd
ljmp   *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0x41100e0a(%esi),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
or     $0xe8e80000,%eax
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0xe,%al
add    %al,(%eax)
lock call 8269ab3 <_end+0x1e6223>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sbb    %cl,(%esi)
add    %al,(%eax)
cld
call   8349ac7 <_end+0x2c6237>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    %cl,(%esi)
add    %al,(%eax)
adc    $0xe9,%al
std
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
push   %cs
add    %al,(%eax)
sub    $0xe9,%al
std
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pusha
push   %cs
add    %al,(%eax)
inc    %esp
jmp    81e9b0f <_end+0x16627f>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8079b2c <_IO_stdin_used+0xad6c>
add    %al,(%eax)
push   %eax
jmp    8269b23 <_end+0x1e6293>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    %cl,(%esi)
add    %al,(%eax)
pop    %esp
jmp    8349b37 <_end+0x2c62a7>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    0x7400000e,%al
jmp    8349b4f <_end+0x2c62bf>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x8c00000e,%eax
jmp    8549b67 <_end+0x4c62d7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x75300e4e
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
hlt
push   %cs
add    %al,(%eax)
mov    0x4cfffde9,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x75300e4e
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
xor    %cl,(%edi)
add    %al,(%eax)
mov    $0xe9,%ah
std
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x2400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,0x0(%edi,%ecx,1)
add    %ch,%al
jmp    8219c1b <_end+0x19638b>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
orb    $0x0,(%edi)
add    %dh,%ah
jmp    8239c2f <_end+0x1b639f>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
sldt   (%eax)
add    %ch,%dl
std
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
or     %al,(%edx)
xchg   %eax,%ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
int3
sldt   (%eax)
js     8079c64 <_IO_stdin_used+0xaea4>
std
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0xcd00e51
mov    $0xa,%bl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,(%eax,%edx,1)
add    %al,(%eax)
sbb    %ch,%bl
std
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,0x10(%eax)
add    %al,(%eax)
push   %ecx
jmp    8079cf4 <_IO_stdin_used+0xaf34>
incl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
adc    %al,(%eax)
add    %cl,-0x15(%eax)
std
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20d00e51
rorl   $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%edx
add    %al,(%eax)
pushf
adc    %al,(%eax)
add    %bh,%al
jmp    8079d48 <_IO_stdin_used+0xaf88>
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x64240e43
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebp),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
lock adc %al,(%eax)
add    %dl,(%esp,%ebp,8)
std
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,(%eax)
adc    %eax,(%eax)
add    %ah,(%esp,%ebp,8)
std
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,(%eax)
adc    %eax,(%eax)
add    %dh,(%esp,%ebp,8)
std
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e5002(%ebx)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%ebx
or     %al,0xe(%ebx,%eax,8)
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x0(%ecx,%edx,1)
add    %cl,-0x14(%eax)
std
(bad)
add    %eax,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff6,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,-0x12d00000(%ecx,%edx,1)
std
call   *(%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
pop    %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%al
adc    %eax,(%eax)
add    %cl,(%eax,%esi,8)
std
(bad)
in     (%dx),%al
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e51
xchg   %eax,%edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bh,(%edx,%edx,1)
add    %al,(%eax)
mov    $0x2ffffdf2,%eax
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
jb     8079f0d <_IO_stdin_used+0xb14d>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
test   $0x1,%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,-0x73ffffee(%eax)
idiv   %ch
ljmp   *0x0(%ebp,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x80f00e46
add    (%eax),%edx
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
fcoml  (%edx)
add    %al,(%eax)
mov    $0xdbfffdfb,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1aefc(%ebx)
add    (%edx),%eax
cmpsl  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
adc    $0x13,%al
add    %al,(%eax)
pusha
cld
std
(bad)
std
push   %cs
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x6800e46
mov    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,0x0(%ebx,%edx,1)
add    %ah,(%eax)
or     %esi,%edi
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x46,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,0x44000013(%eax)
or     %esi,%edi
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x410c0e0a(%esi),%dl
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,%al
adc    (%eax),%eax
add    %bh,0x84fffe(%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
dec    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %dl,(%esp,%ecx,1)
(bad)
inc    %ebx
push   %cs
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4f00e46
add    (%edx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%esp,%edx,1)
add    %ah,0x77fffe1a(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x81900e51
add    %ebp,%edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
mov    %dl,(%eax,%eax,1)
add    %bl,%ah
sbb    $0xfe,%al
jmp    *%esi
or     $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x11d00e46
cmc
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,%ah
adc    $0x0,%al
add    %cl,-0x570001d6(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x2400e4e
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
and    %dl,0x2ae40000
(bad)
ljmp   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1cd00e46
xchg   %eax,%esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fs
adc    $0x2fd00000,%eax
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xe(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    %dl,0x300c0000
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xe(%ecx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    $0x30480000,%eax
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%edx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
rclb   0x30740000
(bad)
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %cl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,%ah
adc    $0x31080000,%eax
(bad)
(bad)
incb   (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
push   %esp
push   %ss
add    %al,(%eax)
mov    $0x33,%al
(bad)
(bad)
mov    $0x4,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e46
movsl  %ds:(%esi),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x2c000016(%eax)
cmp    %bh,%dh
call   *(%ecx)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e51
push   %es
add    (%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%al
push   %ss
add    %al,(%eax)
hlt
cmp    %esi,%edi
pushl  (%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd7,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
dec    %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,0x17(%eax)
add    %al,(%eax)
fdivrl 0x339fffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
bound  %eax,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    0xc4000017,%al
inc    %eax
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
les    (%edi),%edx
add    %al,(%eax)
loopne 807a4b2 <_IO_stdin_used+0xb6f2>
(bad)
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jo     807a492 <_IO_stdin_used+0xb6d2>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
lock pop %ss
add    %al,(%eax)
je     807a4df <_IO_stdin_used+0xb71f>
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x43100e0a(%eax),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
sbb    %al,(%eax)
add    %cl,(%edx,%eax,2)
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%ebx,1)
add    %al,(%eax)
sub    %al,-0x2(%edx)
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
je     807a50a <_IO_stdin_used+0xb74a>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   $0xdc000018
inc    %edx
(bad)
incl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    (%ecx,%eax,1),%ecx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,-0x3ffffe8(%eax)
inc    %ebx
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jp     807a561 <_IO_stdin_used+0xb7a1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x48000018,%esp
inc    %esp
(bad)
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,%ah
sbb    %al,(%eax)
add    %bl,0x1afffe44(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %dl,0x0(%ecx,%ebx,1)
add    %ah,0x45(%eax)
(bad)
inc    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %bh,0x45c80000(%ecx,%ebx,1)
(bad)
decl   0x41000000(%ebx,%eax,1)
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa027803,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
in     (%dx),%al
sbb    %eax,(%eax)
add    %ch,(%eax)
dec    %ecx
(bad)
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
and    $0x1a,%al
add    %al,(%eax)
mov    0xdffffe49,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%bl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
sbb    (%eax),%al
add    %cl,0x4a(%eax)
(bad)
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%esi),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x4ab00000(%edx,%ebx,1)
(bad)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%al
sbb    (%eax),%al
add    %al,%ah
dec    %edx
(bad)
(bad)
cmp    (%edx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3800e51
roll   %cl,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,(%ebx,%ebx,1)
add    %al,(%eax)
rorb   $0xb1,-0x1(%esi,%edi,8)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x36,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
sbb    (%eax),%eax
add    %ch,(%eax)
dec    %esi
(bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,0x4ea80000(%ebx,%ebx,1)
(bad)
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x46,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
lock sbb (%eax),%eax
add    %dl,%ah
dec    %esi
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10c00e46
cmpsl  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%eax)
sbb    $0x0,%al
add    %dh,%ah
dec    %edi
(bad)
jmp    *(%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
fwait
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
xchg   %eax,%ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    %bl,(%eax,%eax,1)
add    %cl,%ah
push   %ecx
(bad)
(bad)
jge    807a940 <_IO_stdin_used+0xbb80>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x73,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
enter  $0x1c,$0x0
or     $0x58,%al
(bad)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
je     807a995 <_IO_stdin_used+0xbbd5>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,%al
sbb    $0x0,%al
add    %bh,(%eax,%ebx,2)
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
sbb    $0x0,%al
add    %bh,(%eax)
pop    %eax
(bad)
call   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
adc    %bl,0x58440000
(bad)
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
inc    %eax
sbb    $0x59240000,%eax
(bad)
lcall  *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     807aa37 <_IO_stdin_used+0xbc77>
add    %al,(%eax)
push   %esp
pop    %edx
(bad)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6d300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x5bffffe3(%eax)
pop    %edx
(bad)
pushl  0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
push   %ds
add    %al,(%eax)
or     $0x5b,%al
(bad)
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dl,0x1e(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %ebx
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0xec66b02(%esi)
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ds
add    %al,(%eax)
mov    $0x28fffe5b,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,0x5bc80000(%esi,%ebx,1)
(bad)
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
int3
push   %ds
add    %al,(%eax)
fcomps -0x1(%esi,%edi,8)
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%esi)
pop    %ebp
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,%ah
push   %ds
add    %al,(%eax)
call   5707a9f9 <_end+0x4eff7169>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,(%edi,%ebx,1)
add    %al,(%eax)
add    %bl,-0x2(%ebp)
decl   (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x0(%edi,%ebx,1)
add    %bh,-0x510001a3(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ebx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %al,%ah
pop    %ds
add    %al,(%eax)
and    %bl,-0x2(%esi)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%esi)
pop    %esp
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
call   3407acb4 <_end+0x2bff7424>
pop    %esi
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    $0x20,%al
add    %al,(%eax)
inc    %eax
pop    %esi
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
push   %edi
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%ebx),%eax
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x20(%eax)
add    %al,(%eax)
inc    %esp
pop    %esi
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
and    %al,(%eax)
add    %dl,0x5e(%eax)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
and    %al,(%eax)
add    %dl,%al
pop    %esi
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
dec    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
mov    $0xfc000020,%eax
pop    %esi
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xa(%ecx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
lock and %al,(%eax)
add    %ah,(%edi,%ebx,2)
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %cl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
sub    $0x21,%al
add    %al,(%eax)
pop    %eax
pop    %edi
(bad)
decl   0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x1b00e51
popf
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0x21(%eax)
add    %al,(%eax)
fs
popa
(bad)
decl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x11900e46
jne    807ae41 <_IO_stdin_used+0xc081>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0x62b00000(%ecx,%eiz,1)
(bad)
decl   0x8(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2a00e46
jo     807ae86 <_IO_stdin_used+0xc0c6>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
clc
and    %eax,(%eax)
add    %bh,%ah
push   $0xfffffffe
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x38500e4e
add    %al,(%eax)
and    %ah,(%edx)
add    %al,(%eax)
je     807af39 <_IO_stdin_used+0xc179>
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
and    (%eax),%al
add    %bl,0xffffe6b(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e51
mov    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bl,0x6f680000(%edx,%eiz,1)
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    0xe(%edi),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
shlb   $0x0,(%edx)
add    %dh,0xfefffe(%edi,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10e00e46
jae    807af9a <_IO_stdin_used+0xc1da>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
add    %ah,(%ebx)
add    %al,(%eax)
je     807b01e <_IO_stdin_used+0xc25e>
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
sbb    %ah,(%ebx)
add    %al,(%eax)
pushf
jo     807afc5 <_IO_stdin_used+0xc205>
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%eiz,1)
add    %al,(%eax)
(bad)
jo     807afe1 <_IO_stdin_used+0xc221>
(bad)
jnp    807afe6 <_IO_stdin_used+0xc226>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
and    (%eax),%eax
add    %bl,(%ecx,%esi,2)
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
jl     807b049 <_IO_stdin_used+0xc289>
add    %al,(%eax)
pop    %eax
jno    807b029 <_IO_stdin_used+0xc269>
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
and    (%eax),%eax
add    %bh,-0x2(%ecx,%esi,2)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
jno    807b065 <_IO_stdin_used+0xc2a5>
or     %al,-0x3d(%esi)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,-0x53ffffdd(%eax)
jno    807b065 <_IO_stdin_used+0xc2a5>
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bl,%al
and    (%eax),%eax
add    %bh,0x83fffe(%ecx,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %ah,(%eax)
and    $0x0,%al
add    %al,(%edx,%esi,2)
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,(%esp)
add    %al,(%eax)
sbb    %dh,-0x2(%edx)
ljmp   *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %al,(%edx)
cltd
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
js     807b146 <_IO_stdin_used+0xc386>
add    %al,(%eax)
mov    %?,-0x2(%ebx)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x73880000(%esp)
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
mov    $0xcc000024,%eax
jae    807b165 <_IO_stdin_used+0xc3a5>
(bad)
jg     807b16a <_IO_stdin_used+0xc3aa>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ch,%al
and    $0x0,%al
add    %bl,(%esp,%esi,2)
(bad)
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jle    807b1bb <_IO_stdin_used+0xc3fb>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,%fs:(%eax)
add    %dh,(%eax)
and    $0x74640000,%eax
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bl,0x1c000025(%eax)
jne    807b245 <_IO_stdin_used+0xc485>
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,%al
and    $0x75240000,%eax
(bad)
call   *%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,%es:(%eax)
pushf
jbe    807b2e5 <_IO_stdin_used+0xc525>
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,%es:(%eax)
enter  $0xfe76,$0xff
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,%es:(%eax)
cmp    %dh,-0x2(%edi)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%esi)
pop    %esi
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,%ah
add    %al,%es:(%eax)
dec    %eax
ja     807b379 <_IO_stdin_used+0xc5b9>
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%al
add    %al,%es:(%eax)
pop    %esp
ja     807b3a5 <_IO_stdin_used+0xc5e5>
(bad)
jmp    807b3ac <_IO_stdin_used+0xc5ec>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x49,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
push   %eax
daa
add    %al,(%eax)
hlt
jns    807b3fd <_IO_stdin_used+0xc63d>
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jle    807b427 <_IO_stdin_used+0xc667>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %al,0x7a100000(%edi,%eiz,1)
(bad)
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fsubl  (%edi)
add    %al,(%eax)
mov    %bh,-0x2(%edx)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jp     807b49d <_IO_stdin_used+0xc6dd>
lcall  *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd7,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
sub    %al,(%eax)
add    %ch,-0x2(%ebx,%edi,2)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pusha
sub    %al,(%eax)
add    %dh,-0x2(%ebx,%edi,2)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
mov    0xe4000028,%al
jnp    807b54d <_IO_stdin_used+0xc78d>
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ch,0xe(%edi)
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
jl     807b572 <_IO_stdin_used+0xc7b2>
add    %al,(%eax)
int3
sub    %al,(%eax)
add    %bh,%al
jnp    807b579 <_IO_stdin_used+0xc7b9>
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x49,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%esi),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %cl,0x0(%ecx,%ebp,1)
add    %bh,(%eax)
jl     807b5f9 <_IO_stdin_used+0xc839>
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sub    %eax,(%eax)
add    %dh,0x7c(%eax)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %dh,0xe(%eax)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
shrb   $0x0,(%ecx)
add    %al,0x2bfffe(%esp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xe(%edi)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
fsubrs (%ecx)
add    %al,(%eax)
pushf
jl     807b685 <_IO_stdin_used+0xc8c5>
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
xor    %bh,0xe(%eax)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,(%edx,%ebp,1)
add    %al,(%eax)
mov    $0x7c,%al
(bad)
(bad)
sti
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff88,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
sub    (%eax),%al
add    %bl,0x7d(%eax)
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
mov    %ch,(%edx)
add    %al,(%eax)
mov    %?,-0x2(%ebp)
decl   (%edx)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
ljmp   $0xc341,$0x140e0a01
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
mov    $0x1,%dl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     $0x2a,%al
add    %al,(%eax)
inc    %eax
cmp    $0x6aff,%esi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,(%eax)
sub    (%eax),%eax
add    %al,0x4afffe(%ecx,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xe(%eax),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%ebx,%ebp,1)
add    %al,(%eax)
test   $0x81,%al
(bad)
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,-0x7de00000(%ebx,%ebp,1)
(bad)
call   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sub    (%eax),%eax
add    %ch,(%eax)
cmp    $0xffffffff,%esi
mov    %eax,0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jle    807b8b5 <_IO_stdin_used+0xcaf5>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sbb    $0x2c,%al
add    %al,(%eax)
test   $0x83,%al
(bad)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
bound  %ecx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
sub    $0x0,%al
add    %dh,%ah
cmp    $0xffffffff,%esi
pop    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x2c(%eax)
add    %al,(%eax)
sbb    $0x84,%al
(bad)
(bad)
call   807b92d <_IO_stdin_used+0xcb6d>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x41100e0a(%eax),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %al,%al
sub    $0x0,%al
add    %al,%ah
test   %bh,%dh
(bad)
jmp    807b975 <_IO_stdin_used+0xcbb5>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
sbb    %ch,0x855c0000
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %edx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,0x2d(%eax)
add    %al,(%eax)
int3
test   %edi,%esi
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pushf
sub    $0x85e80000,%eax
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,%ah
sub    $0x86480000,%eax
(bad)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    $0x2e,%al
add    %al,(%eax)
lock xchg %bh,%dh
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0x2e(%eax)
add    %al,(%eax)
adc    $0x87,%al
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x51,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   $0x2e,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %edi,%esi
(bad)
jg     807bb5a <_IO_stdin_used+0xcd9a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     807bb71 <_IO_stdin_used+0xcdb1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
int3
add    %al,%cs:(%eax)
enter  $0xfe87,$0xff
addl   $0x41000000,(%eax)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x7d,(%ecx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
or     %ch,(%edi)
add    %al,(%eax)
sbb    $0x88,%al
(bad)
(bad)
jge    807bbba <_IO_stdin_used+0xcdfa>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,(%eax)
das
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    %bh,%dh
call   *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x90000000
das
add    %al,(%eax)
mov    $0x89,%ah
(bad)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cld
das
add    %al,(%eax)
sbb    %cl,0x53fffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
pop    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,(%eax,%esi,1)
add    %al,(%eax)
inc    %eax
mov    %dh,%bh
pushl  0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
jl     807bd56 <_IO_stdin_used+0xcf96>
add    %al,(%eax)
mov    $0xadfffe8a,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,-0x74d80000(%eax,%esi,1)
(bad)
pushl  0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x58,0x1900e54
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
bound  %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dl,(%ecx,%esi,1)
add    %al,(%eax)
nop
mov    %esi,%edi
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bl,0x0(%ecx,%esi,1)
add    %cl,%al
mov    %esi,%edi
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x60300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    $0x31,%al
add    %al,(%eax)
aam    $0x8b
(bad)
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x3ff1aefc(%ebx)
or     %al,(%edx)
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
call   8407bec6 <_end+0x7bff8636>
mov    %?,%esi
decl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5e,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,(%eax)
xor    (%eax),%al
add    %cl,-0x2(%ebp,%ecx,4)
incl   0x5(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x10f00e46
push   %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    (%eax),%al
add    %bl,-0x6e(%eax)
(bad)
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
rorb   $0x2,(%eax)
ja     807bf3c <_IO_stdin_used+0xd17c>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pushf
xor    (%eax),%al
add    %bh,-0x5a00016e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1b9fc(%ebx)
add    $0x2,%al
inc    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
aam    $0x32
add    %al,(%eax)
xor    %dl,0xcfffe(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
call   3407bfc7 <_end+0x2bff8737>
xchg   %eax,%ebx
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
xor    (%eax),%al
add    %bh,(%eax)
xchg   %eax,%ebx
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xor    (%eax),%eax
add    %al,-0x2(%ebx,%edx,4)
call   *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,(%ebx,%esi,1)
add    %al,(%eax)
cmp    %dl,0x13ff(%esi,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x33(%eax)
add    %al,(%eax)
inc    %esp
xchg   %eax,%esp
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    %fs:(%eax),%eax
add    %dl,-0x6c(%eax)
(bad)
(bad)
jnp    807c017 <_IO_stdin_used+0xd257>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x9c00e46
inc    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,-0x6a700000(%ebx,%esi,1)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x63ffffcd(%eax)
xchg   %eax,%ebp
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
int3
xor    (%eax),%eax
add    %ch,0x2afffe95(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
fs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,%ah
xor    (%eax),%eax
add    %bh,0x13fffe95(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,%ah
xchg   %eax,%ebp
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x34,%al
add    %al,(%eax)
rclb   0x23dfffe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x29b00e46
test   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
push   %esp
xor    $0x0,%al
add    %dl,%al
xchg   %eax,%edi
(bad)
lcall  *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x9c00e46
popl   (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cwtl
xor    $0x0,%al
add    %ch,0x44fffe(%ecx,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
les    (%eax,%eax,1),%esi
add    %dl,%al
cltd
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jns    807c191 <_IO_stdin_used+0xd3d1>
or     %al,0xe(%ebx,%eax,8)
add    $0x10,%al
add    %al,(%eax)
add    %ah,%ah
xor    $0x0,%al
add    %al,(%eax)
lcall  $0x0,$0xcfffe
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
clc
xor    $0x0,%al
add    %bh,%ah
cltd
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xe,(%edx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     $0x48,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,(%eax)
xor    $0x9a540000,%eax
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,0x35(%eax)
add    %al,(%eax)
fs
lcall  $0x0,$0x11fffe
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fs
xor    $0x9a700000,%eax
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
js     807c257 <_IO_stdin_used+0xd497>
add    %al,(%eax)
jl     807c1c0 <_IO_stdin_used+0xd400>
(bad)
pushl  (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x88e00e46
add    (%edx),%edi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x62880000(%ebp,%esi,1)
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ch,%al
xor    $0x9dac0000,%eax
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    $0x36,%al
add    %al,(%eax)
rcrb   $0x0,0x54fffe(%ebp)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
inc    %eax
add    %al,%ss:(%eax)
hlt
popf
(bad)
incl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x4000036(%eax)
mov    0x75fffe,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     807c349 <_IO_stdin_used+0xd589>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%esi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,%ss:(%eax)
pop    %eax
mov    0x5ffffe,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
fdivl  (%esi)
add    %al,(%eax)
mov    %ah,0x185fffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4d00e46
dec    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
sbb    $0x37,%al
add    %al,(%eax)
fsubs  0x5ffffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
jl     807c3ef <_IO_stdin_used+0xd62f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   %esp
aaa
add    %al,(%eax)
add    %ah,0x88fffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x600e4e04(%ebx)
add    0xe(%edx,%ecx,1),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    %?,(%edi)
add    %al,(%eax)
pop    %eax
mov    %al,0x95fffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1aefc(%ebx)
addb   $0x2,(%ecx)
jb     807c462 <_IO_stdin_used+0xd6a2>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
les    (%edi),%esi
add    %al,(%eax)
shlb   $0x0,0x189fffe(%edx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
jno    807c495 <_IO_stdin_used+0xd6d5>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     %bh,(%eax)
add    %al,(%eax)
or     $0xa4,%al
(bad)
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
dec    %eax
cmp    %al,(%eax)
add    %ch,%ah
movsb  %ds:(%esi),%es:(%edi)
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4e04(%ebx)
add    0x41100e0a(%ecx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,0x54000038(%eax)
movsl  %ds:(%esi),%es:(%edi)
(bad)
lcall  *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,%al
cmp    %al,(%eax)
add    %bl,(%esi,%eiz,4)
(bad)
call   *0x0(%edx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x11b00e46
push   $0x140e0a01
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x39,%al
add    %al,(%eax)
cmp    %ch,0xfcfffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8e00e46
fmuls  (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pop    %esp
cmp    %eax,(%eax)
add    %bh,%al
test   $0xfe,%al
jmp    *0x3(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xdc00e46
cmp    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    0x64000039,%al
lods   %ds:(%esi),%al
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8c00e51
orl    $0xc341140e,(%edx)
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
loopne 807c6c3 <_IO_stdin_used+0xd903>
add    %al,(%eax)
aam    $0xac
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%esi)
push   %edi
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%eax)
cmp    (%eax),%al
add    %dh,%ah
lods   %ds:(%esi),%al
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ebx
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pop    %eax
cmp    (%eax),%al
add    %bl,-0x2(%ebp,%ebp,4)
lcall  *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x88d00e51
add    0x140e0a01(%edx),%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x50480000(%edx,%edi,1)
(bad)
call   *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,-0x3bffffc6(%eax)
scas   %es:(%edi),%eax
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
fdivrl (%edx)
add    %al,(%eax)
fsubrs 0x22afffe(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
mov    %al,0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
sbb    $0x3b,%al
add    %al,(%eax)
enter  $0xfeb1,$0xff
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%edx
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
cmp    (%eax),%eax
add    %dh,%al
mov    $0xfe,%cl
jmp    *%ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5b400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,-0x4c600000(%ebx,%edi,1)
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax),%edx
add    %al,(%eax)
sarb   $0x0,(%ebx)
add    %al,%ah
mov    $0xfe,%bl
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%esp,%edi,1)
add    %al,(%eax)
adc    %dh,0x2eff(%esi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
cmp    $0x0,%al
add    %dl,(%esp,%esi,4)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmp    $0x0,%al
add    %bl,(%eax)
mov    $0xfe,%ah
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cwtl
cmp    $0x0,%al
add    %bl,(%esp,%esi,4)
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x3c
add    %al,(%eax)
inc    %eax
mov    $0xfe,%ah
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    $0x3d,%al
add    %al,(%eax)
jo     807c966 <_IO_stdin_used+0xdba6>
(bad)
ljmp   *0x6
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e51
xchg   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x0(%ebp,%edi,1)
add    %ah,-0x46(%eax)
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,0x3d(%eax)
add    %al,(%eax)
test   %bh,0x15bfffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x13,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%al
cmp    $0xbb8c0000,%eax
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%esi)
push   %ebx
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
cmp    $0xbb980000,%eax
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ebx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
and    $0x3e,%al
add    %al,(%eax)
sarb   0x39fffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,%ds:(%eax)
in     $0xbb,%al
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jl     807cb64 <_IO_stdin_used+0xdda4>
add    %al,(%eax)
clc
mov    $0xcfffe,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
nop
add    %al,%ds:(%eax)
hlt
mov    $0xcfffe,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,%ds:(%eax)
lock mov $0x54fffe,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
fdivrs (%esi)
add    %al,(%eax)
sbb    $0xbc,%al
(bad)
lcall  *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff88,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sbb    %bh,(%edi)
add    %al,(%eax)
jl     807cb82 <_IO_stdin_used+0xddc2>
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%ebp),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
aas
add    %al,(%eax)
les    0x112ff(%esi,%edi,8),%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd1,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
nop
aas
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x60fffe,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %cl,%al
aas
add    %al,(%eax)
int3
mov    $0xc3fffe,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
sbb    $0x40,%al
add    %al,(%eax)
dec    %eax
mov    $0x4efffe,%esi
add    %al,(%eax)
add    %al,0xe(%ebp)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
pushw  %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
push   %eax
inc    %eax
add    %al,(%eax)
fs
mov    $0xddfffe,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
arpl   %cx,(%esi)
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %ah,-0x41100000(%eax,%eax,2)
(bad)
call   *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e51
adc    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
call   5407cdd5 <_end+0x4bff9545>
sar    $0xff,%dh
lahf
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    807cdbb <_IO_stdin_used+0xdffb>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,(%eax)
inc    %ecx
add    %al,(%eax)
mov    $0xc0,%ah
(bad)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
je     807ce5f <_IO_stdin_used+0xe09f>
add    %al,(%eax)
pusha
sar    $0xff,%esi
mov    $0x2,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x10e00e51
lods   %ds:(%esi),%eax
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0xdc000041,%eax
ret
(bad)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e51
rorl   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
clc
inc    %ecx
add    %al,(%eax)
pushf
(bad)
(bad)
call   *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x100e0a01,%eax
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
xor    %al,0x0(%edx)
add    %al,0xf1fffe(%ebp,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   $0x4c000042
(bad)
(bad)
incl   0x3(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7c500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x5c000042(%eax)
leave
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     807cf71 <_IO_stdin_used+0xe1b1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
int3
inc    %edx
add    %al,(%eax)
mov    %cl,%cl
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     807cf95 <_IO_stdin_used+0xe1d5>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lock inc %edx
add    %al,(%eax)
mov    $0xc9,%ah
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     807cfb9 <_IO_stdin_used+0xe1f9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    $0x43,%al
add    %al,(%eax)
loopne 807cf8b <_IO_stdin_used+0xe1cb>
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     807cfdd <_IO_stdin_used+0xe21d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
cmp    %al,0x0(%ebx)
add    %cl,(%edx,%ecx,8)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,2)
add    %bh,(%eax)
lret   $0xfffe
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %al,0x64000043(%eax)
lret   $0xfffe
pusha
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,%al
inc    %ebx
add    %al,(%eax)
jl     807d040 <_IO_stdin_used+0xe280>
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     807d091 <_IO_stdin_used+0xe2d1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ch,%ah
inc    %ebx
add    %al,(%eax)
test   $0xca,%al
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %esi,0xa(%esi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xor    $0x44,%al
add    %al,(%eax)
jo     807d0ad <_IO_stdin_used+0xe2ed>
(bad)
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
xchg   %eax,%ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
je     807d162 <_IO_stdin_used+0xe3a2>
add    %al,(%eax)
xor    %cl,%ah
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%ecx),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,-0x33580000(%esp,%eax,2)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,%al
inc    %esp
add    %al,(%eax)
int3
int3
(bad)
lcall  *(%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffff,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,(%eax)
inc    %ebp
add    %al,(%eax)
xchg   %eax,%esp
into
(bad)
dec    %edx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x10d00e46
movb   $0xa,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fs
inc    %ebp
add    %al,(%eax)
and    %dl,%dl
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
nop
inc    %ebp
add    %al,(%eax)
je     807d210 <_IO_stdin_used+0xe450>
(bad)
jmp    *0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x3500e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%al
inc    %ebp
add    %al,(%eax)
xchg   %eax,%esp
aad    $0xfe
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
push   $0xa
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,(%eax)
inc    %esi
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
pusha
inc    %esi
add    %al,(%eax)
adc    $0xd6,%al
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x29c00000(%esi,%eax,2)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
inc    %esi
add    %al,(%eax)
cmp    $0xd6,%al
(bad)
decl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
inc    %esi
add    %al,(%eax)
cmp    %dl,%dh
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lock inc %esi
add    %al,(%eax)
inc    %esp
(bad)
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x69,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
xor    %al,0x0(%edi)
add    %ah,0x1efffe(%esi,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec65c02(%esi)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi,%eax,2)
add    %ch,0x1cfffed6(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ah,0x47(%eax)
add    %al,(%eax)
mov    $0xd6,%ah
(bad)
jmp    *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
add    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
rolb   0x0(%edi)
add    %dh,(%eax,%ebx,8)
(bad)
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8c,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,(%eax,%ecx,2)
add    %al,(%eax)
cwtl
fdivr  %st(6),%st
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
dec    %eax
add    %al,(%eax)
mov    0x1bfffed8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,0x48(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
fdivr  %st(6),%st
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebp),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    %cs,0x0(%eax)
add    %ch,%al
fdivr  %st(6),%st
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %dh,0xa(%ecx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,0xc000048(%eax)
fsin
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
dec    %eax
add    %al,(%eax)
sbb    %bl,%cl
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
dec    %eax
add    %al,(%eax)
and    $0xd9,%al
(bad)
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
dec    %eax
add    %al,(%eax)
xor    %bl,%cl
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%eax)
dec    %ecx
add    %al,(%eax)
cmp    $0xd9,%al
(bad)
decl   0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
xchg   %eax,%ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pusha
dec    %ecx
add    %al,(%eax)
je     807d5e8 <_IO_stdin_used+0xe828>
(bad)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,-0x7bffffb7(%eax)
(bad)
(bad)
mov    $0x3,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20d00e46
inc    %esp
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
fmuls  0x0(%ecx)
add    %ch,%ah
(bad)
jmp    *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1b9fc(%ebx)
add    %eax,(%edx)
mov    $0x41100e0a,%edx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    %cl,0x0(%edx)
add    %ah,(%edi,%ebx,8)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ecx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,(%edx,%ecx,2)
add    %al,(%eax)
push   %eax
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x4a(%eax)
add    %al,(%eax)
xchg   %eax,%esp
(bad)
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
je     807d768 <_IO_stdin_used+0xe9a8>
add    %al,(%eax)
mov    0xeafffedf,%al
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x42b00e46
add    %al,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x4c00004a,%eax
out    %al,$0xfe
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jg     807d781 <_IO_stdin_used+0xe9c1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
fmull  0x0(%edx)
add    %bh,-0x1a(%eax)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jg     807d7a5 <_IO_stdin_used+0xe9e5>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %ah,0x64fffe(%esi,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
dec    %ebx
add    %al,(%eax)
fsub   %st,%st(6)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fs
dec    %ebx
add    %al,(%eax)
add    %ah,%bh
(bad)
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
dec    %ebx
add    %al,(%eax)
jo     807d839 <_IO_stdin_used+0xea79>
(bad)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,%ah
dec    %ebx
add    %al,(%eax)
and    $0xfe,%bh
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     807d891 <_IO_stdin_used+0xead1>
or     %al,-0x3d(%esi)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,%ah
dec    %ebx
add    %al,(%eax)
mov    $0xe7,%al
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x73400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%esp,%ecx,2)
add    %al,(%eax)
and    %ch,%al
(bad)
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %al,(%ebx)
addl   $0xffffff87,(%edx,%eax,1)
or     %bl,%al
inc    %ecx
movb   $0xc,-0x3b(%ecx)
add    $0x4,%al
inc    %edx
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
push   %eax
dec    %esp
add    %al,(%eax)
xchg   %eax,%esp
call   8f4d900 <_end+0xeca070>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30acf02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,0x5400004c(%eax)
jmp    8f6d930 <_end+0xeea0a0>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xd8000000
dec    %esp
add    %al,(%eax)
in     (%dx),%al
jmp    9b7d988 <_end+0x1afa0f8>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
decb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
inc    %esp
dec    %ebp
add    %al,(%eax)
xor    %ch,%bl
(bad)
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x9900e46
lea    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %cl,0x0(%ebp)
add    %bl,0x54fffe(%esp,%ebp,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
add    %bl,-0x13180000(%ebp,%ecx,2)
(bad)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6002
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
fisttp (%edx)
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
dec    %ebp
add    %al,(%eax)
or     %ch,%dh
(bad)
incl   0x0(%esi)
inc    %ebx
push   %cs
or     %al,0xc0e4402(%esi)
addl   $0x46,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    %cl,0x0(%esi)
add    %bl,-0x2(%esi,%ebp,8)
(bad)
jmp    807dadd <_IO_stdin_used+0xed1d>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8c00e46
test   $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   $0xc00004e
out    %eax,(%dx)
(bad)
incl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a6802,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,0x6c00004e(%eax)
lock (bad)
lcall  *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6e600e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%al
dec    %esi
add    %al,(%eax)
mov    $0xf1,%ah
(bad)
(bad)
fiaddl (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8f00e46
pop    %esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x4f,%al
add    %al,(%eax)
push   %eax
hlt
(bad)
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10d00e51
les    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
je     807dc6d <_IO_stdin_used+0xeead>
add    %al,(%eax)
add    %dh,%ch
(bad)
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
out    %eax,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    $0x4f,%ah
add    %al,(%eax)
loopne 807dc57 <_IO_stdin_used+0xee97>
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%ch
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%ah
dec    %edi
add    %al,(%eax)
pop    %eax
idiv   %dh
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa5c0204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     -0x3a(%edi),%ebx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ch,(%eax)
push   %eax
add    %al,(%eax)
lods   %ds:(%esi),%al
idiv   %dh
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,0x0(%eax,%edx,2)
add    %dl,%al
idiv   %dh
ljmp   *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %eax
add    %al,(%eax)
(bad)
idiv   %esi
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4a,0x2300e50
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,%ah
push   %eax
add    %al,(%eax)
jo     807dd8a <_IO_stdin_used+0xefca>
(bad)
call   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff2,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x51,%al
add    %al,(%eax)
js     807dde3 <_IO_stdin_used+0xf023>
(bad)
(bad)
mov    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x4c,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %cl,-0x3b(%eax)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
jl     807de77 <_IO_stdin_used+0xf0b7>
add    %al,(%eax)
clc
stc
(bad)
ljmp   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2300e43
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x6c000051(%eax)
cli
(bad)
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e51
in     $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,%al
push   %ecx
add    %al,(%eax)
dec    %esp
sti
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
and    $0x52,%al
add    %al,(%eax)
nop
sti
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
cmp    $0x52,%al
add    %al,(%eax)
enter  $0xfefb,$0xff
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,0x52(%eax)
add    %al,(%eax)
in     (%dx),%al
sti
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx,%edx,2)
add    %ch,%al
sti
(bad)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x52,%al
add    %al,(%eax)
and    $0xfc,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%al
push   %edx
add    %al,(%eax)
xor    $0xfc,%al
(bad)
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jno    807df99 <_IO_stdin_used+0xf1d9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%esi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cld
push   %edx
add    %al,(%eax)
mov    %bh,%ah
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4e04(%ebx)
add    0xa(%eax),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
xor    $0x53,%al
add    %al,(%eax)
loopne 807dfde <_IO_stdin_used+0xf21e>
(bad)
call   *0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x80f00e51
add    (%ecx),%esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
js     807e075 <_IO_stdin_used+0xf2b5>
add    %al,(%eax)
mov    $0x1bfffeff,%esp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a4802,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   $0x53,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %edi,%edi
incl   0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e51
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
call   407e0e8 <_init-0x3fcc3ac>
add    %bh,%bh
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %cl,(%eax)
push   %esp
add    %al,(%eax)
or     $0x3,%al
(bad)
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
inc    %eax
add    0xa(%edx),%cl
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    %dl,0x0(%eax,%eax,1)
faddl  (%ebx)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %bl,0x54(%eax)
add    %al,(%eax)
in     (%dx),%al
add    %edi,%edi
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    %al,0x43140e0a
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebp)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
les    0x0(%eax,%eax,1),%edx
push   %eax
add    $0x200ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,-0x48fdfa7d(,%ecx,2)
or     %bl,%al
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,%ah
push   %esp
add    %al,(%eax)
and    %al,(%edi)
(bad)
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
push   %ebp
add    %al,(%eax)
sub    $0x7,%al
(bad)
call   *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x7380000(,%edx,2)
(bad)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
push   %edx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
push   %ebp
add    %al,(%eax)
pop    %esp
pop    %es
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcb,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0x88000000
push   %ebp
add    %al,(%eax)
dec    %esp
or     %bh,%bh
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
hlt
push   %ebp
add    %al,(%eax)
adc    %cl,(%ecx)
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     807e2c7 <_IO_stdin_used+0xf507>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    807e2fe <_IO_stdin_used+0xf53e>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,0x56(%eax)
add    %al,(%eax)
add    $0xa,%al
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,0xa380000(%esi,%edx,2)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x34000056(%eax)
or     %bh,%bh
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%ah
push   %esi
add    %al,(%eax)
enter  $0xfccf,$0xff
(bad)
add    %al,(%eax)
add    %al,(%eax)
pop    %ecx
push   %cs
or     %al,0x50d4402(%ebp)
dec    %edx
xchg   %al,(%ebx)
jp     807e353 <_IO_stdin_used+0xf593>
(bad)
or     $0x4,%al
add    $0x41,%al
or     $0x5,%al
or     %al,0x38602(%ebp)
add    %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
(bad)
.byte 0xff
nop
mov    $0x4,%ah
or     %al,-0x4d(%eax)
add    $0x8,%al
jo     807f2ce <_IO_stdin_used+0x1050e>
add    $0x8,%al
add    %al,(%eax)
cmp    %ebx,(%ebx)
pop    %es
or     %cl,0x0(%esi)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
sbb    (%edi),%eax
or     %cl,0x0(%esi)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
dec    %edx
sbb    (%edi),%eax
or     %dh,0x0(%ebx)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
dec    %edi
sbb    (%edi),%eax
or     %dh,0x0(%ebx)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
stc
stc
push   %es
or     %al,0x0(%ebp)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
jo     807f35c <_IO_stdin_used+0x1059c>
push   %es
or     %ch,0x0(%ebx)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
push   %ebp
sbb    (%edi),%eax
or     %ch,0x0(%esi)
add    %al,(%eax)
add    $0x31000000,%eax
icebp
push   %es
or     %ah,0x0(%eax,%eax,1)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,0x7(%ebx,%ebx,1)
or     %dh,0x0(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %ah,0x62080751(%ebp)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,0x7(%ebx,%ebx,1)
or     %cl,0x0(%ebp)
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
push   $0x1b
pop    %es
or     %ch,0x0(%ebp)
add    %al,(%eax)
or     (%eax),%al
add    %al,(%eax)
jo     807f3cd <_IO_stdin_used+0x1060d>
pop    %es
or     %ah,0x0(%ebx)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
ja     807f3d9 <_IO_stdin_used+0x10619>
pop    %es
or     %dl,0x0(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
and    0x7(%eax),%dh
or     %al,0x0(%eax,%eax,1)
add    %cl,0x20000000
lock push %es
or     %cl,0x0(%eax,%eax,1)
add    %cl,(%esi)
add    %al,(%eax)
add    %bl,%dh
imul   $0x8,(%edi),%eax
jb     807f3e6 <_IO_stdin_used+0x10626>
add    %al,(%eax)
sldt   (%eax)
add    %dh,0x530806ef(%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x10080726(%edx)
daa
pop    %es
or     %bl,(%ebx,%ebp,1)
pop    %es
or     %ah,(%ebx,%ebp,1)
pop    %es
or     %ch,(%edx)
sub    (%edi),%eax
or     %bh,(%edi)
push   %ebp
pop    %es
or     %dh,(%eax)
sub    (%edi),%eax
or     %bh,(%eax)
sub    (%edi),%eax
or     %al,0x2b(%eax)
pop    %es
or     %bh,0x26(%ecx)
pop    %es
or     %ah,(%esi)
sub    %al,(%edi)
or     %bh,0x2e(%edx)
pop    %es
or     %al,-0x77(%eax)
add    $0x72e8008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,%ch
cs
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
std
push   %edx
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %dl,0x77(%esi)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
aam    $0x2e
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
mov    0x90080706,%al
mov    0x72ee208,%eax
or     %dl,(%eax)
mov    0x589e008,%al
or     %dh,0x80589(%eax)
add    %al,(%eax)
add    %bl,(%eax,%esi,1)
pop    %es
or     %ah,0x25080591(%eax)
xor    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
push   $0x140807
add    %al,(%eax)
inc    %ebp
ss
pop    %es
or     %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1e080733(%ebx)
add    %al,(%eax)
add    %dl,0x1908077f(%ebp)
add    %al,(%eax)
add    %bl,0x31(%esi)
pop    %es
or     %bh,0x1(%ebp)
add    %al,(%eax)
bound  %esi,(%ecx)
pop    %es
or     %bl,0x2
add    %al,(%eax)
add    %cl,-0x7ff7f8af(%ecx)
add    %eax,(%eax)
add    %cl,0x6d(%esi)
pop    %es
or     %bl,(%edi)
add    %al,(%eax)
add    %ch,0x2e080766(%ebp)
add    %al,(%eax)
add    %dh,0x31(%ebx)
pop    %es
or     %al,0x0(%edi)
add    %al,(%eax)
add    %bl,%bh
outsb  %ds:(%esi),(%dx)
pop    %es
or     %dh,(%edx)
add    %al,(%eax)
add    %bh,0x31(%ecx)
pop    %es
or     %al,0x0(%ecx,%eax,1)
add    %al,(%eax)
jle    807f74b <_IO_stdin_used+0x1098b>
pop    %es
or     %bh,0x1(%eax)
add    %al,(%eax)
daa
jbe    807f742 <_IO_stdin_used+0x10982>
or     %bl,(%eax)
add    %al,(%eax)
add    %dh,0x36(%ebx)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,%ah
xor    $0x390807,%eax
add    %al,(%eax)
xorl   $0x2190807,(%ecx)
add    %al,(%eax)
lea    (%ecx),%esi
pop    %es
or     %bl,(%edx)
add    (%eax),%al
add    %bl,0x16080731(%edx)
add    (%eax),%al
add    %ch,-0x2bf7f8cf(%ecx)
add    %al,(%eax)
add    %dh,-0x7ff7f8cf(%eax)
add    %al,(%eax)
add    %dh,0x17080731(%ebp)
add    (%eax),%al
add    %bh,0x28080731(%edi)
add    %al,(%eax)
add    %cl,%dl
xor    %eax,(%edi)
or     %bl,0x1(%eax)
add    %al,(%eax)
add    %dh,0x6c(%ebx)
pop    %es
or     %al,(%edx)
add    %al,(%eax)
add    %dl,%dl
xor    %eax,(%edi)
or     %dl,(%eax)
add    (%eax),%al
add    %ch,%dh
dec    %edi
pop    %es
or     %ch,0x0
add    %al,(%eax)
add    %bl,%bh
xor    %eax,(%edi)
or     %ah,-0x14ffffff(%edi)
xor    %eax,(%edi)
or     %bh,0x0(%edi)
add    %al,(%eax)
mov    0x10080735,%al
add    %al,(%eax)
add    %dh,%bl
xor    %eax,(%edi)
or     %bl,(%ebx)
add    (%eax),%al
add    %bh,(%eax)
popw   %es
or     %dl,(%ebx)
add    %al,(%eax)
add    %al,%ch
xor    (%edi),%eax
or     %dh,(%ebx)
add    %al,(%eax)
add    %ah,(%ebx)
xor    (%edi),%al
or     %bl,0x0(%ecx)
add    %al,(%eax)
add    %dh,(%edx)
pop    %es
or     %cl,0x51d10000(%ecx,%eax,1)
pop    %es
or     %bl,%ah
add    %al,(%eax)
add    %al,0x24080732
add    %al,(%eax)
add    %al,(%edi)
xor    (%edi),%al
or     %ch,0x1(%esi)
add    %al,(%eax)
add    %dl,(%ecx)
xor    (%edi),%al
or     %al,0x0(%edx)
add    %al,(%eax)
add    %dh,0x97080737
add    %eax,(%eax)
add    %dl,(%edi)
xor    (%edi),%al
or     %dh,-0x36000000(%ecx)
jb     807fa52 <_IO_stdin_used+0x10c92>
or     %ah,0x1(%edi)
add    %al,(%eax)
and    %dh,(%edx)
pop    %es
or     %dh,0x0(%eax)
add    %al,(%eax)
xor    %es:(%edi),%al
or     %ch,(%eax,%eax,1)
add    %al,(%eax)
sub    %dh,(%edx)
pop    %es
or     %bl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x34(%ebx)
pop    %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
xor    %esi,(%edx)
pop    %es
or     %bl,(%eax)
add    (%eax),%al
add    %bh,0x15080732
add    (%eax),%al
add    %dh,-0x51f7f907(%edx)
add    %al,(%eax)
add    %ah,-0x5cf7f8cf(%ecx)
add    %eax,(%eax)
add    %cl,0x32(%ebx)
pop    %es
or     %ah,0x0(%ecx,%eax,1)
add    %al,(%eax)
jmp    807fb60 <_IO_stdin_used+0x10da0>
pop    %es
or     %ch,0x1(%edx)
add    %al,(%eax)
add    %cl,0x7(%esi,%ebx,2)
or     %dh,(%ecx)
add    %al,(%eax)
add    %bl,0x34080734(%eax)
add    %al,(%eax)
add    %dl,0x32(%ebp)
pop    %es
or     %bl,0x1(%esi)
add    %al,(%eax)
add    %bl,0x32(%edx)
pop    %es
or     %ch,0x67000001(%ecx)
xor    (%edi),%al
or     %ch,0x6b000000(%edx)
xor    (%edi),%al
or     %dh,0x0(%ecx,%eax,1)
add    %dh,0x32(%eax)
pop    %es
or     %dh,0x1(%edi)
add    %al,(%eax)
ja     807fc24 <_IO_stdin_used+0x10e64>
pop    %es
or     %bh,%al
add    %al,(%eax)
add    %bh,0x32(%edi)
pop    %es
or     %bl,%dh
add    %al,(%eax)
add    %cl,-0x6af7f8ce(%eax)
add    %eax,(%eax)
add    %cl,0x61080732(%ebp)
add    %eax,(%eax)
add    %dl,0xa60807(%edx,%esi,1)
add    %al,(%eax)
and    (%esi),%dh
pop    %es
or     %dh,0x1(%ebp)
add    %al,(%eax)
fwait
xor    (%edi),%al
or     %cl,0x0(%esi)
add    %al,(%eax)
add    %bl,0x17080775(%esi)
add    %al,(%eax)
add    %ah,-0x4df7f8ce(%ecx)
add    %al,(%eax)
add    %ch,0x6e0807(%edx,%esi,1)
add    %al,(%eax)
mov    $0x32,%bl
pop    %es
or     %al,-0x48000000(%esi)
xor    (%edi),%al
or     %bh,0x0(%eax)
add    %al,(%eax)
mov    $0xda080732,%esi
add    %al,(%eax)
add    %al,%dh
xor    (%edi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %cl,%bh
xor    (%edi),%al
or     %dl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%ch
xor    (%edi),%al
or     %ah,-0x23000000(%ecx)
xor    (%edi),%al
or     %bl,0x0(%edx)
add    %al,(%eax)
out    %al,$0x32
pop    %es
or     %ah,0x1(%ebp)
add    %al,(%eax)
in     (%dx),%eax
xor    (%edi),%al
or     %ah,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%dl
xor    (%edi),%al
or     %cl,0x32ff0000(%eax,%eax,1)
pop    %es
or     %cl,%dh
add    %al,(%eax)
add    %al,0x5d080733
add    %al,(%eax)
add    %dl,(%esi)
xor    (%edi),%eax
or     %ah,(%edi)
add    %al,(%eax)
add    %al,0x7(%edx,%esi,1)
or     %ah,0x1(%edx)
add    %al,(%eax)
add    %ah,(%eax)
xor    (%edi),%eax
or     %cl,0x24000000(%ecx)
xor    (%edi),%eax
or     %dh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%ecx)
xor    (%edi),%eax
or     %ah,-0x44000000(%edi)
xor    %eax,(%edi)
or     %ah,0x0(%edi)
add    %al,(%eax)
xor    %dh,(%ebx)
pop    %es
or     %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%ecx)
xor    (%edi),%eax
or     %ah,0x1(%ebx)
add    %al,(%eax)
aas
xor    (%edi),%eax
or     %cl,0x48000001(%ebp)
xor    (%edi),%eax
or     %dh,0x4d000000(%esi)
xor    (%edi),%eax
or     %dl,%dl
add    %al,(%eax)
add    %bh,0x32(%edx)
pop    %es
or     %dh,0x0(%ecx)
add    %al,(%eax)
push   %ebx
xor    (%edi),%eax
or     %cl,0x0(%ebp)
add    %al,(%eax)
add    %bl,0x33(%ecx)
pop    %es
or     %bh,(%edx)
add    %al,(%eax)
add    %ah,0x33(%edx)
pop    %es
or     %dl,%cl
add    %al,(%eax)
add    %cl,0x36(%ebx)
pop    %es
or     %dh,0x0(%edi)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    (%edi),%eax
or     %bl,(%edx,%eax,1)
add    %al,(%eax)
or     (%esi),%esi
pop    %es
or     %dh,0x1(%ecx)
add    %al,(%eax)
out    %al,(%dx)
insl   (%dx),%es:(%edi)
pop    %es
or     %ah,(%eax)
add    %al,(%eax)
add    %bh,0x33(%edx)
pop    %es
or     %bh,0x0(%ecx)
add    %al,(%eax)
(bad)
xor    (%edi),%eax
or     %dh,0x1(%edi)
add    %al,(%eax)
add    %cl,-0x1df7f8cd(%edi)
add    %al,(%eax)
add    %dl,-0x50f7f8cd(%ebp)
add    %eax,(%eax)
add    %ah,-0x74f7f8cd(%ebx)
add    %eax,(%eax)
add    %ah,%ch
xor    (%edi),%eax
or     %dl,%bl
add    %al,(%eax)
add    %ch,0x12080733(%eax)
add    (%eax),%al
add    %bh,-0x27f7f8cd(%eax)
add    %al,(%eax)
add    %dh,%bh
xor    (%edi),%al
or     %bh,0x1(%edi)
add    %al,(%eax)
mov    $0x4f080733,%ebp
add    %al,(%eax)
add    %al,%cl
xor    (%edi),%eax
or     %bl,0x0(%edi)
add    %al,(%eax)
lret
xor    (%edi),%eax
or     %bl,%bh
add    %al,(%eax)
add    %dl,%dl
xor    (%edi),%eax
or     %bl,0x2000000(%eax)
xor    $0x1a60807,%eax
add    %al,(%eax)
adc    (%eax),%bh
pop    %es
or     %dl,%bh
add    %al,(%eax)
add    %bl,%ch
xor    (%edi),%eax
or     %ch,0x0(%eax)
add    %al,(%eax)
in     $0x33,%al
pop    %es
or     %ch,0x1(%edi)
add    %al,(%eax)
call   77100820 <_end+0x6f07cf90>
add    %al,(%eax)
add    %ch,%bh
xor    (%edi),%eax
or     %dl,0x0(%edx)
add    %al,(%eax)
add    %bh,%dl
xor    (%edi),%eax
or     %ah,0x31000001(%ecx)
insl   (%dx),%es:(%edi)
pop    %es
or     %ah,(%esi)
xor    $0x7,%al
or     %al,0x4000001(%esi)
xor    $0x7,%al
or     %ah,0x0(%esi)
add    %al,(%eax)
or     %esi,(%edi,%eax,1)
or     %al,0x0(%esi)
add    %al,(%eax)
adc    $0x34,%al
pop    %es
or     %ch,0x0(%eax,%eax,1)
add    %al,(%eax)
mov    (%ecx),%?
pop    %es
or     %bh,(%ebx)
add    %al,(%eax)
add    %bl,0x8e080734
add    %eax,(%eax)
add    %ah,(%ecx)
xor    $0x7,%al
or     %bl,%ch
add    %al,(%eax)
add    %ah,(%esi)
xor    $0x7,%al
or     %al,0x1(%ecx)
add    %al,(%eax)
add    %bl,%cl
imul   $0xea08,(%edi),%eax
add    %ch,(%esp,%esi,1)
pop    %es
or     %dh,(%eax)
add    (%eax),%al
add    %bl,(%ecx)
inc    %edx
pop    %es
or     %cl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
xor    $0x7,%al
or     %dh,0x1(%ebx)
add    %al,(%eax)
add    %bh,(%esp,%esi,1)
pop    %es
or     %bl,%cl
add    %al,(%eax)
add    %al,0x34(%ebx)
pop    %es
or     %ch,0x1(%ecx)
add    %al,(%eax)
dec    %ebx
xor    $0x7,%al
or     %al,%dl
add    %eax,(%eax)
add    %dl,0x7(%esp,%esi,1)
or     %ah,0x1(%edx)
add    %al,(%eax)
pop    %ecx
xor    $0x7,%al
or     %ah,0x0(%eax)
add    %al,(%eax)
popa
xor    $0x7,%al
or     %cl,0x0(%edx)
add    %al,(%eax)
les    (%eax),%ecx
pop    %es
or     %ch,0x0(%ebx)
add    %al,(%eax)
imul   $0x21308,(%edi,%eax,1),%esi
add    %dh,0x34(%ebp)
pop    %es
or     %dh,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x50f7f8e6(%eax)
add    %al,(%eax)
add    %al,-0x7df7f8cc(%edx)
add    %eax,(%eax)
add    %dh,%dl
xor    (%edi),%al
or     %ah,0x0(%eax)
add    %al,(%eax)
add    %cl,%bh
insb   (%dx),%es:(%edi)
pop    %es
or     %al,(%ebx)
add    %al,(%eax)
add    %dl,0x570807(%ecx,%edi,1)
add    %al,(%eax)
mov    %dh,(%edi,%eax,1)
or     %ch,0x0(%ebp)
add    %al,(%eax)
xchg   %eax,%ecx
xor    $0x7,%al
or     %ah,%bh
add    %al,(%eax)
add    %dl,0x53080734(%esi)
add    %al,(%eax)
add    %dl,%cl
outsl  %ds:(%esi),(%dx)
pop    %es
or     %cl,(%ecx)
add    %al,(%eax)
add    %bl,0xd60807(%esp,%esi,1)
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
xor    $0x7,%al
or     %al,(%ecx)
add    (%eax),%al
add    %ch,-0x66f7f8cc(%edi)
add    %al,(%eax)
add    %cl,0x6a080728(%ebp)
add    %eax,(%eax)
add    %bh,-0x6df7f8cc(%ecx)
add    %eax,(%eax)
add    %al,0x7(%edi,%esi,1)
or     %ch,0x0(%ecx)
add    %al,(%eax)
add    %al,%bl
xor    $0x7,%al
or     %bl,0x0(%ecx,%eax,1)
add    %al,(%eax)
push   %ebp
ss
pop    %es
or     %ah,0xcc000000
xor    $0x7,%al
or     %cl,(%edx)
add    (%eax),%al
add    %bl,%cl
xor    $0x7,%al
or     %bh,0x1(%esi)
add    %al,(%eax)
fidiv  (%edi,%eax,1)
or     %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%cl
xor    $0x7,%al
or     %cl,%cl
add    %al,(%eax)
add    %dh,%cl
xor    $0x7,%al
or     %ah,-0x6000000(%ebx)
xor    $0x7,%al
or     %ch,0x9000001(%eax)
xor    $0x940807,%eax
add    %al,(%eax)
sysexit
pop    %es
or     %cl,0x0(%esi)
add    %al,(%eax)
push   %ss
xor    $0x930807,%eax
add    %al,(%eax)
sbb    0x760807,%esi
add    %al,(%eax)
daa
xor    $0xcd0807,%eax
add    %al,(%eax)
das
xor    $0x18f0807,%eax
add    %al,(%eax)
xor    $0xd0080735,%eax
add    %eax,(%eax)
add    %cl,0x69080731(%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    $0x840807,%eax
add    %al,(%eax)
ds
xor    $0xd00807,%eax
add    %al,(%eax)
dec    %edx
xor    $0x380807,%eax
add    %al,(%eax)
push   %edx
xor    $0x2a0807,%eax
add    %al,(%eax)
pop    %esp
xor    $0x7b0807,%eax
add    %al,(%eax)
bound  %esi,0x1ba0807
add    %al,(%eax)
imul   $0x356d0000,0x16e0807,%esi
35
pop    %es
or     %bl,(%edx)
add    %al,(%eax)
add    %dh,0x35(%edi)
pop    %es
or     %dl,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ss
aaa
pop    %es
or     %ah,0x1(%eax)
add    %al,(%eax)
jge    8080567 <_IO_stdin_used+0x117a7>
pop    %es
or     %bh,0x0(%ebp)
add    %al,(%eax)
xchg   %dh,0x750807
add    %al,(%eax)
mov    0x17b0807,%?
add    %al,(%eax)
xchg   %eax,%edx
xor    $0xeb0807,%eax
add    %al,(%eax)
pushf
xor    $0x630807,%eax
add    %al,(%eax)
pusha
cmp    (%edi),%al
or     %dh,(%eax)
add    %al,(%eax)
add    %cl,0x5b080733
add    %al,(%eax)
add    %ah,0x37080735(%edx)
add    %al,(%eax)
add    %ch,0x74080735(%ebp)
add    %al,(%eax)
add    %dh,0x1608076b(%edi)
add    %al,(%eax)
add    %dh,0x1960807(%ebp,%esi,1)
add    %al,(%eax)
mov    $0x35,%bl
pop    %es
or     %cl,(%edi)
add    %al,(%eax)
add    %cl,0xd080735(%eax)
add    %al,(%eax)
add    %dh,-0x24f7f8cb(%edi)
add    %al,(%eax)
add    %bh,-0x3cf7f8cb(%edi)
add    %eax,(%eax)
add    %bl,(%edi)
out    %al,(%dx)
push   %es
or     %cl,0x63000000(%edx)
xor    $0x7,%al
or     %cl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x735,$0x8
push   %cs
add    %al,(%eax)
add    %dl,%dl
xor    $0xb40807,%eax
add    %al,(%eax)
std
cmp    %eax,(%edi)
or     %bl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%bh
xor    $0x1930807,%eax
add    %al,(%eax)
jmp    80806c7 <_IO_stdin_used+0x11907>
pop    %es
or     %al,%cl
add    %eax,(%eax)
add    %dh,%bl
xor    $0x7c0807,%eax
add    %al,(%eax)
divl   0x1ab0807
add    %al,(%eax)
sub    $0x39,%al
pop    %es
or     %dh,0xfc000000
xor    $0xb30807,%eax
add    %al,(%eax)
or     %dh,(%esi)
pop    %es
or     %dh,0x1(%edx)
add    %al,(%eax)
adc    %esi,(%esi)
pop    %es
or     %al,0x0(%ecx)
insb   (%dx),%es:(%edi)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %ss
ss
pop    %es
or     %ah,%bl
add    %al,(%eax)
add    %ah,(%edi)
ss
pop    %es
or     %dh,0x34000001(%ebp)
ss
pop    %es
or     %cl,(%ebx)
add    (%eax),%al
add    %al,0x36(%edx)
pop    %es
or     %ah,%cl
add    %eax,(%eax)
add    %al,0x36(%edi)
pop    %es
or     %ah,0x36510000(%eax,%eax,1)
pop    %es
or     %bl,-0x39ffffff(%ebx)
in     (%dx),%eax
push   %es
or     %al,0x0
add    %al,(%eax)
add    %dl,0x36(%edi)
pop    %es
or     %dl,%ch
add    %al,(%eax)
add    %bl,0x36(%ebp)
pop    %es
or     %ah,0x0(%ebp)
add    %al,(%eax)
nop
icebp
push   %es
or     %ah,0x1(%esi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    (%edi),%al
or     %ah,(%ecx)
add    %al,(%eax)
add    %ah,0x36(%esi)
pop    %es
or     %bl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     8080828 <_IO_stdin_used+0x11a68>
pop    %es
or     %dl,%cl
add    %eax,(%eax)
add    %dh,0x36(%edi)
pop    %es
or     %al,0x7c000000(%ebx)
ss
pop    %es
or     %cl,0x32000001(%eax)
push   $0x7
or     %cl,(%ebx)
add    %al,(%eax)
add    %al,-0x1cf7f8ca(%edx)
add    %eax,(%eax)
add    %al,-0x78f7f8ca(%edi)
add    %eax,(%eax)
add    %cl,0x9080736(%ebx)
add    (%eax),%al
add    %dl,-0x60f7f8ca(%ebp)
add    %eax,(%eax)
add    %bl,-0x40f7f8ca(%edx)
add    %al,(%eax)
add    %ah,0x6(%ecx,%edi,8)
or     %ah,(%ebx)
add    %al,(%eax)
add    %bl,-0x65f7f8ca(%esi)
add    %al,(%eax)
add    %dh,-0xf(%esi)
push   %es
or     %dl,-0x55000000(%eax)
ss
pop    %es
or     %dh,0x1(%ebx)
add    %al,(%eax)
mov    $0x36,%cl
pop    %es
or     %dh,%ch
add    %al,(%eax)
add    %bh,-0x13f7f8ca(%ebp)
add    %al,(%eax)
add    %al,%ch
ss
pop    %es
or     %dh,0x1(%eax)
add    %al,(%eax)
into
ss
pop    %es
or     %al,(%edx)
add    (%eax),%al
add    %bl,%al
ss
pop    %es
or     %ch,%al
add    %al,(%eax)
add    %bh,0x2208074f(%ecx)
add    %al,(%eax)
add    %bl,%dh
ss
pop    %es
or     %dl,(%edx,%eax,1)
add    %al,(%eax)
jmp    8080958 <_IO_stdin_used+0x11b98>
pop    %es
or     %cl,(%eax)
add    (%eax),%al
add    %dh,%ch
ss
pop    %es
or     %al,0x1(%ebx)
add    %al,(%eax)
add    %bh,%ah
ss
pop    %es
or     %ch,0x1(%ebx)
add    %al,(%eax)
add    $0x37,%al
pop    %es
or     %dh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %cs
aaa
pop    %es
or     %ch,0x1(%ebp)
add    %al,(%eax)
add    %bl,(%edx)
aaa
pop    %es
or     %dh,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
aaa
pop    %es
or     %ch,0x1(%ebp)
add    %al,(%eax)
and    $0x95080737,%eax
add    %al,(%eax)
add    %ch,(%ebx)
aaa
pop    %es
or     %cl,0x0(%ecx)
add    %al,(%eax)
das
aaa
pop    %es
or     %dh,%cl
add    %al,(%eax)
add    %bh,(%edx)
aaa
pop    %es
or     %bl,%dh
add    %eax,(%eax)
add    %bh,(%edi)
aaa
pop    %es
or     %ah,0x1(%eax)
add    %al,(%eax)
add    %bh,0x34(%ebp)
pop    %es
or     %cl,0x0(%ebx)
add    %al,(%eax)
add    %cl,0x37(%edx)
pop    %es
or     %cl,%ah
add    %al,(%eax)
add    %dl,0x7(%edi,%esi,1)
or     %cl,0x0(%edi)
add    %al,(%eax)
add    %bl,0x37(%ebx)
pop    %es
or     %al,(%ebx)
add    (%eax),%al
add    %ah,0x37(%ebp)
pop    %es
or     %cl,0x6b000001(%ecx)
aaa
pop    %es
or     %ah,0x0(%ecx,%eax,1)
add    %dh,0x37(%edx)
pop    %es
or     %bl,0x0
add    %al,(%eax)
add    %bh,0x37(%ebx)
pop    %es
or     %ch,0x1(%eax)
add    %al,(%eax)
(bad)
aaa
pop    %es
or     %dl,0x0(%eax)
add    %al,(%eax)
xchg   %dh,(%edi)
pop    %es
or     %al,(%edx,%eax,1)
add    %al,(%eax)
ljmp   $0x0,$0x15080768
add    %bh,(%ebx)
cmp    (%edi),%al
or     %al,0x0(%ebx)
add    %al,(%eax)
nop
aaa
pop    %es
or     %dl,0x0(%ebp)
add    %al,(%eax)
lahf
aaa
pop    %es
or     %cl,0x0(%eax)
add    %al,(%eax)
mov    %eax,0x80737
add    (%eax),%al
add    %ch,-0x47f7f8c9(%ebp)
add    %eax,(%eax)
add    %bh,-0x75f7f8c9(%edx)
add    %eax,(%eax)
add    %al,%ah
aaa
pop    %es
or     %cl,%dl
add    %al,(%eax)
add    %cl,%dl
aaa
pop    %es
or     %bl,0x0(%esi)
add    %al,(%eax)
(bad)
aaa
pop    %es
or     %dl,(%ecx)
add    (%eax),%al
add    %dl,0x2f(%eax)
pop    %es
or     %ch,(%edi)
add    %al,(%eax)
add    %bl,%dh
aaa
pop    %es
or     %bh,0x1(%ecx)
add    %al,(%eax)
loope  8080c31 <_IO_stdin_used+0x11e71>
pop    %es
or     %cl,%bl
add    %al,(%eax)
add    %ah,%bh
aaa
pop    %es
or     %al,%al
add    %eax,(%eax)
add    %ch,%bh
aaa
pop    %es
or     %ch,0x0(%ecx,%eax,1)
add    %bh,%cl
aaa
pop    %es
or     %dl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%dh
aaa
pop    %es
or     %cl,%al
add    %al,(%eax)
add    %dl,0x3a(%ebx)
pop    %es
or     %bh,(%eax,%eax,1)
add    %al,(%eax)
add    $0xf1080738,%eax
add    %eax,(%eax)
add    %cl,(%esi)
cmp    %al,(%edi)
or     %ch,0x0(%ecx,%eax,1)
add    %al,(%eax)
sbb    %bh,(%eax)
pop    %es
or     %ch,0x20000000(%ebp)
cmp    %al,(%edi)
or     %ah,0x1(%ebp)
add    %al,(%eax)
add    %ch,(%esi)
cmp    %al,(%edi)
or     %bl,0x65000001(%ebp)
cmp    (%edi),%al
or     %al,0x0(%edx)
add    %al,(%eax)
xor    $0xbd080738,%eax
add    %al,(%eax)
add    %cl,%ah
aaa
pop    %es
or     %bl,0x0(%eax,%eax,1)
add    %bh,(%ecx)
cmp    %al,(%edi)
or     %ch,(%ecx)
add    %al,(%eax)
add    %cl,(%ecx)
inc    %edx
pop    %es
or     %cl,(%eax)
add    %al,(%eax)
add    %bh,(%edi)
cmp    %al,(%edi)
or     %ch,0x46000000(%eax)
cmp    %al,(%edi)
or     %ah,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
aaa
pop    %es
or     %bl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0xab0807(%edi,%ecx,2)
add    %al,(%eax)
push   %ebx
cmp    %al,(%edi)
or     %al,0x0(%ebp)
add    %al,(%eax)
add    %bl,0x38(%eax)
pop    %es
or     %ah,0x0(%edx)
add    %al,(%eax)
pusha
cmp    %al,(%edi)
or     %dh,%bl
add    %al,(%eax)
add    %dh,0x38(%ecx)
pop    %es
or     %al,(%edi)
add    (%eax),%al
add    %bh,0x38(%ebx)
pop    %es
or     %ah,%cl
add    %al,(%eax)
add    %bl,0x3a(%ecx)
pop    %es
or     %bl,0x0(%eax)
add    %al,(%eax)
mov    %bh,(%eax)
pop    %es
or     %bh,0x1(%ecx)
add    %al,(%eax)
add    %dl,-0x43f7f8c8(%edi)
add    %al,(%eax)
add    %bl,-0x1bf7f8c8(%ebx)
add    %al,(%eax)
add    %ch,-0xff7f8c8(%edx)
add    %al,(%eax)
add    %dh,0x7a080738(%edx)
add    %eax,(%eax)
add    %bh,(%eax)
xor    (%edi),%al
or     %ch,0x0(%eax,%eax,1)
add    %dh,-0x19f7f8c8(%esi)
add    %al,(%eax)
add    %al,%cl
cmp    %al,(%edi)
or     %ch,%dh
add    %al,(%eax)
add    %al,%dh
cmp    %al,(%edi)
or     %dh,%ah
add    %al,(%eax)
add    %dl,%dh
cmp    %al,(%edi)
or     %dl,0x0(%ecx)
add    %al,(%eax)
xchg   %eax,%esp
xor    %eax,(%edi)
or     %ch,0x0(%edx)
add    %al,(%eax)
inc    %esp
push   %ecx
pop    %es
or     %dl,(%ecx)
add    %al,(%eax)
add    %bl,%dl
cmp    %al,(%edi)
or     %ah,0x0(%eax,%eax,1)
add    %ah,%bl
cmp    %al,(%edi)
or     %dh,(%esi)
add    %al,(%eax)
add    %ch,%dh
cmp    %al,(%edi)
or     %al,(%esi)
add    (%eax),%al
add    %bh,%al
cmp    %al,(%edi)
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
cmp    %eax,(%edi)
or     %al,0x0(%ebp)
add    %al,(%eax)
or     (%ecx),%edi
pop    %es
or     %bh,0x0(%esi)
add    %al,(%eax)
adc    $0x4b080739,%eax
add    %al,(%eax)
add    %bl,(%ecx)
cmp    %eax,(%edi)
or     %dl,0x0(%esi)
add    %al,(%eax)
add    %eax,0x7(%edx)
or     %al,(%edi)
add    %al,(%eax)
add    %bl,(%edi)
cmp    %eax,(%edi)
or     %cl,0x0(%eax)
add    %al,(%eax)
add    %ah,(%ecx,%edi,1)
pop    %es
or     %al,0x28000001(%ebp)
cmp    %eax,(%edi)
or     %ch,(%ebx)
add    %al,(%eax)
add    %dh,(%edx)
cmp    %eax,(%edi)
or     %dl,0x0(%edx)
add    %al,(%eax)
cmp    %eax,%ss:(%edi)
or     %al,0x2
add    %al,(%eax)
add    %cl,0x3d08073a(%ebp)
add    %al,(%eax)
add    %al,0x39(%eax)
pop    %es
or     %dh,0x0(%ebx)
add    %al,(%eax)
dec    %ecx
cmp    %eax,(%edi)
or     %ah,%al
add    %al,(%eax)
add    %bl,0x39(%eax)
pop    %es
or     %dh,-0x68ffffff(%ecx)
cmp    (%edi),%al
or     %bh,(%esi)
add    %al,(%eax)
add    %bl,0x39(%edi)
pop    %es
or     %ah,%al
add    %eax,(%eax)
add    %ah,0x7(%ecx,%edi,1)
or     %ah,%ch
add    %al,(%eax)
add    %dh,0x39(%ecx)
pop    %es
or     %bh,%cl
add    %eax,(%eax)
add    %bh,0x39(%edx)
pop    %es
or     %bh,0x0(%ecx,%eax,1)
add    %bh,%cl
inc    %ecx
pop    %es
or     %al,(%esi)
add    %al,(%eax)
add    %bh,0x39(%edi)
pop    %es
or     %bl,0x1(%edx)
add    %al,(%eax)
add    %al,-0x48f7f8c7(%edi)
add    %al,(%eax)
add    %cl,-0x2df7f8c7(%ebx)
add    %eax,(%eax)
add    %dl,-0x23f7f8c7(%ecx)
add    %eax,(%eax)
add    %bl,-0xdf7f8c7(%eax)
add    %eax,(%eax)
add    %ah,-0x8f7f8c7(%ecx)
add    %al,(%eax)
add    %ch,-0x7f7f8c7(%eax)
add    %eax,(%eax)
add    %dh,0x7(%ebp,%ebp,2)
or     %cl,%bh
add    %al,(%eax)
add    %dh,%bh
imul   $0xb508,(%edi),%eax
add    %dh,-0x47f7f8c7(%ecx)
add    %al,(%eax)
add    %dh,0x7a080739(%ebp)
add    %al,(%eax)
add    %ch,0x4408073a(%ecx)
add    %al,(%eax)
add    %bh,0x1e080739(%ebp)
add    (%eax),%al
add    %cl,%bl
cmp    %eax,(%edi)
or     %dh,0x0(%edx)
add    %al,(%eax)
(bad)
cmp    %eax,(%edi)
or     %al,%al
add    %al,(%eax)
add    %ch,(%esi,%esi,1)
pop    %es
or     %bl,-0x26000000(%edi)
cmp    %eax,(%edi)
or     %dh,%bl
add    %eax,(%eax)
add    %ah,%bl
cmp    %eax,(%edi)
or     %dh,%ah
add    %eax,(%eax)
add    %ch,%ah
cmp    %eax,(%edi)
or     %bh,%dl
add    %eax,(%eax)
add    %dh,%dh
cmp    %eax,(%edi)
or     %ch,%cl
add    %al,(%eax)
add    %al,(%edx)
cmp    (%edi),%al
or     %bl,%bh
add    %eax,(%eax)
add    %al,(%edi)
cmp    (%edi),%al
or     %al,0x0(%edi)
add    %al,(%eax)
or     (%edx),%edi
pop    %es
or     %ah,0x0(%ecx)
add    %al,(%eax)
adc    $0xf208073a,%eax
add    %al,(%eax)
add    %ah,(%eax)
cmp    (%edi),%al
or     %dh,0x1(%esi)
add    %al,(%eax)
sub    %edi,(%edx)
pop    %es
or     %dh,%dh
add    %al,(%eax)
add    %ch,(%esi)
cmp    (%edi),%al
or     %ch,%ch
add    %al,(%eax)
add    %bh,0x4108073a(%eax)
add    %al,(%eax)
add    %bh,(%eax)
cmp    (%edi),%al
or     %bl,%dl
add    %eax,(%eax)
add    %bh,(%esi)
cmp    (%edi),%al
or     %bl,0x1(%ecx)
add    %al,(%eax)
add    %al,0x3a(%ebx)
pop    %es
or     %dh,%bh
add    %eax,(%eax)
add    %cl,0x7(%edx,%edi,1)
or     %al,%cl
add    %al,(%eax)
add    %dl,0x3a(%eax)
pop    %es
or     %dl,%bl
add    %eax,(%eax)
add    %dl,0x3a(%esi)
pop    %es
or     %bl,%ch
add    %eax,(%eax)
add    %bl,0x3a(%ebp)
pop    %es
or     %ah,%ah
add    %eax,(%eax)
add    %ah,0x3a(%edx)
pop    %es
or     %bl,%cl
add    %eax,(%eax)
add    %ch,0x3a(%eax)
pop    %es
or     %cl,0x0(%ebp)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmp    (%edi),%al
or     %al,%dl
add    %al,(%eax)
add    %dh,0x3a(%eax)
pop    %es
or     %bh,0x0(%ebx)
add    %al,(%eax)
add    %dh,0x7(%edx,%edi,1)
or     %dh,%dh
add    %eax,(%eax)
add    %bh,0x3a(%ebp)
pop    %es
or     %bh,0x0(%esi)
add    %al,(%eax)
add    %al,%dl
cmp    (%edi),%al
or     %al,0x0(%eax)
add    %al,(%eax)
cmpl   $0x1f50807,(%edx)
add    %al,(%eax)
mov    (%edx),%bh
pop    %es
or     %dl,%ah
add    %eax,(%eax)
add    %dl,0x4c08073a(%eax)
add    %al,(%eax)
add    %dl,0x1d50807(%edx,%edi,1)
add    %al,(%eax)
lcall  $0x1,$0x9008073a
add    %ah,-0x1df7f8c6(%ecx)
add    %eax,(%eax)
add    %ah,-0x24f7f8c6(%esi)
add    %eax,(%eax)
add    %ch,-0x45f7f8c6(%ebp)
add    %al,(%eax)
add    %cl,%al
cmp    (%edi),%al
or     %bh,(%edi)
add    %al,(%eax)
add    %dh,-0x10f7f8c6(%ecx)
add    %al,(%eax)
add    %dh,-0x27f7f8c6(%ebp)
add    %eax,(%eax)
add    %bh,-0x46f7f8c6(%ebx)
add    %al,(%eax)
add    %bh,-0x28f7f8c6(%edi)
add    %eax,(%eax)
add    %al,%ch
cmp    (%edi),%al
or     %dl,%dh
add    %eax,(%eax)
add    %cl,%bl
cmp    (%edi),%al
or     %dl,0x20000000(%esi)
cmp    (%edi),%al
or     %dl,%al
xchg   %eax,%ebp
add    $0x74d6408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
push   %eax
pop    %es
or     %ah,(%eax)
pushf
add    $0x7510608,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x53(%edi)
pop    %es
or     %al,%al
lods   %ds:(%esi),%al
add    $0x7538008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x55(%esi)
pop    %es
or     %dl,(%eax)
mov    $0x554d0805,%esi
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,0x58(%ebp)
pop    %es
or     %dh,0x6e0805cc(%eax)
pop    %eax
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
pop    %edx
pop    %es
or     %dh,0x60805d3(%eax)
pop    %edx
pop    %es
or     %dh,%al
rolb   %cl,0x5d24008
or     %ah,%al
roll   0x8
add    %bl,%bl
pop    %ebx
pop    %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
loop   8082a2d <_IO_stdin_used+0x13c6d>
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
jmp    78103150 <_end+0x7007f8c0>
fildl  0x75c1408
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,-0x6ff7f8a4(%ebx)
fild   0x75c8b08
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%bh
bound  %eax,(%edi)
or     %bl,(%edi)
fs
pop    %es
or     %dh,%dh
arpl   %ax,(%edi)
or     %bh,%dh
arpl   %ax,(%edi)
or     %cl,(%esi)
fs
pop    %es
or     %dl,0x24080764
fs
pop    %es
or     %ch,(%ecx)
fs
pop    %es
or     %ah,%ah
sbb    %eax,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%dl
push   $0xb8000807
mov    %edx,0x1cb3(%ebx)
jno    8082af6 <_IO_stdin_used+0x13d36>
pop    %es
or     %al,(%eax)
jp     8082ade <_IO_stdin_used+0x13d1e>
dec    %esp
add    %fs:(%eax),%al
add    %al,0x7(%ecx,%edx,2)
or     %al,(%eax)
mov    0x8cd0e3,%al
add    %al,(%eax)
out    %al,(%dx)
insl   (%dx),%es:(%edi)
pop    %es
or     %al,(%eax)
pusha
xlat   %ds:(%ebx)
sbb    $0x14,%eax
fs
stc
push   %es
or     %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xchg   %eax,%ebx
(bad)
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
xor    (%edi),%al
or     %al,(%eax)
xchg   %edx,0x3(%ebx)
add    %cl,0x6d(%esi)
pop    %es
or     %al,0x42(%eax)
sldt   (%eax)
add    %al,(%eax)
add    %dl,(%edi)
or     $0x3e80807,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %esi
daa
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %bl,(%edx)
jb     8082b0a <_IO_stdin_used+0x13d4a>
or     %ah,(%eax)
jb     8082b0e <_IO_stdin_used+0x13d4e>
or     %ah,(%esi)
jb     8082b12 <_IO_stdin_used+0x13d52>
or     %dh,0x2b080719(%eax)
jb     8082b1a <_IO_stdin_used+0x13d5a>
or     %dh,(%ebx)
jb     8082b1e <_IO_stdin_used+0x13d5e>
or     %dl,0x190806f1(%eax)
out    %al,(%dx)
push   %es
or     %dh,(%ecx)
ja     8082b2a <_IO_stdin_used+0x13d6a>
or     %ah,0x77(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%al
sub    %ecx,(%eax)
or     %ch,(%esp,%esi,8)
pop    %es
or     %dh,0x29(%eax)
or     %cl,(%eax)
mov    $0xf4,%al
pop    %es
or     %cl,%ah
hlt
pop    %es
or     %al,(%eax)
sub    %ecx,(%eax)
or     %cl,0x291c0808(%ecx,%ebp,1)
or     %cl,(%eax)
cmp    %ch,(%ecx)
or     %cl,(%eax)
push   %esp
sub    %ecx,(%eax)
or     %cl,(%edx,%ebp,1)
or     %cl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,0x1000002(%esi)
add    %al,(%eax)
add    %ch,0x1000003(%ebx)
add    %al,(%eax)
add    %cl,0x1000004(%eax)
add    %al,(%eax)
add    %bl,0x1000004(%edx)
add    %al,(%eax)
add    %ah,0x1000004(%esi)
add    %al,(%eax)
add    %dh,0x1000004(%edi)
add    %al,(%eax)
add    %al,%dh
add    $0x0,%al
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,%bh
add    $0x0,%al
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,(%edx)
or     (%eax),%al
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
or     $0xa4000000,%eax
in     (%dx),%eax
push   %es
or     %bl,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
repz pop %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
repz pop %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x34(%edi)
addl   $0x5,(%eax,%ecx,1)
js     8082b91 <_IO_stdin_used+0x13dd1>
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %cl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
sub    $0xb,%al
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %dh,0x20808(%esp,%ebp,1)
add    %al,(%eax)
inc    %eax
push   %es
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dl,0x4(%esi,%ebx,4)
or     %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%esi,%ebx,4)
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x54(%edi)
pushf
add    $0x8,%al
(bad)
(bad)
ljmp   *0x6(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x5c(%edi)
lcall  $0x0,$0x804
insb   (%dx),%es:(%edi)
sub    (%eax),%ecx
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%dh
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa4
add    $0x8,%al
mulb   0x4a50608(%esp,%eax,1)
or     %dl,(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsw  %ds:(%esi),%es:(%edi)
add    $0x8,%al
jbe    8082c8f <_IO_stdin_used+0x13ecf>
add    $0x8,%al
xchg   %ah,-0x5a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa5,%dh
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa5
add    $0x8,%al
mulb   -0x59f9f7fc(%ebp)
add    $0x8,%al
push   %ss
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%es:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ss:(%esi)
add    $0x8,%al
inc    %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
data16
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
jbe    8082cd0 <_IO_stdin_used+0x13f10>
add    $0x8,%al
xchg   %ah,-0x5969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xa6,%dh
add    $0x8,%al
(bad)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
(bad)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
out    %al,$0xa6
add    $0x8,%al
mulb   -0x58f9f7fc(%esi)
add    $0x8,%al
push   %ss
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsl  %es:(%edi),%es:(%esi)
add    $0x8,%al
cmpsl  %es:(%edi),%ss:(%esi)
add    $0x8,%al
inc    %esi
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %esi
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsw  %es:(%edi),%ds:(%esi)
add    $0x8,%al
jbe    8082d11 <_IO_stdin_used+0x13f51>
add    $0x8,%al
xchg   %ah,-0x5869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xa7,%dh
add    $0x8,%al
(bad)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
(bad)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
out    %al,$0xa7
add    $0x8,%al
mulb   -0x57f9f7fc(%edi)
add    $0x8,%al
push   %ss
test   $0x4,%al
or     %ah,(%esi)
test   $0x4,%al
or     %dh,(%esi)
test   $0x4,%al
or     %al,-0x58(%esi)
add    $0x8,%al
push   %esi
test   $0x4,%al
or     %ah,-0x58(%esi)
add    $0x8,%al
jbe    8082d52 <_IO_stdin_used+0x13f92>
add    $0x8,%al
xchg   %ch,-0x5769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
test   $0x4,%al
or     %dh,-0x39f7fb58(%esi)
test   $0x4,%al
or     %dl,%dh
test   $0x4,%al
or     %ah,%dh
test   $0x4,%al
or     %dh,%dh
test   $0x4,%al
or     %al,(%esi)
test   $0xa9160804,%eax
add    $0x8,%al
es
test   $0xa9360804,%eax
add    $0x8,%al
inc    %esi
test   $0xa9560804,%eax
add    $0x8,%al
test   $0x804,%ax
jbe    8082d93 <_IO_stdin_used+0x13fd3>
add    $0x8,%al
xchg   %ch,-0x5669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
test   $0xa9b60804,%eax
add    $0x8,%al
(bad)
test   $0xa9d60804,%eax
add    $0x8,%al
out    %al,$0xa9
add    $0x8,%al
imulb  -0x55f9f7fc(%ecx)
add    $0x8,%al
push   %ss
stos   %al,%es:(%edi)
add    $0x8,%al
es
stos   %al,%es:(%edi)
add    $0x8,%al
ss
stos   %al,%es:(%edi)
add    $0x8,%al
inc    %esi
stos   %al,%es:(%edi)
add    $0x8,%al
push   %esi
stos   %al,%es:(%edi)
add    $0x8,%al
data16
stos   %al,%es:(%edi)
add    $0x8,%al
jbe    8082dd4 <_IO_stdin_used+0x14014>
add    $0x8,%al
xchg   %ch,-0x5569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
stos   %al,%es:(%edi)
add    $0x8,%al
mov    $0xaa,%dh
add    $0x8,%al
(bad)
stos   %al,%es:(%edi)
add    $0x8,%al
(bad)
stos   %al,%es:(%edi)
add    $0x8,%al
out    %al,$0xaa
add    $0x8,%al
imulb  -0x54f9f7fc(%edx)
add    $0x8,%al
push   %ss
stos   %eax,%es:(%edi)
add    $0x8,%al
es
stos   %eax,%es:(%edi)
add    $0x8,%al
ss
stos   %eax,%es:(%edi)
add    $0x8,%al
inc    %esi
stos   %eax,%es:(%edi)
add    $0x8,%al
push   %esi
stos   %eax,%es:(%edi)
add    $0x8,%al
stos   %ax,%es:(%edi)
add    $0x8,%al
jbe    8082e15 <_IO_stdin_used+0x14055>
add    $0x8,%al
xchg   %ch,-0x5469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
stos   %eax,%es:(%edi)
add    $0x8,%al
mov    $0xab,%dh
add    $0x8,%al
(bad)
stos   %eax,%es:(%edi)
add    $0x8,%al
(bad)
stos   %eax,%es:(%edi)
add    $0x8,%al
out    %al,$0xab
add    $0x8,%al
imulb  -0x53f9f7fc(%ebx)
add    $0x8,%al
push   %ss
lods   %ds:(%esi),%al
add    $0x8,%al
lods   %es:(%esi),%al
add    $0x8,%al
lods   %ss:(%esi),%al
add    $0x8,%al
inc    %esi
lods   %ds:(%esi),%al
add    $0x8,%al
push   %esi
lods   %ds:(%esi),%al
add    $0x8,%al
data16
lods   %ds:(%esi),%al
add    $0x8,%al
jbe    8082e56 <_IO_stdin_used+0x14096>
add    $0x8,%al
xchg   %ch,0x4ac9608(%esp,%eax,1)
or     %ah,-0x49f7fb54(%esi)
lods   %ds:(%esi),%al
add    $0x8,%al
(bad)
lods   %ds:(%esi),%al
add    $0x8,%al
(bad)
lods   %ds:(%esi),%al
add    $0x8,%al
out    %al,$0xac
add    $0x8,%al
imulb  0x4ad0608(%esp,%eax,1)
or     %dl,(%esi)
lods   %ds:(%esi),%eax
add    $0x8,%al
lods   %es:(%esi),%eax
add    $0x8,%al
lods   %ss:(%esi),%eax
add    $0x8,%al
inc    %esi
lods   %ds:(%esi),%eax
add    $0x8,%al
push   %esi
lods   %ds:(%esi),%eax
add    $0x8,%al
lods   %ds:(%esi),%ax
add    $0x8,%al
jbe    8082e97 <_IO_stdin_used+0x140d7>
add    $0x8,%al
xchg   %ch,-0x5269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lods   %ds:(%esi),%eax
add    $0x8,%al
mov    $0xad,%dh
add    $0x8,%al
(bad)
lods   %ds:(%esi),%eax
add    $0x8,%al
(bad)
lods   %ds:(%esi),%eax
add    $0x8,%al
out    %al,$0xad
add    $0x8,%al
imulb  -0x51f9f7fc(%ebp)
add    $0x8,%al
push   %ss
scas   %es:(%edi),%al
add    $0x8,%al
es
scas   %es:(%edi),%al
add    $0x8,%al
ss
scas   %es:(%edi),%al
add    $0x8,%al
inc    %esi
scas   %es:(%edi),%al
add    $0x8,%al
push   %esi
scas   %es:(%edi),%al
add    $0x8,%al
data16
scas   %es:(%edi),%al
add    $0x8,%al
jbe    8082ed8 <_IO_stdin_used+0x14118>
add    $0x8,%al
xchg   %ch,-0x5169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
scas   %es:(%edi),%al
add    $0x8,%al
mov    $0xae,%dh
add    $0x8,%al
(bad)
scas   %es:(%edi),%al
add    $0x8,%al
(bad)
scas   %es:(%edi),%al
add    $0x8,%al
out    %al,$0xae
add    $0x8,%al
imulb  -0x50f9f7fc(%esi)
add    $0x8,%al
push   %ss
scas   %es:(%edi),%eax
add    $0x8,%al
es
scas   %es:(%edi),%eax
add    $0x8,%al
ss
scas   %es:(%edi),%eax
add    $0x8,%al
inc    %esi
scas   %es:(%edi),%eax
add    $0x8,%al
push   %esi
scas   %es:(%edi),%eax
add    $0x8,%al
scas   %es:(%edi),%ax
add    $0x8,%al
jbe    8082f19 <_IO_stdin_used+0x14159>
add    $0x8,%al
xchg   %ch,-0x5069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
scas   %es:(%edi),%eax
add    $0x8,%al
mov    $0xaf,%dh
add    $0x8,%al
(bad)
scas   %es:(%edi),%eax
add    $0x8,%al
(bad)
scas   %es:(%edi),%eax
add    $0x8,%al
out    %al,$0xaf
add    $0x8,%al
imulb  -0x4ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    $0x4,%al
or     %ah,(%esi)
mov    $0x4,%al
or     %dh,(%esi)
mov    $0x4,%al
or     %al,-0x50(%esi)
add    $0x8,%al
push   %esi
mov    $0x4,%al
or     %ah,-0x50(%esi)
add    $0x8,%al
jbe    8082f5a <_IO_stdin_used+0x1419a>
add    $0x8,%al
xchg   %dh,-0x4f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    $0x4,%al
or     %dh,-0x39f7fb50(%esi)
mov    $0x4,%al
or     %dl,%dh
mov    $0x4,%al
or     %ah,%dh
mov    $0x4,%al
or     %dh,%dh
mov    $0x4,%al
or     %al,(%esi)
mov    $0x4,%cl
or     %dl,(%esi)
mov    $0x4,%cl
or     %ah,(%esi)
mov    $0x4,%cl
or     %dh,(%esi)
mov    $0x4,%cl
or     %al,-0x4f(%esi)
add    $0x8,%al
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
.byte 0xff
add    %al,(%eax)
ss xor %ss:(%esi,%esi,1),%dh
xor    %dh,(%esi)
xor    $0x62,%al
xor    $0x65,%al
arpl   %si,(%ecx)
aaa
xor    %esp,0x35(%ecx)
xor    $0x38616338,%eax
xor    $0x32,%al
xor    $0x61,%al
xor    $0x34,%al
xor    (%eax),%edi
bound  %esi,(%esi)
xor    %esp,0x61(%edx)
xor    (%ecx),%esi
aaa
cs fs bound %esi,%cs:%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
.byte 0xd3
.byte 0xb8
inc    %eax
icebp
