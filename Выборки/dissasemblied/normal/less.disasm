das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,0x368a0423(%edi)
imul   $0xffffff98,0x5a(%ebp,%ecx,8),%edi
add    %ebx,%ebp
mov    $0x9a053a42,%esi
insl   (%dx),%es:(%edi)
js     80481ba <_init-0xcf6>
add    (%eax),%eax
add    %al,(%eax)
dec    %edi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,-0x7ffed7ff(%eax)
in     $0x60,%al
or     %ecx,0x0(%edi)
add    %al,(%eax)
push   %ecx
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0xac7c92e3,%ebx
dec    %ebx
jecxz  804819c <_init-0xd14>
push   %bp
popa
adc    %bl,%al
jno    804823b <_init-0xc75>
sbb    $0xd8,%al
je     8048240 <_init-0xc70>
add    %bh,0x40ef18d(%ecx)
lret   $0x132b
out    %al,(%dx)
and    %esp,0xf(%ebx)
jmp    80481c9 <_init-0xce7>
out    %eax,(%dx)
push   %cs
loopne 804820c <_init-0xca4>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ds
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    80484ac <_init-0xa04>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
std
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%ah
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
rolb   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ret    $0x806
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
das
add    (%eax),%eax
add    %al,0x80700(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,-0x5c000000(%esi)
loope  8048714 <_init-0x79c>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
str    0x1(%edi)
add    %al,(%eax)
test   %al,%dl
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
and    (%ebx),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ret    $0x806
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
mov    %al,%dl
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x0(%eax)
add    %al,(%eax)
mov    $0x8e,%al
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
test   $0x1,%al
add    %al,(%eax)
add    $0x6,%dl
or     %al,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,%bh
add    (%eax),%al
add    %dh,-0x60(%eax)
add    $0x11f08,%eax
add    %dl,(%edx)
add    %cl,0x8600
add    %dh,0x5(%ecx,%eiz,8)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %ch,0x62(%ecx,%ebp,2)
je     80487f7 <_init-0x6b9>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jae,pn 8048803 <_init-0x6ad>
cs
xor    $0x54495f00,%eax
dec    %ebp
pop    %edi
fs
gs
jb     8048805 <_init-0x6ab>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048830 <_init-0x680>
popa
jb     8048833 <_init-0x67d>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048825 <_init-0x68b>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048846 <_init-0x66a>
gs
jae    80487d6 <_init-0x6da>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048842 <_init-0x66e>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x67740074,0x69(%esi),%ebp
gs
je     8048869 <_init-0x647>
jne    804886a <_init-0x646>
add    %dh,0x65(%edi,%eiz,2)
je     8048876 <_init-0x63a>
je     8048877 <_init-0x639>
add    %dh,0x65(%edi,%eiz,2)
je     8048870 <_init-0x640>
outsb  %ds:(%esi),(%dx)
je     804880e <_init-0x6a2>
pop    %edi
imul   $0x5000,0x69(%esi),%bp
inc    %ebx
add    %dh,0x75(%eax,%esi,2)
je     804888f <_init-0x621>
add    %dh,0x65(%edi,%eiz,2)
je     8048888 <_init-0x628>
insb   (%dx),%es:(%edi)
popa
add    %dh,0x67(%si)
outsl  %ds:(%esi),(%dx)
je     804889a <_init-0x616>
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80488a2 <_init-0x60e>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80488b0 <_init-0x600>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     80488ac <_init-0x604>
jo     80488c4 <_init-0x5ec>
add    %ah,0x63(%esi)
push   $0x646f6d
gs
js     80488bf <_init-0x5f1>
je     8048858 <_init-0x658>
jb     80488bf <_init-0x5f1>
pop    %edi
jae    80488c2 <_init-0x5ee>
je     80488be <_init-0x5f2>
jae    80488da <_init-0x5d6>
outsb  %ds:(%esi),(%dx)
je     80488c5 <_init-0x5eb>
js     8048866 <_init-0x64a>
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
jo     80488e1 <_init-0x5cf>
je     80488d1 <_init-0x5df>
add    %dh,0x65(%ebx)
je     80488df <_init-0x5d1>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80488e5 <_init-0x5cb>
jb     8048882 <_init-0x62e>
jae    80488f8 <_init-0x5b8>
jb     80488f4 <_init-0x5bc>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 push $0x6d
jo     80488f3 <_init-0x5bd>
arpl   %bp,0x6b(%eax)
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048911 <_init-0x59f>
arpl   %si,0x79(%eax)
add    %dh,0x69(%ebx)
addr16 jo 804891e <_init-0x592>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    804891d <_init-0x593>
add    %dh,0x65(%edx)
addr16
data16
jb     804891e <_init-0x592>
add    %dh,%gs:0x6d(%ecx,%ebp,2)
add    %bl,%gs:0x5f(%edi)
jae    8048938 <_init-0x578>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x636e7973,0x66(%eax,%eax,1),%ebp
add    %dh,0x74(%ebx)
imul   $0x65706f70,%fs:0x0(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8048957 <_init-0x559>
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
arpl   %si,0x65(%edx)
popa
je     804892b <_init-0x585>
xor    $0x0,%al
jae    804896d <_init-0x543>
jb     804896f <_init-0x541>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048977 <_init-0x539>
jns    8048905 <_init-0x5ab>
data16
addr16
gs
je     804896d <_init-0x543>
add    %ah,0x67(%esi)
gs
je     8048983 <_init-0x52d>
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804898e <_init-0x522>
jb     8048988 <_init-0x528>
outsb  %gs:(%esi),(%dx)
add    %dh,0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     804899a <_init-0x516>
jns    804899b <_init-0x515>
gs
je     804892b <_init-0x585>
arpl   %sp,0x67(%esi)
gs
je     80489a0 <_init-0x510>
jae    80489a3 <_init-0x50d>
gs gs add %dh,%fs:%gs:0x74(%ebx)
jb     80489ae <_init-0x502>
je     80489af <_init-0x501>
add    %bl,0x5f(%edi)
gs
jb     80489b5 <_init-0x4fb>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x73637400,0x6e(%edi),%ebp
gs
je     80489b6 <_init-0x4fa>
je     80489cb <_init-0x4e5>
jb     8048959 <_init-0x557>
jb     80489c0 <_init-0x4f0>
popa
add    %bl,%fs:0x5f(%edi)
data16
js     80489d6 <_init-0x4da>
je     80489c6 <_init-0x4ea>
je     804899d <_init-0x513>
xor    $0x0,%al
pop    %edi
jae    80489d1 <_init-0x4df>
je     80489d8 <_init-0x4d8>
insl   (%dx),%es:(%edi)
jo     8048971 <_init-0x53f>
pop    %edi
pop    %edi
data16
jo     80489e8 <_init-0x4c8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x69,(%eax),%eax
jae    80489f9 <_init-0x4b7>
jne    80489f4 <_init-0x4bc>
jo     80489eb <_init-0x4c5>
jb     8048988 <_init-0x528>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80489fa <_init-0x4b6>
add    %dh,0x65(%edx)
pop    %edi
arpl   %bp,0x6d(%edi)
jo     8048a07 <_init-0x4a9>
insb   (%dx),%es:(%edi)
gs
pop    %edi
jo     8048a04 <_init-0x4ac>
je     8048a19 <_init-0x497>
gs
jb     8048a16 <_init-0x49a>
add    %ch,0x6c(%esi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     8048a2c <_init-0x484>
je     8048a1c <_init-0x494>
je     80489f3 <_init-0x4bd>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048a36 <_init-0x47a>
outsb  %ds:(%esi),(%dx)
jbe    80489d4 <_init-0x4dc>
imul   $0x73006c74,0x63(%edi),%ebp
jns    8048a50 <_init-0x460>
je     8048a44 <_init-0x46c>
insl   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jae    8048a53 <_init-0x45d>
jo     8048a59 <_init-0x457>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x64,(%eax),%eax
jne    8048a63 <_init-0x44d>
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x63(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048a66 <_init-0x44a>
add    %dh,0x65(%edx)
pop    %edi
jae    8048a6c <_init-0x444>
popa
jb     8048a6d <_init-0x443>
push   $0x5f657200
jae    8048a76 <_init-0x43a>
je     8048a72 <_init-0x43e>
jb     8048a7a <_init-0x436>
imul   $0x737265,0x74(%bp,%di),%esi
insb   (%dx),%es:(%edi)
jae    8048a85 <_init-0x42b>
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048a8c <_init-0x424>
push   $0x63740072
addr16
gs
je     8048a93 <_init-0x41d>
je     8048aa8 <_init-0x408>
jb     8048a36 <_init-0x47a>
jae    8048aa4 <_init-0x40c>
gs
gs
jo     8048a3c <_init-0x474>
pop    %edi
pop    %edi
jae    8048ab4 <_init-0x3fc>
jb     8048aa5 <_init-0x40b>
jo     8048abd <_init-0x3f3>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
jae    8048abd <_init-0x3f3>
jb     8048ab8 <_init-0x3f8>
outsb  %ds:(%esi),(%dx)
je     8048ab8 <_init-0x3f8>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x6f(%esi)
jo     8048ac0 <_init-0x3f0>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
addr16
gs
je     8048aca <_init-0x3e6>
add    %bl,0x5f(%edi)
jae    8048ae0 <_init-0x3d0>
jb     8048ad1 <_init-0x3df>
popa
je     8048ad0 <_init-0x3e0>
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     8048adc <_init-0x3d4>
insl   (%dx),%es:(%edi)
jo     8048a7c <_init-0x434>
jae    8048af2 <_init-0x3be>
jb     8048ae5 <_init-0x3cb>
jb     8048af4 <_init-0x3bc>
outsl  %ds:(%esi),(%dx)
jb     8048a85 <_init-0x42b>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048b05 <_init-0x3ab>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x63707473,0x0(%esi),%ebp
jo     8048b16 <_init-0x39a>
add    %dh,0x72(%edi)
imul   $0x6164655f,0x0(%ebp,%eiz,2),%esi
je     8048b0b <_init-0x3a5>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048b27 <_init-0x389>
popa
jb     8048b2a <_init-0x386>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%ecx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
pop    %es
add    %ah,0x100000(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x80000,%eax
xor    $0x3,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ecx
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
pop    %es
add    %bh,(%esi)
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
dec    %ecx
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x353,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
pop    %ebp
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
add    (%bx,%si),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %dh,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
cld
lahf
push   %es
or     %al,(%esi)
sub    %al,(%eax)
add    %al,0x50806c2(%eax)
push   %esi
add    %al,(%eax)
test   %al,%dl
push   %es
or     %al,0x88000052
ret    $0x806
.byte 0x5
push   %esp
or     $0xa0,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
mov    0x2070806,%al
add    %al,(%eax)
adc    $0xa0,%al
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
mov    0x4070806,%al
add    %al,(%eax)
sbb    $0xa0,%al
push   %es
or     %al,(%edi)
add    $0xa0200000,%eax
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0xa0,%al
push   %es
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax)
mov    0x9070806,%al
add    %al,(%eax)
sub    $0xa0,%al
push   %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax)
mov    0xb070806,%al
add    %al,(%eax)
xor    $0xa0,%al
push   %es
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax)
mov    0xd070806,%al
add    %al,(%eax)
cmp    $0xa0,%al
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %eax
mov    0xf070806,%al
add    %al,(%eax)
inc    %esp
mov    0x10070806,%al
add    %al,(%eax)
dec    %eax
mov    0x11070806,%al
add    %al,(%eax)
dec    %esp
mov    0x12070806,%al
add    %al,(%eax)
push   %eax
mov    0x13070806,%al
add    %al,(%eax)
push   %esp
mov    0x14070806,%al
add    %al,(%eax)
pop    %eax
mov    0x15070806,%al
add    %al,(%eax)
pop    %esp
mov    0x16070806,%al
add    %al,(%eax)
pusha
mov    0x17070806,%al
add    %al,(%eax)
mov    %fs:0x18070806,%al
add    %al,(%eax)
push   $0x70806a0
sbb    %eax,(%eax)
add    %ch,0x6(%eax,%eiz,4)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,-0x60(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%eax
add    %dh,0x6(%eax,%eiz,4)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,-0x60(%eax)
push   %es
or     %al,(%edi)
sbb    $0xa07c0000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
andb   $0x0,0x1f070806(%eax)
add    %al,0x20070806(%eax,%eiz,4)
add    %al,(%eax)
mov    %ah,0x21070806(%eax)
add    %al,(%eax)
mov    %fs,0x22070806(%eax)
add    %al,(%eax)
nop
mov    0x23070806,%al
add    %al,(%eax)
xchg   %eax,%esp
mov    0x24070806,%al
add    %al,(%eax)
cwtl
mov    0x25070806,%al
add    %al,(%eax)
pushf
mov    0x26070806,%al
add    %al,(%eax)
mov    0x70806a0,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    0x28070806,%al
add    %al,(%eax)
test   $0xa0,%al
push   %es
or     %al,(%edi)
sub    %eax,(%eax)
add    %ch,0x2a070806(%eax,%eiz,4)
add    %al,(%eax)
mov    $0xa0,%al
push   %es
or     %al,(%edi)
sub    (%eax),%eax
add    %dh,0x2c070806(%eax,%eiz,4)
add    %al,(%eax)
mov    $0x70806a0,%eax
sub    $0xa0bc0000,%eax
push   %es
or     %al,(%edi)
add    %al,%cs:(%eax)
shlb   $0x0,0x2f070806(%eax)
add    %al,%ah
mov    0x30070806,%al
add    %al,(%eax)
enter  $0x6a0,$0x8
pop    %es
xor    %eax,(%eax)
add    %cl,%ah
mov    0x32070806,%al
add    %al,(%eax)
shlb   0x33070806(%eax)
add    %al,(%eax)
aam    $0xa0
push   %es
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%al
mov    0x35070806,%al
add    %al,(%eax)
fsubl  0x36070806(%eax)
add    %al,(%eax)
loopne 8048da2 <_init-0x10e>
push   %es
or     %al,(%edi)
aaa
add    %al,(%eax)
in     $0xa0,%al
push   %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %ch,%al
mov    0x39070806,%al
add    %al,(%eax)
in     (%dx),%al
mov    0x3a070806,%al
add    %al,(%eax)
lock mov 0x3b070806,%al
add    %al,(%eax)
hlt
mov    0x3c070806,%al
add    %al,(%eax)
clc
mov    0x3e070806,%al
add    %al,(%eax)
cld
mov    0x3f070806,%al
add    %al,(%eax)
add    %ah,0x40070806(%ecx)
add    %al,(%eax)
add    $0xa1,%al
push   %es
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
or     %ah,0x43070806(%ecx)
add    %al,(%eax)
or     $0xa1,%al
push   %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
adc    %ah,0x45070806(%ecx)
add    %al,(%eax)
adc    $0xa1,%al
push   %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
sbb    %ah,0x47070806(%ecx)
add    %al,(%eax)
sbb    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
and    %ah,0x49070806(%ecx)
add    %al,(%eax)
and    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
sub    %ah,0x4b070806(%ecx)
add    %al,(%eax)
sub    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
xor    %ah,0x4d070806(%ecx)
add    %al,(%eax)
xor    $0xa1,%al
push   %es
or     %al,(%edi)
dec    %esi
push   %ebx
sub    $0x8,%esp
call   8049830 <fchmod@plt+0x4a0>
add    $0x21147,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048ece <_init+0x1e>
call   8049150 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x806a004
jmp    *0x806a008
add    %al,(%eax)
jmp    *0x806a00c
push   $0x0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a010
push   $0x8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a014
push   $0x10
jmp    8048ee0 <_init+0x30>
jmp    *0x806a018
push   $0x18
jmp    8048ee0 <_init+0x30>
jmp    *0x806a01c
push   $0x20
jmp    8048ee0 <_init+0x30>
jmp    *0x806a020
push   $0x28
jmp    8048ee0 <_init+0x30>
jmp    *0x806a024
push   $0x30
jmp    8048ee0 <_init+0x30>
jmp    *0x806a028
push   $0x38
jmp    8048ee0 <_init+0x30>
jmp    *0x806a02c
push   $0x40
jmp    8048ee0 <_init+0x30>
jmp    *0x806a030
push   $0x48
jmp    8048ee0 <_init+0x30>
jmp    *0x806a034
push   $0x50
jmp    8048ee0 <_init+0x30>
jmp    *0x806a038
push   $0x58
jmp    8048ee0 <_init+0x30>
jmp    *0x806a03c
push   $0x60
jmp    8048ee0 <_init+0x30>
jmp    *0x806a040
push   $0x68
jmp    8048ee0 <_init+0x30>
jmp    *0x806a044
push   $0x70
jmp    8048ee0 <_init+0x30>
jmp    *0x806a048
push   $0x78
jmp    8048ee0 <_init+0x30>
jmp    *0x806a04c
push   $0x80
jmp    8048ee0 <_init+0x30>
jmp    *0x806a050
push   $0x88
jmp    8048ee0 <_init+0x30>
jmp    *0x806a054
push   $0x90
jmp    8048ee0 <_init+0x30>
jmp    *0x806a058
push   $0x98
jmp    8048ee0 <_init+0x30>
jmp    *0x806a05c
push   $0xa0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a060
push   $0xa8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a064
push   $0xb0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a068
push   $0xb8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a06c
push   $0xc0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a070
push   $0xc8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a074
push   $0xd0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a078
push   $0xd8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a07c
push   $0xe0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a080
push   $0xe8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a084
push   $0xf0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a088
push   $0xf8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a08c
push   $0x100
jmp    8048ee0 <_init+0x30>
jmp    *0x806a090
push   $0x108
jmp    8048ee0 <_init+0x30>
jmp    *0x806a094
push   $0x110
jmp    8048ee0 <_init+0x30>
jmp    *0x806a098
push   $0x118
jmp    8048ee0 <_init+0x30>
jmp    *0x806a09c
push   $0x120
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0a0
push   $0x128
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0a4
push   $0x130
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0a8
push   $0x138
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0ac
push   $0x140
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0b0
push   $0x148
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0b4
push   $0x150
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0b8
push   $0x158
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0bc
push   $0x160
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0c0
push   $0x168
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0c4
push   $0x170
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0c8
push   $0x178
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0cc
push   $0x180
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0d0
push   $0x188
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0d4
push   $0x190
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0d8
push   $0x198
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0dc
push   $0x1a0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0e0
push   $0x1a8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0e4
push   $0x1b0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0e8
push   $0x1b8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0ec
push   $0x1c0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0f0
push   $0x1c8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0f4
push   $0x1d0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0f8
push   $0x1d8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a0fc
push   $0x1e0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a100
push   $0x1e8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a104
push   $0x1f0
jmp    8048ee0 <_init+0x30>
jmp    *0x806a108
push   $0x1f8
jmp    8048ee0 <_init+0x30>
jmp    *0x806a10c
push   $0x200
jmp    8048ee0 <_init+0x30>
jmp    *0x806a110
push   $0x208
jmp    8048ee0 <_init+0x30>
jmp    *0x806a114
push   $0x210
jmp    8048ee0 <_init+0x30>
jmp    *0x806a118
push   $0x218
jmp    8048ee0 <_init+0x30>
jmp    *0x806a11c
push   $0x220
jmp    8048ee0 <_init+0x30>
jmp    *0x806a120
push   $0x228
jmp    8048ee0 <_init+0x30>
jmp    *0x806a124
push   $0x230
jmp    8048ee0 <_init+0x30>
jmp    *0x806a128
push   $0x238
jmp    8048ee0 <_init+0x30>
jmp    *0x806a12c
push   $0x240
jmp    8048ee0 <_init+0x30>
jmp    *0x806a130
push   $0x248
jmp    8048ee0 <_init+0x30>
jmp    *0x806a134
push   $0x250
jmp    8048ee0 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x10,%esp
mov    0xc(%ebp),%eax
lea    0x4(%eax),%ebx
mov    (%eax),%eax
movl   $0x805e1c4,(%esp)
movl   $0x0,0x806ff40
00
mov    %eax,0x806ff20
mov    0x8(%ebp),%eax
sub    $0x1,%eax
mov    %eax,0xc(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     80493e6 <fchmod@plt+0x56>
cmpb   $0x0,(%eax)
jne    8049658 <fchmod@plt+0x2c8>
movl   $0x1,(%esp)
call   8049300 <isatty@plt>
mov    %eax,0x806ff34
call   804a420 <fchmod@plt+0x1090>
call   8051460 <fchmod@plt+0x80d0>
call   804c6d0 <fchmod@plt+0x3340>
call   8055100 <fchmod@plt+0xbd70>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804e710 <fchmod@plt+0x5380>
call   80595e0 <fchmod@plt+0x10250>
call   805b8a0 <error+0x1830>
mov    0x806ff20,%edi
mov    %edi,(%esp)
call   80491a0 <strlen@plt>
lea    (%edi,%eax,1),%esi
cmp    %esi,%edi
jb     804943f <fchmod@plt+0xaf>
jmp    8049445 <fchmod@plt+0xb5>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    %edi,%esi
je     8049445 <fchmod@plt+0xb5>
cmpb   $0x2f,-0x1(%esi)
jne    8049438 <fchmod@plt+0xa8>
mov    $0x805e1cf,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8049696 <fchmod@plt+0x306>
call   805b340 <error+0x12d0>
mov    0x806f1d8,%edx
mov    $0x805e1dc,%eax
test   %edx,%edx
mov    $0x805e1bf,%edx
cmove  %edx,%eax
mov    %eax,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     804948d <fchmod@plt+0xfd>
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,(%esp)
call   8058cc0 <fchmod@plt+0xf930>
mov    0xc(%esp),%eax
test   %eax,%eax
jg     80494d4 <fchmod@plt+0x144>
jmp    80494f0 <fchmod@plt+0x160>
nop
cmpb   $0x0,0x1(%eax)
jne    80494ab <fchmod@plt+0x11b>
xchg   %ax,%ax
call   8058bb0 <fchmod@plt+0xf820>
test   %eax,%eax
je     80494f0 <fchmod@plt+0x160>
mov    (%ebx),%eax
add    $0x4,%ebx
subl   $0x1,0xc(%esp)
cmpb   $0x2d,(%eax)
jne    80494c4 <fchmod@plt+0x134>
cmpb   $0x2d,0x1(%eax)
jne    80494c4 <fchmod@plt+0x134>
cmpb   $0x0,0x2(%eax)
je     80494f0 <fchmod@plt+0x160>
mov    %eax,(%esp)
call   8058cc0 <fchmod@plt+0xf930>
mov    0xc(%esp),%edi
test   %edi,%edi
je     80494f0 <fchmod@plt+0x160>
mov    (%ebx),%eax
movzbl (%eax),%edx
cmp    $0x2b,%dl
je     8049498 <fchmod@plt+0x108>
cmp    $0x2d,%dl
je     8049498 <fchmod@plt+0x108>
call   8058bb0 <fchmod@plt+0xf820>
test   %eax,%eax
jne    80494a9 <fchmod@plt+0x119>
lea    0x0(%esi,%eiz,1),%esi
call   8058bb0 <fchmod@plt+0xf820>
test   %eax,%eax
jne    8049685 <fchmod@plt+0x2f5>
mov    0x806f1d8,%esi
test   %esi,%esi
jne    80496b9 <fchmod@plt+0x329>
movl   $0x805e1e1,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x806ff48
je     8049525 <fchmod@plt+0x195>
cmpb   $0x0,(%eax)
jne    8049547 <fchmod@plt+0x1b7>
movl   $0x805e1e8,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x806ff48
je     8049676 <fchmod@plt+0x2e6>
cmpb   $0x0,(%eax)
je     8049676 <fchmod@plt+0x2e6>
movl   $0x805e1ff,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x806ff38
je     8049667 <fchmod@plt+0x2d7>
cmpb   $0x0,(%eax)
je     8049667 <fchmod@plt+0x2d7>
mov    0x806ff30,%ecx
xor    %edi,%edi
test   %ecx,%ecx
jne    80496f7 <fchmod@plt+0x367>
mov    0xc(%esp),%eax
test   %eax,%eax
lea    -0x1(%eax),%esi
jg     80495bd <fchmod@plt+0x22d>
jmp    80495d8 <fchmod@plt+0x248>
xchg   %ax,%ax
mov    %edx,(%esp)
sub    $0x1,%esi
add    $0x4,%ebx
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
call   8053cb0 <fchmod@plt+0xa920>
movl   $0x0,(%esp)
call   8053c40 <fchmod@plt+0xa8b0>
mov    0xc(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edi
call   8048f90 <free@plt>
cmp    $0xffffffff,%esi
je     80495d8 <fchmod@plt+0x248>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x9230>
test   %eax,%eax
mov    %eax,%edx
jne    8049588 <fchmod@plt+0x1f8>
mov    (%ebx),%edx
jmp    8049588 <fchmod@plt+0x1f8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff34,%edx
test   %edx,%edx
je     80496d5 <fchmod@plt+0x345>
cmpl   $0x0,0x806c2c0
je     80495fc <fchmod@plt+0x26c>
cmpl   $0x0,0x806ffe8
je     8049775 <fchmod@plt+0x3e5>
call   8057a70 <fchmod@plt+0xe6e0>
call   805dcf0 <error+0x3c80>
movl   $0x1,(%esp)
call   8049e10 <fchmod@plt+0xa80>
movl   $0x1,(%esp)
call   805ce00 <error+0x2d90>
cmpl   $0x0,0x806f170
je     8049712 <fchmod@plt+0x382>
call   8053ca0 <fchmod@plt+0xa910>
test   %eax,%eax
jle    804978e <fchmod@plt+0x3fe>
movl   $0x0,0x4(%esp)
movl   $0x805e25c,(%esp)
call   805a070 <error>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x1,0x806ff40
00
jmp    80493e6 <fchmod@plt+0x56>
movl   $0x805e208,0x806ff38
08
jmp    8049569 <fchmod@plt+0x1d9>
movl   $0x805e1ef,0x806ff48
08
jmp    8049547 <fchmod@plt+0x1b7>
call   8058bc0 <fchmod@plt+0xf830>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x805e1d4,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
jne    8049457 <fchmod@plt+0xc7>
movl   $0x1,0x806f1d8
00
jmp    8049457 <fchmod@plt+0xc7>
call   80595c0 <fchmod@plt+0x10230>
test   %eax,%eax
je     804950b <fchmod@plt+0x17b>
movl   $0x1,0x806fff4
00
jmp    804950b <fchmod@plt+0x17b>
call   8053ca0 <fchmod@plt+0xa910>
test   %eax,%eax
je     8049760 <fchmod@plt+0x3d0>
call   8052030 <fchmod@plt+0x8ca0>
test   %eax,%eax
je     8049749 <fchmod@plt+0x3b9>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x0,0x4(%esp)
movl   $0x805e217,(%esp)
call   8053cb0 <fchmod@plt+0xa920>
mov    %eax,%edi
jmp    8049579 <fchmod@plt+0x1e9>
mov    0x806c264,%eax
cmpb   $0x2d,(%eax)
je     80497d2 <fchmod@plt+0x442>
call   8053ca0 <fchmod@plt+0xa910>
test   %eax,%eax
jne    80497e5 <fchmod@plt+0x455>
lea    0x0(%esi),%esi
call   8051f60 <fchmod@plt+0x8bd0>
test   %eax,%eax
je     80497c3 <fchmod@plt+0x433>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
call   8051910 <fchmod@plt+0x8580>
movl   $0x1,(%esp)
call   8052020 <fchmod@plt+0x8c90>
test   %eax,%eax
je     8049749 <fchmod@plt+0x3b9>
jmp    80496eb <fchmod@plt+0x35b>
call   8051f60 <fchmod@plt+0x8bd0>
test   %eax,%eax
jne    80496eb <fchmod@plt+0x35b>
call   8051910 <fchmod@plt+0x8580>
xchg   %ax,%ax
jmp    80496eb <fchmod@plt+0x35b>
movl   $0x0,0x4(%esp)
movl   $0x805e230,(%esp)
call   805a070 <error>
jmp    80495fc <fchmod@plt+0x26c>
mov    0x806f170,%eax
mov    %eax,(%esp)
call   805d9a0 <error+0x3930>
call   805dcc0 <error+0x3c50>
test   %eax,%eax
jne    804973d <fchmod@plt+0x3ad>
call   805da20 <error+0x39b0>
mov    %edx,0x806ff28
add    $0x1,%edx
mov    %eax,0x806ff24
je     80497f7 <fchmod@plt+0x467>
mov    0x807000c,%eax
mov    %eax,0x806ff2c
call   804a9f0 <fchmod@plt+0x1660>
call   804f1f0 <fchmod@plt+0x5e60>
jmp    80496eb <fchmod@plt+0x35b>
cmpb   $0x0,0x1(%eax)
je     804962b <fchmod@plt+0x29b>
lea    0x0(%esi,%eiz,1),%esi
jmp    8049720 <fchmod@plt+0x390>
call   8052030 <fchmod@plt+0x8ca0>
test   %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
je     80497c3 <fchmod@plt+0x433>
jmp    804973d <fchmod@plt+0x3ad>
add    $0x1,%eax
lea    0x0(%esi),%esi
jne    80497b9 <fchmod@plt+0x429>
jmp    804973d <fchmod@plt+0x3ad>
nop
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x805e170
push   $0x805e100
push   %ecx
push   %esi
push   $0x80493a0
call   80491d0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x806c26f,%eax
sub    $0x806c26c,%eax
cmp    $0x6,%eax
ja     8049850 <fchmod@plt+0x4c0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804984f <fchmod@plt+0x4bf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x806c26c,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x806c26c,%eax
sub    $0x806c26c,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049889 <fchmod@plt+0x4f9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049888 <fchmod@plt+0x4f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x806c26c,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x806c28c
jne    80498cc <fchmod@plt+0x53c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049840 <fchmod@plt+0x4b0>
movb   $0x1,0x806c28c
leave
repz ret
xchg   %ax,%ax
mov    0x8069f08,%eax
test   %eax,%eax
je     80498f8 <fchmod@plt+0x568>
mov    $0x0,%eax
test   %eax,%eax
je     80498f8 <fchmod@plt+0x568>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8069f08,(%esp)
call   *%eax
leave
jmp    8049870 <fchmod@plt+0x4e0>
nop
jmp    8049870 <fchmod@plt+0x4e0>
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    804991b <fchmod@plt+0x58b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     8049910 <fchmod@plt+0x580>
cmp    $0x20,%dl
je     8049910 <fchmod@plt+0x580>
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
movsbl (%esi),%edx
test   %dl,%dl
jne    8049953 <fchmod@plt+0x5c3>
jmp    804998b <fchmod@plt+0x5fb>
nop
add    $0x1,%eax
movsbl (%esi,%eax,1),%edx
test   %dl,%dl
je     804998b <fchmod@plt+0x5fb>
mov    0x14(%esp),%ebx
test   %edi,%edi
movsbl (%ebx,%eax,1),%ecx
je     8049977 <fchmod@plt+0x5e7>
test   %eax,%eax
jne    804996b <fchmod@plt+0x5db>
lea    -0x61(%ecx),%ebx
cmp    $0x19,%ebx
jbe    8049990 <fchmod@plt+0x600>
lea    -0x41(%ecx),%ebp
lea    0x20(%ecx),%ebx
cmp    $0x19,%ebp
cmovbe %ebx,%ecx
test   %eax,%eax
je     8049987 <fchmod@plt+0x5f7>
lea    -0x41(%edx),%ebp
lea    0x20(%edx),%ebx
cmp    $0x19,%ebp
cmovbe %ebx,%edx
cmp    %edx,%ecx
je     8049948 <fchmod@plt+0x5b8>
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
js     8049a02 <fchmod@plt+0x672>
mov    %ebx,0x806c2a8
movl   $0x0,(%esp)
movl   $0x1,0x806ff3c
00
call   8051f20 <fchmod@plt+0x8b90>
call   804e870 <fchmod@plt+0x54e0>
mov    0x806c298,%eax
test   %eax,%eax
je     80499df <fchmod@plt+0x64f>
cmpl   $0x0,0x806ff34
jne    8049a0a <fchmod@plt+0x67a>
call   804aad0 <fchmod@plt+0x1740>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x0,(%esp)
call   8049e10 <fchmod@plt+0xa80>
call   805dd20 <error+0x3cb0>
mov    %ebx,(%esp)
call   8049160 <exit@plt>
mov    0x806c2a8,%ebx
jmp    80499b2 <fchmod@plt+0x622>
call   804aed0 <fchmod@plt+0x1b40>
nop
jmp    80499df <fchmod@plt+0x64f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049370 <calloc@plt>
test   %eax,%eax
je     8049a3f <fchmod@plt+0x6af>
add    $0x1c,%esp
ret
movl   $0x0,0x4(%esp)
movl   $0x805e1a8,(%esp)
call   805a070 <error>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   80490e0 <strcpy@plt>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
addl   $0x1,0x806c764
mov    0x4(%esp),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x44,%esp
movl   $0x805e280,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     8049b08 <fchmod@plt+0x778>
cmpb   $0x0,(%eax)
je     8049b08 <fchmod@plt+0x778>
mov    0x806c708,%ebx
test   %ebx,%ebx
jne    8049aee <fchmod@plt+0x75e>
jmp    8049b60 <fchmod@plt+0x7d0>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8049b60 <fchmod@plt+0x7d0>
mov    %esi,0x4(%esp)
mov    0x4(%ebx),%edx
mov    %edx,(%esp)
call   8048f20 <strcmp@plt>
test   %eax,%eax
jne    8049ae8 <fchmod@plt+0x758>
mov    0x8(%ebx),%eax
jmp    8049b49 <fchmod@plt+0x7b9>
xchg   %ax,%ax
lea    0x39(%esp),%eax
lea    0x2c(%esp),%ebx
movl   $0x10,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
movl   $0x5353454c,0x2c(%esp)
movl   $0x5245545f,0x30(%esp)
movl   $0x5041434d,0x34(%esp)
movb   $0x5f,0x38(%esp)
call   8049250 <__strcpy_chk@plt>
mov    %ebx,(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8049bd8 <fchmod@plt+0x848>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
movl   $0xc,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,0x4(%ebx)
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x3,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x8(%ebx)
mov    %esi,0x10(%esp)
movl   $0x805e293,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049380 <__sprintf_chk@plt>
mov    0x806c708,%eax
mov    %ebx,0x806c708
mov    %eax,(%ebx)
mov    0x8(%ebx),%eax
jmp    8049b49 <fchmod@plt+0x7b9>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8049ab0 <fchmod@plt+0x720>
test   %eax,%eax
je     8049c10 <fchmod@plt+0x880>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <strtol@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c768,%eax
test   %eax,%eax
jne    8049c28 <fchmod@plt+0x898>
mov    %ebx,(%esp)
call   8049110 <tgetnum@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    8049c07 <fchmod@plt+0x877>
nop
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
call   8049ab0 <fchmod@plt+0x720>
test   %eax,%eax
je     8049c48 <fchmod@plt+0x8b8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    0x806c768,%edx
test   %edx,%edx
jne    8049c42 <fchmod@plt+0x8b2>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   80492a0 <tgetstr@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x2c(%esp),%ebx
mov    0x20(%esp),%esi
mov    %ebx,%edx
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8049ca8 <fchmod@plt+0x918>
mov    %ebx,%edx
mov    %edi,%eax
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,(%esi)
je     8049cc0 <fchmod@plt+0x930>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x24(%esp),%eax
mov    %eax,0x0(%ebp)
mov    0x28(%esp),%eax
mov    %eax,(%esi)
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,%edx
mov    $0x8062db5,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e30e,%edx
test   %eax,%eax
cmovne %eax,%edx
mov    %edx,(%esi)
jmp    8049ca0 <fchmod@plt+0x910>
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8049ab0 <fchmod@plt+0x720>
test   %eax,%eax
je     8049d08 <fchmod@plt+0x978>
movzbl (%eax),%eax
cmp    $0x30,%al
setne  %cl
test   %al,%al
setne  %al
movzbl %al,%eax
and    %ecx,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x806c768,%ecx
xor    %eax,%eax
test   %ecx,%ecx
jne    8049d01 <fchmod@plt+0x971>
mov    %ebx,(%esp)
call   80490a0 <tgetflag@plt>
jmp    8049d01 <fchmod@plt+0x971>
xchg   %ax,%ax
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
cmpb   $0x0,(%eax)
jne    8049d40 <fchmod@plt+0x9b0>
cmpb   $0x0,(%edx)
mov    %edx,%ebx
je     8049da8 <fchmod@plt+0xa18>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmpb   $0x0,(%edx)
mov    %eax,%ebx
je     8049d34 <fchmod@plt+0x9a4>
mov    0x806ff64,%eax
mov    %ebx,(%esp)
movl   $0x8049aa0,0x8(%esp)
movl   $0x0,0x806c764
00
mov    %eax,0x4(%esp)
call   8048f60 <tputs@plt>
mov    0x806ff64,%eax
mov    0x806c764,%edi
mov    %esi,(%esp)
movl   $0x8049aa0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,0x806c764
00
call   8048f60 <tputs@plt>
cmp    0x806c764,%edi
cmovge %esi,%ebx
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ecx,%ebx
movl   $0x1,0x806c2c0
00
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x806ff7c,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
test   %eax,%eax
jne    8049df0 <fchmod@plt+0xa60>
mov    0x806c7b0,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x806c7ac,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
jmp    8049e10 <fchmod@plt+0xa80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x54,%esp
mov    0x60(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
cmp    0x806c760,%ebx
je     8049efa <fchmod@plt+0xb6a>
test   %ebx,%ebx
movl   $0x8,0x806ff78
00
jne    8049f18 <fchmod@plt+0xb88>
mov    0x806c720,%eax
lea    0x10(%esp),%esi
mov    %eax,0x10(%esp)
mov    0x806c724,%eax
mov    %eax,0x14(%esp)
mov    0x806c728,%eax
mov    %eax,0x18(%esp)
mov    0x806c72c,%eax
mov    %eax,0x1c(%esp)
mov    0x806c730,%eax
mov    %eax,0x20(%esp)
mov    0x806c734,%eax
mov    %eax,0x24(%esp)
mov    0x806c738,%eax
mov    %eax,0x28(%esp)
mov    0x806c73c,%eax
mov    %eax,0x2c(%esp)
mov    0x806c740,%eax
mov    %eax,0x30(%esp)
mov    0x806c744,%eax
mov    %eax,0x34(%esp)
mov    0x806c748,%eax
mov    %eax,0x38(%esp)
mov    0x806c74c,%eax
mov    %eax,0x3c(%esp)
mov    0x806c750,%eax
mov    %eax,0x40(%esp)
mov    0x806c754,%eax
mov    %eax,0x44(%esp)
mov    0x806c758,%eax
mov    %eax,0x48(%esp)
mov    0x807007c,%eax
mov    %eax,(%esp)
call   80491c0 <fsync@plt>
mov    0x807007c,%eax
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049100 <tcsetattr@plt>
mov    %ebx,0x806c760
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    804a1e0 <fchmod@plt+0xe50>
add    $0x54,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x807007c,%eax
lea    0x10(%esp),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <tcgetattr@plt>
mov    0x806c75c,%eax
test   %eax,%eax
je     8049f90 <fchmod@plt+0xc00>
mov    %esi,(%esp)
call   80491b0 <cfgetospeed@plt>
cmp    $0x8,%eax
je     804a128 <fchmod@plt+0xd98>
jbe    804a028 <fchmod@plt+0xc98>
cmp    $0xd,%eax
je     804a148 <fchmod@plt+0xdb8>
ja     804a068 <fchmod@plt+0xcd8>
cmp    $0xa,%eax
nop
je     804a0f8 <fchmod@plt+0xd68>
jb     804a1d0 <fchmod@plt+0xe40>
cmp    $0xb,%eax
nop
je     804a1b8 <fchmod@plt+0xe28>
cmp    $0xc,%eax
jne    804a090 <fchmod@plt+0xd00>
mov    $0xc,%edx
mov    %dx,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    0x10(%esp),%eax
movl   $0x1,0x806c75c
00
mov    %eax,0x806c720
mov    0x14(%esp),%eax
mov    %eax,0x806c724
mov    0x18(%esp),%eax
mov    %eax,0x806c728
mov    0x1c(%esp),%eax
mov    %eax,0x806c72c
mov    0x20(%esp),%eax
mov    %eax,0x806c730
mov    0x24(%esp),%eax
mov    %eax,0x806c734
mov    0x28(%esp),%eax
mov    %eax,0x806c738
mov    0x2c(%esp),%eax
mov    %eax,0x806c73c
mov    0x30(%esp),%eax
mov    %eax,0x806c740
mov    0x34(%esp),%eax
mov    %eax,0x806c744
mov    0x38(%esp),%eax
mov    %eax,0x806c748
mov    0x3c(%esp),%eax
mov    %eax,0x806c74c
mov    0x40(%esp),%eax
mov    %eax,0x806c750
mov    0x44(%esp),%eax
mov    %eax,0x806c754
mov    0x48(%esp),%eax
mov    %eax,0x806c758
jmp    8049f36 <fchmod@plt+0xba6>
xchg   %ax,%ax
cmp    $0x3,%eax
je     804a158 <fchmod@plt+0xdc8>
jbe    804a108 <fchmod@plt+0xd78>
cmp    $0x5,%eax
je     804a0d8 <fchmod@plt+0xd48>
jb     804a180 <fchmod@plt+0xdf0>
cmp    $0x6,%eax
je     804a170 <fchmod@plt+0xde0>
cmp    $0x7,%eax
jne    804a090 <fchmod@plt+0xd00>
mov    $0x7,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
je     804a0e8 <fchmod@plt+0xd58>
jb     804a1a8 <fchmod@plt+0xe18>
cmp    $0x1001,%eax
je     804a198 <fchmod@plt+0xe08>
cmp    $0x1002,%eax
jne    804a090 <fchmod@plt+0xd00>
mov    $0x11,%eax
mov    %ax,0x806c280
movzbl 0x23(%esp),%eax
andl   $0xffffff85,0x1c(%esp)
movb   $0x1,0x27(%esp)
mov    %eax,0x806ff60
movzbl 0x24(%esp),%eax
movb   $0x0,0x26(%esp)
movb   $0x0,0x30(%esp)
mov    %eax,0x806ff5c
movzbl 0x2f(%esp),%eax
mov    %eax,0x806ff9c
mov    0x14(%esp),%eax
and    $0xffffffc7,%eax
or     $0x1805,%eax
mov    %eax,0x14(%esp)
jmp    8049ece <fchmod@plt+0xb3e>
nop
mov    $0x5,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi),%esi
mov    $0xf,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi),%esi
mov    $0xa,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
je     804a138 <fchmod@plt+0xda8>
cmp    $0x2,%eax
sbb    %eax,%eax
not    %eax
and    $0x2,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi),%esi
mov    $0x8,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0x1,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0xd,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0x3,%ecx
mov    %cx,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x6,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0x4,%edx
mov    %dx,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x10,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0xe,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
mov    $0xb,%ecx
mov    %cx,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x9,%eax
mov    %ax,0x806c280
jmp    804a090 <fchmod@plt+0xd00>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x2,(%esp)
call   8049080 <ioctl@plt>
test   %eax,%eax
jne    804a250 <fchmod@plt+0xec0>
movzwl 0x18(%esp),%ecx
test   %cx,%cx
movzwl %cx,%edx
movzwl 0x1a(%esp),%ecx
cmove  %eax,%edx
movzwl %cx,%ebx
test   %cx,%cx
cmove  %eax,%ebx
test   %edx,%edx
je     804a252 <fchmod@plt+0xec2>
mov    %edx,0x806ff64
test   %ebx,%ebx
je     804a291 <fchmod@plt+0xf01>
mov    %ebx,0x806ff70
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
movl   $0x805e298,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     804a2d8 <fchmod@plt+0xf48>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <strtol@plt>
mov    %eax,0x806ff64
test   %eax,%eax
jg     804a23a <fchmod@plt+0xeaa>
test   %ebx,%ebx
movl   $0x18,0x806ff64
00
jne    804a23e <fchmod@plt+0xeae>
movl   $0x805e2a1,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     804a2f0 <fchmod@plt+0xf60>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <strtol@plt>
mov    %eax,0x806ff70
test   %eax,%eax
jg     804a244 <fchmod@plt+0xeb4>
movl   $0x50,0x806ff70
00
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805e29e,%eax
call   8049be0 <fchmod@plt+0x850>
test   %eax,%eax
jle    804a308 <fchmod@plt+0xf78>
mov    %eax,0x806ff64
jmp    804a23a <fchmod@plt+0xeaa>
mov    $0x805e2a9,%eax
call   8049be0 <fchmod@plt+0x850>
test   %eax,%eax
jle    804a312 <fchmod@plt+0xf82>
mov    %eax,0x806ff70
jmp    804a244 <fchmod@plt+0xeb4>
mov    0x806ff64,%eax
jmp    804a27f <fchmod@plt+0xeef>
mov    0x806ff70,%eax
jmp    804a2be <fchmod@plt+0xf2e>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x806c6e0,0xc(%esp)
cmp    $0x28,%eax
ja     804a418 <fchmod@plt+0x1088>
jmp    *0x805e320(,%eax,4)
nop
movb   $0xb,0x806c6e0
mov    $0x806c6e0,%eax
movb   $0x0,0x806c6e1
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esp),%edx
mov    $0x805e2ac,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2af,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2b2,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2b5,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2b8,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2bb,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2be,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
lea    0xc(%esp),%edx
mov    $0x805e2c1,%eax
call   8049c30 <fchmod@plt+0x8a0>
jmp    804a358 <fchmod@plt+0xfc8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esp),%edx
mov    $0x805e2c4,%eax
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
jne    804a358 <fchmod@plt+0xfc8>
movb   $0x7f,0x806c6e0
mov    $0x806c6e0,%eax
movb   $0x0,0x806c6e1
jmp    804a358 <fchmod@plt+0xfc8>
xchg   %ax,%ax
xor    %eax,%eax
jmp    804a358 <fchmod@plt+0xfc8>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x830,%esp
movl   $0x805e2cf,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x82c(%esp)
xor    %eax,%eax
call   8051120 <fchmod@plt+0x7d90>
mov    $0x805e2c7,%edx
movl   $0x0,0x806c768
00
test   %eax,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80490c0 <tgetent@plt>
cmp    $0x1,%eax
je     804a477 <fchmod@plt+0x10e7>
movl   $0x1,0x806c768
00
mov    $0x805e2d4,%eax
call   8049ce0 <fchmod@plt+0x950>
test   %eax,%eax
je     804a48f <fchmod@plt+0x10ff>
movl   $0x1,0x806c768
00
call   804a1f0 <fchmod@plt+0xe60>
call   805a8d0 <error+0x860>
mov    $0x805e2d7,%eax
call   8049ce0 <fchmod@plt+0x950>
mov    %eax,0x806ff80
mov    $0x805e2da,%eax
call   8049ce0 <fchmod@plt+0x950>
mov    %eax,0x806ff50
mov    $0x805e2dd,%eax
call   8049ce0 <fchmod@plt+0x950>
mov    %eax,0x806ff54
mov    $0x805e2e0,%eax
call   8049ce0 <fchmod@plt+0x950>
mov    %eax,0x806ff7c
mov    $0x805ed28,%eax
call   8049ce0 <fchmod@plt+0x950>
mov    %eax,0x806ff90
mov    $0x805e2e3,%eax
call   8049be0 <fchmod@plt+0x850>
test   %eax,%eax
mov    %eax,0x806ff58
js     804a990 <fchmod@plt+0x1600>
mov    %eax,0x806ff74
mov    %eax,0x806ff68
mov    %eax,0x806ff94
mov    %eax,0x806ff8c
mov    %eax,0x806ff98
mov    %eax,0x806ff6c
mov    %eax,0x806ff88
je     804a52a <fchmod@plt+0x119a>
movl   $0x0,0x807004c
00
lea    0x28(%esp),%ebx
mov    $0x805e2e6,%eax
mov    %ebx,%edx
movl   $0x806c2e0,0x28(%esp)
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x806c7cc
je     804a553 <fchmod@plt+0x11c3>
movzbl (%eax),%eax
mov    %al,0x806c288
mov    %ebx,%edx
mov    $0x805e2e9,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e30e,%esi
mov    %ebx,%edx
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x806c780
mov    $0x8062cb5,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    %ebx,%edx
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x806c77c
mov    $0x805e2ec,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    %ebx,%edx
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x806c778
mov    $0x805e2ef,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    %ebx,%edx
test   %eax,%eax
cmovne %eax,%esi
mov    $0x8062f3a,%eax
mov    %esi,0x806c774
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x806c7b0
je     804a858 <fchmod@plt+0x14c8>
cmpb   $0x0,(%eax)
je     804a858 <fchmod@plt+0x14c8>
mov    %ebx,%edx
mov    $0x805e2f2,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    0x806ff7c,%ecx
test   %ecx,%ecx
mov    %eax,0x806c7ac
je     804a60b <fchmod@plt+0x127b>
test   %eax,%eax
je     804a5f7 <fchmod@plt+0x1267>
cmpb   $0x0,(%eax)
jne    804a60b <fchmod@plt+0x127b>
movl   $0x1,0x806c2c0
00
movl   $0x805e30e,0x806c7ac
08
mov    %ebx,%edx
mov    $0x805e2f5,%eax
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x806c7b4
je     804a878 <fchmod@plt+0x14e8>
cmpb   $0x0,(%eax)
je     804a878 <fchmod@plt+0x14e8>
mov    %ebx,%edx
mov    $0x805e2fb,%eax
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x806c7b8
je     804a64b <fchmod@plt+0x12bb>
cmpb   $0x0,(%eax)
jne    804a898 <fchmod@plt+0x1508>
movl   $0x805e30e,0x806c7b8
08
movl   $0x0,0x806ff84
00
mov    $0x806c7a8,%ecx
mov    $0x8062f03,%edx
mov    $0x805e2fe,%eax
mov    %ebx,0xc(%esp)
movl   $0x805e30e,0x8(%esp)
movl   $0x805e30e,0x4(%esp)
movl   $0x806c7a4,(%esp)
call   8049c70 <fchmod@plt+0x8e0>
mov    0x806c7a4,%eax
mov    $0x806c7a0,%ecx
mov    $0x805e301,%edx
mov    %ebx,0xc(%esp)
movl   $0x806c79c,(%esp)
mov    %eax,0x8(%esp)
mov    0x806c7a8,%eax
mov    %eax,0x4(%esp)
mov    $0x805e304,%eax
call   8049c70 <fchmod@plt+0x8e0>
mov    0x806c7a4,%eax
mov    $0x806c798,%ecx
mov    $0x8062db5,%edx
mov    %ebx,0xc(%esp)
movl   $0x806c794,(%esp)
mov    %eax,0x8(%esp)
mov    0x806c7a8,%eax
mov    %eax,0x4(%esp)
mov    $0x805e307,%eax
call   8049c70 <fchmod@plt+0x8e0>
mov    0x806c7a4,%eax
mov    $0x806c790,%ecx
mov    $0x8062db5,%edx
mov    %ebx,0xc(%esp)
movl   $0x806c78c,(%esp)
mov    %eax,0x8(%esp)
mov    0x806c7a8,%eax
mov    %eax,0x4(%esp)
mov    $0x8062f4b,%eax
call   8049c70 <fchmod@plt+0x8e0>
mov    %ebx,%edx
mov    $0x805e30a,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e30e,%edx
test   %eax,%eax
cmovne %eax,%edx
mov    $0x8062e18,%eax
mov    %edx,0x806c788
call   8049ce0 <fchmod@plt+0x950>
test   %eax,%eax
je     804a968 <fchmod@plt+0x15d8>
movl   $0x805e30d,0x806c784
08
mov    %ebx,%edx
mov    $0x805f502,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e30e,%edx
test   %eax,%eax
mov    %eax,%esi
mov    $0x805e30e,%eax
cmove  %eax,%esi
mov    0x806c7b8,%eax
cmpb   $0x0,(%eax)
jne    804a918 <fchmod@plt+0x1588>
mov    $0x805e312,%ecx
mov    %esi,%eax
call   8049d20 <fchmod@plt+0x990>
mov    %ebx,%edx
mov    %eax,0x806c7c8
mov    $0x8062c32,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e30e,%edx
test   %eax,%eax
mov    %eax,%esi
mov    $0x805e30e,%eax
cmove  %eax,%esi
mov    0x806c7b8,%eax
cmpb   $0x0,(%eax)
jne    804a8c8 <fchmod@plt+0x1538>
mov    $0x805e316,%ecx
mov    %esi,%eax
call   8049d20 <fchmod@plt+0x990>
mov    %ebx,%edx
mov    $0x805e30e,%edi
mov    %eax,0x806c7c0
mov    $0x805e318,%eax
call   8049c30 <fchmod@plt+0x8a0>
mov    $0x805e316,%edx
test   %eax,%eax
cmovne %eax,%edx
mov    $0x8062e40,%eax
mov    %edx,0x806c7bc
mov    %ebx,%edx
call   8049c30 <fchmod@plt+0x8a0>
mov    %ebx,%edx
test   %eax,%eax
mov    %eax,%esi
mov    $0x805e31b,%eax
cmove  %edi,%esi
call   8049c30 <fchmod@plt+0x8a0>
mov    0x806ff54,%edx
test   %eax,%eax
cmove  %edi,%eax
test   %edx,%edx
je     804a8a8 <fchmod@plt+0x1518>
mov    %esi,0x806c7c4
cmpb   $0x0,(%esi)
jne    804a839 <fchmod@plt+0x14a9>
movl   $0x1,0x806d224
00
mov    0x82c(%esp),%eax
xor    %gs:0x14,%eax
jne    804a9e5 <fchmod@plt+0x1655>
add    $0x830,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movl   $0x1,0x806c2c0
00
movl   $0x805e30e,0x806c7b0
08
jmp    804a5d3 <fchmod@plt+0x1243>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806c2c0
00
movl   $0x805e2f8,0x806c7b4
08
jmp    804a62d <fchmod@plt+0x129d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806ff84
00
jmp    804a65f <fchmod@plt+0x12cf>
nop
mov    %eax,%edx
mov    $0x805e30e,%ecx
mov    %esi,%eax
call   8049d20 <fchmod@plt+0x990>
mov    %eax,0x806c7c4
mov    %eax,%esi
jmp    804a82a <fchmod@plt+0x149a>
lea    0x0(%esi),%esi
mov    0x806ff64,%edi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
lea    -0x1(%edi),%edx
mov    %edx,0x8(%esp)
call   8048ff0 <tgoto@plt>
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   80491a0 <strlen@plt>
mov    0x1c(%esp),%edx
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x28(%esp)
jmp    804a7c0 <fchmod@plt+0x1430>
xchg   %ax,%ax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048ff0 <tgoto@plt>
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   80491a0 <strlen@plt>
mov    0x1c(%esp),%edx
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x28(%esp)
jmp    804a784 <fchmod@plt+0x13f4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    $0x805e30f,%eax
call   8049c30 <fchmod@plt+0x8a0>
test   %eax,%eax
mov    %eax,0x806c784
je     804a74f <fchmod@plt+0x13bf>
cmpb   $0x0,(%eax)
jne    804a759 <fchmod@plt+0x13c9>
jmp    804a74f <fchmod@plt+0x13bf>
nop
movl   $0x0,0x806ff58
00
movl   $0x0,0x806ff74
00
movl   $0x0,0x806ff68
00
movl   $0x0,0x806ff94
00
movl   $0x0,0x806ff8c
00
movl   $0x0,0x806ff98
00
movl   $0x0,0x806ff6c
00
movl   $0x0,0x806ff88
00
jmp    804a52a <fchmod@plt+0x119a>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x8070020,%eax
test   %eax,%eax
je     804aa50 <fchmod@plt+0x16c0>
mov    0x806fff8,%eax
test   %eax,%eax
je     804aa77 <fchmod@plt+0x16e7>
mov    0x806ffec,%ebx
test   %ebx,%ebx
je     804aaa3 <fchmod@plt+0x1713>
cmpl   $0x1,0x806ff64
mov    $0x1,%ebx
jle    804aa3f <fchmod@plt+0x16af>
lea    0x0(%esi),%esi
movl   $0xa,(%esp)
add    $0x1,%ebx
call   8059b70 <fchmod@plt+0x107e0>
cmp    %ebx,0x806ff64
jg     804aa28 <fchmod@plt+0x1698>
movl   $0x1,0x806c770
00
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c778,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806fff8,%eax
test   %eax,%eax
jne    804aa06 <fchmod@plt+0x1676>
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c780,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806ffec,%ebx
test   %ebx,%ebx
jne    804aa14 <fchmod@plt+0x1684>
mov    0x806c7bc,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
movl   $0x1,0x806c770
00
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x806c770,%eax
test   %eax,%eax
je     804aafb <fchmod@plt+0x176b>
sub    $0x1c,%esp
mov    0x806fff8,%eax
test   %eax,%eax
je     804ab30 <fchmod@plt+0x17a0>
mov    0x8070020,%eax
test   %eax,%eax
je     804ab00 <fchmod@plt+0x1770>
movl   $0x0,0x806c770
00
add    $0x1c,%esp
repz ret
lea    0x0(%esi),%esi
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c774,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
movl   $0x0,0x806c770
00
add    $0x1c,%esp
jmp    804aafb <fchmod@plt+0x176b>
lea    0x0(%esi),%esi
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c77c,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x8070020,%eax
test   %eax,%eax
jne    804aaee <fchmod@plt+0x175e>
jmp    804ab00 <fchmod@plt+0x1770>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x806c7c8,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c7c4,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x806c7c0,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x806c7bc,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x806c7b8,%eax
mov    %eax,(%esp)
call   8048ff0 <tgoto@plt>
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c788,%eax
cmpb   $0x0,(%eax)
jne    804ac80 <fchmod@plt+0x18f0>
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x806ff64,%edx
movl   $0x8059b70,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
jmp    804acb0 <fchmod@plt+0x1920>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl   $0x2,0x8070004
je     804acd0 <fchmod@plt+0x1940>
sub    $0x1c,%esp
movl   $0x7,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
jmp    804ac70 <fchmod@plt+0x18e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x806ff64,%eax
movl   $0x8059b70,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806c7b4,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x806c7b0,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806b460,%eax
mov    0x20(%esp),%ebx
or     %ebx,%eax
test   $0x20,%bl
cmovne %eax,%ebx
mov    %ebx,%eax
or     $0x8,%eax
test   $0x40,%bl
cmovne %eax,%ebx
mov    %ebx,%esi
and    $0xffffff9f,%esi
test   $0x1,%bl
jne    804ade8 <fchmod@plt+0x1a58>
test   $0x2,%bl
jne    804adc8 <fchmod@plt+0x1a38>
test   $0x4,%bl
jne    804ada8 <fchmod@plt+0x1a18>
and    $0x8,%ebx
je     804ad97 <fchmod@plt+0x1a07>
mov    0x806c7a8,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    %esi,0x806c76c
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c790,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
jmp    804ad75 <fchmod@plt+0x19e5>
nop
mov    0x806c798,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
jmp    804ad70 <fchmod@plt+0x19e0>
nop
mov    0x806c7a0,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
jmp    804ad6b <fchmod@plt+0x19db>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x806c76c,%eax
test   $0x8,%al
jne    804aea8 <fchmod@plt+0x1b18>
test   $0x4,%al
jne    804ae80 <fchmod@plt+0x1af0>
test   $0x2,%al
jne    804ae58 <fchmod@plt+0x1ac8>
test   $0x1,%al
je     804ae49 <fchmod@plt+0x1ab9>
mov    0x806c79c,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
movl   $0x0,0x806c76c
00
add    $0x1c,%esp
ret
nop
mov    0x806c794,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806c76c,%eax
jmp    804ae28 <fchmod@plt+0x1a98>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c78c,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806c76c,%eax
jmp    804ae24 <fchmod@plt+0x1a94>
nop
mov    0x806c7a4,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806c76c,%eax
jmp    804ae20 <fchmod@plt+0x1a90>
nop
push   %ebx
sub    $0x18,%esp
mov    0x8070040,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
test   %eax,%eax
je     804af20 <fchmod@plt+0x1b90>
mov    0x806c7c0,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806c76c,%ebx
test   %ebx,%ebx
je     804af37 <fchmod@plt+0x1ba7>
call   804ae10 <fchmod@plt+0x1a80>
call   8049dc0 <fchmod@plt+0xa30>
mov    %ebx,(%esp)
call   804ad40 <fchmod@plt+0x19b0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c7bc,%eax
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
mov    0x806c76c,%ebx
test   %ebx,%ebx
jne    804af04 <fchmod@plt+0x1b74>
add    $0x18,%esp
pop    %ebx
jmp    8049dc0 <fchmod@plt+0xa30>
push   %ebx
sub    $0x8,%esp
mov    0x806b460,%eax
mov    0x10(%esp),%ebx
or     %ebx,%eax
test   $0x20,%bl
cmove  %ebx,%eax
mov    %eax,%edx
or     $0x8,%edx
test   $0x40,%al
cmovne %edx,%eax
and    $0xffffff9f,%eax
xor    0x806c76c,%eax
and    $0xffffffef,%eax
jne    804af78 <fchmod@plt+0x1be8>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
call   804ae10 <fchmod@plt+0x1a80>
mov    %ebx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804ad40 <fchmod@plt+0x19b0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    0x806b460,%ecx
mov    0x8(%esp),%eax
or     %edx,%ecx
test   $0x20,%dl
cmovne %ecx,%edx
mov    %edx,%ecx
or     $0x8,%ecx
test   $0x40,%dl
cmovne %ecx,%edx
mov    0x806b460,%ecx
and    $0xffffff9f,%edx
or     %eax,%ecx
test   $0x20,%al
cmovne %ecx,%eax
mov    %eax,%ecx
or     $0x8,%ecx
test   $0x40,%al
cmovne %ecx,%eax
and    $0xffffff9f,%eax
cmp    %eax,%edx
sete   %al
movzbl %al,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x806b460,%edx
or     %eax,%edx
test   $0x20,%al
cmovne %edx,%eax
mov    %eax,%edx
or     $0x8,%edx
test   $0x40,%al
cmovne %edx,%eax
and    $0xffffff9f,%eax
ret
nop
sub    $0x1c,%esp
mov    0x806c784,%eax
movl   $0x8059b70,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <tputs@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%edi
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
mov    0x3c(%esp),%esi
test   %edi,%edi
sete   %al
mov    %al,0xc(%esp)
movzbl %al,%eax
neg    %eax
mov    %eax,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804b110 <fchmod@plt+0x1d80>
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    804b110 <fchmod@plt+0x1d80>
xchg   %ax,%ax
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xa,%eax
je     804b150 <fchmod@plt+0x1dc0>
cmp    $0xffffffff,%eax
je     804b150 <fchmod@plt+0x1dc0>
cmp    %ebx,%eax
jne    804b080 <fchmod@plt+0x1cf0>
sub    $0x1,%esi
test   %esi,%esi
jg     804b080 <fchmod@plt+0x1cf0>
cmpb   $0x0,0xc(%esp)
mov    $0x804ba30,%esi
jne    804b1a4 <fchmod@plt+0x1e14>
movl   $0x0,0xc(%esp)
lea    0x0(%esi),%esi
call   *%esi
cmp    $0xffffffff,%eax
je     804b192 <fchmod@plt+0x1e02>
cmp    %ebx,%eax
je     804b188 <fchmod@plt+0x1df8>
cmp    %ebp,%eax
jne    804b0c0 <fchmod@plt+0x1d30>
subl   $0x1,0xc(%esp)
cmpl   $0xffffffff,0xc(%esp)
jne    804b0c0 <fchmod@plt+0x1d30>
cmp    $0x1,%edi
sbb    %ebx,%ebx
call   804b9f0 <fchmod@plt+0x2660>
and    $0x2,%ebx
sub    $0x1,%ebx
mov    %ebx,0x38(%esp)
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8054cf0 <fchmod@plt+0xb960>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
jne    804b130 <fchmod@plt+0x1da0>
movl   $0x0,0x34(%esp)
movl   $0x805e3d8,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
movl   $0x0,0x34(%esp)
movl   $0x805e3c4,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
movl   $0x0,0x34(%esp)
je     804b170 <fchmod@plt+0x1de0>
movl   $0x805e3ef,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
movl   $0x805e406,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,0xc(%esp)
jmp    804b0c0 <fchmod@plt+0x1d30>
movl   $0x0,0x34(%esp)
movl   $0x805e420,0x30(%esp)
jmp    804b124 <fchmod@plt+0x1d94>
call   804bdf0 <fchmod@plt+0x2a60>
mov    $0x804bdf0,%esi
jmp    804b0b2 <fchmod@plt+0x1d22>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
cmp    $0xffffffff,%ebx
je     804b1ea <fchmod@plt+0x1e5a>
cmpl   $0xffffffff,0x806a164
je     804b1ea <fchmod@plt+0x1e5a>
movl   $0x0,0x4(%esp)
movl   $0x805e434,(%esp)
call   805a070 <error>
mov    %ebx,0x806a164
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806c7d4,%ebp
mov    0x418(%ebp),%eax
mov    0x41c(%ebp),%edx
add    $0x1fff,%eax
adc    $0x0,%edx
xor    %ebx,%ebx
mov    %edx,%esi
sar    $0x1f,%esi
and    $0x1fff,%esi
add    %esi,%eax
adc    %ebx,%edx
shrd   $0xd,%edx,%eax
sar    $0xd,%edx
cmp    $0x0,%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jle    804b2e1 <fchmod@plt+0x1f51>
mov    0x0(%ebp),%eax
xor    %esi,%esi
xor    %edi,%edi
xor    %ebx,%ebx
cmp    %ebp,%eax
jne    804b266 <fchmod@plt+0x1ed6>
jmp    804b2c0 <fchmod@plt+0x1f30>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
cmp    %ebp,%eax
je     804b2c0 <fchmod@plt+0x1f30>
mov    0x14(%eax),%ecx
mov    0x10(%eax),%edx
xor    %edi,%ecx
xor    %esi,%edx
or     %edx,%ecx
jne    804b260 <fchmod@plt+0x1ed0>
mov    0x18(%eax),%edx
add    $0x1c,%eax
mov    %eax,0x4(%esp)
mov    0x806a148,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80491e0 <write@plt>
mov    $0x1,%eax
or     %ebx,%eax
je     804b2c6 <fchmod@plt+0x1f36>
mov    0x1c(%esp),%edx
add    $0x1,%esi
mov    0x18(%esp),%eax
adc    $0x0,%edi
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     804b2ee <fchmod@plt+0x1f5e>
mov    0x806c7d4,%ebp
mov    0x0(%ebp),%eax
cmp    %ebp,%eax
jne    804b266 <fchmod@plt+0x1ed6>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
or     %ebx,%eax
jne    804b298 <fchmod@plt+0x1f08>
movl   $0x0,0x4(%esp)
mov    $0x1,%ebx
movl   $0x805e484,(%esp)
call   805a070 <error>
jmp    804b298 <fchmod@plt+0x1f08>
jl     804b2ee <fchmod@plt+0x1f5e>
cmpl   $0x0,0x18(%esp)
ja     804b24a <fchmod@plt+0x1eba>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c7d4,%ecx
test   %ecx,%ecx
je     804b340 <fchmod@plt+0x1fb0>
mov    0x806ffa0,%eax
test   %eax,%eax
jne    804b340 <fchmod@plt+0x1fb0>
push   %ebx
mov    0x805f5a0,%eax
mov    0x414(%ecx),%ebx
cltd
test   $0x8,%bl
jne    804b33a <fchmod@plt+0x1faa>
xor    %eax,%eax
xor    %edx,%edx
and    $0x10,%ebx
jne    804b33a <fchmod@plt+0x1faa>
mov    0x430(%ecx),%eax
mov    0x434(%ecx),%edx
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x806c7d4,%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804b574 <fchmod@plt+0x21e4>
mov    0x18(%esp),%eax
mov    (%eax),%ecx
cmp    %eax,%ecx
je     804b7e0 <fchmod@plt+0x2450>
mov    0x424(%eax),%edx
mov    0x14(%ecx),%esi
mov    0x428(%eax),%eax
mov    0x10(%ecx),%ebx
xor    %eax,%esi
xor    %edx,%ebx
or     %ebx,%esi
je     804b590 <fchmod@plt+0x2200>
mov    %edx,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x10(%esp),%eax
mov    0x18(%esp),%edi
and    $0x3f,%eax
mov    %eax,%edx
add    $0x1,%eax
shl    $0x4,%edx
mov    %edx,%esi
mov    %edx,0x20(%esp)
mov    %edi,%edx
add    %esi,%edx
mov    %eax,%esi
mov    0x18(%edx),%ebx
shl    $0x4,%esi
add    %edi,%esi
mov    %edx,0x28(%esp)
mov    %eax,0x24(%esp)
cmp    %esi,%ebx
je     804b419 <fchmod@plt+0x2089>
mov    0x10(%esp),%edi
mov    0x14(%esp),%ebp
mov    0x14(%ebx),%edx
mov    0x10(%ebx),%eax
xor    %ebp,%edx
xor    %edi,%eax
or     %eax,%edx
je     804b520 <fchmod@plt+0x2190>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
jmp    804b40a <fchmod@plt+0x207a>
xchg   %ax,%ax
mov    0x14(%ebx),%ebp
mov    0x10(%ebx),%edi
xor    %edx,%ebp
xor    %eax,%edi
or     %edi,%ebp
je     804b518 <fchmod@plt+0x2188>
mov    0x8(%ebx),%ebx
cmp    %esi,%ebx
jne    804b3f8 <fchmod@plt+0x2068>
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
cmp    %edx,%eax
je     804b435 <fchmod@plt+0x20a5>
mov    0x10(%edx),%eax
mov    %edx,%ebx
and    0x14(%edx),%eax
cmp    $0xffffffff,%eax
je     804b4b5 <fchmod@plt+0x2125>
mov    0x8070024,%ebx
test   %ebx,%ebx
je     804b76f <fchmod@plt+0x23df>
mov    0x18(%esp),%eax
testb  $0x1,0x414(%eax)
jne    804b76f <fchmod@plt+0x23df>
movl   $0x201c,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x2c(%esp)
call   8049370 <calloc@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804b97d <fchmod@plt+0x25ed>
mov    0x18(%esp),%ecx
mov    %eax,%ebx
addl   $0x1,0x420(%ecx)
mov    %edx,0x4(%eax)
mov    0x4(%ecx),%edx
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %ecx,(%eax)
mov    %eax,(%edx)
mov    0x18(%ecx),%edx
mov    %eax,0x4(%ecx)
mov    %edx,0x8(%eax)
lea    0x10(%ecx),%edx
mov    %edx,0xc(%eax)
mov    0x18(%ecx),%edx
mov    %eax,0xc(%edx)
mov    %eax,0x18(%ecx)
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
mov    %edx,0xc(%eax)
mov    0xc(%ebx),%edx
mov    %eax,0x8(%edx)
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
movl   $0x0,0x18(%ebx)
mov    %edx,0x14(%ebx)
mov    0x28(%esp),%edx
mov    %eax,0x10(%ebx)
movl   $0x0,0x28(%esp)
mov    0x18(%edx),%eax
mov    %esi,0xc(%ebx)
xor    %esi,%esi
mov    %eax,0x8(%ebx)
mov    0x18(%edx),%eax
mov    %ebx,0xc(%eax)
mov    0x18(%esp),%eax
mov    %ebx,0x18(%edx)
mov    0x424(%eax),%edx
mov    0x428(%eax),%ecx
xor    %eax,%eax
mov    %edx,0x10(%esp)
xor    %edx,%edx
mov    %ecx,0x14(%esp)
jmp    804b541 <fchmod@plt+0x21b1>
nop
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x18(%esp),%eax
mov    0x18(%ebx),%esi
mov    0x42c(%eax),%eax
cmp    %esi,%eax
jb     804b9c0 <fchmod@plt+0x2630>
mov    %esi,%eax
xor    %edx,%edx
movl   $0x0,0x28(%esp)
mov    0x10(%esp),%edi
mov    0x14(%esp),%ebp
shld   $0xd,%edi,%ebp
shl    $0xd,%edi
mov    %edi,0x10(%esp)
add    %eax,0x10(%esp)
mov    %ebp,0x14(%esp)
adc    %edx,0x14(%esp)
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804b5b8 <fchmod@plt+0x2228>
cmp    %edx,0x14(%esp)
jle    804b5b0 <fchmod@plt+0x2220>
mov    $0xffffffff,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%esi
mov    0x42c(%esi),%ebx
cmp    0x18(%ecx),%ebx
jae    804b397 <fchmod@plt+0x2007>
movzbl 0x1c(%ecx,%ebx,1),%eax
jmp    804b580 <fchmod@plt+0x21f0>
lea    0x0(%esi),%esi
jl     804b5b8 <fchmod@plt+0x2228>
cmp    %eax,0x10(%esp)
jae    804b574 <fchmod@plt+0x21e4>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
xor    0x41c(%ecx),%edx
xor    0x418(%ecx),%eax
or     %eax,%edx
je     804b62e <fchmod@plt+0x229e>
testb  $0x1,0x414(%ecx)
mov    $0x3f,%eax
je     804b580 <fchmod@plt+0x21f0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0x410(%ecx),%eax
mov    %eax,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     804b99d <fchmod@plt+0x260d>
mov    0x18(%esp),%eax
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
mov    0x18(%ebx),%esi
mov    %edx,0x418(%eax)
mov    %ecx,0x41c(%eax)
mov    0x806a164,%eax
cmp    $0xffffffff,%eax
je     804b748 <fchmod@plt+0x23b8>
mov    %al,0x1c(%ebx,%esi,1)
movl   $0xffffffff,0x806a164
ff
mov    $0x1,%ecx
mov    $0x1,%eax
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    0x806ff40,%edx
test   %edx,%edx
jne    804b7a8 <fchmod@plt+0x2418>
mov    0x806a148,%edx
test   %edx,%edx
js     804b7a8 <fchmod@plt+0x2418>
test   %eax,%eax
je     804b7f9 <fchmod@plt+0x2469>
lea    0x1c(%ebx,%esi,1),%eax
mov    %ecx,%ebp
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80491e0 <write@plt>
mov    0x806c7d4,%edi
mov    0x18(%ebx),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    %eax,0x418(%edi)
mov    (%edi),%ecx
mov    0x42c(%edi),%eax
adc    %edx,0x41c(%edi)
add    %ebp,%esi
mov    %esi,0x18(%ebx)
mov    %edi,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%ebx
je     804b723 <fchmod@plt+0x2393>
mov    (%ebx),%edx
mov    0x4(%ebx),%ecx
mov    0x18(%esp),%edi
mov    %ecx,0x4(%edx)
mov    0x4(%ebx),%ecx
mov    %edx,(%ecx)
mov    (%edi),%edx
mov    0xc(%ebx),%ecx
mov    %edi,0x4(%ebx)
mov    %edx,(%ebx)
mov    (%edi),%edx
mov    %ebx,0x4(%edx)
mov    0x8(%ebx),%edx
mov    %ebx,(%edi)
mov    %ecx,0xc(%edx)
mov    0xc(%ebx),%ecx
mov    %edx,0x8(%ecx)
mov    0x20(%esp),%edx
add    %edi,%edx
mov    0x18(%edx),%ecx
mov    %ecx,0x8(%ebx)
mov    0x24(%esp),%ecx
shl    $0x4,%ecx
add    %edi,%ecx
mov    %ecx,0xc(%ebx)
mov    0x18(%edx),%ecx
mov    %ebx,0xc(%ecx)
mov    %ebx,0x18(%edx)
cmp    %esi,%eax
jb     804b798 <fchmod@plt+0x2408>
mov    0x18(%esp),%eax
mov    0x428(%eax),%edx
mov    0x424(%eax),%eax
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    %esi,%eax
jmp    804b541 <fchmod@plt+0x21b1>
mov    0x18(%esp),%eax
testb  $0x8,0x414(%eax)
je     804b8a6 <fchmod@plt+0x2516>
mov    0x418(%eax),%eax
movzbl 0x805f5c0(%eax),%eax
mov    %al,0x1c(%ebx,%esi,1)
jmp    804b64a <fchmod@plt+0x22ba>
mov    0x806a160,%eax
test   %eax,%eax
js     804b454 <fchmod@plt+0x20c4>
mov    0x18(%esp),%ecx
mov    %edx,%ebx
cmp    0x420(%ecx),%eax
jle    804b4b5 <fchmod@plt+0x2125>
jmp    804b454 <fchmod@plt+0x20c4>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1c(%ebx,%eax,1),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x806c7d4,%edx
mov    0x18(%esp),%edi
mov    0x1c(%esp),%ebp
add    %edi,0x418(%edx)
adc    %ebp,0x41c(%edx)
add    %ecx,%esi
test   %eax,%eax
mov    %esi,0x18(%ebx)
je     804b819 <fchmod@plt+0x2489>
mov    (%edx),%ecx
mov    0x42c(%edx),%eax
mov    %edx,0x18(%esp)
jmp    804b6d0 <fchmod@plt+0x2340>
lea    0x0(%esi,%eiz,1),%esi
mov    0x424(%ecx),%eax
mov    0x428(%ecx),%edx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
jmp    804b39f <fchmod@plt+0x200f>
mov    0x806c7d4,%eax
mov    0x18(%esp),%edi
mov    0x1c(%esp),%ebp
add    %edi,0x418(%eax)
mov    %eax,%edx
adc    %ebp,0x41c(%eax)
add    %ecx,%esi
mov    %esi,0x18(%ebx)
mov    %edx,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%edx
mov    %ecx,0x434(%eax)
mov    %edx,0x430(%eax)
mov    0x806ffa0,%eax
test   %eax,%eax
je     804b861 <fchmod@plt+0x24d1>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804b887 <fchmod@plt+0x24f7>
movl   $0x1,(%esp)
call   8049010 <sleep@plt>
cmpl   $0x1,0x8070054
movl   $0x1,0x28(%esp)
je     804b911 <fchmod@plt+0x2581>
mov    0x8070078,%eax
test   %eax,%eax
jne    804b574 <fchmod@plt+0x21e4>
mov    0x806c7d4,%eax
mov    0x18(%ebx),%esi
mov    %eax,0x18(%esp)
mov    (%eax),%ecx
mov    0x42c(%eax),%eax
jmp    804b6d0 <fchmod@plt+0x2340>
call   805b4a0 <error+0x1430>
movl   $0x805f528,(%esp)
mov    %eax,0x30(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   805a190 <error+0x120>
jmp    804b840 <fchmod@plt+0x24b0>
mov    $0x2000,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x1c(%ebx,%esi,1),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    0x410(%eax),%eax
mov    %eax,(%esp)
call   8059860 <fchmod@plt+0x104d0>
cmp    $0xfffffffe,%eax
je     804b574 <fchmod@plt+0x21e4>
test   %eax,%eax
jns    804b9cd <fchmod@plt+0x263d>
movl   $0x0,0x4(%esp)
movl   $0x805e454,(%esp)
call   805a070 <error>
call   804ad10 <fchmod@plt+0x1980>
mov    0x18(%ebx),%esi
xor    %ecx,%ecx
movl   $0x0,0x18(%esp)
xor    %eax,%eax
movl   $0x0,0x1c(%esp)
jmp    804b664 <fchmod@plt+0x22d4>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
lea    0x30(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049330 <__xstat64@plt>
test   %eax,%eax
jne    804b970 <fchmod@plt+0x25e0>
mov    0x88(%esp),%eax
mov    0x8c(%esp),%edx
xor    0x806ffac,%edx
xor    0x806ffa8,%eax
or     %eax,%edx
jne    804b98e <fchmod@plt+0x25fe>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
xor    0x806ffb4,%edx
xor    0x806ffb0,%eax
or     %eax,%edx
jne    804b98e <fchmod@plt+0x25fe>
movl   $0x1,0x28(%esp)
jmp    804b861 <fchmod@plt+0x24d1>
movl   $0x0,0x8070024
00
mov    %edx,%ebx
jmp    804b4b5 <fchmod@plt+0x2125>
movl   $0x2,0x806ffbc
00
jmp    804b574 <fchmod@plt+0x21e4>
movl   $0x0,0x4(%esp)
movl   $0x805e449,(%esp)
call   805a070 <error>
call   804ad10 <fchmod@plt+0x1980>
mov    $0xffffffff,%eax
jmp    804b580 <fchmod@plt+0x21f0>
movl   $0x0,0x28(%esp)
jmp    804b6d0 <fchmod@plt+0x2340>
mov    %eax,%edi
mov    0x18(%ebx),%esi
mov    %eax,%ecx
sar    $0x1f,%edi
mov    %eax,0x18(%esp)
mov    %edi,0x1c(%esp)
jmp    804b664 <fchmod@plt+0x22d4>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x806c7d4,%ecx
test   %ecx,%ecx
je     804ba1c <fchmod@plt+0x268c>
push   %ebx
mov    0x424(%ecx),%eax
xor    %ebx,%ebx
mov    0x428(%ecx),%edx
mov    0x42c(%ecx),%ecx
shld   $0xd,%eax,%edx
shl    $0xd,%eax
add    %ecx,%eax
adc    %ebx,%edx
pop    %ebx
ret
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c7d4,%eax
test   %eax,%eax
je     804ba88 <fchmod@plt+0x26f8>
sub    $0xc,%esp
call   804b350 <fchmod@plt+0x1fc0>
cmp    $0xffffffff,%eax
je     804ba90 <fchmod@plt+0x2700>
mov    0x806c7d4,%edx
mov    0x42c(%edx),%ecx
cmp    $0x1ffe,%ecx
jbe    804ba78 <fchmod@plt+0x26e8>
addl   $0x1,0x424(%edx)
adcl   $0x0,0x428(%edx)
movl   $0x0,0x42c(%edx)
00
add    $0xc,%esp
ret
xchg   %ax,%ax
add    $0x1,%ecx
mov    %ecx,0x42c(%edx)
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    804ba72 <fchmod@plt+0x26e2>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806a148,%eax
test   %eax,%eax
js     804baf0 <fchmod@plt+0x2760>
sub    $0x1c,%esp
mov    0x806c7d0,%ecx
mov    %eax,%edx
test   %ecx,%ecx
jne    804bad1 <fchmod@plt+0x2741>
mov    0x806c7d4,%edx
mov    0x430(%edx),%ecx
and    0x434(%edx),%ecx
mov    %eax,%edx
cmp    $0xffffffff,%ecx
je     804baf8 <fchmod@plt+0x2768>
mov    %edx,(%esp)
call   8049350 <close@plt>
movl   $0xffffffff,0x806a148
ff
movl   $0x0,0x806c290
00
add    $0x1c,%esp
repz ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x805e45f,(%esp)
movl   $0x1,0x806c7d0
00
call   805a190 <error+0x120>
jmp    804bb21 <fchmod@plt+0x2791>
testb  $0x3,0x8070078
jne    804bb2b <fchmod@plt+0x279b>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
jne    804bb18 <fchmod@plt+0x2788>
mov    0x806a148,%edx
jmp    804bad1 <fchmod@plt+0x2741>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806c7d4,%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
test   %ebx,%ebx
je     804bc76 <fchmod@plt+0x28e6>
call   804b300 <fchmod@plt+0x1f70>
test   %edi,%edi
js     804bc80 <fchmod@plt+0x28f0>
cmp    %edx,%edi
lea    0x0(%esi,%eiz,1),%esi
jle    804bc90 <fchmod@plt+0x2900>
and    %eax,%edx
cmp    $0xffffffff,%edx
jne    804bc80 <fchmod@plt+0x28f0>
mov    %esi,%eax
mov    %edi,%edx
shrd   $0xd,%edi,%eax
sar    $0xd,%edx
testb  $0x1,0x414(%ebx)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
jne    804bcb0 <fchmod@plt+0x2920>
mov    0x41c(%ebx),%ecx
mov    0x418(%ebx),%eax
mov    %ecx,%edx
mov    %eax,0x14(%esp)
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
mov    %ecx,0x10(%esp)
je     804bcb0 <fchmod@plt+0x2920>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
mov    %edx,%ebp
and    $0x3f,%ebp
add    $0x1,%ebp
shl    $0x4,%ebp
add    %ebx,%ebp
mov    0x8(%ebp),%eax
cmp    %eax,%ebp
je     804bc29 <fchmod@plt+0x2899>
mov    0x8(%esp),%edx
xor    0x14(%eax),%ecx
xor    0x10(%eax),%edx
or     %edx,%ecx
je     804bcb0 <fchmod@plt+0x2920>
mov    %edi,0x1c(%esp)
mov    0x8(%esp),%ecx
mov    %ebx,%edi
mov    %esi,0x18(%esp)
mov    0xc(%esp),%ebx
jmp    804bc1a <fchmod@plt+0x288a>
lea    0x0(%esi),%esi
mov    0x14(%eax),%esi
mov    0x10(%eax),%edx
xor    %ebx,%esi
xor    %ecx,%edx
or     %edx,%esi
je     804bca8 <fchmod@plt+0x2918>
mov    0x8(%eax),%eax
cmp    %eax,%ebp
jne    804bc08 <fchmod@plt+0x2878>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
cmp    0x10(%esp),%edi
jl     804bc80 <fchmod@plt+0x28f0>
jg     804bc37 <fchmod@plt+0x28a7>
cmp    0x14(%esp),%esi
jb     804bc80 <fchmod@plt+0x28f0>
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
jmp    804bc70 <fchmod@plt+0x28e0>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%esi
jbe    804bc76 <fchmod@plt+0x28e6>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
je     804bc80 <fchmod@plt+0x28f0>
testb  $0x3,0x8070078
jne    804bc80 <fchmod@plt+0x28f0>
mov    0x806c7d4,%eax
mov    0x418(%eax),%edx
mov    0x41c(%eax),%eax
cmp    %eax,%edi
jg     804bc4c <fchmod@plt+0x28bc>
jge    804bc48 <fchmod@plt+0x28b8>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jl     804bb81 <fchmod@plt+0x27f1>
cmp    %eax,%esi
jbe    804bb81 <fchmod@plt+0x27f1>
xchg   %ax,%ax
jmp    804bb76 <fchmod@plt+0x27e6>
lea    0x0(%esi),%esi
mov    0x18(%esp),%esi
mov    %edi,%ebx
xchg   %ax,%ax
mov    0x8(%esp),%eax
and    $0x1fff,%esi
mov    0xc(%esp),%edx
mov    %esi,0x42c(%ebx)
mov    %eax,0x424(%ebx)
xor    %eax,%eax
mov    %edx,0x428(%ebx)
jmp    804bc78 <fchmod@plt+0x28e8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
je     804bd48 <fchmod@plt+0x29b8>
mov    0x806c7d4,%ecx
mov    (%ecx),%eax
cmp    %eax,%ecx
je     804bd50 <fchmod@plt+0x29c0>
mov    0x10(%eax),%edi
mov    0x14(%eax),%esi
mov    (%eax),%eax
cmp    %eax,%ecx
je     804bd30 <fchmod@plt+0x29a0>
mov    0x14(%eax),%edx
mov    0x10(%eax),%ebx
cmp    %edx,%esi
jl     804bd10 <fchmod@plt+0x2980>
jg     804bd26 <fchmod@plt+0x2996>
cmp    %ebx,%edi
jbe    804bd10 <fchmod@plt+0x2980>
mov    (%eax),%eax
mov    %ebx,%edi
mov    %edx,%esi
cmp    %eax,%ecx
jne    804bd16 <fchmod@plt+0x2986>
mov    %edi,0x424(%ecx)
xor    %eax,%eax
mov    %esi,0x428(%ecx)
movl   $0x0,0x42c(%ecx)
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0x1,%eax
jmp    804bd48 <fchmod@plt+0x29b8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x806c7d4,%ebx
test   %ebx,%ebx
je     804bd9b <fchmod@plt+0x2a0b>
testb  $0x1,0x414(%ebx)
jne    804bdc8 <fchmod@plt+0x2a38>
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804bd91 <fchmod@plt+0x2a01>
jmp    804bda2 <fchmod@plt+0x2a12>
nop
testb  $0x3,0x8070078
jne    804bdb8 <fchmod@plt+0x2a28>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
jne    804bd88 <fchmod@plt+0x29f8>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x410(%ebx),%eax
mov    %eax,(%esp)
call   8053340 <fchmod@plt+0x9fb0>
mov    %eax,0x430(%ebx)
mov    %edx,0x434(%ebx)
jmp    804bd77 <fchmod@plt+0x29e7>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x806c7d4,%ebx
test   %ebx,%ebx
je     804bea0 <fchmod@plt+0x2b10>
mov    0x42c(%ebx),%eax
test   %eax,%eax
jne    804be80 <fchmod@plt+0x2af0>
mov    0x428(%ebx),%edx
mov    0x424(%ebx),%eax
cmp    $0x0,%edx
jl     804bea0 <fchmod@plt+0x2b10>
jle    804be98 <fchmod@plt+0x2b08>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
testb  $0x1,0x414(%ebx)
jne    804be5d <fchmod@plt+0x2acd>
mov    %eax,%ebp
and    $0x3f,%ebp
add    $0x1,%ebp
shl    $0x4,%ebp
add    %ebx,%ebp
mov    0x8(%ebp),%ecx
cmp    %ebp,%ecx
jne    804be4f <fchmod@plt+0x2abf>
jmp    804bea0 <fchmod@plt+0x2b10>
mov    0x8(%ecx),%ecx
cmp    %ebp,%ecx
je     804bea0 <fchmod@plt+0x2b10>
mov    0x14(%ecx),%edi
mov    0x10(%ecx),%esi
xor    %edx,%edi
xor    %eax,%esi
or     %esi,%edi
jne    804be48 <fchmod@plt+0x2ab8>
mov    %eax,0x424(%ebx)
mov    %edx,0x428(%ebx)
movl   $0x1fff,0x42c(%ebx)
00
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804b350 <fchmod@plt+0x1fc0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
mov    %eax,0x42c(%ebx)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804b350 <fchmod@plt+0x1fc0>
lea    0x0(%esi),%esi
cmp    $0x0,%eax
ja     804be23 <fchmod@plt+0x2a93>
lea    0x0(%esi),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
test   %eax,%eax
js     804bed8 <fchmod@plt+0x2b48>
shl    $0xa,%eax
mov    $0x1,%edx
add    $0x1fff,%eax
sar    $0xd,%eax
test   %eax,%eax
cmovg  %eax,%edx
mov    %edx,0x806a160
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x806a160
ff
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x806c7d4,%ebx
test   %ebx,%ebx
je     804bfd3 <fchmod@plt+0x2c43>
testb  $0x1,0x414(%ebx)
je     804bfd8 <fchmod@plt+0x2c48>
mov    (%ebx),%eax
cmp    %ebx,%eax
je     804bf2c <fchmod@plt+0x2b9c>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    (%eax),%eax
cmp    %ebx,%eax
jne    804bf18 <fchmod@plt+0x2b88>
mov    0x410(%ebx),%eax
mov    %eax,(%esp)
call   8053340 <fchmod@plt+0x9fb0>
mov    %eax,0x430(%ebx)
mov    0x806c7d4,%eax
mov    %edx,0x434(%ebx)
mov    0x434(%eax),%edx
or     0x430(%eax),%edx
movl   $0x0,0x418(%eax)
00
movl   $0x0,0x41c(%eax)
00
movl   $0x0,0x424(%eax)
00
movl   $0x0,0x428(%eax)
00
movl   $0x0,0x42c(%eax)
00
jne    804bfa6 <fchmod@plt+0x2c16>
andl   $0xfffffffe,0x414(%eax)
movl   $0xffffffff,0x430(%eax)
ff
movl   $0xffffffff,0x434(%eax)
ff
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    0x410(%eax),%eax
mov    %eax,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     804bff8 <fchmod@plt+0x2c68>
add    $0x18,%esp
pop    %ebx
ret
movl   $0xffffffff,0x430(%ebx)
ff
movl   $0xffffffff,0x434(%ebx)
ff
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x805e471,(%esp)
call   805a070 <error>
add    $0x18,%esp
pop    %ebx
ret
jmp    804c020 <fchmod@plt+0x2c90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c7d4,%ecx
mov    0x418(%ecx),%eax
mov    0x41c(%ecx),%edx
mov    %eax,0x430(%ecx)
mov    %edx,0x434(%ecx)
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806c2a0,%eax
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %eax,(%esp)
call   8053e30 <fchmod@plt+0xaaa0>
test   %eax,%eax
mov    %eax,0x806c7d4
je     804c0c0 <fchmod@plt+0x2d30>
cmpl   $0xffffffff,0x410(%eax)
jne    804c0b3 <fchmod@plt+0x2d23>
mov    %ebx,0x410(%eax)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804bef0 <fchmod@plt+0x2b60>
xchg   %ax,%ax
movl   $0x438,0x4(%esp)
movl   $0x1,(%esp)
call   8049370 <calloc@plt>
mov    $0x40,%ecx
mov    %eax,%edi
mov    %eax,0x4(%edi)
lea    0x10(%eax),%edx
mov    %eax,(%edi)
mov    %eax,0x806c7d4
movl   $0x0,0x420(%eax)
00
movl   $0x0,0x418(%eax)
00
movl   $0x0,0x41c(%eax)
00
movl   $0x0,0x424(%eax)
00
movl   $0x0,0x428(%eax)
00
movl   $0x0,0x42c(%eax)
00
movl   $0xffffffff,0x410(%eax)
ff
movl   $0xffffffff,0x430(%eax)
ff
movl   $0xffffffff,0x434(%eax)
ff
mov    %esi,0x414(%eax)
mov    %edx,0x8(%edx)
mov    %edx,0xc(%edx)
add    $0x10,%edx
sub    $0x1,%ecx
jne    804c148 <fchmod@plt+0x2db8>
and    $0x1,%esi
jne    804c176 <fchmod@plt+0x2de6>
mov    0x806c2a0,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053e40 <fchmod@plt+0xaab0>
mov    0x806c7d4,%eax
jmp    804c0a4 <fchmod@plt+0x2d14>
movl   $0x0,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804c15b <fchmod@plt+0x2dcb>
andl   $0xfffffffe,0x414(%edi)
jmp    804c15b <fchmod@plt+0x2dcb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806c7d4,%ebx
test   %ebx,%ebx
je     804c212 <fchmod@plt+0x2e82>
mov    0x414(%ebx),%ecx
mov    $0x1,%esi
test   $0xd,%cl
jne    804c218 <fchmod@plt+0x2e88>
test   $0x2,%cl
jne    804c212 <fchmod@plt+0x2e82>
and    $0xc,%ecx
je     804c26d <fchmod@plt+0x2edd>
test   %esi,%esi
movl   $0xffffffff,0x410(%ebx)
ff
jne    804c212 <fchmod@plt+0x2e82>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
mov    0x806c2a0,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,0x806c7d4
00
mov    %eax,(%esp)
call   8053e40 <fchmod@plt+0xaab0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%ebx),%eax
cmp    %ebx,%eax
je     804c241 <fchmod@plt+0x2eb1>
xchg   %ax,%ax
mov    0x4(%eax),%ecx
mov    (%eax),%edx
mov    %ecx,0x4(%edx)
mov    0x4(%eax),%ecx
mov    %edx,(%ecx)
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    (%ebx),%eax
cmp    %ebx,%eax
jne    804c220 <fchmod@plt+0x2e90>
mov    0x414(%ebx),%ecx
movl   $0x0,0x420(%ebx)
00
lea    0x10(%ebx),%eax
mov    $0x40,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%eax)
mov    %eax,0xc(%eax)
add    $0x10,%eax
sub    $0x1,%edx
jne    804c258 <fchmod@plt+0x2ec8>
xor    %esi,%esi
jmp    804c1cf <fchmod@plt+0x2e3f>
mov    0x410(%ebx),%eax
mov    %eax,(%esp)
call   8049350 <close@plt>
mov    0x806c7d4,%ebx
jmp    804c1dd <fchmod@plt+0x2e4d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c7d4,%eax
test   %eax,%eax
je     804c2a0 <fchmod@plt+0x2f10>
mov    0x414(%eax),%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    %eax,0xc(%esp)
movl   $0x806c860,0x8(%esp)
mov    0xc(%esp),%eax
movsbl (%eax),%eax
test   %al,%al
je     804c361 <fchmod@plt+0x2fd1>
addl   $0x1,0xc(%esp)
cmp    $0x39,%al
jg     804c390 <fchmod@plt+0x3000>
cmp    $0x30,%al
jge    804c3a8 <fchmod@plt+0x3018>
cmp    $0x2e,%al
jne    804c3c8 <fchmod@plt+0x3038>
xor    %ebx,%ebx
mov    %esi,%edi
mov    0x8(%esp),%ebp
jmp    804c30d <fchmod@plt+0x2f7d>
lea    0x0(%esi),%esi
sub    $0x1,%edi
add    $0x1,%ebp
test   %edi,%edi
mov    %bl,-0x1(%ebp)
jle    804c342 <fchmod@plt+0x2fb2>
cmp    $0x806c960,%ebp
jb     804c300 <fchmod@plt+0x2f70>
movl   $0x0,0x4(%esp)
sub    $0x1,%edi
add    $0x1,%ebp
movl   $0x805e4b4,(%esp)
call   805a070 <error>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
test   %edi,%edi
mov    %bl,-0x1(%ebp)
jg     804c30d <fchmod@plt+0x2f7d>
test   %esi,%esi
mov    $0x1,%eax
cmovle %eax,%esi
mov    0xc(%esp),%eax
add    %esi,0x8(%esp)
xor    %esi,%esi
movsbl (%eax),%eax
test   %al,%al
jne    804c2d6 <fchmod@plt+0x2f46>
cmpl   $0x806c960,0x8(%esp)
jae    804c383 <fchmod@plt+0x2ff3>
nop
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,0x8(%esp)
mov    0x8(%esp),%eax
cmp    $0x806c960,%eax
mov    %bl,-0x1(%eax)
jne    804c370 <fchmod@plt+0x2fe0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x62,%al
je     804c3b8 <fchmod@plt+0x3028>
cmp    $0x63,%al
jne    804c3c8 <fchmod@plt+0x3038>
mov    $0x2,%ebx
jmp    804c2f5 <fchmod@plt+0x2f65>
lea    0x0(%esi),%esi
lea    (%esi,%esi,4),%edx
lea    -0x30(%eax,%edx,2),%esi
jmp    804c2c7 <fchmod@plt+0x2f37>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x3,%ebx
jmp    804c2f5 <fchmod@plt+0x2f65>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x805e4a4,(%esp)
call   805a070 <error>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    804c2f5 <fchmod@plt+0x2f65>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
test   %eax,%eax
je     804c457 <fchmod@plt+0x30c7>
movzbl (%eax),%edi
mov    0x806c7e0,%eax
test   %eax,%eax
je     804c468 <fchmod@plt+0x30d8>
lea    -0x20(%edi),%eax
cmp    $0x5e,%al
ja     804c457 <fchmod@plt+0x30c7>
mov    %esi,%ebx
jmp    804c41f <fchmod@plt+0x308f>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x20,%eax
cmp    $0x5e,%al
ja     804c457 <fchmod@plt+0x30c7>
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
jne    804c418 <fchmod@plt+0x3088>
mov    %edi,%eax
cmp    $0x2a,%al
je     804c4b8 <fchmod@plt+0x3128>
movl   $0x6e,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
call   8049190 <strchr@plt>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
je     804c45e <fchmod@plt+0x30ce>
cmpb   $0x2a,(%ecx)
mov    %ecx,%esi
je     804c475 <fchmod@plt+0x30e5>
mov    %esi,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edi,%eax
test   %al,%al
jne    804c429 <fchmod@plt+0x3099>
cmpb   $0x2a,(%ecx)
mov    %ecx,%esi
jne    804c45e <fchmod@plt+0x30ce>
movzbl 0x1(%ecx),%ebx
add    $0x2,%esi
cmp    $0x6b,%bl
je     804c4f8 <fchmod@plt+0x3168>
jle    804c4a0 <fchmod@plt+0x3110>
cmp    $0x73,%bl
je     804c518 <fchmod@plt+0x3188>
cmp    $0x75,%bl
nop
jne    804c508 <fchmod@plt+0x3178>
movl   $0x1,0x806b460
00
jmp    804c45e <fchmod@plt+0x30ce>
xchg   %ax,%ax
cmp    $0x64,%bl
jne    804c508 <fchmod@plt+0x3178>
movl   $0x2,0x806b460
00
jmp    804c45e <fchmod@plt+0x30ce>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%esi),%ebx
test   %bl,%bl
je     804c457 <fchmod@plt+0x30c7>
cmpb   $0x0,0x2(%esi)
je     804c457 <fchmod@plt+0x30c7>
add    $0x2,%esi
movl   $0x6e,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
call   8049190 <strchr@plt>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
jne    804c457 <fchmod@plt+0x30c7>
jmp    804c47c <fchmod@plt+0x30ec>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,0x806b460
00
jmp    804c45e <fchmod@plt+0x30ce>
nop
movl   $0x0,0x806b460
00
jmp    804c45e <fchmod@plt+0x30ce>
nop
movl   $0x8,0x806b460
00
jmp    804c45e <fchmod@plt+0x30ce>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %ecx,%esi
sub    $0x1,%esi
push   %ebx
js     804c566 <fchmod@plt+0x31d6>
xor    %ebx,%ebx
jmp    804c547 <fchmod@plt+0x31b7>
xchg   %ax,%ax
lea    0x1(%ecx),%ebx
cmp    %esi,%ebx
jg     804c566 <fchmod@plt+0x31d6>
lea    (%ebx,%esi,1),%ecx
mov    %ecx,%edi
shr    $0x1f,%edi
add    %edi,%ecx
sar    %ecx
lea    (%edx,%ecx,8),%edi
cmp    %eax,0x4(%edi)
jb     804c540 <fchmod@plt+0x31b0>
cmp    (%edi),%eax
jae    804c570 <fchmod@plt+0x31e0>
lea    -0x1(%ecx),%esi
cmp    %esi,%ebx
jle    804c547 <fchmod@plt+0x31b7>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
xor    %eax,%eax
test   %ebx,%ebx
je     804c60b <fchmod@plt+0x327b>
cmpb   $0x0,(%ebx)
je     804c60b <fchmod@plt+0x327b>
mov    0x806b480,%ecx
mov    %edx,%esi
test   %ecx,%ecx
je     804c5c4 <fchmod@plt+0x3234>
mov    $0x806b480,%edi
jmp    804c5b1 <fchmod@plt+0x3221>
xchg   %ax,%ax
add    $0x8,%edi
mov    (%edi),%ecx
test   %ecx,%ecx
je     804c5c4 <fchmod@plt+0x3234>
mov    %ecx,0x4(%esp)
mov    %ebx,(%esp)
call   8048f20 <strcmp@plt>
test   %eax,%eax
jne    804c5a8 <fchmod@plt+0x3218>
mov    0x4(%edi),%ebx
mov    0x806b5e0,%ecx
test   %ecx,%ecx
je     804c618 <fchmod@plt+0x3288>
mov    $0x806b5e0,%edi
jmp    804c5e1 <fchmod@plt+0x3251>
lea    0x0(%esi),%esi
add    $0xc,%edi
mov    (%edi),%ecx
test   %ecx,%ecx
je     804c618 <fchmod@plt+0x3288>
mov    %ecx,0x4(%esp)
mov    %ebx,(%esp)
call   8048f20 <strcmp@plt>
test   %eax,%eax
jne    804c5d8 <fchmod@plt+0x3248>
mov    0x8(%edi),%eax
call   804c2b0 <fchmod@plt+0x2f20>
mov    0x4(%edi),%eax
test   %eax,%eax
je     804c64d <fchmod@plt+0x32bd>
movl   $0x1,(%eax)
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
test   %esi,%esi
jne    804c60b <fchmod@plt+0x327b>
movl   $0x0,0x4(%esp)
movl   $0x805e4cc,(%esp)
mov    %eax,0xc(%esp)
call   805a070 <error>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
mov    0xc(%esp),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0x1,%eax
jmp    804c60b <fchmod@plt+0x327b>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
movsbl %al,%edx
mov    %edx,%eax
and    $0xe0,%eax
cmp    $0xc0,%eax
je     804c6c0 <fchmod@plt+0x3330>
mov    %edx,%ecx
mov    $0x3,%eax
and    $0xf0,%ecx
cmp    $0xe0,%ecx
je     804c6c5 <fchmod@plt+0x3335>
mov    %edx,%ecx
mov    $0x4,%al
and    $0xf8,%ecx
cmp    $0xf0,%ecx
je     804c6c5 <fchmod@plt+0x3335>
mov    %edx,%ecx
mov    $0x5,%al
and    $0xfc,%ecx
cmp    $0xf8,%ecx
je     804c6c5 <fchmod@plt+0x3335>
and    $0xfe,%edx
xor    %eax,%eax
cmp    $0xfc,%edx
sete   %al
lea    0x1(%eax,%eax,4),%eax
ret
mov    $0x2,%eax
repz ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x805e30e,0x4(%esp)
movl   $0x6,(%esp)
call   8049290 <setlocale@plt>
movl   $0x805e4e1,(%esp)
call   8051120 <fchmod@plt+0x7d90>
xor    %edx,%edx
call   804c580 <fchmod@plt+0x31f0>
test   %eax,%eax
je     804c740 <fchmod@plt+0x33b0>
movl   $0x805e52b,(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    $0x805e536,%ecx
mov    $0x806c844,%edx
call   804c3f0 <fchmod@plt+0x3060>
movl   $0x805e53f,(%esp)
call   8051120 <fchmod@plt+0x7d90>
add    $0x18,%esp
mov    $0x805e54d,%ecx
pop    %ebx
mov    $0x806c840,%edx
jmp    804c3f0 <fchmod@plt+0x3060>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e4ed,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     804c759 <fchmod@plt+0x33c9>
cmpb   $0x0,(%eax)
jne    804c7f8 <fchmod@plt+0x3468>
movl   $0xe,(%esp)
call   8049280 <nl_langinfo@plt>
mov    $0x1,%edx
call   804c580 <fchmod@plt+0x31f0>
test   %eax,%eax
jne    804c6ff <fchmod@plt+0x336f>
movl   $0x805e4f9,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
je     804c868 <fchmod@plt+0x34d8>
movl   $0x805e50e,0x4(%esp)
mov    %ebx,(%esp)
call   8048f10 <strstr@plt>
test   %eax,%eax
je     804c81b <fchmod@plt+0x348b>
mov    $0x1,%edx
mov    $0x805e514,%eax
call   804c580 <fchmod@plt+0x31f0>
test   %eax,%eax
jne    804c6ff <fchmod@plt+0x336f>
call   8049360 <__ctype_b_loc@plt>
xor    %edx,%edx
jmp    804c7d2 <fchmod@plt+0x3442>
lea    0x0(%esi),%esi
movb   $0x0,0x806c860(%edx)
add    $0x1,%edx
cmp    $0x100,%edx
je     804c808 <fchmod@plt+0x3478>
mov    (%eax),%ecx
movzwl (%ecx,%edx,2),%ecx
test   $0x40,%ch
jne    804c7c0 <fchmod@plt+0x3430>
and    $0x2,%ecx
cmp    $0x1,%cx
sbb    %ecx,%ecx
not    %ecx
add    $0x3,%ecx
mov    %cl,0x806c860(%edx)
jmp    804c7c7 <fchmod@plt+0x3437>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804c2b0 <fchmod@plt+0x2f20>
jmp    804c6ff <fchmod@plt+0x336f>
lea    0x0(%esi),%esi
mov    $0x1,%dx
mov    $0x805e524,%eax
call   804c580 <fchmod@plt+0x31f0>
jmp    804c6ff <fchmod@plt+0x336f>
movl   $0x805e514,0x4(%esp)
mov    %ebx,(%esp)
call   8048f10 <strstr@plt>
test   %eax,%eax
jne    804c79d <fchmod@plt+0x340d>
movl   $0x805e51a,0x4(%esp)
mov    %ebx,(%esp)
call   8048f10 <strstr@plt>
test   %eax,%eax
jne    804c79d <fchmod@plt+0x340d>
movl   $0x805e51f,0x4(%esp)
mov    %ebx,(%esp)
call   8048f10 <strstr@plt>
test   %eax,%eax
jne    804c79d <fchmod@plt+0x340d>
jmp    804c7b4 <fchmod@plt+0x3424>
movl   $0x805e500,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
jne    804c789 <fchmod@plt+0x33f9>
movl   $0x805e509,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
jne    804c789 <fchmod@plt+0x33f9>
jmp    804c7b4 <fchmod@plt+0x3424>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c7e0,%edx
push   %ebx
mov    0x8(%esp),%ebx
test   %edx,%edx
je     804c8c0 <fchmod@plt+0x3530>
xor    %eax,%eax
cmp    0x806a200,%ebx
jae    804c8d0 <fchmod@plt+0x3540>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %bl,%ebx
movzbl 0x806c860(%ebx),%eax
pop    %ebx
and    $0x1,%eax
ret
nop
mov    %ebx,%eax
mov    $0x1c3,%ecx
pop    %ebx
mov    $0x806a200,%edx
jmp    804c530 <fchmod@plt+0x31a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
movzbl 0x4(%esp),%eax
movzbl 0x806c860(%eax),%eax
and    $0x2,%eax
movsbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
movzbl 0x30(%esp),%eax
cmp    $0x7f,%eax
jbe    804c927 <fchmod@plt+0x3597>
mov    0x806c7e0,%ecx
test   %ecx,%ecx
jne    804c948 <fchmod@plt+0x35b8>
testb  $0x2,0x806c860(%eax)
je     804c998 <fchmod@plt+0x3608>
cmp    $0x1b,%eax
je     804c9a8 <fchmod@plt+0x3618>
cmp    $0x7f,%eax
ja     804c948 <fchmod@plt+0x35b8>
mov    %eax,%edx
xor    $0x40,%edx
testb  $0x2,0x806c860(%edx)
je     804c988 <fchmod@plt+0x35f8>
mov    %eax,0x14(%esp)
mov    0x806c844,%eax
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x806c820,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    $0x806c820,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    %edx,0x14(%esp)
movl   $0x805e557,0x10(%esp)
jmp    804c955 <fchmod@plt+0x35c5>
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x805e558,0x10(%esp)
jmp    804c955 <fchmod@plt+0x35c5>
xchg   %ax,%ax
movl   $0x435345,0x806c820
00
jmp    804c979 <fchmod@plt+0x35e9>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
cmp    $0x1b,%ebx
je     804cb47 <fchmod@plt+0x37b7>
cmp    $0x7f,%ebx
ja     804ca08 <fchmod@plt+0x3678>
testb  $0x2,0x806c860(%ebx)
je     804ca08 <fchmod@plt+0x3678>
mov    %ebx,%eax
xor    $0x40,%eax
testb  $0x2,0x806c860(%eax)
jne    804cb28 <fchmod@plt+0x3798>
xor    $0x40,%ebx
movsbl %bl,%eax
mov    %eax,0x14(%esp)
movl   $0x805e557,0x10(%esp)
jmp    804caae <fchmod@plt+0x371e>
cmp    0x806a200,%ebx
jae    804ca88 <fchmod@plt+0x36f8>
test   %ebx,%ebx
js     804cae0 <fchmod@plt+0x3750>
cmp    $0x7f,%ebx
jbe    804ca70 <fchmod@plt+0x36e0>
cmp    $0x7ff,%ebx
jbe    804cb36 <fchmod@plt+0x37a6>
cmp    $0xffff,%ebx
jbe    804cb56 <fchmod@plt+0x37c6>
cmp    $0x1fffff,%ebx
jbe    804cb67 <fchmod@plt+0x37d7>
cmp    $0x4000000,%ebx
sbb    %edx,%edx
add    $0x5,%edx
cmp    $0x4000000,%ebx
sbb    %eax,%eax
and    $0xfffffffc,%eax
sub    $0x4,%eax
cmp    $0x4000000,%ebx
sbb    %ecx,%ecx
add    $0x6,%ecx
jmp    804caf4 <fchmod@plt+0x3764>
lea    0x0(%esi),%esi
movb   $0x0,0x806c801
mov    %bl,0x806c800
add    $0x28,%esp
mov    $0x806c800,%eax
pop    %ebx
ret
nop
mov    $0x1c3,%ecx
mov    $0x806a200,%edx
mov    %ebx,%eax
call   804c530 <fchmod@plt+0x31a0>
test   %eax,%eax
je     804ca10 <fchmod@plt+0x3680>
mov    0x806c840,%eax
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x806c800,(%esp)
call   8048f00 <__snprintf_chk@plt>
add    $0x28,%esp
mov    $0x806c800,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%edx
mov    $0xffffffe0,%eax
mov    $0x3,%ecx
mov    $0xfffd,%ebx
movb   $0x0,0x806c800(%ecx)
mov    %al,0x806c800
mov    %ebx,%ecx
sub    $0x1,%edx
and    $0x3f,%ecx
or     $0xffffff80,%ecx
mov    %cl,0x806c801(%edx)
shr    $0x6,%ebx
test   %edx,%edx
jg     804cb00 <fchmod@plt+0x3770>
or     %bl,0x806c800
add    $0x28,%esp
mov    $0x806c800,%eax
pop    %ebx
ret
mov    %ebx,0x14(%esp)
mov    0x806c844,%eax
jmp    804caaa <fchmod@plt+0x371a>
mov    $0x1,%edx
mov    $0xffffffc0,%eax
mov    $0x2,%ecx
jmp    804caf4 <fchmod@plt+0x3764>
movl   $0x435345,0x806c800
00
jmp    804ca7d <fchmod@plt+0x36ed>
mov    $0x2,%edx
mov    $0xffffffe0,%eax
mov    $0x3,%ecx
jmp    804caf4 <fchmod@plt+0x3764>
mov    $0x3,%edx
mov    $0xfffffff0,%eax
mov    $0x4,%ecx
jmp    804caf4 <fchmod@plt+0x3764>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
test   %al,%al
js     804cb90 <fchmod@plt+0x3800>
mov    $0x1,%eax
ret
xchg   %ax,%ax
movsbl %al,%eax
jmp    804c660 <fchmod@plt+0x32d0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
movzbl (%ebx),%edx
mov    %edx,%eax
and    $0xfffffffe,%eax
cmp    $0xfe,%al
je     804cbd0 <fchmod@plt+0x3840>
test   %dl,%dl
mov    $0x1,%eax
js     804cbd8 <fchmod@plt+0x3848>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xc1,%dl
ja     804cc09 <fchmod@plt+0x3879>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
movsbl %dl,%eax
mov    %edx,(%esp)
call   804c660 <fchmod@plt+0x32d0>
cmp    $0x1,%eax
je     804cbbe <fchmod@plt+0x382e>
cmp    $0x2,%eax
mov    (%esp),%edx
je     804cbc8 <fchmod@plt+0x3838>
mov    $0x8,%ecx
mov    $0x1,%esi
sub    %eax,%ecx
shl    %cl,%esi
mov    %esi,%ecx
add    %dl,%cl
je     804cc40 <fchmod@plt+0x38b0>
cmp    $0x1,%eax
jle    804cc33 <fchmod@plt+0x38a3>
movzbl 0x1(%ebx),%edx
and    $0xffffffc0,%edx
cmp    $0x80,%dl
jne    804cbd0 <fchmod@plt+0x3840>
mov    $0x1,%edx
jmp    804cc2c <fchmod@plt+0x389c>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx,%edx,1),%ecx
and    $0xffffffc0,%ecx
cmp    $0x80,%cl
jne    804cbd0 <fchmod@plt+0x3840>
add    $0x1,%edx
cmp    %eax,%edx
jl     804cc20 <fchmod@plt+0x3890>
add    $0x4,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
and    0x1(%ebx),%dl
cmp    $0x80,%dl
jne    804cc04 <fchmod@plt+0x3874>
xor    %eax,%eax
jmp    804cbd2 <fchmod@plt+0x3842>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x1c(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
js     804cc70 <fchmod@plt+0x38e0>
add    $0x10,%esp
movzbl %dl,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl %dl,%esi
mov    %esi,%eax
mov    %edx,(%esp)
call   804c660 <fchmod@plt+0x32d0>
mov    (%esp),%edx
cmp    $0x6,%eax
ja     804cc60 <fchmod@plt+0x38d0>
jmp    *0x805e840(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebx),%ecx
mov    %edx,%eax
and    $0x1,%eax
shl    $0x1e,%eax
mov    %cl,(%esp)
mov    (%esp),%edx
movzbl 0x5(%ebx),%ecx
and    $0x3f,%edx
shl    $0x18,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
movzbl 0x2(%ebx),%ecx
and    $0x3f,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
movzbl 0x3(%ebx),%ecx
and    $0x3f,%edx
shl    $0x12,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
and    $0x3f,%edx
shl    $0xc,%edx
or     %edx,%eax
movzbl 0x4(%ebx),%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
and    $0x3f,%edx
shl    $0x6,%edx
or     %edx,%eax
ret
nop
movzbl 0x1(%ebx),%ecx
mov    %edx,%eax
and    $0x3,%eax
shl    $0x18,%eax
mov    %cl,(%esp)
mov    (%esp),%edx
movzbl 0x4(%ebx),%ecx
and    $0x3f,%edx
shl    $0x12,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
movzbl 0x2(%ebx),%ecx
and    $0x3f,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
and    $0x3f,%edx
shl    $0xc,%edx
or     %edx,%eax
movzbl 0x3(%ebx),%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
and    $0x3f,%edx
shl    $0x6,%edx
or     %edx,%eax
ret
lea    0x0(%esi),%esi
movzbl 0x1(%ebx),%ecx
mov    %edx,%eax
and    $0x7,%eax
shl    $0x12,%eax
mov    %cl,(%esp)
mov    (%esp),%edx
movzbl 0x3(%ebx),%ecx
and    $0x3f,%edx
shl    $0xc,%edx
mov    %cl,(%esp)
or     %edx,%eax
mov    (%esp),%edx
and    $0x3f,%edx
or     %edx,%eax
movzbl 0x2(%ebx),%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
and    $0x3f,%edx
shl    $0x6,%edx
or     %edx,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebx),%ecx
mov    %esi,%eax
shl    $0xc,%eax
movzwl %ax,%eax
mov    %cl,(%esp)
mov    (%esp),%edx
and    $0x3f,%edx
shl    $0x6,%edx
or     %edx,%eax
movzbl 0x2(%ebx),%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
and    $0x3f,%edx
or     %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
movzbl 0x1(%ebx),%edx
add    $0x10,%esp
and    $0x1f,%eax
shl    $0x6,%eax
pop    %ebx
and    $0x3f,%edx
or     %edx,%eax
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x806c7e0,%ebx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
test   %ebx,%ebx
je     804ce98 <fchmod@plt+0x3b08>
cmp    $0x7f,%edx
jbe    804ce98 <fchmod@plt+0x3b08>
cmp    $0x7ff,%edx
jbe    804cec0 <fchmod@plt+0x3b30>
cmp    $0xffff,%edx
jbe    804cea8 <fchmod@plt+0x3b18>
cmp    $0x1fffff,%edx
jbe    804ced8 <fchmod@plt+0x3b48>
cmp    $0x3ffffff,%edx
jbe    804cef0 <fchmod@plt+0x3b60>
mov    (%eax),%ebx
lea    0x1(%ebx),%ecx
mov    %ecx,(%eax)
mov    %edx,%ecx
shr    $0x1e,%ecx
and    $0x1,%ecx
or     $0xfffffff0,%ecx
mov    %cl,(%ebx)
mov    (%eax),%ebx
lea    0x1(%ebx),%ecx
mov    %ecx,(%eax)
mov    %edx,%ecx
shr    $0x18,%ecx
and    $0x3f,%ecx
or     $0xffffff80,%ecx
mov    %cl,(%ebx)
mov    (%eax),%ebx
lea    0x1(%ebx),%ecx
mov    %ecx,(%eax)
mov    %edx,%ecx
shr    $0x12,%ecx
and    $0x3f,%ecx
or     $0xffffff80,%ecx
mov    %cl,(%ebx)
mov    (%eax),%ebx
lea    0x1(%ebx),%ecx
mov    %ecx,(%eax)
mov    %edx,%ecx
shr    $0xc,%ecx
and    $0x3f,%ecx
or     $0xffffff80,%ecx
mov    %cl,(%ebx)
mov    (%eax),%ebx
lea    0x1(%ebx),%ecx
mov    %ecx,(%eax)
mov    %edx,%ecx
shr    $0x6,%ecx
and    $0x3f,%ecx
or     $0xffffff80,%ecx
mov    %cl,(%ebx)
mov    (%eax),%ecx
and    $0x3f,%edx
or     $0xffffff80,%edx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %dl,(%ecx)
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    (%eax),%ecx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %dl,(%ecx)
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %edx,%ebx
shr    $0xc,%ebx
or     $0xffffffe0,%ebx
mov    %bl,(%ecx)
jmp    804ce70 <fchmod@plt+0x3ae0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %edx,%ebx
shr    $0x6,%ebx
or     $0xffffffc0,%ebx
mov    %bl,(%ecx)
jmp    804ce84 <fchmod@plt+0x3af4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %edx,%ebx
shr    $0x12,%ebx
or     $0xfffffff0,%ebx
mov    %bl,(%ecx)
jmp    804ce5c <fchmod@plt+0x3acc>
xchg   %ax,%ax
mov    (%eax),%ecx
lea    0x1(%ecx),%ebx
mov    %ebx,(%eax)
mov    %edx,%ebx
shr    $0x18,%ebx
or     $0xfffffff0,%ebx
mov    %bl,(%ecx)
jmp    804ce48 <fchmod@plt+0x3ab8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x806c7e0,%ecx
mov    0x18(%esp),%edi
mov    0x20(%esp),%esi
test   %ecx,%ecx
mov    (%edi),%ebx
jne    804cf50 <fchmod@plt+0x3bc0>
mov    0x1c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jle    804cf98 <fchmod@plt+0x3c08>
cmp    %esi,%ebx
jae    804cf3f <fchmod@plt+0x3baf>
movsbl (%ebx),%eax
add    $0x1,%ebx
mov    %ebx,(%edi)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ebp
test   %ebp,%ebp
jle    804cfa8 <fchmod@plt+0x3c18>
movzbl (%ebx),%edx
mov    $0x1,%eax
test   %dl,%dl
js     804cfd8 <fchmod@plt+0x3c48>
lea    (%ebx,%eax,1),%ebp
cmp    %ebp,%esi
jae    804cf80 <fchmod@plt+0x3bf0>
mov    %esi,%ebx
xor    %eax,%eax
mov    %ebx,(%edi)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %ebp,%ebx
call   804cc50 <fchmod@plt+0x38c0>
mov    %ebx,(%edi)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
jbe    804cf3f <fchmod@plt+0x3baf>
movsbl -0x1(%ebx),%eax
sub    $0x1,%ebx
jmp    804cf3f <fchmod@plt+0x3baf>
lea    0x0(%esi),%esi
cmp    %esi,%ebx
ja     804cfb7 <fchmod@plt+0x3c27>
jmp    804cfe8 <fchmod@plt+0x3c58>
xchg   %ax,%ax
sub    $0x1,%ebx
cmp    %esi,%ebx
je     804cfe8 <fchmod@plt+0x3c58>
movsbl -0x1(%ebx),%eax
and    $0xc0,%eax
add    $0xffffff80,%eax
je     804cfb0 <fchmod@plt+0x3c20>
sub    $0x1,%ebx
mov    %ebx,(%esp)
call   804cc50 <fchmod@plt+0x38c0>
jmp    804cf3f <fchmod@plt+0x3baf>
lea    0x0(%esi),%esi
movsbl %dl,%eax
call   804c660 <fchmod@plt+0x32d0>
jmp    804cf64 <fchmod@plt+0x3bd4>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804cf3f <fchmod@plt+0x3baf>
nop
mov    0x4(%esp),%eax
cmp    0x806b020,%eax
jae    804d000 <fchmod@plt+0x3c70>
xor    %eax,%eax
ret
nop
mov    $0x88,%ecx
mov    $0x806b020,%edx
jmp    804c530 <fchmod@plt+0x31a0>
nop
mov    0x4(%esp),%eax
cmp    0x806a200,%eax
jae    804d020 <fchmod@plt+0x3c90>
xor    %eax,%eax
ret
nop
mov    $0x1c3,%ecx
mov    $0x806a200,%edx
jmp    804c530 <fchmod@plt+0x31a0>
nop
mov    0x4(%esp),%eax
cmp    0x806a180,%eax
jae    804d040 <fchmod@plt+0x3cb0>
xor    %eax,%eax
ret
nop
mov    $0x10,%ecx
mov    $0x806a180,%edx
jmp    804c530 <fchmod@plt+0x31a0>
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
cmp    %edx,0x805e860(,%eax,8)
je     804d070 <fchmod@plt+0x3ce0>
add    $0x1,%eax
cmp    $0x4,%eax
jne    804d05a <fchmod@plt+0x3cca>
xor    %eax,%eax
ret
xchg   %ax,%ax
cmp    %ecx,0x805e864(,%eax,8)
jne    804d063 <fchmod@plt+0x3cd3>
mov    $0x1,%eax
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
cmp    $0x1,%ecx
mov    %eax,0x1c(%esp)
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
mov    %edx,(%esp)
je     804d100 <fchmod@plt+0x3d70>
call   804c9c0 <fchmod@plt+0x3630>
test   %edi,%edi
setne  %dl
test   %esi,%esi
setne  %cl
test   %dl,%dl
mov    %eax,%ebp
jne    804d0c0 <fchmod@plt+0x3d30>
test   %cl,%cl
jne    804d0c0 <fchmod@plt+0x3d30>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   804cff0 <fchmod@plt+0x3c60>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
je     804d150 <fchmod@plt+0x3dc0>
test   %dl,%dl
je     804d0e6 <fchmod@plt+0x3d56>
movl   $0x0,(%edi)
test   %cl,%cl
je     804d0b6 <fchmod@plt+0x3d26>
movl   $0x0,(%esi)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804c910 <fchmod@plt+0x3580>
test   %edi,%edi
setne  %bl
test   %esi,%esi
setne  %dl
test   %bl,%bl
mov    %eax,%ebp
je     804d140 <fchmod@plt+0x3db0>
mov    %ebp,(%esp)
mov    %edx,0x14(%esp)
call   80491a0 <strlen@plt>
test   %bl,%bl
mov    0x14(%esp),%edx
je     804d12b <fchmod@plt+0x3d9b>
mov    %eax,(%edi)
test   %dl,%dl
je     804d0b6 <fchmod@plt+0x3d26>
mov    %eax,(%esi)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
jne    804d115 <fchmod@plt+0x3d85>
jmp    804d0b6 <fchmod@plt+0x3d26>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   804d010 <fchmod@plt+0x3c80>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
je     804d190 <fchmod@plt+0x3e00>
mov    %ebp,(%esp)
call   80491a0 <strlen@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %dl,%dl
je     804d182 <fchmod@plt+0x3df2>
mov    %eax,(%edi)
test   %cl,%cl
je     804d0b6 <fchmod@plt+0x3d26>
mov    %eax,(%esi)
jmp    804d131 <fchmod@plt+0x3da1>
xchg   %ax,%ax
lea    0x1c(%esp),%eax
movl   $0x806c9c0,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d050 <fchmod@plt+0x3cc0>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    804d0dc <fchmod@plt+0x3d4c>
test   %dl,%dl
je     804d1ee <fchmod@plt+0x3e5e>
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
call   804d030 <fchmod@plt+0x3ca0>
mov    0x14(%esp),%ecx
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,(%edi)
test   %cl,%cl
je     804d0b6 <fchmod@plt+0x3d26>
movl   $0x1,(%esi)
jmp    804d0b6 <fchmod@plt+0x3d26>
jmp    804d210 <fchmod@plt+0x3e80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    (%eax),%esi
movl   $0x806c9c0,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%edx
mov    (%ebx),%eax
sub    %eax,%esi
mov    %esi,%ecx
call   804d080 <fchmod@plt+0x3cf0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x806c9a0,%eax
cmp    %eax,0x806c9a4
jle    804d2b2 <fchmod@plt+0x3f22>
lea    0xc(%esp),%ecx
mov    $0x806c99c,%eax
lea    0x8(%esp),%edx
call   804d210 <fchmod@plt+0x3e80>
jmp    804d28d <fchmod@plt+0x3efd>
lea    0x0(%esi,%eiz,1),%esi
call   804b000 <fchmod@plt+0x1c70>
mov    0xc(%esp),%eax
lea    -0x1(%eax),%edx
test   %eax,%eax
mov    %edx,0xc(%esp)
jg     804d288 <fchmod@plt+0x3ef8>
mov    0x806c9a4,%eax
sub    0x8(%esp),%eax
cmp    %eax,0x806c9a0
mov    %eax,0x806c9a4
jl     804d270 <fchmod@plt+0x3ee0>
mov    0x806c998,%eax
add    $0x806c9c0,%eax
mov    %eax,0x806c99c
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x805ea36,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%edx
je     804d328 <fchmod@plt+0x3f98>
movzbl (%eax),%eax
test   %al,%al
je     804d328 <fchmod@plt+0x3f98>
cmp    $0x2d,%al
jne    804d2fd <fchmod@plt+0x3f6d>
cmpb   $0x0,0x1(%edx)
je     804d398 <fchmod@plt+0x4008>
mov    $0xa,%ecx
mov    $0x805ea43,%edi
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
xor    %eax,%eax
cmp    %cl,%bl
je     804d31f <fchmod@plt+0x3f8f>
mov    %edx,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x805ea4d,(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    %eax,%ebx
xor    %eax,%eax
test   %ebx,%ebx
je     804d31f <fchmod@plt+0x3f8f>
cmpb   $0x0,(%ebx)
je     804d31f <fchmod@plt+0x3f8f>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0xa(%eax),%esi
mov    %esi,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x14(%esp)
mov    %esi,0x4(%esp)
movl   $0x805ea52,0x18(%esp)
movl   $0x805ea5b,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %eax,%eax
jmp    804d31f <fchmod@plt+0x3f8f>
nop
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
movl   $0x805ea61,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     804d438 <fchmod@plt+0x40a8>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <strtol@plt>
cmp    $0x0,%eax
je     804d438 <fchmod@plt+0x40a8>
mov    (%edi),%ecx
jle    804d3f9 <fchmod@plt+0x4069>
mov    0xc(%ecx),%edi
test   %edi,%edi
je     804d3f9 <fchmod@plt+0x4069>
xor    %edx,%edx
jmp    804d3ef <fchmod@plt+0x405f>
xchg   %ax,%ax
mov    0xc(%ecx),%ebx
test   %ebx,%ebx
je     804d3f9 <fchmod@plt+0x4069>
add    $0x1,%edx
mov    0x4(%ecx),%ecx
cmp    %edx,%eax
jg     804d3e8 <fchmod@plt+0x4058>
mov    (%ecx),%ebx
mov    0xc(%ebx),%eax
test   %eax,%eax
je     804d42d <fchmod@plt+0x409d>
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
movl   $0x805ea6e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80492d0 <__fprintf_chk@plt>
mov    (%ebx),%ebx
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    804d408 <fchmod@plt+0x4078>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ecx
mov    $0x64,%eax
jmp    804d3db <fchmod@plt+0x404b>
jmp    804d450 <fchmod@plt+0x40c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
cmp    $0x11,%eax
je     804d480 <fchmod@plt+0x40f0>
cmp    $0x12,%eax
je     804d468 <fchmod@plt+0x40d8>
mov    $0x805ea73,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %edx,0x4(%esp)
movl   $0x806c978,(%esp)
call   8051850 <fchmod@plt+0x84c0>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x4(%esp)
movl   $0x806c978,(%esp)
call   80517f0 <fchmod@plt+0x8460>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x4(%eax),%ebx
cmp    %ebx,%eax
je     804d4c4 <fchmod@plt+0x4134>
mov    %edx,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8048f20 <strcmp@plt>
test   %eax,%eax
je     804d4f5 <fchmod@plt+0x4165>
movl   $0x14,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %edi,(%esp)
mov    %eax,%ebx
call   8049a60 <fchmod@plt+0x6d0>
mov    %esi,(%ebx)
mov    %eax,0xc(%ebx)
mov    0x4(%esi),%eax
mov    %eax,0x4(%ebx)
mov    0x4(%esi),%eax
mov    %ebx,(%eax)
mov    %ebx,0x4(%esi)
mov    (%ebx),%eax
mov    %eax,0x8(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    804d510 <fchmod@plt+0x4180>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    (%eax),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
add    %ebx,%eax
mov    %eax,0x8(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    (%esi),%ecx
mov    %edi,(%esp)
movl   $0x0,0x4(%esp)
sub    %ebx,%ecx
mov    %eax,%edx
mov    %ebx,%eax
call   804d080 <fchmod@plt+0x3cf0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x28,%esp
call   804ad10 <fchmod@plt+0x1980>
mov    0x806c99c,%edx
cmpb   $0x0,(%edx)
jne    804d5a7 <fchmod@plt+0x4217>
jmp    804d614 <fchmod@plt+0x4284>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x806c99c
call   8059c60 <fchmod@plt+0x108d0>
mov    0x806c99c,%edx
mov    0x1c(%esp),%eax
add    %eax,0x806c9a4
cmpb   $0x0,(%edx)
je     804d614 <fchmod@plt+0x4284>
mov    %edx,0x18(%esp)
lea    0x18(%esp),%eax
lea    0x1c(%esp),%edx
call   804d510 <fchmod@plt+0x4180>
mov    0x806c9a4,%edx
add    0x1c(%esp),%edx
cmp    0x806ff70,%edx
jl     804d580 <fchmod@plt+0x41f0>
mov    0x806c99c,%edx
cmpb   $0x0,(%edx)
jne    804d5f5 <fchmod@plt+0x4265>
jmp    804d614 <fchmod@plt+0x4284>
nop
mov    0x18(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x806c99c
call   8059c60 <fchmod@plt+0x108d0>
mov    0x806c99c,%edx
cmpb   $0x0,(%edx)
je     804d614 <fchmod@plt+0x4284>
mov    %edx,0x18(%esp)
lea    0x18(%esp),%eax
lea    0x1c(%esp),%edx
call   804d510 <fchmod@plt+0x4180>
mov    0x1c(%esp),%edx
test   %edx,%edx
jle    804d5d8 <fchmod@plt+0x4248>
mov    0x806c99c,%edx
cmp    %ebx,%edx
jbe    804d625 <fchmod@plt+0x4295>
call   804d630 <fchmod@plt+0x42a0>
cmp    %ebx,0x806c99c
ja     804d618 <fchmod@plt+0x4288>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
jbe    804d6b8 <fchmod@plt+0x4328>
push   %ebx
sub    $0x28,%esp
mov    %eax,0xc(%esp)
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esp),%ecx
lea    0x10(%esp),%edx
lea    0xc(%esp),%eax
call   804d210 <fchmod@plt+0x3e80>
mov    0x10(%esp),%eax
test   %eax,%eax
jg     804d66b <fchmod@plt+0x42db>
cmpl   $0x806c9c0,0xc(%esp)
ja     804d648 <fchmod@plt+0x42b8>
mov    0x806c9a0,%ecx
mov    0x806c9a4,%edx
lea    (%eax,%ecx,1),%ebx
cmp    %edx,%ebx
jg     804d6c0 <fchmod@plt+0x4330>
mov    0xc(%esp),%ecx
sub    %eax,%edx
mov    %edx,0x806c9a4
mov    %ecx,0x806c99c
jmp    804d69d <fchmod@plt+0x430d>
lea    0x0(%esi),%esi
call   804b000 <fchmod@plt+0x1c70>
mov    0x14(%esp),%eax
lea    -0x1(%eax),%edx
test   %eax,%eax
mov    %edx,0x14(%esp)
jg     804d698 <fchmod@plt+0x4308>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c998,%eax
lea    0x806c9c0(%eax),%edx
mov    0x806ff70,%eax
mov    %edx,0x18(%esp)
sub    %ecx,%eax
cmp    $0x1,%eax
jle    804d749 <fchmod@plt+0x43b9>
cmp    $0x806c9c0,%edx
jbe    804d749 <fchmod@plt+0x43b9>
xor    %ebx,%ebx
jmp    804d6ef <fchmod@plt+0x435f>
nop
cmp    $0x806c9c0,%eax
jbe    804d71e <fchmod@plt+0x438e>
xor    %ecx,%ecx
lea    0x1c(%esp),%edx
lea    0x18(%esp),%eax
call   804d210 <fchmod@plt+0x3e80>
mov    0x806ff70,%eax
sub    0x806c9a0,%eax
add    0x1c(%esp),%ebx
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
cmp    %eax,%ebx
mov    0x18(%esp),%eax
jl     804d6e8 <fchmod@plt+0x4358>
mov    0x806c99c,%ebx
sub    $0x806c9c0,%eax
mov    %eax,0x806c998
call   804d260 <fchmod@plt+0x3ed0>
mov    %ebx,%eax
call   804d560 <fchmod@plt+0x41d0>
mov    0x806c9a4,%edx
mov    0x10(%esp),%eax
jmp    804d67e <fchmod@plt+0x42ee>
mov    %edx,%eax
jmp    804d71e <fchmod@plt+0x438e>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806c998,%edx
mov    0x806ff70,%eax
sub    0x806c9a0,%eax
lea    0x806c9c0(%edx),%ecx
cmp    $0x1,%eax
mov    %ecx,0x4(%esp)
jle    804d7b9 <fchmod@plt+0x4429>
cmpb   $0x0,0x806c9c0(%edx)
je     804d7f0 <fchmod@plt+0x4460>
xor    %esi,%esi
lea    0xc(%esp),%ebx
jmp    804d78d <fchmod@plt+0x43fd>
xchg   %ax,%ax
cmpb   $0x0,(%ecx)
je     804d7f0 <fchmod@plt+0x4460>
mov    %ebx,%edx
lea    0x4(%esp),%eax
call   804d510 <fchmod@plt+0x4180>
mov    0x806ff70,%ecx
sub    0x806c9a0,%ecx
add    0xc(%esp),%esi
mov    %ecx,%eax
shr    $0x1f,%eax
add    %eax,%ecx
sar    %ecx
cmp    %esi,%ecx
mov    0x4(%esp),%ecx
jg     804d788 <fchmod@plt+0x43f8>
cmpb   $0x0,(%ecx)
je     804d7f0 <fchmod@plt+0x4460>
lea    0xc(%esp),%ebx
jmp    804d7d5 <fchmod@plt+0x4445>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%ecx
mov    %ecx,0x4(%esp)
cmpb   $0x0,(%ecx)
je     804d7f0 <fchmod@plt+0x4460>
lea    0x8(%esp),%edx
mov    %ebx,%eax
mov    %ecx,0xc(%esp)
call   804d510 <fchmod@plt+0x4180>
mov    0x8(%esp),%ecx
test   %ecx,%ecx
jle    804d7c8 <fchmod@plt+0x4438>
mov    0x4(%esp),%ecx
mov    0x806c99c,%ebx
sub    $0x806c9c0,%ecx
mov    %ecx,0x806c998
call   804d260 <fchmod@plt+0x3ed0>
mov    %ebx,%eax
call   804d560 <fchmod@plt+0x41d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x806c99c,%eax
cmpb   $0x0,(%eax)
jne    804d830 <fchmod@plt+0x44a0>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    %eax,0x18(%esp)
lea    0x1c(%esp),%edx
lea    0x18(%esp),%eax
call   804d510 <fchmod@plt+0x4180>
mov    0x806c9a4,%edx
mov    0x806ff70,%ecx
add    0x1c(%esp),%edx
cmp    %ecx,%edx
jge    804d8d0 <fchmod@plt+0x4540>
sub    $0x1,%ecx
cmp    %ecx,%edx
je     804d8c0 <fchmod@plt+0x4530>
mov    0x18(%esp),%ecx
mov    %eax,(%esp)
mov    %edx,0x806c9a4
mov    %ecx,0x806c99c
call   8059c60 <fchmod@plt+0x108d0>
mov    0x806c99c,%eax
cmpb   $0x0,(%eax)
jne    804d89e <fchmod@plt+0x450e>
jmp    804d8b3 <fchmod@plt+0x4523>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
mov    0x18(%esp),%eax
mov    %eax,0x806c99c
cmpb   $0x0,(%eax)
je     804d8b3 <fchmod@plt+0x4523>
lea    0x1c(%esp),%edx
lea    0x18(%esp),%eax
call   804d510 <fchmod@plt+0x4180>
mov    0x1c(%esp),%edx
test   %edx,%edx
jle    804d888 <fchmod@plt+0x44f8>
xor    %eax,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c99c,%ecx
cmpb   $0x0,0x1(%ecx)
je     804d85f <fchmod@plt+0x44cf>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   804d750 <fchmod@plt+0x43c0>
mov    0x806c9a4,%edx
add    0x1c(%esp),%edx
mov    0xc(%esp),%eax
jmp    804d85f <fchmod@plt+0x44cf>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
mov    0x806c99c,%ebx
cmp    $0x806c9c0,%ebx
je     804d968 <fchmod@plt+0x45d8>
call   804d630 <fchmod@plt+0x42a0>
mov    0x806c99c,%eax
mov    %ebx,%ecx
movzbl (%ebx),%edx
sub    %eax,%ecx
test   %dl,%dl
mov    %dl,(%eax)
je     804d92d <fchmod@plt+0x459d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax,%ecx,1),%edx
test   %dl,%dl
mov    %dl,(%eax)
jne    804d920 <fchmod@plt+0x4590>
mov    0x806c99c,%eax
movl   $0xffffffff,0x806b71c
ff
call   804d560 <fchmod@plt+0x41d0>
mov    0x806c970,%eax
and    $0x1,%eax
je     804d959 <fchmod@plt+0x45c9>
xor    %eax,%eax
cmpl   $0x806c9c0,0x806c99c
08
je     804d95e <fchmod@plt+0x45ce>
add    $0x8,%esp
pop    %ebx
ret
cmpb   $0x0,0x806c9c0
jne    804d959 <fchmod@plt+0x45c9>
nop
add    $0x8,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c99c,%eax
cmpb   $0x0,(%eax)
jne    804d990 <fchmod@plt+0x4600>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
sub    $0xc,%esp
call   804d820 <fchmod@plt+0x4490>
call   804d8f0 <fchmod@plt+0x4560>
xor    %eax,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
movl   $0x0,0x806c998
00
call   804d260 <fchmod@plt+0x3ed0>
mov    0x806c99c,%eax
movl   $0xffffffff,0x806b71c
ff
movb   $0x0,(%eax)
mov    0x806c99c,%eax
call   804d560 <fchmod@plt+0x41d0>
mov    0x806c970,%eax
add    $0xc,%esp
and    $0x1,%eax
ret
lea    0x0(%esi),%esi
push   %edi
mov    $0x806c9c0,%ecx
push   %esi
mov    %eax,%edi
push   %ebx
mov    (%ecx),%esi
add    $0x4,%ecx
lea    -0x1010101(%esi),%ebx
not    %esi
and    %esi,%ebx
and    $0x80808080,%ebx
je     804d9fa <fchmod@plt+0x466a>
mov    %ebx,%esi
shr    $0x10,%esi
test   $0x8080,%ebx
cmove  %esi,%ebx
lea    0x2(%ecx),%esi
cmove  %esi,%ecx
add    %bl,%bl
sbb    $0x3,%ecx
sub    $0x806c9c0,%ecx
lea    (%ecx,%edx,1),%ebx
cmp    $0x7fe,%ebx
ja     804daa0 <fchmod@plt+0x4710>
mov    0x806c99c,%ebx
add    $0x806c9c0,%ecx
cmp    %ebx,%ecx
lea    -0x1(%ebx),%esi
jb     804da5e <fchmod@plt+0x46ce>
xchg   %ax,%ax
movzbl (%ecx),%eax
sub    $0x1,%ecx
mov    %al,0x1(%ecx,%edx,1)
cmp    %esi,%ecx
jne    804da50 <fchmod@plt+0x46c0>
lea    (%ebx,%edx,1),%ecx
cmp    %ecx,%ebx
jae    804daae <fchmod@plt+0x471e>
lea    0x0(%esi),%esi
add    $0x1,%edi
movzbl -0x1(%edi),%ecx
add    $0x1,%ebx
mov    %cl,-0x1(%ebx)
mov    0x806c99c,%ecx
lea    (%ecx,%edx,1),%esi
cmp    %esi,%ebx
jb     804da68 <fchmod@plt+0x46d8>
mov    %ecx,%eax
movl   $0xffffffff,0x806b71c
ff
call   804d560 <fchmod@plt+0x41d0>
call   804d820 <fchmod@plt+0x4490>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   804acb0 <fchmod@plt+0x1920>
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ebx,%ecx
jmp    804da82 <fchmod@plt+0x46f2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
mov    %eax,(%esp)
lea    0x1c(%esp),%esi
call   80491a0 <strlen@plt>
mov    %ebx,0x1c(%esp)
lea    (%ebx,%eax,1),%edi
jmp    804db09 <fchmod@plt+0x4779>
lea    0x0(%esi),%esi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    0x1c(%esp),%edx
mov    %ebx,%eax
sub    %ebx,%edx
call   804d9f0 <fchmod@plt+0x4660>
test   %eax,%eax
jne    804db18 <fchmod@plt+0x4788>
mov    0x1c(%esp),%ebx
cmpb   $0x0,(%ebx)
jne    804dae0 <fchmod@plt+0x4750>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %eax,0xc(%esp)
call   804acb0 <fchmod@plt+0x1920>
mov    0xc(%esp),%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806c9c0,0x806c99c
08
movb   $0x0,0x806c9c0
movl   $0x0,0x806c9a4
00
movl   $0x0,0x806c998
00
movl   $0x0,0x806c994
00
movl   $0x0,0x806c964
00
movl   $0xffffffff,0x806b71c
ff
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
movl   $0x0,0x806c9a0
00
movl   $0x0,0x806c9a4
00
movl   $0x0,0x806c964
00
movl   $0xffffffff,0x806b71c
ff
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
lea    0x1c(%esp),%esi
mov    %edi,(%esp)
call   80491a0 <strlen@plt>
add    %edi,%eax
cmpb   $0x0,(%edi)
mov    %eax,0xc(%esp)
je     804dc75 <fchmod@plt+0x48e5>
mov    0xc(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,0x1c(%esp)
mov    %eax,0x8(%esp)
call   804cf10 <fchmod@plt+0x3b80>
cmp    %edi,0x1c(%esp)
mov    %eax,%ebx
jbe    804dc15 <fchmod@plt+0x4885>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movsbl -0x1(%edi),%eax
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
cmp    %edi,0x1c(%esp)
ja     804dc00 <fchmod@plt+0x4870>
mov    0x806c7e0,%ecx
test   %ecx,%ecx
jne    804dc38 <fchmod@plt+0x48a8>
addl   $0x1,0x806c9a4
addl   $0x1,0x806c9a0
cmpb   $0x0,(%edi)
je     804dc75 <fchmod@plt+0x48e5>
mov    %ebx,%ebp
jmp    804dbd8 <fchmod@plt+0x4848>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   804cff0 <fchmod@plt+0x3c60>
test   %eax,%eax
jne    804dc2d <fchmod@plt+0x489d>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   804d050 <fchmod@plt+0x3cc0>
test   %eax,%eax
jne    804dc2d <fchmod@plt+0x489d>
mov    %ebx,(%esp)
call   804d030 <fchmod@plt+0x3ca0>
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x2,%eax
add    %eax,0x806c9a4
add    %eax,0x806c9a0
cmpb   $0x0,(%edi)
jne    804dc32 <fchmod@plt+0x48a2>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
mov    $0x806c9c0,%edx
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x806c9c0,0x1c(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804dc93 <fchmod@plt+0x4903>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%esi
cmovne %edx,%esi
add    %al,%al
sbb    $0x3,%esi
xor    %ebx,%ebx
cmpb   $0x0,0x806c9c0
je     804dcf0 <fchmod@plt+0x4960>
lea    0x1c(%esp),%edi
mov    %esi,0x8(%esp)
add    $0x1,%ebx
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804dcd0 <fchmod@plt+0x4940>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
test   %eax,%eax
mov    %eax,0x806c974
mov    %edx,0x806c970
je     804dd1a <fchmod@plt+0x498a>
mov    %eax,0x8(%eax)
repz ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
cmpb   $0x0,(%edx)
je     804dd38 <fchmod@plt+0x49a8>
jmp    804d4a0 <fchmod@plt+0x4110>
lea    0x0(%esi),%esi
repz ret
lea    0x0(%esi),%esi
mov    0x806c974,%eax
test   %eax,%eax
je     804dd7c <fchmod@plt+0x49ec>
cmpb   $0x0,0x806c9c0
jne    804dd60 <fchmod@plt+0x49d0>
movl   $0x1,0x10(%eax)
ret
lea    0x0(%esi),%esi
sub    $0xc,%esp
mov    $0x806c9c0,%edx
call   804d4a0 <fchmod@plt+0x4110>
mov    0x806c974,%eax
movl   $0x1,0x10(%eax)
add    $0xc,%esp
repz ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x806c7e0,%eax
mov    0x50(%esp),%ebx
test   %eax,%eax
jne    804ddd0 <fchmod@plt+0x4a40>
mov    %bl,0x806c968
mov    $0x1,%esi
mov    0x806c994,%ebp
test   %ebp,%ebp
jne    804de18 <fchmod@plt+0x4a88>
call   804f090 <fchmod@plt+0x5d00>
test   %eax,%eax
je     804ddbb <fchmod@plt+0x4a2b>
cmp    $0x1,%esi
je     804dec8 <fchmod@plt+0x4b38>
add    $0x3c,%esp
mov    %esi,%edx
pop    %ebx
mov    $0x806c968,%eax
pop    %esi
pop    %edi
pop    %ebp
jmp    804d9f0 <fchmod@plt+0x4660>
xchg   %ax,%ax
mov    0x806c964,%edx
test   %edx,%edx
jne    804de28 <fchmod@plt+0x4a98>
test   $0x80,%bl
movl   $0x1,0x806c960
00
mov    %bl,0x806c968
je     804de48 <fchmod@plt+0x4ab8>
mov    %ebx,%eax
and    $0xc0,%eax
cmp    $0xc0,%eax
je     804dea0 <fchmod@plt+0x4b10>
call   804acb0 <fchmod@plt+0x1920>
mov    $0x2,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806c994
00
jmp    804ddbb <fchmod@plt+0x4a2b>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
and    $0xc0,%eax
add    $0xffffff80,%eax
je     804de60 <fchmod@plt+0x4ad0>
movl   $0x0,0x806c964
00
call   804acb0 <fchmod@plt+0x1920>
jmp    804ddda <fchmod@plt+0x4a4a>
lea    0x0(%esi),%esi
mov    $0x1,%esi
movl   $0x0,0x806c964
00
jmp    804dd9f <fchmod@plt+0x4a0f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c960,%eax
lea    0x1(%eax),%ecx
mov    %bl,0x806c968(%eax)
xor    %eax,%eax
cmp    %ecx,%edx
mov    %ecx,0x806c960
jg     804de0b <fchmod@plt+0x4a7b>
movl   $0x806c968,(%esp)
call   804cba0 <fchmod@plt+0x3810>
mov    0x806c964,%esi
test   %eax,%eax
jne    804de4d <fchmod@plt+0x4abd>
movl   $0x0,0x806c964
00
jmp    804de01 <fchmod@plt+0x4a71>
nop
mov    %ebx,%eax
and    $0xfe,%eax
cmp    $0xfe,%eax
je     804de01 <fchmod@plt+0x4a71>
mov    %ebx,(%esp)
call   804cb80 <fchmod@plt+0x37f0>
mov    %eax,0x806c964
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
xchg   %ax,%ax
mov    0x806c974,%eax
test   %eax,%eax
je     804e287 <fchmod@plt+0x4ef7>
cmp    $0x806b704,%eax
sete   %al
movzbl %al,%eax
shl    $0x2,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80514f0 <fchmod@plt+0x8160>
cmp    $0x65,%eax
mov    %eax,%ebx
ja     804e278 <fchmod@plt+0x4ee8>
jmp    *0x805eaa8(,%eax,4)
mov    0x806c990,%esi
test   %esi,%esi
je     804e291 <fchmod@plt+0x4f01>
cmp    $0xf,%eax
je     804e291 <fchmod@plt+0x4f01>
mov    0x806c980,%edx
call   804d450 <fchmod@plt+0x40c0>
mov    %eax,0x806c980
mov    0x806c99c,%eax
cmp    %eax,0x806c984
jae    804df4a <fchmod@plt+0x4bba>
lea    0x0(%esi),%esi
call   804d8f0 <fchmod@plt+0x4560>
mov    0x806c984,%eax
cmp    %eax,0x806c99c
ja     804df38 <fchmod@plt+0x4ba8>
mov    0x806c980,%eax
test   %eax,%eax
je     804e5bd <fchmod@plt+0x522d>
call   804dac0 <fchmod@plt+0x4730>
test   %eax,%eax
je     804e50e <fchmod@plt+0x517e>
movl   $0x0,0x806c990
00
call   804acb0 <fchmod@plt+0x1920>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
cmpb   $0x0,0x806c9c0
movl   $0x0,0x806c990
00
jne    804e504 <fchmod@plt+0x5174>
mov    $0x1,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movl   $0x1,0x806c994
00
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
mov    0x806c974,%eax
movl   $0x0,0x806c990
00
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804df6e <fchmod@plt+0x4bde>
mov    0x806b71c,%edi
test   %edi,%edi
js     804e569 <fchmod@plt+0x51d9>
mov    0x18(%esp),%eax
mov    0x806b71c,%ebp
mov    0x8(%eax),%eax
jmp    804e001 <fchmod@plt+0x4c71>
mov    0xc(%esi),%edi
mov    %ebp,0x8(%esp)
movl   $0x806c9c0,(%esp)
mov    %edi,0x4(%esp)
call   80492f0 <strncmp@plt>
test   %eax,%eax
je     804e3b9 <fchmod@plt+0x5029>
mov    %esi,%eax
mov    0x4(%eax),%esi
cmp    $0xd,%ebx
cmovne (%eax),%esi
cmp    %esi,0x18(%esp)
jne    804dfe0 <fchmod@plt+0x4c50>
jmp    804df6e <fchmod@plt+0x4bde>
mov    0x806c99c,%eax
movl   $0x0,0x806c990
00
movzbl (%eax),%eax
test   $0xdf,%al
je     804e041 <fchmod@plt+0x4cb1>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d820 <fchmod@plt+0x4490>
mov    0x806c99c,%eax
movzbl (%eax),%eax
test   $0xdf,%al
jne    804e030 <fchmod@plt+0x4ca0>
cmp    $0x20,%al
jne    804df73 <fchmod@plt+0x4be3>
lea    0x0(%esi,%eiz,1),%esi
call   804d820 <fchmod@plt+0x4490>
mov    0x806c99c,%eax
cmpb   $0x20,(%eax)
je     804e050 <fchmod@plt+0x4cc0>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movl   $0x0,0x806c990
00
call   804d630 <fchmod@plt+0x42a0>
cmp    $0x1,%eax
ja     804ddbb <fchmod@plt+0x4a2b>
jmp    804de0b <fchmod@plt+0x4a7b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806c990
00
call   804d820 <fchmod@plt+0x4490>
jmp    804e075 <fchmod@plt+0x4ce5>
mov    0x806c99c,%eax
movl   $0x0,0x806c990
00
cmpb   $0x0,(%eax)
je     804df73 <fchmod@plt+0x4be3>
lea    0x0(%esi,%eiz,1),%esi
call   804d820 <fchmod@plt+0x4490>
mov    0x806c99c,%eax
cmpb   $0x0,(%eax)
jne    804e0b8 <fchmod@plt+0x4d28>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movl   $0x0,0x806c990
00
movl   $0x0,0x806c998
00
call   804d260 <fchmod@plt+0x3ed0>
mov    0x806c99c,%eax
call   804d560 <fchmod@plt+0x41d0>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movl   $0x0,0x806c990
00
call   804d980 <fchmod@plt+0x45f0>
jmp    804e075 <fchmod@plt+0x4ce5>
movl   $0x0,0x806c990
00
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
mov    0x806c99c,%eax
movl   $0x0,0x806c990
00
movzbl (%eax),%eax
cmp    $0x20,%al
je     804e156 <fchmod@plt+0x4dc6>
test   $0xdf,%al
je     804df73 <fchmod@plt+0x4be3>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d980 <fchmod@plt+0x45f0>
mov    0x806c99c,%eax
testb  $0xdf,(%eax)
jne    804e140 <fchmod@plt+0x4db0>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
call   804d980 <fchmod@plt+0x45f0>
mov    0x806c99c,%eax
cmpb   $0x20,(%eax)
je     804e156 <fchmod@plt+0x4dc6>
jmp    804df73 <fchmod@plt+0x4be3>
mov    0x806c99c,%eax
movl   $0x0,0x806c990
00
cmp    $0x806c9c0,%eax
jbe    804df73 <fchmod@plt+0x4be3>
cmpb   $0x20,-0x1(%eax)
jne    804e19a <fchmod@plt+0x4e0a>
jmp    804e1c2 <fchmod@plt+0x4e32>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x20,-0x1(%eax)
je     804df73 <fchmod@plt+0x4be3>
lea    0x0(%esi),%esi
call   804d8f0 <fchmod@plt+0x4560>
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
ja     804e190 <fchmod@plt+0x4e00>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
cmpb   $0x20,-0x1(%eax)
jne    804df73 <fchmod@plt+0x4be3>
call   804d8f0 <fchmod@plt+0x4560>
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
ja     804e1b8 <fchmod@plt+0x4e28>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
lea    0x0(%esi),%esi
cmpb   $0x0,0x806c9c0
movl   $0x0,0x806c990
00
je     804df91 <fchmod@plt+0x4c01>
call   804d9b0 <fchmod@plt+0x4620>
jmp    804e075 <fchmod@plt+0x4ce5>
movl   $0x0,0x806c990
00
call   804d8f0 <fchmod@plt+0x4560>
jmp    804e075 <fchmod@plt+0x4ce5>
mov    0x806c99c,%eax
movl   $0x0,0x806c990
00
cmp    $0x806c9c0,%eax
ja     804e245 <fchmod@plt+0x4eb5>
jmp    804df73 <fchmod@plt+0x4be3>
call   804d630 <fchmod@plt+0x42a0>
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
jbe    804df73 <fchmod@plt+0x4be3>
cmpb   $0x20,-0x1(%eax)
je     804e230 <fchmod@plt+0x4ea0>
jmp    804e25a <fchmod@plt+0x4eca>
lea    0x0(%esi),%esi
cmpb   $0x20,-0x1(%eax)
je     804df73 <fchmod@plt+0x4be3>
lea    0x0(%esi),%esi
call   804d630 <fchmod@plt+0x42a0>
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
ja     804e250 <fchmod@plt+0x4ec0>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movl   $0x0,0x806c990
00
jmp    804ddbb <fchmod@plt+0x4a2b>
mov    $0x2,%eax
jmp    804dee3 <fchmod@plt+0x4b53>
mov    0x806c98c,%eax
test   %eax,%eax
je     804e2ac <fchmod@plt+0x4f1c>
mov    %eax,(%esp)
call   8048f90 <free@plt>
movl   $0x0,0x806c98c
00
call   80525a0 <fchmod@plt+0x9210>
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   80491a0 <strlen@plt>
mov    0x806c99c,%edi
testb  $0xdf,(%edi)
mov    %eax,%ebp
je     804e2da <fchmod@plt+0x4f4a>
call   804d820 <fchmod@plt+0x4490>
mov    0x806c99c,%edi
testb  $0xdf,(%edi)
jne    804e2ca <fchmod@plt+0x4f3a>
cmp    $0x806c9c0,%edi
je     804e5e0 <fchmod@plt+0x5250>
jbe    804e312 <fchmod@plt+0x4f82>
cmpb   $0x20,0x806c9c0
mov    $0x806c9c0,%esi
je     804e309 <fchmod@plt+0x4f79>
jmp    804e41e <fchmod@plt+0x508e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x20,(%esi)
jne    804e41e <fchmod@plt+0x508e>
add    $0x1,%esi
cmp    %edi,%esi
xchg   %ax,%ax
jne    804e300 <fchmod@plt+0x4f70>
mov    %edi,%esi
test   %esi,%esi
je     804e5e0 <fchmod@plt+0x5250>
mov    0x806c988,%eax
mov    %esi,0x806c984
test   %eax,%eax
je     804e339 <fchmod@plt+0x4fa9>
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x806c99c,%edi
mov    %edi,%eax
sub    %esi,%eax
add    $0x1,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x806c99c,%edx
mov    %esi,0x4(%esp)
sub    %esi,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,0x806c988
call   8049220 <strncpy@plt>
mov    0x806c99c,%eax
movzbl (%eax),%edi
movb   $0x0,(%eax)
movzbl 0x806b719,%eax
cmp    %al,(%esi)
je     804e58a <fchmod@plt+0x51fa>
mov    %esi,(%esp)
call   8052e00 <fchmod@plt+0x9a70>
mov    %eax,0x806c98c
mov    0x806c99c,%edx
mov    %edi,%ecx
mov    %cl,(%edx)
test   %eax,%eax
je     804df6e <fchmod@plt+0x4bde>
cmp    $0xf,%ebx
jne    804e4d7 <fchmod@plt+0x5147>
mov    %eax,0x806c980
jmp    804df28 <fchmod@plt+0x4b98>
mov    0x18(%esp),%eax
test   %edi,%edi
mov    %esi,0x8(%eax)
mov    $0x805e30e,%eax
cmove  %eax,%edi
call   804d260 <fchmod@plt+0x3ed0>
call   804ad10 <fchmod@plt+0x1980>
movl   $0x800,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x806c9c0,(%esp)
call   8049250 <__strcpy_chk@plt>
cmpb   $0x0,0x806c9c0
movl   $0x806c9c0,0x806c99c
08
je     804df73 <fchmod@plt+0x4be3>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d820 <fchmod@plt+0x4490>
mov    0x806c99c,%eax
cmpb   $0x0,(%eax)
jne    804e408 <fchmod@plt+0x5078>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
movzbl 0x806b718,%eax
mov    $0x806c9c0,%edx
xor    %ecx,%ecx
mov    %ebx,0x28(%esp)
xor    %ebx,%ebx
movl   $0x0,0x20(%esp)
mov    %al,0x1e(%esp)
movzbl 0x806b719,%eax
mov    %al,0x1f(%esp)
lea    -0x1(%ebp),%eax
mov    %eax,0x24(%esp)
jmp    804e496 <fchmod@plt+0x5106>
test   %ebp,%ebp
jle    804e4a1 <fchmod@plt+0x5111>
lea    (%edx,%ebp,1),%eax
cmp    %eax,%edi
jbe    804e4a1 <fchmod@plt+0x5111>
mov    0x18(%esp),%eax
mov    %edx,(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   80492f0 <strncmp@plt>
mov    0x20(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    804e4a1 <fchmod@plt+0x5111>
mov    0x24(%esp),%eax
mov    $0x1,%ecx
lea    0x1(%edx,%eax,1),%edx
cmp    %edx,%edi
jbe    804e4ce <fchmod@plt+0x513e>
test   %ecx,%ecx
je     804e452 <fchmod@plt+0x50c2>
xor    %ecx,%ecx
add    $0x1,%edx
jmp    804e492 <fchmod@plt+0x5102>
test   %ebx,%ebx
je     804e4b6 <fchmod@plt+0x5126>
movzbl 0x1e(%esp),%eax
xor    %ebx,%ebx
cmp    %al,(%edx)
setne  %bl
add    $0x1,%edx
jmp    804e492 <fchmod@plt+0x5102>
movzbl (%edx),%eax
cmp    0x1f(%esp),%al
je     804e57d <fchmod@plt+0x51ed>
add    $0x1,%edx
cmp    $0x20,%al
jne    804e492 <fchmod@plt+0x5102>
mov    %edx,%esi
jmp    804e492 <fchmod@plt+0x5102>
mov    0x28(%esp),%ebx
jmp    804e314 <fchmod@plt+0x4f84>
mov    %eax,0x4(%esp)
movl   $0x806c978,(%esp)
movl   $0x1,0x806c990
00
call   8051700 <fchmod@plt+0x8370>
xor    %edx,%edx
mov    %ebx,%eax
call   804d450 <fchmod@plt+0x40c0>
mov    %eax,0x806c980
jmp    804df28 <fchmod@plt+0x4b98>
call   804d9b0 <fchmod@plt+0x4620>
jmp    804df91 <fchmod@plt+0x4c01>
mov    0x806c980,%eax
mov    %eax,(%esp)
call   80531a0 <fchmod@plt+0x9e10>
test   %eax,%eax
je     804df73 <fchmod@plt+0x4be3>
mov    0x806c99c,%eax
cmp    $0x806c9c0,%eax
jbe    804e53f <fchmod@plt+0x51af>
movzbl 0x806b718,%ecx
cmp    %cl,-0x1(%eax)
je     804e5ea <fchmod@plt+0x525a>
movl   $0x805ea75,(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    $0x805ec85,%edx
test   %eax,%eax
cmove  %edx,%eax
call   804dac0 <fchmod@plt+0x4730>
test   %eax,%eax
jne    804df64 <fchmod@plt+0x4bd4>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
mov    0x806c99c,%eax
sub    $0x806c9c0,%eax
mov    %eax,0x806b71c
jmp    804dfd1 <fchmod@plt+0x4c41>
mov    $0x1,%ebx
add    $0x1,%edx
jmp    804e492 <fchmod@plt+0x5102>
add    $0x1,%esi
mov    %esi,(%esp)
call   80525c0 <fchmod@plt+0x9230>
test   %eax,%eax
mov    %eax,%ebp
je     804e387 <fchmod@plt+0x4ff7>
mov    %eax,(%esp)
call   8052e00 <fchmod@plt+0x9a70>
mov    %ebp,(%esp)
mov    %eax,%esi
mov    %eax,0x806c98c
call   8048f90 <free@plt>
mov    %esi,%eax
jmp    804e394 <fchmod@plt+0x5004>
mov    0x806c988,%eax
movl   $0x0,0x806c990
00
call   804dac0 <fchmod@plt+0x4730>
test   %eax,%eax
jne    804df64 <fchmod@plt+0x4bd4>
xor    %eax,%eax
jmp    804de0b <fchmod@plt+0x4a7b>
mov    0x806c98c,%eax
jmp    804e39e <fchmod@plt+0x500e>
call   804d8f0 <fchmod@plt+0x4560>
nop
jmp    804e53f <fchmod@plt+0x51af>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movsbl 0x806c9c0,%ebx
mov    0x50(%esp),%ebp
lea    -0x30(%ebx),%eax
cmp    $0x9,%al
ja     804e6bf <fchmod@plt+0x532f>
mov    $0x806c9c1,%ecx
mov    $0xa,%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
nop
mov    0x1c(%esp),%edx
sub    $0x30,%ebx
mov    0x18(%esp),%eax
mov    %ebx,0x18(%esp)
sar    $0x1f,%ebx
mov    %ebx,0x1c(%esp)
movsbl (%ecx),%ebx
imul   $0xa,%edx,%edi
mul    %esi
add    %edi,%edx
add    %eax,0x18(%esp)
lea    -0x30(%ebx),%eax
adc    %edx,0x1c(%esp)
mov    %ecx,%edx
add    $0x1,%ecx
cmp    $0x9,%al
jbe    804e638 <fchmod@plt+0x52a8>
movl   $0x0,0x0(%ebp)
lea    0x1(%edx),%eax
cmpb   $0x2e,(%edx)
mov    %eax,0x28(%esp)
je     804e690 <fchmod@plt+0x5300>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80594b0 <fchmod@plt+0x10120>
mov    0x1c(%esp),%edx
mov    %eax,0x0(%ebp)
mov    0x18(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x806c9c0,%edx
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
jmp    804e66c <fchmod@plt+0x52dc>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x806c9c0,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c974,%eax
test   %eax,%eax
je     804e708 <fchmod@plt+0x5378>
mov    0x8(%eax),%eax
mov    0x4(%eax),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x82c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x81c(%esp)
xor    %eax,%eax
call   804d2d0 <fchmod@plt+0x3f40>
test   %eax,%eax
mov    %eax,%ebx
je     804e828 <fchmod@plt+0x5498>
movl   $0x805e6c8,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <fopen64@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8048f90 <free@plt>
test   %ebp,%ebp
je     804e828 <fchmod@plt+0x5498>
lea    0x1c(%esp),%ebx
mov    %ebp,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %ebx,(%esp)
call   8048fb0 <fgets@plt>
test   %eax,%eax
je     804e820 <fchmod@plt+0x5490>
mov    $0x805ea83,%edi
mov    $0x13,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804e820 <fchmod@plt+0x5490>
movl   $0x0,0xc(%esp)
xchg   %ax,%ax
mov    %ebp,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %ebx,(%esp)
call   8048fb0 <fgets@plt>
test   %eax,%eax
je     804e820 <fchmod@plt+0x5490>
movzbl 0x1c(%esp),%eax
test   %al,%al
je     804e7d5 <fchmod@plt+0x5445>
mov    %ebx,%edx
jmp    804e7ce <fchmod@plt+0x543e>
lea    0x0(%esi),%esi
cmp    $0xa,%al
je     804e7d2 <fchmod@plt+0x5442>
add    $0x1,%edx
movzbl (%edx),%eax
test   %al,%al
je     804e7d5 <fchmod@plt+0x5445>
cmp    $0xd,%al
jne    804e7c0 <fchmod@plt+0x5430>
movb   $0x0,(%edx)
mov    $0x805ea97,%edi
mov    %ebx,%esi
mov    $0x8,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e848 <fchmod@plt+0x54b8>
mov    $0x805ea9f,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e858 <fchmod@plt+0x54c8>
cmpb   $0x22,0x1c(%esp)
jne    804e798 <fchmod@plt+0x5408>
mov    0xc(%esp),%eax
test   %eax,%eax
je     804e798 <fchmod@plt+0x5408>
cmpb   $0x0,0x1d(%esp)
je     804e798 <fchmod@plt+0x5408>
mov    0xc(%esp),%eax
lea    0x1d(%esp),%edx
call   804d4a0 <fchmod@plt+0x4110>
jmp    804e798 <fchmod@plt+0x5408>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8048fd0 <fclose@plt>
mov    0x81c(%esp),%eax
xor    %gs:0x14,%eax
jne    804e865 <fchmod@plt+0x54d5>
add    $0x82c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b704,0xc(%esp)
jmp    804e798 <fchmod@plt+0x5408>
lea    0x0(%esi),%esi
movl   $0x806b6dc,0xc(%esp)
jmp    804e798 <fchmod@plt+0x5408>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x74,%esp
mov    0x806b6ec,%edx
mov    0x806b714,%eax
test   %edx,%edx
je     804e978 <fchmod@plt+0x55e8>
call   804d2d0 <fchmod@plt+0x3f40>
test   %eax,%eax
mov    %eax,%esi
je     804e971 <fchmod@plt+0x55e1>
movl   $0x805e62e,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <fopen64@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8048f90 <free@plt>
test   %ebx,%ebx
je     804e971 <fchmod@plt+0x55e1>
mov    %ebx,(%esp)
call   8049230 <fileno@plt>
lea    0x10(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80490b0 <__fxstat64@plt>
test   %eax,%eax
js     804e8f1 <fchmod@plt+0x5561>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804e988 <fchmod@plt+0x55f8>
movl   $0x805ea83,0xc(%esp)
movl   $0x805ea6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80492d0 <__fprintf_chk@plt>
movl   $0x805ea97,0xc(%esp)
movl   $0x805ea6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80492d0 <__fprintf_chk@plt>
mov    %ebx,%edx
mov    $0x806b708,%eax
call   804d3a0 <fchmod@plt+0x4010>
movl   $0x805ea9f,0xc(%esp)
movl   $0x805ea6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80492d0 <__fprintf_chk@plt>
mov    %ebx,%edx
mov    $0x806b6e0,%eax
call   804d3a0 <fchmod@plt+0x4010>
mov    %ebx,(%esp)
call   8048fd0 <fclose@plt>
add    $0x74,%esp
pop    %ebx
pop    %esi
ret
nop
test   %eax,%eax
jne    804e888 <fchmod@plt+0x54f8>
add    $0x74,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8049230 <fileno@plt>
movl   $0x180,0x4(%esp)
mov    %eax,(%esp)
call   8049390 <fchmod@plt>
jmp    804e8f1 <fchmod@plt+0x5561>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x806d1f8,%eax
test   $0x20,%ah
je     804ea30 <fchmod@plt+0x56a0>
movl   $0x37,0x806d1fc
00
call   804aed0 <fchmod@plt+0x1b40>
call   804db80 <fchmod@plt+0x47f0>
mov    0x806d1f8,%eax
test   $0x1,%ah
jne    804eac8 <fchmod@plt+0x5738>
test   $0x4,%ah
jne    804eab0 <fchmod@plt+0x5720>
test   $0x2,%ah
jne    804ea98 <fchmod@plt+0x5708>
test   $0x4,%al
jne    804ea80 <fchmod@plt+0x56f0>
test   $0x10,%ah
jne    804ea58 <fchmod@plt+0x56c8>
test   $0x20,%ah
jne    804ea6e <fchmod@plt+0x56de>
test   $0x1,%al
jne    804ea48 <fchmod@plt+0x56b8>
movl   $0x805ea73,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x805ec48,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804dd00 <fchmod@plt+0x4970>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffff6,%eax
add    $0xf,%eax
mov    %eax,0x806d1fc
jmp    804e9c7 <fchmod@plt+0x5637>
lea    0x0(%esi),%esi
movl   $0x805ec85,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
jmp    804ea13 <fchmod@plt+0x5683>
xchg   %ax,%ax
movl   $0x805ec79,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1f8,%eax
test   $0x20,%ah
je     804ea03 <fchmod@plt+0x5673>
movl   $0x805ec84,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
jmp    804ea13 <fchmod@plt+0x5683>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805ec6f,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1f8,%eax
jmp    804e9f9 <fchmod@plt+0x5669>
xchg   %ax,%ax
movl   $0x805ec63,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1f8,%eax
jmp    804e9f1 <fchmod@plt+0x5661>
xchg   %ax,%ax
movl   $0x805ec57,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1f8,%eax
jmp    804e9e8 <fchmod@plt+0x5658>
xchg   %ax,%ax
movl   $0x805ec4c,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1f8,%eax
jmp    804e9df <fchmod@plt+0x564f>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
mov    $0x805ec87,%ebx
sub    $0x10,%esp
mov    0x806d1dc,%eax
movl   $0x2f,0x806d1fc
00
mov    %eax,%edi
and    $0x40,%edi
and    $0xffffffbf,%eax
mov    %eax,%esi
mov    $0x8062b27,%eax
cmovne %eax,%ebx
call   804aed0 <fchmod@plt+0x1b40>
call   804db80 <fchmod@plt+0x47f0>
mov    %ebx,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x806d1d8,%eax
test   %eax,%eax
jne    804eb80 <fchmod@plt+0x57f0>
test   %edi,%edi
jne    804eb70 <fchmod@plt+0x57e0>
cmp    $0x2,%esi
je     804eb60 <fchmod@plt+0x57d0>
cmp    $0x3,%esi
jne    804eb41 <fchmod@plt+0x57b1>
movl   $0x805ec8f,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804dd00 <fchmod@plt+0x4970>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805ec8d,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
jmp    804eb41 <fchmod@plt+0x57b1>
xchg   %ax,%ax
movl   $0x805ec89,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
jmp    804eb2b <fchmod@plt+0x579b>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
jmp    804eb27 <fchmod@plt+0x5797>
lea    0x0(%esi),%esi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
mov    %eax,0x806d1fc
call   804aed0 <fchmod@plt+0x1b40>
call   804db80 <fchmod@plt+0x47f0>
mov    %ebx,(%esp)
call   804dbb0 <fchmod@plt+0x4820>
mov    0x20(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804dd00 <fchmod@plt+0x4970>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
call   80518c0 <fchmod@plt+0x8530>
mov    %eax,%edi
mov    0x806d1f8,%eax
test   $0x4,%ah
je     804ec18 <fchmod@plt+0x5888>
test   $0x1,%al
jne    804ecb0 <fchmod@plt+0x5920>
call   8052070 <fchmod@plt+0x8ce0>
test   %eax,%eax
jne    804ecc0 <fchmod@plt+0x5930>
mov    0x806d1f8,%eax
mov    $0x1,%esi
and    $0xfb,%ah
mov    %eax,0x806d1f8
jmp    804ec33 <fchmod@plt+0x58a3>
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    804ec33 <fchmod@plt+0x58a3>
lea    0x0(%esi,%eiz,1),%esi
call   8052020 <fchmod@plt+0x8c90>
test   %eax,%eax
jne    804ec75 <fchmod@plt+0x58e5>
mov    0x806d1f8,%eax
mov    $0x1,%esi
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805c910 <error+0x28a0>
mov    0x806d1f8,%ecx
mov    %eax,%ebp
mov    %ecx,%eax
and    $0xfffffffb,%eax
test   %ebp,%ebp
mov    %eax,0x806d1f8
je     804ecc0 <fchmod@plt+0x5930>
js     804ec89 <fchmod@plt+0x58f9>
test   $0x2,%ch
je     804ec75 <fchmod@plt+0x58e5>
and    $0x1,%ecx
movl   $0x1,(%esp)
jne    804ec20 <fchmod@plt+0x5890>
call   8052050 <fchmod@plt+0x8cc0>
test   %eax,%eax
je     804ec29 <fchmod@plt+0x5899>
movl   $0x0,0x4(%esp)
movl   $0x805ec91,(%esp)
call   805a070 <error>
test   %esi,%esi
mov    %edi,(%esp)
jne    804eca0 <fchmod@plt+0x5910>
call   80518f0 <fchmod@plt+0x8560>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   80520e0 <fchmod@plt+0x8d50>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8052030 <fchmod@plt+0x8ca0>
test   %eax,%eax
je     804ec01 <fchmod@plt+0x5871>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80518f0 <fchmod@plt+0x8560>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
sub    $0x2c,%esp
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
call   804e6e0 <fchmod@plt+0x5350>
mov    0x806d1fc,%ecx
lea    -0x5(%ecx),%edx
cmp    $0x32,%edx
ja     804ed70 <fchmod@plt+0x59e0>
jmp    *0x805edb4(,%edx,4)
cmp    $0x2b,%dl
jne    804ee96 <fchmod@plt+0x5b06>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x20,%dl
je     804ed08 <fchmod@plt+0x5978>
jmp    804ecfc <fchmod@plt+0x596c>
lea    0x0(%esi),%esi
cmpb   $0x21,(%eax)
je     804ed44 <fchmod@plt+0x59b4>
mov    0x806d200,%edx
test   %edx,%edx
je     804ed37 <fchmod@plt+0x59a7>
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   8048f90 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8052950 <fchmod@plt+0x95c0>
mov    %eax,0x806d200
mov    0x806ff40,%ecx
test   %ecx,%ecx
jne    804ed70 <fchmod@plt+0x59e0>
mov    0x806d200,%eax
movl   $0x805eca3,0x4(%esp)
test   %eax,%eax
je     804eeda <fchmod@plt+0x5b4a>
mov    %eax,(%esp)
call   8057380 <fchmod@plt+0xdff0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d1f0,%edx
add    $0x2c,%esp
jmp    804ebd0 <fchmod@plt+0x5840>
xchg   %ax,%ax
mov    0x806d1f0,%edx
movl   $0x0,0x8(%esp)
mov    %edx,0xc(%esp)
movsbl (%eax),%edx
mov    %edx,0x4(%esp)
movsbl 0x1(%eax),%eax
mov    %eax,(%esp)
call   804b030 <fchmod@plt+0x1ca0>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff40,%edx
test   %edx,%edx
jne    804ed70 <fchmod@plt+0x59e0>
mov    %eax,0x4(%esp)
movsbl 0x806d1c8,%eax
mov    %eax,(%esp)
call   8057810 <fchmod@plt+0xe480>
movl   $0x0,0x4(%esp)
movl   $0x805eca9,(%esp)
call   805a070 <error>
jmp    804ed70 <fchmod@plt+0x59e0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x806d1e0,%eax
mov    0x806d1dc,%edx
mov    %eax,0x4(%esp)
mov    0x806d1e4,%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8059150 <fchmod@plt+0xfdc0>
movl   $0x0,0x806d1e4
00
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    0x806d1f8,%edx
mov    %eax,(%esp)
xor    $0x1,%dh
mov    %edx,0x4(%esp)
mov    %edx,0x806d1f8
call   805c320 <error+0x22b0>
add    $0x2c,%esp
ret
nop
mov    0x806d1f0,%edx
movl   $0x1,0x8(%esp)
mov    %edx,0xc(%esp)
movsbl 0x1(%eax),%edx
mov    %edx,0x4(%esp)
movsbl (%eax),%eax
mov    %eax,(%esp)
call   804b030 <fchmod@plt+0x1ca0>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff40,%edx
test   %edx,%edx
jne    804ed70 <fchmod@plt+0x59e0>
mov    %eax,(%esp)
call   8052170 <fchmod@plt+0x8de0>
add    $0x2c,%esp
jmp    805d0d0 <error+0x3060>
mov    0x806c2a4,%edx
test   %edx,%edx
je     804eeb0 <fchmod@plt+0x5b20>
mov    %edx,(%esp)
mov    %eax,0x1c(%esp)
call   8048f90 <free@plt>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804eec8 <fchmod@plt+0x5b38>
movl   $0x0,0x806c2a4
00
jmp    804ed70 <fchmod@plt+0x59e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,0x806c2a4
jmp    804ed70 <fchmod@plt+0x59e0>
movl   $0x805e30e,(%esp)
call   8057380 <fchmod@plt+0xdff0>
jmp    804ed70 <fchmod@plt+0x59e0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   805a7a0 <error+0x730>
test   %eax,%eax
je     804ef30 <fchmod@plt+0x5ba0>
mov    0x806ff24,%edx
mov    0x806ff28,%eax
mov    %edx,%ecx
and    %eax,%ecx
cmp    $0xffffffff,%ecx
je     804ef78 <fchmod@plt+0x5be8>
mov    0x806ff2c,%ecx
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x806ffbc,%eax
test   %eax,%eax
je     804ef28 <fchmod@plt+0x5b98>
cmp    $0x2,%eax
mov    0x806ffec,%esi
mov    0x806ffa0,%ebx
movl   $0x1,0x806ffec
00
movl   $0x0,0x806ffa0
00
je     804efa0 <fchmod@plt+0x5c10>
call   8054bf0 <fchmod@plt+0xb860>
mov    %esi,0x806ffec
mov    %ebx,0x806ffa0
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x1,0x8(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   80522d0 <fchmod@plt+0x8f40>
call   8054c30 <fchmod@plt+0xb8a0>
jmp    804ef5e <fchmod@plt+0x5bce>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
call   8054c30 <fchmod@plt+0xb8a0>
lea    0x0(%esi,%eiz,1),%esi
call   804b300 <fchmod@plt+0x1f70>
test   %ebx,%ebx
movl   $0x1,0x806ffa0
00
mov    %eax,%edi
mov    %edx,%esi
mov    $0xffffffff,%eax
mov    %eax,%edx
cmovne %esi,%eax
mov    %eax,0x806ffcc
mov    0x8070078,%eax
cmovne %edi,%edx
mov    %edx,0x806ffc8
test   %eax,%eax
jne    804f01b <fchmod@plt+0x5c8b>
xchg   %ax,%ax
test   %ebx,%ebx
je     804f048 <fchmod@plt+0x5cb8>
cmp    0x806ffcc,%esi
jg     804f048 <fchmod@plt+0x5cb8>
jge    804f040 <fchmod@plt+0x5cb0>
call   804acb0 <fchmod@plt+0x1920>
movl   $0x0,0x806ffa0
00
call   804c060 <fchmod@plt+0x2cd0>
mov    0x8070078,%edx
mov    $0x65,%eax
test   %edx,%edx
jne    804f078 <fchmod@plt+0x5ce8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    0x806ffc8,%edi
jb     804f016 <fchmod@plt+0x5c86>
call   804eef0 <fchmod@plt+0x5b60>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
mov    0x8070078,%ecx
test   %ecx,%ecx
je     804f008 <fchmod@plt+0x5c78>
jmp    804f01b <fchmod@plt+0x5c8b>
lea    0x0(%esi),%esi
and    $0x3,%edx
jne    804f039 <fchmod@plt+0x5ca9>
cmp    $0x1,%ebx
sbb    %eax,%eax
add    $0x10,%esp
and    $0xfffffffa,%eax
pop    %ebx
add    $0x38,%eax
pop    %esi
pop    %edi
ret
nop
mov    0x806d1fc,%eax
cmp    $0x16,%eax
setne  %dl
test   %eax,%eax
setne  %al
movzbl %al,%eax
and    %edx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805ecaf,(%esp)
movl   $0x806c268,0x18(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x806d1c0,%eax
test   %eax,%eax
jne    804f120 <fchmod@plt+0x5d90>
mov    0x806d1c4,%edx
test   %edx,%edx
je     804f150 <fchmod@plt+0x5dc0>
mov    (%edx),%ebx
movsbl 0x4(%edx),%esi
mov    %edx,(%esp)
mov    %ebx,0x806d1c4
call   8048f90 <free@plt>
xor    %eax,%eax
test   %ebx,%ebx
sete   %al
mov    %eax,0x806d1c0
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x0,0x806d1c0
00
call   804dc80 <fchmod@plt+0x48f0>
test   %eax,%eax
je     804f150 <fchmod@plt+0x5dc0>
call   805a7a0 <error+0x730>
test   %eax,%eax
je     804f150 <fchmod@plt+0x5dc0>
mov    0x806d1fc,%eax
cmp    $0x6,%eax
je     804f168 <fchmod@plt+0x5dd8>
cmp    $0xf,%eax
je     804f160 <fchmod@plt+0x5dd0>
cmp    $0x5,%eax
je     804f160 <fchmod@plt+0x5dd0>
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    805dd30 <error+0x3cc0>
lea    0x0(%esi),%esi
mov    $0xa,%eax
jmp    804f11a <fchmod@plt+0x5d8a>
nop
mov    $0x67,%eax
jmp    804f11a <fchmod@plt+0x5d8a>
nop
sub    $0x1c,%esp
movl   $0x8,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x20(%esp),%edx
movl   $0x0,0x806d1c0
00
mov    %dl,0x4(%eax)
mov    0x806d1c4,%edx
mov    %eax,0x806d1c4
mov    %edx,(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     804f1e2 <fchmod@plt+0x5e52>
lea    0x0(%esi,%eiz,1),%esi
movsbl (%ebx),%eax
sub    $0x1,%ebx
mov    %eax,(%esp)
call   804f170 <fchmod@plt+0x5de0>
cmp    %ebx,%esi
jbe    804f1d0 <fchmod@plt+0x5e40>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    $0x65,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x806ff64,%eax
movl   $0x1,0x806d1f8
00
lea    0x18(%esp),%esi
add    $0x1,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
mov    %eax,0x806ff4c
movl   $0x0,0x806d1fc
00
call   804dd40 <fchmod@plt+0x49b0>
mov    0x8070078,%ecx
movl   $0x0,0x806d1f0
00
movl   $0x0,0x806d1f4
00
movl   $0x0,0x806d1e4
00
test   %ecx,%ecx
jne    804f2e8 <fchmod@plt+0x5f58>
call   804ac20 <fchmod@plt+0x1890>
call   804db30 <fchmod@plt+0x47a0>
mov    0x806d1c4,%eax
test   %eax,%eax
je     804fff0 <fchmod@plt+0x6c60>
mov    0x8070078,%eax
test   %eax,%eax
jne    804f220 <fchmod@plt+0x5e90>
xor    %eax,%eax
cmp    $0x65,%edi
je     80500d0 <fchmod@plt+0x6d40>
test   %eax,%eax
jne    804f220 <fchmod@plt+0x5e90>
cmp    $0x65,%edi
je     8050080 <fchmod@plt+0x6cf0>
cmp    $0x16,%edi
jne    804f310 <fchmod@plt+0x5f80>
cmpl   $0x16,0x806d1fc
je     804f2c8 <fchmod@plt+0x5f38>
call   804db30 <fchmod@plt+0x47a0>
xor    %ecx,%ecx
mov    $0x805ecc0,%edx
movl   $0x1,(%esp)
mov    $0x16,%eax
call   804eb90 <fchmod@plt+0x5800>
mov    %ebx,(%esp)
call   804dd80 <fchmod@plt+0x49f0>
xchg   %ax,%ax
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
mov    0x8070078,%eax
mov    $0x65,%edi
test   %eax,%eax
jne    804f220 <fchmod@plt+0x5e90>
jmp    804f28a <fchmod@plt+0x5efa>
nop
lea    0x0(%esi,%eiz,1),%esi
call   805cec0 <error+0x2e50>
mov    0x806ff3c,%edx
test   %edx,%edx
je     804f25b <fchmod@plt+0x5ecb>
movl   $0xffffffff,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    804f25b <fchmod@plt+0x5ecb>
lea    0x0(%esi,%eiz,1),%esi
call   804db30 <fchmod@plt+0x47a0>
cmp    $0x65,%edi
ja     804ffde <fchmod@plt+0x6c4e>
xchg   %ax,%ax
jmp    *0x805ee80(,%edi,4)
call   804c290 <fchmod@plt+0x2f00>
test   $0x1,%al
xchg   %ax,%ax
je     804f345 <fchmod@plt+0x5fb5>
call   804bef0 <fchmod@plt+0x2b60>
call   8056ad0 <fchmod@plt+0xd740>
lea    0x0(%esi,%eiz,1),%esi
call   805bc20 <error+0x1bb0>
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
call   8054bf0 <fchmod@plt+0xb860>
xchg   %ax,%ax
jmp    804f220 <fchmod@plt+0x5e90>
orl    $0x200,0x806d1f8
00
cmpl   $0x0,0x806d1f4
jle    8050458 <fchmod@plt+0x70c8>
call   804e9b0 <fchmod@plt+0x5620>
mov    $0x65,%edi
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%edx
xor    %eax,%eax
call   804ebd0 <fchmod@plt+0x5840>
jmp    804f220 <fchmod@plt+0x5e90>
call   805dca0 <error+0x3c30>
test   %eax,%eax
xchg   %ax,%ax
jne    805049e <fchmod@plt+0x710e>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     80507f8 <fchmod@plt+0x7468>
jle    80507ef <fchmod@plt+0x745f>
mov    %eax,(%esp)
mov    $0x65,%edi
call   8052050 <fchmod@plt+0x8cc0>
test   %eax,%eax
je     804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
jl     80508b2 <fchmod@plt+0x7522>
jle    80508a5 <fchmod@plt+0x7515>
mov    $0x805ecb7,%eax
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    $0x65,%edi
mov    %eax,0x4(%esp)
movl   $0x805ed58,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
call   805dca0 <error+0x3c30>
test   %eax,%eax
jne    8050480 <fchmod@plt+0x70f0>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     80507d1 <fchmod@plt+0x7441>
jle    80507c8 <fchmod@plt+0x7438>
mov    %eax,(%esp)
mov    $0x65,%edi
call   8052020 <fchmod@plt+0x8c90>
test   %eax,%eax
je     804f220 <fchmod@plt+0x5e90>
call   80595c0 <fchmod@plt+0x10230>
test   %eax,%eax
xchg   %ax,%ax
jne    8050a44 <fchmod@plt+0x76b4>
cmpl   $0x0,0x806d1f4
jl     8050a3a <fchmod@plt+0x76aa>
jle    8050a2d <fchmod@plt+0x769d>
mov    $0x805ecb7,%eax
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    $0x65,%edi
mov    %eax,0x4(%esp)
movl   $0x805ed38,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     8050565 <fchmod@plt+0x71d5>
jle    8050897 <fchmod@plt+0x7507>
movl   $0x64,0x806d1f0
00
movl   $0x0,0x806d1f4
00
movl   $0x0,0x806d1e8
00
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1e8,%eax
mov    %eax,0x4(%esp)
mov    0x806d1f0,%eax
mov    %eax,(%esp)
call   8054d80 <fchmod@plt+0xb9f0>
jmp    804f220 <fchmod@plt+0x5e90>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806ffd0,%eax
movl   $0x805e217,(%esp)
movl   $0x0,0x806ffd0
00
mov    %eax,0x806d1cc
call   8051f20 <fchmod@plt+0x8b90>
jmp    804f220 <fchmod@plt+0x5e90>
xor    %ecx,%ecx
mov    $0x805ed94,%edx
mov    $0x12,%eax
mov    $0x65,%edi
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
cmp    0x806ff60,%eax
mov    %eax,%ebx
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff78,%eax
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff5c,%eax
je     804f220 <fchmod@plt+0x5e90>
cmp    $0xa,%eax
jne    8050978 <fchmod@plt+0x75e8>
mov    $0x65,%edi
jmp    804f220 <fchmod@plt+0x5e90>
xor    %ecx,%ecx
mov    $0x805ec8d,%edx
mov    $0xa,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     804f5e3 <fchmod@plt+0x6253>
jle    8050824 <fchmod@plt+0x7494>
mov    %eax,0x806ff4c
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
cmpl   $0x2,0x807001c
je     8050835 <fchmod@plt+0x74a5>
mov    0x806ff4c,%eax
mov    $0x65,%edi
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
jle    805069d <fchmod@plt+0x730d>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
lea    0x0(%esi),%esi
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%eax
cmpl   $0x2,0x807001c
je     80505af <fchmod@plt+0x721f>
movl   $0x0,0x8(%esp)
mov    $0x65,%edi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
jmp    804f220 <fchmod@plt+0x5e90>
call   805b9d0 <error+0x1960>
xchg   %ax,%ax
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f4,%eax
mov    0x806d1f0,%edx
cmp    $0x0,%eax
jle    805065a <fchmod@plt+0x72ca>
mov    %edx,(%esp)
mov    $0x65,%edi
mov    %eax,0x4(%esp)
call   8054b10 <fchmod@plt+0xb780>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
movl   $0x2,0x806d1f8
00
jle    804f746 <fchmod@plt+0x63b6>
call   804e9b0 <fchmod@plt+0x5620>
jmp    804f2c8 <fchmod@plt+0x5f38>
cmpl   $0x0,0x806d1f4
jle    805070b <fchmod@plt+0x737b>
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%eax
mov    0x806d1f4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054b10 <fchmod@plt+0xb780>
jmp    804f220 <fchmod@plt+0x5e90>
movl   $0x0,0x806d1dc
00
movl   $0x0,0x806d1d8
00
call   804eae0 <fchmod@plt+0x5750>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
cmpl   $0x0,0x806d1f4
movl   $0x1,0x806d1f8
00
jg     804f6c7 <fchmod@plt+0x6337>
jl     804f755 <fchmod@plt+0x63c5>
cmpl   $0x0,0x806d1f0
ja     804f6c7 <fchmod@plt+0x6337>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f6c7 <fchmod@plt+0x6337>
cmpl   $0x0,0x806d1f4
jle    8050675 <fchmod@plt+0x72e5>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x0,0x8(%esp)
mov    0x806d1f0,%eax
mov    $0x65,%edi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8053ad0 <fchmod@plt+0xa740>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     804f7ca <fchmod@plt+0x643a>
jle    8050816 <fchmod@plt+0x7486>
mov    %eax,0x806ff4c
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806ff4c,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8053ad0 <fchmod@plt+0xa740>
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806ff40,%ecx
test   %ecx,%ecx
jne    80503bf <fchmod@plt+0x702f>
mov    0x805ec44,%ecx
mov    $0x805ed06,%edx
mov    $0x9,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
movl   $0x1,(%esp)
xor    %ecx,%ecx
mov    $0x805ea95,%edx
mov    $0x6,%eax
call   804eb90 <fchmod@plt+0x5800>
jmp    804f2cf <fchmod@plt+0x5f3f>
mov    0x806c2a0,%edi
test   %edi,%edi
je     804f86a <fchmod@plt+0x64da>
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    80506c5 <fchmod@plt+0x7335>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804f87d <fchmod@plt+0x64ed>
movsbl (%eax),%eax
mov    %eax,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x0,(%esp)
mov    $0x65,%edi
call   80499a0 <fchmod@plt+0x610>
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806d1f8,%edi
mov    %edi,%eax
and    $0xfffffffc,%eax
test   $0x1,%edi
je     80503dd <fchmod@plt+0x704d>
or     $0x2,%eax
or     $0x2,%ah
cmpl   $0x0,0x806d1f4
mov    %eax,0x806d1f8
jle    804f91a <fchmod@plt+0x658a>
call   804e9b0 <fchmod@plt+0x5620>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
lea    0x0(%esi),%esi
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%edx
xor    %eax,%eax
call   804ebd0 <fchmod@plt+0x5840>
mov    %edi,0x806d1f8
mov    $0x65,%edi
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806d1f8,%edi
mov    %edi,%eax
and    $0xfffffffc,%eax
test   $0x1,%edi
je     80503e5 <fchmod@plt+0x7055>
or     $0x2,%eax
cmpl   $0x0,0x806d1f4
mov    %eax,0x806d1f8
jg     804f8be <fchmod@plt+0x652e>
jl     804f925 <fchmod@plt+0x6595>
cmpl   $0x0,0x806d1f0
ja     804f8be <fchmod@plt+0x652e>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f8be <fchmod@plt+0x652e>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
mov    0x806c2a0,%ebp
mov    %ebp,(%esp)
call   8053c60 <fchmod@plt+0xa8d0>
test   %eax,%eax
je     8050aa7 <fchmod@plt+0x7717>
mov    %eax,(%esp)
call   8051aa0 <fchmod@plt+0x8710>
mov    %ebp,(%esp)
test   %eax,%eax
je     805088d <fchmod@plt+0x74fd>
call   80520e0 <fchmod@plt+0x8d50>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     8050543 <fchmod@plt+0x71b3>
jle    805053a <fchmod@plt+0x71aa>
mov    %eax,0x806fffc
add    %eax,0x806ffd0
mov    $0x65,%edi
movl   $0x1,0x806ffbc
00
jmp    804f220 <fchmod@plt+0x5e90>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
mov    $0x1,%eax
call   804efb0 <fchmod@plt+0x5c20>
mov    %eax,%edi
jmp    804f220 <fchmod@plt+0x5e90>
movl   $0x2001,0x806d1f8
00
jmp    804f6c7 <fchmod@plt+0x6337>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jle    80506ed <fchmod@plt+0x735d>
mov    %eax,0x806ffd8
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x807001c,%ebp
test   %ebp,%ebp
jne    80503a3 <fchmod@plt+0x7013>
mov    0x806d1f0,%eax
mov    $0x65,%edi
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806ff40,%edx
test   %edx,%edx
jne    80503bf <fchmod@plt+0x702f>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
cmpb   $0x2d,(%eax)
jne    80508bc <fchmod@plt+0x752c>
cmpb   $0x0,0x1(%eax)
jne    80508bc <fchmod@plt+0x752c>
movl   $0x0,0x4(%esp)
movl   $0x805ed10,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
xor    %eax,%eax
call   804efb0 <fchmod@plt+0x5c20>
mov    %eax,%edi
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     80505ec <fchmod@plt+0x725c>
jle    80505e3 <fchmod@plt+0x7253>
mov    %eax,(%esp)
mov    $0x65,%edi
call   8052090 <fchmod@plt+0x8d00>
test   %eax,%eax
je     804f220 <fchmod@plt+0x5e90>
movl   $0x0,0x4(%esp)
movl   $0x805ed87,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     8050613 <fchmod@plt+0x7283>
jle    805060a <fchmod@plt+0x727a>
mov    %eax,(%esp)
call   805dc50 <error+0x3be0>
test   %eax,%eax
je     805063c <fchmod@plt+0x72ac>
mov    %eax,(%esp)
mov    $0x65,%edi
call   8051f20 <fchmod@plt+0x8b90>
test   %eax,%eax
jne    804f220 <fchmod@plt+0x5e90>
call   805da20 <error+0x39b0>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804f220 <fchmod@plt+0x5e90>
mov    0x807000c,%ecx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
jle    805079a <fchmod@plt+0x740a>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%eax
cmpl   $0x2,0x807001c
je     8050506 <fchmod@plt+0x7176>
movl   $0x0,0x8(%esp)
mov    $0x65,%edi
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
jmp    804f220 <fchmod@plt+0x5e90>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
xchg   %ax,%ax
call   805b3f0 <error+0x1380>
movl   $0x805f528,(%esp)
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
lea    0x0(%esi,%eiz,1),%esi
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f4,%eax
mov    0x806d1f0,%edx
test   %eax,%eax
js     80504e9 <fchmod@plt+0x7159>
mov    0x807000c,%ecx
mov    $0x65,%edi
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8054cf0 <fchmod@plt+0xb960>
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806ff40,%eax
test   %eax,%eax
jne    80503bf <fchmod@plt+0x702f>
mov    0x805ec40,%ecx
mov    $0x805ec8f,%edx
mov    $0x1b,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
cmpl   $0x0,0x806d1f4
jle    8050760 <fchmod@plt+0x73d0>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
cmpl   $0x2,0x807001c
je     8050851 <fchmod@plt+0x74c1>
mov    0x806d1f0,%eax
mov    $0x65,%edi
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0xa5e0>
jmp    804f220 <fchmod@plt+0x5e90>
call   805bb50 <error+0x1ae0>
mov    $0x65,%edi
jmp    804f220 <fchmod@plt+0x5e90>
call   804c290 <fchmod@plt+0x2f00>
mov    $0x65,%edi
test   $0x8,%al
jne    804f220 <fchmod@plt+0x5e90>
xor    %ecx,%ecx
mov    $0x805ed99,%edx
mov    $0x1a,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
cmp    0x806ff60,%eax
mov    %eax,%ebx
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff78,%eax
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff5c,%eax
je     804f220 <fchmod@plt+0x5e90>
cmp    $0xa,%eax
je     804f59c <fchmod@plt+0x620c>
cmp    $0xd,%eax
je     804f59c <fchmod@plt+0x620c>
mov    %eax,(%esp)
call   8057ac0 <fchmod@plt+0xe730>
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jl     8050591 <fchmod@plt+0x7201>
jle    8050588 <fchmod@plt+0x71f8>
mov    %eax,(%esp)
call   805dc00 <error+0x3b90>
test   %eax,%eax
jne    804fb2b <fchmod@plt+0x679b>
movl   $0x0,0x4(%esp)
mov    $0x65,%edi
movl   $0x805ed6b,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805ecaf,(%esp)
movl   $0x806c268,0x28(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
movl   $0x1,0x806d1dc
00
movl   $0x0,0x806d1d8
00
call   804eae0 <fchmod@plt+0x5750>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
xor    %ecx,%ecx
mov    $0x805eda8,%edx
mov    %edi,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
jmp    804f2cf <fchmod@plt+0x5f3f>
cmpl   $0x0,0x806d1f4
mov    0x806d1f0,%eax
jle    8050786 <fchmod@plt+0x73f6>
mov    %eax,0x806ffd8
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x1,0x8(%esp)
jmp    804f792 <fchmod@plt+0x6402>
mov    0x806ff40,%eax
test   %eax,%eax
jne    80503bf <fchmod@plt+0x702f>
xor    %ecx,%ecx
mov    $0x805eda0,%edx
mov    $0x25,%eax
movl   $0x0,(%esp)
call   804eb90 <fchmod@plt+0x5800>
call   804f0e0 <fchmod@plt+0x5d50>
cmp    0x806ff60,%eax
mov    %eax,%ebx
je     804f59c <fchmod@plt+0x620c>
cmp    0x806ff78,%eax
je     804f59c <fchmod@plt+0x620c>
cmp    0x806ff5c,%eax
je     804f59c <fchmod@plt+0x620c>
cmp    $0xd,%eax
je     804fe9e <fchmod@plt+0x6b0e>
cmp    $0xa,%eax
jne    804fea3 <fchmod@plt+0x6b13>
mov    $0x2e,%ebx
mov    %ebx,(%esp)
call   8057aa0 <fchmod@plt+0xe710>
test   %eax,%eax
jne    804f59c <fchmod@plt+0x620c>
mov    0x805ec40,%ecx
mov    $0x805ec8f,%edx
mov    $0x25,%al
movl   $0x0,(%esp)
mov    %bl,0x806d1c8
call   804eb90 <fchmod@plt+0x5800>
jmp    804f2c8 <fchmod@plt+0x5f38>
cmpl   $0x0,0x806d1f4
jle    8050738 <fchmod@plt+0x73a8>
call   805b9d0 <error+0x1960>
mov    $0x65,%edi
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806d1f0,%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8053ad0 <fchmod@plt+0xa740>
jmp    804f220 <fchmod@plt+0x5e90>
mov    0x806d1f4,%eax
mov    0x806d1f0,%edi
cmp    $0x0,%eax
jl     80504c5 <fchmod@plt+0x7135>
jle    80504bc <fchmod@plt+0x712c>
mov    %edi,0x806fffc
mov    %eax,%ebp
mov    0x806ffd0,%ecx
mov    %ecx,%eax
cltd
cmp    %ebp,%edx
jg     804ff5c <fchmod@plt+0x6bcc>
jl     804ff4f <fchmod@plt+0x6bbf>
cmp    %edi,%ecx
jae    804ff5c <fchmod@plt+0x6bcc>
mov    %eax,0x806d1f0
mov    %ecx,%edi
mov    %edx,0x806d1f4
sub    %edi,%ecx
mov    $0x65,%edi
mov    %ecx,0x806ffd0
movl   $0x1,0x806ffbc
00
jmp    804f220 <fchmod@plt+0x5e90>
cmpl   $0x0,0x806d1f4
jl     804ff94 <fchmod@plt+0x6c04>
jg     804fe28 <fchmod@plt+0x6a98>
cmpl   $0x0,0x806d1f0
ja     804fe28 <fchmod@plt+0x6a98>
call   80589b0 <fchmod@plt+0xf620>
mov    %eax,0x806d1f0
sar    $0x1f,%eax
mov    %eax,0x806d1f4
jmp    804fe28 <fchmod@plt+0x6a98>
cmpl   $0x0,0x806d1f4
jl     804ffc7 <fchmod@plt+0x6c37>
jg     804fa00 <fchmod@plt+0x6670>
cmpl   $0x0,0x806d1f0
ja     804fa00 <fchmod@plt+0x6670>
call   80589b0 <fchmod@plt+0xf620>
mov    %eax,0x806d1f0
sar    $0x1f,%eax
mov    %eax,0x806d1f4
jmp    804fa00 <fchmod@plt+0x6670>
call   804acb0 <fchmod@plt+0x1920>
mov    $0x65,%edi
jmp    804f220 <fchmod@plt+0x5e90>
lea    0x0(%esi),%esi
call   804eef0 <fchmod@plt+0x5b60>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,0x806d1d0
mov    %edx,0x806d1d4
call   80595c0 <fchmod@plt+0x10230>
cmp    $0x2,%eax
je     8050360 <fchmod@plt+0x6fd0>
mov    0x806fff4,%eax
test   %eax,%eax
jne    80500f8 <fchmod@plt+0x6d68>
mov    0x806ffc0,%eax
test   %eax,%eax
je     80500e8 <fchmod@plt+0x6d58>
call   804db80 <fchmod@plt+0x47f0>
movl   $0x0,0x806ffc0
00
call   805b420 <error+0x13b0>
mov    %eax,%ebp
call   805c3a0 <error+0x2330>
test   %eax,%eax
jne    8050148 <fchmod@plt+0x6db8>
test   %ebp,%ebp
je     8050066 <fchmod@plt+0x6cd6>
cmpb   $0x0,0x0(%ebp)
nop
jne    8050160 <fchmod@plt+0x6dd0>
movl   $0x3a,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
call   804ad10 <fchmod@plt+0x1980>
jmp    804f272 <fchmod@plt+0x5ee2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d1fc,%eax
test   %eax,%eax
jne    8050180 <fchmod@plt+0x6df0>
mov    %bl,0x16(%esp)
lea    0x16(%esp),%eax
movb   $0x0,0x17(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x18(%esp)
call   80510e0 <fchmod@plt+0x7d50>
mov    %eax,%edi
mov    0x18(%esp),%eax
test   %eax,%eax
je     804f293 <fchmod@plt+0x5f03>
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x5e20>
jmp    804f293 <fchmod@plt+0x5f03>
lea    0x0(%esi,%eiz,1),%esi
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%ebx
mov    0x8070078,%eax
jmp    804f286 <fchmod@plt+0x5ef6>
lea    0x0(%esi,%eiz,1),%esi
call   804aed0 <fchmod@plt+0x1b40>
jmp    8050034 <fchmod@plt+0x6ca4>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   8053480 <fchmod@plt+0xa0f0>
test   %eax,%eax
je     8050027 <fchmod@plt+0x6c97>
lea    0x0(%esi),%esi
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    8050027 <fchmod@plt+0x6c97>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053c20 <fchmod@plt+0xa890>
test   %eax,%eax
jne    8050027 <fchmod@plt+0x6c97>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    8050027 <fchmod@plt+0x6c97>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805ecbf,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
jmp    8050057 <fchmod@plt+0x6cc7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%esp)
call   804ad40 <fchmod@plt+0x19b0>
mov    %ebp,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
call   804ae10 <fchmod@plt+0x1a80>
jmp    8050072 <fchmod@plt+0x6ce2>
xchg   %ax,%ax
sub    $0x5,%eax
cmp    $0x32,%eax
ja     80502a8 <fchmod@plt+0x6f18>
lea    0x0(%esi,%eiz,1),%esi
jmp    *0x805f018(,%eax,4)
cmp    $0x2e,%ebx
je     80502a8 <fchmod@plt+0x6f18>
movl   $0xf,0x4(%esp)
mov    %ebx,(%esp)
call   80514f0 <fchmod@plt+0x8160>
cmp    $0x64,%eax
jne    80502a8 <fchmod@plt+0x6f18>
movl   $0x806d1e8,(%esp)
call   804e600 <fchmod@plt+0x5270>
movl   $0x0,0x806d1fc
00
mov    %eax,0x806d1f0
mov    %edx,0x806d1f4
call   804dd40 <fchmod@plt+0x49b0>
mov    0x806d1fc,%eax
test   %eax,%eax
je     805008d <fchmod@plt+0x6cfd>
mov    %ebx,(%esp)
call   804dd80 <fchmod@plt+0x49f0>
cmp    $0x1,%eax
je     804f220 <fchmod@plt+0x5e90>
call   804dc80 <fchmod@plt+0x48f0>
test   %eax,%eax
je     804f220 <fchmod@plt+0x5e90>
lea    0x0(%esi),%esi
call   804e6e0 <fchmod@plt+0x5350>
jmp    805009a <fchmod@plt+0x6d0a>
mov    0x806d1e4,%eax
test   %eax,%eax
je     80509a2 <fchmod@plt+0x7612>
mov    0x806d1d8,%ebp
test   %ebp,%ebp
je     80503ed <fchmod@plt+0x705d>
cmp    $0xd,%ebx
jne    8050938 <fchmod@plt+0x75a8>
mov    0x806d1e4,%eax
test   %eax,%eax
je     8050a85 <fchmod@plt+0x76f5>
movl   $0x0,0x806d1d8
00
call   804db30 <fchmod@plt+0x47a0>
mov    0x806d1e4,%eax
mov    0x806d1dc,%edx
mov    %edx,%ecx
and    $0xffffffbf,%ecx
cmp    $0x1,%ecx
je     805086d <fchmod@plt+0x74dd>
mov    %edx,0xc(%esp)
lea    -0x61(%ebx),%edx
cmp    $0x19,%edx
setbe  %dl
movzbl %dl,%edx
movl   $0x805e30e,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8059150 <fchmod@plt+0xfdc0>
jmp    804f220 <fchmod@plt+0x5e90>
lea    -0x30(%ebx),%eax
cmp    $0x9,%eax
ja     8050197 <fchmod@plt+0x6e07>
cmp    $0xd,%ebx
je     80502e2 <fchmod@plt+0x6f52>
cmp    $0xa,%ebx
je     80502e2 <fchmod@plt+0x6f52>
mov    %ebx,(%esp)
call   804dd80 <fchmod@plt+0x49f0>
cmp    $0x1,%eax
je     804f220 <fchmod@plt+0x5e90>
mov    0x806d1fc,%eax
sub    $0x23,%eax
cmp    $0x1,%eax
ja     804f2c8 <fchmod@plt+0x5f38>
call   804dc80 <fchmod@plt+0x48f0>
cmp    $0x1,%eax
jle    804f2c8 <fchmod@plt+0x5f38>
call   804ecd0 <fchmod@plt+0x5940>
jmp    804f220 <fchmod@plt+0x5e90>
lea    0x0(%esi,%eiz,1),%esi
call   804dc80 <fchmod@plt+0x48f0>
test   %eax,%eax
jg     80502a8 <fchmod@plt+0x6f18>
lea    -0x5(%ebx),%eax
cmp    $0x3b,%eax
ja     80502a8 <fchmod@plt+0x6f18>
jmp    *0x805f0e4(,%eax,4)
mov    $0x1000,%eax
xor    %eax,0x806d1f8
call   804e9b0 <fchmod@plt+0x5620>
jmp    804f2c8 <fchmod@plt+0x5f38>
mov    $0x100,%eax
jmp    805030d <fchmod@plt+0x6f7d>
cmpl   $0x37,0x806d1fc
mov    $0x4,%eax
jne    805030d <fchmod@plt+0x6f7d>
jmp    80502b2 <fchmod@plt+0x6f22>
cmpl   $0x37,0x806d1fc
mov    $0x400,%eax
jne    805030d <fchmod@plt+0x6f7d>
jmp    80502a8 <fchmod@plt+0x6f18>
cmpl   $0x37,0x806d1fc
mov    $0x200,%eax
jne    805030d <fchmod@plt+0x6f7d>
jmp    80502a8 <fchmod@plt+0x6f18>
lea    0x0(%esi),%esi
call   8053420 <fchmod@plt+0xa090>
test   %eax,%eax
je     805001a <fchmod@plt+0x6c8a>
lea    0x0(%esi),%esi
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    805001a <fchmod@plt+0x6c8a>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053c20 <fchmod@plt+0xa890>
test   %eax,%eax
jne    805001a <fchmod@plt+0x6c8a>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    805001a <fchmod@plt+0x6c8a>
mov    0x806d1d0,%eax
mov    0x806d1d4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
jmp    804fa1d <fchmod@plt+0x668d>
movl   $0x0,0x4(%esp)
mov    $0x65,%edi
movl   $0x805ecf0,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
or     $0x1,%eax
jmp    804f8ad <fchmod@plt+0x651d>
or     $0x1,%eax
jmp    804f8b0 <fchmod@plt+0x6520>
cmp    0x806ff60,%ebx
je     80502a8 <fchmod@plt+0x6f18>
cmp    0x806ff78,%ebx
je     80502a8 <fchmod@plt+0x6f18>
cmp    0x806ff5c,%ebx
je     80502a8 <fchmod@plt+0x6f18>
mov    0x806d1e4,%eax
test   %eax,%eax
jne    80502a8 <fchmod@plt+0x6f18>
mov    %ebx,(%esp)
call   8059670 <fchmod@plt+0x102e0>
test   %eax,%eax
mov    %eax,0x806d1e4
jne    805025f <fchmod@plt+0x6ecf>
mov    %ebx,(%esp)
call   8058b30 <fchmod@plt+0xf7a0>
movl   $0x805ecda,(%esp)
mov    %eax,0x28(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
jl     8050467 <fchmod@plt+0x70d7>
cmpl   $0x0,0x806d1f0
ja     804f37c <fchmod@plt+0x5fec>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f37c <fchmod@plt+0x5fec>
movl   $0x0,0x4(%esp)
mov    $0x65,%edi
movl   $0x805ed2b,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
movl   $0x0,0x4(%esp)
mov    $0x65,%edi
movl   $0x805ed47,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
cmp    $0x0,%edi
ja     804ff34 <fchmod@plt+0x6ba4>
mov    0x806fffc,%edi
test   %edi,%edi
jle    8050a1a <fchmod@plt+0x768a>
mov    %edi,%eax
cltd
mov    %edi,0x806d1f0
mov    %edx,%ebp
mov    %edx,0x806d1f4
jmp    804ff3c <fchmod@plt+0x6bac>
movl   $0x0,0x806d1f0
00
xor    %edx,%edx
xor    %eax,%eax
movl   $0x0,0x806d1f4
00
jmp    804fc28 <fchmod@plt+0x6898>
cmpl   $0x0,0x806d1f4
jl     804fb9b <fchmod@plt+0x680b>
jle    8050a70 <fchmod@plt+0x76e0>
mov    0x806d1d0,%eax
mov    0x806d1d4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
mov    0x806d1f0,%eax
jmp    804fb9b <fchmod@plt+0x680b>
cmp    $0x0,%eax
ja     804f998 <fchmod@plt+0x6608>
mov    0x806fffc,%eax
test   %eax,%eax
jle    8050a07 <fchmod@plt+0x7677>
mov    %eax,%ecx
sar    $0x1f,%ecx
mov    %eax,0x806d1f0
mov    %ecx,0x806d1f4
jmp    804f99d <fchmod@plt+0x660d>
movl   $0x0,0x806d1f0
00
movl   $0x0,0x806d1f4
00
movl   $0x0,0x806d1e8
00
jmp    804f4d6 <fchmod@plt+0x6146>
cmp    $0x0,%eax
ja     804fd68 <fchmod@plt+0x69d8>
movl   $0x1,0x806d1f0
00
mov    $0x1,%eax
movl   $0x0,0x806d1f4
00
jmp    804fd68 <fchmod@plt+0x69d8>
cmpl   $0x0,0x806d1f4
jl     804f657 <fchmod@plt+0x62c7>
jle    8050ab5 <fchmod@plt+0x7725>
mov    0x806d1d0,%eax
mov    0x806d1d4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
mov    0x806d1f0,%eax
jmp    804f657 <fchmod@plt+0x62c7>
cmp    $0x0,%eax
ja     804fad5 <fchmod@plt+0x6745>
movl   $0x1,0x806d1f0
00
mov    $0x1,%eax
movl   $0x0,0x806d1f4
00
jmp    804fad5 <fchmod@plt+0x6745>
cmp    $0x0,%eax
ja     804fb1b <fchmod@plt+0x678b>
mov    $0x1,%eax
mov    %eax,(%esp)
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
call   805dc50 <error+0x3be0>
test   %eax,%eax
jne    804fb2b <fchmod@plt+0x679b>
movl   $0x0,0x4(%esp)
mov    $0x65,%edi
movl   $0x805ed77,(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
jl     8050666 <fchmod@plt+0x72d6>
cmp    $0x0,%edx
nop
ja     804f69e <fchmod@plt+0x630e>
call   8054c30 <fchmod@plt+0xb8a0>
mov    $0x65,%edi
jmp    804f220 <fchmod@plt+0x5e90>
jl     8050684 <fchmod@plt+0x72f4>
cmpl   $0x0,0x806d1f0
ja     804f77b <fchmod@plt+0x63eb>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f77b <fchmod@plt+0x63eb>
jl     80506ac <fchmod@plt+0x731c>
cmpl   $0x0,0x806d1f0
ja     804f633 <fchmod@plt+0x62a3>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f633 <fchmod@plt+0x62a3>
mov    0x806d1cc,%eax
mov    $0x65,%edi
movl   $0x1,(%esp)
mov    %eax,0x806ffd0
call   8052050 <fchmod@plt+0x8cc0>
test   %eax,%eax
je     804f220 <fchmod@plt+0x5e90>
jmp    804f86a <fchmod@plt+0x64da>
lea    0x0(%esi),%esi
jl     804ffc7 <fchmod@plt+0x6c37>
cmp    $0x0,%eax
lea    0x0(%esi,%eiz,1),%esi
ja     804f9fb <fchmod@plt+0x666b>
jmp    804ffc7 <fchmod@plt+0x6c37>
nop
lea    0x0(%esi,%eiz,1),%esi
jl     805071f <fchmod@plt+0x738f>
cmpl   $0x0,0x806d1f0
ja     804f6de <fchmod@plt+0x634e>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804f6de <fchmod@plt+0x634e>
jl     8050747 <fchmod@plt+0x73b7>
cmpl   $0x0,0x806d1f0
ja     804fee4 <fchmod@plt+0x6b54>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804fee4 <fchmod@plt+0x6b54>
jl     805076f <fchmod@plt+0x73df>
cmpl   $0x0,0x806d1f0
ja     804fc8a <fchmod@plt+0x68fa>
call   80589b0 <fchmod@plt+0xf620>
mov    %eax,0x806d1f0
sar    $0x1f,%eax
mov    %eax,0x806d1f4
jmp    804fc8a <fchmod@plt+0x68fa>
jl     804ff94 <fchmod@plt+0x6c04>
cmp    $0x0,%eax
ja     804fe23 <fchmod@plt+0x6a93>
jmp    804ff94 <fchmod@plt+0x6c04>
lea    0x0(%esi),%esi
jl     80507af <fchmod@plt+0x741f>
cmpl   $0x0,0x806d1f0
ja     804fb7a <fchmod@plt+0x67ea>
movl   $0x1,0x806d1f0
00
movl   $0x0,0x806d1f4
00
jmp    804fb7a <fchmod@plt+0x67ea>
cmp    $0x0,%eax
ja     804f442 <fchmod@plt+0x60b2>
movl   $0x1,0x806d1f0
00
mov    $0x1,%eax
movl   $0x0,0x806d1f4
00
jmp    804f442 <fchmod@plt+0x60b2>
cmp    $0x0,%eax
ja     804f3ce <fchmod@plt+0x603e>
movl   $0x1,0x806d1f0
00
mov    $0x1,%eax
movl   $0x0,0x806d1f4
00
jmp    804f3ce <fchmod@plt+0x603e>
cmp    $0x0,%eax
jbe    804f7ca <fchmod@plt+0x643a>
jmp    804f7c5 <fchmod@plt+0x6435>
cmp    $0x0,%eax
jbe    804f5e3 <fchmod@plt+0x6253>
lea    0x0(%esi),%esi
jmp    804f5de <fchmod@plt+0x624e>
mov    0x806d1d0,%eax
mov    0x806d1d4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
jmp    804f5ff <fchmod@plt+0x626f>
mov    0x806d1d0,%eax
mov    0x806d1d4,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
jmp    804fca6 <fchmod@plt+0x6916>
mov    %eax,(%esp)
call   8058b70 <fchmod@plt+0xf7e0>
test   %eax,%eax
jne    80509e0 <fchmod@plt+0x7650>
mov    0x806d1dc,%edx
mov    0x806d1e4,%eax
jmp    8050273 <fchmod@plt+0x6ee3>
call   8053b80 <fchmod@plt+0xa7f0>
jmp    804f220 <fchmod@plt+0x5e90>
cmp    $0x64,%eax
jbe    804f4d6 <fchmod@plt+0x6146>
jmp    804f4b8 <fchmod@plt+0x6128>
cmpl   $0x1,0x806d1f0
ja     804f3f6 <fchmod@plt+0x6066>
mov    $0x805e30e,%eax
jmp    804f3fb <fchmod@plt+0x606b>
mov    0x806d214,%eax
test   %eax,%eax
je     80508d9 <fchmod@plt+0x7549>
movl   $0x0,0x4(%esp)
movl   $0x805f1d4,(%esp)
call   805a070 <error>
mov    0x805ec40,%ecx
mov    $0x805ec8f,%edx
mov    $0x1b,%eax
movl   $0x0,(%esp)
mov    $0x65,%edi
call   804eb90 <fchmod@plt+0x5800>
call   804eef0 <fchmod@plt+0x5b60>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806ff38,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805b3c0 <error+0x1350>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8057380 <fchmod@plt+0xdff0>
jmp    804f220 <fchmod@plt+0x5e90>
cmp    $0xa,%ebx
je     805023e <fchmod@plt+0x6eae>
mov    0x806d1e4,%ecx
test   %ecx,%ecx
je     8050b35 <fchmod@plt+0x77a5>
cmp    0x806ff60,%ebx
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff78,%ebx
je     804f220 <fchmod@plt+0x5e90>
cmp    0x806ff5c,%ebx
jne    804f2c8 <fchmod@plt+0x5f38>
jmp    804f220 <fchmod@plt+0x5e90>
cmp    $0xd,%eax
je     804f59c <fchmod@plt+0x620c>
call   805b9d0 <error+0x1960>
call   804aed0 <fchmod@plt+0x1b40>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8059b10 <fchmod@plt+0x10780>
mov    %ebx,(%esp)
call   8057b50 <fchmod@plt+0xe7c0>
jmp    804f220 <fchmod@plt+0x5e90>
call   804dc80 <fchmod@plt+0x48f0>
test   %eax,%eax
jne    8050227 <fchmod@plt+0x6e97>
mov    0x806d1dc,%eax
mov    %eax,%edx
and    $0xffffffbf,%edx
jne    8050ac5 <fchmod@plt+0x7735>
cmp    $0x5f,%ebx
jne    8050227 <fchmod@plt+0x6e97>
movl   $0x1,0x806d1d8
00
call   804eae0 <fchmod@plt+0x5750>
jmp    804f2c8 <fchmod@plt+0x5f38>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d1e4,%eax
mov    %eax,(%esp)
call   8058b90 <fchmod@plt+0xf800>
xor    %ecx,%ecx
movl   $0x0,(%esp)
mov    %eax,%edx
mov    $0x2f,%eax
call   804eb90 <fchmod@plt+0x5800>
jmp    804f2c8 <fchmod@plt+0x5f38>
mov    0x806ff70,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jmp    8050550 <fchmod@plt+0x71c0>
mov    0x806ff70,%eax
mov    %eax,%edi
shr    $0x1f,%edi
add    %eax,%edi
sar    %edi
jmp    80504d3 <fchmod@plt+0x7143>
cmpl   $0x1,0x806d1f0
ja     804f479 <fchmod@plt+0x60e9>
mov    $0x805e30e,%eax
jmp    804f47e <fchmod@plt+0x60ee>
call   8053420 <fchmod@plt+0xa090>
test   %eax,%eax
je     804f466 <fchmod@plt+0x60d6>
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    804f466 <fchmod@plt+0x60d6>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    804f466 <fchmod@plt+0x60d6>
nop
cmp    $0x1,%eax
jbe    804fb9b <fchmod@plt+0x680b>
lea    0x0(%esi,%eiz,1),%esi
jmp    8050519 <fchmod@plt+0x7189>
call   804e6e0 <fchmod@plt+0x5350>
movl   $0x805ecc2,(%esp)
mov    %eax,0x28(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    804f220 <fchmod@plt+0x5e90>
call   804acb0 <fchmod@plt+0x1920>
lea    0x0(%esi,%eiz,1),%esi
jmp    804f220 <fchmod@plt+0x5e90>
cmp    $0x1,%eax
jbe    804f657 <fchmod@plt+0x62c7>
xchg   %ax,%ax
jmp    80505c2 <fchmod@plt+0x7232>
cmp    $0x21,%ebx
je     8050b1a <fchmod@plt+0x778a>
lea    0x0(%esi),%esi
jle    8050aff <fchmod@plt+0x776f>
cmp    $0x2b,%ebx
je     8050ae5 <fchmod@plt+0x7755>
cmp    $0x2d,%ebx
je     80509c8 <fchmod@plt+0x7638>
jmp    8050227 <fchmod@plt+0x6e97>
xor    %eax,%eax
cmp    $0x2,%edx
setne  %al
add    $0x1,%eax
mov    %eax,0x806d1dc
call   804eae0 <fchmod@plt+0x5750>
jmp    804f2c8 <fchmod@plt+0x5f38>
cmp    $0x10,%ebx
jne    8050227 <fchmod@plt+0x6e97>
xor    $0x40,%eax
mov    %eax,0x806d1dc
call   804eae0 <fchmod@plt+0x5750>
jmp    804f2c8 <fchmod@plt+0x5f38>
xor    %eax,%eax
cmp    $0x3,%edx
setne  %al
lea    0x1(%eax,%eax,1),%eax
mov    %eax,0x806d1dc
call   804eae0 <fchmod@plt+0x5750>
jmp    804f2c8 <fchmod@plt+0x5f38>
mov    %ebx,(%esp)
call   804dd80 <fchmod@plt+0x49f0>
cmp    $0x1,%eax
je     804f220 <fchmod@plt+0x5e90>
call   804e6e0 <fchmod@plt+0x5350>
mov    %eax,0x1c(%esp)
movzbl (%eax),%eax
movl   $0x0,0x8(%esp)
sub    $0x61,%eax
cmp    $0x19,%al
setbe  %al
movzbl %al,%eax
mov    %eax,0x806d1e0
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80596c0 <fchmod@plt+0x10330>
test   %eax,%eax
mov    %eax,0x806d1e4
je     804f2c8 <fchmod@plt+0x5f38>
call   804db30 <fchmod@plt+0x47a0>
call   804eae0 <fchmod@plt+0x5750>
mov    0x28(%esp),%eax
mov    %eax,0x1c(%esp)
movsbl (%eax),%eax
test   %al,%al
jne    8050bc7 <fchmod@plt+0x7837>
jmp    804f2c8 <fchmod@plt+0x5f38>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x1c(%esp)
movsbl 0x1(%eax),%eax
test   %al,%al
je     804f2c8 <fchmod@plt+0x5f38>
mov    0x806d1e0,%edx
test   %edx,%edx
jne    8050bdd <fchmod@plt+0x784d>
lea    -0x61(%eax),%ecx
lea    -0x20(%eax),%edx
cmp    $0x19,%ecx
cmovbe %edx,%eax
mov    %eax,(%esp)
call   804dd80 <fchmod@plt+0x49f0>
test   %eax,%eax
je     8050bb0 <fchmod@plt+0x7820>
jmp    804f220 <fchmod@plt+0x5e90>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x806c7e0,%ecx
lea    0x0(,%eax,4),%edx
test   %ecx,%ecx
cmovne %edx,%eax
add    $0x1,%eax
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x4,(%esp)
mov    %ebx,0x4(%esp)
call   8049a20 <fchmod@plt+0x690>
test   %ebx,%ebx
mov    %eax,%edx
lea    (%eax,%ebx,4),%ecx
jle    8050c45 <fchmod@plt+0x78b5>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,(%edx)
add    $0x4,%edx
cmp    %ecx,%edx
jne    8050c38 <fchmod@plt+0x78a8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%eax
mov    0x50(%esp),%ebx
test   %eax,%eax
je     8050e30 <fchmod@plt+0x7aa0>
mov    0x5c(%esp),%eax
mov    0x54(%esp),%esi
add    (%eax),%esi
mov    0x54(%esp),%eax
mov    %ebx,0x28(%esp)
cmp    %eax,%esi
mov    %eax,0x2c(%esp)
jbe    8050e47 <fchmod@plt+0x7ab7>
mov    0x60(%esp),%eax
mov    %ebx,%edi
mov    %ebx,0xc(%esp)
and    $0x2,%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,%ecx
mov    0x60(%esp),%eax
mov    %ecx,%ebp
and    $0x8,%eax
mov    %eax,0x14(%esp)
mov    0x60(%esp),%eax
and    $0x1,%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %eax,%edx
mov    0x10(%esp),%eax
test   %eax,%eax
je     8050cf0 <fchmod@plt+0x7960>
cmp    $0x8,%edx
mov    0x28(%esp),%eax
jne    8050cf0 <fchmod@plt+0x7960>
cmp    %ebx,%eax
ja     8050d86 <fchmod@plt+0x79f6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
test   %eax,%eax
je     8050db0 <fchmod@plt+0x7a20>
mov    %edx,%eax
and    $0x7f,%al
cmp    $0x1b,%eax
jne    8050db0 <fchmod@plt+0x7a20>
mov    0x2c(%esp),%eax
add    $0x1,%eax
mov    %eax,0x2c(%esp)
jmp    8050d36 <fchmod@plt+0x79a6>
xchg   %ax,%ax
lea    0x1(%eax),%edx
mov    %edx,0x2c(%esp)
movsbl (%eax),%eax
mov    %eax,(%esp)
call   8055470 <fchmod@plt+0xc0e0>
test   %eax,%eax
je     8050dfb <fchmod@plt+0x7a6b>
mov    0x2c(%esp),%eax
cmp    %eax,%esi
ja     8050d18 <fchmod@plt+0x7988>
mov    0xc(%esp),%ebp
mov    0x28(%esp),%eax
cmp    %eax,%ebp
cmovb  %eax,%ebp
testb  $0x4,0x60(%esp)
je     8050d56 <fchmod@plt+0x79c6>
cmp    %ebp,%ebx
jb     8050e20 <fchmod@plt+0x7a90>
mov    0x5c(%esp),%esi
movb   $0x0,0x0(%ebp)
test   %esi,%esi
je     8050d6c <fchmod@plt+0x79dc>
mov    0x5c(%esp),%ecx
mov    %ebp,%eax
sub    %ebx,%eax
mov    %eax,(%ecx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
and    $0xfe,%eax
cmp    $0xfe,%eax
jne    8050dff <fchmod@plt+0x7a6f>
mov    %edi,%eax
lea    -0x1(%eax),%edi
cmp    %edi,%ebx
mov    %edi,0x28(%esp)
jae    8050dff <fchmod@plt+0x7a6f>
movsbl -0x1(%eax),%eax
test   %al,%al
jns    8050dff <fchmod@plt+0x7a6f>
mov    %eax,%edx
and    $0xc0,%edx
cmp    $0xc0,%edx
je     8050d78 <fchmod@plt+0x79e8>
mov    %edi,%eax
jmp    8050d86 <fchmod@plt+0x79f6>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
test   %eax,%eax
je     8050dd6 <fchmod@plt+0x7a46>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8049200 <iswupper@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8050dd6 <fchmod@plt+0x7a46>
mov    %edx,(%esp)
call   8048fc0 <towlower@plt>
mov    %eax,%edx
lea    0x28(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804cdd0 <fchmod@plt+0x3a40>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8050dfb <fchmod@plt+0x7a6b>
mov    0x58(%esp),%eax
sub    %ebx,%edi
sub    0x54(%esp),%ebp
mov    %ebp,(%eax,%edi,4)
mov    0x28(%esp),%edi
mov    0xc(%esp),%eax
mov    0x2c(%esp),%ebp
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    %ebp,%esi
mov    %eax,0xc(%esp)
ja     8050cb8 <fchmod@plt+0x7928>
mov    %eax,%ebp
jmp    8050d47 <fchmod@plt+0x79b7>
nop
xor    %eax,%eax
cmpb   $0xd,-0x1(%ebp)
sete   %al
sub    %eax,%ebp
jmp    8050d56 <fchmod@plt+0x79c6>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
add    0x54(%esp),%eax
mov    %eax,%esi
jmp    8050c71 <fchmod@plt+0x78e1>
mov    %ebx,%ebp
jmp    8050d56 <fchmod@plt+0x79c6>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4,%esp
test   %eax,%eax
mov    %ecx,(%esp)
je     8050eca <fchmod@plt+0x7b3a>
mov    0x8(%esi),%ebp
mov    0x4(%esi),%eax
mov    (%esp),%ebx
cmp    %eax,%ebp
movl   $0x0,(%ebx)
jbe    8050ec4 <fchmod@plt+0x7b34>
mov    %edi,%ecx
nop
movzbl (%eax),%edx
movzbl (%ecx),%ebx
cmp    %bl,%dl
je     8050ef0 <fchmod@plt+0x7b60>
test   %bl,%bl
je     8050f30 <fchmod@plt+0x7ba0>
test   %dl,%dl
jne    8050e94 <fchmod@plt+0x7b04>
cmpb   $0x67,0x1(%eax)
je     8050eca <fchmod@plt+0x7b3a>
add    $0x1,%eax
test   %dl,%dl
movzbl (%eax),%edx
jne    8050e94 <fchmod@plt+0x7b04>
cmp    $0x7f,%dl
jne    8050eb3 <fchmod@plt+0x7b23>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x7f,%dl
je     8050ea8 <fchmod@plt+0x7b18>
test   %dl,%dl
js     8050ed8 <fchmod@plt+0x7b48>
lea    -0x1(%edi),%ecx
add    $0x1,%eax
add    $0x1,%ecx
cmp    %eax,%ebp
ja     8050e78 <fchmod@plt+0x7ae8>
mov    (%esi),%esi
test   %esi,%esi
jne    8050e62 <fchmod@plt+0x7ad2>
add    $0x4,%esp
mov    $0x64,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1,%eax
cmpb   $0x0,(%eax)
je     8050eb7 <fchmod@plt+0x7b27>
add    $0x1,%eax
cmpb   $0x0,(%eax)
jne    8050ed8 <fchmod@plt+0x7b48>
jmp    8050eb7 <fchmod@plt+0x7b27>
lea    0x0(%esi),%esi
test   %dl,%dl
jne    8050eba <fchmod@plt+0x7b2a>
lea    0x1(%eax),%edx
movzbl 0x1(%eax),%eax
cmp    $0x7f,%eax
jne    8050f0b <fchmod@plt+0x7b7b>
add    $0x1,%edx
movzbl (%edx),%eax
cmp    $0x7f,%eax
je     8050f00 <fchmod@plt+0x7b70>
cmp    $0x67,%eax
je     8050eca <fchmod@plt+0x7b3a>
test   $0x80,%al
je     8050f1e <fchmod@plt+0x7b8e>
mov    (%esp),%ecx
add    $0x1,%edx
and    $0x7f,%al
mov    %edx,(%ecx)
cmp    $0x64,%eax
je     8050ec4 <fchmod@plt+0x7b34>
cmp    $0x66,%eax
je     8050eca <fchmod@plt+0x7b3a>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x4,%esp
mov    $0x16,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movl   $0xc,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
call   8049370 <calloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805104f <fchmod@plt+0x7cbf>
add    %ebx,%edi
mov    %edi,0x10(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,0x10(%esp)
jbe    8050fd3 <fchmod@plt+0x7c43>
mov    %ebx,%edi
movzbl (%edi),%eax
test   %al,%al
je     8050fa3 <fchmod@plt+0x7c13>
cmp    $0xb,%al
je     8051000 <fchmod@plt+0x7c70>
add    $0x1,%edi
add    $0x1,%ebx
mov    %al,-0x1(%ebx)
movzbl (%edi),%eax
test   %al,%al
jne    8050f8f <fchmod@plt+0x7bff>
lea    0x1(%ebx),%eax
cmp    %edi,%eax
movb   $0x0,(%ebx)
lea    0x1(%edi),%edx
ja     8050fbb <fchmod@plt+0x7c2b>
add    $0x1,%eax
cmp    %edx,%eax
movb   $0x7f,-0x1(%eax)
jne    8050fb0 <fchmod@plt+0x7c20>
testb  $0x80,0x1(%edi)
lea    0x2(%edi),%ebx
je     8050f80 <fchmod@plt+0x7bf0>
add    $0x1,%ebx
cmpb   $0x0,-0x1(%ebx)
jne    8050fc4 <fchmod@plt+0x7c34>
cmp    %ebx,0x10(%esp)
ja     8050f86 <fchmod@plt+0x7bf6>
mov    0x14(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %edx,0x4(%ecx)
mov    0x10(%esp),%edx
mov    %edx,0x8(%ecx)
mov    0x18(%esp),%edx
mov    (%edx),%eax
mov    %eax,(%ecx)
xor    %eax,%eax
mov    %ecx,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x1(%edi),%eax
mov    %eax,(%esp)
call   804a320 <fchmod@plt+0xf90>
movzbl 0x2(%edi),%ebp
add    %ebp,%edi
test   %eax,%eax
mov    %eax,%esi
je     8051048 <fchmod@plt+0x7cb8>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
cmp    %eax,%ebp
mov    $0x805f1ff,%eax
cmovl  %eax,%esi
jmp    8051039 <fchmod@plt+0x7ca9>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
add    $0x1,%esi
mov    %al,-0x1(%ebx)
movzbl (%esi),%eax
test   %al,%al
jne    8051030 <fchmod@plt+0x7ca0>
jmp    8050f88 <fchmod@plt+0x7bf8>
lea    0x0(%esi),%esi
mov    $0x805f1ff,%esi
jmp    8051039 <fchmod@plt+0x7ca9>
mov    $0xffffffff,%eax
jmp    8050ff1 <fchmod@plt+0x7c61>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x14(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
jne    8051078 <fchmod@plt+0x7ce8>
add    $0xc,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806d210,%eax
call   8050f40 <fchmod@plt+0x7bb0>
test   %eax,%eax
jns    805106f <fchmod@plt+0x7cdf>
movl   $0x0,0x14(%esp)
movl   $0x805f25c,0x10(%esp)
add    $0xc,%esp
jmp    805a070 <error>
xchg   %ax,%ax
sub    $0xc,%esp
mov    0x14(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
jne    80510b8 <fchmod@plt+0x7d28>
add    $0xc,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806d20c,%eax
call   8050f40 <fchmod@plt+0x7bb0>
test   %eax,%eax
jns    80510af <fchmod@plt+0x7d1f>
movl   $0x0,0x14(%esp)
movl   $0x805f27c,0x10(%esp)
add    $0xc,%esp
jmp    805a070 <error>
xchg   %ax,%ax
mov    0x8(%esp),%ecx
mov    0x4(%esp),%edx
mov    0x806d210,%eax
jmp    8050e50 <fchmod@plt+0x7ac0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%ecx
mov    0x4(%esp),%edx
mov    0x806d20c,%eax
jmp    8050e50 <fchmod@plt+0x7ac0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x806d208,%eax
mov    0x30(%esp),%ebx
lea    0x1c(%esp),%ecx
mov    %ebx,%edx
call   8050e50 <fchmod@plt+0x7ac0>
cmp    $0x1,%eax
je     8051178 <fchmod@plt+0x7de8>
mov    %ebx,(%esp)
call   8049120 <getenv@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8051152 <fchmod@plt+0x7dc2>
cmpb   $0x0,(%eax)
jne    805116e <fchmod@plt+0x7dde>
mov    0x806d204,%eax
mov    %ebx,%edx
lea    0x1c(%esp),%ecx
call   8050e50 <fchmod@plt+0x7ac0>
mov    %eax,%edx
xor    %eax,%eax
cmp    $0x1,%edx
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
jmp    8051190 <fchmod@plt+0x7e00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x806ff40,%edx
test   %edx,%edx
je     80511a0 <fchmod@plt+0x7e10>
mov    $0x1,%eax
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8048f30 <open64@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8048f90 <free@plt>
test   %ebx,%ebx
mov    $0x1,%eax
js     805129c <fchmod@plt+0x7f0c>
mov    %ebx,(%esp)
call   8053340 <fchmod@plt+0x9fb0>
cmp    $0x0,%edx
mov    %eax,%edi
mov    %edx,0x1c(%esp)
jle    80512a8 <fchmod@plt+0x7f18>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049370 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     80512b3 <fchmod@plt+0x7f23>
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     80513af <fchmod@plt+0x801f>
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
call   8048f40 <read@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049350 <close@plt>
mov    0x1c(%esp),%edx
mov    %ebp,%ebx
sar    $0x1f,%ebx
mov    %ebp,%eax
xor    %edi,%eax
xor    %ebx,%edx
or     %eax,%edx
jne    805130d <fchmod@plt+0x7f7d>
cmpb   $0x0,(%esi)
jne    8051280 <fchmod@plt+0x7ef0>
cmpb   $0x4d,0x1(%esi)
jne    8051280 <fchmod@plt+0x7ef0>
cmpb   $0x2b,0x2(%esi)
je     80512c8 <fchmod@plt+0x7f38>
lea    0x0(%esi),%esi
cmpb   $0x0,-0x1(%esi,%edi,1)
je     805128e <fchmod@plt+0x7efe>
cmpb   $0x0,-0x2(%esi,%edi,1)
jne    8051306 <fchmod@plt+0x7f76>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8051060 <fchmod@plt+0x7cd0>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     80512b3 <fchmod@plt+0x7f23>
cmp    $0x2,%eax
ja     80511f3 <fchmod@plt+0x7e63>
mov    %ebx,(%esp)
call   8049350 <close@plt>
mov    $0xffffffff,%eax
jmp    805129c <fchmod@plt+0x7f0c>
lea    0x0(%esi),%esi
cmpb   $0x47,0x3(%esi)
jne    8051280 <fchmod@plt+0x7ef0>
cmpb   $0x45,-0x3(%esi,%edi,1)
jne    8051306 <fchmod@plt+0x7f76>
cmpb   $0x6e,-0x2(%esi,%edi,1)
jne    8051306 <fchmod@plt+0x7f76>
cmpb   $0x64,-0x1(%esi,%edi,1)
jne    8051306 <fchmod@plt+0x7f76>
add    $0x4,%esi
mov    $0x806d208,%edi
mov    $0x806d204,%ebx
movzbl (%esi),%edx
cmp    $0x65,%dl
je     8051342 <fchmod@plt+0x7fb2>
jle    805131c <fchmod@plt+0x7f8c>
cmp    $0x76,%dl
je     8051363 <fchmod@plt+0x7fd3>
xor    %eax,%eax
cmp    $0x78,%dl
je     805129c <fchmod@plt+0x7f0c>
mov    $0xffffffff,%eax
jmp    805129c <fchmod@plt+0x7f0c>
mov    %esi,(%esp)
call   8048f90 <free@plt>
mov    $0xffffffff,%eax
jmp    805129c <fchmod@plt+0x7f0c>
cmp    $0x63,%dl
jne    8051306 <fchmod@plt+0x7f76>
movsbl 0x2(%esi),%eax
lea    0x3(%esi),%ebp
movsbl 0x1(%esi),%edx
mov    %ebp,(%esp)
shl    $0x6,%eax
lea    (%edx,%eax,1),%esi
mov    %esi,0x4(%esp)
add    %ebp,%esi
call   8051060 <fchmod@plt+0x7cd0>
jmp    80512f0 <fchmod@plt+0x7f60>
movsbl 0x2(%esi),%eax
lea    0x3(%esi),%ebp
movsbl 0x1(%esi),%edx
mov    %ebp,(%esp)
shl    $0x6,%eax
lea    (%edx,%eax,1),%esi
mov    %esi,0x4(%esp)
add    %ebp,%esi
call   80510a0 <fchmod@plt+0x7d10>
jmp    80512f0 <fchmod@plt+0x7f60>
movsbl 0x2(%esi),%edx
lea    0x3(%esi),%ebp
mov    0x44(%esp),%eax
movsbl 0x1(%esi),%ecx
shl    $0x6,%edx
test   %eax,%eax
mov    %ebx,%eax
cmove  %edi,%eax
add    %edx,%ecx
mov    %ecx,%esi
jne    8051389 <fchmod@plt+0x7ff9>
add    %ebp,%esi
jmp    80512f0 <fchmod@plt+0x7f60>
mov    %ebp,%edx
call   8050f40 <fchmod@plt+0x7bb0>
test   %eax,%eax
jns    8051382 <fchmod@plt+0x7ff2>
movl   $0x0,0x4(%esp)
add    %ebp,%esi
movl   $0x805f2a4,(%esp)
call   805a070 <error>
jmp    80512f0 <fchmod@plt+0x7f60>
mov    %esi,(%esp)
call   8048f90 <free@plt>
jmp    80512b3 <fchmod@plt+0x7f23>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    0x38(%esp),%esi
test   %eax,%eax
je     8051410 <fchmod@plt+0x8080>
mov    %eax,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     8051410 <fchmod@plt+0x8080>
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,%ebx
test   %ebx,%ebx
je     8051403 <fchmod@plt+0x8073>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8051190 <fchmod@plt+0x7e00>
test   %eax,%eax
js     8051438 <fchmod@plt+0x80a8>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
test   %esi,%esi
mov    %eax,(%esp)
je     8051428 <fchmod@plt+0x8098>
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,%ebx
jmp    80513e7 <fchmod@plt+0x8057>
lea    0x0(%esi,%eiz,1),%esi
call   8052870 <fchmod@plt+0x94e0>
mov    %eax,%ebx
nop
jmp    80513e7 <fchmod@plt+0x8057>
lea    0x0(%esi),%esi
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805f201,(%esp)
mov    %ebx,0x18(%esp)
call   805a070 <error>
jmp    80513fb <fchmod@plt+0x806b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1c4,0x4(%esp)
movl   $0x806b800,(%esp)
call   8051060 <fchmod@plt+0x7cd0>
movl   $0xc9,0x4(%esp)
movl   $0x806b720,(%esp)
call   80510a0 <fchmod@plt+0x7d10>
movl   $0x1,0x8(%esp)
movl   $0x805f21e,0x4(%esp)
movl   $0x0,(%esp)
call   80513c0 <fchmod@plt+0x8030>
movl   $0x1,0x8(%esp)
movl   $0x805f230,0x4(%esp)
movl   $0x805f23d,(%esp)
call   80513c0 <fchmod@plt+0x8030>
movl   $0x0,0x8(%esp)
movl   $0x805f24c,0x4(%esp)
movl   $0x805f252,(%esp)
call   80513c0 <fchmod@plt+0x8030>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x44(%esp),%edi
cmp    0x806ff60,%edx
je     80515c0 <fchmod@plt+0x8230>
cmp    0x806ff78,%edx
je     80515c0 <fchmod@plt+0x8230>
xor    %ebx,%ebx
mov    $0x2,%al
cmp    0x806ff5c,%edx
je     80515a8 <fchmod@plt+0x8218>
mov    0x806d20c,%eax
lea    0x14(%esp),%ecx
mov    %dl,0x1b(%esp,%ebx,1)
add    $0x1,%ebx
lea    0x1b(%esp),%edx
movb   $0x0,0x1b(%esp,%ebx,1)
call   8050e50 <fchmod@plt+0x7ac0>
cmp    $0x16,%eax
mov    %eax,%esi
jne    8051560 <fchmod@plt+0x81d0>
call   804f0e0 <fchmod@plt+0x5d50>
mov    %eax,%edx
jmp    805152e <fchmod@plt+0x819e>
lea    0x0(%esi,%eiz,1),%esi
test   $0x8,%edi
je     80515c8 <fchmod@plt+0x8238>
lea    -0x3(%eax),%eax
cmp    $0x1,%eax
ja     80515c8 <fchmod@plt+0x8238>
mov    $0x64,%esi
test   $0x4,%edi
jne    8051608 <fchmod@plt+0x8278>
and    $0x1,%edi
jne    80515f8 <fchmod@plt+0x8268>
cmp    $0x64,%esi
je     80515f8 <fchmod@plt+0x8268>
mov    0x14(%esp),%edx
mov    %esi,%eax
test   %edx,%edx
je     80515a8 <fchmod@plt+0x8218>
mov    %edx,(%esp)
mov    %esi,0xc(%esp)
call   804f1b0 <fchmod@plt+0x5e20>
mov    0xc(%esp),%eax
lea    0x0(%esi),%esi
mov    0x2c(%esp),%edi
xor    %gs:0x14,%edi
jne    8051637 <fchmod@plt+0x82a7>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0x1,%eax
jmp    80515a8 <fchmod@plt+0x8218>
nop
test   $0x2,%edi
je     8051575 <fchmod@plt+0x81e5>
lea    -0xd(%esi),%eax
cmp    $0x1,%eax
mov    $0x64,%eax
cmovbe %eax,%esi
test   $0x4,%edi
je     8051581 <fchmod@plt+0x81f1>
jmp    8051608 <fchmod@plt+0x8278>
sub    $0x1,%ebx
movsbl 0x1b(%esp,%ebx,1),%eax
mov    %eax,(%esp)
call   804f170 <fchmod@plt+0x5de0>
cmp    $0x1,%ebx
jne    80515e8 <fchmod@plt+0x8258>
mov    %esi,%eax
jmp    80515a8 <fchmod@plt+0x8218>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xf(%esi),%ecx
cmp    $0x3,%ecx
ja     8051581 <fchmod@plt+0x81f1>
mov    $0x1,%eax
shl    %cl,%eax
test   $0xd,%al
jne    8051630 <fchmod@plt+0x82a0>
and    $0x1,%edi
jne    80515f8 <fchmod@plt+0x8268>
jmp    805158b <fchmod@plt+0x81fb>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x64,%esi
jmp    80515f8 <fchmod@plt+0x8268>
call   8049040 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
lea    0x14(%esp),%ebx
mov    %ebx,(%esp)
call   805a850 <error+0x7e0>
mov    0x14(%esp),%eax
and    0x18(%esp),%eax
cmp    $0xffffffff,%eax
je     8051673 <fchmod@plt+0x82e3>
mov    0x806c2a0,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053db0 <fchmod@plt+0xaa20>
call   8057b00 <fchmod@plt+0xe770>
call   804c1b0 <fchmod@plt+0x2e20>
mov    0x806d214,%eax
test   %eax,%eax
je     80516c0 <fchmod@plt+0x8330>
mov    0x806c2a0,%eax
mov    0x806d21c,%ebx
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806d214,%eax
mov    %eax,(%esp)
call   80530a0 <fchmod@plt+0x9d10>
mov    0x806d214,%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
movl   $0x0,0x806d214
00
movl   $0x0,0x806c2a0
00
movl   $0x0,0x806ffb0
00
movl   $0x0,0x806ffb4
00
movl   $0x0,0x806ffa8
00
movl   $0x0,0x806ffac
00
add    $0x28,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%ebx
call   80525a0 <fchmod@plt+0x9210>
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   80491a0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049900 <fchmod@plt+0x570>
mov    %eax,(%edi)
mov    %eax,%esi
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
xor    %ecx,%ecx
lea    (%esi,%eax,1),%edx
xor    %esi,%esi
lea    -0x1(%ebp),%eax
cmp    %edx,%ebx
mov    %edx,0x4(%edi)
mov    %eax,0x1c(%esp)
jb     8051792 <fchmod@plt+0x8402>
jmp    80517a2 <fchmod@plt+0x8412>
lea    0x0(%esi),%esi
test   %ebp,%ebp
jle    80517b0 <fchmod@plt+0x8420>
lea    (%ebx,%ebp,1),%eax
cmp    %eax,%edx
jbe    80517b0 <fchmod@plt+0x8420>
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x4(%esp)
call   80492f0 <strncmp@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
jne    80517b0 <fchmod@plt+0x8420>
add    0x1c(%esp),%ebx
mov    $0x1,%si
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
add    $0x1,%ebx
cmp    %ebx,%edx
jbe    80517a2 <fchmod@plt+0x8412>
test   %esi,%esi
je     8051750 <fchmod@plt+0x83c0>
mov    0x4(%edi),%edx
add    $0x1,%ebx
xor    %esi,%esi
cmp    %ebx,%edx
ja     8051792 <fchmod@plt+0x8402>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %ecx,%ecx
je     80517c8 <fchmod@plt+0x8438>
movzbl 0x806b718,%eax
xor    %ecx,%ecx
cmp    %al,(%ebx)
setne  %cl
jmp    8051788 <fchmod@plt+0x83f8>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx),%eax
cmp    0x806b719,%al
je     80517e0 <fchmod@plt+0x8450>
cmp    $0x20,%al
jne    8051788 <fchmod@plt+0x83f8>
movb   $0x0,(%ebx)
jmp    8051788 <fchmod@plt+0x83f8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ecx
jmp    8051788 <fchmod@plt+0x83f8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
je     8051830 <fchmod@plt+0x84a0>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    0x4(%esi),%ecx
lea    (%ebx,%eax,1),%edx
cmp    %ecx,%edx
jae    8051840 <fchmod@plt+0x84b0>
cmpb   $0x0,(%edx)
jne    8051848 <fchmod@plt+0x84b8>
add    $0x1,%edx
cmpb   $0x0,(%edx)
je     8051818 <fchmod@plt+0x8488>
xor    %eax,%eax
cmp    %edx,%ecx
cmova  %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    (%esi),%edx
mov    0x4(%esi),%ecx
cmp    %ecx,%edx
jb     8051813 <fchmod@plt+0x8483>
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    %edx,%eax
jmp    8051827 <fchmod@plt+0x8497>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
test   %eax,%eax
je     80518a8 <fchmod@plt+0x8518>
mov    (%edx),%edx
cmp    %edx,%eax
jbe    8051898 <fchmod@plt+0x8508>
lea    0x0(%esi),%esi
sub    $0x1,%eax
cmpb   $0x0,(%eax)
je     8051868 <fchmod@plt+0x84d8>
cmp    %edx,%eax
jbe    8051898 <fchmod@plt+0x8508>
cmpb   $0x0,-0x1(%eax)
jne    8051884 <fchmod@plt+0x84f4>
jmp    805188d <fchmod@plt+0x84fd>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%eax
je     8051890 <fchmod@plt+0x8500>
sub    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
jne    8051880 <fchmod@plt+0x84f0>
repz ret
nop
repz ret
lea    0x0(%esi),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    (%edx),%edx
lea    0x0(%esi),%esi
jmp    805186b <fchmod@plt+0x84db>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c2a0,%edx
xor    %eax,%eax
test   %edx,%edx
je     80518e7 <fchmod@plt+0x8557>
sub    $0x1c,%esp
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x806c2a0,%eax
add    $0x1c,%esp
repz ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     805190b <fchmod@plt+0x857b>
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
add    $0x1c,%esp
ret
nop
sub    $0x1c,%esp
jmp    8051920 <fchmod@plt+0x8590>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
jne    8051918 <fchmod@plt+0x8588>
add    $0x1c,%esp
jmp    8059b10 <fchmod@plt+0x10780>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804c290 <fchmod@plt+0x2f00>
test   $0x1,%al
je     8051958 <fchmod@plt+0x85c8>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8048f30 <open64@plt>
mov    %eax,%esi
mov    %eax,(%esp)
call   8049350 <close@plt>
test   %esi,%esi
mov    $0x4f,%eax
js     8051997 <fchmod@plt+0x8607>
mov    0x806c294,%edx
test   %edx,%edx
je     8051a78 <fchmod@plt+0x86e8>
lea    -0x41(%eax),%edx
cmp    $0x30,%edx
ja     80519c4 <fchmod@plt+0x8634>
jmp    *0x805f3e0(,%edx,4)
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x0,0x4(%esp)
movl   $0x805f31c,(%esp)
call   805a200 <error+0x190>
jmp    8051997 <fchmod@plt+0x8607>
lea    0x0(%esi),%esi
movl   $0x1a4,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <creat64@plt>
mov    %eax,0x806a148
mov    %eax,%edx
test   %edx,%edx
jns    80519a8 <fchmod@plt+0x8618>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805f3b2,(%esp)
mov    %ebx,0x18(%esp)
call   805a070 <error>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
jmp    805194e <fchmod@plt+0x85be>
movl   $0x401,0x4(%esp)
mov    %ebx,(%esp)
call   8048f30 <open64@plt>
movl   $0x2,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,0x806a148
call   80492b0 <lseek64@plt>
and    %edx,%eax
mov    0x806a148,%edx
cmp    $0xffffffff,%eax
jne    80519f7 <fchmod@plt+0x8667>
mov    %edx,(%esp)
call   8049350 <close@plt>
movl   $0xffffffff,0x806a148
ff
jmp    80519fb <fchmod@plt+0x866b>
xchg   %ax,%ax
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805f2e4,(%esp)
mov    %ebx,0x18(%esp)
call   805a200 <error+0x190>
jmp    8051997 <fchmod@plt+0x8607>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%ebx
cmp    0x806c2a0,%ebx
je     8051ce3 <fchmod@plt+0x8953>
call   804baa0 <fchmod@plt+0x2710>
mov    0x806c2a0,%eax
test   %eax,%eax
je     8051cf0 <fchmod@plt+0x8960>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x806c2a0,%ebp
test   %ebp,%ebp
je     8051cf0 <fchmod@plt+0x8960>
call   804c290 <fchmod@plt+0x2f00>
mov    %eax,%esi
mov    0x806c2a0,%eax
test   %eax,%eax
je     8051b02 <fchmod@plt+0x8772>
call   8051640 <fchmod@plt+0x82b0>
and    $0x8,%esi
jne    8051ca8 <fchmod@plt+0x8918>
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     8051cd3 <fchmod@plt+0x8943>
mov    %ebx,(%esp)
mov    $0x4,%esi
call   8053d80 <fchmod@plt+0xa9f0>
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
movl   $0x0,0x24(%esp)
mov    %eax,%edi
mov    %eax,0x14(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8052eb0 <fchmod@plt+0x9b20>
test   %eax,%eax
mov    %eax,%edx
cmove  %edi,%edx
xor    %edi,%edi
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8052490 <fchmod@plt+0x9100>
mov    0x1c(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8051d60 <fchmod@plt+0x89d0>
test   %ebp,%ebp
je     8051b98 <fchmod@plt+0x8808>
movl   $0xffffffff,0x4(%esp)
mov    %ebp,(%esp)
mov    %ebp,0x806c29c
call   8053e10 <fchmod@plt+0xaa80>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %ebx,0x806c2a0
mov    %eax,0x806d214
mov    0x24(%esp),%eax
mov    %eax,0x806d21c
call   8053df0 <fchmod@plt+0xaa60>
mov    0x806c2a0,%eax
movl   $0x806ff24,0x4(%esp)
mov    %eax,(%esp)
call   8053dd0 <fchmod@plt+0xaa40>
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
movl   $0x1,0x806ff44
00
mov    %eax,(%esp)
call   804c080 <fchmod@plt+0x2cf0>
test   %edi,%edi
jne    8051c5f <fchmod@plt+0x88cf>
mov    0x806c290,%eax
test   %eax,%eax
je     8051c02 <fchmod@plt+0x8872>
mov    0x806ff34,%edi
test   %edi,%edi
jne    8051d80 <fchmod@plt+0x89f0>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049330 <__xstat64@plt>
test   %eax,%eax
jne    8051c4e <fchmod@plt+0x88be>
mov    0x88(%esp),%eax
mov    0x8c(%esp),%edx
mov    %eax,0x806ffa8
mov    0x30(%esp),%eax
mov    %edx,0x806ffac
mov    0x34(%esp),%edx
mov    %eax,0x806ffb0
mov    %edx,0x806ffb4
mov    0x806c2a4,%eax
test   %eax,%eax
je     8051c5f <fchmod@plt+0x88cf>
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x5e20>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x806c298,%ebx
call   8059b10 <fchmod@plt+0x10780>
mov    0x806ff34,%esi
movl   $0x1,0x806c298
00
test   %esi,%esi
jne    8051d00 <fchmod@plt+0x8970>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8053e20 <fchmod@plt+0xaa90>
cmp    $0x1,%eax
jg     8051b0b <fchmod@plt+0x877b>
mov    %ebp,(%esp)
call   8053b80 <fchmod@plt+0xa7f0>
test   %ebx,%ebx
mov    0x806c29c,%ebp
jne    8051b16 <fchmod@plt+0x8786>
test   %ebp,%ebp
je     8051ce3 <fchmod@plt+0x8953>
movl   $0xffffffff,0x4(%esp)
mov    %ebp,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
test   %ebx,%ebx
jne    8051b16 <fchmod@plt+0x8786>
jmp    8051ce3 <fchmod@plt+0x8953>
lea    0x0(%esi,%eiz,1),%esi
call   805a6f0 <error+0x680>
call   8056ad0 <fchmod@plt+0xd740>
call   805bc20 <error+0x1bb0>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x805ec44,%eax
mov    %eax,(%esp)
call   804dd20 <fchmod@plt+0x4990>
test   %ebx,%ebx
jne    8051c8a <fchmod@plt+0x88fa>
mov    0x807005c,%ecx
test   %ecx,%ecx
jle    8051c8a <fchmod@plt+0x88fa>
mov    0x14(%esp),%eax
movl   $0x805f528,(%esp)
mov    %eax,0x28(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    8051c8a <fchmod@plt+0x88fa>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2d,(%edx)
jne    8051d90 <fchmod@plt+0x8a00>
cmpb   $0x0,0x1(%edx)
jne    8051d90 <fchmod@plt+0x8a00>
mov    0x806d218,%eax
mov    $0x2,%si
mov    %eax,0x20(%esp)
jmp    8051b7e <fchmod@plt+0x87ee>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8051940 <fchmod@plt+0x85b0>
jmp    8051c02 <fchmod@plt+0x8872>
lea    0x0(%esi),%esi
mov    $0x805f3c7,%edi
mov    $0x18,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8051db8 <fchmod@plt+0x8a28>
movl   $0xffffffff,0x20(%esp)
xor    %edi,%edi
mov    $0x10,%esi
jmp    8051b7e <fchmod@plt+0x87ee>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805e217,%edi
mov    $0x17,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8051ddf <fchmod@plt+0x8a4f>
movl   $0xffffffff,0x20(%esp)
mov    $0x8,%edi
mov    $0x8,%esi
jmp    8051b7e <fchmod@plt+0x87ee>
mov    %edx,(%esp)
call   8053200 <fchmod@plt+0x9e70>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8051e6d <fchmod@plt+0x8add>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805f528,(%esp)
call   805a070 <error>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x18(%esp),%esi
test   %esi,%esi
je     8051e37 <fchmod@plt+0x8aa7>
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
call   80530a0 <fchmod@plt+0x9d10>
mov    %esi,(%esp)
call   8048f90 <free@plt>
mov    %ebx,(%esp)
call   8053b80 <fchmod@plt+0xa7f0>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
cmp    %ebx,%ebp
je     8051e9e <fchmod@plt+0x8b0e>
mov    %ebp,(%esp)
call   80520e0 <fchmod@plt+0x8d50>
mov    $0x1,%eax
jmp    8051c98 <fchmod@plt+0x8908>
mov    0x10(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048f30 <open64@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
js     8051efd <fchmod@plt+0x8b6d>
cmpl   $0x0,0x8070014
je     8051eac <fchmod@plt+0x8b1c>
xor    %edi,%edi
mov    $0x1,%esi
jmp    8051b7e <fchmod@plt+0x87ee>
movl   $0x1,(%esp)
call   80499a0 <fchmod@plt+0x610>
jmp    8051e5b <fchmod@plt+0x8acb>
mov    %ebx,(%esp)
call   8053e00 <fchmod@plt+0xaa70>
test   %eax,%eax
jne    8051e92 <fchmod@plt+0x8b02>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052aa0 <fchmod@plt+0x9710>
test   %eax,%eax
je     8051e92 <fchmod@plt+0x8b02>
mov    0x14(%esp),%eax
movl   $0x805f35c,(%esp)
mov    %eax,0x28(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   805a200 <error+0x190>
and    $0xffffffdf,%eax
cmp    $0x59,%eax
je     8051e92 <fchmod@plt+0x8b02>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049350 <close@plt>
jmp    8051e0f <fchmod@plt+0x8a7f>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   80599c0 <fchmod@plt+0x10630>
mov    %eax,0x28(%esp)
jmp    8051def <fchmod@plt+0x8a5f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     8051f50 <fchmod@plt+0x8bc0>
mov    0x806c2a0,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8053cb0 <fchmod@plt+0xa920>
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8051aa0 <fchmod@plt+0x8710>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x20(%esp)
add    $0x1c,%esp
jmp    8051aa0 <fchmod@plt+0x8710>
sub    $0x1c,%esp
mov    0x806d218,%eax
mov    %eax,(%esp)
call   8049300 <isatty@plt>
test   %eax,%eax
je     8051f94 <fchmod@plt+0x8c04>
movl   $0x0,0x4(%esp)
movl   $0x805f388,(%esp)
call   805a070 <error>
movl   $0x0,(%esp)
call   80499a0 <fchmod@plt+0x610>
movl   $0x8062b27,(%esp)
call   8051f20 <fchmod@plt+0x8b90>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
jmp    8051fdb <fchmod@plt+0x8c4b>
nop
call   8053c20 <fchmod@plt+0xa890>
sub    $0x1,%ebx
mov    %eax,%esi
js     8051fee <fchmod@plt+0x8c5e>
test   %esi,%esi
je     8052008 <fchmod@plt+0x8c78>
testb  $0x3,0x8070078
jne    8052008 <fchmod@plt+0x8c78>
mov    %esi,%edi
test   %ebp,%ebp
mov    %edi,(%esp)
jg     8051fc0 <fchmod@plt+0x8c30>
call   8053c40 <fchmod@plt+0xa8b0>
sub    $0x1,%ebx
mov    %eax,%esi
jns    8051fcc <fchmod@plt+0x8c3c>
mov    %edi,(%esp)
call   8051aa0 <fchmod@plt+0x8710>
test   %eax,%eax
jne    8051fcc <fchmod@plt+0x8c3c>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x1,%ecx
mov    0x806c2a0,%eax
jmp    8051fb0 <fchmod@plt+0x8c20>
mov    $0x1,%ecx
mov    $0x1,%edx
xor    %eax,%eax
movl   $0x0,0x806c2a0
00
jmp    8051fb0 <fchmod@plt+0x8c20>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x806c2a0,%eax
jmp    8051fb0 <fchmod@plt+0x8c20>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0xffffffff,%ecx
mov    $0x1,%edx
xor    %eax,%eax
movl   $0x0,0x806c2a0
00
jmp    8051fb0 <fchmod@plt+0x8c20>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
jmp    80520ac <fchmod@plt+0x8d1c>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8053da0 <fchmod@plt+0xaa10>
cmp    %esi,%eax
je     80520c8 <fchmod@plt+0x8d38>
mov    %ebx,(%esp)
call   8053c20 <fchmod@plt+0xa890>
test   %eax,%eax
mov    %eax,%ebx
jne    80520a0 <fchmod@plt+0x8d10>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8051aa0 <fchmod@plt+0x8710>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80520fe <fchmod@plt+0x8d6e>
movl   $0xffffffff,0x4(%esp)
mov    %ebx,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    %ebx,(%esp)
call   8053c20 <fchmod@plt+0xa890>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8053c40 <fchmod@plt+0xa8b0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8051aa0 <fchmod@plt+0x8710>
test   %eax,%eax
je     8052160 <fchmod@plt+0x8dd0>
test   %esi,%esi
je     8052134 <fchmod@plt+0x8da4>
xor    %edx,%edx
mov    $0x1,%ecx
mov    %esi,%eax
call   8051fb0 <fchmod@plt+0x8c20>
test   %eax,%eax
je     8052160 <fchmod@plt+0x8dd0>
test   %edi,%edi
je     805214a <fchmod@plt+0x8dba>
xor    %edx,%edx
mov    $0xffffffff,%ecx
mov    %edi,%eax
call   8051fb0 <fchmod@plt+0x8c20>
test   %eax,%eax
je     8052160 <fchmod@plt+0x8dd0>
movl   $0x1,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80499a0 <fchmod@plt+0x610>
lea    0x0(%esi),%esi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806c2a0,%eax
movl   $0x0,0xc(%esp)
test   %eax,%eax
je     80521a1 <fchmod@plt+0x8e11>
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x806c2a0,%eax
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
xor    %edi,%edi
xor    %esi,%esi
lea    0x18(%esp),%ebx
mov    %eax,0x4(%esp)
lea    0x10(%esp),%eax
mov    %eax,(%esp)
call   8051700 <fchmod@plt+0x8370>
lea    0x0(%esi),%esi
lea    0x10(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80517f0 <fchmod@plt+0x8460>
test   %eax,%eax
mov    %eax,%edi
je     8052236 <fchmod@plt+0x8ea6>
mov    %edi,(%esp)
xor    %ebp,%ebp
call   8052bc0 <fchmod@plt+0x9830>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x8(%esp)
call   8051700 <fchmod@plt+0x8370>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   80517f0 <fchmod@plt+0x8460>
test   %eax,%eax
mov    %eax,%ebp
je     8052228 <fchmod@plt+0x8e98>
mov    %ebp,(%esp)
call   8051f20 <fchmod@plt+0x8b90>
test   %eax,%eax
jne    80521f0 <fchmod@plt+0x8e60>
test   %esi,%esi
jne    80521f0 <fchmod@plt+0x8e60>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
mov    %eax,%esi
jmp    80521f0 <fchmod@plt+0x8e60>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
jmp    80521c0 <fchmod@plt+0x8e30>
test   %esi,%esi
je     8052299 <fchmod@plt+0x8f09>
mov    0x806c2a0,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8053cb0 <fchmod@plt+0xa920>
cmp    0x806c2a0,%eax
je     805226f <fchmod@plt+0x8edf>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80520e0 <fchmod@plt+0x8d50>
mov    %esi,(%esp)
call   8051f20 <fchmod@plt+0x8b90>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%esp),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     8052267 <fchmod@plt+0x8ed7>
movl   $0xffffffff,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x8(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%esp),%edx
mov    $0x1,%eax
test   %edx,%edx
je     8052267 <fchmod@plt+0x8ed7>
movl   $0xffffffff,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x8(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
mov    0x806c2a0,%eax
test   %eax,%eax
je     80522fe <fchmod@plt+0x8f6e>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8053e10 <fchmod@plt+0xaa80>
mov    0x806c2a0,%ebx
test   %ebx,%ebx
je     80522fe <fchmod@plt+0x8f6e>
call   8051640 <fchmod@plt+0x82b0>
mov    %ebx,(%esp)
call   80520e0 <fchmod@plt+0x8d50>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x806d220,%eax
test   %eax,%eax
je     8052320 <fchmod@plt+0x8f90>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x805f4bd,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     8052340 <fchmod@plt+0x8fb0>
mov    %eax,0x806d220
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f4a4,0x806d220
08
mov    $0x805f4a4,%eax
jmp    8052338 <fchmod@plt+0x8fa8>
jmp    8052360 <fchmod@plt+0x8fd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8052310 <fchmod@plt+0x8f80>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049190 <strchr@plt>
test   %eax,%eax
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    %eax,%edx
sub    $0x18,%esp
xor    %ebx,%ebx
jmp    80523ac <fchmod@plt+0x901c>
lea    0x0(%esi),%esi
cmpb   $0x73,0x1(%eax)
lea    0x1(%eax),%edx
jne    80523c8 <fchmod@plt+0x9038>
add    $0x1,%ebx
movl   $0x25,0x4(%esp)
mov    %edx,(%esp)
call   8049190 <strchr@plt>
test   %eax,%eax
jne    80523a0 <fchmod@plt+0x9010>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
mov    $0x3e7,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    $0x64,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movl   $0x1,0x4(%esp)
movl   $0x64,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,%esi
mov    %eax,%ebx
jmp    805240d <fchmod@plt+0x907d>
mov    %dl,(%ebx)
add    $0x1,%ebx
mov    %ebp,(%esp)
call   8049050 <_IO_getc@plt>
cmp    $0xa,%eax
mov    %eax,%edx
je     8052478 <fchmod@plt+0x90e8>
cmp    $0xffffffff,%eax
je     8052478 <fchmod@plt+0x90e8>
mov    %ebx,%ecx
sub    %esi,%ecx
lea    -0x1(%edi),%eax
cmp    %eax,%ecx
jl     8052408 <fchmod@plt+0x9078>
add    %edi,%edi
movb   $0x0,(%ebx)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x8(%esp)
call   80490e0 <strcpy@plt>
mov    %esi,(%esp)
call   8048f90 <free@plt>
mov    0x8(%esp),%ecx
mov    %ecx,(%esp)
call   80491a0 <strlen@plt>
mov    0x8(%esp),%ecx
mov    0xc(%esp),%edx
mov    %ecx,%esi
lea    (%ecx,%eax,1),%ebx
jmp    8052408 <fchmod@plt+0x9078>
movb   $0x0,(%ebx)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x1c(%esp)
movzbl 0x806b719,%eax
cmp    %al,(%esi)
je     8052540 <fchmod@plt+0x91b0>
movl   $0x805f4cd,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8052583 <fchmod@plt+0x91f3>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,%edi
mov    %eax,%ebp
cmpb   $0x0,(%esi)
mov    0x1c(%esp),%ebx
jne    80524fa <fchmod@plt+0x916a>
jmp    805252c <fchmod@plt+0x919c>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%esi
test   %edi,%edi
jle    805251a <fchmod@plt+0x918a>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
call   80492f0 <strncmp@plt>
lea    (%esi,%ebp,1),%ecx
test   %eax,%eax
cmove  %ecx,%esi
movzbl (%esi),%eax
add    $0x1,%ebx
lea    0x1(%esi),%ecx
mov    %al,-0x1(%ebx)
cmpb   $0x0,0x1(%esi)
jne    80524f8 <fchmod@plt+0x9168>
movb   $0x0,(%ebx)
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%esi),%eax
lea    0x1(%esi),%edx
mov    0x1c(%esp),%ebx
test   %al,%al
jne    805256e <fchmod@plt+0x91de>
jmp    805252c <fchmod@plt+0x919c>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx),%ecx
mov    %edx,%eax
add    $0x1,%ebx
lea    0x1(%eax),%edx
mov    %cl,-0x1(%ebx)
movzbl 0x1(%eax),%eax
test   %al,%al
je     805252c <fchmod@plt+0x919c>
cmp    0x806b718,%al
jne    8052558 <fchmod@plt+0x91c8>
movzbl 0x1(%edx),%ecx
cmp    %al,%cl
jne    805252c <fchmod@plt+0x919c>
lea    0x1(%edx),%eax
jmp    805255d <fchmod@plt+0x91cd>
mov    $0x1,%edi
mov    $0x1,%ebp
movl   $0x805f4cb,0x18(%esp)
jmp    80524e9 <fchmod@plt+0x9159>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x805f4cd,(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    $0x805f4cb,%edx
test   %eax,%eax
cmove  %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x805f4cd,(%esp)
mov    0x50(%esp),%ebx
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8052760 <fchmod@plt+0x93d0>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,0x2c(%esp)
movzbl (%ebx),%edx
test   %dl,%dl
je     80526e5 <fchmod@plt+0x9355>
mov    %ebx,%ebp
mov    $0x1,%edi
mov    %ebx,0x50(%esp)
xor    %esi,%esi
mov    %edi,%ebx
movl   $0x0,0x24(%esp)
mov    %ebp,%edi
mov    %eax,%ebp
jmp    8052642 <fchmod@plt+0x92b2>
nop
cmp    0x806b718,%dl
mov    $0x1,%eax
cmove  %eax,%esi
movsbl %dl,%eax
call   8052360 <fchmod@plt+0x8fd0>
test   %eax,%eax
je     8052638 <fchmod@plt+0x92a8>
test   %ebp,%ebp
je     8052658 <fchmod@plt+0x92c8>
add    %ebp,%ebx
add    $0x1,%edi
movzbl (%edi),%edx
test   %dl,%dl
je     805266a <fchmod@plt+0x92da>
add    $0x1,%ebx
cmp    0x806b719,%dl
jne    8052618 <fchmod@plt+0x9288>
mov    $0x1,%esi
jmp    8052626 <fchmod@plt+0x9296>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%edx
movl   $0x1,0x24(%esp)
test   %dl,%dl
jne    8052642 <fchmod@plt+0x92b2>
mov    0x24(%esp),%eax
mov    %ebx,%edi
mov    0x50(%esp),%ebx
test   %eax,%eax
je     80526ea <fchmod@plt+0x935a>
test   %esi,%esi
jne    805277a <fchmod@plt+0x93ea>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x3(%eax),%edi
mov    %edi,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x18(%esp)
movl   $0x805f4dc,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%esi
movsbl 0x806b718,%eax
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
movsbl 0x806b719,%eax
mov    %eax,0x14(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %esi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%edi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,%esi
movsbl (%ebx),%eax
test   %al,%al
je     8052781 <fchmod@plt+0x93f1>
mov    0x28(%esp),%ebp
mov    %esi,0x24(%esp)
mov    0x2c(%esp),%edi
jmp    805272d <fchmod@plt+0x939d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
lea    0x1(%esi),%edx
mov    %al,(%esi)
movsbl (%ebx),%eax
test   %al,%al
je     8052748 <fchmod@plt+0x93b8>
mov    %edx,%esi
call   8052360 <fchmod@plt+0x8fd0>
test   %eax,%eax
je     8052718 <fchmod@plt+0x9388>
mov    %esi,(%esp)
add    %edi,%esi
mov    %ebp,0x4(%esp)
call   80490e0 <strcpy@plt>
jmp    8052718 <fchmod@plt+0x9388>
xchg   %ax,%ax
mov    0x24(%esp),%esi
movb   $0x0,(%edx)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
movl   $0x1,0x2c(%esp)
movl   $0x805f4cb,0x28(%esp)
jmp    80525ef <fchmod@plt+0x925f>
xor    %eax,%eax
jmp    80526dd <fchmod@plt+0x934d>
mov    %esi,%edx
jmp    805274c <fchmod@plt+0x93bc>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x3c,%esp
movl   $0x805f4e3,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
je     80527b0 <fchmod@plt+0x9420>
cmpb   $0x0,(%eax)
jne    80527c8 <fchmod@plt+0x9438>
mov    %esi,(%esp)
movl   $0x805e6c8,0x4(%esp)
call   8049030 <popen@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   80525c0 <fchmod@plt+0x9230>
test   %eax,%eax
mov    %eax,%edi
je     80527b0 <fchmod@plt+0x9420>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x5(%esi,%eax,1),%ebp
mov    %ebp,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %edi,0x1c(%esp)
mov    %ebx,0x14(%esp)
mov    %ebp,0x4(%esp)
movl   $0x805f4e9,0x18(%esp)
movl   $0x805f4ec,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,%esi
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %edi,(%esp)
call   8048f90 <free@plt>
mov    %esi,(%esp)
movl   $0x805e6c8,0x4(%esp)
call   8049030 <popen@plt>
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
call   8048f90 <free@plt>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x805ea4d,(%esp)
mov    0x40(%esp),%edi
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
je     8052948 <fchmod@plt+0x95b8>
cmpb   $0x0,(%eax)
je     8052948 <fchmod@plt+0x95b8>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x2(%esi,%eax,1),%ebp
mov    %ebp,(%esp)
call   8049370 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8052948 <fchmod@plt+0x95b8>
mov    %ebx,0x14(%esp)
mov    %edi,0x1c(%esp)
movl   $0x805ec85,0x18(%esp)
movl   $0x805f4f5,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8048f30 <open64@plt>
test   %eax,%eax
js     8052938 <fchmod@plt+0x95a8>
mov    %eax,(%esp)
call   8049350 <close@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8048f90 <free@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
xor    %eax,%eax
jmp    805292e <fchmod@plt+0x959e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
movzbl (%esi),%eax
test   %al,%al
je     8052a87 <fchmod@plt+0x96f7>
mov    %esi,%ebx
xor    %edi,%edi
lea    0x0(%esi),%esi
cmp    $0x23,%al
je     80529d8 <fchmod@plt+0x9648>
cmp    $0x25,%al
je     80529d8 <fchmod@plt+0x9648>
movzbl 0x1(%ebx),%eax
add    $0x1,%edi
add    $0x1,%ebx
test   %al,%al
jne    8052970 <fchmod@plt+0x95e0>
add    $0x1,%edi
mov    %edi,(%esp)
movl   $0x1,0x4(%esp)
call   8049a20 <fchmod@plt+0x690>
movzbl (%esi),%edx
test   %dl,%dl
mov    %eax,%edi
mov    %eax,%ebp
je     80529c3 <fchmod@plt+0x9633>
mov    %esi,%ebx
xchg   %ax,%ax
cmp    $0x23,%dl
je     8052a00 <fchmod@plt+0x9670>
cmp    $0x25,%dl
je     8052a00 <fchmod@plt+0x9670>
mov    %dl,0x0(%ebp)
movzbl 0x1(%ebx),%edx
add    $0x1,%ebp
add    $0x1,%ebx
test   %dl,%dl
jne    80529a8 <fchmod@plt+0x9618>
movb   $0x0,0x0(%ebp)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jae    80529e1 <fchmod@plt+0x9651>
cmp    -0x1(%ebx),%al
je     8052978 <fchmod@plt+0x95e8>
movzbl 0x1(%ebx),%edx
cmp    %dl,%al
je     8052a48 <fchmod@plt+0x96b8>
cmp    $0x25,%al
je     8052a50 <fchmod@plt+0x96c0>
cmp    $0x23,%al
je     8052a80 <fchmod@plt+0x96f0>
add    $0x1,%edi
mov    %edx,%eax
jmp    805297f <fchmod@plt+0x95ef>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jae    8052a09 <fchmod@plt+0x9679>
cmp    -0x1(%ebx),%dl
je     80529b2 <fchmod@plt+0x9622>
cmp    0x1(%ebx),%dl
je     8052a40 <fchmod@plt+0x96b0>
cmp    $0x25,%dl
je     8052a78 <fchmod@plt+0x96e8>
cmp    $0x23,%dl
mov    0x806c29c,%eax
jne    80529b2 <fchmod@plt+0x9622>
test   %eax,%eax
je     80529b2 <fchmod@plt+0x9622>
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <stpcpy@plt>
movzbl 0x1(%ebx),%edx
mov    %eax,%ebp
jmp    80529bc <fchmod@plt+0x962c>
add    $0x1,%ebx
jmp    80529a8 <fchmod@plt+0x9618>
add    $0x1,%ebx
jmp    8052970 <fchmod@plt+0x95e0>
mov    0x806c2a0,%eax
test   %eax,%eax
je     80529f5 <fchmod@plt+0x9665>
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
add    %eax,%edi
movzbl 0x1(%ebx),%eax
jmp    805297f <fchmod@plt+0x95ef>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c2a0,%eax
jmp    8052a1d <fchmod@plt+0x968d>
nop
mov    0x806c29c,%eax
jmp    8052a55 <fchmod@plt+0x96c5>
mov    $0x1,%edi
jmp    8052989 <fchmod@plt+0x95f9>
jmp    8052aa0 <fchmod@plt+0x9710>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x120,%esp
mov    0x130(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x11c(%esp)
xor    %eax,%eax
mov    %ebx,(%esp)
call   804c020 <fchmod@plt+0x2c90>
test   %eax,%eax
jne    8052af0 <fchmod@plt+0x9760>
xor    %eax,%eax
mov    0x11c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8052bba <fchmod@plt+0x982a>
add    $0x120,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   80492b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8052acb <fchmod@plt+0x973b>
lea    0x1c(%esp),%esi
xor    %edi,%edi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x100,0x8(%esp)
call   8048f40 <read@plt>
mov    %esi,%edx
mov    %esi,0x18(%esp)
lea    (%esi,%eax,1),%ebx
lea    0x18(%esp),%esi
cmp    %edx,%ebx
jbe    8052b80 <fchmod@plt+0x97f0>
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
cmpl   $0x2,0x807002c
jne    8052b69 <fchmod@plt+0x97d9>
mov    %eax,%edx
and    $0x7f,%dl
cmp    $0x1b,%edx
je     8052b9c <fchmod@plt+0x980c>
mov    %eax,(%esp)
call   804c8a0 <fchmod@plt+0x3510>
test   %eax,%eax
je     8052b78 <fchmod@plt+0x97e8>
add    $0x1,%edi
mov    0x18(%esp),%edx
cmp    %edx,%ebx
ja     8052b42 <fchmod@plt+0x97b2>
xor    %eax,%eax
cmp    $0x5,%edi
setg   %al
jmp    8052acd <fchmod@plt+0x973d>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8055470 <fchmod@plt+0xc0e0>
test   %eax,%eax
je     8052b78 <fchmod@plt+0x97e8>
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    0x18(%esp),%edx
cmp    %edx,%ebx
ja     8052b90 <fchmod@plt+0x9800>
jmp    8052b3e <fchmod@plt+0x97ae>
call   8049040 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8052950 <fchmod@plt+0x95c0>
mov    0x806ff40,%edx
test   %edx,%edx
mov    %eax,%esi
je     8052bf0 <fchmod@plt+0x9860>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x805f4cd,(%esp)
mov    %eax,0x28(%esp)
call   8051120 <fchmod@plt+0x7d90>
mov    $0x805f4cb,%edx
test   %eax,%eax
cmove  %edx,%eax
mov    $0x8062b27,%edx
cmpb   $0x0,(%eax)
cmove  %edx,%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x9230>
test   %eax,%eax
mov    %eax,%ebx
je     8052de0 <fchmod@plt+0x9a50>
movl   $0x805f505,(%esp)
mov    %esi,%edi
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebp
je     8052c4c <fchmod@plt+0x98bc>
cmpb   $0x0,(%eax)
jne    8052da8 <fchmod@plt+0x9a18>
movl   $0x8,0x2c(%esp)
mov    $0x805f4fc,%ebp
mov    %edi,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,%esi
call   8052310 <fchmod@plt+0x8f80>
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    0x2c(%esp),%ecx
movl   $0x1,0x4(%esp)
lea    0x18(%ecx,%esi,1),%esi
lea    0x0(,%eax,8),%ecx
sub    %eax,%ecx
lea    (%esi,%ecx,1),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x2c(%esp),%edx
mov    %ebx,0x20(%esp)
mov    %ebp,0x14(%esp)
movl   $0x805f50e,0x10(%esp)
mov    %edx,0x4(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,%esi
movsbl 0x806b718,%eax
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
movsbl 0x806b719,%eax
mov    %eax,0x18(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
call   8052310 <fchmod@plt+0x8f80>
movsbl (%eax),%ebx
mov    %eax,%ebp
test   %bl,%bl
je     8052d31 <fchmod@plt+0x99a1>
xchg   %ax,%ax
mov    %esi,(%esp)
add    $0x1,%ebp
call   80491a0 <strlen@plt>
mov    %ebx,0x10(%esp)
movl   $0x805f52b,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   8049380 <__sprintf_chk@plt>
movsbl 0x0(%ebp),%ebx
test   %bl,%bl
jne    8052cf8 <fchmod@plt+0x9968>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
mov    %edi,0x10(%esp)
movl   $0x805f525,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   8049380 <__sprintf_chk@plt>
mov    %esi,%eax
call   8052790 <fchmod@plt+0x9400>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8048f90 <free@plt>
test   %ebx,%ebx
je     8052dc8 <fchmod@plt+0x9a38>
mov    %ebx,%eax
call   80523e0 <fchmod@plt+0x9050>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049180 <pclose@plt>
cmpb   $0x0,(%esi)
je     8052dc0 <fchmod@plt+0x9a30>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    %edi,(%esp)
call   8048f90 <free@plt>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,0x2c(%esp)
jmp    8052c59 <fchmod@plt+0x98c9>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8048f90 <free@plt>
mov    0x28(%esp),%eax
mov    %edi,%esi
mov    %eax,(%esp)
call   8048f90 <free@plt>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
jmp    8052bdf <fchmod@plt+0x984f>
jmp    8052e00 <fchmod@plt+0x9a70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x806ff40,%ecx
mov    0x30(%esp),%esi
test   %ecx,%ecx
jne    8052e91 <fchmod@plt+0x9b01>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x2(%eax),%edi
mov    %edi,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,0x14(%esp)
mov    %edi,0x4(%esp)
movl   $0x805f533,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %ebx,(%esp)
call   8052bc0 <fchmod@plt+0x9830>
mov    %eax,(%esp)
mov    %eax,%esi
call   8052490 <fchmod@plt+0x9100>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8048f20 <strcmp@plt>
test   %eax,%eax
je     8052e98 <fchmod@plt+0x9b08>
mov    %edi,(%esp)
call   8048f90 <free@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
mov    %esi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
xor    %esi,%esi
call   8048f90 <free@plt>
jmp    8052e7f <fchmod@plt+0x9aef>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x8070050,%eax
test   %eax,%eax
je     8052ff0 <fchmod@plt+0x9c60>
mov    0x806ff40,%eax
test   %eax,%eax
jne    8052ff0 <fchmod@plt+0x9c60>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0xffffffff,(%esp)
call   804b1c0 <fchmod@plt+0x1e30>
movl   $0x805f537,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     8052fe0 <fchmod@plt+0x9c50>
movzbl (%eax),%edx
mov    %eax,%ebx
cmp    $0x7c,%dl
jne    8053095 <fchmod@plt+0x9d05>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
mov    %ebx,%edi
sub    %eax,%edi
cmp    $0x7c,%dl
je     8052f00 <fchmod@plt+0x9b70>
cmp    $0x2d,%dl
je     8053080 <fchmod@plt+0x9cf0>
mov    0x50(%esp),%eax
cmpb   $0x2d,(%eax)
jne    8052f2b <fchmod@plt+0x9b9b>
cmpb   $0x0,0x1(%eax)
je     8052fe0 <fchmod@plt+0x9c50>
mov    %ebx,%eax
call   8052390 <fchmod@plt+0x9000>
cmp    $0x1,%eax
jg     8053018 <fchmod@plt+0x9c88>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,%ebp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x2(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    0x50(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %ebp,%eax
call   8052790 <fchmod@plt+0x9400>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8048f90 <free@plt>
test   %ebx,%ebx
je     8052fe0 <fchmod@plt+0x9c50>
test   %edi,%edi
je     8052ff8 <fchmod@plt+0x9c68>
mov    %ebx,(%esp)
call   8049230 <fileno@plt>
movl   $0x1,0x8(%esp)
mov    %eax,%esi
lea    0x2f(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8048f40 <read@plt>
cmp    $0x1,%eax
je     805302e <fchmod@plt+0x9c9e>
mov    %ebx,(%esp)
call   8049180 <pclose@plt>
test   %eax,%eax
jne    8052fe0 <fchmod@plt+0x9c50>
cmp    $0x1,%edi
jg     8053055 <fchmod@plt+0x9cc5>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   80523e0 <fchmod@plt+0x9050>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049180 <pclose@plt>
cmpb   $0x0,(%esi)
je     8052fe0 <fchmod@plt+0x9c50>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x4(%esp)
movl   $0x805f540,(%esp)
call   805a070 <error>
jmp    8052fe0 <fchmod@plt+0x9c50>
movsbl 0x2f(%esp),%eax
mov    %eax,(%esp)
call   804b1c0 <fchmod@plt+0x1e30>
mov    0x58(%esp),%eax
mov    %ebx,(%eax)
mov    0x54(%esp),%eax
mov    %esi,(%eax)
movl   $0x8062b27,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
jmp    8052fe2 <fchmod@plt+0x9c52>
mov    0x58(%esp),%eax
movl   $0x0,(%eax)
mov    0x54(%esp),%eax
movl   $0xffffffff,(%eax)
movl   $0x805f3c7,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
jmp    8052fe2 <fchmod@plt+0x9c52>
lea    0x0(%esi),%esi
add    $0x1,%ebx
mov    %ebx,%eax
call   8052390 <fchmod@plt+0x9000>
cmp    $0x1,%eax
jle    8052f3b <fchmod@plt+0x9bab>
jmp    8053018 <fchmod@plt+0x9c88>
xor    %edi,%edi
jmp    8052f0f <fchmod@plt+0x9b7f>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806ff40,%edx
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
mov    0x48(%esp),%eax
test   %edx,%edx
jne    8053180 <fchmod@plt+0x9df0>
test   %eax,%eax
je     80530cd <fchmod@plt+0x9d3d>
mov    %eax,(%esp)
call   8049180 <pclose@plt>
movl   $0x805f55a,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebx
je     8053180 <fchmod@plt+0x9df0>
call   8052390 <fchmod@plt+0x9000>
cmp    $0x2,%eax
jg     8053188 <fchmod@plt+0x9df8>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   80491a0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebp
call   80491a0 <strlen@plt>
mov    0x1c(%esp),%ecx
movl   $0x1,0x4(%esp)
lea    0x2(%ecx,%ebp,1),%edx
add    %eax,%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x1c(%esp),%edx
mov    %ebx,0x10(%esp)
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %edx,0x4(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,%ebp
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    %ebp,%eax
call   8052790 <fchmod@plt+0x9400>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8048f90 <free@plt>
test   %ebx,%ebx
je     8053180 <fchmod@plt+0x9df0>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049180 <pclose@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805f564,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x74,%esp
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x3,(%esp)
mov    %eax,%ebx
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
call   8049330 <__xstat64@plt>
test   %eax,%eax
js     80531ea <fchmod@plt+0x9e5a>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x74,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x74,%esp
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
mov    0x8070014,%esi
test   %esi,%esi
mov    %eax,%ebx
jne    8053230 <fchmod@plt+0x9ea0>
mov    %eax,(%esp)
call   80531a0 <fchmod@plt+0x9e10>
test   %eax,%eax
jne    80532d0 <fchmod@plt+0x9f40>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049330 <__xstat64@plt>
test   %eax,%eax
js     8053320 <fchmod@plt+0x9f90>
mov    0x8070014,%ecx
xor    %esi,%esi
test   %ecx,%ecx
je     8053270 <fchmod@plt+0x9ee0>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x74,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     805325c <fchmod@plt+0x9ecc>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x2a,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8049020 <stpcpy@plt>
movl   $0x806b9e0,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x74,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x10,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8049020 <stpcpy@plt>
movl   $0x806ba0a,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x74,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80599c0 <fchmod@plt+0x10630>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8048f90 <free@plt>
add    $0x74,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x78,%esp
mov    0x80(%esp),%ebx
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
call   80490b0 <__fxstat64@plt>
test   %eax,%eax
js     8053378 <fchmod@plt+0x9fe8>
mov    0x3c(%esp),%eax
mov    0x40(%esp),%edx
add    $0x78,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x2,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   80492b0 <lseek64@plt>
add    $0x78,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x805f4e9,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
jae    80533ec <fchmod@plt+0xa05c>
cmpb   $0x2f,-0x1(%edx)
lea    -0x1(%edx),%eax
jne    80533e3 <fchmod@plt+0xa053>
jmp    80533f2 <fchmod@plt+0xa062>
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%eax),%edx
je     80533e7 <fchmod@plt+0xa057>
mov    %edx,%eax
cmp    %ebx,%eax
jne    80533d8 <fchmod@plt+0xa048>
add    $0x18,%esp
pop    %ebx
ret
mov    %ebx,%eax
xchg   %ax,%ax
jmp    80533e7 <fchmod@plt+0xa057>
mov    %edx,%eax
jmp    80533e7 <fchmod@plt+0xa057>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8070004,%eax
test   %eax,%eax
je     8053410 <fchmod@plt+0xa080>
jmp    804ac70 <fchmod@plt+0x18e0>
xchg   %ax,%ax
jmp    804acb0 <fchmod@plt+0x1920>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806ffa0,%edx
test   %edx,%edx
je     8053430 <fchmod@plt+0xa0a0>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804b300 <fchmod@plt+0x1f70>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8053478 <fchmod@plt+0xa0e8>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
mov    %edx,%ebx
mov    %eax,%edx
and    %ebx,%edx
mov    %eax,%esi
cmp    $0xffffffff,%edx
mov    $0x1,%eax
je     8053470 <fchmod@plt+0xa0e0>
call   804b300 <fchmod@plt+0x1f70>
xor    %esi,%eax
xor    %ebx,%edx
or     %edx,%eax
sete   %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
sub    $0x1c,%esp
call   8053420 <fchmod@plt+0xa090>
test   %eax,%eax
jne    8053490 <fchmod@plt+0xa100>
add    $0x1c,%esp
ret
movl   $0x0,(%esp)
call   805a5d0 <error+0x560>
mov    $0x1,%ecx
add    $0x1,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
jbe    80534b8 <fchmod@plt+0xa128>
xor    %ecx,%ecx
mov    %ecx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
ja     80534ac <fchmod@plt+0xa11c>
mov    %ecx,%eax
jmp    80534b0 <fchmod@plt+0xa120>
jmp    80534d0 <fchmod@plt+0xa140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x806ffb8,%ecx
test   %ecx,%ecx
jne    80534e0 <fchmod@plt+0xa150>
repz ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x806ffb8
00
jmp    8054bf0 <fchmod@plt+0xb860>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edi
mov    0x48(%esp),%esi
mov    0x50(%esp),%ebp
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    0x54(%esp),%ebx
mov    %eax,0x1c(%esp)
mov    0x806ffb8,%eax
test   %eax,%eax
jne    8053769 <fchmod@plt+0xa3d9>
test   %ebp,%ebp
je     80535d8 <fchmod@plt+0xa248>
mov    0x14(%esp),%eax
cmp    %eax,0x806ff64
movl   $0x1,0x18(%esp)
jg     80535d8 <fchmod@plt+0xa248>
xor    %ebp,%ebp
xchg   %ax,%ax
subl   $0x1,0x14(%esp)
js     80535a5 <fchmod@plt+0xa215>
test   %ebx,%ebx
jle    8053690 <fchmod@plt+0xa300>
xor    %eax,%eax
sub    $0x1,%ebx
cmove  %eax,%edi
cmove  %eax,%esi
mov    %edi,(%esp)
add    $0x1,%ebp
mov    %esi,0x4(%esp)
call   805a650 <error+0x5e0>
mov    0x18(%esp),%eax
test   %eax,%eax
jne    8053548 <fchmod@plt+0xa1b8>
mov    0x806ba1c,%eax
test   %eax,%eax
je     805358f <fchmod@plt+0xa1ff>
mov    %edi,%eax
and    %esi,%eax
cmp    $0xffffffff,%eax
je     8053728 <fchmod@plt+0xa398>
call   8059bd0 <fchmod@plt+0x10840>
subl   $0x1,0x14(%esp)
movl   $0x1,0x806ffc0
00
jns    805354f <fchmod@plt+0xa1bf>
test   %ebp,%ebp
je     805377d <fchmod@plt+0xa3ed>
mov    0x18(%esp),%eax
test   %eax,%eax
jne    805375f <fchmod@plt+0xa3cf>
movl   $0x0,0x806ba1c
00
movl   $0xffffffff,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80572d0 <fchmod@plt+0xdf40>
nop
mov    0x8070044,%eax
test   %eax,%eax
js     8053608 <fchmod@plt+0xa278>
cmp    %eax,0x14(%esp)
jle    8053608 <fchmod@plt+0xa278>
mov    0x806ff64,%eax
movl   $0x1,0x18(%esp)
sub    $0x1,%eax
cmp    0x14(%esp),%eax
jne    8053544 <fchmod@plt+0xa1b4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ffec,%ebp
test   %ebp,%ebp
je     8053624 <fchmod@plt+0xa294>
mov    0x806ff64,%eax
sub    $0x1,%eax
cmp    %eax,0x14(%esp)
jge    80537a3 <fchmod@plt+0xa413>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
je     8053787 <fchmod@plt+0xa3f7>
call   805a6f0 <error+0x680>
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   805a650 <error+0x5e0>
mov    0x806ffec,%ebp
test   %ebp,%ebp
jne    80537dc <fchmod@plt+0xa44c>
mov    0x806ba1c,%ecx
movl   $0x0,0x18(%esp)
movl   $0x1,0x1c(%esp)
test   %ecx,%ecx
jne    8053544 <fchmod@plt+0xa1b4>
movl   $0x805f57f,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
jmp    8053544 <fchmod@plt+0xa1b4>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   8053e50 <fchmod@plt+0xaac0>
mov    %eax,%edi
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%esi
jne    8053562 <fchmod@plt+0xa1d2>
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    80536ca <fchmod@plt+0xa33a>
movl   $0x0,(%esp)
call   805a5d0 <error+0x560>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    80535a5 <fchmod@plt+0xa215>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   805a800 <error+0x790>
test   %eax,%eax
jne    8053562 <fchmod@plt+0xa1d2>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   805a800 <error+0x790>
test   %eax,%eax
jne    8053562 <fchmod@plt+0xa1d2>
mov    0x806ff64,%eax
movl   $0x2,(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%esp)
call   805a800 <error+0x790>
test   %eax,%eax
je     8053562 <fchmod@plt+0xa1d2>
jmp    80535a5 <fchmod@plt+0xa215>
nop
mov    0x806ffec,%eax
test   %eax,%eax
nop
jne    805358f <fchmod@plt+0xa1ff>
mov    0x806f170,%eax
test   %eax,%eax
jne    805358f <fchmod@plt+0xa1ff>
mov    0x806f180,%eax
test   %eax,%eax
jne    805358f <fchmod@plt+0xa1ff>
movl   $0x1,0x806ffb8
00
jmp    8053548 <fchmod@plt+0xa1b8>
call   8054bf0 <fchmod@plt+0xb860>
jmp    80535b9 <fchmod@plt+0xa229>
movl   $0x0,0x806ffb8
00
call   8054bf0 <fchmod@plt+0xb860>
jmp    8053524 <fchmod@plt+0xa194>
call   8053400 <fchmod@plt+0xa070>
jmp    80535b9 <fchmod@plt+0xa229>
call   805a7a0 <error+0x730>
test   %eax,%eax
xchg   %ax,%ax
jne    805363c <fchmod@plt+0xa2ac>
movl   $0x0,0x18(%esp)
jmp    8053544 <fchmod@plt+0xa1b4>
call   804b300 <fchmod@plt+0x1f70>
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
je     8053624 <fchmod@plt+0xa294>
call   805a6f0 <error+0x680>
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   805a650 <error+0x5e0>
call   804ace0 <fchmod@plt+0x1950>
call   804ab60 <fchmod@plt+0x17d0>
movl   $0x1,0x1c(%esp)
jmp    8053624 <fchmod@plt+0xa294>
call   804ace0 <fchmod@plt+0x1950>
call   804ab60 <fchmod@plt+0x17d0>
movl   $0x0,0x18(%esp)
movl   $0x1,0x1c(%esp)
jmp    8053544 <fchmod@plt+0xa1b4>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x806ffb8,%ecx
mov    0x3c(%esp),%eax
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
test   %ecx,%ecx
mov    0x38(%esp),%edi
mov    %eax,0xc(%esp)
mov    0x40(%esp),%esi
jne    8053910 <fchmod@plt+0xa580>
mov    0x806d224,%edx
xor    %ecx,%ecx
test   %edx,%edx
jne    8053847 <fchmod@plt+0xa4b7>
mov    0x806ffe4,%ecx
test   %ecx,%ecx
js     8053932 <fchmod@plt+0xa5a2>
cmp    %ecx,%ebx
movl   $0x1,0x8(%esp)
jg     8053863 <fchmod@plt+0xa4d3>
test   %esi,%esi
movl   $0x0,0x8(%esp)
jne    80538f0 <fchmod@plt+0xa560>
xor    %esi,%esi
lea    0x0(%esi),%esi
sub    $0x1,%ebx
js     80538c0 <fchmod@plt+0xa530>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
call   8054270 <fchmod@plt+0xaee0>
mov    %eax,%ecx
mov    %eax,%ebp
and    %edx,%ecx
mov    %edx,%edi
cmp    $0xffffffff,%ecx
jne    805388e <fchmod@plt+0xa4fe>
mov    0xc(%esp),%eax
test   %eax,%eax
je     80538c0 <fchmod@plt+0xa530>
mov    %ebp,(%esp)
add    $0x1,%esi
mov    %edi,0x4(%esp)
call   805a6b0 <error+0x640>
mov    0x8(%esp),%eax
test   %eax,%eax
jne    8053868 <fchmod@plt+0xa4d8>
call   804ab60 <fchmod@plt+0x17d0>
call   804ab90 <fchmod@plt+0x1800>
nop
call   8059bd0 <fchmod@plt+0x10840>
sub    $0x1,%ebx
jns    805386d <fchmod@plt+0xa4dd>
lea    0x0(%esi),%esi
test   %esi,%esi
je     8053928 <fchmod@plt+0xa598>
mov    0x8(%esp),%eax
test   %eax,%eax
jne    8053958 <fchmod@plt+0xa5c8>
mov    0x8070040,%eax
test   %eax,%eax
je     8053908 <fchmod@plt+0xa578>
movl   $0xffffffff,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80572d0 <fchmod@plt+0xdf40>
lea    0x0(%esi),%esi
xor    %eax,%eax
cmp    0x806ff64,%ebx
setge  %al
mov    %eax,0x8(%esp)
jmp    8053863 <fchmod@plt+0xa4d3>
lea    0x0(%esi,%eiz,1),%esi
call   804abc0 <fchmod@plt+0x1830>
jmp    80538d9 <fchmod@plt+0xa549>
nop
movl   $0x0,0x806ffb8
00
call   8054bf0 <fchmod@plt+0xb860>
jmp    805382d <fchmod@plt+0xa49d>
lea    0x0(%esi,%eiz,1),%esi
call   8053400 <fchmod@plt+0xa070>
lea    0x0(%esi),%esi
jmp    80538d9 <fchmod@plt+0xa549>
mov    0x806ffec,%eax
mov    $0x2710,%ecx
test   %eax,%eax
je     8053847 <fchmod@plt+0xa4b7>
mov    0x806ff64,%eax
lea    -0x2(%eax),%ecx
jmp    8053847 <fchmod@plt+0xa4b7>
lea    0x0(%esi,%eiz,1),%esi
call   8054bf0 <fchmod@plt+0xb860>
jmp    80538d9 <fchmod@plt+0xa549>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebx
mov    0x48(%esp),%edi
call   80595c0 <fchmod@plt+0x10230>
test   %eax,%eax
je     8053999 <fchmod@plt+0xa609>
call   8053420 <fchmod@plt+0xa090>
test   %eax,%eax
jne    8053a50 <fchmod@plt+0xa6c0>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ebp
and    %edx,%eax
cmp    $0xffffffff,%eax
je     80539d8 <fchmod@plt+0xa648>
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
call   80534f0 <fchmod@plt+0xa160>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %ebx,%ebx
jne    8053a98 <fchmod@plt+0xa708>
mov    0x806ffa0,%ebp
test   %ebp,%ebp
je     8053a88 <fchmod@plt+0xa6f8>
call   805a7a0 <error+0x730>
test   %eax,%eax
je     8053a00 <fchmod@plt+0xa670>
xor    %ebp,%ebp
xor    %edx,%edx
jmp    80539ae <fchmod@plt+0xa61e>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   805a5d0 <error+0x560>
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053800 <fchmod@plt+0xa470>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ebp
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8053a00 <fchmod@plt+0xa670>
jmp    80539ae <fchmod@plt+0xa61e>
lea    0x0(%esi),%esi
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    8053999 <fchmod@plt+0xa609>
movl   $0x1,(%esp)
call   8052020 <fchmod@plt+0x8c90>
test   %eax,%eax
je     80539ce <fchmod@plt+0xa63e>
movl   $0x0,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80499a0 <fchmod@plt+0x610>
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8053400 <fchmod@plt+0xa070>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff64,%eax
movl   $0x2,(%esp)
mov    %edx,0x1c(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%esp)
call   805a800 <error+0x790>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80539e0 <fchmod@plt+0xa650>
jmp    80539ae <fchmod@plt+0xa61e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x0,(%esp)
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
mov    0x48(%esp),%ebp
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%ebx
je     8053b20 <fchmod@plt+0xa790>
mov    %ebp,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x4(%esp)
call   8053800 <fchmod@plt+0xa470>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %esi,%esi
je     8053b3c <fchmod@plt+0xa7ac>
movl   $0xffffffff,(%esp)
mov    %ecx,0x1c(%esp)
call   805a5d0 <error+0x560>
mov    0x1c(%esp),%ecx
or     %eax,%edx
jne    8053afa <fchmod@plt+0xa76a>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8053400 <fchmod@plt+0xa070>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d224,%ecx
xor    %eax,%eax
test   %ecx,%ecx
jne    8053b65 <fchmod@plt+0xa7d5>
mov    0x806ffe4,%eax
test   %eax,%eax
js     8053b68 <fchmod@plt+0xa7d8>
repz ret
nop
mov    0x806ffec,%edx
mov    $0x2710,%eax
test   %edx,%edx
je     8053b65 <fchmod@plt+0xa7d5>
mov    0x806ff64,%eax
sub    $0x2,%eax
ret
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8053be8 <fchmod@plt+0xa858>
mov    %ebx,(%esp)
call   8057c50 <fchmod@plt+0xe8c0>
cmp    0x806c2a0,%ebx
je     8053bf0 <fchmod@plt+0xa860>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
mov    %edx,0x4(%eax)
mov    0x4(%ebx),%edx
mov    %eax,(%edx)
mov    (%ebx),%eax
cmp    $0x806ba20,%eax
je     8053bc5 <fchmod@plt+0xa835>
lea    0x0(%esi),%esi
subl   $0x1,0x10(%eax)
mov    (%eax),%eax
cmp    $0x806ba20,%eax
jne    8053bb8 <fchmod@plt+0xa828>
mov    0x8(%ebx),%eax
subl   $0x1,0x806d228
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048f90 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%ebx),%eax
cmp    $0x806ba20,%eax
je     8053c05 <fchmod@plt+0xa875>
test   %eax,%eax
je     8053c05 <fchmod@plt+0xa875>
mov    %eax,0x806c2a0
jmp    8053b9c <fchmod@plt+0xa80c>
mov    (%ebx),%edx
xor    %eax,%eax
cmp    $0x806ba20,%edx
cmovne %edx,%eax
jmp    8053bfe <fchmod@plt+0xa86e>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0x806ba20,%edx
test   %eax,%eax
cmove  %edx,%eax
mov    (%eax),%edx
xor    %eax,%eax
cmp    $0x806ba20,%edx
cmovne %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    $0x806ba20,%edx
test   %eax,%eax
cmove  %edx,%eax
mov    0x4(%eax),%edx
xor    %eax,%eax
cmp    $0x806ba20,%edx
cmovne %edx,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0x806ba20,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x4(%eax),%eax
cmp    $0x806ba20,%eax
je     8053c80 <fchmod@plt+0xa8f0>
test   %eax,%eax
je     8053c80 <fchmod@plt+0xa8f0>
repz ret
xchg   %ax,%ax
test   %edx,%edx
mov    $0x806ba20,%eax
cmove  %eax,%edx
xor    %eax,%eax
mov    (%edx),%edx
cmp    $0x806ba20,%edx
cmovne %edx,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d228,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806ba20,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
cmp    $0x806ba20,%ebx
jne    8053cda <fchmod@plt+0xa94a>
jmp    8053cf8 <fchmod@plt+0xa968>
xchg   %ax,%ax
mov    (%ebx),%ebx
cmp    $0x806ba20,%ebx
je     8053cf8 <fchmod@plt+0xa968>
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <strcmp@plt>
test   %eax,%eax
jne    8053cd0 <fchmod@plt+0xa940>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x28,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049a60 <fchmod@plt+0x6d0>
test   %edi,%edi
movl   $0xffffffff,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x0,0x14(%ebx)
movl   $0x0,0xc(%ebx)
mov    %eax,0x8(%ebx)
mov    $0x806ba20,%eax
cmove  %eax,%edi
mov    (%edi),%eax
mov    %edi,0x4(%ebx)
mov    %eax,(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%eax)
mov    0x10(%edi),%eax
mov    %ebx,(%edi)
add    $0x1,%eax
mov    %eax,0x10(%ebx)
mov    (%ebx),%eax
cmp    $0x806ba20,%eax
je     8053d70 <fchmod@plt+0xa9e0>
addl   $0x1,0x10(%eax)
mov    (%eax),%eax
cmp    $0x806ba20,%eax
jne    8053d63 <fchmod@plt+0xa9d3>
addl   $0x1,0x806d228
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x4(%esp),%eax
test   %eax,%eax
je     8053d90 <fchmod@plt+0xaa00>
mov    0x8(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    (%edx),%ecx
mov    %ecx,0x1c(%eax)
mov    0x4(%edx),%ecx
mov    %ecx,0x20(%eax)
mov    0x8(%edx),%edx
mov    %edx,0x24(%eax)
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    0x8(%esp),%eax
mov    0x1c(%edx),%ecx
mov    %ecx,(%eax)
mov    0x20(%edx),%ecx
mov    %ecx,0x4(%eax)
mov    0x24(%edx),%edx
mov    %edx,0x8(%eax)
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
movb   $0x1,0x18(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movsbl 0x18(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
add    %edx,0x14(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0xc(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
mov    %eax,0x18(%esp)
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,0x1c(%esp)
je     8054038 <fchmod@plt+0xaca8>
xor    %ebp,%ebp
cmpl   $0x2,0x807004c
je     8053e8a <fchmod@plt+0xaafa>
call   805c3a0 <error+0x2330>
test   %eax,%eax
je     8054098 <fchmod@plt+0xad08>
cmpl   $0x1,0x806ffa0
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
sbb    %eax,%eax
or     $0x1,%eax
mov    %eax,0x10(%esp)
mov    0x806d440,%eax
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
lea    (%eax,%eax,2),%eax
cltd
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   805c3e0 <error+0x2370>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%esi
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8054038 <fchmod@plt+0xaca8>
testb  $0x3,0x8070078
jne    8054038 <fchmod@plt+0xaca8>
mov    %esi,%edx
mov    %ebx,%esi
mov    %edx,%edi
jmp    8053f14 <fchmod@plt+0xab84>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%eax
je     80540b0 <fchmod@plt+0xad20>
add    $0xffffffff,%esi
adc    $0xffffffff,%edi
testb  $0x3,0x8070078
jne    8054038 <fchmod@plt+0xaca8>
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xffffffff,%eax
jne    8053ef8 <fchmod@plt+0xab68>
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
call   80551b0 <fchmod@plt+0xbe20>
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055220 <fchmod@plt+0xbe90>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
cmp    0x1c(%esp),%edi
jl     8054087 <fchmod@plt+0xacf7>
jg     8053f68 <fchmod@plt+0xabd8>
cmp    0x18(%esp),%esi
jb     8054087 <fchmod@plt+0xacf7>
lea    0x0(%esi,%eiz,1),%esi
call   8056570 <fchmod@plt+0xd1e0>
call   8055970 <fchmod@plt+0xc5e0>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8054038 <fchmod@plt+0xaca8>
cmp    $0xa,%eax
sete   %al
cmp    $0xd,%esi
sete   %bl
or     %eax,%ebx
testb  $0x3,0x8070078
movzbl %bl,%ebx
jne    8054038 <fchmod@plt+0xaca8>
test   %al,%al
je     8053fd2 <fchmod@plt+0xac42>
jmp    8054100 <fchmod@plt+0xad70>
lea    0x0(%esi,%eiz,1),%esi
call   804ba30 <fchmod@plt+0x26a0>
testb  $0x3,0x8070078
mov    %eax,%esi
jne    8054038 <fchmod@plt+0xaca8>
cmp    $0xffffffff,%esi
je     8054100 <fchmod@plt+0xad70>
cmp    $0xa,%esi
je     8054100 <fchmod@plt+0xad70>
cmp    $0xd,%esi
cmovne %ebp,%ebx
call   804b9f0 <fchmod@plt+0x2660>
mov    %esi,(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8056290 <fchmod@plt+0xcf00>
test   %eax,%eax
jle    8053fb0 <fchmod@plt+0xac20>
mov    0x8070000,%edi
mov    %eax,%esi
test   %edi,%edi
jne    805402f <fchmod@plt+0xac9f>
mov    0x806ffd0,%ecx
test   %ecx,%ecx
jg     805402f <fchmod@plt+0xac9f>
jmp    80541a6 <fchmod@plt+0xae16>
lea    0x0(%esi),%esi
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
je     8054188 <fchmod@plt+0xadf8>
cmp    $0xa,%eax
je     8054188 <fchmod@plt+0xadf8>
testb  $0x3,0x8070078
je     8054018 <fchmod@plt+0xac88>
call   80567b0 <fchmod@plt+0xd420>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   804ba30 <fchmod@plt+0x26a0>
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8056290 <fchmod@plt+0xcf00>
add    $0x1,%esi
adc    $0x0,%edi
test   %eax,%eax
jg     80540c8 <fchmod@plt+0xad38>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
xor    %esi,%eax
xor    %edi,%edx
or     %eax,%edx
je     8053f68 <fchmod@plt+0xabd8>
testb  $0x3,0x8070078
je     8054050 <fchmod@plt+0xacc0>
jmp    8054038 <fchmod@plt+0xaca8>
lea    0x0(%esi),%esi
mov    0x806fff0,%ebx
test   %ebx,%ebx
jne    8053e8a <fchmod@plt+0xaafa>
jmp    8053ec3 <fchmod@plt+0xab33>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
call   804ba30 <fchmod@plt+0x26a0>
jmp    8053f26 <fchmod@plt+0xab96>
lea    0x0(%esi),%esi
mov    %eax,0x2c(%esp)
call   8055970 <fchmod@plt+0xc5e0>
mov    0x2c(%esp),%eax
mov    %eax,%ebx
sar    $0x1f,%ebx
sub    %eax,%esi
sbb    %ebx,%edi
lea    -0x1(%eax),%ebx
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xffffffff,%ebx
jne    80540e8 <fchmod@plt+0xad58>
jmp    8053f4b <fchmod@plt+0xabbb>
lea    0x0(%esi),%esi
call   8056570 <fchmod@plt+0xd1e0>
mov    %eax,%esi
call   804b9f0 <fchmod@plt+0x2660>
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    $0x1,%eax
mov    %edx,0x1c(%esp)
jle    8054140 <fchmod@plt+0xadb0>
mov    0x8070000,%ecx
test   %ecx,%ecx
jne    8054140 <fchmod@plt+0xadb0>
mov    0x806ffd0,%edx
test   %edx,%edx
jne    8054140 <fchmod@plt+0xadb0>
lea    0x1(%esi),%eax
cltd
sub    %eax,0x18(%esp)
sbb    %edx,0x1c(%esp)
xor    %eax,%eax
nop
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   80565a0 <fchmod@plt+0xd210>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805bc60 <error+0x1bf0>
test   %eax,%eax
je     80541c5 <fchmod@plt+0xae35>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
mov    %ecx,%eax
and    %ebx,%eax
cmp    $0xffffffff,%eax
jne    8053e74 <fchmod@plt+0xaae4>
jmp    8054038 <fchmod@plt+0xaca8>
lea    0x0(%esi),%esi
call   804b9f0 <fchmod@plt+0x2660>
movl   $0x0,0x806fff4
00
mov    %eax,0x18(%esp)
mov    $0x1,%eax
mov    %edx,0x1c(%esp)
jmp    8054140 <fchmod@plt+0xadb0>
call   804b9f0 <fchmod@plt+0x2660>
mov    %eax,0x18(%esp)
mov    %esi,%eax
mov    %edx,0x1c(%esp)
cltd
sub    %esi,0x18(%esp)
sbb    %edx,0x1c(%esp)
xor    %eax,%eax
jmp    8054140 <fchmod@plt+0xadb0>
mov    0x806fff0,%edx
test   %edx,%edx
jne    8054220 <fchmod@plt+0xae90>
mov    0x806ffd4,%eax
test   %eax,%eax
je     80541dc <fchmod@plt+0xae4c>
test   %ebx,%ebx
jne    80541f6 <fchmod@plt+0xae66>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    8054047 <fchmod@plt+0xacb7>
testb  $0x3,0x8070078
jne    8054038 <fchmod@plt+0xaca8>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xa,%eax
je     80541e9 <fchmod@plt+0xae59>
cmp    $0xd,%eax
je     80541e9 <fchmod@plt+0xae59>
cmp    $0xffffffff,%eax
je     805420f <fchmod@plt+0xae7f>
call   804bdf0 <fchmod@plt+0x2a60>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804b9f0 <fchmod@plt+0x2660>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804b9f0 <fchmod@plt+0x2660>
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805c1d0 <error+0x2160>
test   %eax,%eax
je     80541cf <fchmod@plt+0xae3f>
movl   $0x2a,(%esp)
call   8056720 <fchmod@plt+0xd390>
jmp    80541cf <fchmod@plt+0xae3f>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%edx
mov    0x60(%esp),%eax
cmp    $0x0,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jle    80545b8 <fchmod@plt+0xb228>
cmpl   $0x2,0x807004c
je     80542a6 <fchmod@plt+0xaf16>
call   805c3a0 <error+0x2330>
test   %eax,%eax
je     8054378 <fchmod@plt+0xafe8>
mov    0x806d440,%eax
lea    (%eax,%eax,2),%ecx
mov    %ecx,%eax
cltd
cmp    0x24(%esp),%edx
jl     8054362 <fchmod@plt+0xafd2>
jle    8054358 <fchmod@plt+0xafc8>
xor    %eax,%eax
xor    %edx,%edx
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
movl   $0xffffffff,0x10(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x4(%esp)
call   805c3e0 <error+0x2370>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    805433c <fchmod@plt+0xafac>
mov    0x806ffd4,%eax
test   %eax,%eax
je     8054333 <fchmod@plt+0xafa3>
jmp    80544d2 <fchmod@plt+0xb142>
lea    0x0(%esi),%esi
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xa,%eax
je     8054390 <fchmod@plt+0xb000>
cmp    $0xffffffff,%eax
je     80544c0 <fchmod@plt+0xb130>
testb  $0x3,0x8070078
je     8054320 <fchmod@plt+0xaf90>
call   80567b0 <fchmod@plt+0xd420>
mov    $0xffffffff,%edx
mov    $0xffffffff,%ecx
add    $0x4c,%esp
mov    %edx,%eax
pop    %ebx
mov    %ecx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    0x20(%esp),%ecx
ja     80542c1 <fchmod@plt+0xaf31>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
sub    %eax,%ecx
sbb    %edx,%ebx
mov    %ecx,%eax
mov    %ebx,%edx
jmp    80542c5 <fchmod@plt+0xaf35>
nop
mov    0x806fff0,%eax
test   %eax,%eax
jne    80542a6 <fchmod@plt+0xaf16>
jmp    80542e9 <fchmod@plt+0xaf59>
lea    0x0(%esi),%esi
call   804b9f0 <fchmod@plt+0x2660>
mov    %eax,0x30(%esp)
addl   $0x1,0x30(%esp)
mov    %edx,0x34(%esp)
adcl   $0x0,0x34(%esp)
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    805433c <fchmod@plt+0xafac>
call   80551b0 <fchmod@plt+0xbe20>
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   8055220 <fchmod@plt+0xbe90>
mov    %edi,0x28(%esp)
mov    %ebp,0x2c(%esp)
mov    0x28(%esp),%esi
mov    0x2c(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     805433c <fchmod@plt+0xafac>
testb  $0x3,0x8070078
jne    805433c <fchmod@plt+0xafac>
add    $0x1,%esi
adc    $0x0,%edi
cmp    $0xa,%eax
je     8054520 <fchmod@plt+0xb190>
call   804b9f0 <fchmod@plt+0x2660>
mov    %ebx,(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8056290 <fchmod@plt+0xcf00>
test   %eax,%eax
jg     8054590 <fchmod@plt+0xb200>
cmp    0x24(%esp),%edi
jle    80544a8 <fchmod@plt+0xb118>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,%esi
xor    %eax,%eax
mov    %edx,%ebx
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   80565a0 <fchmod@plt+0xd210>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805bc60 <error+0x1bf0>
test   %eax,%eax
je     805462b <fchmod@plt+0xb29b>
cmp    $0x0,%ebx
jl     805433c <fchmod@plt+0xafac>
jle    80545fa <fchmod@plt+0xb26a>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jmp    8054290 <fchmod@plt+0xaf00>
nop
lea    0x0(%esi,%eiz,1),%esi
jl     80543f0 <fchmod@plt+0xb060>
cmp    0x20(%esp),%esi
jae    8054445 <fchmod@plt+0xb0b5>
jmp    80543f0 <fchmod@plt+0xb060>
lea    0x0(%esi,%eiz,1),%esi
call   804b9f0 <fchmod@plt+0x2660>
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
jmp    80543a7 <fchmod@plt+0xb017>
call   804ba30 <fchmod@plt+0x26a0>
call   804ba30 <fchmod@plt+0x26a0>
mov    %eax,%ebx
call   804bdf0 <fchmod@plt+0x2a60>
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xd,%ebx
jne    80545d0 <fchmod@plt+0xb240>
lea    0x0(%esi,%eiz,1),%esi
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xa,%eax
je     805450b <fchmod@plt+0xb17b>
cmp    $0xd,%eax
jne    80545e5 <fchmod@plt+0xb255>
testb  $0x3,0x8070078
je     80544f8 <fchmod@plt+0xb168>
jmp    805433c <fchmod@plt+0xafac>
lea    0x0(%esi,%eiz,1),%esi
call   8056570 <fchmod@plt+0xd1e0>
test   %eax,%eax
mov    %eax,%ebx
jle    8054615 <fchmod@plt+0xb285>
mov    0x8070000,%ebp
test   %ebp,%ebp
jne    8054615 <fchmod@plt+0xb285>
mov    0x806ffd0,%ecx
test   %ecx,%ecx
jne    8054615 <fchmod@plt+0xb285>
call   8055970 <fchmod@plt+0xc5e0>
mov    %ebx,%ebp
lea    0x0(%esi),%esi
sub    $0x1,%ebp
call   804bdf0 <fchmod@plt+0x2a60>
lea    0x1(%ebp),%eax
test   %eax,%eax
jg     8054558 <fchmod@plt+0xb1c8>
add    $0xffffffff,%esi
mov    $0x0,%eax
adc    $0xffffffff,%edi
test   %ebx,%ebx
cmovs  %eax,%ebx
mov    %ebx,%eax
cltd
mov    %esi,0x28(%esp)
sub    %ebx,0x28(%esp)
mov    %edi,0x2c(%esp)
sbb    %edx,0x2c(%esp)
jmp    80543dc <fchmod@plt+0xb04c>
nop
mov    0x8070000,%edx
test   %edx,%edx
jne    805460b <fchmod@plt+0xb27b>
mov    0x806ffd0,%ebp
test   %ebp,%ebp
jg     805460b <fchmod@plt+0xb27b>
mov    %eax,0x28(%esp)
call   8055970 <fchmod@plt+0xc5e0>
mov    0x28(%esp),%eax
lea    -0x1(%eax),%ebx
jmp    8054550 <fchmod@plt+0xb1c0>
xchg   %ax,%ax
jl     805433c <fchmod@plt+0xafac>
cmpl   $0x0,0x20(%esp)
ja     8054290 <fchmod@plt+0xaf00>
jmp    805433c <fchmod@plt+0xafac>
xchg   %ax,%ax
cmp    $0xa,%ebx
je     80544f8 <fchmod@plt+0xb168>
lea    0x0(%esi,%eiz,1),%esi
jmp    8054333 <fchmod@plt+0xafa3>
cmp    $0xffffffff,%eax
je     805433c <fchmod@plt+0xafac>
xchg   %ax,%ax
call   804ba30 <fchmod@plt+0x26a0>
jmp    8054333 <fchmod@plt+0xafa3>
cmp    $0x0,%esi
lea    0x0(%esi),%esi
jbe    805433c <fchmod@plt+0xafac>
jmp    805448e <fchmod@plt+0xb0fe>
movl   $0x0,0x806fff4
00
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,%esi
mov    $0x1,%eax
mov    %edx,%ebx
jmp    8054453 <fchmod@plt+0xb0c3>
mov    0x806fff0,%esi
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %esi,%esi
je     805434b <fchmod@plt+0xafbb>
mov    0x38(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x34(%esp),%edx
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805c1d0 <error+0x2160>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
test   %eax,%eax
je     805434b <fchmod@plt+0xafbb>
movl   $0x2a,(%esp)
call   8056720 <fchmod@plt+0xd390>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
jmp    805434b <fchmod@plt+0xafbb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     8054708 <fchmod@plt+0xb378>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
je     80546eb <fchmod@plt+0xb35b>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xd,%eax
jne    80546f8 <fchmod@plt+0xb368>
add    $0x1,%esi
adc    $0x0,%edi
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
jne    80546e0 <fchmod@plt+0xb350>
jmp    80546d6 <fchmod@plt+0xb346>
nop
cmp    $0xa,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     80546e5 <fchmod@plt+0xb355>
lea    0x0(%esi),%esi
mov    %esi,0x806a158
mov    %edi,0x806a15c
jmp    8054722 <fchmod@plt+0xb392>
xchg   %ax,%ax
cmp    $0xa,%eax
je     8054732 <fchmod@plt+0xb3a2>
cmp    $0xd,%eax
je     8054732 <fchmod@plt+0xb3a2>
call   804ba30 <fchmod@plt+0x26a0>
add    $0x1,%esi
adc    $0x0,%edi
cmp    $0xffffffff,%eax
jne    8054718 <fchmod@plt+0xb388>
mov    %esi,0x806a150
mov    %edi,0x806a154
add    $0x14,%esp
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%eax
mov    0x50(%esp),%ebp
mov    0x54(%esp),%ebx
mov    %eax,(%esp)
call   805a990 <error+0x920>
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%esi
call   805a720 <error+0x6b0>
test   %eax,%eax
js     80547d8 <fchmod@plt+0xb448>
sub    %esi,%eax
test   %eax,%eax
mov    %eax,%ebx
jle    80548c8 <fchmod@plt+0xb538>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80534f0 <fchmod@plt+0xa160>
mov    0x807001c,%ebx
test   %ebx,%ebx
jne    80548b0 <fchmod@plt+0xb520>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8054900 <fchmod@plt+0xb570>
movl   $0x0,(%esp)
call   805a5d0 <error+0x560>
movl   $0xfffffffe,(%esp)
mov    %edx,%edi
mov    %eax,0x24(%esp)
call   805a5d0 <error+0x560>
cmp    %edi,%ebx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jg     8054920 <fchmod@plt+0xb590>
jl     8054826 <fchmod@plt+0xb496>
cmp    0x24(%esp),%ebp
jae    8054920 <fchmod@plt+0xb590>
mov    0x24(%esp),%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     8054920 <fchmod@plt+0xb590>
mov    0x806ff64,%eax
sub    $0x1,%eax
cmp    %eax,%esi
jge    8054a0a <fchmod@plt+0xb67a>
mov    %ebp,%eax
mov    %ebx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8053e50 <fchmod@plt+0xaac0>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8054a06 <fchmod@plt+0xb676>
cmp    %edx,%edi
jg     80549f2 <fchmod@plt+0xb662>
jge    80549e8 <fchmod@plt+0xb658>
mov    0x24(%esp),%eax
add    $0x1,%esi
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8053800 <fchmod@plt+0xa470>
mov    0x807001c,%edx
test   %edx,%edx
je     80547cb <fchmod@plt+0xb43b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805b8e0 <error+0x1870>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
neg    %ebx
call   805a5d0 <error+0x560>
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8053800 <fchmod@plt+0xa470>
jmp    80547bd <fchmod@plt+0xb42d>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x54(%esp)
movl   $0x8062314,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jle    8054afa <fchmod@plt+0xb76a>
mov    0x2c(%esp),%edi
mov    0x28(%esp),%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
setne  0x24(%esp)
cmp    %edi,%ebx
jge    8054ad0 <fchmod@plt+0xb740>
cmpb   $0x0,0x24(%esp)
jne    8054b02 <fchmod@plt+0xb772>
lea    0x0(%esi),%esi
mov    %ebx,%edx
mov    0x2c(%esp),%ebx
xor    %edi,%edi
mov    %ebp,%eax
lea    0x0(%esi),%esi
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054270 <fchmod@plt+0xaee0>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8054a80 <fchmod@plt+0xb6f0>
add    $0x1,%edi
cmp    %esi,%edi
je     8054a80 <fchmod@plt+0xb6f0>
cmp    %edx,%ebx
jle    8054a68 <fchmod@plt+0xb6d8>
cmpb   $0x0,0x24(%esp)
je     8054960 <fchmod@plt+0xb5d0>
mov    0x28(%esp),%eax
sub    %esi,%edi
add    0x806ff64,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
sub    $0x1,%edi
movl   $0x1,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80534f0 <fchmod@plt+0xa160>
mov    0x807001c,%ecx
test   %ecx,%ecx
je     80547cb <fchmod@plt+0xb43b>
jmp    80548b0 <fchmod@plt+0xb520>
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x24(%esp)
jbe    8054877 <fchmod@plt+0xb4e7>
mov    0x806ff64,%ecx
add    $0x1,%esi
sub    $0x1,%ecx
cmp    %esi,%ecx
jg     8054850 <fchmod@plt+0xb4c0>
mov    %eax,%ebp
mov    %edx,%ebx
call   8057b00 <fchmod@plt+0xe770>
mov    0x806ffec,%eax
test   %eax,%eax
jne    8054af0 <fchmod@plt+0xb760>
call   804ace0 <fchmod@plt+0x1950>
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x806ffbc
00
call   805a6b0 <error+0x640>
mov    0x806ff64,%eax
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
mov    %ebp,0x4(%esp)
sub    $0x1,%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8053800 <fchmod@plt+0xa470>
jmp    80547cb <fchmod@plt+0xb43b>
lea    0x0(%esi,%eiz,1),%esi
jl     8054960 <fchmod@plt+0xb5d0>
cmp    %eax,0x28(%esp)
jb     8054960 <fchmod@plt+0xb5d0>
jmp    805498c <fchmod@plt+0xb5fc>
lea    0x0(%esi),%esi
mov    %eax,%ebp
mov    %edx,%ebx
call   8057b00 <fchmod@plt+0xe770>
mov    0x806ff64,%eax
sub    %edi,%esi
mov    %esi,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
sub    $0x1,%eax
mov    %ebp,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0x806ffb8
00
movl   $0x0,0x806ffbc
00
call   80534f0 <fchmod@plt+0xa160>
jmp    80547cb <fchmod@plt+0xb43b>
jg     8054950 <fchmod@plt+0xb5c0>
cmp    0x28(%esp),%ebp
lea    0x0(%esi),%esi
ja     8054950 <fchmod@plt+0xb5c0>
jmp    8054942 <fchmod@plt+0xb5b2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804ab60 <fchmod@plt+0x17d0>
jmp    8054a21 <fchmod@plt+0xb691>
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
jmp    8054a84 <fchmod@plt+0xb6f4>
xor    %edi,%edi
jmp    8054993 <fchmod@plt+0xb603>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x44(%esp),%ebx
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
call   8057050 <fchmod@plt+0xdcc0>
mov    %eax,%esi
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%edi
je     8054b46 <fchmod@plt+0xb7b6>
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
je     8054b70 <fchmod@plt+0xb7e0>
cmp    $0x0,%ebx
jle    8054ba8 <fchmod@plt+0xb818>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x8062359,(%esp)
mov    %ebp,0x18(%esp)
mov    %ebx,0x1c(%esp)
call   805a070 <error>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x807001c,%ebp
test   %ebp,%ebp
jne    8054b98 <fchmod@plt+0xb808>
mov    0x807000c,%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   80546b0 <fchmod@plt+0xb320>
jmp    8054b7a <fchmod@plt+0xb7ea>
xchg   %ax,%ax
jl     8054bb2 <fchmod@plt+0xb822>
cmp    $0x1,%ebp
lea    0x0(%esi),%esi
ja     8054b4b <fchmod@plt+0xb7bb>
call   804bce0 <fchmod@plt+0x2950>
test   %eax,%eax
jne    8054b4b <fchmod@plt+0xb7bb>
mov    0x807000c,%ebx
call   804b9f0 <fchmod@plt+0x2660>
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054750 <fchmod@plt+0xb3c0>
movl   $0x0,0x4(%esp)
movl   $0x8062338,(%esp)
call   805a070 <error>
jmp    8054b67 <fchmod@plt+0xb7d7>
nop
sub    $0x2c,%esp
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   805a850 <error+0x7e0>
call   805a6f0 <error+0x680>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
sub    $0x14,%esp
call   804bd60 <fchmod@plt+0x29d0>
test   %eax,%eax
jne    8054ca8 <fchmod@plt+0xb918>
call   8057b00 <fchmod@plt+0xe770>
call   805a6f0 <error+0x680>
call   804b9f0 <fchmod@plt+0x2660>
mov    %eax,(%esp)
mov    %eax,%esi
mov    %edx,%edi
mov    %edx,0x4(%esp)
call   8054270 <fchmod@plt+0xaee0>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8054cc8 <fchmod@plt+0xb938>
mov    0x806ff64,%ecx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
sub    $0x1,%ecx
mov    %ecx,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
mov    0x806ff64,%eax
sub    $0x1,%eax
mov    %eax,(%esp)
call   805a5d0 <error+0x560>
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     8054cbc <fchmod@plt+0xb92c>
add    $0x14,%esp
pop    %esi
pop    %edi
jmp    8054bf0 <fchmod@plt+0xb860>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062377,(%esp)
call   805a070 <error>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x806ff64,%eax
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
sub    $0x1,%eax
mov    %eax,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    0x28(%esp),%ebx
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   804bb40 <fchmod@plt+0x27b0>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
je     8054d65 <fchmod@plt+0xb9d5>
mov    0x807001c,%eax
test   %eax,%eax
je     8054d45 <fchmod@plt+0xb9b5>
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   80546b0 <fchmod@plt+0xb320>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
mov    %ebx,0x28(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x24(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8054750 <fchmod@plt+0xb3c0>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%eax
je     8054d75 <fchmod@plt+0xb9e5>
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xa,%eax
jne    8054d60 <fchmod@plt+0xb9d0>
nop
call   804ba30 <fchmod@plt+0x26a0>
call   804b9f0 <fchmod@plt+0x2660>
mov    %edx,%ecx
mov    %eax,%edx
jmp    8054d20 <fchmod@plt+0xb990>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
call   804b300 <fchmod@plt+0x1f70>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8054e28 <fchmod@plt+0xba98>
call   804b300 <fchmod@plt+0x1f70>
mov    %edx,%ecx
mov    %eax,%edi
and    %ecx,%eax
mov    %ecx,%ebp
cmp    $0xffffffff,%eax
je     8054e08 <fchmod@plt+0xba78>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x4(%esp)
call   8059a80 <fchmod@plt+0x106f0>
cmp    %edx,%ebp
jg     8054dd8 <fchmod@plt+0xba48>
jl     8054df8 <fchmod@plt+0xba68>
cmp    %eax,%edi
lea    0x0(%esi),%esi
jbe    8054df8 <fchmod@plt+0xba68>
lea    0x0(%esi),%esi
mov    0x807000c,%ecx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8054cf0 <fchmod@plt+0xb960>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edi,%eax
mov    %ebp,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
jmp    8054dd8 <fchmod@plt+0xba48>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x34(%esp)
movl   $0x80623ad,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062392,(%esp)
call   805a190 <error+0x120>
call   804bd60 <fchmod@plt+0x29d0>
jmp    8054d9f <fchmod@plt+0xba0f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804afe0 <fchmod@plt+0x1c50>
xor    %edx,%edx
test   $0x1,%al
cmovne 0x806ff8c,%edx
test   $0x2,%al
je     8054e70 <fchmod@plt+0xbae0>
add    0x806ff68,%edx
test   $0x4,%al
je     8054e7a <fchmod@plt+0xbaea>
add    0x806ff6c,%edx
test   $0x8,%al
je     8054e84 <fchmod@plt+0xbaf4>
add    0x806ff74,%edx
mov    %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804afe0 <fchmod@plt+0x1c50>
xor    %edx,%edx
test   $0x1,%al
cmovne 0x806ff98,%edx
test   $0x2,%al
je     8054eb0 <fchmod@plt+0xbb20>
add    0x806ff94,%edx
test   $0x4,%al
je     8054eba <fchmod@plt+0xbb2a>
add    0x806ff88,%edx
test   $0x8,%al
je     8054ec4 <fchmod@plt+0xbb34>
add    0x806ff58,%edx
mov    %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806d440,%ebp
movl   $0x1,0x4(%esp)
lea    0x0(%ebp,%ebp,1),%esi
mov    %esi,(%esp)
call   8049370 <calloc@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%edi
call   8049370 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8054f30 <fchmod@plt+0xbba0>
test   %ebx,%ebx
je     8054f15 <fchmod@plt+0xbb85>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
test   %edi,%edi
mov    $0x1,%ebx
je     8054f26 <fchmod@plt+0xbb96>
mov    %edi,(%esp)
call   8048f90 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
je     8054f09 <fchmod@plt+0xbb79>
mov    0x806d494,%edx
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x1c(%esp)
call   8048fa0 <memcpy@plt>
mov    0x806d490,%ecx
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x4(%esp)
mov    %ecx,0x18(%esp)
call   8048fa0 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    %ecx,(%esp)
call   8048f90 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   8048f90 <free@plt>
mov    %edi,0x806d494
mov    %ebx,0x806d490
xor    %ebx,%ebx
mov    %esi,0x806d440
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
cmp    $0x8,%eax
je     8055080 <fchmod@plt+0xbcf0>
mov    0x806c7e0,%eax
mov    %edx,%esi
test   %eax,%eax
je     8054fc4 <fchmod@plt+0xbc34>
cmp    $0x7f,%ebx
ja     8055050 <fchmod@plt+0xbcc0>
movsbl %bl,%eax
mov    %eax,(%esp)
call   804c8f0 <fchmod@plt+0x3560>
test   %eax,%eax
jne    8055078 <fchmod@plt+0xbce8>
mov    %ebx,(%esp)
call   804d030 <fchmod@plt+0x3ca0>
cmp    $0x1,%eax
mov    0x806d488,%eax
sbb    %ebx,%ebx
add    $0x2,%ebx
test   %eax,%eax
jle    805500f <fchmod@plt+0xbc7f>
mov    0x806d490,%edx
mov    %esi,0x4(%esp)
movsbl -0x1(%edx,%eax,1),%eax
mov    %eax,(%esp)
call   804af90 <fchmod@plt+0x1c00>
test   %eax,%eax
je     80550a8 <fchmod@plt+0xbd18>
mov    %esi,(%esp)
call   804afe0 <fchmod@plt+0x1c50>
test   %eax,%eax
je     8055048 <fchmod@plt+0xbcb8>
mov    0x806d488,%eax
test   %eax,%eax
je     805503f <fchmod@plt+0xbcaf>
mov    0x806d490,%edx
mov    %esi,0x4(%esp)
movsbl -0x1(%edx,%eax,1),%eax
mov    %eax,(%esp)
call   804af90 <fchmod@plt+0x1c00>
test   %eax,%eax
jne    8055048 <fchmod@plt+0xbcb8>
mov    %esi,%eax
call   8054e90 <fchmod@plt+0xbb00>
add    %eax,%ebx
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    %ebx,(%esp)
mov    %ecx,0xc(%esp)
call   804cff0 <fchmod@plt+0x3c60>
mov    0xc(%esp),%ecx
test   %eax,%eax
jne    8055078 <fchmod@plt+0xbce8>
mov    %ebx,0x4(%esp)
mov    %ecx,(%esp)
call   804d050 <fchmod@plt+0x3cc0>
test   %eax,%eax
je     8054fd7 <fchmod@plt+0xbc47>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    0x806c7e0,%edx
mov    $0xffffffff,%eax
test   %edx,%edx
je     805507a <fchmod@plt+0xbcea>
mov    %ecx,(%esp)
call   804d030 <fchmod@plt+0x3ca0>
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x14,%esp
or     $0xfffffffe,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x806d488,%eax
mov    0x806d490,%edx
movsbl -0x1(%edx,%eax,1),%eax
call   8054e50 <fchmod@plt+0xbac0>
add    %eax,%ebx
jmp    805500f <fchmod@plt+0xbc7f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    0x806d464,%eax
mov    %eax,(%esp)
call   8049190 <strchr@plt>
test   %eax,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x80623c7,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x806d464
je     8055188 <fchmod@plt+0xbdf8>
cmpb   $0x0,(%eax)
je     8055188 <fchmod@plt+0xbdf8>
movl   $0x80623d8,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,0x806d460
je     8055137 <fchmod@plt+0xbda7>
cmpb   $0x0,(%eax)
jne    8055141 <fchmod@plt+0xbdb1>
movl   $0x80623e9,0x806d460
08
movl   $0x1,0x4(%esp)
movl   $0x400,(%esp)
call   8049a20 <fchmod@plt+0x690>
movl   $0x1,0x4(%esp)
movl   $0x400,(%esp)
mov    %eax,0x806d494
call   8049a20 <fchmod@plt+0x690>
movl   $0x400,0x806d440
00
mov    %eax,0x806d490
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8062408,0x806d464
08
jmp    805511d <fchmod@plt+0xbd8d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
xor    %eax,%eax
cmpl   $0x7f,0x4(%esp)
setbe  %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806fff0,%ecx
movl   $0x0,0x806d488
00
movl   $0x0,0x806d484
00
movl   $0x0,0x806d48c
00
test   %ecx,%ecx
movl   $0x0,0x806d480
00
movl   $0x0,0x806d47c
00
movl   $0x0,0x806d454
00
movl   $0x0,0x806d478
00
movb   $0x0,0x806d470
movl   $0x0,0x806d474
00
je     805521b <fchmod@plt+0xbe8b>
movl   $0x1,0x806d474
00
repz ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x60(%esp),%edi
cmpl   $0x2,0x806ffe0
mov    0x64(%esp),%ebx
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
je     8055358 <fchmod@plt+0xbfc8>
mov    0x806fff0,%esi
test   %esi,%esi
je     80552a9 <fchmod@plt+0xbf19>
mov    0x806d494,%esi
mov    0x806d488,%ecx
movb   $0x20,(%esi,%ecx,1)
mov    0x806a158,%ebp
mov    0x806a15c,%esi
mov    %ebp,%eax
and    %esi,%eax
cmp    $0xffffffff,%eax
je     805528f <fchmod@plt+0xbeff>
cmp    %esi,%ebx
jge    8055328 <fchmod@plt+0xbf98>
mov    0x806d490,%ebx
movb   $0x0,(%ebx,%ecx,1)
addl   $0x1,0x806d484
add    $0x1,%ecx
mov    %ecx,0x806d488
cmpl   $0x2,0x806ffe0
je     8055378 <fchmod@plt+0xbfe8>
mov    0x806d474,%esi
mov    0x806d484,%edi
cmp    %edi,%esi
jle    8055308 <fchmod@plt+0xbf78>
mov    0x806d488,%ebp
mov    %esi,%ebx
xor    %eax,%eax
mov    0x806d494,%ecx
sub    %edi,%ebx
mov    0x806d490,%edx
add    %ebp,%ecx
add    %ebp,%edx
lea    0x0(%esi),%esi
movb   $0x20,(%ecx,%eax,1)
movb   $0x0,(%edx,%eax,1)
add    $0x1,%eax
cmp    %ebx,%eax
jne    80552e8 <fchmod@plt+0xbf58>
lea    0x0(%ebp,%esi,1),%eax
sub    %edi,%eax
mov    %eax,0x806d488
mov    %esi,0x806d484
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805543d <fchmod@plt+0xc0ad>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jg     8055332 <fchmod@plt+0xbfa2>
cmp    %ebp,%edi
jb     805528f <fchmod@plt+0xbeff>
cmp    0x806a154,%ebx
jg     805528f <fchmod@plt+0xbeff>
xchg   %ax,%ax
jge    805542c <fchmod@plt+0xc09c>
mov    0x806d490,%ebx
movb   $0x40,(%ebx,%ecx,1)
jmp    8055299 <fchmod@plt+0xbf09>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %ebx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jmp    8055258 <fchmod@plt+0xbec8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    0x25(%esp),%esi
mov    0x1c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059d70 <fchmod@plt+0x109e0>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
cmp    $0x6,%eax
lea    0x1(%eax),%ebx
jg     80553ae <fchmod@plt+0xc01e>
mov    $0x8,%ebx
mov    $0x7,%eax
mov    %eax,0x10(%esp)
mov    0x806d494,%eax
add    0x806d488,%eax
mov    %esi,0x14(%esp)
movl   $0x8062401,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049380 <__sprintf_chk@plt>
mov    0x806d488,%ecx
xor    %eax,%eax
mov    0x806d490,%edx
add    %ecx,%edx
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edx,%eax,1)
add    $0x1,%eax
cmp    %ebx,%eax
jl     80553f8 <fchmod@plt+0xc068>
mov    0x806d484,%edi
add    %ebx,%ecx
mov    0x806d474,%esi
mov    %ecx,0x806d488
add    %ebx,%edi
add    %ebx,%esi
mov    %edi,0x806d484
mov    %esi,0x806d474
jmp    80552c2 <fchmod@plt+0xbf32>
cmp    0x806a150,%edi
jae    805528f <fchmod@plt+0xbeff>
jmp    8055346 <fchmod@plt+0xbfb6>
lea    0x0(%esi),%esi
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
cmp    $0x7f,%eax
ja     8055460 <fchmod@plt+0xc0d0>
jmp    80550d0 <fchmod@plt+0xbd40>
xchg   %ax,%ax
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmp    $0x7f,%ebx
ja     805548b <fchmod@plt+0xc0fb>
mov    %ebx,%eax
call   80550d0 <fchmod@plt+0xbd40>
test   %eax,%eax
je     8055493 <fchmod@plt+0xc103>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
mov    0x806d460,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049190 <strchr@plt>
test   %eax,%eax
setne  %al
add    $0x14,%esp
movzbl %al,%eax
mov    %eax,%esi
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x806d488,%edi
mov    0x806d484,%ebx
mov    0x806d474,%esi
mov    %edi,%ebp
mov    %ebx,%ecx
sub    %esi,%ecx
sub    %esi,%ebp
cmp    %ecx,%ebp
cmovle %ebp,%ecx
cmp    %eax,%ecx
cmovle %ecx,%eax
test   %eax,%eax
mov    %edi,0x18(%esp)
mov    %edi,0x1c(%esp)
mov    %eax,0x20(%esp)
js     8055955 <fchmod@plt+0xc5c5>
cmp    %edi,%esi
jge    8055942 <fchmod@plt+0xc5b2>
mov    %esi,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x2c(%esp)
jmp    80555da <fchmod@plt+0xc24a>
xchg   %ax,%ax
mov    0x806c7e0,%ebp
test   %ebp,%ebp
jne    8055830 <fchmod@plt+0xc4a0>
lea    0x1(%esi),%ecx
movl   $0xffffffff,0x1c(%esp)
movl   $0x0,0x2c(%esp)
mov    0x20(%esp),%eax
mov    %ecx,%ebx
sub    0x14(%esp),%eax
mov    %eax,0x24(%esp)
xor    %ebp,%ebp
test   %edi,%edi
mov    0x806d490,%eax
jle    805555f <fchmod@plt+0xc1cf>
movsbl -0x1(%eax,%edi,1),%ebp
cmp    %ebx,0x806d488
mov    %ebp,0x28(%esp)
jle    8055573 <fchmod@plt+0xc1e3>
movsbl (%eax,%ebx,1),%ecx
mov    %ecx,0x28(%esp)
mov    %ebp,0x4(%esp)
movsbl (%eax,%esi,1),%eax
mov    %eax,(%esp)
call   804af90 <fchmod@plt+0x1c00>
test   %eax,%eax
je     80557a8 <fchmod@plt+0xc418>
mov    0x806d488,%eax
mov    %eax,0x18(%esp)
mov    %eax,%edx
mov    0x24(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     80556a8 <fchmod@plt+0xc318>
mov    0x14(%esp),%eax
mov    $0x0,%ecx
mov    %ebx,%esi
add    0x1c(%esp),%eax
cmovs  %ecx,%eax
mov    %eax,0x14(%esp)
mov    0x20(%esp),%eax
cmp    %eax,0x14(%esp)
jg     80556a8 <fchmod@plt+0xc318>
cmp    0x18(%esp),%esi
jge    8055870 <fchmod@plt+0xc4e0>
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x806d494,%ebx
mov    %esi,%eax
cmpl   $0x2,0x807002c
movzbl (%ebx,%esi,1),%edx
je     8055628 <fchmod@plt+0xc298>
test   %dl,%dl
js     8055748 <fchmod@plt+0xc3b8>
cmp    $0x8,%dl
je     8055520 <fchmod@plt+0xc190>
mov    %edx,(%esp)
call   804c8f0 <fchmod@plt+0x3560>
lea    0x1(%esi),%ecx
movl   $0x0,0x2c(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x1c(%esp)
jmp    8055541 <fchmod@plt+0xc1b1>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9b,%dl
je     8055632 <fchmod@plt+0xc2a2>
cmp    $0x1b,%dl
jne    80555ef <fchmod@plt+0xc25f>
mov    0x806d490,%ebp
mov    %edi,%ecx
add    $0x1,%esi
mov    %dl,(%ebx,%edi,1)
add    $0x1,%edi
cmp    0x1c(%esp),%esi
movzbl 0x0(%ebp,%eax,1),%eax
mov    %al,0x0(%ebp,%ecx,1)
jge    8055692 <fchmod@plt+0xc302>
lea    (%ebx,%esi,1),%ecx
movzbl (%ecx),%eax
test   %al,%al
jne    8055671 <fchmod@plt+0xc2e1>
jmp    8055692 <fchmod@plt+0xc302>
xchg   %ax,%ax
cmp    0x1c(%esp),%esi
je     8055692 <fchmod@plt+0xc302>
movzbl (%ebx,%esi,1),%eax
lea    (%ebx,%esi,1),%ecx
test   %al,%al
je     8055692 <fchmod@plt+0xc302>
mov    %al,(%ebx,%edi,1)
movzbl 0x0(%ebp,%esi,1),%eax
add    $0x1,%edi
add    $0x1,%esi
mov    %al,-0x1(%ebp,%edi,1)
movsbl (%ecx),%eax
mov    %eax,(%esp)
call   8055470 <fchmod@plt+0xc0e0>
test   %eax,%eax
jne    8055660 <fchmod@plt+0xc2d0>
mov    0x20(%esp),%eax
cmp    %eax,0x14(%esp)
mov    0x18(%esp),%edx
jle    80555c8 <fchmod@plt+0xc238>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d484,%eax
mov    %eax,0x1c(%esp)
cmp    %edx,%esi
jge    805571e <fchmod@plt+0xc38e>
mov    0x806d494,%ecx
mov    %edx,%eax
mov    0x806d490,%ebx
sub    %esi,%eax
mov    %edi,0x18(%esp)
mov    %eax,0x24(%esp)
xor    %eax,%eax
lea    (%ecx,%esi,1),%ebp
add    %edi,%ecx
mov    %ecx,0x28(%esp)
mov    0x806d490,%ecx
add    %esi,%ebx
mov    %esi,0x20(%esp)
mov    0x24(%esp),%esi
mov    %edx,0x24(%esp)
add    %edi,%ecx
mov    0x28(%esp),%edi
lea    0x0(%esi),%esi
movzbl 0x0(%ebp,%eax,1),%edx
mov    %dl,(%edi,%eax,1)
movzbl (%ebx,%eax,1),%edx
mov    %dl,(%ecx,%eax,1)
add    $0x1,%eax
cmp    %esi,%eax
jne    80556f8 <fchmod@plt+0xc368>
mov    0x18(%esp),%edi
mov    0x24(%esp),%edx
mov    0x20(%esp),%esi
add    %edx,%edi
sub    %esi,%edi
mov    0x14(%esp),%edx
mov    0x1c(%esp),%eax
mov    %edi,0x806d488
add    %edx,0x806d48c
sub    %edx,%eax
mov    %eax,0x806d484
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c7e0,%eax
test   %eax,%eax
je     80555f7 <fchmod@plt+0xc267>
mov    %edx,(%esp)
call   804cb80 <fchmod@plt+0x37f0>
lea    (%esi,%eax,1),%ebx
mov    0x806d488,%eax
cmp    %eax,%ebx
jg     8055931 <fchmod@plt+0xc5a1>
mov    0x806d494,%eax
add    %esi,%eax
mov    %eax,(%esp)
call   804cc50 <fchmod@plt+0x38c0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   804cff0 <fchmod@plt+0x3c60>
test   %eax,%eax
je     8055898 <fchmod@plt+0xc508>
mov    %ebx,%ecx
mov    %ebp,0x2c(%esp)
movl   $0x0,0x1c(%esp)
jmp    8055541 <fchmod@plt+0xc1b1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x806d490,%eax
movsbl (%eax,%esi,1),%eax
mov    %eax,(%esp)
call   804af90 <fchmod@plt+0x1c00>
test   %eax,%eax
jne    805558b <fchmod@plt+0xc1fb>
mov    0x806d490,%eax
movsbl (%eax,%esi,1),%eax
call   8054e90 <fchmod@plt+0xbb00>
add    %eax,0x1c(%esp)
cmp    %ebx,0x806d488
jg     8055880 <fchmod@plt+0xc4f0>
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804af90 <fchmod@plt+0x1c00>
test   %eax,%eax
je     805558b <fchmod@plt+0xc1fb>
mov    %ebp,%eax
call   8054e50 <fchmod@plt+0xbac0>
add    %eax,0x1c(%esp)
mov    0x806d488,%eax
cmp    %ebx,%eax
mov    %eax,%edx
mov    %eax,0x18(%esp)
jle    8055596 <fchmod@plt+0xc206>
mov    0x28(%esp),%eax
call   8054e90 <fchmod@plt+0xbb00>
add    %eax,0x1c(%esp)
jmp    805558b <fchmod@plt+0xc1fb>
nop
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d030 <fchmod@plt+0x3ca0>
lea    0x1(%esi),%ecx
test   %eax,%eax
je     8055858 <fchmod@plt+0xc4c8>
movl   $0xfffffffe,0x1c(%esp)
movl   $0x0,0x2c(%esp)
jmp    8055541 <fchmod@plt+0xc1b1>
movl   $0xffffffff,0x1c(%esp)
movl   $0x0,0x2c(%esp)
jmp    8055541 <fchmod@plt+0xc1b1>
lea    0x0(%esi),%esi
mov    0x806d484,%eax
mov    %eax,0x1c(%esp)
jmp    805571e <fchmod@plt+0xc38e>
xchg   %ax,%ax
mov    0x806d490,%eax
movsbl (%eax,%esi,1),%eax
call   8054e50 <fchmod@plt+0xbac0>
add    %eax,0x1c(%esp)
jmp    80557e7 <fchmod@plt+0xc457>
nop
mov    0x2c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d050 <fchmod@plt+0x3cc0>
test   %eax,%eax
jne    805578e <fchmod@plt+0xc3fe>
mov    %ebp,(%esp)
call   804d030 <fchmod@plt+0x3ca0>
test   %eax,%eax
je     80558de <fchmod@plt+0xc54e>
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    $0x1,%eax
mov    %eax,0x24(%esp)
je     80558f8 <fchmod@plt+0xc568>
mov    %ebp,0x2c(%esp)
movl   $0x2,0x1c(%esp)
jmp    805554f <fchmod@plt+0xc1bf>
mov    %ebx,%ecx
mov    %ebp,0x2c(%esp)
movl   $0x1,0x1c(%esp)
jmp    8055541 <fchmod@plt+0xc1b1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d490,%eax
mov    %edi,%edx
addl   $0x1,0x14(%esp)
movl   $0x20,0x2c(%esp)
movzbl (%eax,%esi,1),%ecx
mov    %ebx,%esi
mov    %cl,(%eax,%edi,1)
mov    0x806d494,%eax
add    $0x1,%edi
movb   $0x20,(%eax,%edx,1)
mov    0x806d488,%eax
mov    %eax,0x18(%esp)
mov    %eax,%edx
jmp    80555ba <fchmod@plt+0xc22a>
mov    0x806d484,%edx
mov    %edx,0x1c(%esp)
mov    %eax,%edx
jmp    80556b1 <fchmod@plt+0xc321>
mov    %ebx,0x1c(%esp)
mov    %esi,%edi
movl   $0x0,0x14(%esp)
jmp    805571e <fchmod@plt+0xc38e>
mov    %ebx,0x1c(%esp)
mov    0x18(%esp),%edx
mov    %esi,%edi
movl   $0x0,0x14(%esp)
jmp    80556b1 <fchmod@plt+0xc321>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d484,%eax
jmp    80554c0 <fchmod@plt+0xc130>
lea    0x0(%esi),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x64(%esp),%edx
mov    %eax,0x18(%esp)
mov    %esi,%eax
and    $0x3,%eax
mov    %edx,0x1c(%esp)
je     80559a9 <fchmod@plt+0xc619>
mov    %eax,0x806d47c
mov    0x18(%esp),%eax
lea    0x3c(%esp),%edi
mov    0x1c(%esp),%edx
mov    %edi,0x14(%esp)
movl   $0x0,0x10(%esp)
add    $0x1,%eax
adc    $0x0,%edx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805c1d0 <error+0x2160>
test   %eax,%eax
je     8055a1b <fchmod@plt+0xc68b>
cmp    $0x10,%esi
je     8055a1b <fchmod@plt+0xc68b>
mov    0x806ffc8,%ecx
mov    0x806ffcc,%edx
mov    %ecx,%eax
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8055a18 <fchmod@plt+0xc688>
cmp    %edx,0x1c(%esp)
jl     8055a18 <fchmod@plt+0xc688>
jg     8055be8 <fchmod@plt+0xc858>
cmp    %ecx,0x18(%esp)
ja     8055be8 <fchmod@plt+0xc858>
nop
or     $0x40,%esi
cmpl   $0x2,0x807002c
je     8055b08 <fchmod@plt+0xc778>
mov    0x806d494,%eax
mov    0x806d488,%edx
movl   $0xffffffff,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
add    %eax,%edx
mov    %edx,0x3c(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebp,%eax
call   8054fa0 <fchmod@plt+0xbc10>
mov    %eax,0x24(%esp)
cmpl   $0x1,0x807002c
jne    8055b82 <fchmod@plt+0xc7f2>
test   %ebx,%ebx
je     8055bb8 <fchmod@plt+0xc828>
movsbl (%ebx),%eax
mov    %eax,(%esp)
call   804cb80 <fchmod@plt+0x37f0>
mov    %eax,%ebp
mov    0x806d488,%edi
mov    0x806d440,%eax
lea    (%edi,%ebp,1),%edx
sub    $0x6,%eax
cmp    %eax,%edx
jge    8055bd0 <fchmod@plt+0xc840>
lea    -0x1(%ebp),%eax
test   %ebp,%ebp
mov    %eax,0x28(%esp)
jle    8055aeb <fchmod@plt+0xc75b>
mov    0x806d490,%eax
xor    %edx,%edx
mov    0x806d494,%ecx
add    %edi,%eax
mov    %eax,0x2c(%esp)
mov    %esi,%eax
mov    0x2c(%esp),%esi
add    %edi,%ecx
mov    %al,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx,%edx,1),%eax
mov    %al,(%ecx,%edx,1)
movzbl 0x18(%esp),%eax
mov    %al,(%esi,%edx,1)
add    $0x1,%edx
cmp    %ebp,%edx
jne    8055ac8 <fchmod@plt+0xc738>
mov    0x28(%esp),%eax
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x806d488
mov    0x24(%esp),%eax
xor    %esi,%esi
add    %eax,0x806d484
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d494,%eax
mov    0x806d488,%edx
add    %eax,%edx
mov    %edx,0x3c(%esp)
jmp    8055b57 <fchmod@plt+0xc7c7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %edi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %eax,%edx
and    $0x7f,%dl
cmp    $0x1b,%edx
je     8055c03 <fchmod@plt+0xc873>
mov    %eax,(%esp)
call   8055470 <fchmod@plt+0xc0e0>
test   %eax,%eax
je     8055b5b <fchmod@plt+0xc7cb>
mov    0x806d494,%eax
mov    0x3c(%esp),%edx
cmp    %eax,%edx
ja     8055b20 <fchmod@plt+0xc790>
cmpl   $0x2,0x807002c
jne    8055a28 <fchmod@plt+0xc698>
mov    %ebp,%eax
and    $0x7f,%al
cmp    $0x1b,%eax
jne    8055a28 <fchmod@plt+0xc698>
movl   $0x0,0x24(%esp)
mov    $0x10,%esi
mov    0x24(%esp),%eax
add    0x806d484,%eax
mov    %eax,0x18(%esp)
mov    %esi,%eax
call   8054e50 <fchmod@plt+0xbac0>
add    0x18(%esp),%eax
cmp    0x806ff70,%eax
jle    8055a69 <fchmod@plt+0xc6d9>
add    $0x4c,%esp
mov    $0x1,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%eax
mov    %edi,%ebx
mov    %al,0x3c(%esp)
mov    $0x1,%ebp
jmp    8055a7e <fchmod@plt+0xc6ee>
lea    0x0(%esi),%esi
call   8054ed0 <fchmod@plt+0xbb40>
test   %eax,%eax
je     8055a97 <fchmod@plt+0xc707>
lea    0x0(%esi),%esi
jmp    8055ba7 <fchmod@plt+0xc817>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
or     $0x40,%esi
mov    0x1c(%esp),%edx
mov    %eax,0x806ffc8
mov    %edx,0x806ffcc
jmp    8055a1b <fchmod@plt+0xc68b>
cmp    $0x7f,%ebp
jbe    8055c66 <fchmod@plt+0xc8d6>
mov    %ebp,(%esp)
call   8055470 <fchmod@plt+0xc0e0>
test   %eax,%eax
mov    %eax,%esi
jne    8055c71 <fchmod@plt+0xc8e1>
mov    0x806d494,%edx
mov    0x806d488,%eax
add    %edx,%eax
mov    %eax,0x3c(%esp)
jmp    8055c37 <fchmod@plt+0xc8a7>
lea    0x0(%esi,%eiz,1),%esi
and    $0x7f,%al
cmp    $0x1b,%eax
je     8055c59 <fchmod@plt+0xc8c9>
mov    %edx,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %edi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    0x3c(%esp),%ecx
mov    0x806d494,%edx
cmp    %edx,%ecx
ja     8055c30 <fchmod@plt+0xc8a0>
sub    %edx,%ecx
mov    %ecx,0x806d488
jmp    8055af7 <fchmod@plt+0xc767>
mov    %ebp,%eax
call   80550d0 <fchmod@plt+0xbd40>
test   %eax,%eax
je     8055c08 <fchmod@plt+0xc878>
movl   $0x0,0x24(%esp)
mov    $0x10,%esi
jmp    8055a5c <fchmod@plt+0xc6cc>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804c910 <fchmod@plt+0x3580>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80491a0 <strlen@plt>
mov    0x806b460,%edx
xor    %ecx,%ecx
add    0x806d484,%eax
lea    -0x1(%eax),%ebp
mov    $0x20,%eax
call   8054fa0 <fchmod@plt+0xbc10>
add    %eax,%ebp
mov    0x806b460,%eax
call   8054e50 <fchmod@plt+0xbac0>
add    %eax,%ebp
cmp    0x806ff70,%ebp
jle    8055cfa <fchmod@plt+0xc96a>
jmp    8055d10 <fchmod@plt+0xc980>
xor    %ecx,%ecx
mov    $0x20,%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055980 <fchmod@plt+0xc5f0>
test   %eax,%eax
jne    8055d10 <fchmod@plt+0xc980>
add    $0x1,%ebx
movsbl (%ebx),%eax
test   %al,%al
jne    8055ce0 <fchmod@plt+0xc950>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
mov    %eax,0x8(%esp)
mov    0x806d450,%eax
mov    %edx,0xc(%esp)
test   %eax,%eax
jg     8055d4b <fchmod@plt+0xc9bb>
jmp    8055d70 <fchmod@plt+0xc9e0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %ebx,0x806d450
jle    8055d70 <fchmod@plt+0xc9e0>
movsbl 0x806d458(%ebx),%eax
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
call   8055c90 <fchmod@plt+0xc900>
test   %eax,%eax
je     8055d40 <fchmod@plt+0xc9b0>
mov    0x806d450,%eax
add    $0x18,%esp
sub    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
cmp    $0x8,%eax
mov    %edx,0xc(%esp)
mov    0x40(%esp),%edi
mov    0x44(%esp),%ebp
je     8055f08 <fchmod@plt+0xcb78>
cmpl   $0x0,0x806d480
jle    80560c8 <fchmod@plt+0xcd38>
mov    0x806c7e0,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
neg    %eax
mov    %eax,0x806d480
mov    0x806d494,%eax
add    0x806d488,%eax
mov    %eax,(%esp)
call   804cc50 <fchmod@plt+0x38c0>
mov    0x806d488,%ecx
mov    0x806d490,%edx
movzbl (%edx,%ecx,1),%edx
cmp    %eax,%ebx
movsbl %dl,%esi
je     8056060 <fchmod@plt+0xccd0>
cmp    $0x5f,%ebx
je     80560f8 <fchmod@plt+0xcd68>
cmp    $0x5f,%eax
je     8056098 <fchmod@plt+0xcd08>
cmp    $0x9,%ebx
je     8056018 <fchmod@plt+0xcc88>
mov    0x806c7e0,%eax
test   %eax,%eax
je     80560f0 <fchmod@plt+0xcd60>
cmp    $0x7f,%ebx
ja     8055e60 <fchmod@plt+0xcad0>
mov    %ebx,%eax
mov    %eax,(%esp)
call   804c8f0 <fchmod@plt+0x3560>
test   %eax,%eax
jne    805602f <fchmod@plt+0xcc9f>
mov    0x806c7e0,%eax
test   %eax,%eax
jne    8055e60 <fchmod@plt+0xcad0>
mov    0xc(%esp),%ecx
mov    %esi,%edx
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,%eax
call   8055980 <fchmod@plt+0xc5f0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x807002c
je     8055e35 <fchmod@plt+0xcaa5>
mov    %ebx,(%esp)
call   804d010 <fchmod@plt+0x3c80>
test   %eax,%eax
je     8055e35 <fchmod@plt+0xcaa5>
mov    %ebx,(%esp)
call   804c9c0 <fchmod@plt+0x3630>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80491a0 <strlen@plt>
mov    0x806b460,%edx
xor    %ecx,%ecx
add    0x806d484,%eax
lea    -0x1(%eax),%esi
mov    $0x20,%eax
call   8054fa0 <fchmod@plt+0xbc10>
add    %eax,%esi
mov    0x806b460,%eax
call   8054e50 <fchmod@plt+0xbac0>
add    %eax,%esi
cmp    0x806ff70,%esi
jg     8055ef8 <fchmod@plt+0xcb68>
movsbl (%ebx),%eax
test   %al,%al
je     8056008 <fchmod@plt+0xcc78>
mov    %edi,%esi
mov    %ebp,%edi
jmp    8055ede <fchmod@plt+0xcb4e>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movsbl (%ebx),%eax
test   %al,%al
je     8056008 <fchmod@plt+0xcc78>
xor    %ecx,%ecx
mov    $0x20,%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055980 <fchmod@plt+0xc5f0>
test   %eax,%eax
je     8055ed0 <fchmod@plt+0xcb40>
lea    0x0(%esi),%esi
mov    $0x1,%eax
jmp    8055e51 <fchmod@plt+0xcac1>
lea    0x0(%esi),%esi
mov    0x8070028,%eax
cmp    $0x2,%eax
je     805602f <fchmod@plt+0xcc9f>
mov    0x806d488,%ecx
mov    0x806d474,%edx
cmp    %edx,%ecx
jle    80560a8 <fchmod@plt+0xcd18>
cmp    0x806d484,%edx
jge    80560a8 <fchmod@plt+0xcd18>
mov    0x806d490,%ebx
testb  $0x30,-0x1(%ebx,%ecx,1)
jne    80560a8 <fchmod@plt+0xcd18>
cmp    $0x1,%eax
je     8056259 <fchmod@plt+0xcec9>
test   %eax,%eax
jne    8056008 <fchmod@plt+0xcc78>
mov    0x806d494,%eax
lea    0x1c(%esp),%esi
movl   $0xffffffff,0x4(%esp)
mov    %esi,(%esp)
add    %eax,%ecx
add    %edx,%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %eax,%ebx
jmp    8055fee <fchmod@plt+0xcc5e>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x806d484,%edx
jge    8055ffd <fchmod@plt+0xcc6d>
mov    0x806d490,%ecx
testb  $0x30,-0x1(%ecx,%eax,1)
jne    8055ffd <fchmod@plt+0xcc6d>
mov    0x806d494,%eax
mov    0x1c(%esp),%ecx
movl   $0xffffffff,0x4(%esp)
mov    %esi,(%esp)
add    %eax,%edx
sub    %eax,%ecx
mov    %edx,0x8(%esp)
mov    %ecx,0x806d488
call   804cf10 <fchmod@plt+0x3b80>
mov    0x806d490,%edx
mov    %eax,%edi
mov    0x806d488,%eax
mov    %edi,%ecx
movsbl (%edx,%eax,1),%edx
mov    %ebx,%eax
call   8054fa0 <fchmod@plt+0xbc10>
sub    %eax,0x806d484
test   %eax,%eax
jg     8056278 <fchmod@plt+0xcee8>
mov    %edi,%ebx
mov    0x806d488,%eax
mov    0x806d474,%edx
cmp    %eax,%edx
jl     8055f88 <fchmod@plt+0xcbf8>
xor    %eax,%eax
mov    %eax,0x806d480
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8070028,%eax
test   %eax,%eax
js     8056008 <fchmod@plt+0xcc78>
cmp    $0x1,%eax
jle    8056110 <fchmod@plt+0xcd80>
cmp    $0x2,%eax
jne    8056008 <fchmod@plt+0xcc78>
mov    0x807002c,%eax
cmp    $0x1,%eax
je     8056081 <fchmod@plt+0xccf1>
cmp    $0x2,%eax
je     8056078 <fchmod@plt+0xcce8>
movsbl %bl,%eax
mov    %edi,%edx
mov    %ebp,%ecx
call   8055c90 <fchmod@plt+0xc900>
test   %eax,%eax
setne  %al
add    $0x2c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x5f,%ebx
je     80561e8 <fchmod@plt+0xce58>
or     $0x2,%edx
movsbl %dl,%esi
jmp    8055dff <fchmod@plt+0xca6f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
and    $0x7f,%al
cmp    $0x1b,%eax
jne    805603e <fchmod@plt+0xccae>
mov    %edi,(%esp)
mov    0xc(%esp),%ecx
xor    %edx,%edx
mov    %ebp,0x4(%esp)
jmp    8055e42 <fchmod@plt+0xcab2>
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0x1,%edx
movsbl %dl,%esi
jmp    8055dff <fchmod@plt+0xca6f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%edx
mov    %ebp,%ecx
mov    $0x8,%eax
call   8055c90 <fchmod@plt+0xc900>
test   %eax,%eax
setne  %al
add    $0x2c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x0,%esi
je     8055dff <fchmod@plt+0xca6f>
mov    %eax,(%esp)
call   804cff0 <fchmod@plt+0x3c60>
test   %eax,%eax
je     8056223 <fchmod@plt+0xce93>
mov    0x806d47c,%esi
jmp    8055dff <fchmod@plt+0xca6f>
xchg   %ax,%ax
movsbl %bl,%eax
jmp    8055e1c <fchmod@plt+0xca8c>
add    0x806d494,%ecx
or     $0x1,%edx
movsbl %dl,%esi
mov    %eax,%ebx
mov    %ecx,0xc(%esp)
jmp    8055dff <fchmod@plt+0xca6f>
nop
mov    0x806d484,%eax
mov    0x806ba4c,%ecx
mov    %eax,0xc(%esp)
add    0x806d48c,%eax
sub    0x806d474,%eax
cmp    $0x1,%ecx
mov    0x806d23c(,%ecx,4),%edx
jle    8056168 <fchmod@plt+0xcdd8>
cmp    %edx,%eax
jge    8056168 <fchmod@plt+0xcdd8>
sub    $0x2,%ecx
xchg   %ax,%ax
cmp    0x806d240(,%ecx,4),%eax
jge    805621b <fchmod@plt+0xce8b>
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
jne    8056140 <fchmod@plt+0xcdb0>
xor    %ecx,%ecx
mov    0x806d240(,%ecx,4),%ebx
sub    %eax,%ebx
jmp    8056175 <fchmod@plt+0xcde5>
lea    0x0(%esi),%esi
mov    0x806ba48,%ebx
sub    %edx,%eax
cltd
idiv   %ebx
sub    %edx,%ebx
xor    %ecx,%ecx
mov    %esi,%edx
mov    $0x20,%eax
call   8054fa0 <fchmod@plt+0xbc10>
mov    0xc(%esp),%ecx
lea    -0x1(%ecx,%ebx,1),%edx
add    %edx,%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
call   8054e50 <fchmod@plt+0xbac0>
add    0xc(%esp),%eax
cmp    0x806ff70,%eax
jg     8055ef8 <fchmod@plt+0xcb68>
mov    %ebp,%edx
mov    %esi,%ebp
mov    %edi,%esi
mov    %edx,%edi
jmp    80561c3 <fchmod@plt+0xce33>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
test   %ebx,%ebx
jle    8056008 <fchmod@plt+0xcc78>
mov    %esi,(%esp)
mov    $0x805ecc0,%ecx
mov    %ebp,%edx
mov    %edi,0x4(%esp)
mov    $0x20,%eax
call   8055980 <fchmod@plt+0xc5f0>
test   %eax,%eax
je     80561b8 <fchmod@plt+0xce28>
jmp    8055ef8 <fchmod@plt+0xcb68>
lea    0x0(%esi,%eiz,1),%esi
test   $0x3,%dl
nop
lea    0x0(%esi,%eiz,1),%esi
je     8056208 <fchmod@plt+0xce78>
or     $0x3,%edx
movsbl %dl,%esi
mov    $0x5f,%eax
jmp    8055e1c <fchmod@plt+0xca8c>
lea    0x0(%esi),%esi
mov    0x806d47c,%eax
or     %eax,%esi
test   %eax,%eax
jne    80561f8 <fchmod@plt+0xce68>
or     $0x2,%edx
movsbl %dl,%esi
jmp    80561f8 <fchmod@plt+0xce68>
add    $0x1,%ecx
jmp    8056157 <fchmod@plt+0xcdc7>
mov    0x806d494,%eax
add    0x806d488,%eax
mov    %eax,(%esp)
call   804cc50 <fchmod@plt+0x38c0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d050 <fchmod@plt+0x3cc0>
test   %eax,%eax
jne    80560e3 <fchmod@plt+0xcd53>
movl   $0x0,0x806d480
00
jmp    8055dff <fchmod@plt+0xca6f>
xor    %ecx,%ecx
xor    %edx,%edx
mov    %edi,(%esp)
mov    $0x8,%al
mov    %ebp,0x4(%esp)
call   8055980 <fchmod@plt+0xc5f0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    8055e51 <fchmod@plt+0xcac1>
mov    $0x1,%eax
jmp    8055fff <fchmod@plt+0xcc6f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
mov    0x20(%esp),%ebx
mov    %eax,0x8(%esp)
movsbl 0x806d470,%eax
mov    %edx,0xc(%esp)
test   %al,%al
jne    8056358 <fchmod@plt+0xcfc8>
cmp    $0xd,%bl
je     8056390 <fchmod@plt+0xd000>
mov    0x806c7e0,%esi
test   %esi,%esi
je     80563f0 <fchmod@plt+0xd060>
mov    0x806d454,%eax
movsbl %bl,%edi
test   %eax,%eax
jne    8056318 <fchmod@plt+0xcf88>
test   %bl,%bl
movl   $0x1,0x806d450
00
mov    %bl,0x806d458
js     8056470 <fchmod@plt+0xd0e0>
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,(%esp)
mov    %edi,%eax
mov    %edx,0x4(%esp)
xor    %edx,%edx
call   8055d80 <fchmod@plt+0xc9f0>
mov    %eax,%esi
jmp    805640b <fchmod@plt+0xd07b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%edx
and    $0xc0,%edx
add    $0xffffff80,%edx
je     80564a8 <fchmod@plt+0xd118>
mov    0x806d448,%eax
mov    0x806d44c,%edx
call   8055d20 <fchmod@plt+0xc990>
movl   $0x0,0x806d454
00
mov    %eax,%esi
test   %esi,%esi
lea    0x1(%eax),%eax
mov    %eax,0x806d450
je     80562dc <fchmod@plt+0xcf4c>
jmp    805640b <fchmod@plt+0xd07b>
xchg   %ax,%ax
mov    0x806d468,%esi
xor    %edx,%edx
mov    0x806d46c,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055d80 <fchmod@plt+0xc9f0>
test   %eax,%eax
jne    8056441 <fchmod@plt+0xd0b1>
cmp    $0xd,%bl
movb   $0x0,0x806d470
jne    80562c2 <fchmod@plt+0xcf32>
lea    0x0(%esi),%esi
mov    0x8070028,%eax
test   %eax,%eax
jne    80562c2 <fchmod@plt+0xcf32>
mov    0x806d454,%edi
test   %edi,%edi
jle    80563cf <fchmod@plt+0xd03f>
mov    0x806d44c,%edx
mov    0x806d448,%eax
call   8055d20 <fchmod@plt+0xc990>
movl   $0x0,0x806d454
00
mov    %eax,%edx
test   %edx,%edx
lea    0x1(%eax),%eax
mov    %eax,0x806d450
jne    8056446 <fchmod@plt+0xd0b6>
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
movb   $0xd,0x806d470
mov    %eax,0x806d468
xor    %eax,%eax
mov    %edx,0x806d46c
jmp    8056446 <fchmod@plt+0xd0b6>
lea    0x0(%esi),%esi
movsbl %bl,%eax
mov    0x8(%esp),%ecx
xor    %edx,%edx
mov    0xc(%esp),%ebx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   8055d80 <fchmod@plt+0xc9f0>
mov    %eax,%esi
mov    0x806d48c,%edx
cmp    0x806ffd0,%edx
jge    8056433 <fchmod@plt+0xd0a3>
mov    0x806ff70,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
cmp    0x806d484,%eax
jl     80564f8 <fchmod@plt+0xd168>
test   %esi,%esi
je     8056450 <fchmod@plt+0xd0c0>
mov    0x806c7e0,%ecx
test   %ecx,%ecx
jne    8056460 <fchmod@plt+0xd0d0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d450,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
and    $0xc0,%eax
cmp    $0xc0,%eax
jne    8056490 <fchmod@plt+0xd100>
mov    %edi,%eax
and    $0xfe,%eax
cmp    $0xfe,%eax
jne    8056518 <fchmod@plt+0xd188>
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
call   8055d20 <fchmod@plt+0xc990>
mov    %eax,%esi
jmp    805640b <fchmod@plt+0xd07b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d450,%ecx
lea    0x1(%ecx),%edx
cmp    %edx,%eax
mov    %edx,0x806d450
mov    %bl,0x806d458(%ecx)
jg     8056450 <fchmod@plt+0xd0c0>
movl   $0x806d458,(%esp)
call   804cba0 <fchmod@plt+0x3810>
test   %eax,%eax
jne    8056540 <fchmod@plt+0xd1b0>
mov    0x806d448,%eax
mov    0x806d44c,%edx
call   8055d20 <fchmod@plt+0xc990>
mov    %eax,%esi
mov    %eax,0x806d450
movl   $0x0,0x806d454
00
jmp    805640b <fchmod@plt+0xd07b>
nop
mov    0x806d488,%eax
mov    0x806d494,%ecx
movb   $0x0,(%ecx,%eax,1)
mov    0x806ffd0,%eax
sub    %edx,%eax
call   80554c0 <fchmod@plt+0xc130>
jmp    8056433 <fchmod@plt+0xd0a3>
mov    %edi,(%esp)
call   804cb80 <fchmod@plt+0x37f0>
mov    0xc(%esp),%edx
mov    %edx,0x806d44c
mov    %eax,0x806d454
mov    0x8(%esp),%eax
mov    %eax,0x806d448
xor    %eax,%eax
jmp    8056446 <fchmod@plt+0xd0b6>
nop
movl   $0x806d458,(%esp)
mov    0x806d448,%esi
mov    0x806d44c,%edi
call   804cc50 <fchmod@plt+0x38c0>
mov    $0x806d458,%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055d80 <fchmod@plt+0xc9f0>
mov    %eax,%esi
jmp    80564e8 <fchmod@plt+0xd158>
mov    0x806d454,%edx
xor    %eax,%eax
test   %edx,%edx
jle    805659c <fchmod@plt+0xd20c>
sub    $0xc,%esp
mov    0x806d448,%eax
mov    0x806d44c,%edx
call   8055d20 <fchmod@plt+0xc990>
movl   $0x0,0x806d454
00
add    $0xc,%esp
repz ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8056570 <fchmod@plt+0xd1e0>
movsbl 0x806d470,%eax
test   %al,%al
je     80565d8 <fchmod@plt+0xd248>
cmp    $0xd,%al
je     8056698 <fchmod@plt+0xd308>
mov    0x806d468,%esi
xor    %edx,%edx
mov    0x806d46c,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8055d80 <fchmod@plt+0xc9f0>
mov    0x806d48c,%edx
mov    0x806ffd0,%eax
cmp    %eax,%edx
jl     80566b0 <fchmod@plt+0xd320>
cmpl   $0x2,0x807002c
je     80566c4 <fchmod@plt+0xd334>
mov    0x806d494,%ecx
mov    0x806d490,%edx
mov    0x806d488,%eax
mov    0x806ff70,%edi
cmp    %edi,0x806d484
jl     8056678 <fchmod@plt+0xd2e8>
mov    0x806ff80,%esi
test   %esi,%esi
je     8056678 <fchmod@plt+0xd2e8>
mov    0x20(%esp),%ebx
test   %ebx,%ebx
jne    8056668 <fchmod@plt+0xd2d8>
cmpl   $0x1,0x807002c
je     8056678 <fchmod@plt+0xd2e8>
mov    0x806ff50,%esi
test   %esi,%esi
je     8056688 <fchmod@plt+0xd2f8>
mov    0x24(%esp),%ebx
test   %ebx,%ebx
je     8056688 <fchmod@plt+0xd2f8>
lea    0x2(%eax),%ebx
movb   $0x20,(%ecx,%eax,1)
mov    %ebx,0x806d488
movb   $0x0,(%edx,%eax,1)
movb   $0x8,0x1(%ecx,%eax,1)
movb   $0x0,0x1(%edx,%eax,1)
mov    %ebx,%eax
jmp    8056688 <fchmod@plt+0xd2f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff50,%edi
test   %edi,%edi
je     8056629 <fchmod@plt+0xd299>
lea    0x0(%esi),%esi
movb   $0xa,(%ecx,%eax,1)
movb   $0x0,(%edx,%eax,1)
add    $0x1,%eax
mov    %eax,0x806d488
movb   $0x0,(%ecx,%eax,1)
movb   $0x0,(%edx,%eax,1)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x20(%esp),%edi
test   %edi,%edi
jne    80565d8 <fchmod@plt+0xd248>
jmp    80565be <fchmod@plt+0xd22e>
lea    0x0(%esi,%eiz,1),%esi
sub    %edx,%eax
call   80554c0 <fchmod@plt+0xc130>
cmpl   $0x2,0x807002c
jne    80565f8 <fchmod@plt+0xd268>
mov    $0x6d,%eax
call   80550d0 <fchmod@plt+0xbd40>
test   %eax,%eax
je     80565f8 <fchmod@plt+0xd268>
mov    0x806d488,%ebx
mov    $0x8062406,%edi
mov    $0x1b,%eax
mov    0x806d494,%ecx
mov    0x806d490,%edx
sub    %ebx,%edi
jmp    80566fa <fchmod@plt+0xd36a>
xchg   %ax,%ax
mov    %esi,%ebx
mov    %al,(%ecx,%ebx,1)
movzbl 0x1(%ebx,%edi,1),%eax
lea    0x1(%ebx),%esi
movb   $0x10,-0x1(%edx,%esi,1)
test   %al,%al
jne    80566f8 <fchmod@plt+0xd368>
mov    %esi,0x806d488
mov    %esi,%eax
jmp    8056609 <fchmod@plt+0xd279>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x806d494,%edx
mov    %al,(%edx)
mov    0x806d490,%eax
movb   $0x40,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806d478,%ecx
mov    0x4(%esp),%eax
test   %ecx,%ecx
je     8056770 <fchmod@plt+0xd3e0>
mov    0x8070048,%edx
test   %edx,%edx
je     8056793 <fchmod@plt+0xd403>
test   %eax,%eax
jne    8056790 <fchmod@plt+0xd400>
mov    0x8(%esp),%eax
movl   $0x2,(%eax)
mov    $0x7e,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d490,%edx
mov    0x8(%esp),%ecx
movsbl (%edx,%eax,1),%edx
mov    %edx,(%ecx)
mov    0x806d494,%edx
movzbl (%edx,%eax,1),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
mov    0x8(%esp),%ecx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xa,%eax
movl   $0x0,(%ecx)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x1,0x806d478
00
movl   $0x0,0x806d48c
00
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
mov    0x34(%esp),%eax
mov    0x38(%esp),%edi
mov    0x3c(%esp),%esi
mov    %edx,%ecx
and    %eax,%ecx
cmp    $0xffffffff,%ecx
je     80568b0 <fchmod@plt+0xd520>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    80568b0 <fchmod@plt+0xd520>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     80568b0 <fchmod@plt+0xd520>
cmp    $0xa,%eax
je     80568c2 <fchmod@plt+0xd532>
xor    %ebx,%ebx
testb  $0x3,0x8070078
je     8056846 <fchmod@plt+0xd4b6>
jmp    80568c2 <fchmod@plt+0xd532>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%eax
je     8056875 <fchmod@plt+0xd4e5>
testb  $0x3,0x8070078
jne    8056875 <fchmod@plt+0xd4e5>
mov    0x806d440,%eax
sub    $0x1,%eax
cmp    %ebx,%eax
jg     805685b <fchmod@plt+0xd4cb>
call   8054ed0 <fchmod@plt+0xbb40>
test   %eax,%eax
jne    80568a0 <fchmod@plt+0xd510>
mov    0x806d494,%eax
mov    %ebp,%edx
add    $0x1,%ebx
mov    %dl,-0x1(%eax,%ebx,1)
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
jne    8056838 <fchmod@plt+0xd4a8>
mov    %ebx,%ebp
call   804b9f0 <fchmod@plt+0x2660>
mov    0x806d494,%ecx
test   %edi,%edi
movb   $0x0,(%ecx,%ebp,1)
je     805688c <fchmod@plt+0xd4fc>
mov    %ecx,(%edi)
test   %esi,%esi
je     8056892 <fchmod@plt+0xd502>
mov    %ebx,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804b9f0 <fchmod@plt+0x2660>
mov    %ebx,%ebp
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
jmp    805687c <fchmod@plt+0xd4ec>
nop
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
xor    %ebx,%ebx
jmp    8056877 <fchmod@plt+0xd4e7>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    0x38(%esp),%esi
cmp    $0x0,%edx
jle    80569f8 <fchmod@plt+0xd668>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8056a03 <fchmod@plt+0xd673>
mov    0x806d440,%eax
mov    0x806d494,%edx
mov    %esi,0x38(%esp)
lea    -0x1(%eax),%ebx
movb   $0x0,-0x1(%edx,%eax,1)
mov    %ebx,%esi
jmp    8056935 <fchmod@plt+0xd5a5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d494,%ebp
sub    $0x1,%esi
mov    %bl,0x0(%ebp,%esi,1)
call   804bdf0 <fchmod@plt+0x2a60>
cmp    $0xa,%eax
mov    %eax,%ebx
je     80569a8 <fchmod@plt+0xd618>
testb  $0x3,0x8070078
jne    80569a8 <fchmod@plt+0xd618>
cmp    $0xffffffff,%eax
je     80569e8 <fchmod@plt+0xd658>
test   %esi,%esi
jg     8056928 <fchmod@plt+0xd598>
mov    0x806d440,%edi
call   8054ed0 <fchmod@plt+0xbb40>
test   %eax,%eax
jne    80569a8 <fchmod@plt+0xd618>
mov    0x806d494,%ebp
mov    0x806d440,%ecx
lea    -0x1(%ebp,%edi,1),%edx
cmp    %edx,%ebp
lea    -0x1(%ebp,%ecx,1),%eax
ja     8056a0f <fchmod@plt+0xd67f>
lea    -0x1(%ebp),%ecx
mov    %ebx,%esi
nop
movzbl (%edx),%ebx
sub    $0x1,%edx
sub    $0x1,%eax
mov    %bl,0x1(%eax)
cmp    %ecx,%edx
jne    8056988 <fchmod@plt+0xd5f8>
mov    0x806d440,%edx
mov    %esi,%ebx
mov    %edx,%esi
sub    %edi,%esi
jmp    805692e <fchmod@plt+0xd59e>
xchg   %ax,%ax
mov    %esi,%ebx
mov    0x38(%esp),%esi
call   804b9f0 <fchmod@plt+0x2660>
add    $0x1,%eax
adc    $0x0,%edx
test   %esi,%esi
je     80569c7 <fchmod@plt+0xd637>
mov    0x806d494,%ecx
add    %ebx,%ecx
mov    %ecx,(%esi)
mov    0x3c(%esp),%esi
test   %esi,%esi
je     80569dd <fchmod@plt+0xd64d>
mov    0x3c(%esp),%edi
not    %ebx
add    0x806d440,%ebx
mov    %ebx,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,%ebx
xor    %eax,%eax
mov    0x38(%esp),%esi
xor    %edx,%edx
jmp    80569b9 <fchmod@plt+0xd629>
lea    0x0(%esi,%eiz,1),%esi
jl     8056a03 <fchmod@plt+0xd673>
cmp    $0x0,%eax
ja     80568ec <fchmod@plt+0xd55c>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    80569dd <fchmod@plt+0xd64d>
mov    %ecx,%edx
jmp    80569a0 <fchmod@plt+0xd610>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
cmpl   $0x2,0x806ffe0
jne    8056a36 <fchmod@plt+0xd6a6>
movl   $0x1,0x806ffbc
00
movl   $0x0,0x4(%esp)
movl   $0x806240a,(%esp)
movl   $0x0,0x806ffe0
00
call   805a070 <error>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806d4a4,%eax
test   %eax,%eax
js     8056a76 <fchmod@plt+0xd6e6>
add    $0x1,%eax
cmp    $0x64,%eax
mov    %eax,0x806d4a4
jg     8056a78 <fchmod@plt+0xd6e8>
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x806d4a0,%eax
movl   $0x0,0x806d4a4
00
lea    0x1(%eax),%ebx
call   80599a0 <fchmod@plt+0x10610>
cmp    %eax,%ebx
jl     8056aa0 <fchmod@plt+0xd710>
add    $0x18,%esp
pop    %ebx
repz ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062422,(%esp)
call   805a190 <error+0x120>
movl   $0xffffffff,0x806d4a4
ff
add    $0x18,%esp
pop    %ebx
jmp    8056a9b <fchmod@plt+0xd70b>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    $0x806d4c0,%eax
lea    0x0(%esi),%esi
add    $0x20,%eax
cmp    $0x806ed80,%eax
mov    %eax,-0x20(%eax)
jb     8056ad8 <fchmod@plt+0xd748>
movl   $0x0,0x806ed80
00
movl   $0x806d4c0,0x806edc0
08
movl   $0x806eda0,0x806d4a8
08
movl   $0x806ede0,0x806ede4
08
movl   $0x806ede0,0x806ede0
08
movl   $0x0,0x806edf0
00
movl   $0x0,0x806edf4
00
movl   $0x0,0x806ede8
00
movl   $0x0,0x806edec
00
movl   $0x1,0x806edf8
00
movl   $0x0,0x806edfc
00
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x806ede0,%ecx
mov    0x24(%esp),%edx
mov    0x28(%esp),%eax
mov    0x2c(%esp),%esi
cmp    $0x806ede0,%ecx
mov    0x30(%esp),%edi
je     8056b90 <fchmod@plt+0xd800>
cmp    0xc(%ecx),%edi
jge    8056c58 <fchmod@plt+0xd8c8>
xchg   %ax,%ax
mov    0x4(%ecx),%ebx
mov    %ebx,(%esp)
mov    0x806edc0,%ebx
test   %ebx,%ebx
je     8056ca8 <fchmod@plt+0xd918>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebp
mov    %ebp,0x806edc0
mov    0x806d4a8,%ebp
mov    %ebp,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    (%esp),%ebp
cmp    $0x806ede0,%ebx
mov    %ecx,(%ebx)
mov    %esi,0x8(%ebx)
mov    %edi,0xc(%ebx)
mov    %ebp,0x4(%ebx)
mov    %edx,0x18(%ebx)
mov    %eax,0x1c(%ebx)
mov    %ebx,0x4(%ecx)
mov    %ebx,0x0(%ebp)
je     8056bfe <fchmod@plt+0xd86e>
mov    (%ebx),%eax
cmp    $0x806ede0,%eax
je     8056bfe <fchmod@plt+0xd86e>
mov    0x4(%ebx),%ebp
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
sub    0x8(%ebp),%eax
sbb    0xc(%ebp),%edx
mov    %eax,0x10(%ebx)
mov    %edx,0x14(%ebx)
cmp    $0x806ede0,%ecx
je     8056c1f <fchmod@plt+0xd88f>
mov    (%ecx),%eax
cmp    $0x806ede0,%eax
je     8056c1f <fchmod@plt+0xd88f>
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,0x10(%ecx)
mov    %edx,0x14(%ecx)
mov    (%esp),%edx
cmp    $0x806ede0,%edx
je     8056c41 <fchmod@plt+0xd8b1>
cmp    $0x806ede0,%ebx
je     8056c41 <fchmod@plt+0xd8b1>
mov    0x4(%edx),%eax
sub    0x8(%eax),%esi
sbb    0xc(%eax),%edi
mov    %esi,0x10(%edx)
mov    %edi,0x14(%edx)
mov    0x4(%esp),%eax
test   %eax,%eax
je     8056cd0 <fchmod@plt+0xd940>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     8056c68 <fchmod@plt+0xd8d8>
cmp    0x8(%ecx),%esi
jbe    8056b90 <fchmod@plt+0xd800>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ecx),%ebp
mov    0x18(%ecx),%ebx
xor    %eax,%ebp
xor    %edx,%ebx
or     %ebx,%ebp
je     8056c4d <fchmod@plt+0xd8bd>
mov    (%ecx),%ecx
cmp    $0x806ede0,%ecx
je     8056b90 <fchmod@plt+0xd800>
cmp    %edi,0xc(%ecx)
jl     8056c68 <fchmod@plt+0xd8d8>
jg     8056b90 <fchmod@plt+0xd800>
cmp    %esi,0x8(%ecx)
jb     8056c68 <fchmod@plt+0xd8d8>
mov    0x4(%ecx),%ebx
mov    %ebx,(%esp)
mov    0x806edc0,%ebx
test   %ebx,%ebx
jne    8056ba8 <fchmod@plt+0xd818>
mov    0x806d4a8,%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x806d4a8
00
movl   $0x0,0x4(%esp)
jmp    8056bbe <fchmod@plt+0xd82e>
lea    0x0(%esi),%esi
mov    0x806ede0,%eax
mov    0x8(%esp),%ebp
mov    (%eax),%edx
mov    0x10(%eax),%edi
mov    0x14(%eax),%esi
cmp    $0x806ede0,%edx
je     8056d12 <fchmod@plt+0xd982>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%eax),%ecx
mov    0x10(%eax),%ebx
cmp    %ecx,%esi
jg     8056d00 <fchmod@plt+0xd970>
jl     8056d06 <fchmod@plt+0xd976>
cmp    %ebx,%edi
jb     8056d06 <fchmod@plt+0xd976>
mov    %eax,%ebp
mov    %ebx,%edi
mov    %ecx,%esi
mov    %edx,%eax
mov    (%eax),%edx
cmp    $0x806ede0,%edx
jne    8056cf0 <fchmod@plt+0xd960>
mov    0x4(%ebp),%edx
mov    0x0(%ebp),%eax
mov    %ebp,0x806d4a8
mov    %edx,0x4(%eax)
mov    0x4(%ebp),%edx
mov    %eax,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%edx
mov    0x60(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x806ffe0,%edx
mov    %eax,0x18(%esp)
test   %edx,%edx
je     8056ec0 <fchmod@plt+0xdb30>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
mov    %ecx,%eax
and    %ebx,%eax
cmp    $0xffffffff,%eax
je     8056ec0 <fchmod@plt+0xdb30>
cmp    $0x0,%ebx
jl     8056fb3 <fchmod@plt+0xdc23>
jle    8056fa8 <fchmod@plt+0xdc18>
mov    0x806ede0,%ebx
cmp    $0x806ede0,%ebx
je     8056da3 <fchmod@plt+0xda13>
mov    0xc(%ebx),%eax
cmp    %eax,0x1c(%esp)
mov    0x8(%ebx),%edx
jl     8056db8 <fchmod@plt+0xda28>
jle    8056ed0 <fchmod@plt+0xdb40>
mov    (%ebx),%ebx
cmp    $0x806ede0,%ebx
jne    8056d87 <fchmod@plt+0xd9f7>
mov    0x806ede8,%edx
mov    $0x806ede0,%ebx
mov    0x806edec,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edi
mov    0x1c(%esp),%ebp
xor    %edi,%edx
xor    %ebp,%eax
or     %edx,%eax
je     8056f98 <fchmod@plt+0xdc08>
call   80599a0 <fchmod@plt+0x10610>
cmp    $0x806ede0,%ebx
mov    %eax,0x806d4a0
je     8057030 <fchmod@plt+0xdca0>
mov    0x4(%ebx),%ebp
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%edx
mov    %eax,0x20(%esp)
mov    0x8(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0xc(%ebx),%edx
mov    %eax,%esi
mov    %edx,%edi
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x1c(%esp),%edx
sub    0x20(%esp),%eax
sbb    0x24(%esp),%edx
sub    0x18(%esp),%esi
sbb    0x1c(%esp),%edi
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
cmp    %edi,%edx
mov    %esi,0x38(%esp)
mov    %edi,0x3c(%esp)
jg     8056ee0 <fchmod@plt+0xdb50>
jl     8056e45 <fchmod@plt+0xdab5>
mov    0x38(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8056ee0 <fchmod@plt+0xdb50>
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8056ec0 <fchmod@plt+0xdb30>
mov    0x18(%ebp),%esi
mov    0x1c(%ebp),%edi
mov    0x8(%ebp),%ebx
mov    0xc(%ebp),%ebp
cmp    %ebp,0x1c(%esp)
movl   $0x0,0x806d4a4
00
jge    8056f38 <fchmod@plt+0xdba8>
lea    0x0(%esi),%esi
mov    %ebx,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8056b60 <fchmod@plt+0xd7d0>
cmp    %ebp,0x1c(%esp)
jg     8057020 <fchmod@plt+0xdc90>
jl     8056eaa <fchmod@plt+0xdb1a>
cmp    %ebx,0x18(%esp)
jae    8057020 <fchmod@plt+0xdc90>
mov    %esi,%eax
mov    %edi,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
jmp    8056ec4 <fchmod@plt+0xdb34>
xchg   %ax,%ax
call   8056a20 <fchmod@plt+0xd690>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,0x18(%esp)
jbe    8056db8 <fchmod@plt+0xda28>
jmp    8056d99 <fchmod@plt+0xda09>
nop
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8056ec0 <fchmod@plt+0xdb30>
mov    0x18(%ebx),%esi
mov    0x1c(%ebx),%edi
mov    0x8(%ebx),%ebp
mov    0xc(%ebx),%ebx
cmp    %ebx,0x1c(%esp)
movl   $0x0,0x806d4a4
00
jle    8056fc0 <fchmod@plt+0xdc30>
mov    %ebp,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8056b60 <fchmod@plt+0xd7d0>
mov    %esi,%eax
mov    %edi,%edx
jmp    8056ec4 <fchmod@plt+0xdb34>
lea    0x0(%esi),%esi
jg     8056f46 <fchmod@plt+0xdbb6>
cmp    %ebx,0x18(%esp)
xchg   %ax,%ax
jbe    8056e80 <fchmod@plt+0xdaf0>
mov    %ebx,(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
call   80567d0 <fchmod@plt+0xd440>
testb  $0x3,0x8070078
mov    %eax,%ebx
mov    %edx,%ebp
jne    8056eb8 <fchmod@plt+0xdb28>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8056ec0 <fchmod@plt+0xdb30>
call   8056a60 <fchmod@plt+0xd6d0>
add    $0x1,%esi
adc    $0x0,%edi
cmp    %ebp,0x1c(%esp)
jl     8056e80 <fchmod@plt+0xdaf0>
jmp    8056f38 <fchmod@plt+0xdba8>
lea    0x0(%esi),%esi
mov    0x18(%ebx),%eax
mov    0x1c(%ebx),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmpl   $0x0,0x18(%esp)
ja     8056d79 <fchmod@plt+0xd9e9>
mov    $0x1,%eax
xor    %edx,%edx
jmp    8056ec4 <fchmod@plt+0xdb34>
nop
jl     8056fcc <fchmod@plt+0xdc3c>
cmp    %ebp,0x18(%esp)
jae    8056f18 <fchmod@plt+0xdb88>
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
call   80568d0 <fchmod@plt+0xd540>
testb  $0x3,0x8070078
mov    %eax,%ebp
mov    %edx,%ebx
jne    8056eb8 <fchmod@plt+0xdb28>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     8056ec0 <fchmod@plt+0xdb30>
call   8056a60 <fchmod@plt+0xd6d0>
add    $0xffffffff,%esi
adc    $0xffffffff,%edi
cmp    %ebx,0x1c(%esp)
jg     8056f18 <fchmod@plt+0xdb88>
jmp    8056fc0 <fchmod@plt+0xdc30>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %edi,%edx
jmp    8056ec4 <fchmod@plt+0xdb34>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ede4,%ebp
mov    0x8(%ebp),%esi
mov    0xc(%ebp),%edi
jmp    8056e4d <fchmod@plt+0xdabd>
jmp    8057050 <fchmod@plt+0xdcc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edx
mov    0x40(%esp),%eax
cmp    $0x0,%edx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
jl     80572a3 <fchmod@plt+0xdf13>
jle    8057298 <fchmod@plt+0xdf08>
mov    0x806ede0,%ebx
cmp    $0x806ede0,%ebx
je     8057148 <fchmod@plt+0xddb8>
mov    0x1c(%ebx),%ecx
cmp    %ecx,0x14(%esp)
mov    0x18(%ebx),%esi
jge    8057138 <fchmod@plt+0xdda8>
cmp    0x14(%esp),%ecx
mov    %esi,%eax
mov    %ecx,%edx
je     80571bc <fchmod@plt+0xde2c>
mov    0x4(%ebx),%ebp
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
sub    0x18(%ebp),%esi
sbb    0x1c(%ebp),%edi
sub    0x10(%esp),%eax
sbb    0x14(%esp),%edx
cmp    %edx,%edi
jle    80571d8 <fchmod@plt+0xde48>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8057231 <fchmod@plt+0xdea1>
mov    0x1c(%ebx),%edi
cmp    %edi,0x14(%esp)
mov    0x18(%ebx),%esi
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
jg     8057108 <fchmod@plt+0xdd78>
jl     805726b <fchmod@plt+0xdedb>
cmp    %esi,0x10(%esp)
jb     805726b <fchmod@plt+0xdedb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x10(%esp)
call   8056b60 <fchmod@plt+0xd7d0>
mov    0x1c(%esp),%eax
mov    0x10(%esp),%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jle    80571a8 <fchmod@plt+0xde18>
mov    (%ebx),%ebx
cmp    $0x806ede0,%ebx
jne    8057088 <fchmod@plt+0xdcf8>
mov    0x14(%esp),%eax
cmp    %eax,0x806edfc
je     80572af <fchmod@plt+0xdf1f>
mov    0x806ede4,%ebp
xchg   %ax,%ax
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804bb40 <fchmod@plt+0x27b0>
test   %eax,%eax
jne    8057231 <fchmod@plt+0xdea1>
mov    0x1c(%ebp),%edi
cmp    %edi,0x14(%esp)
mov    0x18(%ebp),%esi
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%edx
jl     8057108 <fchmod@plt+0xdd78>
jg     805720c <fchmod@plt+0xde7c>
cmp    %esi,0x10(%esp)
jbe    8057108 <fchmod@plt+0xdd78>
lea    0x0(%esi,%eiz,1),%esi
jmp    805720c <fchmod@plt+0xde7c>
lea    0x0(%esi),%esi
cmp    %esi,0x10(%esp)
ja     805713a <fchmod@plt+0xddaa>
cmp    0x14(%esp),%ecx
mov    %esi,%eax
mov    %ecx,%edx
jne    80570a6 <fchmod@plt+0xdd16>
cmp    0x10(%esp),%esi
jne    80570a6 <fchmod@plt+0xdd16>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     8057160 <fchmod@plt+0xddd0>
cmp    %eax,%esi
jae    80570c7 <fchmod@plt+0xdd37>
jmp    8057160 <fchmod@plt+0xddd0>
nop
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
nop
je     8057231 <fchmod@plt+0xdea1>
mov    0x14(%esp),%ebx
add    $0x1,%esi
mov    0x10(%esp),%ecx
adc    $0x0,%edi
xor    %edi,%ebx
xor    %esi,%ecx
or     %ecx,%ebx
je     8057108 <fchmod@plt+0xdd78>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80567d0 <fchmod@plt+0xd440>
testb  $0x3,0x8070078
je     80571e8 <fchmod@plt+0xde58>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8057231 <fchmod@plt+0xdea1>
mov    0x14(%esp),%ebx
add    $0xffffffff,%esi
mov    0x10(%esp),%ecx
adc    $0xffffffff,%edi
xor    %edi,%ebx
xor    %esi,%ecx
or     %ecx,%ebx
je     8057108 <fchmod@plt+0xdd78>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80568d0 <fchmod@plt+0xd540>
testb  $0x3,0x8070078
je     8057248 <fchmod@plt+0xdeb8>
jmp    8057231 <fchmod@plt+0xdea1>
lea    0x0(%esi),%esi
cmpl   $0x1,0x10(%esp)
ja     8057076 <fchmod@plt+0xdce6>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
xor    %edx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%eax
cmp    %eax,0x806edf8
jne    8057158 <fchmod@plt+0xddc8>
mov    $0x806ede0,%ebx
jmp    80571c6 <fchmod@plt+0xde36>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ebx
mov    %edx,%ebp
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%edi
mov    %ebx,%eax
and    %ebp,%eax
cmp    $0xffffffff,%eax
mov    %edx,0xc(%esp)
jne    8057332 <fchmod@plt+0xdfa2>
test   %esi,%esi
js     8057332 <fchmod@plt+0xdfa2>
cmp    0x806ff64,%esi
jl     805731c <fchmod@plt+0xdf8c>
jmp    8057360 <fchmod@plt+0xdfd0>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
js     8057332 <fchmod@plt+0xdfa2>
cmp    %esi,0x806ff64
jle    8057360 <fchmod@plt+0xdfd0>
add    $0x1,%esi
mov    %esi,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ebx
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%ebp
je     8057310 <fchmod@plt+0xdf80>
mov    %ebx,%eax
and    %ebp,%eax
cmp    $0xffffffff,%eax
je     8057360 <fchmod@plt+0xdfd0>
mov    %ebx,(%esp)
xor    %edi,%ebx
mov    %ebp,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
mov    0xc(%esp),%esi
xor    %ebp,%esi
or     %ebx,%esi
je     8057370 <fchmod@plt+0xdfe0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x54(%esp),%ebp
cmpb   $0x2d,(%ebx)
je     8057510 <fchmod@plt+0xe180>
call   804aed0 <fchmod@plt+0x1b40>
movl   $0x805ec8f,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
mov    %ebx,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x805e2f9,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
call   80518c0 <fchmod@plt+0x8530>
movl   $0x0,(%esp)
mov    %eax,0x20(%esp)
call   8051aa0 <fchmod@plt+0x8710>
call   804aad0 <fchmod@plt+0x1740>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x0,(%esp)
call   8049e10 <fchmod@plt+0xa80>
movl   $0x0,(%esp)
call   805ce00 <error+0x2d90>
movl   $0x0,(%esp)
call   8048f50 <dup@plt>
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049350 <close@plt>
movl   $0x0,0x4(%esp)
movl   $0x806243b,(%esp)
call   8048f30 <open64@plt>
test   %eax,%eax
js     80575d8 <fchmod@plt+0xe248>
movl   $0x805f4e3,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%esi
je     80575c0 <fchmod@plt+0xe230>
cmpb   $0x0,(%eax)
je     80575c0 <fchmod@plt+0xe230>
cmpb   $0x0,(%ebx)
jne    8057518 <fchmod@plt+0xe188>
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,%edx
test   %edx,%edx
je     80575c0 <fchmod@plt+0xe230>
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   8049130 <system@plt>
mov    0x24(%esp),%edx
mov    %edx,(%esp)
call   8048f90 <free@plt>
movl   $0x0,(%esp)
call   8049350 <close@plt>
mov    %edi,(%esp)
call   8048f50 <dup@plt>
mov    %edi,(%esp)
call   8049350 <close@plt>
movl   $0x1,(%esp)
call   805ce00 <error+0x2d90>
movl   $0x1,(%esp)
call   8049e10 <fchmod@plt+0xa80>
test   %ebp,%ebp
je     80574de <fchmod@plt+0xe14e>
mov    %ebp,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x8062444,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
call   805a030 <fchmod@plt+0x10ca0>
movl   $0xa,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
call   8059b10 <fchmod@plt+0x10780>
call   804a9f0 <fchmod@plt+0x1660>
mov    0x20(%esp),%eax
movl   $0x1,0x806ffbc
00
mov    %eax,(%esp)
call   80520e0 <fchmod@plt+0x8d50>
movl   $0x0,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805cd40 <error+0x2cd0>
lea    0x0(%esi),%esi
add    $0x1,%ebx
jmp    80573bd <fchmod@plt+0xe02d>
mov    %ebx,(%esp)
call   80525c0 <fchmod@plt+0x9230>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     80575c0 <fchmod@plt+0xe230>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,0x28(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    0x28(%esp),%edx
movl   $0x1,0x4(%esp)
lea    0x5(%edx,%eax,1),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x2c(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x28(%esp)
call   80533a0 <fchmod@plt+0xa010>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%edx
mov    %esi,0x14(%esp)
movl   $0x805f4ec,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    0x2c(%esp),%ecx
mov    %edx,(%esp)
mov    %eax,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %ecx,0x4(%esp)
movl   $0x1,0x8(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    0x24(%esp),%ecx
mov    %ecx,(%esp)
call   8048f90 <free@plt>
mov    0x28(%esp),%edx
jmp    805745c <fchmod@plt+0xe0cc>
lea    0x0(%esi),%esi
cmpb   $0x0,(%ebx)
jne    80575e8 <fchmod@plt+0xe258>
movl   $0x8062dc3,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,%edx
jmp    8057464 <fchmod@plt+0xe0d4>
mov    %edi,(%esp)
call   8048f50 <dup@plt>
jmp    805742a <fchmod@plt+0xe09a>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,%edx
jmp    8057464 <fchmod@plt+0xe0d4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%eax
mov    0x54(%esp),%edx
mov    0x58(%esp),%ecx
mov    0x50(%esp),%esi
mov    %eax,0x20(%esp)
mov    0x60(%esp),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x1c(%esp)
call   804bb40 <fchmod@plt+0x27b0>
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
test   %eax,%eax
mov    %eax,0x24(%esp)
jne    80577d3 <fchmod@plt+0xe443>
movl   $0x805e62e,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
call   8049030 <popen@plt>
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebx
je     80577f1 <fchmod@plt+0xe461>
mov    %edx,0x28(%esp)
mov    $0xffffffff,%ebp
mov    %ecx,0x2c(%esp)
call   804aed0 <fchmod@plt+0x1b40>
movl   $0x805ec8f,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
mov    %esi,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x805e2f9,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
call   804aad0 <fchmod@plt+0x1740>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x0,(%esp)
call   8049e10 <fchmod@plt+0xa80>
movl   $0x0,(%esp)
call   805ce00 <error+0x2d90>
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   8049000 <signal@plt>
mov    0x28(%esp),%edx
mov    0x20(%esp),%eax
mov    0x2c(%esp),%ecx
and    0x1c(%esp),%eax
mov    %eax,0x10(%esp)
mov    %edx,%eax
mov    %ecx,%edx
notl   0x10(%esp)
jmp    8057729 <fchmod@plt+0xe399>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0x20(%esp),%eax
ja     805776f <fchmod@plt+0xe3df>
xchg   %ax,%ax
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     805776f <fchmod@plt+0xe3df>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049070 <_IO_putc@plt>
cmp    $0xffffffff,%eax
je     805776f <fchmod@plt+0xe3df>
mov    %esi,%eax
mov    %edi,%edx
mov    0x10(%esp),%ecx
mov    %eax,%esi
mov    %edx,%edi
test   %ecx,%ecx
je     8057708 <fchmod@plt+0xe378>
add    $0x1,%esi
adc    $0x0,%edi
cmp    0x1c(%esp),%edx
jl     8057708 <fchmod@plt+0xe378>
jle    8057700 <fchmod@plt+0xe370>
cmp    $0xffffffff,%ebp
je     8057778 <fchmod@plt+0xe3e8>
cmp    $0xa,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
je     8057778 <fchmod@plt+0xe3e8>
call   804ba30 <fchmod@plt+0x26a0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     8057778 <fchmod@plt+0xe3e8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049070 <_IO_putc@plt>
cmp    $0xffffffff,%eax
je     8057778 <fchmod@plt+0xe3e8>
cmp    $0xffffffff,%ebp
jne    8057748 <fchmod@plt+0xe3b8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049180 <pclose@plt>
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   8049000 <signal@plt>
movl   $0x1,(%esp)
call   805ce00 <error+0x2d90>
movl   $0x1,(%esp)
call   8049e10 <fchmod@plt+0xa80>
call   804a9f0 <fchmod@plt+0x1660>
movl   $0x0,(%esp)
movl   $0x1,0x806ffbc
00
call   805cd40 <error+0x2cd0>
mov    0x24(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x4(%esp)
movl   $0x8062455,(%esp)
call   805a070 <error>
movl   $0xffffffff,0x24(%esp)
jmp    80577c7 <fchmod@plt+0xe437>
movl   $0x0,0x4(%esp)
movl   $0x8062473,(%esp)
call   805a070 <error>
movl   $0xffffffff,0x24(%esp)
jmp    80577c7 <fchmod@plt+0xe437>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8057bf0 <fchmod@plt+0xe860>
mov    %eax,%ebp
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%edi
je     80578f8 <fchmod@plt+0xe568>
movl   $0x0,(%esp)
call   805a5d0 <error+0x560>
movl   $0xffffffff,(%esp)
mov    %edx,%ebx
mov    %eax,%edx
and    %ebx,%edx
mov    %eax,%esi
xor    %eax,%eax
xor    $0xffffffff,%edx
cmove  %eax,%esi
cmove  %eax,%ebx
call   805a5d0 <error+0x560>
cmpl   $0x2e,0x40(%esp)
je     80578e8 <fchmod@plt+0xe558>
cmp    %edi,%ebx
jge    8057898 <fchmod@plt+0xe508>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     80578d0 <fchmod@plt+0xe540>
mov    %ebp,0xc(%esp)
mov    %edi,0x10(%esp)
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8057600 <fchmod@plt+0xe270>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
jle    80578c0 <fchmod@plt+0xe530>
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8057600 <fchmod@plt+0xe270>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %ebp,%esi
jae    805789a <fchmod@plt+0xe50a>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    8057873 <fchmod@plt+0xe4e3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0xc(%esp)
movl   $0xffffffff,0x10(%esp)
jmp    805787b <fchmod@plt+0xe4eb>
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
jmp    805787b <fchmod@plt+0xe4eb>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    805788f <fchmod@plt+0xe4ff>
nop
lea    -0x61(%eax),%edx
cmp    $0x19,%edx
jbe    8057920 <fchmod@plt+0xe590>
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
ja     8057930 <fchmod@plt+0xe5a0>
shl    $0x4,%eax
add    $0x806ebb0,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
shl    $0x4,%edx
lea    0x806ee20(%edx),%eax
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
movl   $0x8062486,(%esp)
call   805a070 <error>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
cmp    $0x27,%eax
je     8057a30 <fchmod@plt+0xe6a0>
jle    80579c0 <fchmod@plt+0xe630>
cmp    $0x2e,%eax
je     80579a0 <fchmod@plt+0xe610>
cmp    $0x5e,%eax
jne    8057a00 <fchmod@plt+0xe670>
mov    0x806c2a0,%eax
movl   $0x0,0x806ee04
00
movl   $0x0,0x806ee08
00
movl   $0x0,0x806ee0c
00
mov    %eax,0x806ee00
mov    $0x806ee00,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x806ee04,(%esp)
call   805a850 <error+0x7e0>
mov    0x806c2a0,%eax
mov    %eax,0x806ee00
mov    $0x806ee00,%eax
add    $0x1c,%esp
ret
nop
cmp    $0x24,%eax
jne    8057a00 <fchmod@plt+0xe670>
call   804bd60 <fchmod@plt+0x29d0>
test   %eax,%eax
jne    8057a48 <fchmod@plt+0xe6b8>
xchg   %ax,%ax
call   804b9f0 <fchmod@plt+0x2660>
mov    %eax,0x806ee04
mov    0x806ff64,%eax
mov    %edx,0x806ee08
sub    $0x1,%eax
mov    %eax,0x806ee0c
mov    0x806c2a0,%eax
mov    %eax,0x806ee00
mov    $0x806ee00,%eax
add    $0x1c,%esp
ret
call   8057900 <fchmod@plt+0xe570>
test   %eax,%eax
je     8057a40 <fchmod@plt+0xe6b0>
mov    0x4(%eax),%edx
and    0x8(%eax),%edx
cmp    $0xffffffff,%edx
jne    8057999 <fchmod@plt+0xe609>
movl   $0x0,0x4(%esp)
movl   $0x806249a,(%esp)
call   805a070 <error>
xor    %eax,%eax
jmp    8057999 <fchmod@plt+0xe609>
nop
mov    $0x806f160,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8057999 <fchmod@plt+0xe609>
nop
movl   $0x0,0x4(%esp)
movl   $0x8062377,(%esp)
call   805a070 <error>
xor    %eax,%eax
jmp    8057999 <fchmod@plt+0xe609>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x806ee24,%eax
lea    0x0(%esi),%esi
movl   $0xffffffff,(%eax)
add    $0x10,%eax
movl   $0xffffffff,-0xc(%eax)
cmp    $0x806f174,%eax
jne    8057a78 <fchmod@plt+0xe6e8>
repz ret
jmp    8057aa0 <fchmod@plt+0xe710>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0xc,%esp
mov    0x10(%esp),%eax
call   8057950 <fchmod@plt+0xe5c0>
test   %eax,%eax
sete   %al
add    $0xc,%esp
movzbl %al,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   8057900 <fchmod@plt+0xe570>
test   %eax,%eax
mov    %eax,%ebx
je     8057afb <fchmod@plt+0xe76b>
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   805a850 <error+0x7e0>
mov    0x14(%esp),%eax
mov    %eax,0x4(%ebx)
mov    0x18(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x1c(%esp),%eax
mov    %eax,0xc(%ebx)
mov    0x806c2a0,%eax
mov    %eax,(%ebx)
add    $0x28,%esp
pop    %ebx
ret
sub    $0x2c,%esp
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
je     8057b10 <fchmod@plt+0xe780>
add    $0x2c,%esp
ret
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   805a850 <error+0x7e0>
mov    0x14(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
and    %eax,%ecx
cmp    $0xffffffff,%ecx
je     8057b0c <fchmod@plt+0xe77c>
mov    %eax,0x806f168
mov    0x1c(%esp),%eax
mov    %edx,0x806f164
mov    %eax,0x806f16c
mov    0x806c2a0,%eax
mov    %eax,0x806f160
add    $0x2c,%esp
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
call   8057950 <fchmod@plt+0xe5c0>
test   %eax,%eax
je     8057b9b <fchmod@plt+0xe80b>
cmp    $0x806f160,%eax
je     8057ba8 <fchmod@plt+0xe818>
mov    0x806c2a0,%edx
mov    0x4(%eax),%esi
mov    0x8(%eax),%edi
mov    0xc(%eax),%ebx
mov    (%eax),%eax
cmp    %edx,%eax
je     8057b8b <fchmod@plt+0xe7fb>
mov    %eax,(%esp)
call   8051aa0 <fchmod@plt+0x8710>
test   %eax,%eax
jne    8057b9b <fchmod@plt+0xe80b>
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8054750 <fchmod@plt+0xb3c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x806f164,%edx
and    0x806f168,%edx
cmp    $0xffffffff,%edx
jne    8057b6a <fchmod@plt+0xe7da>
mov    0x806c2a0,%edx
mov    0x807000c,%ecx
movl   $0x0,0x806f164
00
movl   $0x0,0x806f168
00
mov    %edx,0x806f160
mov    %ecx,0x806f16c
jmp    8057b70 <fchmod@plt+0xe7e0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
call   8057950 <fchmod@plt+0xe5c0>
test   %eax,%eax
je     8057c38 <fchmod@plt+0xe8a8>
mov    0x806c2a0,%edx
cmp    %edx,(%eax)
jne    8057c18 <fchmod@plt+0xe888>
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x80624a7,(%esp)
call   805a070 <error>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    8057c10 <fchmod@plt+0xe880>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    8057c10 <fchmod@plt+0xe880>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%edx
mov    $0x806ee20,%eax
jmp    8057c6a <fchmod@plt+0xe8da>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%eax
cmp    $0x806f170,%eax
je     8057c88 <fchmod@plt+0xe8f8>
cmp    %edx,(%eax)
jne    8057c60 <fchmod@plt+0xe8d0>
movl   $0xffffffff,0x4(%eax)
add    $0x10,%eax
movl   $0xffffffff,-0x8(%eax)
cmp    $0x806f170,%eax
jne    8057c6a <fchmod@plt+0xe8da>
xchg   %ax,%ax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x806ff40,%ecx
mov    0x30(%esp),%eax
test   %ecx,%ecx
jne    8057cc0 <fchmod@plt+0xe930>
cmp    $0x1,%eax
je     8057d08 <fchmod@plt+0xe978>
cmp    $0x2,%eax
je     8057cd8 <fchmod@plt+0xe948>
test   %eax,%eax
lea    0x0(%esi),%esi
jne    8057cbb <fchmod@plt+0xe92b>
mov    0x34(%esp),%eax
mov    %eax,0x806c290
add    $0x2c,%esp
ret
nop
movl   $0x0,0x4(%esp)
movl   $0x80624c0,(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
call   804c290 <fchmod@plt+0x2f00>
test   $0x1,%al
nop
jne    8057d38 <fchmod@plt+0xe9a8>
mov    0x806a148,%edx
test   %edx,%edx
js     8057d78 <fchmod@plt+0xe9e8>
movl   $0x0,0x4(%esp)
movl   $0x8062694,(%esp)
call   805a070 <error>
jmp    8057cbb <fchmod@plt+0xe92b>
xchg   %ax,%ax
mov    0x806a148,%eax
test   %eax,%eax
js     8057d58 <fchmod@plt+0xe9c8>
mov    0x806c290,%eax
movl   $0x80626bb,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062680,(%esp)
call   805a070 <error>
jmp    8057cbb <fchmod@plt+0xe92b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x80626af,(%esp)
call   805a070 <error>
jmp    8057cbb <fchmod@plt+0xe92b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,(%esp)
call   8052bc0 <fchmod@plt+0x9830>
mov    %eax,(%esp)
mov    %eax,0x806c290
call   8051940 <fchmod@plt+0x85b0>
call   804b200 <fchmod@plt+0x1e70>
jmp    8057cbb <fchmod@plt+0xe92b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x1,0x806c294
00
jmp    8057c90 <fchmod@plt+0xe900>
nop
push   %ebx
sub    $0x48,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x3c(%esp)
xor    %ecx,%ecx
cmp    $0x1,%eax
mov    %edx,0x1c(%esp)
je     8057e50 <fchmod@plt+0xeac0>
cmp    $0x2,%eax
je     8057e08 <fchmod@plt+0xea78>
test   %eax,%eax
je     8057e08 <fchmod@plt+0xea78>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8057fca <fchmod@plt+0xec3a>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x2e,(%eax)
je     8057f28 <fchmod@plt+0xeb98>
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
movl   $0x80626c9,0x4(%esp)
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    0x24(%esp),%ebx
test   %ebx,%ebx
jne    8057f08 <fchmod@plt+0xeb78>
mov    %eax,0x807000c
movl   $0xffffffff,0x806c1f4
ff
jmp    8057deb <fchmod@plt+0xea5b>
xchg   %ax,%ax
mov    0x806c1f4,%eax
test   %eax,%eax
js     8057f88 <fchmod@plt+0xebf8>
lea    0x2c(%esp),%ebx
mov    %eax,0x10(%esp)
movl   $0x80626f5,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049380 <__sprintf_chk@plt>
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8057e87 <fchmod@plt+0xeaf7>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %ebx,%edx
cmp    $0x2,%edx
jle    8057faa <fchmod@plt+0xec1a>
lea    -0x1(%edx),%eax
cmpb   $0x30,0x2c(%esp,%eax,1)
je     8057edc <fchmod@plt+0xeb4c>
jmp    8057faa <fchmod@plt+0xec1a>
nop
cmpb   $0x30,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
jne    8057ee1 <fchmod@plt+0xeb51>
mov    %edx,%eax
cmp    $0x2,%eax
jne    8057ed0 <fchmod@plt+0xeb40>
movb   $0x0,0x2c(%esp,%eax,1)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x8062508,(%esp)
mov    %ebx,0x24(%esp)
call   805a070 <error>
jmp    8057deb <fchmod@plt+0xea5b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x80626e1,(%esp)
call   805a070 <error>
jmp    8057deb <fchmod@plt+0xea5b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    %eax,0x1c(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
movl   $0x80626c9,0x4(%esp)
mov    %eax,(%esp)
call   80594b0 <fchmod@plt+0x10120>
mov    0x24(%esp),%edx
test   %edx,%edx
mov    %eax,0x806c1f4
jne    8057fb1 <fchmod@plt+0xec21>
test   %eax,%eax
js     8057deb <fchmod@plt+0xea5b>
imul   0x806ff64,%eax
mov    $0x431bde83,%edx
mov    %eax,%ecx
imul   %edx
sar    $0x1f,%ecx
sar    $0x12,%edx
sub    %ecx,%edx
mov    %edx,0x807000c
jmp    8057deb <fchmod@plt+0xea5b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x807000c,%eax
movl   $0x80624e4,(%esp)
mov    %eax,0x24(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    8057deb <fchmod@plt+0xea5b>
mov    %edx,%eax
jmp    8057ee1 <fchmod@plt+0xeb51>
movl   $0x0,0x4(%esp)
movl   $0x80626cb,(%esp)
call   805a070 <error>
jmp    8057deb <fchmod@plt+0xea5b>
call   8049040 <__stack_chk_fail@plt>
nop
mov    0x806c1f4,%eax
test   %eax,%eax
js     8057ff7 <fchmod@plt+0xec67>
imul   0x806ff64,%eax
mov    $0x431bde83,%edx
mov    %eax,%ecx
imul   %edx
sar    $0x1f,%ecx
sar    $0x12,%edx
sub    %ecx,%edx
mov    %edx,0x807000c
repz ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
mov    %gs:0x14,%ecx
mov    %ecx,0x3c(%esp)
xor    %ecx,%ecx
cmp    $0x1,%eax
mov    %edx,0x1c(%esp)
je     8058090 <fchmod@plt+0xed00>
cmp    $0x2,%eax
je     8058048 <fchmod@plt+0xecb8>
test   %eax,%eax
je     8058048 <fchmod@plt+0xecb8>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    805820a <fchmod@plt+0xee7a>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x2e,(%eax)
je     8058168 <fchmod@plt+0xedd8>
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
movl   $0x80626fb,0x4(%esp)
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
jne    8058148 <fchmod@plt+0xedb8>
mov    %eax,0x806fffc
movl   $0xffffffff,0x806c1f0
ff
jmp    805802b <fchmod@plt+0xec9b>
xchg   %ax,%ax
mov    0x806c1f0,%eax
test   %eax,%eax
js     80581c8 <fchmod@plt+0xee38>
lea    0x2c(%esp),%ebx
mov    %eax,0x10(%esp)
movl   $0x80626f5,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049380 <__sprintf_chk@plt>
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     80580c7 <fchmod@plt+0xed37>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %ebx,%edx
cmp    $0x2,%edx
jle    80581ea <fchmod@plt+0xee5a>
lea    -0x1(%edx),%eax
cmpb   $0x30,0x2c(%esp,%eax,1)
je     805811c <fchmod@plt+0xed8c>
jmp    80581ea <fchmod@plt+0xee5a>
nop
cmpb   $0x30,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
jne    8058121 <fchmod@plt+0xed91>
mov    %edx,%eax
cmp    $0x2,%eax
jne    8058110 <fchmod@plt+0xed80>
movb   $0x0,0x2c(%esp,%eax,1)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x8062530,(%esp)
mov    %ebx,0x24(%esp)
call   805a070 <error>
jmp    805802b <fchmod@plt+0xec9b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062715,(%esp)
call   805a070 <error>
jmp    805802b <fchmod@plt+0xec9b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    %eax,0x1c(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
movl   $0x80626fb,0x4(%esp)
mov    %eax,(%esp)
call   80594b0 <fchmod@plt+0x10120>
mov    0x24(%esp),%ebx
test   %ebx,%ebx
mov    %eax,0x806c1f0
jne    80581f1 <fchmod@plt+0xee61>
test   %eax,%eax
js     805802b <fchmod@plt+0xec9b>
imul   0x806ff70,%eax
mov    $0x431bde83,%edx
mov    %eax,%ecx
imul   %edx
sar    $0x1f,%ecx
sar    $0x12,%edx
sub    %ecx,%edx
mov    %edx,0x806fffc
jmp    805802b <fchmod@plt+0xec9b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806fffc,%eax
movl   $0x806272b,(%esp)
mov    %eax,0x24(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    805802b <fchmod@plt+0xec9b>
mov    %edx,%eax
jmp    8058121 <fchmod@plt+0xed91>
movl   $0x0,0x4(%esp)
movl   $0x80626fd,(%esp)
call   805a070 <error>
jmp    805802b <fchmod@plt+0xec9b>
call   8049040 <__stack_chk_fail@plt>
nop
mov    0x806c1f0,%eax
test   %eax,%eax
js     8058237 <fchmod@plt+0xeea7>
imul   0x806ff70,%eax
mov    $0x431bde83,%edx
mov    %eax,%ecx
imul   %edx
sar    $0x1f,%ecx
sar    $0x12,%edx
sub    %ecx,%edx
mov    %edx,0x806fffc
repz ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     8058250 <fchmod@plt+0xeec0>
add    $0x2c,%esp
ret
nop
mov    0x34(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8051190 <fchmod@plt+0x7e00>
test   %eax,%eax
je     805824b <fchmod@plt+0xeebb>
mov    0x34(%esp),%eax
movl   $0x805f201,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
test   %eax,%eax
je     8058308 <fchmod@plt+0xef78>
cmp    $0x2,%eax
jne    8058300 <fchmod@plt+0xef70>
mov    0x806ff40,%eax
test   %eax,%eax
jne    8058328 <fchmod@plt+0xef98>
mov    %edx,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,(%esp)
call   805d9a0 <error+0x3930>
call   80518c0 <fchmod@plt+0x8530>
mov    %eax,%ebx
call   805dcc0 <error+0x3c50>
test   %eax,%eax
jne    8058318 <fchmod@plt+0xef88>
call   805da20 <error+0x39b0>
mov    %eax,%esi
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%edi
je     8058318 <fchmod@plt+0xef88>
mov    %ebx,(%esp)
call   80518f0 <fchmod@plt+0x8560>
mov    0x807000c,%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   8054750 <fchmod@plt+0xb3c0>
lea    0x0(%esi),%esi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edx,0x806f170
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80520e0 <fchmod@plt+0x8d50>
nop
movl   $0x0,0x24(%esp)
movl   $0x8062747,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    805a070 <error>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
cmp    $0x1,%eax
je     80583a0 <fchmod@plt+0xf010>
cmp    $0x2,%eax
je     8058380 <fchmod@plt+0xeff0>
test   %eax,%eax
je     8058370 <fchmod@plt+0xefe0>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %eax,0x806c264
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,(%esp)
call   8052bc0 <fchmod@plt+0x9830>
mov    %eax,0x806c264
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    0x806c264,%eax
movl   $0x8062765,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
jmp    80583d0 <fchmod@plt+0xf040>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%edx
mov    0x24(%esp),%eax
test   %edx,%edx
je     80583e8 <fchmod@plt+0xf058>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
movl   $0x1,0x806f180
00
call   804f1b0 <fchmod@plt+0x5e20>
mov    0x806f1d8,%eax
test   %eax,%eax
jne    80583df <fchmod@plt+0xf04f>
movl   $0x805ec85,0x20(%esp)
add    $0x1c,%esp
jmp    804f1b0 <fchmod@plt+0x5e20>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%ebx
cmp    $0x1,%eax
je     8058460 <fchmod@plt+0xf0d0>
cmp    $0x2,%eax
je     8058448 <fchmod@plt+0xf0b8>
test   %eax,%eax
je     8058448 <fchmod@plt+0xf0b8>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx),%eax
sub    $0x3d,%eax
cmp    $0x3a,%al
ja     8058493 <fchmod@plt+0xf103>
movzbl %al,%eax
jmp    *0x80627c8(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x8070030,%eax
movl   $0x805f528,(%esp)
mov    0x807006c(,%eax,4),%eax
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x1,%ebx
mov    0x807006c,%eax
mov    $0x807006c,%esi
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,(%esi)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x1,%ebx
mov    0x806c228,%eax
mov    $0x806c228,%esi
jmp    805849d <fchmod@plt+0xf10d>
nop
add    $0x1,%ebx
mov    0x806c230,%eax
mov    $0x806c230,%esi
jmp    805849d <fchmod@plt+0xf10d>
nop
add    $0x1,%ebx
mov    0x8070074,%eax
mov    $0x8070074,%esi
jmp    805849d <fchmod@plt+0xf10d>
nop
add    $0x1,%ebx
mov    0x806c22c,%eax
mov    $0x806c22c,%esi
jmp    805849d <fchmod@plt+0xf10d>
nop
add    $0x1,%ebx
mov    0x8070070,%eax
mov    $0x8070070,%esi
jmp    805849d <fchmod@plt+0xf10d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
test   %eax,%eax
je     8058520 <fchmod@plt+0xf190>
cmp    $0x2,%eax
je     8058520 <fchmod@plt+0xf190>
repz ret
nop
mov    0x807003c,%eax
mov    %eax,0x4(%esp)
jmp    804beb0 <fchmod@plt+0x2b20>
xchg   %ax,%ax
cmpl   $0x2,0x4(%esp)
je     8058540 <fchmod@plt+0xf1b0>
repz ret
lea    0x0(%esi,%eiz,1),%esi
jmp    805c2d0 <error+0x2260>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     8058578 <fchmod@plt+0xf1e8>
js     8058570 <fchmod@plt+0xf1e0>
cmp    $0x2,%eax
jg     8058570 <fchmod@plt+0xf1e0>
add    $0x1c,%esp
jmp    804f0b0 <fchmod@plt+0x5d20>
lea    0x0(%esi),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8062774,(%esp)
movl   $0x1,0x806c298
00
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x806c268,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x806277a,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x806277d,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x8062782,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x8062554,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x806257c,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x80625bc,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x80625f0,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x8062628,(%esp)
call   8059c60 <fchmod@plt+0x108d0>
movl   $0x0,0x20(%esp)
add    $0x1c,%esp
jmp    80499a0 <fchmod@plt+0x610>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x274,%esp
mov    0x280(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x26c(%esp)
xor    %esi,%esi
mov    0x284(%esp),%edx
cmp    $0x1,%eax
je     80586e7 <fchmod@plt+0xf357>
cmp    $0x2,%eax
je     8058665 <fchmod@plt+0xf2d5>
test   %eax,%eax
je     8058665 <fchmod@plt+0xf2d5>
mov    0x26c(%esp),%eax
xor    %gs:0x14,%eax
jne    805887d <fchmod@plt+0xf4ed>
add    $0x274,%esp
pop    %ebx
pop    %esi
ret
mov    $0x1,%esi
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   8049900 <fchmod@plt+0x570>
movsbl (%eax),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
mov    $0x0,%edx
ja     805869d <fchmod@plt+0xf30d>
add    $0x1,%eax
lea    (%edx,%edx,4),%edx
lea    -0x30(%ecx,%edx,2),%edx
movsbl (%eax),%ecx
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    8058688 <fchmod@plt+0xf2f8>
cmp    %edx,0x806d23c(,%esi,4)
jge    80586b0 <fchmod@plt+0xf320>
mov    %edx,0x806d240(,%esi,4)
add    $0x1,%esi
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
cmpb   $0x2c,(%eax)
lea    0x1(%eax),%edx
jne    805886f <fchmod@plt+0xf4df>
cmp    $0x7f,%esi
jle    8058670 <fchmod@plt+0xf2e0>
mov    0x806d23c(,%esi,4),%eax
sub    0x806d238(,%esi,4),%eax
mov    %esi,0x806ba4c
mov    %eax,0x806ba48
jmp    8058648 <fchmod@plt+0xf2b8>
cmpl   $0x2,0x806ba4c
mov    $0x2073,%ebx
mov    %bx,0x38(%esp)
lea    0x30(%esp),%ebx
movl   $0x20626154,0x30(%esp)
movl   $0x706f7473,0x34(%esp)
movb   $0x0,0x3a(%esp)
jg     8058789 <fchmod@plt+0xf3f9>
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8058715 <fchmod@plt+0xf385>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
mov    0x806ba48,%eax
sbb    $0x3,%edx
movl   $0x806279b,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   8049380 <__sprintf_chk@plt>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x805f528,(%esp)
mov    %ebx,0x28(%esp)
call   805a070 <error>
jmp    8058648 <fchmod@plt+0xf2b8>
mov    $0x1,%esi
lea    0x30(%esp),%ebx
lea    0x0(%esi),%esi
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     805879a <fchmod@plt+0xf40a>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
mov    0x806d240(,%esi,4),%eax
sbb    $0x3,%edx
add    $0x1,%esi
movl   $0x8062798,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   8049380 <__sprintf_chk@plt>
cmp    %esi,0x806ba4c
jle    8058820 <fchmod@plt+0xf490>
cmp    $0x1,%esi
jle    8058798 <fchmod@plt+0xf408>
movl   $0x23c,0x8(%esp)
movl   $0x8062ce4,0x4(%esp)
mov    %ebx,(%esp)
call   8048ef0 <__strcat_chk@plt>
jmp    8058798 <fchmod@plt+0xf408>
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8058822 <fchmod@plt+0xf492>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    $0x206e,%ecx
movl   $0x646e6120,(%edx)
movl   $0x65687420,0x4(%edx)
mov    %cx,0x8(%edx)
movb   $0x0,0xa(%edx)
jmp    8058713 <fchmod@plt+0xf383>
cmp    $0x1,%esi
je     8058648 <fchmod@plt+0xf2b8>
jmp    80586c9 <fchmod@plt+0xf339>
lea    0x0(%esi),%esi
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
cmp    $0x1,%eax
je     80588e0 <fchmod@plt+0xf550>
cmp    $0x2,%eax
je     80588b0 <fchmod@plt+0xf520>
test   %eax,%eax
je     80588b0 <fchmod@plt+0xf520>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     8058920 <fchmod@plt+0xf590>
mov    0x34(%esp),%ecx
movzbl 0x1(%ecx),%edx
test   %dl,%dl
je     8058938 <fchmod@plt+0xf5a8>
cmpb   $0x0,0x2(%ecx)
jne    8058948 <fchmod@plt+0xf5b8>
mov    %al,0x806b719
mov    %dl,0x806b718
jmp    80588a5 <fchmod@plt+0xf515>
lea    0x0(%esi),%esi
movzbl 0x806b719,%eax
movl   $0x80627ab,(%esp)
movb   $0x0,0x17(%esp)
mov    %al,0x15(%esp)
movzbl 0x806b718,%eax
mov    %al,0x16(%esp)
lea    0x15(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x806b718
movb   $0x0,0x806b719
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    %al,0x806b719
mov    %al,0x806b718
jmp    80588a5 <fchmod@plt+0xf515>
nop
movl   $0x0,0x4(%esp)
movl   $0x806265c,(%esp)
call   805a070 <error>
jmp    80588a5 <fchmod@plt+0xf515>
jmp    8058970 <fchmod@plt+0xf5e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     8058998 <fchmod@plt+0xf608>
js     80589a2 <fchmod@plt+0xf612>
cmp    $0x2,%eax
jg     80589a2 <fchmod@plt+0xf612>
movl   $0x0,0x8(%esp)
movl   $0x80627b5,0x4(%esp)
jmp    805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806ff30
00
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x806ffd8,%eax
mov    0x806ff64,%edx
add    %eax,%edx
test   %eax,%eax
cmovle %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
cmpb   $0x0,(%eax)
mov    0x40(%esp),%edi
je     8058a75 <fchmod@plt+0xf6e5>
mov    %eax,(%esp)
mov    %edx,%ebp
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x0(%ebp)
movsbl (%ebx),%edx
mov    %eax,%esi
test   %dl,%dl
jne    8058a48 <fchmod@plt+0xf6b8>
jmp    8058a68 <fchmod@plt+0xf6d8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x24,%dl
je     8058a68 <fchmod@plt+0xf6d8>
test   %edi,%edi
nop
je     8058a32 <fchmod@plt+0xf6a2>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8049190 <strchr@plt>
test   %eax,%eax
je     8058a68 <fchmod@plt+0xf6d8>
movzbl (%ebx),%ecx
mov    %ebx,%eax
add    $0x1,%esi
mov    %cl,-0x1(%esi)
movsbl 0x1(%eax),%edx
lea    0x1(%eax),%ebx
test   %dl,%dl
je     8058a68 <fchmod@plt+0xf6d8>
mov    0x8070018,%eax
test   %eax,%eax
je     8058a18 <fchmod@plt+0xf688>
cmp    $0x5c,%dl
jne    8058a18 <fchmod@plt+0xf688>
movzbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%eax
test   %cl,%cl
jne    8058a37 <fchmod@plt+0xf6a7>
jmp    8058a1d <fchmod@plt+0xf68d>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%esi)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x80628b4,(%esp)
mov    %ecx,0x18(%esp)
call   805a070 <error>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
cmp    $0x1,%al
je     8058af0 <fchmod@plt+0xf760>
mov    (%edx),%edx
movsbl %al,%eax
mov    %eax,0x14(%esp)
movl   $0x80628d4,0x10(%esp)
movl   $0x2a,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x8(%esp)
movl   $0x2a,0x4(%esp)
movl   $0x806f1a0,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    $0x806f1a0,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
movl   $0x80628cf,0x10(%esp)
movl   $0x2a,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x2a,0x4(%esp)
movl   $0x806f1a0,(%esp)
call   8048f00 <__snprintf_chk@plt>
mov    $0x806f1a0,%eax
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c910 <fchmod@plt+0x3580>
movl   $0x80628d0,0xc(%esp)
movl   $0x8,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f1ca,(%esp)
mov    %eax,0x10(%esp)
call   8049380 <__sprintf_chk@plt>
mov    $0x806f1ca,%eax
add    $0x2c,%esp
ret
mov    0x4(%esp),%eax
test   %eax,%eax
je     8058b88 <fchmod@plt+0xf7f8>
testb  $0x53,0x8(%eax)
sete   %al
movzbl %al,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0x805ea73,%eax
test   %edx,%edx
je     8058ba8 <fchmod@plt+0xf818>
testb  $0xc,0x8(%edx)
je     8058ba8 <fchmod@plt+0xf818>
mov    0x18(%edx),%eax
ret
nop
repz ret
lea    0x0(%esi),%esi
mov    0x806f1d4,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
ret
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x806f1d4,%eax
mov    0x4(%eax),%edx
movzbl (%eax),%eax
call   8058aa0 <fchmod@plt+0xf710>
movl   $0x80628b4,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x2c,%esp
ret
nop
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x48(%esp),%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
movsbl (%eax),%edx
cmp    $0x2d,%dl
je     8058ca0 <fchmod@plt+0xf910>
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8058c60 <fchmod@plt+0xf8d0>
test   %edi,%edi
jne    8058cb0 <fchmod@plt+0xf920>
mov    0x44(%esp),%ecx
mov    $0xffffffff,%eax
test   %ecx,%ecx
je     8058c94 <fchmod@plt+0xf904>
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
lea    0x18(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x80628df,(%esp)
mov    %eax,0x18(%esp)
call   805a070 <error>
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
lea    0x0(%esi),%esi
add    $0x1,%eax
lea    (%ecx,%ecx,4),%ecx
lea    -0x30(%edx,%ecx,2),%ecx
movsbl (%eax),%edx
lea    -0x30(%edx),%ebx
cmp    $0x9,%bl
jbe    8058c68 <fchmod@plt+0xf8d8>
test   %edi,%edi
mov    %eax,(%esi)
je     8058c89 <fchmod@plt+0xf8f9>
movl   $0x0,(%edi)
mov    %ecx,%edx
mov    %ecx,%eax
neg    %edx
test   %ebp,%ebp
cmovne %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x1(%eax),%edx
mov    $0x1,%bp
add    $0x1,%eax
jmp    8058c17 <fchmod@plt+0xf887>
movl   $0x1,(%edi)
mov    $0xffffffff,%eax
jmp    8058c94 <fchmod@plt+0xf904>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ecx
test   %ecx,%ecx
je     8058d01 <fchmod@plt+0xf971>
mov    0x806f1d4,%ebx
test   %ebx,%ebx
je     8058d40 <fchmod@plt+0xf9b0>
mov    0x8(%ebx),%eax
and    $0x1f,%eax
cmp    $0x4,%eax
je     8058d10 <fchmod@plt+0xf980>
cmp    $0x8,%eax
jne    8058cf7 <fchmod@plt+0xf967>
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
call   *0x14(%ebx)
movl   $0x0,0x806f1d4
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%edx
movzbl (%ebx),%eax
call   8058aa0 <fchmod@plt+0xf710>
mov    0x806f1d4,%edx
mov    0x10(%edx),%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    %eax,(%ebx)
jmp    8058cf7 <fchmod@plt+0xf967>
movl   $0x0,0x1c(%esp)
movzbl (%ecx),%eax
lea    0x24(%esp),%edi
movl   $0x0,0xc(%esp)
nop
test   %al,%al
je     8058d01 <fchmod@plt+0xf971>
lea    0x1(%ecx),%edx
mov    %edx,0x50(%esp)
movzbl (%ecx),%eax
cmp    $0x2b,%al
movsbl %al,%ebx
je     8058f88 <fchmod@plt+0xfbf8>
jle    8058dc0 <fchmod@plt+0xfa30>
cmp    $0x39,%al
jg     8058f10 <fchmod@plt+0xfb80>
cmp    $0x30,%al
lea    0x0(%esi),%esi
jge    8058f70 <fchmod@plt+0xfbe0>
cmp    $0x2d,%al
jne    8058dde <fchmod@plt+0xfa4e>
movzbl 0x1(%ecx),%eax
cmp    $0x2d,%al
je     80590a8 <fchmod@plt+0xfd18>
cmp    $0x2b,%al
jne    8059098 <fchmod@plt+0xfd08>
lea    0x2(%ecx),%edx
mov    %edx,0x50(%esp)
movzbl 0x2(%ecx),%eax
mov    %edx,%ecx
movl   $0x1,0xc(%esp)
test   %al,%al
jne    8058d5c <fchmod@plt+0xf9cc>
jmp    8058d01 <fchmod@plt+0xf971>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%al
je     8058ff0 <fchmod@plt+0xfc60>
cmp    $0x24,%al
lea    0x0(%esi),%esi
je     8058ff0 <fchmod@plt+0xfc60>
cmp    $0x9,%al
je     8058ff0 <fchmod@plt+0xfc60>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
mov    %ecx,%ebp
movl   $0x0,0x24(%esp)
je     8058f48 <fchmod@plt+0xfbb8>
movzbl 0x0(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
sub    $0x61,%eax
cmp    $0x19,%al
setbe  %al
movzbl %al,%eax
mov    %eax,%esi
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80596c0 <fchmod@plt+0x10330>
mov    %eax,%ebx
mov    0x1c(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,0x50(%esp)
movzbl (%eax),%edx
test   $0xdf,%dl
je     8058e5f <fchmod@plt+0xfacf>
cmp    $0x3d,%dl
jne    80590f0 <fchmod@plt+0xfd60>
test   %ebx,%ebx
je     8058e58 <fchmod@plt+0xfac8>
mov    0x8(%ebx),%edx
and    $0x1f,%edx
cmp    $0x8,%edx
je     8058e58 <fchmod@plt+0xfac8>
cmp    $0x4,%edx
jne    8059130 <fchmod@plt+0xfda0>
add    $0x1,%eax
mov    %eax,0x50(%esp)
test   %ebx,%ebx
je     80590f0 <fchmod@plt+0xfd60>
mov    0x8(%ebx),%eax
movl   $0x0,0x20(%esp)
and    $0x1f,%eax
cmp    $0x2,%eax
je     8059070 <fchmod@plt+0xfce0>
jle    8059000 <fchmod@plt+0xfc70>
cmp    $0x4,%eax
je     8059028 <fchmod@plt+0xfc98>
cmp    $0x8,%eax
jne    8059068 <fchmod@plt+0xfcd8>
mov    0x50(%esp),%eax
movzbl (%eax),%ecx
test   %cl,%cl
je     8059114 <fchmod@plt+0xfd84>
cmp    $0x20,%cl
lea    0x1(%eax),%edx
jne    8058ebf <fchmod@plt+0xfb2f>
lea    0x0(%esi),%esi
mov    %edx,0x50(%esp)
mov    %edx,%eax
add    $0x1,%edx
cmpb   $0x20,-0x1(%edx)
je     8058eb0 <fchmod@plt+0xfb20>
mov    0x1c(%ebx),%edx
mov    %ebp,%ecx
mov    %edx,(%esp)
lea    0x20(%esp),%edx
call   80589d0 <fchmod@plt+0xf640>
test   %eax,%eax
mov    %eax,0x50(%esp)
je     8058d01 <fchmod@plt+0xf971>
mov    0x20(%esp),%eax
mov    0x14(%ebx),%edx
test   %edx,%edx
je     8058ef8 <fchmod@plt+0xfb68>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   *%edx
mov    0x20(%esp),%eax
test   %eax,%eax
je     8058f04 <fchmod@plt+0xfb74>
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x50(%esp),%ecx
movzbl (%ecx),%eax
jmp    8058d58 <fchmod@plt+0xf9c8>
cmp    $0x6e,%al
jne    8058dde <fchmod@plt+0xfa4e>
mov    0x806f1d8,%ebp
mov    0x1c(%esp),%ecx
test   %ebp,%ebp
je     8058de2 <fchmod@plt+0xfa52>
test   %ecx,%ecx
mov    $0x7a,%ebx
movl   $0x0,0x24(%esp)
mov    %ecx,%ebp
jne    8058df4 <fchmod@plt+0xfa64>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8058b30 <fchmod@plt+0xf7a0>
mov    %ebx,(%esp)
mov    %eax,%ebp
lea    -0x61(%ebx),%eax
cmp    $0x19,%eax
setbe  %al
movzbl %al,%eax
mov    %eax,%esi
call   8059670 <fchmod@plt+0x102e0>
mov    %eax,%ebx
jmp    8058e5f <fchmod@plt+0xfacf>
nop
mov    %ecx,0x50(%esp)
mov    $0x7a,%ebx
mov    0x1c(%esp),%ecx
jmp    8058de2 <fchmod@plt+0xfa52>
lea    0x0(%esi),%esi
movl   $0x2b,(%esp)
movl   $0x1,0x806f180
00
call   8058b30 <fchmod@plt+0xf7a0>
lea    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,%ecx
mov    0x50(%esp),%eax
call   80589d0 <fchmod@plt+0xf640>
test   %eax,%eax
mov    %eax,0x50(%esp)
je     8058d01 <fchmod@plt+0xf971>
mov    0x20(%esp),%eax
cmpb   $0x2b,(%eax)
je     80590c8 <fchmod@plt+0xfd38>
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x5e20>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x50(%esp),%ecx
movzbl (%ecx),%eax
jmp    8058d58 <fchmod@plt+0xf9c8>
lea    0x0(%esi),%esi
movzbl 0x1(%ecx),%eax
mov    %edx,%ecx
jmp    8058d58 <fchmod@plt+0xf9c8>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
jne    8059068 <fchmod@plt+0xfcd8>
mov    0xc(%esp),%esi
test   %esi,%esi
jne    8059058 <fchmod@plt+0xfcc8>
mov    0xc(%ebx),%ecx
xor    %edx,%edx
mov    0x10(%ebx),%eax
test   %ecx,%ecx
sete   %dl
mov    %edx,(%eax)
xor    %eax,%eax
jmp    8058ee0 <fchmod@plt+0xfb50>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
cmpb   $0x0,(%eax)
je     8059114 <fchmod@plt+0xfd84>
lea    0x50(%esp),%eax
mov    0x10(%ebx),%esi
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    %eax,(%esi)
jmp    8058edc <fchmod@plt+0xfb4c>
nop
mov    0x10(%ebx),%eax
mov    0xc(%ebx),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    8058ee0 <fchmod@plt+0xfb50>
nop
xor    %eax,%eax
jmp    8058ee0 <fchmod@plt+0xfb50>
nop
mov    0xc(%esp),%ebp
test   %ebp,%ebp
jne    8059058 <fchmod@plt+0xfcc8>
test   %esi,%esi
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
je     80590e0 <fchmod@plt+0xfd50>
xor    %eax,%eax
cmp    $0x1,%edx
setne  %al
mov    %eax,(%ecx)
xor    %eax,%eax
jmp    8058ee0 <fchmod@plt+0xfb50>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ecx
movl   $0x0,0xc(%esp)
jmp    8058d58 <fchmod@plt+0xf9c8>
nop
add    $0x2,%ecx
mov    %ecx,0x50(%esp)
mov    %ecx,%ebp
mov    %ecx,0x1c(%esp)
movl   $0x0,0x24(%esp)
jmp    8058df4 <fchmod@plt+0xfa64>
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,0x806c2a4
jmp    8058fd5 <fchmod@plt+0xfc45>
lea    0x0(%esi),%esi
cmp    $0x2,%edx
cmove  0xc(%esp),%eax
jmp    805908a <fchmod@plt+0xfcfa>
lea    0x0(%esi),%esi
cmpl   $0x1,0x24(%esp)
lea    0x28(%esp),%eax
mov    %ebp,0x28(%esp)
mov    %eax,0x4(%esp)
je     805911f <fchmod@plt+0xfd8f>
movl   $0x80629ac,(%esp)
call   805a070 <error>
jmp    8058d01 <fchmod@plt+0xf971>
mov    %ebx,0x806f1d4
jmp    8058d01 <fchmod@plt+0xf971>
movl   $0x8062970,(%esp)
call   805a070 <error>
jmp    8058d01 <fchmod@plt+0xf971>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x8062944,(%esp)
mov    %ebp,0x28(%esp)
call   805a070 <error>
jmp    8058d01 <fchmod@plt+0xf971>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x3c(%esp),%edi
mov    0x30(%esp),%esi
mov    %edi,%ebx
and    $0xffffffbf,%ebx
test   %esi,%esi
je     8059408 <fchmod@plt+0x10078>
cmp    $0x1,%ebx
mov    0x8(%esi),%edx
je     8059280 <fchmod@plt+0xfef0>
test   %ebx,%ebx
jne    8059184 <fchmod@plt+0xfdf4>
test   $0x1,%dh
jne    80592b0 <fchmod@plt+0xff20>
mov    %edx,%eax
and    $0x1f,%eax
cmp    $0x4,%eax
je     8059260 <fchmod@plt+0xfed0>
cmp    $0x8,%eax
je     8059260 <fchmod@plt+0xfed0>
test   %ebx,%ebx
je     80591d8 <fchmod@plt+0xfe48>
and    $0x80,%edx
jne    8059360 <fchmod@plt+0xffd0>
cmp    $0x2,%eax
je     8059378 <fchmod@plt+0xffe8>
jle    8059308 <fchmod@plt+0xff78>
cmp    $0x4,%eax
lea    0x0(%esi),%esi
je     80593b8 <fchmod@plt+0x10028>
cmp    $0x8,%eax
jne    80591d8 <fchmod@plt+0xfe48>
lea    -0x2(%ebx),%eax
cmp    $0x1,%eax
jbe    8059438 <fchmod@plt+0x100a8>
nop
mov    0x14(%esi),%edx
test   %edx,%edx
je     80591f4 <fchmod@plt+0xfe64>
mov    0x38(%esp),%ecx
cmp    $0x1,%ebx
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edx
test   %ebx,%ebx
je     8059202 <fchmod@plt+0xfe72>
testb  $0x80,0x8(%esi)
jne    8059348 <fchmod@plt+0xffb8>
and    $0x40,%edi
jne    8059240 <fchmod@plt+0xfeb0>
mov    0x8(%esi),%eax
and    $0x1f,%eax
je     8059240 <fchmod@plt+0xfeb0>
cmp    $0x2,%eax
jle    80592e0 <fchmod@plt+0xff50>
cmp    $0x4,%eax
jne    8059240 <fchmod@plt+0xfeb0>
mov    0x10(%esi),%eax
mov    (%eax),%eax
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   805a070 <error>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8059254 <fchmod@plt+0xfec4>
testb  $0x20,0x8(%esi)
je     8059254 <fchmod@plt+0xfec4>
movl   $0x1,0x806ffbc
00
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebx
jne    805919b <fchmod@plt+0xfe0b>
mov    0x38(%esp),%ecx
cmpb   $0x0,(%ecx)
jne    805919f <fchmod@plt+0xfe0f>
xor    %ebx,%ebx
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi),%esi
test   $0x40,%dl
je     8059184 <fchmod@plt+0xfdf4>
mov    0x4(%esi),%edx
movzbl (%esi),%eax
call   8058aa0 <fchmod@plt+0xf710>
movl   $0x806290a,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
jmp    8059254 <fchmod@plt+0xfec4>
xchg   %ax,%ax
mov    0x4(%esi),%edx
movzbl (%esi),%eax
call   8058aa0 <fchmod@plt+0xf710>
movl   $0x8062926,(%esp)
mov    %eax,0x18(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   805a070 <error>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    0x10(%esi),%eax
mov    (%eax),%eax
mov    0x18(%esi,%eax,4),%eax
mov    %eax,(%esp)
call   805a070 <error>
test   %ebx,%ebx
jne    8059244 <fchmod@plt+0xfeb4>
jmp    8059254 <fchmod@plt+0xfec4>
xchg   %ax,%ax
cmp    $0x1,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
jne    80591d8 <fchmod@plt+0xfe48>
cmp    $0x2,%ebx
je     8059428 <fchmod@plt+0x10098>
cmp    $0x3,%ebx
je     8059458 <fchmod@plt+0x100c8>
cmp    $0x1,%ebx
jne    80591d8 <fchmod@plt+0xfe48>
mov    0x10(%esi),%eax
xor    %edx,%edx
mov    (%eax),%ecx
test   %ecx,%ecx
sete   %dl
mov    %edx,(%eax)
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi,%eiz,1),%esi
call   805c8e0 <error+0x2870>
and    $0x40,%edi
jne    8059240 <fchmod@plt+0xfeb0>
jmp    8059207 <fchmod@plt+0xfe77>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   805b8e0 <error+0x1870>
mov    0x8(%esi),%eax
and    $0x1f,%eax
jmp    80591ab <fchmod@plt+0xfe1b>
nop
cmp    $0x2,%ebx
je     8059428 <fchmod@plt+0x10098>
cmp    $0x3,%ebx
je     8059490 <fchmod@plt+0x10100>
cmp    $0x1,%ebx
jne    80591d8 <fchmod@plt+0xfe48>
mov    0x10(%esi),%edx
cmpl   $0x0,0x34(%esp)
mov    (%edx),%ecx
je     80594a1 <fchmod@plt+0x10111>
xor    %eax,%eax
cmp    $0x1,%ecx
setne  %al
mov    %eax,(%edx)
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi),%esi
cmp    $0x2,%ebx
je     8059428 <fchmod@plt+0x10098>
cmp    $0x3,%ebx
je     8059470 <fchmod@plt+0x100e0>
cmp    $0x1,%ebx
jne    80591d8 <fchmod@plt+0xfe48>
lea    0x14(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    0x14(%esp),%edx
test   %edx,%edx
jne    80591d8 <fchmod@plt+0xfe48>
mov    0x10(%esi),%edx
mov    %eax,(%edx)
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x80628fb,(%esp)
call   805a070 <error>
jmp    8059254 <fchmod@plt+0xfec4>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%edx
mov    0x10(%esi),%eax
mov    %edx,(%eax)
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x80629dc,(%esp)
call   805a070 <error>
jmp    8059254 <fchmod@plt+0xfec4>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%ecx
xor    %edx,%edx
mov    0x10(%esi),%eax
test   %ecx,%ecx
sete   %dl
mov    %edx,(%eax)
jmp    80591d8 <fchmod@plt+0xfe48>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x8062a08,(%esp)
call   805a070 <error>
jmp    8059254 <fchmod@plt+0xfec4>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x0,0x34(%esp)
mov    0x10(%esi),%edx
mov    0xc(%esi),%ecx
jne    80593a3 <fchmod@plt+0x10013>
cmp    $0x2,%ecx
cmove  0x34(%esp),%eax
mov    %eax,(%edx)
jmp    80591d8 <fchmod@plt+0xfe48>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,%esi
movsbl (%eax),%eax
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    8059518 <fchmod@plt+0x10188>
mov    0x48(%esp),%edi
test   %edi,%edi
jne    80595a0 <fchmod@plt+0x10210>
mov    0x44(%esp),%esi
mov    $0xffffffff,%eax
test   %esi,%esi
je     805950f <fchmod@plt+0x1017f>
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
lea    0x18(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x80628df,(%esp)
mov    %eax,0x18(%esp)
call   805a070 <error>
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %ebx,%ebx
xor    %ecx,%ecx
jmp    8059522 <fchmod@plt+0x10192>
xchg   %ax,%ax
mov    %ebp,%ebx
lea    (%ecx,%ecx,4),%edx
add    $0x1,%esi
lea    -0x30(%eax,%edx,2),%ecx
movsbl (%esi),%eax
lea    0x1(%ebx),%ebp
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    8059520 <fchmod@plt+0x10190>
mov    %ebp,%edx
mov    $0x66666667,%ebp
cmp    $0x6,%edx
jle    8059580 <fchmod@plt+0x101f0>
xchg   %ax,%ax
mov    %ecx,%eax
sub    $0x1,%ebx
imul   %ebp
sar    $0x1f,%ecx
lea    0x1(%ebx),%eax
sar    $0x2,%edx
sub    %ecx,%edx
cmp    $0x6,%eax
mov    %edx,%ecx
jg     8059548 <fchmod@plt+0x101b8>
mov    0x48(%esp),%ebx
mov    %esi,(%edi)
test   %ebx,%ebx
je     80595b8 <fchmod@plt+0x10228>
mov    0x48(%esp),%eax
movl   $0x0,(%eax)
add    $0x2c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2,%ebx
cmp    $0x6,%edx
je     8059561 <fchmod@plt+0x101d1>
add    $0x1,%ebx
lea    (%ecx,%ecx,4),%ecx
lea    -0x1(%ebx),%eax
add    %ecx,%ecx
cmp    $0x5,%eax
jle    8059588 <fchmod@plt+0x101f8>
jmp    8059561 <fchmod@plt+0x101d1>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
movl   $0x1,(%eax)
mov    $0xffffffff,%eax
jmp    805950f <fchmod@plt+0x1017f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%eax
jmp    805950f <fchmod@plt+0x1017f>
nop
mov    0x806f1d8,%eax
test   %eax,%eax
je     80595d8 <fchmod@plt+0x10248>
cmpl   $0x1,0x8070008
sbb    %eax,%eax
not    %eax
add    $0x2,%eax
ret
mov    0x8070008,%eax
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x805e1d4,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
je     80595f9 <fchmod@plt+0x10269>
cmpb   $0x31,(%eax)
je     8059650 <fchmod@plt+0x102c0>
cmpb   $0x0,0x806ba60
mov    $0x806ba60,%ebx
jne    8059618 <fchmod@plt+0x10288>
jmp    8059644 <fchmod@plt+0x102b4>
lea    0x0(%esi,%eiz,1),%esi
add    $0x24,%ebx
cmpb   $0x0,(%ebx)
je     8059644 <fchmod@plt+0x102b4>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     8059624 <fchmod@plt+0x10294>
mov    0xc(%ebx),%edx
mov    %edx,(%eax)
testb  $0x2,0x9(%ebx)
je     8059610 <fchmod@plt+0x10280>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   *0x14(%ebx)
add    $0x24,%ebx
cmpb   $0x0,(%ebx)
jne    8059618 <fchmod@plt+0x10288>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%eax)
jne    80595f9 <fchmod@plt+0x10269>
movl   $0x1,0x806f1d8
00
jmp    80595f9 <fchmod@plt+0x10269>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
movsbl 0x806ba60,%edx
mov    0x4(%esp),%ecx
test   %dl,%dl
je     80596ab <fchmod@plt+0x1031b>
cmp    %ecx,%edx
mov    $0x806ba60,%eax
jne    8059694 <fchmod@plt+0x10304>
jmp    80596b0 <fchmod@plt+0x10320>
lea    0x0(%esi),%esi
cmp    %ecx,%edx
je     80596b0 <fchmod@plt+0x10320>
testb  $0x2,0x8(%eax)
je     80596a1 <fchmod@plt+0x10311>
sub    $0x20,%edx
cmp    %ecx,%edx
je     80596b0 <fchmod@plt+0x10320>
add    $0x24,%eax
movsbl (%eax),%edx
test   %dl,%dl
jne    8059690 <fchmod@plt+0x10300>
xor    %eax,%eax
ret
xchg   %ax,%ax
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpb   $0x0,0x806ba60
mov    (%eax),%edi
je     8059836 <fchmod@plt+0x104a6>
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
movl   $0x806ba60,0x18(%esp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    0x4(%eax),%ebp
test   %ebp,%ebp
je     8059787 <fchmod@plt+0x103f7>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
mov    %ebx,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049930 <fchmod@plt+0x5a0>
test   %eax,%eax
mov    %eax,%esi
jle    8059778 <fchmod@plt+0x103e8>
movzbl (%edi,%eax,1),%eax
mov    %eax,%edx
and    $0xffffffdf,%edx
sub    $0x41,%edx
cmp    $0x19,%dl
jbe    8059778 <fchmod@plt+0x103e8>
cmp    $0x2d,%al
je     8059778 <fchmod@plt+0x103e8>
cmp    0x1c(%esp),%esi
jne    80597c0 <fchmod@plt+0x10430>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
jne    80597c0 <fchmod@plt+0x10430>
movl   $0x0,0x20(%esp)
movl   $0x1,0x24(%esp)
mov    0x18(%esp),%eax
testb  $0x2,0x8(%eax)
je     8059780 <fchmod@plt+0x103f0>
add    $0x1,%ebx
cmp    $0x2,%ebx
jne    8059722 <fchmod@plt+0x10392>
mov    0x4(%ebp),%ebp
test   %ebp,%ebp
jne    8059720 <fchmod@plt+0x10390>
addl   $0x24,0x18(%esp)
mov    0x18(%esp),%eax
cmpb   $0x0,(%eax)
jne    8059710 <fchmod@plt+0x10380>
mov    0x24(%esp),%ebp
test   %ebp,%ebp
je     80597fa <fchmod@plt+0x1046a>
mov    0x58(%esp),%ebx
test   %ebx,%ebx
je     8059828 <fchmod@plt+0x10498>
mov    0x58(%esp),%eax
movl   $0x1,(%eax)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    0x1c(%esp),%esi
jle    805976e <fchmod@plt+0x103de>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %esi,0x1c(%esp)
mov    %ebp,0x2c(%esp)
movl   $0x0,0x24(%esp)
cmp    %esi,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x20(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x28(%esp)
jmp    805976e <fchmod@plt+0x103de>
mov    0x54(%esp),%esi
mov    0x50(%esp),%eax
add    0x1c(%esp),%edi
test   %esi,%esi
mov    %edi,(%eax)
je     805981c <fchmod@plt+0x1048c>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8059832 <fchmod@plt+0x104a2>
mov    (%eax),%eax
mov    0x54(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8059816 <fchmod@plt+0x10486>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0x0,0x28(%esp)
mov    %edi,(%eax)
xor    %eax,%eax
test   %edx,%edx
jne    8059816 <fchmod@plt+0x10486>
jmp    80597b5 <fchmod@plt+0x10425>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x98,%esp
nop
movl   $0x806f200,(%esp)
call   8048f80 <_setjmp@plt>
test   %eax,%eax
jne    8059938 <fchmod@plt+0x105a8>
call   8059b10 <fchmod@plt+0x10780>
mov    0xa8(%esp),%eax
movl   $0x1,0x8070058
00
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   8048f40 <read@plt>
mov    0x806ffa0,%edx
test   %edx,%edx
jne    8059902 <fchmod@plt+0x10572>
test   %eax,%eax
jne    80598f8 <fchmod@plt+0x10568>
mov    0x806f1e0,%ecx
lea    0x1(%ecx),%edx
cmp    $0x14,%edx
mov    %edx,0x806f1e0
jle    8059902 <fchmod@plt+0x10572>
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
call   80499a0 <fchmod@plt+0x610>
mov    0xc(%esp),%eax
movl   $0x0,0x8070058
00
add    $0x98,%esp
pop    %ebx
ret
movl   $0x0,0x806f1e0
00
test   %eax,%eax
movl   $0x0,0x8070058
00
jns    80598f0 <fchmod@plt+0x10560>
call   8049210 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
je     8059868 <fchmod@plt+0x104d8>
cmp    $0xb,%eax
je     8059868 <fchmod@plt+0x104d8>
add    $0x98,%esp
mov    $0xffffffff,%eax
pop    %ebx
ret
xchg   %ax,%ax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
movl   $0x0,0x8070058
00
call   8049270 <sigemptyset@plt>
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x2,(%esp)
call   8048f70 <sigprocmask@plt>
add    $0x98,%esp
mov    $0xfffffffe,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,0x4(%esp)
movl   $0x806f200,(%esp)
call   8049260 <__longjmp_chk@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8048fe0 <time@plt>
mov    0x1c(%esp),%eax
add    $0x2c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049210 <__errno_location@plt>
mov    0x40(%esp),%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049140 <strerror@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   80491a0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
lea    0x3(%edi,%eax,1),%ebp
mov    %ebp,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,0x18(%esp)
mov    %ebx,0x14(%esp)
mov    %ebp,0x4(%esp)
movl   $0x8063554,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
call   8048f00 <__snprintf_chk@plt>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
sub    $0x14,%esp
fildll 0x18(%esp)
fmuls  0x806355c
fnstcw 0xe(%esp)
movzwl 0xe(%esp),%eax
fildll 0x20(%esp)
fdivrp %st,%st(1)
mov    $0xc,%ah
mov    %ax,0xc(%esp)
fadds  0x8063560
fldcw  0xc(%esp)
fistpll (%esp)
fldcw  0xe(%esp)
mov    (%esp),%eax
add    $0x14,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    $0x51eb851f,%esi
push   %ebx
sub    $0x14,%esp
mov    0x34(%esp),%ebp
imul   $0x2710,0x30(%esp),%edi
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%ebx
mov    %ebp,%eax
imul   %esi
xor    %eax,%eax
sar    $0x1f,%ebp
mov    %edx,%esi
xor    %edx,%edx
sar    $0x5,%esi
sub    %ebp,%esi
add    %edi,%esi
je     8059afa <fchmod@plt+0x1076a>
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
fildll 0x8(%esp)
mov    %esi,0x4(%esp)
fildl  0x4(%esp)
fmulp  %st,%st(1)
fnstcw 0x2(%esp)
movzwl 0x2(%esp),%eax
fdivs  0x8063564
mov    $0xc,%ah
mov    %ax,(%esp)
fadds  0x8063560
fldcw  (%esp)
fistpll 0x8(%esp)
fldcw  0x2(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x806c224,%ebx
sub    $0x806f2a0,%ebx
je     8059b5c <fchmod@plt+0x107cc>
cmpl   $0x1,0x806c298
mov    %ebx,0x8(%esp)
movl   $0x806f2a0,0x4(%esp)
sbb    %eax,%eax
not    %eax
add    $0x2,%eax
mov    %eax,(%esp)
call   80491e0 <write@plt>
cmp    %ebx,%eax
je     8059b52 <fchmod@plt+0x107c2>
movl   $0x1,0x806ffbc
00
movl   $0x806f2a0,0x806c224
08
add    $0x18,%esp
pop    %ebx
ret
jmp    8059b70 <fchmod@plt+0x107e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x8,%esp
mov    0x8070060,%eax
mov    0x10(%esp),%ebx
test   %eax,%eax
jne    8059bb8 <fchmod@plt+0x10828>
mov    0x806c224,%edx
cmp    $0x806f69f,%edx
jb     8059b9a <fchmod@plt+0x1080a>
call   8059b10 <fchmod@plt+0x10780>
mov    0x806c224,%edx
lea    0x1(%edx),%eax
mov    %bl,(%edx)
mov    %eax,0x806c224
mov    %ebx,%eax
movl   $0x0,0x8070068
00
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x8070060
00
call   804aed0 <fchmod@plt+0x1b40>
jmp    8059b81 <fchmod@plt+0x107f1>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x3,0x8070078
jne    8059c50 <fchmod@plt+0x108c0>
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x20,%esp
lea    0x1c(%esp),%edi
movl   $0x0,0x8070064
00
jmp    8059c03 <fchmod@plt+0x10873>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
add    $0x1,%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8056740 <fchmod@plt+0xd3b0>
test   %eax,%eax
mov    %eax,%ebx
je     8059c38 <fchmod@plt+0x108a8>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804af40 <fchmod@plt+0x1bb0>
mov    0x1c(%esp),%eax
cmp    $0x8,%ebx
mov    %eax,0x8070064
jne    8059bf8 <fchmod@plt+0x10868>
call   804b000 <fchmod@plt+0x1c70>
jmp    8059c00 <fchmod@plt+0x10870>
xchg   %ax,%ax
nop
lea    0x0(%esi,%eiz,1),%esi
call   804ae10 <fchmod@plt+0x1a80>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x806ffbc
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movsbl (%ebx),%eax
test   %al,%al
je     8059c82 <fchmod@plt+0x108f2>
nop
add    $0x1,%ebx
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl (%ebx),%eax
test   %al,%al
jne    8059c70 <fchmod@plt+0x108e0>
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x54(%esp),%edx
mov    0x50(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    0x58(%esp),%edi
mov    %edx,%esi
shr    $0x1f,%esi
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8059ccd <fchmod@plt+0x1093d>
negl   0x18(%esp)
adcl   $0x0,0x1c(%esp)
negl   0x1c(%esp)
movb   $0x0,0x3b(%esp)
lea    0x3b(%esp),%ebx
xchg   %ax,%ax
mov    0x18(%esp),%eax
sub    $0x1,%ebx
mov    0x1c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805df30 <error+0x3ec0>
mov    0x1c(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x18(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805ddb0 <error+0x3d40>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    8059cd8 <fchmod@plt+0x10948>
test   %esi,%esi
mov    %ebx,%eax
je     8059d43 <fchmod@plt+0x109b3>
sub    $0x1,%ebx
movb   $0x2d,-0x1(%eax)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80490e0 <strcpy@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8059d63 <fchmod@plt+0x109d3>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049040 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x54(%esp),%edx
mov    0x50(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    0x58(%esp),%edi
mov    %edx,%esi
shr    $0x1f,%esi
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8059dad <fchmod@plt+0x10a1d>
negl   0x18(%esp)
adcl   $0x0,0x1c(%esp)
negl   0x1c(%esp)
movb   $0x0,0x3b(%esp)
lea    0x3b(%esp),%ebx
xchg   %ax,%ax
mov    0x18(%esp),%eax
sub    $0x1,%ebx
mov    0x1c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805df30 <error+0x3ec0>
mov    0x1c(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x18(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805ddb0 <error+0x3d40>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    8059db8 <fchmod@plt+0x10a28>
test   %esi,%esi
mov    %ebx,%eax
je     8059e23 <fchmod@plt+0x10a93>
sub    $0x1,%ebx
movb   $0x2d,-0x1(%eax)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80490e0 <strcpy@plt>
mov    0x3c(%esp),%eax
xor    %gs:0x14,%eax
jne    8059e43 <fchmod@plt+0x10ab3>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049040 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    $0x66666667,%esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ecx
lea    0x2b(%esp),%ebx
mov    0x54(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
movb   $0x0,0x2b(%esp)
mov    %ecx,%edi
mov    %ecx,%eax
shr    $0x1f,%edi
neg    %eax
test   %edi,%edi
cmovne %eax,%ecx
nop
mov    %ecx,%eax
sub    $0x1,%ebx
imul   %esi
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
sub    %eax,%ecx
add    $0x30,%ecx
test   %edx,%edx
mov    %cl,(%ebx)
mov    %edx,%ecx
jne    8059e88 <fchmod@plt+0x10af8>
test   %edi,%edi
mov    %ebx,%eax
je     8059eb8 <fchmod@plt+0x10b28>
sub    $0x1,%ebx
movb   $0x2d,-0x1(%eax)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   80490e0 <strcpy@plt>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    8059ed9 <fchmod@plt+0x10b49>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049040 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x0(%ebp),%eax
test   %al,%al
je     8059f22 <fchmod@plt+0x10b92>
cmp    $0x25,%al
je     8059f40 <fchmod@plt+0x10bb0>
add    $0x1,%ebp
add    $0x1,%ebx
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl 0x0(%ebp),%eax
test   %al,%al
jne    8059f08 <fchmod@plt+0x10b78>
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    805a028 <fchmod@plt+0x10c98>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%eax
lea    0x2(%ebp),%edi
cmp    $0x6e,%al
je     8059fe8 <fchmod@plt+0x10c58>
cmp    $0x73,%al
je     8059fb0 <fchmod@plt+0x10c20>
cmp    $0x64,%al
je     8059f60 <fchmod@plt+0x10bd0>
mov    %edi,%ebp
jmp    8059f00 <fchmod@plt+0x10b70>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x17(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
lea    0x17(%esp),%ebp
mov    %eax,(%esp)
call   8059e50 <fchmod@plt+0x10ac0>
movsbl 0x17(%esp),%eax
test   %al,%al
je     8059f93 <fchmod@plt+0x10c03>
nop
add    $0x1,%ebp
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl 0x0(%ebp),%eax
test   %al,%al
jne    8059f80 <fchmod@plt+0x10bf0>
lea    0x17(%esp),%eax
add    $0x8,%esi
mov    %eax,(%esp)
mov    %edi,%ebp
call   80491a0 <strlen@plt>
add    %eax,%ebx
jmp    8059f00 <fchmod@plt+0x10b70>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%ecx
add    $0x8,%esi
movsbl (%ecx),%eax
test   %al,%al
je     8059f57 <fchmod@plt+0x10bc7>
sub    %ebx,%ecx
mov    %ebx,%ebp
mov    %ecx,%ebx
lea    0x0(%esi),%esi
add    $0x1,%ebp
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl (%ebx,%ebp,1),%eax
test   %al,%al
jne    8059fc8 <fchmod@plt+0x10c38>
mov    %ebp,%ebx
mov    %edi,%ebp
jmp    8059f00 <fchmod@plt+0x10b70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x17(%esp),%eax
mov    0x4(%esi),%edx
mov    %eax,0x8(%esp)
mov    (%esi),%eax
lea    0x17(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8059d70 <fchmod@plt+0x109e0>
movsbl 0x17(%esp),%eax
test   %al,%al
je     8059f93 <fchmod@plt+0x10c03>
xchg   %ax,%ax
add    $0x1,%ebp
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl 0x0(%ebp),%eax
test   %al,%al
jne    805a010 <fchmod@plt+0x10c80>
jmp    8059f93 <fchmod@plt+0x10c03>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
call   805dd30 <error+0x3cc0>
cmp    $0xa,%eax
je     805a047 <fchmod@plt+0x10cb7>
cmp    $0xd,%eax
je     805a047 <fchmod@plt+0x10cb7>
cmp    $0x20,%eax
jne    805a050 <fchmod@plt+0x10cc0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xfffffffe,%eax
je     805a047 <fchmod@plt+0x10cb7>
mov    %eax,(%esp)
call   804f170 <fchmod@plt+0x5de0>
add    $0x1c,%esp
ret
jmp    805a070 <error>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x806c298,%ecx
addl   $0x1,0x807005c
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
test   %ecx,%ecx
je     805a09f <error+0x2f>
mov    0x806ff34,%edi
test   %edi,%edi
jne    805a138 <error+0xc8>
call   8059ee0 <fchmod@plt+0x10b50>
mov    0x806c298,%ecx
test   %ecx,%ecx
mov    %eax,%edi
je     805a120 <error+0xb0>
mov    0x806ff34,%edx
test   %edx,%edx
je     805a120 <error+0xb0>
movsbl 0x806c1f8,%edx
mov    $0x806c1f8,%ebx
test   %dl,%dl
je     805a0e2 <error+0x72>
lea    0x0(%esi),%esi
add    $0x1,%ebx
mov    %edx,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl (%ebx),%edx
test   %dl,%dl
jne    805a0d0 <error+0x60>
call   804ae10 <fchmod@plt+0x1a80>
mov    0x806ff74,%eax
add    %edi,%esi
lea    0x11(%eax,%esi,1),%ebx
call   805a030 <fchmod@plt+0x10ca0>
call   804abc0 <fchmod@plt+0x1830>
call   804ad10 <fchmod@plt+0x1980>
cmp    0x806ff70,%ebx
jl     805a113 <error+0xa3>
movl   $0x1,0x806ffbc
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8059b10 <fchmod@plt+0x10780>
xchg   %ax,%ax
movl   $0xa,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8059b70 <fchmod@plt+0x107e0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8070040,%ebx
test   %ebx,%ebx
je     805a178 <error+0x108>
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   804ae10 <fchmod@plt+0x1a80>
call   804aed0 <fchmod@plt+0x1b40>
movl   $0x8,(%esp)
call   804ad40 <fchmod@plt+0x19b0>
mov    0x806ff58,%esi
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
jmp    805a09f <error+0x2f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80534d0 <fchmod@plt+0xa140>
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
jmp    805a142 <error+0xd2>
nop
push   %ebx
mov    $0x806c209,%ebx
sub    $0x18,%esp
call   804ae10 <fchmod@plt+0x1a80>
call   804aed0 <fchmod@plt+0x1b40>
movl   $0x8,(%esp)
call   804ad40 <fchmod@plt+0x19b0>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
call   8059ee0 <fchmod@plt+0x10b50>
movsbl 0x806c209,%eax
test   %al,%al
je     805a1da <error+0x16a>
nop
add    $0x1,%ebx
mov    %eax,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
movsbl (%ebx),%eax
test   %al,%al
jne    805a1c8 <error+0x158>
call   804ae10 <fchmod@plt+0x1a80>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x1,0x8070060
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x806c298,%eax
test   %eax,%eax
je     805a216 <error+0x1a6>
mov    0x806ff34,%eax
test   %eax,%eax
jne    805a270 <error+0x200>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
call   8059ee0 <fchmod@plt+0x10b50>
call   805dd30 <error+0x3cc0>
mov    %eax,%ebx
mov    0x806c298,%eax
test   %eax,%eax
je     805a23c <error+0x1cc>
mov    0x806ff34,%eax
test   %eax,%eax
jne    805a250 <error+0x1e0>
movl   $0xa,(%esp)
call   8059b70 <fchmod@plt+0x107e0>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
call   804abc0 <fchmod@plt+0x1830>
mov    0x806ff70,%eax
test   %eax,%eax
jle    805a278 <error+0x208>
call   8059b10 <fchmod@plt+0x10780>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   804aed0 <fchmod@plt+0x1b40>
jmp    805a216 <error+0x1a6>
nop
movl   $0x1,0x806ffbc
00
jmp    805a25e <error+0x1ee>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
cmpl   $0x2,0x806ffdc
mov    %esi,%ebx
je     805a328 <error+0x2b8>
mov    0x44(%esp),%edi
and    $0x1000,%edi
je     805a2d0 <error+0x260>
xor    %edi,%edi
cmp    %esi,%ebx
je     805a2c4 <error+0x254>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x20,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
movl   $0x3b2fc,(%esp)
mov    %eax,%ebp
call   80492e0 <re_set_syntax@plt>
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80492c0 <re_compile_pattern@plt>
test   %eax,%eax
jne    805a380 <error+0x310>
mov    0x48(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     805a320 <error+0x2b0>
mov    %eax,(%esp)
call   80490d0 <regfree@plt>
mov    0x48(%esp),%eax
mov    %ebp,(%eax)
jmp    805a2b8 <error+0x248>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8050bf0 <fchmod@plt+0x7860>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049a20 <fchmod@plt+0x690>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8050c50 <fchmod@plt+0x78c0>
jmp    805a2aa <error+0x23a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    $0xffffffff,%edi
call   8048f90 <free@plt>
movl   $0x0,0x4(%esp)
movl   $0x8063568,(%esp)
call   805a070 <error>
jmp    805a2b8 <error+0x248>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805a3c6 <error+0x356>
mov    %eax,(%esp)
call   80490d0 <regfree@plt>
movl   $0x0,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
jmp    805a3e0 <error+0x370>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%edx
testl  $0x1000,0x6c(%esp)
mov    0x50(%esp),%ebx
mov    0x54(%esp),%edi
mov    %edx,0x1c(%esp)
je     805a4ab <error+0x43b>
mov    %edi,(%esp)
call   80491a0 <strlen@plt>
mov    0x1c(%esp),%edx
mov    0x5c(%esp),%esi
add    %edx,%esi
cmp    %esi,%edx
lea    (%edi,%eax,1),%ebx
jae    805a488 <error+0x418>
movzbl (%edi),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
cmp    (%edx),%al
jne    805a598 <error+0x528>
cmp    %ebx,%edi
je     805a598 <error+0x528>
cmp    %edx,%esi
je     805a598 <error+0x528>
mov    %edx,%ecx
mov    %edi,%eax
mov    %edx,0x58(%esp)
jmp    805a468 <error+0x3f8>
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%ebx
je     805a475 <error+0x405>
cmp    %ecx,%esi
je     805a475 <error+0x405>
add    $0x1,%ecx
add    $0x1,%eax
movzbl (%ecx),%edx
cmp    %dl,(%eax)
je     805a460 <error+0x3f0>
cmp    %eax,%ebx
mov    0x58(%esp),%edx
je     805a5a4 <error+0x534>
add    $0x1,%edx
cmp    %esi,%edx
jne    805a438 <error+0x3c8>
xor    %ebx,%ebx
testl  $0x100,0x6c(%esp)
jne    805a563 <error+0x4f3>
test   %ebx,%ebx
mov    $0x1,%eax
jne    805a4a3 <error+0x433>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x4,0x4(%esp)
lea    0x24(%esp),%esi
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
movl   $0x4,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,%ebp
call   8049a20 <fchmod@plt+0x690>
movzbl 0x68(%esp),%ecx
and    $0x1,%ecx
shl    $0x5,%ecx
mov    %eax,%edi
movzbl 0x1c(%ebx),%eax
and    $0xffffffdf,%eax
or     %ecx,%eax
mov    %al,0x1c(%ebx)
mov    %ebx,(%esp)
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
call   8049060 <re_set_registers@plt>
mov    0x5c(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebx,(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
call   80491f0 <re_search@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ebx
not    %ebx
shr    $0x1f,%ebx
test   %ebx,%ebx
jne    805a578 <error+0x508>
mov    %ebp,(%esp)
call   8048f90 <free@plt>
mov    %edi,(%esp)
call   8048f90 <free@plt>
testl  $0x100,0x6c(%esp)
je     805a498 <error+0x428>
test   %ebx,%ebx
jne    805a4a1 <error+0x431>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%eax
mov    (%eax),%esi
add    %edx,%esi
mov    %esi,%eax
mov    0x60(%esp),%esi
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
add    (%eax),%edx
mov    0x64(%esp),%eax
mov    %edx,(%eax)
jmp    805a545 <error+0x4d5>
xchg   %ax,%ax
mov    %edi,%eax
mov    %edx,%ecx
cmp    %eax,%ebx
jne    805a481 <error+0x411>
mov    0x60(%esp),%esi
test   %esi,%esi
je     805a5b2 <error+0x542>
mov    0x60(%esp),%eax
mov    %edx,(%eax)
mov    0x64(%esp),%ebx
test   %ebx,%ebx
je     805a5c7 <error+0x557>
mov    0x64(%esp),%eax
mov    $0x1,%ebx
mov    %ecx,(%eax)
jmp    805a555 <error+0x4e5>
mov    $0x1,%ebx
jmp    805a555 <error+0x4e5>
xchg   %ax,%ax
mov    0x4(%esp),%eax
cmp    $0xfffffffe,%eax
je     805a630 <error+0x5c0>
cmp    $0xffffffff,%eax
je     805a618 <error+0x5a8>
cmp    $0xfffffffd,%eax
je     805a5f8 <error+0x588>
mov    0x806f6a4,%edx
lea    (%edx,%eax,8),%edx
mov    (%edx),%eax
mov    0x4(%edx),%edx
ret
lea    0x0(%esi),%esi
mov    0x806ff64,%eax
sub    $0x1,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
mov    0x806f6a4,%edx
sar    %eax
lea    (%edx,%eax,8),%edx
mov    (%edx),%eax
mov    0x4(%edx),%edx
ret
mov    0x806ff64,%eax
mov    0x806f6a4,%edx
sub    $0x2,%eax
lea    (%edx,%eax,8),%edx
mov    (%edx),%eax
mov    0x4(%edx),%edx
ret
nop
mov    0x806ff64,%eax
mov    0x806f6a4,%edx
sub    $0x1,%eax
lea    (%edx,%eax,8),%edx
mov    (%edx),%eax
mov    0x4(%edx),%edx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x8,%esp
mov    0x806ff64,%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x806f6a4,%edi
cmp    $0x1,%esi
jle    805a699 <error+0x629>
lea    0x8(%edi),%ecx
lea    (%edi,%esi,8),%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
add    $0x8,%ecx
mov    -0x4(%ecx),%edx
mov    %eax,-0x10(%ecx)
mov    %edx,-0xc(%ecx)
cmp    %ebx,%ecx
jne    805a680 <error+0x610>
mov    (%esp),%eax
mov    0x4(%esp),%edx
mov    %eax,-0x8(%edi,%esi,8)
mov    %edx,-0x4(%edi,%esi,8)
add    $0x8,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff64,%eax
push   %edi
mov    0x806f6a4,%edi
push   %esi
push   %ebx
mov    0x10(%esp),%ecx
lea    -0x1(%eax),%esi
mov    0x14(%esp),%ebx
test   %esi,%esi
jle    805a6e4 <error+0x674>
lea    0x0(%esi),%esi
mov    -0x8(%edi,%esi,8),%eax
mov    -0x4(%edi,%esi,8),%edx
mov    %eax,(%edi,%esi,8)
mov    %edx,0x4(%edi,%esi,8)
sub    $0x1,%esi
jne    805a6d0 <error+0x660>
mov    %ecx,(%edi)
mov    %ebx,0x4(%edi)
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x806ff64,%ecx
mov    0x806f6a4,%eax
test   %ecx,%ecx
lea    (%eax,%ecx,8),%edx
jle    805a71c <error+0x6ac>
lea    0x0(%esi),%esi
movl   $0xffffffff,(%eax)
add    $0x8,%eax
movl   $0xffffffff,-0x4(%eax)
cmp    %edx,%eax
jne    805a708 <error+0x698>
repz ret
xchg   %ax,%ax
mov    0x806f6a4,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%ecx
mov    0xc(%esp),%esi
cmp    %ecx,0x4(%edx)
jg     805a778 <error+0x708>
jge    805a770 <error+0x700>
mov    0x806ff64,%ebx
cmp    $0x1,%ebx
jle    805a778 <error+0x708>
cmp    0xc(%edx),%ecx
jl     805a790 <error+0x720>
jg     805a752 <error+0x6e2>
cmp    0x8(%edx),%esi
lea    0x0(%esi,%eiz,1),%esi
jb     805a790 <error+0x720>
mov    $0x1,%eax
nop
add    $0x1,%eax
cmp    %ebx,%eax
je     805a778 <error+0x708>
cmp    0x4(%edx,%eax,8),%ecx
jge    805a780 <error+0x710>
sub    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,(%edx)
jbe    805a737 <error+0x6c7>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
ret
jg     805a758 <error+0x6e8>
cmp    (%edx,%eax,8),%esi
jae    805a758 <error+0x6e8>
jmp    805a765 <error+0x6f5>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805a77d <error+0x70d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    0x806ff64,%ebx
test   %ebx,%ebx
jle    805a7f8 <error+0x788>
mov    0x806f6a4,%esi
mov    (%esi),%eax
mov    0x4(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
ja     805a7ee <error+0x77e>
xor    %ecx,%ecx
cmp    $0x1,%eax
ja     805a7ee <error+0x77e>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ebx,%ecx
je     805a7f8 <error+0x788>
mov    (%esi,%ecx,8),%eax
mov    0x4(%esi,%ecx,8),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
ja     805a7ee <error+0x77e>
cmp    $0x1,%eax
jbe    805a7d0 <error+0x760>
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%ebx
cmp    %ebx,%ecx
jg     805a83c <error+0x7cc>
mov    0x806f6a4,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi,%ecx,8),%eax
mov    0x4(%esi,%ecx,8),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
jbe    805a830 <error+0x7c0>
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
cmp    $0x1,%eax
ja     805a82a <error+0x7ba>
add    $0x1,%ecx
cmp    %ecx,%ebx
jge    805a818 <error+0x7a8>
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
mov    0x806ff64,%edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
test   %edi,%edi
jle    805a897 <error+0x827>
mov    0x806f6a4,%edx
mov    (%edx),%ebx
mov    0x4(%edx),%ecx
mov    %ebx,%eax
and    %ecx,%eax
cmp    $0xffffffff,%eax
jne    805a8c1 <error+0x851>
xor    %eax,%eax
jmp    805a890 <error+0x820>
lea    0x0(%esi),%esi
mov    (%edx,%eax,8),%ebx
mov    0x4(%edx,%eax,8),%ecx
mov    %ebx,%esi
and    %ecx,%esi
cmp    $0xffffffff,%esi
jne    805a8b0 <error+0x840>
add    $0x1,%eax
cmp    %edi,%eax
jne    805a880 <error+0x810>
movl   $0xffffffff,0x0(%ebp)
movl   $0xffffffff,0x4(%ebp)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %eax,0x8(%ebp)
mov    %ebx,0x0(%ebp)
mov    %ecx,0x4(%ebp)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%eax
jmp    805a8b3 <error+0x843>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x806ff64,%eax
cmp    0x806f6a0,%eax
jle    805a972 <error+0x902>
push   %ebx
sub    $0x28,%esp
mov    0x806f6a4,%ebx
test   %ebx,%ebx
je     805a978 <error+0x908>
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   805a850 <error+0x7e0>
mov    %ebx,(%esp)
call   8048f90 <free@plt>
mov    0x806ff64,%eax
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x806ff64,%ebx
test   %ebx,%ebx
mov    %ebx,0x806f6a0
mov    %eax,0x806f6a4
mov    %eax,%edx
lea    (%eax,%ebx,8),%ecx
jle    805a94c <error+0x8dc>
xchg   %ax,%ax
movl   $0xffffffff,(%edx)
add    $0x8,%edx
movl   $0xffffffff,-0x4(%edx)
cmp    %ecx,%edx
jne    805a938 <error+0x8c8>
mov    0x14(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ecx,%ebx
and    %edx,%ebx
cmp    $0xffffffff,%ebx
je     805a96e <error+0x8fe>
mov    0x1c(%esp),%ebx
add    $0x1fffffff,%ebx
mov    %ecx,(%eax,%ebx,8)
mov    %edx,0x4(%eax,%ebx,8)
add    $0x28,%esp
pop    %ebx
repz ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x14(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    805a90c <error+0x89c>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x806ff64,%edx
test   %eax,%eax
js     805a9b8 <error+0x948>
test   %eax,%eax
mov    $0x1,%ecx
cmovle %ecx,%eax
cmp    %edx,%eax
lea    -0x1(%edx),%ecx
cmovge %ecx,%eax
sub    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
add    %edx,%eax
jmp    805a99e <error+0x92e>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
movzbl 0x1(%eax),%edx
mov    $0x1,%ebx
lea    0x1(%eax),%ecx
cmp    $0x3a,%dl
je     805a9f6 <error+0x986>
lea    0x0(%esi),%esi
jg     805aa08 <error+0x998>
test   %dl,%dl
je     805aa00 <error+0x990>
cmp    $0x2e,%dl
jne    805a9e8 <error+0x978>
sub    $0x1,%ebx
je     805a9fb <error+0x98b>
mov    %ecx,%eax
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ecx
cmp    $0x3a,%dl
jne    805a9d8 <error+0x968>
cmp    $0x1,%ebx
jne    805a9e8 <error+0x978>
mov    %ecx,%eax
lea    0x0(%esi),%esi
pop    %ebx
ret
lea    0x0(%esi),%esi
cmp    $0x3f,%dl
je     805aa20 <error+0x9b0>
add    $0x2,%eax
cmp    $0x5c,%dl
cmove  %eax,%ecx
mov    %ecx,%eax
jmp    805a9ea <error+0x97a>
lea    0x0(%esi),%esi
add    $0x1,%ebx
mov    %ecx,%eax
jmp    805a9ea <error+0x97a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    $0x806fedf,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    0x806f6c0,%esi
mov    %edi,0x4(%esp)
sub    %esi,%ebx
mov    %esi,(%esp)
lea    (%esi,%eax,1),%edx
cmp    $0x806fee0,%edx
cmovb  %eax,%ebx
mov    %ebx,0x8(%esp)
add    %esi,%ebx
call   8049220 <strncpy@plt>
movb   $0x0,(%ebx)
mov    %ebx,0x806f6c0
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    %eax,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
jne    805aad4 <error+0xa64>
test   %ebx,%ebx
js     805aad4 <error+0xa64>
mov    0x806ff64,%eax
sub    $0x1,%eax
cmp    %eax,%ebx
jl     805aac0 <error+0xa50>
jmp    805aae8 <error+0xa78>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
js     805aad4 <error+0xa64>
mov    0x806ff64,%eax
sub    $0x1,%eax
cmp    %ebx,%eax
jle    805aae8 <error+0xa78>
add    $0x1,%ebx
mov    %ebx,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805aab0 <error+0xa40>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805aae8 <error+0xa78>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
jmp    804b300 <fchmod@plt+0x1f70>
jmp    805ab00 <error+0xa90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
movzbl (%eax),%ebx
lea    -0x50(%ebx),%ecx
cmp    $0x20,%cl
ja     805ab28 <error+0xab8>
movzbl %cl,%ecx
jmp    *0x8063580(,%ecx,4)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%edx)
xchg   %ax,%ax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movzbl 0x1(%eax),%ecx
lea    0x1(%eax),%ebx
sub    $0x42,%ecx
cmp    $0x32,%cl
ja     805ab20 <error+0xab0>
movzbl %cl,%ecx
jmp    *0x8063604(,%ecx,4)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%edx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0xfffffffe,(%edx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0xffffffff,(%edx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x807000c,%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   805a990 <error+0x920>
mov    0xc(%esp),%edx
mov    %eax,(%edx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
movl   $0xfffffffd,(%edx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x5c,%esp
movzbl (%esi),%edx
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
lea    0x0(%esi),%esi
test   %dl,%dl
je     805ac08 <error+0xb98>
cmp    $0x3a,%dl
je     805acb0 <error+0xc40>
jg     805ac50 <error+0xbe0>
cmp    $0x25,%dl
je     805ad20 <error+0xcb0>
cmp    $0x2e,%dl
nop
lea    0x0(%esi,%eiz,1),%esi
jne    805ad00 <error+0xc90>
movzbl 0x1(%esi),%edx
add    $0x1,%esi
test   %dl,%dl
jne    805abd4 <error+0xb64>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806f6c0,%edx
cmp    $0x806f6e0,%edx
je     805ad6a <error+0xcfa>
test   %edi,%edi
jle    805ad60 <error+0xcf0>
lea    0x806f6e0(%edi),%ebx
mov    %edx,%ecx
sub    %edi,%ecx
mov    $0x806f6e0,%eax
cmp    %ebx,%edx
cmovae %ecx,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805b32b <error+0x12bb>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x3f,%dl
je     805acc8 <error+0xc58>
cmp    $0x5c,%dl
jne    805ad00 <error+0xc90>
movzbl 0x1(%esi),%eax
add    $0x2,%esi
movb   $0x0,0x2f(%esp)
mov    %al,0x2e(%esp)
lea    0x2e(%esp),%eax
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    %eax,(%esp)
call   80572d0 <fchmod@plt+0xdf40>
or     %eax,%edx
je     805acb0 <error+0xc40>
call   804b300 <fchmod@plt+0x1f70>
cmp    $0x0,%edx
jl     805acb0 <error+0xc40>
jle    805b30b <error+0x129b>
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
or     %eax,%edx
jne    805abf6 <error+0xb86>
nop
mov    %esi,%eax
call   805a9c0 <error+0x950>
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%esi
jmp    805abd0 <error+0xb60>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%esi),%ebx
lea    0x1(%esi),%eax
test   %bl,%bl
je     805ac08 <error+0xb98>
lea    0x30(%esp),%edx
sub    $0x42,%ebx
movl   $0x0,0x30(%esp)
call   805ab00 <error+0xa90>
cmp    $0x36,%bl
mov    %eax,%esi
mov    0x30(%esp),%eax
ja     805acb0 <error+0xc40>
movzbl %bl,%ebx
jmp    *0x80636d0(,%ebx,4)
lea    0x2e(%esp),%eax
add    $0x1,%esi
mov    %dl,0x2e(%esp)
movb   $0x0,0x2f(%esp)
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
lea    0x0(%esi),%esi
movzbl 0x1(%esi),%ebx
lea    0x1(%esi),%eax
test   %bl,%bl
je     805ac08 <error+0xb98>
lea    0x30(%esp),%edx
sub    $0x42,%ebx
movl   $0x0,0x30(%esp)
call   805ab00 <error+0xa90>
cmp    $0x36,%bl
mov    %eax,%esi
mov    0x30(%esp),%eax
ja     805abf6 <error+0xb86>
movzbl %bl,%ebx
jmp    *0x80637ac(,%ebx,4)
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806f6e0,%eax
jmp    805ac36 <error+0xbc6>
mov    $0x805e30e,%eax
jmp    805ac36 <error+0xbc6>
call   805dca0 <error+0x3c30>
test   %eax,%eax
jne    805acb0 <error+0xc40>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053c20 <fchmod@plt+0xa890>
test   %eax,%eax
setne  %al
movzbl %al,%eax
xchg   %ax,%ax
test   %eax,%eax
jne    805abf6 <error+0xb86>
jmp    805acb0 <error+0xc40>
call   804b300 <fchmod@plt+0x1f70>
and    %edx,%eax
cmp    $0xffffffff,%eax
setne  %al
movzbl %al,%eax
jmp    805ad98 <error+0xd28>
mov    0x806ffe0,%eax
test   %eax,%eax
je     805acb0 <error+0xc40>
call   804b300 <fchmod@plt+0x1f70>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    805abf6 <error+0xb86>
jmp    805acb0 <error+0xc40>
xor    %eax,%eax
cmpl   $0x806f6e0,0x806f6c0
08
seta   %al
jmp    805ad98 <error+0xd28>
call   805aa80 <error+0xa10>
and    %edx,%eax
cmp    $0xffffffff,%eax
setne  %al
movzbl %al,%eax
jmp    805ad98 <error+0xd28>
mov    0x806ffd0,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
jmp    805ad98 <error+0xd28>
mov    0x806ffe0,%eax
jmp    805ad98 <error+0xd28>
call   8053420 <fchmod@plt+0xa090>
jmp    805ad98 <error+0xd28>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
movzbl (%eax),%edx
sub    $0x2d,%edx
jne    805ae35 <error+0xdc5>
movzbl 0x1(%eax),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
jmp    805ad98 <error+0xd28>
call   805dca0 <error+0x3c30>
test   %eax,%eax
je     805b26c <error+0x11fc>
xchg   %ax,%ax
call   805dca0 <error+0x3c30>
cmp    $0x1,%eax
setg   %al
movzbl %al,%eax
jmp    805ad98 <error+0xd28>
call   805dca0 <error+0x3c30>
test   %eax,%eax
jne    805abf6 <error+0xb86>
mov    0x806ff44,%eax
jmp    805ad98 <error+0xd28>
call   805aa80 <error+0xa10>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     805acb0 <error+0xc40>
call   804b300 <fchmod@plt+0x1f70>
cmp    $0x0,%edx
jg     805abf6 <error+0xb86>
jl     805acb0 <error+0xc40>
cmp    $0x0,%eax
ja     805abf6 <error+0xb86>
jmp    805acb0 <error+0xc40>
lea    0x0(%esi,%eiz,1),%esi
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
and    %edx,%eax
cmp    $0xffffffff,%eax
je     805b0e0 <error+0x1070>
lea    0x35(%esp),%ebx
add    $0x1,%esi
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
mov    %ebx,0x8(%esp)
call   8059c90 <fchmod@plt+0x10900>
mov    %ebx,%eax
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    %eax,(%esp)
call   80572d0 <fchmod@plt+0xdf40>
mov    %eax,%ebp
mov    %edx,%eax
or     %ebp,%eax
mov    %edx,0x10(%esp)
je     805b0e0 <error+0x1070>
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
cmp    $0x0,%ebx
ja     805af1d <error+0xead>
cmp    $0x1,%ecx
jbe    805b0e0 <error+0x1070>
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
cmp    $0x0,%edx
jl     805b0e0 <error+0x1070>
jle    805b31b <error+0x12ab>
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %edx,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8059a40 <fchmod@plt+0x106b0>
lea    0x35(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
add    $0x1,%esi
call   8059e50 <fchmod@plt+0x10ac0>
mov    %ebx,%eax
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805b0e0 <error+0x1070>
mov    %edx,%ecx
or     %eax,%ecx
je     805b2b1 <error+0x1241>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
cmp    $0x0,%edx
jle    805b2db <error+0x126b>
add    $0xffffffff,%eax
mov    %eax,0x10(%esp)
mov    0x806ff64,%eax
lea    0x35(%esp),%ebp
adc    $0xffffffff,%edx
mov    %ebp,0x8(%esp)
mov    %edx,0x14(%esp)
lea    -0x1(%eax),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %ecx,0x8(%esp)
sar    $0x1f,%ecx
mov    %ecx,0xc(%esp)
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x14(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805ddb0 <error+0x3d40>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
add    $0x1,%eax
adc    $0x0,%edx
add    $0x1,%esi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8059d70 <fchmod@plt+0x109e0>
mov    %ebp,%eax
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    %eax,(%esp)
call   80572d0 <fchmod@plt+0xdf40>
cmp    $0x0,%edx
jl     805b0e0 <error+0x1070>
jle    805b2cd <error+0x125d>
mov    0x806ff64,%ecx
cmp    $0x1,%ecx
jle    805b0e0 <error+0x1070>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
sub    $0x1,%ecx
lea    0x35(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
jmp    805afc7 <error+0xf57>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
add    $0x1,%esi
call   8053d80 <fchmod@plt+0xa9f0>
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
nop
lea    0x0(%esi,%eiz,1),%esi
call   805dca0 <error+0x3c30>
test   %eax,%eax
jne    805af50 <error+0xee0>
lea    0x0(%esi),%esi
call   8053ca0 <fchmod@plt+0xa910>
jmp    805af50 <error+0xee0>
lea    0x0(%esi),%esi
call   805aa80 <error+0xa10>
mov    %eax,%ebp
mov    %edx,0x10(%esp)
call   804b300 <fchmod@plt+0x1f70>
mov    %edx,%ebx
sar    $0x1f,%ebx
mov    %ebx,%ecx
sub    %eax,%ecx
sbb    %edx,%ebx
test   %ebx,%ebx
jns    805b0e0 <error+0x1070>
mov    0x10(%esp),%ecx
and    %ebp,%ecx
cmp    $0xffffffff,%ecx
jne    805af38 <error+0xec8>
xchg   %ax,%ax
mov    $0x805ea73,%eax
call   805aa30 <error+0x9c0>
jmp    805abf6 <error+0xb86>
mov    0x806f6c0,%edx
cmp    $0x806f6e0,%edx
jbe    805b12c <error+0x10bc>
cmpb   $0x20,-0x1(%edx)
lea    -0x1(%edx),%eax
je     805b114 <error+0x10a4>
jmp    805b12c <error+0x10bc>
sub    $0x1,%eax
cmpb   $0x20,(%eax)
jne    805b2a6 <error+0x1236>
cmp    $0x806f6e0,%eax
mov    %eax,%edx
jne    805b108 <error+0x1098>
movl   $0x806f6e0,0x806f6c0
08
mov    $0x806f6e0,%edx
movb   $0x0,(%edx)
add    $0x1,%esi
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053c20 <fchmod@plt+0xa890>
test   %eax,%eax
jne    805b073 <error+0x1003>
jmp    805b0e0 <error+0x1070>
mov    0x806c2a0,%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   8053d80 <fchmod@plt+0xa9f0>
mov    %eax,(%esp)
call   80533b0 <fchmod@plt+0xa020>
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
call   804b300 <fchmod@plt+0x1f70>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
cmp    $0x0,%ebx
ja     805b193 <error+0x1123>
cmp    $0x1,%ecx
jbe    805b0e0 <error+0x1070>
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
cmp    $0x0,%edx
jl     805b0e0 <error+0x1070>
jle    805b2fb <error+0x128b>
lea    0x35(%esp),%ebx
add    $0xffffffff,%eax
mov    %ebx,0x8(%esp)
adc    $0xffffffff,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059d70 <fchmod@plt+0x109e0>
mov    %ebx,%eax
add    $0x1,%esi
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    0x806ff48,%eax
add    $0x1,%esi
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
call   805aa80 <error+0xa10>
jmp    805aeb5 <error+0xe45>
lea    0x0(%esi,%eiz,1),%esi
call   805dca0 <error+0x3c30>
test   %eax,%eax
je     805b291 <error+0x1221>
mov    $0x805ed83,%eax
add    $0x1,%esi
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
lea    0x35(%esp),%ebx
mov    0x806ffd0,%eax
mov    %ebx,0x4(%esp)
jmp    805af58 <error+0xee8>
call   805dca0 <error+0x3c30>
test   %eax,%eax
je     805b27f <error+0x120f>
lea    0x0(%esi),%esi
call   805dcb0 <error+0x3c40>
jmp    805af50 <error+0xee0>
mov    %eax,(%esp)
lea    0x0(%esi),%esi
call   80572d0 <fchmod@plt+0xdf40>
mov    %edx,%ecx
or     %eax,%ecx
je     805b0e0 <error+0x1070>
lea    0x35(%esp),%ebx
mov    %ebx,0x8(%esp)
jmp    805b1bc <error+0x114c>
call   8053ca0 <fchmod@plt+0xa910>
cmp    $0x1,%eax
setg   %al
movzbl %al,%eax
jmp    805ad98 <error+0xd28>
mov    0x806c2a0,%eax
mov    %eax,(%esp)
call   8053da0 <fchmod@plt+0xaa10>
jmp    805af50 <error+0xee0>
mov    $0x806238d,%eax
add    $0x1,%esi
call   805aa30 <error+0x9c0>
movzbl (%esi),%edx
jmp    805abd0 <error+0xb60>
mov    %edx,0x806f6c0
jmp    805b12c <error+0x10bc>
lea    0x35(%esp),%ebx
mov    %ebx,0x8(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
jmp    805b1c3 <error+0x1153>
cmp    $0x0,%eax
jbe    805b0e0 <error+0x1070>
jmp    805b041 <error+0xfd1>
nop
lea    0x0(%esi,%eiz,1),%esi
jl     805b0e0 <error+0x1070>
cmp    $0x0,%eax
lea    0x0(%esi,%eiz,1),%esi
ja     805afa9 <error+0xf39>
jmp    805b0e0 <error+0x1070>
cmp    $0x0,%eax
xchg   %ax,%ax
jbe    805b0e0 <error+0x1070>
jmp    805b1ae <error+0x113e>
cmp    $0x0,%eax
xchg   %ax,%ax
jbe    805acb0 <error+0xc40>
jmp    805ac9b <error+0xc2b>
cmp    $0x0,%eax
xchg   %ax,%ax
jbe    805b0e0 <error+0x1070>
jmp    805af38 <error+0xec8>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x8063aa0,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
mov    0x806f1d8,%ecx
mov    $0x8063a40,%edx
test   %ecx,%ecx
mov    %eax,0x807006c
mov    $0x80638a0,%eax
cmove  %edx,%eax
mov    %eax,(%esp)
call   8049a60 <fchmod@plt+0x6d0>
movl   $0x80639c0,(%esp)
mov    %eax,0x8070070
call   8049a60 <fchmod@plt+0x6d0>
movl   $0x8063960,(%esp)
mov    %eax,0x8070074
call   8049a60 <fchmod@plt+0x6d0>
movl   $0x8063900,(%esp)
mov    %eax,0x806c230
call   8049a60 <fchmod@plt+0x6d0>
movl   $0x80638db,(%esp)
mov    %eax,0x806c22c
call   8049a60 <fchmod@plt+0x6d0>
mov    %eax,0x806c228
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movl   $0x806f6e0,0x806f6c0
08
cmpb   $0x0,(%eax)
je     805b3e0 <error+0x1370>
jmp    805abb0 <error+0xb40>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805e30e,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806c230,%eax
movl   $0x806f6e0,0x806f6c0
08
cmpb   $0x0,(%eax)
jne    805b410 <error+0x13a0>
mov    $0x805e30e,%eax
ret
lea    0x0(%esi),%esi
xor    %edx,%edx
jmp    805abb0 <error+0xb40>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x806f1d8,%ebx
mov    0x8070030,%ebp
test   %ebx,%ebx
je     805b440 <error+0x13d0>
xor    %eax,%eax
test   %ebp,%ebp
sete   %al
mov    %eax,%ebp
mov    0x806ff70,%edi
mov    0x806ff58,%esi
mov    0x806ff74,%ebx
call   804c290 <fchmod@plt+0x2f00>
mov    0x806c22c,%ecx
test   $0x8,%al
jne    805b468 <error+0x13f8>
mov    0x807006c(,%ebp,4),%ecx
cmpb   $0x0,(%ecx)
mov    $0x805e30e,%eax
movl   $0x806f6e0,0x806f6c0
08
je     805b48a <error+0x141a>
sub    %esi,%edi
mov    %ecx,%eax
sub    %ebx,%edi
lea    -0x2(%edi),%edx
call   805abb0 <error+0xb40>
movl   $0x0,0x806ff44
00
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x806c228,%eax
push   %ebx
mov    0x806ff70,%edx
mov    0x806ff58,%ebx
mov    0x806ff74,%ecx
cmpb   $0x0,(%eax)
movl   $0x806f6e0,0x806f6c0
08
jne    805b4d0 <error+0x1460>
mov    $0x805e30e,%eax
pop    %ebx
ret
xchg   %ax,%ax
sub    %ebx,%edx
pop    %ebx
sub    %ecx,%edx
sub    $0x2,%edx
jmp    805abb0 <error+0xb40>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edi,%ebx
sub    $0x1c,%esp
mov    0x4(%edx),%eax
mov    0x8(%edx),%esi
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
test   %ecx,%ecx
je     805b503 <error+0x1493>
cmp    %esi,0x8(%ecx)
jle    805b558 <error+0x14e8>
cmp    %edi,%ebx
je     805b517 <error+0x14a7>
mov    0x10(%ebx),%edi
mov    0xc(%ebx),%ebp
cmp    %edi,%esi
jle    805b590 <error+0x1520>
mov    %eax,0x4(%edx)
mov    %esi,0x8(%edx)
test   %ecx,%ecx
je     805b5a8 <error+0x1538>
mov    0x4(%ecx),%edi
mov    0xc(%edx),%ebp
mov    %edi,0xc(%esp)
mov    0x8(%ecx),%edi
mov    %edi,0x8(%esp)
mov    0x10(%edx),%edi
cmp    0x8(%esp),%edi
jge    805b578 <error+0x1508>
mov    %ebp,0xc(%edx)
mov    %edi,0x10(%edx)
cmp    %esi,%edi
jg     805b56c <error+0x14fc>
jge    805b568 <error+0x14f8>
mov    %edx,(%esp)
call   8048f90 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jl     805b55f <error+0x14ef>
cmp    %eax,0x4(%ecx)
ja     805b503 <error+0x1493>
mov    %ecx,%ebx
jmp    805b4f8 <error+0x1488>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%ebp
jbe    805b545 <error+0x14d5>
mov    %ecx,(%edx)
mov    %edx,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jg     805b580 <error+0x1510>
cmp    0xc(%esp),%ebp
jbe    805b539 <error+0x14c9>
mov    0xc(%esp),%ebp
mov    0x8(%esp),%edi
jmp    805b539 <error+0x14c9>
lea    0x0(%esi),%esi
jl     805b59a <error+0x152a>
cmp    %ebp,%eax
jae    805b511 <error+0x14a1>
mov    %ebp,%eax
mov    %edi,%esi
xchg   %ax,%ax
jmp    805b511 <error+0x14a1>
lea    0x0(%esi),%esi
mov    0xc(%edx),%ebp
mov    0x10(%edx),%edi
jmp    805b53f <error+0x14cf>
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
test   %edx,%edx
je     805b6b8 <error+0x1648>
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   805a290 <error+0x220>
test   %eax,%eax
js     805b6c3 <error+0x1653>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     805b5eb <error+0x157b>
mov    %eax,(%esp)
call   8048f90 <free@plt>
test   %esi,%esi
movl   $0x0,0x4(%ebx)
je     805b620 <error+0x15b0>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x4(%ebx)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    %edi,0x8(%ebx)
mov    %esi,(%esp)
mov    %esi,0x1c(%esp)
call   80491a0 <strlen@plt>
mov    %esi,%edx
lea    (%esi,%eax,1),%ebx
lea    0x1c(%esp),%esi
jmp    805b664 <error+0x15f4>
lea    0x0(%esi),%esi
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804cf10 <fchmod@plt+0x3b80>
mov    %eax,(%esp)
call   8049200 <iswupper@plt>
test   %eax,%eax
jne    805b688 <error+0x1618>
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
ja     805b640 <error+0x15d0>
mov    0x806ffdc,%eax
movl   $0x0,0x806fef8
00
mov    %eax,0x806fefc
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmpl   $0x2,0x806ffdc
mov    $0x2,%eax
movl   $0x1,0x806fef8
00
je     805b677 <error+0x1607>
movl   $0x0,0x806fefc
00
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%eax)
jmp    805b5dc <error+0x156c>
mov    $0xffffffff,%eax
jmp    805b67e <error+0x160e>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    (%eax),%eax
mov    %eax,(%esp)
call   805a3e0 <error+0x370>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
movzbl %al,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x6c(%esp),%esi
mov    %eax,0x28(%esp)
mov    0x68(%esp),%ebp
mov    %edx,0x2c(%esp)
mov    %ecx,0x34(%esp)
test   %esi,%esi
je     805b860 <error+0x17f0>
test   %ebp,%ebp
je     805b860 <error+0x17f0>
mov    0x60(%esp),%eax
mov    %ecx,0x3c(%esp)
add    %ecx,%eax
mov    %eax,0x38(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
movl   $0x14,0x4(%esp)
movl   $0x1,(%esp)
sub    %eax,%ebp
sub    %eax,%esi
call   8049a20 <fchmod@plt+0x690>
mov    %eax,%edi
mov    0x64(%esp),%eax
lea    (%eax,%ebp,4),%eax
mov    (%eax),%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
add    0x28(%esp),%ecx
adc    0x2c(%esp),%ebx
add    $0x1,%ebp
cmp    %ebp,%esi
mov    %ecx,0x4(%edi)
mov    %ebx,0x8(%edi)
mov    %eax,%ebx
jge    805b78a <error+0x171a>
jmp    805b7eb <error+0x177b>
lea    0x0(%esi),%esi
cmp    %ebp,%esi
je     805b86e <error+0x17fe>
add    $0x1,%ebp
add    $0x4,%ebx
cmp    %ebp,%esi
jl     805b7eb <error+0x177b>
mov    (%ebx),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x4(%ebx)
je     805b778 <error+0x1708>
cltd
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
add    $0x1,%eax
adc    $0x0,%edx
mov    %eax,0xc(%edi)
mov    $0x806c248,%eax
mov    %edx,0x10(%edi)
mov    %edi,%edx
call   805b4e0 <error+0x1470>
cmp    %ebp,%esi
jle    805b780 <error+0x1710>
movl   $0x14,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,%edi
mov    0x4(%ebx),%eax
cltd
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
add    $0x1,%ebp
add    $0x4,%ebx
cmp    %ebp,%esi
mov    %eax,0x4(%edi)
mov    %edx,0x8(%edi)
jge    805b78a <error+0x171a>
mov    0x6c(%esp),%eax
cmp    0x34(%esp),%eax
ja     805b868 <error+0x17f8>
mov    0x34(%esp),%eax
cmp    %eax,0x38(%esp)
je     805b860 <error+0x17f0>
addl   $0x1,0x34(%esp)
mov    0x806fef4,%eax
mov    0x34(%esp),%ecx
movl   $0x1,0x18(%esp)
mov    %eax,0x1c(%esp)
lea    0x6c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %ecx,0x8(%esp)
sub    %ecx,%eax
mov    %eax,0xc(%esp)
mov    0x806fef0,%eax
mov    %eax,0x4(%esp)
mov    0x806feec,%eax
mov    %eax,(%esp)
call   805a3f0 <error+0x380>
test   %eax,%eax
je     805b860 <error+0x17f0>
mov    0x6c(%esp),%esi
mov    0x68(%esp),%ebp
jmp    805b730 <error+0x16c0>
xchg   %ax,%ax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x34(%esp)
jmp    805b804 <error+0x1794>
cltd
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
add    $0x1,%eax
adc    $0x0,%edx
mov    %eax,0xc(%edi)
mov    $0x806c248,%eax
mov    %edx,0x10(%edi)
mov    %edi,%edx
call   805b4e0 <error+0x1470>
jmp    805b780 <error+0x1710>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
movl   $0x0,0x806feec
00
movl   $0x0,0x806fef0
00
movl   $0x0,0x806fef4
00
movl   $0x0,0x806fee0
00
movl   $0x0,0x806fee4
00
movl   $0x0,0x806fee8
00
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x806ffb8,%ecx
test   %ecx,%ecx
jne    805b9a0 <error+0x1930>
mov    0x30(%esp),%edx
mov    0x806ff10,%eax
test   %edx,%edx
mov    %eax,0xc(%esp)
jne    805b918 <error+0x18a8>
test   %eax,%eax
jne    805b996 <error+0x1926>
movl   $0x1,0x806ff10
00
mov    0x806ff84,%eax
test   %eax,%eax
je     805b9b0 <error+0x1940>
cmpl   $0x1,0x806ff64
mov    $0x1,%ebx
jle    805b988 <error+0x1918>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%ebx),%esi
mov    %esi,(%esp)
call   805a5d0 <error+0x560>
mov    %ebx,%ecx
mov    %eax,%ebp
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%edi
je     805b979 <error+0x1909>
mov    %ebx,(%esp)
mov    %ebx,0x8(%esp)
call   805a5d0 <error+0x560>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
call   8053e50 <fchmod@plt+0xaac0>
mov    %esi,(%esp)
call   804ac30 <fchmod@plt+0x18a0>
call   8059bd0 <fchmod@plt+0x10840>
mov    0x8(%esp),%ecx
mov    0x806ff64,%eax
add    $0x1,%ebx
sub    $0x1,%eax
cmp    %ecx,%eax
jg     805b938 <error+0x18c8>
call   804abc0 <fchmod@plt+0x1830>
mov    0xc(%esp),%eax
mov    %eax,0x806ff10
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8054bf0 <fchmod@plt+0xb860>
jmp    805b8f5 <error+0x1885>
lea    0x0(%esi),%esi
call   8054bf0 <fchmod@plt+0xb860>
mov    0xc(%esp),%eax
mov    %eax,0x806ff10
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x806a158,%eax
mov    0x806a15c,%edi
mov    %eax,0x1c(%esp)
and    %edi,%eax
cmp    $0xffffffff,%eax
mov    %edi,0x10(%esp)
je     805bae7 <error+0x1a77>
mov    0x806a150,%eax
mov    0x806ff84,%edi
movl   $0xffffffff,0x806a150
ff
movl   $0xffffffff,0x806a158
ff
mov    %eax,0x18(%esp)
mov    0x806a154,%eax
test   %edi,%edi
movl   $0xffffffff,0x806a154
ff
movl   $0xffffffff,0x806a15c
ff
mov    %eax,0xc(%esp)
je     805bb40 <error+0x1ad0>
mov    0x806ffb8,%esi
test   %esi,%esi
jne    805bb30 <error+0x1ac0>
cmpl   $0x1,0x806ff64
jle    805bae7 <error+0x1a77>
mov    $0x1,%ebx
movl   $0x0,0x14(%esp)
lea    0x0(%esi),%esi
lea    -0x1(%ebx),%ebp
mov    %ebp,(%esp)
call   805a5d0 <error+0x560>
mov    %ebx,%ecx
mov    %eax,%edi
and    %edx,%eax
cmp    $0xffffffff,%eax
mov    %edx,%esi
je     805bad0 <error+0x1a60>
mov    %ebx,(%esp)
mov    %ebx,0x8(%esp)
call   805a5d0 <error+0x560>
mov    0x8(%esp),%ecx
cmp    %esi,0xc(%esp)
jl     805bad0 <error+0x1a60>
jg     805ba9e <error+0x1a2e>
cmp    %edi,0x18(%esp)
jbe    805bad0 <error+0x1a60>
cmp    %edx,0x10(%esp)
jge    805baf0 <error+0x1a80>
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8053e50 <fchmod@plt+0xaac0>
mov    %ebp,(%esp)
call   804ac30 <fchmod@plt+0x18a0>
call   8059bd0 <fchmod@plt+0x10840>
mov    0x8(%esp),%ecx
movl   $0x1,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x806ff64,%eax
add    $0x1,%ebx
sub    $0x1,%eax
cmp    %eax,%ecx
jl     805ba68 <error+0x19f8>
mov    0x14(%esp),%ebx
test   %ebx,%ebx
jne    805bb20 <error+0x1ab0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
jle    805bb10 <error+0x1aa0>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     805baa4 <error+0x1a34>
mov    0x806ff64,%eax
add    $0x1,%ebx
sub    $0x1,%eax
cmp    %eax,%ecx
jl     805ba68 <error+0x19f8>
jmp    805badf <error+0x1a6f>
xchg   %ax,%ax
cmp    %eax,0x1c(%esp)
jb     805baa4 <error+0x1a34>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    805baf9 <error+0x1a89>
jmp    805baa4 <error+0x1a34>
nop
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804abc0 <fchmod@plt+0x1830>
lea    0x0(%esi,%eiz,1),%esi
call   8054bf0 <fchmod@plt+0xb860>
jmp    805ba4b <error+0x19db>
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8054bf0 <fchmod@plt+0xb860>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
testb  $0x10,0x806fef5
je     805bba8 <error+0x1b38>
mov    0x806fef0,%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
test   %eax,%eax
je     805bb90 <error+0x1b20>
mov    0x806ff10,%edx
xor    %eax,%eax
movl   $0x1,(%esp)
test   %edx,%edx
sete   %al
mov    %eax,0x806ff10
call   805b8e0 <error+0x1870>
add    $0x1c,%esp
ret
nop
movl   $0x0,0x4(%esp)
movl   $0x8063ad4,(%esp)
call   805a070 <error>
add    $0x1c,%esp
ret
mov    $0x806feec,%eax
call   805b6d0 <error+0x1660>
jmp    805bb69 <error+0x1af9>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
jne    805bbda <error+0x1b6a>
jmp    805bbe8 <error+0x1b78>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    (%eax),%ebx
mov    %eax,(%esp)
call   8048f90 <free@plt>
test   %ebx,%ebx
jne    805bbd8 <error+0x1b68>
movl   $0x0,(%esi)
movl   $0xffffffff,0x806ff00
ff
movl   $0xffffffff,0x806ff04
ff
movl   $0xffffffff,0x806ff08
ff
movl   $0xffffffff,0x806ff0c
ff
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x806c234,(%esp)
call   805bbc0 <error+0x1b50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
call   804c290 <fchmod@plt+0x2f00>
and    $0x8,%eax
jne    805bca8 <error+0x1c38>
mov    0x806c234,%edx
test   %edx,%edx
jne    805bc8e <error+0x1c1e>
jmp    805bca1 <error+0x1c31>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%edx
test   %edx,%edx
je     805bca1 <error+0x1c31>
mov    0x8(%edx),%ebx
mov    0x4(%edx),%ecx
xor    %edi,%ebx
xor    %esi,%ecx
or     %ecx,%ebx
jne    805bc88 <error+0x1c18>
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebp
mov    %eax,%ecx
push   %edi
mov    %edx,%ebp
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%eax
mov    %ecx,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,%esi
mov    %eax,0x48(%esp)
mov    0x84(%esp),%eax
mov    %eax,%edi
mov    %eax,0x38(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
mov    0x28(%esp),%ecx
mov    %eax,0x30(%esp)
mov    %esi,%eax
and    %edi,%eax
mov    %eax,0x4c(%esp)
mov    0x88(%esp),%eax
mov    %edx,0x34(%esp)
and    $0x1,%eax
testb  $0x3,0x8070078
mov    %eax,0x3c(%esp)
jne    805bdf2 <error+0x1d82>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x38(%esp),%ebp
jle    805be38 <error+0x1dc8>
cmpl   $0xffffffff,0x4c(%esp)
jne    805be08 <error+0x1d98>
lea    0x0(%esi),%esi
cmpl   $0x0,0x90(%esp)
je     805be08 <error+0x1d98>
setg   %al
movzbl %al,%eax
sub    %eax,0x90(%esp)
mov    0x3c(%esp),%eax
lea    0x54(%esp),%edi
mov    %edi,0xc(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x28(%esp)
test   %eax,%eax
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
je     805be50 <error+0x1de0>
call   80567d0 <fchmod@plt+0xd440>
mov    %edx,%esi
mov    0x34(%esp),%edx
mov    %eax,%ebx
mov    0x30(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
mov    0x28(%esp),%ecx
je     805bff0 <error+0x1f80>
addl   $0x1,0x30(%esp)
adcl   $0x0,0x34(%esp)
mov    %ebp,0x2c(%esp)
mov    %ebx,%eax
and    %esi,%eax
cmp    $0xffffffff,%eax
je     805be08 <error+0x1d98>
mov    0x806ffe0,%eax
test   %eax,%eax
je     805bdc5 <error+0x1d55>
mov    %ebx,%eax
sub    %ecx,%eax
cltd
xor    %edx,%eax
sub    %edx,%eax
cmp    $0x800,%eax
jg     805c038 <error+0x1fc8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   805bc60 <error+0x1bf0>
test   %eax,%eax
je     805be88 <error+0x1e18>
testb  $0x3,0x8070078
mov    %ebx,%ecx
mov    %esi,%ebp
je     805bd18 <error+0x1ca8>
add    $0x6c,%esp
mov    $0xffffffff,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
test   %eax,%eax
je     805c13b <error+0x20cb>
mov    0x98(%esp),%eax
mov    0x8c(%esp),%edi
mov    %ecx,(%eax)
mov    %ebp,0x4(%eax)
add    $0x6c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     805bd30 <error+0x1cc0>
cmp    0x48(%esp),%ecx
jb     805bd30 <error+0x1cc0>
jmp    805bd22 <error+0x1cb2>
lea    0x0(%esi),%esi
call   80568d0 <fchmod@plt+0xd540>
mov    %edx,%esi
mov    0x34(%esp),%edx
mov    %eax,%ebx
mov    0x30(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
mov    0x28(%esp),%ecx
je     805c000 <error+0x1f90>
addl   $0xffffffff,0x30(%esp)
adcl   $0xffffffff,0x34(%esp)
mov    %ebx,0x28(%esp)
mov    %esi,0x2c(%esp)
jmp    805bd9f <error+0x1d2f>
xchg   %ax,%ax
mov    0x806fefc,%ebp
mov    0x8070028,%eax
test   %ebp,%ebp
jne    805c010 <error+0x1fa0>
test   %eax,%eax
mov    $0x6,%edx
je     805beaf <error+0x1e3f>
xor    %edx,%edx
cmp    $0x2,%eax
setne  %dl
shl    $0x2,%edx
mov    %edx,%eax
or     $0x8,%eax
cmpl   $0x2,0x807002c
cmove  %eax,%edx
mov    0x54(%esp),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x44(%esp)
mov    %eax,(%esp)
call   8050bf0 <fchmod@plt+0x7860>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x40(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x40(%esp),%ecx
mov    %ecx,(%esp)
mov    %eax,%ebp
call   8050c10 <fchmod@plt+0x7880>
mov    0x44(%esp),%edx
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x40(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   8050c50 <fchmod@plt+0x78c0>
mov    0x88(%esp),%edi
and    $0x10,%edi
je     805bf46 <error+0x1ed6>
testb  $0x10,0x806fee9
je     805c070 <error+0x2000>
mov    0x806fee4,%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
test   %eax,%eax
jne    805c082 <error+0x2012>
testb  $0x10,0x806fef5
je     805c060 <error+0x1ff0>
mov    0x806fef0,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
test   %eax,%eax
je     805bfd0 <error+0x1f60>
mov    0x88(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x1c(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x806fef0,%eax
mov    %eax,0x4(%esp)
mov    0x806feec,%eax
mov    %eax,(%esp)
call   805a3f0 <error+0x380>
test   %eax,%eax
je     805bfd0 <error+0x1f60>
test   %edi,%edi
jne    805c108 <error+0x2098>
subl   $0x1,0x8c(%esp)
mov    0x8c(%esp),%eax
test   %eax,%eax
jle    805c147 <error+0x20d7>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8048f90 <free@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
jmp    805bde1 <error+0x1d71>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x28(%esp)
mov    %ebp,0x2c(%esp)
jmp    805bd9f <error+0x1d2f>
lea    0x0(%esi),%esi
mov    %ebx,0x28(%esp)
mov    %esi,0x2c(%esp)
jmp    805bd9f <error+0x1d2f>
lea    0x0(%esi),%esi
test   %eax,%eax
mov    $0x7,%edx
je     805beaf <error+0x1e3f>
xor    %edx,%edx
cmp    $0x2,%eax
setne  %dl
lea    0x1(,%edx,4),%edx
jmp    805beaf <error+0x1e3f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056b60 <fchmod@plt+0xd7d0>
jmp    805bdc5 <error+0x1d55>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806feec,%eax
call   805b6d0 <error+0x1660>
jmp    805bf60 <error+0x1ef0>
nop
mov    $0x806fee0,%eax
call   805b6d0 <error+0x1660>
test   %eax,%eax
je     805bf46 <error+0x1ed6>
mov    0x806fee8,%eax
movl   $0x0,0x18(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x1c(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x806fee4,%eax
mov    %eax,0x4(%esp)
mov    0x806fee0,%eax
mov    %eax,(%esp)
call   805a3f0 <error+0x380>
test   %eax,%eax
je     805bf46 <error+0x1ed6>
movl   $0x14,0x4(%esp)
movl   $0x1,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    0x28(%esp),%edx
mov    %edx,0x4(%eax)
mov    0x2c(%esp),%edx
mov    %ebx,0xc(%eax)
mov    %esi,0x10(%eax)
mov    %edx,0x8(%eax)
mov    %eax,%edx
mov    $0x806c234,%eax
call   805b4e0 <error+0x1470>
jmp    805bf46 <error+0x1ed6>
xchg   %ax,%ax
mov    0x5c(%esp),%eax
mov    %ebp,%ecx
mov    0x2c(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
mov    0x28(%esp),%eax
call   805b6f0 <error+0x1680>
jmp    805bfd0 <error+0x1f60>
mov    0x8c(%esp),%edi
jmp    805be2a <error+0x1dba>
cmpl   $0x1,0x807004c
je     805c18c <error+0x211c>
mov    %ebp,(%esp)
call   8048f90 <free@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x94(%esp),%ebx
test   %ebx,%ebx
je     805be2a <error+0x1dba>
mov    0x94(%esp),%eax
mov    0x28(%esp),%esi
mov    %esi,(%eax)
mov    0x2c(%esp),%esi
mov    %esi,0x4(%eax)
jmp    805be2a <error+0x1dba>
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
mov    0x5c(%esp),%eax
mov    %ebp,%ecx
mov    0x2c(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
mov    0x28(%esp),%eax
call   805b6f0 <error+0x1680>
jmp    805c150 <error+0x20e0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8,%esp
mov    0x30(%esp),%esi
mov    0x1c(%esp),%ecx
mov    0x20(%esp),%eax
mov    0x24(%esp),%ebx
test   %esi,%esi
mov    0x28(%esp),%edx
je     805c1f5 <error+0x2185>
movl   $0x0,(%esi)
mov    0x806fff0,%edi
test   %edi,%edi
jne    805c220 <error+0x21b0>
mov    0x806a158,%edi
mov    %edi,%ebp
mov    %edi,(%esp)
mov    0x806a15c,%edi
and    %edi,%ebp
cmp    $0xffffffff,%ebp
je     805c220 <error+0x21b0>
cmp    %eax,0x806a154
jge    805c298 <error+0x2228>
nop
mov    0x806c248,%edi
mov    %ebx,%ebp
and    %edx,%ebp
not    %ebp
test   %edi,%edi
je     805c278 <error+0x2208>
cmp    0x10(%edi),%eax
jg     805c290 <error+0x2220>
jl     805c23c <error+0x21cc>
cmp    0xc(%edi),%ecx
jae    805c290 <error+0x2220>
test   %ebp,%ebp
xchg   %ax,%ax
je     805c247 <error+0x21d7>
cmp    0x8(%edi),%edx
jle    805c288 <error+0x2218>
test   %esi,%esi
je     805c251 <error+0x21e1>
movl   $0x1,(%esi)
mov    0x807004c,%ebx
test   %ebx,%ebx
je     805c278 <error+0x2208>
mov    0x2c(%esp),%ecx
mov    $0x1,%eax
test   %ecx,%ecx
jne    805c27a <error+0x220a>
mov    0x806ff10,%edx
test   %edx,%edx
je     805c27a <error+0x220a>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x8,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jl     805c290 <error+0x2220>
cmp    0x4(%edi),%ebx
ja     805c247 <error+0x21d7>
nop
mov    (%edi),%edi
test   %edi,%edi
jne    805c230 <error+0x21c0>
jmp    805c278 <error+0x2208>
jg     805c2a6 <error+0x2236>
cmp    %ecx,0x806a150
jbe    805c220 <error+0x21b0>
mov    %ebx,%ebp
and    %edx,%ebp
cmp    $0xffffffff,%ebp
je     805c2c6 <error+0x2256>
cmp    %edx,%edi
jl     805c2c6 <error+0x2256>
jg     805c220 <error+0x21b0>
cmp    %ebx,(%esp)
lea    0x0(%esi,%eiz,1),%esi
jae    805c220 <error+0x21b0>
mov    $0x1,%eax
jmp    805c27a <error+0x220a>
lea    0x0(%esi),%esi
mov    0x806fef8,%eax
test   %eax,%eax
jne    805c2e8 <error+0x2278>
mov    0x806ffdc,%eax
mov    %eax,0x806fefc
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x806fef0,%eax
test   %eax,%eax
je     805c2fc <error+0x228c>
mov    %eax,(%esp)
call   8048f90 <free@plt>
movl   $0x806feec,(%esp)
movl   $0x0,0x806fef0
00
call   805a3b0 <error+0x340>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x806c234,(%esp)
call   805bbc0 <error+0x1b50>
test   %ebx,%ebx
je     805c33d <error+0x22cd>
cmpb   $0x0,(%ebx)
jne    805c378 <error+0x2308>
mov    0x806fee4,%eax
test   %eax,%eax
je     805c34e <error+0x22de>
mov    %eax,(%esp)
call   8048f90 <free@plt>
movl   $0x806fee0,(%esp)
movl   $0x0,0x806fee4
00
call   805a3b0 <error+0x340>
movl   $0x1,0x806ffbc
00
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%ecx
mov    %ebx,%edx
mov    $0x806fee0,%eax
call   805b5b0 <error+0x1540>
movl   $0x1,0x806ffbc
00
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   804c290 <fchmod@plt+0x2f00>
test   $0x8,%al
jne    805c3c8 <error+0x2358>
testb  $0x10,0x806fee9
je     805c3d0 <error+0x2360>
mov    0x806fee4,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0xc,%esp
ret
xchg   %ax,%ax
xor    %eax,%eax
add    $0xc,%esp
ret
xchg   %ax,%ax
mov    $0x806fee0,%eax
add    $0xc,%esp
jmp    805b6d0 <error+0x1660>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%eax
mov    0x84(%esp),%edx
testb  $0x10,0x806fef5
mov    0x88(%esp),%esi
mov    %eax,0x20(%esp)
mov    0x806ff08,%eax
mov    %edx,0x24(%esp)
mov    0x806ff0c,%edx
mov    0x8c(%esp),%edi
mov    0x90(%esp),%ebx
mov    %eax,0x28(%esp)
mov    0x806ff00,%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x34(%esp)
mov    0x806ff04,%eax
mov    %eax,0x40(%esp)
je     805c738 <error+0x26c8>
mov    0x806fef0,%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
test   %eax,%eax
je     805c720 <error+0x26b0>
test   %ebx,%ebx
js     805c748 <error+0x26d8>
je     805c7ad <error+0x273d>
mov    0x20(%esp),%edx
xor    %ebp,%ebp
mov    0x24(%esp),%ecx
mov    %edx,%eax
mov    %ecx,%edx
lea    0x0(%esi),%esi
movl   $0x0,0xc(%esp)
add    $0x1,%ebp
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80567d0 <fchmod@plt+0xd440>
cmp    %ebx,%ebp
jne    805c478 <error+0x2408>
mov    %eax,0x38(%esp)
mov    %edx,0x44(%esp)
mov    0x806ff08,%ebp
mov    0x806ff0c,%ecx
mov    %ebp,%eax
and    %ecx,%eax
cmp    $0xffffffff,%eax
je     805c6c8 <error+0x2658>
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     805c7cb <error+0x275b>
cmp    %edi,%ecx
jle    805c618 <error+0x25a8>
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
movl   $0x806c234,(%esp)
call   805bbc0 <error+0x1b50>
mov    0x806d440,%eax
lea    (%eax,%eax,2),%eax
cltd
add    %eax,%esi
mov    0x20(%esp),%eax
adc    %edx,%edi
mov    0x24(%esp),%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     805c530 <error+0x24c0>
mov    0x38(%esp),%eax
mov    0x44(%esp),%ecx
and    %ecx,%eax
cmp    $0xffffffff,%eax
je     805c530 <error+0x24c0>
cmp    %ecx,%edi
jl     805c530 <error+0x24c0>
jle    805c770 <error+0x2700>
mov    0x38(%esp),%esi
mov    0x44(%esp),%edi
cmp    %edi,0x24(%esp)
jge    805c708 <error+0x2698>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x3c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
lea    0x58(%esp),%ecx
mov    0x38(%esp),%eax
mov    %ecx,0x18(%esp)
mov    0x806fef4,%ecx
mov    0x3c(%esp),%edx
movl   $0x0,0x14(%esp)
mov    %ebx,0x10(%esp)
and    $0x1000,%ecx
or     $0x11,%ecx
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   805bcb0 <error+0x1c40>
test   %eax,%eax
js     805c60c <error+0x259c>
mov    0x806ff00,%edx
mov    0x806ff04,%eax
mov    %edx,%ecx
and    %eax,%ecx
cmp    $0xffffffff,%ecx
je     805c788 <error+0x2718>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%ebx
cmp    %ecx,%eax
jg     805c798 <error+0x2728>
jge    805c7c2 <error+0x2752>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebx,0x34(%esp)
mov    %ecx,0x40(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,0x806ff08
mov    0x34(%esp),%eax
mov    %edx,0x806ff0c
mov    %eax,0x806ff00
mov    0x40(%esp),%eax
mov    %eax,0x806ff04
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     805c622 <error+0x25b2>
cmp    %esi,%ebp
ja     805c4d1 <error+0x2461>
mov    0x806ff00,%eax
mov    %eax,0x4c(%esp)
mov    0x806ff04,%eax
cmp    %eax,0x24(%esp)
mov    %eax,0x48(%esp)
jg     805c4d1 <error+0x2461>
jl     805c64e <error+0x25de>
mov    0x4c(%esp),%eax
cmp    %eax,0x20(%esp)
ja     805c4d1 <error+0x2461>
cmp    0x48(%esp),%edi
jl     805c868 <error+0x27f8>
jg     805c666 <error+0x25f6>
cmp    0x4c(%esp),%esi
xchg   %ax,%ax
jbe    805c868 <error+0x27f8>
mov    0x806d440,%eax
lea    (%eax,%eax,2),%eax
cltd
add    %eax,%esi
adc    %edx,%edi
cmp    %ecx,0x24(%esp)
jg     805c828 <error+0x27b8>
jl     805c689 <error+0x2619>
cmp    %ebp,0x20(%esp)
jae    805c828 <error+0x27b8>
mov    0x806d440,%eax
lea    (%eax,%eax,2),%ecx
mov    %ecx,%eax
cltd
cmp    %edx,0x24(%esp)
jl     805c840 <error+0x27d0>
jg     805c6aa <error+0x263a>
cmp    %ecx,0x20(%esp)
jb     805c840 <error+0x27d0>
sub    %eax,0x20(%esp)
sbb    %edx,0x24(%esp)
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    805c506 <error+0x2496>
nop
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
movl   $0x806c234,(%esp)
call   805bbc0 <error+0x1b50>
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
jne    805c4e9 <error+0x2479>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
jmp    805c55a <error+0x24ea>
lea    0x0(%esi),%esi
jle    805c760 <error+0x26f0>
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
jne    805c5e7 <error+0x2577>
jmp    805c53a <error+0x24ca>
lea    0x0(%esi,%eiz,1),%esi
call   805c3a0 <error+0x2330>
test   %eax,%eax
jne    805c459 <error+0x23e9>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x806feec,%eax
call   805b6d0 <error+0x1660>
jmp    805c451 <error+0x23e1>
nop
movl   $0xffffffff,0x38(%esp)
movl   $0xffffffff,0x44(%esp)
jmp    805c4a3 <error+0x2433>
lea    0x0(%esi),%esi
cmp    %esi,0x20(%esp)
jb     805c53a <error+0x24ca>
jmp    805c70a <error+0x269a>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x38(%esp),%esi
jbe    805c530 <error+0x24c0>
lea    0x0(%esi),%esi
jmp    805c528 <error+0x24b8>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    805c5e7 <error+0x2577>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x38(%esp)
mov    %edx,0x44(%esp)
jmp    805c4a3 <error+0x2433>
cmp    %ebx,%edx
jae    805c798 <error+0x2728>
jmp    805c5cf <error+0x255f>
mov    0x806ff00,%eax
mov    %eax,0x4c(%esp)
mov    0x806ff04,%eax
cmp    %eax,0x24(%esp)
mov    %eax,0x48(%esp)
jl     805c673 <error+0x2603>
jg     805c7f7 <error+0x2787>
mov    0x4c(%esp),%eax
cmp    %eax,0x20(%esp)
jbe    805c673 <error+0x2603>
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
movl   $0x806c234,(%esp)
call   805bbc0 <error+0x1b50>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
jmp    805c55a <error+0x24ea>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x24(%esp)
jmp    805c506 <error+0x2496>
lea    0x0(%esi),%esi
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
jmp    805c506 <error+0x2496>
lea    0x0(%esi),%esi
mov    %ebp,%esi
mov    %ecx,%edi
jmp    805c673 <error+0x2603>
jmp    805c880 <error+0x2810>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x3c,%esp
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   805a850 <error+0x7e0>
mov    0x24(%esp),%eax
and    0x28(%esp),%eax
cmp    $0xffffffff,%eax
je     805c8d8 <error+0x2868>
movl   $0xfffffffe,(%esp)
call   805a5d0 <error+0x560>
movl   $0xffffffff,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805c3e0 <error+0x2370>
movl   $0x1,(%esp)
call   805b8e0 <error+0x1870>
add    $0x3c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x806c248,(%esp)
call   805bbc0 <error+0x1b50>
cmpl   $0x2,0x807004c
movl   $0x0,0x806ff10
00
je     805c908 <error+0x2898>
add    $0x1c,%esp
ret
xchg   %ax,%ax
add    $0x1c,%esp
jmp    805c880 <error+0x2810>
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edx
mov    0x40(%esp),%ebx
test   %edx,%edx
je     805c92b <error+0x28bb>
cmpb   $0x0,(%edx)
jne    805caf0 <error+0x2a80>
or     $0x40,%bh
testb  $0x10,0x806fef5
je     805cb50 <error+0x2ae0>
mov    0x806fef0,%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
test   %eax,%eax
je     805cb62 <error+0x2af2>
mov    0x806fef4,%eax
xor    %ebx,%eax
test   $0x10,%ah
jne    805ccfc <error+0x2c8c>
mov    0x807004c,%eax
cmp    $0x1,%eax
je     805ccb0 <error+0x2c40>
cmp    $0x2,%eax
je     805cbc0 <error+0x2b50>
movl   $0x0,0x806ff10
00
call   805a7a0 <error+0x730>
test   %eax,%eax
je     805c9f0 <error+0x2980>
test   $0x1,%bl
je     805cc68 <error+0x2bf8>
xor    %esi,%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805c9bd <error+0x294d>
jmp    805ca59 <error+0x29e9>
nop
mov    %esi,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
jne    805ca59 <error+0x29e9>
add    $0x1,%esi
cmp    0x806ff64,%esi
jl     805c9a8 <error+0x2938>
and    $0x2,%bh
movl   $0xffffffff,0x28(%esp)
movl   $0xffffffff,0x2c(%esp)
je     805cd1a <error+0x2caa>
mov    0x48(%esp),%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8070038,%eax
cmp    $0x1,%eax
je     805cc88 <error+0x2c18>
cmp    $0x2,%eax
je     805ccc8 <error+0x2c58>
test   $0x1,%bl
mov    0x807000c,%eax
jne    805cbe8 <error+0x2b78>
mov    %eax,(%esp)
call   805a990 <error+0x920>
mov    %eax,(%esp)
mov    %eax,%esi
call   805a5d0 <error+0x560>
mov    %edx,%edi
mov    %eax,%ecx
not    %edi
not    %ecx
or     %ecx,%edi
jne    805ca59 <error+0x29e9>
sub    $0x1,%esi
jns    805ca48 <error+0x29d8>
jmp    805c9c8 <error+0x2958>
lea    0x0(%esi),%esi
sub    $0x1,%esi
cmp    $0xffffffff,%esi
je     805c9c8 <error+0x2958>
mov    %esi,(%esp)
call   805a5d0 <error+0x560>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805ca40 <error+0x29d0>
mov    0x48(%esp),%edi
lea    0x28(%esp),%ecx
movl   $0x0,0x18(%esp)
mov    %ecx,0x14(%esp)
movl   $0xffffffff,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
call   805bcb0 <error+0x1c40>
test   %eax,%eax
je     805cad0 <error+0x2a60>
cmpl   $0x1,0x807004c
jne    805c9e5 <error+0x2975>
test   %eax,%eax
jle    805c9e5 <error+0x2975>
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
call   805b8e0 <error+0x1870>
mov    0x1c(%esp),%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
and    $0x4,%ebx
je     805cc20 <error+0x2bb0>
xor    %eax,%eax
cmpl   $0x1,0x807004c
je     805cab2 <error+0x2a42>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%ecx
mov    $0x806feec,%eax
call   805b5b0 <error+0x1540>
test   %eax,%eax
js     805cc5c <error+0x2bec>
mov    0x807004c,%esi
test   %esi,%esi
je     805c981 <error+0x2911>
movl   $0x0,(%esp)
call   805b8e0 <error+0x1870>
movl   $0x806c248,(%esp)
movl   $0x0,0x806ff10
00
call   805bbc0 <error+0x1b50>
cmpl   $0x2,0x807004c
jne    805c981 <error+0x2911>
call   805c880 <error+0x2810>
jmp    805c981 <error+0x2911>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806feec,%eax
call   805b6d0 <error+0x1660>
test   %eax,%eax
jne    805c950 <error+0x28e0>
mov    0x805ec48,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804dd00 <fchmod@plt+0x4970>
call   804e6f0 <fchmod@plt+0x5360>
test   %eax,%eax
je     805cc48 <error+0x2bd8>
mov    %eax,%edx
mov    %ebx,%ecx
mov    $0x806feec,%eax
call   805b5b0 <error+0x1540>
test   %eax,%eax
js     805cc48 <error+0x2bd8>
cmpl   $0x2,0x807004c
jne    805c950 <error+0x28e0>
mov    0x806ff10,%eax
test   %eax,%eax
jne    805c950 <error+0x28e0>
call   805c880 <error+0x2810>
jmp    805c950 <error+0x28e0>
xchg   %ax,%ax
mov    0x806ff10,%edi
test   %edi,%edi
je     805c977 <error+0x2907>
movl   $0x0,0x806ff10
00
call   805c880 <error+0x2810>
jmp    805c977 <error+0x2907>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   805a990 <error+0x920>
mov    %eax,(%esp)
mov    %eax,%esi
call   805a5d0 <error+0x560>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80567d0 <fchmod@plt+0xd440>
jmp    805c999 <error+0x2929>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x807000c,%eax
mov    0x2c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054750 <fchmod@plt+0xb3c0>
jmp    805cad9 <error+0x2a69>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x8063ad4,(%esp)
call   805a070 <error>
mov    $0xffffffff,%eax
jmp    805c9e5 <error+0x2975>
xchg   %ax,%ax
call   804b300 <fchmod@plt+0x1f70>
mov    %edx,%edi
mov    %eax,%ecx
not    %edi
not    %ecx
mov    %edi,%esi
or     %ecx,%esi
je     805cce3 <error+0x2c73>
xor    %esi,%esi
jmp    805ca2f <error+0x29bf>
lea    0x0(%esi),%esi
xor    %al,%al
test   $0x1,%bl
je     805ca15 <error+0x29a5>
mov    $0xfffffffe,%eax
mov    %eax,(%esp)
call   805a990 <error+0x920>
mov    %eax,(%esp)
mov    %eax,%esi
call   805a5d0 <error+0x560>
jmp    805c999 <error+0x2929>
nop
movl   $0x0,(%esp)
call   805b8e0 <error+0x1870>
mov    0x807004c,%eax
jmp    805c96e <error+0x28fe>
xchg   %ax,%ax
test   $0x40,%bh
jne    805ca07 <error+0x2997>
test   $0x1,%bl
mov    $0xfffffffe,%eax
je     805ca15 <error+0x29a5>
xor    %eax,%eax
jmp    805cc98 <error+0x2c28>
call   804bd60 <fchmod@plt+0x29d0>
xor    %esi,%esi
call   804b300 <fchmod@plt+0x1f70>
mov    %edx,%edi
mov    %eax,%ecx
not    %edi
not    %ecx
jmp    805ca2f <error+0x29bf>
movl   $0x0,0x4(%esp)
movl   $0x8063af4,(%esp)
call   805a070 <error>
mov    $0xffffffff,%eax
jmp    805c9e5 <error+0x2975>
movl   $0x0,0x4(%esp)
movl   $0x8063b14,(%esp)
call   805a070 <error>
mov    $0xffffffff,%eax
jmp    805c9e5 <error+0x2975>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x805cd40,0x4(%esp)
movl   $0x1c,(%esp)
call   8049000 <signal@plt>
mov    0x8070058,%eax
orl    $0x4,0x8070078
test   %eax,%eax
jne    805cd70 <error+0x2d00>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    8059980 <fchmod@plt+0x105f0>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x805cd80,0x4(%esp)
movl   $0x14,(%esp)
call   8049000 <signal@plt>
mov    0x8070058,%edx
orl    $0x2,0x8070078
test   %edx,%edx
jne    805cdb0 <error+0x2d40>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    8059980 <fchmod@plt+0x105f0>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
call   804acb0 <fchmod@plt+0x1920>
movl   $0x805cdc0,0x4(%esp)
movl   $0x2,(%esp)
call   8049000 <signal@plt>
mov    0x8070058,%ecx
orl    $0x1,0x8070078
test   %ecx,%ecx
jne    805cdf8 <error+0x2d88>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    8059980 <fchmod@plt+0x105f0>
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
jne    805ce60 <error+0x2df0>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049000 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x14,(%esp)
call   8049000 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x1c,(%esp)
call   8049000 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x3,(%esp)
call   8049000 <signal@plt>
add    $0x1c,%esp
ret
nop
movl   $0x805cdc0,0x4(%esp)
movl   $0x2,(%esp)
call   8049000 <signal@plt>
movl   $0x805cd80,0x4(%esp)
movl   $0x14,(%esp)
call   8049000 <signal@plt>
movl   $0x805cd40,0x4(%esp)
movl   $0x1c,(%esp)
call   8049000 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049000 <signal@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x8070078,%ebx
test   %ebx,%ebx
je     805cef6 <error+0x2e86>
test   $0x2,%bl
movl   $0x0,0x8070078
00
jne    805cf50 <error+0x2ee0>
test   $0x4,%bl
jne    805cf00 <error+0x2e90>
and    $0x1,%ebx
je     805cef6 <error+0x2e86>
mov    0x8070034,%eax
test   %eax,%eax
jne    805d000 <error+0x2f90>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x806ff70,%esi
mov    0x806ff64,%edi
call   804a420 <fchmod@plt+0x1090>
mov    0x806ff64,%eax
cmp    %esi,0x806ff70
jne    805cf22 <error+0x2eb2>
cmp    %edi,%eax
je     805cee4 <error+0x2e74>
add    $0x1,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
mov    %eax,0x806ff4c
call   8057fd0 <fchmod@plt+0xec40>
call   8058210 <fchmod@plt+0xee80>
and    $0x1,%ebx
movl   $0x1,0x806ffbc
00
jne    805cee9 <error+0x2e79>
jmp    805cef6 <error+0x2e86>
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
or     $0x4,%ebx
movl   $0x16,(%esp)
call   8049000 <signal@plt>
call   804aed0 <fchmod@plt+0x1b40>
call   804aad0 <fchmod@plt+0x1740>
call   8059b10 <fchmod@plt+0x10780>
movl   $0x0,(%esp)
call   8049e10 <fchmod@plt+0xa80>
movl   $0x0,0x4(%esp)
movl   $0x16,(%esp)
call   8049000 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x14,(%esp)
call   8049000 <signal@plt>
call   80490f0 <getpid@plt>
movl   $0x14,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <kill@plt>
movl   $0x805cd80,0x4(%esp)
movl   $0x14,(%esp)
call   8049000 <signal@plt>
movl   $0x1,(%esp)
call   8049e10 <fchmod@plt+0xa80>
call   804a9f0 <fchmod@plt+0x1660>
test   $0x4,%bl
movl   $0x1,0x806ffbc
00
je     805cee4 <error+0x2e74>
jmp    805cf00 <error+0x2e90>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,(%esp)
call   80499a0 <fchmod@plt+0x610>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x1,0x4(%esp)
mov    0x20(%esp),%esi
movl   $0x1c,(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %edi,(%esp)
mov    %eax,%ebx
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x8(%ebx)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
mov    0x8(%esp),%edx
test   %esi,%esi
mov    0xc(%esp),%ecx
mov    0x24(%esp),%eax
mov    %edx,0xc(%ebx)
mov    %ecx,0x10(%ebx)
mov    %al,0x18(%ebx)
je     805d0c0 <error+0x3050>
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
movl   $0x1,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %eax,0x14(%ebx)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <strcpy@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x0,0x14(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
sub    $0x1c,%esp
mov    0x806c25c,%eax
cmp    $0x806c25c,%eax
je     805d101 <error+0x3091>
nop
mov    0x4(%eax),%ecx
mov    (%eax),%edx
mov    %ecx,0x4(%edx)
mov    0x4(%eax),%ecx
mov    %edx,(%ecx)
mov    %eax,(%esp)
call   8048f90 <free@plt>
mov    0x806c25c,%eax
cmp    $0x806c25c,%eax
jne    805d0e0 <error+0x3070>
movl   $0x0,0x806ff14
00
movl   $0x0,0x806ff18
00
movl   $0x0,0x806ff1c
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x43c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x806c264,%eax
mov    %eax,(%esp)
call   8052490 <fchmod@plt+0x9100>
movl   $0x805e6c8,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   8049090 <fopen64@plt>
mov    %eax,%ebp
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <free@plt>
test   %ebp,%ebp
mov    $0x1,%eax
je     805d305 <error+0x3295>
call   805d0d0 <error+0x3060>
lea    0x2c(%esp),%ebx
mov    %esi,(%esp)
movl   $0x0,0x806ff1c
00
call   80491a0 <strlen@plt>
mov    %eax,%edi
lea    (%ebx,%eax,1),%eax
mov    %eax,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebx,(%esp)
call   8048fb0 <fgets@plt>
test   %eax,%eax
je     805d2d8 <error+0x3268>
cmpb   $0x21,0x2c(%esp)
je     805d1b0 <error+0x3140>
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80492f0 <strncmp@plt>
test   %eax,%eax
jne    805d1b0 <error+0x3140>
movzbl 0x2c(%esp,%edi,1),%eax
cmp    $0x9,%al
je     805d1f4 <error+0x3184>
cmp    $0x20,%al
jne    805d1b0 <error+0x3140>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,0x14(%esp)
mov    %eax,0x24(%esp)
movzbl (%eax),%eax
test   %al,%al
je     805d1b0 <error+0x3140>
cmp    $0x9,%al
je     805d3b4 <error+0x3344>
test   $0xdf,%al
mov    0x14(%esp),%eax
je     805d245 <error+0x31d5>
add    $0x1,%eax
jmp    805d237 <error+0x31c7>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
and    $0xdf,%edx
je     805d328 <error+0x32b8>
mov    %eax,0x24(%esp)
movzbl (%eax),%edx
mov    %eax,%ecx
cmp    $0x9,%dl
jne    805d228 <error+0x31b8>
lea    0x1(%eax),%edx
mov    %edx,0x24(%esp)
movb   $0x0,(%eax)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049900 <fchmod@plt+0x570>
mov    %eax,0x24(%esp)
cmpb   $0x0,(%eax)
je     805d1b0 <error+0x3140>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8058bf0 <fchmod@plt+0xf860>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
jne    805d32f <error+0x32bf>
mov    %eax,%ecx
mov    %eax,%edx
sar    $0x1f,%ecx
xor    %eax,%eax
movl   $0x0,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
mov    0x14(%esp),%eax
call   805d020 <error+0x2fb0>
mov    0x806c260,%edx
addl   $0x1,0x806ff1c
movl   $0x806c25c,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,(%edx)
mov    %eax,0x806c260
jmp    805d1b0 <error+0x3140>
nop
mov    %ebp,(%esp)
call   8048fd0 <fclose@plt>
mov    0x806ff1c,%edx
mov    $0x2,%eax
test   %edx,%edx
je     805d305 <error+0x3295>
mov    0x806c25c,%eax
movl   $0x1,0x806ff18
00
mov    %eax,0x806ff14
xor    %eax,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805d3bd <error+0x334d>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%eax
jmp    805d245 <error+0x31d5>
mov    0x24(%esp),%edx
lea    0x1(%edx),%ecx
mov    %ecx,0x24(%esp)
movzbl (%edx),%eax
mov    %ecx,0x1c(%esp)
mov    %al,0x1b(%esp)
movzbl 0x1(%edx),%eax
cmp    $0x5e,%al
je     805d3a3 <error+0x3333>
cmp    %al,0x1b(%esp)
mov    0x1c(%esp),%ecx
jne    805d37b <error+0x330b>
jmp    805d37f <error+0x330f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5c,%al
lea    0x1(%ecx),%edx
cmovne 0x24(%esp),%edx
lea    0x1(%edx),%ecx
mov    %ecx,0x24(%esp)
movzbl 0x1(%edx),%eax
cmp    %al,0x1b(%esp)
je     805d37f <error+0x330f>
test   %al,%al
jne    805d360 <error+0x32f0>
xor    %eax,%eax
cmpb   $0x24,-0x1(%ecx)
sete   %al
je     805d39a <error+0x332a>
mov    0x24(%esp),%ecx
movb   $0x0,(%ecx)
xor    %edx,%edx
xor    %ecx,%ecx
jmp    805d2a1 <error+0x3231>
sub    $0x1,%ecx
mov    %ecx,0x24(%esp)
jmp    805d38e <error+0x331e>
lea    0x2(%edx),%ecx
mov    %ecx,0x24(%esp)
movzbl 0x2(%edx),%eax
mov    %ecx,0x1c(%esp)
jmp    805d34d <error+0x32dd>
mov    0x14(%esp),%eax
jmp    805d245 <error+0x31d5>
call   8049040 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x14c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x13c(%esp)
xor    %eax,%eax
cmp    $0x1,%edx
je     805d420 <error+0x33b0>
test   %esi,%esi
jne    805d420 <error+0x33b0>
mov    $0x1,%ebx
mov    0x13c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    805d8dc <error+0x386c>
add    $0x14c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   805d0d0 <error+0x3060>
cmp    $0x1,%ebx
movl   $0x0,0x806ff1c
00
je     805d520 <error+0x34b0>
movl   $0x8063b2b,(%esp)
call   8051120 <fchmod@plt+0x7d90>
test   %eax,%eax
mov    %eax,%ebp
je     805d3f6 <error+0x3386>
cmpb   $0x0,(%eax)
je     805d3f6 <error+0x3386>
cmp    $0x3,%ebx
je     805d863 <error+0x37f3>
jle    805d848 <error+0x37d8>
cmp    $0x4,%ebx
je     805d818 <error+0x37a8>
cmp    $0x5,%ebx
movl   $0x805e6ff,0x28(%esp)
jne    805d859 <error+0x37e9>
mov    %esi,(%esp)
call   80525c0 <fchmod@plt+0x9230>
mov    %ebp,(%esp)
test   %eax,%eax
mov    %eax,%edi
je     805d870 <error+0x3800>
call   80491a0 <strlen@plt>
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebx
call   80491a0 <strlen@plt>
mov    0x2c(%esp),%ecx
movl   $0x1,0x4(%esp)
lea    0x5(%ecx,%ebx,1),%ecx
add    %ecx,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %edi,0x18(%esp)
mov    %ebp,0x10(%esp)
movl   $0x8063b3a,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    0x28(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
call   8049380 <__sprintf_chk@plt>
cmp    %edi,%esi
je     805d504 <error+0x3494>
mov    %edi,(%esp)
call   8048f90 <free@plt>
movl   $0x805e6c8,0x4(%esp)
mov    %ebx,(%esp)
call   8049030 <popen@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8048f90 <free@plt>
jmp    805d530 <error+0x34c0>
mov    0x806c284,%esi
movl   $0x8063b26,0x806c264
08
test   %esi,%esi
lea    0x3c(%esp),%edi
je     805d678 <error+0x3608>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %edi,(%esp)
call   8048fb0 <fgets@plt>
test   %eax,%eax
je     805d660 <error+0x35f0>
mov    0x8070078,%ebx
test   %ebx,%ebx
jne    805d7fa <error+0x378a>
mov    %edi,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     805d56c <error+0x34fc>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %edi,%edx
test   %edx,%edx
jle    805d5b5 <error+0x3545>
sub    $0x1,%edx
cmpb   $0xa,0x3c(%esp,%edx,1)
jne    805d5b5 <error+0x3545>
jmp    805d7f0 <error+0x3780>
nop
cmp    $0xa,%eax
je     805d5c2 <error+0x3552>
mov    %esi,(%esp)
call   8049240 <fgetc@plt>
cmp    $0xffffffff,%eax
jne    805d5b0 <error+0x3540>
movzbl 0x3c(%esp),%ebx
test   %bl,%bl
je     805d660 <error+0x35f0>
call   8049360 <__ctype_b_loc@plt>
mov    %edi,%edx
mov    (%eax),%eax
jmp    805d5ea <error+0x357a>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ebx
test   %bl,%bl
je     805d660 <error+0x35f0>
testb  $0x20,0x1(%eax,%ebx,2)
je     805d5e0 <error+0x3570>
lea    0x1(%edx),%ebp
movb   $0x0,(%edx)
movzbl 0x1(%edx),%edx
test   %dl,%dl
jne    805d613 <error+0x35a3>
jmp    805d660 <error+0x35f0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     805d660 <error+0x35f0>
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    805d608 <error+0x3598>
and    $0x8,%dh
je     805d6a8 <error+0x3638>
movzbl 0x0(%ebp),%ecx
movzbl %cl,%edx
movzwl (%eax,%edx,2),%edx
test   $0x8,%dh
je     805d660 <error+0x35f0>
test   %cl,%cl
je     805d660 <error+0x35f0>
and    $0x20,%dh
mov    %ebp,%edx
je     805d653 <error+0x35e3>
jmp    805d708 <error+0x3698>
lea    0x0(%esi),%esi
testb  $0x20,0x1(%eax,%ecx,2)
jne    805d708 <error+0x3698>
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
jne    805d648 <error+0x35d8>
lea    0x0(%esi),%esi
cmp    0x806c284,%esi
je     805d678 <error+0x3608>
mov    %esi,(%esp)
call   8049180 <pclose@plt>
test   %eax,%eax
jne    805d825 <error+0x37b5>
mov    0x806c25c,%eax
mov    $0x2,%ebx
cmp    $0x806c25c,%eax
je     805d3fb <error+0x338b>
mov    %eax,0x806ff14
xor    %bl,%bl
movl   $0x1,0x806ff18
00
jmp    805d3fb <error+0x338b>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp),%edx
test   %dl,%dl
jne    805d6c3 <error+0x3653>
jmp    805d660 <error+0x35f0>
lea    0x0(%esi),%esi
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     805d660 <error+0x35f0>
testb  $0x20,0x1(%eax,%edx,2)
je     805d6b8 <error+0x3648>
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     805d660 <error+0x35f0>
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
je     805d6f8 <error+0x3688>
xchg   %ax,%ax
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     805d660 <error+0x35f0>
movzwl (%eax,%edx,2),%edx
test   $0x20,%dh
jne    805d6e0 <error+0x3670>
test   $0x8,%dh
jne    805d639 <error+0x35c9>
jmp    805d660 <error+0x35f0>
xchg   %ax,%ax
lea    0x1(%edx),%ebx
movb   $0x0,(%edx)
movzbl 0x1(%edx),%edx
test   %dl,%dl
jne    805d72e <error+0x36be>
jmp    805d660 <error+0x35f0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     805d660 <error+0x35f0>
testb  $0x20,0x1(%eax,%edx,2)
jne    805d720 <error+0x36b0>
mov    %ebx,%edx
jmp    805d747 <error+0x36d7>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x20,0x1(%eax,%ecx,2)
jne    805d758 <error+0x36e8>
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
jne    805d740 <error+0x36d0>
jmp    805d660 <error+0x35f0>
xchg   %ax,%ax
movb   $0x0,(%edx)
cmpb   $0x0,0x3c(%esp)
je     805d660 <error+0x35f0>
cmpb   $0x0,0x0(%ebp)
je     805d660 <error+0x35f0>
cmpb   $0x0,(%ebx)
je     805d660 <error+0x35f0>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049340 <strtol@plt>
test   %eax,%eax
jle    805d660 <error+0x35f0>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049340 <strtol@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ecx
mov    %eax,%edx
sar    $0x1f,%ecx
mov    %ebx,%eax
call   805d020 <error+0x2fb0>
mov    0x806c260,%edx
addl   $0x1,0x806ff1c
movl   $0x806c25c,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,(%edx)
mov    %eax,0x806c260
jmp    805d540 <error+0x34d0>
movb   $0x0,0x3c(%esp,%edx,1)
jmp    805d5c2 <error+0x3552>
cmp    0x806c284,%esi
mov    $0x4,%ebx
je     805d3fb <error+0x338b>
mov    %esi,(%esp)
call   8049180 <pclose@plt>
jmp    805d3fb <error+0x338b>
movl   $0x805f529,0x28(%esp)
jmp    805d478 <error+0x3408>
movl   $0x0,0x806ff14
00
movl   $0x0,0x806ff18
00
movl   $0x0,0x806ff1c
00
jmp    805d3f6 <error+0x3386>
cmp    $0x2,%ebx
movl   $0x805e30e,0x28(%esp)
je     805d478 <error+0x3408>
mov    $0x3,%ebx
jmp    805d3fb <error+0x338b>
movl   $0x805e6c8,0x28(%esp)
jmp    805d478 <error+0x3408>
call   80491a0 <strlen@plt>
mov    0x28(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   80491a0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   80491a0 <strlen@plt>
mov    0x2c(%esp),%edx
movl   $0x1,0x4(%esp)
lea    0x5(%edx,%ebx,1),%edx
add    %edx,%eax
mov    %eax,(%esp)
call   8049a20 <fchmod@plt+0x690>
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ebp,0x10(%esp)
movl   $0x8063b3a,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,%ebx
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049380 <__sprintf_chk@plt>
jmp    805d504 <error+0x3494>
call   8049040 <__stack_chk_fail@plt>
jmp    805d8f0 <error+0x3880>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    $0x6,%ecx
push   %esi
mov    $0x8063b45,%edi
push   %ebx
sub    $0x10,%esp
mov    0x806c264,%edx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805d918 <error+0x38a8>
mov    $0x2,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0x7,%ecx
mov    $0x8063b4b,%edi
mov    %edx,%esi
mov    $0x3,%eax
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
cmp    %cl,%bl
je     805d911 <error+0x38a1>
mov    $0x6,%ecx
mov    $0x8063b52,%edi
mov    %edx,%esi
mov    $0x4,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
cmp    %cl,%bl
je     805d911 <error+0x38a1>
mov    $0x6,%ecx
mov    $0x8063b58,%edi
mov    %edx,%esi
mov    $0x5,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
cmp    %cl,%bl
je     805d911 <error+0x38a1>
cmpb   $0x2d,(%edx)
je     805d98e <error+0x391e>
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   8048f30 <open64@plt>
test   %eax,%eax
js     805d90c <error+0x389c>
mov    %eax,(%esp)
call   8049350 <close@plt>
xor    %eax,%eax
jmp    805d911 <error+0x38a1>
cmpb   $0x0,0x1(%edx)
jne    805d96e <error+0x38fe>
mov    $0x1,%eax
jmp    805d911 <error+0x38a1>
xchg   %ax,%ax
sub    $0x1c,%esp
call   805d8f0 <error+0x3880>
test   %eax,%eax
jne    805d9c8 <error+0x3958>
mov    0x20(%esp),%eax
call   805d130 <error+0x30c0>
cmp    $0x2,%eax
je     805d9d8 <error+0x3968>
cmp    $0x3,%eax
je     805da08 <error+0x3998>
cmp    $0x1,%eax
je     805d9f0 <error+0x3980>
add    $0x1c,%esp
ret
mov    %eax,%edx
mov    0x20(%esp),%eax
call   805d3d0 <error+0x3360>
cmp    $0x2,%eax
jne    805d9ba <error+0x394a>
movl   $0x0,0x4(%esp)
movl   $0x8063b6b,(%esp)
call   805a070 <error>
add    $0x1c,%esp
ret
movl   $0x0,0x4(%esp)
movl   $0x8063b5e,(%esp)
call   805a070 <error>
add    $0x1c,%esp
ret
movl   $0x0,0x4(%esp)
movl   $0x8063b84,(%esp)
call   805a070 <error>
add    $0x1c,%esp
ret
mov    0x806ff14,%eax
test   %eax,%eax
je     805dbe6 <error+0x3b76>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0xc(%eax),%edx
mov    0x10(%eax),%eax
mov    %eax,%ebx
or     %edx,%ebx
jne    805db60 <error+0x3af0>
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    805dad7 <error+0x3a67>
lea    0x0(%esi),%esi
mov    0x806ff14,%ebp
mov    0x14(%ebp),%edi
mov    %edi,(%esp)
call   80491a0 <strlen@plt>
mov    0x3c(%esp),%ecx
mov    %edi,(%esp)
mov    %ecx,0x4(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x24(%esp)
call   80492f0 <strncmp@plt>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%edx
test   %eax,%eax
jne    805dacf <error+0x3a5f>
cmpb   $0x0,0x18(%ebp)
je     805db78 <error+0x3b08>
movzbl (%ecx,%edx,1),%eax
test   %al,%al
je     805db78 <error+0x3b08>
cmp    $0xd,%al
je     805db78 <error+0x3b08>
mov    %ebx,0x18(%esp)
mov    %esi,0x1c(%esp)
testb  $0x3,0x8070078
jne    805dba8 <error+0x3b38>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   80567d0 <fchmod@plt+0xd440>
mov    %edx,%esi
mov    0x2c(%esp),%edx
mov    %eax,%ebx
mov    0x28(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     805db24 <error+0x3ab4>
addl   $0x1,0x28(%esp)
adcl   $0x0,0x2c(%esp)
mov    %ebx,%eax
and    %esi,%eax
cmp    $0xffffffff,%eax
je     805dbc0 <error+0x3b50>
mov    0x806ffe0,%edi
test   %edi,%edi
je     805da78 <error+0x3a08>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8056b60 <fchmod@plt+0xd7d0>
jmp    805da78 <error+0x3a08>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8057050 <fchmod@plt+0xdcc0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    %ebp,0x20(%esp)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
call   8056d30 <fchmod@plt+0xd9a0>
mov    0x20(%esp),%ecx
mov    %eax,0xc(%ecx)
mov    %esi,%eax
mov    %edx,0x10(%ecx)
add    $0x4c,%esp
mov    %ebx,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x8063b95,(%esp)
call   805a070 <error>
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
ret
jmp    805dc00 <error+0x3b90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
xor    %eax,%eax
mov    0x806ff18,%esi
push   %ebx
mov    0x806ff14,%ebx
mov    0xc(%esp),%ecx
jmp    805dc23 <error+0x3bb3>
xchg   %ax,%ax
mov    0x8(%edx),%eax
add    $0x1,%esi
mov    %edx,%ebx
sub    $0x1,%ecx
test   %ecx,%ecx
jle    805dc40 <error+0x3bd0>
test   %ebx,%ebx
je     805dc35 <error+0x3bc5>
mov    (%ebx),%edx
cmp    $0x806c25c,%edx
jne    805dc18 <error+0x3ba8>
xor    %eax,%eax
jmp    805dc20 <error+0x3bb0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x806ff14
mov    %esi,0x806ff18
pop    %ebx
pop    %esi
ret
nop
push   %esi
xor    %eax,%eax
mov    0x806ff18,%esi
push   %ebx
mov    0x806ff14,%ebx
mov    0xc(%esp),%ecx
jmp    805dc73 <error+0x3c03>
xchg   %ax,%ax
mov    0x8(%edx),%eax
sub    $0x1,%esi
mov    %edx,%ebx
sub    $0x1,%ecx
test   %ecx,%ecx
jle    805dc90 <error+0x3c20>
test   %ebx,%ebx
je     805dc86 <error+0x3c16>
mov    0x4(%ebx),%edx
cmp    $0x806c25c,%edx
jne    805dc68 <error+0x3bf8>
xor    %eax,%eax
jmp    805dc70 <error+0x3c00>
lea    0x0(%esi),%esi
mov    %ebx,0x806ff14
mov    %esi,0x806ff18
pop    %ebx
pop    %esi
ret
nop
mov    0x806ff1c,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806ff18,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806ff14,%edx
mov    $0x1,%eax
test   %edx,%edx
je     805dce0 <error+0x3c70>
sub    $0x1c,%esp
mov    0x8(%edx),%eax
mov    %eax,(%esp)
call   8051f20 <fchmod@plt+0x8b90>
add    $0x1c,%esp
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
movl   $0x806243b,(%esp)
call   8048f30 <open64@plt>
mov    $0x2,%edx
test   %eax,%eax
cmovns %eax,%edx
mov    %edx,0x807007c
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1f(%esp),%ebx
jmp    805dd51 <error+0x3ce1>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1f(%esp)
jne    805dd4c <error+0x3cdc>
movb   $0xe0,0x1f(%esp)
cmp    $0x1,%eax
je     805dda0 <error+0x3d30>
mov    0x807007c,%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8059860 <fchmod@plt+0x104d0>
cmp    $0xfffffffe,%eax
je     805dd90 <error+0x3d20>
test   %eax,%eax
jns    805dd40 <error+0x3cd0>
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
call   80499a0 <fchmod@plt+0x610>
mov    0xc(%esp),%eax
jmp    805dd40 <error+0x3cd0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x28,%esp
mov    $0xfffffffe,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movzbl 0x1f(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     805de78 <error+0x3e08>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     805de94 <error+0x3e24>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    805de10 <error+0x3da0>
cmp    %ebp,%esi
jbe    805de38 <error+0x3dc8>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    805de18 <error+0x3da8>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    805de58 <error+0x3de8>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     805de2a <error+0x3dba>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    805de47 <error+0x3dd7>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    805de18 <error+0x3da8>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    805dea8 <error+0x3e38>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    805de6e <error+0x3dfe>
cmp    %ebp,%eax
jae    805de14 <error+0x3da4>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    805de18 <error+0x3da8>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    805ddeb <error+0x3d7b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    805ddeb <error+0x3d7b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     805df18 <error+0x3ea8>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    805df0d <error+0x3e9d>
cmp    0x4(%esp),%ebp
je     805df18 <error+0x3ea8>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    805de18 <error+0x3da8>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    805de18 <error+0x3da8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x34(%esp),%edx
mov    0x3c(%esp),%eax
mov    0x30(%esp),%ebp
mov    0x38(%esp),%edi
test   %edx,%edx
mov    %eax,%esi
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,0xc(%esp)
js     805e018 <error+0x3fa8>
test   %esi,%esi
mov    %edi,%edx
mov    %eax,%ecx
js     805e008 <error+0x3f98>
mov    0x4(%esp),%edi
mov    %ecx,%eax
mov    %edx,%ecx
mov    (%esp),%esi
test   %eax,%eax
mov    %edx,0x10(%esp)
mov    %edi,%ebp
mov    %esi,0x14(%esp)
mov    %esi,%edi
mov    %ebp,%esi
jne    805dfa0 <error+0x3f30>
cmp    %esi,%edx
jbe    805dfe8 <error+0x3f78>
mov    %esi,%edx
mov    0x14(%esp),%eax
div    %ecx
mov    %edx,%esi
mov    %esi,%eax
xor    %edx,%edx
jmp    805dfa9 <error+0x3f39>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%eax
jbe    805dfc0 <error+0x3f50>
mov    (%esp),%eax
mov    %esi,%edx
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     805dfb8 <error+0x3f48>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
bsr    %eax,%edx
mov    %edx,(%esp)
xorl   $0x1f,(%esp)
jne    805e038 <error+0x3fc8>
cmp    %edi,%ecx
jbe    805e0d0 <error+0x4060>
cmp    %esi,%eax
jb     805e0d0 <error+0x4060>
mov    %edi,%eax
mov    %ebp,%edx
jmp    805dfa9 <error+0x3f39>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    805dff7 <error+0x3f87>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%ecx
mov    %esi,%eax
xor    %edx,%edx
div    %ecx
mov    %edi,%eax
div    %ecx
mov    %edx,%esi
jmp    805df96 <error+0x3f26>
lea    0x0(%esi),%esi
neg    %edx
adc    $0x0,%ecx
neg    %ecx
jmp    805df6b <error+0x3efb>
lea    0x0(%esi,%eiz,1),%esi
negl   (%esp)
adcl   $0x0,0x4(%esp)
negl   0x4(%esp)
movl   $0xffffffff,0xc(%esp)
jmp    805df5f <error+0x3eef>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%edx
movl   $0x20,0x18(%esp)
mov    0x10(%esp),%ebp
sub    %edx,0x18(%esp)
mov    %edx,%ecx
shl    %cl,%eax
movzbl 0x18(%esp),%ecx
mov    %ebp,%edi
shr    %cl,%edi
mov    %edx,%ecx
shl    %cl,%ebp
movzbl 0x18(%esp),%ecx
or     %eax,%edi
mov    %edx,%eax
mov    %esi,%edx
mov    %ebp,0x1c(%esp)
shr    %cl,%edx
mov    %eax,%ecx
mov    0x14(%esp),%eax
shl    %cl,%esi
movzbl 0x18(%esp),%ecx
shr    %cl,%eax
movzbl (%esp),%ecx
or     %esi,%eax
mov    0x14(%esp),%esi
div    %edi
shl    %cl,%esi
mov    %esi,0x14(%esp)
mov    %edx,%esi
mul    %ebp
mov    %edx,0x10(%esp)
mov    0x10(%esp),%ebp
mov    %eax,%edx
cmp    %ebp,%esi
mov    %ebp,%ecx
jb     805e0e4 <error+0x4074>
cmp    %eax,0x14(%esp)
jb     805e0e0 <error+0x4070>
mov    (%esp),%ebp
mov    0x14(%esp),%edi
sub    %edx,%edi
sbb    %ecx,%esi
mov    %esi,%eax
mov    %ebp,%ecx
shr    %cl,%edi
movzbl 0x18(%esp),%ecx
shl    %cl,%eax
mov    %ebp,%ecx
or     %eax,%edi
shr    %cl,%esi
mov    %edi,%eax
mov    %esi,%edx
jmp    805dfa9 <error+0x3f39>
nop
sub    %ecx,%edi
sbb    %eax,%esi
mov    %esi,%ebp
jmp    805dfdc <error+0x3f6c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%esi
jne    805e0a8 <error+0x4038>
mov    0x10(%esp),%ecx
mov    %eax,%edx
sub    0x1c(%esp),%edx
sbb    %edi,%ecx
jmp    805e0a8 <error+0x4038>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049830 <fchmod@plt+0x4a0>
add    $0xbef5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   8048eb0 <_init>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     805e159 <error+0x40e9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    805e138 <error+0x40c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    805e170 <error+0x4100>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
push   %ebx
sub    $0x8,%esp
call   8049830 <fchmod@plt+0x4a0>
add    $0xbe83,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e1cf <_IO_stdin_used+0x2b>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805e237 <_IO_stdin_used+0x93>
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
push   %ebx
inc    %ebp
inc    %ebx
push   %ebp
push   %edx
inc    %ebp
add    %ch,0x6f(%ebp)
jb     805e238 <_IO_stdin_used+0x94>
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
pop    %edi
dec    %ecx
push   %ebx
pop    %edi
dec    %ebp
dec    %edi
push   %edx
inc    %ebp
add    %dl,0x49(%esi)
push   %ebx
push   %ebp
inc    %ecx
dec    %esp
add    %al,0x44(%ebp)
dec    %ecx
push   %esp
dec    %edi
push   %edx
add    %ch,(%edi)
jne    805e265 <_IO_stdin_used+0xc1>
jb     805e223 <_IO_stdin_used+0x7f>
bound  %ebp,0x6e(%ecx)
das
gs imul $0x53454c00,%fs:%gs:0x72(%edi,%ebp,2),%esi
53
push   %ebx
inc    %ebp
inc    %esp
dec    %ecx
push   %esp
add    %ah,0x6c3f2045
insl   (%dx),%es:(%edi)
sub    0x202e6d6c,%esp
and    $0x2f400066,%eax
pop    %esp
insb   (%dx),%es:(%edi)
gs
jae    805e291 <_IO_stdin_used+0xed>
das
pop    %esp
push   $0x2f706c65
pop    %esp
imul   $0x405c,0x2f(%ebp,%eiz,2),%bp
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
je     805e2a0 <_IO_stdin_used+0xfc>
jb     805e2aa <_IO_stdin_used+0x106>
imul   $0x7369206c,0x61(%esi),%ebp
and    %ch,0x6f(%esi)
je     805e269 <_IO_stdin_used+0xc5>
data16
jne    805e2b8 <_IO_stdin_used+0x114>
insb   (%dx),%es:(%edi)
jns    805e26f <_IO_stdin_used+0xcb>
data16
jne    805e2c0 <_IO_stdin_used+0x11c>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,0x6f(%esi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    805e289 <_IO_stdin_used+0xe5>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805e2d4 <_IO_stdin_used+0x130>
and    %dh,%fs:0x69(%edi)
je     805e2dd <_IO_stdin_used+0x139>
and    %ch,0x706f2074
je     805e2e6 <_IO_stdin_used+0x142>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
pop    %edi
push   %esp
inc    %ebp
push   %edx
dec    %ebp
inc    %ebx
inc    %ecx
push   %eax
pop    %edi
inc    %esp
inc    %ebp
inc    %edx
push   %ebp
inc    %edi
add    %bh,0x4c003e73(,%eiz,1)
dec    %ecx
dec    %esi
inc    %ebp
push   %ebx
add    %ch,0x0(%ecx,%ebp,2)
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %ah,0x6f(%ebx)
add    %ch,0x72(%ebx)
add    %ch,0x6c(%ebx)
add    %ch,0x75(%ebx)
add    %ch,0x64(%ebx)
add    %ch,0x50(%ebx)
add    %ch,0x4e(%ebx)
add    %ch,0x68(%ebx)
add    %al,0x37(%eax)
add    %ch,0x44(%ebx)
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dl,0x52(%ebp,%eax,2)
dec    %ebp
add    %ch,0x63(%eax)
add    %ah,0x6d(%ecx)
add    %bh,0x6e(%eax)
add    %ah,0x0(%ecx,%eiz,2)
bound  %eax,%fs:(%eax)
jae    805e34c <_IO_stdin_used+0x1a8>
add    %dh,0x63(%eax)
add    %ch,0x73(%ebx)
add    %dh,0x0(%ecx,%ebp,2)
je     805e356 <_IO_stdin_used+0x1b2>
add    %ah,0x64(%ebx)
add    %ah,0x6c(%ebx)
add    %cl,(%edx)
or     (%eax),%al
arpl   %bp,0x0(%ebp)
jae    805e36f <_IO_stdin_used+0x1cb>
add    %dh,0x65(%ebp)
add    %dh,0x73(%ebp)
add    %ch,0x64(%ebp)
add    %dh,0x62(%esi)
add    %cl,(%eax)
add    %ah,0x63(%edx)
add    %bh,0x5e(%eax,%ecx,1)
add    %cl,0x726300
jae    805e38f <_IO_stdin_used+0x1eb>
add    %al,(%eax)
add    %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
pusha
mov    %eax,0xa3700804
add    $0x8,%al
andb   $0x4,-0x5c6ff7fc(%ebx)
or     %ah,-0x4ff7fb5d(%eax)
mov    %eax,0xa3c00804
add    $0x8,%al
shlb   -0x5c17f7fc(%ebx)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sbb    %ah,0x4a41808(%esp,%eax,1)
or     %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
inc    %eax
mov    %eax,0x6f4e0804
je     805e430 <_IO_stdin_used+0x28c>
imul   $0x206e6920,0x67(%esi),%ebp
je     805e440 <_IO_stdin_used+0x29c>
jo     805e3f3 <_IO_stdin_used+0x24f>
insb   (%dx),%es:(%edi)
imul   $0x746f4e00,0x65(%esi),%ebp
push   $0x20676e69
imul   $0x74746f62,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
add    %cl,%gs:0x6f(%esi)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     805e41a <_IO_stdin_used+0x276>
imul   $0x20706f74,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x206f4e00,0x65(%esi),%ebp
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     805e431 <_IO_stdin_used+0x28d>
imul   $0x74746f62,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
add    %cl,%gs:0x6f(%esi)
and    %ch,0x61(%ebp)
je     805e48a <_IO_stdin_used+0x2e6>
push   $0x20676e69
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     805e434 <_IO_stdin_used+0x290>
arpl   %bp,0x5f(%eax)
jne    805e4a7 <_IO_stdin_used+0x303>
addr16
gs
je     805e4a0 <_IO_stdin_used+0x2fc>
push   $0x6f207261
jbe    805e4a9 <_IO_stdin_used+0x305>
jb     805e4b8 <_IO_stdin_used+0x314>
jne    805e4b6 <_IO_stdin_used+0x312>
add    %dh,0x65(%ebx)
imul   $0x65,%gs:(%eax),%esp
jb     805e4c3 <_IO_stdin_used+0x31f>
outsl  %ds:(%esi),(%dx)
jb     805e454 <_IO_stdin_used+0x2b0>
jb     805e4bb <_IO_stdin_used+0x317>
popa
and    %ah,%fs:0x72(%ebp)
jb     805e4cc <_IO_stdin_used+0x328>
jb     805e45f <_IO_stdin_used+0x2bb>
inc    %esi
imul   $0x6e696873,0x69(%esi),%ebp
and    %ch,0x6f(%si)
imul   $0x7300,0x65(%si),%bp
gs imul $0x65,%gs:(%eax),%esp
jb     805e4eb <_IO_stdin_used+0x347>
outsl  %ds:(%esi),(%dx)
jb     805e49c <_IO_stdin_used+0x2f8>
je     805e4ed <_IO_stdin_used+0x349>
and    %dh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %edi
popa
jb     805e4f6 <_IO_stdin_used+0x352>
imul   $0x6f6c203a,0x67(%esi),%ebp
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6d(%edi)
jo     805e50c <_IO_stdin_used+0x368>
gs
je     805e508 <_IO_stdin_used+0x364>
add    %ch,0x6e(%ecx)
jbe    805e509 <_IO_stdin_used+0x365>
insb   (%dx),%es:(%edi)
imul   $0x64726168,0x63(%eax,%eiz,1),%esp
gs
data16
add    %ah,0x68(%ebx)
popa
jb     805e51d <_IO_stdin_used+0x379>
gs
data16
and    %ch,0x6e(%edi,%ebp,2)
addr16
gs
jb     805e4e3 <_IO_stdin_used+0x33f>
je     805e52d <_IO_stdin_used+0x389>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,(%edx)
xor    $0x6e690036,%eax
jbe    805e531 <_IO_stdin_used+0x38d>
insb   (%dx),%es:(%edi)
imul   $0x73726168,0x63(%eax,%eiz,1),%esp
gs
je     805e4fc <_IO_stdin_used+0x358>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x53(%ebp,%eax,2)
push   %ebx
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
inc    %esp
inc    %ebp
inc    %esi
add    %cl,0x5f(%ebx,%eax,2)
inc    %ecx
dec    %esp
dec    %esp
add    %cl,0x5f(%ebx,%eax,2)
inc    %ebx
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %cl,0x4e(%ecx,%eax,2)
inc    %edi
add    %dl,0x54(%ebp)
inc    %esi
sub    $0x74750038,%eax
sub    $0x38,%ax
push   %ebp
push   %esp
inc    %esi
cmp    %al,(%eax)
jne    805e595 <_IO_stdin_used+0x3f1>
data16
cmp    %al,(%eax)
insb   (%dx),%es:(%edi)
popa
je     805e591 <_IO_stdin_used+0x3ed>
outsb  %ds:(%esi),(%dx)
xor    %eax,(%eax)
dec    %esp
inc    %ebp
push   %ebx
push   %ebx
inc    %edx
dec    %ecx
dec    %esi
inc    %esi
dec    %ebp
push   %esp
add    %ch,(%edx)
jae    805e575 <_IO_stdin_used+0x3d1>
and    $0x3e583230,%eax
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
push   %ebp
push   %esp
inc    %esi
inc    %edx
dec    %ecx
dec    %esi
inc    %esi
dec    %ebp
push   %esp
add    %bh,0x3430252b(,%edx,2)
insb   (%dx),%es:(%edi)
pop    %eax
add    %bl,%ds:0x25(%esi)
arpl   %ax,(%eax)
inc    %ecx
dec    %esi
push   %ebx
dec    %ecx
pop    %edi
pop    %eax
xor    (%esi),%ebp
xor    $0x2d,%al
xor    %edi,(%ecx)
cmp    %al,%ss:(%eax)
popa
jae    805e5d0 <_IO_stdin_used+0x42c>
imul   $0x412d5355,0x0(%ecx),%ebp
push   %ebx
inc    %ebx
dec    %ecx
dec    %ecx
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
cmp    %bh,(%eax)
xor    $0x53490039,%eax
dec    %edi
sub    $0x39353838,%eax
sub    $0x616c0031,%eax
je     805e5f9 <_IO_stdin_used+0x455>
outsb  %ds:(%esi),(%dx)
cmp    %eax,(%eax)
dec    %ecx
push   %ebx
dec    %edi
sub    $0x39353838,%eax
sub    $0x6c003531,%eax
popa
je     805e60c <_IO_stdin_used+0x468>
outsb  %ds:(%esi),(%dx)
xor    (%eax),%al
dec    %ecx
push   %ebx
dec    %edi
sub    $0x39353838,%eax
sub    $0x53490032,%eax
dec    %edi
sub    $0x39353838,%eax
sub    $0x616c0033,%eax
je     805e629 <_IO_stdin_used+0x485>
outsb  %ds:(%esi),(%dx)
xor    (%eax),%eax
insb   (%dx),%es:(%edi)
popa
je     805e630 <_IO_stdin_used+0x48c>
outsb  %ds:(%esi),(%dx)
xor    $0x0,%al
dec    %ecx
push   %ebx
dec    %edi
sub    $0x39353838,%eax
sub    $0x79630034,%eax
jb     805e642 <_IO_stdin_used+0x49e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x2d4f5349,0x0(%ebx),%esp
cmp    %bh,(%eax)
xor    $0x352d39,%eax
dec    %ecx
push   %ebx
dec    %edi
sub    $0x39353838,%eax
sub    $0x72610036,%eax
popa
bound  %ebp,0x63(%ecx)
add    %cl,0x53(%ecx)
dec    %edi
sub    $0x39353838,%eax
sub    $0x72670037,%eax
gs imul $0x49,%gs:(%eax),%eax
inc    %edx
dec    %ebp
cmp    %esi,(%eax)
xor    %dh,0x65726700
imul   $0x30,%gs:(%edx),%esi
xor    %dh,0x4f534900
sub    $0x39353838,%eax
sub    $0x65680038,%eax
bound  %esi,0x65(%edx)
ja     805e630 <_IO_stdin_used+0x48c>
insb   (%dx),%es:(%edi)
popa
je     805e69d <_IO_stdin_used+0x4f9>
outsb  %ds:(%esi),(%dx)
xor    $0x4f534900,%eax
sub    $0x39353838,%eax
sub    $0x616c0039,%eax
je     805e6af <_IO_stdin_used+0x50b>
outsb  %ds:(%esi),(%dx)
add    %cl,%ss:0x53(%ecx)
dec    %edi
sub    $0x39353838,%eax
sub    $0x6c003031,%eax
popa
je     805e6c2 <_IO_stdin_used+0x51e>
outsb  %ds:(%esi),(%dx)
aaa
add    %cl,0x53(%ecx)
dec    %edi
sub    $0x39353838,%eax
sub    $0x6c003331,%eax
popa
je     805e6d5 <_IO_stdin_used+0x531>
outsb  %ds:(%esi),(%dx)
cmp    %al,(%eax)
dec    %ecx
push   %ebx
dec    %edi
sub    $0x39353838,%eax
sub    $0x6c003431,%eax
popa
je     805e6e8 <_IO_stdin_used+0x544>
outsb  %ds:(%esi),(%dx)
xor    %esi,(%eax)
add    %cl,0x53(%ecx)
dec    %edi
sub    $0x39353838,%eax
sub    $0x49003631,%eax
inc    %edx
dec    %ebp
xor    $0x33,%al
aaa
add    %ah,0x73(%edi,%ebp,2)
add    %al,0x42(%ebp)
inc    %ebx
inc    %esp
dec    %ecx
inc    %ebx
sub    $0x65005355,%eax
bound  %esp,0x64(%ebx)
imul   $0x314d4249,0x0(%ebx),%esp
xor    %dh,(%edi,%esi,1)
add    %cl,0x42(%ecx)
dec    %ebp
sub    $0x37343031,%eax
add    %cl,0x4f(%ebx)
dec    %ecx
cmp    %ch,0x6f6b0052
imul   $0x4b00722d,(%eax),%edi
dec    %edi
dec    %ecx
cmp    %ch,0x45470055
dec    %edi
push   %edx
inc    %edi
dec    %ecx
inc    %ecx
dec    %esi
sub    $0x67005350,%eax
outsl  %gs:(%esi),(%dx)
jb     805e749 <_IO_stdin_used+0x5a5>
imul   $0x54007370,0x6e(%ecx),%esp
inc    %ebx
push   %esi
dec    %esi
xor    $0x2d323137,%eax
xor    %eax,(%eax)
je     805e758 <_IO_stdin_used+0x5b4>
jbe    805e765 <_IO_stdin_used+0x5c1>
add    %cl,0x45(%esi)
pop    %eax
push   %esp
push   %ebx
push   %esp
inc    %ebp
push   %eax
add    %ch,0x65(%esi)
js     805e779 <_IO_stdin_used+0x5d5>
add    %dh,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e780 <_IO_stdin_used+0x5dc>
add    %dh,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e788 <_IO_stdin_used+0x5e4>
sub    $0x32353231,%eax
add    %al,0x50(%ebx)
xor    %esi,(%edx)
xor    $0x69770031,%eax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e79c <_IO_stdin_used+0x5f8>
sub    $0x31353231,%eax
add    %al,0x50(%ebx)
xor    %esi,(%edx)
xor    $0x50430032,%eax
xor    %esi,(%edx)
xor    $0x69770035,%eax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e7b7 <_IO_stdin_used+0x613>
sub    $0x35353231,%eax
add    %bh,(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x3800622e,%eax
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x3231622e,%eax
ss bound %esp,%cs:%ss:0x0(%edx)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
add    %bh,%cs:(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
xor    %esi,(%esi,%ebp,1)
bound  %esi,(%ebx)
xor    $0x3434622e,%eax
bound  %eax,%cs:(%eax)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x2e622e,%eax
dec    %ebx
dec    %edi
dec    %ecx
cmp    %ch,0x62380054
arpl   %sp,0x63(%ebx)
bound  %esp,0x63(%ebx)
xor    %edi,(%eax)
bound  %edi,(%ecx)
xor    $0x3162332e,%eax
xor    %ebp,(%esi)
xor    $0x62,%al
xor    %esi,(%edx)
xor    %cs:0x2e(%edx),%ah
add    %dl,0x53(%ecx,%ecx,2)
sub    $0x303236,%eax
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x342e622e,%eax
bound  %ebp,(%esi)
xor    %esi,(%ecx)
bound  %esi,(%edi)
cmp    %ah,%cs:0x2e(%edx)
add    %bh,(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x3162622e,%eax
xor    0x62622e,%dh
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
xor    0x63(%edx),%ah
xor    $0x2e353962,%eax
bound  %ebp,(%esi)
add    %bh,(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
xor    0x63(%edx),%ah
xor    $0x2e353962,%eax
bound  %esi,(%edx)
xor    $0x2e,%al
bound  %ebp,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,-0x34(%eax)
add    $0x8,%al
pusha
int3
add    $0x8,%al
mov    $0xcd,%al
add    $0x8,%al
or     $0x4,%ch
or     %al,-0x33(%eax)
add    $0x8,%al
lock int3
add    $0x8,%al
nop
int3
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
push   %es
add    %al,(%eax)
and    (%esi),%al
add    %al,(%eax)
inc    %esp
push   %es
add    %al,(%eax)
and    (%esi),%eax
add    %al,(%eax)
inc    %esp
push   %es
add    %al,(%eax)
and    $0x44000006,%eax
push   %es
add    %al,(%eax)
daa
push   %es
add    %al,(%eax)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
xor    $0x2e38622e,%eax
bound  %esi,(%ecx)
xor    $0x2e34622e,%eax
bound  %esi,(%ecx)
xor    (%esi),%ch
bound  %esi,(%ecx)
cmp    %ch,(%esi)
bound  %esi,(%ecx)
xor    (%esi),%ch
bound  %ebp,(%esi)
add    %bh,(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
xor    %cs:0x2e(%edx),%esp
aaa
bound  %esi,(%edx)
xor    %esi,%cs:(%ebx)
bound  %ebp,(%esi)
xor    0x2e(%edx),%esp
bound  %esi,(%edx)
ss
cs
xor    $0x2e393162,%eax
bound  %eax,(%eax)
add    %bh,(%eax)
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
xor    $0x2e,%al
xor    0x34(%edx),%ah
bound  %esi,%cs:(%ebx)
bound  %esi,%cs:(%ebx)
xor    $0x3434622e,%eax
bound  %eax,%cs:(%eax)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x6233332e,%eax
bound  %esi,%cs:(%edx)
cmp    %ebp,(%esi)
xor    (%edx),%esi
bound  %esi,(%edx)
cmp    %ch,(%esi)
xor    0x32(%edx),%ah
bound  %eax,%cs:(%eax)
add    %al,(%eax)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
cmp    %ah,0x39(%edx)
xor    $0x2e38622e,%eax
bound  %esi,(%esi)
bound  %edi,%cs:(%eax)
bound  %ebp,%cs:(%esi)
bound  %ebp,(%esi)
xor    $0x332e3762,%eax
bound  %esi,(%esi,%ebp,1)
bound  %esi,(%esi,%ebp,1)
bound  %esi,(%ebx)
bound  %ebp,%cs:(%esi)
bound  %ebp,(%esi)
xor    0x2e(%edx),%esp
add    %al,(%eax)
add    %al,(%eax)
bound  %ebp,(%esi)
bound  %ebp,%cs:(%esi)
cs bound %esp,%cs:0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %sp,0x62(%edx)
bound  %esi,(%edi)
cmp    %ah,%cs:0x39(%edx)
xor    $0x3834622e,%eax
cs
xor    $0x38002e62,%eax
bound  %esp,0x63(%ebx)
arpl   %sp,0x63(%edx)
arpl   %si,(%ecx)
xor    0x63(%edx),%ah
xor    $0x2e353962,%eax
bound  %ebp,(%esi)
bound  %esi,(%ecx)
xor    %ebp,(%esi)
bound  %ebp,(%esi)
xor    0x31(%edx),%ah
xor    (%esi),%ch
bound  %ebp,(%esi)
add    %al,(%eax)
add    %al,(%eax)
cmp    %ah,0x63(%edx)
arpl   %sp,0x62(%ebx)
arpl   %sp,0x31(%ebx)
xor    0x63(%edx),%ah
xor    $0x2e353962,%eax
bound  %ebp,(%esi)
bound  %edi,(%eax)
bound  %ebp,%cs:(%esi)
xor    $0x622e3962,%eax
cs
xor    $0x62,%al
add    %al,%cs:(%eax)
add    %dh,0x62366362
arpl   %sp,0x37(%ebx)
bound  %esp,0x63(%ebx)
xor    $0x31,%al
bound  %ebp,(%esi)
cmp    %esp,0x37(%edx)
cmp    %esp,%cs:0x35(%edx)
bound  %ebp,%cs:(%esi)
cmp    %ah,%cs:0x36(%edx)
xor    %esi,%cs:(%eax)
bound  %esi,(%esi)
bound  %edi,%cs:(%ecx)
cs
aaa
bound  %edi,(%ecx)
cmp    %ah,%cs:0x38(%edx)
xor    %esi,%cs:(%edi)
bound  %esi,(%ebx)
xor    %cs:0x39(%edx),%esp
cs
aaa
bound  %edi,(%ecx)
cmp    %ah,%cs:0x38(%edx)
cs bound %esi,%cs:%ss:(%ecx)
xor    %ch,(%esi)
bound  %ebp,(%esi)
bound  %ebp,(%esi)
bound  %ebp,(%esi)
add    %al,(%eax)
xor    $0x63,%al
bound  %esp,0x62(%ebx)
arpl   %si,(%ebx)
bound  %edi,(%ecx)
arpl   %sp,0x63(%edx)
arpl   %sp,0x63(%edx)
arpl   %sp,0x62(%edx)
xor    $0x63,%al
bound  %esp,%ss:0x63(%ebx)
xor    $0x62633362,%eax
bound  %esp,0x34(%ebx)
bound  %esp,0x34(%ebx)
bound  %esp,0x63(%ebx)
bound  %esp,0x31(%ebx)
cmp    %esi,(%ecx)
bound  %eax,%cs:(%eax)
dec    %esp
inc    %ebp
push   %ebx
push   %ebx
dec    %eax
dec    %ecx
push   %ebx
push   %esp
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ch,(%edi)
fs
gs
jbe    805ea77 <_IO_stdin_used+0x8d3>
outsb  %ds:(%esi),(%dx)
jne    805eab7 <_IO_stdin_used+0x913>
insb   (%dx),%es:(%edi)
add    %cl,0x4f(%eax)
dec    %ebp
inc    %ebp
add    %ch,(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805eaca <_IO_stdin_used+0x926>
push   $0x25007473
jae    805ea8d <_IO_stdin_used+0x8e9>
and    $0x454c0073,%eax
push   %ebx
push   %ebx
dec    %eax
dec    %ecx
push   %ebx
push   %esp
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %ah,(%edx)
and    $0x3f000a73,%eax
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
push   %ebx
inc    %ebp
push   %eax
inc    %ecx
push   %edx
inc    %ecx
push   %esp
dec    %edi
push   %edx
add    %ch,(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805eafb <_IO_stdin_used+0x957>
sub    $0x74736968,%eax
outsl  %ds:(%esi),(%dx)
jb     805eb09 <_IO_stdin_used+0x965>
sub    $0x656c6966,%eax
cmp    (%eax),%al
jae,pn 805eaff <_IO_stdin_used+0x95b>
popa
jb     805eb00 <_IO_stdin_used+0x95c>
push   $0x68732e00
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x1e(%eax)
add    $0x8,%al
add    %esp,%edx
add    $0x8,%al
loopne 805ea93 <_IO_stdin_used+0x8ef>
add    $0x8,%al
mov    %ah,%al
add    $0x8,%al
data16
loopne 805eabf <_IO_stdin_used+0x91b>
or     %dl,0x150804e2
loopne 805eac7 <_IO_stdin_used+0x923>
or     %cl,(%ecx,%eiz,8)
add    $0x8,%al
clc
loopne 805eacf <_IO_stdin_used+0x92b>
or     %cl,%dh
loopne 805ead3 <_IO_stdin_used+0x92f>
or     %bl,0x6a0804e0(%ecx)
loope  805eadb <_IO_stdin_used+0x937>
or     %bl,0xac0804e1
fild   (%eax,%ecx,1)
lods   %ds:(%esi),%al
fild   (%eax,%ecx,1)
add    %ebx,%edi
add    $0x8,%al
js     805eacc <_IO_stdin_used+0x928>
add    $0x8,%al
add    %ebx,%edi
add    $0x8,%al
add    %ebx,%edi
add    $0x8,%al
fild   (%eax,%ecx,1)
jp     805ead9 <_IO_stdin_used+0x935>
add    $0x8,%al
js     805eae0 <_IO_stdin_used+0x93c>
add    $0x8,%al
js     805eae4 <_IO_stdin_used+0x940>
add    $0x8,%al
js     805eae8 <_IO_stdin_used+0x944>
add    $0x8,%al
js     805eaec <_IO_stdin_used+0x948>
add    $0x8,%al
js     805eaf0 <_IO_stdin_used+0x94c>
add    $0x8,%al
js     805eaf4 <_IO_stdin_used+0x950>
add    $0x8,%al
js     805eaf8 <_IO_stdin_used+0x954>
add    $0x8,%al
js     805eafc <_IO_stdin_used+0x958>
add    $0x8,%al
js     805eb00 <_IO_stdin_used+0x95c>
add    $0x8,%al
js     805eb04 <_IO_stdin_used+0x960>
add    $0x8,%al
js     805eb08 <_IO_stdin_used+0x964>
add    $0x8,%al
js     805eb0c <_IO_stdin_used+0x968>
add    $0x8,%al
js     805eb10 <_IO_stdin_used+0x96c>
add    $0x8,%al
js     805eb14 <_IO_stdin_used+0x970>
add    $0x8,%al
js     805eb18 <_IO_stdin_used+0x974>
add    $0x8,%al
js     805eb1c <_IO_stdin_used+0x978>
add    $0x8,%al
js     805eb20 <_IO_stdin_used+0x97c>
add    $0x8,%al
js     805eb24 <_IO_stdin_used+0x980>
add    $0x8,%al
js     805eb28 <_IO_stdin_used+0x984>
add    $0x8,%al
js     805eb2c <_IO_stdin_used+0x988>
add    $0x8,%al
js     805eb30 <_IO_stdin_used+0x98c>
add    $0x8,%al
js     805eb34 <_IO_stdin_used+0x990>
add    $0x8,%al
js     805eb38 <_IO_stdin_used+0x994>
add    $0x8,%al
js     805eb3c <_IO_stdin_used+0x998>
add    $0x8,%al
js     805eb40 <_IO_stdin_used+0x99c>
add    $0x8,%al
js     805eb44 <_IO_stdin_used+0x9a0>
add    $0x8,%al
js     805eb48 <_IO_stdin_used+0x9a4>
add    $0x8,%al
js     805eb4c <_IO_stdin_used+0x9a8>
add    $0x8,%al
js     805eb50 <_IO_stdin_used+0x9ac>
add    $0x8,%al
js     805eb54 <_IO_stdin_used+0x9b0>
add    $0x8,%al
js     805eb58 <_IO_stdin_used+0x9b4>
add    $0x8,%al
js     805eb5c <_IO_stdin_used+0x9b8>
add    $0x8,%al
js     805eb60 <_IO_stdin_used+0x9bc>
add    $0x8,%al
js     805eb64 <_IO_stdin_used+0x9c0>
add    $0x8,%al
js     805eb68 <_IO_stdin_used+0x9c4>
add    $0x8,%al
js     805eb6c <_IO_stdin_used+0x9c8>
add    $0x8,%al
js     805eb70 <_IO_stdin_used+0x9cc>
add    $0x8,%al
js     805eb74 <_IO_stdin_used+0x9d0>
add    $0x8,%al
js     805eb78 <_IO_stdin_used+0x9d4>
add    $0x8,%al
js     805eb7c <_IO_stdin_used+0x9d8>
add    $0x8,%al
js     805eb80 <_IO_stdin_used+0x9dc>
add    $0x8,%al
js     805eb84 <_IO_stdin_used+0x9e0>
add    $0x8,%al
js     805eb88 <_IO_stdin_used+0x9e4>
add    $0x8,%al
js     805eb8c <_IO_stdin_used+0x9e8>
add    $0x8,%al
js     805eb90 <_IO_stdin_used+0x9ec>
add    $0x8,%al
js     805eb94 <_IO_stdin_used+0x9f0>
add    $0x8,%al
js     805eb98 <_IO_stdin_used+0x9f4>
add    $0x8,%al
js     805eb9c <_IO_stdin_used+0x9f8>
add    $0x8,%al
js     805eba0 <_IO_stdin_used+0x9fc>
add    $0x8,%al
js     805eba4 <_IO_stdin_used+0xa00>
add    $0x8,%al
js     805eba8 <_IO_stdin_used+0xa04>
add    $0x8,%al
js     805ebac <_IO_stdin_used+0xa08>
add    $0x8,%al
js     805ebb0 <_IO_stdin_used+0xa0c>
add    $0x8,%al
js     805ebb4 <_IO_stdin_used+0xa10>
add    $0x8,%al
js     805ebb8 <_IO_stdin_used+0xa14>
add    $0x8,%al
js     805ebbc <_IO_stdin_used+0xa18>
add    $0x8,%al
js     805ebc0 <_IO_stdin_used+0xa1c>
add    $0x8,%al
js     805ebc4 <_IO_stdin_used+0xa20>
add    $0x8,%al
js     805ebc8 <_IO_stdin_used+0xa24>
add    $0x8,%al
js     805ebcc <_IO_stdin_used+0xa28>
add    $0x8,%al
js     805ebd0 <_IO_stdin_used+0xa2c>
add    $0x8,%al
js     805ebd4 <_IO_stdin_used+0xa30>
add    $0x8,%al
js     805ebd8 <_IO_stdin_used+0xa34>
add    $0x8,%al
js     805ebdc <_IO_stdin_used+0xa38>
add    $0x8,%al
js     805ebe0 <_IO_stdin_used+0xa3c>
add    $0x8,%al
js     805ebe4 <_IO_stdin_used+0xa40>
add    $0x8,%al
js     805ebe8 <_IO_stdin_used+0xa44>
add    $0x8,%al
js     805ebec <_IO_stdin_used+0xa48>
add    $0x8,%al
js     805ebf0 <_IO_stdin_used+0xa4c>
add    $0x8,%al
js     805ebf4 <_IO_stdin_used+0xa50>
add    $0x8,%al
js     805ebf8 <_IO_stdin_used+0xa54>
add    $0x8,%al
js     805ebfc <_IO_stdin_used+0xa58>
add    $0x8,%al
js     805ec00 <_IO_stdin_used+0xa5c>
add    $0x8,%al
js     805ec04 <_IO_stdin_used+0xa60>
add    $0x8,%al
js     805ec08 <_IO_stdin_used+0xa64>
add    $0x8,%al
js     805ec0c <_IO_stdin_used+0xa68>
add    $0x8,%al
js     805ec10 <_IO_stdin_used+0xa6c>
add    $0x8,%al
js     805ec14 <_IO_stdin_used+0xa70>
add    $0x8,%al
js     805ec18 <_IO_stdin_used+0xa74>
add    $0x8,%al
js     805ec1c <_IO_stdin_used+0xa78>
add    $0x8,%al
jae    805ec1d <_IO_stdin_used+0xa79>
add    $0x8,%al
fdivl  -0x490ff7fa(%esi)
push   %es
or     %al,(%edi,%esi,4)
push   %es
or     %cl,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x6374616d,%eax
push   $0x69460020
jb     805ecce <_IO_stdin_used+0xb2a>
je     805ec8a <_IO_stdin_used+0xae6>
imul   $0x4500,0x20(%ebp,%eiz,2),%bp
dec    %edi
inc    %esi
sub    $0x6f6e6769,%eax
jb     805ecd2 <_IO_stdin_used+0xb2e>
and    %al,(%eax)
dec    %ebx
gs
gs
jo     805eca1 <_IO_stdin_used+0xafd>
jo     805ece5 <_IO_stdin_used+0xb41>
jae    805ec98 <_IO_stdin_used+0xaf4>
add    %dl,0x65(%edx)
addr16
gs
js     805ecac <_IO_stdin_used+0xb08>
outsl  %ds:(%esi),(%dx)
data16
data16
and    %al,(%eax)
es
das
add    %bl,0x0(%edi)
sub    %dl,0x29(%eax)
add    %ch,(%ebx)
add    %ah,(%ecx)
add    %dl,0x61(%eax)
je     805ed09 <_IO_stdin_used+0xb65>
gs
jb     805ed06 <_IO_stdin_used+0xb62>
and    %ch,0x6f(%esi)
je     805ecbd <_IO_stdin_used+0xb19>
outsw  %ds:(%esi),(%dx)
jne    805ed0f <_IO_stdin_used+0xb6b>
add    %ah,%fs:(%ecx)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bh,%gs:0x6f(%esp,%eiz,2)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x73(%ebp,%eiz,2)
jae    805ecd4 <_IO_stdin_used+0xb30>
and    $0x4e280073,%eax
sub    $0x20296874,%eax
add    %ah,(%esi)
and    %al,(%eax)
push   %esp
push   $0x20657265
imul   $0x2d206f6e,0x20(%ebx),%esi
sub    $0x6f207325,%eax
jo     805ed4a <_IO_stdin_used+0xba6>
imul   $0x65685400,0x6e(%edi),%ebp
jb     805ed44 <_IO_stdin_used+0xba0>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
and    %ah,0x706f2073
je     805ed56 <_IO_stdin_used+0xbb2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%esi)
je     805ed1c <_IO_stdin_used+0xb78>
popa
jbe    805ed60 <_IO_stdin_used+0xbbc>
imul   $0x4500656c,0x62(%ecx,%eiz,2),%ebp
js     805ed6a <_IO_stdin_used+0xbc6>
insl   (%dx),%es:(%edi)
imul   $0x4300203a,0x65(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ed37 <_IO_stdin_used+0xb93>
gs imul $0x646e6174,%fs:%gs:0x73(%eax,%eiz,1),%esi
64
popa
jb     805ed88 <_IO_stdin_used+0xbe4>
and    %ch,0x6e(%ecx)
jo     805ed9e <_IO_stdin_used+0xbfa>
je     805ed2b <_IO_stdin_used+0xb87>
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%esi)
js     805eda6 <_IO_stdin_used+0xc02>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%esi)
and    %ah,0x78656e73
je     805ed62 <_IO_stdin_used+0xbbe>
imul   $0x6f4e,0x0(%ebp,%eiz,2),%bp
and    %dh,0x72(%eax)
gs
jbe    805edb8 <_IO_stdin_used+0xc14>
outsl  %ds:(%esi),(%dx)
jne    805edc5 <_IO_stdin_used+0xc21>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%esi)
and    %ah,0x65727073
jbe    805edcb <_IO_stdin_used+0xc27>
outsl  %ds:(%esi),(%dx)
jne    805edd8 <_IO_stdin_used+0xc34>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%esi)
and    %ch,0x65(%esi)
js     805ede6 <_IO_stdin_used+0xc42>
and    %dh,0x67(%ecx,%eiz,2)
add    %cl,0x6f(%esi)
and    %dh,0x72(%eax)
gs
jbe    805ede8 <_IO_stdin_used+0xc44>
outsl  %ds:(%esi),(%dx)
jne    805edf5 <_IO_stdin_used+0xc51>
and    %dh,0x67(%ecx,%eiz,2)
add    %cl,0x6f(%esi)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
imul   $0x6f67,0x0(%ebp,%eiz,2),%bp
je     805ee07 <_IO_stdin_used+0xc63>
and    %ch,0x61(%ebp)
jb     805ee08 <_IO_stdin_used+0xc64>
cmp    (%eax),%ah
add    %bh,0x61(%ebp,%ebp,2)
jb     805ee10 <_IO_stdin_used+0xc6c>
cmp    (%eax),%ah
add    %al,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     805ee23 <_IO_stdin_used+0xc7f>
cmp    (%eax),%ah
add    %al,(%eax)
js     805eda3 <_IO_stdin_used+0xbff>
add    $0x8,%al
jo     805eda7 <_IO_stdin_used+0xc03>
add    $0x8,%al
jo     805edab <_IO_stdin_used+0xc07>
add    $0x8,%al
jo     805edaf <_IO_stdin_used+0xc0b>
add    $0x8,%al
js     805edb4 <_IO_stdin_used+0xc10>
add    $0x8,%al
or     %ebp,%ebp
add    $0x8,%al
jo     805edbb <_IO_stdin_used+0xc17>
add    $0x8,%al
jo     805edbf <_IO_stdin_used+0xc1b>
add    $0x8,%al
jo     805edc3 <_IO_stdin_used+0xc1f>
add    $0x8,%al
jo     805edc7 <_IO_stdin_used+0xc23>
add    $0x8,%al
js     805edcb <_IO_stdin_used+0xc27>
add    $0x8,%al
jo     805edcf <_IO_stdin_used+0xc2b>
add    $0x8,%al
jo     805edd3 <_IO_stdin_used+0xc2f>
add    $0x8,%al
jo     805edd7 <_IO_stdin_used+0xc33>
add    $0x8,%al
jo     805eddb <_IO_stdin_used+0xc37>
add    $0x8,%al
jo     805eddf <_IO_stdin_used+0xc3b>
add    $0x8,%al
jo     805ede3 <_IO_stdin_used+0xc3f>
add    $0x8,%al
jo     805ede7 <_IO_stdin_used+0xc43>
add    $0x8,%al
jo     805edeb <_IO_stdin_used+0xc47>
add    $0x8,%al
jo     805edef <_IO_stdin_used+0xc4b>
add    $0x8,%al
jo     805edf3 <_IO_stdin_used+0xc4f>
add    $0x8,%al
jo     805edf7 <_IO_stdin_used+0xc53>
add    $0x8,%al
sbb    %ch,%ch
add    $0x8,%al
jo     805edff <_IO_stdin_used+0xc5b>
add    $0x8,%al
jo     805ee03 <_IO_stdin_used+0xc5f>
add    $0x8,%al
jo     805ee07 <_IO_stdin_used+0xc63>
add    $0x8,%al
jo     805ee0b <_IO_stdin_used+0xc67>
add    $0x8,%al
jo     805ee0f <_IO_stdin_used+0xc6b>
add    $0x8,%al
jo     805ee13 <_IO_stdin_used+0xc6f>
add    $0x8,%al
jo     805ee17 <_IO_stdin_used+0xc73>
add    $0x8,%al
dec    %eax
out    %al,(%dx)
add    $0x8,%al
mov    %ch,%ch
add    $0x8,%al
mov    $0x700804ed,%eax
in     (%dx),%eax
add    $0x8,%al
jo     805ee2b <_IO_stdin_used+0xc87>
add    $0x8,%al
jo     805ee2f <_IO_stdin_used+0xc8b>
add    $0x8,%al
jo     805ee33 <_IO_stdin_used+0xc8f>
add    $0x8,%al
jo     805ee37 <_IO_stdin_used+0xc93>
add    $0x8,%al
jo     805ee3b <_IO_stdin_used+0xc97>
add    $0x8,%al
jo     805ee3f <_IO_stdin_used+0xc9b>
add    $0x8,%al
jo     805ee43 <_IO_stdin_used+0xc9f>
add    $0x8,%al
jo     805ee47 <_IO_stdin_used+0xca3>
add    $0x8,%al
lock in (%dx),%eax
add    $0x8,%al
jo     805ee4f <_IO_stdin_used+0xcab>
add    $0x8,%al
jo     805ee53 <_IO_stdin_used+0xcaf>
add    $0x8,%al
jo     805ee57 <_IO_stdin_used+0xcb3>
add    $0x8,%al
jo     805ee5b <_IO_stdin_used+0xcb7>
add    $0x8,%al
jo     805ee5f <_IO_stdin_used+0xcbb>
add    $0x8,%al
jo     805ee63 <_IO_stdin_used+0xcbf>
add    $0x8,%al
jo     805ee67 <_IO_stdin_used+0xcc3>
add    $0x8,%al
sub    %ch,%dh
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
testl  $0x804ff78,(%eax,%ecx,1)
mov    $0xf7,%cl
add    $0x8,%al
mov    $0xf6,%ah
add    $0x8,%al
ss
clc
add    $0x8,%al
push   %cs
testl  $0x804ffde,(%eax,%ecx,1)
add    %bh,%al
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cmc
add    $0x8,%al
daa
repz add $0x8,%al
testb  $0xab,%es:(%eax,%ecx,1)
incl   (%eax,%ecx,1)
lret   $0x4f5
or     %dh,(%ebx)
testl  $0x804f679,(%eax,%ecx,1)
(bad)
testb  $0x4b,(%eax,%ecx,1)
cmc
add    $0x8,%al
add    $0x1d0804f5,%eax
hlt
add    $0x8,%al
mov    0xde0804f4,%al
incl   (%eax,%ecx,1)
cmpsl  %es:(%edi),%ds:(%esi)
repz add $0x8,%al
push   %ebx
clc
add    $0x8,%al
inc    %ebp
repz add $0x8,%al
fdivr  %st,%st(4)
add    $0x8,%al
dec    %eax
cld
add    $0x8,%al
mov    $0x6d0804fb,%ebp
sti
add    $0x8,%al
xlat   %ds:(%ebx)
incb   (%eax,%ecx,1)
xchg   %eax,%esi
std
add    $0x8,%al
inc    %esp
cli
add    $0x8,%al
jmp    190df402 <_end+0x1106f382>
incb   (%eax,%ecx,1)
lock std
add    $0x8,%al
lock std
add    $0x8,%al
inc    %esp
incb   (%eax,%ecx,1)
mov    $0xcd0804fa,%ebp
cld
add    $0x8,%al
jge    805ef1e <_IO_stdin_used+0xd7a>
add    $0x8,%al
sbb    %bh,%bh
add    $0x8,%al
cmp    $0x4,%cl
or     %ch,-0xd(%edi)
add    $0x8,%al
gs
repz add $0x8,%al
repnz clc
add    $0x8,%al
xchg   %eax,%ebx
clc
add    $0x8,%al
lret
std
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
popf
cli
add    $0x8,%al
add    %ah,%bh
add    $0x8,%al
cmp    %ecx,%edi
add    $0x8,%al
push   %eax
std
add    $0x8,%al
add    %ebx,%edi
add    $0x8,%al
(bad)
add    $0x8,%al
mov    $0xf9,%bh
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
fdivrp %st,%st(7)
add    $0x8,%al
and    %dh,%dl
add    $0x8,%al
in     (%dx),%al
add    0x5029c08,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502ec08,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,%ah
add    %eax,0x502a808
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x5021a08,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x13f7fafe(%eax)
add    0x5034a08,%al
or     %dh,(%edi)
add    0x502a808,%eax
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ah,(%ebx,%eax,1)
add    $0x502a808,%eax
or     %ch,0x1d080502(%eax)
add    0x502a808,%eax
or     %ch,-0x57f7fafe(%eax)
add    0x5030808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x5031d08,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x5034a08,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %ch,-0x57f7fafe(%eax)
add    0x502a808,%al
or     %dh,(%edi)
add    0x52415708,%eax
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x66207369
imul   $0x20736177,0x20(%ebp,%eiz,2),%ebp
jbe    805f256 <_IO_stdin_used+0x10b2>
gs
ja     805f255 <_IO_stdin_used+0x10b1>
and    %dh,%fs:0x69(%esi)
popa
and    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %edi
push   %eax
inc    %ebp
dec    %esi
add    %bh,%bh
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f228 <_IO_stdin_used+0x1084>
jne    805f27d <_IO_stdin_used+0x10d9>
and    %ch,%gs:0x73(%ebp,%eiz,2)
jae    805f27c <_IO_stdin_used+0x10d8>
gs
jns    805f234 <_IO_stdin_used+0x1090>
imul   $0x2522,0x20(%ebp,%eiz,2),%bp
jae    805f23f <_IO_stdin_used+0x109b>
add    %ch,(%edi)
jne    805f294 <_IO_stdin_used+0x10f0>
jb     805f252 <_IO_stdin_used+0x10ae>
bound  %ebp,0x6e(%ecx)
das
jae,pn 805f2a3 <_IO_stdin_used+0x10ff>
jae    805f298 <_IO_stdin_used+0x10f4>
gs
jae    805f2a2 <_IO_stdin_used+0x10fe>
add    %ch,(%edi)
gs
je     805f297 <_IO_stdin_used+0x10f3>
das
jae    805f2b0 <_IO_stdin_used+0x110c>
jae    805f2a5 <_IO_stdin_used+0x1101>
gs
jae    805f2af <_IO_stdin_used+0x110b>
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %ebx
inc    %ebp
pop    %ecx
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
add    %ch,(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805f2c4 <_IO_stdin_used+0x1120>
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %ebx
inc    %ebp
pop    %ecx
add    %al,(%eax)
add    %dl,0x61(%edi)
jb     805f2ce <_IO_stdin_used+0x112a>
imul   $0x6f73203a,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    805f293 <_IO_stdin_used+0x10ef>
imul   $0x64656c62,%fs:0x61(%ebx),%esi
add    %dl,0x61(%edi)
jb     805f2ee <_IO_stdin_used+0x114a>
imul   $0x6f73203a,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x64(%ebp)
imul   $0x616d6d6f,0x63(%eax,%eiz,1),%esi
outsb  %ds:(%esi),(%dx)
fs
jae    805f2b8 <_IO_stdin_used+0x1114>
imul   $0x64656c62,%fs:0x61(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %edi
popa
jb     805f316 <_IO_stdin_used+0x1172>
imul   $0x6e65203a,0x67(%esi),%ebp
jbe    805f31a <_IO_stdin_used+0x1176>
jb     805f322 <_IO_stdin_used+0x117e>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805f2d9 <_IO_stdin_used+0x1135>
jbe    805f31c <_IO_stdin_used+0x1178>
jb     805f326 <_IO_stdin_used+0x1182>
popa
bound  %ebp,0x73(%ebp,%eiz,2)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ebp,%eiz,2)
jae    805f338 <_IO_stdin_used+0x1194>
gs
jns    805f2f0 <_IO_stdin_used+0x114c>
imul   $0x6e75,0x20(%ebp,%eiz,2),%bp
popa
jbe    805f33b <_IO_stdin_used+0x1197>
imul   $0x656c,0x62(%ecx,%eiz,2),%ebp
add    %al,(%eax)
push   %edi
popa
jb     805f356 <_IO_stdin_used+0x11b2>
imul   $0x2522203a,0x67(%esi),%ebp
jae    805f313 <_IO_stdin_used+0x116f>
and    %ah,0x78(%ebp)
imul   $0x4f203b73,0x74(%ebx),%esi
jbe    805f362 <_IO_stdin_used+0x11be>
jb     805f376 <_IO_stdin_used+0x11d2>
jb     805f36a <_IO_stdin_used+0x11c6>
je     805f368 <_IO_stdin_used+0x11c4>
sub    $0x20,%al
inc    %ecx
jo     805f378 <_IO_stdin_used+0x11d4>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x72(%edi)
and    %al,0x6e(%edi,%ebp,2)
daa
je     805f335 <_IO_stdin_used+0x1191>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 aas
and    %al,(%eax)
add    %cl,0x76(%edi)
gs
jb     805f398 <_IO_stdin_used+0x11f4>
jb     805f38c <_IO_stdin_used+0x11e8>
je     805f38a <_IO_stdin_used+0x11e6>
sub    $0x20,%al
inc    %ecx
jo     805f39a <_IO_stdin_used+0x11f6>
outsb  %gs:(%esi),(%dx)
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     805f352 <_IO_stdin_used+0x11ae>
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     805f358 <_IO_stdin_used+0x11b4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 aas
and    %ch,(%eax)
push   %esp
jns    805f3b1 <_IO_stdin_used+0x120d>
and    %ah,%gs:(%edx)
dec    %edi
and    (%eax,%eiz,1),%ch
and    0x22(%ecx),%al
sub    $0x20,%al
and    0x20(%edx,%eiz,1),%al
outsl  %ds:(%esi),(%dx)
jb     805f374 <_IO_stdin_used+0x11d0>
and    0x22(%ecx),%dh
sub    %esp,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
and    $0x6d202273,%eax
popa
jns    805f385 <_IO_stdin_used+0x11e1>
bound  %esp,0x20(%ebp)
popa
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     805f3e9 <_IO_stdin_used+0x1245>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs and %ah,%cs:%gs:(%eax)
push   %ebx
gs and %ch,%gs:0x74(%ecx)
and    %ah,0x6e(%ecx)
jns    805f3fa <_IO_stdin_used+0x1256>
popa
jns    805f3c5 <_IO_stdin_used+0x1221>
and    %al,(%eax)
dec    %ebp
imul   $0x20676e69,0x73(%ebx),%esi
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
and    %ch,%gs:(%eax)
and    0x73(%ebp,%eiz,2),%ch
jae    805f3c0 <_IO_stdin_used+0x121c>
sub    $0x6c65682d,%eax
jo     805f3c9 <_IO_stdin_used+0x1225>
and    %ah,0x6f(%esi)
jb     805f3cc <_IO_stdin_used+0x1228>
push   $0x29706c65
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f3d9 <_IO_stdin_used+0x1235>
ja     805f42d <_IO_stdin_used+0x1289>
imul   $0x22206f74,0x20(%ebp,%eiz,2),%esi
and    $0x40002273,%eax
das
pop    %esp
insb   (%dx),%es:(%edi)
gs
jae    805f441 <_IO_stdin_used+0x129d>
das
pop    %esp
gs
insl   (%dx),%es:(%edi)
jo     805f448 <_IO_stdin_used+0x12a4>
jns    805f405 <_IO_stdin_used+0x1261>
pop    %esp
imul   $0x405c,0x2f(%ebp,%eiz,2),%bp
add    %al,(%eax)
and    %bl,(%edx)
add    $0x519c408,%eax
or     %al,%ah
sbb    %eax,0x519a808
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %ah,%al
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %ah,(%eax)
sbb    0x519c408,%al
or     %al,%ah
sbb    %eax,0x519a808
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %al,%ah
sbb    %eax,0x519c408
or     %ah,%al
sbb    %eax,0x519c408
or     %bh,0x3b080519(%eax)
and    %ch,(%edx)
aas
or     %ecx,(%edx)
daa
and    (%eax),%ch
sub    %edi,(%esi,%edi,1)
pop    %ebx
pop    %ebp
jl     805f4da <_IO_stdin_used+0x1336>
pop    %esi
pusha
and    0x25(%esp),%ebx
cmp    $0x454c007e,%eax
push   %ebx
push   %ebx
dec    %ebp
inc    %ebp
push   %esp
inc    %ecx
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
push   %ebx
add    %bl,0x4c(%eax,%eax,1)
inc    %ebp
push   %ebx
push   %ebx
dec    %ebp
inc    %ebp
push   %esp
inc    %ecx
inc    %ebp
push   %ebx
inc    %ebx
inc    %ecx
push   %eax
inc    %ebp
add    %ah,0x25732563
arpl   %ax,(%eax)
push   %ebx
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
add    %ch,0x73250063
and    %ah,0x73252073
add    %ah,0x25732573
jae    805f4fc <_IO_stdin_used+0x1358>
insb   (%dx),%es:(%edi)
gs
jae    805f573 <_IO_stdin_used+0x13cf>
arpl   %bp,%gs:0x6f(%eax)
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
inc    %ebp
inc    %ebx
dec    %eax
dec    %edi
add    %ah,0x702d2073
xor    %bh,0x25(%eax)
js     805f538 <_IO_stdin_used+0x1394>
sub    $0x25783064,%eax
js     805f53f <_IO_stdin_used+0x139b>
sub    $0x20732565,%eax
add    %ch,0x7325202d
add    %ch,0x2578306e
js     805f552 <_IO_stdin_used+0x13ae>
add    %ah,0x4c002a73
inc    %ebp
push   %ebx
push   %ebx
dec    %edi
push   %eax
inc    %ebp
dec    %esi
add    %cl,0x6e(%ecx)
jbe    805f5a5 <_IO_stdin_used+0x1401>
insb   (%dx),%es:(%edi)
imul   $0x4f535345,0x4c(%eax,%eiz,1),%esp
push   %eax
inc    %ebp
dec    %esi
and    %dh,0x61(%esi)
jb     805f5be <_IO_stdin_used+0x141a>
popa
bound  %ebp,0x0(%ebp,%eiz,2)
dec    %esp
inc    %ebp
push   %ebx
push   %ebx
inc    %ebx
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
add    %cl,0x6e(%ecx)
jbe    805f5c9 <_IO_stdin_used+0x1425>
insb   (%dx),%es:(%edi)
imul   $0x43535345,0x4c(%eax,%eiz,1),%esp
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
and    %dh,0x61(%esi)
jb     805f5e3 <_IO_stdin_used+0x143f>
popa
bound  %ebp,0x0(%ebp,%eiz,2)
cs cs jae,pn 805f5ef <_IO_stdin_used+0x144b>
imul   $0x2e676e69,0x70(%eax),%esi
cs or  %cs:(%eax),%al
add    %dl,0x2d(%ebx)
add    %al,(%eax)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
or     %dl,0x55(%ebx)
or     %dl,0x4d(%ebp)
or     %cl,0x4d(%ebp)
or     %cl,0x41(%ebp)
or     %al,0x52(%ecx)
or     %dl,0x59(%edx)
or     %bl,0x20(%ecx)
dec    %edi
or     %cl,0x46(%edi)
or     %al,0x20(%esi)
dec    %esp
or     %cl,0x8(%ebp,%eax,2)
inc    %ebp
push   %ebx
or     %dl,0x53(%ebx)
or     %dl,0x20(%ebx)
inc    %ebx
or     %al,0x4f(%ebx)
or     %cl,0x4d(%edi)
or     %cl,0x4d(%ebp)
or     %cl,0x41(%ebp)
or     %al,0x4e(%ecx)
or     %cl,0x44(%esi)
or     %al,0x8(%ebx,%edx,2)
push   %ebx
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    805f647 <_IO_stdin_used+0x14a3>
insl   (%dx),%es:(%edi)
popa
jb     805f696 <_IO_stdin_used+0x14f2>
gs and %dh,%fs:%gs:0x69(%edi)
je     805f69a <_IO_stdin_used+0x14f6>
and    %ch,(%edx)
and    %ch,0x61(%ebp)
jns    805f659 <_IO_stdin_used+0x14b5>
bound  %esp,0x20(%ebp)
jo     805f6b0 <_IO_stdin_used+0x150c>
arpl   %sp,%gs:0x64(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
jne    805f6ba <_IO_stdin_used+0x1516>
bound  %esp,0x72(%ebp)
sub    $0x20,%al
pop    %edi
or     %cl,0x2e(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6f(%esi)
je     805f6c6 <_IO_stdin_used+0x1522>
jae    805f683 <_IO_stdin_used+0x14df>
imul   $0x65726170,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     805f6d5 <_IO_stdin_used+0x1531>
gs
jae    805f6d5 <_IO_stdin_used+0x1531>
jae    805f692 <_IO_stdin_used+0x14ee>
imul   $0x74616369,0x64(%esi),%ebp
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x65(%edx)
push   $0x6f697661
jb     805f6a8 <_IO_stdin_used+0x1504>
imul   $0x204e085f,0x20(%esi),%esp
imul   $0x65766967,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x20(%ecx)
imul   $0x20,0x79(%ebp),%esp
jo     805f719 <_IO_stdin_used+0x1575>
arpl   %sp,%gs:0x64(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x20(%ecx)
arpl   %sp,0x72(%ecx)
gs
je     805f6d9 <_IO_stdin_used+0x1535>
imul   $0x74616369,0x64(%esi),%ebp
gs
jae    805f6e3 <_IO_stdin_used+0x153f>
je     805f72d <_IO_stdin_used+0x1589>
and    %al,%gs:0x74(%ebx)
jb     805f737 <_IO_stdin_used+0x1593>
and    %ch,0x65(%ebx)
jns    805f70b <_IO_stdin_used+0x1567>
and    %dh,0x75(%eax,%ebp,2)
jae    805f6f6 <_IO_stdin_used+0x1552>
pop    %esi
dec    %ebx
and    %ch,0x73(%ecx)
and    %ah,0x74(%ebx)
jb     805f74c <_IO_stdin_used+0x15a8>
sub    $0xa0a2e4b,%eax
and    %ah,(%eax)
push   $0x20482020
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
je     805f76e <_IO_stdin_used+0x15ca>
imul   $0x706c6568,0x20(%ebx),%esi
or     %cs:(%eax),%ah
and    %dh,0x20(%ecx)
and    %bh,(%edx)
jno    805f737 <_IO_stdin_used+0x1593>
and    %dl,0x20(%ecx)
and    %bh,(%edx)
push   %ecx
and    %ah,(%eax)
pop    %edx
pop    %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x78(%ebp)
imul   $0x2d2d2d20,0xa(%esi,%ebp,1),%esi
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x200a0a2d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
or     %cl,0x4f(%ebp)
or     %cl,0x56(%edi)
or     %dl,0x49(%esi)
or     %cl,0x4e(%ecx)
or     %cl,0x47(%esi)
or     %al,0xa(%edi)
or     (%eax),%ah
and    %ah,0x20(%ebp)
and    %bl,0x45(%esi)
and    %ah,(%eax)
push   $0x20
and    %bl,0x4e(%esi)
and    %ah,(%eax)
inc    %ebx
push   %edx
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%esi)
jb     805f83b <_IO_stdin_used+0x1697>
popa
jb     805f82b <_IO_stdin_used+0x1687>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:(%eax)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805f7f8 <_IO_stdin_used+0x1654>
pop    %edi
or     %cl,0x20(%esi)
insb   (%dx),%es:(%edi)
imul   $0xa2e2973,0x65(%esi),%ebp
and    %ah,(%eax)
jns    805f808 <_IO_stdin_used+0x1664>
and    %bl,0x59(%esi)
and    %ah,(%eax)
imul   $0x20,(%eax),%esp
pop    %esi
dec    %ebx
and    %ah,(%eax)
pop    %esi
push   %eax
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     805f867 <_IO_stdin_used+0x16c3>
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:(%eax)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805f833 <_IO_stdin_used+0x168f>
pop    %edi
or     %cl,0x20(%esi)
insb   (%dx),%es:(%edi)
imul   $0xa2e2973,0x65(%esi),%ebp
and    %ah,(%eax)
data16
and    %ah,(%eax)
pop    %esi
inc    %esi
and    %ah,(%eax)
pop    %esi
push   %esi
and    %ah,(%eax)
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%esi)
jb     805f8b1 <_IO_stdin_used+0x170d>
popa
jb     805f8a1 <_IO_stdin_used+0x16fd>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f86a <_IO_stdin_used+0x16c6>
sub    %ch,0x72(%edi)
and    %bl,0x8(%edi)
dec    %esi
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    805f881 <_IO_stdin_used+0x16dd>
or     %cs:(%eax),%ah
and    %ah,0x20(%edx)
and    %bl,0x42(%esi)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x20202076,%eax
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %edx
popa
arpl   %bp,0x77(%ebx)
popa
jb     805f8dd <_IO_stdin_used+0x1739>
and    %ch,0x6e(%edi)
and    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f8a5 <_IO_stdin_used+0x1701>
sub    %ch,0x72(%edi)
and    %bl,0x8(%edi)
dec    %esi
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    805f8bc <_IO_stdin_used+0x1718>
or     %cs:(%eax),%ah
and    %bh,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%esi)
jb     805f927 <_IO_stdin_used+0x1783>
popa
jb     805f917 <_IO_stdin_used+0x1773>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f8e0 <_IO_stdin_used+0x173c>
sub    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%ebx)
je     805f8e9 <_IO_stdin_used+0x1745>
ja     805f934 <_IO_stdin_used+0x1790>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f8f0 <_IO_stdin_used+0x174c>
je     805f941 <_IO_stdin_used+0x179d>
and    %bl,0x8(%edi)
dec    %esi
sub    %ebp,(%esi)
or     (%eax),%ah
and    %dh,0x20(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     805f95c <_IO_stdin_used+0x17b8>
and    %ch,0x6e(%edi)
and    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f924 <_IO_stdin_used+0x1780>
sub    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%ebx)
je     805f92d <_IO_stdin_used+0x1789>
ja     805f978 <_IO_stdin_used+0x17d4>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f934 <_IO_stdin_used+0x1790>
je     805f985 <_IO_stdin_used+0x17e1>
and    %bl,0x8(%edi)
dec    %esi
sub    %ebp,(%esi)
or     (%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x43415053,%eax
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     805f9af <_IO_stdin_used+0x180b>
popa
jb     805f99f <_IO_stdin_used+0x17fb>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f974 <_IO_stdin_used+0x17d0>
and    %ah,0x75(%edx)
je     805f96d <_IO_stdin_used+0x17c9>
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     805f973 <_IO_stdin_used+0x17cf>
jae    805f9c9 <_IO_stdin_used+0x1825>
outsl  %ds:(%esi),(%dx)
jo     805f978 <_IO_stdin_used+0x17d4>
popa
je     805f97b <_IO_stdin_used+0x17d7>
outsb  %gs:(%esi),(%dx)
fs
sub    $0x662d666f,%eax
imul   $0x6420200a,0x2e(%ebp,%eiz,2),%ebp
and    %ah,(%eax)
pop    %esi
inc    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     805f9fa <_IO_stdin_used+0x1856>
popa
jb     805f9ea <_IO_stdin_used+0x1846>
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x61(%eax)
insb   (%dx),%es:(%edi)
sub    $0x6977,%ax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f9b8 <_IO_stdin_used+0x1814>
sub    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%ebx)
je     805f9c1 <_IO_stdin_used+0x181d>
push   $0x2d666c61
ja     805fa11 <_IO_stdin_used+0x186d>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805f9cd <_IO_stdin_used+0x1829>
je     805fa1e <_IO_stdin_used+0x187a>
and    %bl,0x8(%edi)
dec    %esi
sub    %ebp,(%esi)
or     (%eax),%ah
and    %dh,0x20(%ebp)
and    %bl,0x55(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %edx
popa
arpl   %bp,0x77(%ebx)
popa
jb     805fa39 <_IO_stdin_used+0x1895>
and    %ch,0x6e(%edi)
and    %ch,%gs:0x61(%eax)
insb   (%dx),%es:(%edi)
sub    $0x6977,%ax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805fa06 <_IO_stdin_used+0x1862>
sub    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%ebx)
je     805fa0f <_IO_stdin_used+0x186b>
push   $0x2d666c61
ja     805fa5f <_IO_stdin_used+0x18bb>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805fa1b <_IO_stdin_used+0x1877>
je     805fa6c <_IO_stdin_used+0x18c8>
and    %bl,0x8(%edi)
dec    %esi
sub    %ebp,(%esi)
or     (%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x52202029,%eax
imul   $0x72724174,0x68(%edi),%esp
outsl  %ds:(%esi),(%dx)
ja     805fa38 <_IO_stdin_used+0x1894>
sub    (%eax),%ah
and    %cl,0x66(%ebp,%eiz,2)
je     805fa40 <_IO_stdin_used+0x189c>
and    %ch,0x6e(%edi)
and    %ch,%gs:0x61(%eax)
insb   (%dx),%es:(%edi)
data16
and    %dh,0x63(%ebx)
jb     805fa93 <_IO_stdin_used+0x18ef>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     805fa9e <_IO_stdin_used+0x18fa>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805fa5b <_IO_stdin_used+0x18b7>
pop    %edi
or     %cl,0x20(%esi)
jo     805fab0 <_IO_stdin_used+0x190c>
jae    805faac <_IO_stdin_used+0x1908>
je     805faae <_IO_stdin_used+0x190a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805fa72 <_IO_stdin_used+0x18ce>
or     %cs:(%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x4c202028,%eax
gs
data16
je     805fa9a <_IO_stdin_used+0x18f6>
jb     805facd <_IO_stdin_used+0x1929>
outsl  %ds:(%esi),(%dx)
ja     805fa7e <_IO_stdin_used+0x18da>
and    %ch,(%edx)
and    %ah,(%eax)
push   %edx
imul   $0x6e6f2074,0x68(%edi),%esp
and    %ch,%gs:0x61(%eax)
insb   (%dx),%es:(%edi)
data16
and    %dh,0x63(%ebx)
jb     805fada <_IO_stdin_used+0x1936>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     805fae5 <_IO_stdin_used+0x1941>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805faa2 <_IO_stdin_used+0x18fe>
pop    %edi
or     %cl,0x20(%esi)
jo     805faf7 <_IO_stdin_used+0x1953>
jae    805faf3 <_IO_stdin_used+0x194f>
je     805faf5 <_IO_stdin_used+0x1951>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805fab9 <_IO_stdin_used+0x1915>
or     %cs:(%eax),%ah
and    %al,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%esi)
jb     805fb24 <_IO_stdin_used+0x1980>
popa
jb     805fb14 <_IO_stdin_used+0x1970>
and    %ah,0x6f(%esi)
jb     805fb1a <_IO_stdin_used+0x1976>
jbe    805fb1c <_IO_stdin_used+0x1978>
jb     805faf4 <_IO_stdin_used+0x1950>
and    %ch,0x6b(%ecx,%ebp,2)
and    %ah,%gs:(%edx)
je     805fb23 <_IO_stdin_used+0x197f>
imul   $0xa2e2266,0x2d(%eax,%eiz,1),%ebp
and    %ah,(%eax)
jb     805faee <_IO_stdin_used+0x194a>
and    %bl,0x52(%esi)
and    %ah,(%eax)
pop    %esi
dec    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %edx
gs
jo     805fb46 <_IO_stdin_used+0x19a2>
imul   $0x72637320,0x74(%esi),%ebp
gs outsb %gs:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %dl,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%edx)
jo     805fb6d <_IO_stdin_used+0x19c9>
imul   $0x72637320,0x74(%esi),%ebp
gs outsb %gs:(%esi),(%dx)
sub    $0x20,%al
imul   $0x69647261,%fs:0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp,%si)
data16
data16
gs
jb     805fb8f <_IO_stdin_used+0x19eb>
and    %ch,%fs:0x6e(%ecx)
jo     805fba5 <_IO_stdin_used+0x1a01>
je     805fb60 <_IO_stdin_used+0x19bc>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d2d2d2d
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2020200a,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x66(%ebp,%eiz,2)
popa
jne    805fbe9 <_IO_stdin_used+0x1a45>
je     805fb9f <_IO_stdin_used+0x19fb>
and    0x69(%edi),%dh
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805fba9 <_IO_stdin_used+0x1a05>
and    %ch,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x63(%ebx)
jb     805fbf8 <_IO_stdin_used+0x1a54>
outsb  %gs:(%esi),(%dx)
and    %ch,0x65(%eax)
imul   $0x200a2e74,0x68(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x66(%ebp,%eiz,2)
popa
jne    805fc18 <_IO_stdin_used+0x1a74>
je     805fbce <_IO_stdin_used+0x1a2a>
and    0x61(%eax),%ch
insb   (%dx),%es:(%edi)
sub    $0x6977,%ax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805fbdd <_IO_stdin_used+0x1a39>
and    %ch,0x73(%ecx)
and    %ch,0x61(%eax)
insb   (%dx),%es:(%edi)
data16
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x63(%ebx)
jb     805fc34 <_IO_stdin_used+0x1a90>
outsb  %gs:(%esi),(%dx)
and    %ch,0x65(%eax)
imul   $0x200a2e74,0x68(%edi),%esp
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
or     %dl,0x45(%ebx)
or     %al,0x41(%ebp)
or     %al,0x52(%ecx)
or     %dl,0x43(%edx)
or     %al,0x48(%ebx)
or     %cl,0x49(%eax)
or     %cl,0x4e(%ecx)
or     %cl,0x47(%esi)
or     %al,0xa(%edi)
or     (%eax),%ah
and    %ch,(%edi)
pop    %edi
or     %dh,0x5f(%eax)
or     %ah,0x5f(%ecx)
or     %dh,0x8(%edi,%ebx,2)
je     805fcce <_IO_stdin_used+0x1b2a>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %ch,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
push   %ebx
gs
popa
jb     805fcec <_IO_stdin_used+0x1b48>
push   $0x726f6620
ja     805fcf1 <_IO_stdin_used+0x1b4d>
jb     805fcf6 <_IO_stdin_used+0x1b52>
and    %ah,0x6f(%esi)
jb     805fcb7 <_IO_stdin_used+0x1b13>
sub    %bl,0x8(%edi)
dec    %esi
sub    $0x20296874,%eax
insl   (%dx),%es:(%edi)
popa
je     805fd07 <_IO_stdin_used+0x1b63>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a2e,0x65(%esi),%ebp
aas
pop    %edi
or     %dh,0x5f(%eax)
or     %ah,0x5f(%ecx)
or     %dh,0x8(%edi,%ebx,2)
je     805fd1e <_IO_stdin_used+0x1b7a>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %ch,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
push   %ebx
gs
popa
jb     805fd3c <_IO_stdin_used+0x1b98>
push   $0x63616220
imul   $0x72,0x61(%edi),%esi
and    %ah,%fs:0x6f(%esi)
jb     805fd08 <_IO_stdin_used+0x1b64>
sub    %bl,0x8(%edi)
dec    %esi
sub    $0x20296874,%eax
insl   (%dx),%es:(%edi)
popa
je     805fd58 <_IO_stdin_used+0x1bb4>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a2e,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
push   %edx
gs
jo     805fd80 <_IO_stdin_used+0x1bdc>
popa
je     805fd3e <_IO_stdin_used+0x1b9a>
jo     805fd92 <_IO_stdin_used+0x1bee>
gs
jbe    805fd8c <_IO_stdin_used+0x1be8>
outsl  %ds:(%esi),(%dx)
jne    805fd99 <_IO_stdin_used+0x1bf5>
and    %dh,0x65(%ebx)
popa
jb     805fd8f <_IO_stdin_used+0x1beb>
push   $0x6f662820
jb     805fd53 <_IO_stdin_used+0x1baf>
pop    %edi
or     %cl,0x2d(%esi)
je     805fda1 <_IO_stdin_used+0x1bfd>
and    %ch,0x63(%edi)
arpl   %si,0x72(%ebp)
jb     805fda6 <_IO_stdin_used+0x1c02>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x29(%ebp)
or     %cs:(%eax),%ah
and    %cl,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %dl,0x65(%edx)
jo     805fdc7 <_IO_stdin_used+0x1c23>
popa
je     805fd85 <_IO_stdin_used+0x1be1>
jo     805fdd9 <_IO_stdin_used+0x1c35>
gs
jbe    805fdd3 <_IO_stdin_used+0x1c2f>
outsl  %ds:(%esi),(%dx)
jne    805fde0 <_IO_stdin_used+0x1c3c>
and    %dh,0x65(%ebx)
popa
jb     805fdd6 <_IO_stdin_used+0x1c32>
push   $0x206e6920
jb     805fddf <_IO_stdin_used+0x1c3b>
jbe    805fde1 <_IO_stdin_used+0x1c3d>
jb     805fdf1 <_IO_stdin_used+0x1c4d>
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x2020206e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %dl,0x65(%edx)
jo     805fe0b <_IO_stdin_used+0x1c67>
popa
je     805fdc9 <_IO_stdin_used+0x1c25>
jo     805fe1d <_IO_stdin_used+0x1c79>
gs
jbe    805fe17 <_IO_stdin_used+0x1c73>
outsl  %ds:(%esi),(%dx)
jne    805fe24 <_IO_stdin_used+0x1c80>
and    %dh,0x65(%ebx)
popa
jb     805fe1a <_IO_stdin_used+0x1c76>
push   $0x7073202c
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c696620,0x67(%esi),%ebp
gs
jae    805fdf7 <_IO_stdin_used+0x1c53>
or     (%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x2020204e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %dl,0x65(%edx)
jo     805fe4a <_IO_stdin_used+0x1ca6>
popa
je     805fe08 <_IO_stdin_used+0x1c64>
jo     805fe5c <_IO_stdin_used+0x1cb8>
gs
jbe    805fe56 <_IO_stdin_used+0x1cb2>
outsl  %ds:(%esi),(%dx)
jne    805fe63 <_IO_stdin_used+0x1cbf>
and    %dh,0x65(%ebx)
popa
jb     805fe59 <_IO_stdin_used+0x1cb5>
push   $0x6572202c
jbe    805fe62 <_IO_stdin_used+0x1cbe>
jb     805fe72 <_IO_stdin_used+0x1cce>
and    %ah,%gs:0x72(%ecx,%ebp,2)
and    %ah,%cs:(%esi)
and    %dh,0x70(%ebx)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c696620,0x67(%esi),%ebp
gs
jae    805fe45 <_IO_stdin_used+0x1ca1>
or     (%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20202075,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6e(%ebp)
outsl  %fs:(%esi),(%dx)
and    %ch,(%eax)
je     805fea6 <_IO_stdin_used+0x1d02>
addr32 insb (%dx),%es:(%di)
sub    %esp,%gs:(%eax)
jae    805fea4 <_IO_stdin_used+0x1d00>
popa
jb     805fea5 <_IO_stdin_used+0x1d01>
push   $0x67696820
push   $0x6867696c
je     805feb7 <_IO_stdin_used+0x1d13>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%ah
and    %ah,(%esi)
pop    %edi
or     %dh,0x5f(%eax)
or     %ah,0x5f(%ecx)
or     %dh,0x8(%edi,%ebx,2)
je     805fec1 <_IO_stdin_used+0x1d1d>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %ch,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    805fea4 <_IO_stdin_used+0x1d00>
insl   (%dx),%es:(%edi)
popa
je     805feeb <_IO_stdin_used+0x1d47>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a73,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2020200a,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x20(%ecx)
jae    805ff40 <_IO_stdin_used+0x1d9c>
popa
jb     805ff41 <_IO_stdin_used+0x1d9d>
push   $0x74617020
je     805ff4a <_IO_stdin_used+0x1da6>
jb     805ff55 <_IO_stdin_used+0x1db1>
and    %ch,0x61(%ebp)
jns    805ff0c <_IO_stdin_used+0x1d68>
bound  %esp,0x20(%ebp)
jo     805ff63 <_IO_stdin_used+0x1dbf>
arpl   %sp,%gs:0x64(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x72(%edi)
and    %ch,0x6f(%ebp)
jb     805ff6b <_IO_stdin_used+0x1dc7>
and    %ch,0x66(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
pop    %esi
dec    %esi
and    %ch,0x72(%edi)
and    %ah,(%ecx)
and    %ah,(%eax)
push   %ebx
gs
popa
jb     805ff84 <_IO_stdin_used+0x1de0>
push   $0x726f6620
and    %cl,0x4f(%esi)
dec    %esi
sub    $0x6374616d,%eax
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x200a2e73,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bl,0x45(%esi)
and    %ch,0x72(%edi)
and    %ch,(%edx)
and    %ah,(%eax)
push   %ebx
gs
popa
jb     805ffb4 <_IO_stdin_used+0x1e10>
push   $0x6c756d20
je     805ffc1 <_IO_stdin_used+0x1e1d>
jo     805ffc6 <_IO_stdin_used+0x1e22>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805ff82 <_IO_stdin_used+0x1dde>
sub    %dh,0x61(%eax)
jae    805ffda <_IO_stdin_used+0x1e36>
and    %dh,0x72(%eax,%ebp,2)
jne    805ff8d <_IO_stdin_used+0x1de9>
inc    %ebp
dec    %esi
inc    %esp
and    %cl,0x46(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
sub    %ebp,(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bl,0x46(%esi)
and    %ch,0x72(%edi)
and    %al,0x20(%eax)
and    %dl,0x74(%ebx)
popa
jb     8060005 <_IO_stdin_used+0x1e61>
and    %dh,0x65(%ebx)
popa
jb     805fffa <_IO_stdin_used+0x1e56>
push   $0x20746120
inc    %esi
dec    %ecx
push   %edx
push   %ebx
push   %esp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
outsw  %ds:(%esi),(%dx)
jb     805ffcc <_IO_stdin_used+0x1e28>
das
sub    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805ffd2 <_IO_stdin_used+0x1e2e>
insb   (%dx),%es:(%edi)
popa
jae    806002a <_IO_stdin_used+0x1e86>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
outsw  %ds:(%esi),(%dx)
jb     805ffe1 <_IO_stdin_used+0x1e3d>
aas
sub    %ebp,(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bl,0x4b(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x69(%eax)
addr16 push $0x6867696c
je     8060000 <_IO_stdin_used+0x1e5c>
insl   (%dx),%es:(%edi)
popa
je     8060047 <_IO_stdin_used+0x1ea3>
push   $0x202c7365
bound  %esi,0x74(%ebp)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     8060013 <_IO_stdin_used+0x1e6f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    806005c <_IO_stdin_used+0x1eb8>
and    %ch,(%eax)
dec    %ebx
inc    %ebp
inc    %ebp
push   %eax
and    %dh,0x6f(%eax)
jae    806006b <_IO_stdin_used+0x1ec7>
je     806006d <_IO_stdin_used+0x1ec9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ebp,(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bl,0x52(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     8060040 <_IO_stdin_used+0x1e9c>
jne    8060095 <_IO_stdin_used+0x1ef1>
and    %dl,%gs:0x45(%edx)
inc    %edi
push   %ebp
dec    %esp
inc    %ecx
push   %edx
and    %al,0x58(%ebp)
push   %eax
push   %edx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     %cs:(%eax),%ah
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x8(%edx)
dec    %edx
push   %ebp
or     %dl,0x4d(%ebp)
or     %cl,0x50(%ebp)
or     %dl,0x49(%eax)
or     %cl,0x4e(%ecx)
or     %cl,0x47(%esi)
or     %al,0xa(%edi)
or     (%eax),%ah
and    %ah,0x20(%edi)
and    %bh,(%eax,%eiz,1)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x2020203c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2074,0x73(%edx),%si
insb   (%dx),%es:(%edi)
imul   $0x206e6920,0x65(%esi),%ebp
imul   $0x6f28,0x20(%ebp,%eiz,2),%bp
jb     806010d <_IO_stdin_used+0x1f69>
insb   (%dx),%es:(%edi)
imul   $0x4e085f20,0x65(%esi),%ebp
sub    %ebp,(%esi)
or     (%eax),%ah
and    %al,0x20(%edi)
and    %bh,(%esi)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x2020203e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
popa
jae    806018d <_IO_stdin_used+0x1fe9>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x6e(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
outsl  %ds:(%esi),(%dx)
jb     806014b <_IO_stdin_used+0x1fa7>
insb   (%dx),%es:(%edi)
imul   $0x4e085f20,0x65(%esi),%ebp
sub    %ebp,(%esi)
or     (%eax),%ah
and    %dh,0x20(%eax)
and    %ah,0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x67(%ebp)
imul   $0x20676e69,0x6e(%esi),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
outsl  %ds:(%esi),(%dx)
jb     8060189 <_IO_stdin_used+0x1fe5>
pop    %edi
or     %cl,0x20(%esi)
jo     80601d4 <_IO_stdin_used+0x2030>
jb     80601d4 <_IO_stdin_used+0x2030>
outsb  %gs:(%esi),(%dx)
je     8060195 <_IO_stdin_used+0x1ff1>
imul   $0x6966206f,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
sub    %ebp,%gs:(%esi)
or     (%eax),%ah
and    %dh,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     8060208 <_IO_stdin_used+0x2064>
and    %ch,%gs:(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     8060211 <_IO_stdin_used+0x206d>
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
gs
js     8060223 <_IO_stdin_used+0x207f>
and    %dh,0x67(%ecx,%eiz,2)
or     %cs:(%eax),%ah
and    %dl,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806023c <_IO_stdin_used+0x2098>
and    %ch,%gs:(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     8060245 <_IO_stdin_used+0x20a1>
sub    %esp,(%eax)
jo     8060253 <_IO_stdin_used+0x20af>
gs
jbe    806024d <_IO_stdin_used+0x20a9>
outsl  %ds:(%esi),(%dx)
jne    806025a <_IO_stdin_used+0x20b6>
and    %dh,0x67(%ecx,%eiz,2)
or     %cs:(%eax),%ah
and    %bh,0x20(%ebx)
and    %ch,(%eax)
and    %ah,(%eax)
pop    %ebx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %esi
imul   $0x6f6c6320,0x64(%esi),%ebp
jae    8060273 <_IO_stdin_used+0x20cf>
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     8060237 <_IO_stdin_used+0x2093>
jge    8060239 <_IO_stdin_used+0x2095>
sub    %esp,(%eax)
pop    %ebp
or     %cs:(%eax),%ah
and    %bh,0x20(%ebp)
and    %ch,(%ecx)
and    %ah,(%eax)
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %esi
imul   $0x65706f20,0x64(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     8060267 <_IO_stdin_used+0x20c3>
jnp    8060269 <_IO_stdin_used+0x20c5>
sub    %ah,(%eax)
pop    %ebx
or     %cs:(%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x5f20465e,%eax
or     %bh,(%edi,%ebx,2)
or     %ah,0x5f(%ebx)
or     %dh,(%ecx)
pop    %edi
or     %bh,(%esi)
and    %bl,0x8(%edi)
cmp    $0x5f,%al
or     %ah,0x5f(%ebx)
or     %dh,(%edx)
pop    %edi
or     %bh,(%esi)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    80602e4 <_IO_stdin_used+0x2140>
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     80602a8 <_IO_stdin_used+0x2104>
pop    %edi
or     %bh,(%edi,%ebx,2)
or     %ah,0x5f(%ebx)
or     %dh,(%edx)
pop    %edi
or     %bh,(%esi)
or     %cs:(%eax),%ah
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x5f20425e,%eax
or     %bh,(%edi,%ebx,2)
or     %ah,0x5f(%ebx)
or     %dh,(%ecx)
pop    %edi
or     %bh,(%esi)
and    %bl,0x8(%edi)
cmp    $0x5f,%al
or     %ah,0x5f(%ebx)
or     %dh,(%edx)
pop    %edi
or     %bh,(%esi)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     80602ef <_IO_stdin_used+0x214b>
pop    %edi
or     %bh,(%edi,%ebx,2)
or     %ah,0x5f(%ebx)
or     %dh,(%ecx)
pop    %edi
or     %bh,(%esi)
and    %cl,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2020200a,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%ebp)
arpl   %bp,0x20(%eax)
and    0x69(%esi),%ah
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    8060396 <_IO_stdin_used+0x21f2>
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806035c <_IO_stdin_used+0x21b8>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%edi)
gs
jae    8060368 <_IO_stdin_used+0x21c4>
outsw  %ds:(%esi),(%dx)
jb     80603c3 <_IO_stdin_used+0x221f>
popa
jb     80603b3 <_IO_stdin_used+0x220f>
and    %dh,0x20(%edi,%ebp,2)
je     80603bd <_IO_stdin_used+0x2219>
and    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    80603c1 <_IO_stdin_used+0x221d>
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     8060385 <_IO_stdin_used+0x21e1>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
je     80603d7 <_IO_stdin_used+0x2233>
push   $0x20676e69
je     80603e3 <_IO_stdin_used+0x223f>
and    %ch,%gs:(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     80603ec <_IO_stdin_used+0x2248>
sub    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
jo     80603ee <_IO_stdin_used+0x224a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     80603b3 <_IO_stdin_used+0x220f>
imul   $0x20656874,0x20(%esi),%ebp
je     806040b <_IO_stdin_used+0x2267>
jo     80603be <_IO_stdin_used+0x221a>
insb   (%dx),%es:(%edi)
imul   $0x20200a2e,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
popa
arpl   %bp,0x20(%eax)
and    0x69(%esi),%ah
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     80603e6 <_IO_stdin_used+0x2242>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%edi)
gs
jae    80603f2 <_IO_stdin_used+0x224e>
bound  %esp,0x63(%ecx)
imul   $0x72,0x61(%edi),%esi
and    %dh,%fs:0x20(%edi,%ebp,2)
je     8060448 <_IO_stdin_used+0x22a4>
and    %ch,%gs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806040f <_IO_stdin_used+0x226b>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
je     8060461 <_IO_stdin_used+0x22bd>
push   $0x20676e69
je     806046d <_IO_stdin_used+0x22c9>
and    %ch,%gs:(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     8060476 <_IO_stdin_used+0x22d2>
sub    %esp,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806043e <_IO_stdin_used+0x229a>
imul   $0x20656874,0x20(%esi),%ebp
bound  %ebp,0x74(%edi)
je     8060499 <_IO_stdin_used+0x22f5>
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%edx),%cl
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
or     %bh,(%edi,%ebx,2)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %edi
or     %dh,0x8(%edi,%ebx,2)
je     80604a5 <_IO_stdin_used+0x2301>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
popa
jb     80604c9 <_IO_stdin_used+0x2325>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     80604d9 <_IO_stdin_used+0x2335>
outsb  %gs:(%esi),(%dx)
je     806048b <_IO_stdin_used+0x22e7>
jo     80604dc <_IO_stdin_used+0x2338>
jae    80604d8 <_IO_stdin_used+0x2334>
je     80604da <_IO_stdin_used+0x2336>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     80604e0 <_IO_stdin_used+0x233c>
and    %bh,(%esp,%ebp,2)
gs
je     80604f2 <_IO_stdin_used+0x234e>
gs
jb     80604bf <_IO_stdin_used+0x231b>
or     %cs:(%eax),%ah
and    %ah,(%edi)
pop    %edi
or     %bh,(%edi,%ebx,2)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %edi
or     %dh,0x8(%edi,%ebx,2)
je     80604f5 <_IO_stdin_used+0x2351>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
and    %dh,0x72(%eax)
gs
jbe    8060520 <_IO_stdin_used+0x237c>
outsl  %ds:(%esi),(%dx)
jne    806052d <_IO_stdin_used+0x2389>
insb   (%dx),%es:(%edi)
jns    80604dd <_IO_stdin_used+0x2339>
insl   (%dx),%es:(%edi)
popa
jb     806052c <_IO_stdin_used+0x2388>
gs and %dh,%fs:%gs:0x6f(%eax)
jae    8060531 <_IO_stdin_used+0x238d>
je     8060533 <_IO_stdin_used+0x238f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ah,(%edi)
daa
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
je     8060555 <_IO_stdin_used+0x23b1>
and    %dh,%gs:0x72(%eax)
gs
jbe    806055d <_IO_stdin_used+0x23b9>
outsl  %ds:(%esi),(%dx)
jne    806056a <_IO_stdin_used+0x23c6>
and    %dh,0x6f(%eax)
jae    8060565 <_IO_stdin_used+0x23c1>
je     8060567 <_IO_stdin_used+0x23c3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %bl,0x58(%esi)
pop    %esi
pop    %eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,(%edi)
or     %cs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d2d2d2d
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2020200a,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
jb     80605d9 <_IO_stdin_used+0x2435>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
jns    8060596 <_IO_stdin_used+0x23f2>
jne    80605e8 <_IO_stdin_used+0x2444>
jo     80605df <_IO_stdin_used+0x243b>
jb     80605a9 <_IO_stdin_used+0x2405>
arpl   %sp,0x73(%ecx)
and    %ch,%gs:0x72(%edi)
and    %ch,0x77(%edi,%ebp,2)
gs
jb     80605b7 <_IO_stdin_used+0x2413>
arpl   %sp,0x73(%ecx)
and    %ch,%gs:0x74(%ebp,%eiz,2)
je     80605f9 <_IO_stdin_used+0x2455>
jb     80605c4 <_IO_stdin_used+0x2420>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x65(%ebx)
jb     8060617 <_IO_stdin_used+0x2473>
popa
imul   $0x6b72616d,0x20(%esi),%ebp
jae    80605cd <_IO_stdin_used+0x2429>
popa
jb     8060615 <_IO_stdin_used+0x2471>
and    %dh,0x72(%eax)
gs fs imul $0x3a64,%fs:%gs:0x65(%esi),%bp
3a
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
pop    %esi
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
jae    80605f3 <_IO_stdin_used+0x244f>
and    %ah,0x65(%edx)
imul   $0x20676e69,0x6e(%bp),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x20,%al
and    %ch,0x65(%ebp)
popa
outsb  %ds:(%esi),(%dx)
jae    8060620 <_IO_stdin_used+0x247c>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
or     %al,0x48(%ebx)
or     %cl,0x41(%eax)
or     %al,0x4e(%ecx)
or     %cl,0x47(%esi)
or     %al,0x49(%edi)
or     %cl,0x4e(%ecx)
or     %cl,0x47(%esi)
or     %al,0x20(%edi)
inc    %esi
or     %al,0x49(%esi)
or     %cl,0x4c(%ecx)
or     %cl,0x8(%ebp,%eax,2)
inc    %ebp
push   %ebx
or     %dl,0xa(%ebx)
or     (%eax),%ah
and    %bh,(%edx)
and    %bl,%gs:0x5f(%ebx)
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
js     8060724 <_IO_stdin_used+0x2580>
insl   (%dx),%es:(%edi)
imul   $0x6e206120,0x65(%esi),%ebp
gs
ja     80606ee <_IO_stdin_used+0x254a>
imul   $0x200a,0x2e(%ebp,%eiz,2),%bp
and    %bl,0x58(%esi)
pop    %esi
push   %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bh,(%edx)
gs or  %cs:%gs:(%eax),%ah
and    %bh,(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    (%eax),%ah
and    %al,0x78(%ebp)
popa
insl   (%dx),%es:(%edi)
imul   $0x65687420,0x65(%esi),%ebp
and    %ch,(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     8060789 <_IO_stdin_used+0x25e5>
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
gs
js     806079b <_IO_stdin_used+0x25f7>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
and    %bh,(%edx)
jo     8060769 <_IO_stdin_used+0x25c5>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %ebp
js     80607bf <_IO_stdin_used+0x261b>
insl   (%dx),%es:(%edi)
imul   $0x65687420,0x65(%esi),%ebp
and    %ch,(%eax)
pop    %edi
or     %cl,0x2d(%esi)
je     80607d6 <_IO_stdin_used+0x2632>
sub    %esp,(%eax)
jo     80607e4 <_IO_stdin_used+0x2640>
gs
jbe    80607de <_IO_stdin_used+0x263a>
outsl  %ds:(%esi),(%dx)
jne    80607eb <_IO_stdin_used+0x2647>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
and    %bh,(%edx)
js     80607ba <_IO_stdin_used+0x2616>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
and    %ah,(%eax)
inc    %ebp
js     8060810 <_IO_stdin_used+0x266c>
insl   (%dx),%es:(%edi)
imul   $0x65687420,0x65(%esi),%ebp
and    %ah,0x69(%esi)
jb     806082f <_IO_stdin_used+0x268b>
je     80607de <_IO_stdin_used+0x263a>
sub    %ch,0x72(%edi)
and    %bl,0x8(%edi)
dec    %esi
sub    $0x20296874,%eax
imul   $0x7266,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
and    %bh,(%edx)
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%ebp,%eiz,2)
gs
je     8060868 <_IO_stdin_used+0x26c4>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806087e <_IO_stdin_used+0x26da>
outsb  %gs:(%esi),(%dx)
je     8060830 <_IO_stdin_used+0x268c>
imul   $0x7266,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     806085e <_IO_stdin_used+0x26ba>
or     (%eax),%ah
and    %bh,0x475e2020
and    %ah,(%eax)
cmp    0x20(%esi),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x72756320,0x74(%esi),%ebp
jb     80608b8 <_IO_stdin_used+0x2714>
outsb  %ds:(%esi),(%dx)
je     8060876 <_IO_stdin_used+0x26d2>
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
or     %cl,0x49(%ebp)
or     %cl,0x53(%ecx)
or     %dl,0x43(%ebx)
or     %al,0x45(%ebx)
or     %al,0x4c(%ebp)
or     %cl,0x8(%esp,%ecx,2)
dec    %esp
inc    %ecx
or     %al,0x4e(%ecx)
or     %cl,0x45(%esi)
or     %al,0x4f(%ebp)
or     %cl,0x55(%edi)
or     %dl,0x53(%ebp)
or     %dl,0x20(%ebx)
inc    %ebx
or     %al,0x4f(%ebx)
or     %cl,0x4d(%edi)
or     %cl,0x4d(%ebp)
or     %cl,0x41(%ebp)
or     %al,0x4e(%ecx)
or     %cl,0x44(%esi)
or     %al,0x8(%ebx,%edx,2)
push   %ebx
or     (%edx),%cl
and    %ah,(%eax)
sub    $0x5f3c085f,%eax
or     %ah,0x5f(%esi)
or     %ch,0x8(%edi,%ebx,2)
popa
pop    %edi
or     %ah,0x5f(%edi)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
and    %ah,%gs:0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x70(%edi)
je     80609ab <_IO_stdin_used+0x2807>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bl,0x73(%ebx)
gs and %cl,%gs:0x50(%edi)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
and    %ah,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80609b5 <_IO_stdin_used+0x2811>
or     %cs:(%eax),%ah
and    %ch,0x3c085f2d
pop    %edi
or     %ch,0x5f(%esi)
or     %ah,0x5f(%ecx)
or     %ch,0x5f(%ebp)
or     %ah,0x5f(%ebp)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x67(%edi,%ebp,2)
insb   (%dx),%es:(%di)
and    %ah,%gs:0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x70(%edi)
je     8060a00 <_IO_stdin_used+0x285c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
bound  %edi,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
and    %bl,0x5f(%edi)
or     %bh,(%edi,%ebx,2)
or     %ah,0x5f(%esi)
or     %ch,0x8(%edi,%ebx,2)
popa
pop    %edi
or     %ah,0x5f(%edi)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
je     8060a39 <_IO_stdin_used+0x2895>
and    %dh,%gs:0x65(%ebx)
je     8060a4b <_IO_stdin_used+0x28a7>
imul   $0x20666f20,0x67(%esi),%ebp
popa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x70(%edi)
je     8060a5a <_IO_stdin_used+0x28b6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %bl,0x5f(%edi)
pop    %edi
or     %bh,(%edi,%ebx,2)
or     %ch,0x5f(%esi)
or     %ah,0x5f(%ecx)
or     %ch,0x5f(%ebp)
or     %ah,0x5f(%ebp)
or     %bh,(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     8060a89 <_IO_stdin_used+0x28e5>
popa
jns    8060a40 <_IO_stdin_used+0x289c>
je     8060a8a <_IO_stdin_used+0x28e6>
and    %dh,%gs:0x65(%ebx)
je     8060a9c <_IO_stdin_used+0x28f8>
imul   $0x20666f20,0x67(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     8060a9f <_IO_stdin_used+0x28fb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
bound  %edi,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
and    %ch,(%ebx)
pop    %edi
or     %ah,0x5f(%ebx)
or     %ch,0x5f(%ebp)
or     %ah,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x73(%ebp,%eiz,2)
jae    8060a91 <_IO_stdin_used+0x28ed>
arpl   %bp,0x64(%ebp)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
je     8060ae5 <_IO_stdin_used+0x2941>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     8060aa5 <_IO_stdin_used+0x2901>
imul   $0x7369,0x20(%ebp,%eiz,2),%bp
and    %ah,0x78(%ebp)
popa
insl   (%dx),%es:(%edi)
imul   $0xa0a2e64,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ebx,0x8(%edi)
arpl   %bx,0x8(%edi)
outsl  %ds:(%esi),(%dx)
pop    %edi
or     %ch,0x5f(%ebp)
or     %ch,0x5f(%ebp)
or     %ah,0x5f(%ecx)
or     %ch,0x5f(%esi)
or     %ah,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x69(%edi)
je     8060b43 <_IO_stdin_used+0x299f>
and    %ah,(%ebx,%edx,2)
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
or     %cs:(%eax),%ah
and    %bh,0x8(%eax,%ebx,2)
pop    %eax
pop    %edi
or     %ah,0x5f(%ebx)
or     %ch,0x5f(%edi)
or     %ch,0x5f(%ebp)
or     %ch,0x5f(%ebp)
or     %ah,0x5f(%ecx)
or     %ch,0x5f(%esi)
or     %ah,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
imul   $0x6c696620,0x65(%eax),%esi
and    %ah,%gs:0x65(%edx)
je     8060b90 <_IO_stdin_used+0x29ec>
gs outsb %gs:(%esi),(%dx)
and    %ah,0x75(%ebx)
jb     8060b93 <_IO_stdin_used+0x29ef>
outsb  %gs:(%esi),(%dx)
je     8060b45 <_IO_stdin_used+0x29a1>
jo     8060b96 <_IO_stdin_used+0x29f2>
jae    8060b49 <_IO_stdin_used+0x29a5>
and    %ch,%es:0x61(%ebp)
jb     8060b9a <_IO_stdin_used+0x29f6>
and    %bl,0x8(%eax)
pop    %eax
and    %dh,0x20(%edi,%ebp,2)
jae    8060ba1 <_IO_stdin_used+0x29fd>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%ah
and    %dh,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x64(%ebp)
imul   $0x63206568,0x74(%eax,%eiz,1),%esi
jne    8060bdb <_IO_stdin_used+0x2a37>
jb     8060bd0 <_IO_stdin_used+0x2a2c>
outsb  %ds:(%esi),(%dx)
je     8060b8e <_IO_stdin_used+0x29ea>
imul   $0x6977,0x20(%ebp,%eiz,2),%bp
je     8060bdf <_IO_stdin_used+0x2a3b>
and    %ah,(%esi,%edx,2)
dec    %ecx
push   %ebx
push   %ebp
inc    %ecx
dec    %esp
and    %ch,0x72(%edi)
and    %ah,0x4f544944(,%eax,2)
push   %edx
or     %cs:(%eax),%ah
and    %dl,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x72657620,0x74(%esi),%ebp
jae    8060c17 <_IO_stdin_used+0x2a73>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,(%edx)
insb   (%dx),%es:(%edi)
gs
jae    8060c33 <_IO_stdin_used+0x2a8f>
and    (%esi),%ch
or     (%eax),%ah
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x8(%edi)
dec    %edi
push   %eax
or     %dl,0x54(%eax)
or     %dl,0x8(%ecx,%ecx,2)
dec    %ecx
dec    %edi
or     %cl,0x4e(%edi)
or     %cl,0x53(%esi)
or     %dl,0xa(%ebx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6f(%ebp)
jae    8060cc3 <_IO_stdin_used+0x2b1f>
and    %ch,0x70(%edi)
je     8060cbd <_IO_stdin_used+0x2b19>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8060c78 <_IO_stdin_used+0x2ad4>
insl   (%dx),%es:(%edi)
popa
jns    8060c7c <_IO_stdin_used+0x2ad8>
bound  %esp,0x20(%ebp)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x69(%di)
je     8060cd3 <_IO_stdin_used+0x2b2f>
gs
jb     8060c8e <_IO_stdin_used+0x2aea>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8060cae <_IO_stdin_used+0x2b0a>
data16
jb     8060d00 <_IO_stdin_used+0x2b5c>
insl   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
je     8060cff <_IO_stdin_used+0x2b5b>
imul   $0x7373656c,0x20(%esi),%ebp
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ch,0x20726f20
sub    $0x6f63202d,%eax
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x70(%edi)
je     8060d32 <_IO_stdin_used+0x2b8e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8060ced <_IO_stdin_used+0x2b49>
insl   (%dx),%es:(%edi)
popa
jns    8060cf1 <_IO_stdin_used+0x2b4d>
bound  %esp,0x20(%ebp)
imul   $0x6e69206e,0x65(%bp),%esi
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x6f(%edi,%esi,2)
and    %ah,0x6f(%esi)
jb     8060d59 <_IO_stdin_used+0x2bb5>
jae    8060d28 <_IO_stdin_used+0x2b84>
and    %ah,0x69(%ebp)
je     8060d5b <_IO_stdin_used+0x2bb7>
gs
jb     8060d16 <_IO_stdin_used+0x2b72>
popa
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x68(%ebx)
popa
jb     8060d6d <_IO_stdin_used+0x2bc9>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x72(%eax)
arpl   %sp,%gs:0x64(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x20(%ecx)
sub    $0x726f202c,%eax
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
arpl   %sp,%gs:0x64(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %ch,0xa0a2e2d
and    %ah,(%eax)
sub    $0x2e20203f,%eax
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6c65682d,%eax
jo     8060d5e <_IO_stdin_used+0x2bba>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
push   $0x20706c65
sub    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
sub    %ebp,%gs:(%esi)
or     (%eax),%ah
and    %ch,0x2e202061
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6165732d,%eax
jb     8060e02 <_IO_stdin_used+0x2c5e>
push   $0x696b732d
jo     8060dd3 <_IO_stdin_used+0x2c2f>
jae    8060e0b <_IO_stdin_used+0x2c67>
jb     8060e0f <_IO_stdin_used+0x2c6b>
outsb  %gs:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
popa
jb     8060e27 <_IO_stdin_used+0x2c83>
push   $0x696b7320
jo     8060e3e <_IO_stdin_used+0x2c9a>
and    %ah,0x75(%ebx)
jb     8060e42 <_IO_stdin_used+0x2c9e>
outsb  %gs:(%esi),(%dx)
je     8060df4 <_IO_stdin_used+0x2c50>
jae    8060e39 <_IO_stdin_used+0x2c95>
jb     8060e3d <_IO_stdin_used+0x2c99>
outsb  %gs:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ch,0x2e202041
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x4145532d,%eax
push   %edx
inc    %ebx
dec    %eax
sub    $0x50494b53,%eax
sub    $0x45524353,%eax
inc    %ebp
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
popa
jb     8060e7b <_IO_stdin_used+0x2cd7>
push   $0x61747320
jb     8060e93 <_IO_stdin_used+0x2cef>
jae    8060e41 <_IO_stdin_used+0x2c9d>
push   $0x75
jae    8060e99 <_IO_stdin_used+0x2cf5>
and    %ah,0x66(%ecx)
je     8060e8f <_IO_stdin_used+0x2ceb>
jb     8060e4c <_IO_stdin_used+0x2ca8>
je     8060e8f <_IO_stdin_used+0x2ceb>
jb     8060e97 <_IO_stdin_used+0x2cf3>
gs
je     8060e53 <_IO_stdin_used+0x2caf>
insb   (%dx),%es:(%edi)
imul   $0x20200a2e,0x65(%esi),%ebp
sub    $0x5f5b2062,%eax
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6675622d,%eax
data16
gs
jb     8060ec7 <_IO_stdin_used+0x2d23>
cmp    $0x4e085f5b,%eax
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x75(%edx)
data16
data16
gs
jb     8060ef1 <_IO_stdin_used+0x2d4d>
or     %cs:(%eax),%ah
and    %ch,0x2e202042
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x7475612d,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x66667562,%eax
gs
jb     8060f11 <_IO_stdin_used+0x2d6d>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     8060ed7 <_IO_stdin_used+0x2d33>
popa
jne    8060f2e <_IO_stdin_used+0x2d8a>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8060f28 <_IO_stdin_used+0x2d84>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    8060ee5 <_IO_stdin_used+0x2d41>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     8060f48 <_IO_stdin_used+0x2da4>
and    %ah,0x6f(%esi)
jb     8060efa <_IO_stdin_used+0x2d56>
jo     8060f45 <_IO_stdin_used+0x2da1>
jo     8060f43 <_IO_stdin_used+0x2d9f>
jae    8060f0e <_IO_stdin_used+0x2d6a>
or     (%eax),%ah
and    %ch,0x2e202063
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x656c632d,%eax
popa
jb     8060f26 <_IO_stdin_used+0x2d82>
jae    8060f5e <_IO_stdin_used+0x2dba>
jb     8060f62 <_IO_stdin_used+0x2dbe>
outsb  %gs:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%edx)
jo     8060f77 <_IO_stdin_used+0x2dd3>
imul   $0x20796220,0x74(%esi),%ebp
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8060f8c <_IO_stdin_used+0x2de8>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bp,%si)
je     8060f92 <_IO_stdin_used+0x2dee>
gs
jb     8060f4d <_IO_stdin_used+0x2da9>
je     8060f97 <_IO_stdin_used+0x2df3>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x63(%ebx)
jb     8060fa5 <_IO_stdin_used+0x2e01>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20200a2e,0x67(%esi),%ebp
sub    $0x2e202064,%eax
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6d75642d,%eax
bound  %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
jne    8060fd6 <_IO_stdin_used+0x2e32>
bound  %esp,(%eax)
je     8060fd2 <_IO_stdin_used+0x2e2e>
jb     8060fdc <_IO_stdin_used+0x2e38>
imul   $0x200a2e6c,0x61(%esi),%ebp
and    %ch,0x5f5b2044
or     %bh,0x5f(%eax)
or     %ch,0x5f(%esi)
or     %ch,(%esi)
pop    %edi
or     %ch,0x5d(%esi)
and    %ah,(%eax)
and    %ah,%cs:(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jb     8060fd2 <_IO_stdin_used+0x2e2e>
pop    %edi
or     %bh,0x5f(%eax)
or     %ch,0x5f(%esi)
or     %ch,(%esi)
pop    %edi
or     %ch,0xa(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
gs
je     8060fd8 <_IO_stdin_used+0x2e34>
jae    806101d <_IO_stdin_used+0x2e79>
jb     8061021 <_IO_stdin_used+0x2e7d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8061038 <_IO_stdin_used+0x2e94>
and    %ch,%cs:(%eax)
dec    %ebp
push   %ebx
sub    $0x20534f44,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8060ffd <_IO_stdin_used+0x2e59>
or     (%eax),%ah
and    %ch,0x2d202065
inc    %ebp
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6975712d,%eax
je     8061019 <_IO_stdin_used+0x2e75>
popa
je     806101c <_IO_stdin_used+0x2e78>
outsl  %gs:(%esi),(%dx)
data16
and    %ah,(%eax)
sub    $0x4955512d,%eax
push   %esp
sub    $0x452d5441,%eax
dec    %edi
inc    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x75(%ecx)
imul   $0x6e652074,0x61(%eax,%eiz,1),%esi
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
and    %ch,0x2e202066
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x726f662d,%eax
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     80610ba <_IO_stdin_used+0x2f16>
and    %ch,%gs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x75676572,%eax
insb   (%dx),%es:(%edi)
popa
jb     806108a <_IO_stdin_used+0x2ee6>
imul   $0xa2e,0x73(%ebp,%eiz,2),%bp
and    %ah,(%eax)
sub    $0x2e202046,%eax
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6975712d,%eax
je     80610b5 <_IO_stdin_used+0x2f11>
imul   $0x2d656e6f,0x2d(%esi),%esp
jae    80610f4 <_IO_stdin_used+0x2f50>
jb     80610f8 <_IO_stdin_used+0x2f54>
outsb  %gs:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x75(%ecx)
imul   $0x6e652066,0x69(%eax,%eiz,1),%esi
je     806111d <_IO_stdin_used+0x2f79>
jb     806111b <_IO_stdin_used+0x2f77>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%esi)
je     8061133 <_IO_stdin_used+0x2f8f>
and    %ch,0x6e(%edi)
and    %ah,0x69(%esi)
jb     806113b <_IO_stdin_used+0x2f97>
je     80610ea <_IO_stdin_used+0x2f46>
jae    806112f <_IO_stdin_used+0x2f8b>
jb     8061133 <_IO_stdin_used+0x2f8f>
outsb  %gs:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ch,0x2e202067
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6c69682d,%eax
imul   $0x72616573,0x2d(%ebp,%eiz,2),%esi
arpl   %bp,0xa(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %eax
imul   $0x6867696c,0x68(%edi),%esp
je     806112e <_IO_stdin_used+0x2f8a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8061133 <_IO_stdin_used+0x2f8f>
insb   (%dx),%es:(%edi)
popa
jae    806118b <_IO_stdin_used+0x2fe7>
and    %ch,0x61(%ebp)
je     806117f <_IO_stdin_used+0x2fdb>
push   $0x726f6620
and    %dh,0x65(%ebx)
popa
jb     806118a <_IO_stdin_used+0x2fe6>
push   $0xa2e7365
and    %ah,(%eax)
sub    $0x2e202047,%eax
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x4c49482d,%eax
dec    %ecx
push   %esp
inc    %ebp
sub    $0x52414553,%eax
inc    %ebx
dec    %eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     8061184 <_IO_stdin_used+0x2fe0>
push   $0x6c686769
imul   $0x6e612074,0x68(%edi),%esp
jns    8061192 <_IO_stdin_used+0x2fee>
insl   (%dx),%es:(%edi)
popa
je     80611d9 <_IO_stdin_used+0x3035>
push   $0x66207365
outsl  %ds:(%esi),(%dx)
jb     806119e <_IO_stdin_used+0x2ffa>
jae    80611e5 <_IO_stdin_used+0x3041>
popa
jb     80611e6 <_IO_stdin_used+0x3042>
push   $0xa2e7365
and    %ah,(%eax)
sub    $0x5f5b2068,%eax
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x78616d2d,%eax
sub    $0x6b636162,%eax
sub    $0x6f726373,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    $0x4e085f5b,%eax
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     8061230 <_IO_stdin_used+0x308c>
and    %dh,0x63(%ebx)
jb     8061240 <_IO_stdin_used+0x309c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x692d2020,0xa(%esi,%ebp,1),%esi
and    %ah,(%eax)
cs cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6e67692d,%eax
outsl  %ds:(%esi),(%dx)
jb     8061258 <_IO_stdin_used+0x30b4>
sub    $0x65736163,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8061276 <_IO_stdin_used+0x30d2>
and    %ah,0x61(%ebx)
jae    806127b <_IO_stdin_used+0x30d7>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%ebx)
popa
jb     8061282 <_IO_stdin_used+0x30de>
push   $0x74207365
push   $0x64207461
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     806124f <_IO_stdin_used+0x30ab>
arpl   %bp,0x6e(%edi)
je     8061295 <_IO_stdin_used+0x30f1>
imul   $0x65707075,0x20(%esi),%ebp
jb     80612a0 <_IO_stdin_used+0x30fc>
popa
jae    80612a5 <_IO_stdin_used+0x3101>
or     %cs:(%eax),%ah
and    %ch,0x2e202049
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x4e47492d,%eax
dec    %edi
push   %edx
inc    %ebp
sub    $0x45534143,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80612dd <_IO_stdin_used+0x3139>
and    %ah,0x61(%ebx)
jae    80612e2 <_IO_stdin_used+0x313e>
and    %ch,0x6e(%ecx)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
popa
jb     80612ed <_IO_stdin_used+0x3149>
push   $0xa2e7365
and    %ah,(%eax)
sub    $0x5f5b206a,%eax
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6d756a2d,%eax
jo     80612d5 <_IO_stdin_used+0x3131>
je     806130b <_IO_stdin_used+0x3167>
jb     8061313 <_IO_stdin_used+0x316f>
gs
je     80612ec <_IO_stdin_used+0x3148>
pop    %ebx
pop    %edi
or     %cl,0x5d(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x63(%ebx)
jb     8061330 <_IO_stdin_used+0x318c>
outsb  %gs:(%esi),(%dx)
and    %dh,0x6f(%eax)
jae    806133b <_IO_stdin_used+0x3197>
je     806133d <_IO_stdin_used+0x3199>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     8061301 <_IO_stdin_used+0x315d>
insb   (%dx),%es:(%edi)
imul   $0x200a2e73,0x65(%esi),%ebp
and    %ch,0x2e20204a
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6174732d,%eax
je     8061374 <_IO_stdin_used+0x31d0>
jae    806132e <_IO_stdin_used+0x318a>
arpl   %bp,0x6c(%edi)
jne    8061373 <_IO_stdin_used+0x31cf>
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     806138b <_IO_stdin_used+0x31e7>
popa
jns    8061342 <_IO_stdin_used+0x319e>
popa
and    %dh,0x74(%ebx)
popa
je     806139e <_IO_stdin_used+0x31fa>
jae    806134b <_IO_stdin_used+0x31a7>
arpl   %bp,0x6c(%edi)
jne    806139d <_IO_stdin_used+0x31f9>
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
and    %ch,0x66(%ebp,%eiz,2)
je     806135a <_IO_stdin_used+0x31b6>
gs fs and %ch,%fs:%gs:0x66(%bx)
and    %dh,0x63(%ebx)
jb     80613ab <_IO_stdin_used+0x3207>
outsb  %gs:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ch,0x5f5b206b
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
and    %ah,(%eax)
and    %ah,%cs:(%eax)
sub    $0x73656c2d,%eax
jae    80613d4 <_IO_stdin_used+0x3230>
gs
jns    8061399 <_IO_stdin_used+0x31f5>
imul   $0x5f5b,0x3d(%ebp,%eiz,2),%bp
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %ah,%gs:0x20(%ecx)
insb   (%dx),%es:(%edi)
gs
jae    806140f <_IO_stdin_used+0x326b>
imul   $0x20,0x79(%ebp),%esp
imul   $0x200a,0x2e(%ebp,%eiz,2),%bp
and    %ch,0x2020204b
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6975712d
je     80613ea <_IO_stdin_used+0x3246>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x72746e69,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x78(%ebp)
imul   $0x20737365,0x6c(%eax,%eiz,1),%esi
imul   $0x70736572,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8061451 <_IO_stdin_used+0x32ad>
and    %dh,0x20(%edi,%ebp,2)
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x200a2e43,%eax
and    %ch,0x2e20204c
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x2d6f6e2d,%eax
insb   (%dx),%es:(%edi)
gs
jae    8061484 <_IO_stdin_used+0x32e0>
outsl  %ds:(%esi),(%dx)
jo     8061479 <_IO_stdin_used+0x32d5>
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8061493 <_IO_stdin_used+0x32ef>
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %edi
push   %eax
inc    %ebp
dec    %esi
and    %ah,0x6e(%ebp)
jbe    80614a9 <_IO_stdin_used+0x3305>
jb     80614b1 <_IO_stdin_used+0x330d>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8061468 <_IO_stdin_used+0x32c4>
jbe    80614ab <_IO_stdin_used+0x3307>
jb     80614b5 <_IO_stdin_used+0x3311>
popa
bound  %ebp,0x2e(%ebp,%eiz,2)
or     (%eax),%ah
and    %ch,0x2d20206d
dec    %ebp
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6e6f6c2d,%eax
addr16 sub $0x6d6f7270,%eax
jo     80614e3 <_IO_stdin_used+0x333f>
and    %ah,(%eax)
sub    $0x4e4f4c2d,%eax
inc    %edi
sub    $0x4d4f5250,%eax
push   %eax
push   %esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
je     80614b5 <_IO_stdin_used+0x3311>
jo     8061509 <_IO_stdin_used+0x3365>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806150f <_IO_stdin_used+0x336b>
and    %dh,0x74(%ebx)
jns    806150c <_IO_stdin_used+0x3368>
gs or  %cs:%gs:(%eax),%ah
and    %ch,0x2d20206e
dec    %esi
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6e696c2d,%eax
gs
sub    $0x626d756e,%eax
gs
jb     8061534 <_IO_stdin_used+0x3390>
and    %ah,(%eax)
sub    $0x4e494c2d,%eax
inc    %ebp
sub    $0x424d554e,%eax
inc    %ebp
push   %edx
push   %ebx
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     806150a <_IO_stdin_used+0x3366>
jne    806155f <_IO_stdin_used+0x33bb>
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    8061529 <_IO_stdin_used+0x3385>
or     (%eax),%ah
and    %ch,0x5f5b206f
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
and    %ah,(%eax)
and    %ah,%cs:(%eax)
sub    $0x676f6c2d,%eax
sub    $0x656c6966,%eax
cmp    $0x66085f5b,%eax
pop    %edi
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%ebx)
jo     80615bd <_IO_stdin_used+0x3419>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
jae    80615c8 <_IO_stdin_used+0x3424>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     80615be <_IO_stdin_used+0x341a>
and    %ch,0x6e(%ecx)
jo     80615d4 <_IO_stdin_used+0x3430>
je     8061581 <_IO_stdin_used+0x33dd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806158f <_IO_stdin_used+0x33eb>
or     %cs:(%eax),%ah
and    %ch,0x5f5b204f
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
and    %ah,(%eax)
and    %ah,%cs:(%eax)
sub    $0x474f4c2d,%eax
sub    $0x454c4946,%eax
cmp    $0x66085f5b,%eax
pop    %edi
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%ebx)
jo     8061629 <_IO_stdin_used+0x3485>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
jne    806162e <_IO_stdin_used+0x348a>
arpl   %bp,0x6e(%edi)
imul   $0x6c6c616e,%fs:0x6f(%ecx,%ebp,2),%esi
6c
jns    80615ee <_IO_stdin_used+0x344a>
outsl  %ds:(%esi),(%dx)
jbe    8061636 <_IO_stdin_used+0x3492>
jb     806164a <_IO_stdin_used+0x34a6>
jb     806163e <_IO_stdin_used+0x349a>
je     806163c <_IO_stdin_used+0x3498>
sub    %ebp,(%esi)
or     (%eax),%ah
and    %ch,0x5f5b2070
or     %dh,0x5f(%eax)
or     %ah,0x5f(%ecx)
or     %dh,0x8(%edi,%ebx,2)
je     806164c <_IO_stdin_used+0x34a8>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %ch,0x5d(%esi)
and    %ah,(%eax)
sub    $0x7461702d,%eax
je     8061664 <_IO_stdin_used+0x34c0>
jb     806166f <_IO_stdin_used+0x34cb>
cmp    $0x70085f5b,%eax
pop    %edi
or     %ah,0x5f(%ecx)
or     %dh,0x8(%edi,%ebx,2)
je     806166f <_IO_stdin_used+0x34cb>
or     %ah,0x5f(%ebp)
or     %dh,0x5f(%edx)
or     %ch,0x5d(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x74(%ebx)
popa
jb     80616a5 <_IO_stdin_used+0x3501>
and    %ah,0x74(%ecx)
and    %dh,0x61(%eax)
je     80616ad <_IO_stdin_used+0x3509>
gs
jb     80616aa <_IO_stdin_used+0x3506>
and    %ch,(%eax)
data16
jb     80616b0 <_IO_stdin_used+0x350c>
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
sub    %ebp,%gs:(%esi)
or     (%eax),%ah
and    %ch,0x5f5b2050
or     %dh,0x5f(%eax)
or     %dh,0x5f(%edx)
or     %ch,0x5f(%edi)
or     %ch,0x5f(%ebp)
or     %dh,0x5f(%eax)
or     %dh,0x20(%ebp,%ebx,2)
and    %ah,(%eax)
sub    $0x6f72702d,%eax
insl   (%dx),%es:(%edi)
jo     80616ea <_IO_stdin_used+0x3546>
cmp    $0x70085f5b,%eax
pop    %edi
or     %dh,0x5f(%edx)
or     %ch,0x5f(%edi)
or     %ch,0x5f(%ebp)
or     %dh,0x5f(%eax)
or     %dh,0xa(%ebp,%ebx,2)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
imul   $0x6e20,%gs:0x65(%esi),%bp
gs
ja     80616c9 <_IO_stdin_used+0x3525>
jo     806171d <_IO_stdin_used+0x3579>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8061723 <_IO_stdin_used+0x357f>
or     %cs:(%eax),%ah
and    %ch,0x2d202071
push   %ecx
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6975712d,%eax
gs
je     80616e9 <_IO_stdin_used+0x3545>
and    %ch,0x4955512d
inc    %ebp
push   %esp
and    %ah,(%eax)
sub    $0x6c69732d,%eax
outsb  %gs:(%esi),(%dx)
je     80616fc <_IO_stdin_used+0x3558>
sub    $0x4c49532d,%eax
inc    %ebp
dec    %esi
push   %esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x75(%ecx)
imul   $0x65687420,0x74(%ebp),%esp
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x6562206c,0x61(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
and    %ch,0x2d202072
push   %edx
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x7761722d,%eax
sub    $0x746e6f63,%eax
jb     806179b <_IO_stdin_used+0x35f7>
insb   (%dx),%es:(%edi)
sub    $0x72616863,%eax
jae    8061754 <_IO_stdin_used+0x35b0>
and    %ch,0x5741522d
sub    $0x544e4f43,%eax
push   %edx
dec    %edi
dec    %esp
sub    $0x52414843,%eax
push   %ebx
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x75(%edi)
je     80617cf <_IO_stdin_used+0x362b>
jne    80617d5 <_IO_stdin_used+0x3631>
and    %ah,(%edx)
jb     80617c6 <_IO_stdin_used+0x3622>
ja     8061789 <_IO_stdin_used+0x35e5>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80617df <_IO_stdin_used+0x363b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     80617d6 <_IO_stdin_used+0x3632>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80617a9 <_IO_stdin_used+0x3605>
or     (%eax),%ah
and    %ch,0x2e202073
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x7571732d,%eax
gs
gs
jp     80617fa <_IO_stdin_used+0x3656>
sub    $0x6e616c62,%eax
imul   $0x73,0x656e696c,%ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x71(%ebx)
jne    806181d <_IO_stdin_used+0x3679>
gs
jp     8061820 <_IO_stdin_used+0x367c>
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     806182a <_IO_stdin_used+0x3686>
jo     806182f <_IO_stdin_used+0x368b>
and    %ah,%gs:0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x6c,(%eax),%esp
imul   $0x200a2e73,0x65(%esi),%ebp
and    %ch,0x2e202053
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6f68632d,%eax
jo     8061816 <_IO_stdin_used+0x3672>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 sub $0x656e696c,%eax
jae    80617fe <_IO_stdin_used+0x365a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
push   $0x2820706f
je     8061880 <_IO_stdin_used+0x36dc>
jne    806187e <_IO_stdin_used+0x36da>
arpl   %sp,0x74(%ecx)
sub    %esp,%gs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
gs
jae    8061841 <_IO_stdin_used+0x369d>
jb     8061884 <_IO_stdin_used+0x36e0>
je     806188d <_IO_stdin_used+0x36e9>
gs
jb     8061848 <_IO_stdin_used+0x36a4>
je     8061892 <_IO_stdin_used+0x36ee>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%edi)
popa
jo     80618a2 <_IO_stdin_used+0x36fe>
imul   $0x20200a2e,0x67(%esi),%ebp
sub    $0x5f5b2074,%eax
or     %dh,0x8(%edi,%ebx,2)
popa
pop    %edi
or     %ah,0x5d(%edi)
and    %ah,(%eax)
cs and %ah,%cs:(%eax)
sub    $0x6761742d,%eax
cmp    $0x74085f5b,%eax
pop    %edi
or     %ah,0x5f(%ecx)
or     %ah,0x5d(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x69(%esi)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
je     80618db <_IO_stdin_used+0x3737>
or     %cs:(%bx,%si),%ah
and    %ch,0x5f5b2054
or     %dh,0x8(%edi,%ebx,2)
popa
pop    %edi
or     %ah,0x5f(%edi)
or     %dh,0x5f(%ebx)
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
and    %ch,0x6761742d
sub    $0x656c6966,%eax
cmp    $0x74085f5b,%eax
pop    %edi
or     %ah,0x5f(%ecx)
or     %ah,0x5f(%edi)
or     %dh,0x5f(%ebx)
or     %ah,0x5f(%esi)
or     %ch,0x5f(%ecx)
or     %ch,0x8(%edi,%ebx,2)
gs
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x6c(%ecx)
je     8061945 <_IO_stdin_used+0x37a1>
jb     8061950 <_IO_stdin_used+0x37ac>
popa
je     806194a <_IO_stdin_used+0x37a6>
and    %dh,0x67(%ecx,%eiz,2)
jae    806190b <_IO_stdin_used+0x3767>
imul   $0x200a,0x2e(%ebp,%eiz,2),%bp
and    %ch,0x2d202075
push   %ebp
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x646e752d,%eax
gs
jb     8061975 <_IO_stdin_used+0x37d1>
imul   $0x6570732d,0x65(%esi),%ebp
arpl   %bp,0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
sub    $0x444e552d,%eax
inc    %ebp
push   %edx
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
sub    $0x43455053,%eax
dec    %ecx
inc    %ecx
dec    %esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x61(%bx,%si)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x67(%esi),%ebp
bound  %esp,0x63(%ecx)
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x73(%ebp)
or     %cs:(%eax),%ah
and    %ch,0x2e202056
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x7265762d,%eax
jae    80619db <_IO_stdin_used+0x3837>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     80619f8 <_IO_stdin_used+0x3854>
popa
jns    80619af <_IO_stdin_used+0x380b>
je     80619f9 <_IO_stdin_used+0x3855>
and    %dh,%gs:0x65(%esi)
jb     8061a0a <_IO_stdin_used+0x3866>
imul   $0x6d756e20,0x6e(%edi),%ebp
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,(%edx)
insb   (%dx),%es:(%edi)
gs
jae    8061a1d <_IO_stdin_used+0x3879>
and    (%esi),%ch
or     (%eax),%ah
and    %ch,0x2e202077
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6c69682d,%eax
imul   $0x65726e75,0x2d(%ebp,%eiz,2),%esi
popa
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x69(%eax)
addr16 push $0x6867696c
je     8061a09 <_IO_stdin_used+0x3865>
imul   $0x2074,0x73(%edx),%si
outsb  %ds:(%esi),(%dx)
gs
ja     8061a13 <_IO_stdin_used+0x386f>
insb   (%dx),%es:(%edi)
imul   $0x74666120,0x65(%esi),%ebp
gs
jb     8061a1e <_IO_stdin_used+0x387a>
outsw  %ds:(%esi),(%dx)
jb     8061a79 <_IO_stdin_used+0x38d5>
popa
jb     8061a69 <_IO_stdin_used+0x38c5>
sub    $0x65726373,%eax
outsb  %gs:(%esi),(%dx)
or     %cs:(%eax),%ah
and    %ch,0x2e202057
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x4c49482d,%eax
dec    %ecx
push   %esp
inc    %ebp
sub    $0x45524e55,%eax
inc    %ecx
inc    %esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x69(%eax)
addr16 push $0x6867696c
je     8061a6a <_IO_stdin_used+0x38c6>
imul   $0x2074,0x73(%edx),%si
outsb  %ds:(%esi),(%dx)
gs
ja     8061a74 <_IO_stdin_used+0x38d0>
insb   (%dx),%es:(%edi)
imul   $0x74666120,0x65(%esi),%ebp
gs
jb     8061a7f <_IO_stdin_used+0x38db>
popa
outsb  %ds:(%esi),(%dx)
jns    8061a83 <_IO_stdin_used+0x38df>
outsw  %ds:(%esi),(%dx)
jb     8061ade <_IO_stdin_used+0x393a>
popa
jb     8061ace <_IO_stdin_used+0x392a>
and    %ch,0x6f(%ebp)
jbe    8061ad4 <_IO_stdin_used+0x3930>
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8061aa2 <_IO_stdin_used+0x38fe>
or     (%eax),%ah
and    %ch,0x5f5b2078
or     %cl,0x5b(%esi)
sub    $0x2e,%al
cs
cs
pop    %ebp
pop    %ebp
and    %ah,(%eax)
sub    $0x6261742d,%eax
jae    8061acb <_IO_stdin_used+0x3927>
pop    %ebx
pop    %edi
or     %cl,0x5b(%esi)
sub    $0x2e,%al
cs
cs
pop    %ebp
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
je     8061ad0 <_IO_stdin_used+0x392c>
je     8061b13 <_IO_stdin_used+0x396f>
bound  %esp,(%eax)
jae    8061b2a <_IO_stdin_used+0x3986>
outsl  %ds:(%esi),(%dx)
jo     8061b2c <_IO_stdin_used+0x3988>
or     %cs:(%eax),%ah
and    %ch,0x2e202058
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x2d6f6e2d,%eax
imul   $0x20200a74,0x69(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     8061b0d <_IO_stdin_used+0x3969>
jne    8061b62 <_IO_stdin_used+0x39be>
and    %dh,%gs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
arpl   %sp,0x70(%ecx)
and    %ch,0x6e(%ecx)
imul   $0x696e6965,0x64(%edi,%ebp,1),%esi
je     8061b25 <_IO_stdin_used+0x3981>
jae    8061b7b <_IO_stdin_used+0x39d7>
jb     8061b72 <_IO_stdin_used+0x39ce>
outsb  %ds:(%esi),(%dx)
addr16 jae 8061b3b <_IO_stdin_used+0x3997>
or     (%eax),%ah
and    %ch,0x5f5b2079
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x78616d2d,%eax
sub    $0x77726f66,%eax
sub    $0x6f726373,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    $0x4e085f5b,%eax
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%esi)
jb     8061bc5 <_IO_stdin_used+0x3a21>
popa
jb     8061bb5 <_IO_stdin_used+0x3a11>
and    %dh,0x63(%ebx)
jb     8061bc5 <_IO_stdin_used+0x3a21>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x7a2d2020,0xa(%esi,%ebp,1),%esi
and    %bl,0x5f(%ebx)
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6e69772d,%eax
outsl  %fs:(%esi),(%dx)
ja     8061bb8 <_IO_stdin_used+0x3a14>
pop    %ebx
pop    %edi
or     %cl,0x5d(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
je     8061bb7 <_IO_stdin_used+0x3a13>
jae    8061c02 <_IO_stdin_used+0x3a5e>
jp     8061c00 <_IO_stdin_used+0x3a5c>
and    %ch,0x66(%edi)
and    %dh,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8061bd4 <_IO_stdin_used+0x3a30>
or     (%eax),%ah
and    %ch,0x5f5b2022
or     %ah,0x5b(%ebx)
pop    %edi
or     %ah,0x5d(%ebx)
pop    %ebp
and    %ah,(%eax)
and    %ah,%cs:(%eax)
sub    $0x6f75712d,%eax
je     8061c27 <_IO_stdin_used+0x3a83>
jae    8061c01 <_IO_stdin_used+0x3a5d>
pop    %ebx
pop    %edi
or     %ah,0x5b(%ebx)
pop    %edi
or     %ah,0x5d(%ebx)
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%ebx)
je     8061c05 <_IO_stdin_used+0x3a61>
jae    8061c4f <_IO_stdin_used+0x3aab>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8061c55 <_IO_stdin_used+0x3ab1>
and    %ah,0x68(%ebx)
popa
jb     8061c57 <_IO_stdin_used+0x3ab3>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8061c2a <_IO_stdin_used+0x3a86>
or     (%eax),%ah
and    %ch,0x2e20207e
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6c69742d,%eax
fs or  %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     8061c4d <_IO_stdin_used+0x3aa9>
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     8061ca0 <_IO_stdin_used+0x3afc>
insb   (%dx),%es:(%edi)
fs
gs
jae    8061c5c <_IO_stdin_used+0x3ab8>
popa
data16
je     8061ca5 <_IO_stdin_used+0x3b01>
jb     8061c62 <_IO_stdin_used+0x3abe>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
and    %ch,0x5f5b2023
or     %cl,0x5d(%esi)
and    %ah,(%eax)
cs cs cs and %ah,%cs:(%eax)
sub    $0x6968732d,%eax
data16
je     8061ca6 <_IO_stdin_used+0x3b02>
pop    %ebx
pop    %edi
or     %cl,0x5d(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6f(%eax)
jb     8061cee <_IO_stdin_used+0x3b4a>
jp     8061cf6 <_IO_stdin_used+0x3b52>
outsb  %ds:(%esi),(%dx)
je     8061ceb <_IO_stdin_used+0x3b47>
insb   (%dx),%es:(%edi)
and    %dh,0x63(%ebx)
jb     8061cff <_IO_stdin_used+0x3b5b>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6d(%ecx)
outsl  %ds:(%esi),(%dx)
jne    8061d06 <_IO_stdin_used+0x3b62>
je     8061cba <_IO_stdin_used+0x3b16>
sub    %dh,(%eax)
and    %bh,0x656e6f20
and    %ch,0x61(%eax)
insb   (%dx),%es:(%edi)
data16
and    %dh,0x63(%ebx)
jb     8061d11 <_IO_stdin_used+0x3b6d>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     8061d1c <_IO_stdin_used+0x3b78>
sub    %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cs cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x2d6f6e2d,%eax
imul   $0x70,0x79(%ebp),%esp
popa
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     8061d0a <_IO_stdin_used+0x3b66>
jae    8061d51 <_IO_stdin_used+0x3bad>
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
arpl   %sp,0x70(%ecx)
and    %ch,0x65(%ebx)
jns    8061d6b <_IO_stdin_used+0x3bc7>
popa
and    %ch,%fs:0x6e(%ecx)
imul   $0x696e6965,0x64(%edi,%ebp,1),%esi
je     8061d2a <_IO_stdin_used+0x3b86>
jae    8061d80 <_IO_stdin_used+0x3bdc>
jb     8061d77 <_IO_stdin_used+0x3bd3>
outsb  %ds:(%esi),(%dx)
addr16 jae 8061d40 <_IO_stdin_used+0x3b9c>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%esi)
cs cs cs cs cs cs and %ah,%cs:(%eax)
20
sub    $0x6c6f662d,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8061d59 <_IO_stdin_used+0x3bb5>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%eax,%ebp,2)
and    %al,0x20(%esi)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    8061d79 <_IO_stdin_used+0x3bd5>
imul   $0x6920,0x73(%ebp,%eiz,2),%bp
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6e(%ecx)
jo     8061ddf <_IO_stdin_used+0x3c3b>
je     8061d8c <_IO_stdin_used+0x3be8>
imul   $0x7369,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs fs or %cs:%fs:%gs:(%edx),%cl
or     (%eax),%ah
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %esp
or     %cl,0x8(%ecx,%ecx,2)
dec    %ecx
dec    %esi
or     %cl,0x45(%esi)
or     %al,0x20(%ebp)
inc    %ebp
or     %al,0x44(%ebp)
or     %al,0x8(%ecx,%ecx,2)
dec    %ecx
push   %esp
or     %dl,0x8(%ecx,%ecx,2)
dec    %ecx
dec    %esi
or     %cl,0x47(%esi)
or     %al,0xa(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%eax,%ebp,2)
jae    8061e7d <_IO_stdin_used+0x3cd9>
and    %ch,0x65(%ebx)
jns    8061e90 <_IO_stdin_used+0x3cec>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
gs imul $0x20747865,%fs:%gs:0x74(%eax,%eiz,1),%esi
20
bound  %esp,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%di)
je     8061ea6 <_IO_stdin_used+0x3d02>
jb     8061ea8 <_IO_stdin_used+0x3d04>
and    %cl,%fs:(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %gs:(%eax),%ah
popa
je     8061e87 <_IO_stdin_used+0x3ce3>
je     8061ed1 <_IO_stdin_used+0x3d2d>
and    %ah,%gs:0x6f(%edx)
je     8061ee3 <_IO_stdin_used+0x3d3f>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x63(%ebx)
jb     8061ee2 <_IO_stdin_used+0x3d3e>
outsb  %gs:(%esi),(%dx)
or     %cs:(%edx),%cl
and    %dl,0x69(%edx)
addr16 push $0x72724174
outsl  %ds:(%esi),(%dx)
ja     8061eae <_IO_stdin_used+0x3d0a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x2020206c,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    8061f17 <_IO_stdin_used+0x3d73>
and    %ah,0x75(%ebx)
jb     8061f2a <_IO_stdin_used+0x3d86>
outsl  %ds:(%esi),(%dx)
jb     8061eda <_IO_stdin_used+0x3d36>
jb     8061f25 <_IO_stdin_used+0x3d81>
addr16 push $0x6e6f2074
and    %ah,%gs:0x68(%ebx)
popa
jb     8061f2a <_IO_stdin_used+0x3d86>
arpl   %si,0x72(%ebp,%eiz,2)
or     %cs:(%eax),%ah
dec    %esp
gs
data16
je     8061f16 <_IO_stdin_used+0x3d72>
jb     8061f49 <_IO_stdin_used+0x3da5>
outsl  %ds:(%esi),(%dx)
ja     8061efa <_IO_stdin_used+0x3d56>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20202068,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    8061f64 <_IO_stdin_used+0x3dc0>
and    %ah,0x75(%ebx)
jb     8061f77 <_IO_stdin_used+0x3dd3>
outsl  %ds:(%esi),(%dx)
jb     8061f27 <_IO_stdin_used+0x3d83>
insb   (%dx),%es:(%edi)
gs
data16
je     8061f2c <_IO_stdin_used+0x3d88>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x68(%ebx)
popa
jb     8061f76 <_IO_stdin_used+0x3dd2>
arpl   %si,0x72(%ebp,%eiz,2)
or     %cs:(%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x68676952,%eax
je     8061f68 <_IO_stdin_used+0x3dc4>
jb     8061f9b <_IO_stdin_used+0x3df7>
outsl  %ds:(%esi),(%dx)
ja     8061f4c <_IO_stdin_used+0x3da8>
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x68676952,%eax
je     8061f78 <_IO_stdin_used+0x3dd4>
jb     8061fab <_IO_stdin_used+0x3e07>
outsl  %ds:(%esi),(%dx)
ja     8061f5c <_IO_stdin_used+0x3db8>
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20202077,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    8061fb0 <_IO_stdin_used+0x3e0c>
and    %ah,0x75(%ebx)
jb     8061fc3 <_IO_stdin_used+0x3e1f>
outsl  %ds:(%esi),(%dx)
jb     8061f73 <_IO_stdin_used+0x3dcf>
jb     8061fbe <_IO_stdin_used+0x3e1a>
addr16 push $0x6e6f2074
and    %dh,%gs:0x6f(%edi)
jb     8061fc5 <_IO_stdin_used+0x3e21>
or     %cs:(%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x7466654c,%eax
inc    %ecx
jb     8061fe2 <_IO_stdin_used+0x3e3e>
outsl  %ds:(%esi),(%dx)
ja     8061f93 <_IO_stdin_used+0x3def>
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x7466654c,%eax
inc    %ecx
jb     8061ff2 <_IO_stdin_used+0x3e4e>
outsl  %ds:(%esi),(%dx)
ja     8061fa3 <_IO_stdin_used+0x3dff>
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x20202062,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    8061ff8 <_IO_stdin_used+0x3e54>
and    %ah,0x75(%ebx)
jb     806200b <_IO_stdin_used+0x3e67>
outsl  %ds:(%esi),(%dx)
jb     8061fbb <_IO_stdin_used+0x3e17>
insb   (%dx),%es:(%edi)
gs
data16
je     8061fc0 <_IO_stdin_used+0x3e1c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%edi)
jb     806200c <_IO_stdin_used+0x3e68>
or     %cs:(%eax),%ah
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20202030,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    806203f <_IO_stdin_used+0x3e9b>
and    %ah,0x75(%ebx)
jb     8062052 <_IO_stdin_used+0x3eae>
outsl  %ds:(%esi),(%dx)
jb     8062002 <_IO_stdin_used+0x3e5e>
je     8062053 <_IO_stdin_used+0x3eaf>
and    %dh,0x74(%ebx)
popa
jb     806205e <_IO_stdin_used+0x3eba>
and    %ch,0x66(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
inc    %ebp
dec    %esi
inc    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x20202024,%eax
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    8062089 <_IO_stdin_used+0x3ee5>
and    %ah,0x75(%ebx)
jb     806209c <_IO_stdin_used+0x3ef8>
outsl  %ds:(%esi),(%dx)
jb     806204c <_IO_stdin_used+0x3ea8>
je     806209d <_IO_stdin_used+0x3ef9>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     80620d3 <_IO_stdin_used+0x3f2f>
and    %ah,0x68(%ebx)
popa
jb     8062094 <_IO_stdin_used+0x3ef0>
je     80620e5 <_IO_stdin_used+0x3f41>
and    %ch,0x66(%ebp,%eiz,2)
je     806209c <_IO_stdin_used+0x3ef8>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x75(%ebx)
jb     80620f6 <_IO_stdin_used+0x3f52>
outsl  %ds:(%esi),(%dx)
jb     80620b4 <_IO_stdin_used+0x3f10>
or     (%eax),%ah
inc    %esp
inc    %ebp
dec    %esp
inc    %ebp
push   %esp
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20202078,%eax
and    %ah,(%eax)
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     806211e <_IO_stdin_used+0x3f7a>
and    %ah,0x68(%ebx)
popa
jb     80620df <_IO_stdin_used+0x3f3b>
jne    806212f <_IO_stdin_used+0x3f8b>
fs
gs
jb     80620e5 <_IO_stdin_used+0x3f41>
arpl   %si,0x72(%ebp)
jae    8062139 <_IO_stdin_used+0x3f95>
jb     80620fa <_IO_stdin_used+0x3f56>
or     (%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x4b434142,%eax
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x4b434142,%eax
push   %ebx
push   %eax
inc    %ecx
inc    %ebx
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%ebp,%eiz,2)
gs
je     8062164 <_IO_stdin_used+0x3fc0>
and    %dh,0x6f(%edi)
jb     8062168 <_IO_stdin_used+0x3fc4>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
gs
data16
je     806212d <_IO_stdin_used+0x3f89>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x75(%ebx)
jb     8062187 <_IO_stdin_used+0x3fe3>
outsl  %ds:(%esi),(%dx)
jb     8062145 <_IO_stdin_used+0x3fa1>
or     (%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x454c4544,%eax
push   %esp
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x454c4544,%eax
push   %esp
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
sub    $0x20202058,%eax
and    %ah,(%eax)
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     80621af <_IO_stdin_used+0x400b>
and    %dh,0x6f(%edi)
jb     80621b3 <_IO_stdin_used+0x400f>
and    %dh,0x6e(%ebp)
fs
gs
jb     8062176 <_IO_stdin_used+0x3fd2>
arpl   %si,0x72(%ebp)
jae    80621ca <_IO_stdin_used+0x4026>
jb     806218b <_IO_stdin_used+0x3fe7>
or     (%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x20202055,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
push   %ebx
inc    %ebx
and    %ch,(%eax)
dec    %ebp
push   %ebx
sub    $0x20534f44,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    80621aa <_IO_stdin_used+0x4006>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%ebp,%eiz,2)
gs
je     80621f5 <_IO_stdin_used+0x4051>
and    %ah,0x6e(%ebp)
je     80621fe <_IO_stdin_used+0x405a>
jb     80621fc <_IO_stdin_used+0x4058>
and    %ch,0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
push   %ebp
jo     80621e3 <_IO_stdin_used+0x403f>
jb     8062216 <_IO_stdin_used+0x4072>
outsl  %ds:(%esi),(%dx)
ja     80621c7 <_IO_stdin_used+0x4023>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x2020206b,%eax
and    %ah,(%eax)
push   %edx
gs
je     8062240 <_IO_stdin_used+0x409c>
imul   $0x72702065,0x76(%ebp),%esp
gs
jbe    8062241 <_IO_stdin_used+0x409d>
outsl  %ds:(%esi),(%dx)
jne    806224e <_IO_stdin_used+0x40aa>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
inc    %esp
outsl  %ds:(%esi),(%dx)
ja     806225d <_IO_stdin_used+0x40b9>
inc    %ecx
jb     8062264 <_IO_stdin_used+0x40c0>
outsl  %ds:(%esi),(%dx)
ja     8062215 <_IO_stdin_used+0x4071>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x2020206a,%eax
and    %ah,(%eax)
push   %edx
gs
je     806228c <_IO_stdin_used+0x40e8>
imul   $0x656e2065,0x76(%ebp),%esp
js     8062297 <_IO_stdin_used+0x40f3>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%ah
push   %esp
inc    %ecx
inc    %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     80622cf <_IO_stdin_used+0x412b>
gs
je     80622cb <_IO_stdin_used+0x4127>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%esi)
and    %ah,0x79(%ebx)
arpl   %bp,0x2e(%ebp,%eiz,2)
or     (%eax),%ah
push   %ebx
dec    %eax
dec    %ecx
inc    %esi
push   %esp
sub    $0x20424154,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%ebp)
inc    %ebx
sub    $0x20424154,%eax
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8062316 <_IO_stdin_used+0x4172>
gs
je     8062312 <_IO_stdin_used+0x416e>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%esi)
and    %dh,0x65(%edx)
jbe    8062322 <_IO_stdin_used+0x417e>
jb     8062332 <_IO_stdin_used+0x418e>
and    %ah,%gs:0x79(%ebx)
arpl   %bp,0x2e(%ebp,%eiz,2)
or     (%eax),%ah
arpl   %si,0x6c(%edx,%esi,2)
sub    $0x2020204c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8062365 <_IO_stdin_used+0x41c1>
gs
je     8062361 <_IO_stdin_used+0x41bd>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x6c6c6120,0x74(%ebx),%esi
or     %cs:(%edx),%cl
or     (%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806233b <_IO_stdin_used+0x4197>
jae    8062382 <_IO_stdin_used+0x41de>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%eax,%ebp,2)
je     8062348 <_IO_stdin_used+0x41a4>
imul   $0x6f70,0x20(%ebp,%eiz,2),%bp
jae    806239a <_IO_stdin_used+0x41f6>
je     806239c <_IO_stdin_used+0x41f8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806235f <_IO_stdin_used+0x41bb>
jae    80623a6 <_IO_stdin_used+0x4202>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
imul   $0x20676e69,0x6e(%bp),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062380 <_IO_stdin_used+0x41dc>
jae    80623c7 <_IO_stdin_used+0x4223>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,0x6143006e
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806239e <_IO_stdin_used+0x41fa>
jae    80623e5 <_IO_stdin_used+0x4241>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x74(%ebp,%eiz,2)
gs
jb     8062405 <_IO_stdin_used+0x4261>
imul   $0x6c20676e,0x69(%esi),%ebp
outsb  %gs:(%esi),(%dx)
addr16 je 806240c <_IO_stdin_used+0x4268>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x6e(%edi,%ebp,2)
daa
je     80623d3 <_IO_stdin_used+0x422f>
imul   $0x77,0x6f(%esi),%ebp
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 8062426 <_IO_stdin_used+0x4282>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x53(%ebp,%eax,2)
push   %ebx
inc    %ecx
dec    %esi
push   %ebx
dec    %ecx
inc    %ebp
dec    %esi
inc    %esp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
push   %ebx
add    %cl,0x53(%ebp,%eax,2)
push   %ebx
inc    %ecx
dec    %esi
push   %ebx
dec    %ecx
dec    %ebp
dec    %ecx
inc    %esp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
push   %ebx
add    %dh,(%eax)
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
cmp    0x3f(%ebx),%ebx
and    %esp,(%edx)
daa
and    0x2b2a2928,%esp
and    %al,(%eax)
and    $0x20732a,%eax
sbb    0x6d(%ebx),%ebx
add    %cl,0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    8062437 <_IO_stdin_used+0x4293>
je     806248e <_IO_stdin_used+0x42ea>
jb     8062489 <_IO_stdin_used+0x42e5>
gs and %ch,%fs:%gs:0x66(%edi)
data16
add    %al,0x61(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,0x6c(%ebp)
popa
je     8062494 <_IO_stdin_used+0x42f0>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    806243b <_IO_stdin_used+0x4297>
das
fs
gs
jbe    806246f <_IO_stdin_used+0x42cb>
je     80624b6 <_IO_stdin_used+0x4312>
jns    8062444 <_IO_stdin_used+0x42a0>
and    %ah,(%eax)
sub    %dh,0x72(%eax)
gs
jae    80624bf <_IO_stdin_used+0x431b>
and    %dl,0x45(%edx)
push   %esp
push   %ebp
push   %edx
dec    %esi
sub    %eax,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806247c <_IO_stdin_used+0x42d8>
jae    80624c3 <_IO_stdin_used+0x431f>
imul   $0x74,%gs:(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %dh,0x74(%ebx)
popa
jb     80624dd <_IO_stdin_used+0x4339>
and    %dh,0x6f(%eax)
jae    80624d7 <_IO_stdin_used+0x4333>
je     80624d9 <_IO_stdin_used+0x4335>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806249a <_IO_stdin_used+0x42f6>
arpl   %si,0x65(%edx)
popa
je     80624e5 <_IO_stdin_used+0x4341>
and    %dh,0x69(%eax)
jo     80624ea <_IO_stdin_used+0x4346>
add    %cl,0x6e(%ecx)
jbe    80624eb <_IO_stdin_used+0x4347>
insb   (%dx),%es:(%edi)
imul   $0x206b7261,0x6d(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
gs
je     806250b <_IO_stdin_used+0x4367>
gs
jb     806249a <_IO_stdin_used+0x42f6>
dec    %ebp
popa
jb     8062509 <_IO_stdin_used+0x4365>
and    %ch,0x6f(%esi)
je     80624c3 <_IO_stdin_used+0x431f>
jae    806250a <_IO_stdin_used+0x4366>
je     80624a7 <_IO_stdin_used+0x4303>
dec    %ebp
popa
jb     8062516 <_IO_stdin_used+0x4372>
and    %ch,0x6f(%esi)
je     80624d0 <_IO_stdin_used+0x432c>
imul   $0x72727563,0x20(%esi),%ebp
outsb  %gs:(%esi),(%dx)
je     80624db <_IO_stdin_used+0x4337>
imul   $0x6f6c,0x0(%ebp,%eiz,2),%bp
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x75(%ebx)
jo     806253d <_IO_stdin_used+0x4399>
outsl  %ds:(%esi),(%dx)
jb     8062544 <_IO_stdin_used+0x43a0>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     80624f8 <_IO_stdin_used+0x4354>
popa
jbe    806253c <_IO_stdin_used+0x4398>
imul   $0x656c,0x62(%ecx,%eiz,2),%ebp
add    %dl,0x6f(%eax)
jae    8062551 <_IO_stdin_used+0x43ad>
je     8062553 <_IO_stdin_used+0x43af>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     8062514 <_IO_stdin_used+0x4370>
popa
je     8062517 <_IO_stdin_used+0x4373>
jae    806255c <_IO_stdin_used+0x43b8>
jb     8062560 <_IO_stdin_used+0x43bc>
outsb  %gs:(%esi),(%dx)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x64
push   %eax
outsl  %ds:(%esi),(%dx)
jae    8062575 <_IO_stdin_used+0x43d1>
je     8062577 <_IO_stdin_used+0x43d3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     8062538 <_IO_stdin_used+0x4394>
popa
je     806253b <_IO_stdin_used+0x4397>
jae    8062580 <_IO_stdin_used+0x43dc>
jb     8062584 <_IO_stdin_used+0x43e0>
outsb  %gs:(%esi),(%dx)
and    %dh,0x6f(%eax)
jae    806258f <_IO_stdin_used+0x43eb>
je     8062591 <_IO_stdin_used+0x43ed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73
dec    %eax
outsl  %ds:(%esi),(%dx)
jb     806259d <_IO_stdin_used+0x43f9>
jp     80625a5 <_IO_stdin_used+0x4401>
outsb  %ds:(%esi),(%dx)
je     806259a <_IO_stdin_used+0x43f6>
insb   (%dx),%es:(%edi)
and    %dh,0x68(%ebx)
imul   $0x20732520,0x74(%esi),%esp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x63(%ebx)
jb     80625b0 <_IO_stdin_used+0x440c>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     80625bb <_IO_stdin_used+0x4417>
add    %al,0x6f(%ebx)
jo     80625d1 <_IO_stdin_used+0x442d>
jb     80625c3 <_IO_stdin_used+0x441f>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    %edi,(%ecx)
cmp    %dh,0x32313032(,%ebp,1)
and    %cl,0x61(%ebp)
jb     80625db <_IO_stdin_used+0x4437>
and    %cl,0x75(%esi)
fs
gs
insb   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     (%edx),%cl
add    %ch,0x73(%ebp,%eiz,2)
jae    80625a1 <_IO_stdin_used+0x43fd>
arpl   %bp,0x6d(%edi)
gs
jae    80625a7 <_IO_stdin_used+0x4403>
ja     80625f2 <_IO_stdin_used+0x444e>
je     80625f3 <_IO_stdin_used+0x444f>
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     806260a <_IO_stdin_used+0x4466>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8062609 <_IO_stdin_used+0x4465>
outsb  %ds:(%esi),(%dx)
je     80625c7 <_IO_stdin_used+0x4423>
jo     806260e <_IO_stdin_used+0x446a>
jb     8062618 <_IO_stdin_used+0x4474>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%eax),%al
add    %al,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     80625e0 <_IO_stdin_used+0x443c>
imul   $0x616d726f,0x66(%esi),%ebp
je     8062632 <_IO_stdin_used+0x448e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    8062645 <_IO_stdin_used+0x44a1>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jae    80625fc <_IO_stdin_used+0x4458>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8062654 <_IO_stdin_used+0x44b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0xa,%al
add    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs and %dl,%fs:%gs:0x45(%edx)
inc    %ecx
inc    %esp
dec    %ebp
inc    %ebp
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ebp,%eiz,2)
jae    8062636 <_IO_stdin_used+0x4492>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8062689 <_IO_stdin_used+0x44e5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %cl,0x6f(%eax)
insl   (%dx),%es:(%edi)
gs
jo     806268f <_IO_stdin_used+0x44eb>
cmp    %gs:(%bx,%si),%ah
push   $0x3a707474
das
das
ja     80626b2 <_IO_stdin_used+0x450e>
ja     806266b <_IO_stdin_used+0x44c7>
addr16 jb 80626a5 <_IO_stdin_used+0x4501>
outsb  %gs:(%esi),(%dx)
ja     80626b3 <_IO_stdin_used+0x450f>
outsl  %ds:(%esi),(%dx)
fs
jae    80626b7 <_IO_stdin_used+0x4513>
data16
je     80626c2 <_IO_stdin_used+0x451e>
popa
jb     80626b3 <_IO_stdin_used+0x450f>
arpl   %bp,%cs:0x6d(%edi)
das
insb   (%dx),%es:(%edi)
gs
jae    80626ca <_IO_stdin_used+0x4526>
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x756d2022
jae    80626d7 <_IO_stdin_used+0x4533>
and    %ah,0x65(%edx)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80626d3 <_IO_stdin_used+0x452f>
and    %ah,%fs:0x79(%edx)
and    %dh,(%ecx)
and    %ch,0x72(%edi)
and    %dh,(%edx)
and    %ah,0x68(%ebx)
popa
jb     80626f2 <_IO_stdin_used+0x454e>
add    %cl,0x6e(%ecx)
jo     80626f9 <_IO_stdin_used+0x4555>
je     80626a6 <_IO_stdin_used+0x4502>
imul   $0x20746f6e,0x20(%ebx),%esi
popa
and    %dh,0x69(%eax)
jo     80626f8 <_IO_stdin_used+0x4554>
add    %cl,0x67(%edi,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     8062709 <_IO_stdin_used+0x4565>
popa
fs
jns    80626c8 <_IO_stdin_used+0x4524>
imul   $0x657375,0x20(%esi),%ebp
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x67(%edi,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x67(%edi,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x6a002273,%eax
add    %cl,0x6e(%ecx)
jbe    8062730 <_IO_stdin_used+0x458c>
insb   (%dx),%es:(%edi)
imul   $0x20656e69,0x6c(%eax,%eiz,1),%esp
data16
jb     806273c <_IO_stdin_used+0x4598>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
jbe    8062746 <_IO_stdin_used+0x45a2>
insb   (%dx),%es:(%edi)
imul   $0x20656e69,0x6c(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jne    806275e <_IO_stdin_used+0x45ba>
bound  %esp,0x72(%ebp)
add    %ch,(%esi)
and    $0x643630,%eax
and    (%eax),%eax
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8062762 <_IO_stdin_used+0x45be>
insb   (%dx),%es:(%edi)
imul   $0x6d756c6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%esi)
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
jbe    806277a <_IO_stdin_used+0x45d6>
insb   (%dx),%es:(%edi)
imul   $0x6d756c6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %cl,0x6f(%eax)
jb     8062798 <_IO_stdin_used+0x45f4>
jp     80627a0 <_IO_stdin_used+0x45fc>
outsb  %ds:(%esi),(%dx)
je     8062795 <_IO_stdin_used+0x45f1>
insb   (%dx),%es:(%edi)
and    %dh,0x68(%ebx)
imul   $0x20642520,0x74(%esi),%esp
arpl   %bp,0x6c(%edi)
jne    80627b1 <_IO_stdin_used+0x460d>
outsb  %ds:(%esi),(%dx)
jae    8062747 <_IO_stdin_used+0x45a3>
je     80627aa <_IO_stdin_used+0x4606>
addr16 jae 806276c <_IO_stdin_used+0x45c8>
jae    80627c3 <_IO_stdin_used+0x461f>
jo     80627c0 <_IO_stdin_used+0x461c>
outsl  %ds:(%esi),(%dx)
jb     80627c7 <_IO_stdin_used+0x4623>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     806277b <_IO_stdin_used+0x45d7>
popa
jbe    80627bf <_IO_stdin_used+0x461b>
imul   $0x5400656c,0x62(%ecx,%eiz,2),%ebp
popa
addr16 jae 806278a <_IO_stdin_used+0x45e6>
imul   $0x2522,0x20(%ebp,%eiz,2),%bp
jae    8062795 <_IO_stdin_used+0x45f1>
add    %ch,0x73(%ebp,%eiz,2)
jae    8062799 <_IO_stdin_used+0x45f5>
add    %ah,(%eax)
sub    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
and    %al,(%eax)
jb     80627e9 <_IO_stdin_used+0x4645>
addr16 jne 80627f3 <_IO_stdin_used+0x464f>
popa
jb     80627aa <_IO_stdin_used+0x4606>
gs
js     80627fd <_IO_stdin_used+0x4659>
jb     80627f4 <_IO_stdin_used+0x4650>
jae    8062804 <_IO_stdin_used+0x4660>
imul   $0xa2973,0x6e(%edi),%ebp
and    $0x76650064,%eax
gs
jb     8062819 <_IO_stdin_used+0x4675>
and    %ah,0x70732064
popa
arpl   %sp,0x73(%ebp)
add    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8062815 <_IO_stdin_used+0x4671>
jae    80627d2 <_IO_stdin_used+0x462e>
and    $0x73550073,%eax
and    %ah,%gs:(%edx)
push   $0x6f662022
jb     80627e1 <_IO_stdin_used+0x463d>
push   $0x706c65
add    %al,(%eax)
enter  $0x584,$0x8
xchg   %eax,%ebx
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x27f7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x17f7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %bh,%al
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6ff7fa7c(%ebx)
test   %al,0x5849308
or     %dl,-0x6cf7fa7c(%ebx)
test   %al,0x584b808
or     %dl,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    806291e <_IO_stdin_used+0x477a>
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
jno    8062936 <_IO_stdin_used+0x4792>
imul   $0x66612064,0x65(%edx),%esi
je     806292f <_IO_stdin_used+0x478b>
jb     80628ec <_IO_stdin_used+0x4748>
and    $0x2d2d0073,%eax
and    $0x252d0073,%eax
arpl   %sp,(%eax)
sub    %ch,0x2973252d
add    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
jno    8062962 <_IO_stdin_used+0x47be>
imul   $0x66612064,0x65(%edx),%esi
je     806295b <_IO_stdin_used+0x47b7>
jb     8062918 <_IO_stdin_used+0x4774>
and    $0x6f4e0073,%eax
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsl  %ds:(%esi),(%dx)
jo     806297a <_IO_stdin_used+0x47d6>
imul   $0x6e614300,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062931 <_IO_stdin_used+0x478d>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x68(%si)
and    %ah,%gs:0x706f2073
je     806298c <_IO_stdin_used+0x47e8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806294d <_IO_stdin_used+0x47a9>
jno    80629a4 <_IO_stdin_used+0x4800>
gs
jb     80629ab <_IO_stdin_used+0x4807>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x706f2073
je     80629a7 <_IO_stdin_used+0x4803>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   $0x73252065
and    %ch,0x70(%edi)
je     80629b8 <_IO_stdin_used+0x4814>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    80629c3 <_IO_stdin_used+0x481f>
and    %ch,%fs:0x6f(%esi)
je     806297d <_IO_stdin_used+0x47d9>
bound  %esp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80629cc <_IO_stdin_used+0x4828>
and    %ah,%fs:0x79(%edx)
and    %bh,0x25000000
jae    8062993 <_IO_stdin_used+0x47ef>
imul   $0x61206e61,0x20(%ebx),%esi
insl   (%dx),%es:(%edi)
bound  %ebp,0x67(%ecx)
jne    80629ef <_IO_stdin_used+0x484b>
jne    80629f5 <_IO_stdin_used+0x4851>
and    %ah,0x62(%ecx)
bound  %esi,0x65(%edx)
jbe    80629f3 <_IO_stdin_used+0x484f>
popa
je     80629f6 <_IO_stdin_used+0x4852>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
and    0x73(%ebp,%eiz,2),%ch
jae    80629b7 <_IO_stdin_used+0x4813>
sub    $0x6c65682d,%eax
jo     80629c0 <_IO_stdin_used+0x481c>
and    %ah,0x6f(%esi)
jb     80629c3 <_IO_stdin_used+0x481f>
push   $0x29706c65
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   $0x20657265
imul   $0x25206f6e,0x20(%ebx),%esi
jae    80629db <_IO_stdin_used+0x4837>
outsl  %ds:(%esi),(%dx)
jo     8062a32 <_IO_stdin_used+0x488e>
imul   $0x6c222820,0x6e(%edi),%ebp
gs
jae    8062a3b <_IO_stdin_used+0x4897>
and    %ch,0x6c65682d
jo     80629f2 <_IO_stdin_used+0x484e>
and    %ah,0x6f(%esi)
jb     80629f5 <_IO_stdin_used+0x4851>
push   $0x29706c65
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062a03 <_IO_stdin_used+0x485f>
jne    8062a58 <_IO_stdin_used+0x48b4>
and    %ah,%gs:(%edx)
sub    $0x6f20222b,%eax
jb     8062a0f <_IO_stdin_used+0x486b>
and    0x6620222d,%ch
outsl  %ds:(%esi),(%dx)
jb     8062a18 <_IO_stdin_used+0x4874>
popa
and    %dh,0x74(%ebx)
jb     8062a67 <_IO_stdin_used+0x48c3>
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     8062a6e <_IO_stdin_used+0x48ca>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8062a2e <_IO_stdin_used+0x488a>
jne    8062a83 <_IO_stdin_used+0x48df>
and    %ah,%gs:(%edx)
sub    $0x66202221,%eax
outsl  %ds:(%esi),(%dx)
jb     8062a3b <_IO_stdin_used+0x4897>
popa
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     8062a8c <_IO_stdin_used+0x48e8>
arpl   %sp,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8062a9c <_IO_stdin_used+0x48f8>
imul   $0x61655300,0x6e(%edi),%ebp
jb     8062a94 <_IO_stdin_used+0x48f0>
push   $0x696b7320
jo     8062aab <_IO_stdin_used+0x4907>
and    %ah,0x73(%ecx,%ebp,2)
jo     8062aaa <_IO_stdin_used+0x4906>
popa
jns    8062aa6 <_IO_stdin_used+0x4902>
and    %dh,%fs:0x63(%ebx)
jb     8062aac <_IO_stdin_used+0x4908>
outsb  %gs:(%esi),(%dx)
add    %al,0x73(%ecx)
jae    8062ac3 <_IO_stdin_used+0x491f>
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
je     8062aba <_IO_stdin_used+0x4916>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x7420746e,0x65(%edi),%esp
gs
jb     8062ace <_IO_stdin_used+0x492a>
imul   $0x7341006c,0x61(%esi),%ebp
jae    8062adf <_IO_stdin_used+0x493b>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6d(%ebp,%esi,2)
bound  %esp,(%eax)
je     8062ad9 <_IO_stdin_used+0x4935>
jb     8062ae3 <_IO_stdin_used+0x493f>
imul   $0x6f44006c,0x61(%esi),%ebp
outsb  %ds:(%esi),(%dx)
daa
je     8062aa1 <_IO_stdin_used+0x48fd>
jno    8062af8 <_IO_stdin_used+0x4954>
imul   $0x6e652074,0x61(%eax,%eiz,1),%esi
fs
sub    $0x662d666f,%eax
imul   $0x74697551,0x0(%ebp,%eiz,2),%ebp
and    %ah,0x74(%ecx)
and    %ah,0x6e(%ebp)
fs
sub    $0x662d666f,%eax
imul   $0x6e65704f,0x0(%ebp,%eiz,2),%ebp
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8062ad3 <_IO_stdin_used+0x492f>
jb     8062b1a <_IO_stdin_used+0x4976>
addr16 jne 8062b24 <_IO_stdin_used+0x4980>
popa
jb     8062adb <_IO_stdin_used+0x4937>
imul   $0x4f00,0x73(%ebp,%eiz,2),%bp
jo     8062b29 <_IO_stdin_used+0x4985>
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x75676572,%eax
insb   (%dx),%es:(%edi)
popa
jb     8062af7 <_IO_stdin_used+0x4953>
imul   $0x4200,0x73(%ebp,%eiz,2),%bp
popa
arpl   %bp,0x77(%ebx)
popa
jb     8062b49 <_IO_stdin_used+0x49a5>
jae    8062b07 <_IO_stdin_used+0x4963>
jae    8062b4c <_IO_stdin_used+0x49a8>
jb     8062b5a <_IO_stdin_used+0x49b6>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x6e674900,0x20(%edx,%edi,1),%esi
outsl  %ds:(%esi),(%dx)
jb     8062b61 <_IO_stdin_used+0x49bd>
and    %ah,0x61(%ebx)
jae    8062b66 <_IO_stdin_used+0x49c2>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%ebx)
popa
jb     8062b6d <_IO_stdin_used+0x49c9>
push   $0x54007365
popa
jb     8062b79 <_IO_stdin_used+0x49d5>
gs
je     8062b35 <_IO_stdin_used+0x4991>
insb   (%dx),%es:(%edi)
imul   $0x3000203a,0x65(%esi),%ebp
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
cs
sub    $0x6e6f4400,%eax
daa
je     8062b4f <_IO_stdin_used+0x49ab>
imul   $0x2079616c,%fs:0x70(%ebx),%esi
popa
and    %dh,0x74(%ebx)
popa
je     8062bb3 <_IO_stdin_used+0x4a0f>
jae    8062b60 <_IO_stdin_used+0x49bc>
arpl   %bp,0x6c(%edi)
jne    8062bb2 <_IO_stdin_used+0x4a0e>
outsb  %ds:(%esi),(%dx)
add    %al,0x73(%ecx,%ebp,2)
jo     8062bb8 <_IO_stdin_used+0x4a14>
popa
jns    8062b6f <_IO_stdin_used+0x49cb>
popa
and    %dh,0x74(%ebx)
popa
je     8062bcb <_IO_stdin_used+0x4a27>
jae    8062b78 <_IO_stdin_used+0x49d4>
arpl   %bp,0x6c(%edi)
jne    8062bca <_IO_stdin_used+0x4a26>
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
je     8062bc8 <_IO_stdin_used+0x4a24>
jb     8062bd7 <_IO_stdin_used+0x4a33>
jne    8062bd7 <_IO_stdin_used+0x4a33>
je     8062b89 <_IO_stdin_used+0x49e5>
sub    %ah,0x74(%ebx)
jb     8062bda <_IO_stdin_used+0x4a36>
sub    $0x65202943,%eax
js     8062bde <_IO_stdin_used+0x4a3a>
je     8062bea <_IO_stdin_used+0x4a46>
and    %ch,0x73(%ebp,%eiz,2)
jae    8062b7d <_IO_stdin_used+0x49d9>
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     8062ba3 <_IO_stdin_used+0x49ff>
jne    8062bf8 <_IO_stdin_used+0x4a54>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %edi
push   %eax
inc    %ebp
dec    %esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     8062bfe <_IO_stdin_used+0x4a5a>
jb     8062b9b <_IO_stdin_used+0x49f7>
push   %ebp
jae    8062c03 <_IO_stdin_used+0x4a5f>
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x53(%ebp,%eax,2)
push   %ebx
dec    %edi
push   %eax
inc    %ebp
dec    %esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     8062c16 <_IO_stdin_used+0x4a72>
jb     8062bb3 <_IO_stdin_used+0x4a0f>
push   %ebx
push   $0x2074726f
jo     8062c2d <_IO_stdin_used+0x4a89>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8062c33 <_IO_stdin_used+0x4a8f>
add    %cl,0x65(%ebp)
imul   $0x6f727020,%fs:0x6d(%ebp),%esi
insl   (%dx),%es:(%edi)
jo     8062c41 <_IO_stdin_used+0x4a9d>
add    %cl,0x6e(%edi,%ebp,2)
and    %dh,0x72(%bx,%si)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8062c4d <_IO_stdin_used+0x4aa9>
add    %al,0x6e(%edi,%ebp,2)
daa
je     8062c00 <_IO_stdin_used+0x4a5c>
jne    8062c55 <_IO_stdin_used+0x4ab1>
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    8062bf1 <_IO_stdin_used+0x4a4d>
push   %ebp
jae    8062c59 <_IO_stdin_used+0x4ab5>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    8062c02 <_IO_stdin_used+0x4a5e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
add    %cl,0x67(%edi,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8062c92 <_IO_stdin_used+0x4aee>
cmp    (%eax),%ah
add    %cl,0x65(%esi)
jbe    8062c8a <_IO_stdin_used+0x4ae6>
jb     8062c47 <_IO_stdin_used+0x4aa3>
jb     8062c92 <_IO_stdin_used+0x4aee>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,0x73(%ecx,%ebp,2)
jo     8062ca6 <_IO_stdin_used+0x4b02>
popa
jns    8062c5d <_IO_stdin_used+0x4ab9>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x6c,(%eax),%esp
imul   $0x71530073,0x65(%esi),%ebp
jne    8062cb6 <_IO_stdin_used+0x4b12>
gs
jp     8062cb9 <_IO_stdin_used+0x4b15>
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     8062cc3 <_IO_stdin_used+0x4b1f>
jo     8062cc8 <_IO_stdin_used+0x4b24>
and    %ah,%gs:0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x6c,(%eax),%esp
imul   $0x6f460073,0x65(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6e(%edi,%ebp,2)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
gs
jae    8062c7a <_IO_stdin_used+0x4ad6>
inc    %ebx
push   $0x6c20706f
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
gs
jae    8062c8a <_IO_stdin_used+0x4ae6>
je     8062ced <_IO_stdin_used+0x4b49>
cmp    (%bx,%si),%ah
add    %dh,0x67(%ecx,%eiz,2)
jae    8062cb5 <_IO_stdin_used+0x4b11>
imul   $0x20,0x3a(%ebp,%eiz,2),%bp
inc    %edx
popa
arpl   %bp,0x73(%ebx)
jo     8062d04 <_IO_stdin_used+0x4b60>
arpl   %sp,0x73(%ebp)
and    %ah,0x61(%ebx)
jne    8062d1e <_IO_stdin_used+0x4b7a>
and    %ch,%gs:0x76(%edi)
gs
jb     8062d25 <_IO_stdin_used+0x4b81>
je     8062d26 <_IO_stdin_used+0x4b82>
imul   $0x69725000,0x65(%ebx),%ebp
outsb  %ds:(%esi),(%dx)
je     8062cde <_IO_stdin_used+0x4b3a>
bound  %esp,0x63(%ecx)
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x20(%ebp)
popa
jae    8062ceb <_IO_stdin_used+0x4b47>
pop    %esi
dec    %eax
add    %dl,0x62(%ecx,%eiz,2)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8062d4a <_IO_stdin_used+0x4ba6>
cmp    (%eax),%ah
add    %dh,(%eax)
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
sub    $0x0,%al
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     8062d0c <_IO_stdin_used+0x4b68>
jne    8062d61 <_IO_stdin_used+0x4bbd>
and    %ch,%gs:0x6e(%ecx)
imul   $0x696e6965,0x64(%edi,%ebp,1),%esi
je     8062d1c <_IO_stdin_used+0x4b78>
jae    8062d72 <_IO_stdin_used+0x4bce>
jb     8062d69 <_IO_stdin_used+0x4bc5>
outsb  %ds:(%esi),(%dx)
addr16 jae 8062d04 <_IO_stdin_used+0x4b60>
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     8062d7f <_IO_stdin_used+0x4bdb>
popa
jb     8062d6f <_IO_stdin_used+0x4bcb>
and    %dh,0x63(%ebx)
jb     8062d7f <_IO_stdin_used+0x4bdb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x72635300,0x20(%edx,%edi,1),%esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8062d49 <_IO_stdin_used+0x4ba5>
jae    8062d94 <_IO_stdin_used+0x4bf0>
jp     8062d92 <_IO_stdin_used+0x4bee>
cmp    (%eax),%ah
add    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8062d9a <_IO_stdin_used+0x4bf6>
jae    8062d71 <_IO_stdin_used+0x4bcd>
and    %al,(%eax)
push   %ebx
push   $0x7420776f
imul   $0x66612073,0x65(%esp,%eiz,2),%ebp
je     8062dae <_IO_stdin_used+0x4c0a>
jb     8062d6b <_IO_stdin_used+0x4bc7>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%eax)
jb     8062dc4 <_IO_stdin_used+0x4c20>
jp     8062dcc <_IO_stdin_used+0x4c28>
outsb  %ds:(%esi),(%dx)
je     8062dc1 <_IO_stdin_used+0x4c1d>
insb   (%dx),%es:(%edi)
and    %dh,0x68(%ebx)
imul   $0x3000203a,0x74(%esi),%esp
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
add    %dl,%cs:0x73(%ebp)
and    %ch,%gs:0x65(%ebx)
jns    8062dee <_IO_stdin_used+0x4c4a>
popa
and    %ch,%fs:0x6f(%ebp)
fs add %al,%fs:%gs:0x6e(%edi,%ebp,2)
daa
je     8062dac <_IO_stdin_used+0x4c08>
jne    8062e01 <_IO_stdin_used+0x4c5d>
and    %ch,%gs:0x65(%ebx)
jns    8062e04 <_IO_stdin_used+0x4c60>
popa
and    %ch,%fs:0x6f(%ebp)
fs add %al,%fs:%gs:0x20(%esi)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8062e20 <_IO_stdin_used+0x4c7c>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x73(%ebp)
gs
sub    $0x6b636162,%eax
jae    8062e2e <_IO_stdin_used+0x4c8a>
popa
jae    8062e2d <_IO_stdin_used+0x4c89>
add    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8062dfa <_IO_stdin_used+0x4c56>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6c(%edi)
fs
sub    $0x746f62,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7079656b,%eax
popa
add    %dh,%fs:0x68(%ebx)
imul   $0x6c697400,0x74(%esi),%esp
fs add %dh,%fs:%gs:0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8062e5a <_IO_stdin_used+0x4cb6>
jae    8062df7 <_IO_stdin_used+0x4c53>
ja     8062e62 <_IO_stdin_used+0x4cbe>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8062dfe <_IO_stdin_used+0x4c5a>
insl   (%dx),%es:(%edi)
popa
js     8062e2f <_IO_stdin_used+0x4c8b>
outsw  %ds:(%esi),(%dx)
jb     8062e7d <_IO_stdin_used+0x4cd9>
sub    $0x6f726373,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,0x6f(%esi)
sub    $0x74696e69,%eax
add    %dh,0x62(%ecx,%eiz,2)
jae    8062e1b <_IO_stdin_used+0x4c77>
push   $0x74696c69
gs
sub    $0x65726e75,%eax
popa
add    %dh,%fs:0x65(%esi)
jb     8062ea0 <_IO_stdin_used+0x4cfc>
imul   $0x646e7500,0x6e(%edi),%ebp
gs
jb     8062ea3 <_IO_stdin_used+0x4cff>
imul   $0x6570732d,0x65(%esi),%ebp
arpl   %bp,0x61(%ecx)
insb   (%dx),%es:(%edi)
add    %dh,0x67(%ecx,%eiz,2)
sub    $0x656c6966,%eax
add    %ah,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8062e7e <_IO_stdin_used+0x4cda>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 sub $0x656e696c,%eax
jae    8062e5c <_IO_stdin_used+0x4cb8>
jae    8062ecf <_IO_stdin_used+0x4d2b>
jne    8062ec5 <_IO_stdin_used+0x4d21>
gs
jp     8062ec8 <_IO_stdin_used+0x4d24>
sub    $0x6e616c62,%eax
imul   $0x73,0x656e696c,%ebp
add    %dh,0x61(%edx)
ja     8062ea1 <_IO_stdin_used+0x4cfd>
arpl   %bp,0x6e(%edi)
je     8062eeb <_IO_stdin_used+0x4d47>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
sub    $0x72616863,%eax
jae    8062e82 <_IO_stdin_used+0x4cde>
jno    8062ef9 <_IO_stdin_used+0x4d55>
imul   $0x6c697300,0x74(%ebp),%esp
outsb  %gs:(%esi),(%dx)
je     8062e8f <_IO_stdin_used+0x4ceb>
dec    %esp
dec    %edi
inc    %edi
sub    $0x454c4946,%eax
add    %ch,0x67(%edi,%ebp,2)
sub    $0x656c6966,%eax
add    %ch,0x6e(%ecx,%ebp,2)
gs
sub    $0x626d756e,%eax
gs
jb     8062f20 <_IO_stdin_used+0x4d7c>
add    %ch,0x6e(%edi,%ebp,2)
addr16 sub $0x6d6f7270,%eax
jo     8062f2d <_IO_stdin_used+0x4d89>
add    %ch,0x6f(%esi)
sub    $0x7373656c,%eax
outsl  %ds:(%esi),(%dx)
jo     8062f29 <_IO_stdin_used+0x4d85>
outsb  %ds:(%esi),(%dx)
add    %dh,0x75(%ecx)
imul   $0x6e692d6e,0x6f(%ebp,%ebp,1),%esi
je     8062f44 <_IO_stdin_used+0x4da0>
add    %ch,0x73(%ebp,%eiz,2)
jae    8062f43 <_IO_stdin_used+0x4d9f>
gs
jns    8062f08 <_IO_stdin_used+0x4d64>
imul   $0x7473,0x0(%ebp,%eiz,2),%bp
popa
je     8062f5a <_IO_stdin_used+0x4db6>
jae    8062f14 <_IO_stdin_used+0x4d70>
arpl   %bp,0x6c(%edi)
jne    8062f59 <_IO_stdin_used+0x4db5>
outsb  %ds:(%esi),(%dx)
add    %ch,0x75(%edx)
insl   (%dx),%es:(%edi)
jo     8062f20 <_IO_stdin_used+0x4d7c>
je     8062f56 <_IO_stdin_used+0x4db2>
jb     8062f5e <_IO_stdin_used+0x4dba>
gs
je     8062efa <_IO_stdin_used+0x4d56>
imul   $0x2d65726f,0x6e(%edi),%esp
arpl   %sp,0x73(%ecx)
add    %ch,%gs:0x61(%ebp)
js     8062f37 <_IO_stdin_used+0x4d93>
bound  %esp,0x63(%ecx)
imul   $0x6c,0x6f726373,%ebp
insb   (%dx),%es:(%edi)
add    %ch,0x69(%eax)
insb   (%dx),%es:(%edi)
imul   $0x72616573,0x2d(%ebp,%eiz,2),%esi
arpl   %bp,0x0(%eax)
jno    8062f9b <_IO_stdin_used+0x4df7>
imul   $0x6e6f2d66,0x69(%ebp,%ebp,1),%esi
gs
sub    $0x65726373,%eax
outsb  %gs:(%esi),(%dx)
add    %ah,0x6f(%esi)
jb     8062f9e <_IO_stdin_used+0x4dfa>
add    %dh,%gs:0x75(%ecx)
imul   $0x6f652d74,0x61(%ebp,%ebp,1),%esi
data16
add    %ah,0x6d(%ebp,%esi,2)
bound  %eax,(%eax)
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8062f81 <_IO_stdin_used+0x4ddd>
jae    8062fb9 <_IO_stdin_used+0x4e15>
jb     8062fbd <_IO_stdin_used+0x4e19>
outsb  %gs:(%esi),(%dx)
add    %ah,0x75(%ecx)
je     8062fce <_IO_stdin_used+0x4e2a>
sub    $0x66667562,%eax
gs
jb     8062fda <_IO_stdin_used+0x4e36>
add    %dh,0x65(%ebx)
popa
jb     8062fd0 <_IO_stdin_used+0x4e2c>
push   $0x696b732d
jo     8062fa1 <_IO_stdin_used+0x4dfd>
jae    8062fd9 <_IO_stdin_used+0x4e35>
jb     8062fdd <_IO_stdin_used+0x4e39>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
push   %ebx
gs
popa
jb     8062fe4 <_IO_stdin_used+0x4e40>
push   $0x636e6920
insb   (%dx),%es:(%edi)
jne    8062fed <_IO_stdin_used+0x4e49>
gs
jae    8062fac <_IO_stdin_used+0x4e08>
imul   $0x6579616c,%fs:0x70(%ebx),%esi
and    %dh,%fs:0x63(%ebx)
jb     8062fff <_IO_stdin_used+0x4e5b>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
gs
popa
jb     8063008 <_IO_stdin_used+0x4e64>
push   $0x636e6920
insb   (%dx),%es:(%edi)
jne    8063011 <_IO_stdin_used+0x4e6d>
gs
jae    8062fd0 <_IO_stdin_used+0x4e2c>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %ah,0x73(%ecx,%ebp,2)
jo     8063028 <_IO_stdin_used+0x4e84>
popa
jns    8063024 <_IO_stdin_used+0x4e80>
and    %dh,%fs:0x63(%ebx)
jb     806302a <_IO_stdin_used+0x4e86>
outsb  %gs:(%esi),(%dx)
add    %cl,0x61(%ebp)
js     8062fec <_IO_stdin_used+0x4e48>
bound  %esi,0x66(%ebp)
data16
gs
jb     8062ff3 <_IO_stdin_used+0x4e4f>
jae    8063045 <_IO_stdin_used+0x4ea1>
popa
arpl   %sp,0x20(%ebp)
jo     8063040 <_IO_stdin_used+0x4e9c>
jb     8062ffd <_IO_stdin_used+0x4e59>
imul   $0x4b28,0x20(%ebp,%eiz,2),%bp
sub    %edi,(%edx)
and    %al,(%eax)
dec    %ebp
popa
js     806300c <_IO_stdin_used+0x4e68>
bound  %esi,0x66(%ebp)
data16
gs
jb     8063013 <_IO_stdin_used+0x4e6f>
jae    8063065 <_IO_stdin_used+0x4ec1>
popa
arpl   %sp,0x20(%ebp)
jo     8063060 <_IO_stdin_used+0x4ebc>
jb     806301d <_IO_stdin_used+0x4e79>
imul   $0x2520,0x3a(%ebp,%eiz,2),%bp
fs
dec    %ebx
add    %al,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     806302e <_IO_stdin_used+0x4e8a>
popa
jne    8063085 <_IO_stdin_used+0x4ee1>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     806307f <_IO_stdin_used+0x4edb>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    806303c <_IO_stdin_used+0x4e98>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806309f <_IO_stdin_used+0x4efb>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
jne    80630a7 <_IO_stdin_used+0x4f03>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     80630a1 <_IO_stdin_used+0x4efd>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    806305e <_IO_stdin_used+0x4eba>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     80630c1 <_IO_stdin_used+0x4f1d>
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,0x65(%esi)
gs fs gs add %al,%fs:%gs:(%eax)
push   %edx
gs
jo     80630c1 <_IO_stdin_used+0x4f1d>
imul   $0x20796220,0x74(%esi),%ebp
jae    80630cc <_IO_stdin_used+0x4f28>
jb     80630da <_IO_stdin_used+0x4f36>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6f726620,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%edx)
je     80630ee <_IO_stdin_used+0x4f4a>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %dh,0x63(%ebx)
jb     80630e9 <_IO_stdin_used+0x4f45>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
push   %edx
gs
jo     80630ed <_IO_stdin_used+0x4f49>
imul   $0x20796220,0x74(%esi),%ebp
jo     80630f6 <_IO_stdin_used+0x4f52>
imul   $0x20676e69,0x74(%esi),%ebp
data16
jb     806310e <_IO_stdin_used+0x4f6a>
insl   (%dx),%es:(%edi)
and    %dh,0x70(%edi,%ebp,2)
and    %ch,0x66(%edi)
and    %dh,0x63(%ebx)
jb     8063111 <_IO_stdin_used+0x4f6d>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
push   %ecx
jne    806311c <_IO_stdin_used+0x4f78>
je     80630d5 <_IO_stdin_used+0x4f31>
imul   $0x61696465,0x6d(%ebp),%ebp
je     8063123 <_IO_stdin_used+0x4f7f>
insb   (%dx),%es:(%edi)
jns    80630e1 <_IO_stdin_used+0x4f3d>
popa
je     80630e4 <_IO_stdin_used+0x4f40>
outsb  %gs:(%esi),(%dx)
fs
sub    $0x662d666f,%eax
imul   $0x276e6f44,0x0(%ebp,%eiz,2),%ebp
je     80630f6 <_IO_stdin_used+0x4f52>
jno    806314d <_IO_stdin_used+0x4fa9>
imul   $0x6e652066,0x69(%eax,%eiz,1),%esi
fs
sub    $0x662d666f,%eax
imul   $0x66206e6f,0x20(%ebp,%eiz,2),%ebp
imul   $0x63732074,0x73(%edx),%esi
jb     806315c <_IO_stdin_used+0x4fb8>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x75(%ecx)
imul   $0x6e652066,0x69(%eax,%eiz,1),%esi
fs
sub    $0x662d666f,%eax
imul   $0x66206e6f,0x20(%ebp,%eiz,2),%ebp
imul   $0x63732074,0x73(%edx),%esi
jb     8063182 <_IO_stdin_used+0x4fde>
outsb  %gs:(%esi),(%dx)
add    %al,0x6e(%edi,%ebp,2)
daa
je     8063146 <_IO_stdin_used+0x4fa2>
push   $0x6c686769
imul   $0x65732074,0x68(%edi),%esp
popa
jb     8063198 <_IO_stdin_used+0x4ff4>
push   $0x74616d20
arpl   %bp,0x65(%eax)
jae    806313f <_IO_stdin_used+0x4f9b>
add    %cl,0x69(%eax)
addr16 push $0x6867696c
je     806316a <_IO_stdin_used+0x4fc6>
insl   (%dx),%es:(%edi)
popa
je     80631b1 <_IO_stdin_used+0x500d>
push   $0x66207365
outsl  %ds:(%esi),(%dx)
jb     8063176 <_IO_stdin_used+0x4fd2>
jo     80631ca <_IO_stdin_used+0x5026>
gs
jbe    80631c4 <_IO_stdin_used+0x5020>
outsl  %ds:(%esi),(%dx)
jne    80631d1 <_IO_stdin_used+0x502d>
and    %dh,0x65(%ebx)
popa
jb     80631c7 <_IO_stdin_used+0x5023>
push   $0x6c6e6f20
jns    806316b <_IO_stdin_used+0x4fc7>
add    %cl,0x69(%eax)
addr16 push $0x6867696c
je     8063196 <_IO_stdin_used+0x4ff2>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x61(%ebp)
je     80631e1 <_IO_stdin_used+0x503d>
push   $0x66207365
outsl  %ds:(%esi),(%dx)
jb     80631a6 <_IO_stdin_used+0x5002>
jo     80631fa <_IO_stdin_used+0x5056>
gs
jbe    80631f4 <_IO_stdin_used+0x5050>
outsl  %ds:(%esi),(%dx)
jne    8063201 <_IO_stdin_used+0x505d>
and    %dh,0x65(%ebx)
popa
jb     80631f7 <_IO_stdin_used+0x5053>
push   $0x74617020
je     8063200 <_IO_stdin_used+0x505c>
jb     806320b <_IO_stdin_used+0x5067>
add    %al,(%eax)
add    %al,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     806320c <_IO_stdin_used+0x5068>
jae    80631ca <_IO_stdin_used+0x5026>
jae    806320f <_IO_stdin_used+0x506b>
jb     806321d <_IO_stdin_used+0x5079>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x64252073,0x69(%eax,%eiz,1),%esi
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    80631c3 <_IO_stdin_used+0x501f>
add    %al,0x61(%ebx)
jae    806322d <_IO_stdin_used+0x5089>
and    %ch,0x73(%ecx)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
imul   $0x746e6163,0x69(%esi),%esp
and    %ch,0x6e(%ecx)
and    %dh,0x65(%ebx)
popa
jb     8063243 <_IO_stdin_used+0x509f>
push   $0x49007365
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806324f <_IO_stdin_used+0x50ab>
and    %ah,0x61(%ebx)
jae    8063254 <_IO_stdin_used+0x50b0>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%ebx)
popa
jb     806325b <_IO_stdin_used+0x50b7>
push   $0x61207365
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x61(%eax)
je     806327b <_IO_stdin_used+0x50d7>
gs
jb     8063278 <_IO_stdin_used+0x50d4>
jae    806320c <_IO_stdin_used+0x5068>
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     8063275 <_IO_stdin_used+0x50d1>
jb     8063284 <_IO_stdin_used+0x50e0>
jne    8063284 <_IO_stdin_used+0x50e0>
je     8063236 <_IO_stdin_used+0x5092>
sub    %ah,0x74(%ebx)
jb     8063287 <_IO_stdin_used+0x50e3>
sub    $0x72202943,%eax
gs
je     8063298 <_IO_stdin_used+0x50f4>
jb     8063293 <_IO_stdin_used+0x50ef>
jae    8063247 <_IO_stdin_used+0x50a3>
je     8063298 <_IO_stdin_used+0x50f4>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     80632a4 <_IO_stdin_used+0x5100>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80632ad <_IO_stdin_used+0x5109>
popa
outsb  %ds:(%esi),(%dx)
je     80632a9 <_IO_stdin_used+0x5105>
jns    806325f <_IO_stdin_used+0x50bb>
imul   $0x2079616c,%fs:0x70(%ebx),%esi
insb   (%dx),%es:(%edi)
imul   $0x6d756e20,0x65(%esi),%ebp
bound  %esp,0x72(%ebp)
jae    8063254 <_IO_stdin_used+0x50b0>
push   %edx
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x65(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     8063286 <_IO_stdin_used+0x50e2>
gs
jb     80632db <_IO_stdin_used+0x5137>
outsl  %ds:(%esi),(%dx)
jb     80632df <_IO_stdin_used+0x513b>
and    %al,0x4e(%ecx)
inc    %esp
and    %ah,0x74(%ecx)
and    %ah,0x6f(%ebp)
data16
das
bound  %ebp,0x66(%edi)
add    %dl,0x69(%edx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     80632ae <_IO_stdin_used+0x510a>
gs
jb     8063303 <_IO_stdin_used+0x515f>
outsl  %ds:(%esi),(%dx)
jb     8063307 <_IO_stdin_used+0x5163>
and    %ah,0x75(%edx)
je     80632b9 <_IO_stdin_used+0x5115>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80632bd <_IO_stdin_used+0x5119>
popa
je     80632c0 <_IO_stdin_used+0x511c>
outsl  %gs:(%esi),(%dx)
data16
das
bound  %ebp,0x66(%edi)
add    %al,0x73(%ecx,%ebp,2)
jo     8063319 <_IO_stdin_used+0x5175>
popa
jns    80632d0 <_IO_stdin_used+0x512c>
arpl   %bp,0x6e(%edi)
je     8063327 <_IO_stdin_used+0x5183>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     806331e <_IO_stdin_used+0x517a>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80632e3 <_IO_stdin_used+0x513f>
popa
jae    80632e6 <_IO_stdin_used+0x5142>
pop    %esi
pop    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
arpl   %bp,0x6e(%edi)
je     806334b <_IO_stdin_used+0x51a7>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8063342 <_IO_stdin_used+0x519e>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8063307 <_IO_stdin_used+0x5163>
imul   $0x796c7463,%fs:0x65(%edx),%esi
add    %al,0x73(%ecx,%ebp,2)
jo     8063361 <_IO_stdin_used+0x51bd>
popa
jns    8063318 <_IO_stdin_used+0x5174>
arpl   %bp,0x6e(%edi)
je     806336f <_IO_stdin_used+0x51cb>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8063366 <_IO_stdin_used+0x51c2>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806332b <_IO_stdin_used+0x5187>
imul   $0x796c7463,%fs:0x65(%edx),%esi
sub    $0x20,%al
jo     8063389 <_IO_stdin_used+0x51e5>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8063386 <_IO_stdin_used+0x51e2>
outsb  %ds:(%esi),(%dx)
and    %al,0x4e(%bx,%di)
push   %ebx
dec    %ecx
and    %dh,0x65(%ebx)
jno    806339e <_IO_stdin_used+0x51fa>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
add    %al,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
jne    80633a8 <_IO_stdin_used+0x5204>
fs
gs
jb     80633aa <_IO_stdin_used+0x5206>
imul   $0x65742064,0x65(%esi),%ebp
js     80633bb <_IO_stdin_used+0x5217>
and    %ch,0x6e(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     80633bd <_IO_stdin_used+0x5219>
imul   $0x646f6d20,0x65(%esi),%ebp
add    %al,%gs:(%eax)
add    %al,0x6e(%edi,%ebp,2)
daa
je     8063382 <_IO_stdin_used+0x51de>
push   $0x6c686769
imul   $0x69662074,0x68(%edi),%esp
jb     80633e3 <_IO_stdin_used+0x523f>
je     8063392 <_IO_stdin_used+0x51ee>
jne    80633e2 <_IO_stdin_used+0x523e>
jb     80633db <_IO_stdin_used+0x5237>
popa
and    %ch,%fs:0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
add    %cl,0x69(%eax)
addr16 push $0x6867696c
je     80633aa <_IO_stdin_used+0x5206>
imul   $0x2074,0x73(%edx),%si
jne    8063400 <_IO_stdin_used+0x525c>
jb     80633f9 <_IO_stdin_used+0x5255>
popa
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x66(%ecx)
je     8063405 <_IO_stdin_used+0x5261>
jb     80633c2 <_IO_stdin_used+0x521e>
outsw  %ds:(%esi),(%dx)
jb     806341d <_IO_stdin_used+0x5279>
popa
jb     806340d <_IO_stdin_used+0x5269>
sub    $0x65726373,%eax
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
dec    %eax
imul   $0x6867696c,0x68(%edi),%esp
je     80633de <_IO_stdin_used+0x523a>
imul   $0x2074,0x73(%edx),%si
jne    8063434 <_IO_stdin_used+0x5290>
jb     806342d <_IO_stdin_used+0x5289>
popa
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x66(%ecx)
je     8063439 <_IO_stdin_used+0x5295>
jb     80633f6 <_IO_stdin_used+0x5252>
popa
outsb  %ds:(%esi),(%dx)
jns    80633fa <_IO_stdin_used+0x5256>
outsw  %ds:(%esi),(%dx)
jb     8063455 <_IO_stdin_used+0x52b1>
popa
jb     8063445 <_IO_stdin_used+0x52a1>
and    %ch,0x6f(%ebp)
jbe    806344b <_IO_stdin_used+0x52a7>
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80633eb <_IO_stdin_used+0x5247>
add    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
imul   $0x696e6965,0x64(%edi,%ebp,1),%esi
je     806341d <_IO_stdin_used+0x5279>
jae    8063473 <_IO_stdin_used+0x52cf>
jb     806346a <_IO_stdin_used+0x52c6>
outsb  %ds:(%esi),(%dx)
addr16 jae 8063425 <_IO_stdin_used+0x5281>
je     8063476 <_IO_stdin_used+0x52d2>
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x6c,0x61(%esi),%ebp
add    %al,0x6f(%esi)
jb     806348f <_IO_stdin_used+0x52eb>
popa
jb     806347f <_IO_stdin_used+0x52db>
and    %dh,0x63(%ebx)
jb     806348f <_IO_stdin_used+0x52eb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x64252073,0x69(%eax,%eiz,1),%esi
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    8063435 <_IO_stdin_used+0x5291>
add    %al,(%eax)
add    %dl,0x63(%ebx)
jb     80634ab <_IO_stdin_used+0x5307>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     8063466 <_IO_stdin_used+0x52c2>
jae    80634b1 <_IO_stdin_used+0x530d>
jp     80634af <_IO_stdin_used+0x530b>
and    %ch,0x73(%ecx)
and    %ah,0x696c2064
outsb  %ds:(%esi),(%dx)
gs
jae    8063457 <_IO_stdin_used+0x52b3>
add    %al,0x6e(%edi,%ebp,2)
daa
je     806347e <_IO_stdin_used+0x52da>
jae    80634c8 <_IO_stdin_used+0x5324>
outsl  %ds:(%esi),(%dx)
ja     8063483 <_IO_stdin_used+0x52df>
je     80634ce <_IO_stdin_used+0x532a>
insb   (%dx),%es:(%edi)
fs
gs
jae    806348a <_IO_stdin_used+0x52e6>
popa
data16
je     80634d3 <_IO_stdin_used+0x532f>
jb     8063490 <_IO_stdin_used+0x52ec>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %dl,%gs:0x73(%ebp)
and    %ch,%gs:0x65(%esi)
ja     80634a4 <_IO_stdin_used+0x5300>
bound  %ebp,0x74(%edi)
je     80634f8 <_IO_stdin_used+0x5354>
insl   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %dh,0x63(%ebx)
jb     80634f7 <_IO_stdin_used+0x5353>
outsb  %gs:(%esi),(%dx)
and    %ah,0x65(%edx)
push   $0x6f697661
jb     806349e <_IO_stdin_used+0x52fa>
add    %al,(%eax)
push   %ebp
jae    8063508 <_IO_stdin_used+0x5364>
and    %ch,0x6c(%edi)
and    %ah,%fs:0x6f(%edx)
je     8063520 <_IO_stdin_used+0x537c>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %dh,0x63(%ebx)
jb     806351b <_IO_stdin_used+0x5377>
outsb  %gs:(%esi),(%dx)
and    %ah,0x65(%edx)
push   $0x6f697661
jb     80634c2 <_IO_stdin_used+0x531e>
add    %al,(%eax)
inc    %esi
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8063548 <_IO_stdin_used+0x53a4>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8063557 <_IO_stdin_used+0x53b3>
outsl  %ds:(%esi),(%dx)
jb     80634e6 <_IO_stdin_used+0x5342>
add    %al,(%eax)
push   %ebp
jae    8063550 <_IO_stdin_used+0x53ac>
and    %ah,0x61(%edx)
arpl   %bp,0x73(%ebx)
insb   (%dx),%es:(%edi)
popa
jae    806355d <_IO_stdin_used+0x53b9>
and    %ah,0x73(%ebp)
arpl   %sp,0x70(%ecx)
imul   $0x206e6920,0x67(%esi),%ebp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x61(%eax)
jb     8063574 <_IO_stdin_used+0x53d0>
insl   (%dx),%es:(%edi)
gs
je     806357c <_IO_stdin_used+0x53d8>
jb     806358c <_IO_stdin_used+0x53e8>
add    %al,(%eax)
add    %al,0x6e(%edi,%ebp,2)
daa
je     8063542 <_IO_stdin_used+0x539e>
jne    8063597 <_IO_stdin_used+0x53f3>
and    %ah,%gs:0x61(%edx)
arpl   %bp,0x73(%ebx)
insb   (%dx),%es:(%edi)
popa
jae    8063597 <_IO_stdin_used+0x53f3>
and    %ah,0x73(%ebp)
arpl   %sp,0x70(%ecx)
imul   $0x206e6920,0x67(%esi),%ebp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x61(%eax)
jb     80635ae <_IO_stdin_used+0x540a>
insl   (%dx),%es:(%edi)
gs
je     80635b6 <_IO_stdin_used+0x5412>
jb     80635c6 <_IO_stdin_used+0x5422>
add    %ah,0x25203a73
jae    806355b <_IO_stdin_used+0x53b7>
add    %al,(%eax)
add    %cl,%al
inc    %edx
add    %al,(%eax)
add    %bh,(%edi)
add    %ah,(%esp,%esi,2)
dec    %ecx
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    80635cd <_IO_stdin_used+0x5429>
insb   (%dx),%es:(%edi)
imul   $0x65747461,0x70(%eax,%eiz,1),%esp
jb     80635e5 <_IO_stdin_used+0x5441>
add    %dh,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %dh,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %dh,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %dh,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %ch,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2808,%eax
or     %dh,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab6008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab7008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab8008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,0x200805ab(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %ah,(%eax)
stos   %eax,%es:(%edi)
add    $0x5ab2008,%eax
or     %dl,-0x55(%eax)
add    $0x5ada508,%eax
or     %dh,-0x48f7fa54(%eax)
lods   %ds:(%esi),%eax
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa53(%edi)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,0x7f0805ac(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %bl,%cl
lods   %ds:(%esi),%eax
add    $0x5adea08,%eax
or     %bh,%ah
lods   %ds:(%esi),%eax
add    $0x5ae0b08,%eax
or     %dl,(%edx)
scas   %es:(%edi),%al
add    $0x5ae1c08,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5ae0b08,%eax
or     %al,-0x52(%ecx)
add    $0x5ae6308,%eax
or     %dh,0x7a0805ac(%eax)
scas   %es:(%edi),%al
add    $0x5acb008,%eax
or     %dh,-0x5af7fa54(%eax)
lods   %ds:(%esi),%eax
add    $0x5acb008,%eax
or     %dh,-0x4ff7fa54(%eax)
lods   %ds:(%esi),%al
add    $0x5acb008,%eax
or     %dh,0x5(%ebp,%ebp,4)
or     %dh,-0x9f7fa52(%eax)
stos   %eax,%es:(%edi)
add    $0x5af7208,%eax
or     %bl,%dl
mov    $0x5,%cl
or     %dl,-0x4f(%ecx)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,-0x4f(%esi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %ch,%al
scas   %es:(%edi),%al
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %bh,%cl
mov    $0x5,%cl
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5b1ef08,%eax
or     %ah,(%edx)
mov    $0x5,%dl
or     %ch,(%edx)
mov    $0x5,%al
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5b06e08,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,(%edx,%esi,4)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5b24a08,%eax
or     %cl,-0x9f7fa50(%ebx)
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %ch,-0x9f7fa50(%edx)
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,-0x10f7fa52(%eax)
mov    $0x5,%al
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5abf608,%eax
or     %dh,%dh
stos   %eax,%es:(%edi)
add    $0x5b13a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x726f4d2d
gs
sub    $0x653f282d,%eax
inc    %ebp
dec    %esi
inc    %esp
and    %bh,(%edi)
js     80638df <_IO_stdin_used+0x573b>
and    %cl,0x65(%esi)
js     806392b <_IO_stdin_used+0x5787>
pop    %esp
cmp    (%eax),%ah
and    $0x3f3a2e78,%eax
jo     8063903 <_IO_stdin_used+0x575f>
and    $0x255c4270,%eax
cmp    0x79(%edx),%ah
je     8063930 <_IO_stdin_used+0x578c>
and    %ah,0x733f4262
das
and    $0x2e2e2e73,%eax
and    $0x57002974,%eax
popa
imul   $0x6f662067,0x6e(%ecx,%ebp,2),%esi
jb     8063907 <_IO_stdin_used+0x5763>
fs
popa
je     806394c <_IO_stdin_used+0x57a8>
add    %cl,0x45(%eax)
dec    %esp
push   %eax
and    %ch,0x653f202d
inc    %ebp
dec    %esi
inc    %esp
and    %ch,0x7250202d
gs
jae    8063989 <_IO_stdin_used+0x57e5>
and    %ah,0x20(%edi)
je     806398a <_IO_stdin_used+0x57e6>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x74(%ecx)
and    %ah,0x67(%ecx)
popa
imul   $0x73657250,0x3a(%esi),%ebp
jae    806394f <_IO_stdin_used+0x57ab>
push   %edx
inc    %ebp
push   %esp
push   %ebp
push   %edx
dec    %esi
and    %ah,0x6f(%esi)
jb     806395a <_IO_stdin_used+0x57b6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80639a3 <_IO_stdin_used+0x57ff>
cs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8063964 <_IO_stdin_used+0x57c0>
jno    8063966 <_IO_stdin_used+0x57c2>
ja     80639b0 <_IO_stdin_used+0x580c>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6e(%edi,%ebp,2)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %bh,(%edi)
and    $0x2066,%ax
cs
aas
insl   (%dx),%es:(%edi)
sub    %ah,0x69252054
and    %ch,0x66(%edi)
and    %ah,0x2e20296d
aas
insb   (%dx),%es:(%edi)
je     80639e7 <_IO_stdin_used+0x5843>
imul   $0x6c252073,0x65(%esi),%ebp
je     80639b1 <_IO_stdin_used+0x580d>
and    $0x4c3f626c,%eax
das
and    $0x2e202e4c,%eax
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x733f4262
das
and    $0x3f202e73,%eax
sub    %al,%gs:0x4e(%ebp)
inc    %esp
sub    %esp,(%eax)
cmp    (%edi),%bh
jo     80639ec <_IO_stdin_used+0x5848>
and    $0x255c4270,%eax
cs
cs
and    $0x74,%eax
add    %al,(%eax)
aas
and    $0x2066,%ax
cs
aas
outsb  %ds:(%esi),(%dx)
aas
insl   (%dx),%es:(%edi)
sub    %ah,0x69252054
and    %ch,0x66(%edi)
and    %ah,0x2e20296d
cs
aas
insb   (%dx),%es:(%edi)
je     8063a4a <_IO_stdin_used+0x58a6>
imul   $0x6c252073,0x65(%esi),%ebp
je     8063a14 <_IO_stdin_used+0x5870>
and    $0x4c3f626c,%eax
das
and    $0x3a202e4c,%eax
bound  %edi,0x74(%ecx)
and    %ah,%gs:0x733f4262
das
and    $0x2e202e73,%eax
aas
sub    %al,%gs:0x4e(%ebp)
inc    %esp
sub    %esp,(%eax)
aas
js     8063a3a <_IO_stdin_used+0x5896>
and    %cl,0x65(%esi)
js     8063a86 <_IO_stdin_used+0x58e2>
pop    %esp
cmp    (%eax),%ah
and    $0x3f3a2e78,%eax
jo     8063a5e <_IO_stdin_used+0x58ba>
and    $0x255c4270,%eax
cs
cs
and    $0x74,%eax
aas
outsb  %ds:(%esi),(%dx)
aas
and    $0x2066,%ax
cs
aas
insl   (%dx),%es:(%edi)
sub    %ah,0x69252054
and    %ch,0x66(%edi)
and    %ah,0x2e20296d
cs
aas
sub    %al,%gs:0x4e(%ebp)
inc    %esp
sub    %esp,(%eax)
aas
js     8063a92 <_IO_stdin_used+0x58ee>
and    %cl,0x65(%esi)
js     8063ade <_IO_stdin_used+0x593a>
pop    %esp
cmp    (%eax),%ah
and    $0x3f3a2e78,%eax
jo     8063ab6 <_IO_stdin_used+0x5912>
and    $0x255c4270,%eax
cmp    0x79(%edx),%ah
je     8063ae3 <_IO_stdin_used+0x593f>
and    %ah,0x733f4262
das
and    $0x2e2e2e73,%eax
and    $0x74,%eax
add    %bh,(%edi)
outsb  %ds:(%esi),(%dx)
aas
and    $0x2066,%ax
cs
aas
insl   (%dx),%es:(%edi)
sub    %ah,0x69252054
and    %ch,0x66(%edi)
and    %ah,0x2e20296d
cs
aas
sub    %al,%gs:0x4e(%ebp)
inc    %esp
sub    %esp,(%eax)
aas
js     8063af2 <_IO_stdin_used+0x594e>
and    %cl,0x65(%esi)
js     8063b3e <_IO_stdin_used+0x599a>
pop    %esp
cmp    (%eax),%ah
and    $0x252e2e78,%eax
je     8063ad4 <_IO_stdin_used+0x5930>
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jbe    8063b45 <_IO_stdin_used+0x59a1>
outsl  %ds:(%esi),(%dx)
jne    8063b52 <_IO_stdin_used+0x59ae>
and    %dh,0x65(%edx)
addr16 jne 8063b51 <_IO_stdin_used+0x59ad>
popa
jb     8063b08 <_IO_stdin_used+0x5964>
gs
js     8063b5b <_IO_stdin_used+0x59b7>
jb     8063b52 <_IO_stdin_used+0x59ae>
jae    8063b62 <_IO_stdin_used+0x59be>
imul   $0x6c500000,0x6e(%edi),%ebp
gs
popa
jae    8063b5f <_IO_stdin_used+0x59bb>
and    %dh,0x65(%edx)
sub    $0x65746e65,%eax
jb     8063b24 <_IO_stdin_used+0x5980>
jae    8063b6b <_IO_stdin_used+0x59c7>
popa
jb     8063b6c <_IO_stdin_used+0x59c8>
push   $0x74617020
je     8063b75 <_IO_stdin_used+0x59d1>
jb     8063b80 <_IO_stdin_used+0x59dc>
add    %al,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
je     8063b80 <_IO_stdin_used+0x59dc>
imul   $0x206f7420,0x67(%esi),%ebp
jae    8063b86 <_IO_stdin_used+0x59e2>
popa
jb     8063b87 <_IO_stdin_used+0x59e3>
push   $0x67617400
jae    8063b2b <_IO_stdin_used+0x5987>
dec    %esp
inc    %ebp
push   %ebx
push   %ebx
inc    %edi
dec    %esp
dec    %edi
inc    %edx
inc    %ecx
dec    %esp
push   %esp
inc    %ecx
inc    %edi
push   %ebx
add    %ah,0x782d2073
and    $0x73252073,%eax
add    %al,0x54(%edi)
inc    %ecx
inc    %edi
push   %ebx
add    %al,0x52(%edi)
push   %esp
inc    %ecx
inc    %edi
push   %ebx
add    %al,0x53(%edi)
pop    %ecx
dec    %ebp
push   %ebx
add    %al,0x50(%edi)
inc    %ecx
push   %esp
dec    %eax
add    %cl,0x6f(%esi)
and    %dh,0x67(%ecx,%eiz,2)
jae    8063b86 <_IO_stdin_used+0x59e2>
imul   $0x6f4e,0x0(%ebp,%eiz,2),%bp
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
je     8063bd6 <_IO_stdin_used+0x5a32>
and    %ch,0x6e(%bx,%di)
and    %dh,0x67(%ecx,%eiz,2)
jae    8063b9f <_IO_stdin_used+0x59fb>
imul   $0x6e75,0x0(%ebp,%eiz,2),%bp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x67(%ecx,%eiz,2)
and    %dh,0x70(%ecx,%edi,2)
add    %dl,%gs:0x67(%ecx,%eiz,2)
and    %ch,0x6f(%esi)
je     8063bbd <_IO_stdin_used+0x5a19>
outsw  %ds:(%esi),(%dx)
jne    8063c0f <_IO_stdin_used+0x5a6b>
fs
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    0x7300000b,%al
add    %eax,(%eax)
add    %bh,(%ebx,%edx,2)
(bad)
(bad)
mov    $0xfc00000b,%esp
push   %edi
(bad)
jmp    *0x5d5c0000(%esp,%ecx,1)
(bad)
jmp    *%eax
or     (%eax),%eax
add    %cl,0xbf4fffe(%ebp,%ebx,2)
add    %al,(%eax)
cld
pop    %ebp
(bad)
incl   0xc(%eax)
add    %al,(%eax)
jl     8063c38 <_IO_stdin_used+0x5a94>
(bad)
lcall  *0x0(%esp,%ecx,1)
add    %bh,0xc78fffe(%esi,%ebx,2)
add    %al,(%eax)
cld
pop    %esi
(bad)
inc    %esp
or     $0x0,%al
add    %cl,(%edi,%ebx,2)
(bad)
(bad)
fmuls  (%eax,%eax,1)
add    %bh,(%eax,%eiz,2)
(bad)
decl   (%eax)
or     $0x608c0000,%eax
(bad)
(bad)
cmp    %cl,0x60cc0000
(bad)
pushl  0xd(%eax)
add    %al,(%eax)
cmp    $0x61,%al
(bad)
inc    %esp
or     $0x617c0000,%eax
(bad)
(bad)
call   24063c2e <_end+0x1bff3bae>
(bad)
(bad)
incl   0xe(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
jmp    *0xe(%eax)
add    %al,(%eax)
dec    %esp
data16
(bad)
call   *0x7c00000e(%eax)
addr16 (bad)
inc    %eax
push   %cs
add    %al,(%eax)
jl     8063caa <_IO_stdin_used+0x5b06>
(bad)
(bad)
fmull  (%esi)
add    %al,(%eax)
dec    %esp
outsb  %ds:(%esi),(%dx)
(bad)
call   *(%edi,%ecx,1)
add    %al,(%eax)
sub    $0x6f,%al
(bad)
incl   0xf(%eax)
add    %al,(%eax)
mov    $0x60fffe6f,%esp
sldt   (%eax)
in     (%dx),%al
outsl  %ds:(%esi),(%dx)
(bad)
(bad)
js     8063c75 <_IO_stdin_used+0x5ad1>
add    %al,(%eax)
sbb    $0x70,%al
(bad)
call   *0x4c00000f(%eax)
jo     8063c71 <_IO_stdin_used+0x5acd>
ljmp   *0x7c00000f(%eax)
jo     8063c79 <_IO_stdin_used+0x5ad5>
inc    %eax
sldt   (%eax)
mov    %?,-0x2(%eax)
call   *%esp
sldt   (%eax)
int3
jo     8063c89 <_IO_stdin_used+0x5ae5>
(bad)
in     (%dx),%al
sldt   (%eax)
or     $0x71,%al
(bad)
incl   (%eax,%edx,1)
add    %al,(%eax)
cmp    $0x71,%al
(bad)
lcall  *(%eax,%edx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jno    8063ca1 <_IO_stdin_used+0x5afd>
pushl  (%eax,%edx,1)
add    %al,(%eax)
pushf
jno    8063ca9 <_IO_stdin_used+0x5b05>
decl   0x0(%eax,%edx,1)
add    %ch,-0x2(%edx,%esi,2)
(bad)
jl     8063cc6 <_IO_stdin_used+0x5b22>
add    %al,(%eax)
sub    $0x73,%al
(bad)
lcall  *-0x63fffff0(%eax)
jae    8063cc1 <_IO_stdin_used+0x5b1d>
inc    %esp
adc    %al,(%eax)
add    %ch,%ah
jae    8063cc9 <_IO_stdin_used+0x5b25>
push   %eax
adc    %al,(%eax)
add    %bh,(%esp,%esi,2)
(bad)
incl   (%ecx,%edx,1)
add    %al,(%eax)
pop    %esp
je     8063cd9 <_IO_stdin_used+0x5b35>
lcall  *(%eax)
adc    %eax,(%eax)
add    %cl,0x1130fffe(%esp,%esi,2)
add    %al,(%eax)
sbb    $0x76,%al
(bad)
dec    %eax
adc    %eax,(%eax)
add    %bl,-0x2(%esi,%esi,2)
(bad)
call   64063d0a <_end+0x5bff3c8a>
ja     8063cf9 <_IO_stdin_used+0x5b55>
jmp    *(%edx,%edx,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
ja     8063d01 <_IO_stdin_used+0x5b5d>
incl   0x12(%eax)
add    %al,(%eax)
dec    %esp
jle    8063d09 <_IO_stdin_used+0x5b65>
lcall  *0x7e8c0000(%edx,%edx,1)
(bad)
(bad)
mov    $0xfc000012,%eax
jle    8063d19 <_IO_stdin_used+0x5b75>
(bad)
fcoms  (%edx)
add    %al,(%eax)
pushf
jg     8063d21 <_IO_stdin_used+0x5b7d>
push   %esp
adc    (%eax),%al
add    %bh,(%ecx,%eax,4)
(bad)
decl   0x0(%ebx,%edx,1)
add    %bh,0x1384fffe(%ecx,%eax,4)
add    %al,(%eax)
dec    %esp
(bad)
(bad)
(bad)
mov    $0xc000013,%esp
cmp    $0xffffffff,%esi
sbb    %dl,(%eax,%eax,1)
add    %cl,-0x2(%ebx,%eax,4)
ljmp   *(%esp,%edx,1)
add    %al,(%eax)
jl     8063cd6 <_IO_stdin_used+0x5b32>
(bad)
jmp    *0x0(%esp,%edx,1)
add    %bh,0x147cfffe(%esp,%eax,4)
add    %al,(%eax)
faddl  0x1490ff(%esi,%edi,8)
add    %cl,(%esi,%eax,4)
(bad)
dec    %eax
adc    $0x0,%al
add    %ch,%ah
xchg   %bh,%dh
(bad)
clc
adc    $0x0,%al
add    %cl,(%edi,%eax,4)
(bad)
decl   -0x77b40000(,%edx,1)
(bad)
decl   0x0(%ebp,%edx,1)
add    %cl,0x1584fffe(%ecx,%ecx,4)
add    %al,(%eax)
fmull  0x15c0fffe(%ecx)
add    %al,(%eax)
mov    $0x8fffe8a,%esp
push   %ss
add    %al,(%eax)
sub    $0x8b,%al
(bad)
lcall  *(%esi,%edx,1)
add    %al,(%eax)
cld
mov    %?,%esi
incl   0x16(%eax)
add    %al,(%eax)
dec    %esp
(bad)
(bad)
ljmp   *0x16(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
(bad)
jl     8063dd4 <_IO_stdin_used+0x5c30>
add    %al,(%eax)
sbb    $0x8e,%al
(bad)
lcall  *-0x23ffffea(%eax)
(bad)
(bad)
call   *%esp
push   %ss
add    %al,(%eax)
cld
(bad)
(bad)
(bad)
call   b4063def <_end+0xabff3d6f>
nop
(bad)
pushl  (%edi,%edx,1)
add    %al,(%eax)
sub    $0x92,%al
(bad)
ljmp   *0x6c000017(%eax)
xchg   %eax,%ebx
(bad)
call   *%eax
pop    %ss
add    %al,(%eax)
dec    %esp
xchg   %eax,%esp
(bad)
(bad)
cmp    $0x18,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%esp
(bad)
call   *0x18(%eax)
add    %al,(%eax)
mov    %ss,0x1864ff(%esi,%edi,8)
add    %ch,0x1878fffe(%esp,%edx,4)
add    %al,(%eax)
fcoml  0x188cff(%esi,%edi,8)
add    %ch,-0x2(%esi,%edx,4)
(bad)
clc
sbb    %al,(%eax)
add    %bh,0x1934fffe(%esi,%edx,4)
add    %al,(%eax)
sub    $0x97,%al
(bad)
decl   0x0(%ecx,%ebx,1)
add    %bh,%ah
xchg   %eax,%edi
(bad)
lcall  *-0x53ffffe7(%eax)
cwtl
(bad)
call   *%eax
sbb    %eax,(%eax)
add    %bh,%ah
cwtl
(bad)
push   %esp
sbb    %eax,(%eax)
add    %ch,-0x2(%ecx,%ebx,4)
ljmp   *(%eax)
sbb    (%eax),%al
add    %bh,0x1a5cfffe(%ecx,%ebx,4)
add    %al,(%eax)
mov    %ds,0x1a80fffe(%edx)
add    %al,(%eax)
lods   %ds:(%esi),%al
fwait
(bad)
ljmp   *0x7c00001a(%eax)
pushf
(bad)
call   *%esp
sbb    (%eax),%al
add    %cl,-0x2(%ebp,%ebx,4)
push   %eax
sbb    (%eax),%al
add    %bl,%ah
popf
(bad)
lcall  *(%ebx,%ebx,1)
add    %al,(%eax)
or     $0x9e,%al
(bad)
pushl  (%ebx,%ebx,1)
add    %al,(%eax)
dec    %esp
sahf
(bad)
decl   0x0(%ebx,%ebx,1)
add    %bl,(%edi,%ebx,4)
(bad)
decl   -0x60740000(%ebx,%ebx,1)
(bad)
call   *%esp
sbb    (%eax),%eax
add    %bl,%ah
lahf
(bad)
(bad)
call   14063ec4 <_end+0xbff3e44>
mov    0x1bfcfffe,%al
add    %al,(%eax)
fsubl  0x1c38fffe(%eax)
add    %al,(%eax)
pop    %esp
mov    0x1c6cfffe,%eax
add    %al,(%eax)
jl     8063e63 <_IO_stdin_used+0x5cbf>
(bad)
incl   -0x63ffffe4(%eax)
mov    0x1c94fffe,%eax
add    %al,(%eax)
fsubl  0x1cacfffe(%ecx)
add    %al,(%eax)
pop    %esp
stos   %al,%es:(%edi)
(bad)
incl   (%eax)
sbb    $0xab3c0000,%eax
(bad)
lcall  *0x1d(%eax)
add    %al,(%eax)
dec    %esp
stos   %eax,%es:(%edi)
(bad)
ljmp   *0x0(%ebp,%ebx,1)
add    %ch,-0x2(%ebx,%ebp,4)
incl   -0x33ffffe3(%eax)
lods   %ds:(%esi),%al
(bad)
inc    %esp
sbb    $0xae0c0000,%eax
(bad)
incl   (%eax)
push   %ds
add    %al,(%eax)
cmp    $0xaf,%al
(bad)
lcall  *(%esi,%ebx,1)
add    %al,(%eax)
in     (%dx),%al
scas   %es:(%edi),%eax
(bad)
call   *0x0(%esi,%ebx,1)
add    %ch,(%eax,%esi,4)
(bad)
incl   0x2c00001e(%eax)
mov    $0xfe,%cl
(bad)
call   54063f47 <_end+0x4bff3ec7>
mov    $0xfe,%bl
ljmp   *(%eax)
pop    %ds
add    %al,(%eax)
or     $0xb4,%al
(bad)
pushl  0x0(%edi,%ebx,1)
add    %ch,%ah
mov    $0xfe,%ah
(bad)
mov    $0xc00001f,%esp
mov    $0xfe,%ch
call   *%eax
pop    %ds
add    %al,(%eax)
cmp    $0xb5,%al
(bad)
(bad)
call   d4063f70 <_end+0xcbff3ef0>
mov    $0xfe,%ch
jmp    *(%eax,%eiz,1)
add    %al,(%eax)
or     $0xb6,%al
(bad)
(bad)
cmp    $0x20,%al
add    %al,(%eax)
dec    %esp
mov    $0xfe,%dh
ljmp   *0x20(%eax)
add    %al,(%eax)
dec    %esp
sar    %dh
call   *0x6c000020(%eax)
sar    %dh
jmp    *-0x2f540000(%eax,%eiz,1)
(bad)
inc    %esp
and    %al,(%eax)
add    %ch,0x2104fffe(%edx,%edx,8)
add    %al,(%eax)
pushf
sar    %cl,%esi
pushl  0x21(%eax)
add    %al,(%eax)
mov    $0xb0fffed4,%esp
and    %eax,(%eax)
add    %bh,%ah
aam    $0xfe
call   *%eax
and    %eax,(%eax)
add    %bh,0x21f0fffe(,%edx,8)
add    %al,(%eax)
pop    %esp
aad    $0xfe
incl   (%edx,%eiz,1)
add    %al,(%eax)
jl     8063f87 <_IO_stdin_used+0x5de3>
(bad)
lcall  *(%eax)
and    (%eax),%al
add    %ch,%ah
aad    $0xfe
incl   0x0(%edx,%eiz,1)
add    %bl,(%eax,%ebx,8)
(bad)
incl   -0x27440000(%edx,%eiz,1)
(bad)
pushl  -0x26b40000(%edx,%eiz,1)
(bad)
dec    %esp
and    (%eax),%al
add    %bl,0x2304fffe(%edx,%ebx,8)
add    %al,(%eax)
pop    %esp
(bad)
ljmp   *(%eax)
and    (%eax),%eax
add    %cl,-0x2(%esp,%ebx,8)
ljmp   *0x23(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
fdivr  %st,%st(6)
jmp    *-0x22e40000(%ebx,%eiz,1)
(bad)
(bad)
mov    $0x4c000023,%eax
(bad)
call   *%eax
and    (%eax),%eax
add    %ch,-0x2(%ebp,%ebx,8)
(bad)
call   a4064034 <_end+0x9bff3fb4>
(bad)
incl   (%eax)
and    $0x0,%al
add    %bh,%ah
fdivrp %st,%st(6)
(bad)
cmp    $0x24,%al
add    %al,(%eax)
jl     8064005 <_IO_stdin_used+0x5e61>
(bad)
call   *-0x1c440000(%esp)
(bad)
pushl  -0x1bf40000(%esp)
(bad)
dec    %esp
and    $0x0,%al
add    %bh,-0x2(%esp,%eiz,8)
jmp    *(%eax)
and    $0xe48c0000,%eax
(bad)
pushl  -0x1b540000(,%eiz,1)
(bad)
decl   0x25(%eax)
add    %al,(%eax)
int3
in     $0xfe,%al
lcall  *0x0(%ebp,%eiz,1)
add    %ch,%ah
in     $0xfe,%al
pushl  0x25(%eax)
add    %al,(%eax)
cmp    $0xe5,%al
(bad)
ljmp   *-0x33ffffdb(%eax)
in     $0xfe,%eax
push   %eax
and    $0xe72c0000,%eax
(bad)
lcall  *0x26(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
out    %eax,$0xfe
(bad)
js     80640a4 <_IO_stdin_used+0x5f00>
add    %al,(%eax)
mov    $0x94fffee7,%esp
add    %al,%es:(%eax)
in     (%dx),%al
out    %eax,$0xfe
pushl  -0x17c40000(%esi,%eiz,1)
(bad)
jmp    *%eax
add    %al,%es:(%eax)
in     (%dx),%al
call   2f23409c <_end+0x271c401c>
add    %al,(%eax)
cld
jmp    2f6340a4 <_end+0x275c4024>
add    %al,(%eax)
sbb    $0xea,%al
(bad)
pushl  0x0(%edi,%eiz,1)
add    %ch,%ah
jmp    80640b1 <_IO_stdin_used+0x5f0d>
dec    %esp
daa
add    %al,(%eax)
int3
in     (%dx),%al
(bad)
jmp    *(%eax)
sub    %al,(%eax)
add    %ch,0x2860fffe(%ebp,%ebp,8)
add    %al,(%eax)
cld
out    %al,(%dx)
(bad)
jmp    *0x1c000028(%eax)
lock (bad)
(bad)
fsubrs (%eax)
add    %al,(%eax)
pop    %esp
repnz (bad)
incl   0x0(%ecx,%ebp,1)
add    %cl,(%ebx,%esi,8)
(bad)
(bad)
jl     806410f <_IO_stdin_used+0x5f6b>
add    %al,(%eax)
cld
hlt
(bad)
(bad)
fsubrl (%ecx)
add    %al,(%eax)
cld
cmc
(bad)
incl   0x0(%edx,%ebp,1)
add    %bl,-0x2(%esi,%esi,8)
pushl  0x2a(%eax)
add    %al,(%eax)
pushf
idiv   %esi
dec    %eax
sub    (%eax),%al
add    %bh,%ah
idiv   %esi
push   %esp
sub    (%eax),%al
add    %cl,(%eax,%edi,8)
(bad)
decl   (%eax)
sub    (%eax),%eax
add    %bl,-0x2(%eax,%edi,8)
ljmp   *(%ebx,%ebp,1)
add    %al,(%eax)
jl     806411a <_IO_stdin_used+0x5f76>
(bad)
incl   0x2b(%eax)
add    %al,(%eax)
fdivr  %st,%st(0)
(bad)
(bad)
js     8064159 <_IO_stdin_used+0x5fb5>
add    %al,(%eax)
sub    $0xf9,%al
(bad)
lcall  *0x4c00002b(%eax)
stc
(bad)
ljmp   *-0x3a40000(%ebx,%ebp,1)
(bad)
(bad)
in     (%dx),%al
sub    (%eax),%eax
add    %cl,%ah
std
(bad)
ljmp   *(%esp,%ebp,1)
add    %al,(%eax)
sub    $0xff,%al
(bad)
lcall  *-0x53ffffd4(%eax)
(bad)
(bad)
(bad)
in     (%dx),%al
sub    $0x0,%al
add    %bl,%ah
(bad)
(bad)
incl   (%eax)
sub    $0x7c0000,%eax
(bad)
pushl  (%eax)
sub    $0x9c0000,%eax
(bad)
incl   0x0(%ebp,%ebp,1)
add    %bh,0x2d58ffff(%eax,%eax,1)
add    %al,(%eax)
cld
add    %bh,%bh
ljmp   *0x0(%ebp,%ebp,1)
add    %cl,(%ecx,%eax,1)
(bad)
incl   -0x23ffffd3(%eax)
add    %edi,%edi
dec    %eax
sub    $0x1fc0000,%eax
(bad)
(bad)
fsubrl 0x20c0000
(bad)
push   %eax
sub    $0x22c0000,%eax
(bad)
incl   (%esi,%ebp,1)
add    %al,(%eax)
dec    %esp
add    %bh,%bh
lcall  *(%eax)
add    %al,%cs:(%eax)
pop    %esp
add    %bh,%bh
ljmp   *(%esi,%ebp,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %bh,%bh
incl   0x2e(%eax)
add    %al,(%eax)
jl     80641cc <_IO_stdin_used+0x6028>
(bad)
call   *0x0(%esi,%ebp,1)
add    %cl,0x2e68ffff(%edx,%eax,1)
add    %al,(%eax)
pushf
add    %bh,%bh
(bad)
jl     806420c <_IO_stdin_used+0x6068>
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %bh,%bh
call   *-0x33ffffd2(%eax)
push   %es
(bad)
(bad)
call   1406421f <_end+0xbff419f>
or     %edi,%edi
ljmp   *(%eax)
das
add    %al,(%eax)
lods   %ds:(%esi),%al
or     %edi,%edi
jmp    *0x2f(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
call   *%eax
das
add    %al,(%eax)
dec    %esp
adc    %bh,%bh
ljmp   *(%eax)
xor    %al,(%eax)
add    %cl,0x3040ffff(%eax,%edx,1)
add    %al,(%eax)
dec    %esp
adc    %edi,%edi
decl   -0x23ffffd0(%eax)
adc    %edi,%edi
ljmp   *0x12ac0000(%eax,%esi,1)
(bad)
incl   (%ecx,%esi,1)
add    %al,(%eax)
in     (%dx),%al
adc    %bh,%bh
lcall  *(%ecx,%esi,1)
add    %al,(%eax)
sub    $0x13,%al
(bad)
pushl  (%ecx,%esi,1)
add    %al,(%eax)
cld
adc    %edi,%edi
decl   0x2c000031(%eax)
adc    $0x31d4ffff,%eax
add    %al,(%eax)
pop    %esp
adc    $0x31ecffff,%eax
add    %al,(%eax)
cld
adc    $0x3208ffff,%eax
add    %al,(%eax)
or     $0x16,%al
(bad)
lcall  *(%edx,%esi,1)
add    %al,(%eax)
jl     8064280 <_IO_stdin_used+0x60dc>
(bad)
pushl  (%eax)
xor    (%eax),%al
add    %ch,0x3270ffff(%eax,%ebx,1)
add    %al,(%eax)
int3
sbb    %bh,%bh
incl   0x191c0000(%edx,%esi,1)
(bad)
(bad)
mov    $0xcc000032,%esp
sbb    $0x32fcffff,%eax
add    %al,(%eax)
fcompl 0x3310ffff
add    %al,(%eax)
in     (%dx),%al
and    %bh,%bh
ljmp   *0x33(%eax)
add    %al,(%eax)
jl     80642c3 <_IO_stdin_used+0x611f>
(bad)
(bad)
mov    $0xdc000033,%esp
and    %edi,%edi
(bad)
call   f40642e4 <_end+0xebff4264>
es
(bad)
ljmp   *0x0(%esp,%esi,1)
add    %cl,%ah
sub    %edi,%edi
dec    %eax
xor    $0x0,%al
add    %bh,%ah
sub    %edi,%edi
jmp    *%eax
xor    $0x0,%al
add    %bh,-0x1(%ebx,%ebp,1)
lcall  *(%eax)
xor    $0x2b9c0000,%eax
(bad)
ljmp   *0x2c0c0000(,%esi,1)
(bad)
incl   0x35(%eax)
add    %al,(%eax)
sub    $0x2c,%al
(bad)
call   *0x0(%ebp,%esi,1)
add    %ch,0x35acffff(,%ebp,1)
add    %al,(%eax)
jl     8064320 <_IO_stdin_used+0x617c>
(bad)
(bad)
in     (%dx),%al
xor    $0x2ebc0000,%eax
(bad)
incl   (%esi,%esi,1)
add    %al,(%eax)
sub    $0x2f,%al
(bad)
pushl  (%eax)
add    %al,%ss:(%eax)
mov    $0x44ffff2f,%esp
add    %al,%ss:(%eax)
mov    %?,(%ecx)
(bad)
lcall  *-0x53ffffca(%eax)
xor    $0xff,%al
push   %eax
add    %al,%ss:(%eax)
sub    $0x37,%al
(bad)
pushl  0x0(%edi,%esi,1)
add    %bl,%ah
aaa
(bad)
dec    %eax
aaa
add    %al,(%eax)
pop    %esp
cmp    %bh,%bh
decl   (%eax)
cmp    %al,(%eax)
add    %ch,-0x1(%esp,%edi,1)
decl   0x38(%eax)
add    %al,(%eax)
pop    %esp
cmp    $0x38a0ffff,%eax
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    $0x38b8ffff,%eax
add    %al,(%eax)
int3
ds
(bad)
(bad)
call   4064391 <_init-0x3fe4b1f>
ds
(bad)
(bad)
cld
cmp    %al,(%eax)
add    %bl,(%edi,%edi,1)
(bad)
call   *(%ecx,%edi,1)
add    %al,(%eax)
pop    %esp
aas
(bad)
pushl  (%ecx,%edi,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
aas
(bad)
call   *0x0(%ecx,%edi,1)
add    %cl,-0x1(%eax,%eax,2)
decl   0x40ac0000(%ecx,%edi,1)
(bad)
ljmp   *-0x13ffffc7(%eax)
inc    %eax
(bad)
(bad)
mov    $0xc000039,%esp
inc    %edx
(bad)
jmp    *%esp
cmp    %eax,(%eax)
add    %bl,(%edx,%eax,2)
(bad)
(bad)
clc
cmp    %eax,(%eax)
add    %ch,(%esp,%eax,2)
(bad)
lcall  *(%edx,%edi,1)
add    %al,(%eax)
pop    %esp
inc    %esp
(bad)
pushl  (%eax)
cmp    (%eax),%al
add    %ch,-0x1(%esi,%eax,2)
call   *0x0(%edx,%edi,1)
add    %bl,0x3a68ffff(%esi,%eax,2)
add    %al,(%eax)
in     (%dx),%al
inc    %esi
(bad)
decl   -0x53ffffc6(%eax)
inc    %edi
(bad)
push   %esp
cmp    (%eax),%al
add    %ch,(%eax,%ecx,2)
(bad)
jmp    *(%eax)
cmp    (%eax),%eax
add    %bh,-0x1(%eax,%ecx,2)
incl   0x3b(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
dec    %ecx
(bad)
decl   -0x73ffffc5(%eax)
dec    %ecx
(bad)
lcall  *0x49ac0000(%ebx,%edi,1)
(bad)
pushl  0x6c00003b(%eax)
dec    %edx
(bad)
call   *%esp
cmp    (%eax),%eax
add    %ch,%ah
dec    %esp
(bad)
incl   (%esp,%edi,1)
add    %al,(%eax)
int3
dec    %ebp
(bad)
ljmp   *(%esp,%edi,1)
add    %al,(%eax)
or     $0x4e,%al
(bad)
incl   0x3c(%eax)
add    %al,(%eax)
sub    $0x4e,%al
(bad)
call   *0x0(%esp,%edi,1)
add    %bh,%ah
dec    %esi
(bad)
ljmp   *-0x73ffffc4(%eax)
dec    %edi
(bad)
dec    %eax
cmp    $0x0,%al
add    %cl,%ah
dec    %edi
(bad)
jmp    *%eax
cmp    $0x0,%al
add    %ch,%ah
dec    %edi
(bad)
push   %esp
cmp    $0x0,%al
add    %cl,(%eax,%edx,2)
(bad)
decl   (%eax)
cmp    $0x501c0000,%eax
(bad)
lcall  *0x504c0000(,%edi,1)
(bad)
pushl  0x511c0000(,%edi,1)
(bad)
decl   0x55ac0000(%ebp,%edi,1)
(bad)
dec    %esp
cmp    $0x590c0000,%eax
(bad)
lcall  *(%eax)
add    %al,%ds:(%eax)
sbb    $0x5a,%al
(bad)
pushl  0x3e(%eax)
add    %al,(%eax)
cmp    $0x5a,%al
(bad)
incl   0x5acc0000(%esi,%edi,1)
(bad)
ljmp   *0x1c00003e(%eax)
pop    %ebx
(bad)
(bad)
mov    $0xbc00003e,%esp
pop    %esp
(bad)
ljmp   *(%eax)
aas
add    %al,(%eax)
fcompl -0x1(%ebp)
jmp    *0x3f(%eax)
add    %al,(%eax)
cld
pop    %ebp
(bad)
pushl  0x0(%edi,%edi,1)
add    %bl,(%esi,%ebx,2)
(bad)
decl   0x5e9c0000(%edi,%edi,1)
(bad)
dec    %eax
aas
add    %al,(%eax)
fcompl -0x1(%esi)
jmp    *%eax
aas
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %edi
(bad)
lcall  *(%eax,%eax,2)
add    %al,(%eax)
int3
pop    %edi
(bad)
incl   0x40(%eax)
add    %al,(%eax)
sub    $0x60,%al
(bad)
jmp    *0x0(%eax,%eax,2)
add    %bh,0x4098ffff(%eax,%eiz,2)
add    %al,(%eax)
in     (%dx),%al
pusha
(bad)
(bad)
mov    $0xcc000040,%eax
popa
(bad)
push   %eax
inc    %eax
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
(bad)
ljmp   *(%eax)
inc    %ecx
add    %al,(%eax)
cmp    $0x63,%al
(bad)
ljmp   *0x41(%eax)
add    %al,(%eax)
mov    %fs,-0x1(%edi,%edi,8)
test   $0x41,%al
add    %al,(%eax)
int3
fs
(bad)
dec    %eax
inc    %ecx
add    %al,(%eax)
in     (%dx),%al
gs
(bad)
call   *(%eax)
inc    %edx
add    %al,(%eax)
pop    %esp
data16
(bad)
pushl  (%edx,%eax,2)
add    %al,(%eax)
in     (%dx),%al
data16
(bad)
jmp    *0x0(%edx,%eax,2)
add    %cl,(%eax,%ebp,2)
(bad)
jmp    *0x683c0000(%edx,%eax,2)
(bad)
inc    %esp
inc    %edx
add    %al,(%eax)
dec    %esp
push   $0x42d8ffff
add    %al,(%eax)
sub    $0x6a,%al
(bad)
pushl  (%eax)
inc    %ebx
add    %al,(%eax)
lods   %ds:(%esi),%al
push   $0xffffffff
incl   0x0(%ebx,%eax,2)
add    %cl,(%ebx,%ebp,2)
(bad)
(bad)
js     8064599 <_IO_stdin_used+0x63f5>
add    %al,(%eax)
dec    %esp
imul   $0xffffffff,%edi,%edi
movsb  %ds:(%esi),%es:(%edi)
inc    %ebx
add    %al,(%eax)
jl     80645cd <_IO_stdin_used+0x6429>
(bad)
(bad)
mov    $0xfc000043,%eax
imul   $0xffffffff,%edi,%edi
in     (%dx),%al
inc    %ebx
add    %al,(%eax)
pop    %esp
insb   (%dx),%es:(%edi)
(bad)
lcall  *(%esp,%eax,2)
add    %al,(%eax)
lods   %ds:(%esi),%al
insb   (%dx),%es:(%edi)
(bad)
decl   0x0(%esp,%eax,2)
add    %ch,0x4498ffff(,%ebp,2)
add    %al,(%eax)
in     (%dx),%al
insl   (%dx),%es:(%edi)
(bad)
inc    %eax
inc    %esp
add    %al,(%eax)
sbb    $0x6e,%al
(bad)
call   *%esp
inc    %esp
add    %al,(%eax)
mov    %gs,-0x1(%esi)
push   %esp
inc    %esp
add    %al,(%eax)
fsubrl -0x1(%esi)
ljmp   *(%eax)
inc    %ebp
add    %al,(%eax)
pop    %esp
outsl  %ds:(%esi),(%dx)
(bad)
call   *0x0(%ebp,%eax,2)
add    %cl,(%eax,%esi,2)
(bad)
ljmp   *-0x63ffffbb(%eax)
ja     80645ba <_IO_stdin_used+0x6416>
(bad)
call   24064606 <_end+0x1bff4586>
js     80645c2 <_IO_stdin_used+0x641e>
incl   (%eax)
inc    %esi
add    %al,(%eax)
dec    %esp
js     80645ca <_IO_stdin_used+0x6426>
call   *(%esi,%eax,2)
add    %al,(%eax)
jl     806464a <_IO_stdin_used+0x64a6>
(bad)
ljmp   *(%eax)
inc    %esi
add    %al,(%eax)
cld
js     80645da <_IO_stdin_used+0x6436>
jmp    *0x0(%esi,%eax,2)
add    %bh,(%ecx,%edi,2)
(bad)
decl   0xc000046(%eax)
jp     80645ea <_IO_stdin_used+0x6446>
jmp    *%eax
inc    %esi
add    %al,(%eax)
sub    $0x7b,%al
(bad)
ljmp   *(%eax)
inc    %edi
add    %al,(%eax)
dec    %esp
jnp    80645fa <_IO_stdin_used+0x6456>
incl   0x47(%eax)
add    %al,(%eax)
cld
jl     8064602 <_IO_stdin_used+0x645e>
incl   0x3c000047(%eax)
jge    806460a <_IO_stdin_used+0x6466>
call   *0x7e2c0000(%edi,%eax,2)
(bad)
(bad)
call   b4064660 <_end+0xabff45e0>
jg     806461a <_IO_stdin_used+0x6476>
call   *0x0(%eax,%ecx,2)
add    %bl,(%eax,%eax,4)
(bad)
pushl  0x0(%eax,%ecx,2)
add    %bh,-0x1(%eax,%eax,4)
jmp    *-0x63ffffb8(%eax)
cmp    $0xff,%bh
mov    $0xbc000048,%eax
cmp    $0xff,%bh
rorb   0x0(%eax)
add    %cl,(%ecx,%eax,4)
(bad)
decl   (%ecx,%ecx,2)
add    %al,(%eax)
sub    $0x86,%al
(bad)
jmp    *0x0(%ecx,%ecx,2)
add    %ch,(%edi,%eax,4)
(bad)
jmp    *-0x78840000(%ecx,%ecx,2)
(bad)
(bad)
mov    $0xfc000049,%esp
xchg   %edi,%edi
(bad)
call   440646b2 <_end+0x3bff4632>
mov    %bh,%bh
decl   (%edx,%ecx,2)
add    %al,(%eax)
fmull  0x4a68ff(%edi,%edi,8)
add    %bh,0x4a80ffff(,%ecx,4)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
jmp    *-0x63ffffb6(%eax)
xchg   %eax,%ecx
(bad)
(bad)
cld
dec    %edx
add    %al,(%eax)
fcoml  0x4b1cffff(%ecx)
add    %al,(%eax)
sbb    $0x92,%al
(bad)
(bad)
cmp    $0x4b,%al
add    %al,(%eax)
pop    %esp
xchg   %eax,%edx
(bad)
lcall  *0x0(%ebx,%ecx,2)
add    %bl,(%ebx,%edx,4)
(bad)
(bad)
jl     80646f9 <_IO_stdin_used+0x6555>
add    %al,(%eax)
jl     8064646 <_IO_stdin_used+0x64a2>
(bad)
inc    %esp
dec    %ebx
add    %al,(%eax)
sub    $0x95,%al
(bad)
decl   (%esp,%ecx,2)
add    %al,(%eax)
mov    %ss,0x4c24ffff(%ebp)
add    %al,(%eax)
sub    $0x98,%al
(bad)
ljmp   *0x4c(%eax)
add    %al,(%eax)
dec    %esp
popf
(bad)
ljmp   *-0x3ffffb4(%eax)
popf
(bad)
jmp    *%eax
dec    %esp
add    %al,(%eax)
jl     8064680 <_IO_stdin_used+0x64dc>
(bad)
decl   -0x5fa40000(,%ecx,2)
(bad)
decl   -0x5f540000(%ebp,%ecx,2)
(bad)
pushl  -0x3ffffb3(%eax)
mov    0x4dd4ffff,%al
add    %al,(%eax)
or     $0xa1,%al
(bad)
(bad)
call   24064756 <_end+0x1bff46d6>
mov    0x4dfcffff,%eax
add    %al,(%eax)
dec    %esp
mov    0x4e14ffff,%eax
add    %al,(%eax)
jl     80646bb <_IO_stdin_used+0x6517>
(bad)
ljmp   *(%esi,%ecx,2)
add    %al,(%eax)
mov    %fs,0x4e40ffff(%ecx)
add    %al,(%eax)
or     $0xa2,%al
(bad)
ljmp   *0x0(%esi,%ecx,2)
add    %cl,0x4ea4ffff(%ebx,%eiz,4)
add    %al,(%eax)
pop    %esp
movsl  %ds:(%esi),%es:(%edi)
(bad)
(bad)
fmull  0x0(%esi)
add    %cl,%ah
movsl  %ds:(%esi),%es:(%edi)
(bad)
lcall  *(%eax)
dec    %edi
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     806475f <_IO_stdin_used+0x65bb>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
js     80647b1 <_IO_stdin_used+0x660d>
(bad)
inc    %eax
add    $0x0,%al
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     806477f <_IO_stdin_used+0x65db>
js     806477d <_IO_stdin_used+0x65d9>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,-0x2(%ecx,%edx,2)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x6afffe51(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a5602
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    0xb4000000,%al
push   %ecx
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,0x52180000(%eax,%eax,1)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %bh,(%edx,%edx,2)
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x1,%al
add    %al,(%eax)
push   %eax
dec    %ebx
(bad)
jmp    *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x10,%eax
and    $0x1,%al
add    %al,(%eax)
xor    %dl,-0x2(%edx)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
sub    $0x52,%al
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
push   %eax
add    0x410c0e0a(%esi),%ah
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
push   $0x2c000001
push   %ebx
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cwtl
add    %eax,(%eax)
add    %cl,-0x2(%ebx,%edx,2)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dl,-0x2(%ebx,%edx,2)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x68200e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ah,(%edx,%eax,1)
add    %al,(%eax)
jo     80649c5 <_IO_stdin_used+0x6821>
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
mov    %ss,-0x2(%ebx)
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
dec    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    0xd4000002,%al
push   %ebx
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %al,(%esp,%edx,2)
(bad)
call   *%ebp
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
pusha
add    %cl,%bh
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
lock add (%eax),%al
add    %dh,0x129fffe(%edi,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
jg     8064a65 <_IO_stdin_used+0x68c1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
and    %al,(%ebx)
add    %al,(%eax)
mov    $0x58,%ah
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x3,%al
add    %al,(%eax)
cwtl
pop    %ecx
(bad)
dec    %edx
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1b9fc(%ebx)
adc    %al,(%ebx)
sub    (%edx,%ecx,1),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,0x0(%ebx,%eax,1)
add    %dh,(%eax)
pop    %edi
(bad)
(bad)
fild   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
jge    8064aed <_IO_stdin_used+0x6949>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,-0x1bfffffd(%eax)
pop    %edi
(bad)
decl   0x0(%ecx)
dec    %esp
push   %cs
and    %bl,0xe(%edi)
add    $0x45,%al
push   %cs
and    %ch,0xa(%ebx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
rolb   $0x0,(%ebx)
add    %dl,-0x2(%eax,%eiz,2)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fadds  (%ebx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pusha
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock add (%eax),%eax
add    %al,0x24fffe(%eax,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %bl,0x24fffe(%eax,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %dh,0x2fffe(%eax,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x4,%al
add    %al,(%eax)
mov    $0x60,%al
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %esp
add    $0x0,%al
add    %bl,%al
pusha
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
and    %bl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fs
add    $0x0,%al
add    %al,(%eax)
popa
(bad)
jmp    *0x0
dec    %esp
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jl     8064bca <_IO_stdin_used+0x6a26>
add    %al,(%eax)
sbb    %ah,-0x2(%ecx)
jmp    *0x0
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
add    $0x0,%al
add    %dh,(%eax)
popa
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    $0x0,%al
add    %cl,0x61(%eax)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
faddl  (%eax,%eax,1)
add    %ch,%al
popa
(bad)
(bad)
mov    $0x0,%edi
inc    %ebx
push   %cs
and    %al,(%edx)
inc    %ebx
or     (%esi),%cl
add    $0x42,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
clc
add    $0x0,%al
add    %cl,0x70fffe(%edx,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
and    $0x5,%al
add    %al,(%eax)
shlb   -0x2(%edx)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0x8(%esi,%ecx,1),%ecx
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x5(%eax)
add    %al,(%eax)
hlt
(bad)
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fs
add    $0x63300000,%eax
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
js     8064cc7 <_IO_stdin_used+0x6b23>
add    %al,(%eax)
cmp    $0x63,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
xchg   %eax,%esp
add    %al,(%eax)
add    %dl,0x54000005(%eax)
arpl   %di,%si
incl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcb,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
sub    %al,(%esi)
add    %al,(%eax)
dec    %esp
fs
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,0x6(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
fs
(bad)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %al,0x65300000(%esi,%eax,1)
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %dl,0x8(%esi,%ecx,1)
addl   $0x67,(%edx)
ret
push   %cs
add    $0x0,%al
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    0x64000006,%al
gs
(bad)
call   *0x41000000(%esi,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
sub    $0x2,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
adc    (%edx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
cld
push   %es
add    %al,(%eax)
test   $0x6b,%al
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
dec    %ebx
push   %cs
or     %al,0xec36002(%ebx)
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,(%edi)
add    %al,(%eax)
int3
imul   $0xffffffff,%esi,%edi
add    %al,(%bx,%si)
add    %al,(%eax)
dec    %esp
push   %cs
adc    %bh,0xa(%ecx)
push   %cs
add    $0x43,%al
or     0x4(%esi,%ecx,1),%ecx
dec    %esp
push   %cs
adc    %bl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
pop    %es
add    %al,(%eax)
sbb    $0x6c,%al
(bad)
call   *0x0(%ebx)
dec    %esp
push   %cs
and    %al,(%edx)
inc    %esp
push   %cs
add    $0x48,%al
push   %cs
and    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x0(%edi,%eax,1)
add    %ah,-0x6b000194(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x34,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %es
add    %al,(%eax)
call   80064d6a <_end+0x77ff4cea>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
in     $0x7,%al
add    %al,(%eax)
xor    %ch,-0x2(%esi)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
jp     8064f4d <_IO_stdin_used+0x6da9>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     (%eax),%eax
pop    %eax
add    %al,(%eax)
add    %bl,(%eax,%ecx,1)
add    %al,(%eax)
mov    %ch,-0x2(%esi)
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a8002
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%edx),%ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     -0x3d(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,0x8(%eax)
add    %al,(%eax)
in     (%dx),%al
outsb  %ds:(%esi),(%dx)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    %cs,(%eax)
add    %al,(%eax)
sbb    %ch,-0x2(%edi)
jmp    *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %dl,%ah
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
les    (%eax),%ecx
add    %al,(%eax)
adc    %dh,-0x2(%eax)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fmull  (%eax)
add    %al,(%eax)
cmp    %dh,-0x2(%eax)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
lock or %al,(%eax)
add    %al,-0x2(%eax,%esi,2)
jmp    *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jo     8065063 <_IO_stdin_used+0x6ebf>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
sub    %cl,(%ecx)
add    %al,(%eax)
cmp    $0x71,%al
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pusha
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
or     %eax,(%eax)
add    %ch,%ah
jno    80650a5 <_IO_stdin_used+0x6f01>
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %eax,(%eax)
add    %bh,%al
jno    80650b9 <_IO_stdin_used+0x6f15>
(bad)
cmp    $0x1,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffcb,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
or     %eax,(%eax)
add    %bh,%al
jb     80650f9 <_IO_stdin_used+0x6f55>
pushl  (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,%ah
or     %eax,(%eax)
add    %al,(%eax)
je     8065131 <_IO_stdin_used+0x6f8d>
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,-0x3cf590fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ah,(%eax)
or     (%eax),%al
add    %dl,(%esp,%esi,2)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0x41100e0a(%esi),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,0xa(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
je     80651b5 <_IO_stdin_used+0x7011>
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jl     80651d0 <_IO_stdin_used+0x702c>
add    %al,(%eax)
or     %dh,-0x2(%ebp)
dec    %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebp),%dl
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x51,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
mov    0xb400000a,%al
jbe    80651ed <_IO_stdin_used+0x7049>
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%edi)
or     %al,-0x3cf5acfe(%ebx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
ret
push   %cs
add    $0x45,%al
or     -0x3d(%eax),%ecx
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,%al
or     (%eax),%al
add    %bl,%ah
jbe    8065215 <_IO_stdin_used+0x7071>
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,%ah
or     (%eax),%al
add    %ch,%al
jbe    8065229 <_IO_stdin_used+0x7085>
jmp    *0x43000000(%eax,%eax,1)
push   %cs
xor    %al,(%edx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
clc
or     (%eax),%al
add    %bh,-0x2(%edi,%esi,2)
(bad)
mov    $0x1,%ebx
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    -0x3cb9f7f2(%edx,%ecx,1),%bh
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
add    %bh,-0x2(%ecx)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
dec    %eax
or     (%eax),%eax
add    %cl,(%ecx,%edi,2)
(bad)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %bl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
jo     80652da <_IO_stdin_used+0x7136>
add    %al,(%eax)
xchg   %eax,%esp
or     (%eax),%eax
add    %dh,0x79(%eax)
(bad)
pushl  0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
sbb    $0x4e,%al
or     (%esi),%cl
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
je     8065311 <_IO_stdin_used+0x716d>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%eax),%esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4e,%al
or     0xa(%ecx),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4d,%al
or     0xe(%ecx),%ecx
or     $0x47,%al
ret
push   %cs
or     %al,-0x3a(%esi)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
or     %cl,(%eax,%eax,1)
add    %bh,-0x2(%edx,%edi,2)
pushl  (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xac30202(%ebx)
ret
push   %cs
add    $0x44,%al
or     0xa(%edx),%ecx
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x30000000
or     $0x0,%al
add    %dl,0xdffffe(%ebx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6d180e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x7c080000(%esp,%ecx,1)
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1400000c(%eax)
jl     80653fd <_IO_stdin_used+0x7259>
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
or     $0x0,%al
add    %ah,(%eax)
jl     8065411 <_IO_stdin_used+0x726d>
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
or     $0x0,%al
add    %ch,(%esp,%edi,2)
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
in     (%dx),%al
or     $0x0,%al
add    %cl,0x7c(%eax)
(bad)
incl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70400e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%esi
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,0xd(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jge    80654a5 <_IO_stdin_used+0x7301>
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x71300e45
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     $0x7d800000,%eax
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
popa
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %ch,0x7dd80000(%ebp,%ecx,1)
(bad)
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xc343100e,(%edx),%ecx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
clc
or     $0x7e5c0000,%eax
(bad)
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%esi),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   %cs
add    %al,(%eax)
aam    $0x7e
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edx
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %cs
add    %al,(%eax)
add    %bh,-0x2(%edi)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
mov    %cl,(%esi)
add    %al,(%eax)
cmp    $0x7f,%al
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    80655ff <_IO_stdin_used+0x745b>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x7f580000(%esi,%ecx,1)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
add    %dl,%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
loopne 8065638 <_IO_stdin_used+0x7494>
add    %al,(%eax)
add    $0x80,%al
(bad)
lcall  *0x1
dec    %ebp
push   %cs
or     %al,0x300e4302(%ebx)
add    0xe(%edi),%ch
or     %al,-0x3d(%ebx)
push   %cs
add    $0x4e,%al
push   %cs
xor    %al,0x28000002(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
sldt   (%eax)
cld
cmp    $0xff,%dh
les    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    $0xc3410c0e,%esp
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,(%edi,%ecx,1)
add    %al,(%eax)
mov    0xccfffe81,%al
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
xor    %al,(%edx)
test   %ecx,(%edx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
push   %eax
sldt   (%eax)
push   %esp
(bad)
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
add    0xa(%eax),%ch
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%ecx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jl     80656d5 <_IO_stdin_used+0x7531>
add    %al,(%eax)
mov    $0x23fffe82,%eax
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
sldt   (%eax)
rolb   0x3afffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dh,0xe(%ebx)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
sldt   (%eax)
clc
(bad)
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xaa10204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ch,%ah
sldt   (%eax)
mov    %al,0x6cfffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    $0x10,%al
add    %al,(%eax)
mov    $0x83,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x10(%eax)
add    %al,(%eax)
in     (%dx),%al
cmp    $0xffffffff,%esi
sub    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
pop    %esp
adc    %al,(%eax)
add    %cl,(%eax)
test   %bh,%dh
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbf,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bl,-0x63fffff0(%eax)
test   %bh,%dh
(bad)
jns    80657ea <_IO_stdin_used+0x7646>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%ch
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
int3
adc    %al,(%eax)
add    %ch,%al
test   %bh,%dh
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
loopne 806583a <_IO_stdin_used+0x7696>
add    %al,(%eax)
hlt
test   %bh,%dh
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
hlt
adc    %al,(%eax)
add    %al,(%eax)
test   %edi,%esi
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
arpl   %cx,(%esi)
adc    %bl,0xe(%ecx)
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %cl,(%ecx,%edx,1)
add    %al,(%eax)
sub    %al,0x875fffe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x77500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,0x11(%eax)
add    %al,(%eax)
push   %esp
(bad)
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff83,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xdc000011,%eax
(bad)
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
adc    %eax,(%eax)
add    %bl,%al
(bad)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
loopne 806593b <_IO_stdin_used+0x7797>
add    %al,(%eax)
in     $0x8d,%al
(bad)
lcall  *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x10c00e46
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
and    $0x12,%al
add    %al,(%eax)
add    %cl,0x135fffe(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x2,(%ecx)
decl   (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %ah,0x12(%eax)
add    %al,(%eax)
add    $0x90,%al
(bad)
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
js     80659c5 <_IO_stdin_used+0x7821>
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
jl     80659d8 <_IO_stdin_used+0x7834>
add    %al,(%eax)
sbb    %dl,0xaafffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xa(%ebp),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,-0x6e700000(%edx,%edx,1)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %ah,%al
adc    (%eax),%al
add    %ah,0x100fffe(%ecx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%ebx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,0x13(%eax)
add    %al,(%eax)
cmp    $0x92,%al
(bad)
lcall  *(%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
mov    0x45040e0a,%al
or     0xa(%ecx),%ecx
push   %cs
add    $0x47,%al
or     0xa(%eax),%ebp
push   %cs
add    $0x48,%al
or     (%edx),%eax
imul   $0xb47040e,(%edx),%ecx
pop    %esi
or     (%esi),%cl
add    $0x42,%al
or     0xa(%eax),%ebp
push   %cs
add    $0x48,%al
or     0xa(%ecx),%ebx
push   %cs
add    $0x45,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
mov    %dl,(%ebx)
add    %al,(%eax)
sbb    $0x94,%al
(bad)
(bad)
mov    $0x0,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,%ah
adc    (%eax),%eax
add    %dl,-0x2000016c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebp
push   %cs
adc    %al,0xe(%ebx,%eax,8)
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%esp,%edx,1)
add    %al,(%eax)
sub    %dl,0x16fffe(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    %dl,(%eax,%eax,1)
add    %dh,0x23fffe(,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
dec    %eax
adc    $0x0,%al
add    %cl,-0x2(%ebp,%edx,4)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
test   %dl,(%eax,%eax,1)
add    %ah,0x39fffe95(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,0xe(%ebp)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
pushf
adc    $0x0,%al
add    %cl,%al
xchg   %eax,%ebp
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
enter  $0x14,$0x0
fcoml  0x19fefffe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x10500e43
add    %al,(%eax)
lock adc $0x0,%al
add    %dh,0x1afffe(%edi,%ebp,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x15,%al
add    %al,(%eax)
shrb   $0x0,0x3afffe(%edi)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
je     8065c71 <_IO_stdin_used+0x7acd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,-0x50200000(,%edx,1)
(bad)
(bad)
incb   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x18,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
fs
adc    $0xb1a00000,%eax
(bad)
(bad)
in     (%dx),%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x72,0x2180e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
rclb   0xb2240000
(bad)
call   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
adc    %dl,(%esi)
add    %al,(%eax)
add    $0xb3,%al
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %cl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%esp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    %dl,(%esi)
add    %al,(%eax)
and    $0xb3,%al
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %cl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%esp
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
push   %ss
add    %al,(%eax)
inc    %esp
mov    $0xfe,%bl
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi,%edx,1)
add    %dl,-0x4d(%eax)
(bad)
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x16(%eax)
add    %al,(%eax)
pop    %esp
mov    $0xfe,%bl
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ebp),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %ss
add    %al,(%eax)
mov    0x2cfffeb3,%al
add    (%eax),%al
add    %al,(%eax)
push   %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
in     $0x16,%al
add    %al,(%eax)
nop
mov    $0xfe,%ch
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x17,%al
add    %al,(%eax)
add    %dh,0x83fffe(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
jg     8065e7d <_IO_stdin_used+0x7cd9>
add    $0x34,%al
add    %al,(%eax)
add    %ch,(%edi,%edx,1)
add    %al,(%eax)
js     8065e30 <_IO_stdin_used+0x7c8c>
(bad)
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    %dh,%al
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi,%edx,1)
add    %dl,-0x48000149(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    -0x3cbef7f2(%ecx),%dh
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %dl,(%edi)
add    %al,(%eax)
sub    $0xb8,%al
(bad)
jmp    *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
enter  $0x17,$0x0
fdivrl 0x5cfffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%ebx,1)
add    %al,(%eax)
add    %bh,0x62fffe(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sbb    %bl,(%eax)
add    %al,(%eax)
pop    %esp
mov    $0x29fffe,%ecx
add    %al,(%eax)
add    %cl,0xe(%edi)
and    %bl,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    %bl,(%eax)
add    %al,(%eax)
je     8065f37 <_IO_stdin_used+0x7d93>
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ebx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
sbb    %al,(%eax)
add    %bh,-0x2(%ecx,%edi,4)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
pusha
sbb    %al,(%eax)
add    %dl,0x155fffe(%ecx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,-0x45480000(%eax,%ebx,1)
(bad)
pushl  0x4(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
hlt
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
hlt
sbb    %al,(%eax)
add    %ah,%al
mov    $0x40fffe,%esi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x19,%al
add    %al,(%eax)
add    %bh,0x44fffe(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
inc    %eax
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %ch,(%ecx,%ebx,1)
add    %al,(%eax)
cmp    %bh,0x65fffe(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x40,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x54000019(%eax)
mov    $0x10fffe,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sbb    %eax,(%eax)
add    %dl,-0x41(%eax)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x5c000019(%eax)
mov    $0x13fffe,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x68000019,%esp
mov    $0x1bfffe,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
rcrb   (%ecx)
add    %al,(%eax)
je     80660dd <_IO_stdin_used+0x7f39>
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ah,0xa(%esi)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%eax
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
sbb    (%eax),%al
add    %cl,0x87fffe(%edi,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %dl,0x1a(%eax)
add    %al,(%eax)
aam    $0xbf
(bad)
call   *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%eax),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,-0x33ffffe6(%eax)
sar    $0xff,%dh
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jae    8066225 <_IO_stdin_used+0x8081>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,%al
sbb    (%eax),%al
add    %ch,%ah
sar    $0xff,%dh
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
hlt
sbb    (%eax),%al
add    %ah,(%eax)
sar    $0xff,%esi
and    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
pop    %ecx
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x28,%al
add    %al,(%eax)
add    %dl,(%ebx,%ebx,1)
add    %al,(%eax)
xor    %al,%cl
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %al,0x1b(%eax)
add    %al,(%eax)
push   %esp
sar    $0xff,%esi
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff90,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x0(%ebx,%ebx,1)
add    %cl,%al
sar    $0xff,%esi
or     (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
mov    $0x9800001b,%esp
ret    $0xfffe
sbb    $0x0,%eax
inc    %ebx
push   %cs
and    %bl,0xe(%ecx)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,%ah
sbb    (%eax),%eax
add    %ah,-0x3a00013e(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x19,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,(%esp,%ebx,1)
add    %al,(%eax)
sbb    %al,%ah
(bad)
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x6a500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbbb   $0x0,(%eax,%eax,1)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffba,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rcrb   $0x0,(%eax,%eax,1)
inc    %esp
(bad)
inc    %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x73,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
add    %bl,0xc6540000
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
add    0xa(%esi),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
cmp    %bl,0xc73c0000
(bad)
pushl  (%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5b500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
mov    $0x1,%cl
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0xc9100000,%eax
(bad)
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,0x0(%eax,%eax,1)
add    %bl,%ah
sbb    $0xc9880000,%eax
(bad)
(bad)
in     (%dx),%al
add    %eax,(%eax)
add    %al,(%eax)
pop    %ebx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3500e43
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4f,%al
push   %cs
push   %eax
addl   $0xffffff87,0x4860285
add    0xa(%ecx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,0x0(%eax,%eax,1)
add    %bh,(%esi,%ebx,1)
add    %al,(%eax)
sbb    %cl,%bl
(bad)
(bad)
cld
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd0,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,-0x34500000(%esi,%ebx,1)
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x2,(%ecx)
dec    %esi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,%al
push   %ds
add    %al,(%eax)
in     $0xcb,%al
(bad)
(bad)
cmp    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x2,(%ecx)
bound  %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %esp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%edx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sub    %bl,(%edi)
add    %al,(%eax)
int3
int3
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1bcfe(%ebx)
add    %ebp,0xa(%esi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%esp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   %esp
pop    %ds
add    %al,(%eax)
add    %cl,%ch
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x1f(%eax)
add    %al,(%eax)
cld
int3
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jbe    80666d1 <_IO_stdin_used+0x852d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %ds,(%edi)
add    %al,(%eax)
sub    %cl,%ch
(bad)
call   *0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    0x3400001f,%al
int    $0xfe
jmp    *0x0(%eax)
add    %al,(%eax)
add    %dl,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fcomps (%edi)
add    %al,(%eax)
pop    %esp
int    $0xfe
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,%al
pop    %ds
add    %al,(%eax)
mov    %cs,%ebp
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
or     $0x20,%al
add    %al,(%eax)
cwtl
int    $0xfe
decl   (%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
dec    %esp
and    %al,(%eax)
add    %ch,-0x30(%eax)
(bad)
jmp    *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdd,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   $0x8c000000
and    %al,(%eax)
add    %bl,0x55fffed1(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
movsb  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0x0(%eax),%edx
add    %al,(%eax)
clc
and    %al,(%eax)
add    %cl,0x78fffe(%edx,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7e400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%ebx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
and    %eax,(%eax)
add    %bh,0x30fffed2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pusha
and    %eax,(%eax)
add    %dl,%ah
sar    %cl,%dh
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x44000021(%eax)
sar    %cl,%esi
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %eax,(%eax)
add    %dl,-0x2d(%eax)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x5c000021(%eax)
sar    %cl,%esi
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
and    %eax,(%eax)
add    %cl,0x6fffed3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %ah,%al
and    %eax,(%eax)
add    %al,0xd0fffe(%ebx,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jp     8066953 <_IO_stdin_used+0x87af>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
(bad)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sub    %ah,(%edx)
add    %al,(%eax)
or     $0xd4,%al
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%edx,%eiz,1)
add    %al,(%eax)
sbb    %dl,%ah
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x22(%eax)
add    %al,(%eax)
adc    $0xd4,%al
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx,%eiz,1)
add    %ah,(%eax)
aam    $0xfe
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x22(%eax)
add    %al,(%eax)
sub    $0xd4,%al
(bad)
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x2bd80000(%edx,%eiz,1)
(bad)
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x24000022(%eax)
aam    $0xfe
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x22,%ah
add    %al,(%eax)
and    %dl,%ah
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
and    (%eax),%al
add    %bl,(%esp,%edx,8)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
and    (%eax),%al
add    %bl,(%eax)
aam    $0xfe
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,%al
and    (%eax),%al
add    %dl,(%esp,%edx,8)
(bad)
jmp    *(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff3,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
ret    $0xa01
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %eax
and    (%eax),%eax
add    %bl,%ah
xlat   %ds:(%ebx)
(bad)
pushl  (%esi)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd7,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
mov    %ah,(%ebx)
add    %al,(%eax)
(bad)
(bad)
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
popa
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %al,%al
and    (%eax),%eax
add    %al,-0x2(%esp,%ebx,8)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jecxz  8066b50 <_IO_stdin_used+0x89ac>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
and    $0x0,%al
add    %dl,0xdffffe(%edi,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x53,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    %ah,(%eax,%eax,1)
add    %bl,(%eax,%eiz,8)
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%eax)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ah,0x44000024(%eax)
loopne 8066bed <_IO_stdin_used+0x8a49>
(bad)
mov    $0x0,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %al,(%edx)
or     %gs:(%esi),%cl
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%edi),%edx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%esp
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%al
and    $0x0,%al
add    %bh,0x90fffe(%eax,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%eax),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4b,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,-0x1ed80000(,%eiz,1)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
fs
and    $0xe1a00000,%eax
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jl     8066ceb <_IO_stdin_used+0x8b47>
add    %al,(%eax)
enter  $0xfee1,$0xff
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%esi)
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dl,-0x1e100000(%ebp,%eiz,1)
(bad)
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
addr16 push %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %ch,%al
and    $0xe26c0000,%eax
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
movsb  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebx
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x26,%al
add    %al,(%eax)
push   %eax
jecxz  8066d81 <_IO_stdin_used+0x8bdd>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi,%eiz,1)
add    %ch,-0x1d(%eax)
(bad)
call   *0x43000000(%eax,%eax,1)
push   %cs
and    %al,(%edx)
jge    8066db1 <_IO_stdin_used+0x8c0d>
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
push   $0xec000026
jecxz  8066db5 <_IO_stdin_used+0x8c11>
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esi,%eiz,1)
add    %ch,%al
jecxz  8066dc9 <_IO_stdin_used+0x8c25>
ljmp   *0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
add    %al,%es:(%eax)
inc    %esp
in     $0xfe,%al
jmp    *0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
shlb   (%esi)
add    %al,(%eax)
xor    $0xe6,%al
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
in     $0x26,%al
add    %al,(%eax)
inc    %eax
out    %al,$0xfe
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dl,0xa(%edi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%ebx
or     $0x48,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x27,%al
add    %al,(%eax)
pop    %eax
out    %al,$0xfe
ljmp   *0x41000000(%esp,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x0(%edi,%eiz,1)
add    %cl,%al
ljmp   $0x0,$0xafffe
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x27(%eax)
add    %al,(%eax)
(bad)
ljmp   $0x0,$0x303fffe
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6d,0x3600e45
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
mov    %al,0x46140e0a
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %cl,%al
daa
add    %al,(%eax)
jl     8066f03 <_IO_stdin_used+0x8d5f>
(bad)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x69,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%ebp,1)
add    %al,(%eax)
mov    $0x57fffeed,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %cl,0x28(%eax)
add    %al,(%eax)
in     (%dx),%al
in     (%dx),%eax
(bad)
incl   (%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcb,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
stos   %eax,%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
int3
sub    %al,(%eax)
add    %bh,-0xe(%eax)
(bad)
jmp    *%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x100e0a01(%ebx),%esi
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
sub    %ch,(%ecx)
add    %al,(%eax)
cld
hlt
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
push   %cs
adc    %bl,0xe(%ebp)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
sub    %eax,(%eax)
add    %dl,0x17bfffe(,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %ch,%ch
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x29(%eax)
add    %al,(%eax)
pop    %esp
idiv   %dh
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x9980000(%ecx,%ebp,1)
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0xc4000029,%al
idiv   %dh
call   *0x0
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x9300000(%ecx,%ebp,1)
(bad)
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     $0x2a,%al
add    %al,(%eax)
js     8067151 <_IO_stdin_used+0x8fad>
(bad)
incl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x9,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
dec    %esp
sub    (%eax),%al
add    %cl,0x38fffef8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,0x4(%esi,%ecx,1)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx,%ebp,1)
add    %dh,0x64fffef8(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
push   %cs
and    %al,0x80e6102(%ebx)
inc    %ecx
ret
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0xbffffd6(%eax)
clc
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,-0x6900000(%edx,%ebp,1)
(bad)
dec    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe9,0x2240e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
rorl   (%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,%al
sub    (%eax),%al
add    %ch,%ah
cli
(bad)
call   *(%ecx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff90,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
rorl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
addb   $0x0,(%eax)
add    %dl,0x2b(%eax)
add    %al,(%eax)
mov    $0xfd,%ah
(bad)
(bad)
jns    80672a4 <_IO_stdin_used+0x9100>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
xchg   %eax,%edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %esp
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
aam    $0x2b
add    %al,(%eax)
mov    $0xff,%al
(bad)
ljmp   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%ebx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sub    %ch,(%eax,%eax,1)
add    %cl,(%eax,%eax,1)
(bad)
pushl  0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7d,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   $0x4c00002c
add    %bh,%bh
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ch,0x1c00002c(%eax)
add    $0xff,%al
(bad)
out    %eax,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %ch,0x4b40000
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %dh,0xe(%ebx)
and    %bl,0xe(%ecx)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
sbb    %ch,0x4ec0000
(bad)
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
add    $0x44,%al
or     0xa(%esi),%ebx
push   %cs
add    $0x42,%al
or     0xa(%edi),%edi
push   %cs
add    $0x41,%al
or     0xa(%eax),%edi
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %eax
sub    $0x5dc0000,%eax
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
sub    $0x5f80000,%eax
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%ecx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
je     80674eb <_IO_stdin_used+0x9347>
add    %al,(%eax)
add    %al,(%esi)
(bad)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jp     80674e1 <_IO_stdin_used+0x933d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0x6200000(%ebp,%ebp,1)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %cl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%esi),%edi
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0x2d,%ah
add    %al,(%eax)
push   %eax
push   %es
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,%ah
sub    $0x6b80000,%eax
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,%cs:(%eax)
cld
push   %es
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
sbb    $0x2e,%al
add    %al,(%eax)
sub    %al,(%edi)
(bad)
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%edx
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
add    %al,%cs:(%eax)
and    %cl,(%eax)
(bad)
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x2e(%eax)
add    %al,(%eax)
sbb    $0x8,%al
(bad)
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
jnp    80675c1 <_IO_stdin_used+0x941d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
jl     80675f4 <_IO_stdin_used+0x9450>
add    %al,(%eax)
or     %cl,(%edx)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x2400002e(%eax)
or     %bh,%bh
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
jnp    80675f9 <_IO_stdin_used+0x9455>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x2e,%ah
add    %al,(%eax)
adc    %cl,(%edi,%edi,8)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x2e,$0x0
sub    $0xc,%al
(bad)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %cl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%esi
add    $0x0,%al
add    %al,(%eax)
push   $0xe8000000
add    %al,%cs:(%eax)
pop    %esp
or     $0xff,%al
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
das
add    %al,(%eax)
mov    $0xc,%al
(bad)
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%ecx
add    $0x44,%al
or     0xe(%edx,%ecx,1),%ebx
add    $0x44,%al
or     0xe(%eax),%esp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
subb   $0x0,(%edi)
add    %al,0x43ffff(,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%esi),%esp
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,0x3400002f(%eax)
or     $0xe7ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bl,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,%al
das
add    %al,(%eax)
fmull  0x1effff
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cld
das
add    %al,(%eax)
call   1e06765a <_end+0x15ff75da>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xor    %al,(%eax)
add    %dh,%ah
or     $0xbaffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%edx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     (%edx),%eax
lea    (%esi),%ecx
add    $0x2c,%al
add    %al,(%eax)
add    %dh,(%eax,%esi,1)
add    %al,(%eax)
nop
push   %cs
(bad)
pushl  0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
addb   $0xc,0xe0a4a02
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
xor    %al,%fs:(%eax)
add    %ah,%al
adc    %bh,%bh
call   *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   $0xa
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edx
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %?,(%eax)
add    %al,(%eax)
cwtl
adc    %edi,%edi
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0xc4000030,%al
adc    %edi,%edi
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    $0x30,%ah
add    %al,(%eax)
rclb   (%ecx)
(bad)
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff95,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ebx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
or     %dh,(%ecx)
add    %al,(%eax)
dec    %esp
adc    %bh,%bh
decl   0x0(%ebx)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %ebp
or     (%esi),%cl
add    $0x48,%al
or     0xe(%edx),%edi
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sub    %dh,(%ecx)
add    %al,(%eax)
mov    $0x40ffff12,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x31(%eax)
add    %al,(%eax)
in     $0x12,%al
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx,%esi,1)
add    %dh,%al
adc    %bh,%bh
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x31(%eax)
add    %al,(%eax)
cld
adc    %bh,%bh
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
jl     80678f7 <_IO_stdin_used+0x9753>
add    %al,(%eax)
clc
adc    %bh,%bh
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%ebx)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,0x13100000(%ecx,%esi,1)
(bad)
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
xor    %eax,(%eax)
add    %cl,-0x720000ed(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %cl,0x0(%eax)
add    %al,(%eax)
sub    $0x32,%al
add    %al,(%eax)
fcoms  (%edi)
(bad)
jmp    *0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    (%ecx),%eax
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jbe    80679b4 <_IO_stdin_used+0x9810>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,0x32(%eax)
add    %al,(%eax)
in     (%dx),%al
sbb    %bh,%bh
decl   (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pusha
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
xor    (%eax),%al
add    %ah,0x1effff(%ebx,%ebx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
in     $0x32,%al
add    %al,(%eax)
mov    $0x1b,%al
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,(%eax)
xor    (%eax),%eax
add    %bl,(%esp,%ebx,1)
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x1c000000
xor    (%eax),%eax
add    %bl,0x1c(%eax)
(bad)
call   *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff1,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
mov    %dh,(%ebx)
add    %al,(%eax)
mov    %ds,0x113ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x5ff1b9fe(%ebx)
add    %eax,(%edx)
(bad)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x43,%al
or     0x8(%esi,%ecx,1),%esi
inc    %esi
ret
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%al
xor    (%eax),%eax
add    %dh,-0x1(%esi,%ebx,1)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x33
add    %al,(%eax)
sbbb   $0xff,(%esi)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dl,0xe(%ebx)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
xor    (%eax),%eax
add    %cl,0x7affff1e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,(%eax)
xor    $0x0,%al
add    %cl,%ah
push   %ds
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
sbb    %dh,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %eax
xor    $0x0,%al
add    %dh,%ah
push   %ds
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x71,0x2280e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bh,0x0(%esp,%esi,1)
add    %cl,0x1f(%eax)
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    0x84000034,%al
pop    %ds
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
jg     8067c09 <_IO_stdin_used+0x9a65>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
les    (%eax,%eax,1),%esi
add    %al,%al
pop    %ds
(bad)
decl   0x0(%ebx)
dec    %edx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edi),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
clc
xor    $0x0,%al
add    %bl,(%eax,%eiz,1)
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,(%eax)
xor    $0x202c0000,%eax
(bad)
(bad)
fadds  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    %cl,%cl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
xor    $0x20d40000,%eax
(bad)
(bad)
fadds  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    %cl,%cl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    %dh,0x217c0000
(bad)
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x78,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
enter  $0x35,$0x0
int3
and    %edi,%edi
decl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4b,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
or     %dh,(%esi)
add    %al,(%eax)
fsubl  (%edx)
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,(%eax)
add    %al,%ss:(%eax)
cld
and    %bh,%bh
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%esi),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dh,0x36(%eax)
add    %al,(%eax)
aam    $0x23
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
add    0xe(%eax),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
add    %al,%ss:(%eax)
and    %ah,(%edi,%edi,8)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%al
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
les    (%esi),%esi
add    %al,(%eax)
andb   $0xff,(%edi,%edi,8)
push   %ss
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x37,%al
add    %al,(%eax)
pusha
and    $0x21ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%edi,%esi,1)
add    %al,(%eax)
jo     8067e97 <_IO_stdin_used+0x9cf3>
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,(%eax)
aaa
add    %al,(%eax)
insb   (%dx),%es:(%edi)
and    $0x1deffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaf,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0xbffffc9(%eax)
es
(bad)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
aaa
add    %al,(%eax)
pusha
daa
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x180e4304(%ebx)
add    0xe(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
fdivs  (%edi)
add    %al,(%eax)
mov    %fs,(%edi)
(bad)
(bad)
cmp    $0x0,%eax
inc    %esi
push   %cs
or     %al,0xc0e4702(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec36c04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,(%eax,%edi,1)
add    %al,(%eax)
mov    0x2effff27,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
cmp    %al,(%eax)
add    %bh,0x74ffff(%edi,%eiz,1)
add    %al,(%eax)
add    %al,0xe(%edi)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ecx
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
cmp    %al,(%eax)
add    %cl,(%eax)
sub    %bh,%bh
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
dec    %edi
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%esi),%eax
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
jl     8067ffe <_IO_stdin_used+0x9e5a>
add    %al,(%eax)
cmp    %ch,(%eax)
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x6b,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%edx),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %cl,0x0(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    %al,(%eax)
add    %bl,0x28(%eax)
(bad)
(bad)
js     8067ffe <_IO_stdin_used+0x9e5a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %edi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4c02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
clc
cmp    %al,(%eax)
add    %cl,0xbaffff(%eax,%ebp,1)
add    %al,(%eax)
add    %dl,0xe(%edx)
or     %al,0x300e4302(%ebx)
add    0xec34108(%esi,%ecx,1),%cl
add    $0x46,%al
push   %cs
xor    %al,0x10000002(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
cmp    %eax,(%eax)
add    %ah,(%ecx,%ebp,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    $0x39,%al
add    %al,(%eax)
inc    %eax
sub    %edi,%edi
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa400202(%ebx)
ret
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx,%edi,1)
add    %dl,0x4bffff29(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
jp     80680cb <_IO_stdin_used+0x9f27>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,-0x53ffffc7(%eax)
sub    %edi,%edi
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
add    0xa(%edx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dh,0x2a000000(%ecx,%edi,1)
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x44,%al
or     0xa(%ecx),%ebp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%ebx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
or     %bh,(%edx)
add    %al,(%eax)
pop    %esp
sub    %bh,%bh
incl   0x7(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff8f,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
cmp    (%eax),%al
add    %ch,0x7effff(%ecx,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
jp     80681b1 <_IO_stdin_used+0xa00d>
add    $0x10,%al
add    %al,(%eax)
add    %ah,0x3a(%eax)
add    %al,(%eax)
adc    $0x32,%al
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx,%edi,1)
add    %dh,(%eax)
xor    %bh,%bh
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,0x4c00003a(%eax)
xor    %bh,%bh
(bad)
jl     80681da <_IO_stdin_used+0xa036>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2200e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %al,%ah
cmp    (%eax),%al
add    %dl,0x3dffff32(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
push   %cs
or     %al,-0x3cf598fe(%ebx)
push   %cs
add    $0x43,%al
or     -0x3d(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,%al
cmp    (%eax),%al
add    %ch,0xd0ffff(%edx,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,0x3b(%eax)
add    %al,(%eax)
and    $0x33,%al
(bad)
lcall  *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4504(%ebx)
add    %ch,%al
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
mov    %bh,(%ebx)
add    %al,(%eax)
cld
xor    %edi,%edi
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edx)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
mov    0x400003b,%al
xor    $0xff,%al
jmp    *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,%al
cmp    (%eax),%eax
add    %dh,-0x1(%ebp,%esi,1)
(bad)
cmp    $0x0,%eax
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
hlt
cmp    (%eax),%eax
add    %ah,-0x190000cb(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
dec    %eax
cmp    $0x0,%al
add    %bh,(%esi,%esi,1)
(bad)
(bad)
jl     806839b <_IO_stdin_used+0xa1f7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x13,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%ebx),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x3c,%ah
add    %al,(%eax)
push   %eax
aaa
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bh,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%edx
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,%ah
cmp    $0x0,%al
add    %ah,0x5cffff37(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    %bh,0x37d40000
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    %bh,0x37dc0000
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
xor    %bh,0x37e40000
(bad)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf580fc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,0x0(%ebp,%edi,1)
add    %bh,%al
aaa
(bad)
lcall  *(%eax)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
cmp    (%ecx),%al
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
les    0x3cc00000,%edi
(bad)
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x21c0e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
add    $0x3e,%al
add    %al,(%eax)
cmpb   $0x0,0x46ffff
add    %al,(%eax)
pop    %ebx
push   %cs
and    %ch,0xe(%edx)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sbb    $0x3e,%al
add    %al,(%eax)
mov    $0x77ffff3d,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebp),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebp),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
dec    %eax
add    %al,%ds:(%eax)
or     $0x3e,%al
(bad)
(bad)
cmp    $0x0,%eax
inc    %ebx
push   %cs
adc    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x43,%al
or     0xe(%eax),%ecx
add    $0x0,%al
pop    %eax
add    %al,(%eax)
add    %ch,0x0(%esi,%edi,1)
add    %ch,(%eax)
ds
(bad)
call   *0x4(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
sub    %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
sbb    %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
enter  $0x3e,$0x0
insb   (%dx),%es:(%edi)
inc    %edx
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
add    0xe(%eax),%bl
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%al
add    %al,%ds:(%eax)
mov    $0x42,%ah
(bad)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %al,(%eax)
aas
add    %al,(%eax)
les    -0x1(%edx),%eax
ljmp   *(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    %dl,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
(bad)  (%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
pop    %esp
aas
add    %al,(%eax)
cwtl
inc    %esi
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jl     8068705 <_IO_stdin_used+0xa561>
add    %al,(%eax)
mov    $0x38ffff46,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pushf
aas
add    %al,(%eax)
fadds  -0x1(%esi)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0xf800003f,%esp
inc    %esi
(bad)
pushl  0x43000000(%eax,%eax,1)
push   %cs
and    %al,(%edx)
pop    %ebx
or     (%esi),%cl
add    $0x42,%al
or     (%edx),%eax
push   %ebx
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bl,%ah
aas
add    %al,(%eax)
cwtl
inc    %edi
(bad)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jae    806874f <_IO_stdin_used+0xa5ab>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
sidtl  (%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ah,(%eax,%eax,2)
add    %al,(%eax)
mov    $0x48,%al
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x43100e0a(%edx),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %eax
add    %al,(%eax)
sbb    %cl,-0x1(%ecx)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
dec    %edi
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,0x49600000(%eax,%eax,2)
(bad)
call   *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x8d00e46
jecxz  80687f5 <_IO_stdin_used+0xa651>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
enter  $0x40,$0x0
mov    $0x11ffff4b,%esp
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x79,0x2e00e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
or     %al,0x0(%ecx)
add    %bl,0xaeffff(%eax,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
push   %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
inc    %ecx
add    %al,(%eax)
adc    $0x51,%al
(bad)
incl   0x0(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
add    $0x41,%al
or     0xe(%edi),%edx
add    $0x0,%al
add    %al,(%eax)
jl     80688b2 <_IO_stdin_used+0xa70e>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %ecx
add    %al,(%eax)
push   $0xd1ffff51
add    %eax,(%eax)
add    %al,(%eax)
dec    %esi
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3b,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%edx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
inc    %ecx
add    %al,(%eax)
enter  $0xff52,$0xff
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4902(%esi)
addl   $0x2,(%ebx)
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,(%eax)
inc    %edx
add    %al,(%eax)
hlt
push   %edx
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4902(%esi)
addl   $0x2,(%ebx)
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,(%edx,%eax,2)
add    %al,(%eax)
and    %dl,-0x1(%ebx)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x42(%eax)
add    %al,(%eax)
sbb    $0x53,%al
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
inc    %edx
add    %al,(%eax)
sbb    %dl,-0x1(%ebx)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %edx
push   %cs
and    %cl,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     8068a00 <_IO_stdin_used+0xa85c>
add    %al,(%eax)
xor    %dl,-0x1(%ebx)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %es,0x0(%edx)
add    %cl,0x53(%eax)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x44000042(%eax)
push   %ebx
(bad)
(bad)
jp     80689f2 <_IO_stdin_used+0xa84e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%edi),%bl
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
int3
inc    %edx
add    %al,(%eax)
cwtl
push   %ebx
(bad)
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
add    $0x43,%al
add    %al,(%eax)
loopne 8068aa6 <_IO_stdin_used+0xa902>
(bad)
inc    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0x41100e0a(%ebp),%al
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,(%ebx,%eax,2)
add    %al,(%eax)
js     8068ae0 <_IO_stdin_used+0xa93c>
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,0x43(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %esi
(bad)
incl   (%edx)
.byte 0xd0
cwtl
add    $0x8,%al
mov    $0x98,%al
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x8e,%al
add    $0x8,%al
or     $0x74000000,%eax
loope  8069f30 <_IO_stdin_used+0xbd8c>
or     %bl,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
lahf
push   %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x9f,%al
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
mov    %al,0x60804(%edi)
add    %al,(%eax)
clc
addl   $0xa,(%eax,%ecx,1)
jge    8069f6d <_IO_stdin_used+0xbdc9>
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
mov    0x20806,%al
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,-0x74(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
cmp    %cl,0x1208(%esp,%eax,1)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x48(%edi)
mov    (%eax,%ecx,1),%eax
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x6(%edi)
mov    (%eax,%ecx,1),%eax
add    %al,(%eax)
or     $0x9f,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%dh
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8069fbd <_IO_stdin_used+0xbe19>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    8069ffe <_IO_stdin_used+0xbe5a>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    806a03f <_IO_stdin_used+0xbe9b>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    806a080 <_IO_stdin_used+0xbedc>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    806a0c1 <_IO_stdin_used+0xbf1d>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
adc    %eax,(%eax)
add    %bl,0x11(%edi)
add    %al,(%eax)
sub    %esp,(%ebx)
add    %al,(%eax)
sub    (%ebx),%ah
add    %al,(%eax)
subb   $0x0,(%esi)
add    %bh,%bl
das
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %esi,(%eax)
add    %al,(%eax)
xor    %al,%ds:(%eax)
add    %al,0x30(%ecx)
add    %al,(%eax)
mov    $0x4d,%ch
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %bh,0x9f(%ebx)
mov    0xa4c60000,%al
add    %al,(%eax)
add    %ch,0xd7a300(%eax,%eax,1)
add    %al,(%eax)
stc
add    %al,(%eax)
fsqrt
add    %al,(%eax)
adc    %bh,%dh
add    %al,(%eax)
sbb    %edi,%esi
add    %al,(%eax)
xor    %bh,%dh
add    %al,(%eax)
imul   $0x0,%esi,%edi
add    %al,(%ecx)
incl   (%eax)
add    %ah,-0x1(%eax)
add    %al,(%eax)
loopne 806a1e9 <_IO_stdin_used+0xc045>
add    %al,(%eax)
out    %al,$0xff
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
std
incl   (%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %bh,%ch
incl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
push   %cs
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %ds
add    %al,(%eax)
add    %bh,0x0(%edi)
add    %al,(%eax)
lahf
add    %al,(%eax)
add    %dh,0x3(%eax)
add    %al,(%eax)
jae    806a231 <_IO_stdin_used+0xc08d>
add    %al,(%eax)
jbe    806a235 <_IO_stdin_used+0xc091>
add    %al,(%eax)
jns    806a239 <_IO_stdin_used+0xc095>
add    %al,(%eax)
jg     806a23d <_IO_stdin_used+0xc099>
add    %al,(%eax)
addl   $0x0,(%ebx)
add    %cl,-0x74fffffd(%ebx)
add    (%eax),%eax
add    %cl,-0x72fffffd(%ebp)
add    (%eax),%eax
add    %ah,-0x5dfffffd(%edx)
add    (%eax),%eax
add    %cl,%bh
add    (%eax),%eax
add    %cl,%bh
add    (%eax),%eax
add    %al,-0x78fffffc(%edi)
add    $0x0,%al
add    %dl,0x5300000(,%eax,1)
add    %al,(%eax)
push   %edi
add    $0x5580000,%eax
add    %al,(%eax)
pusha
add    $0x5600000,%eax
add    %al,(%eax)
mov    %al,0x5880000
add    %al,(%eax)
mov    0x5900000,%eax
add    %al,(%eax)
enter  $0x5,$0x0
iret
add    $0x5eb0000,%eax
add    %al,(%eax)
out    %eax,(%dx)
add    $0x5f50000,%eax
add    %al,(%eax)
incl   0x6040000
add    %al,(%eax)
or     (%esi),%al
add    %al,(%eax)
push   %ss
push   %es
add    %al,(%eax)
sbb    (%esi),%al
add    %al,(%eax)
sbb    $0x6,%al
add    %al,(%eax)
sbb    $0x20000006,%eax
push   %es
add    %al,(%eax)
and    %al,(%esi)
add    %al,(%eax)
cmp    (%esi),%eax
add    %al,(%eax)
aas
push   %es
add    %al,(%eax)
pop    %edi
push   %es
add    %al,(%eax)
pop    %edi
push   %es
add    %al,(%eax)
push   %cs
pop    %es
add    %al,(%eax)
push   %cs
pop    %es
add    %al,(%eax)
dec    %ebx
pop    %es
add    %al,(%eax)
dec    %esp
pop    %es
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
pop    %es
add    %al,(%eax)
jg     806a2f5 <_IO_stdin_used+0xc151>
add    %al,(%eax)
mov    $0x7,%dl
add    %al,(%eax)
mov    $0xfb000007,%edi
pop    %es
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
cmp    (%ecx),%cl
add    %al,(%eax)
cmp    (%ecx),%ecx
add    %al,(%eax)
dec    %esi
or     %eax,(%eax)
add    %cl,0x9(%edi)
add    %al,(%eax)
push   %ebp
or     %eax,(%eax)
add    %dl,0x9(%edi)
add    %al,(%eax)
jno    806a323 <_IO_stdin_used+0xc17f>
add    %al,(%eax)
jp     806a327 <_IO_stdin_used+0xc183>
add    %al,(%eax)
orb    $0x0,(%ecx)
add    %al,-0x7bfffff7(%eax)
or     %eax,(%eax)
add    %al,0x98d0000(%ecx,%ecx,1)
add    %al,(%eax)
mov    (%ecx),%cs
add    %al,(%eax)
xchg   %eax,%ecx
or     %eax,(%eax)
add    %dl,-0x56fffff7(%edx)
or     %eax,(%eax)
add    %ch,-0x4efffff7(%ecx)
or     %eax,(%eax)
add    %dh,-0x4cfffff7(%ecx)
or     %eax,(%eax)
add    %dh,-0x45fffff7(%ebp)
or     %eax,(%eax)
add    %bh,-0x3afffff7(%ebx)
or     %eax,(%eax)
add    %al,%dh
or     %eax,(%eax)
add    %cl,%cl
or     %eax,(%eax)
add    %cl,%dl
or     %eax,(%eax)
add    %cl,%bh
or     %eax,(%eax)
add    %dl,%dh
or     %eax,(%eax)
add    %bl,%al
or     %eax,(%eax)
add    %bl,%bl
or     %eax,(%eax)
add    %bl,%dh
or     %eax,(%eax)
add    %bl,%dh
or     %eax,(%eax)
add    %ah,%ah
or     %eax,(%eax)
add    %ah,%ch
or     %eax,(%eax)
add    %bh,%bl
or     %eax,(%eax)
add    %al,(%eax)
or     (%eax),%al
add    %al,(%edx,%ecx,1)
add    %al,(%eax)
add    $0xa,%al
add    %al,(%eax)
or     (%edx),%ecx
add    %al,(%eax)
push   %cs
or     (%eax),%al
add    %dl,(%ecx)
or     (%eax),%al
add    %dl,(%edx)
or     (%eax),%al
add    %ch,(%ecx)
or     (%eax),%al
add    %ch,(%ecx)
or     (%eax),%al
add    %dh,(%ecx)
or     (%eax),%al
add    %dh,(%ecx)
or     (%eax),%al
add    %dh,(%edx,%ecx,1)
add    %al,(%eax)
xor    $0xa,%al
add    %al,(%eax)
aaa
or     (%eax),%al
add    %dh,(%edi)
or     (%eax),%al
add    %bh,(%edx)
or     (%eax),%al
add    %bh,(%ebx)
or     (%eax),%al
add    %bh,0x3d00000a
or     (%eax),%al
add    %al,0xa(%ebx)
add    %al,(%eax)
inc    %esi
or     (%eax),%al
add    %cl,0xa(%ecx)
add    %al,(%eax)
dec    %edx
or     (%eax),%al
add    %cl,0xa(%esi)
add    %al,(%eax)
pop    %eax
or     (%eax),%al
add    %bl,0xa(%ebp)
add    %al,(%eax)
pop    %ebp
or     (%eax),%al
add    %bl,0xa(%edi)
add    %al,(%eax)
or     %gs:(%eax),%al
add    %dh,0xa(%ebp)
add    %al,(%eax)
orb    $0x0,(%edx)
add    %al,0xa840000(%edx,%ecx,1)
add    %al,(%eax)
mov    (%edx),%cs
add    %al,(%eax)
mov    (%edx),%cs
add    %al,(%eax)
xchg   %eax,%edx
or     (%eax),%al
add    %dl,-0x56fffff6(%edx)
or     (%eax),%al
add    %ch,-0x4efffff6(%ecx)
or     (%eax),%al
add    %dh,-0x4bfffff6(%ecx)
or     (%eax),%al
add    %dh,0xaba0000(%edx,%ecx,1)
add    %al,(%eax)
mov    $0xc600000a,%ebx
or     (%eax),%al
add    %al,%dh
or     (%eax),%al
add    %cl,%dl
or     (%eax),%al
add    %cl,%dl
or     (%eax),%al
add    %cl,%dh
or     (%eax),%al
add    %cl,%bh
or     (%eax),%al
add    %dl,%cl
or     (%eax),%al
add    %bl,%bh
or     (%eax),%al
add    %ah,%ah
or     (%eax),%al
add    %ah,%ch
or     (%eax),%al
add    %dh,%al
or     (%eax),%al
add    %dh,%al
or     (%eax),%al
add    %dh,%dl
or     (%eax),%al
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%ebx,%ecx,1)
add    %al,(%eax)
add    $0xb,%al
add    %al,(%eax)
or     $0xe00000b,%eax
or     (%eax),%eax
add    %dl,(%ecx)
or     (%eax),%eax
add    %dl,(%edx)
or     (%eax),%eax
add    %ch,(%ecx)
or     (%eax),%eax
add    %ch,(%ecx)
or     (%eax),%eax
add    %dh,(%ecx)
or     (%eax),%eax
add    %dh,(%ecx)
or     (%eax),%eax
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
xor    $0xb,%al
add    %al,(%eax)
cmp    (%ebx),%cl
add    %al,(%eax)
cmp    (%ebx),%ecx
add    %al,(%eax)
inc    %esp
or     (%eax),%eax
add    %al,0xb(%esi)
add    %al,(%eax)
dec    %ecx
or     (%eax),%eax
add    %cl,0xb(%edx)
add    %al,(%eax)
dec    %esi
or     (%eax),%eax
add    %dl,0xb(%ebp)
add    %al,(%eax)
pop    %eax
or     (%eax),%eax
add    %bl,0xb(%ebx)
add    %al,(%eax)
pop    %esi
or     (%eax),%eax
add    %bl,0xb(%esi)
add    %al,(%eax)
bound  %ecx,(%ebx)
add    %al,(%eax)
or     %gs:(%eax),%eax
add    %dh,0xb(%edx)
add    %al,(%eax)
orl    $0xb840000,(%ebx)
add    %al,(%eax)
test   %cl,(%ebx)
add    %al,(%eax)
mov    (%ebx),%ecx
add    %al,(%eax)
lea    (%ebx),%ecx
add    %al,(%eax)
xchg   %eax,%ecx
or     (%eax),%eax
add    %dl,-0x69fffff5(%ecx)
or     (%eax),%eax
add    %bl,-0x64fffff5(%eax)
or     (%eax),%eax
add    %bl,-0x62fffff5(%ebx)
or     (%eax),%eax
add    %bl,-0x5ffffff5(%ebp)
or     (%eax),%eax
add    %ah,-0x5afffff5(%edx)
or     (%eax),%eax
add    %ah,-0x54fffff5(%edi)
or     (%eax),%eax
add    %ch,-0x45fffff5(%ebp)
or     (%eax),%eax
add    %bh,-0x3cfffff5(%ebp)
or     (%eax),%eax
add    %al,%ch
or     (%eax),%eax
add    %cl,%cl
or     (%eax),%eax
add    %cl,%cl
or     (%eax),%eax
add    %cl,%dh
or     (%eax),%eax
add    %dl,%dh
or     (%eax),%eax
add    %bl,%al
or     (%eax),%eax
add    %ah,%ch
or     (%eax),%eax
add    %bh,%bl
or     (%eax),%eax
add    %al,(%eax)
or     $0x0,%al
add    %al,(%esp,%ecx,1)
add    %al,(%eax)
add    $0xc,%al
add    %al,(%eax)
or     $0xd00000c,%eax
or     $0x0,%al
add    %dl,(%ecx)
or     $0x0,%al
add    %dl,(%ecx)
or     $0x0,%al
add    %ch,(%ecx)
or     $0x0,%al
add    %ch,(%ecx)
or     $0x0,%al
add    %dh,(%esp,%ecx,1)
add    %al,(%eax)
xor    $0xc,%al
add    %al,(%eax)
cmp    (%eax,%eax,1),%cl
add    %bh,0x4500000c
or     $0x0,%al
add    %al,0xc(%ebp)
add    %al,(%eax)
dec    %ecx
or     $0x0,%al
add    %cl,0xc(%ecx)
add    %al,(%eax)
dec    %esi
or     $0x0,%al
add    %dl,0x0(%esp,%ecx,1)
add    %dl,0xc(%edi)
add    %al,(%eax)
pop    %edi
or     $0x0,%al
add    %ah,0xc(%edx)
add    %al,(%eax)
gs
or     $0x0,%al
add    %dh,0xc(%eax)
add    %al,(%eax)
orl    $0xc8400,(%eax,%eax,1)
add    %al,0xc8d0000(%esp,%ecx,1)
add    %al,(%eax)
lea    (%eax,%eax,1),%ecx
add    %dl,-0x6efffff4(%ecx)
or     $0x0,%al
add    %ch,-0x56fffff4(%ecx)
or     $0x0,%al
add    %dh,0xcb40000(%esp,%ecx,1)
add    %al,(%eax)
mov    $0xbb00000c,%edx
or     $0x0,%al
add    %al,%ch
or     $0x0,%al
add    %al,%ch
or     $0x0,%al
add    %cl,%cl
or     $0x0,%al
add    %cl,%cl
or     $0x0,%al
add    %cl,%dh
or     $0x0,%al
add    %dl,%ah
or     $0x0,%al
add    %dl,%bh
or     $0x0,%al
add    %bl,%ch
or     $0x0,%al
add    %bl,%bh
or     $0x0,%al
add    %bl,%bh
or     $0x0,%al
add    %ah,%ah
or     $0x0,%al
add    %ah,%ch
or     $0x0,%al
add    %dh,%al
or     $0x0,%al
add    %dh,%al
or     $0x0,%al
add    %dh,%bl
or     $0x0,%al
add    %al,(%ecx)
or     $0xd040000,%eax
add    %al,(%eax)
add    $0xd,%al
add    %al,(%eax)
or     $0xd00000d,%eax
or     $0xd110000,%eax
add    %al,(%eax)
adc    %ecx,0xd290000
add    %al,(%eax)
sub    %ecx,0xd3a0000
add    %al,(%eax)
cmp    $0x4400000d,%eax
or     $0xd450000,%eax
add    %al,(%eax)
dec    %ecx
or     $0xd490000,%eax
add    %al,(%eax)
dec    %esi
or     $0xd560000,%eax
add    %al,(%eax)
pop    %eax
or     $0xd5f0000,%eax
add    %al,(%eax)
bound  %ecx,0xd650000
add    %al,(%eax)
jo     806a697 <_IO_stdin_used+0xc4f3>
add    %al,(%eax)
orl    $0xd840000,0xd840000
0d
add    %al,(%eax)
xchg   %eax,%edi
or     $0xd990000,%eax
add    %al,(%eax)
mov    $0xd,%dl
add    %al,(%eax)
mov    $0xd,%dl
add    %al,(%eax)
mov    $0xbc00000d,%esp
or     $0xdbe0000,%eax
add    %al,(%eax)
mov    $0xc700000d,%edi
or     $0xdc90000,%eax
add    %al,(%eax)
lret
or     $0xdce0000,%eax
add    %al,(%eax)
aad    $0xd
add    %al,(%eax)
aad    $0xd
add    %al,(%eax)
xlat   %ds:(%ebx)
or     $0xdd70000,%eax
add    %al,(%eax)
loopne 806a6e7 <_IO_stdin_used+0xc543>
add    %al,(%eax)
icebp
or     $0xdf50000,%eax
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
cmp    (%esi),%ecx
add    %al,(%eax)
ds
push   %cs
add    %al,(%eax)
pop    %esp
push   %cs
add    %al,(%eax)
orb    $0x0,(%esi)
add    %al,-0x7cfffff2(%ebx)
push   %cs
add    %al,(%eax)
test   %ecx,(%esi)
add    %al,(%eax)
xchg   %cl,(%esi)
add    %al,(%eax)
mov    %ecx,(%esi)
add    %al,(%eax)
mov    %ecx,(%esi)
add    %al,(%eax)
mov    (%esi),%ecx
add    %al,(%eax)
mov    %cs,(%esi)
add    %al,(%eax)
mov    (%esi),%cs
add    %al,(%eax)
xchg   %eax,%ebx
push   %cs
add    %al,(%eax)
cwtl
push   %cs
add    %al,(%eax)
cwtl
push   %cs
add    %al,(%eax)
mov    0xa000000e,%al
push   %cs
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %cs
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %cs
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %cs
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %cs
add    %al,(%eax)
test   $0xe,%al
add    %al,(%eax)
test   $0xac00000e,%eax
push   %cs
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %cs
add    %al,(%eax)
mov    $0xba00000e,%edx
push   %cs
add    %al,(%eax)
mov    $0xbf00000e,%esi
push   %cs
add    %al,(%eax)
lds    (%esi),%ecx
add    %al,(%eax)
lds    (%esi),%ecx
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
into
push   %cs
add    %al,(%eax)
iret
push   %cs
add    %al,(%eax)
fimull (%esi)
add    %al,(%eax)
fisttpl (%esi)
add    %al,(%eax)
fimul  (%esi)
add    %al,(%eax)
decl   (%esi)
add    %al,(%eax)
dec    %eax
sldt   (%eax)
dec    %eax
sldt   (%eax)
imul   $0x0,(%edi),%ecx
add    %dh,0xf(%eax)
add    %al,(%eax)
mov    %cs,(%edi)
add    %al,(%eax)
(bad)
sldt   (%eax)
cwtl
sldt   (%eax)
cwtl
sldt   (%eax)
mov    $0xbd00000f,%ebp
sldt   (%eax)
int    $0xf
add    %al,(%eax)
into
sldt   (%eax)
rorb   %cl,(%edi)
add    %al,(%eax)
decl   (%edi)
add    %al,(%eax)
and    (%eax),%dl
add    %al,(%eax)
and    (%eax),%dl
add    %al,(%eax)
sub    %dl,(%eax)
add    %al,(%eax)
sub    %dl,(%eax)
add    %al,(%eax)
sub    (%eax),%edx
add    %al,(%eax)
sub    (%eax),%edx
add    %al,(%eax)
xor    (%eax),%edx
add    %al,(%eax)
xor    $0x3a000010,%eax
adc    %al,(%eax)
add    %bh,(%edi)
adc    %al,(%eax)
add    %bl,0x10(%edx)
add    %al,(%eax)
lahf
adc    %al,(%eax)
add    %al,%dh
adc    %al,(%eax)
add    %cl,%bh
adc    %al,(%eax)
add    %bh,%ch
adc    %al,(%eax)
add    %bh,%bh
adc    %al,(%eax)
add    %bl,0x11(%edx)
add    %al,(%eax)
pop    %esi
adc    %eax,(%eax)
add    %ah,-0x58ffffef(%ebx)
adc    %eax,(%eax)
add    %bh,%dl
adc    %eax,(%eax)
add    %bh,%bh
adc    %eax,(%eax)
add    %cl,0x12(%ecx)
add    %al,(%eax)
dec    %ecx
adc    (%eax),%al
add    %cl,0x12(%esi)
add    %al,(%eax)
dec    %edi
adc    (%eax),%al
add    %dl,0x12(%edi)
add    %al,(%eax)
push   %edi
adc    (%eax),%al
add    %bl,0x12(%ecx)
add    %al,(%eax)
pop    %ecx
adc    (%eax),%al
add    %bl,0x12(%esi)
add    %al,(%eax)
pop    %edi
adc    (%eax),%al
add    %cl,-0x76ffffee(%ecx)
adc    (%eax),%al
add    %cl,-0x70ffffee(%esi)
adc    (%eax),%al
add    %dh,-0x4effffee(%ecx)
adc    (%eax),%al
add    %dh,-0x48ffffee(%esi)
adc    (%eax),%al
add    %bh,-0x40ffffee(%edi)
adc    (%eax),%al
add    %al,%cl
adc    (%eax),%al
add    %al,%cl
adc    (%eax),%al
add    %al,%dh
adc    (%eax),%al
add    %al,%bh
adc    (%eax),%al
add    %dl,%bh
adc    (%eax),%al
add    %dl,%bh
adc    (%eax),%al
add    %dl,(%ecx)
adc    (%eax),%eax
add    %dl,(%ecx)
adc    (%eax),%eax
add    %dl,(%esi)
adc    (%eax),%eax
add    %dl,(%edi)
adc    (%eax),%eax
add    %bl,0x13(%ebx)
add    %al,(%eax)
pop    %esi
adc    (%eax),%eax
add    %bh,0x13(%ebp)
add    %al,(%eax)
jg     806a8b1 <_IO_stdin_used+0xc70d>
add    %al,(%eax)
lcall  $0x13,$0x9f000013
add    %dh,%ch
adc    (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %dh,0x16(%edi)
add    %al,(%eax)
jg     806a8cc <_IO_stdin_used+0xc728>
add    %al,(%eax)
popf
push   %ss
add    %al,(%eax)
lahf
push   %ss
add    %al,(%eax)
icebp
push   %ss
add    %al,(%eax)
call   *(%esi)
add    %al,(%eax)
or     $0xd000017,%eax
pop    %ss
add    %al,(%eax)
adc    $0x1f000017,%eax
pop    %ss
add    %al,(%eax)
aaa
pop    %ss
add    %al,(%eax)
aas
pop    %ss
add    %al,(%eax)
push   %esp
pop    %ss
add    %al,(%eax)
pop    %edi
pop    %ss
add    %al,(%eax)
insl   (%dx),%es:(%edi)
pop    %ss
add    %al,(%eax)
insl   (%dx),%es:(%edi)
pop    %ss
add    %al,(%eax)
jno    806a909 <_IO_stdin_used+0xc765>
add    %al,(%eax)
jno    806a90d <_IO_stdin_used+0xc769>
add    %al,(%eax)
je     806a911 <_IO_stdin_used+0xc76d>
add    %al,(%eax)
jg     806a915 <_IO_stdin_used+0xc771>
add    %al,(%eax)
ficom  (%edi)
add    %al,(%eax)
fist   (%edi)
add    %al,(%eax)
ljmp   $0x17,$0xef000017
add    %bh,%dl
pop    %ss
add    %al,(%eax)
call   *(%edi)
add    %al,(%eax)
prefetchnta (%eax)
add    %cl,(%edi)
sbb    %al,(%eax)
add    %bl,(%edx)
sbb    %al,(%eax)
add    %bl,(%edi)
sbb    %al,(%eax)
add    %bh,0x18(%eax)
add    %al,(%eax)
jg     806a946 <_IO_stdin_used+0xc7a2>
add    %al,(%eax)
stos   %al,%es:(%edi)
sbb    %al,(%eax)
add    %bh,%bh
sbb    %al,(%eax)
add    %bl,0x1f000019
sbb    %eax,(%eax)
add    %ch,(%ecx,%ebx,1)
add    %al,(%eax)
das
sbb    %eax,(%eax)
add    %bh,(%ecx,%ebx,1)
add    %al,(%eax)
aas
sbb    %eax,(%eax)
add    %al,0x19(%ecx)
add    %al,(%eax)
inc    %ebx
sbb    %eax,(%eax)
add    %ch,0x19(%esi)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
sbb    %eax,(%eax)
add    %dh,0x19(%ebp)
add    %al,(%eax)
jg     806a97f <_IO_stdin_used+0xc7db>
add    %al,(%eax)
stos   %al,%es:(%edi)
sbb    %eax,(%eax)
add    %ch,-0x35ffffe7(%edi)
sbb    %eax,(%eax)
add    %cl,%bh
sbb    %eax,(%eax)
add    %bl,%dl
sbb    %eax,(%eax)
add    %bl,%ch
sbb    %eax,(%eax)
add    %bl,(%edx,%ebx,1)
add    %al,(%eax)
sbb    $0x2000001a,%eax
sbb    (%eax),%al
add    %bh,%bh
sbb    (%eax),%al
add    %cl,0x0(%ebx,%ebx,1)
add    %cl,0x1b(%edi)
add    %al,(%eax)
jge    806a9b5 <_IO_stdin_used+0xc811>
add    %al,(%eax)
lcall  *(%eax,%eax,1)
add    %cl,%bl
sbb    $0x1dfd0000,%eax
add    %al,(%eax)
pushf
push   %ds
add    %al,(%eax)
lahf
push   %ds
add    %al,(%eax)
cli
push   %ds
add    %al,(%eax)
lcall  *(%esi)
add    %al,(%eax)
push   %ss
pop    %ds
add    %al,(%eax)
pop    %ss
pop    %ds
add    %al,(%eax)
push   %ds
pop    %ds
add    %al,(%eax)
pop    %ds
pop    %ds
add    %al,(%eax)
inc    %esi
pop    %ds
add    %al,(%eax)
inc    %edi
pop    %ds
add    %al,(%eax)
dec    %esi
pop    %ds
add    %al,(%eax)
dec    %edi
pop    %ds
add    %al,(%eax)
pop    %eax
pop    %ds
add    %al,(%eax)
pop    %eax
pop    %ds
add    %al,(%eax)
pop    %edx
pop    %ds
add    %al,(%eax)
pop    %edx
pop    %ds
add    %al,(%eax)
pop    %esp
pop    %ds
add    %al,(%eax)
pop    %esp
pop    %ds
add    %al,(%eax)
pop    %esi
pop    %ds
add    %al,(%eax)
pop    %esi
pop    %ds
add    %al,(%eax)
jle    806aa19 <_IO_stdin_used+0xc875>
add    %al,(%eax)
jg     806aa1d <_IO_stdin_used+0xc879>
add    %al,(%eax)
mov    $0x1f,%ch
add    %al,(%eax)
mov    $0x1f,%ch
add    %al,(%eax)
lds    (%edi),%ebx
add    %al,(%eax)
lds    (%edi),%ebx
add    %al,(%eax)
aam    $0x1f
add    %al,(%eax)
aad    $0x1f
add    %al,(%eax)
fcompl (%edi)
add    %al,(%eax)
fcompl (%edi)
add    %al,(%eax)
lock pop %ds
add    %al,(%eax)
icebp
pop    %ds
add    %al,(%eax)
cmc
pop    %ds
add    %al,(%eax)
cmc
pop    %ds
add    %al,(%eax)
lcall  *(%edi)
add    %al,(%eax)
lcall  *(%edi)
add    %al,(%eax)
or     (%eax),%esp
add    %al,(%eax)
(bad)
add    %al,(%eax)
sub    %ah,(%eax)
add    %al,(%eax)
sub    %ah,(%eax)
add    %al,(%eax)
sub    %esp,(%eax)
add    %al,(%eax)
sub    %esp,(%eax)
add    %al,(%eax)
sub    (%eax),%ah
add    %al,(%eax)
and    %al,%cs:(%eax)
add    %ah,0x20(%eax)
add    %al,(%eax)
arpl   %sp,(%eax)
add    %al,(%eax)
and    %al,%fs:(%eax)
add    %ch,0x20(%ecx)
add    %al,(%eax)
push   $0x20
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
and    %al,(%eax)
add    %dh,0x20(%edx)
add    %al,(%eax)
jae    806aa96 <_IO_stdin_used+0xc8f2>
add    %al,(%eax)
(bad)
and    %al,(%eax)
add    %cl,-0x6affffe0(%edi)
and    %al,(%eax)
add    %bl,-0x49ffffe0(%edi)
and    %al,(%eax)
add    %cl,%bh
and    %al,(%eax)
add    %dh,%al
and    %al,(%eax)
add    %bh,%bh
and    %al,(%eax)
add    %cl,0x21(%edi)
add    %al,(%eax)
push   %edx
and    %eax,(%eax)
add    %al,-0x70ffffdf(%ebp)
and    %eax,(%eax)
add    %ch,%al
and    (%eax),%eax
add    %bh,%bh
and    (%eax),%eax
add    %ah,(%edi)
and    $0x0,%al
add    %bh,(%edi)
and    $0x0,%al
add    %cl,0x24(%ebx)
add    %al,(%eax)
pop    %edi
and    $0x0,%al
add    %bl,-0x60ffffda(%ebp)
add    %al,%es:(%eax)
mov    $0x26,%bl
add    %al,(%eax)
add    %ah,(%edi)
add    %al,(%eax)
add    $0x5000027,%eax
daa
add    %al,(%eax)
or     (%edi),%ah
add    %al,(%eax)
or     (%edi),%esp
add    %al,(%eax)
sub    %ah,(%edi)
add    %al,(%eax)
sub    %ah,(%edi)
add    %al,(%eax)
dec    %esp
daa
add    %al,(%eax)
dec    %esp
daa
add    %al,(%eax)
dec    %esi
daa
add    %al,(%eax)
dec    %esi
daa
add    %al,(%eax)
push   %ebx
daa
add    %al,(%eax)
push   %ebp
daa
add    %al,(%eax)
push   %edi
daa
add    %al,(%eax)
push   %edi
daa
add    %al,(%eax)
pop    %edi
daa
add    %al,(%eax)
pusha
daa
add    %al,(%eax)
xchg   %eax,%ebp
daa
add    %al,(%eax)
xchg   %eax,%edi
daa
add    %al,(%eax)
mov    $0x27,%al
add    %al,(%eax)
mov    $0x27,%al
add    %al,(%eax)
mov    $0xbf000027,%edi
daa
add    %al,(%eax)
lret
daa
add    %al,(%eax)
iret
daa
add    %al,(%eax)
in     (%dx),%al
daa
add    %al,(%eax)
out    %eax,(%dx)
daa
add    %al,(%eax)
sbb    (%ebx),%ebp
add    %al,(%eax)
pop    %ds
sub    (%eax),%eax
add    %ah,(%ebx,%ebp,1)
add    %al,(%eax)
ljmp   *(%ebx)
add    %al,(%eax)
das
sub    $0x0,%al
add    %ch,(%edi)
sub    $0x0,%al
add    %bl,0x2c(%edi)
add    %al,(%eax)
pop    %edi
sub    $0x0,%al
add    %ch,0x2c(%ebp)
add    %al,(%eax)
jae    806ab8a <_IO_stdin_used+0xc9e6>
add    %al,(%eax)
js     806ab8e <_IO_stdin_used+0xc9ea>
add    %al,(%eax)
jg     806ab92 <_IO_stdin_used+0xc9ee>
add    %al,(%eax)
jmp    806ab96 <_IO_stdin_used+0xc9f2>
add    %al,(%eax)
clc
sub    $0x0,%al
add    %ah,(%esi)
sub    $0x2d2f0000,%eax
add    %al,(%eax)
sub    $0x0,%ax
outsb  %ds:(%esi),(%dx)
sub    $0x2d700000,%eax
add    %al,(%eax)
jg     806abb3 <_IO_stdin_used+0xca0f>
add    %al,(%eax)
xchg   %eax,%edi
sub    $0x2d9f0000,%eax
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
sub    $0x2da70000,%eax
add    %al,(%eax)
scas   %es:(%edi),%eax
sub    $0x2daf0000,%eax
add    %al,(%eax)
mov    $0x2d,%bh
add    %al,(%eax)
mov    $0x2d,%bh
add    %al,(%eax)
mov    $0xbf00002d,%edi
sub    $0x2dc70000,%eax
add    %al,(%eax)
(bad)
sub    $0x2dcf0000,%eax
add    %al,(%eax)
iret
sub    $0x2dd70000,%eax
add    %al,(%eax)
xlat   %ds:(%ebx)
sub    $0x2ddf0000,%eax
add    %al,(%eax)
ljmp   *0x2e180000
add    %al,(%eax)
sbb    (%esi),%ebp
add    %al,(%eax)
push   %ds
add    %al,%cs:(%eax)
jg     806ac0c <_IO_stdin_used+0xca68>
add    %al,(%eax)
lcall  $0x2e,$0x9a00002e
add    %dh,%ah
add    %al,%cs:(%eax)
ljmp   *(%esi)
add    %al,(%eax)
(bad)
das
add    %al,(%eax)
out    %eax,(%dx)
das
add    %al,(%eax)
cld
das
add    %al,(%eax)
ljmp   *(%edi)
add    %al,(%eax)
inc    %eax
xor    %al,(%eax)
add    %al,0x30(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xor    %al,(%eax)
add    %bl,0x30(%eax)
xor    %eax,(%eax)
add    %al,(%ecx,%esi,1)
add    %al,(%eax)
sub    $0x30000031,%eax
xor    %eax,(%eax)
add    %cl,-0x70ffffcf(%edi)
xor    %eax,(%eax)
add    %bh,-0x40ffffcf(%eax)
xor    %eax,(%eax)
add    %dl,%al
xor    %eax,(%eax)
add    %ch,%bh
xor    %eax,(%eax)
add    %bl,(%edi)
xor    (%eax),%al
add    %bl,(%edi)
xor    (%eax),%al
add    %al,0x0(%edx,%esi,1)
add    %cl,0x32(%edi)
add    %al,(%eax)
pushl  (%edx)
add    %al,(%eax)
pushl  (%edx)
add    %al,(%eax)
mov    $0x4d,%dh
add    %al,(%eax)
mov    $0xbc00004d,%edi
lahf
add    %al,(%eax)
lcall  *-0x5b730000(%edi)
add    %al,(%eax)
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
jmp    *-0x58e50000(%esi)
add    %al,(%eax)
pop    %ds
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
and    -0x58010000(%edi),%ah
add    %al,(%eax)
sub    $0xa8,%al
add    %al,(%eax)
aas
test   $0x0,%al
add    %bh,-0x58(%eax)
add    %al,(%eax)
ljmp   *-0x285c0000(%ebx)
add    %al,(%eax)
call   *%edi
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
(bad)
fild   (%eax)
add    %al,(%eax)
loopne 806aca3 <_IO_stdin_used+0xcaff>
add    %bh,%bh
clc
add    %al,(%eax)
cs
cli
add    %al,(%eax)
das
cli
add    %al,(%eax)
imul   $0x0,%edx,%edi
add    %ch,-0x6(%edi)
add    %al,(%eax)
(bad)
add    %al,(%eax)
(bad)
cli
add    %al,(%eax)
pop    %es
sti
add    %al,(%eax)
adc    %bl,%bh
add    %al,(%eax)
sbb    %bh,%bl
add    %al,(%eax)
sbb    $0xfb,%al
add    %al,(%eax)
aaa
sti
add    %al,(%eax)
aaa
sti
add    %al,(%eax)
cmp    $0x3d0000fb,%eax
sti
add    %al,(%eax)
aas
sti
add    %al,(%eax)
aas
sti
add    %al,(%eax)
inc    %edx
sti
add    %al,(%eax)
inc    %edx
sti
add    %al,(%eax)
inc    %ebp
sti
add    %al,(%eax)
inc    %ebp
sti
add    %al,(%eax)
mov    $0xfb,%dl
add    %al,(%eax)
sar    %cl,%bl
add    %al,(%eax)
inc    %eax
std
add    %al,(%eax)
dec    %edi
std
add    %al,(%eax)
nop
std
add    %al,(%eax)
xchg   %eax,%ecx
std
add    %al,(%eax)
enter  $0xfd,$0x0
out    %eax,(%dx)
std
add    %al,(%eax)
(bad)
std
add    %al,(%eax)
(bad)
std
add    %al,(%eax)
sbb    %dh,%bh
add    %al,(%eax)
pop    %ds
incb   (%eax)
add    %ah,(%esi,%edi,8)
add    %al,(%eax)
das
incb   (%eax)
add    %dl,-0x2(%ebx)
add    %al,(%eax)
push   %ebx
incb   (%eax)
add    %ah,-0x2(%edi)
add    %al,(%eax)
incb   (%bx,%si)
add    %ch,0x0(%esi,%edi,8)
add    %ch,-0x2(%edi)
add    %al,(%eax)
jne    806ad48 <_IO_stdin_used+0xcba4>
add    %al,(%eax)
jne    806ad4c <_IO_stdin_used+0xcba8>
add    %al,(%eax)
std
incb   (%eax)
add    %bh,%dh
incb   (%eax)
add    %bh,%bh
incb   (%eax)
add    %bh,%bh
incb   (%eax)
add    %al,(%eax)
incl   (%eax)
add    %al,(%eax)
incl   (%eax)
add    %bh,-0x3effff01(%edi)
incl   (%eax)
add    %cl,%al
incl   (%eax)
add    %cl,%cl
incl   (%eax)
add    %dl,%al
incl   (%eax)
add    %dl,%cl
incl   (%eax)
add    %bl,%al
incl   (%eax)
add    %bl,%cl
incl   (%eax)
add    %bl,%ch
incl   (%eax)
add    %bl,%bh
incl   (%eax)
add    %ah,%bh
incl   (%eax)
add    %ah,%bh
incl   (%eax)
add    %ch,%bh
incl   (%eax)
add    %bh,%al
incl   (%eax)
add    %bh,%cl
incl   (%eax)
add    %bh,%bl
incl   (%eax)
add    %bh,%dh
incl   (%eax)
add    %bh,%bh
incl   (%eax)
add    %cl,(%eax,%eax,1)
add    %eax,(%eax)
or     $0x0,%al
add    %eax,(%eax)
daa
add    %al,(%ecx)
add    %ah,(%edi)
add    %al,(%ecx)
add    %bh,(%ebx)
add    %al,(%ecx)
add    %bh,(%ebx)
add    %al,(%ecx)
add    %bh,(%esi)
add    %al,(%ecx)
add    %bh,(%esi)
add    %al,(%ecx)
add    %cl,0x0(%esi)
add    %eax,(%eax)
dec    %edi
add    %al,(%ecx)
add    %bl,0x0(%esi)
add    %eax,(%eax)
jg     806adde <_IO_stdin_used+0xcc3a>
add    %eax,(%eax)
sti
add    %al,(%ecx)
add    %bh,%bh
add    %al,(%ecx)
add    %al,(%ebx)
add    %eax,(%ecx)
add    %al,(%esi)
add    %eax,(%ecx)
add    %dh,(%ecx,%eax,1)
add    %eax,(%eax)
add    %eax,%ss:(%ecx)
add    %cl,-0xfffeff(%ebx)
add    (%ecx),%al
add    %bl,(%edi)
add    (%ecx),%eax
add    %bl,(%edi)
add    (%ecx),%eax
add    %ah,(%ebx,%eax,1)
add    %eax,(%eax)
das
add    (%ecx),%eax
add    %cl,0x3(%ebx)
add    %eax,(%eax)
jg     806ae19 <_IO_stdin_used+0xcc75>
add    %eax,(%eax)
sahf
add    (%ecx),%eax
add    %bl,-0x3bfffefd(%esi)
add    (%ecx),%eax
add    %al,%bh
add    (%ecx),%eax
add    %dl,%dh
add    (%ecx),%eax
add    %bh,%bh
add    (%ecx),%eax
add    %bl,-0x60fffefc(%esi)
add    $0x1,%al
add    %ch,-0xfffefc(%edx)
pop    %es
add    %eax,(%eax)
push   %es
or     %al,(%ecx)
add    %al,(%edi)
or     %al,(%ecx)
add    %cl,(%ecx)
or     %al,(%ecx)
add    %cl,(%ecx)
or     %al,(%ecx)
add    %dh,(%esi)
or     %al,(%ecx)
add    %dh,(%esi)
or     %al,(%ecx)
add    %bh,(%ecx)
or     %al,(%ecx)
add    %bh,(%ebx)
or     %al,(%ecx)
add    %bh,0x3e000108
or     %al,(%ecx)
add    %al,0x8(%eax)
add    %eax,(%eax)
decl   (%eax)
add    %eax,(%eax)
sbb    (%ecx),%cl
add    %eax,(%eax)
push   %ds
or     %eax,(%ecx)
add    %ah,(%eax)
or     %eax,(%ecx)
add    %bh,%bh
or     %eax,(%ecx)
add    %al,(%edx,%ecx,1)
add    %eax,(%eax)
add    $0xa,%al
add    %eax,(%eax)
pop    %es
or     (%ecx),%al
add    %cl,(%ebx)
or     (%ecx),%al
add    %dl,(%edx,%ecx,1)
add    %eax,(%eax)
adc    $0xa,%al
add    %eax,(%eax)
sbb    %cl,(%edx)
add    %eax,(%eax)
sbb    %cl,(%edx)
add    %eax,(%eax)
xor    $0xa,%al
add    %eax,(%eax)
aaa
or     (%ecx),%al
add    %bh,(%ebx)
or     (%ecx),%al
add    %bh,(%esi)
or     (%ecx),%al
add    %cl,0xa(%eax)
add    %eax,(%eax)
dec    %edi
or     (%ecx),%al
add    %bl,0xa(%ecx)
add    %eax,(%eax)
lcall  *(%edi)
add    %eax,(%eax)
outsl  %ds:(%esi),(%dx)
and    (%ecx),%eax
add    %bh,%bh
and    (%ecx),%eax
add    %ah,0x24(%ebx)
add    %eax,(%eax)
outsl  %ds:(%esi),(%dx)
and    $0x1,%al
add    %dh,0x1(%esp)
add    %bh,%bh
iret
add    %eax,(%eax)
not    %al
add    %eax,(%eax)
call   *%eax
add    %eax,(%eax)
daa
roll   (%ecx)
add    %ch,(%ecx)
roll   (%ecx)
add    %dh,-0x2f(%ebx)
add    %eax,(%eax)
jp     806aebf <_IO_stdin_used+0xcd1b>
add    %eax,(%eax)
(bad)
add    %eax,(%eax)
call   *%ecx
add    %eax,(%eax)
inc    %esi
rolb   %cl,(%ecx)
add    %bh,%bh
rolb   %cl,(%ecx)
add    %dl,-0x2d(%edi)
add    %eax,(%eax)
pop    %edi
roll   %cl,(%ecx)
add    %dh,-0x2d(%edx)
add    %eax,(%eax)
call   *%ebx
add    %eax,(%eax)
push   %ebp
aam    $0x1
add    %dl,-0x2c(%ebp)
add    %eax,(%eax)
popf
aam    $0x1
add    %bl,-0x5ffffe2c(%ebp)
aam    $0x1
add    %ah,-0x5cfffe2c(%ecx)
aam    $0x1
add    %ah,-0x2b58ffff(%esp,%edx,8)
add    %eax,(%eax)
test   $0xd4,%al
add    %eax,(%eax)
lods   %ds:(%esi),%eax
aam    $0x1
add    %ch,-0x45fffe2c(%ebp)
aam    $0x1
add    %bh,-0x43fffe2c(%edx)
aam    $0x1
add    %bh,-0x2b3bffff(%esp,%edx,8)
add    %eax,(%eax)
(bad)
aam    $0x1
add    %al,(%esi)
aad    $0x1
add    %al,(%esi)
aad    $0x1
add    %cl,(%ebx)
aad    $0x1
add    %cl,-0x2aeaffff(,%edx,8)
add    %eax,(%eax)
adc    $0x1d0001d5,%eax
aad    $0x1
add    %bl,0x3a0001d5
aad    $0x1
add    %bh,(%edx)
aad    $0x1
add    %bh,(%edi)
aad    $0x1
add    %bh,(%edi)
aad    $0x1
add    %al,-0x2b(%ebp)
add    %eax,(%eax)
inc    %ebp
aad    $0x1
add    %al,-0x2b(%edi)
add    %eax,(%eax)
dec    %ecx
aad    $0x1
add    %dl,-0x2b(%ecx)
add    %eax,(%eax)
push   %ecx
aad    $0x1
add    %ah,-0x58fffe2a(%esi)
(bad)
add    %eax,(%eax)
int3
xlat   %ds:(%ebx)
add    %eax,(%eax)
int    $0xd7
add    %eax,(%eax)
add    %bl,%al
add    %eax,(%eax)
(bad)
incl   (%ecx)
add    %dl,%bh
cmpsb  %es:(%edi),%ds:(%esi)
add    (%eax),%al
push   %edi
add    (%eax),%al
push   %ds
cli
add    (%eax),%al
add    %al,(%eax)
push   %cs
add    %al,(%ecx)
add    %cl,(%esi)
add    %al,(%ecx)
add    %cl,(%esi)
add    %al,(%edx)
add    %cl,(%esi)
add    %bl,(%edi)
add    %cl,(%esi)
add    %ah,(%eax)
add    %cl,(%esi)
add    %bh,0x0(%edi)
push   %cs
add    %al,-0xfff200(%eax)
add    %cl,(%esi)
add    %dh,%al
add    %ecx,(%esi)
add    %bh,%bh
decl   (%esi)
add    %al,(%eax)
add    %cl,(%edi)
add    %bh,%ch
decl   (%edi)
add    %bh,%dh
decl   (%edi)
add    %bh,%bh
decl   (%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %bh,%ch
call   *(%eax)
add    %bh,%dh
call   *(%eax)
add    %bh,%bh
call   *(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bh,%bh
(bad)
(bad)
jg     806b019 <_IO_stdin_used+0xce75>
add    (%eax),%eax
add    %ch,0x3(%edi)
add    %al,(%eax)
addl   $0x0,(%eax,%eax,1)
xchg   %al,(%eax,%eax,1)
add    %cl,-0x76fffffc(%eax)
add    $0x0,%al
add    %dl,-0x42fffffb(%ecx)
add    $0x5bf0000,%eax
add    %al,(%eax)
mov    $0xc1000005,%edi
add    $0x5c20000,%eax
add    %al,(%eax)
les    0x5c50000,%eax
add    %al,(%eax)
movl   $0x6100000,0x5c70000
06
add    %al,(%eax)
adc    $0x4b000006,%eax
push   %es
add    %al,(%eax)
pop    %esi
push   %es
add    %al,(%eax)
jo     806b078 <_IO_stdin_used+0xced4>
add    %al,(%eax)
jo     806b07c <_IO_stdin_used+0xced8>
add    %al,(%eax)
(bad)
push   %es
add    %al,(%eax)
faddl  (%esi)
add    %al,(%eax)
fiadd  (%esi)
add    %al,(%eax)
fiadd  (%esi)
add    %al,(%eax)
fild   (%esi)
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
out    %eax,$0x6
add    %al,(%eax)
call   f206b09f <_end+0xe9ffb01f>
push   %es
add    %al,(%eax)
in     (%dx),%eax
push   %es
add    %al,(%eax)
adc    %eax,(%edi)
add    %al,(%eax)
adc    %eax,(%edi)
add    %al,(%eax)
xor    %al,(%edi)
add    %al,(%eax)
dec    %edx
pop    %es
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
pop    %es
add    %al,(%eax)
mov    $0x7,%al
add    %al,(%eax)
jmp    806b0c1 <_IO_stdin_used+0xcf1d>
add    %al,(%eax)
repz pop %es
add    %al,(%eax)
add    %ecx,(%ecx)
add    %al,(%eax)
add    (%ecx),%cl
add    %al,(%eax)
cmp    $0x9,%al
add    %al,(%eax)
cmp    $0x9,%al
add    %al,(%eax)
inc    %ecx
or     %eax,(%eax)
add    %cl,0x9(%eax)
add    %al,(%eax)
dec    %ebp
or     %eax,(%eax)
add    %cl,0x9(%ebp)
add    %al,(%eax)
push   %ecx
or     %eax,(%eax)
add    %dl,0x0(%ecx,%ecx,1)
add    %ah,0x9(%edx)
add    %al,(%eax)
arpl   %cx,(%ecx)
add    %al,(%eax)
orl    $0x9810000,(%ecx)
add    %al,(%eax)
mov    $0xbc000009,%esp
or     %eax,(%eax)
add    %al,%cl
or     %eax,(%eax)
add    %al,%ah
or     %eax,(%eax)
add    %cl,%ch
or     %eax,(%eax)
add    %cl,%ch
or     %eax,(%eax)
add    %ah,%dl
or     %eax,(%eax)
add    %ah,%bl
or     %eax,(%eax)
add    %al,(%ecx)
or     (%eax),%al
add    %al,(%edx)
or     (%eax),%al
add    %bh,(%edx,%ecx,1)
add    %al,(%eax)
cmp    $0xa,%al
add    %al,(%eax)
inc    %ecx
or     (%eax),%al
add    %al,0xa(%edx)
add    %al,(%eax)
inc    %edi
or     (%eax),%al
add    %cl,0xa(%eax)
add    %al,(%eax)
dec    %ebx
or     (%eax),%al
add    %cl,0xa(%ebp)
add    %al,(%eax)
jo     806b14c <_IO_stdin_used+0xcfa8>
add    %al,(%eax)
jno    806b150 <_IO_stdin_used+0xcfac>
add    %al,(%eax)
orl    $0xa820000,(%edx)
add    %al,(%eax)
mov    $0xbc00000a,%esp
or     (%eax),%al
add    %al,%cl
or     (%eax),%al
add    %al,%ch
or     (%eax),%al
add    %al,%bh
or     (%eax),%al
add    %cl,%al
or     (%eax),%al
add    %cl,%ch
or     (%eax),%al
add    %cl,%ch
or     (%eax),%al
add    %ah,%dl
or     (%eax),%al
add    %ah,%bl
or     (%eax),%al
add    %al,(%ecx)
or     (%eax),%eax
add    %al,(%ecx)
or     (%eax),%eax
add    %bh,(%ebx,%ecx,1)
add    %al,(%eax)
cmp    $0xb,%al
add    %al,(%eax)
aas
or     (%eax),%eax
add    %bh,(%edi)
or     (%eax),%eax
add    %al,0xb(%ecx)
add    %al,(%eax)
inc    %ebx
or     (%eax),%eax
add    %cl,0xb(%ebp)
add    %al,(%eax)
dec    %ebp
or     (%eax),%eax
add    %dl,0xb(%esi)
add    %al,(%eax)
push   %esi
or     (%eax),%eax
add    %al,-0x7dfffff5(%edx)
or     (%eax),%eax
add    %al,%al
or     (%eax),%eax
add    %al,%al
or     (%eax),%eax
add    %cl,%ch
or     (%eax),%eax
add    %cl,%ch
or     (%eax),%eax
add    %bh,(%esi)
or     $0x0,%al
add    %al,0xc(%eax)
add    %al,(%eax)
inc    %esi
or     $0x0,%al
add    %cl,0xc(%eax)
add    %al,(%eax)
dec    %edx
or     $0x0,%al
add    %cl,0xc(%ebp)
add    %al,(%eax)
push   %ebp
or     $0x0,%al
add    %dl,0xc(%esi)
add    %al,(%eax)
mov    $0xbc00000c,%esp
or     $0x0,%al
add    %bh,-0x40fffff4(%edi)
or     $0x0,%al
add    %al,%dh
or     $0x0,%al
add    %al,%dh
or     $0x0,%al
add    %cl,%ah
or     $0x0,%al
add    %cl,%ch
or     $0x0,%al
add    %ah,%dl
or     $0x0,%al
add    %ah,%bl
or     $0x0,%al
add    %al,0xd(%ecx)
add    %al,(%eax)
inc    %ebx
or     $0xd4d0000,%eax
add    %al,(%eax)
dec    %ebp
or     $0xdca0000,%eax
add    %al,(%eax)
lret   $0xd
add    %dl,%dl
or     $0xdd40000,%eax
add    %al,(%eax)
(bad)
or     $0xdd60000,%eax
add    %al,(%eax)
xor    %ecx,(%esi)
add    %al,(%eax)
xor    %ecx,(%esi)
add    %al,(%eax)
xor    $0xe,%al
add    %al,(%eax)
cmp    (%esi),%cl
add    %al,(%eax)
inc    %edi
push   %cs
add    %al,(%eax)
dec    %esi
push   %cs
add    %al,(%eax)
mov    $0xe,%cl
add    %al,(%eax)
mov    $0xe,%cl
add    %al,(%eax)
mov    $0xe,%ah
add    %al,(%eax)
mov    $0xbb00000e,%ecx
push   %cs
add    %al,(%eax)
mov    $0xc800000e,%esp
push   %cs
add    %al,(%eax)
int    $0xe
add    %al,(%eax)
sbb    %cl,(%edi)
add    %al,(%eax)
sbb    %ecx,(%edi)
add    %al,(%eax)
xor    $0x3500000f,%eax
sldt   (%eax)
aaa
sldt   (%eax)
aaa
sldt   (%eax)
cmp    %ecx,(%edi)
add    %al,(%eax)
cmp    %ecx,(%edi)
add    %al,(%eax)
jno    806b299 <_IO_stdin_used+0xd0f5>
add    %al,(%eax)
jle    806b29d <_IO_stdin_used+0xd0f9>
add    %al,(%eax)
orb    $0x0,(%edi)
add    %al,0xf860000(%edi,%ecx,1)
add    %al,(%eax)
xchg   %ecx,(%edi)
add    %al,(%eax)
nop
sldt   (%eax)
xchg   %eax,%edi
sldt   (%eax)
cltd
sldt   (%eax)
mov    $0xc600000f,%esp
sldt   (%eax)
(bad)
sldt   (%eax)
sub    $0x30000010,%eax
adc    %al,(%eax)
add    %dh,(%edx)
adc    %al,(%eax)
add    %dh,(%edx)
adc    %al,(%eax)
add    %dh,(%esi)
adc    %al,(%eax)
add    %dh,(%edi)
adc    %al,(%eax)
add    %bh,(%ecx)
adc    %al,(%eax)
add    %bh,(%ecx)
adc    %al,(%eax)
add    %bl,0x10(%eax)
add    %al,(%eax)
pop    %ecx
adc    %al,(%eax)
add    %bl,0x13(%edi)
add    %al,(%eax)
pop    %edi
adc    (%eax),%eax
add    %dl,(%edx)
pop    %ss
add    %al,(%eax)
adc    $0x17,%al
add    %al,(%eax)
xor    (%edi),%dl
add    %al,(%eax)
xor    $0x17,%al
add    %al,(%eax)
push   %edx
pop    %ss
add    %al,(%eax)
push   %ebx
pop    %ss
add    %al,(%eax)
jb     806b319 <_IO_stdin_used+0xd175>
add    %al,(%eax)
jae    806b31d <_IO_stdin_used+0xd179>
add    %al,(%eax)
mov    $0x17,%bh
add    %al,(%eax)
mov    $0xc6000017,%ebp
pop    %ss
add    %al,(%eax)
(bad)
pop    %ss
add    %al,(%eax)
leave
pop    %ss
add    %al,(%eax)
rcll   %cl,(%edi)
add    %al,(%eax)
fstl   (%edi)
add    %al,(%eax)
fstl   (%edi)
add    %al,(%eax)
or     (%eax),%ebx
add    %al,(%eax)
or     $0xa9000018,%eax
sbb    %al,(%eax)
add    %ch,0x20000018(%ecx)
sbb    %eax,(%eax)
add    %ah,(%edx)
sbb    %eax,(%eax)
add    %ah,(%edi)
sbb    %eax,(%eax)
add    %ch,(%eax)
sbb    %eax,(%eax)
add    %dh,(%edx)
sbb    %eax,(%eax)
add    %dh,(%edx)
sbb    %eax,(%eax)
add    %bh,(%ecx)
sbb    %eax,(%eax)
add    %bh,(%ebx)
sbb    %eax,(%eax)
add    %dl,(%edi)
sbb    (%eax),%al
add    %bl,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%ebx)
sbb    (%eax),%eax
add    %dh,(%ebx,%ebx,1)
add    %al,(%eax)
xor    $0x1b,%al
add    %al,(%eax)
sbb    %ss:(%eax),%eax
add    %bh,(%edx)
sbb    (%eax),%eax
add    %bh,(%ebx,%ebx,1)
add    %al,(%eax)
cmp    $0x1b,%al
add    %al,(%eax)
inc    %edx
sbb    (%eax),%eax
add    %al,0x1b(%edx)
add    %al,(%eax)
imul   $0x0,(%ebx),%ebx
add    %dh,0x1b(%ebx)
add    %al,(%eax)
rcrb   $0x0,0x1dca0000
add    %bh,%dh
sbb    $0x1dff0000,%eax
add    %al,(%eax)
shlb   (%eax)
add    %al,(%eax)
fsubl  (%eax)
add    %al,(%eax)
frstor (%eax)
add    %al,(%eax)
loopne 806b3ce <_IO_stdin_used+0xd22a>
add    %al,(%eax)
loope  806b3d2 <_IO_stdin_used+0xd22e>
add    %al,(%eax)
loope  806b3d6 <_IO_stdin_used+0xd232>
add    %al,(%eax)
loop   806b3da <_IO_stdin_used+0xd236>
add    %al,(%eax)
in     $0x20,%al
add    %al,(%eax)
in     $0x20,%eax
add    %al,(%eax)
out    %eax,(%dx)
and    %al,(%eax)
add    %ch,(%edx)
xor    %al,(%eax)
add    %ch,(%edi)
xor    %al,(%eax)
add    %bl,-0x65ffffd0(%ecx)
xor    %al,(%eax)
add    %al,(%esi)
test   $0x0,%al
add    %al,(%esi)
test   $0x0,%al
add    %cl,(%ebx)
test   $0x0,%al
add    %cl,(%ebx)
test   $0x0,%al
add    %ah,0x260000a8
test   $0x0,%al
add    %bl,(%esi)
sti
add    %al,(%eax)
push   %ds
sti
add    %al,(%eax)
add    %bh,%dh
add    %al,(%eax)
paddd  (%eax),%mm0
add    %ah,(%eax)
incb   (%eax)
add    %ah,(%ebx)
incb   (%eax)
add    %al,(%ecx)
or     (%ecx),%al
add    %al,(%ebx)
or     (%ecx),%al
add    %al,0x600010a
or     (%ecx),%al
add    %cl,(%edx,%ecx,1)
add    %eax,(%eax)
(bad)
add    %eax,(%eax)
cmp    %cl,(%edx)
add    %eax,(%eax)
cmp    (%edx),%cl
add    %eax,(%eax)
aas
or     (%ecx),%al
add    %bh,(%edi)
or     (%ecx),%al
add    %ah,-0x2f(%edi)
add    %eax,(%eax)
imul   $0xd17b0001,%ecx,%edx
add    %eax,(%eax)
(bad)
roll   (%ecx)
add    %al,-0x74fffe2f(%ebp)
roll   (%ecx)
add    %ch,-0x52fffe2f(%edx)
roll   (%ecx)
add    %al,-0x2e(%edx)
add    %eax,(%eax)
inc    %esp
rolb   %cl,(%ecx)
add    %al,(%eax)
add    %ecx,(%esi)
add    %ch,%bh
add    %ecx,(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%esi)
in     $0x5,%eax
or     %dl,-0x1aa4f7fb(,%eiz,8)
add    $0x5e56a08,%eax
or     %dh,-0x1b(%eax)
add    $0x5e56a08,%eax
or     %ah,-0x1a86f7fb(,%eiz,8)
add    $0x5e58108,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e58c08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e59308,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e59f08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e5a608,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e5b108,%eax
or     %bh,-0x1a3cf7fb(%ebp,%eiz,8)
add    $0x5e57908,%eax
or     %cl,%dl
in     $0x5,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e5d508,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e5de08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e5e908,%eax
or     %dh,%ah
in     $0x5,%eax
or     %bh,%bl
in     $0x5,%eax
or     %al,(%esi)
out    %al,$0x5
or     %cl,(%esi,%eiz,8)
add    $0x5e61408,%eax
or     %bl,(%esi)
out    %al,$0x5
or     %ch,(%ecx)
out    %al,$0x5
or     %dh,(%eax)
out    %al,$0x5
or     %bh,-0x1b(%ecx)
add    $0x5e63708,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e64208,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e64908,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e65508,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e65c08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e66808,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e66f08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e67b08,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e68308,%eax
or     %bh,-0x1b(%ecx)
add    $0x5e68f08,%eax
or     %dl,-0x65f7fa1a(%esi)
out    %al,$0x5
or     %ah,-0x1954f7fb(%esi,%eiz,8)
add    $0x5e6b308,%eax
or     %bh,-0x193cf7fb(%esi,%eiz,8)
add    $0x5e6ca08,%eax
or     %al,%bl
out    %al,$0x5
or     %dl,%cl
out    %al,$0x5
or     %bl,%ch
out    %al,$0x5
or     %ch,%al
out    %al,$0x5
or     %dh,%bl
out    %al,$0x5
or     %bh,%al
out    %al,$0x5
or     %al,(%ecx)
out    %eax,$0x5
or     %al,(%esi)
out    %eax,$0x5
or     %cl,(%esi)
out    %eax,$0x5
or     %bl,(%ebx)
out    %eax,$0x5
or     %ah,(%edx)
out    %eax,$0x5
or     %ch,(%edi)
out    %eax,$0x5
or     %cl,(%esi)
out    %eax,$0x5
or     %dh,(%esi)
out    %eax,$0x5
or     %bh,0x805e7
add    %al,(%eax)
add    %ch,-0x1b(%edx)
add    $0x8,%eax
add    %cl,-0x19(%edx)
add    $0x5e51408,%eax
or     %ah,%al
movl   $0x5e75a08,(%esi)
or     %bh,-0x1b(%ecx)
add    $0x8,%eax
add    %dh,-0x19(%eax)
add    $0x5e5bc08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,-0xbf7fa18(%eax)
in     $0x5,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ch,-0x19f9f7fb(%eax,%ebp,8)
add    $0x8,%eax
add    %bl,%al
call   ee1abe2f <_end+0xe613bdaf>
add    $0x8,%eax
add    %al,0x290805e7(%ebx)
out    %al,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%ah
call   eec9be47 <_end+0xe6c2bdc7>
add    $0x8,%eax
add    %ah,-0x4df7fa19(%ecx)
out    %eax,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
jmp    eee3be5f <_end+0xe6dcbddf>
add    $0x8,%eax
add    %bh,-0xcf7fa19(%ecx)
out    %al,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x5(%ecx,%ebp,8)
or     %dl,%ch
out    %eax,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ch
out    %eax,$0x5
or     %al,(%ecx)
out    %eax,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%cl
out    %eax,$0x5
or     %dl,0x805e6(%esi)
add    %al,(%eax)
add    %dl,(%eax)
call   ef28be9b <_end+0xe721be1b>
add    $0x8,%eax
add    %ah,(%eax,%ebp,8)
add    $0x5e70e08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x5(%ecx,%ebp,8)
or     %bh,0x805e7
add    %al,(%eax)
add    %bl,-0x5bf7fa17(%eax)
out    %al,$0x5
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x194cf7fb(%ecx,%ebp,8)
add    $0x8,%eax
add    %cl,(%eax)
ljmp   $0x0,$0x805
fdivl  -0x4923f7fa(%esi)
push   %es
or     %bl,%ah
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
mov    $0x6,%dh
or     %dh,%al
mov    $0x6,%dh
or     %dh,%al
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edi,%esi,4)
push   %es
or     %al,(%edi,%esi,4)
push   %es
or     %al,(%edi,%esi,4)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
and    (%eax),%al
add    %bh,%bh
(bad)
(bad)
decl   (%ecx)
add    %dl,(%ecx)
lldt   (%edx)
or     (%edi),%ecx
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
adc    (%ebx),%bl
or     %eax,(%eax)
adc    (%eax,%eax,1),%cl
movhps (%eax),%xmm0
adc    (%ecx),%eax
add    %dl,(%ebx)
sbb    0x3(%eax,%eax,1),%ebp
or     (%ecx),%eax
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
add    (%ebx),%ebx
push   $0x20b0400
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
add    $0x1b,%al
bound  %eax,(%eax)
add    $0x6020b1b,%eax
add    %eax,(%ecx)
add    %eax,(%eax)
add    $0x1060b0b,%eax
add    %eax,(%ecx)
add    %al,0x600771b
sbb    (%ebx),%ecx
add    %eax,(%esi)
add    %eax,(%ecx)
add    %eax,(%eax)
push   %es
or     (%esi,%eax,1),%ecx
add    %eax,(%ecx)
add    %eax,(%eax)
push   %es
sbb    0x0(%ecx),%ebp
pop    %es
or     (%edx),%ecx
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
pop    %es
sbb    0x0(%eax),%edi
or     %cl,(%ebx)
or     %eax,(%esi)
add    %eax,(%ecx)
add    %eax,(%eax)
or     %bl,(%ebx)
pop    %eax
add    %cl,(%ebx,%ebx,1)
or     (%ecx),%ecx
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
or     $0xb,%al
or     $0x1010106,%eax
add    %cl,(%ebx,%ecx,1)
adc    %al,(%esi)
add    %eax,(%ecx)
add    %eax,(%eax)
or     (%ebx),%ebx
or     %al,(%eax)
or     (%ebx),%ebx
xor    %al,(%eax)
or     %ecx,(%ebx)
pop    %es
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
or     %ebx,(%ebx)
and    $0x0,%al
or     (%ebx),%cl
or     %al,(%esi)
add    %eax,(%ecx)
add    %eax,(%eax)
or     (%ebx),%bl
imul   $0xd,(%eax),%eax
or     (%ebx),%eax
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
or     $0xe006a1b,%eax
or     (%esi,%eax,1),%eax
add    %eax,(%ecx)
add    %eax,(%eax)
push   %cs
pop    %es
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
or     $0xa0c00,%eax
or     $0x65,%al
add    %cl,(%edx,%ebp,2)
add    %cl,(%ebx,%ecx,1)
add    $0x6,%al
add    %eax,(%ecx)
add    %eax,(%eax)
or     $0x5,%al
add    %cl,(%esi,%ecx,1)
add    %cl,(%ebx,%ebp,2)
add    %al,(%edx)
jns    806b81f <_IO_stdin_used+0xd67b>
add    (%ecx),%bl
add    %al,(%edx)
or     (%eax),%ebp
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
add    (%eax),%dl
add    %al,(%edx)
or     (%ebx),%eax
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
add    0x0(%edx),%cl
sbb    $0x591e004b,%eax
add    %bl,(%esi)
add    %cl,%fs:(%esi)
add    $0x0,%al
push   %cs
jne    806b847 <_IO_stdin_used+0xd6a3>
add    $0x15,%al
add    %al,(%eax,%eiz,1)
add    %cl,0x60d0066
add    %cl,0xb0d0016
push   %es
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
or     $0x2030062,%eax
add    %al,(%ebx)
sbb    0x0(%esi),%esi
add    (%ebx),%ecx
add    $0x1010106,%eax
add    %al,(%ebx)
jp     806b873 <_IO_stdin_used+0xd6cf>
and    %esi,0x0(%edi)
and    (%ebx),%bl
and    %al,(%eax)
sub    %al,0x0(%esi)
xor    (%ebx),%bl
inc    %esi
add    %bh,(%eax)
push   %edx
add    %cl,(%ebx)
jb     806b887 <_IO_stdin_used+0xd6e3>
sbb    %edx,(%edx)
add    %bl,(%ecx)
or     $0x0,%al
sbb    %ebx,(%ebx)
jne    806b891 <_IO_stdin_used+0xd6ed>
daa
add    %dl,(%bx,%di)
or     (%edi),%eax
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
adc    %edi,(%eax,%eax,1)
adc    %ebx,(%ebx)
cmp    $0x0,%al
adc    %esi,0x0(%eax)
adc    $0x1b150025,%eax
pop    %ebx
add    %ch,(%ecx)
sbb    0x0(%ebp),%ebx
sub    (%ebx),%bl
sub    %al,(%eax)
sub    %ebx,(%ebx)
sub    %eax,(%eax)
sub    (%ebx),%cl
add    %eax,(%esi)
add    %eax,(%ecx)
add    %eax,(%eax)
sub    (%ebx),%cl
add    (%esi),%al
add    %eax,(%ecx)
add    %eax,(%eax)
sub    %edi,0x0(%ebx)
mov    %eax,0x7d007d7b
add    %ah,0x28007d(%ebx,%edi,2)
mov    %eax,0x29002928
add    %ah,0x5b0029(%eax,%ebp,1)
mov    %eax,0x5d005d5b
add    %ah,0x61b005d(%ebx,%ebx,2)
add    %ah,(%ebx)
sbb    (%edx),%eax
add    %ah,(%edi,%eax,2)
add    %dl,(%eax)
sbb    (%esi),%edi
add    %dl,(%eax)
add    %dl,%ds:(%eax)
or     (%eax),%ecx
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
adc    %dl,0x0(%eax)
xor    (%eax),%esi
add    %al,(%esi)
xor    %eax,(%eax)
push   %es
xor    (%eax),%al
push   %es
xor    (%eax),%eax
push   %es
xor    $0x0,%al
push   %es
xor    $0x360600,%eax
push   %es
aaa
add    %al,(%esi)
cmp    %al,(%eax)
push   %es
cmp    %eax,(%eax)
push   %es
add    %al,%cs:(%esi)
cmp    $0x71c00,%eax
sbb    $0x3a,%al
data16
add    %bl,(%edi,%ebp,1)
add    %cl,(%edi)
aas
add    %al,0x8f002f1b
sub    (%eax),%al
sbb    (%edi),%edi
add    %al,0x6e002a(%ebp)
sub    (%ebx),%ebx
outsb  %ds:(%esi),(%dx)
add    %ch,(%esi,%ecx,2)
add    %ch,0x2e004e1b
add    %dh,%es:(%edi)
insl   (%dx),%es:(%edi)
add    %bl,(%edx)
daa
add    %dl,(%edx)
sbb    %bl,(%eax)
add    %dl,(%edx)
inc    %ebp
add    %cl,(%ecx)
cmp    0x0(%ebp),%ah
or     %ebx,(%eax)
push   %ss
add    %cl,(%ecx)
cmp    0x0(%esi),%ch
adc    $0x3a,%al
jo     806b975 <_IO_stdin_used+0xd7d1>
pop    %ss
je     806b978 <_IO_stdin_used+0xd7d4>
xor    $0x3a360054,%eax
js     806b97f <_IO_stdin_used+0xd7db>
cmp    %es:0x34(%eax,%eax,1),%ah
sub    $0x743a2f00,%eax
add    %ch,0x730074(%edi)
scas   %es:(%edi),%eax
outsl  %ds:(%esi),(%dx)
add    %bl,0x0(%edi)
pop    %es
jl     806b997 <_IO_stdin_used+0xd7f3>
and    $0x21200076,%eax
add    %bl,(%ebx)
sub    (%eax),%eax
or     0x0(%eax),%cl
adc    0x0(%eax),%ebp
adc    (%ebx),%ecx
push   %cs
push   %es
add    %eax,(%ecx)
add    %eax,(%eax)
adc    0x0(%esi),%edx
pop    %ds
jno    806b9b4 <_IO_stdin_used+0xd810>
sbb    %dl,0x0(%ecx)
sbb    %bh,(%edx)
jno    806b9bb <_IO_stdin_used+0xd817>
sbb    %bh,(%edx)
push   %ecx
add    %bl,(%eax)
pop    %edx
pop    %edx
add    %bl,(%eax)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     806ba08 <_IO_stdin_used+0xd864>
popa
and    %dh,0x65(%edx)
addr16 jne 806ba5b <_IO_stdin_used+0xd8b7>
popa
jb     806ba12 <_IO_stdin_used+0xd86e>
imul   $0x7528,0x20(%ebp,%eiz,2),%bp
jae    806ba60 <_IO_stdin_used+0xd8bc>
and    %ch,0x6f742066
and    %dh,0x65(%ebx)
and    %ch,%gs:0x74(%ecx)
sub    %eax,(%eax)
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    806ba1a <_IO_stdin_used+0xd876>
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
and    %bh,-0x45dff7fa(%edx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
call   a0ec12a <_end+0x207c0aa>
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x6(%edi,%ebp,1)
or     %ch,(%edx,%ebp,1)
push   %es
or     %ah,0x6208062f(%eax)
add    %al,(%eax)
add    %ah,%al
roll   $0x8,(%esi)
add    $0x2,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
pop    %es
or     %dl,(%eax)
test   %eax,0x62fc808
or     %ch,%al
das
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
fadd   %st(1),%st
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
xor    %al,(%esi)
or     %dh,(%eax)
xor    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
rol    %cl
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%ah
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x6(%eax,%esi,1)
or     %cl,-0x77f7f9d0(%eax)
xor    %al,(%esi)
or     %ah,0x0(%eax,%eax,1)
add    %cl,%al
roll   $0x8,(%esi)
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%al
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x2a(%edx)
push   %es
or     %ah,0x2a(%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
rol    $0x6,%cl
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x2a(%ebx)
push   %es
or     %dl,-0x4ff7f9d6(%ebp)
xor    %al,(%esi)
or     %ah,0x0(%esi)
add    %al,(%eax)
mov    $0x10806c1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,-0x3ef7f9d6(%ecx)
sub    (%esi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
mov    $0xc1,%al
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%ah
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%al
xor    %al,(%esi)
or     %bh,%ah
xor    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
test   $0xc1,%al
push   %es
or     %al,0x2000000(%edx)
add    %al,(%eax)
add    %cl,0x7(%eax,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
xor    %eax,(%esi)
or     %al,0x31(%eax)
push   %es
or     %ch,0x6(%ecx,%esi,1)
or     %ch,0x0(%eax)
add    %al,(%eax)
mov    0x40806c1,%al
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
jmp    *%esp
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ch
sub    (%esi),%al
or     %ah,0x80631(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
cwtl
roll   $0x8,(%esi)
(bad)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%ah
incl   (%esi)
or     %dh,(%eax)
test   %eax,0x631c408
or     %dh,%dh
sub    (%esi),%al
or     %ah,%ah
xor    %eax,(%esi)
or     %ch,0x0(%edx)
add    %al,(%eax)
nop
roll   $0x8,(%esi)
or     %al,(%eax)
add    %al,(%eax)
sarb   $0x8,0x5(%ebp)
push   %cs
sub    (%esi),%eax
or     %bl,(%ebx,%ebp,1)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edx)
add    %al,(%eax)
mov    %al,%cl
push   %es
or     %ah,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%ecx)
sub    (%esi),%eax
or     %al,0x2b(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
add    $0x6,%cl
or     %cl,0x1(%eax)
add    %al,(%eax)
inc    %eax
(bad)
add    $0x8,%eax
add    %cl,0x0(%ebx)
add    %al,(%eax)
js     806bc1f <_IO_stdin_used+0xda7b>
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%edx,%esi,1)
push   %es
or     %bl,0x2b(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %dh,-0x3f(%eax)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,0x0(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x2b(%ebp)
push   %es
or     %bl,0x8062b(%ebx)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
push   $0x20806c1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,-0x3ff7f9d5(%ebx)
sub    (%esi),%eax
or     %cl,%dh
sub    (%esi),%eax
or     %ch,0x0(%esi)
add    %al,(%eax)
pusha
roll   $0x8,(%esi)
and    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
loopne 806bcd5 <_IO_stdin_used+0xdb31>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%dl
sub    (%esi),%eax
or     %dh,%cl
sub    (%esi),%eax
or     %dh,(%edx,%esi,1)
push   %es
or     %ch,0x0(%edi)
add    %al,(%eax)
pop    %eax
roll   $0x8,(%esi)
or     %al,(%eax)
add    %al,(%eax)
nop
jl     806bd04 <_IO_stdin_used+0xdb60>
or     %al,(%edx)
sub    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
push   %eax
roll   $0x8,(%esi)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x7d,%al
add    $0x62c0d08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
dec    %eax
roll   $0x8,(%esi)
dec    %eax
add    %eax,(%eax)
add    %dl,%al
addl   $0x0,0x8
push   %eax
add    %al,(%eax)
add    %al,-0x3f(%eax)
push   %es
or     %cl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
test   %al,0x62c1808
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
xor    %al,%cl
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x6(%edx,%esi,1)
or     %bh,0x6(%edx,%esi,1)
or     %ah,(%ecx)
sub    $0x6,%al
or     %dh,0x0(%edx)
add    %al,(%eax)
sub    %al,%cl
push   %es
or     %ah,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,-0x33f7f9ce(%eax)
xor    (%esi),%al
or     %dh,%al
xor    (%esi),%al
or     %dh,0x0(%ebx)
add    %al,(%eax)
and    %al,%cl
push   %es
or     %ah,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%ah
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x4d08062c
sub    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
sbb    %al,%cl
push   %es
or     %ah,(%ecx)
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x2c(%edx)
push   %es
or     %bh,0x2c(%edx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %dl,(%eax)
roll   $0x8,(%esi)
or     %al,(%ecx)
add    %al,(%eax)
nop
(bad)
add    $0x62c8a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%eax)
roll   $0x8,(%esi)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
addl   $0x8,0x62c9008
jne    806be52 <_IO_stdin_used+0xdcae>
add    %al,(%eax)
add    %al,%cl
push   %es
or     %ah,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
xor    (%esi),%eax
or     %bl,0x2cb80806(%esp,%ebp,1)
push   %es
or     %dl,0x0(%esi)
add    %al,(%eax)
clc
rolb   $0x8,(%esi)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
test   %eax,0x8
add    %dh,0x0(%edi)
add    %al,(%eax)
lock rolb $0x8,(%esi)
and    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x6(%ebx,%esi,1)
or     %al,-0x4bf7f9cd(%eax)
xor    (%esi),%eax
or     %bh,0x0(%eax)
add    %al,(%eax)
call   300ec585 <_end+0x2807c505>
add    %al,(%eax)
add    %dl,(%eax)
xchg   %al,0x62cce08
or     %bl,%dl
sub    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
loopne 806bea6 <_IO_stdin_used+0xdd02>
push   %es
or     %al,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%ah
xor    (%esi),%eax
or     %ah,%dh
sub    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%ecx)
add    %al,(%eax)
fadd   %st(0),%st
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
(bad)
(bad)
(bad)
incl   0x7(%eax,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x34140806(,%ebp,1)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
rol    %al
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
fdivr  %st(7),%st
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%ebx)
sub    $0x34380806,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %cl,%al
rolb   $0x8,(%esi)
or     %al,(%eax)
add    %al,(%eax)
nop
mov    %al,0x62d3008
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
rol    $0x6,%al
or     %ah,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,0x0(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x34(%eax)
push   %es
or     %bh,(%ecx)
sub    $0x806,%eax
add    %al,(%eax)
aas
add    %al,(%eax)
add    %bh,0x100806c0(%eax)
add    %al,(%eax)
add    %dh,-0x77(%eax)
add    $0x8,%eax
add    %ah,(%ebx)
add    %al,(%eax)
add    %dh,0x80806c0(%eax)
addb   $0x8,0x62d5708
push   $0x2d
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,0x410806c0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%al
incl   (%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x2d(%esi)
push   %es
or     %al,0x8062d(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,0x10806c0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x6(%esp,%esi,1)
or     %ah,0x80634(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,0x10806c0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x7(%eax,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,%ah
xor    $0x6,%al
or     %bl,0x806(%ebp,%ebp,1)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
nop
rolb   $0x8,(%esi)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%al
xor    $0x6,%al
or     %bl,0x806(,%esi,1)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x8062d,%eax
add    %al,(%eax)
add    %al,%dh
sub    $0x806,%eax
add    %al,(%eax)
shrb   %cl,0x806
add    %al,(%eax)
fisubrl 0x806
add    %al,(%eax)
in     $0x2d,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%cl
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%dl
sub    $0x806,%eax
add    %al,(%eax)
lock sub $0x806,%eax
add    %al,(%eax)
imull  0x806
add    %al,(%eax)
(bad)
sub    $0x806,%eax
add    %al,(%eax)
push   %cs
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%ebx)
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%ecx)
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,(%ecx)
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x2e(%ebx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x805ed(%ebx)
add    %al,(%eax)
add    %cl,0x6(%esi,%ebp,1)
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x6(%esi,%ebp,1)
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x2e(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x3808062e(%edx)
roll   $0x8,(%esi)
mov    %ch,(%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%bl
sub    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x35(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x8062e(%edi)
add    %al,(%eax)
add    %bl,0x8062e(%eax)
add    %al,(%eax)
add    %ah,0x8062e(%ecx)
add    %al,(%eax)
add    %ch,0x8062e(%esi)
add    %al,(%eax)
add    %bh,0x8062e(%edx)
add    %al,(%eax)
add    %al,%dh
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%bl
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%al
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%dh
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%dl
cs
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
das
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
das
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi,%ebp,1)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,(%edi)
das
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x8062f
add    %al,(%eax)
add    %cl,0x2f(%ecx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x2f(%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x2f(%ebx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x2f(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x2f(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp    *(%eax)
and    %ch,(%eax)
jo     806c26f <_edata+0x3>
gs
jae    806c273 <_edata+0x7>
and    %dl,0x45(%edx)
push   %esp
push   %ebp
push   %edx
dec    %esi
sub    %eax,(%eax)
cs cs and %ch,%cs:(%eax)
imul   $0x75727265,0x74(%esi),%ebp
jo     806c28b <PC+0x3>
and    %dh,0x20(%edi,%ebp,2)
popa
bound  %ebp,0x72(%edi)
je     806c24a <_IO_stdin_used+0xe0a6>
add    %al,(%eax)
add    %ah,-0x24f7f90e(%eax)
cmp    %al,(%esi)
or     %al,(%eax)
cmp    %eax,(%esi)
or     %ah,0x39(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lcall  *0x6(%edx,%eax,8)
or     %bl,0x6(%edx,%eax,8)
or     %ah,(%esi)
cmp    (%esi),%eax
.byte 0x8
xor    $0x35,%al
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    (%ebx),%dh
xor    %dh,(%eax,%edi,1)
popa
xor    (%esi),%esi
bound  %esi,%ss:(%edi)
arpl   %sp,0x64(%ebx)
xor    $0x30383961,%eax
xor    0x62(%ebp),%esp
bound  %esp,0x34(%ebp)
xor    (%ebx),%dh
popa
xor    %dh,0x64366139
aaa
cmp    %dh,(%eax)
gs cs fs bound %esi,%cs:%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
.byte 0x15
ja     ffffffd5 <_end+0xf7f8ff55>
dec    %eax
