das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dh,-0x5a(%eax)
punpcklbw 0x12(%ecx),%mm6
in     $0x8b,%al
ja     80481a0 <_init-0x17b8>
pop    %ecx
jne    804816a <_init-0x17ee>
mov    $0x373aff75,%esi
.byte 0x84
cltd
adc    %eax,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,-0x4dffc000(%edx)
and    %ecx,0x23004488(%edi,%edi,1)
mov    0x88000004,%al
add    %al,(%eax)
add    %cl,-0x76000000(%ecx)
add    %al,(%eax)
add    %cl,0x8f0000(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x6b000000(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
add    %dl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,-0x66000000(%eax)
add    %al,(%eax)
add    %bh,-0x146189b0(%ebp)
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0x860ef18d,%ecx
lock xchg %eax,%esi
jl     80481fd <_init-0x175b>
jno    804827f <_init-0x16d9>
sbb    $0x97,%al
mov    0x2cce9789,%al
arpl   %si,-0x54(%edx)
dec    %ebx
jecxz  80481f4 <_init-0x1764>
mov    $0xc77c92e3,%ebx
push   %cs
loopne 8048279 <_init-0x16df>
cmp    %dh,%dl
mov    (%ebx,%eax,2),%ebx
inc    %ebp
aad    $0xec
in     $0x62,%eax
inc    %ecx
cmc
mov    $0xa2,%bl
notl   (%edx)
addr16 push %ebp
popa
adc    %bh,-0x2f5af2c7(,%ebp,4)
ret
xchg   %eax,%ecx
.byte 0x29
.byte 0x1d
.byte 0x8c
.byte 0x1c
dec    %esi
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80482ae <_init-0x16aa>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     8048343 <_init-0x1615>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loope  8048361 <_init-0x15f7>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%cl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fadds  0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x0
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
daa
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jg     8048973 <_init-0xfe5>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x1
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%edx),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    8048a12 <_init-0xf46>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048a24 <_init-0xf34>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x0,%es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    $0x72a00000,%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
int    $0x0
add    %al,(%eax)
jl     8048adf <_init-0xe79>
add    $0x8,%eax
add    %dl,(%edx)
add    %cl,(%esi)
add    %dh,%dl
add    %eax,(%eax)
add    %ah,%al
jb     8048b09 <_init-0xe4f>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   $0x0
add    %al,(%eax)
pop    %eax
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
add    %ax,(%eax)
add    %ah,-0x66(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ss
push   %es
add    %al,(%eax)
mov    0x80672,%al
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,-0x3ffffffe(%edi)
jb     8048b49 <_init-0xe0f>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
repnz add $0x72c00000,%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sahf
add    %eax,(%eax)
add    %ah,0x40805(%ebp,%ebp,8)
add    %al,(%eax)
adc    %eax,(%eax)
verr   (%edx)
push   %es
add    %al,(%eax)
in     $0x7c,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %al,0x70000002(%esi)
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%eax,%eax,1)
add    %ah,0x40806(%edx,%esi,2)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
clts
add    %al,(%eax)
mov    0x80672,%al
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %cl,(%eax)
add    $0x72a00000,%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
daa
add    $0x0,%al
add    %al,(%ebx,%esi,2)
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%esp
add    (%eax),%al
add    %ah,%ah
jb     8048bd9 <_init-0xd7f>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lret   $0x3
add    %dl,0x8049c(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    (%eax),%al
add    %dl,%al
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    (%eax),%eax
add    %al,(%eax)
jae    8048c09 <_init-0xd4f>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
jae    8048c77 <_init-0xce1>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048c8b <_init-0xccd>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048cb6 <_init-0xca2>
popa
jb     8048cb9 <_init-0xc9f>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048cab <_init-0xcad>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048ccc <_init-0xc8c>
gs
jae    8048c5c <_init-0xcfc>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048cc8 <_init-0xc90>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x73690074,0x69(%esi),%ebp
pop    %edi
jae    8048ce6 <_init-0xc72>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x65(%edi)
je     8048cf9 <_init-0xc5f>
jae    8048cf8 <_init-0xc60>
jb     8048cfc <_init-0xc5c>
popa
je     8048cff <_init-0xc59>
arpl   %bp,0x6e(%edi)
add    %ah,0x67(%esi)
gs
je     8048d09 <_init-0xc4f>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jb     8048d12 <_init-0xc46>
arpl   %bp,%gs:0x6e(%edi)
add    %ch,0x65(%edi,%eiz,2)
je     8048d1d <_init-0xc3b>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jae    8048d26 <_init-0xc32>
je     8048d29 <_init-0xc2f>
imul   $0x73006e6f,0x63(%ebp,%eiz,2),%ebp
gs
je     8048d34 <_init-0xc24>
jae    8048d33 <_init-0xc25>
jb     8048d37 <_init-0xc21>
popa
je     8048d3a <_init-0xc1e>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
popa
arpl   %bp,0x73(%esi,%ebp,1)
outsl  %ds:(%esi),(%dx)
xor    %eax,%cs:(%eax)
popa
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     8048d52 <_init-0xc06>
data16
add    %ah,%fs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048d5d <_init-0xbfb>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048d6a <_init-0xbee>
outsb  %gs:(%esi),(%dx)
je     8048d81 <_init-0xbd7>
jns    8048d11 <_init-0xc47>
popa
arpl   %bp,0x66(%edi,%ebx,2)
jb     8048d87 <_init-0xbd1>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ah,%fs:%gs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048d86 <_init-0xbd2>
je     8048d8a <_init-0xbce>
addr16 pop %edi
je     8048da6 <_init-0xbb2>
jo     8048d94 <_init-0xbc4>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    8048d9b <_init-0xbbd>
je     8048d97 <_init-0xbc1>
data16
add    %ah,%fs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
gs
js     8048db6 <_init-0xba2>
outsb  %gs:(%esi),(%dx)
fs
gs
fs
pop    %edi
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
jae    8048db8 <_init-0xba0>
je     8048db4 <_init-0xba4>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8048dc9 <_init-0xb8f>
pop    %edi
fs
gs
pop    %di
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     8048dda <_init-0xb7e>
add    %ch,%gs:0x62(%ecx,%ebp,2)
popa
je     8048df1 <_init-0xb67>
jb     8048dad <_init-0xbab>
jae    8048df0 <_init-0xb68>
xor    %eax,%cs:(%eax)
popa
je     8048dfb <_init-0xb5d>
jb     8048de8 <_init-0xb70>
arpl   %bp,0x70(%edi)
jns    8048ded <_init-0xb6b>
data16
add    %ah,%fs:0x74(%ecx)
je     8048e07 <_init-0xb51>
pop    %edi
arpl   %bp,0x70(%edi)
jns    8048dfa <_init-0xb5e>
imul   $0x696c,0x0(%ebp,%eiz,2),%bp
bound  %esp,0x2e(%ebx)
jae    8048e16 <_init-0xb42>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048e24 <_init-0xb34>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048e31 <_init-0xb27>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048e44 <_init-0xb14>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x70,(%eax),%eax
popa
je     8048e47 <_init-0xb11>
arpl   %bp,0x6e(%edi)
data16
add    %dh,0x65(%ebx)
je     8048e54 <_init-0xb04>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048e66 <_init-0xaf2>
outsl  %ds:(%esi),(%dx)
ja     8048e58 <_init-0xb00>
add    %dh,0x74(%ebx)
jb     8048e68 <_init-0xaf0>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048e6b <_init-0xaed>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048e7b <_init-0xadd>
arpl   %bp,0x72(%eax)
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x5f007461,0x6b(%esi),%ebp
pop    %edi
jae    8048e90 <_init-0xac8>
jb     8048e82 <_init-0xad6>
jne    8048e90 <_init-0xac8>
add    %dh,0x70(%edx)
insl   (%dx),%es:(%edi)
popa
je     8048e8a <_init-0xace>
push   $0x67636400
gs
je     8048ea3 <_init-0xab5>
gs
js     8048ea6 <_init-0xab2>
add    %ah,0x74(%esi)
jb     8048eac <_init-0xaac>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
ss
xor    $0x0,%al
pop    %edi
pop    %edi
data16
js     8048eb7 <_init-0xaa1>
je     8048ea7 <_init-0xab1>
je     8048ea9 <_init-0xaaf>
je     8048e80 <_init-0xad8>
xor    $0x0,%al
arpl   %bp,0x73(%edi,%ebp,2)
gs imul $0x64686366,%fs:%gs:0x0(%edx),%esi
64
imul   $0x6f727265,0x0(%edx),%esi
jb     8048e62 <_init-0xaf6>
imul   $0x63617073,0x77(%ebx),%esi
add    %bl,%gs:0x5f(%edi)
jae    8048ee3 <_init-0xa75>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    8048efd <_init-0xa5b>
jo     8048efa <_init-0xa5e>
imul   $0x646b6d00,0x74(%esi),%ebp
imul   $0x6c616572,0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048ea0 <_init-0xab8>
jae    8048f16 <_init-0xa42>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048eac <_init-0xaac>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     8048f1b <_init-0xa3d>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048f22 <_init-0xa36>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048f4b <_init-0xa0d>
gs
jb     8048f4f <_init-0xa09>
pop    %edi
popaw
imul   $0x6c617773,0x69(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
jne    8048f56 <_init-0xa02>
add    %ah,0x72(%ebp)
jb     8048f5d <_init-0x9fb>
jb     8048f4f <_init-0xa09>
popa
je     8048f52 <_init-0xa06>
insb   (%dx),%es:(%edi)
imul   $0x635f5f00,0x65(%esi),%ebp
je     8048f76 <_init-0x9e2>
jo     8048f64 <_init-0x9f4>
pop    %edi
addr16
gs
je     8048f63 <_init-0x9f5>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048f7c <_init-0x9dc>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048f0f <_init-0xa49>
insb   (%dx),%es:(%edi)
arpl   %bp,0x6f(%eax)
ja     8048f83 <_init-0x9d5>
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616300,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jne    8048f9c <_init-0x9bc>
imul   $0x7300736e,0x65(%ebp),%ebp
je     8048fa3 <_init-0x9b5>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048f9e <_init-0x9ba>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048fa6 <_init-0x9b2>
je     8048f43 <_init-0xa15>
jne    8048fb9 <_init-0x99f>
imul   $0x7461736e,0x65(%ebp),%ebp
add    %bl,0x5f(%edi)
gs
jb     8048fc4 <_init-0x994>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
jb     8048fcc <_init-0x98c>
popa
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048fe5 <_init-0x973>
popa
addr16
gs
jae    8048fe3 <_init-0x975>
jp     8048fe1 <_init-0x977>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     8048fe5 <_init-0x973>
jo     8048ffd <_init-0x95b>
add    %bl,0x5f(%edi)
data16
js     8048ffd <_init-0x95b>
je     8048fed <_init-0x96b>
je     8048fc4 <_init-0x994>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8049007 <_init-0x951>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     8049012 <_init-0x946>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    804901f <_init-0x939>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %dh,0x74(%ebx)
jb     8049027 <_init-0x931>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804902f <_init-0x929>
add    %ah,0x75(%ebp)
imul   $0x73736563,0x63(%ecx,%eiz,2),%esp
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    804904c <_init-0x90c>
popa
jae    804904d <_init-0x90b>
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     804904d <_init-0x90b>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     804905d <_init-0x8fb>
je     8049034 <_init-0x924>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    804906a <_init-0x8ee>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049008 <_init-0x950>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     804908b <_init-0x8cd>
je     804907b <_init-0x8dd>
je     8049052 <_init-0x906>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8049095 <_init-0x8c3>
outsb  %ds:(%esi),(%dx)
jbe    8049033 <_init-0x925>
outsl  %ds:(%esi),(%dx)
jo     80490aa <_init-0x8ae>
popa
jb     80490a0 <_init-0x8b8>
add    %bl,0x5f(%edi)
data16
jb     80490a4 <_init-0x8b4>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     80490bd <_init-0x89b>
add    %dh,0x63(%edi)
ja     80490b9 <_init-0x89f>
fs
je     80490bb <_init-0x89d>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    80490cc <_init-0x88c>
jo     80490d2 <_init-0x886>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     80490ec <_init-0x86c>
jo     80490f3 <_init-0x865>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
js     80490f6 <_init-0x862>
imul   $0x64,0x6f(%esi),%ebp
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp)
imul   $0x65670073,0x65(%ebp),%ebp
je     8049103 <_init-0x855>
ja     8049106 <_init-0x852>
add    %bl,0x5f(%edi)
addr16
gs
je     804910d <_init-0x84b>
gs
insb   (%dx),%es:(%edi)
imul   $0x69727766,0x0(%ebp),%ebp
je     8049119 <_init-0x83f>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    804911a <_init-0x83e>
arpl   %bp,0x73(%edi,%ebp,2)
add    %ah,%gs:0x65(%edi)
je     8049139 <_init-0x81f>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    80490ce <_init-0x88a>
jb     8049135 <_init-0x823>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     804913e <_init-0x81a>
jne    8049144 <_init-0x814>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     804915b <_init-0x7fd>
imul   $0x665f5f00,0x65(%ebp),%ebp
jo     8049155 <_init-0x803>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8049165 <_init-0x7f3>
push   $0x73690072
ja     804916c <_init-0x7ec>
outsb  %ds:(%esi),(%dx)
je     804917e <_init-0x7da>
insb   (%dx),%es:(%edi)
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8049114 <_init-0x844>
jo     8049188 <_init-0x7d0>
outsl  %ds:(%esi),(%dx)
addr16 jb 804917b <_init-0x7dd>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     80491a0 <_init-0x7b8>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     804919c <_init-0x7bc>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x61630034,%fs:0x36(%edx),%esi
61
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
pop    %edi
imul   $0x616e,0x5f(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    80491bf <_init-0x799>
outsl  %ds:(%esi),(%dx)
jo     80491c8 <_init-0x790>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     80491d6 <_init-0x782>
add    %bl,0x5f(%edi)
jae    80491df <_init-0x779>
jb     80491da <_init-0x77e>
outsb  %ds:(%esi),(%dx)
je     80491da <_init-0x77e>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x75(%esi)
je     80491e6 <_init-0x772>
insl   (%dx),%es:(%edi)
gs
jae    80491e2 <_init-0x776>
je     8049183 <_init-0x7d5>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80491ef <_init-0x769>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     80491f6 <_init-0x762>
js     8049207 <_init-0x751>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x69666b6d,0x0(%esi),%ebp
outsw  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     80491de <_init-0x77a>
xor    $0x0,%al
jae    8049220 <_init-0x738>
jb     8049211 <_init-0x747>
insl   (%dx),%es:(%edi)
jo     80491b1 <_init-0x7a7>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049231 <_init-0x727>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %bl,%fs:0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8049233 <_init-0x725>
jb     8049236 <_init-0x722>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80491d4 <_init-0x784>
jo     8049245 <_init-0x713>
jae    8049241 <_init-0x717>
js     8049239 <_init-0x71f>
popaw
fs
jbe    8049248 <_init-0x710>
jae    8049246 <_init-0x712>
ss
xor    $0x0,%al
data16
jo     804925c <_init-0x6fc>
je     804925c <_init-0x6fc>
pop    %edi
jne    804925a <_init-0x6fe>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x5f(%edi)
jo     8049269 <_init-0x6ef>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8049274 <_init-0x6e4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8049278 <_init-0x6e0>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     804927c <_init-0x6dc>
js     8049282 <_init-0x6d6>
je     804921b <_init-0x73d>
pop    %edi
gs
fs
popa
je     8049282 <_init-0x6d6>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    804929e <_init-0x6ba>
popa
jb     80492a1 <_init-0x6b7>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x54(%ecx)
push   %esp
push   %edx
pop    %edi
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %ecx
inc    %ebx
dec    %esp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    $0x3000000,%eax
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000800
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x9000300
add    %al,(%ebx)
add    %al,0x9000300
add    %al,(%ebx)
add    %cl,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x5000500
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%esi)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,0x8000300
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
push   %es
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
or     %eax,(%eax)
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,0x3000500
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %eax,(%eax)
add    %eax,(%eax)
imul   $0x0,(%ecx),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x28(%ecx)
cwtl
or     %eax,(%eax)
add    %cl,(%ebx)
add    %ah,(%edi)
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
roll   %cl,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %eax
and    $0x82,%al
add    $0x50000,%eax
xor    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
or     (%eax),%al
xchg   %eax,%esp
add    %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0xd0000,0xd(%ecx),%ebp
cmp    %al,(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8049463 <_init-0x4f5>
imul   $0xc0000,(%ecx),%ecx
inc    %edx
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8049479 <_init-0x4df>
imul   $0xa0000,(%ecx),%ecx
dec    %esi
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x90000,%eax
pop    %edx
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x664,0x80000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
pop    %es
add    %ch,0x6(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x60000,%eax
jns    80494a8 <_init-0x4b0>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %ss
imul   $0x40000,0xd(%ecx),%ebp
addl   $0x0,(%esi)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
lea    (%esi),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80494e3 <_init-0x475>
imul   $0x20000,(%ecx),%ecx
xchg   %eax,%edi
push   %es
add    %al,(%eax)
add    %al,(%eax)
cld
outsl  %ds:(%esi),(%dx)
push   %es
or     %al,(%esi)
add    %al,%ss:(%eax)
mov    0x5080672,%al
mov    %al,(%eax)
add    %ah,-0x6cfaf7fa(%edx,%esi,2)
add    %al,(%eax)
(bad)
jb     80494f9 <_init-0x45f>
or     %al,0xe000008f
jb     8049501 <_init-0x457>
or     %al,0xe400008a
jb     8049509 <_init-0x44f>
or     %al,0x97
jae    8049511 <_init-0x447>
or     %al,0x400009a
jae    8049519 <_init-0x43f>
.byte 0x8
.byte 0x5
xchg   %eax,%esi
or     $0x70,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
jo     8049529 <_init-0x42f>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%esi,2)
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
jo     8049539 <_init-0x41f>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%esi,2)
push   %es
or     %al,(%edi)
add    $0x70200000,%eax
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0x70,%al
push   %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
sub    %dh,0x6(%eax)
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%esi,2)
push   %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax)
jo     8049569 <_init-0x3ef>
or     %al,(%edi)
or     (%eax),%eax
add    %dh,(%eax,%esi,2)
push   %es
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax)
jo     8049579 <_init-0x3df>
or     %al,(%edi)
or     $0x703c0000,%eax
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %eax
jo     8049589 <_init-0x3cf>
or     %al,(%edi)
mov    %es,(%eax)
add    %al,0x6(%eax,%esi,2)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
jo     8049599 <_init-0x3bf>
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x6(%eax,%esi,2)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x70(%eax)
push   %es
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x6(%eax,%esi,2)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x70(%eax)
push   %es
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x6(%eax,%esi,2)
or     %al,(%edi)
adc    $0x70600000,%eax
push   %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
fs
jo     80495d1 <_init-0x387>
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080670
sbb    %al,(%eax)
add    %ch,0x6(%eax,%esi,2)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x70(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x6(%eax,%esi,2)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x70(%eax)
push   %es
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x6(%eax,%esi,2)
or     %al,(%edi)
sbb    $0x70800000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
test   %dh,0x6(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
mov    %dh,0x6(%eax)
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x21070806(%eax,%esi,2)
add    %al,(%eax)
nop
jo     8049629 <_init-0x32f>
or     %al,(%edi)
and    (%eax),%al
add    %dl,0x23070806(%eax,%esi,2)
add    %al,(%eax)
cwtl
jo     8049639 <_init-0x31f>
or     %al,(%edi)
and    $0x0,%al
add    %bl,0x25070806(%eax,%esi,2)
add    %al,(%eax)
mov    0x7080670,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
jo     8049651 <_init-0x307>
or     %al,(%edi)
daa
add    %al,(%eax)
test   $0x70,%al
push   %es
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x29070806(%eax,%esi,2)
add    %al,(%eax)
mov    $0x70,%al
push   %es
or     %al,(%edi)
sub    (%eax),%al
add    %dh,0x2b070806(%eax,%esi,2)
add    %al,(%eax)
mov    $0x7080670,%eax
sub    $0x0,%al
add    %bh,0x2d070806(%eax,%esi,2)
add    %al,(%eax)
(bad)
jo     8049689 <_init-0x2cf>
or     %al,(%edi)
add    %al,%cs:(%eax)
les    0x6(%eax),%esi
or     %al,(%edi)
xchg   %eax,%edx
add    %al,(%eax)
enter  $0x670,$0x8
pop    %es
das
add    %al,(%eax)
int3
jo     80496a1 <_init-0x2b7>
or     %al,(%edi)
cwtl
add    %al,(%eax)
(bad)
jo     80496a9 <_init-0x2af>
or     %al,(%edi)
xor    %al,(%eax)
add    %dl,%ah
jo     80496b1 <_init-0x2a7>
or     %al,(%edi)
xor    %eax,(%eax)
add    %bl,%al
jo     80496b9 <_init-0x29f>
or     %al,(%edi)
xor    (%eax),%al
add    %bl,%ah
jo     80496c1 <_init-0x297>
or     %al,(%edi)
cltd
add    %al,(%eax)
loopne 8049732 <_init-0x226>
push   %es
or     %al,(%edi)
xor    (%eax),%eax
add    %ah,%ah
jo     80496d1 <_init-0x287>
or     %al,(%edi)
xor    $0x0,%al
add    %ch,%al
jo     80496d9 <_init-0x27f>
or     %al,(%edi)
xor    $0x70ec0000,%eax
push   %es
or     %al,(%edi)
add    %al,%ss:(%eax)
lock jo 80496e9 <_init-0x26f>
or     %al,(%edi)
aaa
add    %al,(%eax)
hlt
jo     80496f1 <_init-0x267>
or     %al,(%edi)
cmp    %al,(%eax)
add    %bh,%al
jo     80496f9 <_init-0x25f>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %bh,%ah
jo     8049701 <_init-0x257>
or     %al,(%edi)
cmp    (%eax),%al
add    %al,(%eax)
jno    8049709 <_init-0x24f>
or     %al,(%edi)
cmp    (%eax),%eax
add    %al,(%ecx,%esi,2)
push   %es
or     %al,(%edi)
cmp    $0x0,%al
add    %cl,(%eax)
jno    8049719 <_init-0x23f>
or     %al,(%edi)
cmp    $0x710c0000,%eax
push   %es
or     %al,(%edi)
add    %al,%ds:(%eax)
adc    %dh,0x6(%ecx)
or     %al,(%edi)
aas
add    %al,(%eax)
adc    $0x71,%al
push   %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
sbb    %dh,0x6(%ecx)
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
sbb    $0x71,%al
push   %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
and    %dh,0x6(%ecx)
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
and    $0x71,%al
push   %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
sub    %dh,0x6(%ecx)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
sub    $0x71,%al
push   %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
xor    %dh,0x6(%ecx)
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
xor    $0x71,%al
push   %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
cmp    %dh,0x6(%ecx)
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
cmp    $0x71,%al
push   %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
inc    %eax
jno    8049789 <_init-0x1cf>
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
inc    %esp
jno    8049791 <_init-0x1c7>
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
dec    %eax
jno    8049799 <_init-0x1bf>
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
dec    %esp
jno    80497a1 <_init-0x1b7>
or     %al,(%edi)
dec    %esi
add    %al,(%eax)
push   %eax
jno    80497a9 <_init-0x1af>
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
push   %esp
jno    80497b1 <_init-0x1a7>
or     %al,(%edi)
push   %eax
add    %al,(%eax)
pop    %eax
jno    80497b9 <_init-0x19f>
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
pop    %esp
jno    80497c1 <_init-0x197>
or     %al,(%edi)
push   %edx
add    %al,(%eax)
pusha
jno    80497c9 <_init-0x18f>
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
fs
jno    80497d1 <_init-0x187>
or     %al,(%edi)
push   %esp
add    %al,(%eax)
push   $0x7080671
push   %ebp
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jno    80497e1 <_init-0x177>
or     %al,(%edi)
push   %esi
add    %al,(%eax)
jo     8049853 <_init-0x105>
push   %es
or     %al,(%edi)
push   %edi
add    %al,(%eax)
je     804985b <_init-0xfd>
push   %es
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
js     8049863 <_init-0xf5>
push   %es
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
jl     804986b <_init-0xed>
push   %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
xorb   $0x8,0x6(%ecx)
pop    %es
pop    %ebx
add    %al,(%eax)
test   %dh,0x6(%ecx)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
mov    %dh,0x6(%ecx)
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
mov    %?,0x6(%ecx)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
nop
jno    8049829 <_init-0x12f>
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
xchg   %eax,%esp
jno    8049831 <_init-0x127>
or     %al,(%edi)
pusha
add    %al,(%eax)
cwtl
jno    8049839 <_init-0x11f>
or     %al,(%edi)
popa
add    %al,(%eax)
pushf
jno    8049841 <_init-0x117>
or     %al,(%edi)
bound  %eax,(%eax)
add    %ah,0x7080671(%eax)
arpl   %ax,(%eax)
add    %ah,0x64070806(%ecx,%esi,2)
add    %al,(%eax)
test   $0x71,%al
push   %es
or     %al,(%edi)
add    %al,%gs:(%eax)
lods   %ds:(%esi),%al
jno    8049861 <_init-0xf7>
or     %al,(%edi)
add    %al,(%bx,%si)
mov    $0x71,%al
push   %es
or     %al,(%edi)
push   $0x71b40000
push   %es
or     %al,(%edi)
imul   $0x671b800,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %bh,0x6b070806(%ecx,%esi,2)
add    %al,(%eax)
(bad)
jno    8049889 <_init-0xcf>
or     %al,(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
les    0x6(%ecx),%esi
or     %al,(%edi)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
enter  $0x671,$0x8
pop    %es
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
int3
jno    80498a1 <_init-0xb7>
or     %al,(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
(bad)
jno    80498a9 <_init-0xaf>
or     %al,(%edi)
jo     80498a7 <_init-0xb1>
add    %dl,%ah
jno    80498b1 <_init-0xa7>
or     %al,(%edi)
jno    80498af <_init-0xa9>
add    %bl,%al
jno    80498b9 <_init-0x9f>
or     %al,(%edi)
jae    80498b7 <_init-0xa1>
add    %bl,%ah
jno    80498c1 <_init-0x97>
or     %al,(%edi)
je     80498bf <_init-0x99>
add    %ah,%al
jno    80498c9 <_init-0x8f>
or     %al,(%edi)
jne    80498c7 <_init-0x91>
add    %ah,%ah
jno    80498d1 <_init-0x87>
or     %al,(%edi)
jbe    80498cf <_init-0x89>
add    %ch,%al
jno    80498d9 <_init-0x7f>
or     %al,(%edi)
ja     80498d7 <_init-0x81>
add    %ch,%ah
jno    80498e1 <_init-0x77>
or     %al,(%edi)
js     80498df <_init-0x79>
add    %dh,%al
jno    80498e9 <_init-0x6f>
or     %al,(%edi)
jns    80498e7 <_init-0x71>
add    %dh,%ah
jno    80498f1 <_init-0x67>
or     %al,(%edi)
jp     80498ef <_init-0x69>
add    %bh,%al
jno    80498f9 <_init-0x5f>
or     %al,(%edi)
jnp    80498f7 <_init-0x61>
add    %bh,%ah
jno    8049901 <_init-0x57>
or     %al,(%edi)
jl     80498ff <_init-0x59>
add    %al,(%eax)
jb     8049909 <_init-0x4f>
or     %al,(%edi)
jge    8049907 <_init-0x51>
add    %al,(%edx,%esi,2)
push   %es
or     %al,(%edi)
jle    804990f <_init-0x49>
add    %cl,(%eax)
jb     8049919 <_init-0x3f>
or     %al,(%edi)
jg     8049917 <_init-0x41>
add    %cl,(%edx,%esi,2)
push   %es
or     %al,(%edi)
addb   $0x0,(%eax)
adc    %dh,0x6(%edx)
or     %al,(%edi)
addl   $0x6721400,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
sbb    %dh,0x6(%edx)
or     %al,(%edi)
addl   $0x0,(%eax)
sbb    $0x72,%al
push   %es
or     %al,(%edi)
test   %al,(%eax)
add    %ah,(%eax)
jb     8049949 <_init-0xf>
or     %al,(%edi)
test   %eax,(%eax)
add    %ah,(%edx,%esi,2)
push   %es
or     %al,(%edi)
xchg   %al,(%eax)
add    %ch,(%eax)
jb     8049959 <_init+0x1>
or     %al,(%edi)
xchg   %eax,(%eax)
push   %ebx
sub    $0x8,%esp
call   804a990 <fchmod@plt+0x790>
add    $0x1d69f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8049976 <_init+0x1e>
call   8049d10 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8067004
jmp    *0x8067008
add    %al,(%eax)
jmp    *0x806700c
push   $0x0
jmp    8049980 <_init+0x28>
jmp    *0x8067010
push   $0x8
jmp    8049980 <_init+0x28>
jmp    *0x8067014
push   $0x10
jmp    8049980 <_init+0x28>
jmp    *0x8067018
push   $0x18
jmp    8049980 <_init+0x28>
jmp    *0x806701c
push   $0x20
jmp    8049980 <_init+0x28>
jmp    *0x8067020
push   $0x28
jmp    8049980 <_init+0x28>
jmp    *0x8067024
push   $0x30
jmp    8049980 <_init+0x28>
jmp    *0x8067028
push   $0x38
jmp    8049980 <_init+0x28>
jmp    *0x806702c
push   $0x40
jmp    8049980 <_init+0x28>
jmp    *0x8067030
push   $0x48
jmp    8049980 <_init+0x28>
jmp    *0x8067034
push   $0x50
jmp    8049980 <_init+0x28>
jmp    *0x8067038
push   $0x58
jmp    8049980 <_init+0x28>
jmp    *0x806703c
push   $0x60
jmp    8049980 <_init+0x28>
jmp    *0x8067040
push   $0x68
jmp    8049980 <_init+0x28>
jmp    *0x8067044
push   $0x70
jmp    8049980 <_init+0x28>
jmp    *0x8067048
push   $0x78
jmp    8049980 <_init+0x28>
jmp    *0x806704c
push   $0x80
jmp    8049980 <_init+0x28>
jmp    *0x8067050
push   $0x88
jmp    8049980 <_init+0x28>
jmp    *0x8067054
push   $0x90
jmp    8049980 <_init+0x28>
jmp    *0x8067058
push   $0x98
jmp    8049980 <_init+0x28>
jmp    *0x806705c
push   $0xa0
jmp    8049980 <_init+0x28>
jmp    *0x8067060
push   $0xa8
jmp    8049980 <_init+0x28>
jmp    *0x8067064
push   $0xb0
jmp    8049980 <_init+0x28>
jmp    *0x8067068
push   $0xb8
jmp    8049980 <_init+0x28>
jmp    *0x806706c
push   $0xc0
jmp    8049980 <_init+0x28>
jmp    *0x8067070
push   $0xc8
jmp    8049980 <_init+0x28>
jmp    *0x8067074
push   $0xd0
jmp    8049980 <_init+0x28>
jmp    *0x8067078
push   $0xd8
jmp    8049980 <_init+0x28>
jmp    *0x806707c
push   $0xe0
jmp    8049980 <_init+0x28>
jmp    *0x8067080
push   $0xe8
jmp    8049980 <_init+0x28>
jmp    *0x8067084
push   $0xf0
jmp    8049980 <_init+0x28>
jmp    *0x8067088
push   $0xf8
jmp    8049980 <_init+0x28>
jmp    *0x806708c
push   $0x100
jmp    8049980 <_init+0x28>
jmp    *0x8067090
push   $0x108
jmp    8049980 <_init+0x28>
jmp    *0x8067094
push   $0x110
jmp    8049980 <_init+0x28>
jmp    *0x8067098
push   $0x118
jmp    8049980 <_init+0x28>
jmp    *0x806709c
push   $0x120
jmp    8049980 <_init+0x28>
jmp    *0x80670a0
push   $0x128
jmp    8049980 <_init+0x28>
jmp    *0x80670a4
push   $0x130
jmp    8049980 <_init+0x28>
jmp    *0x80670a8
push   $0x138
jmp    8049980 <_init+0x28>
jmp    *0x80670ac
push   $0x140
jmp    8049980 <_init+0x28>
jmp    *0x80670b0
push   $0x148
jmp    8049980 <_init+0x28>
jmp    *0x80670b4
push   $0x150
jmp    8049980 <_init+0x28>
jmp    *0x80670b8
push   $0x158
jmp    8049980 <_init+0x28>
jmp    *0x80670bc
push   $0x160
jmp    8049980 <_init+0x28>
jmp    *0x80670c0
push   $0x168
jmp    8049980 <_init+0x28>
jmp    *0x80670c4
push   $0x170
jmp    8049980 <_init+0x28>
jmp    *0x80670c8
push   $0x178
jmp    8049980 <_init+0x28>
jmp    *0x80670cc
push   $0x180
jmp    8049980 <_init+0x28>
jmp    *0x80670d0
push   $0x188
jmp    8049980 <_init+0x28>
jmp    *0x80670d4
push   $0x190
jmp    8049980 <_init+0x28>
jmp    *0x80670d8
push   $0x198
jmp    8049980 <_init+0x28>
jmp    *0x80670dc
push   $0x1a0
jmp    8049980 <_init+0x28>
jmp    *0x80670e0
push   $0x1a8
jmp    8049980 <_init+0x28>
jmp    *0x80670e4
push   $0x1b0
jmp    8049980 <_init+0x28>
jmp    *0x80670e8
push   $0x1b8
jmp    8049980 <_init+0x28>
jmp    *0x80670ec
push   $0x1c0
jmp    8049980 <_init+0x28>
jmp    *0x80670f0
push   $0x1c8
jmp    8049980 <_init+0x28>
jmp    *0x80670f4
push   $0x1d0
jmp    8049980 <_init+0x28>
jmp    *0x80670f8
push   $0x1d8
jmp    8049980 <_init+0x28>
jmp    *0x80670fc
push   $0x1e0
jmp    8049980 <_init+0x28>
jmp    *0x8067100
push   $0x1e8
jmp    8049980 <_init+0x28>
jmp    *0x8067104
push   $0x1f0
jmp    8049980 <_init+0x28>
jmp    *0x8067108
push   $0x1f8
jmp    8049980 <_init+0x28>
jmp    *0x806710c
push   $0x200
jmp    8049980 <_init+0x28>
jmp    *0x8067110
push   $0x208
jmp    8049980 <_init+0x28>
jmp    *0x8067114
push   $0x210
jmp    8049980 <_init+0x28>
jmp    *0x8067118
push   $0x218
jmp    8049980 <_init+0x28>
jmp    *0x806711c
push   $0x220
jmp    8049980 <_init+0x28>
jmp    *0x8067120
push   $0x228
jmp    8049980 <_init+0x28>
jmp    *0x8067124
push   $0x230
jmp    8049980 <_init+0x28>
jmp    *0x8067128
push   $0x238
jmp    8049980 <_init+0x28>
jmp    *0x806712c
push   $0x240
jmp    8049980 <_init+0x28>
jmp    *0x8067130
push   $0x248
jmp    8049980 <_init+0x28>
jmp    *0x8067134
push   $0x250
jmp    8049980 <_init+0x28>
jmp    *0x8067138
push   $0x258
jmp    8049980 <_init+0x28>
jmp    *0x806713c
push   $0x260
jmp    8049980 <_init+0x28>
jmp    *0x8067140
push   $0x268
jmp    8049980 <_init+0x28>
jmp    *0x8067144
push   $0x270
jmp    8049980 <_init+0x28>
jmp    *0x8067148
push   $0x278
jmp    8049980 <_init+0x28>
jmp    *0x806714c
push   $0x280
jmp    8049980 <_init+0x28>
jmp    *0x8067150
push   $0x288
jmp    8049980 <_init+0x28>
jmp    *0x8067154
push   $0x290
jmp    8049980 <_init+0x28>
jmp    *0x8067158
push   $0x298
jmp    8049980 <_init+0x28>
jmp    *0x806715c
push   $0x2a0
jmp    8049980 <_init+0x28>
jmp    *0x8067160
push   $0x2a8
jmp    8049980 <_init+0x28>
jmp    *0x8067164
push   $0x2b0
jmp    8049980 <_init+0x28>
jmp    *0x8067168
push   $0x2b8
jmp    8049980 <_init+0x28>
jmp    *0x806716c
push   $0x2c0
jmp    8049980 <_init+0x28>
jmp    *0x8067170
push   $0x2c8
jmp    8049980 <_init+0x28>
jmp    *0x8067174
push   $0x2d0
jmp    8049980 <_init+0x28>
jmp    *0x8067178
push   $0x2d8
jmp    8049980 <_init+0x28>
jmp    *0x806717c
push   $0x2e0
jmp    8049980 <_init+0x28>
jmp    *0x8067180
push   $0x2e8
jmp    8049980 <_init+0x28>
jmp    *0x8067184
push   $0x2f0
jmp    8049980 <_init+0x28>
jmp    *0x8067188
push   $0x2f8
jmp    8049980 <_init+0x28>
jmp    *0x806718c
push   $0x300
jmp    8049980 <_init+0x28>
jmp    *0x8067190
push   $0x308
jmp    8049980 <_init+0x28>
jmp    *0x8067194
push   $0x310
jmp    8049980 <_init+0x28>
jmp    *0x8067198
push   $0x318
jmp    8049980 <_init+0x28>
jmp    *0x806719c
push   $0x320
jmp    8049980 <_init+0x28>
jmp    *0x80671a0
push   $0x328
jmp    8049980 <_init+0x28>
jmp    *0x80671a4
push   $0x330
jmp    8049980 <_init+0x28>
jmp    *0x80671a8
push   $0x338
jmp    8049980 <_init+0x28>
jmp    *0x80671ac
push   $0x340
jmp    8049980 <_init+0x28>
jmp    *0x80671b0
push   $0x348
jmp    8049980 <_init+0x28>
jmp    *0x80671b4
push   $0x350
jmp    8049980 <_init+0x28>
jmp    *0x80671b8
push   $0x358
jmp    8049980 <_init+0x28>
jmp    *0x80671bc
push   $0x360
jmp    8049980 <_init+0x28>
jmp    *0x80671c0
push   $0x368
jmp    8049980 <_init+0x28>
jmp    *0x80671c4
push   $0x370
jmp    8049980 <_init+0x28>
jmp    *0x80671c8
push   $0x378
jmp    8049980 <_init+0x28>
jmp    *0x80671cc
push   $0x380
jmp    8049980 <_init+0x28>
jmp    *0x80671d0
push   $0x388
jmp    8049980 <_init+0x28>
jmp    *0x80671d4
push   $0x390
jmp    8049980 <_init+0x28>
jmp    *0x80671d8
push   $0x398
jmp    8049980 <_init+0x28>
jmp    *0x80671dc
push   $0x3a0
jmp    8049980 <_init+0x28>
jmp    *0x80671e0
push   $0x3a8
jmp    8049980 <_init+0x28>
jmp    *0x80671e4
push   $0x3b0
jmp    8049980 <_init+0x28>
jmp    *0x80671e8
push   $0x3b8
jmp    8049980 <_init+0x28>
jmp    *0x80671ec
push   $0x3c0
jmp    8049980 <_init+0x28>
jmp    *0x80671f0
push   $0x3c8
jmp    8049980 <_init+0x28>
jmp    *0x80671f4
push   $0x3d0
jmp    8049980 <_init+0x28>
jmp    *0x80671f8
push   $0x3d8
jmp    8049980 <_init+0x28>
jmp    *0x80671fc
push   $0x3e0
jmp    8049980 <_init+0x28>
jmp    *0x8067200
push   $0x3e8
jmp    8049980 <_init+0x28>
jmp    *0x8067204
push   $0x3f0
jmp    8049980 <_init+0x28>
jmp    *0x8067208
push   $0x3f8
jmp    8049980 <_init+0x28>
jmp    *0x806720c
push   $0x400
jmp    8049980 <_init+0x28>
jmp    *0x8067210
push   $0x408
jmp    8049980 <_init+0x28>
jmp    *0x8067214
push   $0x410
jmp    8049980 <_init+0x28>
jmp    *0x8067218
push   $0x418
jmp    8049980 <_init+0x28>
jmp    *0x806721c
push   $0x420
jmp    8049980 <_init+0x28>
jmp    *0x8067220
push   $0x428
jmp    8049980 <_init+0x28>
jmp    *0x8067224
push   $0x430
jmp    8049980 <_init+0x28>
jmp    *0x8067228
push   $0x438
jmp    8049980 <_init+0x28>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xe0,%esp
mov    0xc(%ebp),%ebx
mov    0x8(%ebp),%esi
lea    0x44(%esp),%edi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8053c10 <fchmod@plt+0x9a10>
movl   $0x8060e3d,0x4(%esp)
movl   $0x6,(%esp)
call   8049fd0 <setlocale@plt>
movl   $0x805ee9b,0x4(%esp)
movl   $0x805ee40,(%esp)
call   804a0b0 <bindtextdomain@plt>
movl   $0x805ee40,(%esp)
call   8049b60 <textdomain@plt>
movl   $0x8052220,(%esp)
call   805ed40 <fchmod@plt+0x14b40>
call   80499d0 <is_selinux_enabled@plt>
mov    %edi,(%esp)
test   %eax,%eax
setg   0x806735e
call   804c810 <fchmod@plt+0x2610>
movl   $0x805eead,(%esp)
movb   $0x1,0x58(%esp)
movl   $0x1,0x48(%esp)
movb   $0x0,0x59(%esp)
movb   $0x0,0x5a(%esp)
movb   $0x0,0x5b(%esp)
movl   $0x4,0x4c(%esp)
movb   $0x0,0x5c(%esp)
movb   $0x0,0x5f(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x60(%esp)
movb   $0x0,0x64(%esp)
movb   $0x0,0x61(%esp)
movb   $0x0,0x62(%esp)
movb   $0x0,0x63(%esp)
movb   $0x0,0x67(%esp)
movb   $0x0,0x68(%esp)
movb   $0x0,0x69(%esp)
movb   $0x0,0x6b(%esp)
movb   $0x0,0x6a(%esp)
movb   $0x1,0x65(%esp)
movb   $0x0,0x66(%esp)
movb   $0x0,0x6c(%esp)
movl   $0x2,0x50(%esp)
movb   $0x0,0x6e(%esp)
movb   $0x0,0x6d(%esp)
movl   $0x0,0x54(%esp)
movb   $0x0,0x71(%esp)
movb   $0x0,0x6f(%esp)
movb   $0x0,0x70(%esp)
call   8049c60 <getenv@plt>
movl   $0x805eebd,(%esp)
movl   $0x0,0x78(%esp)
movl   $0x0,0x7c(%esp)
test   %eax,%eax
setne  0x72(%esp)
call   8049c60 <getenv@plt>
movb   $0x0,0x3e(%esp)
movl   $0x0,0x38(%esp)
movb   $0x0,0x3d(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x3f(%esp)
mov    %eax,0x30(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x805f540,0xc(%esp)
movl   $0x805ef2a,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049d50 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804a6f8 <fchmod@plt+0x4f8>
add    $0x83,%eax
cmp    $0x10b,%eax
ja     804a6c9 <fchmod@plt+0x4c9>
jmp    *0x805f0bc(,%eax,4)
mov    0x8067304,%eax
test   %eax,%eax
jne    804a6d5 <fchmod@plt+0x4d5>
movb   $0x1,0x60(%esp)
movb   $0x1,0x61(%esp)
movb   $0x1,0x62(%esp)
movb   $0x1,0x66(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x3e(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x5b(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x3,0x4c(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x5a(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x64(%esp)
movl   $0x2,0x48(%esp)
jmp    804a380 <fchmod@plt+0x180>
mov    0x8067304,%eax
movb   $0x1,0x3f(%esp)
test   %eax,%eax
cmove  0x34(%esp),%eax
mov    %eax,0x34(%esp)
jmp    804a380 <fchmod@plt+0x180>
cmpb   $0x0,0x806735e
movl   $0x2,0x48(%esp)
movb   $0x1,0x64(%esp)
movb   $0x1,0x60(%esp)
movb   $0x1,0x61(%esp)
movb   $0x1,0x62(%esp)
movb   $0x1,0x66(%esp)
je     804a464 <fchmod@plt+0x264>
movb   $0x1,0x67(%esp)
movb   $0x1,0x69(%esp)
movb   $0x1,0x6b(%esp)
movb   $0x1,0x6c(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x2,0x4c(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x4,0x48(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x3,0x48(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x0,(%esp)
call   804b3e0 <fchmod@plt+0x11e0>
movl   $0x805eee5,0x4(%esp)
movl   $0x805eef8,(%esp)
call   8054610 <fchmod@plt+0xa410>
movl   $0x0,0x1c(%esp)
movl   $0x805ef0a,0x18(%esp)
movl   $0x805ef17,0x14(%esp)
movl   $0x805ee3c,0x8(%esp)
movl   $0x805ef27,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x8067250,%eax
mov    %eax,0xc(%esp)
mov    0x8067300,%eax
mov    %eax,(%esp)
call   8057f10 <fchmod@plt+0xdd10>
movl   $0x0,(%esp)
call   8049d20 <exit@plt>
movb   $0x1,0x6c(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x2,0x48(%esp)
jmp    804a380 <fchmod@plt+0x180>
mov    0x8067304,%eax
movb   $0x1,0x3f(%esp)
mov    %eax,0x30(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x59(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x806735c
jmp    804a380 <fchmod@plt+0x180>
mov    0x8067254,%eax
movl   $0x4,0x10(%esp)
movl   $0x805f724,0xc(%esp)
movl   $0x805f730,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8067304,%eax
movl   $0x805eed2,(%esp)
mov    %eax,0x4(%esp)
call   8051cd0 <fchmod@plt+0x7ad0>
mov    0x805f724(,%eax,4),%eax
mov    %eax,0x50(%esp)
jmp    804a380 <fchmod@plt+0x180>
mov    0x8067304,%eax
test   %eax,%eax
je     804a6eb <fchmod@plt+0x4eb>
mov    0x8067254,%edx
movl   $0x4,0x10(%esp)
movl   $0x805f710,0xc(%esp)
movl   $0x805f718,0x8(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
movl   $0x805eedb,(%esp)
call   8051cd0 <fchmod@plt+0x7ad0>
mov    0x805f710(,%eax,4),%eax
mov    %eax,0x74(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x806735d
jmp    804a380 <fchmod@plt+0x180>
mov    0x8067304,%eax
xor    %ecx,%ecx
mov    %edi,%edx
call   804aa60 <fchmod@plt+0x860>
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x3d(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x0,0x65(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x5f(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x70(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x6f(%esp)
jmp    804a380 <fchmod@plt+0x180>
cmpl   $0x0,0x38(%esp)
je     804a806 <fchmod@plt+0x606>
movl   $0x5,0x8(%esp)
movl   $0x8060aac,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    0x8067304,%eax
mov    %eax,0x38(%esp)
jmp    804a380 <fchmod@plt+0x180>
movb   $0x1,0x6e(%esp)
jmp    804a380 <fchmod@plt+0x180>
cmpl   $0x2,0x50(%esp)
je     804a727 <fchmod@plt+0x527>
movl   $0x5,0x8(%esp)
movl   $0x8060b3c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x1,(%esp)
call   804b3e0 <fchmod@plt+0x11e0>
mov    $0x1,%ecx
mov    %edi,%edx
call   804aa60 <fchmod@plt+0x860>
movb   $0x1,0x66(%esp)
jmp    804a380 <fchmod@plt+0x180>
movl   $0x2,0x74(%esp)
jmp    804a380 <fchmod@plt+0x180>
cmpb   $0x0,0x5b(%esp)
je     804a70a <fchmod@plt+0x50a>
cmpb   $0x0,0x6e(%esp)
jne    804a8de <fchmod@plt+0x6de>
cmpb   $0x0,0x3f(%esp)
je     804a71c <fchmod@plt+0x51c>
cmpl   $0x2,0x4c(%esp)
je     804a950 <fchmod@plt+0x750>
cmpl   $0x2,0x74(%esp)
je     804a68a <fchmod@plt+0x48a>
mov    0x30(%esp),%eax
test   %eax,%eax
je     804a73c <fchmod@plt+0x53c>
mov    %eax,(%esp)
call   8058280 <fchmod@plt+0xe080>
mov    %eax,0x8067258
xor    %eax,%eax
cmpb   $0x0,0x3f(%esp)
jne    804a897 <fchmod@plt+0x697>
cmpl   $0x1,0x48(%esp)
mov    %eax,0x44(%esp)
je     804a8c8 <fchmod@plt+0x6c8>
cmpb   $0x0,0x6c(%esp)
je     804a768 <fchmod@plt+0x568>
movzbl 0x3d(%esp),%eax
mov    %al,0x58(%esp)
cmpb   $0x0,0x5a(%esp)
je     804a77b <fchmod@plt+0x57b>
cmpb   $0x0,0x5b(%esp)
je     804a7c7 <fchmod@plt+0x5c7>
movb   $0x1,0x59(%esp)
cmpb   $0x0,0x67(%esp)
je     804a78b <fchmod@plt+0x58b>
cmpb   $0x0,0x806735e
je     804a7d0 <fchmod@plt+0x5d0>
call   8050ec0 <fchmod@plt+0x6cc0>
movzbl 0x3e(%esp),%ecx
mov    0x80672e0,%eax
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
mov    0x38(%esp),%ecx
sub    %eax,%esi
lea    (%ebx,%eax,4),%edx
mov    %esi,%eax
call   804b910 <fchmod@plt+0x1710>
mov    %eax,%ebx
call   8050f10 <fchmod@plt+0x6d10>
xor    %eax,%eax
test   %bl,%bl
sete   %al
mov    %eax,(%esp)
call   8049d20 <exit@plt>
cmpb   $0x0,0x6e(%esp)
je     804a77b <fchmod@plt+0x57b>
jmp    804a776 <fchmod@plt+0x576>
movl   $0x5,0x8(%esp)
movl   $0x8060b6c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804a78b <fchmod@plt+0x58b>
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8067304,%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
jne    804a8f3 <fchmod@plt+0x6f3>
mov    0x90(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804a672 <fchmod@plt+0x472>
mov    0x8067304,%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ee7e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x38(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804a672 <fchmod@plt+0x472>
movl   $0x5,0x8(%esp)
movl   $0x805ef41,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    0x34(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8052150 <fchmod@plt+0x7f50>
jmp    804a749 <fchmod@plt+0x549>
cmpb   $0x1,0x6c(%esp)
sbb    %eax,%eax
and    $0x2,%eax
add    $0x2,%eax
mov    %eax,0x48(%esp)
jmp    804a758 <fchmod@plt+0x558>
movl   $0x5,0x8(%esp)
movl   $0x8060ad4,0x4(%esp)
jmp    804a6a5 <fchmod@plt+0x4a5>
mov    0x8067304,%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805edb3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x2c(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,0x38(%esp)
call   8049ed0 <__errno_location@plt>
mov    0x2c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804a82e <fchmod@plt+0x62e>
movl   $0x5,0x8(%esp)
movl   $0x8060b00,0x4(%esp)
jmp    804a6a5 <fchmod@plt+0x4a5>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x805ed30
push   $0x805ecc0
push   %ecx
push   %esi
push   $0x804a210
call   8049e10 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80672a3,%eax
sub    $0x80672a0,%eax
cmp    $0x6,%eax
ja     804a9b0 <fchmod@plt+0x7b0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a9af <fchmod@plt+0x7af>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80672a0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80672a0,%eax
sub    $0x80672a0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804a9e9 <fchmod@plt+0x7e9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804a9e8 <fchmod@plt+0x7e8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80672a0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8067308
jne    804aa2c <fchmod@plt+0x82c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a9a0 <fchmod@plt+0x7a0>
movb   $0x1,0x8067308
leave
repz ret
xchg   %ax,%ax
mov    0x8066ef8,%eax
test   %eax,%eax
je     804aa58 <fchmod@plt+0x858>
mov    $0x0,%eax
test   %eax,%eax
je     804aa58 <fchmod@plt+0x858>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8066ef8,(%esp)
call   *%eax
leave
jmp    804a9d0 <fchmod@plt+0x7d0>
nop
jmp    804a9d0 <fchmod@plt+0x7d0>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
call   8058280 <fchmod@plt+0xe080>
mov    %eax,0x1c(%esp)
mov    %eax,%edi
mov    %esi,%eax
xor    $0x1,%eax
mov    %al,0x1b(%esp)
lea    0x0(%esi),%esi
movl   $0x2c,0x4(%esp)
mov    %edi,(%esp)
call   8049d80 <strchr@plt>
test   %eax,%eax
je     804ab88 <fchmod@plt+0x988>
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
mov    0x8067254,%eax
movl   $0x4,0x10(%esp)
movl   $0x805f4ec,0xc(%esp)
movl   $0x805f520,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
movl   $0x805eda8,(%esp)
call   8051cd0 <fchmod@plt+0x7ad0>
cmpl   $0x6,0x805f4ec(,%eax,4)
ja     804ab90 <fchmod@plt+0x990>
mov    0x805f4ec(,%eax,4),%eax
jmp    *0x805f0a0(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %al,0x25(%ebx)
mov    %al,0x26(%ebx)
test   %ebp,%ebp
je     804ab18 <fchmod@plt+0x918>
mov    %ebp,%edi
jmp    804aa88 <fchmod@plt+0x888>
mov    %esi,%eax
test   %ebp,%ebp
mov    %al,0x23(%ebx)
mov    %al,0x24(%ebx)
jne    804ab04 <fchmod@plt+0x904>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %al,0x20(%ebx)
jmp    804ab00 <fchmod@plt+0x900>
nop
mov    %esi,%eax
mov    %al,0x1c(%ebx)
jmp    804ab00 <fchmod@plt+0x900>
nop
mov    %esi,%eax
mov    %al,0x1e(%ebx)
jmp    804ab00 <fchmod@plt+0x900>
nop
mov    %esi,%eax
mov    %al,0x1d(%ebx)
movzbl 0x1b(%esp),%eax
mov    %al,0x1f(%ebx)
jmp    804ab00 <fchmod@plt+0x900>
nop
mov    %esi,%eax
mov    %al,0x1d(%ebx)
mov    %al,0x1e(%ebx)
mov    %al,0x1c(%ebx)
mov    %al,0x20(%ebx)
movzbl 0x1b(%esp),%eax
cmpb   $0x0,0x806735e
mov    %al,0x1f(%ebx)
je     804ab7c <fchmod@plt+0x97c>
mov    %esi,%eax
mov    %al,0x23(%ebx)
mov    %esi,%eax
mov    %al,0x25(%ebx)
jmp    804ab00 <fchmod@plt+0x900>
xchg   %ax,%ax
xor    %ebp,%ebp
jmp    804aaa6 <fchmod@plt+0x8a6>
nop
call   804a100 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     804ac22 <fchmod@plt+0xa22>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebp
test   %ebp,%ebp
xchg   %ax,%ax
je     804ac22 <fchmod@plt+0xa22>
cmp    $0x2,%ebp
je     804ac15 <fchmod@plt+0xa15>
mov    %esi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805edb3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movb   $0x1,(%edi)
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
jmp    804ac1a <fchmod@plt+0xa1a>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10c,%esp
mov    0xc(%ebp),%esi
mov    0x8(%ebp),%eax
mov    %ebx,(%esp)
mov    %ecx,-0x104(%ebp)
mov    %esi,-0x100(%ebp)
mov    0x10(%ebp),%esi
mov    %eax,-0xfc(%ebp)
mov    %esi,-0xf0(%ebp)
mov    %gs:0x14,%esi
mov    %esi,-0x1c(%ebp)
xor    %esi,%esi
call   8049dc0 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    %eax,(%esp)
mov    %eax,-0xec(%ebp)
call   8052500 <fchmod@plt+0x8300>
mov    %eax,%esi
lea    0x1f(%eax),%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
mov    -0xec(%ebp),%eax
lea    0x1f(%esp),%ebx
and    $0xfffffff0,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049a70 <memcpy@plt>
mov    -0xfc(%ebp),%eax
movb   $0x0,(%ebx,%esi,1)
movl   $0x0,(%eax)
lea    -0xdc(%ebp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     804addd <fchmod@plt+0xbdd>
add    -0xec(%ebp),%edi
cmpb   $0x2f,(%edi)
mov    %edi,-0xf8(%ebp)
jne    804b0fb <fchmod@plt+0xefb>
mov    %edi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
cmpb   $0x2f,(%eax)
je     804ad28 <fchmod@plt+0xb28>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804adf8 <fchmod@plt+0xbf8>
lea    -0xdc(%ebp),%eax
movb   $0x0,(%ebx)
mov    %eax,0x8(%esp)
mov    -0xec(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
setne  -0xf4(%ebp)
jne    804ae60 <fchmod@plt+0xc60>
mov    -0xf0(%ebp),%eax
cmpb   $0x0,0x1c(%eax)
jne    804ae60 <fchmod@plt+0xc60>
cmpb   $0x0,0x1d(%eax)
jne    804ae60 <fchmod@plt+0xc60>
cmpb   $0x0,0x1e(%eax)
jne    804ae60 <fchmod@plt+0xc60>
mov    -0xcc(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804b106 <fchmod@plt+0xf06>
mov    -0x100(%ebp),%eax
movb   $0x0,(%eax)
cmpb   $0x2f,0x1(%ebx)
lea    0x1(%ebx),%eax
movb   $0x2f,(%ebx)
jne    804ad30 <fchmod@plt+0xb30>
nop
add    $0x1,%eax
cmpb   $0x2f,(%eax)
je     804add0 <fchmod@plt+0xbd0>
jmp    804ad30 <fchmod@plt+0xb30>
mov    -0xcc(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804ae15 <fchmod@plt+0xc15>
mov    -0x100(%ebp),%eax
movb   $0x0,(%eax)
mov    $0x1,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    804b18a <fchmod@plt+0xf8a>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f760,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804adfd <fchmod@plt+0xbfd>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xf8(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     804b008 <fchmod@plt+0xe08>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%esi
test   %esi,%esi
xchg   %ax,%ax
jne    804b020 <fchmod@plt+0xe20>
movl   $0x6c,(%esp)
lea    -0x7c(%ebp),%esi
call   8058040 <fchmod@plt+0xde40>
mov    $0x18,%ecx
mov    %eax,%edi
mov    %eax,%edx
rep movsl %ds:(%esi),%es:(%edi)
mov    -0xfc(%ebp),%edi
mov    %ebx,%eax
sub    -0xec(%ebp),%eax
cmpb   $0x0,-0xf4(%ebp)
movb   $0x0,0x60(%edx)
mov    %eax,0x64(%edx)
mov    (%edi),%eax
mov    %eax,0x68(%edx)
mov    %edx,(%edi)
je     804ada0 <fchmod@plt+0xba0>
mov    -0x100(%ebp),%eax
mov    -0xf0(%ebp),%ecx
movb   $0x1,(%eax)
mov    0x10(%edx),%eax
cmpb   $0x0,0x1c(%ecx)
je     804b070 <fchmod@plt+0xe70>
mov    %eax,%esi
and    $0x3f,%esi
mov    %esi,%ecx
not    %ecx
and    $0xfff,%eax
and    %ecx,%eax
mov    %eax,0x4(%esp)
mov    -0xec(%ebp),%eax
mov    %edx,-0xf4(%ebp)
mov    %eax,(%esp)
call   8049ea0 <mkdir@plt>
mov    -0xf4(%ebp),%edx
test   %eax,%eax
jne    804b168 <fchmod@plt+0xf68>
mov    -0x104(%ebp),%eax
test   %eax,%eax
je     804af65 <fchmod@plt+0xd65>
mov    -0xec(%ebp),%ecx
mov    -0xf8(%ebp),%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %edx,-0xf4(%ebp)
call   8049f40 <__printf_chk@plt>
mov    -0xf4(%ebp),%edx
lea    -0xdc(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xec(%ebp),%eax
movl   $0x3,(%esp)
mov    %edx,-0xf4(%ebp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
mov    -0xf4(%ebp),%edx
test   %eax,%eax
jne    804b114 <fchmod@plt+0xf14>
mov    -0xf0(%ebp),%eax
cmpb   $0x0,0x1d(%eax)
je     804b090 <fchmod@plt+0xe90>
mov    -0xcc(%ebp),%edi
mov    %edi,%eax
and    $0x1c0,%eax
cmp    $0x1c0,%eax
je     804adbf <fchmod@plt+0xbbf>
mov    -0xec(%ebp),%eax
or     $0x1c0,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a0f0 <chmod@plt>
test   %eax,%eax
je     804adbf <fchmod@plt+0xbbf>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ede0,0x4(%esp)
mov    %eax,%esi
jmp    804b134 <fchmod@plt+0xf34>
xchg   %ax,%ax
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ae96 <fchmod@plt+0xc96>
mov    $0x14,%esi
mov    -0xf8(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f740,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804adfd <fchmod@plt+0xbfd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0xf0(%ebp),%ecx
cmpb   $0x0,0x1d(%ecx)
je     804b0c8 <fchmod@plt+0xec8>
mov    %eax,%esi
and    $0x12,%esi
mov    %esi,%ecx
not    %ecx
jmp    804aefe <fchmod@plt+0xcfe>
lea    0x0(%esi),%esi
mov    -0xcc(%ebp),%eax
mov    %eax,%ecx
not    %ecx
test   %ecx,%esi
jne    804b0d4 <fchmod@plt+0xed4>
mov    %eax,%ecx
mov    %eax,%edi
and    $0x1c0,%ecx
cmp    $0x1c0,%ecx
je     804adbf <fchmod@plt+0xbbf>
or     %eax,%esi
mov    %esi,0x10(%edx)
movb   $0x1,0x60(%edx)
jmp    804afaf <fchmod@plt+0xdaf>
lea    0x0(%esi),%esi
mov    $0xffffffff,%ecx
xor    %esi,%esi
jmp    804aefe <fchmod@plt+0xcfe>
mov    %edx,-0xf4(%ebp)
call   804cae0 <fchmod@plt+0x28e0>
mov    -0xf4(%ebp),%edx
not    %eax
and    %eax,%esi
mov    -0xcc(%ebp),%eax
mov    %eax,%ecx
not    %ecx
test   %ecx,%esi
je     804b09e <fchmod@plt+0xe9e>
mov    %eax,%edi
jmp    804b0b4 <fchmod@plt+0xeb4>
mov    -0xf8(%ebp),%eax
jmp    804ad30 <fchmod@plt+0xb30>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
jmp    804ae18 <fchmod@plt+0xc18>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f740,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804adfd <fchmod@plt+0xbfd>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805edc7,0x4(%esp)
mov    %eax,%esi
jmp    804b134 <fchmod@plt+0xf34>
call   8049b10 <__stack_chk_fail@plt>
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x4c,%esp
mov    0x8(%ebp),%edi
mov    %esi,(%esp)
mov    %edx,-0x3c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   8049dc0 <strlen@plt>
lea    0x1(%eax),%ecx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x23(%esp),%eax
and    $0xfffffff0,%eax
mov    %esi,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    -0x3c(%ebp),%edx
test   %ebx,%ebx
mov    %eax,%esi
lea    (%eax,%edx,1),%eax
mov    %eax,-0x40(%ebp)
jne    804b222 <fchmod@plt+0x1022>
jmp    804b3a0 <fchmod@plt+0x11a0>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1c(%edi)
jne    804b2a8 <fchmod@plt+0x10a8>
movzbl 0x1d(%edi),%ecx
test   %cl,%cl
jne    804b300 <fchmod@plt+0x1100>
cmpb   $0x0,0x60(%ebx)
jne    804b338 <fchmod@plt+0x1138>
mov    0x64(%ebx),%eax
movb   $0x2f,(%esi,%eax,1)
mov    0x68(%ebx),%ebx
test   %ebx,%ebx
je     804b3a0 <fchmod@plt+0x11a0>
mov    0x64(%ebx),%eax
movb   $0x0,(%esi,%eax,1)
cmpb   $0x0,0x1e(%edi)
je     804b1f0 <fchmod@plt+0xff0>
mov    0x40(%ebx),%eax
mov    0x44(%ebx),%ecx
mov    %eax,-0x2c(%ebp)
mov    0x48(%ebx),%eax
mov    %ecx,-0x28(%ebp)
mov    0x4c(%ebx),%ecx
mov    %esi,(%esp)
mov    %eax,-0x24(%ebp)
lea    -0x2c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %ecx,-0x20(%ebp)
call   8057590 <fchmod@plt+0xd390>
test   %eax,%eax
je     804b1f0 <fchmod@plt+0xff0>
mov    %esi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f784,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %ecx,%ecx
jmp    804b3a5 <fchmod@plt+0x11a5>
mov    0x1c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x18(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a000 <lchown@plt>
test   %eax,%eax
je     804b1fa <fchmod@plt+0xffa>
mov    %edi,(%esp)
call   804c890 <fchmod@plt+0x2690>
test   %al,%al
mov    %eax,%ecx
je     804b3bb <fchmod@plt+0x11bb>
mov    0x1c(%ebx),%eax
movl   $0xffffffff,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804a000 <lchown@plt>
movzbl 0x1d(%edi),%ecx
test   %cl,%cl
je     804b206 <fchmod@plt+0x1006>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
movl   $0xffffffff,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x40(%ebp),%eax
mov    %eax,(%esp)
call   8051750 <fchmod@plt+0x7550>
test   %eax,%eax
je     804b210 <fchmod@plt+0x1010>
xor    %ecx,%ecx
jmp    804b3a5 <fchmod@plt+0x11a5>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%eax
mov    %esi,(%esp)
mov    %ecx,-0x3c(%ebp)
mov    %eax,0x4(%esp)
call   804a0f0 <chmod@plt>
test   %eax,%eax
je     804b210 <fchmod@plt+0x1010>
mov    %esi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f7c8,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x3c(%ebp),%ecx
jmp    804b3a5 <fchmod@plt+0x11a5>
xchg   %ax,%ax
mov    $0x1,%ecx
mov    -0x1c(%ebp),%edx
xor    %gs:0x14,%edx
mov    %ecx,%eax
jne    804b3da <fchmod@plt+0x11da>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
mov    %ecx,-0x3c(%ebp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f7a4,0x4(%esp)
mov    %eax,%esi
jmp    804b36c <fchmod@plt+0x116c>
call   8049b10 <__stack_chk_fail@plt>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x806777c,%esi
mov    0x30(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     804b434 <fchmod@plt+0x1234>
movl   $0x805f7f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049d20 <exit@plt>
movl   $0x805f818,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805f898,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805f8d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805f920,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805fadc,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805fc88,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805fd14,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805fde0,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805ff38,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805ffcc,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x80600e8,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x80601ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x80602bc,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x80603fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806042c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x8060464,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x80606ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806078c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806086c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    0x806777c,%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
movl   $0x5,0x8(%esp)
movl   $0x805edfb,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x805ee12,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805ee28,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x8060910,0xc(%esp)
movl   $0x805ee3c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    0x8067300,%esi
movl   $0x5,0x8(%esp)
movl   $0x8060938,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8049fd0 <setlocale@plt>
test   %eax,%eax
je     804b885 <fchmod@plt+0x1685>
movl   $0x3,0x8(%esp)
movl   $0x805ee4a,0x4(%esp)
mov    %eax,(%esp)
call   804a0d0 <strncmp@plt>
test   %eax,%eax
jne    804b8c9 <fchmod@plt+0x16c9>
mov    0x806777c,%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
movl   $0x5,0x8(%esp)
movl   $0x80609c0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
jmp    804b42c <fchmod@plt+0x122c>
mov    0x806777c,%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
movl   $0x5,0x8(%esp)
movl   $0x8060978,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
jmp    804b885 <fchmod@plt+0x1685>
lea    0x0(%esi),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
mov    %eax,-0x90(%ebp)
mov    0xc(%ebp),%eax
mov    %edx,-0x98(%ebp)
mov    %ecx,-0x94(%ebp)
mov    0x8(%ebp),%ecx
movb   $0x0,-0x86(%ebp)
mov    %eax,-0x8c(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
test   %esi,%esi
sete   %al
movzbl %al,%edx
cmp    %ebx,%edx
jge    804be03 <fchmod@plt+0x1c03>
test   %cl,%cl
je     804bc51 <fchmod@plt+0x1a51>
cmpl   $0x0,-0x94(%ebp)
je     804b9a5 <fchmod@plt+0x17a5>
movl   $0x5,0x8(%esp)
movl   $0x8060a30,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
cmpl   $0x2,-0x90(%ebp)
mov    -0x98(%ebp),%eax
jg     804be54 <fchmod@plt+0x1c54>
mov    -0x90(%ebp),%ecx
lea    -0x7c(%ebp),%edx
mov    -0x4(%eax,%ecx,4),%eax
lea    -0x86(%ebp),%ecx
call   804aba0 <fchmod@plt+0x9a0>
cmpl   $0x0,-0x94(%ebp)
je     804bcf3 <fchmod@plt+0x1af3>
cmpl   $0x1,-0x90(%ebp)
je     804b9fc <fchmod@plt+0x17fc>
mov    -0x8c(%ebp),%esi
mov    %esi,(%esp)
call   804c790 <fchmod@plt+0x2590>
mov    %esi,(%esp)
call   804c7d0 <fchmod@plt+0x25d0>
xor    %ebx,%ebx
movb   $0x1,-0x99(%ebp)
lea    0x0(%esi),%esi
mov    -0x98(%ebp),%eax
cmpb   $0x0,0x806735c
movl   $0x0,-0x80(%ebp)
mov    (%eax,%ebx,4),%esi
jne    804bc20 <fchmod@plt+0x1a20>
cmpb   $0x0,0x806735d
mov    %esi,(%esp)
je     804bb40 <fchmod@plt+0x1940>
call   8049dc0 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x27(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    %eax,(%esp)
mov    %eax,%edi
call   8052660 <fchmod@plt+0x8460>
lea    -0x80(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x94(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80529f0 <fchmod@plt+0x87f0>
xor    %ecx,%ecx
mov    -0x80(%ebp),%edx
mov    %eax,%edi
mov    -0x8c(%ebp),%eax
cmpb   $0x0,0x2c(%eax)
mov    $0x805ee4e,%eax
cmovne %eax,%ecx
mov    -0x8c(%ebp),%eax
sub    %edi,%edx
mov    %eax,0x8(%esp)
lea    -0x86(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x84(%ebp),%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   804ac40 <fchmod@plt+0xa40>
test   %al,%al
jne    804bba6 <fchmod@plt+0x19a6>
movzbl 0x806735d,%eax
movb   $0x0,-0x99(%ebp)
test   %al,%al
je     804bb03 <fchmod@plt+0x1903>
mov    -0x84(%ebp),%eax
test   %eax,%eax
je     804bb03 <fchmod@plt+0x1903>
lea    0x0(%esi),%esi
mov    0x68(%eax),%edx
mov    %eax,(%esp)
mov    %edx,-0x84(%ebp)
call   8049a60 <free@plt>
mov    -0x84(%ebp),%eax
test   %eax,%eax
jne    804bae8 <fchmod@plt+0x18e8>
mov    %edi,(%esp)
add    $0x1,%ebx
call   8049a60 <free@plt>
cmp    -0x90(%ebp),%ebx
jl     804ba08 <fchmod@plt+0x1808>
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
movzbl -0x99(%ebp),%eax
jne    804be73 <fchmod@plt+0x1c73>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049dc0 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x27(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,%edi
mov    %eax,(%esp)
call   8052660 <fchmod@plt+0x8460>
cmpb   $0x2e,(%edi)
jne    804bc30 <fchmod@plt+0x1a30>
cmpb   $0x2e,0x1(%edi)
jne    804bc30 <fchmod@plt+0x1a30>
cmpb   $0x0,0x2(%edi)
jne    804bc30 <fchmod@plt+0x1a30>
mov    -0x94(%ebp),%eax
mov    %eax,(%esp)
call   8058280 <fchmod@plt+0xe080>
mov    %eax,%edi
lea    -0x85(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x8c(%ebp),%eax
movl   $0x0,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
movzbl -0x86(%ebp),%eax
mov    %eax,0x8(%esp)
call   8050b40 <fchmod@plt+0x6940>
and    %al,-0x99(%ebp)
cmpb   $0x0,0x806735d
je     804bb03 <fchmod@plt+0x1903>
mov    -0x8c(%ebp),%eax
mov    -0x80(%ebp),%edx
mov    -0x84(%ebp),%ecx
mov    %eax,(%esp)
mov    %edi,%eax
sub    %edi,%edx
call   804b190 <fchmod@plt+0xf90>
and    %al,-0x99(%ebp)
movzbl 0x806735d,%eax
jmp    804bad4 <fchmod@plt+0x18d4>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8052660 <fchmod@plt+0x8460>
jmp    804ba25 <fchmod@plt+0x1825>
lea    0x0(%esi),%esi
mov    -0x94(%ebp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80529f0 <fchmod@plt+0x87f0>
mov    %eax,%edi
jmp    804bba6 <fchmod@plt+0x19a6>
test   %al,%al
je     804b9dd <fchmod@plt+0x17dd>
mov    -0x90(%ebp),%eax
cmp    $0x1,%eax
je     804bcf3 <fchmod@plt+0x1af3>
lea    0x3fffffff(%eax),%esi
mov    -0x98(%ebp),%eax
lea    -0x86(%ebp),%ecx
lea    -0x7c(%ebp),%edx
lea    (%eax,%esi,4),%ebx
mov    (%ebx),%eax
call   804aba0 <fchmod@plt+0x9a0>
test   %al,%al
je     804bca6 <fchmod@plt+0x1aa6>
mov    -0x98(%ebp),%eax
subl   $0x1,-0x90(%ebp)
mov    (%eax,%esi,4),%eax
mov    %eax,-0x94(%ebp)
jmp    804b9d0 <fchmod@plt+0x17d0>
cmpl   $0x2,-0x90(%ebp)
je     804bcf3 <fchmod@plt+0x1af3>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ee7e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x98(%ebp),%eax
cmpb   $0x0,0x806735d
mov    (%eax),%edx
mov    0x4(%eax),%ebx
jne    804bdc3 <fchmod@plt+0x1bc3>
mov    -0x8c(%ebp),%eax
cmpb   $0x0,0x16(%eax)
je     804bd8b <fchmod@plt+0x1b8b>
mov    (%eax),%esi
test   %esi,%esi
je     804bd8b <fchmod@plt+0x1b8b>
mov    %edx,(%esp)
mov    %ebx,0x4(%esp)
mov    %edx,-0x90(%ebp)
call   80499e0 <strcmp@plt>
mov    -0x90(%ebp),%edx
test   %eax,%eax
jne    804bd8b <fchmod@plt+0x1b8b>
cmpb   $0x0,-0x86(%ebp)
jne    804bd8b <fchmod@plt+0x1b8b>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804bd8b <fchmod@plt+0x1b8b>
mov    %esi,0x4(%esp)
mov    $0x8067320,%edi
mov    %ebx,(%esp)
call   8051dd0 <fchmod@plt+0x7bd0>
mov    -0x90(%ebp),%edx
mov    $0xf,%ecx
mov    -0x8c(%ebp),%esi
rep movsl %ds:(%esi),%es:(%edi)
movl   $0x8067320,-0x8c(%ebp)
08
movl   $0x0,0x8067320
00
mov    %eax,%ebx
lea    -0x80(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x8c(%ebp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   8050b40 <fchmod@plt+0x6940>
mov    %al,-0x99(%ebp)
jmp    804bb1a <fchmod@plt+0x191a>
movl   $0x5,0x8(%esp)
movl   $0x8060a78,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x1,(%esp)
call   804b3e0 <fchmod@plt+0x11e0>
sub    $0x1,%ebx
jne    804be78 <fchmod@plt+0x1c78>
mov    -0x98(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060a04,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804bdf7 <fchmod@plt+0x1bf7>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ee6d,0x4(%esp)
mov    %eax,%ebx
jmp    804be2a <fchmod@plt+0x1c2a>
call   8049b10 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x805ee58,0x4(%esp)
jmp    804bdd3 <fchmod@plt+0x1bd3>
xchg   %ax,%ax
nop
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    %eax,0x4(%esp)
jmp    8055d20 <fchmod@plt+0xbb20>
lea    0x0(%esi),%esi
and    $0xf000,%edx
cmp    $0xa000,%edx
je     804bef8 <fchmod@plt+0x1cf8>
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8058000 <fchmod@plt+0xde00>
test   %al,%al
je     804bed8 <fchmod@plt+0x1cd8>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
mov    %ebx,(%esp)
movl   $0x2,0x4(%esp)
call   804a090 <euidaccess@plt>
test   %eax,%eax
sete   %al
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x8067760,%eax
test   %eax,%eax
jne    804bf70 <fchmod@plt+0x1d70>
jmp    804bf92 <fchmod@plt+0x1d92>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806724c,%edi
xor    %ebp,%ebp
cmp    $0x0,%ecx
mov    %ebp,0x1c(%esp)
mov    %edx,%esi
mov    %edi,0x18(%esp)
mov    %ecx,%edi
ja     804bf37 <fchmod@plt+0x1d37>
cmp    0x18(%esp),%edx
jbe    804bf3f <fchmod@plt+0x1d3f>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x8067760,%eax
mov    %edi,%ebp
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   8052b10 <fchmod@plt+0x8910>
xor    %esi,%eax
or     %eax,%ebp
jne    804bf88 <fchmod@plt+0x1d88>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
sub    %esi,%edx
sbb    %edi,%ecx
mov    %ecx,%eax
or     %edx,%eax
jne    804bf18 <fchmod@plt+0x1d18>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x806724c,%eax
movl   $0x1,0x4(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   804a1e0 <calloc@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x8067760
jne    804bf70 <fchmod@plt+0x1d70>
movl   $0x8067360,0x8067760
08
movl   $0x400,0x806724c
00
jmp    804bf70 <fchmod@plt+0x1d70>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
movzbl 0x54(%esp),%eax
mov    0x64(%esp),%edi
mov    0x60(%esp),%esi
mov    %edx,0x24(%esp)
mov    %al,0x23(%esp)
mov    0x6c(%esp),%eax
movb   $0x0,(%eax)
mov    0x68(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
mov    %edi,%eax
or     %esi,%eax
je     804c0fc <fchmod@plt+0x1efc>
mov    0x50(%esp),%eax
xor    %edx,%edx
mov    %edi,%ebp
mov    %edx,0x14(%esp)
mov    %esi,%edi
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    0x14(%esp),%ebp
mov    %edi,%eax
jb     804c054 <fchmod@plt+0x1e54>
ja     804c050 <fchmod@plt+0x1e50>
cmp    0x10(%esp),%edi
jbe    804c054 <fchmod@plt+0x1e54>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049a00 <read@plt>
test   %eax,%eax
mov    %eax,%esi
js     804c110 <fchmod@plt+0x1f10>
je     804c0fc <fchmod@plt+0x1efc>
mov    %eax,%ebx
mov    %eax,%ecx
sar    $0x1f,%ebx
sub    %eax,%edi
mov    0x68(%esp),%eax
sbb    %ebx,%ebp
add    %esi,(%eax)
adc    %ebx,0x4(%eax)
cmpb   $0x0,0x23(%esp)
je     804c0ca <fchmod@plt+0x1eca>
mov    0x18(%esp),%eax
lea    (%eax,%esi,1),%edx
movb   $0x1,(%edx)
cmpl   $0x0,(%eax)
mov    %edx,0x28(%esp)
lea    0x4(%eax),%edx
jne    804c0b7 <fchmod@plt+0x1eb7>
mov    %edx,%eax
cmpl   $0x0,(%eax)
lea    0x4(%eax),%edx
je     804c0ad <fchmod@plt+0x1ead>
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
je     804c0b7 <fchmod@plt+0x1eb7>
cmp    0x28(%esp),%eax
ja     804c170 <fchmod@plt+0x1f70>
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8052b10 <fchmod@plt+0x8910>
cmp    %esi,%eax
jne    804c1a0 <fchmod@plt+0x1fa0>
xor    %eax,%eax
mov    0x6c(%esp),%ebx
mov    %al,(%ebx)
mov    %ebp,%eax
or     %edi,%eax
jne    804c040 <fchmod@plt+0x1e40>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     804c0f2 <fchmod@plt+0x1ef2>
mov    %eax,%ebx
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060baf,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x1,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <lseek64@plt>
test   %edx,%edx
js     804c1f2 <fchmod@plt+0x1ff2>
mov    $0x1,%eax
jmp    804c0ec <fchmod@plt+0x1eec>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bd0,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804c162 <fchmod@plt+0x1f62>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bc0,0x4(%esp)
mov    %eax,%esi
jmp    804c1be <fchmod@plt+0x1fbe>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
test   %eax,%eax
mov    %ecx,0x4(%esp)
js     804c238 <fchmod@plt+0x2038>
mov    %eax,(%esp)
call   804a200 <fchmod@plt>
add    $0x1c,%esp
ret
nop
mov    %edx,(%esp)
call   804a0f0 <chmod@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%ebx
cmpb   $0x0,0x21(%ebx)
jne    804c290 <fchmod@plt+0x2090>
test   %edx,%edx
movl   $0x804c380,0x24(%esp)
movl   $0x804bea0,0x28(%esp)
movl   $0x804be90,0x2c(%esp)
js     804c2bf <fchmod@plt+0x20bf>
cmpl   $0x0,0x40(%esp)
js     804c2bf <fchmod@plt+0x20bf>
lea    0x0(%esi),%esi
lea    0x24(%esp),%esi
jmp    804c2f6 <fchmod@plt+0x20f6>
xchg   %ax,%ax
cmpb   $0x0,0x26(%ebx)
jne    804c25f <fchmod@plt+0x205f>
movzbl 0x27(%ebx),%ebx
movl   $0x804c330,0x24(%esp)
movl   $0x804bea0,0x28(%esp)
movl   $0x804be90,0x2c(%esp)
xor    $0x1,%ebx
test   %edx,%edx
jns    804c2e8 <fchmod@plt+0x20e8>
xor    %edx,%edx
test   %bl,%bl
je     804c2c3 <fchmod@plt+0x20c3>
lea    0x24(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049f80 <attr_copy_file@plt>
test   %eax,%eax
sete   %al
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x40(%esp),%esi
test   %esi,%esi
js     804c2b9 <fchmod@plt+0x20b9>
xor    %esi,%esi
test   %bl,%bl
jne    804c288 <fchmod@plt+0x2088>
mov    %esi,0x14(%esp)
mov    0x40(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   8049f00 <attr_copy_fd@plt>
test   %eax,%eax
sete   %al
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x3d,%eax
jne    804c348 <fchmod@plt+0x2148>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5f,%eax
je     804c33f <fchmod@plt+0x213f>
lea    0x28(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
call   80578b0 <fchmod@plt+0xd6b0>
add    $0x1c,%esp
ret
jmp    804c380 <fchmod@plt+0x2180>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
call   8049ed0 <__errno_location@plt>
lea    0x28(%esp),%edx
mov    (%eax),%eax
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80578b0 <fchmod@plt+0xd6b0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    %edx,0x4(%esp)
movl   $0x1,(%esp)
call   8055d00 <fchmod@plt+0xbb00>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8055d00 <fchmod@plt+0xbb00>
mov    %edi,0xc(%esp)
movl   $0x8060be1,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049f40 <__printf_chk@plt>
test   %ebx,%ebx
je     804c436 <fchmod@plt+0x2236>
mov    %ebx,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bea,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    0x8067300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c453 <fchmod@plt+0x2253>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049ff0 <__overflow@plt>
jmp    804c44c <fchmod@plt+0x224c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movl   $0x0,0x10(%esp)
mov    0x40(%esp),%edi
mov    %edx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   80588c0 <fchmod@plt+0xe6c0>
test   %eax,%eax
setne  %al
je     804c5b8 <fchmod@plt+0x23b8>
mov    %ebp,%edx
test   %dl,%dl
je     804c5b0 <fchmod@plt+0x23b0>
call   8049ed0 <__errno_location@plt>
cmpl   $0x11,(%eax)
mov    %eax,%ebp
je     804c530 <fchmod@plt+0x2330>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   8055d00 <fchmod@plt+0xbb00>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060e5c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,(%esp)
call   8049b30 <unlink@plt>
test   %eax,%eax
jne    804c5c8 <fchmod@plt+0x23c8>
mov    %edi,%eax
test   %al,%al
je     804c580 <fchmod@plt+0x2380>
mov    %ebx,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c09,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   80588c0 <fchmod@plt+0xe6c0>
test   %eax,%eax
setne  %al
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    804c60d <fchmod@plt+0x240d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bf8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804c5bd <fchmod@plt+0x23bd>
call   8049ed0 <__errno_location@plt>
mov    %eax,%ebp
jmp    804c4c6 <fchmod@plt+0x22c6>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x0,(%esp)
call   8049e30 <setfscreatecon@plt>
test   %eax,%eax
je     804c66d <fchmod@plt+0x246d>
movl   $0x5,0x8(%esp)
movl   $0x8060e80,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x30,%esp
mov    (%edx),%edx
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    %ebx,%eax
call   804beb0 <fchmod@plt+0x1cb0>
test   %al,%al
je     804c708 <fchmod@plt+0x2508>
mov    %ebx,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
mov    0x806777c,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8060c15,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c785 <fchmod@plt+0x2585>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8052800 <fchmod@plt+0x8600>
mov    (%esi),%esi
mov    %ebx,(%esp)
movb   $0x0,0x2a(%esp)
call   8055d20 <fchmod@plt+0xbb20>
mov    0x806777c,%ebx
movl   $0x5,0x8(%esp)
and    $0xfff,%esi
movl   $0x8060eb4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
lea    0x21(%esp),%edx
mov    %edx,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    804c6f0 <fchmod@plt+0x24f0>
call   8049b10 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
movl   $0x8053bf0,0x10(%esp)
movl   $0x8053b50,0xc(%esp)
movl   $0x8053ae0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3d,(%esp)
call   8053320 <fchmod@plt+0x9120>
mov    0x30(%esp),%edx
mov    %eax,0x34(%edx)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
movl   $0x8053bf0,0x10(%esp)
movl   $0x8053b50,0xc(%esp)
movl   $0x8053b20,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3d,(%esp)
call   8053320 <fchmod@plt+0x9120>
mov    0x30(%esp),%edx
mov    %eax,0x38(%edx)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %edi
mov    $0x3c,%edx
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
test   $0x1,%bl
mov    %ebx,%edi
jne    804c868 <fchmod@plt+0x2668>
test   $0x2,%edi
jne    804c878 <fchmod@plt+0x2678>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     804c844 <fchmod@plt+0x2644>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804c84c <fchmod@plt+0x264c>
movb   $0x0,(%edi)
call   8049b20 <geteuid@plt>
test   %eax,%eax
sete   %al
mov    %al,0x1a(%ebx)
mov    %al,0x19(%ebx)
add    $0x4,%esp
pop    %ebx
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x1(%ebx),%edi
mov    $0x3b,%dl
test   $0x2,%edi
movb   $0x0,(%ebx)
je     804c82d <fchmod@plt+0x262d>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804c82d <fchmod@plt+0x262d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
sete   %dl
cmp    $0x1,%eax
sete   %al
or     %dl,%al
je     804c8b5 <fchmod@plt+0x26b5>
mov    0x10(%esp),%eax
movzbl 0x19(%eax),%eax
xor    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
cmpb   $0x0,0x44(%esp)
mov    0x1c(%ebx),%eax
mov    0x18(%ebx),%edx
mov    %eax,0x18(%esp)
jne    804c980 <fchmod@plt+0x2780>
cmpb   $0x0,0x1d(%esi)
je     804ca30 <fchmod@plt+0x2830>
mov    0x48(%esp),%eax
mov    0x10(%ebx),%ebx
mov    (%eax),%eax
and    %ebx,%eax
and    $0x1c0,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   80513b0 <fchmod@plt+0x71b0>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804c980 <fchmod@plt+0x2780>
call   8049ed0 <__errno_location@plt>
mov    %eax,%ebx
mov    (%eax),%eax
cmp    $0x16,%eax
je     804c92f <fchmod@plt+0x272f>
cmp    $0x1,%eax
jne    804c939 <fchmod@plt+0x2739>
cmpb   $0x0,0x1a(%esi)
je     804ca1b <fchmod@plt+0x281b>
mov    %edi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c28,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804ca1b <fchmod@plt+0x281b>
xchg   %ax,%ax
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
je     804ca58 <fchmod@plt+0x2858>
mov    %ebp,(%esp)
call   8049e00 <fchown@plt>
test   %eax,%eax
je     804ca64 <fchmod@plt+0x2864>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%edx
cmp    $0x16,%ebx
je     804cab0 <fchmod@plt+0x28b0>
cmp    $0x1,%ebx
je     804cab0 <fchmod@plt+0x28b0>
mov    %esi,(%esp)
call   804c890 <fchmod@plt+0x2690>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
jne    804ca69 <fchmod@plt+0x2869>
mov    %edi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805f7a4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
movzbl 0x22(%esi),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x18(%esi)
jne    804c8f0 <fchmod@plt+0x26f0>
cmpb   $0x0,0x29(%esi)
je     804c980 <fchmod@plt+0x2780>
mov    0x48(%esp),%eax
mov    0x10(%esi),%ebx
mov    (%eax),%eax
jmp    804c8f9 <fchmod@plt+0x26f9>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   804a000 <lchown@plt>
test   %eax,%eax
jne    804ca78 <fchmod@plt+0x2878>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     804ca8f <fchmod@plt+0x288f>
cmp    $0x1,%ebx
jne    804c9c0 <fchmod@plt+0x27c0>
mov    0x18(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804a000 <lchown@plt>
mov    %ebx,0x0(%ebp)
jmp    804c9c0 <fchmod@plt+0x27c0>
nop
mov    0x18(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
call   8049e00 <fchown@plt>
mov    0x1c(%esp),%edx
mov    %ebx,(%edx)
jmp    804c9c0 <fchmod@plt+0x27c0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8067248,%eax
cmp    $0xffffffff,%eax
je     804caf0 <fchmod@plt+0x28f0>
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x0,(%esp)
call   804a120 <umask@plt>
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,0x8067248
call   804a120 <umask@plt>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x26c,%esp
mov    0x14(%ebp),%ebx
mov    %eax,-0x1dc(%ebp)
mov    0x8(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,-0x204(%ebp)
mov    0xc(%ebp),%eax
mov    %eax,-0x208(%ebp)
mov    0x10(%ebp),%eax
mov    %eax,-0x200(%ebp)
mov    0x18(%ebp),%eax
mov    %eax,-0x1ec(%ebp)
mov    0x1c(%ebp),%eax
mov    %eax,-0x1fc(%ebp)
mov    0x20(%ebp),%eax
mov    %eax,-0x1e8(%ebp)
mov    0x24(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmpb   $0x0,0x18(%ebx)
je     804cb9a <fchmod@plt+0x299a>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804cb9a <fchmod@plt+0x299a>
movb   $0x0,(%eax)
mov    -0x1e8(%ebp),%eax
cmpl   $0x2,0x4(%ebx)
movb   $0x0,(%eax)
lea    -0x1a0(%ebp),%eax
mov    %eax,-0x1f4(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
je     804d1e8 <fchmod@plt+0x2fe8>
call   804a110 <__xstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    804d1fa <fchmod@plt+0x2ffa>
mov    -0x190(%ebp),%eax
mov    %eax,-0x20c(%ebp)
and    $0xf000,%eax
cmp    $0x4000,%eax
mov    %eax,-0x1e4(%ebp)
je     804d268 <fchmod@plt+0x3068>
cmpb   $0x0,-0x1ec(%ebp)
je     804cc34 <fchmod@plt+0x2a34>
mov    (%ebx),%eax
test   %eax,%eax
je     804d7e0 <fchmod@plt+0x35e0>
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   8052730 <fchmod@plt+0x8530>
mov    %esi,%eax
test   %al,%al
jne    804cc99 <fchmod@plt+0x2a99>
cmpl   $0x8000,-0x1e4(%ebp)
00
je     804d3a8 <fchmod@plt+0x31a8>
cmpb   $0x0,0x14(%ebx)
jne    804d388 <fchmod@plt+0x3188>
lea    -0x140(%ebp),%eax
mov    %eax,-0x1f8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
setne  %al
xor    %edx,%edx
test   %al,%al
je     804d608 <fchmod@plt+0x3408>
call   8049ed0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
jne    804d410 <fchmod@plt+0x3210>
movb   $0x1,-0x210(%ebp)
xor    %edi,%edi
movb   $0x0,-0x218(%ebp)
movl   $0x0,-0x1f8(%ebp)
00
cmpb   $0x0,-0x1ec(%ebp)
je     804cdb8 <fchmod@plt+0x2bb8>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     804cdb8 <fchmod@plt+0x2bb8>
movzbl 0x18(%ebx),%edx
test   %dl,%dl
jne    804cdb8 <fchmod@plt+0x2bb8>
mov    (%ebx),%eax
test   %eax,%eax
jne    804cdb8 <fchmod@plt+0x2bb8>
cmpb   $0x0,-0x218(%ebp)
lea    -0x140(%ebp),%ecx
je     804da0b <fchmod@plt+0x380b>
mov    0x10(%ecx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804cdb8 <fchmod@plt+0x2bb8>
mov    -0x1e0(%ebp),%eax
mov    %ecx,0x8(%esp)
mov    %edx,-0x218(%ebp)
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   80527b0 <fchmod@plt+0x85b0>
mov    -0x218(%ebp),%edx
test   %al,%al
je     804cdb8 <fchmod@plt+0x2bb8>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %edx,-0x1e4(%ebp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8061050,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e4(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2c(%ebx)
je     804cde8 <fchmod@plt+0x2be8>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804cde8 <fchmod@plt+0x2be8>
mov    %edi,%eax
xor    %ecx,%ecx
mov    -0x1e0(%ebp),%edx
test   %al,%al
mov    -0x1dc(%ebp),%eax
cmovne -0x1f8(%ebp),%ecx
call   804c3b0 <fchmod@plt+0x21b0>
movzbl 0x18(%ebx),%eax
test   %al,%al
jne    804d1a8 <fchmod@plt+0x2fa8>
cmpb   $0x0,0x20(%ebx)
je     804ce30 <fchmod@plt+0x2c30>
cmpb   $0x0,0x17(%ebx)
jne    804ce30 <fchmod@plt+0x2c30>
cmpl   $0x1,-0x18c(%ebp)
ja     804d460 <fchmod@plt+0x3260>
cmpb   $0x0,-0x1ec(%ebp)
mov    0x4(%ebx),%edx
je     804ce22 <fchmod@plt+0x2c22>
cmp    $0x3,%edx
je     804d460 <fchmod@plt+0x3260>
cmp    $0x4,%edx
je     804d460 <fchmod@plt+0x3260>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
cmpb   $0x0,0x28(%ebx)
jne    804d290 <fchmod@plt+0x3090>
test   %al,%al
jne    804d588 <fchmod@plt+0x3388>
mov    -0x20c(%ebp),%eax
and    $0xfff,%eax
cmpb   $0x0,0x29(%ebx)
mov    %eax,-0x1f0(%ebp)
je     804ce6e <fchmod@plt+0x2c6e>
mov    0x10(%ebx),%eax
mov    %eax,-0x1f0(%ebp)
andl   $0xfff,-0x1f0(%ebp)
00
cmpb   $0x0,0x1c(%ebx)
je     804d860 <fchmod@plt+0x3660>
mov    -0x1f0(%ebp),%eax
and    $0x3f,%eax
mov    %eax,-0x21c(%ebp)
cmpb   $0x0,0x23(%ebx)
je     804ced2 <fchmod@plt+0x2cd2>
cmpb   $0x0,0x21(%ebx)
jne    804de60 <fchmod@plt+0x3c60>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8058860 <fchmod@plt+0xe660>
test   %eax,%eax
js     804e665 <fchmod@plt+0x4465>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e30 <setfscreatecon@plt>
test   %eax,%eax
js     804deb5 <fchmod@plt+0x3cb5>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a060 <freecon@plt>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804df28 <fchmod@plt+0x3d28>
cmpb   $0x0,0x2a(%ebx)
je     804dc60 <fchmod@plt+0x3a60>
mov    -0x1dc(%ebp),%eax
cmpb   $0x2f,(%eax)
je     804cf3e <fchmod@plt+0x2d3e>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80524e0 <fchmod@plt+0x82e0>
cmpb   $0x2e,(%eax)
mov    %eax,%edi
je     804e352 <fchmod@plt+0x4152>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
movl   $0x8060cd7,0x4(%esp)
movl   $0x3,(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     804ed4c <fchmod@plt+0x4b4c>
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   804a010 <symlink@plt>
test   %eax,%eax
jne    804e5db <fchmod@plt+0x43db>
mov    $0x1,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
cmpb   $0x0,-0x1ec(%ebp)
je     804cfbe <fchmod@plt+0x2dbe>
mov    0x34(%ebx),%edx
test   %edx,%edx
je     804cfbe <fchmod@plt+0x2dbe>
mov    -0x1e0(%ebp),%eax
lea    -0x7c(%ebp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,-0x1ec(%ebp)
mov    %eax,0x4(%esp)
mov    %edx,-0x1e8(%ebp)
call   804a150 <__lxstat64@plt>
mov    -0x1e8(%ebp),%edx
mov    -0x1ec(%ebp),%ecx
test   %eax,%eax
je     804eb38 <fchmod@plt+0x4938>
cmpb   $0x0,0x17(%ebx)
je     804cfd6 <fchmod@plt+0x2dd6>
cmpl   $0x4000,-0x1e4(%ebp)
00
mov    %esi,%edx
jne    804d249 <fchmod@plt+0x3049>
test   %cl,%cl
mov    %esi,%edx
jne    804d249 <fchmod@plt+0x3049>
cmpb   $0x0,0x1e(%ebx)
je     804d044 <fchmod@plt+0x2e44>
mov    -0x160(%ebp),%eax
mov    %eax,-0x7c(%ebp)
mov    -0x15c(%ebp),%eax
mov    %eax,-0x78(%ebp)
mov    -0x158(%ebp),%eax
mov    %eax,-0x74(%ebp)
mov    -0x154(%ebp),%eax
mov    %eax,-0x70(%ebp)
mov    %edi,%eax
test   %al,%al
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
je     804e8c8 <fchmod@plt+0x46c8>
call   80575c0 <fchmod@plt+0xd3c0>
xor    %edx,%edx
test   %eax,%eax
je     804d03a <fchmod@plt+0x2e3a>
call   8049ed0 <__errno_location@plt>
cmpl   $0x26,(%eax)
setne  %dl
mov    %edx,%eax
test   %al,%al
jne    804ec00 <fchmod@plt+0x4a00>
mov    %edi,%eax
mov    %esi,%edx
test   %al,%al
jne    804d249 <fchmod@plt+0x3049>
cmpb   $0x0,0x1c(%ebx)
je     804d0c2 <fchmod@plt+0x2ec2>
cmpb   $0x0,-0x210(%ebp)
jne    804d071 <fchmod@plt+0x2e71>
mov    -0x128(%ebp),%eax
cmp    %eax,-0x188(%ebp)
je     804f13b <fchmod@plt+0x4f3b>
lea    -0x130(%ebp),%eax
mov    -0x1e0(%ebp),%edx
mov    $0xffffffff,%ecx
mov    %eax,0x8(%esp)
movzbl -0x210(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804c8c0 <fchmod@plt+0x26c0>
xor    %edx,%edx
cmp    $0xffffffff,%eax
je     804d249 <fchmod@plt+0x3049>
mov    -0x20c(%ebp),%edi
mov    %edi,%edx
and    $0xf1,%dh
test   %eax,%eax
cmovne %edi,%edx
mov    %edx,-0x20c(%ebp)
cmpb   $0x0,0x25(%ebx)
jne    804ed12 <fchmod@plt+0x4b12>
cmpb   $0x0,0x1d(%ebx)
jne    804e87b <fchmod@plt+0x467b>
cmpb   $0x0,0x18(%ebx)
jne    804e87b <fchmod@plt+0x467b>
cmpb   $0x0,0x29(%ebx)
jne    804f298 <fchmod@plt+0x5098>
movzbl 0x1f(%ebx),%edx
test   %dl,%dl
jne    804f87c <fchmod@plt+0x567c>
mov    -0x21c(%ebp),%eax
test   %eax,%eax
jne    804fa02 <fchmod@plt+0x5802>
cmpb   $0x0,-0x218(%ebp)
mov    %esi,%edx
je     804d249 <fchmod@plt+0x3049>
mov    -0x21c(%ebp),%eax
or     -0x254(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a0f0 <chmod@plt>
mov    %esi,%edx
test   %eax,%eax
je     804d249 <fchmod@plt+0x3049>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x1dc(%ebp)
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d7a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1dc(%ebp),%edx
cmpb   $0x0,0x22(%ebx)
je     804d249 <fchmod@plt+0x3049>
xchg   %ax,%ax
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
nop
cmpl   $0x1,-0x18c(%ebp)
jne    804cdf4 <fchmod@plt+0x2bf4>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050dd0 <fchmod@plt+0x6bd0>
mov    %eax,%esi
jmp    804d498 <fchmod@plt+0x3298>
call   804a150 <__lxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
je     804cbe0 <fchmod@plt+0x29e0>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c44,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
mov    %edx,%eax
jne    804f21f <fchmod@plt+0x501f>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x28(%ebx),%edx
test   %dl,%dl
je     804d888 <fchmod@plt+0x3688>
cmpb   $0x0,-0x1ec(%ebp)
jne    804cc15 <fchmod@plt+0x2a15>
mov    %esi,%eax
test   %al,%al
jne    804cc99 <fchmod@plt+0x2a99>
jmp    804cc4a <fchmod@plt+0x2a4a>
cmpl   $0x4000,-0x1e4(%ebp)
00
jne    804ce3c <fchmod@plt+0x2c3c>
cmpb   $0x0,-0x1ec(%ebp)
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
jne    804d8f8 <fchmod@plt+0x36f8>
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050dd0 <fchmod@plt+0x6bd0>
mov    %eax,%esi
test   %esi,%esi
je     804d8e8 <fchmod@plt+0x36e8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1dc(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8055da0 <fchmod@plt+0xbba0>
test   %al,%al
jne    804da50 <fchmod@plt+0x3850>
cmpl   $0x4,0x4(%ebx)
je     804d8e8 <fchmod@plt+0x36e8>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x80610b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804cc54 <fchmod@plt+0x2a54>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804cc54 <fchmod@plt+0x2a54>
cmpb   $0x0,0x18(%ebx)
jne    804cc54 <fchmod@plt+0x2a54>
cmpb   $0x0,0x2a(%ebx)
jne    804cc54 <fchmod@plt+0x2a54>
cmpb   $0x0,0x17(%ebx)
jne    804cc54 <fchmod@plt+0x2a54>
mov    (%ebx),%eax
test   %eax,%eax
jne    804cc54 <fchmod@plt+0x2a54>
cmpb   $0x0,0x15(%ebx)
jne    804cc54 <fchmod@plt+0x2a54>
lea    -0x140(%ebp),%eax
mov    %eax,-0x1f8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
mov    $0x1,%edx
test   %eax,%eax
setne  %al
jmp    804cc81 <fchmod@plt+0x2a81>
nop
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c44,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c20>
mov    %eax,%esi
test   %esi,%esi
je     804d8e8 <fchmod@plt+0x36e8>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804d2e8 <fchmod@plt+0x30e8>
movzbl 0x2c(%ebx),%eax
mov    $0x1,%ecx
mov    -0x1e0(%ebp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   804c470 <fchmod@plt+0x2270>
test   %al,%al
jne    804d5f8 <fchmod@plt+0x33f8>
cmpb   $0x0,0x23(%ebx)
jne    804d7d0 <fchmod@plt+0x35d0>
test   %esi,%esi
lea    0x0(%esi),%esi
je     804e000 <fchmod@plt+0x3e00>
mov    -0x1f8(%ebp),%eax
test   %eax,%eax
je     804d1a0 <fchmod@plt+0x2fa0>
mov    -0x1e0(%ebp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   8049d70 <rename@plt>
test   %eax,%eax
jne    804d838 <fchmod@plt+0x3638>
cmpb   $0x0,0x2c(%ebx)
je     804d1a0 <fchmod@plt+0x2fa0>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1f8(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060e29,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <rename@plt>
test   %eax,%eax
jne    804e031 <fchmod@plt+0x3e31>
cmpb   $0x0,0x2c(%ebx)
je     804d5be <fchmod@plt+0x33be>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804ebb5 <fchmod@plt+0x49b5>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804d5cb <fchmod@plt+0x33cb>
movb   $0x1,(%eax)
cmpb   $0x0,-0x1ec(%ebp)
je     804d5f8 <fchmod@plt+0x33f8>
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052730 <fchmod@plt+0x8530>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi),%esi
xor    $0x1,%edx
mov    %edx,%eax
mov    -0x144(%ebp),%edx
and    $0x1,%eax
mov    %al,-0x218(%ebp)
mov    -0x148(%ebp),%eax
xor    -0xe4(%ebp),%edx
xor    -0xe8(%ebp),%eax
or     %eax,%edx
je     804dad8 <fchmod@plt+0x38d8>
cmpl   $0x2,0x4(%ebx)
je     804ddd8 <fchmod@plt+0x3bd8>
xor    %edi,%edi
xor    %esi,%esi
cmpl   $0x4000,-0x1e4(%ebp)
00
je     8050581 <fchmod@plt+0x6381>
cmpb   $0x0,0x2b(%ebx)
jne    804d930 <fchmod@plt+0x3730>
cmpb   $0x0,0x18(%ebx)
jne    805058b <fchmod@plt+0x638b>
mov    0x8(%ebx),%eax
cmp    $0x2,%eax
je     804d5f8 <fchmod@plt+0x33f8>
cmp    $0x3,%eax
je     804eb90 <fchmod@plt+0x4990>
mov    %esi,%eax
test   %al,%al
jne    804d5f8 <fchmod@plt+0x33f8>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804d6da <fchmod@plt+0x34da>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804e755 <fchmod@plt+0x4555>
cmpb   $0x0,-0x1ec(%ebp)
je     804d6da <fchmod@plt+0x34da>
cmpl   $0x3,(%ebx)
je     804d6da <fchmod@plt+0x34da>
mov    -0x1f8(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   80527b0 <fchmod@plt+0x85b0>
test   %al,%al
jne    804f0c7 <fchmod@plt+0x4ec7>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804d6fc <fchmod@plt+0x34fc>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e8d7 <fchmod@plt+0x46d7>
movzbl 0x18(%ebx),%edx
mov    (%ebx),%esi
test   %dl,%dl
jne    804e43e <fchmod@plt+0x423e>
test   %esi,%esi
jne    804e477 <fchmod@plt+0x4277>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e384 <fchmod@plt+0x4184>
test   %dl,%dl
jne    804e384 <fchmod@plt+0x4184>
cmpb   $0x0,0x15(%ebx)
jne    804d74d <fchmod@plt+0x354d>
cmpb   $0x0,0x20(%ebx)
je     804e368 <fchmod@plt+0x4168>
cmpl   $0x1,-0x12c(%ebp)
jbe    804e368 <fchmod@plt+0x4168>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x1f8(%ebp)
mov    %eax,(%esp)
call   8049b30 <unlink@plt>
test   %eax,%eax
je     804ec72 <fchmod@plt+0x4a72>
call   8049ed0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
je     804ec72 <fchmod@plt+0x4a72>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bf8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1f8(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi),%esi
call   804c620 <fchmod@plt+0x2420>
jmp    804d4db <fchmod@plt+0x32db>
lea    0x0(%esi),%esi
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   80527b0 <fchmod@plt+0x85b0>
test   %al,%al
mov    %eax,%edx
je     804cc15 <fchmod@plt+0x2a15>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060eec,0x4(%esp)
mov    %eax,%ebx
jmp    804d8ae <fchmod@plt+0x36ae>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060e15,0x4(%esp)
mov    %eax,%esi
jmp    804d21a <fchmod@plt+0x301a>
lea    0x0(%esi),%esi
mov    -0x1e4(%ebp),%edi
xor    %ecx,%ecx
mov    -0x1f0(%ebp),%eax
and    $0x12,%eax
cmp    $0x4000,%edi
cmovne %ecx,%eax
mov    %eax,-0x21c(%ebp)
jmp    804ce87 <fchmod@plt+0x2c87>
lea    0x0(%esi),%esi
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c53,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e0(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x18(%ebx),%eax
jmp    804ce3c <fchmod@plt+0x2c3c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c20>
mov    %eax,%esi
jmp    804d2db <fchmod@plt+0x30db>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,0x1e(%ebx)
je     804d960 <fchmod@plt+0x3760>
cmpb   $0x0,0x18(%ebx)
mov    $0x1,%al
je     804d960 <fchmod@plt+0x3760>
mov    -0x140(%ebp),%edx
mov    -0x13c(%ebp),%eax
xor    -0x19c(%ebp),%eax
xor    -0x1a0(%ebp),%edx
or     %eax,%edx
setne  %al
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1f8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80567d0 <fchmod@plt+0xc5d0>
test   %eax,%eax
js     804d65e <fchmod@plt+0x345e>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804d99b <fchmod@plt+0x379b>
movb   $0x1,(%eax)
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c20>
test   %eax,%eax
mov    %eax,%esi
je     804d5f8 <fchmod@plt+0x33f8>
movzbl 0x2c(%ebx),%eax
mov    $0x1,%ecx
mov    -0x1e0(%ebp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   804c470 <fchmod@plt+0x2270>
test   %al,%al
jne    804d5f8 <fchmod@plt+0x33f8>
movl   $0x0,-0x1f8(%ebp)
00
jmp    804d4d1 <fchmod@plt+0x32d1>
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %edx,-0x218(%ebp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
mov    -0x218(%ebp),%edx
test   %eax,%eax
jne    804cdb8 <fchmod@plt+0x2bb8>
mov    -0x230(%ebp),%ecx
jmp    804ccf4 <fchmod@plt+0x2af4>
lea    0x0(%esi),%esi
mov    0x8067764,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
mov    0x8067768,%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8061084,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e8(%ebp),%eax
movb   $0x1,(%eax)
jmp    804d4d1 <fchmod@plt+0x32d1>
lea    0x0(%esi),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
xor    -0x13c(%ebp),%edx
xor    -0x140(%ebp),%eax
or     %eax,%edx
jne    804d636 <fchmod@plt+0x3436>
cmpb   $0x0,0x17(%ebx)
jne    804e346 <fchmod@plt+0x4146>
cmpl   $0x2,0x4(%ebx)
je     80503fe <fchmod@plt+0x61fe>
lea    -0xe0(%ebp),%eax
mov    %eax,-0x220(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    804d640 <fchmod@plt+0x3440>
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    804d640 <fchmod@plt+0x3440>
mov    -0x24(%ebp),%eax
xor    %ecx,%ecx
mov    -0x20(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
je     804edfb <fchmod@plt+0x4bfb>
mov    -0x6c(%ebp),%eax
mov    -0x220(%ebp),%edx
mov    -0x230(%ebp),%esi
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804edd6 <fchmod@plt+0x4bd6>
mov    (%ebx),%eax
test   %eax,%eax
je     804e1d8 <fchmod@plt+0x3fd8>
test   %cl,%cl
jne    804eb62 <fchmod@plt+0x4962>
cmpb   $0x0,0x18(%ebx)
jne    804d640 <fchmod@plt+0x3440>
cmpl   $0x2,0x4(%ebx)
je     804d640 <fchmod@plt+0x3440>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804d640 <fchmod@plt+0x3440>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804d640 <fchmod@plt+0x3440>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060c69,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
nop
cmpb   $0x0,0x17(%ebx)
jne    804e407 <fchmod@plt+0x4207>
cmpl   $0x8000,-0x1e4(%ebp)
00
je     804dc90 <fchmod@plt+0x3a90>
cmpb   $0x0,0x14(%ebx)
je     804e39c <fchmod@plt+0x419c>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804ef38 <fchmod@plt+0x4d38>
mov    -0x190(%ebp),%eax
mov    $0x0,%edx
cmpl   $0x2,0x4(%ebx)
mov    %eax,-0x208(%ebp)
movzbl 0x21(%ebx),%eax
mov    %al,-0x200(%ebp)
mov    $0x20000,%eax
cmovne %edx,%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80526f0 <fchmod@plt+0x84f0>
test   %eax,%eax
mov    %eax,-0x1e8(%ebp)
js     804edad <fchmod@plt+0x4bad>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e8(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
jne    804ec94 <fchmod@plt+0x4a94>
mov    -0x148(%ebp),%eax
mov    -0x144(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
jne    804dd3b <fchmod@plt+0x3b3b>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
xor    -0xdc(%ebp),%edx
xor    -0xe0(%ebp),%eax
or     %eax,%edx
je     804f2c4 <fchmod@plt+0x50c4>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x80611d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
xor    %edi,%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   804a160 <close@plt>
test   %eax,%eax
js     804f05d <fchmod@plt+0x4e5d>
mov    -0x200(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %edi,%eax
test   %al,%al
je     804d4d1 <fchmod@plt+0x32d1>
xor    %edi,%edi
mov    $0x1,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
jmp    804cf71 <fchmod@plt+0x2d71>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
mov    -0x190(%ebp),%eax
mov    -0x1f8(%ebp),%edx
mov    -0x1f4(%ebp),%esi
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39a0>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39a0>
mov    -0x1e0(%ebp),%eax
mov    %ecx,-0x210(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055da0 <fchmod@plt+0xbba0>
test   %al,%al
jne    804eb7a <fchmod@plt+0x497a>
cmpl   $0x0,(%ebx)
mov    -0x210(%ebp),%ecx
jne    804d640 <fchmod@plt+0x3440>
test   %cl,%cl
je     804eb7a <fchmod@plt+0x497a>
mov    $0x1,%edi
mov    $0x1,%esi
jmp    804d644 <fchmod@plt+0x3444>
xchg   %ax,%ax
cmpb   $0x0,0x24(%ebx)
jne    804ce97 <fchmod@plt+0x2c97>
cmpb   $0x0,0x27(%ebx)
jne    80507e1 <fchmod@plt+0x65e1>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8058860 <fchmod@plt+0xe660>
test   %eax,%eax
js     804e567 <fchmod@plt+0x4367>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e30 <setfscreatecon@plt>
test   %eax,%eax
jns    804cec7 <fchmod@plt+0x2cc7>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x3d,%eax
je     804df09 <fchmod@plt+0x3d09>
cmp    $0x5f,%eax
je     804df09 <fchmod@plt+0x3d09>
call   8049ed0 <__errno_location@plt>
mov    %eax,%edi
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8061150,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
call   8049af0 <dcgettext@plt>
mov    -0x218(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804cec7 <fchmod@plt+0x2cc7>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a060 <freecon@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    0x0(%esi),%esi
mov    -0x200(%ebp),%eax
test   %eax,%eax
je     804f10c <fchmod@plt+0x4f0c>
mov    -0x148(%ebp),%edi
mov    -0x1a0(%ebp),%edx
mov    -0x19c(%ebp),%ecx
mov    %esi,-0x228(%ebp)
mov    %edi,-0x230(%ebp)
mov    -0x144(%ebp),%edi
mov    %ebx,-0x220(%ebp)
mov    -0x230(%ebp),%esi
mov    %edx,%ebx
mov    %edx,-0x234(%ebp)
mov    %ecx,-0x218(%ebp)
jmp    804df82 <fchmod@plt+0x3d82>
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
je     804e0e9 <fchmod@plt+0x3ee9>
mov    0x8(%eax),%ecx
mov    0x4(%eax),%edx
xor    %edi,%ecx
xor    %esi,%edx
or     %edx,%ecx
jne    804df78 <fchmod@plt+0x3d78>
mov    0xc(%eax),%edx
mov    -0x218(%ebp),%ecx
xor    0x10(%eax),%ecx
xor    %ebx,%edx
or     %edx,%ecx
jne    804df78 <fchmod@plt+0x3d78>
mov    -0x1dc(%ebp),%eax
mov    -0x228(%ebp),%esi
mov    -0x220(%ebp),%ebx
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x80612d0,0x4(%esp)
mov    %eax,%edi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050d70 <fchmod@plt+0x6b70>
jmp    804d4e6 <fchmod@plt+0x32e6>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x16,%edx
je     804ee23 <fchmod@plt+0x4c23>
cmp    $0x12,%edx
mov    -0x1e0(%ebp),%eax
je     804e675 <fchmod@plt+0x4475>
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060c96,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050d70 <fchmod@plt+0x6b70>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
mov    -0x228(%ebp),%esi
mov    -0x220(%ebp),%ebx
sub    $0x30,%esp
mov    -0x200(%ebp),%ecx
lea    0x2f(%esp),%eax
mov    %eax,-0x228(%ebp)
andl   $0xfffffff0,-0x228(%ebp)
mov    -0x228(%ebp),%eax
cmpb   $0x0,-0x210(%ebp)
mov    %edi,0x8(%eax)
mov    -0x234(%ebp),%edi
mov    %ecx,(%eax)
mov    -0x230(%ebp),%ecx
mov    %edi,0xc(%eax)
mov    -0x218(%ebp),%edi
mov    %ecx,0x4(%eax)
mov    %edi,0x10(%eax)
jne    804e154 <fchmod@plt+0x3f54>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ecfc <fchmod@plt+0x4afc>
mov    -0x21c(%ebp),%eax
not    %eax
and    -0x1f0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8049ea0 <mkdir@plt>
test   %eax,%eax
je     804e7aa <fchmod@plt+0x45aa>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060cab,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1dc(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
cmpb   $0x0,0x18(%ebx)
jne    804e1e4 <fchmod@plt+0x3fe4>
cmpb   $0x0,0x15(%ebx)
je     804e238 <fchmod@plt+0x4038>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804d640 <fchmod@plt+0x3440>
test   %cl,%cl
je     804e238 <fchmod@plt+0x4038>
cmpl   $0x1,0x14(%edx)
jbe    804e238 <fchmod@plt+0x4038>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x210(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055da0 <fchmod@plt+0xbba0>
mov    -0x210(%ebp),%edx
test   %al,%al
jne    804e238 <fchmod@plt+0x4038>
cmpb   $0x0,0x18(%ebx)
jne    804de4f <fchmod@plt+0x3c4f>
jmp    804d640 <fchmod@plt+0x3440>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804e286 <fchmod@plt+0x4086>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804e286 <fchmod@plt+0x4086>
mov    0x58(%esi),%eax
mov    0x5c(%esi),%ecx
xor    0x5c(%edx),%ecx
xor    0x58(%edx),%eax
or     %eax,%ecx
jne    804d640 <fchmod@plt+0x3440>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
xor    0x4(%edx),%ecx
xor    (%edx),%eax
or     %eax,%ecx
jne    804d640 <fchmod@plt+0x3440>
cmpb   $0x0,0x17(%ebx)
jne    804e346 <fchmod@plt+0x4146>
cmpb   $0x0,0x18(%ebx)
je     804e2a2 <fchmod@plt+0x40a2>
mov    -0x190(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804f224 <fchmod@plt+0x5024>
cmpb   $0x0,0x15(%ebx)
je     804e2bb <fchmod@plt+0x40bb>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804f8c7 <fchmod@plt+0x56c7>
cmpl   $0x2,0x4(%ebx)
jne    804dbec <fchmod@plt+0x39ec>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804fc0c <fchmod@plt+0x5a0c>
lea    -0x7c(%ebp),%edi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804feae <fchmod@plt+0x5cae>
lea    -0xe0(%ebp),%edi
mov    $0x18,%ecx
mov    %edx,%esi
rep movsl %ds:(%esi),%es:(%edi)
mov    -0x24(%ebp),%eax
mov    -0x20(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
jne    804d640 <fchmod@plt+0x3440>
mov    -0xdc(%ebp),%edi
cmp    %edi,-0x78(%ebp)
mov    -0x7c(%ebp),%eax
jne    804d640 <fchmod@plt+0x3440>
cmp    -0xe0(%ebp),%eax
jne    804d640 <fchmod@plt+0x3440>
cmpb   $0x0,0x17(%ebx)
je     804dbec <fchmod@plt+0x39ec>
xor    %edi,%edi
mov    $0x1,%esi
jmp    804d644 <fchmod@plt+0x3444>
cmpb   $0x0,0x1(%eax)
je     804cf36 <fchmod@plt+0x2d36>
jmp    804cf10 <fchmod@plt+0x2d10>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x4(%ebx)
jne    804e384 <fchmod@plt+0x4184>
mov    -0x190(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804d74d <fchmod@plt+0x354d>
movb   $0x0,-0x210(%ebp)
xor    %edi,%edi
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2ab3>
cmpl   $0x1000,-0x1e4(%ebp)
00
je     804eea0 <fchmod@plt+0x4ca0>
mov    -0x20c(%ebp),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
je     804e6da <fchmod@plt+0x44da>
cmpl   $0xc000,-0x1e4(%ebp)
00
je     804e6da <fchmod@plt+0x44da>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804ef38 <fchmod@plt+0x4d38>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060dfc,0x4(%esp)
mov    %eax,%edi
jmp    804dfce <fchmod@plt+0x3dce>
mov    -0x1e0(%ebp),%edx
xor    %ecx,%ecx
mov    -0x1dc(%ebp),%eax
movl   $0x0,(%esp)
call   804c470 <fchmod@plt+0x2270>
test   %al,%al
je     804d4d1 <fchmod@plt+0x32d1>
xor    %edi,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
jmp    804cf71 <fchmod@plt+0x2d71>
mov    -0x190(%ebp),%eax
mov    $0x1,%edx
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804d70a <fchmod@plt+0x350a>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804d70a <fchmod@plt+0x350a>
test   %esi,%esi
je     804f837 <fchmod@plt+0x5637>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1f8(%ebp)
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    -0x1f8(%ebp),%edx
cmpb   $0x2e,(%eax)
je     804ebd8 <fchmod@plt+0x49d8>
test   %dl,%dl
jne    804e4b4 <fchmod@plt+0x42b4>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e384 <fchmod@plt+0x4184>
mov    -0x1e0(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8051dd0 <fchmod@plt+0x7bd0>
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
jne    804f152 <fchmod@plt+0x4f52>
cmpb   $0x0,0x18(%ebx)
movl   $0x5,0x8(%esp)
je     804f036 <fchmod@plt+0x4e36>
movl   $0x8060fe8,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
mov    %edi,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
mov    %esi,(%esp)
call   8049a60 <free@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
call   8049ed0 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
cmp    $0x3d,%eax
je     804e5ca <fchmod@plt+0x43ca>
cmp    $0x5f,%eax
je     804e5ca <fchmod@plt+0x43ca>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8061184,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
call   8049af0 <dcgettext@plt>
mov    -0x218(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804ced2 <fchmod@plt+0x2cd2>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x80611ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1e4(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,-0x1dc(%ebp)
call   8049ed0 <__errno_location@plt>
mov    -0x1e4(%ebp),%ecx
mov    -0x1dc(%ebp),%edx
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
call   8049ed0 <__errno_location@plt>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
jmp    804e57a <fchmod@plt+0x437a>
mov    %eax,(%esp)
call   8049b30 <unlink@plt>
movb   $0x1,-0x210(%ebp)
test   %eax,%eax
je     804ce44 <fchmod@plt+0x2c44>
cmpl   $0x2,(%edi)
je     804ce44 <fchmod@plt+0x2c44>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8061114,0x4(%esp)
mov    %eax,%esi
jmp    804e08c <fchmod@plt+0x3e8c>
mov    -0x180(%ebp),%eax
mov    -0x17c(%ebp),%edx
movl   $0x1,(%esp)
mov    %eax,-0xe0(%ebp)
lea    -0xe0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x21c(%ebp),%eax
mov    %edx,-0xdc(%ebp)
not    %eax
and    -0x20c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   804a140 <__xmknod@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4229>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060dc1,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
cmpb   $0x0,0x18(%ebx)
je     804e765 <fchmod@plt+0x4565>
mov    (%ebx),%eax
test   %eax,%eax
jne    804d6a5 <fchmod@plt+0x34a5>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060f20,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a2c>
lea    -0x140(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    804f00d <fchmod@plt+0x4e0d>
mov    -0x130(%ebp),%edi
mov    %edi,%eax
and    $0x1c0,%eax
cmp    $0x1c0,%eax
je     804ee17 <fchmod@plt+0x4c17>
mov    %edi,%eax
or     $0x1c0,%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a0f0 <chmod@plt>
mov    %edi,-0x254(%ebp)
movb   $0x1,-0x218(%ebp)
test   %eax,%eax
jne    804f88d <fchmod@plt+0x568d>
mov    -0x1fc(%ebp),%eax
cmpb   $0x0,(%eax)
je     804f1db <fchmod@plt+0x4fdb>
cmpb   $0x0,0x2c(%ebx)
jne    804f280 <fchmod@plt+0x5080>
cmpb   $0x0,0x1b(%ebx)
je     804e936 <fchmod@plt+0x4736>
mov    -0x208(%ebp),%eax
or     -0x204(%ebp),%eax
je     804e936 <fchmod@plt+0x4736>
mov    -0x208(%ebp),%edx
mov    -0x204(%ebp),%eax
xor    -0x19c(%ebp),%edx
xor    -0x1a0(%ebp),%eax
or     %eax,%edx
je     804e936 <fchmod@plt+0x4736>
xor    %edi,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
jmp    804cf71 <fchmod@plt+0x2d71>
mov    -0x20c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051750 <fchmod@plt+0x7550>
mov    %esi,%edx
test   %eax,%eax
je     804d249 <fchmod@plt+0x3049>
cmpb   $0x0,0x22(%ebx)
je     804d249 <fchmod@plt+0x3049>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
call   8057590 <fchmod@plt+0xd390>
test   %eax,%eax
setne  %al
jmp    804d03c <fchmod@plt+0x2e3c>
cmpb   $0x0,0x18(%ebx)
je     804e8e7 <fchmod@plt+0x46e7>
mov    (%ebx),%esi
test   %esi,%esi
jne    804e43e <fchmod@plt+0x423e>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060f80,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
mov    (%ebx),%eax
mov    %eax,-0x7c(%ebp)
mov    0x4(%ebx),%eax
mov    %eax,-0x78(%ebp)
mov    0x8(%ebx),%eax
mov    %eax,-0x74(%ebp)
mov    0xc(%ebx),%eax
mov    %eax,-0x70(%ebp)
mov    0x10(%ebx),%eax
mov    %eax,-0x6c(%ebp)
mov    0x14(%ebx),%eax
mov    %eax,-0x68(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x64(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x60(%ebp)
mov    0x20(%ebx),%eax
mov    %eax,-0x5c(%ebp)
mov    0x24(%ebx),%eax
mov    %eax,-0x58(%ebp)
mov    0x28(%ebx),%eax
mov    %eax,-0x54(%ebp)
mov    0x2c(%ebx),%eax
mov    %eax,-0x50(%ebp)
mov    0x30(%ebx),%eax
mov    %eax,-0x4c(%ebp)
mov    0x34(%ebx),%eax
mov    %eax,-0x48(%ebp)
mov    0x38(%ebx),%eax
mov    %eax,-0x44(%ebp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80560b0 <fchmod@plt+0xbeb0>
test   %eax,%eax
mov    %eax,-0x208(%ebp)
je     804fc6e <fchmod@plt+0x5a6e>
cmpl   $0x3,0x4(%ebx)
je     804f051 <fchmod@plt+0x4e51>
mov    -0x208(%ebp),%eax
cmpb   $0x0,(%eax)
je     804fcc2 <fchmod@plt+0x5ac2>
movzbl -0x210(%ebp),%edi
mov    $0x1,%esi
movb   $0x0,-0x1f8(%ebp)
mov    %ebx,-0x234(%ebp)
mov    %edi,-0x204(%ebp)
mov    %eax,%edi
lea    -0xe0(%ebp),%eax
mov    %eax,-0x220(%ebp)
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %esi,%eax
mov    %al,-0x200(%ebp)
jmp    804ea32 <fchmod@plt+0x4832>
movzbl -0xe0(%ebp),%eax
mov    %edi,(%esp)
or     %al,-0x1f8(%ebp)
call   8049dc0 <strlen@plt>
lea    0x1(%edi,%eax,1),%edi
cmpb   $0x0,(%edi)
je     804eb05 <fchmod@plt+0x4905>
mov    -0x1dc(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80529f0 <fchmod@plt+0x87f0>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%ebx
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80529f0 <fchmod@plt+0x87f0>
mov    -0x19c(%ebp),%edx
mov    -0x204(%ebp),%ecx
mov    %eax,%esi
mov    -0x1fc(%ebp),%eax
movzbl (%eax),%eax
mov    %edx,0x4(%esp)
mov    %esi,%edx
movl   $0x0,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %al,-0xe0(%ebp)
mov    -0x1f0(%ebp),%eax
mov    %eax,0x18(%esp)
mov    -0x220(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x230(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x228(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1a0(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804cb20 <fchmod@plt+0x2920>
mov    -0x1e8(%ebp),%ecx
and    %al,-0x200(%ebp)
movzbl -0x1c0(%ebp),%eax
or     %al,(%ecx)
mov    %esi,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,-0x1c0(%ebp)
je     804ea10 <fchmod@plt+0x4810>
movzbl -0x200(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x208(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1fc(%ebp),%edi
movzbl -0x1f8(%ebp),%eax
mov    %al,(%edi)
xor    %edi,%edi
xor    %ecx,%ecx
jmp    804cf71 <fchmod@plt+0x2d71>
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %ecx,-0x1e8(%ebp)
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052730 <fchmod@plt+0x8530>
mov    -0x1e8(%ebp),%ecx
jmp    804cfbe <fchmod@plt+0x2dbe>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055da0 <fchmod@plt+0xbba0>
xor    $0x1,%eax
test   %al,%al
je     804dbec <fchmod@plt+0x39ec>
xor    %esi,%esi
xor    %edi,%edi
jmp    804d644 <fchmod@plt+0x3444>
xchg   %ax,%ax
mov    -0x1e0(%ebp),%eax
lea    -0x130(%ebp),%edx
call   804c680 <fchmod@plt+0x2480>
call   8058530 <fchmod@plt+0xe330>
test   %al,%al
jne    804d679 <fchmod@plt+0x3479>
xchg   %ax,%ax
jmp    804d5f8 <fchmod@plt+0x33f8>
mov    %edi,%ecx
mov    -0x1e0(%ebp),%edx
test   %cl,%cl
mov    -0x1f8(%ebp),%ecx
cmove  %eax,%ecx
mov    -0x1dc(%ebp),%eax
call   804c3b0 <fchmod@plt+0x21b0>
jmp    804d5be <fchmod@plt+0x33be>
xor    %ecx,%ecx
cmpb   $0x2e,0x1(%eax)
sete   %cl
movzbl 0x1(%eax,%ecx,1),%eax
cmp    $0x2f,%al
je     804d712 <fchmod@plt+0x3512>
test   %al,%al
je     804d712 <fchmod@plt+0x3512>
jmp    804e49a <fchmod@plt+0x429a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d62,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1e8(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,-0x1e4(%ebp)
call   8049ed0 <__errno_location@plt>
mov    -0x1e8(%ebp),%ecx
mov    -0x1e4(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x22(%ebx)
je     804d044 <fchmod@plt+0x2e44>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
cmpb   $0x0,0x2c(%ebx)
jne    804f7df <fchmod@plt+0x55df>
movb   $0x1,-0x210(%ebp)
xor    %edi,%edi
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2ab3>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060cf4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
xor    %edi,%edi
movl   $0x0,(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
jmp    804dd8f <fchmod@plt+0x3b8f>
movb   $0x0,-0x218(%ebp)
movl   $0x0,-0x21c(%ebp)
00
jmp    804e831 <fchmod@plt+0x4631>
mov    -0x1e0(%ebp),%ecx
mov    $0xffffffff,%edx
mov    -0x1dc(%ebp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
call   804c250 <fchmod@plt+0x2050>
test   %al,%al
jne    804d0cc <fchmod@plt+0x2ecc>
cmpb   $0x0,0x26(%ebx)
je     804d0cc <fchmod@plt+0x2ecc>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3049>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
jne    804cf36 <fchmod@plt+0x2d36>
mov    -0x20(%ebp),%ecx
cmp    %ecx,-0x84(%ebp)
mov    -0x88(%ebp),%eax
je     804fc42 <fchmod@plt+0x5a42>
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x80612f4,0x4(%esp)
mov    %eax,%edi
jmp    804dfce <fchmod@plt+0x3dce>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060cd9,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
mov    -0xd0(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39a0>
cmpb   $0x0,0x15(%ebx)
je     804dba0 <fchmod@plt+0x39a0>
jmp    804d640 <fchmod@plt+0x3440>
mov    -0x7c(%ebp),%edx
mov    -0x78(%ebp),%eax
xor    -0xe0(%ebp),%edx
xor    -0xdc(%ebp),%eax
or     %eax,%edx
sete   %cl
jmp    804db81 <fchmod@plt+0x3981>
movb   $0x0,-0x218(%ebp)
jmp    804e818 <fchmod@plt+0x4618>
mov    0x8067764,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x8067768,%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x80610e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e8(%ebp),%eax
mov    $0x1,%edx
movb   $0x1,(%eax)
jmp    804d249 <fchmod@plt+0x3049>
mov    -0x21c(%ebp),%edi
lea    -0x1c0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
movl   $0x0,-0x1c0(%ebp)
00
not    %edi
and    -0x20c(%ebp),%edi
mov    %eax,0x4(%esp)
movl   $0x0,-0x1bc(%ebp)
00
mov    %edi,0x8(%esp)
call   804a140 <__xmknod@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4229>
mov    %edi,%eax
and    $0xef,%ah
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a180 <mkfifo@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4229>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060dab,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
xchg   %ax,%ax
mov    -0x174(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051910 <fchmod@plt+0x7710>
test   %eax,%eax
mov    %eax,-0x1e8(%ebp)
je     804fe85 <fchmod@plt+0x5c85>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   804a010 <symlink@plt>
test   %eax,%eax
je     804fb7d <fchmod@plt+0x597d>
call   8049ed0 <__errno_location@plt>
cmpb   $0x0,0x2b(%ebx)
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
je     804efb0 <fchmod@plt+0x4db0>
cmpb   $0x0,-0x210(%ebp)
jne    804efb0 <fchmod@plt+0x4db0>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     805027c <fchmod@plt+0x607c>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x80612b0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    -0x1f0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c44,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
movl   $0x806101c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
jmp    804e50a <fchmod@plt+0x430a>
movl   $0x2,-0x78(%ebp)
jmp    804e9b5 <fchmod@plt+0x47b5>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d98,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x200(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    804d4d1 <fchmod@plt+0x32d1>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060f54,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a2c>
mov    -0x148(%ebp),%eax
mov    -0x144(%ebp),%edi
mov    %eax,-0x230(%ebp)
mov    -0x1a0(%ebp),%eax
mov    %eax,-0x234(%ebp)
mov    -0x19c(%ebp),%eax
mov    %eax,-0x218(%ebp)
jmp    804e0f5 <fchmod@plt+0x3ef5>
mov    -0x124(%ebp),%eax
cmp    %eax,-0x184(%ebp)
jne    804d071 <fchmod@plt+0x2e71>
jmp    804d0c2 <fchmod@plt+0x2ec2>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    0x1e(%ecx),%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x2f(%esp),%eax
and    $0xfffffff0,%eax
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,(%esp)
mov    %eax,%edi
mov    %eax,-0x1f8(%ebp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049d70 <rename@plt>
test   %eax,%eax
je     804f8b6 <fchmod@plt+0x56b6>
call   8049ed0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
je     804ec7c <fchmod@plt+0x4a7c>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c85,0x4(%esp)
mov    %eax,%ebx
jmp    804d430 <fchmod@plt+0x3230>
mov    -0x140(%ebp),%eax
mov    -0x13c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0xe8(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0xe4(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c20>
mov    -0x1fc(%ebp),%eax
movb   $0x1,(%eax)
jmp    804e827 <fchmod@plt+0x4627>
call   8049b10 <__stack_chk_fail@plt>
cmpl   $0x1,0x14(%edx)
jbe    804e2a2 <fchmod@plt+0x40a2>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x210(%ebp)
mov    %eax,(%esp)
call   804a050 <canonicalize_file_name@plt>
mov    -0x210(%ebp),%edx
test   %eax,%eax
mov    %eax,%edi
je     804e2a2 <fchmod@plt+0x40a2>
mov    -0x1e0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8055da0 <fchmod@plt+0xbba0>
mov    %edi,(%esp)
xor    $0x1,%eax
mov    %eax,-0x210(%ebp)
call   8049a60 <free@plt>
mov    -0x210(%ebp),%eax
jmp    804eb7d <fchmod@plt+0x497d>
mov    -0x1e0(%ebp),%edx
xor    %ecx,%ecx
mov    -0x1dc(%ebp),%eax
call   804c3b0 <fchmod@plt+0x21b0>
jmp    804e831 <fchmod@plt+0x4631>
mov    0x10(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   80514a0 <fchmod@plt+0x72a0>
test   %eax,%eax
jne    804d1a0 <fchmod@plt+0x2fa0>
mov    %esi,%edx
jmp    804d249 <fchmod@plt+0x3049>
mov    -0x1f0(%ebp),%eax
and    $0x1ff,%eax
cmpb   $0x0,-0x210(%ebp)
mov    %eax,-0x248(%ebp)
jne    804f941 <fchmod@plt+0x5741>
cmpb   $0x1,0x21(%ebx)
sbb    %eax,%eax
and    $0xfffffe00,%eax
add    $0x201,%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80526f0 <fchmod@plt+0x84f0>
mov    %eax,-0x1fc(%ebp)
call   8049ed0 <__errno_location@plt>
cmpb   $0x0,0x23(%ebx)
mov    %eax,-0x204(%ebp)
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
jne    804fe0c <fchmod@plt+0x5c0c>
cmpl   $0x0,-0x1fc(%ebp)
js     804f8db <fchmod@plt+0x56db>
movl   $0x0,-0x238(%ebp)
00
cmpl   $0x0,-0x1fc(%ebp)
js     804fa56 <fchmod@plt+0x5856>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
jne    804fedb <fchmod@plt+0x5cdb>
cmpb   $0x0,-0x200(%ebp)
je     804fcd3 <fchmod@plt+0x5ad3>
cmpl   $0x0,0x30(%ebx)
jne    80504b9 <fchmod@plt+0x62b9>
call   8049e40 <getpagesize@plt>
mov    $0x4,%ecx
mov    %eax,%edi
jmp    804f39c <fchmod@plt+0x519c>
lea    0x0(%esi),%esi
mov    %ecx,%eax
mov    %edx,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    804f398 <fchmod@plt+0x5198>
xor    %edx,%edx
mov    $0x4,%eax
div    %ecx
movl   $0x2,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
imul   %eax,%edi
lea    0x3(%edi),%eax
mov    %eax,-0x228(%ebp)
mov    -0x48(%ebp),%eax
mov    %edi,-0x218(%ebp)
mov    %eax,%edi
sub    $0x10000,%eax
cmp    $0x1fff0001,%eax
mov    $0x10000,%eax
cmovb  %edi,%eax
mov    %eax,-0x204(%ebp)
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8052690 <fchmod@plt+0x8490>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050886 <fchmod@plt+0x6686>
mov    -0xd0(%ebp),%eax
movb   $0x0,-0x1f0(%ebp)
mov    %eax,-0x230(%ebp)
mov    -0xac(%ebp),%ecx
mov    $0x7ffffffc,%edi
mov    $0x10000,%eax
sub    -0x218(%ebp),%edi
lea    -0x10000(%ecx),%edx
cmp    $0x1fff0000,%edx
cmovbe %ecx,%eax
mov    -0x204(%ebp),%ecx
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80521a0 <fchmod@plt+0x7fa0>
mov    %eax,-0x200(%ebp)
mov    -0x230(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050855 <fchmod@plt+0x6655>
mov    -0x204(%ebp),%ecx
xor    %edx,%edx
mov    -0x200(%ebp),%eax
lea    -0x1(%ecx,%eax,1),%ecx
mov    %ecx,%eax
divl   -0x200(%ebp)
sub    %edx,%ecx
cmp    %ecx,%edi
mov    %ecx,-0x204(%ebp)
jb     804f4b9 <fchmod@plt+0x52b9>
test   %ecx,%ecx
jne    804f4c5 <fchmod@plt+0x52c5>
mov    -0x200(%ebp),%eax
mov    %eax,-0x204(%ebp)
movb   $0x0,-0x23d(%ebp)
mov    -0x228(%ebp),%eax
add    -0x204(%ebp),%eax
mov    %eax,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    -0x218(%ebp),%edi
xor    %edx,%edx
lea    -0x1(%eax,%edi,1),%ecx
mov    %eax,-0x200(%ebp)
mov    %ecx,%eax
div    %edi
sub    %edx,%ecx
cmpb   $0x0,-0x1f0(%ebp)
mov    %ecx,-0x244(%ebp)
je     80508c1 <fchmod@plt+0x66c1>
mov    -0x6c(%ebp),%eax
movl   $0x1,-0x23c(%ebp)
00
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050af4 <fchmod@plt+0x68f4>
mov    -0xb4(%ebp),%eax
mov    -0xb0(%ebp),%edx
mov    %eax,-0x228(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %edx,-0x224(%ebp)
mov    %eax,(%esp)
call   8050f30 <fchmod@plt+0x6d30>
xor    %eax,%eax
xor    %edx,%edx
mov    %esi,-0x220(%ebp)
mov    %edx,%edi
mov    %eax,%esi
movb   $0x1,-0x1c9(%ebp)
movl   $0x0,-0x230(%ebp)
00
movl   $0x0,-0x22c(%ebp)
00
movl   $0x0,-0x218(%ebp)
00
movl   $0x0,-0x214(%ebp)
00
mov    %ebx,-0x234(%ebp)
mov    -0x1f0(%ebp),%eax
mov    %eax,(%esp)
call   8050f70 <fchmod@plt+0x6d70>
test   %al,%al
je     8050a16 <fchmod@plt+0x6816>
mov    -0x1b0(%ebp),%ecx
test   %ecx,%ecx
je     804ffca <fchmod@plt+0x5dca>
mov    -0x230(%ebp),%eax
xor    %ebx,%ebx
mov    -0x22c(%ebp),%edx
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    %eax,-0x250(%ebp)
mov    %edx,-0x24c(%ebp)
jmp    804f79d <fchmod@plt+0x559d>
mov    -0x1a8(%ebp),%eax
lea    (%ebx,%ebx,4),%ecx
lea    (%eax,%ecx,4),%ecx
mov    (%ecx),%eax
mov    0x4(%ecx),%edx
mov    %eax,-0x218(%ebp)
mov    0x8(%ecx),%eax
mov    %edx,-0x214(%ebp)
mov    0xc(%ecx),%edx
mov    %eax,-0x230(%ebp)
mov    %edx,-0x22c(%ebp)
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movb   $0x0,-0x1c9(%ebp)
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,%esi
mov    %edx,%edi
sub    -0x250(%ebp),%esi
sbb    -0x24c(%ebp),%edi
mov    %edi,%eax
or     %esi,%eax
je     804f6c4 <fchmod@plt+0x54c4>
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <lseek64@plt>
test   %edx,%edx
js     80509a9 <fchmod@plt+0x67a9>
cmpl   $0x1,-0x23c(%ebp)
je     804fa7f <fchmod@plt+0x587f>
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <lseek64@plt>
test   %edx,%edx
js     8050974 <fchmod@plt+0x6774>
movb   $0x1,-0x1c9(%ebp)
lea    -0x1c9(%ebp),%eax
mov    -0x22c(%ebp),%edx
mov    %eax,0x1c(%esp)
lea    -0x1c8(%ebp),%eax
mov    -0x244(%ebp),%ecx
mov    %eax,0x18(%esp)
mov    -0x230(%ebp),%eax
mov    %edx,0x14(%esp)
mov    -0x1fc(%ebp),%edx
mov    %eax,0x10(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x8(%esp)
xor    %eax,%eax
cmpl   $0x3,-0x23c(%ebp)
sete   %al
mov    %eax,0x4(%esp)
mov    -0x204(%ebp),%eax
mov    %eax,(%esp)
mov    -0x1e8(%ebp),%eax
call   804bfe0 <fchmod@plt+0x1de0>
test   %al,%al
je     8050ae3 <fchmod@plt+0x68e3>
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    -0x224(%ebp),%edx
mov    -0x228(%ebp),%eax
add    -0x1c8(%ebp),%esi
adc    -0x1c4(%ebp),%edi
xor    %esi,%eax
xor    %edi,%edx
or     %eax,%edx
je     804ffc3 <fchmod@plt+0x5dc3>
mov    -0x1b0(%ebp),%ecx
add    $0x1,%ebx
cmp    %ebx,%ecx
jbe    804ffca <fchmod@plt+0x5dca>
mov    -0x230(%ebp),%eax
mov    -0x22c(%ebp),%edx
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    %eax,-0x250(%ebp)
mov    %edx,-0x24c(%ebp)
cmp    %ebx,%ecx
ja     804f5f0 <fchmod@plt+0x53f0>
mov    -0x1a8(%ebp),%eax
sub    $0x1,%ebx
lea    (%ebx,%ebx,4),%ecx
movl   $0x0,-0x230(%ebp)
00
movl   $0x0,-0x22c(%ebp)
00
lea    (%eax,%ecx,4),%ecx
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%edx
add    %eax,-0x218(%ebp)
adc    %edx,-0x214(%ebp)
jmp    804f61f <fchmod@plt+0x541f>
mov    -0x1e0(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c09,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
movb   $0x1,-0x210(%ebp)
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2ab3>
mov    -0x1e0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060fb4,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a2c>
call   804cae0 <fchmod@plt+0x28e0>
not    %eax
and    $0x1ff,%eax
jmp    804f29b <fchmod@plt+0x509b>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ede0,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
movb   $0x1,-0x210(%ebp)
mov    $0x1,%edi
jmp    804ccb3 <fchmod@plt+0x2ab3>
mov    (%edx),%ecx
mov    0x4(%edx),%eax
xor    0x4(%esi),%eax
xor    (%esi),%ecx
or     %eax,%ecx
sete   %al
jmp    804eb7d <fchmod@plt+0x497d>
cmpb   $0x0,0x16(%ebx)
je     804f334 <fchmod@plt+0x5134>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8049b30 <unlink@plt>
test   %eax,%eax
jne    8050816 <fchmod@plt+0x6616>
cmpb   $0x0,0x2c(%ebx)
je     804f941 <fchmod@plt+0x5741>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c09,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    -0x21c(%ebp),%eax
mov    %eax,-0x238(%ebp)
mov    -0x238(%ebp),%edi
mov    -0x1e0(%ebp),%eax
movl   $0xc1,0x4(%esp)
not    %edi
and    -0x248(%ebp),%edi
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
call   80526f0 <fchmod@plt+0x84f0>
mov    %eax,-0x1fc(%ebp)
call   8049ed0 <__errno_location@plt>
mov    %eax,-0x204(%ebp)
mov    (%eax),%eax
cmp    $0x11,%eax
mov    %eax,-0x1f0(%ebp)
jne    805020a <fchmod@plt+0x600a>
mov    -0x1fc(%ebp),%eax
shr    $0x1f,%eax
test   %al,%al
je     805020a <fchmod@plt+0x600a>
cmpb   $0x0,0x18(%ebx)
je     8050194 <fchmod@plt+0x5f94>
movb   $0x1,-0x210(%ebp)
movl   $0x11,-0x1f0(%ebp)
00
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d04,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    -0x1f0(%ebp),%eax
jmp    804ecdb <fchmod@plt+0x4adb>
mov    %edx,-0x1dc(%ebp)
call   804cae0 <fchmod@plt+0x28e0>
not    %eax
and    %eax,-0x21c(%ebp)
je     804d104 <fchmod@plt+0x2f04>
cmpb   $0x0,-0x218(%ebp)
jne    804d104 <fchmod@plt+0x2f04>
cmpb   $0x0,-0x210(%ebp)
jne    804ff43 <fchmod@plt+0x5d43>
mov    -0x130(%ebp),%eax
mov    %eax,-0x254(%ebp)
not    %eax
test   %eax,-0x21c(%ebp)
jne    804d113 <fchmod@plt+0x2f13>
mov    %esi,%edx
jmp    804d249 <fchmod@plt+0x3049>
cmpl   $0x2,-0x1f0(%ebp)
jne    804f9c3 <fchmod@plt+0x57c3>
cmpb   $0x0,-0x210(%ebp)
jne    804f9c3 <fchmod@plt+0x57c3>
cmpb   $0x0,0x18(%ebx)
je     804f94d <fchmod@plt+0x574d>
jmp    804f9c3 <fchmod@plt+0x57c3>
mov    -0x1fc(%ebp),%eax
mov    %esi,%edx
mov    %edi,%ecx
call   804bf00 <fchmod@plt+0x1d00>
test   %al,%al
jne    804f6c4 <fchmod@plt+0x54c4>
mov    -0x1e0(%ebp),%eax
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d3d,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1a8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
xor    %edi,%edi
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   804a160 <close@plt>
test   %eax,%eax
jns    804dd8f <fchmod@plt+0x3b8f>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d98,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804dd8f <fchmod@plt+0x3b8f>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,0x23(%ebx)
je     804fb96 <fchmod@plt+0x5996>
call   804c620 <fchmod@plt+0x2420>
cmpb   $0x0,0x1c(%ebx)
je     804cf5e <fchmod@plt+0x2d5e>
mov    -0x184(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x188(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a000 <lchown@plt>
test   %eax,%eax
je     804cf5e <fchmod@plt+0x2d5e>
mov    %ebx,(%esp)
call   804c890 <fchmod@plt+0x2690>
test   %al,%al
jne    804cf5e <fchmod@plt+0x2d5e>
movl   $0x5,0x8(%esp)
movl   $0x805f7a4,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1e0(%ebp),%ecx
mov    %ecx,0xc(%esp)
jmp    804e1bd <fchmod@plt+0x3fbd>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %edx,-0x210(%ebp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
mov    -0x210(%ebp),%edx
test   %eax,%eax
je     804e2e2 <fchmod@plt+0x40e2>
jmp    804d640 <fchmod@plt+0x3440>
cmp    -0x24(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4b80>
mov    -0x78(%ebp),%ecx
cmp    %ecx,-0xdc(%ebp)
mov    -0xe0(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4b80>
cmp    -0x7c(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4b80>
jmp    804cf36 <fchmod@plt+0x2d36>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060cc6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
xor    %esi,%esi
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804eb2f <fchmod@plt+0x492f>
movb   $0x0,-0x1f8(%ebp)
mov    $0x1,%esi
jmp    804eb12 <fchmod@plt+0x4912>
movl   $0x0,-0x200(%ebp)
00
cmpb   $0x0,0x1e(%ebx)
jne    80500d4 <fchmod@plt+0x5ed4>
cmpb   $0x0,0x1c(%ebx)
je     804fd50 <fchmod@plt+0x5b50>
mov    -0x64(%ebp),%eax
cmp    %eax,-0x188(%ebp)
jne    804fd03 <fchmod@plt+0x5b03>
mov    -0x60(%ebp),%eax
cmp    %eax,-0x184(%ebp)
je     804fd50 <fchmod@plt+0x5b50>
lea    -0x6c(%ebp),%eax
mov    -0x1fc(%ebp),%ecx
mov    %eax,0x8(%esp)
movzbl -0x210(%ebp),%eax
mov    -0x1e0(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804c8c0 <fchmod@plt+0x26c0>
cmp    $0xffffffff,%eax
je     804fb07 <fchmod@plt+0x5907>
mov    -0x208(%ebp),%edi
mov    %edi,%edx
and    $0xf1,%dh
test   %eax,%eax
cmovne %edi,%edx
mov    %edx,-0x208(%ebp)
cmpb   $0x0,0x25(%ebx)
mov    $0x1,%edi
je     804fdad <fchmod@plt+0x5bad>
testb  $0x80,-0x6c(%ebp)
je     805068b <fchmod@plt+0x648b>
movb   $0x0,-0x1f0(%ebp)
mov    -0x1fc(%ebp),%eax
mov    $0x1,%edi
mov    -0x1e0(%ebp),%ecx
mov    -0x1e8(%ebp),%edx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    -0x1dc(%ebp),%eax
call   804c250 <fchmod@plt+0x2050>
test   %al,%al
jne    804fda0 <fchmod@plt+0x5ba0>
movzbl 0x26(%ebx),%edi
xor    $0x1,%edi
cmpb   $0x0,-0x1f0(%ebp)
jne    8050a71 <fchmod@plt+0x6871>
cmpb   $0x0,0x1d(%ebx)
jne    804fdbd <fchmod@plt+0x5bbd>
cmpb   $0x0,0x18(%ebx)
je     8050345 <fchmod@plt+0x6145>
mov    -0x208(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051750 <fchmod@plt+0x7550>
test   %eax,%eax
je     804fb09 <fchmod@plt+0x5909>
cmpb   $0x0,0x22(%ebx)
mov    $0x0,%eax
cmovne %eax,%edi
jmp    804fb09 <fchmod@plt+0x5909>
cmpl   $0x0,-0x1fc(%ebp)
js     804f8db <fchmod@plt+0x56db>
cmpb   $0x0,0x21(%ebx)
jne    805030b <fchmod@plt+0x610b>
lea    -0x7c(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a0e0 <getfscreatecon@plt>
mov    $0x1,%ecx
test   %eax,%eax
js     8050744 <fchmod@plt+0x6544>
mov    -0x7c(%ebp),%eax
mov    %ecx,-0x218(%ebp)
test   %eax,%eax
je     804f334 <fchmod@plt+0x5134>
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8049fb0 <fsetfilecon@plt>
mov    -0x218(%ebp),%ecx
test   %eax,%eax
js     8050408 <fchmod@plt+0x6208>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a060 <freecon@plt>
jmp    804f334 <fchmod@plt+0x5134>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060ddf,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3fa0>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     804e304 <fchmod@plt+0x4104>
jmp    804d640 <fchmod@plt+0x3440>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060cf4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edi,%edi
movl   $0x0,-0x200(%ebp)
00
jmp    804fb09 <fchmod@plt+0x5909>
lea    -0x140(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
je     804fa35 <fchmod@plt+0x5835>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c44,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1dc(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3049>
movb   $0x1,-0x1ab(%ebp)
mov    -0x1a8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,-0x1ab(%ebp)
movl   $0x0,-0x1a8(%ebp)
00
movl   $0x0,-0x1b0(%ebp)
00
je     804f5a1 <fchmod@plt+0x53a1>
mov    %esi,-0x218(%ebp)
mov    -0x234(%ebp),%ebx
mov    -0x220(%ebp),%esi
mov    %edi,-0x214(%ebp)
mov    -0x214(%ebp),%eax
cmp    %eax,-0x224(%ebp)
jg     805003c <fchmod@plt+0x5e3c>
jl     805002f <fchmod@plt+0x5e2f>
mov    -0x218(%ebp),%eax
cmp    %eax,-0x228(%ebp)
ja     805003c <fchmod@plt+0x5e3c>
cmpb   $0x0,-0x1c9(%ebp)
je     804fcdd <fchmod@plt+0x5add>
cmpl   $0x1,-0x23c(%ebp)
je     8050a95 <fchmod@plt+0x6895>
mov    -0x228(%ebp),%eax
mov    -0x224(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049f60 <ftruncate64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
je     804fcdd <fchmod@plt+0x5add>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d4e,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804fb07 <fchmod@plt+0x5907>
mov    -0x160(%ebp),%eax
mov    %eax,-0x1c0(%ebp)
mov    -0x15c(%ebp),%eax
mov    %eax,-0x1bc(%ebp)
mov    -0x158(%ebp),%eax
mov    %eax,-0x1b8(%ebp)
mov    -0x154(%ebp),%eax
mov    %eax,-0x1b4(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8057100 <fchmod@plt+0xcf00>
test   %eax,%eax
je     804fce7 <fchmod@plt+0x5ae7>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d62,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x22(%ebx)
je     804fce7 <fchmod@plt+0x5ae7>
jmp    804fb07 <fchmod@plt+0x5907>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    805071c <fchmod@plt+0x651c>
mov    -0x6c(%ebp),%eax
movl   $0x11,-0x1f0(%ebp)
00
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    805020a <fchmod@plt+0x600a>
cmpb   $0x0,0x2e(%ebx)
je     80506bc <fchmod@plt+0x64bc>
mov    -0x1e0(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %eax,(%esp)
call   80526f0 <fchmod@plt+0x84f0>
mov    %eax,-0x1fc(%ebp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
cmpl   $0x15,-0x1f0(%ebp)
movb   $0x1,-0x210(%ebp)
jne    804f33e <fchmod@plt+0x513e>
mov    -0x1fc(%ebp),%eax
shr    $0x1f,%eax
test   %al,%al
je     804f33e <fchmod@plt+0x513e>
mov    -0x1e0(%ebp),%eax
movl   $0x15,-0x1f0(%ebp)
00
cmpb   $0x0,(%eax)
je     8050270 <fchmod@plt+0x6070>
mov    -0x1e0(%ebp),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    -0x1e0(%ebp),%edi
xor    %eax,%eax
not    %ecx
cmpb   $0x2f,-0x2(%edi,%ecx,1)
setne  %al
mov    %eax,-0x1f0(%ebp)
addl   $0x14,-0x1f0(%ebp)
movb   $0x1,-0x210(%ebp)
jmp    804f9c3 <fchmod@plt+0x57c3>
mov    -0x1e8(%ebp),%edi
or     $0xffffffff,%ecx
movzbl -0x210(%ebp),%eax
mov    -0x114(%ebp),%edx
repnz scas %es:(%edi),%al
not    %ecx
sub    $0x1,%ecx
cmpl   $0x0,-0x110(%ebp)
jne    804efb0 <fchmod@plt+0x4db0>
cmp    %ecx,%edx
jne    804efb0 <fchmod@plt+0x4db0>
mov    -0x1e0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8051910 <fchmod@plt+0x7710>
mov    %eax,%edi
mov    -0x1e8(%ebp),%eax
test   %edi,%edi
je     8050797 <fchmod@plt+0x6597>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80499e0 <strcmp@plt>
mov    %edi,(%esp)
mov    %eax,-0x1fc(%ebp)
call   8049a60 <free@plt>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1fc(%ebp),%eax
test   %eax,%eax
je     804fb8b <fchmod@plt+0x598b>
jmp    804efbe <fchmod@plt+0x4dbe>
cmpb   $0x0,0x24(%ebx)
jne    804fe23 <fchmod@plt+0x5c23>
cmpb   $0x0,0x27(%ebx)
jne    8050ac0 <fchmod@plt+0x68c0>
lea    -0x7c(%ebp),%eax
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a0e0 <getfscreatecon@plt>
test   %eax,%eax
js     805072b <fchmod@plt+0x652b>
xor    %ecx,%ecx
mov    $0x1,%edi
jmp    804fe44 <fchmod@plt+0x5c44>
cmpb   $0x0,0x29(%ebx)
jne    80507dc <fchmod@plt+0x65dc>
cmpb   $0x0,0x1f(%ebx)
jne    80507a5 <fchmod@plt+0x65a5>
cmpl   $0x0,-0x238(%ebp)
je     804fb09 <fchmod@plt+0x5909>
call   804cae0 <fchmod@plt+0x28e0>
not    %eax
test   %eax,-0x238(%ebp)
je     804fb09 <fchmod@plt+0x5909>
mov    -0x248(%ebp),%ecx
mov    -0x1e0(%ebp),%edx
mov    -0x1fc(%ebp),%eax
call   804c220 <fchmod@plt+0x2020>
test   %eax,%eax
je     804fb09 <fchmod@plt+0x5909>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d7a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x204(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,-0x1f0(%ebp)
call   8049ed0 <__errno_location@plt>
mov    -0x204(%ebp),%ecx
mov    -0x1f0(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804fdfb <fchmod@plt+0x5bfb>
mov    $0x1,%ecx
jmp    804ddda <fchmod@plt+0x3bda>
test   %cl,%cl
jne    8050428 <fchmod@plt+0x6228>
mov    %edi,%eax
test   %al,%al
je     805049f <fchmod@plt+0x629f>
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
cmp    $0x3d,%eax
je     805049f <fchmod@plt+0x629f>
cmp    $0x5f,%eax
je     805049f <fchmod@plt+0x629f>
mov    -0x7c(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8061238,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    -0x218(%ebp),%ecx
mov    %edi,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804fe75 <fchmod@plt+0x5c75>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a060 <freecon@plt>
jmp    804ff32 <fchmod@plt+0x5d32>
mov    -0x1e8(%ebp),%eax
movl   $0x40049409,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8049bb0 <ioctl@plt>
test   %eax,%eax
je     804fcd3 <fchmod@plt+0x5ad3>
cmpl   $0x2,0x30(%ebx)
jne    804f387 <fchmod@plt+0x5187>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x0,(%esp)
mov    %eax,-0x200(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
movl   $0x5,0x8(%esp)
movl   $0x8060d22,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    -0x200(%ebp),%ecx
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
jmp    804fb09 <fchmod@plt+0x5909>
cmpb   $0x0,0x18(%ebx)
je     804d679 <fchmod@plt+0x3479>
mov    0x8(%ebx),%eax
cmp    $0x2,%eax
je     8050617 <fchmod@plt+0x6417>
cmp    $0x3,%eax
je     80505fd <fchmod@plt+0x63fd>
cmp    $0x4,%eax
je     80505e2 <fchmod@plt+0x63e2>
mov    %edi,%eax
test   %al,%al
je     804d679 <fchmod@plt+0x3479>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8049b30 <unlink@plt>
test   %eax,%eax
je     8050617 <fchmod@plt+0x6417>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bf8,0x4(%esp)
mov    %eax,%esi
jmp    804d21a <fchmod@plt+0x301a>
cmpb   $0x0,0x2d(%ebx)
je     80505a1 <fchmod@plt+0x63a1>
mov    -0x130(%ebp),%edx
mov    -0x1e0(%ebp),%eax
call   804beb0 <fchmod@plt+0x1cb0>
test   %al,%al
jne    80505a1 <fchmod@plt+0x63a1>
mov    -0x1e0(%ebp),%eax
lea    -0x130(%ebp),%edx
call   804c680 <fchmod@plt+0x2480>
call   8058530 <fchmod@plt+0xe330>
test   %al,%al
jne    80505a1 <fchmod@plt+0x63a1>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     8050624 <fchmod@plt+0x6424>
movb   $0x1,(%eax)
mov    %edi,%eax
test   %al,%al
je     804d5f8 <fchmod@plt+0x33f8>
movzbl 0x2c(%ebx),%edx
test   %dl,%dl
je     804d5f8 <fchmod@plt+0x33f8>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060c09,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049af0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    -0x1e0(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3049>
call   8049b20 <geteuid@plt>
test   %eax,%eax
je     804fd65 <fchmod@plt+0x5b65>
mov    -0x1e0(%ebp),%edx
mov    $0x180,%ecx
mov    -0x1fc(%ebp),%eax
call   804c220 <fchmod@plt+0x2020>
test   %eax,%eax
sete   -0x1f0(%ebp)
jmp    804fd6c <fchmod@plt+0x5b6c>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8061268,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
xor    %edi,%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movb   $0x1,-0x210(%ebp)
movl   $0x0,-0x200(%ebp)
00
jmp    804dd8f <fchmod@plt+0x3b8f>
movl   $0x11,-0x1f0(%ebp)
00
jmp    805020a <fchmod@plt+0x600a>
mov    -0x204(%ebp),%eax
xor    %ecx,%ecx
mov    $0x1,%edi
mov    (%eax),%eax
cmp    $0x3d,%eax
je     8050788 <fchmod@plt+0x6588>
cmp    $0x5f,%eax
je     8050788 <fchmod@plt+0x6588>
movl   $0x5,0x8(%esp)
movl   $0x806120c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,-0x218(%ebp)
call   8049af0 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x218(%ebp),%ecx
cmpb   $0x0,0x24(%ebx)
jne    804ff32 <fchmod@plt+0x5d32>
jmp    804fe44 <fchmod@plt+0x5c44>
mov    %eax,(%esp)
call   8049a60 <free@plt>
nop
jmp    804efbe <fchmod@plt+0x4dbe>
call   804cae0 <fchmod@plt+0x28e0>
not    %eax
and    $0x1b6,%eax
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80514a0 <fchmod@plt+0x72a0>
test   %eax,%eax
mov    $0x0,%eax
cmovne %eax,%edi
jmp    804fb09 <fchmod@plt+0x5909>
mov    0x10(%ebx),%eax
jmp    80507b1 <fchmod@plt+0x65b1>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8058860 <fchmod@plt+0xe660>
test   %eax,%eax
js     804e5ca <fchmod@plt+0x43ca>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e30 <setfscreatecon@plt>
test   %eax,%eax
jns    804cec7 <fchmod@plt+0x2cc7>
jmp    804df09 <fchmod@plt+0x3d09>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bf8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
jmp    804ecd9 <fchmod@plt+0x4ad9>
cmpl   $0x0,-0xb0(%ebp)
mov    -0xb4(%ebp),%ecx
mov    -0x204(%ebp),%eax
jg     804f48f <fchmod@plt+0x528f>
jl     8050878 <fchmod@plt+0x6678>
cmp    %eax,%ecx
jae    804f48f <fchmod@plt+0x528f>
lea    0x1(%ecx),%eax
mov    %eax,-0x204(%ebp)
jmp    804f48f <fchmod@plt+0x528f>
mov    -0xd0(%ebp),%eax
mov    0xc(%ebx),%ecx
movb   $0x0,-0x1f0(%ebp)
mov    %eax,-0x230(%ebp)
and    $0xf000,%eax
cmp    $0x8000,%eax
je     80509bd <fchmod@plt+0x67bd>
cmp    $0x3,%ecx
movb   $0x1,-0x23d(%ebp)
je     804f4cc <fchmod@plt+0x52cc>
jmp    804f438 <fchmod@plt+0x5238>
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
lea    -0x1c8(%ebp),%eax
mov    -0x244(%ebp),%ecx
mov    %eax,0x1c(%esp)
mov    -0x1f0(%ebp),%eax
mov    -0x1fc(%ebp),%edx
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
mov    %eax,0x18(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x8(%esp)
movzbl -0x23d(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x204(%ebp),%eax
mov    %eax,(%esp)
mov    -0x1e8(%ebp),%eax
call   804bfe0 <fchmod@plt+0x1de0>
test   %al,%al
je     8050078 <fchmod@plt+0x5e78>
cmpb   $0x0,-0x1c8(%ebp)
je     804fcdd <fchmod@plt+0x5add>
mov    -0x1c0(%ebp),%eax
mov    -0x1bc(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049f60 <ftruncate64@plt>
test   %eax,%eax
jns    804fcdd <fchmod@plt+0x5add>
jmp    8050078 <fchmod@plt+0x5e78>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060bc0,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
jmp    804fac6 <fchmod@plt+0x58c6>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x1dc(%ebp),%eax
jmp    8050986 <fchmod@plt+0x6786>
mov    -0xb0(%ebp),%edi
xor    %edx,%edx
sar    $0x1f,%edi
and    $0x1ff,%edi
mov    %edi,%eax
add    -0xb4(%ebp),%eax
adc    -0xb0(%ebp),%edx
shrd   $0x9,%edx,%eax
sar    $0x9,%edx
cmp    %edx,-0xa4(%ebp)
jl     8050a01 <fchmod@plt+0x6801>
jg     80509f5 <fchmod@plt+0x67f5>
cmp    %eax,-0xa8(%ebp)
jb     8050a01 <fchmod@plt+0x6801>
movb   $0x0,-0x1f0(%ebp)
jmp    80508ac <fchmod@plt+0x66ac>
cmp    $0x2,%ecx
je     8050b02 <fchmod@plt+0x6902>
movb   $0x1,-0x1f0(%ebp)
jmp    80508ac <fchmod@plt+0x66ac>
cmpb   $0x0,-0x1ab(%ebp)
mov    %esi,-0x218(%ebp)
mov    -0x234(%ebp),%ebx
mov    %edi,-0x214(%ebp)
mov    -0x220(%ebp),%esi
jne    8050011 <fchmod@plt+0x5e11>
cmpb   $0x0,-0x1ac(%ebp)
jne    80508cd <fchmod@plt+0x66cd>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8061290,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
jmp    805009c <fchmod@plt+0x5e9c>
mov    -0x238(%ebp),%ecx
mov    -0x1e0(%ebp),%edx
mov    -0x1fc(%ebp),%eax
not    %ecx
and    -0x248(%ebp),%ecx
call   804c220 <fchmod@plt+0x2020>
jmp    804fdad <fchmod@plt+0x5bad>
mov    -0x228(%ebp),%edx
mov    -0x224(%ebp),%ecx
mov    -0x1fc(%ebp),%eax
sub    -0x218(%ebp),%edx
sbb    -0x214(%ebp),%ecx
call   804bf00 <fchmod@plt+0x1d00>
xor    $0x1,%eax
jmp    8050070 <fchmod@plt+0x5e70>
lea    -0x7c(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a0e0 <getfscreatecon@plt>
xor    %ecx,%ecx
test   %eax,%eax
jns    804fe44 <fchmod@plt+0x5c44>
jmp    8050788 <fchmod@plt+0x6588>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
jmp    804faf9 <fchmod@plt+0x58f9>
mov    0xc(%ebx),%eax
mov    %eax,-0x23c(%ebp)
jmp    804f528 <fchmod@plt+0x5328>
mov    -0x228(%ebp),%eax
add    -0x204(%ebp),%eax
mov    %eax,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    -0x218(%ebp),%edi
xor    %edx,%edx
movb   $0x1,-0x23d(%ebp)
lea    -0x1(%eax,%edi,1),%ecx
mov    %eax,-0x200(%ebp)
mov    %ecx,%eax
div    %edi
sub    %edx,%ecx
mov    %ecx,-0x244(%ebp)
jmp    804f50b <fchmod@plt+0x530b>
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x4c(%esp),%ebx
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    0x48(%esp),%ecx
test   %ebx,%ebx
je     8050c95 <fchmod@plt+0x6a95>
cmpl   $0x3,(%ebx)
ja     8050c71 <fchmod@plt+0x6a71>
mov    0xc(%ebx),%edi
lea    -0x1(%edi),%esi
cmp    $0x2,%esi
ja     8050cb9 <fchmod@plt+0x6ab9>
mov    0x30(%ebx),%esi
cmp    $0x2,%esi
ja     8050c4d <fchmod@plt+0x6a4d>
cmpb   $0x0,0x17(%ebx)
jne    8050bf0 <fchmod@plt+0x69f0>
cmp    $0x2,%esi
je     8050c20 <fchmod@plt+0x6a20>
mov    0x54(%esp),%esi
movzbl %cl,%ecx
mov    %ebx,0xc(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x1c(%esp)
mov    0x50(%esp),%esi
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
movb   $0x0,0x2f(%esp)
mov    %esi,0x18(%esp)
lea    0x2f(%esp),%esi
mov    %esi,0x14(%esp)
mov    %eax,0x8067768
mov    %edx,0x8067764
call   804cb20 <fchmod@plt+0x2920>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2a(%ebx)
je     8050b88 <fchmod@plt+0x6988>
movl   $0x80614c1,0xc(%esp)
movl   $0xa66,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x8061450,(%esp)
call   804a1b0 <__assert_fail@plt>
lea    0x0(%esi),%esi
cmp    $0x2,%edi
je     8050b91 <fchmod@plt+0x6991>
movl   $0x80614c1,0xc(%esp)
movl   $0xa69,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x8061478,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80614c1,0xc(%esp)
movl   $0xa65,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x80613dc,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80614c1,0xc(%esp)
movl   $0xa63,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x8061334,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80614c1,0xc(%esp)
movl   $0xa62,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x8060e49,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80614c1,0xc(%esp)
movl   $0xa64,0x8(%esp)
movl   $0x8060e3e,0x4(%esp)
movl   $0x806136c,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805eb60 <fchmod@plt+0x14960>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    (%esi),%edx
mov    0x4(%esi),%ecx
xor    0x4(%ebx),%ecx
xor    (%ebx),%edx
or     %edx,%ecx
je     8050d30 <fchmod@plt+0x6b30>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    0xc(%esi),%eax
xor    0xc(%ebx),%eax
xor    0x8(%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
movl   $0x0,0x2c(%esp)
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x4c(%esp),%edx
mov    %eax,0x24(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x806776c,%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8053970 <fchmod@plt+0x9770>
test   %eax,%eax
mov    %eax,%ebx
je     8050dca <fchmod@plt+0x6bca>
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
add    $0x38,%esp
pop    %ebx
ret
nop
sub    $0x3c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x4c(%esp),%edx
mov    %eax,0x24(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x806776c,%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   80530d0 <fchmod@plt+0x8ed0>
test   %eax,%eax
je     8050e18 <fchmod@plt+0x6c18>
mov    0x10(%eax),%eax
add    $0x3c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8050e0f <fchmod@plt+0x6c0f>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
movl   $0x14,(%esp)
mov    0x2c(%esp),%esi
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %eax,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8058280 <fchmod@plt+0xe080>
mov    0xc(%esp),%edx
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%ebx)
mov    %edi,0xc(%ebx)
mov    %edx,0x4(%ebx)
mov    %eax,0x10(%ebx)
mov    0x8(%esp),%eax
mov    %eax,(%ebx)
mov    0x806776c,%eax
mov    %eax,(%esp)
call   8053930 <fchmod@plt+0x9730>
test   %eax,%eax
mov    %eax,%esi
je     8050eac <fchmod@plt+0x6cac>
cmp    %ebx,%eax
je     8050ea8 <fchmod@plt+0x6ca8>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x10(%esi),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    8050e9f <fchmod@plt+0x6c9f>
call   80582b0 <fchmod@plt+0xe0b0>
jmp    8050ec0 <fchmod@plt+0x6cc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
movl   $0x8050d50,0x10(%esp)
movl   $0x8050d10,0xc(%esp)
movl   $0x8050ce0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x67,(%esp)
call   8053320 <fchmod@plt+0x9120>
test   %eax,%eax
mov    %eax,0x806776c
je     8050efc <fchmod@plt+0x6cfc>
add    $0x2c,%esp
ret
call   80582b0 <fchmod@plt+0xe0b0>
jmp    8050f10 <fchmod@plt+0x6d10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x806776c,%eax
mov    %eax,(%esp)
call   80534f0 <fchmod@plt+0x92f0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
movl   $0x0,0x10(%eax)
mov    %edx,(%eax)
movl   $0x0,0x18(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movb   $0x0,0x14(%eax)
movb   $0x0,0x15(%eax)
movl   $0x1,0xc(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
movl   $0x0,0x24(%esp)
mov    0x18(%ebp),%eax
mov    0x4(%ebp),%edx
mov    0x8(%ebp),%ebx
mov    %eax,%esi
xor    %eax,%eax
mov    $0x400,%ecx
lea    0x4c(%esp),%edi
rep stos %eax,%es:(%edi)
mov    %edx,%eax
not    %eax
mov    %eax,0x54(%esp)
lea    0x4c(%esp),%eax
mov    %edx,0x4c(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x8(%esp)
movl   $0xc020660b,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %ebx,0x50(%esp)
not    %ebx
mov    %edx,0x5c(%esp)
movl   $0x48,0x64(%esp)
mov    %eax,(%esp)
mov    %ebx,0x58(%esp)
call   8049bb0 <ioctl@plt>
test   %eax,%eax
js     80510f6 <fchmod@plt+0x6ef6>
mov    0x60(%esp),%eax
test   %eax,%eax
je     8051338 <fchmod@plt+0x7138>
mov    0x10(%ebp),%edx
mov    %eax,%ecx
not    %ecx
cmp    %ecx,%edx
ja     8051354 <fchmod@plt+0x7154>
add    %edx,%eax
mov    0x18(%ebp),%edx
mov    %esi,%ebx
mov    %eax,0x10(%ebp)
sub    %edx,%ebx
sar    $0x2,%ebx
cmp    $0xccccccc,%eax
ja     805134f <fchmod@plt+0x714f>
lea    (%eax,%eax,4),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80580b0 <fchmod@plt+0xdeb0>
mov    %eax,0x18(%ebp)
lea    (%eax,%ebx,4),%esi
mov    0x60(%esp),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8051239 <fchmod@plt+0x7039>
mov    0x6c(%esp),%eax
mov    $0xffffffff,%ecx
mov    $0x7fffffff,%ebx
mov    0x70(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x7c(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x80(%esp),%edx
sub    %eax,%ecx
sbb    %edx,%ebx
cmp    %ebx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jb     805109c <fchmod@plt+0x6e9c>
ja     80511c4 <fchmod@plt+0x6fc4>
cmp    %ecx,0x18(%esp)
ja     80511c4 <fchmod@plt+0x6fc4>
lea    0x6c(%esp),%edi
movl   $0x0,0x20(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8051128 <fchmod@plt+0x6f28>
mov    0x28(%edi),%eax
mov    %eax,0x30(%esp)
and    $0xfffffffe,%eax
cmp    %eax,0x10(%esi)
je     8051288 <fchmod@plt+0x7088>
mov    (%esi),%eax
mov    0x4(%esi),%edx
add    0x8(%esi),%eax
adc    0xc(%esi),%edx
cmp    %edx,0x1c(%esp)
ja     8051143 <fchmod@plt+0x6f43>
jae    80512d8 <fchmod@plt+0x70d8>
mov    %eax,%ecx
mov    %edx,%ebx
sub    0x18(%esp),%ecx
sbb    0x1c(%esp),%ebx
cmp    0x2c(%esp),%ebx
ja     805120a <fchmod@plt+0x700a>
jae    8051200 <fchmod@plt+0x7000>
mov    0x8(%ebp),%eax
or     0x4(%ebp),%eax
jne    80512e8 <fchmod@plt+0x70e8>
movb   $0x1,0x14(%ebp)
xor    %eax,%eax
mov    0x104c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    805134a <fchmod@plt+0x714a>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%ebp),%edx
cmp    0x1c(%esp),%edx
mov    0x4(%ebp),%eax
ja     80510da <fchmod@plt+0x6eda>
jb     805113c <fchmod@plt+0x6f3c>
cmp    0x18(%esp),%eax
ja     80510da <fchmod@plt+0x6eda>
mov    0x28(%edi),%eax
mov    %eax,0x30(%esp)
mov    0x24(%esp),%eax
addl   $0x1,0x24(%esp)
lea    (%eax,%eax,4),%edx
mov    0x18(%ebp),%eax
lea    (%eax,%edx,4),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    0x28(%esp),%eax
mov    %edx,0x4(%esi)
mov    0x2c(%esp),%edx
mov    %eax,0x8(%esi)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esi)
mov    %eax,0x10(%esi)
addl   $0x1,0x20(%esp)
mov    0x34(%esp),%eax
cmp    %eax,0x20(%esp)
jae    8051239 <fchmod@plt+0x7039>
imul   $0x38,0x20(%esp),%edi
mov    $0xffffffff,%ecx
lea    0x6c(%esp),%eax
mov    $0x7fffffff,%ebx
add    %eax,%edi
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %eax,0x18(%esp)
mov    0x10(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x14(%edi),%edx
sub    %eax,%ecx
sbb    %edx,%ebx
cmp    %ebx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jbe    80511e8 <fchmod@plt+0x6fe8>
movl   $0x80615c8,0xc(%esp)
movl   $0x8f,0x8(%esp)
movl   $0x80614cf,0x4(%esp)
movl   $0x8061520,(%esp)
call   804a1b0 <__assert_fail@plt>
jb     80510a8 <fchmod@plt+0x6ea8>
cmp    %ecx,0x18(%esp)
ja     80511c4 <fchmod@plt+0x6fc4>
jmp    80510a8 <fchmod@plt+0x6ea8>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x28(%esp),%ecx
jb     80510f6 <fchmod@plt+0x6ef6>
mov    %eax,(%edi)
mov    0x28(%esp),%eax
mov    %edx,0x4(%edi)
mov    0x2c(%esp),%edx
sub    %ecx,%eax
sbb    %ebx,%edx
subl   $0x1,0x20(%esp)
addl   $0x1,0x20(%esp)
mov    %eax,0x10(%edi)
mov    0x34(%esp),%eax
cmp    %eax,0x20(%esp)
mov    %edx,0x14(%edi)
jb     805118a <fchmod@plt+0x6f8a>
testb  $0x1,0x10(%esi)
jne    8051308 <fchmod@plt+0x7108>
cmpl   $0x48,0x24(%esp)
movzbl 0x15(%ebp),%eax
ja     80512ef <fchmod@plt+0x70ef>
mov    0x24(%esp),%ebx
test   %al,%al
mov    %ebx,0x10(%ebp)
jne    80512fa <fchmod@plt+0x70fa>
mov    (%esi),%ecx
mov    0x4(%esi),%ebx
add    0x8(%esi),%ecx
adc    0xc(%esi),%ebx
cmpl   $0x47,0x24(%esp)
mov    %ecx,0x4(%ebp)
mov    %ebx,0x8(%ebp)
ja     80512fa <fchmod@plt+0x70fa>
mov    %ecx,%edx
jmp    8050fa3 <fchmod@plt+0x6da3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    0xc(%esi),%edx
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%ecx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
add    (%esi),%eax
adc    0x4(%esi),%edx
xor    %eax,%ecx
xor    %edx,%ebx
or     %ecx,%ebx
jne    80510ce <fchmod@plt+0x6ece>
mov    0x28(%esp),%eax
add    0x38(%esp),%eax
mov    0x2c(%esp),%edx
adc    0x3c(%esp),%edx
mov    %eax,0x8(%esi)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esi)
mov    %eax,0x10(%esi)
jmp    8051177 <fchmod@plt+0x6f77>
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x18(%esp)
jae    8051143 <fchmod@plt+0x6f43>
jmp    80510da <fchmod@plt+0x6eda>
nop
xor    %eax,%eax
jmp    8051108 <fchmod@plt+0x6f08>
test   %al,%al
je     805131d <fchmod@plt+0x711d>
mov    0x24(%esp),%eax
mov    %eax,0x10(%ebp)
mov    $0x1,%eax
jmp    8051108 <fchmod@plt+0x6f08>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x48,0x24(%esp)
movb   $0x1,0x15(%ebp)
ja     80512f3 <fchmod@plt+0x70f3>
mov    $0x1,%eax
jmp    8051252 <fchmod@plt+0x7052>
subl   $0x1,0x24(%esp)
mov    0x24(%esp),%ebx
mov    0x18(%ebp),%eax
lea    (%ebx,%ebx,4),%edx
lea    -0x14(%eax,%edx,4),%esi
mov    %ebx,0x10(%ebp)
jmp    8051261 <fchmod@plt+0x7061>
mov    0x4(%ebp),%eax
or     0x8(%ebp),%eax
movb   $0x1,0x15(%ebp)
setne  %al
jmp    8051108 <fchmod@plt+0x6f08>
call   8049b10 <__stack_chk_fail@plt>
call   80582b0 <fchmod@plt+0xe0b0>
movl   $0x80615c8,0xc(%esp)
movl   $0x80,0x8(%esp)
movl   $0x80614cf,0x4(%esp)
movl   $0x80614e4,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    0x4(%esp),%ecx
cmp    $0xffffffff,%eax
mov    %edx,0x8(%esp)
je     80513a0 <fchmod@plt+0x71a0>
mov    %eax,0x4(%esp)
jmp    804a200 <fchmod@plt>
xchg   %ax,%ax
mov    %ecx,0x4(%esp)
jmp    804a0f0 <chmod@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
mov    %ebx,(%esp)
call   8049cb0 <acl_from_mode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8051423 <fchmod@plt+0x7223>
cmp    $0xffffffff,%esi
je     8051470 <fchmod@plt+0x7270>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80499c0 <acl_set_fd@plt>
test   %eax,%eax
je     8051430 <fchmod@plt+0x7230>
call   8049ed0 <__errno_location@plt>
mov    %eax,%ecx
mov    (%eax),%eax
mov    %ebp,(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   804a1d0 <acl_free@plt>
mov    0x18(%esp),%ecx
mov    (%ecx),%eax
cmp    $0x5f,%eax
je     8051458 <fchmod@plt+0x7258>
cmp    $0x26,%eax
je     8051458 <fchmod@plt+0x7258>
cmp    $0x16,%eax
je     8051458 <fchmod@plt+0x7258>
cmp    $0x10,%eax
je     8051458 <fchmod@plt+0x7258>
mov    0x1c(%esp),%eax
mov    %eax,(%ecx)
mov    $0xffffffff,%eax
jmp    805144d <fchmod@plt+0x724d>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   804a1d0 <acl_free@plt>
mov    %ebx,%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8051490 <fchmod@plt+0x7290>
xor    %eax,%eax
test   $0xe,%bh
jne    8051458 <fchmod@plt+0x7258>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x48(%esp)
mov    %esi,0x44(%esp)
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8051380 <fchmod@plt+0x7180>
mov    %eax,0x8(%esp)
movl   $0x8000,0x4(%esp)
mov    %edi,(%esp)
call   8049ca0 <acl_set_file@plt>
jmp    80513e6 <fchmod@plt+0x71e6>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049b00 <acl_delete_def_file@plt>
test   %eax,%eax
je     8051446 <fchmod@plt+0x7246>
jmp    8051423 <fchmod@plt+0x7223>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80513b0 <fchmod@plt+0x71b0>
test   %eax,%eax
mov    %eax,%ebx
je     805150f <fchmod@plt+0x730f>
mov    %esi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x805ede0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %eax,%esi
call   8049ed0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
mov    0x40(%esp),%ebp
mov    0x4c(%esp),%ebx
cmp    $0xffffffff,%eax
mov    0x50(%esp),%esi
mov    %edx,0x18(%esp)
je     80515f8 <fchmod@plt+0x73f8>
mov    %eax,(%esp)
call   8049cc0 <acl_get_fd@plt>
mov    %eax,%edi
test   %edi,%edi
je     8051612 <fchmod@plt+0x7412>
cmp    $0xffffffff,%ebx
je     8051678 <fchmod@plt+0x7478>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   80499c0 <acl_set_fd@plt>
test   %eax,%eax
je     8051648 <fchmod@plt+0x7448>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,0x1c(%esp)
cmp    $0x5f,%ebp
je     80515c8 <fchmod@plt+0x73c8>
cmp    $0x26,%ebp
je     80515c8 <fchmod@plt+0x73c8>
cmp    $0x16,%ebp
je     80515c8 <fchmod@plt+0x73c8>
cmp    $0x10,%ebp
je     80515c8 <fchmod@plt+0x73c8>
mov    %edi,(%esp)
call   804a1d0 <acl_free@plt>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    $0xffffffff,%ebx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8051380 <fchmod@plt+0x7180>
mov    0x1c(%esp),%eax
mov    %ebp,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   8051820 <fchmod@plt+0x7620>
test   %eax,%eax
jne    8051596 <fchmod@plt+0x7396>
mov    %edi,(%esp)
call   804a1d0 <acl_free@plt>
mov    0x18(%esp),%eax
mov    %esi,0x48(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8051380 <fchmod@plt+0x7180>
movl   $0x8000,0x4(%esp)
mov    %ebp,(%esp)
call   8049e70 <acl_get_file@plt>
mov    %eax,%edi
test   %edi,%edi
jne    805155a <fchmod@plt+0x735a>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
je     80516c0 <fchmod@plt+0x74c0>
cmp    $0x26,%eax
je     80516c0 <fchmod@plt+0x74c0>
cmp    $0x16,%eax
je     80516c0 <fchmod@plt+0x74c0>
cmp    $0x10,%eax
je     80516c0 <fchmod@plt+0x74c0>
mov    $0xfffffffe,%ebx
jmp    80515bd <fchmod@plt+0x73bd>
nop
mov    %edi,(%esp)
call   804a1d0 <acl_free@plt>
test   $0xe00,%esi
jne    8051698 <fchmod@plt+0x7498>
and    $0xf000,%esi
cmp    $0x4000,%esi
je     80516e0 <fchmod@plt+0x74e0>
add    $0x2c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x8000,0x4(%esp)
mov    %eax,(%esp)
call   8049ca0 <acl_set_file@plt>
jmp    805156f <fchmod@plt+0x736f>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8051380 <fchmod@plt+0x7180>
test   %eax,%eax
je     8051658 <fchmod@plt+0x7458>
mov    $0xffffffff,%ebx
jmp    80515bd <fchmod@plt+0x73bd>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %esi,0x48(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80513b0 <fchmod@plt+0x71b0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4000,0x4(%esp)
mov    %ebp,(%esp)
call   8049e70 <acl_get_file@plt>
test   %eax,%eax
mov    %eax,%esi
je     805163d <fchmod@plt+0x743d>
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x4000,0x4(%esp)
mov    %eax,(%esp)
call   8049ca0 <acl_set_file@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8051725 <fchmod@plt+0x7525>
mov    %esi,(%esp)
call   804a1d0 <acl_free@plt>
jmp    80515bd <fchmod@plt+0x73bd>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   804a1d0 <acl_free@plt>
mov    %edi,(%ebx)
mov    $0xffffffff,%ebx
jmp    80515bd <fchmod@plt+0x73bd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%eax
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %edi,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8051520 <fchmod@plt+0x7320>
cmp    $0xfffffffe,%eax
mov    %eax,%ebx
je     80517e0 <fchmod@plt+0x75e0>
cmp    $0xffffffff,%eax
jne    80517d5 <fchmod@plt+0x75d5>
mov    %esi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x5,0x8(%esp)
movl   $0x8060d7a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049af0 <dcgettext@plt>
mov    %eax,%esi
call   8049ed0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edi,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
mov    %eax,%esi
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8061635,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x18(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049f10 <acl_get_entry@plt>
test   %eax,%eax
jle    8051894 <fchmod@plt+0x7694>
lea    0x1c(%esp),%edi
jmp    805187b <fchmod@plt+0x767b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
je     8051863 <fchmod@plt+0x7663>
cmp    $0x4,%eax
je     8051863 <fchmod@plt+0x7663>
cmp    $0x20,%eax
jne    80518a0 <fchmod@plt+0x76a0>
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049f10 <acl_get_entry@plt>
test   %eax,%eax
jle    8051894 <fchmod@plt+0x7694>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <acl_get_tag_type@plt>
test   %eax,%eax
jns    8051850 <fchmod@plt+0x7650>
mov    $0xffffffff,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x10(%eax),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     80518f0 <fchmod@plt+0x76f0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049c00 <acl_extended_file@plt>
test   %eax,%eax
js     80518e0 <fchmod@plt+0x76e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
jne    80518f8 <fchmod@plt+0x76f8>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
cmp    $0x26,%eax
je     80518f0 <fchmod@plt+0x76f0>
cmp    $0x16,%eax
je     80518f0 <fchmod@plt+0x76f0>
cmp    $0x10,%eax
setne  %al
movzbl %al,%eax
neg    %eax
jmp    80518d6 <fchmod@plt+0x76d6>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x401,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebp
lea    0x1(%eax),%edx
cmp    $0x400,%eax
cmovbe %edx,%ebx
nop
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8051978 <fchmod@plt+0x7778>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049b70 <readlink@plt>
test   %eax,%eax
mov    %eax,%edi
js     8051998 <fchmod@plt+0x7798>
cmp    %edi,%ebx
ja     80519c8 <fchmod@plt+0x77c8>
mov    %esi,(%esp)
call   8049a60 <free@plt>
cmp    $0x3fffffff,%ebx
ja     8051988 <fchmod@plt+0x7788>
add    %ebx,%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
jne    805193e <fchmod@plt+0x773e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x7ffffffe,%ebx
ja     80519d8 <fchmod@plt+0x77d8>
mov    $0x7fffffff,%ebx
jmp    8051930 <fchmod@plt+0x7730>
nop
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x22,%edx
je     8051954 <fchmod@plt+0x7754>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8049a60 <free@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    805197a <fchmod@plt+0x777a>
lea    0x0(%esi),%esi
movb   $0x0,(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049ed0 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804b3e0 <fchmod@plt+0x11e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8051af2 <fchmod@plt+0x78f2>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movb   $0x0,0x1f(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    8051a96 <fchmod@plt+0x7896>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8051ac8 <fchmod@plt+0x78c8>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
imul   0x4c(%esp),%eax
add    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
movzbl 0x1f(%esp),%edx
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%edx
mov    %dl,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8051ad0 <fchmod@plt+0x78d0>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <strncmp@plt>
test   %eax,%eax
jne    8051a84 <fchmod@plt+0x7884>
mov    %edi,(%esp)
call   8049dc0 <strlen@plt>
cmp    %ebp,%eax
je     8051ae8 <fchmod@plt+0x78e8>
cmpl   $0xffffffff,0x18(%esp)
jne    8051a48 <fchmod@plt+0x7848>
mov    %ebx,0x18(%esp)
jmp    8051a84 <fchmod@plt+0x7884>
nop
movb   $0x1,0x1f(%esp)
jmp    8051a84 <fchmod@plt+0x7884>
nop
cmpb   $0x0,0x1f(%esp)
jne    8051afc <fchmod@plt+0x78fc>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,0x18(%esp)
jmp    8051ad7 <fchmod@plt+0x78d7>
mov    $0xfffffffe,%eax
jmp    8051adb <fchmod@plt+0x78db>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     8051b98 <fchmod@plt+0x7998>
movl   $0x80615f9,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8055d00 <fchmod@plt+0xbb00>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8055950 <fchmod@plt+0xb750>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x80615de,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%esi
jmp    8051b3a <fchmod@plt+0x793a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80672a4,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x8061616,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8049af0 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    8051c4d <fchmod@plt+0x7a4d>
jmp    8051c98 <fchmod@plt+0x7a98>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x806162b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     8051c98 <fchmod@plt+0x7a98>
test   %esi,%esi
je     8051c10 <fchmod@plt+0x7a10>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
jne    8051c10 <fchmod@plt+0x7a10>
mov    %ebp,(%esp)
call   8055d20 <fchmod@plt+0xbb20>
movl   $0x8061633,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8051c3b <fchmod@plt+0x7a3b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80672a4,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    8051cb6 <fchmod@plt+0x7ab6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ff0 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   8051a10 <fchmod@plt+0x7810>
test   %eax,%eax
js     8051d07 <fchmod@plt+0x7b07>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8051b10 <fchmod@plt+0x7910>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8051bb0 <fchmod@plt+0x79b0>
call   *0x44(%esp)
mov    $0xffffffff,%eax
jmp    8051cff <fchmod@plt+0x7aff>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     8051d83 <fchmod@plt+0x7b83>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    8051d6b <fchmod@plt+0x7b6b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     8051d83 <fchmod@plt+0x7b83>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
jne    8051d60 <fchmod@plt+0x7b60>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x8067254,%ecx
movl   $0x4,0x10(%esp)
movl   $0x8061680,0xc(%esp)
movl   $0x80616a0,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8051cd0 <fchmod@plt+0x7ad0>
mov    0x8061680(,%eax,4),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x8067258,%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
lea    0x1(%eax),%esi
mov    $0x9,%eax
cmp    $0x9,%esi
cmovae %esi,%eax
mov    %esi,0x2c(%esp)
lea    0x1(%edi),%esi
add    %esi,%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049a70 <memcpy@plt>
cmpl   $0x1,0x64(%esp)
je     8052050 <fchmod@plt+0x7e50>
mov    %ebp,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x20(%esp)
call   8052620 <fchmod@plt+0x8420>
movzwl (%edi),%ebx
mov    %eax,0x28(%esp)
mov    $0x2e,%eax
mov    %ax,(%edi)
mov    %ebp,(%esp)
call   8052440 <fchmod@plt+0x8240>
mov    0x28(%esp),%ecx
mov    %edi,%edx
mov    %bx,(%edi)
add    %ecx,%edx
movl   $0x7e317e2e,(%edx)
mov    %eax,%esi
test   %esi,%esi
movb   $0x0,0x4(%edx)
je     8052048 <fchmod@plt+0x7e48>
mov    %ecx,%eax
lea    0x4(%ecx),%edx
add    $0x2,%eax
mov    %ebp,0x1c(%esp)
movl   $0x1,0x38(%esp)
movl   $0x2,0x34(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
xchg   %ax,%ax
mov    %esi,(%esp)
call   804a080 <readdir64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8052008 <fchmod@plt+0x7e08>
mov    0x4(%ebx),%eax
or     (%ebx),%eax
je     8051ea8 <fchmod@plt+0x7ca8>
lea    0x13(%ebx),%edi
mov    %edi,(%esp)
call   8049dc0 <strlen@plt>
cmp    0x14(%esp),%eax
jb     8051ea8 <fchmod@plt+0x7ca8>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
sub    %ebp,%eax
add    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
jne    8051ea8 <fchmod@plt+0x7ca8>
mov    0x18(%esp),%eax
movzbl 0x13(%ebx,%eax,1),%eax
lea    -0x31(%eax),%edx
cmp    $0x8,%dl
ja     8051ea8 <fchmod@plt+0x7ca8>
mov    0x28(%esp),%edx
cmp    $0x39,%al
lea    0x15(%ebx,%edx,1),%edi
sete   %dl
movzbl 0x1(%edi),%eax
mov    $0x1,%ebx
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
ja     8051f41 <fchmod@plt+0x7d41>
xchg   %ax,%ax
cmp    $0x39,%al
sete   %al
add    $0x1,%ebx
and    %eax,%edx
movzbl (%edi,%ebx,1),%eax
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    8051f28 <fchmod@plt+0x7d28>
cmp    $0x7e,%al
jne    8051ea8 <fchmod@plt+0x7ca8>
cmpb   $0x0,0x1(%edi,%ebx,1)
jne    8051ea8 <fchmod@plt+0x7ca8>
cmp    0x38(%esp),%ebx
jbe    80520e9 <fchmod@plt+0x7ee9>
movzbl %dl,%eax
mov    0x24(%esp),%edx
mov    %eax,0x34(%esp)
add    %ebx,%eax
mov    %eax,0x38(%esp)
lea    0x3(%eax,%edx,1),%ecx
cmp    0x30(%esp),%ecx
jb     8051fa6 <fchmod@plt+0x7da6>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x1,%eax
jbe    8052120 <fchmod@plt+0x7f20>
lea    (%ecx,%ecx,1),%eax
mov    %eax,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80580b0 <fchmod@plt+0xdeb0>
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edx
add    0x24(%esp),%eax
movb   $0x2e,(%eax)
lea    0x2(%eax,%edx,1),%edx
movb   $0x7e,0x1(%eax)
movb   $0x30,0x2(%eax)
lea    0x2(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x3c(%esp)
call   8049a70 <memcpy@plt>
mov    0x3c(%esp),%edx
add    %ebx,%edx
lea    -0x1(%edx),%eax
movzbl -0x1(%edx),%edx
cmp    $0x39,%dl
jne    8051ffe <fchmod@plt+0x7dfe>
lea    0x0(%esi),%esi
movb   $0x30,(%eax)
sub    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x39,%dl
je     8051ff0 <fchmod@plt+0x7df0>
add    $0x1,%edx
mov    %dl,(%eax)
jmp    8051ea8 <fchmod@plt+0x7ca8>
mov    %esi,(%esp)
call   804a170 <closedir@plt>
mov    0x1c(%esp),%ebp
cmpl   $0x1,0x34(%esp)
jne    805203e <fchmod@plt+0x7e3e>
mov    %ebp,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8052620 <fchmod@plt+0x8420>
cmp    $0xe,%eax
mov    %eax,%esi
ja     8052078 <fchmod@plt+0x7e78>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x2,0x34(%esp)
jne    8052034 <fchmod@plt+0x7e34>
lea    0x0(%esi),%esi
cmpl   $0x2,0x64(%esp)
jne    805201b <fchmod@plt+0x7e1b>
nop
mov    0x2c(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
mov    0x8067258,%edx
add    %ebp,%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049a70 <memcpy@plt>
jmp    805201b <fchmod@plt+0x7e1b>
lea    0x0(%esi),%esi
movzwl (%ebx),%ecx
mov    $0x2e,%eax
mov    %ax,(%ebx)
mov    %ecx,0x14(%esp)
call   8049ed0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   80499a0 <pathconf@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
js     80520dc <fchmod@plt+0x7edc>
mov    %eax,%edx
cmp    %edx,%esi
mov    %cx,(%ebx)
jbe    8052034 <fchmod@plt+0x7e34>
mov    0x24(%esp),%eax
lea    -0x1(%edx),%ecx
add    %ebp,%eax
sub    %ebx,%eax
cmp    %edx,%eax
cmovae %ecx,%eax
movb   $0x7e,(%ebx,%eax,1)
movb   $0x0,0x1(%ebx,%eax,1)
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%edi
mov    $0xff,%edx
test   %edi,%edi
jne    80520ae <fchmod@plt+0x7eae>
jmp    80520ac <fchmod@plt+0x7eac>
jne    8051ea8 <fchmod@plt+0x7ca8>
mov    %edx,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
lea    0x2(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
jg     8051ea8 <fchmod@plt+0x7ca8>
jmp    8051f5e <fchmod@plt+0x7d5e>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
test   %edx,%edx
je     8052141 <fchmod@plt+0x7f41>
cmpb   $0x0,(%edx)
jne    8052148 <fchmod@plt+0x7f48>
mov    $0x2,%eax
ret
nop
jmp    8051d90 <fchmod@plt+0x7b90>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
test   %edx,%edx
je     8052170 <fchmod@plt+0x7f70>
cmpb   $0x0,(%edx)
je     8052170 <fchmod@plt+0x7f70>
add    $0x1c,%esp
jmp    8051d90 <fchmod@plt+0x7b90>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8061639,(%esp)
call   8049c60 <getenv@plt>
test   %eax,%eax
je     8052185 <fchmod@plt+0x7f85>
cmpb   $0x0,(%eax)
jne    8052190 <fchmod@plt+0x7f90>
mov    $0x2,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %eax,%edx
add    $0x1c,%esp
mov    $0x8061638,%eax
jmp    8051d90 <fchmod@plt+0x7b90>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%esi
test   %ecx,%ecx
jne    80521d0 <fchmod@plt+0x7fd0>
mov    $0x2000,%cx
test   %ebx,%ebx
cmovne %ebx,%ecx
cmp    %esi,%ecx
mov    %esi,%eax
cmovbe %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80521bd <fchmod@plt+0x7fbd>
xor    %edx,%edx
mov    %ebx,%edi
mov    %ecx,%eax
div    %edi
test   %edx,%edx
je     80521ec <fchmod@plt+0x7fec>
mov    %edi,%eax
mov    %edx,%edi
xor    %edx,%edx
div    %edi
test   %edx,%edx
jne    80521e0 <fchmod@plt+0x7fe0>
xor    %edx,%edx
mov    %ecx,%eax
div    %edi
mov    %eax,%edi
mov    %eax,%ebp
imul   %ebx,%edi
cmp    %esi,%edi
ja     80521bd <fchmod@plt+0x7fbd>
xor    %edx,%edx
mov    %edi,%eax
div    %ebx
cmp    %ebp,%eax
jne    80521bd <fchmod@plt+0x7fbd>
mov    %edi,%eax
jmp    80521c4 <fchmod@plt+0x7fc4>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8067770
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80672e4,%ebx
mov    %ebx,(%esp)
call   8058720 <fchmod@plt+0xe520>
test   %eax,%eax
jne    80522c0 <fchmod@plt+0x80c0>
mov    %ebx,(%esp)
call   8059280 <fchmod@plt+0xf080>
test   %eax,%eax
je     805231a <fchmod@plt+0x811a>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80616c4,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    0x8067770,%edx
test   %edx,%edx
mov    %eax,%ebx
je     8052328 <fchmod@plt+0x8128>
mov    %edx,(%esp)
call   8055af0 <fchmod@plt+0xb8f0>
mov    %eax,%esi
call   8049ed0 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80616d7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   8052370 <fchmod@plt+0x8170>
mov    0x806725c,%eax
mov    %eax,(%esp)
call   8049a20 <_exit@plt>
nop
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8058750 <fchmod@plt+0xe550>
mov    0x80672e4,%ebx
test   %eax,%eax
jne    805223b <fchmod@plt+0x803b>
mov    0x80672e4,%eax
mov    %eax,(%esp)
call   80586c0 <fchmod@plt+0xe4c0>
mov    %eax,%ebx
mov    0x80672e4,%eax
mov    %eax,(%esp)
call   8059280 <fchmod@plt+0xf080>
test   %eax,%eax
jne    8052250 <fchmod@plt+0x8050>
test   %ebx,%ebx
jne    8052250 <fchmod@plt+0x8050>
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    8052370 <fchmod@plt+0x8170>
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8061635,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    80522ad <fchmod@plt+0x80ad>
mov    0x4(%esp),%eax
mov    %eax,0x8067778
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8067774
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8067300,%eax
mov    %eax,(%esp)
call   8059280 <fchmod@plt+0xf080>
test   %eax,%eax
je     8052399 <fchmod@plt+0x8199>
cmpb   $0x0,0x8067774
je     80523b0 <fchmod@plt+0x81b0>
call   8049ed0 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    80523b0 <fchmod@plt+0x81b0>
mov    0x80672a4,%eax
mov    %eax,(%esp)
call   8059280 <fchmod@plt+0xf080>
test   %eax,%eax
jne    8052408 <fchmod@plt+0x8208>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x80616de,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8067778,%eax
test   %eax,%eax
je     8052415 <fchmod@plt+0x8215>
mov    %eax,(%esp)
call   8055af0 <fchmod@plt+0xb8f0>
mov    %eax,%esi
call   8049ed0 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80616d7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    0x806725c,%eax
mov    %eax,(%esp)
call   8049a20 <_exit@plt>
call   8049ed0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8061635,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    8052408 <fchmod@plt+0x8208>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a1a0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8052466 <fchmod@plt+0x8266>
mov    %eax,(%esp)
call   8049a30 <dirfd@plt>
cmp    $0x2,%eax
jbe    8052470 <fchmod@plt+0x8270>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   8056710 <fchmod@plt+0xc510>
test   %eax,%eax
js     80524b8 <fchmod@plt+0x82b8>
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   804a020 <fdopendir@plt>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
test   %edi,%edi
mov    0xc(%esp),%edx
mov    %eax,%esi
mov    (%eax),%ebp
je     80524c8 <fchmod@plt+0x82c8>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804a170 <closedir@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
xor    %edi,%edi
mov    %eax,%esi
mov    (%eax),%ebp
jmp    805249b <fchmod@plt+0x829b>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   804a160 <close@plt>
jmp    805249b <fchmod@plt+0x829b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052550 <fchmod@plt+0x8350>
test   %eax,%eax
je     80524f7 <fchmod@plt+0x82f7>
add    $0x1c,%esp
ret
call   80582b0 <fchmod@plt+0xe0b0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    8052548 <fchmod@plt+0x8348>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     805253c <fchmod@plt+0x833c>
jmp    8052548 <fchmod@plt+0x8348>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    8052540 <fchmod@plt+0x8340>
mov    %eax,%edx
cmp    %edx,%esi
jb     8052530 <fchmod@plt+0x8330>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    8052540 <fchmod@plt+0x8340>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052500 <fchmod@plt+0x8300>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     80525b8 <fchmod@plt+0x83b8>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    80525b0 <fchmod@plt+0x83b0>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    805259c <fchmod@plt+0x839c>
xor    %eax,%eax
jmp    80525a2 <fchmod@plt+0x83a2>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    80525db <fchmod@plt+0x83db>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     80525d0 <fchmod@plt+0x83d0>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8052609 <fchmod@plt+0x8409>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8052609 <fchmod@plt+0x8409>
cmp    $0x2f,%cl
je     8052610 <fchmod@plt+0x8410>
test   %bl,%bl
je     80525e8 <fchmod@plt+0x83e8>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    80525f2 <fchmod@plt+0x83f2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    80525e8 <fchmod@plt+0x83e8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
cmp    $0x1,%eax
jbe    805263f <fchmod@plt+0x843f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     8052648 <fchmod@plt+0x8448>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    8052635 <fchmod@plt+0x8435>
nop
jmp    805263f <fchmod@plt+0x843f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   8052620 <fchmod@plt+0x8420>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
jmp    804a0c0 <posix_fadvise64@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     80526e3 <fchmod@plt+0x84e3>
mov    %eax,(%esp)
call   8049ef0 <fileno@plt>
mov    0x34(%esp),%edx
movl   $0x0,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a0c0 <posix_fadvise64@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80499f0 <open64@plt>
mov    %eax,(%esp)
call   8056740 <fchmod@plt+0xc540>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
test   %esi,%esi
je     80527a0 <fchmod@plt+0x85a0>
movl   $0x14,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8058280 <fchmod@plt+0xe080>
mov    0x5c(%edi),%edx
mov    %eax,(%ebx)
mov    0x58(%edi),%eax
mov    %edx,0x8(%ebx)
mov    0x4(%edi),%edx
mov    %eax,0x4(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%ebx)
mov    %eax,0xc(%ebx)
call   8053930 <fchmod@plt+0x9730>
test   %eax,%eax
je     80527a8 <fchmod@plt+0x85a8>
cmp    %ebx,%eax
je     80527a0 <fchmod@plt+0x85a0>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8053bf0 <fchmod@plt+0x99f0>
lea    0x0(%esi),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x38,%esp
mov    0x40(%esp),%ecx
mov    0x48(%esp),%ebx
test   %ecx,%ecx
je     80527fa <fchmod@plt+0x85fa>
mov    0x44(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,0x20(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   80530d0 <fchmod@plt+0x8ed0>
test   %eax,%eax
setne  %al
add    $0x38,%esp
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x8000,%ecx
je     8052988 <fchmod@plt+0x8788>
cmp    $0x4000,%ecx
je     8052998 <fchmod@plt+0x8798>
cmp    $0x6000,%ecx
je     80529a8 <fchmod@plt+0x87a8>
cmp    $0x2000,%ecx
je     8052978 <fchmod@plt+0x8778>
cmp    $0xa000,%ecx
je     80529b8 <fchmod@plt+0x87b8>
cmp    $0x1000,%ecx
je     80529c8 <fchmod@plt+0x87c8>
cmp    $0xc000,%ecx
mov    $0x73,%ebx
mov    $0x3f,%ecx
cmovne %ecx,%ebx
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
mov    %bl,(%edx)
je     8052968 <fchmod@plt+0x8768>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     8052960 <fchmod@plt+0x8760>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x7(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x8(%edx)
je     8052940 <fchmod@plt+0x8740>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x9(%edx)
movb   $0x20,0xa(%edx)
movb   $0x0,0xb(%edx)
pop    %ebx
ret
lea    0x0(%esi),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x9(%edx)
movb   $0x20,0xa(%edx)
movb   $0x0,0xb(%edx)
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80528f1 <fchmod@plt+0x86f1>
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80528b3 <fchmod@plt+0x86b3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x63,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi),%esi
mov    $0x2d,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi),%esi
mov    $0x64,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi),%esi
mov    $0x62,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi),%esi
mov    $0x6c,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi),%esi
mov    $0x70,%ebx
jmp    805286c <fchmod@plt+0x866c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x4(%esp)
jmp    8052800 <fchmod@plt+0x8600>
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052a20 <fchmod@plt+0x8820>
test   %eax,%eax
je     8052a17 <fchmod@plt+0x8817>
add    $0x1c,%esp
ret
call   80582b0 <fchmod@plt+0xe0b0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8052620 <fchmod@plt+0x8420>
mov    %ebx,%ebp
sub    0x30(%esp),%ebp
add    %eax,%ebp
test   %eax,%eax
je     8052a58 <fchmod@plt+0x8858>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x34(%esp),%edi
cmpb   $0x2f,(%edi)
je     8052ae0 <fchmod@plt+0x88e0>
mov    %edi,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,%edx
mov    %eax,0xc(%esp)
lea    0x1(%ebp,%esi,1),%eax
add    %edx,%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8052b00 <fchmod@plt+0x8900>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049f50 <mempcpy@plt>
add    %eax,%esi
movb   $0x2f,(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
je     8052abd <fchmod@plt+0x88bd>
mov    0x34(%esp),%eax
mov    %esi,%ecx
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
sub    %eax,%ecx
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049f50 <mempcpy@plt>
movb   $0x0,(%eax)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8052a61 <fchmod@plt+0x8861>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8052a61 <fchmod@plt+0x8861>
jmp    8052ae0 <fchmod@plt+0x88e0>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8052ad6 <fchmod@plt+0x88d6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
jne    8052b3c <fchmod@plt+0x893c>
jmp    8052b51 <fchmod@plt+0x8951>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8052b60 <fchmod@plt+0x8960>
add    %eax,%esi
add    %eax,%ebp
sub    %eax,%ebx
je     8052b51 <fchmod@plt+0x8951>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8055d40 <fchmod@plt+0xbb40>
cmp    $0xffffffff,%eax
jne    8052b30 <fchmod@plt+0x8930>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
movl   $0x1c,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     8052bf6 <fchmod@plt+0x89f6>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    8052bef <fchmod@plt+0x89ef>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     8052be0 <fchmod@plt+0x89e0>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    8052bcd <fchmod@plt+0x89cd>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     8052be0 <fchmod@plt+0x89e0>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     8052bc0 <fchmod@plt+0x89c0>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    8052be8 <fchmod@plt+0x89e8>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    8052b98 <fchmod@plt+0x8998>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    8052bd6 <fchmod@plt+0x89d6>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    8052b8e <fchmod@plt+0x898e>
jmp    8052be8 <fchmod@plt+0x89e8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    8052c52 <fchmod@plt+0x8a52>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   804a100 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   8052c30 <fchmod@plt+0x8a30>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     8052ce6 <fchmod@plt+0x8ae6>
cmp    %eax,%edi
je     8052c9a <fchmod@plt+0x8a9a>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     8052cdf <fchmod@plt+0x8adf>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     8052cc0 <fchmod@plt+0x8ac0>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     8052d18 <fchmod@plt+0x8b18>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     8052cf5 <fchmod@plt+0x8af5>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    8052cf0 <fchmod@plt+0x8af0>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    8052cc8 <fchmod@plt+0x8ac8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     8052cc0 <fchmod@plt+0x8ac0>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    8052cc0 <fchmod@plt+0x8ac0>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x8061758,%edx
je     8052dc8 <fchmod@plt+0x8bc8>
flds   0x8(%edx)
flds   0x806176c
fxch   %st(1)
fucomi %st(1),%st
jbe    8052d88 <fchmod@plt+0x8b88>
flds   0x8061770
fucomip %st(1),%st
jbe    8052d90 <fchmod@plt+0x8b90>
flds   0xc(%edx)
flds   0x8061774
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    8052d98 <fchmod@plt+0x8b98>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     8052da0 <fchmod@plt+0x8ba0>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    8052da8 <fchmod@plt+0x8ba8>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     8052db0 <fchmod@plt+0x8bb0>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    8052db8 <fchmod@plt+0x8bb8>
jmp    8052dcd <fchmod@plt+0x8bcd>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    8052db8 <fchmod@plt+0x8bb8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    8052db8 <fchmod@plt+0x8bb8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    8052db8 <fchmod@plt+0x8bb8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8052db8 <fchmod@plt+0x8bb8>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8052db8 <fchmod@plt+0x8bb8>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8061758,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    8052e54 <fchmod@plt+0x8c54>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8052e48 <fchmod@plt+0x8c48>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    8052e07 <fchmod@plt+0x8c07>
jmp    8052e3a <fchmod@plt+0x8c3a>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     8052e38 <fchmod@plt+0x8c38>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   8052c30 <fchmod@plt+0x8a30>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    8052df8 <fchmod@plt+0x8bf8>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    8052e05 <fchmod@plt+0x8c05>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     8052e68 <fchmod@plt+0x8c68>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     8052de8 <fchmod@plt+0x8be8>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   8052c30 <fchmod@plt+0x8a30>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     8052eb2 <fchmod@plt+0x8cb2>
mov    0x24(%esi),%eax
test   %eax,%eax
je     8052eba <fchmod@plt+0x8cba>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     8052de8 <fchmod@plt+0x8be8>
jmp    8052e54 <fchmod@plt+0x8c54>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    8052e91 <fchmod@plt+0x8c91>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   8049c90 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    8052e86 <fchmod@plt+0x8c86>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    8052f56 <fchmod@plt+0x8d56>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     8052f4f <fchmod@plt+0x8d4f>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     8052f4a <fchmod@plt+0x8d4a>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    8052f40 <fchmod@plt+0x8d40>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     8052f28 <fchmod@plt+0x8d28>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    8052fa1 <fchmod@plt+0x8da1>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     8052f9a <fchmod@plt+0x8d9a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     8052f9a <fchmod@plt+0x8d9a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8052f90 <fchmod@plt+0x8d90>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     8052f78 <fchmod@plt+0x8d78>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     8052fac <fchmod@plt+0x8dac>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    805301e <fchmod@plt+0x8e1e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     8053017 <fchmod@plt+0x8e17>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     8053012 <fchmod@plt+0x8e12>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8053008 <fchmod@plt+0x8e08>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     8052ff0 <fchmod@plt+0x8df0>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x80616ea,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x8061702,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x8061734,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x8061778
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   804a0a0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806171a,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a0a0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   8052c30 <fchmod@plt+0x8a30>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    80530fa <fchmod@plt+0x8efa>
jmp    8053113 <fchmod@plt+0x8f13>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     8053122 <fchmod@plt+0x8f22>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    8053120 <fchmod@plt+0x8f20>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    80530f8 <fchmod@plt+0x8ef8>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     8053161 <fchmod@plt+0x8f61>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     8053157 <fchmod@plt+0x8f57>
jmp    8053167 <fchmod@plt+0x8f67>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    8053167 <fchmod@plt+0x8f67>
mov    (%edx),%eax
test   %eax,%eax
je     8053150 <fchmod@plt+0x8f50>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   804a100 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   8052c30 <fchmod@plt+0x8a30>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    8053197 <fchmod@plt+0x8f97>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     80531a2 <fchmod@plt+0x8fa2>
cmp    %esi,(%ecx)
jne    8053190 <fchmod@plt+0x8f90>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    80531bb <fchmod@plt+0x8fbb>
mov    0x4(%edi),%edx
jmp    80531ae <fchmod@plt+0x8fae>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    80531b7 <fchmod@plt+0x8fb7>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     80531a8 <fchmod@plt+0x8fa8>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    80531d0 <fchmod@plt+0x8fd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    8053228 <fchmod@plt+0x9028>
mov    (%edi),%edx
test   %edx,%edx
je     805321c <fchmod@plt+0x901c>
cmp    %eax,%ebx
jbe    8053228 <fchmod@plt+0x9028>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     805321c <fchmod@plt+0x901c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     8053228 <fchmod@plt+0x9028>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    8053208 <fchmod@plt+0x9008>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     80531ea <fchmod@plt+0x8fea>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    8053298 <fchmod@plt+0x9098>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805326b <fchmod@plt+0x906b>
jmp    8053282 <fchmod@plt+0x9082>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     8053298 <fchmod@plt+0x9098>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    8053268 <fchmod@plt+0x9068>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     8053254 <fchmod@plt+0x9054>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     80532e2 <fchmod@plt+0x90e2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    80532c8 <fchmod@plt+0x90c8>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x8052c10,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x8052c20,%eax
cmove  %eax,%esi
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8053458 <fchmod@plt+0x9258>
test   %ebx,%ebx
mov    $0x8061758,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   8052d20 <fchmod@plt+0x8b20>
test   %al,%al
je     8053441 <fchmod@plt+0x9241>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    80533d0 <fchmod@plt+0x91d0>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806177c
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    8053438 <fchmod@plt+0x9238>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    80533d2 <fchmod@plt+0x91d2>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   8052b80 <fchmod@plt+0x8980>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     805343a <fchmod@plt+0x923a>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     8053441 <fchmod@plt+0x9241>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804a1e0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8053441 <fchmod@plt+0x9241>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   8049a60 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805342c <fchmod@plt+0x922c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    80534d6 <fchmod@plt+0x92d6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     80534ce <fchmod@plt+0x92ce>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    8053492 <fchmod@plt+0x9292>
jmp    80534b6 <fchmod@plt+0x92b6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     80534a0 <fchmod@plt+0x92a0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    8053490 <fchmod@plt+0x9290>
test   %edx,%edx
je     80534c1 <fchmod@plt+0x92c1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     8053478 <fchmod@plt+0x9278>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     8053508 <fchmod@plt+0x9308>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    805357a <fchmod@plt+0x937a>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    8053541 <fchmod@plt+0x9341>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    805352a <fchmod@plt+0x932a>
jmp    8053539 <fchmod@plt+0x9339>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    8053528 <fchmod@plt+0x9328>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     8053518 <fchmod@plt+0x9318>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    8053552 <fchmod@plt+0x9352>
jmp    8053561 <fchmod@plt+0x9361>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    8053550 <fchmod@plt+0x9350>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049a60 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    8053541 <fchmod@plt+0x9341>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    805359a <fchmod@plt+0x939a>
jmp    80535a7 <fchmod@plt+0x93a7>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8053598 <fchmod@plt+0x9398>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     8053588 <fchmod@plt+0x9388>
jmp    805350b <fchmod@plt+0x930b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    8053620 <fchmod@plt+0x9420>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806177c
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    8053700 <fchmod@plt+0x9500>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    8053622 <fchmod@plt+0x9422>
fstp   %st(0)
call   8052b80 <fchmod@plt+0x8980>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     8053702 <fchmod@plt+0x9502>
cmp    %ebx,0x8(%esi)
je     80536f0 <fchmod@plt+0x94f0>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   804a1e0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8053702 <fchmod@plt+0x9502>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   8052dd0 <fchmod@plt+0x8bd0>
test   %al,%al
mov    %eax,%ebx
jne    8053710 <fchmod@plt+0x9510>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   8052dd0 <fchmod@plt+0x8bd0>
test   %al,%al
je     8053745 <fchmod@plt+0x9545>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   8052dd0 <fchmod@plt+0x8bd0>
test   %al,%al
je     8053745 <fchmod@plt+0x9545>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     80538d8 <fchmod@plt+0x96d8>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   8052c60 <fchmod@plt+0x8a60>
test   %eax,%eax
je     8053798 <fchmod@plt+0x9598>
test   %ebx,%ebx
je     8053818 <fchmod@plt+0x9618>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    80537d8 <fchmod@plt+0x95d8>
jmp    8053828 <fchmod@plt+0x9628>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     80538e0 <fchmod@plt+0x96e0>
mov    0x24(%esi),%eax
test   %eax,%eax
je     80538f4 <fchmod@plt+0x96f4>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   8052d20 <fchmod@plt+0x8b20>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    80537d0 <fchmod@plt+0x95d0>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    8053878 <fchmod@plt+0x9678>
fmulp  %st,%st(1)
jmp    805387a <fchmod@plt+0x967a>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x806177c
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805390a <fchmod@plt+0x970a>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   80535c0 <fchmod@plt+0x93c0>
test   %al,%al
je     805390c <fchmod@plt+0x970c>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   8052c60 <fchmod@plt+0x8a60>
test   %eax,%eax
je     80537d8 <fchmod@plt+0x95d8>
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    805378e <fchmod@plt+0x958e>
movl   $0x8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
jne    80537f7 <fchmod@plt+0x95f7>
jmp    805390c <fchmod@plt+0x970c>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    805378e <fchmod@plt+0x958e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8053750 <fchmod@plt+0x9550>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053750 <fchmod@plt+0x9550>
cmp    $0xffffffff,%eax
je     8053968 <fchmod@plt+0x9768>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805395e <fchmod@plt+0x975e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   8052c60 <fchmod@plt+0x8a60>
test   %eax,%eax
mov    %eax,%edi
je     8053aa8 <fchmod@plt+0x98a8>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    80539b8 <fchmod@plt+0x97b8>
jmp    80539c8 <fchmod@plt+0x97c8>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    80539b8 <fchmod@plt+0x97b8>
lea    0x14(%esi),%eax
call   8052d20 <fchmod@plt+0x8b20>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    80539b0 <fchmod@plt+0x97b0>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     8053ab0 <fchmod@plt+0x98b0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   80535c0 <fchmod@plt+0x93c0>
test   %al,%al
jne    80539b8 <fchmod@plt+0x97b8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    8053a8a <fchmod@plt+0x988a>
lea    0x0(%esi,%eiz,1),%esi
jmp    8053a99 <fchmod@plt+0x9899>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    8053a88 <fchmod@plt+0x9888>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    80539b8 <fchmod@plt+0x97b8>
nop
xor    %ebp,%ebp
jmp    80539b8 <fchmod@plt+0x97b8>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    8053a5f <fchmod@plt+0x985f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8059350 <fchmod@plt+0xf150>
mov    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805eb60 <fchmod@plt+0x14960>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805eb60 <fchmod@plt+0x14960>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%ebx
mov    0x4(%ecx),%eax
mov    0x8(%ecx),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
or     %eax,%edx
je     8053b70 <fchmod@plt+0x9970>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
jne    8053b69 <fchmod@plt+0x9969>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ecx),%eax
mov    %eax,0x8(%esp)
pop    %ebx
jmp    8055da0 <fchmod@plt+0xbba0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%ecx
xor    0x8(%esi),%ecx
xor    0x4(%esi),%edx
or     %edx,%ecx
je     8053bc8 <fchmod@plt+0x99c8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x10(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    8053bbf <fchmod@plt+0x99bf>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    8053bbf <fchmod@plt+0x99bf>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     8053c93 <fchmod@plt+0x9a93>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049fe0 <strrchr@plt>
test   %eax,%eax
je     8053c7f <fchmod@plt+0x9a7f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    8053c7f <fchmod@plt+0x9a7f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x80617b8,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    8053c7f <fchmod@plt+0x9a7f>
mov    $0x3,%ecx
mov    $0x80617c0,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    8053c7f <fchmod@plt+0x9a7f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80672a0
mov    %ebx,0x806777c
mov    %ebx,0x80672c0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80672a4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8061780,(%esp)
mov    %eax,0xc(%esp)
call   8049bd0 <fwrite@plt>
call   804a100 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
movl   $0x2,0x4(%esp)
lea    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   8056130 <fchmod@plt+0xbf30>
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
je     8053ff3 <fchmod@plt+0x9df3>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805a2d0 <fchmod@plt+0x100d0>
test   %eax,%eax
mov    %eax,%esi
je     8053ff3 <fchmod@plt+0x9df3>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80542f0 <fchmod@plt+0xa0f0>
cmp    %esi,%ebx
movl   $0x0,0x4(%ebp)
mov    %ebx,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
jae    8054350 <fchmod@plt+0xa150>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    8053dad <fchmod@plt+0x9bad>
mov    0x3c(%esp),%ebx
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x8061f20(,%edx,4),%edx
bt     %eax,%edx
jae    8053d98 <fchmod@plt+0x9b98>
movl   $0x1,0x40(%esp)
movsbl (%ebx),%edi
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
test   %edi,%edi
movb   $0x1,0x38(%esp)
jne    8053e42 <fchmod@plt+0x9c42>
call   804a100 <abort@plt>
mov    %ebp,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     80544fa <fchmod@plt+0xa2fa>
movb   $0x1,0x2c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     8054250 <fchmod@plt+0xa050>
cmp    $0xfffffffe,%eax
je     80542c0 <fchmod@plt+0xa0c0>
test   %eax,%eax
jne    80542b0 <fchmod@plt+0xa0b0>
mov    0x3c(%esp),%ebx
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%ebx)
jne    805451e <fchmod@plt+0xa31e>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8054547 <fchmod@plt+0xa347>
xor    %edi,%edi
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8053d86 <fchmod@plt+0x9b86>
test   %edi,%edi
movb   $0x0,0x2c(%esp)
movb   $0x1,0x38(%esp)
je     8053d93 <fchmod@plt+0x9b93>
mov    0x3c(%esp),%ebx
mov    0x40(%esp),%eax
movzbl 0x44(%esp),%edx
movb   $0x0,0x38(%esp)
add    %ebx,%eax
cmp    %eax,%esi
mov    %eax,0x3c(%esp)
ja     8053d50 <fchmod@plt+0x9b50>
test   %dl,%dl
je     8054350 <fchmod@plt+0xa150>
mov    %edi,(%esp)
call   8049eb0 <iswalnum@plt>
test   %eax,%eax
sete   0x1f(%esp)
mov    0x18(%esp),%eax
lea    0x68(%esp),%edi
movb   $0x0,0x64(%esp)
cmpb   $0x0,0x64(%esp)
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
mov    %esi,0x14(%esp)
jne    8054089 <fchmod@plt+0x9e89>
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054218 <fchmod@plt+0xa018>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
mov    0x80(%esp),%edx
movb   $0x1,0x70(%esp)
test   %edx,%edx
jne    805404a <fchmod@plt+0x9e4a>
movzbl 0x38(%esp),%ebx
mov    0x14(%esp),%esi
test   %bl,%bl
jne    80542e0 <fchmod@plt+0xa0e0>
cmpb   $0x0,0x2c(%esp)
jne    8054411 <fchmod@plt+0xa211>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80543fc <fchmod@plt+0xa1fc>
movl   $0x1,0x40(%esp)
movsbl (%edx),%edi
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
movb   $0x1,0x38(%esp)
test   %bl,%bl
je     8053f7b <fchmod@plt+0x9d7b>
test   %edi,%edi
je     8053f90 <fchmod@plt+0x9d90>
cmpb   $0x0,0x44(%esp)
je     8053f90 <fchmod@plt+0x9d90>
mov    %edi,(%esp)
call   8049eb0 <iswalnum@plt>
test   %eax,%eax
jne    8053f9b <fchmod@plt+0x9d9b>
xchg   %ax,%ax
cmpb   $0x0,0x1f(%esp)
jne    80544f0 <fchmod@plt+0xa2f0>
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
movzbl (%esi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x8061f20(,%edx,4),%edx
bt     %eax,%edx
jae    8054360 <fchmod@plt+0xa160>
movl   $0x1,0x40(%esp)
movsbl (%esi),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    805402a <fchmod@plt+0x9e2a>
xor    %ebx,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    8054542 <fchmod@plt+0xa342>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    8053cf8 <fchmod@plt+0x9af8>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
movb   $0x1,0x70(%esp)
movzbl 0x38(%esp),%ebx
test   %bl,%bl
je     8054118 <fchmod@plt+0x9f18>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    8054160 <fchmod@plt+0x9f60>
mov    0x40(%esp),%eax
add    %eax,0x3c(%esp)
mov    0x78(%esp),%eax
add    %eax,0x74(%esp)
cmpb   $0x0,0x64(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     8053ed0 <fchmod@plt+0x9cd0>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     8054038 <fchmod@plt+0x9e38>
cmp    $0xfffffffe,%eax
je     8054270 <fchmod@plt+0xa070>
test   %eax,%eax
jne    80540f7 <fchmod@plt+0x9ef7>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805451e <fchmod@plt+0xa31e>
mov    0x80(%esp),%esi
test   %esi,%esi
jne    8054547 <fchmod@plt+0xa347>
mov    %edi,(%esp)
movb   $0x1,0x7c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8053f06 <fchmod@plt+0x9d06>
movb   $0x0,0x64(%esp)
jmp    8053f06 <fchmod@plt+0x9d06>
xchg   %ax,%ax
cmpb   $0x0,0x2c(%esp)
jne    805418d <fchmod@plt+0x9f8d>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054178 <fchmod@plt+0x9f78>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     8054064 <fchmod@plt+0x9e64>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8054064 <fchmod@plt+0x9e64>
jmp    8053d93 <fchmod@plt+0x9b93>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     80544fa <fchmod@plt+0xa2fa>
movb   $0x1,0x2c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     8054238 <fchmod@plt+0xa038>
cmp    $0xfffffffe,%eax
je     8054290 <fchmod@plt+0xa090>
test   %eax,%eax
jne    80541f1 <fchmod@plt+0x9ff1>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805451e <fchmod@plt+0xa31e>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8054547 <fchmod@plt+0xa347>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8054153 <fchmod@plt+0x9f53>
movb   $0x0,0x2c(%esp)
jmp    8054153 <fchmod@plt+0x9f53>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     80544fa <fchmod@plt+0xa2fa>
movb   $0x1,0x64(%esp)
jmp    8054089 <fchmod@plt+0x9e89>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
jmp    8054153 <fchmod@plt+0x9f53>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    0x3c(%esp),%ebx
jmp    8053e46 <fchmod@plt+0x9c46>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    8054045 <fchmod@plt+0x9e45>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8054153 <fchmod@plt+0x9f53>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edi
jmp    8053e1b <fchmod@plt+0x9c1b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8053e46 <fchmod@plt+0x9c46>
xchg   %ax,%ax
mov    0x48(%esp),%edi
movzbl 0x44(%esp),%ebx
jmp    8053f73 <fchmod@plt+0x9d73>
xchg   %ax,%ax
cmp    %esi,%ebx
mov    $0x1,%edi
jae    8054312 <fchmod@plt+0xa112>
call   804a1c0 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edi
shr    $0x3,%di
xor    $0x1,%edi
and    $0x1,%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movzbl (%esi,%eax,1),%ebx
test   %bl,%bl
je     8054333 <fchmod@plt+0xa133>
call   804a1c0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%ebx,2)
jne    805433d <fchmod@plt+0xa13d>
mov    %edi,%eax
test   %al,%al
jne    80544f0 <fchmod@plt+0xa2f0>
cmpb   $0x0,(%esi)
je     8053ff3 <fchmod@plt+0x9df3>
lea    0x1(%esi),%ebx
jmp    8053cf8 <fchmod@plt+0x9af8>
xchg   %ax,%ax
movb   $0x1,0x1f(%esp)
jmp    8053e79 <fchmod@plt+0x9c79>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     80544fa <fchmod@plt+0xa2fa>
movb   $0x1,0x2c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     8054022 <fchmod@plt+0x9e22>
cmp    $0xfffffffe,%eax
je     80544a1 <fchmod@plt+0xa2a1>
test   %eax,%eax
jne    80543dd <fchmod@plt+0xa1dd>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805451e <fchmod@plt+0xa31e>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    8054547 <fchmod@plt+0xa347>
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8053fe6 <fchmod@plt+0x9de6>
movb   $0x0,0x2c(%esp)
jmp    8053fe6 <fchmod@plt+0x9de6>
mov    %ebp,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     80544fa <fchmod@plt+0xa2fa>
movb   $0x1,0x2c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     80544bc <fchmod@plt+0xa2bc>
cmp    $0xfffffffe,%eax
je     80544d2 <fchmod@plt+0xa2d2>
test   %eax,%eax
jne    8054479 <fchmod@plt+0xa279>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805451e <fchmod@plt+0xa31e>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
jne    8054547 <fchmod@plt+0xa347>
xor    %edi,%edi
jmp    805447d <fchmod@plt+0xa27d>
mov    0x48(%esp),%edi
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8053f6e <fchmod@plt+0x9d6e>
movb   $0x0,0x2c(%esp)
jmp    8053f6e <fchmod@plt+0x9d6e>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    8053cf8 <fchmod@plt+0x9af8>
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
jmp    8053f6e <fchmod@plt+0x9d6e>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8053f6e <fchmod@plt+0x9d6e>
mov    $0x1,%ebx
jmp    8053ff5 <fchmod@plt+0x9df5>
movl   $0x8061820,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617d2,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x8061820,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617e9,(%esp)
call   804a1b0 <__assert_fail@plt>
call   8049b10 <__stack_chk_fail@plt>
movl   $0x8061820,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x8061800,(%esp)
call   804a1b0 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %esi,0x4(%esp)
call   8049af0 <dcgettext@plt>
cmp    %esi,%eax
mov    %eax,%ebx
je     80545a3 <fchmod@plt+0xa3a3>
mov    %esi,%edx
call   8053cc0 <fchmod@plt+0x9ac0>
test   %al,%al
je     80545b0 <fchmod@plt+0xa3b0>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049dc0 <strlen@plt>
lea    0x4(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x8061812,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
mov    %edi,%ebx
call   804a1f0 <__sprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,%ebp
mov    %eax,0x18(%esp)
call   8059380 <fchmod@plt+0xf180>
movl   $0x806181a,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8059010 <fchmod@plt+0xee10>
test   %eax,%eax
jne    8054728 <fchmod@plt+0xa528>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     80547e8 <fchmod@plt+0xa5e8>
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
jne    80546b8 <fchmod@plt+0xa4b8>
cmp    %ebx,%esi
jne    8054808 <fchmod@plt+0xa608>
cmp    %ebx,%edi
xchg   %ax,%ax
jne    80546a0 <fchmod@plt+0xa4a0>
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8054692 <fchmod@plt+0xa492>
mov    %edi,(%esp)
call   8049a60 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
call   8053cc0 <fchmod@plt+0x9ac0>
test   %al,%al
jne    8054700 <fchmod@plt+0xa500>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80546e2 <fchmod@plt+0xa4e2>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
call   8053cc0 <fchmod@plt+0x9ac0>
test   %al,%al
jne    8054700 <fchmod@plt+0xa500>
test   %ebp,%ebp
je     8054820 <fchmod@plt+0xa620>
mov    0x18(%esp),%eax
mov    %ebp,%edx
call   8053cc0 <fchmod@plt+0x9ac0>
test   %al,%al
je     8054820 <fchmod@plt+0xa620>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805470c <fchmod@plt+0xa50c>
mov    %esi,(%esp)
call   8049a60 <free@plt>
test   %edi,%edi
mov    0x18(%esp),%eax
je     8054694 <fchmod@plt+0xa494>
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x8(%esp)
movl   $0x806181a,0x4(%esp)
mov    %ebx,(%esp)
call   8058390 <fchmod@plt+0xe190>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049dc0 <strlen@plt>
mov    %eax,%ebp
lea    0xb(%eax),%eax
mov    %eax,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049a70 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    $0x5449,%ecx
add    %edx,%ebp
mov    %cx,0x8(%ebp)
movl   $0x52542f2f,0x0(%ebp)
movl   $0x4c534e41,0x4(%ebp)
movb   $0x0,0xa(%ebp)
mov    %edx,0x8(%esp)
movl   $0x806181a,0x4(%esp)
mov    %ebx,(%esp)
call   8058390 <fchmod@plt+0xe190>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   8049a60 <free@plt>
test   %ebp,%ebp
je     80548a0 <fchmod@plt+0xa6a0>
movl   $0x3f,0x4(%esp)
mov    %ebp,(%esp)
call   8049d80 <strchr@plt>
test   %eax,%eax
je     805488f <fchmod@plt+0xa68f>
mov    %ebp,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   8049a60 <free@plt>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
jne    805466c <fchmod@plt+0xa46c>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     80548a8 <fchmod@plt+0xa6a8>
mov    %ebx,%edi
mov    %ebp,%ebx
movl   $0x0,0x1c(%esp)
jmp    805466c <fchmod@plt+0xa46c>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     805468c <fchmod@plt+0xa48c>
mov    %esi,(%esp)
call   8049a60 <free@plt>
jmp    805468c <fchmod@plt+0xa48c>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049dc0 <strlen@plt>
lea    0x4(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %ebx,0x14(%esp)
movl   $0x8061812,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   804a1f0 <__sprintf_chk@plt>
test   %esi,%esi
je     805487c <fchmod@plt+0xa67c>
mov    %esi,(%esp)
call   8049a60 <free@plt>
test   %edi,%edi
mov    %ebp,%eax
je     8054694 <fchmod@plt+0xa494>
mov    %ebp,0x18(%esp)
jmp    8054714 <fchmod@plt+0xa514>
test   %esi,%esi
je     80548b7 <fchmod@plt+0xa6b7>
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %esi,%ebx
jmp    805466c <fchmod@plt+0xa46c>
mov    %esi,%ebx
jmp    805465e <fchmod@plt+0xa45e>
nop
mov    %ebp,0x1c(%esp)
mov    %ebp,%edi
mov    0x40(%esp),%ebx
jmp    805466c <fchmod@plt+0xa46c>
mov    %ebp,%ebx
jmp    80547f0 <fchmod@plt+0xa5f0>
xchg   %ax,%ax
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     80548e1 <fchmod@plt+0xa6e1>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8054920 <fchmod@plt+0xa720>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8059380 <fchmod@plt+0xf180>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    8054988 <fchmod@plt+0xa788>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8054970 <fchmod@plt+0xa770>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x2d,0x3(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x38,0x4(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x0,0x5(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x60,(%esi)
mov    $0x8061840,%eax
mov    $0x8061833,%edx
cmovne %edx,%eax
jmp    8054918 <fchmod@plt+0xa718>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806183a,%eax
cmp    $0x7,%edi
mov    $0x8061fec,%edx
cmovne %edx,%eax
jmp    8054918 <fchmod@plt+0xa718>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    8054970 <fchmod@plt+0xa770>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x31,0x2(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x38,0x3(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x30,0x4(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x33,0x5(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x30,0x6(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x0,0x7(%eax)
jne    8054970 <fchmod@plt+0xa770>
cmpb   $0x60,(%esi)
mov    $0x806183c,%eax
mov    $0x8061837,%edx
cmovne %edx,%eax
jmp    8054918 <fchmod@plt+0xa718>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     80552b8 <fchmod@plt+0xb0b8>
mov    0x94(%esp),%eax
jmp    *0x8061880(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     80550c0 <fchmod@plt+0xaec0>
test   %al,%al
je     80550d3 <fchmod@plt+0xaed3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     80550a8 <fchmod@plt+0xaea8>
cmpb   $0x0,0x58(%esp)
je     80550a8 <fchmod@plt+0xaea8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     80550a8 <fchmod@plt+0xaea8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ac0 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    8055140 <fchmod@plt+0xaf40>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8054e58 <fchmod@plt+0xac58>
movzbl %bl,%eax
jmp    *0x80618a4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     8054c98 <fchmod@plt+0xaa98>
cmpl   $0x3,0x94(%esp)
jne    8054bf8 <fchmod@plt+0xa9f8>
testb  $0x4,0x98(%esp)
je     8054bf8 <fchmod@plt+0xa9f8>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    8054bf8 <fchmod@plt+0xa9f8>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    8054bf8 <fchmod@plt+0xa9f8>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     8054bf8 <fchmod@plt+0xa9f8>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     8054bf8 <fchmod@plt+0xa9f8>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmp    %edi,%ebp
jae    8054bbe <fchmod@plt+0xa9be>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    8054bce <fchmod@plt+0xa9ce>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8054bde <fchmod@plt+0xa9de>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    8054bee <fchmod@plt+0xa9ee>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     8054c06 <fchmod@plt+0xaa06>
cmpb   $0x0,0x5a(%esp)
jne    8054c2b <fchmod@plt+0xaa2b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     8054c2b <fchmod@plt+0xaa2b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8054c32 <fchmod@plt+0xaa32>
cmpb   $0x0,0x24(%esp)
je     8054c48 <fchmod@plt+0xaa48>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmp    %edi,%ebp
jae    8054c45 <fchmod@plt+0xaa45>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    8054c56 <fchmod@plt+0xaa56>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    8054a98 <fchmod@plt+0xa898>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     80552a8 <fchmod@plt+0xb0a8>
test   %al,%al
jne    8054bf8 <fchmod@plt+0xa9f8>
test   %esi,%esi
jne    8054bf8 <fchmod@plt+0xa9f8>
cmpl   $0x2,0x94(%esp)
jne    8054bf8 <fchmod@plt+0xa9f8>
nop
cmpb   $0x0,0x2f(%esp)
je     8054bf8 <fchmod@plt+0xa9f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   80549e0 <fchmod@plt+0xa7e0>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    80553d2 <fchmod@plt+0xb1d2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     805531b <fchmod@plt+0xb11b>
cmpb   $0x0,0x58(%esp)
je     8054bf8 <fchmod@plt+0xa9f8>
mov    %eax,%ebx
jmp    8054c32 <fchmod@plt+0xaa32>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8054d23 <fchmod@plt+0xab23>
nop
mov    $0x66,%eax
jmp    8054d23 <fchmod@plt+0xab23>
nop
mov    $0x76,%eax
jmp    8054d23 <fchmod@plt+0xab23>
nop
mov    $0x6e,%eax
jmp    8054d15 <fchmod@plt+0xab15>
nop
mov    $0x74,%eax
jmp    8054d15 <fchmod@plt+0xab15>
nop
cmpb   $0x0,0x58(%esp)
je     8055290 <fchmod@plt+0xb090>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmp    %edi,%ebp
jae    8054d82 <fchmod@plt+0xab82>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    8054dc8 <fchmod@plt+0xabc8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     8054dc8 <fchmod@plt+0xabc8>
cmp    %eax,%edi
ja     8055330 <fchmod@plt+0xb130>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8054dbe <fchmod@plt+0xabbe>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8054c06 <fchmod@plt+0xaa06>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    8054d23 <fchmod@plt+0xab23>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     8054dfe <fchmod@plt+0xabfe>
cmpb   $0x0,0x2f(%esp)
je     8054dfe <fchmod@plt+0xabfe>
test   %dl,%dl
jne    8054c48 <fchmod@plt+0xaa48>
mov    %ebx,%eax
jmp    8054d15 <fchmod@plt+0xab15>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    8054bf8 <fchmod@plt+0xa9f8>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmp    %edi,%ebp
jae    8054e2d <fchmod@plt+0xac2d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    8054e3d <fchmod@plt+0xac3d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8054e4d <fchmod@plt+0xac4d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    8054bf8 <fchmod@plt+0xa9f8>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    8055150 <fchmod@plt+0xaf50>
call   804a1c0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     8054bf8 <fchmod@plt+0xa9f8>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    8054f04 <fchmod@plt+0xad04>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmp    %edi,%ebp
jae    8054eb3 <fchmod@plt+0xacb3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    8054ec6 <fchmod@plt+0xacc6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    8054edc <fchmod@plt+0xacdc>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    8054c4b <fchmod@plt+0xaa4b>
cmp    %edi,%ebp
jae    8054ef9 <fchmod@plt+0xacf9>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    8054ea0 <fchmod@plt+0xaca0>
cmpb   $0x0,0x24(%esp)
je     8054ee5 <fchmod@plt+0xace5>
cmp    %edi,%ebp
jae    8054f17 <fchmod@plt+0xad17>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    8054ee5 <fchmod@plt+0xace5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80553d7 <fchmod@plt+0xb1d7>
test   %edi,%edi
je     80552dd <fchmod@plt+0xb0dd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x806183a,0x3c(%esp)
movb   $0x22,(%eax)
jmp    8054a78 <fchmod@plt+0xa878>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x806183a,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8054a78 <fchmod@plt+0xa878>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
lea    0x0(%esi,%eiz,1),%esi
je     8054fec <fchmod@plt+0xadec>
mov    0x94(%esp),%edx
mov    $0x8061844,%eax
call   80548f0 <fchmod@plt+0xa6f0>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x8061fec,%eax
call   80548f0 <fchmod@plt+0xa6f0>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    805501a <fchmod@plt+0xae1a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805501a <fchmod@plt+0xae1a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    805500f <fchmod@plt+0xae0f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8055008 <fchmod@plt+0xae08>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8061fec,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8054a78 <fchmod@plt+0xa878>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80553f3 <fchmod@plt+0xb1f3>
test   %edi,%edi
je     80552fc <fchmod@plt+0xb0fc>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8061fec,0x3c(%esp)
movb   $0x27,(%eax)
jmp    8054a78 <fchmod@plt+0xa878>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    8054b30 <fchmod@plt+0xa930>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    8054ab8 <fchmod@plt+0xa8b8>
test   %ebp,%ebp
jne    80550ec <fchmod@plt+0xaeec>
cmpl   $0x2,0x94(%esp)
jne    80550ec <fchmod@plt+0xaeec>
cmpb   $0x0,0x2f(%esp)
jne    8054ca8 <fchmod@plt+0xaaa8>
cmpb   $0x0,0x2f(%esp)
jne    8055122 <fchmod@plt+0xaf22>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     8055122 <fchmod@plt+0xaf22>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8055122 <fchmod@plt+0xaf22>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    8055117 <fchmod@plt+0xaf17>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8055110 <fchmod@plt+0xaf10>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    8054cf2 <fchmod@plt+0xaaf2>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    8054cf2 <fchmod@plt+0xaaf2>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8054b30 <fchmod@plt+0xa930>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     80552bd <fchmod@plt+0xb0bd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805533d <fchmod@plt+0xb13d>
cmp    $0xffffffff,%eax
je     8055358 <fchmod@plt+0xb158>
cmp    $0xfffffffe,%eax
je     8055373 <fchmod@plt+0xb173>
cmpb   $0x0,0x2f(%esp)
je     805521f <fchmod@plt+0xb01f>
cmpl   $0x2,0x94(%esp)
jne    805521f <fchmod@plt+0xb01f>
cmp    $0x1,%eax
je     805521f <fchmod@plt+0xb01f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8055218 <fchmod@plt+0xb018>
movzbl %al,%eax
jmp    *0x8061aa0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    8055200 <fchmod@plt+0xb000>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049ba0 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8055191 <fchmod@plt+0xaf91>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    8054e83 <fchmod@plt+0xac83>
and    0x58(%esp),%dl
jmp    8054e8d <fchmod@plt+0xac8d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    8054ca8 <fchmod@plt+0xaaa8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     8054bf8 <fchmod@plt+0xa9f8>
add    $0x1,%esi
jmp    8054a98 <fchmod@plt+0xa898>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8054c79 <fchmod@plt+0xaa79>
call   804a100 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    805516e <fchmod@plt+0xaf6e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x806183a,0x3c(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8061fec,0x3c(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
cmpb   $0x0,0x2f(%esp)
je     8054d23 <fchmod@plt+0xab23>
jmp    8054ca8 <fchmod@plt+0xaaa8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    8054dae <fchmod@plt+0xabae>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8055265 <fchmod@plt+0xb065>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8055265 <fchmod@plt+0xb065>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    80553c8 <fchmod@plt+0xb1c8>
cmpb   $0x0,(%eax)
je     80553c8 <fchmod@plt+0xb1c8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    80553b6 <fchmod@plt+0xb1b6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     80553c0 <fchmod@plt+0xb1c0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     80553b0 <fchmod@plt+0xb1b0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    8055265 <fchmod@plt+0xb065>
call   8049b10 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x806183a,0x3c(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8061fec,0x3c(%esp)
jmp    8054a78 <fchmod@plt+0xa878>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049ed0 <__errno_location@plt>
test   %edi,%edi
mov    0x8067290,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     805559c <fchmod@plt+0xb39c>
cmp    0x806729c,%edi
jb     80554a8 <fchmod@plt+0xb2a8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     80555a1 <fchmod@plt+0xb3a1>
cmp    $0x8067294,%esi
lea    0x0(,%ebp,8),%eax
je     8055570 <fchmod@plt+0xb370>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80580b0 <fchmod@plt+0xdeb0>
mov    %eax,%esi
mov    %eax,0x8067290
mov    0x806729c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e80 <memset@plt>
mov    %ebp,0x806729c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80549e0 <fchmod@plt+0xa7e0>
cmp    %eax,%ebp
ja     8055557 <fchmod@plt+0xb357>
lea    0x1(%eax),%ebp
cmp    $0x8067780,%esi
mov    %ebp,(%edi)
je     8055512 <fchmod@plt+0xb312>
mov    %esi,(%esp)
call   8049a60 <free@plt>
mov    %ebp,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80549e0 <fchmod@plt+0xa7e0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80580b0 <fchmod@plt+0xdeb0>
mov    0x8067298,%edx
mov    %eax,%esi
mov    %eax,0x8067290
mov    0x8067294,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805547f <fchmod@plt+0xb27f>
call   804a100 <abort@plt>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049ed0 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8067880,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8058250 <fchmod@plt+0xe050>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8067880,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8055610 <fchmod@plt+0xb410>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8067880,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8067880,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8067880,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8067880,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     80556c3 <fchmod@plt+0xb4c3>
test   %ecx,%ecx
je     80556c3 <fchmod@plt+0xb4c3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   804a100 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8067880,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   80549e0 <fchmod@plt+0xa7e0>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8067880,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   80549e0 <fchmod@plt+0xa7e0>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   80549e0 <fchmod@plt+0xa7e0>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     80557f8 <fchmod@plt+0xb5f8>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8055730 <fchmod@plt+0xb530>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x806729c,%edi
mov    0x8067290,%esi
cmp    $0x1,%edi
jbe    8055873 <fchmod@plt+0xb673>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmp    %edi,%ebx
jne    8055860 <fchmod@plt+0xb660>
mov    0x4(%esi),%eax
cmp    $0x8067780,%eax
je     8055899 <fchmod@plt+0xb699>
mov    %eax,(%esp)
call   8049a60 <free@plt>
movl   $0x100,0x8067294
00
movl   $0x8067780,0x8067298
08
cmp    $0x8067294,%esi
je     80558b3 <fchmod@plt+0xb6b3>
mov    %esi,(%esp)
call   8049a60 <free@plt>
movl   $0x8067294,0x8067290
08
movl   $0x1,0x806729c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8067880,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8067880,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8067880,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8067880,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   80548c0 <fchmod@plt+0xa6c0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8055410 <fchmod@plt+0xb210>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   80548c0 <fchmod@plt+0xa6c0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8055410 <fchmod@plt+0xb210>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8055950 <fchmod@plt+0xb750>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8055980 <fchmod@plt+0xb780>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8067880,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8067884,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8067888,%eax
mov    %eax,0x18(%esp)
mov    0x806788c,%eax
mov    %eax,0x1c(%esp)
mov    0x8067890,%eax
mov    %eax,0x20(%esp)
mov    0x8067894,%eax
mov    %eax,0x24(%esp)
mov    0x8067898,%eax
mov    %eax,0x28(%esp)
mov    0x806789c,%eax
mov    %eax,0x2c(%esp)
mov    0x80678a0,%eax
mov    %eax,0x30(%esp)
mov    0x80678a4,%eax
mov    %eax,0x34(%esp)
mov    0x80678a8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x80678ac,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   8055410 <fchmod@plt+0xb210>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8055a10 <fchmod@plt+0xb810>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8055a10 <fchmod@plt+0xb810>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8055a10 <fchmod@plt+0xb810>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8067880,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8067884,%eax
mov    %eax,0x14(%esp)
mov    0x8067888,%eax
mov    %eax,0x18(%esp)
mov    0x806788c,%eax
mov    %eax,0x1c(%esp)
mov    0x8067890,%eax
mov    %eax,0x20(%esp)
mov    0x8067894,%eax
mov    %eax,0x24(%esp)
mov    0x8067898,%eax
mov    %eax,0x28(%esp)
mov    0x806789c,%eax
mov    %eax,0x2c(%esp)
mov    0x80678a0,%eax
mov    %eax,0x30(%esp)
mov    0x80678a4,%eax
mov    %eax,0x34(%esp)
mov    0x80678a8,%eax
mov    %eax,0x38(%esp)
mov    0x80678ac,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8055690 <fchmod@plt+0xb490>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8055410 <fchmod@plt+0xb210>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8055b50 <fchmod@plt+0xb950>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8055b50 <fchmod@plt+0xb950>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8055b50 <fchmod@plt+0xb950>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8067260,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8067260,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8067260,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8067260,0x4(%esp)
jmp    8055410 <fchmod@plt+0xb210>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049e20 <write@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8055d90 <fchmod@plt+0xbb90>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     8055d58 <fchmod@plt+0xbb58>
cmp    $0x16,%edx
jne    8055d90 <fchmod@plt+0xbb90>
cmp    $0x7fffe000,%ebx
jbe    8055d90 <fchmod@plt+0xbb90>
mov    $0x7fffe000,%ebx
jmp    8055d58 <fchmod@plt+0xbb58>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   80525c0 <fchmod@plt+0x83c0>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8052620 <fchmod@plt+0x8420>
mov    %esi,(%esp)
mov    %eax,%ebp
call   8052620 <fchmod@plt+0x8420>
cmp    %eax,%ebp
je     8055df8 <fchmod@plt+0xbbf8>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
jne    8055de4 <fchmod@plt+0xbbe4>
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   80524e0 <fchmod@plt+0x82e0>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   80524e0 <fchmod@plt+0x82e0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
je     8055e6d <fchmod@plt+0xbc6d>
call   8049ed0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8061635,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
jne    8055ec8 <fchmod@plt+0xbcc8>
mov    0x68(%esp),%ecx
xor    %edi,%edi
mov    0x6c(%esp),%eax
xor    0xcc(%esp),%eax
xor    0xc8(%esp),%ecx
or     %ecx,%eax
je     8055ef0 <fchmod@plt+0xbcf0>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    %esi,(%esp)
call   8049a60 <free@plt>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8061635,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    8055e89 <fchmod@plt+0xbc89>
lea    0x0(%esi),%esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
xor    0x74(%esp),%eax
xor    0x70(%esp),%edx
or     %eax,%edx
sete   %al
mov    %eax,%edi
jmp    8055ea5 <fchmod@plt+0xbca5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
test   %eax,%eax
je     8056032 <fchmod@plt+0xbe32>
movl   $0x200,(%esp)
mov    $0x200,%esi
call   8058040 <fchmod@plt+0xde40>
mov    %eax,0x14(%esp)
call   8049ed0 <__errno_location@plt>
movl   $0x0,0x10(%esp)
mov    %eax,%edi
jmp    8055f57 <fchmod@plt+0xbd57>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x13(%eax,%edx,1)
jne    8055f8f <fchmod@plt+0xbd8f>
mov    0x40(%esp),%eax
movl   $0x0,(%edi)
mov    %eax,(%esp)
call   804a080 <readdir64@plt>
test   %eax,%eax
je     8056018 <fchmod@plt+0xbe18>
xor    %edx,%edx
cmpb   $0x2e,0x13(%eax)
lea    0x13(%eax),%ebp
jne    8055f50 <fchmod@plt+0xbd50>
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
add    $0x1,%edx
cmpb   $0x0,0x13(%eax,%edx,1)
je     8055f57 <fchmod@plt+0xbd57>
mov    %ebp,(%esp)
call   8049dc0 <strlen@plt>
mov    0x10(%esp),%edx
lea    0x1(%eax),%ecx
add    %ecx,%edx
jb     8056044 <fchmod@plt+0xbe44>
cmp    %esi,%edx
jae    8055fb2 <fchmod@plt+0xbdb2>
jmp    8055fe8 <fchmod@plt+0xbde8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
lea    (%esi,%esi,1),%ebx
cmp    %ebx,%esi
ja     8056044 <fchmod@plt+0xbe44>
cmp    %ebx,%edx
nop
jae    8055fb0 <fchmod@plt+0xbdb0>
mov    0x14(%esp),%eax
mov    %ebx,%esi
mov    %ebx,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   80580b0 <fchmod@plt+0xdeb0>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x10(%esp),%eax
add    0x14(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   8049a70 <memcpy@plt>
mov    0x18(%esp),%edx
mov    %edx,0x10(%esp)
jmp    8055f57 <fchmod@plt+0xbd57>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x10(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
mov    (%edi),%ebx
test   %ebx,%ebx
jne    8056036 <fchmod@plt+0xbe36>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805602a <fchmod@plt+0xbe2a>
mov    %eax,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
mov    %ebx,(%edi)
jmp    805602a <fchmod@plt+0xbe2a>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   8055f10 <fchmod@plt+0xbd10>
test   %ebx,%ebx
mov    %eax,%esi
je     8056080 <fchmod@plt+0xbe80>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   804a170 <closedir@plt>
test   %eax,%eax
jne    8056090 <fchmod@plt+0xbe90>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049a60 <free@plt>
mov    %edi,(%esi)
jmp    8056074 <fchmod@plt+0xbe74>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052440 <fchmod@plt+0x8240>
add    $0x1c,%esp
jmp    8056050 <fchmod@plt+0xbe50>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a020 <fdopendir@plt>
add    $0x1c,%esp
jmp    8056050 <fchmod@plt+0xbe50>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   8049ee0 <memchr@plt>
test   %eax,%eax
je     8056120 <fchmod@plt+0xbf20>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049ec0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80566e5 <fchmod@plt+0xc4e5>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8056410 <fchmod@plt+0xc210>
mov    0x84(%esp),%ebx
test   %ebx,%ebx
jne    80564c8 <fchmod@plt+0xc2c8>
mov    0x18(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    %esi,0x34(%esp)
call   8049dc0 <strlen@plt>
mov    %esi,%edx
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%esi,%eax,1),%ebp
cmp    %ebp,%esi
mov    %ebp,0x20(%esp)
jb     8056254 <fchmod@plt+0xc054>
jmp    8056335 <fchmod@plt+0xc135>
lea    0x0(%esi),%esi
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8056358 <fchmod@plt+0xc158>
movl   $0x1,0x38(%esp)
movsbl (%edx),%eax
mov    $0x1,%esi
mov    0x20(%esp),%ebp
mov    0x34(%esp),%edi
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
test   %ebx,%ebx
movb   $0x1,0x30(%esp)
je     80562f5 <fchmod@plt+0xc0f5>
cmp    $0x1,%ebx
je     8056378 <fchmod@plt+0xc178>
cmp    $0x2,%ebx
jne    80563b0 <fchmod@plt+0xc1b0>
cmpb   $0x0,0x3c(%esp)
je     80563b0 <fchmod@plt+0xc1b0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049cf0 <iswspace@plt>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebx
lea    0x0(%esi,%eiz,1),%esi
lea    (%edi,%esi,1),%edx
cmp    %ebp,%edx
mov    %edx,0x34(%esp)
movb   $0x0,0x30(%esp)
jae    805632c <fchmod@plt+0xc12c>
cmpb   $0x0,0x24(%esp)
lea    0x28(%esp),%edi
je     80561c0 <fchmod@plt+0xbfc0>
mov    0x34(%esp),%eax
mov    %edi,0xc(%esp)
sub    %eax,%ebp
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     80563c0 <fchmod@plt+0xc1c0>
cmp    $0xfffffffe,%eax
je     80563f0 <fchmod@plt+0xc1f0>
test   %eax,%eax
jne    80563e0 <fchmod@plt+0xc1e0>
mov    0x34(%esp),%ecx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ecx)
jne    80566ea <fchmod@plt+0xc4ea>
mov    0x40(%esp),%edx
test   %edx,%edx
jne    80566c1 <fchmod@plt+0xc4c1>
mov    %edi,(%esp)
mov    %ecx,0x14(%esp)
movb   $0x1,0x3c(%esp)
call   8049a80 <mbsinit@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     80562de <fchmod@plt+0xc0de>
movb   $0x0,0x24(%esp)
test   %ebx,%ebx
mov    0x20(%esp),%ebp
mov    %ecx,%edi
mov    0x38(%esp),%esi
movb   $0x1,0x30(%esp)
jne    8056209 <fchmod@plt+0xc009>
cmpb   $0x0,0x3c(%esp)
mov    $0x1,%ebx
je     8056240 <fchmod@plt+0xc040>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049cf0 <iswspace@plt>
lea    (%edi,%esi,1),%edx
mov    %edx,0x34(%esp)
movb   $0x0,0x30(%esp)
test   %eax,%eax
sete   %bl
cmp    %ebp,%edx
jb     8056254 <fchmod@plt+0xc054>
cmp    $0x2,%ebx
je     805667d <fchmod@plt+0xc47d>
mov    0x5c(%esp),%esi
xor    %gs:0x14,%esi
mov    0x18(%esp),%eax
jne    80566bc <fchmod@plt+0xc4bc>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x28(%esp),%edi
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8056698 <fchmod@plt+0xc498>
movb   $0x1,0x24(%esp)
jmp    8056263 <fchmod@plt+0xc063>
xchg   %ax,%ax
cmpb   $0x0,0x3c(%esp)
je     8056240 <fchmod@plt+0xc040>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049cf0 <iswspace@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    $0x2,%eax
cmovne %edi,%ecx
cmovne %eax,%ebx
mov    %ecx,0x1c(%esp)
jmp    8056240 <fchmod@plt+0xc040>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8056240 <fchmod@plt+0xc040>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
mov    0x20(%esp),%ebp
mov    $0x1,%esi
movb   $0x0,0x3c(%esp)
mov    0x34(%esp),%edi
jmp    80561fc <fchmod@plt+0xbffc>
nop
mov    0x34(%esp),%ecx
jmp    80562c0 <fchmod@plt+0xc0c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ebp
mov    0x34(%esp),%edi
movb   $0x0,0x3c(%esp)
mov    %ebp,%edx
sub    %edi,%edx
mov    %edx,0x38(%esp)
mov    %edx,%esi
jmp    80561fc <fchmod@plt+0xbffc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     8056481 <fchmod@plt+0xc281>
mov    0x18(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
mov    %edx,0x14(%esp)
je     8056689 <fchmod@plt+0xc489>
call   804a1c0 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%eax
jmp    805644a <fchmod@plt+0xc24a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     8056454 <fchmod@plt+0xc254>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8056440 <fchmod@plt+0xc240>
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8056335 <fchmod@plt+0xc135>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   8049dc0 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     8056335 <fchmod@plt+0xc135>
call   804a1c0 <__ctype_b_loc@plt>
mov    0x18(%esp),%esi
jmp    80564b6 <fchmod@plt+0xc2b6>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     8056335 <fchmod@plt+0xc135>
movzbl (%ebx),%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
jne    80564a8 <fchmod@plt+0xc2a8>
jmp    8056335 <fchmod@plt+0xc135>
nop
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %ebx,0x34(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
mov    %edx,0x20(%esp)
jae    8056692 <fchmod@plt+0xc492>
lea    0x40(%esp),%ebp
mov    %edx,%esi
lea    0x28(%esp),%edi
jmp    8056575 <fchmod@plt+0xc375>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x8061f20(,%edx,4),%edx
bt     %eax,%edx
jae    80565f0 <fchmod@plt+0xc3f0>
movl   $0x1,0x38(%esp)
movsbl (%ebx),%eax
mov    0x34(%esp),%ebx
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,(%esp)
call   8049cf0 <iswspace@plt>
test   %eax,%eax
je     8056626 <fchmod@plt+0xc426>
mov    0x20(%esp),%esi
add    0x38(%esp),%ebx
movb   $0x0,0x30(%esp)
cmp    %ebx,%esi
mov    %ebx,0x34(%esp)
jbe    8056626 <fchmod@plt+0xc426>
cmpb   $0x0,0x24(%esp)
je     8056510 <fchmod@plt+0xc310>
mov    0x34(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
sub    %eax,%esi
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8056610 <fchmod@plt+0xc410>
cmp    $0xfffffffe,%eax
je     8056668 <fchmod@plt+0xc468>
test   %eax,%eax
jne    8056658 <fchmod@plt+0xc458>
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ebx)
jne    80566ea <fchmod@plt+0xc4ea>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    80566c1 <fchmod@plt+0xc4c1>
mov    %edi,(%esp)
movb   $0x1,0x3c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8056543 <fchmod@plt+0xc343>
movb   $0x0,0x24(%esp)
jmp    8056543 <fchmod@plt+0xc343>
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8056698 <fchmod@plt+0xc498>
movb   $0x1,0x24(%esp)
jmp    805657c <fchmod@plt+0xc37c>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8056335 <fchmod@plt+0xc135>
jmp    805617b <fchmod@plt+0xbf7b>
mov    0x34(%esp),%ebx
jmp    80565d1 <fchmod@plt+0xc3d1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x20(%esp),%eax
movb   $0x0,0x3c(%esp)
sub    %ebx,%eax
mov    %eax,0x38(%esp)
jmp    8056621 <fchmod@plt+0xc421>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
jmp    8056335 <fchmod@plt+0xc135>
mov    0x18(%esp),%ebx
jmp    8056454 <fchmod@plt+0xc254>
mov    0x18(%esp),%ebx
jmp    8056626 <fchmod@plt+0xc426>
movl   $0x8061b91,0xc(%esp)
movl   $0x8b,0x8(%esp)
movl   $0x8061b84,0x4(%esp)
movl   $0x80617d2,(%esp)
call   804a1b0 <__assert_fail@plt>
call   8049b10 <__stack_chk_fail@plt>
movl   $0x8061b91,0xc(%esp)
movl   $0xa7,0x8(%esp)
movl   $0x8061b84,0x4(%esp)
movl   $0x8061800,(%esp)
call   804a1b0 <__assert_fail@plt>
call   80582b0 <fchmod@plt+0xe0b0>
movl   $0x8061b91,0xc(%esp)
movl   $0xa6,0x8(%esp)
movl   $0x8061b84,0x4(%esp)
movl   $0x80617e9,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     805676f <fchmod@plt+0xc56f>
mov    %ebx,(%esp)
call   8056710 <fchmod@plt+0xc510>
mov    %eax,%edi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804a160 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805eb60 <fchmod@plt+0x14960>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf4(%esp),%ebx
mov    0xf8(%esp),%eax
testb  $0x1,0xfc(%esp)
mov    0x4c(%ebx),%edx
mov    0x48(%ebx),%esi
mov    0x48(%eax),%ebp
mov    0x4c(%eax),%edi
mov    %edx,0x1c(%esp)
je     80568b8 <fchmod@plt+0xc6b8>
cmp    %ebp,%esi
sete   0x20(%esp)
cmp    %edi,%edx
je     80568f0 <fchmod@plt+0xc6f0>
lea    -0x1(%ebp),%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jl     80568e0 <fchmod@plt+0xc6e0>
lea    -0x1(%esi),%eax
mov    $0x1,%ecx
cmp    %eax,%ebp
jl     80568e0 <fchmod@plt+0xc6e0>
mov    0x80678b4,%ebx
test   %ebx,%ebx
je     8056dad <fchmod@plt+0xcbad>
mov    0x80678b0,%eax
test   %eax,%eax
je     8056d2c <fchmod@plt+0xcb2c>
mov    0xf4(%esp),%ecx
mov    (%ecx),%edx
mov    0x4(%ecx),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8053930 <fchmod@plt+0x9730>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805690b <fchmod@plt+0xc70b>
cmp    0x80678b0,%eax
je     8056d55 <fchmod@plt+0xcb55>
mov    0x8(%eax),%ebx
movzbl 0xc(%eax),%eax
mov    %ebx,0x24(%esp)
test   %al,%al
je     8056968 <fchmod@plt+0xc768>
mov    0x24(%esp),%ebx
xor    %ecx,%ecx
mov    %edi,%eax
cmp    $0x77359400,%ebx
sete   %cl
cltd
idiv   %ebx
not    %ecx
and    %ecx,%ebp
sub    %edx,%edi
lea    0x0(%esi),%esi
cmp    %esi,%ebp
mov    $0xffffffff,%ecx
jg     80568e0 <fchmod@plt+0xc6e0>
mov    $0x1,%ecx
jl     80568e0 <fchmod@plt+0xc6e0>
mov    0x1c(%esp),%ebx
xor    %eax,%eax
mov    $0xffffffff,%ecx
cmp    %ebx,%edi
setl   %al
cmovle %eax,%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xdc,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ecx,%ecx
cmpb   $0x0,0x20(%esp)
jne    80568e0 <fchmod@plt+0xc6e0>
lea    -0x1(%ebp),%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jge    8056825 <fchmod@plt+0xc625>
jmp    80568e0 <fchmod@plt+0xc6e0>
mov    0x80678b4,%eax
test   %eax,%eax
je     8056d73 <fchmod@plt+0xcb73>
mov    0xf4(%esp),%ebx
mov    (%ebx),%ecx
mov    0x4(%ebx),%ebx
mov    %eax,(%esp)
mov    %ecx,0x50(%esp)
mov    %ebx,0x54(%esp)
lea    0x50(%esp),%ebx
mov    %ebx,0x4(%esp)
call   80530d0 <fchmod@plt+0x8ed0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
jne    8056885 <fchmod@plt+0xc685>
movl   $0x77359400,0x58(%esp)
movb   $0x0,0x5c(%esp)
movl   $0x77359400,0x24(%esp)
mov    %ebx,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0xf4(%esp),%eax
mov    0xf4(%esp),%ebx
mov    0x40(%eax),%eax
mov    0x54(%ebx),%ebx
mov    %eax,0x44(%esp)
mov    0xf4(%esp),%eax
mov    0x50(%eax),%eax
mov    %eax,0x48(%esp)
mov    0xf4(%esp),%eax
mov    0x44(%eax),%eax
mov    %eax,0x30(%esp)
mov    $0x66666667,%eax
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
mov    %edx,%ecx
sar    $0x2,%ecx
sub    %eax,%ecx
lea    (%ecx,%ecx,4),%eax
add    %eax,%eax
sub    %eax,%ebx
mov    $0x66666667,%eax
imull  0x30(%esp)
mov    %ebx,0x34(%esp)
mov    %edx,%ebx
mov    0x30(%esp),%edx
sar    $0x2,%ebx
mov    %edx,%eax
sar    $0x1f,%eax
sub    %eax,%ebx
lea    (%ebx,%ebx,4),%eax
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,0x34(%esp)
mov    0x1c(%esp),%edx
mov    %edx,0x38(%esp)
imul   %edx
mov    %edx,0x28(%esp)
mov    0x38(%esp),%edx
sarl   $0x2,0x28(%esp)
mov    %edx,%eax
sar    $0x1f,%eax
sub    %eax,0x28(%esp)
mov    0x28(%esp),%eax
lea    (%eax,%eax,4),%eax
add    %eax,%eax
sub    %eax,%edx
mov    %edx,%eax
or     0x34(%esp),%eax
mov    %eax,0x3c(%esp)
jne    8056d10 <fchmod@plt+0xcb10>
cmpl   $0xa,0x24(%esp)
mov    %ecx,%edx
mov    0x28(%esp),%ecx
jle    8056df0 <fchmod@plt+0xcbf0>
mov    $0x66666667,%eax
mov    %edx,0x34(%esp)
imul   %edx
mov    0x34(%esp),%eax
movl   $0x8,0x28(%esp)
movl   $0xa,0x38(%esp)
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    0x34(%esp),%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
mov    %edx,0x40(%esp)
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ebx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,0x40(%esp)
imul   %ecx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    %edx,%eax
mov    0x40(%esp),%edx
or     %eax,%edx
jne    8056df0 <fchmod@plt+0xcbf0>
mov    %edi,0x40(%esp)
mov    0x38(%esp),%edi
mov    %esi,0x4c(%esp)
mov    0x34(%esp),%esi
mov    %ebp,0x3c(%esp)
nop
lea    (%edi,%edi,4),%eax
lea    (%eax,%eax,1),%edi
mov    $0x66666667,%eax
imul   %ebx
mov    $0x66666667,%eax
sar    $0x1f,%ebx
mov    %edi,0x34(%esp)
sar    $0x2,%edx
sub    %ebx,%edx
mov    %edx,%ebx
imul   %esi
mov    $0x66666667,%eax
sar    $0x1f,%esi
sar    $0x2,%edx
sub    %esi,%edx
mov    %edx,%esi
imul   %ecx
sar    $0x1f,%ecx
sar    $0x2,%edx
sub    %ecx,%edx
cmp    0x24(%esp),%edi
mov    %edx,%ecx
jge    8056d7c <fchmod@plt+0xcb7c>
mov    $0x66666667,%eax
mov    %esi,%ebp
imul   %esi
mov    %esi,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
sub    %eax,%ebp
mov    $0x66666667,%eax
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ebx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,%ebp
imul   %ecx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
or     %edx,%ebp
jne    8056d7c <fchmod@plt+0xcb7c>
subl   $0x1,0x28(%esp)
jne    8056ac0 <fchmod@plt+0xc8c0>
mov    0x4c(%esp),%esi
mov    0x44(%esp),%edx
mov    0x40(%esp),%edi
mov    0x3c(%esp),%ebp
or     %esi,%edx
or     0x48(%esp),%edx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %eax,%eax
sub    $0x1,%eax
cmp    $0x1,%edx
sbb    %ebx,%ebx
xor    $0x1,%edx
mov    %ebx,0x38(%esp)
mov    0x2c(%esp),%ebx
andl   $0x3b9aca00,0x38(%esp)
addl   $0x3b9aca00,0x38(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x3c(%esp)
mov    %ecx,0x8(%ebx)
cmp    %ebp,%esi
mov    $0x1,%ecx
jg     80568e0 <fchmod@plt+0xc6e0>
cmp    %edi,0x1c(%esp)
jl     8056bd4 <fchmod@plt+0xc9d4>
cmpb   $0x0,0x20(%esp)
jne    80568e0 <fchmod@plt+0xc6e0>
and    %ebp,%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jl     80568e0 <fchmod@plt+0xc6e0>
je     8056e0d <fchmod@plt+0xcc0d>
mov    0x44(%esp),%eax
mov    $0x38e38e39,%edx
lea    0x60(%esp),%ebx
mov    %eax,0x60(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x3c(%esp),%eax
or     %esi,%eax
mov    %eax,0x68(%esp)
mov    0x38(%esp),%eax
imul   %edx
mov    0x38(%esp),%eax
sar    %edx
sar    $0x1f,%eax
sub    %eax,%edx
mov    0xf4(%esp),%eax
add    0x1c(%esp),%edx
mov    0x10(%eax),%eax
mov    %edx,0x6c(%esp)
mov    %ebx,0x4(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
je     8056e27 <fchmod@plt+0xcc27>
call   8057590 <fchmod@plt+0xd390>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8056d01 <fchmod@plt+0xcb01>
mov    0xf4(%esp),%eax
mov    0x10(%eax),%eax
movl   $0x3,(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xf0(%esp),%eax
mov    %eax,0x4(%esp)
je     8056ee5 <fchmod@plt+0xcce5>
call   804a110 <__xstat64@plt>
mov    %eax,%ecx
mov    0xb8(%esp),%edx
mov    0x1c(%esp),%eax
xor    0xbc(%esp),%eax
xor    %esi,%edx
or     %edx,%eax
or     %ecx,%eax
je     8056e36 <fchmod@plt+0xcc36>
mov    0x1c(%esp),%eax
mov    %esi,0x68(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x6c(%esp)
mov    0xf4(%esp),%eax
mov    0x10(%eax),%eax
mov    %ebx,0x4(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
je     8056ef7 <fchmod@plt+0xccf7>
call   8057590 <fchmod@plt+0xd390>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
je     8056e36 <fchmod@plt+0xcc36>
mov    $0xfffffffe,%ecx
jmp    80568e0 <fchmod@plt+0xc6e0>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    $0xffffffff,%ecx
mov    $0x1,%ebx
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%eax)
movb   $0x1,0xc(%eax)
jmp    80568ae <fchmod@plt+0xc6ae>
movl   $0x10,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x80678b0
je     805690b <fchmod@plt+0xc70b>
movl   $0x77359400,0x8(%eax)
movb   $0x0,0xc(%eax)
jmp    8056850 <fchmod@plt+0xc650>
mov    0x2c(%esp),%eax
movl   $0x0,0x80678b0
00
mov    0x8(%eax),%ebx
movzbl 0xc(%eax),%eax
mov    %ebx,0x24(%esp)
jmp    8056890 <fchmod@plt+0xc690>
lea    0x50(%esp),%ebx
jmp    8056948 <fchmod@plt+0xc748>
mov    0x34(%esp),%eax
mov    0x2c(%esp),%ebx
mov    0x3c(%esp),%ebp
mov    %edi,0x38(%esp)
mov    0x4c(%esp),%esi
cmp    $0x77359400,%eax
mov    0x40(%esp),%edi
mov    %eax,0x8(%ebx)
sete   %al
movzbl %al,%eax
mov    %eax,0x3c(%esp)
not    %eax
jmp    8056bb6 <fchmod@plt+0xc9b6>
movl   $0x8049a60,0x10(%esp)
movl   $0x80567b0,0xc(%esp)
movl   $0x8056780,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x10,(%esp)
call   8053320 <fchmod@plt+0x9120>
test   %eax,%eax
mov    %eax,0x80678b4
je     8056d73 <fchmod@plt+0xcb73>
mov    %eax,%ebx
jmp    8056843 <fchmod@plt+0xc643>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0xa,0x38(%esp)
movl   $0xa,0x8(%eax)
mov    $0xffffffff,%eax
jmp    8056bb6 <fchmod@plt+0xc9b6>
mov    %edi,%eax
cltd
idivl  0x38(%esp)
mov    %edi,%eax
sub    %edx,%eax
cmp    %eax,0x1c(%esp)
jl     80568e0 <fchmod@plt+0xc6e0>
jmp    8056be9 <fchmod@plt+0xc9e9>
call   80575c0 <fchmod@plt+0xd3c0>
test   %eax,%eax
setne  %al
jmp    8056c57 <fchmod@plt+0xca57>
mov    0xb8(%esp),%ecx
mov    $0x66666667,%edx
and    $0x1,%ecx
imul   $0x3b9aca00,%ecx,%ecx
add    0xbc(%esp),%ecx
mov    %ecx,%eax
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
cmp    %eax,%ecx
jne    8056f0c <fchmod@plt+0xcd0c>
cmpl   $0xa,0x38(%esp)
je     8056f05 <fchmod@plt+0xcd05>
mov    $0x9,%eax
mov    $0xa,%ebx
mov    %esi,0x20(%esp)
mov    %eax,%esi
jmp    8056e95 <fchmod@plt+0xcc95>
lea    (%ebx,%ebx,4),%ebx
add    %ebx,%ebx
cmp    %ebx,0x38(%esp)
je     8056ef1 <fchmod@plt+0xccf1>
mov    $0x66666667,%eax
imul   %ecx
mov    $0x66666667,%eax
sar    $0x1f,%ecx
sar    $0x2,%edx
sub    %ecx,%edx
mov    %edx,%ecx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
cmp    %eax,%ecx
jne    8056ef1 <fchmod@plt+0xccf1>
sub    $0x1,%esi
jne    8056e8a <fchmod@plt+0xcc8a>
mov    0x20(%esp),%esi
mov    $0x77359400,%ebx
xor    %ecx,%ecx
mov    %edi,%eax
cmp    $0x77359400,%ebx
sete   %cl
cltd
not    %ecx
idiv   %ebx
jmp    8056d1c <fchmod@plt+0xcb1c>
call   804a150 <__lxstat64@plt>
mov    %eax,%ecx
jmp    8056c9a <fchmod@plt+0xca9a>
mov    0x20(%esp),%esi
jmp    8056ece <fchmod@plt+0xccce>
call   80575c0 <fchmod@plt+0xd3c0>
mov    0x20(%esp),%ecx
jmp    8056cf9 <fchmod@plt+0xcaf9>
mov    $0xa,%ebx
jmp    8056ece <fchmod@plt+0xccce>
mov    $0x1,%ebx
jmp    8056ece <fchmod@plt+0xccce>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    (%edx),%ebx
mov    0x4(%ebx),%ecx
cmp    $0x3ffffffe,%ecx
je     8056f78 <fchmod@plt+0xcd78>
cmp    $0x3fffffff,%ecx
je     8056f58 <fchmod@plt+0xcd58>
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8056fb0 <fchmod@plt+0xcdb0>
xor    %eax,%eax
cmp    $0x3fffffff,%edx
je     8056f98 <fchmod@plt+0xcd98>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0xc(%ebx)
je     8056fd8 <fchmod@plt+0xcdd8>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8059300 <fchmod@plt+0xf100>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
jmp    8056f3c <fchmod@plt+0xcd3c>
xchg   %ax,%ax
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8056fc8 <fchmod@plt+0xcdc8>
mov    0x40(%eax),%ecx
mov    0x44(%eax),%eax
mov    %ecx,(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
cmp    $0x3fffffff,%edx
jne    8056f4e <fchmod@plt+0xcd4e>
add    $0x8,%ebx
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8059300 <fchmod@plt+0xf100>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
mov    0x48(%eax),%edx
mov    0x4c(%eax),%eax
mov    %edx,0x8(%ebx)
mov    %eax,0xc(%ebx)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    8056f4e <fchmod@plt+0xcd4e>
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
xor    %eax,%eax
jmp    8056f4e <fchmod@plt+0xcd4e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
je     80570a6 <fchmod@plt+0xcea6>
mov    0x4(%eax),%ebp
lea    -0x3ffffffe(%ebp),%edx
cmp    $0x1,%edx
ja     8057078 <fchmod@plt+0xce78>
mov    0xc(%eax),%esi
lea    -0x3ffffffe(%esi),%ecx
cmp    $0x1,%ecx
ja     8057098 <fchmod@plt+0xce98>
xor    %ebx,%ebx
xor    %edi,%edi
cmp    $0x1,%edx
jbe    8057040 <fchmod@plt+0xce40>
cmp    $0x1,%ecx
jbe    805705a <fchmod@plt+0xce5a>
xor    %eax,%eax
cmp    $0x1,%ebx
sete   %al
add    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
cmp    $0x3ffffffe,%ebp
sete   %bl
cmp    $0x1,%ecx
movl   $0x0,(%eax)
mov    $0x1,%di
ja     8057029 <fchmod@plt+0xce29>
movl   $0x0,0x8(%eax)
xor    %eax,%eax
cmp    $0x3ffffffe,%esi
sete   %al
mov    $0x1,%edi
add    %eax,%ebx
jmp    8057029 <fchmod@plt+0xce29>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%ebp
jbe    805700d <fchmod@plt+0xce0d>
call   8049ed0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8057033 <fchmod@plt+0xce33>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%esi
jbe    805701b <fchmod@plt+0xce1b>
jmp    8057080 <fchmod@plt+0xce80>
movl   $0x8061bba,0xc(%esp)
movl   $0x5a,0x8(%esp)
movl   $0x8061ba3,0x4(%esp)
movl   $0x8061bb1,(%esp)
call   804a1b0 <__assert_fail@plt>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8058db0 <fchmod@plt+0xebb0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0xe8(%esp),%edx
mov    0xe0(%esp),%edi
test   %edx,%edx
je     8057378 <fchmod@plt+0xd178>
mov    (%edx),%ecx
lea    0x30(%esp),%eax
mov    0x4(%edx),%ebx
mov    %eax,0x2c(%esp)
mov    %ecx,0x30(%esp)
mov    0x8(%edx),%ecx
mov    %ebx,0x34(%esp)
mov    0xc(%edx),%ebx
mov    %ecx,0x38(%esp)
mov    %ebx,0x3c(%esp)
call   8056ff0 <fchmod@plt+0xcdf0>
test   %eax,%eax
mov    %eax,%ebp
js     8057510 <fchmod@plt+0xd310>
mov    0xe4(%esp),%eax
mov    %edi,%ebx
shr    $0x1f,%ebx
test   %eax,%eax
sete   0x1c(%esp)
test   %bl,%bl
jne    8057520 <fchmod@plt+0xd320>
mov    0x80678bc,%eax
test   %eax,%eax
js     80571ad <fchmod@plt+0xcfad>
cmp    $0x2,%ebp
je     80572f8 <fchmod@plt+0xd0f8>
mov    0x2c(%esp),%eax
test   %bl,%bl
jne    80573b0 <fchmod@plt+0xd1b0>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804a030 <futimens@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jle    80573e0 <fchmod@plt+0xd1e0>
call   8049ed0 <__errno_location@plt>
movl   $0x26,(%eax)
test   %ebp,%ebp
movl   $0xffffffff,0x80678bc
ff
movl   $0xffffffff,0x80678b8
ff
jne    8057270 <fchmod@plt+0xd070>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8057400 <fchmod@plt+0xd200>
mov    (%ecx),%eax
mov    $0x10624dd3,%esi
mov    0x4(%ecx),%ebp
mov    %eax,0x40(%esp)
mov    %ebp,%eax
imul   %esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ecx
sar    $0x1f,%ebp
sar    $0x6,%edx
sub    %ebp,%edx
mov    %eax,0x48(%esp)
mov    %ecx,%eax
mov    %edx,0x44(%esp)
imul   %esi
sar    $0x1f,%ecx
lea    0x40(%esp),%ebp
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,0x4c(%esp)
test   %bl,%bl
mov    %ebp,0x8(%esp)
jne    8057388 <fchmod@plt+0xd188>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804a190 <futimesat@plt>
test   %eax,%eax
mov    %eax,%esi
jne    80572c8 <fchmod@plt+0xd0c8>
test   %ebp,%ebp
je     805725d <fchmod@plt+0xd05d>
cmpl   $0x7a11f,0x4(%ebp)
setg   %bl
cmpl   $0x7a11f,0xc(%ebp)
setg   %cl
jg     8057448 <fchmod@plt+0xd248>
test   %bl,%bl
jne    8057448 <fchmod@plt+0xd248>
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3,%ebp
je     80572a2 <fchmod@plt+0xd0a2>
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8057350 <fchmod@plt+0xd150>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8057510 <fchmod@plt+0xd310>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     8057400 <fchmod@plt+0xd200>
lea    0x2c(%esp),%edx
xor    %esi,%esi
lea    0x60(%esp),%eax
call   8056f20 <fchmod@plt+0xcd20>
test   %al,%al
je     80571c9 <fchmod@plt+0xcfc9>
jmp    805725d <fchmod@plt+0xd05d>
nop
cmpb   $0x0,0x1c(%esp)
mov    $0xffffffff,%esi
jne    805725d <fchmod@plt+0xd05d>
mov    0xe4(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049e50 <utimes@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8057408 <fchmod@plt+0xd208>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8057510 <fchmod@plt+0xd310>
mov    0x2c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     8057430 <fchmod@plt+0xd230>
cmpl   $0x3ffffffe,0xc(%eax)
je     8057540 <fchmod@plt+0xd340>
mov    $0x3,%ebp
jmp    8057183 <fchmod@plt+0xcf83>
lea    0x0(%esi),%esi
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    805729a <fchmod@plt+0xd09a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
xor    %ebp,%ebp
jmp    8057152 <fchmod@plt+0xcf52>
nop
mov    0xe4(%esp),%eax
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   804a190 <futimesat@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0xe4(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   80499b0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jg     80571a2 <fchmod@plt+0xcfa2>
xchg   %ax,%ax
jne    805756b <fchmod@plt+0xd36b>
movl   $0x1,0x80678bc
00
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    8057211 <fchmod@plt+0xd011>
nop
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a110 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    805731d <fchmod@plt+0xd11d>
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    8057343 <fchmod@plt+0xd143>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x1c(%esp)
call   8049be0 <__fxstat64@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    805725d <fchmod@plt+0xd05d>
mov    0xa8(%esp),%eax
mov    0x4(%ebp),%edx
mov    0xa0(%esp),%esi
sub    0x0(%ebp),%esi
mov    %eax,0x1c(%esp)
mov    0x8(%ebp),%eax
sub    %eax,0x1c(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x54(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x50(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x5c(%esp)
xor    %edx,%edx
test   %bl,%bl
mov    %eax,0x58(%esp)
je     80574ca <fchmod@plt+0xd2ca>
cmp    $0x1,%esi
jne    80574ca <fchmod@plt+0xd2ca>
mov    0xa4(%esp),%ebx
test   %ebx,%ebx
jne    80574ca <fchmod@plt+0xd2ca>
movl   $0x0,0x54(%esp)
lea    0x50(%esp),%edx
test   %cl,%cl
je     8057560 <fchmod@plt+0xd360>
cmpl   $0x1,0x1c(%esp)
jne    8057560 <fchmod@plt+0xd360>
mov    0xac(%esp),%eax
test   %eax,%eax
jne    8057560 <fchmod@plt+0xd360>
movl   $0x0,0x5c(%esp)
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804a190 <futimesat@plt>
jmp    805725d <fchmod@plt+0xd05d>
nop
mov    $0xffffffff,%esi
jmp    805725d <fchmod@plt+0xd05d>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1c(%esp)
je     805716d <fchmod@plt+0xcf6d>
call   8049ed0 <__errno_location@plt>
mov    $0xffffffff,%esi
movl   $0x9,(%eax)
jmp    805725d <fchmod@plt+0xd05d>
mov    0xac(%esp),%edx
mov    0xa8(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    8057343 <fchmod@plt+0xd143>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    80574f4 <fchmod@plt+0xd2f4>
xor    %esi,%esi
jmp    805725d <fchmod@plt+0xd05d>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    80573e6 <fchmod@plt+0xd1e6>
xchg   %ax,%ax
jmp    80571ad <fchmod@plt+0xcfad>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8057100 <fchmod@plt+0xcf00>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ebx
test   %edx,%edx
je     80576b0 <fchmod@plt+0xd4b0>
mov    (%edx),%esi
lea    0x20(%esp),%eax
mov    0x4(%edx),%edi
mov    0xc(%edx),%ecx
mov    0x8(%edx),%edx
mov    %esi,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   8056ff0 <fchmod@plt+0xcdf0>
test   %eax,%eax
mov    %eax,%esi
js     805776f <fchmod@plt+0xd56f>
mov    0x80678b8,%edi
test   %edi,%edi
js     805765a <fchmod@plt+0xd45a>
cmp    $0x2,%esi
je     8057728 <fchmod@plt+0xd528>
mov    0x1c(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   80499b0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%edi
jle    8057778 <fchmod@plt+0xd578>
call   8049ed0 <__errno_location@plt>
movl   $0x26,(%eax)
test   %esi,%esi
movl   $0xffffffff,0x80678b8
ff
je     80576d8 <fchmod@plt+0xd4d8>
cmp    $0x3,%esi
je     805768d <fchmod@plt+0xd48d>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    805776f <fchmod@plt+0xd56f>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     80576f4 <fchmod@plt+0xd4f4>
lea    0x1c(%esp),%edx
lea    0x30(%esp),%eax
call   8056f20 <fchmod@plt+0xcd20>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     80576f4 <fchmod@plt+0xd4f4>
jmp    805771c <fchmod@plt+0xd51c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80678b8,%edx
xor    %eax,%eax
xor    %esi,%esi
movl   $0x0,0x1c(%esp)
test   %edx,%edx
jns    8057628 <fchmod@plt+0xd428>
movl   $0xffffffff,0x80678b8
ff
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    805776f <fchmod@plt+0xd56f>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8057764 <fchmod@plt+0xd564>
mov    0x1c(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
call   8057100 <fchmod@plt+0xcf00>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a150 <__lxstat64@plt>
test   %eax,%eax
jne    805776f <fchmod@plt+0xd56f>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     80577a0 <fchmod@plt+0xd5a0>
cmpl   $0x3ffffffe,0xc(%eax)
je     80577b0 <fchmod@plt+0xd5b0>
mov    $0x3,%esi
jmp    8057628 <fchmod@plt+0xd428>
call   8049ed0 <__errno_location@plt>
movl   $0x26,(%eax)
mov    $0xffffffff,%eax
jmp    805771c <fchmod@plt+0xd51c>
xchg   %ax,%ax
jne    80577c0 <fchmod@plt+0xd5c0>
movl   $0x1,0x80678bc
00
mov    %edi,%eax
movl   $0x1,0x80678b8
00
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    805775a <fchmod@plt+0xd55a>
nop
mov    0x7c(%esp),%edx
mov    0x78(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    805775a <fchmod@plt+0xd55a>
call   8049ed0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    805777a <fchmod@plt+0xd57a>
jmp    805765a <fchmod@plt+0xd45a>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80584a0 <fchmod@plt+0xe2a0>
test   %eax,%eax
mov    %eax,%ebx
je     8057868 <fchmod@plt+0xd668>
test   %ebp,%ebp
je     8057840 <fchmod@plt+0xd640>
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
movl   $0x8061635,0x10(%esp)
mov    %eax,0xc(%esp)
call   8049d00 <error_at_line@plt>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049a60 <free@plt>
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
movl   $0x8061635,0x8(%esp)
call   8049c50 <error@plt>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049a60 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8061bcc,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %eax,%ebx
call   8049ed0 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80577d0 <fchmod@plt+0xd5d0>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     8057da8 <fchmod@plt+0xdba8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8061bec,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8061bff,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x8061ea0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804a0a0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8061c5c,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8057dd0 <fchmod@plt+0xdbd0>
jmp    *0x8061e60(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061dc0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   804a0a0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061df0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049af0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a0a0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061c03,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a0a0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061c13,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a0a0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061c2a,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a0a0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061d28,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8057a4f <fchmod@plt+0xd84f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061d48,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8057a4f <fchmod@plt+0xd84f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061d6c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8057a4f <fchmod@plt+0xd84f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061d94,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049af0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8057a4f <fchmod@plt+0xd84f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8061bf8,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a0a0 <__fprintf_chk@plt>
jmp    8057941 <fchmod@plt+0xd741>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8061e24,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049af0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    8057ada <fchmod@plt+0xd8da>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     8057e7a <fchmod@plt+0xdc7a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    8057e70 <fchmod@plt+0xdc70>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80578f0 <fchmod@plt+0xd6f0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     8057ed2 <fchmod@plt+0xdcd2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    8057ec0 <fchmod@plt+0xdcc0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80578f0 <fchmod@plt+0xd6f0>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8057eb0 <fchmod@plt+0xdcb0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061c46,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x805ee12,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805ee28,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
movl   $0x8060910,0xc(%esp)
movl   $0x805ee3c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__printf_chk@plt>
mov    0x8067300,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8060938,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
cmpb   $0x0,0x80678c1
je     8058018 <fchmod@plt+0xde18>
movzbl 0x80678c0,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
call   8049b20 <geteuid@plt>
movb   $0x1,0x80678c1
test   %eax,%eax
sete   %al
mov    %al,0x80678c0
add    $0xc,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     8058059 <fchmod@plt+0xde59>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8058054 <fchmod@plt+0xde54>
lea    0x0(%esi),%esi
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8058099 <fchmod@plt+0xde99>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8058040 <fchmod@plt+0xde40>
call   80582b0 <fchmod@plt+0xe0b0>
xchg   %ax,%ax
jmp    8058040 <fchmod@plt+0xde40>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     80580d8 <fchmod@plt+0xded8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
je     80580eb <fchmod@plt+0xdeeb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     80580c0 <fchmod@plt+0xdec0>
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     80580d0 <fchmod@plt+0xded0>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8058133 <fchmod@plt+0xdf33>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    80580b0 <fchmod@plt+0xdeb0>
call   80582b0 <fchmod@plt+0xe0b0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8058180 <fchmod@plt+0xdf80>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8058198 <fchmod@plt+0xdf98>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    80580b0 <fchmod@plt+0xdeb0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    8058169 <fchmod@plt+0xdf69>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    8058169 <fchmod@plt+0xdf69>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     80581d8 <fchmod@plt+0xdfd8>
cmp    $0xaaaaaaa9,%eax
ja     80581e4 <fchmod@plt+0xdfe4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80580b0 <fchmod@plt+0xdeb0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    80581c0 <fchmod@plt+0xdfc0>
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049e80 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a1e0 <calloc@plt>
test   %eax,%eax
je     805823f <fchmod@plt+0xe03f>
add    $0x1c,%esp
ret
nop
call   80582b0 <fchmod@plt+0xe0b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8058250 <fchmod@plt+0xe050>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061ecf,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    0x806725c,%edx
movl   $0x8061635,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
call   804a100 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805b3e0 <fchmod@plt+0x111e0>
test   %eax,%eax
mov    %eax,%ebx
js     8058340 <fchmod@plt+0xe140>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8058336 <fchmod@plt+0xe136>
call   80582b0 <fchmod@plt+0xe0b0>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805b6d0 <fchmod@plt+0x114d0>
test   %eax,%eax
mov    %eax,%ebx
je     8058378 <fchmod@plt+0xe178>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    805836e <fchmod@plt+0xe16e>
call   80582b0 <fchmod@plt+0xe0b0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805b8c0 <fchmod@plt+0x116c0>
test   %eax,%eax
mov    %eax,%ebx
je     80583c0 <fchmod@plt+0xe1c0>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    80583b6 <fchmod@plt+0xe1b6>
call   80582b0 <fchmod@plt+0xe0b0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8058487 <fchmod@plt+0xe287>
mov    (%edx),%eax
lea    0x4(%edx),%edi
mov    $0xffffffff,%esi
mov    %edi,%ebx
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    8058420 <fchmod@plt+0xe220>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
add    $0x4,%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
add    %ebp,%eax
mov    %eax,%edx
cmovb  %esi,%edx
mov    %edx,%ebp
subl   $0x1,0x1c(%esp)
jne    8058408 <fchmod@plt+0xe208>
test   %ebp,%ebp
js     8058478 <fchmod@plt+0xe278>
lea    0x1(%ebp),%edx
mov    %edx,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %eax,0x1c(%esp)
mov    %eax,%ebx
jmp    8058443 <fchmod@plt+0xe243>
xchg   %ax,%ax
add    $0x4,%edi
mov    -0x4(%edi),%esi
mov    %esi,(%esp)
call   8049dc0 <strlen@plt>
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x8(%esp)
add    %ebp,%ebx
call   8049a70 <memcpy@plt>
subl   $0x1,0x18(%esp)
jne    8058440 <fchmod@plt+0xe240>
mov    0x1c(%esp),%eax
movb   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049ed0 <__errno_location@plt>
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    8058470 <fchmod@plt+0xe270>
movl   $0x1,(%esp)
call   8058040 <fchmod@plt+0xde40>
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
jmp    8058469 <fchmod@plt+0xe269>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%edx
movzbl (%edi),%eax
test   %al,%al
je     8058521 <fchmod@plt+0xe321>
cmp    $0x25,%al
jne    80584f0 <fchmod@plt+0xe2f0>
cmpb   $0x73,0x1(%edi)
jne    80584f0 <fchmod@plt+0xe2f0>
mov    %edi,%esi
xor    %eax,%eax
jmp    80584d3 <fchmod@plt+0xe2d3>
lea    0x0(%esi),%esi
cmp    $0x25,%bl
jne    80584f0 <fchmod@plt+0xe2f0>
cmpb   $0x73,0x1(%ecx)
jne    80584f0 <fchmod@plt+0xe2f0>
lea    0x2(%esi),%ecx
movzbl (%ecx),%ebx
add    $0x1,%eax
mov    %ecx,%esi
test   %bl,%bl
jne    80584c8 <fchmod@plt+0xe2c8>
call   80583d0 <fchmod@plt+0xe1d0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8058f70 <fchmod@plt+0xed70>
mov    %eax,%edx
mov    0x1c(%esp),%eax
test   %edx,%edx
jns    80584e7 <fchmod@plt+0xe2e7>
call   8049ed0 <__errno_location@plt>
cmpl   $0xc,(%eax)
je     8058525 <fchmod@plt+0xe325>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    80584e2 <fchmod@plt+0xe2e2>
call   80582b0 <fchmod@plt+0xe0b0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
xor    %ebx,%ebx
sub    $0x28,%esp
mov    0x80672e4,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0xc(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049b90 <__getdelim@plt>
test   %eax,%eax
jle    8058589 <fchmod@plt+0xe389>
mov    0x18(%esp),%edx
movb   $0x0,-0x1(%edx,%eax,1)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049f90 <rpmatch@plt>
test   %eax,%eax
setg   %bl
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    8058600 <fchmod@plt+0xe400>
mov    0x80678c4,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     80586a8 <fchmod@plt+0xe4a8>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049e60 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8058620 <fchmod@plt+0xe420>
movl   $0x1,0x80678c4
00
test   %ebx,%ebx
js     80585f7 <fchmod@plt+0xe3f7>
cmpl   $0xffffffff,0x80678c4
je     8058650 <fchmod@plt+0xe450>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049e60 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049ed0 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    80585e0 <fchmod@plt+0xe3e0>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
test   %eax,%eax
mov    %eax,%ebx
js     80585f7 <fchmod@plt+0xe3f7>
movl   $0xffffffff,0x80678c4
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049e60 <fcntl@plt>
test   %eax,%eax
js     8058684 <fchmod@plt+0xe484>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049e60 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    80585f7 <fchmod@plt+0xe3f7>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   804a160 <close@plt>
mov    %edi,(%esi)
jmp    80585f7 <fchmod@plt+0xe3f7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
mov    %eax,%ebx
jmp    80585ea <fchmod@plt+0xe3ea>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80586d8 <fchmod@plt+0xe4d8>
mov    %ebx,(%esp)
call   8049ce0 <__freading@plt>
test   %eax,%eax
jne    80586e8 <fchmod@plt+0xe4e8>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a10 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     80586d8 <fchmod@plt+0xe4d8>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8058750 <fchmod@plt+0xe550>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a10 <fflush@plt>
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x10(%edx),%ecx
cmp    %ecx,0x14(%edx)
ja     8058746 <fchmod@plt+0xe546>
mov    0x8(%edx),%eax
xor    %ecx,%ecx
sub    0x4(%edx),%eax
testl  $0x100,(%edx)
je     8058744 <fchmod@plt+0xe544>
mov    0x2c(%edx),%ecx
sub    0x24(%edx),%ecx
add    %ecx,%eax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     8058790 <fchmod@plt+0xe590>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ab0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    805876f <fchmod@plt+0xe56f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    805876f <fchmod@plt+0xe56f>
mov    %ebx,(%esp)
call   8049ef0 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     80587d7 <fchmod@plt+0xe5d7>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    80587cf <fchmod@plt+0xe5cf>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
test   %eax,%eax
je     8058828 <fchmod@plt+0xe628>
cmp    $0xa,%eax
je     80587f8 <fchmod@plt+0xe5f8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    (%edx),%edx
mov    $0x8061ee0,%edi
mov    $0xa,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80587ef <fchmod@plt+0xe5ef>
mov    %edx,(%esp)
call   804a060 <freecon@plt>
call   8049ed0 <__errno_location@plt>
movl   $0x3d,(%eax)
mov    $0xffffffff,%eax
jmp    80587ef <fchmod@plt+0xe5ef>
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
jmp    80587ef <fchmod@plt+0xe5ef>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <getfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80587e0 <fchmod@plt+0xe5e0>
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <lgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80587e0 <fchmod@plt+0xe5e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049b40 <fgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    80587e0 <fchmod@plt+0xe5e0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x50(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
test   $0xfffffbff,%eax
jne    8058aa0 <fchmod@plt+0xe8a0>
test   %eax,%eax
je     8058a70 <fchmod@plt+0xe870>
mov    0x80678c8,%edx
test   %edx,%edx
js     8058968 <fchmod@plt+0xe768>
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049f30 <linkat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8058948 <fchmod@plt+0xe748>
movl   $0x1,0x80678c8
00
mov    %ebx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,0x2c(%esp)
jne    805892f <fchmod@plt+0xe72f>
movl   $0xffffffff,0x80678c8
ff
jmp    8058971 <fchmod@plt+0xe771>
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%edi
mov    $0x14,%esi
mov    %ebp,0x20(%esp)
jmp    805899d <fchmod@plt+0xe79d>
cmp    %edi,0x1c(%esp)
je     8058a20 <fchmod@plt+0xe820>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8049a60 <free@plt>
sub    $0x1,%esi
je     8058a30 <fchmod@plt+0xe830>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8058fd0 <fchmod@plt+0xedd0>
test   %eax,%eax
mov    %eax,%ebx
je     8058ad4 <fchmod@plt+0xe8d4>
cmpb   $0x2f,(%ebx)
je     8058980 <fchmod@plt+0xe780>
mov    %edi,(%esp)
call   8052550 <fchmod@plt+0x8350>
cmp    %edi,0x1c(%esp)
mov    %eax,%ebp
je     80589d4 <fchmod@plt+0xe7d4>
mov    %edi,(%esp)
call   8049a60 <free@plt>
test   %ebp,%ebp
je     8058ab8 <fchmod@plt+0xe8b8>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8052a20 <fchmod@plt+0x8820>
mov    %ebp,(%esp)
mov    %eax,%edi
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
test   %edi,%edi
jne    8058994 <fchmod@plt+0xe794>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    805893b <fchmod@plt+0xe73b>
lea    0x0(%esi),%esi
sub    $0x1,%esi
mov    %ebx,%edi
jne    805899d <fchmod@plt+0xe79d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    $0x28,%ebx
movl   $0x28,(%eax)
cmp    %edi,0x1c(%esp)
mov    $0xffffffff,%eax
je     805893b <fchmod@plt+0xe73b>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8049a60 <free@plt>
mov    0x2c(%esp),%eax
mov    %ebx,(%eax)
mov    0x1c(%esp),%eax
jmp    805893b <fchmod@plt+0xe73b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebp,0x50(%esp)
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049f30 <linkat@plt>
call   8049ed0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805893b <fchmod@plt+0xe73b>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    805893b <fchmod@plt+0xe73b>
mov    0x2c(%esp),%eax
mov    0x20(%esp),%ebp
mov    (%eax),%ebx
cmp    $0x16,%ebx
jne    8058a3f <fchmod@plt+0xe83f>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   8049f30 <linkat@plt>
cmp    %edi,0x1c(%esp)
je     805893b <fchmod@plt+0xe73b>
mov    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
mov    (%esi),%ebx
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    0x1c(%esp),%eax
mov    %ebx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
testl  $0xfffffeff,0x1010(%esp)
ff
jne    8058d20 <fchmod@plt+0xeb20>
cmp    $0xffffff9c,%ebx
mov    %edx,%ebp
mov    %ecx,%esi
je     8058bf0 <fchmod@plt+0xe9f0>
cmpb   $0x2f,(%edx)
je     8058bf0 <fchmod@plt+0xe9f0>
lea    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805bd60 <fchmod@plt+0x11b60>
test   %eax,%eax
mov    %eax,%edi
je     8058c49 <fchmod@plt+0xea49>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
je     8058cd0 <fchmod@plt+0xead0>
call   8057590 <fchmod@plt+0xd390>
mov    %eax,0x14(%esp)
call   8049ed0 <__errno_location@plt>
lea    0x2c(%esp),%ecx
cmp    %ecx,%edi
mov    (%eax),%edx
je     8058be0 <fchmod@plt+0xe9e0>
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8049a60 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8058c40 <fchmod@plt+0xea40>
mov    0x14(%esp),%ebp
jmp    8058c0b <fchmod@plt+0xea0b>
lea    0x0(%esi),%esi
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     8058c30 <fchmod@plt+0xea30>
call   8057590 <fchmod@plt+0xd390>
mov    %eax,%ebp
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8058d82 <fchmod@plt+0xeb82>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   80575c0 <fchmod@plt+0xd3c0>
mov    %eax,%ebp
jmp    8058c0b <fchmod@plt+0xea0b>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%edx
jne    8058ce0 <fchmod@plt+0xeae0>
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   805b310 <fchmod@plt+0x11110>
test   %eax,%eax
jne    8058d96 <fchmod@plt+0xeb96>
test   %ebx,%ebx
js     8058c6b <fchmod@plt+0xea6b>
cmp    %ebx,0x24(%esp)
je     8058d65 <fchmod@plt+0xeb65>
mov    %ebx,(%esp)
call   804a040 <fchdir@plt>
test   %eax,%eax
jne    8058d38 <fchmod@plt+0xeb38>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     8058d0e <fchmod@plt+0xeb0e>
call   8057590 <fchmod@plt+0xd390>
mov    %eax,%ebp
xor    %ebx,%ebx
cmp    $0xffffffff,%ebp
je     8058d55 <fchmod@plt+0xeb55>
mov    %edi,(%esp)
call   805b380 <fchmod@plt+0x11180>
test   %eax,%eax
jne    8058d87 <fchmod@plt+0xeb87>
mov    %edi,(%esp)
call   805b3b0 <fchmod@plt+0x111b0>
test   %ebx,%ebx
je     8058c0b <fchmod@plt+0xea0b>
call   8049ed0 <__errno_location@plt>
mov    %ebx,(%eax)
jmp    8058c0b <fchmod@plt+0xea0b>
lea    0x0(%esi),%esi
call   80575c0 <fchmod@plt+0xd3c0>
mov    %eax,0x14(%esp)
jmp    8058bb9 <fchmod@plt+0xe9b9>
xchg   %ax,%ax
lea    -0x1(%edx),%ecx
cmp    $0x1,%ecx
jbe    8058c49 <fchmod@plt+0xea49>
cmp    $0xd,%edx
je     8058c49 <fchmod@plt+0xea49>
cmp    $0x26,%edx
je     8058c49 <fchmod@plt+0xea49>
cmp    $0x5f,%edx
je     8058c49 <fchmod@plt+0xea49>
mov    %edx,(%eax)
jmp    8058be7 <fchmod@plt+0xe9e7>
xchg   %ax,%ax
call   80575c0 <fchmod@plt+0xd3c0>
mov    %eax,%ebp
jmp    8058c96 <fchmod@plt+0xea96>
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    $0xffffffff,%ebp
movl   $0x16,(%eax)
jmp    8058c0b <fchmod@plt+0xea0b>
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   805b3b0 <fchmod@plt+0x111b0>
mov    %esi,(%ebx)
jmp    8058c0b <fchmod@plt+0xea0b>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebx
lea    0x0(%esi,%eiz,1),%esi
jmp    8058ca1 <fchmod@plt+0xeaa1>
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   805b3b0 <fchmod@plt+0x111b0>
call   8049ed0 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8058c0b <fchmod@plt+0xea0b>
call   8049b10 <__stack_chk_fail@plt>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   805b2d0 <fchmod@plt+0x110d0>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   805b290 <fchmod@plt+0x11090>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x80678cc,%edx
mov    0xb4(%esp),%ebp
mov    0xb8(%esp),%ebx
mov    0xbc(%esp),%esi
test   %edx,%edx
js     8058ee0 <fchmod@plt+0xece0>
test   %ebx,%ebx
je     8058df3 <fchmod@plt+0xebf3>
cmpl   $0x3ffffffe,0x4(%ebx)
je     8058e38 <fchmod@plt+0xec38>
cmpl   $0x3ffffffe,0xc(%ebx)
je     8058e38 <fchmod@plt+0xec38>
mov    0xb0(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80499b0 <utimensat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8058ea8 <fchmod@plt+0xeca8>
test   %eax,%eax
jne    8058f18 <fchmod@plt+0xed18>
movl   $0x1,0x80678cc
00
mov    %edi,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049b80 <__fxstatat64@plt>
test   %eax,%eax
jne    8058f08 <fchmod@plt+0xed08>
cmpl   $0x3ffffffe,0x4(%ebx)
je     8058f28 <fchmod@plt+0xed28>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
cmpl   $0x3ffffffe,0xc(%ebx)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
je     8058f50 <fchmod@plt+0xed50>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    8058df3 <fchmod@plt+0xebf3>
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     8058f00 <fchmod@plt+0xed00>
cmp    $0x16,%eax
je     8058ec2 <fchmod@plt+0xecc2>
cmp    $0x26,%eax
jne    8058e21 <fchmod@plt+0xec21>
mov    0x80678cc,%eax
test   %eax,%eax
js     8058ee0 <fchmod@plt+0xece0>
call   8049ed0 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8058ee0 <fchmod@plt+0xece0>
movl   $0xffffffff,0x80678cc
ff
nop
mov    0xb0(%esp),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
mov    %esi,(%esp)
call   8058b40 <fchmod@plt+0xe940>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   $0xfffffeff,%esi
je     8058ec2 <fchmod@plt+0xecc2>
add    $0x9c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
jmp    8058eb4 <fchmod@plt+0xecb4>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3ffffffe,0xc(%ebx)
je     8058e2d <fchmod@plt+0xec2d>
mov    0x70(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x24(%esp)
jmp    8058e8e <fchmod@plt+0xec8e>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    8058df3 <fchmod@plt+0xebf3>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   805beb0 <fchmod@plt+0x11cb0>
test   %eax,%eax
je     8058faf <fchmod@plt+0xedaf>
mov    0x1c(%esp),%edx
test   %edx,%edx
js     8058fb6 <fchmod@plt+0xedb6>
mov    0x30(%esp),%ecx
mov    %eax,(%ecx)
mov    %edx,%eax
add    $0x2c,%esp
ret
mov    $0xffffffff,%eax
jmp    8058fab <fchmod@plt+0xedab>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049ed0 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    8058fab <fchmod@plt+0xedab>
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x8049cd0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80590a0 <fchmod@plt+0xeea0>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    8059032 <fchmod@plt+0xee32>
jmp    8059065 <fchmod@plt+0xee65>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    8059056 <fchmod@plt+0xee56>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    8059028 <fchmod@plt+0xee28>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0xc,%esp
cmpl   $0xffffff9c,0x10(%esp)
mov    0x14(%esp),%eax
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
jne    805909a <fchmod@plt+0xee9a>
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0xc,%esp
jmp    8049b70 <readlink@plt>
call   804a100 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x454(%esp),%eax
mov    0x460(%esp),%edi
mov    0x45c(%esp),%ebx
mov    0x464(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x458(%esp),%eax
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
test   %edi,%edi
mov    $0x80620a8,%eax
cmove  %eax,%edi
test   %ebx,%ebx
jne    80590fe <fchmod@plt+0xeefe>
lea    0x2c(%esp),%eax
mov    $0x400,%bx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%esi
jmp    8059115 <fchmod@plt+0xef15>
lea    0x0(%esi,%eiz,1),%esi
add    %ebx,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
je     805916f <fchmod@plt+0xef6f>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x450(%esp),%eax
mov    %eax,(%esp)
call   *%ebp
test   %eax,%eax
mov    %eax,%edx
js     80591b0 <fchmod@plt+0xefb0>
cmp    %edx,%ebx
ja     80591f0 <fchmod@plt+0xeff0>
cmp    0x14(%esp),%esi
je     805914b <fchmod@plt+0xef4b>
mov    %esi,(%esp)
call   *0x8(%edi)
cmp    $0x40000000,%ebx
jbe    8059108 <fchmod@plt+0xef08>
cmp    $0x80000000,%ebx
jae    8059238 <fchmod@plt+0xf038>
mov    $0x80000000,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
jne    8059115 <fchmod@plt+0xef15>
mov    0xc(%edi),%eax
test   %eax,%eax
je     805917b <fchmod@plt+0xef7b>
mov    %ebx,(%esp)
call   *%eax
call   8049ed0 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0xc,(%eax)
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8059271 <fchmod@plt+0xf071>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
call   8049ed0 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
cmp    $0x22,%ecx
je     8059137 <fchmod@plt+0xef37>
xor    %ebx,%ebx
cmp    %esi,0x14(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
je     8059188 <fchmod@plt+0xef88>
mov    %esi,(%esp)
call   *0x8(%edi)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
jmp    8059188 <fchmod@plt+0xef88>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
cmp    %eax,%esi
lea    0x1(%edx),%ebp
movb   $0x0,(%esi,%edx,1)
je     805924a <fchmod@plt+0xf04a>
cmp    %ebp,%ebx
jbe    8059230 <fchmod@plt+0xf030>
cmp    %esi,0x14(%esp)
je     8059230 <fchmod@plt+0xf030>
mov    0x4(%edi),%eax
mov    %esi,%ebx
test   %eax,%eax
je     8059188 <fchmod@plt+0xef88>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
cmovne %eax,%ebx
jmp    8059188 <fchmod@plt+0xef88>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    8059188 <fchmod@plt+0xef88>
nop
call   8049ed0 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0x24,(%eax)
jmp    8059188 <fchmod@plt+0xef88>
mov    %ebp,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%ebx
je     805926a <fchmod@plt+0xf06a>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
jmp    8059188 <fchmod@plt+0xef88>
mov    %ebp,%ebx
jmp    805916f <fchmod@plt+0xef6f>
call   8049b10 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049c20 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   805bcc0 <fchmod@plt+0x11ac0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    80592c0 <fchmod@plt+0xf0c0>
test   %dl,%dl
je     80592b7 <fchmod@plt+0xf0b7>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     80592e0 <fchmod@plt+0xf0e0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    80592b7 <fchmod@plt+0xf0b7>
call   8049ed0 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049ed0 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   8049a90 <clock_gettime@plt>
test   %eax,%eax
je     8059341 <fchmod@plt+0xf141>
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ad0 <gettimeofday@plt>
mov    0x18(%esp),%eax
mov    %eax,(%ebx)
imul   $0x3e8,0x1c(%esp),%eax
mov    %eax,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     8059378 <fchmod@plt+0xf178>
xor    %eax,%eax
lea    0x0(%esi),%esi
ror    $0x17,%eax
add    $0x1,%edx
add    %ecx,%eax
movsbl (%edx),%ecx
test   %cl,%cl
jne    8059360 <fchmod@plt+0xf160>
xor    %edx,%edx
divl   0x8(%esp)
mov    %edx,%eax
ret
xor    %edx,%edx
jmp    8059375 <fchmod@plt+0xf175>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049fc0 <nl_langinfo@plt>
mov    0x80678d0,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x8060e3d,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     805944c <fchmod@plt+0xf24c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8059417 <fchmod@plt+0xf217>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    80593f0 <fchmod@plt+0xf1f0>
nop
mov    %ebp,(%esp)
call   8049dc0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049dc0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     8059448 <fchmod@plt+0xf248>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
je     805940b <fchmod@plt+0xf20b>
cmp    $0x2a,%bl
jne    80593d0 <fchmod@plt+0xf1d0>
cmpb   $0x0,0x1(%ebp)
jne    80593d0 <fchmod@plt+0xf1d0>
mov    %ebp,(%esp)
call   8049dc0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x8061ef3,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805970d <fchmod@plt+0xf50d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8059417 <fchmod@plt+0xf217>
movl   $0x8061ef9,(%esp)
call   8049c60 <getenv@plt>
test   %eax,%eax
je     8059465 <fchmod@plt+0xf265>
cmpb   $0x0,(%eax)
jne    8059673 <fchmod@plt+0xf473>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x8061eea,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     8059664 <fchmod@plt+0xf464>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8059703 <fchmod@plt+0xf503>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     80594cc <fchmod@plt+0xf2cc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8059648 <fchmod@plt+0xf448>
movl   $0x805efc7,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8059640 <fchmod@plt+0xf440>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8059626 <fchmod@plt+0xf426>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     8059530 <fchmod@plt+0xf330>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    8059530 <fchmod@plt+0xf330>
cmp    $0x23,%eax
je     805969d <fchmod@plt+0xf49d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049e90 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8061f09,0x4(%esp)
mov    %esi,(%esp)
call   8049db0 <fscanf@plt>
cmp    $0x1,%eax
jle    80596c0 <fchmod@plt+0xf4c0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    80596de <fchmod@plt+0xf4de>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049c90 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8059712 <fchmod@plt+0xf512>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049c10 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049c10 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     805953c <fchmod@plt+0xf33c>
mov    %esi,(%esp)
call   8049fa0 <__uflow@plt>
cmp    $0xffffffff,%eax
je     80596c0 <fchmod@plt+0xf4c0>
jmp    8059545 <fchmod@plt+0xf345>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804a160 <close@plt>
mov    $0x8060e3d,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebp,0x80678d0
jmp    80593bf <fchmod@plt+0xf1bf>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    805948b <fchmod@plt+0xf28b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049dc0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8059664 <fchmod@plt+0xf464>
lea    -0x1(%eax),%eax
jmp    8059474 <fchmod@plt+0xf274>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     80596b7 <fchmod@plt+0xf4b7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805972c <fchmod@plt+0xf52c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    8059698 <fchmod@plt+0xf498>
cmp    $0xffffffff,%eax
jne    8059530 <fchmod@plt+0xf330>
mov    %esi,(%esp)
call   805bcc0 <fchmod@plt+0x11ac0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8059648 <fchmod@plt+0xf448>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    805964d <fchmod@plt+0xf44d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049c70 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    80595dc <fchmod@plt+0xf3dc>
mov    $0x8060e3d,%ebp
jmp    8059659 <fchmod@plt+0xf459>
call   8049b10 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x8060e3d,%ebp
call   8049a60 <free@plt>
mov    %esi,(%esp)
call   805bcc0 <fchmod@plt+0x11ac0>
jmp    805964d <fchmod@plt+0xf44d>
mov    %esi,(%esp)
call   8049fa0 <__uflow@plt>
jmp    80596b2 <fchmod@plt+0xf4b2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049a40 <wcwidth@plt>
test   %eax,%eax
jns    8059764 <fchmod@plt+0xf564>
mov    %ebx,(%esp)
call   8049b50 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     80597a8 <fchmod@plt+0xf5a8>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     80597a0 <fchmod@plt+0xf5a0>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    %edi,(%esi)
jmp    8059789 <fchmod@plt+0xf589>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x8061f20(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8(%ebp),%eax
mov    %ecx,-0x30(%ebp)
mov    %eax,-0x34(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmp    $0x3fffffff,%ecx
jbe    8059831 <fchmod@plt+0xf631>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    805993e <fchmod@plt+0xf73e>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    -0x30(%ebp),%eax
shl    $0x2,%eax
cmp    $0xfb7,%eax
jbe    80598d9 <fchmod@plt+0xf6d9>
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   805db80 <fchmod@plt+0x13980>
mov    -0x2c(%ebp),%edx
test   %eax,%eax
je     8059817 <fchmod@plt+0xf617>
xor    %ecx,%ecx
mov    $0x2,%esi
cmpl   $0x2,-0x30(%ebp)
movl   $0x1,0x4(%eax)
jbe    805989b <fchmod@plt+0xf69b>
mov    %edi,-0x2c(%ebp)
mov    -0x30(%ebp),%edi
xchg   %ax,%ax
movzbl -0x1(%edx,%esi,1),%ebx
cmp    %bl,(%edx,%ecx,1)
jne    8059888 <fchmod@plt+0xf688>
jmp    8059900 <fchmod@plt+0xf700>
nop
sub    (%eax,%ecx,4),%ecx
cmp    %bl,(%edx,%ecx,1)
je     8059900 <fchmod@plt+0xf700>
test   %ecx,%ecx
jne    8059880 <fchmod@plt+0xf680>
mov    %esi,(%eax,%esi,4)
xor    %ecx,%ecx
add    $0x1,%esi
cmp    %edi,%esi
jne    8059870 <fchmod@plt+0xf670>
mov    -0x2c(%ebp),%edi
mov    -0x34(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,(%esi)
movzbl (%edi),%ebx
mov    %edi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     80598c7 <fchmod@plt+0xf6c7>
cmp    %bl,(%edx,%ecx,1)
je     8059910 <fchmod@plt+0xf710>
test   %ecx,%ecx
je     80598f0 <fchmod@plt+0xf6f0>
add    (%eax,%ecx,4),%edi
sub    (%eax,%ecx,4),%ecx
test   %bl,%bl
jne    80598b4 <fchmod@plt+0xf6b4>
mov    %eax,(%esp)
call   805dbe0 <fchmod@plt+0x139e0>
mov    $0x1,%eax
jmp    8059819 <fchmod@plt+0xf619>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x13(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
jmp    8059850 <fchmod@plt+0xf650>
movzbl 0x1(%esi),%ebx
add    $0x1,%edi
add    $0x1,%esi
jmp    80598b0 <fchmod@plt+0xf6b0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
mov    %esi,%ebx
sub    %ecx,%ebx
mov    %ebx,(%eax,%esi,4)
jmp    8059891 <fchmod@plt+0xf691>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,-0x30(%ebp)
lea    0x1(%esi),%ebx
mov    %ebx,-0x2c(%ebp)
je     8059927 <fchmod@plt+0xf727>
movzbl 0x1(%esi),%ebx
mov    -0x2c(%ebp),%esi
jmp    80598b0 <fchmod@plt+0xf6b0>
mov    -0x34(%ebp),%esi
mov    %edi,(%esi)
mov    %eax,(%esp)
call   805dbe0 <fchmod@plt+0x139e0>
mov    $0x1,%eax
jmp    8059819 <fchmod@plt+0xf619>
call   8049b10 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0xec,%esp
mov    %edx,(%esp)
mov    %eax,-0xe4(%ebp)
mov    %ecx,-0xe0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   805dc50 <fchmod@plt+0x13a50>
cmp    $0x5d1745d,%eax
mov    %eax,-0xdc(%ebp)
jbe    80599a4 <fchmod@plt+0xf7a4>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    805a29b <fchmod@plt+0x1009b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
imul   $0x2c,-0xdc(%ebp),%eax
cmp    $0xfb7,%eax
jbe    8059c4e <fchmod@plt+0xfa4e>
mov    %eax,(%esp)
call   805db80 <fchmod@plt+0x13980>
mov    %eax,-0xd0(%ebp)
mov    -0xd0(%ebp),%edi
test   %edi,%edi
je     805998a <fchmod@plt+0xf78a>
mov    -0xdc(%ebp),%eax
lea    -0xc0(%ebp),%esi
mov    %ebx,-0xb4(%ebp)
lea    0x10(%edi),%ebx
movb   $0x0,-0xc4(%ebp)
movl   $0x0,-0xc0(%ebp)
00
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
mov    %eax,-0xd4(%ebp)
movl   $0x0,-0xbc(%ebp)
00
movb   $0x0,-0xb8(%ebp)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0xc4(%ebp)
jne    8059c87 <fchmod@plt+0xfa87>
mov    -0xb4(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8059c70 <fchmod@plt+0xfa70>
movl   $0x1,-0xb0(%ebp)
00
movsbl (%edx),%eax
movb   $0x1,-0xac(%ebp)
mov    %eax,-0xa8(%ebp)
mov    -0xa8(%ebp),%eax
movb   $0x1,-0xb8(%ebp)
test   %eax,%eax
jne    8059d20 <fchmod@plt+0xfb20>
mov    -0xd4(%ebp),%eax
cmpl   $0x2,-0xdc(%ebp)
movl   $0x1,0x4(%eax)
jbe    8059b4a <fchmod@plt+0xf94a>
mov    -0xd0(%ebp),%esi
xor    %ebx,%ebx
movl   $0x2,-0xd8(%ebp)
00
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x30(%esi),%ecx
jmp    8059ad4 <fchmod@plt+0xf8d4>
xchg   %ax,%ax
cmpb   $0x0,0x8(%eax)
je     8059ae4 <fchmod@plt+0xf8e4>
mov    0xc(%eax),%eax
cmp    %eax,0x34(%esi)
sete   %dl
test   %dl,%dl
jne    8059b18 <fchmod@plt+0xf918>
test   %ebx,%ebx
mov    -0xd4(%ebp),%eax
je     805a028 <fchmod@plt+0xfe28>
sub    (%eax,%ebx,4),%ebx
mov    -0xd0(%ebp),%edi
lea    (%ebx,%ebx,4),%eax
test   %cl,%cl
lea    (%edi,%eax,8),%eax
jne    8059ab0 <fchmod@plt+0xf8b0>
mov    0x2c(%esi),%edi
xor    %edx,%edx
cmp    0x4(%eax),%edi
jne    8059abf <fchmod@plt+0xf8bf>
mov    %edi,0x8(%esp)
mov    (%eax),%eax
mov    %ecx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
mov    -0xcc(%ebp),%ecx
test   %eax,%eax
sete   %dl
test   %dl,%dl
je     8059ac3 <fchmod@plt+0xf8c3>
mov    -0xd8(%ebp),%edi
add    $0x1,%ebx
mov    -0xd4(%ebp),%ecx
mov    %edi,%eax
sub    %ebx,%eax
mov    %eax,(%ecx,%edi,4)
addl   $0x1,-0xd8(%ebp)
add    $0x28,%esi
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd8(%ebp)
jne    8059aa8 <fchmod@plt+0xf8a8>
mov    -0xe0(%ebp),%eax
xor    %ebx,%ebx
movb   $0x0,-0x8c(%ebp)
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,(%eax)
mov    -0xe4(%ebp),%eax
movb   $0x0,-0x80(%ebp)
movb   $0x0,-0x54(%ebp)
movl   $0x0,-0x50(%ebp)
mov    %eax,-0x7c(%ebp)
mov    %eax,-0x44(%ebp)
movl   $0x0,-0x4c(%ebp)
movb   $0x0,-0x48(%ebp)
movl   $0x0,-0xd8(%ebp)
00
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8059c07 <fchmod@plt+0xfa07>
movzbl -0x3c(%ebp),%ebx
mov    -0xd8(%ebp),%eax
test   %bl,%bl
mov    -0xd0(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
jne    805a123 <fchmod@plt+0xff23>
mov    0x4(%eax),%ecx
xor    %edx,%edx
cmp    -0x40(%ebp),%ecx
je     8059d70 <fchmod@plt+0xfb70>
mov    %edx,%eax
test   %al,%al
je     8059db8 <fchmod@plt+0xfbb8>
mov    -0x40(%ebp),%eax
add    %eax,-0x44(%ebp)
addl   $0x1,-0xd8(%ebp)
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd8(%ebp)
movb   $0x0,-0x48(%ebp)
je     8059d8f <fchmod@plt+0xfb8f>
xor    %ebx,%ebx
cmpb   $0x0,-0x54(%ebp)
jne    8059f4f <fchmod@plt+0xfd4f>
mov    -0x44(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8059f38 <fchmod@plt+0xfd38>
movl   $0x1,-0x40(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x3c(%ebp)
mov    %eax,-0x38(%ebp)
movb   $0x1,-0x48(%ebp)
jmp    8059bb0 <fchmod@plt+0xf9b0>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
mov    %eax,-0xd0(%ebp)
jmp    80599c4 <fchmod@plt+0xf7c4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a253 <fchmod@plt+0x10053>
movb   $0x1,-0xc4(%ebp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    -0xb4(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0xb0(%ebp)
je     805a038 <fchmod@plt+0xfe38>
cmp    $0xfffffffe,%eax
je     805a0f3 <fchmod@plt+0xfef3>
test   %eax,%eax
jne    8059cfb <fchmod@plt+0xfafb>
mov    -0xb4(%ebp),%eax
movl   $0x1,-0xb0(%ebp)
00
cmpb   $0x0,(%eax)
jne    805a2a0 <fchmod@plt+0x100a0>
mov    -0xa8(%ebp),%eax
test   %eax,%eax
jne    805a277 <fchmod@plt+0x10077>
mov    %esi,(%esp)
movb   $0x1,-0xac(%ebp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8059a60 <fchmod@plt+0xf860>
movb   $0x0,-0xc4(%ebp)
jmp    8059a60 <fchmod@plt+0xf860>
xchg   %ax,%ax
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
mov    $0x1,%eax
cmp    %ecx,%edx
je     805a066 <fchmod@plt+0xfe66>
mov    %edx,-0x10(%ebx)
mov    -0xb0(%ebp),%edx
test   %al,%al
mov    %al,-0x8(%ebx)
mov    %edx,-0xc(%ebx)
je     8059d55 <fchmod@plt+0xfb55>
mov    -0xa8(%ebp),%eax
mov    %eax,-0x4(%ebx)
mov    -0xb0(%ebp),%eax
add    $0x28,%ebx
add    %eax,-0xb4(%ebp)
movb   $0x0,-0xb8(%ebp)
jmp    8059a18 <fchmod@plt+0xf818>
mov    -0x44(%ebp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8059bd8 <fchmod@plt+0xf9d8>
mov    -0x7c(%ebp),%eax
mov    -0xe0(%ebp),%edi
mov    %eax,(%edi)
mov    -0xd0(%ebp),%eax
mov    %eax,(%esp)
call   805dbe0 <fchmod@plt+0x139e0>
mov    $0x1,%eax
jmp    805998c <fchmod@plt+0xf78c>
lea    0x0(%esi),%esi
mov    -0xd8(%ebp),%eax
test   %eax,%eax
je     8059fe0 <fchmod@plt+0xfde0>
mov    -0xd8(%ebp),%edi
mov    -0xd4(%ebp),%eax
mov    (%eax,%edi,4),%ebx
sub    %ebx,-0xd8(%ebp)
test   %ebx,%ebx
je     805a018 <fchmod@plt+0xfe18>
movzbl -0x80(%ebp),%esi
lea    -0x88(%ebp),%edi
mov    %esi,%eax
test   %al,%al
je     8059e12 <fchmod@plt+0xfc12>
movzbl -0x74(%ebp),%esi
mov    %esi,%eax
test   %al,%al
jne    8059e55 <fchmod@plt+0xfc55>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
sub    $0x1,%ebx
movb   $0x0,-0x80(%ebp)
je     805a018 <fchmod@plt+0xfe18>
xor    %esi,%esi
cmpb   $0x0,-0x8c(%ebp)
jne    8059e7f <fchmod@plt+0xfc7f>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8059e68 <fchmod@plt+0xfc68>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
mov    %esi,%eax
test   %al,%al
movb   $0x1,-0x80(%ebp)
je     8059dfd <fchmod@plt+0xfbfd>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    8059dfd <fchmod@plt+0xfbfd>
call   804a100 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a253 <fchmod@plt+0x10053>
movb   $0x1,-0x8c(%ebp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    -0xcc(%ebp),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8059f10 <fchmod@plt+0xfd10>
cmp    $0xfffffffe,%eax
je     8059f20 <fchmod@plt+0xfd20>
test   %eax,%eax
jne    8059ee5 <fchmod@plt+0xfce5>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    805a2a0 <fchmod@plt+0x100a0>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    805a277 <fchmod@plt+0x10077>
mov    %edi,(%esp)
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8059e4b <fchmod@plt+0xfc4b>
movb   $0x0,-0x8c(%ebp)
jmp    8059e4b <fchmod@plt+0xfc4b>
lea    0x0(%esi),%esi
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8059e4b <fchmod@plt+0xfc4b>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8059e4b <fchmod@plt+0xfc4b>
nop
lea    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a253 <fchmod@plt+0x10053>
movb   $0x1,-0x54(%ebp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    -0x44(%ebp),%esi
lea    -0x50(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x40(%ebp)
je     805a113 <fchmod@plt+0xff13>
cmp    $0xfffffffe,%eax
je     805a209 <fchmod@plt+0x10009>
test   %eax,%eax
jne    8059fb4 <fchmod@plt+0xfdb4>
mov    -0x44(%ebp),%eax
movl   $0x1,-0x40(%ebp)
cmpb   $0x0,(%eax)
jne    805a2a0 <fchmod@plt+0x100a0>
mov    -0x38(%ebp),%edx
test   %edx,%edx
jne    805a277 <fchmod@plt+0x10077>
lea    -0x50(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
movb   $0x1,-0x3c(%ebp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     8059c45 <fchmod@plt+0xfa45>
movb   $0x0,-0x54(%ebp)
jmp    8059c45 <fchmod@plt+0xfa45>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x80(%ebp),%edx
test   %dl,%dl
je     805a090 <fchmod@plt+0xfe90>
movzbl -0x74(%ebp),%edx
test   %dl,%dl
jne    805a0e3 <fchmod@plt+0xfee3>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
mov    -0x40(%ebp),%eax
movb   $0x0,-0x80(%ebp)
add    %eax,-0x44(%ebp)
movb   $0x0,-0x48(%ebp)
jmp    8059c05 <fchmod@plt+0xfa05>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x48(%ebp),%ebx
jmp    8059ba8 <fchmod@plt+0xf9a8>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xd8(%ebp),%edi
mov    %edi,(%eax,%edi,4)
jmp    8059b2e <fchmod@plt+0xf92e>
xchg   %ax,%ax
movl   $0x1,-0xb0(%ebp)
00
movb   $0x0,-0xac(%ebp)
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
xor    %eax,%eax
movb   $0x1,-0xb8(%ebp)
cmp    %ecx,%edx
jne    8059d39 <fchmod@plt+0xfb39>
mov    -0xb0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    %ebx,-0x10(%ebx)
movzbl -0xac(%ebp),%eax
jmp    8059d3c <fchmod@plt+0xfb3c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x8c(%ebp)
lea    -0x88(%ebp),%ebx
jne    805a17e <fchmod@plt+0xff7e>
mov    -0x7c(%ebp),%ecx
movzbl (%ecx),%eax
mov    %eax,%ebx
shr    $0x5,%bl
movzbl %bl,%ebx
mov    0x8061f20(,%ebx,4),%ebx
bt     %eax,%ebx
jae    805a155 <fchmod@plt+0xff55>
movl   $0x1,-0x78(%ebp)
movsbl (%ecx),%eax
mov    $0x1,%edx
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
test   %dl,%dl
movb   $0x1,-0x80(%ebp)
je     8059ff8 <fchmod@plt+0xfdf8>
mov    -0x70(%ebp),%ecx
test   %ecx,%ecx
jne    8059ff8 <fchmod@plt+0xfdf8>
jmp    8059e5c <fchmod@plt+0xfc5c>
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,-0xac(%ebp)
mov    %eax,-0xb0(%ebp)
jmp    805a049 <fchmod@plt+0xfe49>
movl   $0x1,-0x40(%ebp)
movb   $0x0,-0x3c(%ebp)
jmp    8059c45 <fchmod@plt+0xfa45>
mov    -0x38(%ebp),%edx
test   %edx,%edx
je     8059d9a <fchmod@plt+0xfb9a>
mov    -0xd8(%ebp),%eax
mov    -0xd0(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
cmpb   $0x0,0x8(%eax)
je     8059bca <fchmod@plt+0xf9ca>
cmp    0xc(%eax),%edx
sete   %al
jmp    8059bda <fchmod@plt+0xf9da>
lea    -0x88(%ebp),%ebx
mov    %ebx,(%esp)
mov    %edx,-0xcc(%ebp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a253 <fchmod@plt+0x10053>
mov    -0xcc(%ebp),%edx
movb   $0x1,-0x8c(%ebp)
mov    %edx,-0xcc(%ebp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
mov    -0xcc(%ebp),%edx
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     805a220 <fchmod@plt+0x10020>
cmp    $0xfffffffe,%eax
je     805a230 <fchmod@plt+0x10030>
test   %eax,%eax
jne    805a1e4 <fchmod@plt+0xffe4>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    805a2a0 <fchmod@plt+0x100a0>
mov    -0x70(%ebp),%esi
test   %esi,%esi
jne    805a277 <fchmod@plt+0x10077>
mov    %ebx,(%esp)
movb   $0x1,-0x74(%ebp)
call   8049a80 <mbsinit@plt>
mov    $0x1,%edx
test   %eax,%eax
je     805a0d7 <fchmod@plt+0xfed7>
movb   $0x0,-0x8c(%ebp)
jmp    805a0d7 <fchmod@plt+0xfed7>
mov    -0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,-0x3c(%ebp)
mov    %eax,-0x40(%ebp)
jmp    8059c45 <fchmod@plt+0xfa45>
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    805a0d7 <fchmod@plt+0xfed7>
mov    -0x7c(%ebp),%eax
mov    %edx,-0xcc(%ebp)
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
mov    -0xcc(%ebp),%edx
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    805a0d7 <fchmod@plt+0xfed7>
movl   $0x8061f40,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617d2,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x8061f40,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x8061800,(%esp)
call   804a1b0 <__assert_fail@plt>
call   8049b10 <__stack_chk_fail@plt>
movl   $0x8061f40,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617e9,(%esp)
call   804a1b0 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x174(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%edi
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
call   8049bf0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805a720 <fchmod@plt+0x10520>
movsbl (%edi),%eax
lea    0x38(%esp),%ebx
mov    %edi,0x44(%esp)
movb   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x8061f20(,%edx,4),%edx
movl   $0x0,0x3c(%esp)
movb   $0x0,0x40(%esp)
bt     %eax,%edx
jae    805a680 <fchmod@plt+0x10480>
movl   $0x1,0x48(%esp)
mov    %eax,0x50(%esp)
movb   $0x1,0x4c(%esp)
mov    0x50(%esp),%ebx
movb   $0x1,0x40(%esp)
test   %ebx,%ebx
je     805a928 <fchmod@plt+0x10728>
mov    0x20(%esp),%eax
movb   $0x0,0xa4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0x6c(%esp)
mov    %eax,0x7c(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x78(%esp)
mov    %eax,0xb4(%esp)
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
movb   $0x0,0xb0(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
movb   $0x1,0x28(%esp)
jne    805a5cd <fchmod@plt+0x103cd>
mov    0xb4(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805a938 <fchmod@plt+0x10738>
movl   $0x1,0xb8(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0xbc(%esp)
mov    %eax,0xc0(%esp)
mov    0xc0(%esp),%ecx
movb   $0x1,0xb0(%esp)
test   %ecx,%ecx
je     805a920 <fchmod@plt+0x10720>
mov    $0x1,%edx
cmpl   $0x9,0x24(%esp)
seta   %al
and    0x28(%esp),%al
mov    %al,0x14(%esp)
je     805a570 <fchmod@plt+0x10370>
mov    0x24(%esp),%eax
lea    (%eax,%eax,4),%eax
cmp    %eax,0x1c(%esp)
jb     805af80 <fchmod@plt+0x10d80>
mov    0x1c(%esp),%esi
sub    0x2c(%esp),%esi
je     805a510 <fchmod@plt+0x10310>
movzbl 0x78(%esp),%ebx
lea    0x70(%esp),%edi
test   %bl,%bl
je     805a4b0 <fchmod@plt+0x102b0>
movzbl 0x84(%esp),%ebx
test   %bl,%bl
jne    805a505 <fchmod@plt+0x10305>
mov    0x80(%esp),%eax
add    %eax,0x7c(%esp)
sub    $0x1,%esi
movb   $0x0,0x78(%esp)
je     805b098 <fchmod@plt+0x10e98>
xor    %ebx,%ebx
cmpb   $0x0,0x6c(%esp)
jne    805a9bd <fchmod@plt+0x107bd>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805a9a8 <fchmod@plt+0x107a8>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movzbl 0x14(%esp),%ebx
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
test   %bl,%bl
movb   $0x1,0x78(%esp)
je     805a495 <fchmod@plt+0x10295>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    805a495 <fchmod@plt+0x10295>
cmpb   $0x0,0x78(%esp)
je     805b098 <fchmod@plt+0x10e98>
movzbl 0x84(%esp),%eax
mov    %al,0x14(%esp)
cmpb   $0x0,0x14(%esp)
je     805af90 <fchmod@plt+0x10d90>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    805af90 <fchmod@plt+0x10d90>
mov    0x20(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x18(%esp),%eax
call   8059950 <fchmod@plt+0xf750>
test   %al,%al
jne    805b256 <fchmod@plt+0x11056>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
nop
mov    0x1c(%esp),%eax
addl   $0x1,0x24(%esp)
test   %dl,%dl
lea    0x1(%eax),%ebx
je     805aa58 <fchmod@plt+0x10858>
cmpb   $0x0,0x4c(%esp)
je     805aa58 <fchmod@plt+0x10858>
mov    0x50(%esp),%eax
cmp    %eax,0xc0(%esp)
sete   %al
test   %al,%al
jne    805aa93 <fchmod@plt+0x10893>
mov    0xb8(%esp),%eax
add    %eax,0xb4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0xb0(%esp)
mov    %ebx,0x1c(%esp)
je     805a3ec <fchmod@plt+0x101ec>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0xb4(%esp),%ebx
lea    0xa8(%esp),%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xb8(%esp)
je     805b0f0 <fchmod@plt+0x10ef0>
cmp    $0xfffffffe,%eax
je     805a978 <fchmod@plt+0x10778>
test   %eax,%eax
jne    805a64e <fchmod@plt+0x1044e>
mov    0xb4(%esp),%eax
movl   $0x1,0xb8(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0xc0(%esp),%ecx
test   %ecx,%ecx
jne    805b03e <fchmod@plt+0x10e3e>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
movb   $0x1,0xbc(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a42b <fchmod@plt+0x1022b>
movb   $0x0,0xa4(%esp)
jmp    805a42b <fchmod@plt+0x1022b>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0x34(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x44(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     805a960 <fchmod@plt+0x10760>
cmp    $0xfffffffe,%eax
je     805b1b3 <fchmod@plt+0x10fb3>
test   %eax,%eax
jne    805a6fd <fchmod@plt+0x104fd>
mov    0x44(%esp),%eax
movl   $0x1,0x48(%esp)
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0x50(%esp),%esi
test   %esi,%esi
jne    805b03e <fchmod@plt+0x10e3e>
mov    %ebx,(%esp)
movb   $0x1,0x4c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a35d <fchmod@plt+0x1015d>
movb   $0x0,0x34(%esp)
jmp    805a35d <fchmod@plt+0x1015d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%edi
movzbl (%ecx),%eax
mov    %eax,%ebx
test   %bl,%bl
mov    %al,0x14(%esp)
mov    %edi,%eax
je     805a8a8 <fchmod@plt+0x106a8>
movzbl (%edi),%eax
test   %al,%al
je     805a920 <fchmod@plt+0x10720>
lea    0x1(%edi),%esi
xor    %ebx,%ebx
mov    %ecx,0x28(%esp)
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movb   $0x1,0x24(%esp)
mov    0x18(%esp),%edx
lea    (%edx,%ebx,1),%ecx
add    $0x1,%ebx
cmp    0x14(%esp),%al
mov    %ecx,0x1c(%esp)
je     805a8c8 <fchmod@plt+0x106c8>
cmpb   $0x0,(%esi)
je     805a920 <fchmod@plt+0x10720>
add    $0x1,%edi
cmp    $0x9,%ebx
jbe    805a7fd <fchmod@plt+0x105fd>
cmpb   $0x0,0x24(%esp)
je     805a7fd <fchmod@plt+0x105fd>
lea    (%ebx,%ebx,4),%eax
cmp    %edi,%eax
ja     805a7f8 <fchmod@plt+0x105f8>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     805a7c0 <fchmod@plt+0x105c0>
mov    %edi,%eax
sub    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049f70 <strnlen@plt>
mov    %edi,0x2c(%esp)
add    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax)
jne    805a7f8 <fchmod@plt+0x105f8>
mov    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   8049dc0 <strlen@plt>
lea    0x30(%esp),%edx
mov    %edx,(%esp)
mov    %ebp,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   80597f0 <fchmod@plt+0xf5f0>
test   %al,%al
jne    805b256 <fchmod@plt+0x11056>
movl   $0x0,0x28(%esp)
movb   $0x0,0x24(%esp)
jmp    805a7fd <fchmod@plt+0x105fd>
lea    0x0(%esi),%esi
movb   $0x1,0x24(%esp)
movzbl (%esi),%eax
add    $0x1,%esi
jmp    805a75e <fchmod@plt+0x1055e>
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
mov    0x1c(%esp),%ebx
mov    0x128(%esp),%eax
add    %eax,0x124(%esp)
add    $0x2,%ebx
cmpb   $0x0,0x114(%esp)
mov    %ebx,%esi
movb   $0x0,0x120(%esp)
jne    805acc3 <fchmod@plt+0x10ac3>
mov    0x124(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805aef8 <fchmod@plt+0x10cf8>
movl   $0x1,0x128(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x12c(%esp)
mov    %eax,0x130(%esp)
mov    0x130(%esp),%eax
movb   $0x1,0x120(%esp)
test   %eax,%eax
jne    805ac43 <fchmod@plt+0x10a43>
mov    0xb4(%esp),%eax
lea    0x0(%esi),%esi
mov    0x14c(%esp),%esi
xor    %gs:0x14,%esi
jne    805b25f <fchmod@plt+0x1105f>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
movzbl 0x1(%ebp),%eax
test   %al,%al
je     805a914 <fchmod@plt+0x10714>
movzbl (%esi),%ecx
test   %cl,%cl
je     805a920 <fchmod@plt+0x10720>
cmp    %cl,%al
lea    0x2(%edi),%edx
jne    805b090 <fchmod@plt+0x10e90>
neg    %edi
lea    0x0(%ebp,%edi,1),%ebp
add    0x1c(%esp),%edi
jmp    805a90b <fchmod@plt+0x1070b>
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
je     805a920 <fchmod@plt+0x10720>
add    $0x1,%edx
cmp    %cl,%al
jne    805b090 <fchmod@plt+0x10e90>
movzbl 0x0(%ebp,%edx,1),%eax
test   %al,%al
jne    805a8f8 <fchmod@plt+0x106f8>
mov    0x1c(%esp),%eax
jmp    805a8a8 <fchmod@plt+0x106a8>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    805a8a8 <fchmod@plt+0x106a8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
jmp    805a8a8 <fchmod@plt+0x106a8>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0xa4(%esp)
jmp    805a5cd <fchmod@plt+0x103cd>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x48(%esp)
movb   $0x0,0x4c(%esp)
movb   $0x1,0x40(%esp)
jmp    805a36e <fchmod@plt+0x1016e>
nop
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0xbc(%esp)
mov    %eax,0xb8(%esp)
movb   $0x1,0xb0(%esp)
xor    %edx,%edx
jmp    805a447 <fchmod@plt+0x10247>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0x6c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     805abf0 <fchmod@plt+0x109f0>
cmp    $0xfffffffe,%eax
je     805ac08 <fchmod@plt+0x10a08>
test   %eax,%eax
jne    805aa31 <fchmod@plt+0x10831>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0x88(%esp),%edx
test   %edx,%edx
jne    805b03e <fchmod@plt+0x10e3e>
mov    %edi,(%esp)
movb   $0x1,0x84(%esp)
call   8049a80 <mbsinit@plt>
movzbl 0x14(%esp),%ebx
test   %eax,%eax
je     805a4fc <fchmod@plt+0x102fc>
movb   $0x0,0x6c(%esp)
jmp    805a4fc <fchmod@plt+0x102fc>
mov    0xb8(%esp),%edx
xor    %eax,%eax
cmp    0x48(%esp),%edx
jne    805a59d <fchmod@plt+0x1039d>
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     805a5a5 <fchmod@plt+0x103a5>
mov    0xbc(%esp),%edx
lea    0x118(%esp),%edi
mov    0xa4(%esp),%eax
mov    %edx,0xf4(%esp)
mov    0xc0(%esp),%edx
mov    %eax,0xdc(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0xf8(%esp)
mov    0xc4(%esp),%edx
mov    %eax,0xe0(%esp)
mov    0xac(%esp),%eax
mov    %edx,0xfc(%esp)
mov    0xc8(%esp),%edx
mov    %eax,0xe4(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x100(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0xe8(%esp)
mov    0xb4(%esp),%eax
movb   $0x0,0xe8(%esp)
mov    %edx,0x104(%esp)
mov    0xd0(%esp),%edx
mov    %eax,0xec(%esp)
mov    0xb8(%esp),%eax
add    %eax,0xec(%esp)
mov    %edx,0x108(%esp)
mov    0xd4(%esp),%edx
mov    %eax,0xf0(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x10c(%esp)
mov    0xd8(%esp),%edx
mov    %eax,0x124(%esp)
mov    %edx,0x110(%esp)
movb   $0x0,0x114(%esp)
movsbl (%eax),%eax
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movb   $0x0,0x120(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x8061f20(,%edx,4),%edx
bt     %eax,%edx
jae    805afb0 <fchmod@plt+0x10db0>
movl   $0x1,0x128(%esp)
00
mov    %eax,0x130(%esp)
movb   $0x1,0x12c(%esp)
mov    0x130(%esp),%edx
movb   $0x1,0x120(%esp)
test   %edx,%edx
jne    805a81b <fchmod@plt+0x1061b>
call   804a100 <abort@plt>
nop
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
jmp    805a4fc <fchmod@plt+0x102fc>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x84(%esp)
mov    %eax,0x80(%esp)
jmp    805a4fc <fchmod@plt+0x102fc>
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
movb   $0x1,0x120(%esp)
movzbl 0xe8(%esp),%ebx
test   %bl,%bl
je     805ad68 <fchmod@plt+0x10b68>
movzbl 0xf4(%esp),%ebx
test   %bl,%bl
jne    805adcd <fchmod@plt+0x10bcd>
mov    0xf0(%esp),%edx
mov    $0x1,%eax
cmp    0x128(%esp),%edx
je     805aed0 <fchmod@plt+0x10cd0>
test   %al,%al
lea    0x1(%esi),%edx
jne    805b0e8 <fchmod@plt+0x10ee8>
mov    0xf0(%esp),%eax
mov    %edx,%esi
add    %eax,0xec(%esp)
mov    0x128(%esp),%eax
add    %eax,0x124(%esp)
cmpb   $0x0,0x114(%esp)
movb   $0x0,0xe8(%esp)
movb   $0x0,0x120(%esp)
je     805a848 <fchmod@plt+0x10648>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     805ac28 <fchmod@plt+0x10a28>
cmp    $0xfffffffe,%eax
je     805af30 <fchmod@plt+0x10d30>
test   %eax,%eax
jne    805ad3d <fchmod@plt+0x10b3d>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0x130(%esp),%eax
test   %eax,%eax
jne    805b03e <fchmod@plt+0x10e3e>
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805a887 <fchmod@plt+0x10687>
movb   $0x0,0x114(%esp)
jmp    805a887 <fchmod@plt+0x10687>
lea    0x0(%esi),%esi
cmpb   $0x0,0xdc(%esp)
lea    0xe0(%esp),%ebp
jne    805ae1f <fchmod@plt+0x10c1f>
mov    0xec(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805ae00 <fchmod@plt+0x10c00>
movl   $0x1,0xf0(%esp)
00
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
mov    %eax,0xf8(%esp)
test   %bl,%bl
movb   $0x1,0xe8(%esp)
je     805ac63 <fchmod@plt+0x10a63>
mov    0xf8(%esp),%eax
test   %eax,%eax
je     805a8a8 <fchmod@plt+0x106a8>
cmpb   $0x0,0x12c(%esp)
je     805ac63 <fchmod@plt+0x10a63>
cmp    0x130(%esp),%eax
setne  %al
jmp    805ac7c <fchmod@plt+0x10a7c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe0(%esp),%ebp
mov    %ebp,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0xdc(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0xec(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xf0(%esp)
je     805af18 <fchmod@plt+0x10d18>
cmp    $0xfffffffe,%eax
je     805af58 <fchmod@plt+0x10d58>
test   %eax,%eax
jne    805aea1 <fchmod@plt+0x10ca1>
mov    0xec(%esp),%eax
movl   $0x1,0xf0(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0xf8(%esp),%eax
test   %eax,%eax
jne    805b03e <fchmod@plt+0x10e3e>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805adbd <fchmod@plt+0x10bbd>
movb   $0x0,0xdc(%esp)
jmp    805adbd <fchmod@plt+0x10bbd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x124(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <memcmp@plt>
test   %eax,%eax
setne  %al
jmp    805ac7c <fchmod@plt+0x10a7c>
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0x114(%esp)
jmp    805acc3 <fchmod@plt+0x10ac3>
lea    0x0(%esi),%esi
movl   $0x1,0xf0(%esp)
00
movb   $0x0,0xf4(%esp)
jmp    805adbd <fchmod@plt+0x10bbd>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    805ac3b <fchmod@plt+0x10a3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0xf4(%esp)
mov    %eax,0xf0(%esp)
jmp    805adbd <fchmod@plt+0x10bbd>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x28(%esp)
jmp    805a570 <fchmod@plt+0x10370>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x1,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    805a570 <fchmod@plt+0x10370>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0x114(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     805a808 <fchmod@plt+0x10608>
cmp    $0xfffffffe,%eax
je     805b1f2 <fchmod@plt+0x10ff2>
test   %eax,%eax
jne    805b068 <fchmod@plt+0x10e68>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0x130(%esp),%eax
test   %eax,%eax
je     805b068 <fchmod@plt+0x10e68>
movl   $0x8061f40,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x8061800,(%esp)
call   804a1b0 <__assert_fail@plt>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805abd3 <fchmod@plt+0x109d3>
movb   $0x0,0x114(%esp)
jmp    805abd3 <fchmod@plt+0x109d3>
lea    0x0(%esi),%esi
mov    %edx,%edi
jmp    805a782 <fchmod@plt+0x10582>
nop
cmpb   $0x0,0x6c(%esp)
lea    0x70(%esp),%ebx
jne    805b121 <fchmod@plt+0x10f21>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805b108 <fchmod@plt+0x10f08>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
movb   $0x1,0x78(%esp)
jmp    805a527 <fchmod@plt+0x10327>
lea    0x0(%esi),%esi
mov    %esi,%ebx
jmp    805a5a5 <fchmod@plt+0x103a5>
nop
movl   $0x1,0xb8(%esp)
00
movb   $0x0,0xbc(%esp)
jmp    805a996 <fchmod@plt+0x10796>
lea    0x70(%esp),%ebx
mov    %ebx,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b232 <fchmod@plt+0x11032>
movb   $0x1,0x6c(%esp)
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     805b215 <fchmod@plt+0x11015>
cmp    $0xfffffffe,%eax
je     805b1cd <fchmod@plt+0x10fcd>
test   %eax,%eax
jne    805b191 <fchmod@plt+0x10f91>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    805b264 <fchmod@plt+0x11064>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    805b03e <fchmod@plt+0x10e3e>
mov    %ebx,(%esp)
movb   $0x1,0x84(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805b0db <fchmod@plt+0x10edb>
movb   $0x0,0x6c(%esp)
jmp    805b0db <fchmod@plt+0x10edb>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
jmp    805a96d <fchmod@plt+0x1076d>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
mov    %eax,0x80(%esp)
jmp    805b0db <fchmod@plt+0x10edb>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    805a81b <fchmod@plt+0x1061b>
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
jmp    805b0db <fchmod@plt+0x10edb>
movl   $0x8061f40,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617d2,(%esp)
call   804a1b0 <__assert_fail@plt>
mov    0x30(%esp),%eax
jmp    805a8a8 <fchmod@plt+0x106a8>
call   8049b10 <__stack_chk_fail@plt>
movl   $0x8061f40,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617e9,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061f54,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    0x806725c,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a100 <abort@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8061f80,0x4(%esp)
movl   $0x0,(%esp)
call   8049af0 <dcgettext@plt>
mov    0x806725c,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a100 <abort@plt>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%ebx)
movl   $0x0,0x4(%esp)
movl   $0x8060cd7,(%esp)
call   80526f0 <fchmod@plt+0x84f0>
test   %eax,%eax
mov    %eax,(%ebx)
js     805b350 <fchmod@plt+0x11150>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805dae0 <fchmod@plt+0x138e0>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049da0 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
sete   %al
add    $0x18,%esp
movzbl %al,%eax
neg    %eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
js     805b398 <fchmod@plt+0x11198>
mov    %eax,0x4(%esp)
jmp    804a040 <fchdir@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %eax,0x4(%esp)
jmp    805ba10 <fchmod@plt+0x11810>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
js     805b3c6 <fchmod@plt+0x111c6>
mov    %eax,(%esp)
call   804a160 <close@plt>
mov    0x4(%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
lea    0x4c(%esp),%ebx
mov    0x1078(%esp),%edi
lea    0x44(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0x107c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
mov    0x1080(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
call   8049dd0 <iconv@plt>
mov    0x1074(%esp),%eax
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    %eax,0x40(%esp)
test   %eax,%eax
lea    0x48(%esp),%eax
mov    %eax,0x18(%esp)
jne    805b488 <fchmod@plt+0x11288>
jmp    805b4d8 <fchmod@plt+0x112d8>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x40(%esp),%edx
sub    %ebx,%eax
add    %eax,%esi
test   %edx,%edx
je     805b4d8 <fchmod@plt+0x112d8>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1000,0x48(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
jne    805b478 <fchmod@plt+0x11278>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x7,%eax
je     805b478 <fchmod@plt+0x11278>
cmp    $0x16,%eax
jne    805b66b <fchmod@plt+0x1146b>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
movl   $0x1000,0x48(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805b66b <fchmod@plt+0x1146b>
mov    0x44(%esp),%eax
sub    %ebx,%eax
add    %eax,%esi
mov    %esi,0x1c(%esp)
je     805b678 <fchmod@plt+0x11478>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805b648 <fchmod@plt+0x11448>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edx
cmp    (%eax),%edx
ja     805b648 <fchmod@plt+0x11448>
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x0,0xc(%esp)
lea    0x3c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049dd0 <iconv@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x1074(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x1074(%esp),%eax
jmp    805b5d1 <fchmod@plt+0x113d1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805b688 <fchmod@plt+0x11488>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    805b5a8 <fchmod@plt+0x113a8>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805b696 <fchmod@plt+0x11496>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805b6c3 <fchmod@plt+0x114c3>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    0x20(%esp),%eax
mov    %ecx,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805b6c8 <fchmod@plt+0x114c8>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    805b545 <fchmod@plt+0x11345>
call   8049ed0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%ebx
jmp    805b624 <fchmod@plt+0x11424>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
xor    %ebx,%ebx
movl   $0x0,(%eax)
jmp    805b624 <fchmod@plt+0x11424>
xchg   %ax,%ax
call   8049ed0 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     805b5d5 <fchmod@plt+0x113d5>
mov    0x24(%esp),%ecx
mov    $0xffffffff,%ebx
mov    0x28(%esp),%edi
cmp    %edi,(%ecx)
je     805b624 <fchmod@plt+0x11424>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    %ebp,(%esi)
jmp    805b624 <fchmod@plt+0x11424>
call   804a100 <abort@plt>
call   8049b10 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8049dc0 <strlen@plt>
mov    %eax,%ebx
shl    $0x4,%ebx
cmp    $0xfff,%eax
cmova  %eax,%ebx
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     805b899 <fchmod@plt+0x11699>
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049dd0 <iconv@plt>
mov    %esi,0x28(%esp)
mov    %ebx,0x2c(%esp)
jmp    805b7a4 <fchmod@plt+0x115a4>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     805b82b <fchmod@plt+0x1162b>
cmp    $0x7,%ebx
jne    805b884 <fchmod@plt+0x11684>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    805b878 <fchmod@plt+0x11678>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049c70 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805b878 <fchmod@plt+0x11678>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805b748 <fchmod@plt+0x11548>
jmp    805b82b <fchmod@plt+0x1162b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x7,%ebx
jne    805b884 <fchmod@plt+0x11684>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    805b878 <fchmod@plt+0x11678>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049c70 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805b878 <fchmod@plt+0x11678>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049dd0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805b7e0 <fchmod@plt+0x115e0>
mov    0x28(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
movb   $0x0,(%eax)
mov    0x28(%esp),%eax
sub    %esi,%eax
cmp    %edi,%eax
jb     805b8a8 <fchmod@plt+0x116a8>
mov    %esi,%eax
jmp    805b891 <fchmod@plt+0x11691>
movl   $0xc,0x0(%ebp)
mov    $0xc,%ebx
mov    %esi,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
mov    %ebx,0x0(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049ed0 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    805b891 <fchmod@plt+0x11691>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
cmove  %esi,%eax
jmp    805b891 <fchmod@plt+0x11691>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     805b8e7 <fchmod@plt+0x116e7>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8059010 <fchmod@plt+0xee10>
test   %eax,%eax
jne    805b900 <fchmod@plt+0x11700>
mov    %ebx,(%esp)
call   8049ec0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805b950 <fchmod@plt+0x11750>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a130 <iconv_open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     805b964 <fchmod@plt+0x11764>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805b6d0 <fchmod@plt+0x114d0>
test   %eax,%eax
mov    %eax,%ebx
je     805b968 <fchmod@plt+0x11768>
mov    %esi,(%esp)
call   8049de0 <iconv_close@plt>
test   %eax,%eax
jns    805b8f5 <fchmod@plt+0x116f5>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049a60 <free@plt>
mov    %edi,(%esi)
jmp    805b8f5 <fchmod@plt+0x116f5>
call   8049ed0 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %ebx,%ebx
jmp    805b8f5 <fchmod@plt+0x116f5>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   8049de0 <iconv_close@plt>
mov    %edi,(%ebx)
xor    %ebx,%ebx
jmp    805b8f5 <fchmod@plt+0x116f5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
js     805b9a8 <fchmod@plt+0x117a8>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804a160 <close@plt>
test   %eax,%eax
jne    805b9aa <fchmod@plt+0x117aa>
add    $0x1c,%esp
repz ret
movl   $0x8062010,0xc(%esp)
movl   $0x3f,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061fc1,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x10900,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049df0 <openat64@plt>
test   %eax,%eax
mov    %eax,%esi
js     805ba08 <fchmod@plt+0x11808>
mov    %ebx,%eax
call   805b990 <fchmod@plt+0x11790>
xor    %eax,%eax
mov    %esi,(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    805b9fe <fchmod@plt+0x117fe>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    %edi,(%esp)
call   8049ae0 <chdir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805bad8 <fchmod@plt+0x118d8>
call   8049ed0 <__errno_location@plt>
cmpl   $0x24,(%eax)
mov    %eax,0x18(%esp)
je     805ba45 <fchmod@plt+0x11845>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   8049dc0 <strlen@plt>
movl   $0xffffff9c,0x2c(%esp)
test   %eax,%eax
lea    (%edi,%eax,1),%esi
je     805bc22 <fchmod@plt+0x11a22>
cmp    $0xfff,%eax
jbe    805bc46 <fchmod@plt+0x11a46>
xor    %edx,%edx
mov    %edi,%ebx
cmpb   $0x2f,(%edi)
lea    0x1(%edi),%eax
jne    805bb41 <fchmod@plt+0x11941>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
add    $0x1,%edx
cmpb   $0x2f,-0x1(%eax)
je     805ba80 <fchmod@plt+0x11880>
cmp    $0x2,%edx
je     805bae4 <fchmod@plt+0x118e4>
lea    0x2c(%esp),%ebp
mov    $0x80617be,%edx
mov    %ebp,%eax
call   805b9d0 <fchmod@plt+0x117d0>
test   %eax,%eax
jne    805bbd2 <fchmod@plt+0x119d2>
cmpb   $0x2f,(%ebx)
jne    805bb41 <fchmod@plt+0x11941>
movl   $0x8062019,0xc(%esp)
movl   $0xa1,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061fe2,(%esp)
call   804a1b0 <__assert_fail@plt>
add    $0x3c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x3(%edi),%eax
mov    %esi,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049ee0 <memchr@plt>
test   %eax,%eax
je     805bbf0 <fchmod@plt+0x119f0>
lea    0x2c(%esp),%ebp
mov    %edi,%edx
movb   $0x0,(%eax)
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
call   805b9d0 <fchmod@plt+0x117d0>
mov    0x1c(%esp),%ecx
movb   $0x2f,(%ecx)
test   %eax,%eax
jne    805bbd2 <fchmod@plt+0x119d2>
cmpb   $0x2f,0x1(%ecx)
lea    0x1(%ecx),%ebx
jne    805bb41 <fchmod@plt+0x11941>
lea    0x2(%ecx),%eax
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     805bb36 <fchmod@plt+0x11936>
cmp    %ebx,%esi
jb     805bc8e <fchmod@plt+0x11a8e>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
sub    %ebx,%eax
cmp    $0xfff,%eax
jle    805bbbd <fchmod@plt+0x119bd>
movl   $0x1000,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049d90 <memrchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     805bbf0 <fchmod@plt+0x119f0>
movb   $0x0,(%eax)
sub    %ebx,%eax
cmp    $0xfff,%eax
jg     805bc6a <fchmod@plt+0x11a6a>
lea    0x2c(%esp),%ebp
mov    %ebx,%edx
mov    %ebp,%eax
call   805b9d0 <fchmod@plt+0x117d0>
movb   $0x2f,(%edi)
test   %eax,%eax
jne    805bbd2 <fchmod@plt+0x119d2>
cmpb   $0x2f,0x1(%edi)
lea    0x1(%edi),%ebx
jne    805bb50 <fchmod@plt+0x11950>
lea    0x2(%edi),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     805bbb0 <fchmod@plt+0x119b0>
jmp    805bb50 <fchmod@plt+0x11950>
cmp    %ebx,%esi
lea    0x2c(%esp),%ebp
jbe    805bc04 <fchmod@plt+0x11a04>
mov    %ebx,%edx
mov    %ebp,%eax
call   805b9d0 <fchmod@plt+0x117d0>
test   %eax,%eax
je     805bc04 <fchmod@plt+0x11a04>
mov    0x18(%esp),%esi
mov    %ebp,%eax
mov    (%esi),%ebx
call   805b990 <fchmod@plt+0x11790>
mov    %ebx,(%esi)
add    $0x3c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    $0xffffffff,%ebx
movl   $0x24,(%eax)
jmp    805ba3b <fchmod@plt+0x1183b>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a040 <fchdir@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805bbd2 <fchmod@plt+0x119d2>
mov    %ebp,%eax
call   805b990 <fchmod@plt+0x11790>
jmp    805ba3b <fchmod@plt+0x1183b>
movl   $0x8062019,0xc(%esp)
movl   $0x7d,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061fce,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x8062019,0xc(%esp)
movl   $0x7e,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061fd6,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x8062019,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061ffd,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x8062019,0xc(%esp)
movl   $0xa2,0x8(%esp)
movl   $0x8061fb0,0x4(%esp)
movl   $0x8061fee,(%esp)
call   804a1b0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049ef0 <fileno@plt>
test   %eax,%eax
js     805bd48 <fchmod@plt+0x11b48>
mov    %ebx,(%esp)
call   8049ce0 <__freading@plt>
test   %eax,%eax
jne    805bd18 <fchmod@plt+0x11b18>
mov    %ebx,(%esp)
call   80586c0 <fchmod@plt+0xe4c0>
test   %eax,%eax
je     805bd48 <fchmod@plt+0x11b48>
call   8049ed0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049aa0 <fclose@plt>
test   %edi,%edi
je     805bd0a <fchmod@plt+0x11b0a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049ef0 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    805bce2 <fchmod@plt+0x11ae2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049aa0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
cmpb   $0x0,(%esi)
je     805be08 <fchmod@plt+0x11c08>
mov    0x80678d4,%eax
test   %eax,%eax
je     805be10 <fchmod@plt+0x11c10>
test   %eax,%eax
js     805bdfe <fchmod@plt+0x11bfe>
mov    %esi,(%esp)
call   8049dc0 <strlen@plt>
add    $0x1b,%eax
cmp    $0xfc0,%eax
ja     805bdf0 <fchmod@plt+0x11bf0>
mov    0x74(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x8062038,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a1f0 <__sprintf_chk@plt>
mov    %ebx,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805bea1 <fchmod@plt+0x11ca1>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805bda7 <fchmod@plt+0x11ba7>
xor    %eax,%eax
jmp    805bdd5 <fchmod@plt+0x11bd5>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
mov    %ebx,%eax
jmp    805bdd5 <fchmod@plt+0x11bd5>
nop
movl   $0x10900,0x4(%esp)
movl   $0x8062024,(%esp)
call   80499f0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     805be90 <fchmod@plt+0x11c90>
lea    0x2c(%esp),%ebp
movl   $0x8062032,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x8062038,0xc(%esp)
movl   $0x20,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a1f0 <__sprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049f20 <access@plt>
mov    %edi,(%esp)
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0x2,%edx
sub    $0x1,%edx
mov    %edx,0x80678d4
call   804a160 <close@plt>
mov    0x80678d4,%eax
jmp    805bd91 <fchmod@plt+0x11b91>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x80678d4
ff
xor    %eax,%eax
jmp    805bdd5 <fchmod@plt+0x11bd5>
call   8049b10 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   805dfc0 <fchmod@plt+0x13dc0>
test   %eax,%eax
js     805cfb0 <fchmod@plt+0x12db0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805dee0 <fchmod@plt+0x13ce0>
test   %eax,%eax
js     805d1a8 <fchmod@plt+0x12fa8>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     805c0e8 <fchmod@plt+0x11ee8>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     805c0e8 <fchmod@plt+0x11ee8>
cmp    $0xf9f,%edx
ja     805cbf8 <fchmod@plt+0x129f8>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     805cc2b <fchmod@plt+0x12a2b>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     805c77b <fchmod@plt+0x1257b>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    805c878 <fchmod@plt+0x12678>
test   %ecx,%ecx
je     805c650 <fchmod@plt+0x12450>
js     805d190 <fchmod@plt+0x12f90>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805d190 <fchmod@plt+0x12f90>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     805c035 <fchmod@plt+0x11e35>
cmpb   $0x0,-0x4d8(%ebp)
je     805c660 <fchmod@plt+0x12460>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     805d190 <fchmod@plt+0x12f90>
test   %edi,%edi
jne    805c938 <fchmod@plt+0x12738>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     805d1f0 <fchmod@plt+0x12ff0>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     805c690 <fchmod@plt+0x12490>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     805cbc8 <fchmod@plt+0x129c8>
cmp    $0x6e,%dl
je     805c910 <fchmod@plt+0x12710>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    805c150 <fchmod@plt+0x11f50>
cmp    $0x41,%dl
je     805c150 <fchmod@plt+0x11f50>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    805c161 <fchmod@plt+0x11f61>
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805c10b <fchmod@plt+0x11f0b>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805c123 <fchmod@plt+0x11f23>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    805dabb <fchmod@plt+0x138bb>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     805ccc8 <fchmod@plt+0x12ac8>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     805c18a <fchmod@plt+0x11f8a>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     805c194 <fchmod@plt+0x11f94>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     805c19e <fchmod@plt+0x11f9e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     805c1a8 <fchmod@plt+0x11fa8>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     805c1b2 <fchmod@plt+0x11fb2>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     805c1bc <fchmod@plt+0x11fbc>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     805c1c6 <fchmod@plt+0x11fc6>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     805c1ea <fchmod@plt+0x11fea>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     805c20e <fchmod@plt+0x1200e>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     805c234 <fchmod@plt+0x12034>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     805c980 <fchmod@plt+0x12780>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     805cbf0 <fchmod@plt+0x129f0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805cbc8 <fchmod@plt+0x129c8>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     805cbe0 <fchmod@plt+0x129e0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805cbc8 <fchmod@plt+0x129c8>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805c399 <fchmod@plt+0x12199>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     805d037 <fchmod@plt+0x12e37>
js     805c324 <fchmod@plt+0x12124>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    805c338 <fchmod@plt+0x12138>
call   8049ed0 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    805d3e8 <fchmod@plt+0x131e8>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805c0e8 <fchmod@plt+0x11ee8>
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805c0f3 <fchmod@plt+0x11ef3>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     805c2f0 <fchmod@plt+0x120f0>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     805c36d <fchmod@plt+0x1216d>
test   %al,%al
je     805cc40 <fchmod@plt+0x12a40>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805cc90 <fchmod@plt+0x12a90>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8049ed0 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     805cbc8 <fchmod@plt+0x129c8>
jmp    *0x806204c(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     805c8b0 <fchmod@plt+0x126b0>
cmp    $0x2,%ecx
jne    805c830 <fchmod@plt+0x12630>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     805c790 <fchmod@plt+0x12590>
cmp    %edx,%esi
jbe    805c4a9 <fchmod@plt+0x122a9>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    805cbc8 <fchmod@plt+0x129c8>
cmp    %edx,%eax
jle    805c4b5 <fchmod@plt+0x122b5>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     805d3c0 <fchmod@plt+0x131c0>
cmp    $0x7fffffff,%esi
je     805d410 <fchmod@plt+0x13210>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     805c4ea <fchmod@plt+0x122ea>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    805c3ca <fchmod@plt+0x121ca>
test   %edi,%edi
je     805c900 <fchmod@plt+0x12700>
js     805c2fb <fchmod@plt+0x120fb>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     805c2fb <fchmod@plt+0x120fb>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     805c638 <fchmod@plt+0x12438>
test   %dl,%dl
jne    805c638 <fchmod@plt+0x12438>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     805c2fb <fchmod@plt+0x120fb>
test   %dl,%dl
jne    805cc60 <fchmod@plt+0x12a60>
mov    %esi,-0x4b0(%ebp)
jmp    805c3ca <fchmod@plt+0x121ca>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     805cb78 <fchmod@plt+0x12978>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    805cfc8 <fchmod@plt+0x12dc8>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    805c42c <fchmod@plt+0x1222c>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    805c8ba <fchmod@plt+0x126ba>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    805c551 <fchmod@plt+0x12351>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    805bff7 <fchmod@plt+0x11df7>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    805c055 <fchmod@plt+0x11e55>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    805cbc8 <fchmod@plt+0x129c8>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    805c742 <fchmod@plt+0x12542>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    805cb48 <fchmod@plt+0x12948>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     805cbd0 <fchmod@plt+0x129d0>
test   %bl,%bl
jne    805cbd0 <fchmod@plt+0x129d0>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805d008 <fchmod@plt+0x12e08>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    805bfbf <fchmod@plt+0x11dbf>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    805c081 <fchmod@plt+0x11e81>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    805c970 <fchmod@plt+0x12770>
test   %eax,%eax
jns    805c4ad <fchmod@plt+0x122ad>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    805d123 <fchmod@plt+0x12f23>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805c7d0 <fchmod@plt+0x125d0>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805c7e8 <fchmod@plt+0x125e8>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805c800 <fchmod@plt+0x12600>
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    805c81d <fchmod@plt+0x1261d>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    805c131 <fchmod@plt+0x11f31>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    805c06b <fchmod@plt+0x11e6b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    805ca7d <fchmod@plt+0x1287d>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    805c502 <fchmod@plt+0x12302>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     805cbc8 <fchmod@plt+0x129c8>
mov    0x4(%eax),%eax
jmp    *0x8062094(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     805c06b <fchmod@plt+0x11e6b>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    805c06b <fchmod@plt+0x11e6b>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    805c3ca <fchmod@plt+0x121ca>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    805cfb8 <fchmod@plt+0x12db8>
test   $0xc,%al
je     805c234 <fchmod@plt+0x12034>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    805c22e <fchmod@plt+0x1202e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     805d370 <fchmod@plt+0x13170>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    805d0e8 <fchmod@plt+0x12ee8>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    805c42c <fchmod@plt+0x1222c>
jmp    805c8b0 <fchmod@plt+0x126b0>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     805c8b0 <fchmod@plt+0x126b0>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    805c836 <fchmod@plt+0x12636>
mov    %ecx,0x20(%esp)
jmp    805c43f <fchmod@plt+0x1223f>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    805ca7d <fchmod@plt+0x1287d>
jmp    805c8b0 <fchmod@plt+0x126b0>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     805d320 <fchmod@plt+0x13120>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    805d0a8 <fchmod@plt+0x12ea8>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
lea    0x0(%esi),%esi
js     805c2f0 <fchmod@plt+0x120f0>
shll   -0x4b4(%ebp)
jmp    805c6d1 <fchmod@plt+0x124d1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    805c754 <fchmod@plt+0x12554>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
call   804a100 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
jmp    805c726 <fchmod@plt+0x12526>
nop
mov    %edx,-0x4e8(%ebp)
jmp    805c2a7 <fchmod@plt+0x120a7>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    805c270 <fchmod@plt+0x12070>
nop
cmp    $0xffffffff,%edx
je     805c0e8 <fchmod@plt+0x11ee8>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     805c0e8 <fchmod@plt+0x11ee8>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    805bf7f <fchmod@plt+0x11d7f>
movl   $0x0,-0x4b4(%ebp)
00
jmp    805bf8d <fchmod@plt+0x11d8d>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edi
jmp    805c37d <fchmod@plt+0x1217d>
nop
test   %ebx,%ebx
je     805c561 <fchmod@plt+0x12361>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805c3ca <fchmod@plt+0x121ca>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     805c393 <fchmod@plt+0x12193>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    805c399 <fchmod@plt+0x12199>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   805de80 <fchmod@plt+0x13c80>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    805cd18 <fchmod@plt+0x12b18>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     805ccf3 <fchmod@plt+0x12af3>
je     805cd1a <fchmod@plt+0x12b1a>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    805c161 <fchmod@plt+0x11f61>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     805d601 <fchmod@plt+0x13401>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     805d148 <fchmod@plt+0x12f48>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    805cbc8 <fchmod@plt+0x129c8>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     805d696 <fchmod@plt+0x13496>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     805d531 <fchmod@plt+0x13331>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     805d5c2 <fchmod@plt+0x133c2>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805cbc8 <fchmod@plt+0x129c8>
mov    0x4(%eax),%esi
test   %esi,%esi
js     805d531 <fchmod@plt+0x13331>
test   %esi,%esi
jne    805d568 <fchmod@plt+0x13368>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    805dacc <fchmod@plt+0x138cc>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     805c2f0 <fchmod@plt+0x120f0>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     805d612 <fchmod@plt+0x13412>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   805de80 <fchmod@plt+0x13c80>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     805d478 <fchmod@plt+0x13278>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     805d587 <fchmod@plt+0x13387>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     805ce9d <fchmod@plt+0x12c9d>
cmp    %ebx,%edi
jbe    805ce9d <fchmod@plt+0x12c9d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     805d7f1 <fchmod@plt+0x135f1>
test   %edi,%edi
je     805ce9b <fchmod@plt+0x12c9b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    805ce90 <fchmod@plt+0x12c90>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    805cbc8 <fchmod@plt+0x129c8>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     805d55a <fchmod@plt+0x1335a>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805cf6b <fchmod@plt+0x12d6b>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     805d65c <fchmod@plt+0x1345c>
js     805c2f0 <fchmod@plt+0x120f0>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     805cf33 <fchmod@plt+0x12d33>
cmpb   $0x0,-0x4d8(%ebp)
je     805d66b <fchmod@plt+0x1346b>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805d848 <fchmod@plt+0x13648>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8049a70 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     805cfa5 <fchmod@plt+0x12da5>
mov    %edx,(%esp)
call   8049a60 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    805c754 <fchmod@plt+0x12554>
xor    %eax,%eax
jmp    805c131 <fchmod@plt+0x11f31>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    805c234 <fchmod@plt+0x12034>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
test   %bl,%bl
je     805c73c <fchmod@plt+0x1253c>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805c742 <fchmod@plt+0x12542>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     805c2f0 <fchmod@plt+0x120f0>
mov    $0xc,%eax
jmp    805c338 <fchmod@plt+0x12138>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    805c754 <fchmod@plt+0x12554>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    805c754 <fchmod@plt+0x12554>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    805c754 <fchmod@plt+0x12554>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     805c7be <fchmod@plt+0x125be>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805c7be <fchmod@plt+0x125be>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     805d16c <fchmod@plt+0x12f6c>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    805d150 <fchmod@plt+0x12f50>
movl   $0x1,-0x4ec(%ebp)
00
jmp    805cd72 <fchmod@plt+0x12b72>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    805c2fb <fchmod@plt+0x120fb>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805d1c0 <fchmod@plt+0x12fc0>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805d1d8 <fchmod@plt+0x12fd8>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049ed0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    805c131 <fchmod@plt+0x11f31>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    805d2ac <fchmod@plt+0x130ac>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     805d6a4 <fchmod@plt+0x134a4>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805d253 <fchmod@plt+0x13053>
cmp    %edi,%ebx
jb     805c2f0 <fchmod@plt+0x120f0>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     805c2f0 <fchmod@plt+0x120f0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     805d28c <fchmod@plt+0x1308c>
cmpb   $0x0,-0x4ac(%ebp)
je     805d6b3 <fchmod@plt+0x134b3>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805c2f0 <fchmod@plt+0x120f0>
test   %edi,%edi
jne    805d8a5 <fchmod@plt+0x136a5>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     805d2ca <fchmod@plt+0x130ca>
cmp    %ebx,-0x4b4(%ebp)
ja     805d6cc <fchmod@plt+0x134cc>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805d2dc <fchmod@plt+0x130dc>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805d2f4 <fchmod@plt+0x130f4>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805d30c <fchmod@plt+0x1310c>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    805c131 <fchmod@plt+0x11f31>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805c485 <fchmod@plt+0x12285>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    805cfa5 <fchmod@plt+0x12da5>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805c309 <fchmod@plt+0x12109>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805c309 <fchmod@plt+0x12109>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    805d6ea <fchmod@plt+0x134ea>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805d430 <fchmod@plt+0x13230>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805d448 <fchmod@plt+0x13248>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805d460 <fchmod@plt+0x13260>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    805c131 <fchmod@plt+0x11f31>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     805d5a4 <fchmod@plt+0x133a4>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    805d70f <fchmod@plt+0x1350f>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     805cbc8 <fchmod@plt+0x129c8>
jne    805cbc8 <fchmod@plt+0x129c8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     805d888 <fchmod@plt+0x13688>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    805ce5f <fchmod@plt+0x12c5f>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    805cdbc <fchmod@plt+0x12bbc>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    805cf6b <fchmod@plt+0x12d6b>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    805cdbc <fchmod@plt+0x12bbc>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    805cdcf <fchmod@plt+0x12bcf>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    805ce5f <fchmod@plt+0x12c5f>
testb  $0x4,-0x4c4(%ebp)
je     805d638 <fchmod@plt+0x13438>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    805d4b7 <fchmod@plt+0x132b7>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     805cdb7 <fchmod@plt+0x12bb7>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     805d5ec <fchmod@plt+0x133ec>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    805d5d0 <fchmod@plt+0x133d0>
jmp    805cdaf <fchmod@plt+0x12baf>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    805cd72 <fchmod@plt+0x12b72>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     805c2f0 <fchmod@plt+0x120f0>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    805cdf1 <fchmod@plt+0x12bf1>
jmp    805c2f0 <fchmod@plt+0x120f0>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     805d4b7 <fchmod@plt+0x132b7>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    805d4b7 <fchmod@plt+0x132b7>
movl   $0xc,-0x4b4(%ebp)
00
jmp    805cef3 <fchmod@plt+0x12cf3>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    805cf4f <fchmod@plt+0x12d4f>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    805cd72 <fchmod@plt+0x12b72>
movl   $0xc,-0x4b4(%ebp)
00
jmp    805d233 <fchmod@plt+0x13033>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
jmp    805d296 <fchmod@plt+0x13096>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    805d2ca <fchmod@plt+0x130ca>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805d41e <fchmod@plt+0x1321e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805d41e <fchmod@plt+0x1321e>
fstp   %st(0)
jp     805cbc8 <fchmod@plt+0x129c8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    805cbc8 <fchmod@plt+0x129c8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    805d7a8 <fchmod@plt+0x135a8>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    805d754 <fchmod@plt+0x13554>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     805d518 <fchmod@plt+0x13318>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049fc0 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     805daad <fchmod@plt+0x138ad>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805d798 <fchmod@plt+0x13598>
jmp    805d518 <fchmod@plt+0x13318>
cmp    $0x45,%al
jne    805d8d3 <fchmod@plt+0x136d3>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    805d998 <fchmod@plt+0x13798>
test   %esi,%esi
jne    805d998 <fchmod@plt+0x13798>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    805d518 <fchmod@plt+0x13318>
testb  $0x20,-0x4c4(%ebp)
je     805d95d <fchmod@plt+0x1375d>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     805d95d <fchmod@plt+0x1375d>
cmp    %ecx,%esi
jae    805d82d <fchmod@plt+0x1362d>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    805d818 <fchmod@plt+0x13618>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     805ce9b <fchmod@plt+0x12c9b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    805d838 <fchmod@plt+0x13638>
jmp    805ce9b <fchmod@plt+0x12c9b>
cmpb   $0x0,-0x4d8(%ebp)
je     805cf65 <fchmod@plt+0x12d65>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    805cf6b <fchmod@plt+0x12d6b>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    805d518 <fchmod@plt+0x13318>
cmpb   $0x0,-0x4ac(%ebp)
je     805d2a6 <fchmod@plt+0x130a6>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805d2ac <fchmod@plt+0x130ac>
cmp    $0x47,%al
jne    805d9f0 <fchmod@plt+0x137f0>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     805d518 <fchmod@plt+0x13318>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049fc0 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     805daad <fchmod@plt+0x138ad>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805d94d <fchmod@plt+0x1374d>
jmp    805d518 <fchmod@plt+0x13318>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    805d979 <fchmod@plt+0x13779>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    805d968 <fchmod@plt+0x13768>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     805ce9b <fchmod@plt+0x12c9b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    805d988 <fchmod@plt+0x13788>
jmp    805ce9b <fchmod@plt+0x12c9b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049fc0 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     805dab4 <fchmod@plt+0x138b4>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    805d9e0 <fchmod@plt+0x137e0>
jmp    805d7d1 <fchmod@plt+0x135d1>
cmp    $0x41,%al
jne    805cbc8 <fchmod@plt+0x129c8>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    805da63 <fchmod@plt+0x13863>
test   %esi,%esi
jne    805da63 <fchmod@plt+0x13863>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    805d518 <fchmod@plt+0x13318>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   8049fc0 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     805dac5 <fchmod@plt+0x138c5>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    805daa0 <fchmod@plt+0x138a0>
jmp    805da38 <fchmod@plt+0x13838>
mov    %ebx,%ecx
jmp    805d518 <fchmod@plt+0x13318>
mov    %ebx,%esi
jmp    805d7d1 <fchmod@plt+0x135d1>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049b10 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    805da38 <fchmod@plt+0x13838>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    805cdcf <fchmod@plt+0x12bcf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
test   %eax,%eax
mov    %eax,%edx
js     805db48 <fchmod@plt+0x13948>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     805db40 <fchmod@plt+0x13940>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    805db40 <fchmod@plt+0x13940>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   80585a0 <fchmod@plt+0xe3a0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
lea    0x8(%eax),%edx
cmp    %edx,%eax
ja     805dbd8 <fchmod@plt+0x139d8>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     805dbd8 <fchmod@plt+0x139d8>
lea    0x8(%eax),%ebx
mov    $0xff00ff01,%edx
movl   $0x1415fb4a,0x4(%eax)
mov    %ebx,%eax
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    %eax,%edx
mov    0x80678e0(,%eax,4),%eax
mov    %ebx,0x80678e0(,%edx,4)
mov    %eax,(%ecx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%ebx
test   %ebx,%ebx
je     805dbf2 <fchmod@plt+0x139f2>
cmpl   $0x1415fb4a,-0x4(%ebx)
je     805dbf8 <fchmod@plt+0x139f8>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    $0xff00ff01,%edx
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    0x80678e0(,%eax,4),%ecx
test   %ecx,%ecx
je     805dbf2 <fchmod@plt+0x139f2>
cmp    %ecx,%ebx
jne    805dc26 <fchmod@plt+0x13a26>
jmp    805dc45 <fchmod@plt+0x13a45>
cmp    %edx,%ebx
je     805dc30 <fchmod@plt+0x13a30>
mov    %edx,%ecx
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    805dc20 <fchmod@plt+0x13a20>
jmp    805dbf2 <fchmod@plt+0x139f2>
nop
sub    $0x8,%ecx
mov    -0x8(%ebx),%eax
sub    $0x8,%ebx
mov    %eax,(%ecx)
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8049a60 <free@plt>
lea    0x80678e0(,%eax,4),%ecx
jmp    805dc33 <fchmod@plt+0x13a33>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
call   8049bf0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805ddf8 <fchmod@plt+0x13bf8>
mov    %ebx,0x24(%esp)
xor    %ebx,%ebx
movb   $0x0,0x14(%esp)
lea    0x30(%esp),%edi
cmpb   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
lea    0x18(%esp),%esi
movl   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
jne    805dd30 <fchmod@plt+0x13b30>
mov    0x24(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x8061f20(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805ddb0 <fchmod@plt+0x13bb0>
movl   $0x1,0x28(%esp)
movsbl (%edx),%eax
movb   $0x1,0x2c(%esp)
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
movb   $0x1,0x20(%esp)
test   %eax,%eax
jne    805dd15 <fchmod@plt+0x13b15>
mov    %ebx,%eax
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    805de71 <fchmod@plt+0x13c71>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x28(%esp)
movb   $0x0,0x2c(%esp)
mov    0x28(%esp),%eax
add    $0x1,%ebx
add    %eax,0x24(%esp)
movb   $0x0,0x20(%esp)
cmpb   $0x0,0x14(%esp)
je     805dca8 <fchmod@plt+0x13aa8>
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80560f0 <fchmod@plt+0xbef0>
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049c30 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x28(%esp)
je     805dd08 <fchmod@plt+0x13b08>
cmp    $0xfffffffe,%eax
je     805ddc8 <fchmod@plt+0x13bc8>
test   %eax,%eax
jne    805dd8c <fchmod@plt+0x13b8c>
mov    0x24(%esp),%eax
movl   $0x1,0x28(%esp)
cmpb   $0x0,(%eax)
jne    805de4d <fchmod@plt+0x13c4d>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    805de29 <fchmod@plt+0x13c29>
mov    %esi,(%esp)
movb   $0x1,0x2c(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805dcdb <fchmod@plt+0x13adb>
movb   $0x0,0x14(%esp)
jmp    805dcdb <fchmod@plt+0x13adb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049a80 <mbsinit@plt>
test   %eax,%eax
je     805de05 <fchmod@plt+0x13c05>
movb   $0x1,0x14(%esp)
jmp    805dd30 <fchmod@plt+0x13b30>
xchg   %ax,%ax
mov    0x24(%esp),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049dc0 <strlen@plt>
movb   $0x0,0x2c(%esp)
movb   $0x0,0x20(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
add    %eax,0x24(%esp)
jmp    805dd25 <fchmod@plt+0x13b25>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049dc0 <strlen@plt>
jmp    805dcea <fchmod@plt+0x13aea>
movl   $0x80620b8,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617d2,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80620b8,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x8061800,(%esp)
call   804a1b0 <__assert_fail@plt>
movl   $0x80620b8,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x80617c4,0x4(%esp)
movl   $0x80617e9,(%esp)
call   804a1b0 <__assert_fail@plt>
call   8049b10 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     805deb0 <fchmod@plt+0x13cb0>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     805dec0 <fchmod@plt+0x13cc0>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     805df22 <fchmod@plt+0x13d22>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     805dfb0 <fchmod@plt+0x13db0>
mov    (%eax),%ebx
jmp    *0x80620d4(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     805def8 <fchmod@plt+0x13cf8>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    805df18 <fchmod@plt+0x13d18>
movl   $0x80620cb,0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    805df18 <fchmod@plt+0x13d18>
movl   $0x8062130,0x4(%eax)
jmp    805df18 <fchmod@plt+0x13d18>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    805e03a <fchmod@plt+0x13e3a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     805e068 <fchmod@plt+0x13e68>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    805e030 <fchmod@plt+0x13e30>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    805e11c <fchmod@plt+0x13f1c>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    805e10e <fchmod@plt+0x13f0e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     805e1a8 <fchmod@plt+0x13fa8>
cmp    $0x2b,%dl
je     805e1b8 <fchmod@plt+0x13fb8>
cmp    $0x20,%dl
je     805e1c8 <fchmod@plt+0x13fc8>
cmp    $0x23,%dl
je     805e1d8 <fchmod@plt+0x13fd8>
cmp    $0x30,%dl
nop
je     805e1e8 <fchmod@plt+0x13fe8>
cmp    $0x49,%dl
jne    805e1f8 <fchmod@plt+0x13ff8>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    805e0c8 <fchmod@plt+0x13ec8>
orl    $0x1,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    805e120 <fchmod@plt+0x13f20>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    805e0bc <fchmod@plt+0x13ebc>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    805e152 <fchmod@plt+0x13f52>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     805e169 <fchmod@plt+0x13f69>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    805e150 <fchmod@plt+0x13f50>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     805e7f4 <fchmod@plt+0x145f4>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    805e0bc <fchmod@plt+0x13ebc>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    805e108 <fchmod@plt+0x13f08>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     805e484 <fchmod@plt+0x14284>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     805e244 <fchmod@plt+0x14044>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     805ea8a <fchmod@plt+0x1488a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    805e220 <fchmod@plt+0x14020>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     805e437 <fchmod@plt+0x14237>
add    $0x1,%esi
xor    %eax,%eax
jmp    805e27e <fchmod@plt+0x1407e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     805e290 <fchmod@plt+0x14090>
cmp    $0x6c,%dl
je     805e298 <fchmod@plt+0x14098>
cmp    $0x6a,%dl
je     805e2a0 <fchmod@plt+0x140a0>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     805e278 <fchmod@plt+0x14078>
cmp    $0x74,%dl
jne    805e2a8 <fchmod@plt+0x140a8>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    805e258 <fchmod@plt+0x14058>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    805e278 <fchmod@plt+0x14078>
or     $0x4,%eax
jmp    805e278 <fchmod@plt+0x14078>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    805e278 <fchmod@plt+0x14078>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    805e278 <fchmod@plt+0x14078>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     805e7f4 <fchmod@plt+0x145f4>
movzbl %cl,%ecx
jmp    *0x806214c(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     805e990 <fchmod@plt+0x14790>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    805e88b <fchmod@plt+0x1468b>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     805e327 <fchmod@plt+0x14127>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    805e310 <fchmod@plt+0x14110>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805e912 <fchmod@plt+0x14712>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    805e36a <fchmod@plt+0x1416a>
mov    0x4(%eax),%eax
jmp    805e03a <fchmod@plt+0x13e3a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     805e3f8 <fchmod@plt+0x141f8>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     805e3f8 <fchmod@plt+0x141f8>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805e9b2 <fchmod@plt+0x147b2>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805e3f8 <fchmod@plt+0x141f8>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     805ea91 <fchmod@plt+0x14891>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    805e03a <fchmod@plt+0x13e3a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     805e928 <fchmod@plt+0x14728>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    805e928 <fchmod@plt+0x14728>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     805e40d <fchmod@plt+0x1420d>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805e422 <fchmod@plt+0x14222>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049ed0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    805e05b <fchmod@plt+0x13e5b>
cmpb   $0x2a,0x1(%esi)
je     805e6de <fchmod@plt+0x144de>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     805e466 <fchmod@plt+0x14266>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    805e458 <fchmod@plt+0x14258>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    805e24d <fchmod@plt+0x1404d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    805e528 <fchmod@plt+0x14328>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     805e7f4 <fchmod@plt+0x145f4>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    805e3cc <fchmod@plt+0x141cc>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     805e507 <fchmod@plt+0x14307>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    805e4f0 <fchmod@plt+0x142f0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805e982 <fchmod@plt+0x14782>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    805e244 <fchmod@plt+0x14044>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805e530 <fchmod@plt+0x14330>
cmp    $0x24,%dl
jne    805e4a8 <fchmod@plt+0x142a8>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     805e562 <fchmod@plt+0x14362>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805e54b <fchmod@plt+0x1434b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     805e7f4 <fchmod@plt+0x145f4>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    805e4c5 <fchmod@plt+0x142c5>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     805e2d0 <fchmod@plt+0x140d0>
test   $0x4,%al
jne    805e2d0 <fchmod@plt+0x140d0>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     805e2d0 <fchmod@plt+0x140d0>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    805e2d0 <fchmod@plt+0x140d0>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     805e83b <fchmod@plt+0x1463b>
test   $0x4,%al
jne    805e83b <fchmod@plt+0x1463b>
cmp    $0x7,%eax
jg     805eab8 <fchmod@plt+0x148b8>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805eafc <fchmod@plt+0x148fc>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
cmp    $0xf,%eax
jle    805e9c1 <fchmod@plt+0x147c1>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
cmp    $0xf,%eax
jg     805e84c <fchmod@plt+0x1464c>
test   $0x4,%al
jne    805e84c <fchmod@plt+0x1464c>
cmp    $0x7,%eax
jg     805eac9 <fchmod@plt+0x148c9>
test   $0x2,%al
jne    805eb0d <fchmod@plt+0x1490d>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     805e85d <fchmod@plt+0x1465d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805e70b <fchmod@plt+0x1450b>
cmp    $0x24,%dl
jne    805e85d <fchmod@plt+0x1465d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     805e73d <fchmod@plt+0x1453d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805e726 <fchmod@plt+0x14526>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     805e7f4 <fchmod@plt+0x145f4>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     805e9db <fchmod@plt+0x147db>
mov    0x14(%esp),%eax
test   %eax,%eax
js     805e3f8 <fchmod@plt+0x141f8>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     805e79a <fchmod@plt+0x1459a>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     805e3f8 <fchmod@plt+0x141f8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805e3f8 <fchmod@plt+0x141f8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     805eb1e <fchmod@plt+0x1491e>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805e3fc <fchmod@plt+0x141fc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805eb36 <fchmod@plt+0x14936>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    805e9e6 <fchmod@plt+0x147e6>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     805e811 <fchmod@plt+0x14611>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805e826 <fchmod@plt+0x14626>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049ed0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805e05b <fchmod@plt+0x13e5b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    805e76b <fchmod@plt+0x1456b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     805e7f4 <fchmod@plt+0x145f4>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    805e76b <fchmod@plt+0x1456b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     805e3f8 <fchmod@plt+0x141f8>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     805e8b0 <fchmod@plt+0x146b0>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     805e3f8 <fchmod@plt+0x141f8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805e3f8 <fchmod@plt+0x141f8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     805ea42 <fchmod@plt+0x14842>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     805e3ff <fchmod@plt+0x141ff>
cmp    %eax,0x30(%esp)
je     805ea58 <fchmod@plt+0x14858>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    805e2f7 <fchmod@plt+0x140f7>
cmp    %eax,0x24(%esp)
je     805e33e <fchmod@plt+0x1413e>
jmp    805e7ff <fchmod@plt+0x145ff>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805e3f8 <fchmod@plt+0x141f8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     805eaa9 <fchmod@plt+0x148a9>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805e3fc <fchmod@plt+0x141fc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805eada <fchmod@plt+0x148da>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    805e4da <fchmod@plt+0x142da>
cmp    $0x5,%eax
je     805e241 <fchmod@plt+0x14041>
jmp    805e7ff <fchmod@plt+0x145ff>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     805e7f4 <fchmod@plt+0x145f4>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    805e2e2 <fchmod@plt+0x140e2>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
jmp    805e3a7 <fchmod@plt+0x141a7>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     805ea10 <fchmod@plt+0x14810>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    805e9f9 <fchmod@plt+0x147f9>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805ea2f <fchmod@plt+0x1482f>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    805e24d <fchmod@plt+0x1404d>
cmp    $0x5,%eax
jne    805e7ff <fchmod@plt+0x145ff>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    805e24d <fchmod@plt+0x1404d>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     805eb2d <fchmod@plt+0x1492d>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    805e902 <fchmod@plt+0x14702>
xor    %eax,%eax
jmp    805e231 <fchmod@plt+0x14031>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
jmp    805e3bc <fchmod@plt+0x141bc>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edx
jmp    805e959 <fchmod@plt+0x14759>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    805e972 <fchmod@plt+0x14772>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    805e2d0 <fchmod@plt+0x140d0>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edx
jmp    805e7cb <fchmod@plt+0x145cb>
mov    0x30(%esp),%eax
jmp    805e3ff <fchmod@plt+0x141ff>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    805e7e4 <fchmod@plt+0x145e4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    805eba8 <fchmod@plt+0x149a8>
cmp    %edi,%esi
jbe    805ebe0 <fchmod@plt+0x149e0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     805ec00 <fchmod@plt+0x14a00>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    805ec10 <fchmod@plt+0x14a10>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     805eca8 <fchmod@plt+0x14aa8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    805ebf1 <fchmod@plt+0x149f1>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    805eb9b <fchmod@plt+0x1499b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     805ec94 <fchmod@plt+0x14a94>
cmp    %eax,0xc(%esp)
jb     805ec90 <fchmod@plt+0x14a90>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    805ec6e <fchmod@plt+0x14a6e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    805ec6e <fchmod@plt+0x14a6e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     805ebc1 <fchmod@plt+0x149c1>
jmp    805ebd1 <fchmod@plt+0x149d1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a990 <fchmod@plt+0x790>
add    $0x8335,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x10c(%ebx),%esi
call   8049958 <_init>
lea    -0x110(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     805ed19 <fchmod@plt+0x14b19>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x110(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    805ecf8 <fchmod@plt+0x14af8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    805ed30 <fchmod@plt+0x14b30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a990 <fchmod@plt+0x790>
add    $0x82ba,%ebx
sub    $0x18,%esp
lea    0x244(%ebx),%eax
test   %eax,%eax
je     805ed78 <fchmod@plt+0x14b78>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c40 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805ed5b <fchmod@plt+0x14b5b>
push   %ebx
sub    $0x8,%esp
call   804a990 <fchmod@plt+0x790>
add    $0x827b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
sub    $0x6572702d,%eax
jae    805ee14 <_IO_stdin_used+0x70>
jb     805ee27 <_IO_stdin_used+0x83>
add    %ah,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    805ee36 <_IO_stdin_used+0x92>
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805edee <_IO_stdin_used+0x4a>
insl   (%dx),%es:(%edi)
popa
imul   $0x64,0x20(%ebp),%esp
imul   $0x726f7463,0x65(%edx),%esi
jns    805edfd <_IO_stdin_used+0x59>
and    $0x65730073,%eax
je     805ee58 <_IO_stdin_used+0xb4>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     805ee18 <_IO_stdin_used+0x74>
and    $0x520a0073,%eax
gs
jo     805ee6f <_IO_stdin_used+0xcb>
jb     805ee76 <_IO_stdin_used+0xd2>
and    %ah,0x75622073
addr16 jae 805ee2b <_IO_stdin_used+0x87>
je     805ee7c <_IO_stdin_used+0xd8>
and    %ah,0x62000a73
jne    805ee7c <_IO_stdin_used+0xd8>
sub    $0x65726f63,%eax
jne    805ee90 <_IO_stdin_used+0xec>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     805ee8e <_IO_stdin_used+0xea>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    805ee78 <_IO_stdin_used+0xd4>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     805eea9 <_IO_stdin_used+0x105>
jne    805eeba <_IO_stdin_used+0x116>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
and    $0x3e2d2073,%eax
and    %ah,0x6d000a73
imul   $0x20676e69,0x73(%ebx),%esi
imul   $0x706f,0x20(%ebp,%eiz,2),%bp
gs
jb     805eecb <_IO_stdin_used+0x127>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x78(%ebp)
je     805eee3 <_IO_stdin_used+0x13f>
popa
and    %ch,0x70(%edi)
gs
jb     805eed9 <_IO_stdin_used+0x135>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x61740073
jb     805eee9 <_IO_stdin_used+0x145>
gs
je     805eea5 <_IO_stdin_used+0x101>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     805eeaf <_IO_stdin_used+0x10b>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ee9b <_IO_stdin_used+0xf7>
das
jne    805ef11 <_IO_stdin_used+0x16d>
jb     805eecf <_IO_stdin_used+0x12b>
jae    805ef0a <_IO_stdin_used+0x166>
popa
jb     805ef0a <_IO_stdin_used+0x166>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dl,%gs:0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %dl,0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
add    %ch,0x6170732d
jb     805ef4c <_IO_stdin_used+0x1a8>
add    %ch,%gs:0x6665722d
insb   (%dx),%es:(%edi)
imul   $0x726f5400,0x6b(%esi),%ebp
bound  %ebp,-0x3d(%edx)
mov    $0x72,%dh
outsb  %ds:(%esi),(%dx)
and    %al,0x72(%edi)
popa
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    805ef64 <_IO_stdin_used+0x1c0>
add    %dl,%fs:0x72(%edi,%ebp,2)
bound  %ebp,0x6f(%edx)
jb     805ef6e <_IO_stdin_used+0x1ca>
and    %al,0x72(%edi)
popa
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    805ef76 <_IO_stdin_used+0x1d2>
add    %cl,%fs:0x69(%edx)
insl   (%dx),%es:(%edi)
and    %cl,0x65(%ebp)
jns    805ef77 <_IO_stdin_used+0x1d3>
jb     805ef7d <_IO_stdin_used+0x1d9>
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%si)
jbe    805ef84 <_IO_stdin_used+0x1e0>
and    %cl,%fs:0x61(%ebp)
arpl   %cx,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jp     805ef8e <_IO_stdin_used+0x1ea>
add    %ah,%gs:0x70(%ebx)
add    %ah,0x62(%ecx)
fs
dec    %ax
imul   $0x74737270,0x6e(%esp,%ecx,2),%ebp
cmp    0x76(%ebp),%dh
js     805ef8c <_IO_stdin_used+0x1e8>
push   %edx
push   %ebx
cmp    0x62(%eax,%eax,1),%dl
popa
arpl   %bp,0x75(%ebx)
jo     805ef68 <_IO_stdin_used+0x1c4>
je     805efc3 <_IO_stdin_used+0x21f>
jo     805efb1 <_IO_stdin_used+0x20d>
add    %ch,0x6f(%ebp)
fs add %dh,%fs:%gs:0x6d(%ecx,%ebp,2)
gs
jae    805efcc <_IO_stdin_used+0x228>
popa
insl   (%dx),%es:(%edi)
jo     805efcf <_IO_stdin_used+0x22b>
add    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805efd6 <_IO_stdin_used+0x232>
push   $0x6c007069
imul   $0x6f630073,0x6b(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     805efd7 <_IO_stdin_used+0x233>
js     805efe8 <_IO_stdin_used+0x244>
add    %bh,0x61(%eax)
je     805efed <_IO_stdin_used+0x249>
jb     805ef7b <_IO_stdin_used+0x1d7>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x72(%ecx)
arpl   %bp,0x69(%eax)
jbe    805efeb <_IO_stdin_used+0x247>
add    %ah,0x74(%ecx)
je     805effd <_IO_stdin_used+0x259>
imul   $0x2d736574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    805ef97 <_IO_stdin_used+0x1f3>
bound  %esp,0x63(%ecx)
imul   $0x0,0x70(%ebp),%esi
arpl   %bp,0x70(%edi)
jns    805efd0 <_IO_stdin_used+0x22c>
arpl   %bp,0x6e(%edi)
je     805f00d <_IO_stdin_used+0x269>
outsb  %ds:(%esi),(%dx)
je     805f01e <_IO_stdin_used+0x27a>
add    %ah,0x6f(%esi)
jb     805f013 <_IO_stdin_used+0x26f>
add    %ch,%gs:0x6e(%ecx)
je     805f01b <_IO_stdin_used+0x277>
jb     805f019 <_IO_stdin_used+0x275>
arpl   %si,0x76(%ecx,%ebp,2)
add    %ch,%gs:0x6f(%esi)
sub    $0x626f6c63,%eax
bound  %esp,0x72(%ebp)
add    %ch,0x6f(%esi)
sub    $0x65726564,%eax
data16
gs
jb     805f039 <_IO_stdin_used+0x295>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x73657270,%eax
gs
jb     805f058 <_IO_stdin_used+0x2b4>
add    %ch,%gs:0x6f(%esi)
sub    $0x67726174,%eax
gs
je     805f01b <_IO_stdin_used+0x277>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805eff8 <_IO_stdin_used+0x254>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x656c6966,%eax
sub    $0x74737973,%eax
gs
insl   (%dx),%es:(%edi)
add    %dh,0x61(%eax)
jb     805f071 <_IO_stdin_used+0x2cd>
outsb  %ds:(%esi),(%dx)
je     805f082 <_IO_stdin_used+0x2de>
add    %dh,0x61(%eax)
je     805f07c <_IO_stdin_used+0x2d8>
add    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    805f085 <_IO_stdin_used+0x2e1>
jbe    805f083 <_IO_stdin_used+0x2df>
add    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f08a <_IO_stdin_used+0x2e6>
sub    $0x74736564,%eax
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %dh,0x74(%ebx)
jb     805f09f <_IO_stdin_used+0x2fb>
jo     805f065 <_IO_stdin_used+0x2c1>
je     805f0ac <_IO_stdin_used+0x308>
popa
imul   $0x6c732d67,0x6e(%ecx,%ebp,2),%ebp
popa
jae    805f0ae <_IO_stdin_used+0x30a>
gs
jae    805f049 <_IO_stdin_used+0x2a5>
jae    805f0c0 <_IO_stdin_used+0x31c>
data32 imul $0x7973,0x0(%eax),%di
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x2d(%ebx),%esp
add    %dh,0x70(%ebp)
fs
popa
je     805f0c9 <_IO_stdin_used+0x325>
add    %dh,0x65(%esi)
jb     805f0cb <_IO_stdin_used+0x327>
outsl  %ds:(%esi),(%dx)
jae    805f0d1 <_IO_stdin_used+0x32d>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805f072 <_IO_stdin_used+0x2ce>
jbe    805f0d9 <_IO_stdin_used+0x335>
jb     805f0e9 <_IO_stdin_used+0x345>
imul   $0x74756100,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
add    %ch,0x65(%esi)
jbe    805f0e8 <_IO_stdin_used+0x344>
jb     805f085 <_IO_stdin_used+0x2e1>
add    %al,(%eax)
add    %cl,-0x55(%eax)
add    $0x8,%al
inc    %eax
stos   %eax,%es:(%edi)
add    $0x8,%al
cmp    %ch,-0x54cff7fc(%ebx)
add    $0x8,%al
or     %ch,-0x5507f7fc(%ebx)
add    $0x8,%al
pop    %eax
stos   %eax,%es:(%edi)
add    $0x8,%al
stos   %eax,%es:(%edi)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
lahf
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
xchg   %eax,%edx
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
test   %esp,0x4a6c908(%esp,%eax,1)
or     %cl,%cl
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
pop    %ss
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     $0x240804a5,%eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %eax,$0xa3
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
xor    $0x1b0804a4,%eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     %esp,0x4a6c908(%esp,%eax,1)
or     %bh,%bh
mov    %eax,0xa6c90804
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmc
mov    %eax,0xa6c90804
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
out    %al,(%dx)
mov    %eax,0xa6c90804
add    $0x8,%al
js     805f426 <_IO_stdin_used+0x682>
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
shll   -0x5936f7fc(%ebx)
add    $0x8,%al
or     $0x800804a5,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
xor    -0x59d6f7fc(%esi),%esp
add    $0x8,%al
pop    %ds
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
adc    $0xc90804a6,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
leave
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     -0x59fef7fc(%esi),%esp
add    $0x8,%al
out    %al,(%dx)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
loop   805f47b <_IO_stdin_used+0x6d7>
add    $0x8,%al
les    -0x5a6cf7fc(%ebx),%esp
add    $0x8,%al
dec    %ebp
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
inc    %ecx
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
aaa
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %cl,-0x11(%ebp)
add    $0x5ef5208,%eax
or     %bl,-0x11(%ebp)
add    $0x5ef6708,%eax
or     %ch,-0x11(%ebp)
add    $0x5ef7508,%eax
or     %bh,-0x11(%ebx)
add    $0x8,%eax
add    %bh,-0x11(%edi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
xchg   %ebp,%edi
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x69000000(%eax)
out    %eax,(%dx)
add    $0x208,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
sahf
out    %eax,(%dx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x34000000(%ecx)
out    %eax,(%dx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %ch,0x805(%edi,%ebp,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
data16
add    %al,(%eax)
add    %dh,0x805ef(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
pop    %ecx
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bh,0x805ef(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
leave
out    %eax,(%dx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
fsubr  %st(7),%st
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x1c000000(%edx)
out    %eax,(%dx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
out    %eax,(%dx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
or     %dh,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x10000000(%ebx)
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x56000000(%ebx)
in     (%dx),%eax
add    $0x208,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0xfeb0000(%eax,%eax,1)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
pop    %ds
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0x2c000000(%eax)
out    %al,(%dx)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x23000000(%esi)
out    %al,(%dx)
add    $0x208,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x32000000(%ebp)
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x49000000(%edi)
lock add $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
push   %eax
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
out    %eax,$0xef
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,-0x10(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
gs
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
lock add $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
pushl  -0x10(%edx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bh,-0x10(%edx)
add    $0x6185a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x5f07a08,%eax
or     %bl,0x18(%edx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     805f76e <_IO_stdin_used+0x9ca>
popa
je     805f7c5 <_IO_stdin_used+0xa21>
jb     805f7bc <_IO_stdin_used+0xa18>
bound  %esi,0x74(%ebp)
gs
jae    805f779 <_IO_stdin_used+0x9d5>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x25000073
jae    805f783 <_IO_stdin_used+0x9df>
gs
js     805f7cf <_IO_stdin_used+0xa2b>
jae    805f7dc <_IO_stdin_used+0xa38>
jae    805f78a <_IO_stdin_used+0x9e6>
bound  %esi,0x74(%ebp)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     805f795 <_IO_stdin_used+0x9f1>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f781 <_IO_stdin_used+0x9dd>
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     805f802 <_IO_stdin_used+0xa5e>
gs
jae    805f7f8 <_IO_stdin_used+0xa54>
jb     805f80b <_IO_stdin_used+0xa67>
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs
jae    805f7bd <_IO_stdin_used+0xa19>
outsw  %ds:(%esi),(%dx)
jb     805f7c1 <_IO_stdin_used+0xa1d>
and    $0x61660073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     805f822 <_IO_stdin_used+0xa7e>
gs
jae    805f818 <_IO_stdin_used+0xa74>
jb     805f82b <_IO_stdin_used+0xa87>
and    %ch,%gs:0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805f830 <_IO_stdin_used+0xa8c>
push   $0x66207069
outsl  %ds:(%esi),(%dx)
jb     805f7e5 <_IO_stdin_used+0xa41>
and    $0x61660073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     805f846 <_IO_stdin_used+0xaa2>
gs
jae    805f83c <_IO_stdin_used+0xa98>
jb     805f84f <_IO_stdin_used+0xaab>
and    %dh,%gs:0x65(%eax)
jb     805f84c <_IO_stdin_used+0xaa8>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     805f80b <_IO_stdin_used+0xa67>
and    $0x73,%eax
push   %esp
jb     805f86c <_IO_stdin_used+0xac8>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     805f824 <_IO_stdin_used+0xa80>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805f86d <_IO_stdin_used+0xac9>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805f87c <_IO_stdin_used+0xad8>
popa
je     805f87b <_IO_stdin_used+0xad7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x2d(%ebx)
push   %esp
pop    %ebp
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %al,0x53(%ebp,%eax,2)
push   %esp
or     (%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x4f5b2073
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
cs cs and %al,%cs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     (%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x4f5b2073
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %ch,%cs:0x49442074
49
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
cs cs or %cs:(%eax),%al
add    %al,0x6f(%ebx)
jo     805f915 <_IO_stdin_used+0xb71>
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %dh,0x20(%edi,%ebp,2)
inc    %esp
inc    %ebp
push   %ebx
push   %esp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     805f8d0 <_IO_stdin_used+0xb2c>
insl   (%dx),%es:(%edi)
jne    805f91f <_IO_stdin_used+0xb7b>
je     805f91e <_IO_stdin_used+0xb7a>
jo     805f923 <_IO_stdin_used+0xb7f>
and    %dl,%gs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
sub    %dh,0x29(%ebx)
and    %dh,0x20(%edi,%ebp,2)
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     %cs:(%eax),%al
add    %al,(%eax)
or     0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
fs
popa
je     805f94b <_IO_stdin_used+0xba7>
jb     805f957 <_IO_stdin_used+0xbb3>
and    %ah,0x72(%ecx)
addr16 jne 805f951 <_IO_stdin_used+0xbad>
outsb  %gs:(%esi),(%dx)
je     805f95b <_IO_stdin_used+0xbb7>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805f95e <_IO_stdin_used+0xbba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805f919 <_IO_stdin_used+0xb75>
popa
jb     805f961 <_IO_stdin_used+0xbbd>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     805f973 <_IO_stdin_used+0xbcf>
jb     805f97f <_IO_stdin_used+0xbdb>
and    %ah,0x6f(%esi)
jb     805f92b <_IO_stdin_used+0xb87>
jae    805f975 <_IO_stdin_used+0xbd1>
outsl  %ds:(%esi),(%dx)
jb     805f984 <_IO_stdin_used+0xbe0>
and    %ch,0x70(%edi)
je     805f97e <_IO_stdin_used+0xbda>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805f939 <_IO_stdin_used+0xb95>
je     805f98a <_IO_stdin_used+0xbe6>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c61
sub    $0x68637261,%eax
imul   $0x20202020,0x65(%esi),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805f9a2 <_IO_stdin_used+0xbfe>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x2d205264
sub    $0x73657270,%eax
gs
jb     805f9ca <_IO_stdin_used+0xc26>
gs
cmp    $0xa6c6c61,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7474612d,%eax
jb     805f9d0 <_IO_stdin_used+0xc2c>
bound  %esi,0x74(%ebp)
gs
jae    805f99a <_IO_stdin_used+0xbf6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    805f992 <_IO_stdin_used+0xbee>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805f99f <_IO_stdin_used+0xbfb>
arpl   %bp,0x70(%edi)
jns    805f9a4 <_IO_stdin_used+0xc00>
je     805f9ee <_IO_stdin_used+0xc4a>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x20,%al
push   $0x75
jae    805fa0b <_IO_stdin_used+0xc67>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x74(%ecx)
je     805fa12 <_IO_stdin_used+0xc6e>
imul   $0xa736574,0x75(%edx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6361622d,%eax
imul   $0x5b,0x70(%ebp),%esi
cmp    $0x544e4f43,%eax
push   %edx
dec    %edi
dec    %esp
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x61,0x20(%ebp),%esp
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805f9f4 <_IO_stdin_used+0xc50>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
gs
js     805fa48 <_IO_stdin_used+0xca4>
jae    805fa55 <_IO_stdin_used+0xcb1>
imul   $0x73656420,0x67(%esi),%ebp
je     805fa53 <_IO_stdin_used+0xcaf>
outsb  %ds:(%esi),(%dx)
popa
je     805fa57 <_IO_stdin_used+0xcb3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x20202062
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x622d2d20,0x65(%ebx),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     805fa43 <_IO_stdin_used+0xc9f>
bound  %esi,0x74(%ebp)
and    %ah,0x65(%edi,%ebp,2)
jae    805fa4c <_IO_stdin_used+0xca8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805fa50 <_IO_stdin_used+0xcac>
popa
arpl   %sp,0x65(%ebx)
jo     805faaa <_IO_stdin_used+0xd06>
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
addr16 jne 805faac <_IO_stdin_used+0xd08>
outsb  %gs:(%esi),(%dx)
je     805fa4d <_IO_stdin_used+0xca9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x706f632d,%eax
jns    805fa7d <_IO_stdin_used+0xcd9>
arpl   %bp,0x6e(%edi)
je     805faba <_IO_stdin_used+0xd16>
outsb  %ds:(%esi),(%dx)
je     805facb <_IO_stdin_used+0xd27>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x70(%edi)
jns    805fa87 <_IO_stdin_used+0xce3>
arpl   %bp,0x6e(%edi)
je     805fad1 <_IO_stdin_used+0xd2d>
outsb  %ds:(%esi),(%dx)
je     805fae2 <_IO_stdin_used+0xd3e>
and    %ch,0x66(%edi)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805faa1 <_IO_stdin_used+0xcfd>
ja     805faeb <_IO_stdin_used+0xd47>
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    805faf6 <_IO_stdin_used+0xd52>
jbe    805faf4 <_IO_stdin_used+0xd50>
or     (%eax),%ah
and    %ch,0x20202064
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805fb12 <_IO_stdin_used+0xd6e>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x2d6f6e2d
fs
gs
jb     805fb25 <_IO_stdin_used+0xd81>
data16
gs
jb     805fb29 <_IO_stdin_used+0xd85>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
sub    $0x6572702d,%eax
jae    805fb34 <_IO_stdin_used+0xd90>
jb     805fb47 <_IO_stdin_used+0xda3>
gs
cmp    $0x6b6e696c,%eax
jae    805fae3 <_IO_stdin_used+0xd3f>
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c66
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x65206e61,0x20(%esi),%esp
js     805fb6d <_IO_stdin_used+0xdc9>
jae    805fb7a <_IO_stdin_used+0xdd6>
imul   $0x73656420,0x67(%esi),%ebp
je     805fb78 <_IO_stdin_used+0xdd4>
outsb  %ds:(%esi),(%dx)
popa
je     805fb7c <_IO_stdin_used+0xdd8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805fb42 <_IO_stdin_used+0xd9e>
bound  %esp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
gs
fs
sub    $0x20,%al
jb     805fbb5 <_IO_stdin_used+0xe11>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805fbb9 <_IO_stdin_used+0xe15>
and    %ch,0x74(%ecx)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x79(%edx,%esi,2)
and    %ah,0x67(%ecx)
popa
imul   $0x69687428,0x20(%esi),%ebp
jae    805fb8c <_IO_stdin_used+0xde8>
outsl  %ds:(%esi),(%dx)
jo     805fbe3 <_IO_stdin_used+0xe3f>
imul   $0x2020200a,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x6f6e6769,0x20(%ebx),%esi
jb     805fc02 <_IO_stdin_used+0xe5e>
and    %dh,%fs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x706f206e
je     805fc18 <_IO_stdin_used+0xe74>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ecx)
jae    805fc28 <_IO_stdin_used+0xe84>
and    %dh,0x73(%ebp)
gs sub %ecx,%fs:%gs:(%edx)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x65746e69,%eax
jb     805fc2f <_IO_stdin_used+0xe8b>
arpl   %si,0x76(%ecx,%ebp,2)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805fc53 <_IO_stdin_used+0xeaf>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     805fc59 <_IO_stdin_used+0xeb5>
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     805fc51 <_IO_stdin_used+0xead>
and    %ch,0x76(%edi)
gs
jb     805fc69 <_IO_stdin_used+0xec5>
jb     805fc5d <_IO_stdin_used+0xeb9>
je     805fc5b <_IO_stdin_used+0xeb7>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jbe    805fc60 <_IO_stdin_used+0xebc>
jb     805fc6f <_IO_stdin_used+0xecb>
imul   $0x70206120,0x73(%ebp,%eiz,2),%esp
jb     805fc6c <_IO_stdin_used+0xec8>
jbe    805fc72 <_IO_stdin_used+0xece>
outsl  %ds:(%esi),(%dx)
jne    805fc7f <_IO_stdin_used+0xedb>
and    %ch,0x20200a6e
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jo     805fca9 <_IO_stdin_used+0xf05>
imul   $0x20200a29,0x6e(%edi),%ebp
sub    $0x20202048,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805fc80 <_IO_stdin_used+0xedc>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
sub    $0x656e696c,%eax
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    805fc9c <_IO_stdin_used+0xef8>
imul   $0x52554f53,0x20(%esi),%ebp
inc    %ebx
inc    %ebp
or     (%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c6c
sub    $0x6b6e696c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%eax)
jb     805fd0f <_IO_stdin_used+0xf6b>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x736e6920,0x73(%ebp,%eiz,2),%ebp
je     805fd21 <_IO_stdin_used+0xf7d>
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x6f(%ebx)
jo     805fd3f <_IO_stdin_used+0xf9b>
imul   $0x2d20200a,0x67(%esi),%ebp
dec    %esp
sub    $0x20,%al
sub    $0x7265642d,%eax
gs
data16
gs
jb     805fd3f <_IO_stdin_used+0xf9b>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
ja     805fd4e <_IO_stdin_used+0xfaa>
jns    805fd62 <_IO_stdin_used+0xfbe>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805fd17 <_IO_stdin_used+0xf73>
jae    805fd72 <_IO_stdin_used+0xfce>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    805fd26 <_IO_stdin_used+0xf82>
imul   $0x52554f53,0x20(%esi),%ebp
inc    %ebx
inc    %ebp
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c6e
sub    $0x632d6f6e,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x65(%edx)
jb     805fd47 <_IO_stdin_used+0xfa3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     805fd5a <_IO_stdin_used+0xfb6>
outsl  %ds:(%esi),(%dx)
jbe    805fda2 <_IO_stdin_used+0xffe>
jb     805fdb6 <_IO_stdin_used+0x1012>
jb     805fdaa <_IO_stdin_used+0x1006>
je     805fda8 <_IO_stdin_used+0x1004>
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x6f28,0x20(%ebp,%eiz,2),%bp
jbe    805fdbe <_IO_stdin_used+0x101a>
jb     805fdcd <_IO_stdin_used+0x1029>
imul   $0x2020200a,0x73(%ebp,%eiz,2),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
and    %dh,0x72(%eax)
gs
jbe    805fdf1 <_IO_stdin_used+0x104d>
outsl  %ds:(%esi),(%dx)
jne    805fdfe <_IO_stdin_used+0x105a>
and    %ch,0x706f2069
je     805fdfc <_IO_stdin_used+0x1058>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x642d6f6e,%eax
gs
jb     805fe0b <_IO_stdin_used+0x1067>
data16
gs
jb     805fe0f <_IO_stdin_used+0x106b>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
gs
jbe    805fe1f <_IO_stdin_used+0x107b>
jb     805fddc <_IO_stdin_used+0x1038>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805fde3 <_IO_stdin_used+0x103f>
jae    805fe3e <_IO_stdin_used+0x109a>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    805fdf2 <_IO_stdin_used+0x104e>
imul   $0x52554f53,0x20(%esi),%ebp
inc    %ebx
inc    %ebp
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x20202070
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805fe62 <_IO_stdin_used+0x10be>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6572702d
jae    805fe73 <_IO_stdin_used+0x10cf>
jb     805fe86 <_IO_stdin_used+0x10e2>
gs
cmp    $0x65646f6d,%eax
sub    $0x6f,%al
ja     805fe88 <_IO_stdin_used+0x10e4>
gs
jb     805fe90 <_IO_stdin_used+0x10ec>
push   $0x742c7069
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805fe9e <_IO_stdin_used+0x10fa>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6572702d
jae    805fe9e <_IO_stdin_used+0x10fa>
jb     805feb1 <_IO_stdin_used+0x110d>
gs
pop    %ebx
cmp    $0x52545441,%eax
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
pop    %ebp
and    %ah,(%eax)
and    %dh,0x72(%eax)
gs
jae    805feb5 <_IO_stdin_used+0x1111>
jb     805fec8 <_IO_stdin_used+0x1124>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x74746120,0x64(%ebp),%esp
jb     805fed0 <_IO_stdin_used+0x112c>
bound  %esi,0x74(%ebp)
gs
jae    805fe8d <_IO_stdin_used+0x10e9>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    805fee0 <_IO_stdin_used+0x113c>
je     805feb0 <_IO_stdin_used+0x110c>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
sub    $0x6f,%al
ja     805ff0e <_IO_stdin_used+0x116a>
gs
jb     805ff16 <_IO_stdin_used+0x1172>
push   $0x742c7069
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805ff24 <_IO_stdin_used+0x1180>
sub    %ebp,(%eax,%eiz,1)
imul   $0x73736f70,0x20(%esi),%esp
imul   $0x20200a65,0x6c(%edx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x64(%ecx)
imul   $0x206c616e,%fs:0x6f(%ecx,%ebp,2),%esi
20
popa
je     805ff63 <_IO_stdin_used+0x11bf>
jb     805ff5a <_IO_stdin_used+0x11b6>
bound  %esi,0x74(%ebp)
gs
jae    805ff31 <_IO_stdin_used+0x118d>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805ff62 <_IO_stdin_used+0x11be>
js     805ff73 <_IO_stdin_used+0x11cf>
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x78202c73,0x6b(%esi),%ebp
popa
je     805ff80 <_IO_stdin_used+0x11dc>
jb     805ff3a <_IO_stdin_used+0x1196>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d6f6e2d
jo     805ffb7 <_IO_stdin_used+0x1213>
gs
jae    805ffad <_IO_stdin_used+0x1209>
jb     805ffc0 <_IO_stdin_used+0x121c>
gs
cmp    $0x52545441,%eax
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     805ff7d <_IO_stdin_used+0x11d9>
jo     805ffd1 <_IO_stdin_used+0x122d>
gs
jae    805ffc7 <_IO_stdin_used+0x1223>
jb     805ffda <_IO_stdin_used+0x1236>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x74746120,0x64(%ebp),%esp
jb     805ffe2 <_IO_stdin_used+0x123e>
bound  %esi,0x74(%ebp)
gs
jae    805ff89 <_IO_stdin_used+0x11e5>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7261702d,%eax
outsb  %gs:(%esi),(%dx)
je     8060001 <_IO_stdin_used+0x125d>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8060013 <_IO_stdin_used+0x126f>
and    %ah,%gs:0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
jne    806001d <_IO_stdin_used+0x1279>
arpl   %sp,0x20(%ebp)
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6e(%ebp)
fs
gs
jb     805ffde <_IO_stdin_used+0x123a>
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c52
jb     8060001 <_IO_stdin_used+0x125d>
and    %ch,0x6365722d
jne    806004f <_IO_stdin_used+0x12ab>
jae    8060048 <_IO_stdin_used+0x12a4>
jbe    8060046 <_IO_stdin_used+0x12a2>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x70(%edi)
jns    8060010 <_IO_stdin_used+0x126c>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x63657220,0x73(%ebp),%esp
jne    8060073 <_IO_stdin_used+0x12cf>
jae    806006c <_IO_stdin_used+0x12c8>
jbe    806006a <_IO_stdin_used+0x12c6>
insb   (%dx),%es:(%edi)
jns    8060012 <_IO_stdin_used+0x126e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6665722d,%eax
insb   (%dx),%es:(%edi)
imul   $0x48573d5b,0x6b(%esi),%ebp
inc    %ebp
dec    %esi
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806009e <_IO_stdin_used+0x12fa>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
das
inc    %ebx
outsl  %ds:(%esi),(%dx)
push   %edi
and    %ah,0x6f(%ebx)
jo     80600a6 <_IO_stdin_used+0x1302>
gs
jae    806006e <_IO_stdin_used+0x12ca>
and    %dl,0x65(%ebx)
and    %ah,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8060055 <_IO_stdin_used+0x12b1>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6d65722d,%eax
outsl  %ds:(%esi),(%dx)
jbe    80600be <_IO_stdin_used+0x131a>
sub    $0x74736564,%eax
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80600d5 <_IO_stdin_used+0x1331>
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
gs
js     80600e2 <_IO_stdin_used+0x133e>
jae    80600ef <_IO_stdin_used+0x134b>
imul   $0x73656420,0x67(%esi),%ebp
je     80600ed <_IO_stdin_used+0x1349>
outsb  %ds:(%esi),(%dx)
popa
je     80600f1 <_IO_stdin_used+0x134d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     80600fb <_IO_stdin_used+0x1357>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
je     806012f <_IO_stdin_used+0x138b>
gs
insl   (%dx),%es:(%edi)
jo     8060133 <_IO_stdin_used+0x138f>
imul   $0x206f7420,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jo     806012e <_IO_stdin_used+0x138a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%ecx)
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
je     8060146 <_IO_stdin_used+0x13a2>
popa
jae    806014b <_IO_stdin_used+0x13a7>
and    %dh,0x69(%edi)
je     8060144 <_IO_stdin_used+0x13a0>
and    %ch,0x726f662d
arpl   %sp,0x29(%ebp)
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6170732d
jb     8060168 <_IO_stdin_used+0x13c4>
gs
cmp    $0x4e454857,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6e(%edi)
je     806017e <_IO_stdin_used+0x13da>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebx)
gs
popa
je     806017e <_IO_stdin_used+0x13da>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x70(%ebx)
popa
jb     8060193 <_IO_stdin_used+0x13ef>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8060156 <_IO_stdin_used+0x13b2>
and    %dl,0x65(%ebx)
and    %ah,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806013d <_IO_stdin_used+0x1399>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7274732d,%eax
imul   $0x69617274,0x2d(%eax),%esi
insb   (%dx),%es:(%edi)
imul   $0x616c732d,0x67(%esi),%ebp
jae    80601b7 <_IO_stdin_used+0x1413>
gs
jae    8060172 <_IO_stdin_used+0x13ce>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80601be <_IO_stdin_used+0x141a>
and    %ah,0x6e(%ecx)
jns    806017e <_IO_stdin_used+0x13da>
je     80601d2 <_IO_stdin_used+0x142e>
popa
imul   $0x6c732067,0x6e(%ecx,%ebp,2),%ebp
popa
jae    80601d4 <_IO_stdin_used+0x1430>
gs
jae    806018f <_IO_stdin_used+0x13eb>
data16
jb     80601e1 <_IO_stdin_used+0x143d>
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
push   %ebx
dec    %edi
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
jb     806020b <_IO_stdin_used+0x1467>
jne    8060213 <_IO_stdin_used+0x146f>
outsb  %gs:(%esi),(%dx)
je     80601b4 <_IO_stdin_used+0x1410>
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x626d7973,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6b6e696c,0x2d(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x73,0x20(%ebp),%esp
jns    8060240 <_IO_stdin_used+0x149c>
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    80601ff <_IO_stdin_used+0x145b>
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
jo     8060267 <_IO_stdin_used+0x14c3>
imul   $0x2d20200a,0x67(%esi),%ebp
push   %ebx
sub    $0x20,%al
sub    $0x6675732d,%eax
imul   $0x5553,0x3d(%eax),%di
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jbe    8060279 <_IO_stdin_used+0x14d5>
jb     8060288 <_IO_stdin_used+0x14e4>
imul   $0x20656874,0x20(%ebp,%eiz,2),%esp
jne    8060293 <_IO_stdin_used+0x14ef>
jne    8060283 <_IO_stdin_used+0x14df>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     806024b <_IO_stdin_used+0x14a7>
jae    80602a2 <_IO_stdin_used+0x14fe>
data32 imul $0x2020,0xa(%eax),%di
sub    $0x2d202c74,%eax
sub    $0x67726174,%eax
gs
je     806026e <_IO_stdin_used+0x14ca>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8060288 <_IO_stdin_used+0x14e4>
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ah,(%eax)
arpl   %bp,0x70(%edi)
jns    806027b <_IO_stdin_used+0x14d7>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x72(%ecx)
addr16 jne 80602d8 <_IO_stdin_used+0x1534>
outsb  %gs:(%esi),(%dx)
je     80602e2 <_IO_stdin_used+0x153e>
and    %ch,0x6e(%ecx)
je     80602e3 <_IO_stdin_used+0x153f>
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x742d6f6e,%eax
popa
jb     80602f5 <_IO_stdin_used+0x1551>
gs
je     80602be <_IO_stdin_used+0x151a>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    80602bb <_IO_stdin_used+0x1517>
and    %ah,(%eax)
and    %dh,0x65(%edx,%esi,2)
popa
je     80602c4 <_IO_stdin_used+0x1520>
inc    %esp
inc    %ebp
push   %ebx
push   %esp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806031f <_IO_stdin_used+0x157b>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c75
sub    $0x61647075,%eax
je     806032f <_IO_stdin_used+0x158b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
jo     8060358 <_IO_stdin_used+0x15b4>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8060305 <_IO_stdin_used+0x1561>
ja     806034f <_IO_stdin_used+0x15ab>
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x65(%esi)
ja     8060366 <_IO_stdin_used+0x15c2>
jb     806030d <_IO_stdin_used+0x1569>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x73(%ebp,%eiz,2)
je     806039b <_IO_stdin_used+0x15f7>
outsb  %ds:(%esi),(%dx)
popa
je     806039f <_IO_stdin_used+0x15fb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
fs
gs
jae    80603e3 <_IO_stdin_used+0x163f>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x69(%ebp)
jae    80603f6 <_IO_stdin_used+0x1652>
imul   $0x2d20200a,0x67(%esi),%ebp
jbe    80603b8 <_IO_stdin_used+0x1614>
and    %ch,0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
js     8060419 <_IO_stdin_used+0x1675>
insb   (%dx),%es:(%edi)
popa
imul   $0x74616877,0x20(%esi),%ebp
and    %ch,0x73(%ecx)
and    %ah,0x65(%edx)
imul   $0x6e6f6420,0x67(%esi),%ebp
or     %gs:(%eax),%ah
and    %ch,0x2d202c78
sub    $0x2d656e6f,%eax
imul   $0x7973,0x2d(%ebp,%eiz,2),%bp
jae    806044a <_IO_stdin_used+0x16a6>
gs
insl   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8060456 <_IO_stdin_used+0x16b2>
popa
jns    8060405 <_IO_stdin_used+0x1661>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%eax,%ebp,2)
jae    806040d <_IO_stdin_used+0x1669>
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    806046a <_IO_stdin_used+0x16c6>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     8060429 <_IO_stdin_used+0x1685>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     806047f <_IO_stdin_used+0x16db>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    80604a2 <_IO_stdin_used+0x16fe>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    80604b4 <_IO_stdin_used+0x1710>
jo     80604b7 <_IO_stdin_used+0x1713>
je     8060464 <_IO_stdin_used+0x16c0>
jbe    80604ab <_IO_stdin_used+0x1707>
jb     80604bb <_IO_stdin_used+0x1717>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     80604bf <_IO_stdin_used+0x171b>
popa
je     80604be <_IO_stdin_used+0x171a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x420a0000,0x0(%edx,%ecx,1),%esi
jns    8060488 <_IO_stdin_used+0x16e4>
fs
gs
popaw
jne    80604da <_IO_stdin_used+0x1736>
je     806049c <_IO_stdin_used+0x16f8>
and    %dh,0x70(%ebx)
popa
jb     80604e9 <_IO_stdin_used+0x1745>
and    %dl,%gs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80604a5 <_IO_stdin_used+0x1701>
popa
jb     80604ed <_IO_stdin_used+0x1749>
and    %ah,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x79(%edx)
and    %ah,0x20(%ecx)
arpl   %si,0x75(%edx)
fs and %ch,%fs:%gs:0x65(%eax)
jne    8060513 <_IO_stdin_used+0x176f>
imul   $0x61206369,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
or     0x6f(%ebx),%ah
jb     8060525 <_IO_stdin_used+0x1781>
gs
jae    8060526 <_IO_stdin_used+0x1782>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x53454420,%fs:0x67(%esi),%ebp
push   %esp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x61(%ebp)
fs and %dh,%fs:%gs:0x70(%ebx)
popa
jb     8060547 <_IO_stdin_used+0x17a3>
and    %ah,%gs:0x73(%ecx)
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,%cs:(%eax)
push   %esp
push   $0x69207461
jae    8060508 <_IO_stdin_used+0x1764>
je     8060552 <_IO_stdin_used+0x17ae>
and    %ah,%gs:0x65(%edx)
push   $0x6f697661
jb     80604ff <_IO_stdin_used+0x175b>
jae    806055c <_IO_stdin_used+0x17b8>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x79(%edx)
and    %ch,0x6170732d
jb     806057b <_IO_stdin_used+0x17d7>
gs
cmp    $0x6f747561,%eax
and    %ah,%cs:(%eax)
push   %ebx
jo     8060579 <_IO_stdin_used+0x17d5>
arpl   %bp,0x66(%ecx)
jns    8060539 <_IO_stdin_used+0x1795>
sub    $0x6170732d,%eax
jb     8060593 <_IO_stdin_used+0x17ef>
gs
cmp    $0x61776c61,%eax
jns    806059b <_IO_stdin_used+0x17f7>
and    %dh,0x20(%edi,%ebp,2)
arpl   %si,0x65(%edx)
popa
je     8060597 <_IO_stdin_used+0x17f3>
and    %ah,0x20(%ecx)
jae    80605a7 <_IO_stdin_used+0x1803>
popa
jb     80605ad <_IO_stdin_used+0x1809>
and    %al,%gs:0x53(%ebp,%eax,2)
push   %esp
or     0x69(%esi),%ah
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
gs
jbe    80605b2 <_IO_stdin_used+0x180e>
jb     806056f <_IO_stdin_used+0x17cb>
je     80605b9 <_IO_stdin_used+0x1815>
and    %dl,%gs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80605c5 <_IO_stdin_used+0x1821>
imul   $0x6c206120,0x73(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%di)
outsl  %ds:(%esi),(%dx)
jne    80605db <_IO_stdin_used+0x1837>
push   $0x71657320
jne    80605e0 <_IO_stdin_used+0x183c>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %bh,0x65(%edx)
jb     80605f5 <_IO_stdin_used+0x1851>
and    %ah,0x79(%edx)
je     80605f0 <_IO_stdin_used+0x184c>
jae    80605bb <_IO_stdin_used+0x1817>
or     0x73(%ebp),%dl
and    %ch,%gs:0x6170732d
jb     806060c <_IO_stdin_used+0x1868>
gs
cmp    $0x6576656e,%eax
jb     80605c1 <_IO_stdin_used+0x181d>
je     8060612 <_IO_stdin_used+0x186e>
and    %ch,0x6e(%ecx)
push   $0x74696269
and    %ah,0x72(%ebx)
gs
popa
je     806061b <_IO_stdin_used+0x1877>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x70(%ebx)
popa
jb     8060630 <_IO_stdin_used+0x188c>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80605f3 <_IO_stdin_used+0x184f>
or     (%edx),%cl
push   %edi
push   $0x2d206e65
sub    $0x6c666572,%eax
imul   $0x6c613d5b,0x6b(%esi),%ebp
ja     806063c <_IO_stdin_used+0x1898>
jns    8060650 <_IO_stdin_used+0x18ac>
pop    %ebp
and    %ch,0x73(%ecx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6570202c,0x64(%ebp),%esp
jb     8060657 <_IO_stdin_used+0x18b3>
outsl  %ds:(%esi),(%dx)
jb     8060661 <_IO_stdin_used+0x18bd>
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x69657774,0x68(%edi),%esp
addr16 push $0x6f632074
jo     8060680 <_IO_stdin_used+0x18dc>
sub    $0x20,%al
ja     8060673 <_IO_stdin_used+0x18cf>
gs
jb     8060673 <_IO_stdin_used+0x18cf>
and    %dh,0x65(%eax,%ebp,2)
or     0x74(%ecx,%eiz,2),%ah
popa
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %ah,0x72(%ecx)
and    %ah,%gs:0x6f(%ebx)
jo     8060690 <_IO_stdin_used+0x18ec>
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806064f <_IO_stdin_used+0x18ab>
ja     8060699 <_IO_stdin_used+0x18f5>
outsb  %gs:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x202e6465,%fs:0x69(%esi),%esp
and    %cl,0x66(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    8060667 <_IO_stdin_used+0x18c3>
imul   $0x20746f6e,0x20(%ebx),%esi
jo     80606bf <_IO_stdin_used+0x191b>
jae    80606c5 <_IO_stdin_used+0x1921>
imul   $0x68742065,0x6c(%edx),%esp
and    %ah,%gs:0x6f(%ebx)
jo     80606d8 <_IO_stdin_used+0x1934>
or     0x61(%esi),%ah
imul   $0x20726f20,0x2c(%ebx,%esi,2),%ebp
imul   $0x65722d2d,0x20(%esi),%esp
data16
insb   (%dx),%es:(%edi)
imul   $0x7475613d,0x6b(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6166202c,0x64(%ebp),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x20(%ebx)
je     8060705 <_IO_stdin_used+0x1961>
and    %ah,0x20(%ecx)
jae    806070f <_IO_stdin_used+0x196b>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8060705 <_IO_stdin_used+0x1961>
and    %ah,0x6f(%ebx)
jo     806071f <_IO_stdin_used+0x197b>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
push   %esp
push   $0x61622065
arpl   %bp,0x75(%ebx)
jo     80606d8 <_IO_stdin_used+0x1934>
jae    806072f <_IO_stdin_used+0x198b>
data32 imul $0x7369,0x20(%eax),%di
and    %ah,(%edi)
jle    80606ec <_IO_stdin_used+0x1948>
sub    $0x20,%al
jne    8060737 <_IO_stdin_used+0x1993>
insb   (%dx),%es:(%edi)
gs
jae    8060740 <_IO_stdin_used+0x199c>
and    %dh,0x65(%ebx)
je     80606f2 <_IO_stdin_used+0x194e>
ja     806073d <_IO_stdin_used+0x1999>
je     806073e <_IO_stdin_used+0x199a>
and    %ch,0x6675732d
imul   $0x726f,0x20(%eax),%di
and    %dl,0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
or     %cs:0x65(%eax,%ebp,2),%dl
and    %dh,0x65(%esi)
jb     8060774 <_IO_stdin_used+0x19d0>
imul   $0x6e6f6320,0x6e(%edi),%ebp
je     806077c <_IO_stdin_used+0x19d8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
je     8060779 <_IO_stdin_used+0x19d5>
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%ebp)
jns    8060738 <_IO_stdin_used+0x1994>
bound  %esp,0x20(%ebp)
jae    8060782 <_IO_stdin_used+0x19de>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x69(%esi)
popa
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
outsl  %ds:(%esi),(%dx)
jo     80607ac <_IO_stdin_used+0x1a08>
imul   $0x20726f20,0x6e(%edi),%ebp
je     80607a9 <_IO_stdin_used+0x1a05>
jb     80607b2 <_IO_stdin_used+0x1a0e>
jne    80607ac <_IO_stdin_used+0x1a08>
push   $0x6568740a
and    %dl,0x45(%esi)
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
and    %ah,0x6e(%ebp)
jbe    80607c8 <_IO_stdin_used+0x1a24>
jb     80607d0 <_IO_stdin_used+0x1a2c>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8060787 <_IO_stdin_used+0x19e3>
jbe    80607ca <_IO_stdin_used+0x1a26>
jb     80607d4 <_IO_stdin_used+0x1a30>
popa
bound  %ebp,0x2e(%ebp,%eiz,2)
and    %ah,(%eax)
dec    %eax
gs
jb     80607db <_IO_stdin_used+0x1a37>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80607e9 <_IO_stdin_used+0x1a45>
jae    80607c0 <_IO_stdin_used+0x1a1c>
or     (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
data16
data16
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
jbe    8060807 <_IO_stdin_used+0x1a63>
jb     80607c4 <_IO_stdin_used+0x1a20>
insl   (%dx),%es:(%edi)
popa
imul   $0x62,0x20(%ebp),%esp
popa
arpl   %bp,0x75(%ebx)
jo     8060823 <_IO_stdin_used+0x1a7f>
and    %ch,(%eax)
gs
jbe    806081a <_IO_stdin_used+0x1a76>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
imul   $0x65766967,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
sub    %ecx,(%edx)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
jne    806083f <_IO_stdin_used+0x1a9b>
bound  %esp,0x72(%ebp)
gs
fs
sub    $0x20,%al
je     80607fb <_IO_stdin_used+0x1a57>
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x6e,0x20(%ebp),%esp
jne    8060854 <_IO_stdin_used+0x1ab0>
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8060867 <_IO_stdin_used+0x1ac3>
or     (%eax),%ah
and    %ah,0x78(%ebp)
imul   $0x2c676e69,0x74(%ebx),%esi
and    %ch,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ch,%fs:%gs:0x66(%ecx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8060896 <_IO_stdin_used+0x1af2>
and    %ah,0x78(%ebp)
imul   $0x6973202c,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     806089c <_IO_stdin_used+0x1af8>
and    %ch,%gs:0x74(%edi)
push   $0x69777265
jae    80608a0 <_IO_stdin_used+0x1afc>
or     (%eax),%ah
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     80608af <_IO_stdin_used+0x1b0b>
gs
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
gs
jbe    80608af <_IO_stdin_used+0x1b0b>
jb     806086c <_IO_stdin_used+0x1ac8>
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
ja     80608b3 <_IO_stdin_used+0x1b0f>
jns    80608c7 <_IO_stdin_used+0x1b23>
and    %ch,0x61(%ebp)
imul   $0x73,0x20(%ebp),%esp
imul   $0x6220656c,0x70(%ebp),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     80608db <_IO_stdin_used+0x1b37>
or     (%eax),%al
add    %al,(%eax)
or     0x73(%ecx),%al
and    %ah,0x20(%ecx)
jae    80608e4 <_IO_stdin_used+0x1b40>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
jae    80608e3 <_IO_stdin_used+0x1b3f>
sub    $0x20,%al
arpl   %si,0x20(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x20,0x73(%ebp),%esp
popa
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     80608b2 <_IO_stdin_used+0x1b0e>
outsl  %ds:(%esi),(%dx)
data16
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     806090c <_IO_stdin_used+0x1b68>
and    %ah,%gs:0x6e(%ecx)
and    %ah,%fs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     80608c0 <_IO_stdin_used+0x1b1c>
outsl  %ds:(%esi),(%dx)
jo     806092d <_IO_stdin_used+0x1b89>
imul   $0x72612073,0x6e(%edi),%ebp
and    %ah,%gs:0x69(%edi)
jbe    806092b <_IO_stdin_used+0x1b87>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %dl,%fs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x6e(%ecx)
and    %al,%fs:0x53(%ebp,%eax,2)
push   %esp
and    %ah,0x72(%ecx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     8060912 <_IO_stdin_used+0x1b6e>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
imul   $0x2c676e69,0x74(%ebx),%esi
or     0x65(%edx),%dh
addr16 jne 8060970 <_IO_stdin_used+0x1bcc>
popa
jb     8060927 <_IO_stdin_used+0x1b83>
imul   $0xa,0x2e(%ebp,%eiz,2),%bp
add    %al,(%eax)
push   $0x3a707474
das
das
ja     8060990 <_IO_stdin_used+0x1bec>
ja     8060949 <_IO_stdin_used+0x1ba5>
outsb  %ds:(%si),(%dx)
jne    806094d <_IO_stdin_used+0x1ba9>
outsl  %ds:(%esi),(%dx)
jb     8060989 <_IO_stdin_used+0x1be5>
das
jae    8060994 <_IO_stdin_used+0x1bf0>
data16
je     806099f <_IO_stdin_used+0x1bfb>
popa
jb     8060990 <_IO_stdin_used+0x1bec>
das
arpl   %bp,0x72(%edi)
gs
jne    80609a6 <_IO_stdin_used+0x1c02>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     806099f <_IO_stdin_used+0x1bfb>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8060965 <_IO_stdin_used+0x1bc1>
jne    80609ba <_IO_stdin_used+0x1c16>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     80609cb <_IO_stdin_used+0x1c27>
popa
jb     80609bc <_IO_stdin_used+0x1c18>
cmp    (%eax),%ah
cmp    $0x68,%al
je     80609d1 <_IO_stdin_used+0x1c2d>
jo     8060999 <_IO_stdin_used+0x1bf5>
das
das
ja     80609da <_IO_stdin_used+0x1c36>
ja     8060993 <_IO_stdin_used+0x1bef>
outsb  %ds:(%si),(%dx)
jne    8060997 <_IO_stdin_used+0x1bf3>
outsl  %ds:(%esi),(%dx)
jb     80609d3 <_IO_stdin_used+0x1c2f>
das
addr16
gs
je     80609d9 <_IO_stdin_used+0x1c35>
gs
insb   (%dx),%es:(%edi)
jo     80609a4 <_IO_stdin_used+0x1c00>
or     %ds:(%eax),%al
push   %edx
gs
jo     80609eb <_IO_stdin_used+0x1c47>
jb     80609f2 <_IO_stdin_used+0x1c4e>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    80609f4 <_IO_stdin_used+0x1c50>
popa
je     80609f4 <_IO_stdin_used+0x1c50>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 80609b3 <_IO_stdin_used+0x1c0f>
je     8060a04 <_IO_stdin_used+0x1c60>
and    %bh,(%eax,%ebp,2)
je     8060a0e <_IO_stdin_used+0x1c6a>
jo     80609d6 <_IO_stdin_used+0x1c32>
das
das
je     8060a12 <_IO_stdin_used+0x1c6e>
popa
outsb  %ds:(%esi),(%dx)
jae    8060a10 <_IO_stdin_used+0x1c6c>
popa
je     8060a10 <_IO_stdin_used+0x1c6c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     8060a1d <_IO_stdin_used+0x1c79>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     8060a1b <_IO_stdin_used+0x1c77>
das
je     8060a1c <_IO_stdin_used+0x1c78>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     80609e4 <_IO_stdin_used+0x1c40>
arpl   %bp,0x6d(%edi)
jo     8060a35 <_IO_stdin_used+0x1c91>
gs
je     8060a31 <_IO_stdin_used+0x1c8d>
and    %ah,0x63(%edi,%ebp,2)
jne    8060a3f <_IO_stdin_used+0x1c9b>
outsb  %gs:(%esi),(%dx)
je     8060a37 <_IO_stdin_used+0x1c93>
je     8060a41 <_IO_stdin_used+0x1c9d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     8060a53 <_IO_stdin_used+0x1caf>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     8060a4f <_IO_stdin_used+0x1cab>
jne    8060a60 <_IO_stdin_used+0x1cbc>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
fs
gs
jae    8060a84 <_IO_stdin_used+0x1ce0>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x70(%edi)
gs
jb     8060a83 <_IO_stdin_used+0x1cdf>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x66(%ecx)
je     8060a8e <_IO_stdin_used+0x1cea>
jb     8060a4b <_IO_stdin_used+0x1ca7>
and    $0x73,%eax
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060a57 <_IO_stdin_used+0x1cb3>
arpl   %bp,0x6d(%edi)
bound  %ebp,0x6e(%ecx)
and    %ch,%gs:0x7261742d
addr16
gs
je     8060a75 <_IO_stdin_used+0x1cd1>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8060a72 <_IO_stdin_used+0x1cce>
sub    %ch,0x61202974
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x2d6f6e2d
je     8060ac3 <_IO_stdin_used+0x1d1f>
jb     8060acb <_IO_stdin_used+0x1d27>
gs
je     8060a94 <_IO_stdin_used+0x1cf0>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8060a91 <_IO_stdin_used+0x1ced>
sub    %ch,0x2954
add    %dh,0x69(%edi)
je     8060ae4 <_IO_stdin_used+0x1d40>
and    %ch,0x7261702d
outsb  %gs:(%esi),(%dx)
je     8060af9 <_IO_stdin_used+0x1d55>
sub    $0x20,%al
je     8060af2 <_IO_stdin_used+0x1d4e>
and    %ah,%gs:0x73(%ebp,%eiz,2)
je     8060afa <_IO_stdin_used+0x1d56>
outsb  %ds:(%esi),(%dx)
popa
je     8060afe <_IO_stdin_used+0x1d5a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%ebp)
jae    8060b10 <_IO_stdin_used+0x1d6c>
and    %ah,0x65(%edx)
and    %ah,0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8060aac <_IO_stdin_used+0x1d08>
insl   (%dx),%es:(%edi)
jne    8060b1b <_IO_stdin_used+0x1d77>
je     8060b1a <_IO_stdin_used+0x1d76>
jo     8060b1f <_IO_stdin_used+0x1d7b>
and    %dh,%gs:0x72(%ecx,%eiz,2)
addr16
gs
je     8060adc <_IO_stdin_used+0x1d38>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x65707320,0x73(%ebp),%esp
arpl   %bp,0x66(%ecx)
imul   $0x63000000,0x64(%ebp),%esp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060afb <_IO_stdin_used+0x1d57>
insl   (%dx),%es:(%edi)
popa
imul   $0x62,0x20(%ebp),%esp
outsl  %ds:(%esi),(%dx)
je     8060b4c <_IO_stdin_used+0x1da8>
and    %ch,0x61(%eax)
jb     8060b4d <_IO_stdin_used+0x1da9>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8060afd <_IO_stdin_used+0x1d59>
add    %al,(%eax)
add    %ch,0x70(%edi)
je     8060b6d <_IO_stdin_used+0x1dc9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8060b28 <_IO_stdin_used+0x1d84>
sub    $0x6361622d,%eax
imul   $0x20,0x70(%ebp),%esi
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x2d6f6e2d
arpl   %bp,0x62(%edi,%ebp,2)
bound  %esp,0x72(%ebp)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x75(%ebp)
je     8060b9f <_IO_stdin_used+0x1dfb>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    8060b4f <_IO_stdin_used+0x1dab>
gs
js     8060b95 <_IO_stdin_used+0x1df1>
insb   (%dx),%es:(%edi)
jne    8060ba8 <_IO_stdin_used+0x1e04>
imul   $0x0,0x65(%esi),%esi
sub    $0x6665722d,%eax
insb   (%dx),%es:(%edi)
imul   $0x6e616320,0x6b(%esi),%ebp
and    %ah,0x65(%edx)
and    %dh,0x73(%ebp)
gs and %ch,%fs:%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8060b77 <_IO_stdin_used+0x1dd3>
ja     8060bc2 <_IO_stdin_used+0x1e1e>
je     8060bc3 <_IO_stdin_used+0x1e1f>
and    %ch,0x6170732d
jb     8060bd6 <_IO_stdin_used+0x1e32>
gs
cmp    $0x6f747561,%eax
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060b93 <_IO_stdin_used+0x1def>
jo     8060be7 <_IO_stdin_used+0x1e43>
gs
jae    8060bdd <_IO_stdin_used+0x1e39>
jb     8060bf0 <_IO_stdin_used+0x1e4c>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     8060c00 <_IO_stdin_used+0x1e5c>
and    %dh,0x69(%edi)
je     8060bf9 <_IO_stdin_used+0x1e55>
outsl  %ds:(%esi),(%dx)
jne    8060c08 <_IO_stdin_used+0x1e64>
and    %ah,0x6e(%ecx)
and    %dl,0x45(%ebx)
dec    %esp
imul   $0x6e652d78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ch,0x65(%ebx)
jb     8060c1a <_IO_stdin_used+0x1e76>
gs
insb   (%dx),%es:(%edi)
add    %ah,0x72(%ebp)
jb     8060c22 <_IO_stdin_used+0x1e7e>
jb     8060bd5 <_IO_stdin_used+0x1e31>
jb     8060c1c <_IO_stdin_used+0x1e78>
popa
imul   $0x732520,%fs:0x67(%esi),%ebp
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060be7 <_IO_stdin_used+0x1e43>
insb   (%dx),%es:(%edi)
jae    8060c2f <_IO_stdin_used+0x1e8b>
imul   $0x25,%gs:(%eax),%esp
jae    8060bd0 <_IO_stdin_used+0x1e2c>
gs
jb     8060c45 <_IO_stdin_used+0x1ea1>
outsl  %ds:(%esi),(%dx)
jb     8060bf6 <_IO_stdin_used+0x1e52>
ja     8060c4a <_IO_stdin_used+0x1ea6>
imul   $0x73252067,0x6e(%ecx,%ebp,2),%esi
add    %ah,0x3e2d2073
and    %ah,0x28200073
bound  %esp,0x63(%ecx)
imul   $0x3a,0x70(%ebp),%esi
and    %ah,0x63002973
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060c1f <_IO_stdin_used+0x1e7b>
jb     8060c66 <_IO_stdin_used+0x1ec2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8060c6a <_IO_stdin_used+0x1ec6>
and    %ah,0x65720073
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8060c74 <_IO_stdin_used+0x1ed0>
and    %ah,%fs:0x25000a73
jae    8060c52 <_IO_stdin_used+0x1eae>
and    %ch,0x76(%edi)
gs
jb     8060c95 <_IO_stdin_used+0x1ef1>
jb     8060c89 <_IO_stdin_used+0x1ee5>
je     8060c87 <_IO_stdin_used+0x1ee3>
and    %ah,0x203f73
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8060c97 <_IO_stdin_used+0x1ef3>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bx,%si)
jb     8060ca2 <_IO_stdin_used+0x1efe>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     8060c61 <_IO_stdin_used+0x1ebd>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060c6b <_IO_stdin_used+0x1ec7>
jae    8060cc1 <_IO_stdin_used+0x1f1d>
popa
je     8060c70 <_IO_stdin_used+0x1ecc>
and    $0x6d6f0073,%eax
imul   $0x6420676e,0x69(%esp,%esi,2),%esi
imul   $0x726f7463,0x65(%edx),%esi
jns    8060c86 <_IO_stdin_used+0x1ee2>
and    $0x73250073,%eax
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x72612073
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060cac <_IO_stdin_used+0x1f08>
bound  %esp,0x63(%ecx)
imul   $0x20,0x70(%ebp),%esi
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060cbd <_IO_stdin_used+0x1f19>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8060d06 <_IO_stdin_used+0x1f62>
and    %ah,0x6f742073
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060cd2 <_IO_stdin_used+0x1f2e>
arpl   %si,0x65(%edx)
popa
je     8060d1d <_IO_stdin_used+0x1f79>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8060ce3 <_IO_stdin_used+0x1f3f>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060ced <_IO_stdin_used+0x1f49>
popa
arpl   %sp,0x65(%ebx)
jae    8060d46 <_IO_stdin_used+0x1fa2>
and    %ah,0x2e0073
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060d00 <_IO_stdin_used+0x1f5c>
outsl  %ds:(%esi),(%dx)
jo     8060d48 <_IO_stdin_used+0x1fa4>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f662073
jb     8060d0c <_IO_stdin_used+0x1f68>
jb     8060d53 <_IO_stdin_used+0x1faf>
popa
imul   $0x6e616300,%fs:0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060d1b <_IO_stdin_used+0x1f77>
data16
jae    8060d72 <_IO_stdin_used+0x1fce>
popa
je     8060d21 <_IO_stdin_used+0x1f7d>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060d2b <_IO_stdin_used+0x1f87>
arpl   %si,0x65(%edx)
popa
je     8060d76 <_IO_stdin_used+0x1fd2>
and    %dh,0x65(%edx)
addr16 jne 8060d83 <_IO_stdin_used+0x1fdf>
popa
jb     8060d3a <_IO_stdin_used+0x1f96>
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x6e(%edi,%ebp,2)
and    %ah,%gs:0x72662073
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x73250073
cmp    (%eax),%ah
ja     8060db5 <_IO_stdin_used+0x2011>
imul   $0x6c696166,0x20(%ebp,%eiz,2),%esi
gs add %ah,%fs:%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     8060dcf <_IO_stdin_used+0x202b>
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x72700073
gs
jae    8060dcc <_IO_stdin_used+0x2028>
jb     8060ddf <_IO_stdin_used+0x203b>
imul   $0x6d697420,0x67(%esi),%ebp
gs
jae    8060d93 <_IO_stdin_used+0x1fef>
outsw  %ds:(%esi),(%dx)
jb     8060d97 <_IO_stdin_used+0x1ff3>
and    $0x72700073,%eax
gs
jae    8060de4 <_IO_stdin_used+0x2040>
jb     8060df7 <_IO_stdin_used+0x2053>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     8060db5 <_IO_stdin_used+0x2011>
and    $0x61660073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060dd2 <_IO_stdin_used+0x202e>
arpl   %si,0x65(%edx)
popa
je     8060e1d <_IO_stdin_used+0x2079>
and    %ah,0x69(%esi)
outsw  %ds:(%esi),(%dx)
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060de8 <_IO_stdin_used+0x2044>
arpl   %si,0x65(%edx)
popa
je     8060e33 <_IO_stdin_used+0x208f>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060e06 <_IO_stdin_used+0x2062>
jb     8060e4d <_IO_stdin_used+0x20a9>
popa
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x73250073
and    %ch,0x61(%eax)
jae    8060e23 <_IO_stdin_used+0x207f>
jne    8060e73 <_IO_stdin_used+0x20cf>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
add    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060e3c <_IO_stdin_used+0x2098>
jne    8060e8c <_IO_stdin_used+0x20e8>
sub    $0x6b636162,%eax
jne    8060e95 <_IO_stdin_used+0x20f1>
and    %ah,0x73250073
and    %ch,0x7325203e
and    %ch,(%eax)
jne    8060ea3 <_IO_stdin_used+0x20ff>
bound  %esp,0x63(%ecx)
imul   $0x29,0x70(%ebp),%esi
or     (%eax),%al
jae    8060eb2 <_IO_stdin_used+0x210e>
arpl   %bp,(%edi)
arpl   %bp,0x70(%edi)
jns    8060e75 <_IO_stdin_used+0x20d1>
arpl   %ax,(%eax)
arpl   %bp,0x20(%edi)
and    %edi,0x76282820
outsl  %ds:(%esi),(%dx)
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060e83 <_IO_stdin_used+0x20df>
arpl   %si,0x65(%edx)
popa
je     8060ece <_IO_stdin_used+0x212a>
and    %ch,0x61(%eax)
jb     8060ed2 <_IO_stdin_used+0x212e>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    8060e97 <_IO_stdin_used+0x20f3>
je     8060ee8 <_IO_stdin_used+0x2144>
and    %ah,0x73
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8060ef1 <_IO_stdin_used+0x214d>
jae    8060f02 <_IO_stdin_used+0x215e>
outsl  %ds:(%esi),(%dx)
jb     8060ef6 <_IO_stdin_used+0x2152>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    8060f08 <_IO_stdin_used+0x2164>
je     8060ebe <_IO_stdin_used+0x211a>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     8060f12 <_IO_stdin_used+0x216e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8060f16 <_IO_stdin_used+0x2172>
js     8060f27 <_IO_stdin_used+0x2183>
add    %ah,0x74203a73
jb     8060f34 <_IO_stdin_used+0x2190>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jbe    8060f27 <_IO_stdin_used+0x2183>
jb     8060f3b <_IO_stdin_used+0x2197>
jb     8060f2f <_IO_stdin_used+0x218b>
je     8060f2d <_IO_stdin_used+0x2189>
and    %ah,0x6f202c73
jbe    8060f35 <_IO_stdin_used+0x2191>
jb     8060f44 <_IO_stdin_used+0x21a0>
imul   $0x6f6d2067,0x6e(%ecx,%ebp,2),%esp
fs and %ah,%fs:%gs:0x6f6c3430
and    %ch,(%eax)
and    $0x203f2973,%eax
add    %al,(%eax)
add    %dh,0x61(%edi)
jb     8060f5e <_IO_stdin_used+0x21ba>
imul   $0x6f73203a,0x67(%esi),%ebp
jne    8060f6b <_IO_stdin_used+0x21c7>
arpl   %sp,0x20(%ebp)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x726f6d20,0x64(%ebp),%esp
and    %dh,%gs:0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060f47 <_IO_stdin_used+0x21a3>
outsl  %ds:(%esi),(%dx)
jbe    8060f8f <_IO_stdin_used+0x21eb>
jb     8060fa3 <_IO_stdin_used+0x21ff>
jb     8060f97 <_IO_stdin_used+0x21f3>
je     8060f95 <_IO_stdin_used+0x21f1>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    8060f5f <_IO_stdin_used+0x21bb>
and    $0x69772073,%eax
je     8060fae <_IO_stdin_used+0x220a>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8060f71 <_IO_stdin_used+0x21cd>
and    $0x69770073,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     8060f7d <_IO_stdin_used+0x21d9>
outsl  %ds:(%esi),(%dx)
jbe    8060fc5 <_IO_stdin_used+0x2221>
jb     8060fd9 <_IO_stdin_used+0x2235>
jb     8060fcd <_IO_stdin_used+0x2229>
je     8060fcb <_IO_stdin_used+0x2227>
and    %ch,0x75(%edx)
jae    8060fdf <_IO_stdin_used+0x223b>
sub    $0x61657263,%eax
je     8060fd7 <_IO_stdin_used+0x2233>
and    %ah,%fs:0x69772073
je     8060fe3 <_IO_stdin_used+0x223f>
and    %ah,0x63000073
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060fa7 <_IO_stdin_used+0x2203>
outsl  %ds:(%esi),(%dx)
jbe    8060fef <_IO_stdin_used+0x224b>
jb     8061003 <_IO_stdin_used+0x225f>
jb     8060ff7 <_IO_stdin_used+0x2253>
je     8060ff5 <_IO_stdin_used+0x2251>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8060fbb <_IO_stdin_used+0x2217>
and    $0x69772073,%eax
je     806100a <_IO_stdin_used+0x2266>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    8060fb1 <_IO_stdin_used+0x220d>
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8060fdb <_IO_stdin_used+0x2237>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8061024 <_IO_stdin_used+0x2280>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8060fea <_IO_stdin_used+0x2246>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     806103d <_IO_stdin_used+0x2299>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    8061017 <_IO_stdin_used+0x2273>
and    %ah,0x3e2d2073
and    %ah,0x62000073
popa
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ah,0x6f772073
jne    8061066 <_IO_stdin_used+0x22c2>
and    %ah,%fs:0x73(%ebp,%eiz,2)
je     8061073 <_IO_stdin_used+0x22cf>
outsl  %ds:(%esi),(%dx)
jns    8061024 <_IO_stdin_used+0x2280>
jae    8061075 <_IO_stdin_used+0x22d1>
jne    806107a <_IO_stdin_used+0x22d6>
arpl   %sp,0x3b(%ebp)
and    %ah,(%eax)
and    $0x6f6e2073,%eax
je     8061034 <_IO_stdin_used+0x2290>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    806107d <_IO_stdin_used+0x22d9>
add    %al,%fs:(%eax)
add    %ah,0x61(%edx)
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ah,0x6f772073
jne    806109a <_IO_stdin_used+0x22f6>
and    %ah,%fs:0x73(%ebp,%eiz,2)
je     80610a7 <_IO_stdin_used+0x2303>
outsl  %ds:(%esi),(%dx)
jns    8061058 <_IO_stdin_used+0x22b4>
jae    80610a9 <_IO_stdin_used+0x2305>
jne    80610ae <_IO_stdin_used+0x230a>
arpl   %sp,0x3b(%ebp)
and    %ah,(%eax)
and    $0x6f6e2073,%eax
je     8061068 <_IO_stdin_used+0x22c4>
arpl   %bp,0x70(%edi)
imul   $0x69770000,0x64(%ebp),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     8061079 <_IO_stdin_used+0x22d5>
arpl   %bp,0x70(%edi)
jns    806107e <_IO_stdin_used+0x22da>
and    $0x68742073,%eax
jb     80610d4 <_IO_stdin_used+0x2330>
jne    80610ce <_IO_stdin_used+0x232a>
push   $0x73756a20
je     806109b <_IO_stdin_used+0x22f7>
arpl   %si,0x65(%edx)
popa
je     80610d9 <_IO_stdin_used+0x2335>
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x732520,0x6b(%esi),%ebp
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80610ab <_IO_stdin_used+0x2307>
arpl   %bp,0x70(%edi)
jns    80610b0 <_IO_stdin_used+0x230c>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80610c8 <_IO_stdin_used+0x2324>
and    %ah,0x69202c73
outsb  %ds:(%esi),(%dx)
je     8061114 <_IO_stdin_used+0x2370>
and    %ch,0x74(%ecx)
jae    806110f <_IO_stdin_used+0x236b>
insb   (%dx),%es:(%edi)
data16
sub    $0x20,%al
and    $0x73,%eax
add    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     80610dd <_IO_stdin_used+0x2339>
arpl   %si,0x65(%edx)
popa
je     8061128 <_IO_stdin_used+0x2384>
and    %ch,0x61(%eax)
jb     806112c <_IO_stdin_used+0x2388>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    80610f1 <_IO_stdin_used+0x234d>
je     8061142 <_IO_stdin_used+0x239e>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80610fe <_IO_stdin_used+0x235a>
and    $0x73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806110b <_IO_stdin_used+0x2367>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8061154 <_IO_stdin_used+0x23b0>
and    %ah,0x6f742073
and    %ah,0x20(%ecx)
jae    806116f <_IO_stdin_used+0x23cb>
bound  %esp,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8061125 <_IO_stdin_used+0x2381>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x74(%ecx)
jae    8061171 <_IO_stdin_used+0x23cd>
insb   (%dx),%es:(%edi)
data16
sub    $0x20,%al
and    $0x69000073,%eax
outsb  %ds:(%esi),(%dx)
je     806117d <_IO_stdin_used+0x23d9>
jb     8061147 <_IO_stdin_used+0x23a3>
fs
gs
jbe    8061187 <_IO_stdin_used+0x23e3>
arpl   %sp,0x20(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    806118a <_IO_stdin_used+0x23e6>
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
and    %dh,0x20(%edi,%ebp,2)
and    $0x75203b73,%eax
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80611b0 <_IO_stdin_used+0x240c>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80611ad <_IO_stdin_used+0x2409>
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     8061150 <_IO_stdin_used+0x23ac>
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80611c1 <_IO_stdin_used+0x241d>
je     806117e <_IO_stdin_used+0x23da>
fs
gs
popaw
jne    80611d0 <_IO_stdin_used+0x242c>
je     8061186 <_IO_stdin_used+0x23e2>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     80611da <_IO_stdin_used+0x2436>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80611de <_IO_stdin_used+0x243a>
js     80611ef <_IO_stdin_used+0x244b>
and    %dh,0x20(%edi,%ebp,2)
and    $0x73,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     80611b2 <_IO_stdin_used+0x240e>
jae    80611f9 <_IO_stdin_used+0x2455>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     8061216 <_IO_stdin_used+0x2472>
and    %ch,0x66(%edi)
and    %ah,0x73
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80611d3 <_IO_stdin_used+0x242f>
arpl   %si,0x65(%edx)
popa
je     806121e <_IO_stdin_used+0x247a>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x6f742073
and    %ah,0x73
add    %dh,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
sub    $0x20,%al
popa
jae    8061209 <_IO_stdin_used+0x2465>
imul   $0x72207361,0x77(%eax,%eiz,1),%esi
gs
jo     8061260 <_IO_stdin_used+0x24bc>
popa
arpl   %sp,0x64(%ebp)
and    %dh,0x68(%edi)
imul   $0x6e696562,0x20(%ebp,%eiz,2),%ebp
and    %ah,0x6f(%bp,%di)
jo     8061272 <_IO_stdin_used+0x24ce>
gs add %ah,%fs:%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     806123a <_IO_stdin_used+0x2496>
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    8061297 <_IO_stdin_used+0x24f3>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ebx)
gs
popa
je     8061291 <_IO_stdin_used+0x24ed>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8061297 <_IO_stdin_used+0x24f3>
js     80612a8 <_IO_stdin_used+0x2504>
add    %al,(%eax)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80612a9 <_IO_stdin_used+0x2505>
je     8061266 <_IO_stdin_used+0x24c2>
je     80612b0 <_IO_stdin_used+0x250c>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     80612ce <_IO_stdin_used+0x252a>
and    %ch,0x66(%edi)
and    %ah,0x6f742073
and    %ah,0x6e000073
outsl  %ds:(%esi),(%dx)
je     806128c <_IO_stdin_used+0x24e8>
ja     80612e0 <_IO_stdin_used+0x253c>
imul   $0x68742067,0x6e(%ecx,%ebp,2),%esi
jb     80612e7 <_IO_stdin_used+0x2543>
jne    80612e1 <_IO_stdin_used+0x253d>
push   $0x6e616420
insb   (%dx),%es:(%di)
imul   $0x6d797320,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x732520,0x6b(%esi),%ebp
and    $0x66203a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     80612c2 <_IO_stdin_used+0x251e>
gs
js     8061319 <_IO_stdin_used+0x2575>
outsb  %gs:(%esi),(%dx)
je     806131c <_IO_stdin_used+0x2578>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80612d7 <_IO_stdin_used+0x2533>
arpl   %si,0x65(%edx)
popa
je     8061322 <_IO_stdin_used+0x257e>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x63000073
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80612f7 <_IO_stdin_used+0x2553>
arpl   %bp,0x70(%edi)
jns    80612fc <_IO_stdin_used+0x2558>
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x626d7973,0x20(%ebx),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x73250073
cmp    (%eax),%ah
arpl   %sp,0x6e(%ecx)
and    %ch,0x61(%ebp)
imul   $0x72,0x20(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
popa
je     8061370 <_IO_stdin_used+0x25cc>
jbe    806136e <_IO_stdin_used+0x25ca>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8061339 <_IO_stdin_used+0x2595>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806133e <_IO_stdin_used+0x259a>
imul   $0x72727563,0x20(%esi),%ebp
outsb  %gs:(%esi),(%dx)
je     8061349 <_IO_stdin_used+0x25a5>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8061333 <_IO_stdin_used+0x258f>
add    %ch,(%eax)
sub    %dh,0x6e(%ebp)
jae    80613a3 <_IO_stdin_used+0x25ff>
outsb  %ds:(%si),(%dx)
gs and %ch,%fs:%gs:0x6e(%ecx)
je     806136c <_IO_stdin_used+0x25c8>
and    %ch,(%eax)
arpl   %bp,0x2d(%edi)
bound  %esp,%ds:0x63(%ecx)
imul   $0x5f,0x70(%ebp),%esi
je     80613cb <_IO_stdin_used+0x2627>
jo     80613b9 <_IO_stdin_used+0x2615>
sub    %esp,(%eax)
cmp    $0x3d,%al
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs
fs
pop    %edi
bound  %esp,0x63(%ecx)
imul   $0x73,0x70(%ebp),%esi
sub    %eax,(%eax)
add    %ch,(%eax)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     80613ea <_IO_stdin_used+0x2646>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
dec    %esi
inc    %ebp
push   %esi
inc    %ebp
push   %edx
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     806140f <_IO_stdin_used+0x266b>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     8061433 <_IO_stdin_used+0x268f>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
sub    %eax,(%eax)
add    %al,(%eax)
sub    %ch,(%eax)
arpl   %bp,0x2d(%edi)
jb,pt  8061449 <_IO_stdin_used+0x26a5>
data16
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
dec    %esi
inc    %ebp
push   %esi
inc    %ebp
push   %edx
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
sub    %eax,(%eax)
and    %ebp,(%eax)
arpl   %bp,0x2d(%edi)
ds
push   $0x5f647261
insb   (%dx),%es:(%edi)
imul   $0x20262620,0x6b(%esi),%ebp
arpl   %bp,0x2d(%edi)
jae,pt 80614e2 <_IO_stdin_used+0x273e>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x5f(%ebx),%esp
sub    %eax,(%eax)
add    %al,(%eax)
and    %esp,(%eax)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
and    %bh,%gs:0x4552203d
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
sub    $0x6170733e,%eax
jb     806151d <_IO_stdin_used+0x2779>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%ecx)
cmp    $0x41505320,%eax
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
sub    %eax,(%eax)
jbe    8061524 <_IO_stdin_used+0x2780>
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%edi,%ebx,2),%esp
outsb  %ds:(%esi),(%dx)
jae    80614cf <_IO_stdin_used+0x272b>
jae    8061543 <_IO_stdin_used+0x279f>
arpl   %bp,(%edi)
gs
js     806154a <_IO_stdin_used+0x27a6>
outsb  %gs:(%esi),(%dx)
je     8061507 <_IO_stdin_used+0x2763>
jae    806153f <_IO_stdin_used+0x279b>
popa
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,0x63(%ebx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x5f69653e,%eax
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     8061513 <_IO_stdin_used+0x276f>
cmp    $0x3d,%al
and    %ch,(%eax)
xor    $0x32,%al
cmp    %esi,(%ecx,%edi,1)
ss
aaa
xor    (%ecx),%bh
xor    $0x2d202955,%eax
and    %ah,0x69(%esi)
gs
insl   (%dx),%es:(%edi)
popa
jo     806153a <_IO_stdin_used+0x2796>
ds
insw   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     8061585 <_IO_stdin_used+0x27e1>
gs
fs
pop    %edi
gs
js     806158f <_IO_stdin_used+0x27eb>
outsb  %gs:(%esi),(%dx)
je     8061592 <_IO_stdin_used+0x27ee>
add    %ah,0x6d(%esi)
pop    %edi
gs
js     806159a <_IO_stdin_used+0x27f6>
outsb  %gs:(%esi),(%dx)
je     806159d <_IO_stdin_used+0x27f9>
pop    %ebx
imul   $0x6c5f6566,0x2e(%ebp),%ebx
outsl  %ds:(%esi),(%dx)
imul   $0x3d3c206c,0x61(%bp,%di),%esp
and    %ch,(%eax)
sub    %ch,0x66(%edi)
pop    %di
je     806156d <_IO_stdin_used+0x27c9>
and    %ch,(%eax)
and    %esp,(%eax)
sub    %ah,(%ecx)
and    %ch,(%eax)
sub    %ch,0x66(%edi)
pop    %di
je     806157c <_IO_stdin_used+0x27d8>
and    %dh,(%eax)
and    %bh,(%eax,%eiz,1)
sub    %ch,0x66(%edi)
pop    %di
je     8061588 <_IO_stdin_used+0x27e4>
and    %ch,0x20292931
aas
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     8061597 <_IO_stdin_used+0x27f3>
and    %ch,0x203a2031
sub    %ch,(%eax)
sub    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     80615a7 <_IO_stdin_used+0x2803>
and    %dh,(%ecx)
and    %bh,(%esp,%edi,1)
and    %ch,(%eax)
jae    80615f0 <_IO_stdin_used+0x284c>
jp     80615ee <_IO_stdin_used+0x284a>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     80615bc <_IO_stdin_used+0x2818>
and    %ch,(%edx)
and    %bh,(%eax)
and    %ch,0x29293220
and    %ch,0x20293120
sub    (%eax),%ah
xor    (%eax),%ah
sub    (%eax),%esp
xor    %ebp,(%ecx)
sub    %ebp,(%ecx)
and    %ch,0x5f6d6620
gs
js     806162a <_IO_stdin_used+0x2886>
outsb  %gs:(%esi),(%dx)
je     806162d <_IO_stdin_used+0x2889>
pop    %ebx
imul   $0x6c5f6566,0x2e(%ebp),%ebx
outsb  %gs:(%esi),(%dx)
addr16 je 806162f <_IO_stdin_used+0x288b>
add    %ah,0x78(%ebp)
je     8061631 <_IO_stdin_used+0x288d>
outsb  %ds:(%esi),(%dx)
je     806162e <_IO_stdin_used+0x288a>
jae    8061634 <_IO_stdin_used+0x2890>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     806163b <_IO_stdin_used+0x2897>
popa
add    %bh,%fs:(%eax)
xor    %cs:(%ecx),%dh
add    %ch,0x6e(%ecx)
jbe    8061643 <_IO_stdin_used+0x289f>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     806160f <_IO_stdin_used+0x286b>
and    $0x6f662073,%eax
jb     8061616 <_IO_stdin_used+0x2872>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    806166f <_IO_stdin_used+0x28cb>
jne    8061675 <_IO_stdin_used+0x28d1>
and    %ah,0x72(%ecx)
addr16 jne 8061675 <_IO_stdin_used+0x28d1>
outsb  %gs:(%esi),(%dx)
je     806162c <_IO_stdin_used+0x2888>
and    $0x6f662073,%eax
jb     8061633 <_IO_stdin_used+0x288f>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     8061698 <_IO_stdin_used+0x28f4>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x56240073,%eax
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x66(%edi)
data16
add    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     80616c3 <_IO_stdin_used+0x291f>
add    %ah,%gs:0x78(%ebp)
imul   $0x676e69,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x65626d75,0x6e(%eax,%eax,1),%ebp
jb     80616d2 <_IO_stdin_used+0x292e>
add    %bh,%fs:0x0(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,0x16(%ecx)
push   %es
or     %cl,0x16(%esi)
push   %es
or     %dl,0x16(%edx)
push   %es
or     %bh,-0x10(%edi)
add    $0x6165908,%eax
or     %ah,0x16(%edx)
push   %es
or     %ah,0x16(%esi)
push   %es
or     %dh,-0x11(%ebx)
add    $0x8,%eax
add    %ah,0x72(%ebp)
jb     8061737 <_IO_stdin_used+0x2993>
jb     80616ea <_IO_stdin_used+0x2946>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:0x25203a73
jae    80616de <_IO_stdin_used+0x293a>
ja     8061752 <_IO_stdin_used+0x29ae>
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     80616ea <_IO_stdin_used+0x2946>
and    (%eax),%esp
outsb  %gs:(%esi),(%dx)
je     8061762 <_IO_stdin_used+0x29be>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     806173e <_IO_stdin_used+0x299a>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8061793 <_IO_stdin_used+0x29ef>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x20,0x41(%edi)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 80617e7 <_IO_stdin_used+0x2a43>
xor    %bl,0x20(%ebp)
ja     80617f2 <_IO_stdin_used+0x2a4e>
jae    80617b3 <_IO_stdin_used+0x2a0f>
jo     80617f6 <_IO_stdin_used+0x2a52>
jae    806180a <_IO_stdin_used+0x2a66>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    8061807 <_IO_stdin_used+0x2a63>
push   $0x206e6120
gs
js     806180d <_IO_stdin_used+0x2a69>
arpl   %sp,(%eax)
jae    8061825 <_IO_stdin_used+0x2a81>
jae    8061822 <_IO_stdin_used+0x2a7e>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x62696c00,%eax
das
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     8061833 <_IO_stdin_used+0x2a8f>
jb     80617fe <_IO_stdin_used+0x2a5a>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     806184c <_IO_stdin_used+0x2aa8>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     806181c <_IO_stdin_used+0x2a78>
arpl   %si,%ds:0x72(%ebp)
jo,pn  806186a <_IO_stdin_used+0x2ac6>
jb     8061818 <_IO_stdin_used+0x2a74>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     8061832 <_IO_stdin_used+0x2a8e>
arpl   %si,%ds:0x72(%ebp)
ja,pn  806186f <_IO_stdin_used+0x2acb>
and    %bh,0x30203d
and    $0x25282073,%eax
jae    8061842 <_IO_stdin_used+0x2a9e>
add    %dl,0x54(%ebp)
inc    %esi
sub    $0x626d0038,%eax
jne    806188d <_IO_stdin_used+0x2ae9>
je     806188b <_IO_stdin_used+0x2ae7>
jb     8061887 <_IO_stdin_used+0x2ae3>
insl   (%dx),%es:(%edi)
jne    8061897 <_IO_stdin_used+0x2af3>
je     8061896 <_IO_stdin_used+0x2af2>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     80618a6 <_IO_stdin_used+0x2b02>
add    %ah,%dl
sbbb   $0x22,0xafa100(%ecx)
add    %ah,-0x1dff9af9(%ecx)
sbbb   $0x69,0x6c006000(%eax)
je     80618af <_IO_stdin_used+0x2b0b>
jb     80618ad <_IO_stdin_used+0x2b09>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    80618d3 <_IO_stdin_used+0x2b2f>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    80618c9 <_IO_stdin_used+0x2b25>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x4a(%eax)
add    $0x5503808,%eax
or     %ch,0x50(%eax)
add    $0x54f2808,%eax
or     %ch,0x4f(%eax)
add    $0x54f9808,%eax
or     %al,%al
dec    %edi
add    $0x54fc008,%eax
or     %al,%al
dec    %edi
add    $0x54d6008,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,%al
dec    %ebp
add    $0x54d3808,%eax
or     %bl,0x4d(%eax)
add    $0x54d5008,%eax
or     %cl,0x4d(%eax)
add    $0x54d4008,%eax
or     %dl,(%eax)
dec    %ebp
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54e5808,%eax
or     %bl,0x4e(%eax)
add    $0x54c8908,%eax
or     %cl,-0x76f7fab4(%ecx)
dec    %esp
add    $0x54c8108,%eax
or     %cl,-0x7f7fab4(%ecx)
dec    %ebx
add    $0x54c8908,%eax
or     %cl,(%eax)
dec    %esi
add    $0x54c8908,%eax
or     %cl,-0x76f7fab4(%ecx)
dec    %esp
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54c8908,%eax
or     %cl,-0x76f7fab4(%ecx)
dec    %esp
add    $0x54c8908,%eax
or     %cl,0x4b(%eax)
add    $0x54e5808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %cl,-0x17f7fab4(%ecx)
dec    %ebp
add    $0x54bf808,%eax
or     %cl,-0x7f7fab4(%ecx)
dec    %ebx
add    $0x54c8908,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %bh,%al
dec    %ebx
add    $0x54bf808,%eax
or     %ah,0x4c(%eax)
add    $0x54c8908,%eax
or     %ah,0x4c(%eax)
add    $0x54c8108,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5521808,%eax
or     %al,0x18080552(%eax)
push   %edx
add    $0x5528008,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5521808,%eax
or     %bl,(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,0x18(%esi)
push   %es
or     %cl,0x18(%esi)
push   %es
or     %dl,0x6(%eax,%ebx,1)
or     %bh,0x6108061f(%edi)
sbb    %al,(%esi)
or     %ch,0x18(%ecx)
push   %es
or     %ah,0x700805ee(%esi)
sbb    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
das
insl   (%dx),%es:(%edi)
bound  %ebp,0x74(%ecx)
gs
jb     8061bbd <_IO_stdin_used+0x2e19>
push   $0x69626d00
je     8061bfb <_IO_stdin_used+0x2e57>
jb     8061bf7 <_IO_stdin_used+0x2e53>
insl   (%dx),%es:(%edi)
jne    8061c07 <_IO_stdin_used+0x2e63>
je     8061c06 <_IO_stdin_used+0x2e62>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8061c16 <_IO_stdin_used+0x2e72>
add    %ch,0x62(%ecx,%ebp,2)
das
jne    8061c1d <_IO_stdin_used+0x2e79>
imul   $0x632e736e,0x65(%ebp),%ebp
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    8061c27 <_IO_stdin_used+0x2e83>
arpl   %ax,%gs:(%eax)
jbe    8061c1d <_IO_stdin_used+0x2e79>
insb   (%dx),%es:(%edi)
imul   $0x69745f65,0x74(%ecx,%eiz,2),%esp
insl   (%dx),%es:(%edi)
gs
jae    8061c39 <_IO_stdin_used+0x2e95>
arpl   %ax,%gs:(%eax)
jne    8061c3c <_IO_stdin_used+0x2e98>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8061c44 <_IO_stdin_used+0x2ea0>
and    %ah,0x73(%ecx,%ebp,2)
jo     8061c47 <_IO_stdin_used+0x2ea3>
popa
jns    8061bfe <_IO_stdin_used+0x2e5a>
gs
jb     8061c53 <_IO_stdin_used+0x2eaf>
outsl  %ds:(%esi),(%dx)
jb     8061c04 <_IO_stdin_used+0x2e60>
insl   (%dx),%es:(%edi)
gs
jae    8061c5b <_IO_stdin_used+0x2eb7>
popa
add    %ah,%gs:(%di)
jae    8061c0f <_IO_stdin_used+0x2e6b>
sub    %ah,0x25202973
jae    8061c01 <_IO_stdin_used+0x2e5d>
add    %ah,0x73252073
or     (%eax),%al
sub    %al,0x29(%ebx)
add    %dl,0x72(%edi)
imul   $0x7962206e,0x65(%esp,%esi,2),%esi
and    %ah,0xa2e73
push   %edi
jb     8061c7f <_IO_stdin_used+0x2edb>
je     8061c8c <_IO_stdin_used+0x2ee8>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     8061c96 <_IO_stdin_used+0x2ef2>
je     8061ca3 <_IO_stdin_used+0x2eff>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061c68 <_IO_stdin_used+0x2ec4>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     8061cba <_IO_stdin_used+0x2f16>
jb     8061cc1 <_IO_stdin_used+0x2f1d>
and    %ah,0x75(%edx)
addr16 jae 8061c73 <_IO_stdin_used+0x2ecf>
je     8061cc4 <_IO_stdin_used+0x2f20>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    8061cc9 <_IO_stdin_used+0x2f25>
and    %al,0x50(%edi)
dec    %esp
jbe    8061c9d <_IO_stdin_used+0x2ef9>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8061cec <_IO_stdin_used+0x2f48>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     8061ca2 <_IO_stdin_used+0x2efe>
insb   (%dx),%es:(%edi)
popa
je     8061ceb <_IO_stdin_used+0x2f47>
jb     8061ca8 <_IO_stdin_used+0x2f04>
cmp    $0x68,%al
je     8061d00 <_IO_stdin_used+0x2f5c>
jo     8061cc8 <_IO_stdin_used+0x2f24>
das
das
outsb  %ds:(%si),(%dx)
jne    8061cc2 <_IO_stdin_used+0x2f1e>
outsl  %ds:(%esi),(%dx)
jb     8061cfe <_IO_stdin_used+0x2f5a>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8061d10 <_IO_stdin_used+0x2f6c>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8061cd1 <_IO_stdin_used+0x2f2d>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     8061d35 <_IO_stdin_used+0x2f91>
popa
jb     8061d26 <_IO_stdin_used+0x2f82>
cmp    (%eax),%ah
jns    8061d34 <_IO_stdin_used+0x2f90>
jne    8061ce7 <_IO_stdin_used+0x2f43>
popa
jb     8061d2f <_IO_stdin_used+0x2f8b>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8061d4f <_IO_stdin_used+0x2fab>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8061d59 <_IO_stdin_used+0x2fb5>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     8061d76 <_IO_stdin_used+0x2fd2>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8061d75 <_IO_stdin_used+0x2fd1>
outsb  %ds:(%esi),(%dx)
je     8061d33 <_IO_stdin_used+0x2f8f>
jo     8061d7a <_IO_stdin_used+0x2fd6>
jb     8061d84 <_IO_stdin_used+0x2fe0>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     8061d94 <_IO_stdin_used+0x2ff0>
je     8061da1 <_IO_stdin_used+0x2ffd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061d66 <_IO_stdin_used+0x2fc2>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061db4 <_IO_stdin_used+0x3010>
je     8061dc1 <_IO_stdin_used+0x301d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061d86 <_IO_stdin_used+0x2fe2>
and    %ah,0x250a2c73
jae    8061d8e <_IO_stdin_used+0x2fea>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061dd8 <_IO_stdin_used+0x3034>
je     8061de5 <_IO_stdin_used+0x3041>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061daa <_IO_stdin_used+0x3006>
and    %ah,0x250a2c73
jae    8061db2 <_IO_stdin_used+0x300e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061e00 <_IO_stdin_used+0x305c>
je     8061e0d <_IO_stdin_used+0x3069>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061dd2 <_IO_stdin_used+0x302e>
and    %ah,0x250a2c73
jae    8061dda <_IO_stdin_used+0x3036>
and    %ah,0x25202c73
jae    8061de2 <_IO_stdin_used+0x303e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061e2c <_IO_stdin_used+0x3088>
je     8061e39 <_IO_stdin_used+0x3095>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061dfe <_IO_stdin_used+0x305a>
and    %ah,0x250a2c73
jae    8061e06 <_IO_stdin_used+0x3062>
and    %ah,0x25202c73
jae    8061e0e <_IO_stdin_used+0x306a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061e5c <_IO_stdin_used+0x30b8>
je     8061e69 <_IO_stdin_used+0x30c5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061e2e <_IO_stdin_used+0x308a>
and    %ah,0x250a2c73
jae    8061e36 <_IO_stdin_used+0x3092>
and    %ah,0x25202c73
jae    8061e3e <_IO_stdin_used+0x309a>
and    %ah,0x250a2c73
jae    8061e46 <_IO_stdin_used+0x30a2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8061e90 <_IO_stdin_used+0x30ec>
je     8061e9d <_IO_stdin_used+0x30f9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8061e62 <_IO_stdin_used+0x30be>
and    %ah,0x250a2c73
jae    8061e6a <_IO_stdin_used+0x30c6>
and    %ah,0x25202c73
jae    8061e72 <_IO_stdin_used+0x30ce>
and    %ah,0x250a2c73
jae    8061e7a <_IO_stdin_used+0x30d6>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
add    %bh,0x5(%ebx)
or     %cl,(%eax)
jnp    8061e6c <_IO_stdin_used+0x30c8>
or     %cl,0x7b(%eax)
add    $0x57b9008,%eax
or     %ch,%al
jnp    8061e78 <_IO_stdin_used+0x30d4>
or     %al,0x7c(%eax)
add    $0x57ca808,%eax
or     %ah,(%eax)
jge    8061e84 <_IO_stdin_used+0x30e0>
or     %al,%al
jns    8061e88 <_IO_stdin_used+0x30e4>
or     %bl,0x7a(%eax)
add    $0x8,%eax
add    %al,0x6f(%ebx)
jo     8061f1d <_IO_stdin_used+0x3179>
jb     8061f0f <_IO_stdin_used+0x316b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8061f31 <_IO_stdin_used+0x318d>
popa
jb     8061f22 <_IO_stdin_used+0x317e>
and    %al,0x6f(%esi)
jne    8061f30 <_IO_stdin_used+0x318c>
fs
popa
je     8061f2f <_IO_stdin_used+0x318b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8061f4e <_IO_stdin_used+0x31aa>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %dh,%fs:%gs:0x6e(%ebp)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs add %ch,%fs:%gs:(%edi)
jne    8061f60 <_IO_stdin_used+0x31bc>
jb     8061f1e <_IO_stdin_used+0x317a>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %al,(%eax)
sbb    (%eax),%al
add    %ch,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     8061f31 <_IO_stdin_used+0x318d>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    8061fad <_IO_stdin_used+0x3209>
je     8061fab <_IO_stdin_used+0x3207>
jb     8061fa7 <_IO_stdin_used+0x3203>
insl   (%dx),%es:(%edi)
jne    8061fb7 <_IO_stdin_used+0x3213>
je     8061fb6 <_IO_stdin_used+0x3212>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8061fc6 <_IO_stdin_used+0x3222>
add    %al,(%eax)
jne    8061fc4 <_IO_stdin_used+0x3220>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8061fcc <_IO_stdin_used+0x3228>
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x75(%ebx)
jb     8061fdb <_IO_stdin_used+0x3237>
outsb  %gs:(%esi),(%dx)
je     8061f8d <_IO_stdin_used+0x31e9>
ja     8061fde <_IO_stdin_used+0x323a>
jb     8061fdc <_IO_stdin_used+0x3238>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8061f7f <_IO_stdin_used+0x31db>
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8061ff1 <_IO_stdin_used+0x324d>
je     8062003 <_IO_stdin_used+0x325f>
jb     8061ffe <_IO_stdin_used+0x325a>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6c616974,0x69(%esi),%ebp
and    %dh,0x6f(%edi)
jb     806200b <_IO_stdin_used+0x3267>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8061fae <_IO_stdin_used+0x320a>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x69646863,0x2f(%edx),%esp
jb     8061fe7 <_IO_stdin_used+0x3243>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%bx,%si)
and    %esp,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
popaw
imul   $0x6c203c20,0x30(%eax,%eax,1),%ebp
outsb  %gs:(%esi),(%dx)
add    %dh,(%eax,%esi,1)
cmp    %esi,(%esi)
and    %bh,0x6e656c20(,%edi,1)
add    %ch,(%edx)
imul   $0x27203d21,%fs:0x20(%edx),%esi
das
daa
add    %ah,0x72(%ecx,%ebp,2)
and    %bh,0x72696420(,%edi,1)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x6c(%ebx)
popa
jae    806206a <_IO_stdin_used+0x32c6>
and    %ch,0x72696420
and    %bh,(%eax,%eiz,1)
xor    $0x30,%al
cmp    %esi,(%esi)
add    %ah,0x64(%ebx)
bound  %ebx,0x66(%edi)
jb     806207c <_IO_stdin_used+0x32d8>
add    %ah,%gs:0x68(%ebx)
imul   $0x676e6f6c,%fs:0x5f(%edx),%esi
add    %ch,(%edi)
jo     8062099 <_IO_stdin_used+0x32f5>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8062091 <_IO_stdin_used+0x32ed>
insb   (%dx),%es:(%edi)
data16
das
data16
add    %ch,%fs:(%esi)
cs
das
data16
add    %ch,%fs:(%edi)
jo     80620ad <_IO_stdin_used+0x3309>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    80620a5 <_IO_stdin_used+0x3301>
insb   (%dx),%es:(%edi)
data16
das
data16
fs
das
and    $0x73252f64,%eax
add    %cl,%al
lret
add    $0x5ca9808,%eax
or     %cl,0x580805c8(%eax)
lret   $0x805
sub    %cl,%dl
add    $0x5c40808,%eax
or     %cl,(%eax)
les    0x5c40808,%eax
or     %cl,(%eax)
les    0x5c57008,%eax
or     %dh,-0x3b(%eax)
add    $0x5c9a008,%eax
or     %al,%al
lret   $0x805
add    %al,%dh
add    $0x5c60008,%eax
or     %cl,(%eax)
les    0x5c40808,%eax
or     %cl,(%eax)
les    0x5d07808,%eax
or     %dl,0x600805d0(%eax)
lret
add    $0x5cb6008,%eax
or     %bl,-0x30(%eax)
add    $0x49c9008,%eax
or     %dh,-0x64(%eax)
add    $0x8,%al
pusha
lcall  $0x0,$0x804
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     8062123 <_IO_stdin_used+0x337f>
jb     806211f <_IO_stdin_used+0x337b>
insl   (%dx),%es:(%edi)
jne    806212f <_IO_stdin_used+0x338b>
je     806212e <_IO_stdin_used+0x338a>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806213e <_IO_stdin_used+0x339a>
add    %ch,(%eax)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %al,(%eax)
mov    $0xdf,%al
add    $0x5df4808,%eax
or     %cl,-0x21(%eax)
add    $0x5df3808,%eax
or     %bh,(%eax)
fild   0x5df1008
or     %dl,(%eax)
fild   0x5df1008
or     %dl,(%eax)
fild   0x5df2808
or     %ch,(%eax)
fild   0x5df5808
or     %ch,-0x21(%eax)
add    $0x5df1008,%eax
or     %dl,(%eax)
fild   0x5df7808
or     %dl,0x100805df(%eax)
fild   0x5df1008
or     %dl,(%eax)
fild   0x5df1008
or     %dl,(%eax)
fild   0x5df1008
or     %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%esi)
jecxz  8062154 <_IO_stdin_used+0x33b0>
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %al,-0xbf7fa1a(%ebx)
out    %eax,$0x5
or     %dh,-0x1a(%ecx)
add    $0x5e7f408,%eax
or     %al,-0x7cf7fa1a(%ebx)
out    %al,$0x5
or     %al,-0xbf7fa1a(%ebx)
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %bl,-0x1a(%edi)
add    $0x5e7f408,%eax
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %bl,-0xbf7fa1a(%ebp)
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %al,-0xbf7fa1a(%ebx)
out    %eax,$0x5
or     %cl,-0x1a(%eax)
add    $0x5e60008,%eax
or     %al,-0x7cf7fa1a(%ebx)
out    %al,$0x5
or     %al,-0xbf7fa1a(%ebx)
out    %eax,$0x5
or     %al,(%eax)
out    %al,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %ch,-0x1962f7fb(%ebp,%eiz,8)
add    $0x5e2c408,%eax
or     %dh,%ah
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
or     %dl,-0xbf7fa1b(%ebp)
out    %eax,$0x5
or     %bl,-0xbf7fa1a(%ebp)
out    %eax,$0x5
or     %dh,%ah
out    %eax,$0x5
.byte 0x8
popf
out    %al,$0x5
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
enter  $0x7,$0x0
clc
add    %al,(%eax)
add    %ah,%ah
jbe    80622a9 <_IO_stdin_used+0x3505>
jmp    *%esp
pop    %es
add    %al,(%eax)
je     8062331 <_IO_stdin_used+0x358d>
(bad)
incl   0x0(%ecx,%ecx,1)
add    %al,%ah
xchg   %edi,%esi
decl   (%eax)
or     %al,(%eax)
add    %al,(%ecx,%ecx,4)
(bad)
decl   0x8(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    %edi,%esi
decl   -0xbfffff8(%eax)
mov    %esi,%?
(bad)
mov    $0x44000008,%esp
xchg   %eax,%ecx
(bad)
push   %eax
or     %al,(%eax)
add    %dh,-0x2(%esi,%edx,4)
call   *(%eax)
or     %eax,(%eax)
add    %dh,%ah
fwait
(bad)
jmp    *0x0(%ecx,%ecx,1)
add    %al,(%esp,%ebx,4)
(bad)
(bad)
js     80622ff <_IO_stdin_used+0x355b>
add    %al,(%eax)
adc    $0x9c,%al
(bad)
decl   -0x639c0000(%ecx,%ecx,1)
(bad)
(bad)
mov    $0x44000009,%eax
popf
(bad)
call   *(%eax)
or     (%eax),%al
add    %al,0xa68fffe(%edi,%ebx,4)
add    %al,(%eax)
mov    $0x9f,%ah
(bad)
decl   -0x6bfffff6(%eax)
mov    0xac0fffe,%al
add    %al,(%eax)
in     $0xa0,%al
(bad)
jmp    *%eax
or     (%eax),%al
add    %dl,(%ecx,%eiz,4)
(bad)
(bad)
clc
or     (%eax),%al
add    %dl,%ah
mov    0xb30fffe,%eax
add    %al,(%eax)
test   %ah,0xb88fffe(%ebx)
add    %al,(%eax)
in     $0xa3,%al
(bad)
ljmp   *-0x5b0c0000(%ebx,%ecx,1)
(bad)
jmp    *%esp
or     (%eax),%eax
add    %dh,0xbfcfffe(,%eiz,4)
add    %al,(%eax)
je     8062307 <_IO_stdin_used+0x3563>
(bad)
call   *(%esp,%ecx,1)
add    %al,(%eax)
hlt
movsl  %ds:(%esi),%es:(%edi)
(bad)
incl   0x0(%esp,%ecx,1)
add    %ah,(%esi,%eiz,4)
(bad)
lcall  *0x0(%esp,%ecx,1)
add    %al,-0x2(%eax,%ebp,4)
pushl  -0x577c0000(%esp,%ecx,1)
(bad)
call   *%esp
or     $0x0,%al
add    %ah,0xd08fffe(%eax,%ebp,8)
add    %al,(%eax)
inc    %esp
ljmp   $0x0,$0xd40fffe
je     8062384 <_IO_stdin_used+0x35e0>
(bad)
lcall  *0xd(%eax)
add    %al,(%eax)
mov    $0xea,%ah
(bad)
decl   -0x2bfffff3(%eax)
ljmp   $0x0,$0xda8fffe
xor    $0xeb,%al
(bad)
dec    %esp
or     $0xeb840000,%eax
(bad)
(bad)
call   2c0623ce <_end+0x23ffa6ea>
in     (%dx),%al
(bad)
jmp    *(%eax)
push   %cs
add    %al,(%eax)
je     80623b6 <_IO_stdin_used+0x3612>
(bad)
(bad)
cmp    $0xe,%al
add    %al,(%eax)
xchg   %eax,%esp
in     (%dx),%al
(bad)
call   *0x0(%esi,%ecx,1)
add    %dl,%ah
in     (%dx),%al
(bad)
ljmp   *0xe(%eax)
add    %al,(%eax)
in     $0xf0,%al
(bad)
ljmp   *-0xeec0000(%esi,%ecx,1)
(bad)
inc    %eax
push   %cs
add    %al,(%eax)
add    $0xf2,%al
(bad)
lcall  *(%eax)
sldt   (%eax)
test   %dh,%dl
(bad)
decl   0x0(%edi,%ecx,1)
add    %dh,0xfd0fffe(%esp,%esi,8)
add    %al,(%eax)
test   %dh,%ch
(bad)
lcall  *(%eax)
adc    %al,(%eax)
add    %dl,(%esi,%esi,8)
(bad)
jmp    *0x10(%eax)
add    %al,(%eax)
je     8062410 <_IO_stdin_used+0x366c>
(bad)
incl   0x54000010(%eax)
idiv   %esi
(bad)
in     (%dx),%al
adc    %al,(%eax)
add    %dh,-0x2(%edi,%esi,8)
incl   (%ecx,%edx,1)
add    %al,(%eax)
je     806242a <_IO_stdin_used+0x3686>
(bad)
lcall  *0x0(%ecx,%edx,1)
add    %dl,(%ecx,%edi,8)
(bad)
decl   -0x5cc0000(%ecx,%edx,1)
(bad)
jmp    *%eax
adc    %eax,(%eax)
add    %ah,0x1220fffe(%edx,%edi,8)
add    %al,(%eax)
hlt
cli
(bad)
lcall  *0x0(%edx,%edx,1)
add    %dh,(%ebx,%edi,8)
(bad)
pushl  0x0(%edx,%edx,1)
add    %dl,0x12ccfffe(%esi,%edi,8)
add    %al,(%eax)
mov    $0xfe,%ah
(bad)
jmp    *%eax
adc    (%eax),%al
add    %al,(%edi,%edi,8)
(bad)
incl   (%ebx,%edx,1)
add    %al,(%eax)
je     8062479 <_IO_stdin_used+0x36d5>
(bad)
(bad)
cmp    $0x13,%al
add    %al,(%eax)
test   %bh,%bh
(bad)
call   *0x13(%eax)
add    %al,(%eax)
mov    $0x0,%ah
(bad)
incl   -0x3bffffed(%eax)
add    %bh,%bh
call   *0xd40000(%ebx,%edx,1)
(bad)
ljmp   *-0x5bffffed(%eax)
add    %edi,%edi
call   *%esp
adc    (%eax),%eax
add    %al,-0x1(%edx,%eax,1)
ljmp   *(%eax)
adc    $0x0,%al
add    %ah,-0x1(%edx,%eax,1)
incl   0x0(%esp,%edx,1)
add    %dh,0x1470ffff(%edx,%eax,1)
add    %al,(%eax)
and    $0x3,%al
(bad)
pushl  -0x7bffffec(%eax)
add    %edi,%edi
call   *%eax
adc    $0x0,%al
add    %al,%ah
add    %edi,%edi
push   %esp
adc    $0x0,%al
add    %dh,%ah
add    %edi,%edi
call   *0x4040000(,%edx,1)
(bad)
ljmp   *(%eax)
adc    $0x4540000,%eax
(bad)
incl   0x15(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    $0xff,%al
lcall  *0x15(%eax)
add    %al,(%eax)
adc    $0x5,%al
(bad)
pushl  0x64000015(%eax)
add    $0x15d4ffff,%eax
add    %al,(%eax)
inc    %esp
pop    %es
(bad)
(bad)
cld
adc    $0x7540000,%eax
(bad)
call   *(%eax)
push   %ss
add    %al,(%eax)
test   %al,(%edi)
(bad)
ljmp   *(%esi,%edx,1)
add    %al,(%eax)
je     806252a <_IO_stdin_used+0x3786>
(bad)
ljmp   *0x0(%esi,%edx,1)
add    %ah,%ah
or     %bh,%bh
inc    %eax
push   %ss
add    %al,(%eax)
je     806253b <_IO_stdin_used+0x3797>
(bad)
(bad)
cld
push   %ss
add    %al,(%eax)
test   %cl,(%ecx)
(bad)
call   *(%eax)
pop    %ss
add    %al,(%eax)
xchg   %eax,%esp
or     %edi,%edi
jmp    *(%edi,%edx,1)
add    %al,(%eax)
les    (%ecx),%ecx
(bad)
decl   0x17(%eax)
add    %al,(%eax)
test   %cl,(%edx)
(bad)
pushl  0xb340000(%edi,%edx,1)
(bad)
dec    %eax
pop    %ss
add    %al,(%eax)
inc    %esp
or     $0xff,%al
lcall  *(%eax,%ebx,1)
add    %al,(%eax)
push   %esp
or     $0xff,%al
pushl  (%eax)
sbb    %al,(%eax)
add    %ah,-0x1(%esp,%ecx,1)
incl   0x0(%eax,%ebx,1)
add    %dh,-0x1(%esp,%ecx,1)
lcall  *0x18(%eax)
add    %al,(%eax)
les    (%edi,%edi,8),%ecx
(bad)
jl     806259e <_IO_stdin_used+0x37fa>
add    %al,(%eax)
and    $0xd,%al
(bad)
(bad)
mov    $0x34000018,%eax
push   %cs
(bad)
push   %esp
sbb    %al,(%eax)
add    %dl,0x193cffff(%esi,%ecx,1)
add    %al,(%eax)
aam    $0xe
(bad)
lcall  *0x0(%ecx,%ebx,1)
add    %dh,(%edi,%ecx,1)
(bad)
lcall  *-0x6bffffe7(%eax)
(bad)
call   *%eax
sbb    %eax,(%eax)
add    %dl,(%eax,%edx,1)
(bad)
decl   (%edx,%ebx,1)
add    %al,(%eax)
push   %esp
adc    %bh,%bh
pushl  (%eax)
sbb    (%eax),%al
add    %al,0x1a44ffff(%eax,%edx,1)
add    %al,(%eax)
les    (%ecx),%edx
(bad)
lcall  *0x12540000(%edx,%ebx,1)
(bad)
call   *%eax
sbb    (%eax),%al
add    %ah,(%ebx,%edx,1)
(bad)
decl   (%eax)
sbb    (%eax),%eax
add    %dh,0x1b78ffff(%esp,%edx,1)
add    %al,(%eax)
test   %dl,(%esi)
(bad)
call   *%esp
sbb    (%eax),%eax
add    %dl,0x1be8ffff(%esi,%edx,1)
add    %al,(%eax)
aam    $0x16
(bad)
decl   (%esp,%ebx,1)
add    %al,(%eax)
inc    %esp
sbb    %bh,%bh
decl   0x0(%esp,%ebx,1)
add    %al,0x1c78ffff(%eax,%ebx,1)
add    %al,(%eax)
mov    $0x18,%ah
(bad)
call   *0x400001c(%eax)
sbb    %edi,%edi
pushl  0x19540000(%esp,%ebx,1)
(bad)
jmp    *%eax
sbb    $0x0,%al
add    %dh,-0x1(%ecx,%ebx,1)
incl   (%eax)
sbb    $0x1a240000,%eax
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
aam    $0x22
(bad)
incl   0x23740000(%ebp,%ebx,1)
(bad)
dec    %esp
sbb    $0x26240000,%eax
(bad)
(bad)
cmp    %bl,(%esi)
add    %al,(%eax)
push   %esp
es
(bad)
jmp    *0x0(%esi,%ebx,1)
add    %al,-0x1(%edi,%eiz,1)
lcall  *0x31740000(%esi,%ebx,1)
(bad)
jmp    *%eax
push   %ds
add    %al,(%eax)
adc    $0x33,%al
(bad)
jmp    *(%eax)
pop    %ds
add    %al,(%eax)
push   %esp
xor    %edi,%edi
call   *0x0(%edi,%ebx,1)
add    %dh,-0x1(%ebx,%esi,1)
ljmp   *0x1f(%eax)
add    %al,(%eax)
xchg   %eax,%esp
xor    %edi,%edi
(bad)
jl     80626ad <_IO_stdin_used+0x3909>
add    %al,(%eax)
aam    $0x33
(bad)
jmp    *-0xbffffe1(%eax)
xor    %edi,%edi
pushl  0x34340000(%edi,%ebx,1)
(bad)
(bad)
fcomps (%edi)
add    %al,(%eax)
xchg   %eax,%esp
xor    $0xff,%al
decl   (%eax,%eiz,1)
add    %al,(%eax)
je     80626e7 <_IO_stdin_used+0x3943>
(bad)
decl   0x20(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    $0x2060ffff,%eax
add    %al,(%eax)
xor    $0x36,%al
(bad)
call   *0x36540000(%eax,%eiz,1)
(bad)
ljmp   *0x74000020(%eax)
ss
(bad)
(bad)
mov    $0x94000020,%esp
ss
(bad)
call   *%eax
and    %al,(%eax)
add    %dh,0x20e4ffff(%esi,%esi,1)
add    %al,(%eax)
in     $0x36,%al
(bad)
incl   (%ecx,%eiz,1)
add    %al,(%eax)
adc    $0x37,%al
(bad)
jmp    *(%ecx,%eiz,1)
add    %al,(%eax)
inc    %esp
aaa
(bad)
(bad)
cmp    $0x21,%al
add    %al,(%eax)
je     8062739 <_IO_stdin_used+0x3995>
(bad)
call   *0x0(%ecx,%eiz,1)
add    %ah,(%eax,%edi,1)
(bad)
(bad)
js     806272f <_IO_stdin_used+0x398b>
add    %al,(%eax)
push   %esp
cmp    %bh,%bh
call   *-0x7bffffdf(%eax)
cmp    %bh,%bh
ljmp   *-0x4bffffdf(%eax)
cmp    %bh,%bh
inc    %eax
and    %eax,(%eax)
add    %ah,-0x1(%ecx,%edi,1)
jmp    *%esp
and    %eax,(%eax)
add    %ah,0x21fcffff(%ecx,%edi,1)
add    %al,(%eax)
in     $0x39,%al
(bad)
call   *(%edx,%eiz,1)
add    %al,(%eax)
and    $0x3a,%al
(bad)
ljmp   *(%edx,%eiz,1)
add    %al,(%eax)
inc    %esp
cmp    %bh,%bh
incl   0x22(%eax)
add    %al,(%eax)
fs
cmp    %bh,%bh
call   *0x0(%edx,%eiz,1)
add    %al,0x2268ffff(%edx,%edi,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %bh,%bh
(bad)
jl     8062788 <_IO_stdin_used+0x39e4>
add    %al,(%eax)
add    $0x3b,%al
(bad)
(bad)
mov    $0x74000022,%eax
cmp    $0xff,%al
call   *(%eax)
and    (%eax),%eax
add    %dh,0x2350ffff(%ebp,%edi,1)
add    %al,(%eax)
adc    $0x3e,%al
(bad)
lcall  *0x34000023(%eax)
ds
(bad)
pushl  0x54000023(%eax)
ds
(bad)
dec    %eax
and    (%eax),%eax
add    %dl,0x2400ffff(%esi,%edi,1)
add    %al,(%eax)
je     80627e6 <_IO_stdin_used+0x3a42>
(bad)
incl   0x0(%esp)
add    %ah,0x245cffff(%esp,%eax,2)
add    %al,(%eax)
in     $0x44,%al
(bad)
lcall  *0x14000024(%eax)
inc    %ebp
(bad)
pushl  0x34000024(%eax)
inc    %ebp
(bad)
inc    %esp
and    $0x0,%al
add    %al,0x2508ffff(%esp,%ecx,2)
add    %al,(%eax)
push   %esp
dec    %ebp
(bad)
incl   0x25(%eax)
add    %al,(%eax)
xor    $0x4e,%al
(bad)
incl   0x64000025(%eax)
dec    %esi
(bad)
lcall  *-0xbffffdb(%eax)
push   %edx
(bad)
jmp    *(%eax)
add    %al,%es:(%eax)
and    $0x53,%al
(bad)
(bad)
cmp    %ah,(%esi)
add    %al,(%eax)
xor    $0x55,%al
(bad)
incl   0x56140000(%esi,%eiz,1)
(bad)
(bad)
fsubl  (%esi)
add    %al,(%eax)
push   %esp
push   %esi
(bad)
push   %esp
add    %al,%es:(%eax)
les    -0x1(%ebx),%ebx
call   *0x14000027(%eax)
pop    %esp
(bad)
ljmp   *0x74000027(%eax)
pop    %esp
(bad)
dec    %esp
daa
add    %al,(%eax)
mov    $0x5c,%ah
(bad)
jmp    *%esp
daa
add    %al,(%eax)
fs
pop    %ebp
(bad)
decl   (%eax)
sub    %al,(%eax)
add    %ah,0x2820ffff(%ebp,%ebx,2)
add    %al,(%eax)
aam    $0x5d
(bad)
incl   0x0(%eax,%ebp,1)
add    %al,(%esi,%ebx,2)
(bad)
ljmp   *0x28(%eax)
add    %al,(%eax)
adc    $0x5e,%al
(bad)
(bad)
jl     806287e <_IO_stdin_used+0x3ada>
add    %al,(%eax)
fs
pop    %esi
(bad)
ljmp   *0x5ea40000(%eax,%ebp,1)
(bad)
(bad)
fsubrs (%eax)
add    %al,(%eax)
add    $0x5f,%al
(bad)
decl   (%eax)
sub    %eax,(%eax)
add    %dl,-0x1(%edi,%ebx,2)
ljmp   *(%ecx,%ebp,1)
add    %al,(%eax)
test   %bl,-0x1(%edi)
decl   0x0(%ecx,%ebp,1)
add    %dh,0x2968ffff(%edi,%ebx,2)
add    %al,(%eax)
in     $0x5f,%al
(bad)
decl   0x14000029(%eax)
pusha
(bad)
ljmp   *0x64000029(%eax)
pusha
(bad)
(bad)
mov    $0xb4000029,%esp
pusha
(bad)
jmp    *%eax
sub    %eax,(%eax)
add    %dh,%ah
pusha
(bad)
incl   (%edx,%ebp,1)
add    %al,(%eax)
xor    $0x61,%al
(bad)
ljmp   *(%eax)
sub    (%eax),%al
add    %al,(%edx,%eiz,2)
(bad)
ljmp   *0x2a(%eax)
add    %al,(%eax)
xchg   %eax,%esp
(bad)
(bad)
pushl  0x400002a(%eax)
arpl   %di,%di
call   *%esp
sub    (%eax),%al
add    %ah,(%esp,%eiz,2)
(bad)
lcall  *(%ebx,%ebp,1)
add    %al,(%eax)
test   %ah,-0x1(%edi,%edi,8)
dec    %eax
sub    (%eax),%eax
add    %dh,0x2b5cffff(%esp,%eiz,2)
add    %al,(%eax)
inc    %esp
gs
(bad)
pushl  0x65a40000(%ebx,%ebp,1)
(bad)
(bad)
in     (%dx),%al
sub    (%eax),%eax
add    %al,%ah
gs
(bad)
decl   (%esp,%ebp,1)
add    %al,(%eax)
hlt
gs
(bad)
ljmp   *(%esp,%ebp,1)
add    %al,(%eax)
and    $0x66,%al
(bad)
decl   0x0(%esp,%ebp,1)
add    %ah,0x2cb8ffff(%eax,%ebp,2)
add    %al,(%eax)
adc    $0x6b,%al
(bad)
(bad)
clc
sub    $0x0,%al
add    %dl,%ah
insb   (%dx),%es:(%edi)
(bad)
ljmp   *0x2d(%eax)
add    %al,(%eax)
xor    $0x6d,%al
(bad)
incl   0x6d740000(%ebp,%ebp,1)
(bad)
lcall  *0x6dd40000(%ebp,%ebp,1)
(bad)
(bad)
call   c06296e <_end+0x3ffac8a>
outsb  %ds:(%esi),(%dx)
(bad)
incl   (%esi,%ebp,1)
add    %al,(%eax)
in     $0x6f,%al
(bad)
incl   0x0(%esi,%ebp,1)
add    %ah,-0x1(%eax,%esi,2)
lcall  *0x70b40000(%esi,%ebp,1)
(bad)
inc    %eax
add    %al,%cs:(%eax)
in     $0x70,%al
(bad)
call   *%esp
add    %al,%cs:(%eax)
movsb  %ds:(%esi),%es:(%edi)
je     806296a <_IO_stdin_used+0x3bc6>
call   *(%edi,%ebp,1)
add    %al,(%eax)
aam    $0x74
(bad)
pushl  (%edi,%ebp,1)
add    %al,(%eax)
xor    $0x75,%al
(bad)
ljmp   *0x0(%edi,%ebp,1)
add    %dl,-0x1(%ebp,%esi,2)
incl   -0x4bffffd1(%eax)
jbe    806298a <_IO_stdin_used+0x3be6>
pushl  0x3400002f(%eax)
cmp    $0xff,%bh
loopne 80629c5 <_IO_stdin_used+0x3c21>
add    %al,(%eax)
hlt
(bad)
(bad)
jmp    *(%eax,%esi,1)
add    %al,(%eax)
xor    $0x90,%al
(bad)
(bad)
cmp    %dh,(%eax)
add    %al,(%eax)
je     806293a <_IO_stdin_used+0x3b96>
(bad)
decl   0x0(%eax,%esi,1)
add    %ah,%ah
nop
(bad)
(bad)
js     80629e6 <_IO_stdin_used+0x3c42>
add    %al,(%eax)
adc    $0x91,%al
(bad)
decl   -0x6ebc0000(%eax,%esi,1)
(bad)
ljmp   *-0x6bcc0000(%eax,%esi,1)
(bad)
push   %eax
xor    %al,(%eax)
add    %ah,(%esi,%edx,4)
(bad)
pushl  (%eax)
xor    %eax,(%eax)
add    %dh,%ah
xchg   %eax,%esi
(bad)
(bad)
js     8062a0f <_IO_stdin_used+0x3c6b>
add    %al,(%eax)
xor    $0x97,%al
(bad)
call   *-0x688c0000(%ecx,%esi,1)
(bad)
inc    %eax
xor    %eax,(%eax)
add    %ah,(%edx,%ebx,4)
(bad)
pushl  (%eax)
xor    (%eax),%al
add    %al,%ah
lcall  $0x0,$0x3278ffff
adc    $0x9c,%al
(bad)
(bad)
mov    $0x44000032,%eax
mov    $0x32e8ffff,%eax
add    %al,(%eax)
mov    $0xb8,%ah
(bad)
jmp    *(%eax)
xor    (%eax),%eax
add    %ah,%ah
mov    $0x3338ffff,%eax
add    %al,(%eax)
inc    %esp
mov    $0x3364ffff,%ecx
add    %al,(%eax)
mov    $0xb9,%ah
(bad)
decl   -0x441c0000(%ebx,%esi,1)
(bad)
dec    %esp
xor    (%eax),%eax
add    %al,-0x1(%esp,%edi,4)
push   %eax
xor    (%eax),%eax
add    %ah,0x342cffff(,%edi,4)
add    %al,(%eax)
(bad)
enter  $0xffff,$0x6c
xor    $0x0,%al
add    %ah,(%edx,%ecx,8)
(bad)
(bad)
fdivs  (%eax,%eax,1)
add    %dl,0x3514ffff(%edx,%ecx,8)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lret   $0xffff
.byte 0x28
.byte 0x35
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8062a7f <_IO_stdin_used+0x3cdb>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
clc
outsb  %ds:(%esi),(%dx)
(bad)
call   *0x8(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8062a9f <_IO_stdin_used+0x3cfb>
js     8062a9d <_IO_stdin_used+0x3cf9>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0x135fffe(%edi,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbc,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
addb   $0x0,(%eax)
add    %dh,0x94fffe(%eax,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x70,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %dl,(%ecx,%eax,4)
(bad)
decl   0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %esp
xchg   %al,(%ebx,%eax,4)
add    $0xa01c903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
hlt
add    %al,(%eax)
add    %dh,(%eax)
xchg   %bh,%dh
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,2)
addl   $0xffffffc3,0xa021f03
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    %al,(%ecx)
add    %al,(%eax)
dec    %esp
mov    %bh,%dh
ljmp   *0x5
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
pop    %esp
(bad)
(bad)
(bad)
jge    8062bbf <_IO_stdin_used+0x3e1b>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,2)
addl   $0xffffffc3,0xa021d03
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jl     8062be7 <_IO_stdin_used+0x3e43>
add    %al,(%eax)
sub    %dh,-0x2(%esi)
call   *0x7(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x10,%eax
pushf
add    %eax,(%eax)
add    %cl,0x2fffe92(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x7bffffff(%eax)
xchg   %eax,%edx
(bad)
decl   0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%ah
add    %eax,(%eax)
add    %al,0x4efffe92(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
push   %cs
or     %al,0x200e4502(%ebx)
dec    %esp
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x42,%al
or     0xe(%eax),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,%al
add    %eax,(%eax)
add    %ah,0xd6fffe(%edx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e45
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
sub    $0x93,%al
(bad)
pushl  (%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x18,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    0x14000002,%al
xchg   %eax,%ebp
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %ah,0xd5fffe(,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x410c0e0a(%esi),%cl
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %cl,%ah
xchg   %eax,%ebp
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sbb    %al,(%ebx)
add    %al,(%eax)
cld
xchg   %eax,%ebp
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edx)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
adc    $0x96,%al
(bad)
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0x41100e0a(%ebp),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,0x3(%eax)
add    %al,(%eax)
pushf
xchg   %eax,%esi
(bad)
ljmp   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffab,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
nop
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,%al
add    (%eax),%eax
add    %dh,%ah
xchg   %eax,%edi
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%cl
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
xor    %bl,0x10afffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x400e4504(%ebx)
add    0xa(%edx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x4,%al
add    %al,(%eax)
or     %bl,0x3afffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    $0x4,%al
add    %al,(%eax)
xor    %bl,0x3afffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%esi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
dec    %esp
add    $0x0,%al
add    %bl,-0x67(%eax)
(bad)
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x43,(%ebx)
push   %cs
adc    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jl     8062eea <_IO_stdin_used+0x4146>
add    %al,(%eax)
test   $0x99,%al
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xe(%ebp)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,-0x66400000(%esp,%eax,1)
(bad)
call   *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x55,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
add    $0x0,%al
add    %cl,0x36fffe9b(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,-0x64580000(,%eax,1)
(bad)
jmp    *(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0xffffffc3,0xa073103
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
add    $0xdb940000,%eax
(bad)
lcall  *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ecx),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
js     8062fe7 <_IO_stdin_used+0x4243>
add    %al,(%eax)
cld
fdivr  %st,%st(6)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
nop
add    $0xdd140000,%eax
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x57,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
rolb   $0xfe,0xdd240000
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,%al
add    $0xdd240000,%eax
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
add    0xe(%ecx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    $0x6,%al
add    %al,(%eax)
pusha
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
jg     8063088 <_IO_stdin_used+0x42e4>
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%esi)
add    %al,(%eax)
xchg   %eax,%esp
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x6(%eax)
add    %al,(%eax)
cld
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%eax)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
je     80630e4 <_IO_stdin_used+0x4340>
add    %al,(%eax)
xor    %bl,%dh
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %es,(%esi)
add    %al,(%eax)
cmp    %bl,%dh
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    0x64000006,%al
fdivrp %st,%st(6)
decl   (%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
test   $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
xor    %ah,%dl
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
push   %es
add    %al,(%eax)
dec    %esp
loop   8063165 <_IO_stdin_used+0x43c1>
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
in     $0xe2,%al
(bad)
(bad)
js     80631c2 <_IO_stdin_used+0x441e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%ch
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %al,-0x1cd00000(%edi,%eax,1)
(bad)
jmp    *(%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jno    806324a <_IO_stdin_used+0x44a6>
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
or     %al,(%eax)
add    %bl,%ah
in     $0xfe,%al
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x43100e0a(%edx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%esi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x8(%eax)
add    %al,(%eax)
fs
in     $0xfe,%eax
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cwtl
or     %al,(%eax)
add    %ch,0x5ffffe(%ebp,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%edx
push   %cs
add    $0x43,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
mov    $0xec000008,%eax
in     $0xfe,%eax
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
and    $0x9,%al
add    %al,(%eax)
pusha
out    %al,$0xfe
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,(%ecx,%ecx,1)
add    %al,(%eax)
push   $0xf3fffee6
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     %eax,(%eax)
add    %dl,(%eax)
out    %eax,$0xfe
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     8063423 <_IO_stdin_used+0x467f>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %al,%ah
or     %eax,(%eax)
add    %al,0x1efffee7(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %cl,(%edx)
add    %al,(%eax)
dec    %esp
call   86d3488 <_end+0x66b7a4>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,0xa(%eax)
add    %al,(%eax)
jl     80634ae <_IO_stdin_used+0x470a>
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     (%eax),%al
add    %dl,0x3cfffee8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,-0x17480000(%edx,%ecx,1)
(bad)
call   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x60,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
add    $0xb,%al
add    %al,(%eax)
shr    $0xfe,%bl
lcall  *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
or     (%eax),%eax
add    %cl,%ah
jmp    8063585 <_IO_stdin_used+0x47e1>
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xa(%ebp),%ebx
push   %cs
add    $0x43,%al
or     0xe(%ebp),%eax
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
cmp    $0xb,%al
add    %al,(%eax)
clc
jmp    80635a9 <_IO_stdin_used+0x4805>
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec30a61
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,0x0(%ebx,%ecx,1)
add    %dh,(%eax)
in     (%dx),%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %cl,(%ebx)
add    %al,(%eax)
sub    $0xec,%al
(bad)
pushl  (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
clc
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x2c00000b,%eax
in     (%dx),%eax
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
or     (%eax),%eax
add    %ch,(%eax)
in     (%dx),%eax
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,%al
or     (%eax),%eax
add    %ah,0xcafffe(,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
or     $0xc,%al
add    %al,(%eax)
enter  $0xfeed,$0xff
xchg   %eax,%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %ah,0xc(%eax)
add    %al,(%eax)
adc    $0xee,%al
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esp,%ecx,1)
add    %bl,(%eax)
out    %al,(%dx)
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
test   $0xc,%al
add    %al,(%eax)
cmp    $0xee,%al
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
call   74063761 <_end+0x6bffba7d>
out    %al,(%dx)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
or     $0xeeac0000,%eax
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
sub    $0xd,%al
add    %al,(%eax)
enter  $0xfeee,$0xff
add    %al,%cs:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%ecx,1)
add    %bl,%al
out    %al,(%dx)
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pusha
or     $0xeed40000,%eax
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ebx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0xd(%eax)
add    %al,(%eax)
or     $0xef,%al
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,0x3400000d(%eax)
out    %eax,(%dx)
(bad)
(bad)
jge    8063802 <_IO_stdin_used+0x4a5e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
call   64063862 <_end+0x5bffbb7e>
out    %eax,(%dx)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
or     $0xe,%al
add    %al,(%eax)
mov    %ch,%bh
(bad)
call   *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x1380302(%ebx)
or     %bl,%al
push   %cs
add    $0x47,%al
or     0xa(%edx),%ebx
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%ecx,1)
add    %al,(%eax)
inc    %eax
icebp
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0xe(%eax)
add    %al,(%eax)
cmp    $0xf1,%al
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
fs
push   %cs
add    %al,(%eax)
push   %eax
icebp
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,-0xe000000(%esi,%ecx,1)
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
clc
push   %cs
add    %al,(%eax)
sbb    $0xf2,%al
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    $0xf,%al
add    %al,(%eax)
jo     8063994 <_IO_stdin_used+0x4bf0>
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0xf(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
repnz (bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %esp
sldt   (%eax)
push   $0x27fffef2
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x80000000
sldt   (%eax)
je     80639e0 <_IO_stdin_used+0x4c3c>
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
sldt   (%eax)
enter  $0xfef2,$0xff
scas   %es:(%edi),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
fs
repz (bad)
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   %esp
adc    %al,(%eax)
add    %ah,(%eax)
hlt
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x10(%eax)
add    %al,(%eax)
sbb    $0xf4,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%edx,1)
add    %bl,(%eax)
hlt
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x14000010(%eax)
hlt
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,-0xbc00000(%eax,%edx,1)
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %dh,%al
adc    %al,(%eax)
add    %ah,-0x2(%esp,%esi,8)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,(%ecx,%edx,1)
add    %al,(%eax)
cmp    %dh,%ch
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
je     8063bef <_IO_stdin_used+0x4e4b>
add    %al,(%eax)
push   %eax
cmc
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,-0xa900000(%ecx,%edx,1)
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,%al
adc    %eax,(%eax)
add    %dl,0x5dfffe(%ebp,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
adc    (%eax),%al
add    %bh,0x72fffe(%ebp,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %al,0x0(%edx,%edx,1)
add    %al,(%eax)
idiv   %dh
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   $0x1c000012
idiv   %dh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x0(%edx,%edx,1)
add    %bh,(%eax)
idiv   %dh
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,%ah
adc    (%eax),%al
add    %ah,(%eax)
idiv   %esi
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
or     %dl,(%ebx)
add    %al,(%eax)
jl     8063d6d <_IO_stdin_used+0x4fc9>
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %al,0x13(%eax)
add    %al,(%eax)
adc    $0xf8,%al
(bad)
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dh,0x34000013(%eax)
stc
(bad)
inc    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    8063e43 <_IO_stdin_used+0x509f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    8063e56 <_IO_stdin_used+0x50b2>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%esp,%edx,1)
add    %al,(%eax)
test   $0xfa,%al
(bad)
incl   0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
adc    $0x0,%al
add    %ah,0x3cfffe(%edx,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
adc    $0x0,%al
add    %al,%al
cli
(bad)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
test   %dl,(%eax,%eax,1)
add    %dh,%al
sti
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    $0x14,%al
add    %al,(%eax)
add    $0xfc,%al
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
enter  $0x14,$0x0
sbb    $0xfc,%al
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
adc    $0x0,%al
add    %cl,-0x4(%eax)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sbb    %dl,0xfc6c0000
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,(%eax)
adc    $0xfc6c0000,%eax
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bh,0x15(%eax)
add    %al,(%eax)
fdivr  %st,%st(4)
(bad)
ljmp   *0x8(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
push   %ecx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x5480000(%ebp,%edx,1)
(bad)
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jo     806404f <_IO_stdin_used+0x52ab>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x4000000
push   %ss
add    %al,(%eax)
mov    0xaeffff05,%al
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,0x16(%eax)
add    %al,(%eax)
in     $0x7,%al
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
pushf
push   %ss
add    %al,(%eax)
call   eb064014 <_end+0xe2ffc330>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,%ah
push   %ss
add    %al,(%eax)
mov    0x2fffff08,%al
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    %dl,(%edi)
add    %al,(%eax)
mov    %ss,(%edx)
(bad)
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,0x17(%eax)
add    %al,(%eax)
in     (%dx),%al
adc    %edi,%edi
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x13f80000(%edi,%edx,1)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x4000017(%eax)
adc    $0xff,%al
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x14100000(%edi,%edx,1)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fcoms  (%edi)
add    %al,(%eax)
sub    $0x14,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%ah
pop    %ss
add    %al,(%eax)
cmp    %dl,(%edi,%edi,8)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
adc    %bl,(%eax)
add    %al,(%eax)
push   %esp
adc    $0xff,%al
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %esp
sbb    %al,(%eax)
add    %al,-0x2b0000ec(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x24000018(%eax)
adc    $0x2bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
cwtl
sbb    %al,(%eax)
add    %bh,0x84ffff(,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
int3
sbb    %al,(%eax)
add    %bl,0x1affff15(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
sbb    %al,(%eax)
add    %ah,0x19ffff(%ebp,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
hlt
sbb    %al,(%eax)
add    %dh,0x18ffff15(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
sbb    %eax,(%eax)
add    %bh,0x17ffff(%ebp,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    $0x19,%al
add    %al,(%eax)
enter  $0xff15,$0xff
sub    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,(%ecx,%ebx,1)
add    %al,(%eax)
fcoms  0x2cffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,0x0(%ecx,%ebx,1)
add    %ch,%al
adc    $0x23ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     80643f7 <_IO_stdin_used+0x5653>
add    %al,(%eax)
add    %dl,(%esi)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    %ds,(%ecx)
add    %al,(%eax)
sbb    %dl,(%esi)
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    $0x19,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %ss
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
enter  $0x19,$0x0
mov    $0x23ffff16,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
loopne 8064463 <_IO_stdin_used+0x56bf>
add    %al,(%eax)
aam    $0x16
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
clc
sbb    %eax,(%eax)
add    %ch,%ah
push   %ss
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sbb    $0x1a,%al
add    %al,(%eax)
js     80644a1 <_IO_stdin_used+0x56fd>
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    $0x1a,%al
add    %al,(%eax)
mov    0x33ffff17,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %esp
sbb    (%eax),%al
add    %cl,%al
pop    %ss
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    %fs:(%eax),%al
add    %dh,%al
pop    %ss
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x1a(%eax)
add    %al,(%eax)
cld
pop    %ss
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x18080000(%edx,%ebx,1)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1400001a(%eax)
sbb    %bh,%bh
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x18200000(%edx,%ebx,1)
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dh,%al
sbb    (%eax),%al
add    %al,-0x1(%eax,%ebx,1)
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1f00e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
sbb    (%eax),%eax
add    %bl,-0x1(%ecx,%ebx,1)
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x16,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %cl,0x5c00001b(%eax)
sbb    %bh,%bh
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
rcrb   (%ebx)
add    %al,(%eax)
je     8064658 <_IO_stdin_used+0x58b4>
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
call   84064670 <_end+0x7bffc98c>
sbb    %bh,%bh
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,0x38ffff(%edx,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
sbb    $0x0,%al
add    %cl,0x5deffff(%edx,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
push   %ss
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jl     8064702 <_IO_stdin_used+0x595e>
add    %al,(%eax)
sub    %ah,(%eax)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sbb    $0x0,%al
add    %al,0x20(%eax)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rcrb   (%eax,%eax,1)
add    %al,-0x1(%eax,%eiz,1)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
call   64064771 <_end+0x5bffca8d>
and    %bh,%bh
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
cld
sbb    $0x0,%al
add    %ch,0x20(%eax)
(bad)
incl   0x7(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e46
or     $0x1,%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
sbb    $0x27740000,%eax
(bad)
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
js     80647ff <_IO_stdin_used+0x5a5b>
add    %al,(%eax)
or     $0x28,%al
(bad)
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xac00001d,%eax
sub    %bh,%bh
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
test   %al,(%eax)
add    %al,(%eax)
rcrb   0x28c40000
(bad)
incl   0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jge    8064882 <_IO_stdin_used+0x5ade>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
push   %ds
add    %al,(%eax)
int3
sub    $0xff,%al
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %dh,0x1e(%eax)
add    %al,(%eax)
in     $0x2c,%al
(bad)
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,0x2ea80000(%esi,%ebx,1)
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5d,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x1f,%al
add    %al,(%eax)
xor    %ch,(%edi)
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %ch,(%edi,%ebx,1)
add    %al,(%eax)
pop    %eax
das
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x1f,$0x0
sub    $0x34,%al
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,%al
pop    %ds
add    %al,(%eax)
fs
xor    $0xff,%al
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    $0x20,%al
add    %al,(%eax)
mov    0x33ffff34,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
sbb    $0x20,%al
add    %al,(%eax)
enter  $0xff34,$0xff
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
and    %al,(%eax)
add    %dl,-0x1(%ebp,%esi,1)
pushl  0x0
pop    %ebx
push   %cs
adc    %bl,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
and    %al,(%eax)
add    %bh,-0x1(%ebp,%esi,1)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jl     8064b06 <_IO_stdin_used+0x5d62>
add    %al,(%eax)
mov    %dh,0x2effff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    0x94000020,%al
xor    $0x5ffff,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0x20,%ah
add    %al,(%eax)
nop
xor    $0x44ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     $0x20,%al
add    %al,(%eax)
mov    $0x35,%al
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
adc    %ah,(%ecx)
add    %al,(%eax)
les    0x5dffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
and    %eax,(%eax)
add    %dh,%ah
xor    $0x49ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
and    %eax,%fs:(%eax)
add    %ah,(%eax)
ss
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %al,0x36300000(%ecx,%eiz,1)
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    0x44000021,%al
ss
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,%al
and    %eax,(%eax)
add    %dl,-0x1(%esi,%esi,1)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,%al
and    %eax,(%eax)
add    %ah,-0x1(%esi,%esi,1)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %dh,%ah
and    %eax,(%eax)
add    %ah,0x4fffff36(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jne    8064c7d <_IO_stdin_used+0x5ed9>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
sbb    %ah,(%edx)
add    %al,(%eax)
int3
ss
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
cmp    $0x22,%al
add    %al,(%eax)
call   48064be3 <_end+0x3fffceff>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pusha
and    (%eax),%al
add    %al,(%edi,%esi,1)
(bad)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ah,-0x6bffffde(%eax)
aaa
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,%al
and    (%eax),%al
add    %bl,%ah
aaa
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
add    0xe(%edx),%ah
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%ebx,%eiz,1)
add    %al,(%eax)
sub    %bh,(%eax)
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,0x0(%ebx,%eiz,1)
add    %al,(%eax)
cmp    %edi,%edi
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x34000023(%eax)
cmp    %edi,%edi
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x39500000(%ebx,%eiz,1)
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
and    (%eax),%eax
add    %cl,0x5affff39(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
and    $0x24,%al
add    %al,(%eax)
mov    $0x39,%al
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x0(%esp)
add    %dh,0x23ffff39(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x0(%esp)
add    %al,%al
cmp    %edi,%edi
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %al,0x39d00000(%esp)
(bad)
pushl  0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
dec    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
nop
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
lock and $0x0,%al
add    %ah,%ah
cmp    %edi,%edi
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e48
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,(%eax)
and    $0x3e140000,%eax
(bad)
(bad)
mov    $0x1,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
jns    8064fca <_IO_stdin_used+0x6226>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorl   $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    0x64000025,%al
aas
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xa8000025,%esp
aas
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %dl,%ah
and    $0x3fd00000,%eax
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
and    %ah,(%esi)
add    %al,(%eax)
in     $0x3f,%al
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xa(%edx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x26,%al
add    %al,(%eax)
clc
aas
(bad)
call   *%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,0x0(%esi,%eiz,1)
add    %bl,0x78ffff41(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     806510f <_IO_stdin_used+0x636b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    %al,%es:(%eax)
rolb   $0xff,-0x1(%ecx)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
clc
add    %al,%es:(%eax)
in     (%dx),%al
inc    %ecx
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     $0x27,%al
add    %al,(%eax)
or     %al,-0x1(%edx)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
dec    %esp
daa
add    %al,(%eax)
mov    %al,-0x1(%ebp)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,0x0(%edi,%eiz,1)
add    %bl,0x52ffff45(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
daa
add    %al,(%eax)
rolb   $0xff,-0x1(%ebp)
sbb    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0xcc000027,%eax
inc    %ebp
(bad)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
call   406527c <_init-0x3fe46dc>
inc    %esi
(bad)
pushl  0x0(%ecx,%ecx,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a4a02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bl,(%eax)
sub    %al,(%eax)
add    %cl,-0x1(%eax,%edx,2)
(bad)
mov    $0xf,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
call   1c145cb0 <_end+0x140ddfcc>
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
sub    %al,(%eax)
add    %cl,%al
pop    %edi
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x28(%eax)
add    %al,(%eax)
hlt
pop    %edi
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,(%eax)
add    %al,(%eax)
add    %al,0x60200000(%eax,%ebp,1)
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     806530d <_IO_stdin_used+0x6569>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ebx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x64000028(%eax)
pusha
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
les    (%eax),%ebp
add    %al,(%eax)
andb   $0xff,-0x1(%eax)
add    %al,%es:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,%ah
sub    %al,(%eax)
add    %dl,-0x120000a0(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
push   %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %ch,(%ecx)
add    %al,(%eax)
cmp    $0x63,%al
(bad)
(bad)
jmp    806539b <_IO_stdin_used+0x65f7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %ch,0x29(%eax)
add    %al,(%eax)
in     (%dx),%al
fs
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     80653fb <_IO_stdin_used+0x6657>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dh,0x74000029(%eax)
gs
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
and    %cl,0xe(%edi)
add    $0x42,%al
push   %cs
and    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%ah
sub    %eax,(%eax)
add    %bl,0x3fffff65(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %bh,%al
sub    %eax,(%eax)
add    %ch,0x2a2ffff(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
add    %al,(%ecx)
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,0x2a(%eax)
add    %al,(%eax)
in     (%dx),%al
addr16 (bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x2a,%al
add    %al,(%eax)
inc    %esp
push   $0x146ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
lock sub (%eax),%al
add    %dl,-0x1(%ecx,%ebp,2)
ljmp   *(%edx)
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
and    %ch,(%ebx)
add    %al,(%eax)
push   %esp
test   %edi,%edi
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
sub    (%eax),%eax
add    %cl,0x23ffff(%ebp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
jo     8065605 <_IO_stdin_used+0x6861>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
test   %edi,%edi
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
pushf
sub    (%eax),%eax
add    %bl,%al
test   %edi,%edi
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5adfe(%ebx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %eax
or     %bl,%al
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
les    (%ebx),%ebp
add    %al,(%eax)
and    %al,0x226ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
add    $0x2c,%al
add    %al,(%eax)
adc    %cl,0x52ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
sub    %ch,(%eax,%eax,1)
add    %cl,-0x1(%eax,%ecx,4)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,0x0(%esp,%ebp,1)
add    %dh,%al
mov    %bh,%bh
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   $0xa4000000
sub    $0x0,%al
add    %dl,-0x6c(%eax)
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8065737 <_IO_stdin_used+0x6993>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    806576e <_IO_stdin_used+0x69ca>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,(%eax)
sub    $0x95440000,%eax
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%ebp,1)
add    %bh,-0x6b(%eax)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x2d(%eax)
add    %al,(%eax)
je     8065763 <_IO_stdin_used+0x69bf>
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x30
stos   %al,%es:(%edi)
add    $0x8,%al
.byte 0x10
stos   %al,%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
roll   %cl,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,0xc0000(%ecx,%eax,1)
add    %al,(%eax)
pop    %eax
cltd
add    $0x8,%al
or     $0x7c000000,%eax
in     (%dx),%eax
add    $0x1908,%eax
add    %dh,%al
outsb  %ds:(%esi),(%dx)
push   %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
hlt
outsb  %ds:(%esi),(%dx)
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
or     $0x8c,%al
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %bl,0x4(%edx,%eax,4)
or     %cl,(%edx)
add    %al,(%eax)
add    %ah,0xb000006(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
jo     8066f89 <_IO_stdin_used+0x81e5>
or     %al,(%edx)
add    %al,(%eax)
add    %al,0x4(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,(%eax)
xchg   %eax,%ebp
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
fcoms  0x1208(%esp,%eax,1)
add    %al,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x18(%edi)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x50(%edi)
xchg   %eax,%edx
add    $0x8,%al
add    %al,(%eax)
cld
outsb  %ds:(%esi),(%dx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x59f7fb67(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    8066fe0 <_IO_stdin_used+0x823c>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    8067021 <_IO_stdin_used+0x827d>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    8067062 <_IO_stdin_used+0x82be>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    80670a3 <_IO_stdin_used+0x82ff>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    80670e4 <_IO_stdin_used+0x8340>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    8067125 <_IO_stdin_used+0x8381>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    8067166 <_IO_stdin_used+0x83c2>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
out    %al,$0xa0
add    $0x8,%al
mulb   -0x5ef9f7fc(%eax)
add    $0x8,%al
push   %ss
mov    0xa1260804,%eax
add    $0x8,%al
mov    %ss:0xa1460804,%eax
add    $0x8,%al
push   %esi
mov    0xa1660804,%eax
add    $0x8,%al
jbe    80671a7 <_IO_stdin_used+0x8403>
add    $0x8,%al
xchg   %ah,-0x5e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa1b60804,%eax
add    $0x8,%al
(bad)
mov    0xa1d60804,%eax
add    $0x8,%al
out    %al,$0xa1
add    $0x8,%al
mulb   -0x5df9f7fc(%ecx)
add    $0x8,%al
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%ecx)
add    %bl,%cl
adc    $0x19f00806,%eax
add    $0x6166f08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,0x1000806(%edx,%esi,2)
add    %al,(%eax)
xorb   $0x8,0x6(%edi)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %si,0x0(%eax)
.byte 0x0
.byte 0xd
sbb    %eax,%ebp
.byte 0x7c
