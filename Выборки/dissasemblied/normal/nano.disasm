das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dh,0xe(%ebx)
add    $0x91,%al
fs
popf
lock dec %edi
mov    $0xfad6e9c9,%esi
xor    $0xffffffc8,%ebx
adc    $0x8d,%al
pop    %es
.byte 0xe8
add    (%eax),%eax
add    %al,(%eax)
mov    0x4000000,%al
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%eax)
rol    $0x0,%al
icebp
and    %ecx,0x1800408(%edi,%ecx,1)
addb   $0x0,(%eax,%eax,1)
mov    0xa3000000,%al
add    %al,(%eax)
add    %ch,0x42000000(%ebx)
inc    %ebp
aad    $0xec
mov    $0x297c92e3,%edx
sbb    $0xf2381c8c,%eax
mov    (%esi,%edx,1),%ebx
daa
cmpl   $0xffffffe3,0x4b(%esp,%ebp,4)
rcr    $0x2b,%al
mov    %ds,(%esi,%eiz,2)
push   %ebp
popa
adc    %bl,%al
jno    8048253 <_init-0x1825>
sbb    $0x20,%al
mov    %eax,0x8db90d87
icebp
push   %cs
xchg   %eax,%esi
addr16 push %ebx
imul   %edx
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
pop    %esi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repnz add $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x1,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x2,$0x0
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ss:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,$0x2
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
arpl   %ax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,%gs:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   %cl,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %es
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fadds  (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fadds  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incl   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ds
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ss
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repnz add (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
call   8048a09 <_init-0x106f>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jne    8048aa7 <_init-0xfd1>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%bl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     8048bbb <_init-0xebd>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    8048bca <_init-0xeae>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
push   %es
add    %al,(%eax)
or     %dh,0x7(%ebx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %dl,(%esi)
push   %es
add    %al,(%eax)
inc    %eax
js     8048c32 <_init-0xe46>
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,%bl
add    (%eax),%eax
add    %ah,0x73(%eax)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
popf
add    $0x0,%al
add    %ah,(%ebx,%esi,2)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %eax
add    %al,(%eax)
add    %al,0x73(%eax)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lret
add    %eax,(%eax)
add    %al,%ah
mov    $0x6,%cl
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
str    0x0(%ebp)
add    %al,(%eax)
inc    %esp
jae    8048c82 <_init-0xdf6>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sbb    %eax,(%ebx)
add    %al,(%eax)
dec    %eax
jae    8048c92 <_init-0xde6>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%esi),%al
add    %al,(%eax)
or     %dh,0x7(%ebx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x7(%ebx,%esi,2)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %ebx
add    %eax,(%eax)
add    %bh,-0x66(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
adc    (%eax),%al
add    %al,(%eax)
and    %dh,0x7(%ebx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xor    (%ecx),%al
add    %al,(%eax)
test   $0xb1,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %dl,0x2(%edx)
add    %al,(%eax)
sub    %dh,0x7(%ebx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%esi
add    $0x0,%al
add    %ch,0x73(%eax)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x72(%ebp)
jae    8048d73 <_init-0xd05>
jae    8048d87 <_init-0xcf1>
jae,pn 8048d82 <_init-0xcf6>
cs
xor    $0x72756300,%eax
jae    8048d7e <_init-0xcfa>
jb     8048d1d <_init-0xd5b>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048d8b <_init-0xced>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jb     8048d9c <_init-0xcdc>
ja     8048d3d <_init-0xd3b>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048dba <_init-0xcbe>
popa
jb     8048dbd <_init-0xcbb>
pop    %edi
pop    %edi
add    %al,0x4f(%ebx)
dec    %esp
push   %ebx
add    %dh,0x74(%ebx)
fs
jae    8048db9 <_init-0xcbf>
jb     8048d58 <_init-0xd20>
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
push   %ebx
add    %bl,0x4a(%edi)
jbe    8048dc1 <_init-0xcb7>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048de2 <_init-0xc96>
gs
jae    8048d72 <_init-0xd06>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048dde <_init-0xc9a>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
arpl   %si,0x72(%ebp)
jae    8048df0 <_init-0xc88>
jae    8048df8 <_init-0xc80>
je     8048d95 <_init-0xce3>
outsl  %fs:(%esi),(%dx)
jne    8048e09 <_init-0xc6f>
fs
popa
je     8048e02 <_init-0xc76>
add    %ah,0x6c(%ebp,%eiz,2)
ja     8048e0c <_init-0xc6c>
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8048e16 <_init-0xc62>
outsl  %ds:(%esi),(%dx)
jne    8048e1f <_init-0xc59>
add    %dh,%gs:0x6e(%edi)
outsl  %ds:(%esi),(%dx)
jne    8048e27 <_init-0xc51>
jb     8048e1a <_init-0xc5e>
data16
jb     8048e1d <_init-0xc5b>
jae    8048e22 <_init-0xc56>
add    %dh,0x63(%ebx)
jb     8048e2e <_init-0xc4a>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x75,(%eax),%eax
jae    8048e2c <_init-0xc4c>
pop    %edi
fs
gs
popaw
jne    8048e3a <_init-0xc3e>
je     8048e2f <_init-0xc49>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     8048e49 <_init-0xc2f>
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %dh,0x61(%edi)
fs arpl %bp,%fs:0x0(%eax)
ja     8048e4a <_init-0xc2e>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x6f(%esi)
arpl   %bp,%gs:0x6f(%eax)
add    %dh,0x61(%edi)
je     8048e6b <_init-0xc0d>
jb     8048e58 <_init-0xc20>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x73(%ecx)
outsb  %gs:(%esi),(%dx)
fs
ja     8048e6c <_init-0xc0c>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ebp)
jne    8048e7c <_init-0xbfc>
imul   $0x61767265,%gs:0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %dh,0x67(%edi)
gs
je     8048e7b <_init-0xbfd>
push   $0x6f6d7700
jne    8048e92 <_init-0xbe6>
gs
pop    %edi
je     8048e95 <_init-0xbe3>
popa
outsw  %ds:(%esi),(%dx)
add    %dh,0x73(%edi)
arpl   %si,0x6c(%edx)
add    %dh,0x61(%edi)
fs outsb %fs:(%esi),(%dx)
jae    8048ea8 <_init-0xbd0>
jb     8048e36 <_init-0xc42>
pop    %edi
imul   $0x6800,0x69(%esi),%bp
popa
jae    8048e9f <_init-0xbd9>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     8048eb9 <_init-0xbbf>
add    %dh,0x6e(%ebp)
addr16
gs
je     8048eb0 <_init-0xbc8>
push   $0x6e695f00
imul   $0x72747461,0x77(%eax,%eax,1),%esi
pop    %edi
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ch,0x6f(%ebp)
jne    8048ed6 <_init-0xba2>
gs
insl   (%dx),%es:(%edi)
popa
jae    8048ed3 <_init-0xba5>
add    %dh,0x72(%edi)
gs
data16
jb     8048ed4 <_init-0xba4>
jae    8048ed9 <_init-0xb9f>
add    %ch,0x65(%esi)
ja     8048eed <_init-0xb8b>
imul   $0x766f6d77,0x0(%esi),%ebp
add    %ch,%gs:0x6e(%ecx)
imul   $0x726961,0x70(%edi,%ebx,2),%esi
imul   $0x72637374,0x69(%esi),%ebp
add    %dh,0x74(%ebx)
popa
jb     8048f0a <_init-0xb6e>
pop    %edi
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     8048e9d <_init-0xbdb>
bound  %esp,0x65(%ebp)
jo     8048ea2 <_init-0xbd6>
insb   (%dx),%es:(%edi)
imul   $0x6f666e69,0x74(%edx),%esp
jae,pn 8048f1c <_init-0xb5c>
cs
xor    $0x79656b00,%eax
jo     8048f16 <_init-0xb62>
add    %ch,%fs:0x61(%esi)
jo     8048f28 <_init-0xb50>
jae    8048ebd <_init-0xbbb>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    8048ec5 <_init-0xbb3>
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048f49 <_init-0xb2f>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     8048f45 <_init-0xb33>
popa
jae    8048f4a <_init-0xb2e>
jae    8048f5b <_init-0xb1d>
jb     8048ee9 <_init-0xb8f>
data16
data16
insb   (%dx),%es:(%edi)
jne    8048f61 <_init-0xb17>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048f74 <_init-0xb04>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048f77 <_init-0xb01>
je     8048f10 <_init-0xb68>
gs
js     8048f78 <_init-0xb00>
arpl   %bp,0x73(%eax,%eax,1)
jo     8048f8b <_init-0xaed>
imul   $0x495f0066,0x74(%esi),%ebp
dec    %edi
pop    %edi
jo     8048f99 <_init-0xadf>
je     8048f89 <_init-0xaef>
add    %dh,0x65(%ebx)
je     8048f97 <_init-0xae1>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x73(%ecx)
ja     8048f97 <_init-0xae1>
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x74,(%eax),%eax
outsl  %ds:(%esi),(%dx)
ja     8048faa <_init-0xace>
outsl  %ds:(%esi),(%dx)
ja     8048fa6 <_init-0xad2>
jb     8048f43 <_init-0xb35>
jae    8048fb9 <_init-0xabf>
jb     8048fb5 <_init-0xac3>
arpl   %bp,0x70(%ebp)
add    %ah,0x6e(%ebx,%eiz,2)
addr16
gs
je     8048fc6 <_init-0xab2>
gs
js     8048fc9 <_init-0xaaf>
add    %ch,0x70(%edi)
je     8048fc3 <_init-0xab5>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x65(%edi)
je     8048fd1 <_init-0xaa7>
ja     8048fc8 <_init-0xab0>
outsb  %ds:(%esi),(%dx)
je     8048f66 <_init-0xb12>
jae    8048fdc <_init-0xa9c>
jb     8048fdc <_init-0xa9c>
arpl   %bp,0x72(%eax)
add    %dh,0x61(%edi)
imul   $0x6e6f6c5f,0x5f(%eax,%eax,1),%esi
addr16 push $0x6d
jo     8048fdc <_init-0xa9c>
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
addr16
gs
js     8048fec <_init-0xa8c>
arpl   %ax,(%eax)
jo     8048ff4 <_init-0xa84>
jo     8048ff2 <_init-0xa86>
add    %dh,0x65(%eax)
jb     8049004 <_init-0xa74>
outsl  %ds:(%esi),(%dx)
jb     8048f95 <_init-0xae3>
arpl   %sp,%fs:0x65(%edi)
je     804900f <_init-0xa69>
gs
js     8049012 <_init-0xa66>
add    %ah,0x65(%edi)
je     8049013 <_init-0xa65>
ja     804901a <_init-0xa5e>
imul   $0x65736f6c,0x63(%eax,%eax,1),%esp
imul   $0x6e727473,%fs:0x0(%edx),%esi
arpl   %si,0x79(%eax)
add    %dh,0x75(%eax)
je     8049030 <_init-0xa48>
add    %ch,0x62(%ebp)
jae    8049036 <_init-0xa42>
outsl  %ds:(%esi),(%dx)
ja     8049028 <_init-0xa50>
jae    8048fc7 <_init-0xab1>
outsw  %ds:(%esi),(%dx)
jb     8049036 <_init-0xa42>
add    %dh,0x69(%ebx)
addr16 jo 8049043 <_init-0xa35>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    8049042 <_init-0xa36>
add    %dh,0x65(%edx)
addr16
data16
jb     8049043 <_init-0xa35>
add    %dh,%gs:0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8048feb <_init-0xa8d>
pop    %edi
pop    %edi
jae    8049063 <_init-0xa15>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x70,(%eax),%eax
jne    804907a <_init-0x9fe>
arpl   %bp,0x61(%eax)
jb     804900b <_init-0xa6d>
jb     8049072 <_init-0xa06>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jb     804907a <_init-0x9fe>
ja     8049080 <_init-0x9f8>
outsb  %ds:(%esi),(%dx)
fs imul $0x69647473,%fs:0x0(%edx),%esi
69
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     8049097 <_init-0x9e1>
bound  %esi,0x6b(%edx)
add    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
ja     8049095 <_init-0x9e3>
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jne    80490a5 <_init-0x9d3>
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     80490a4 <_init-0x9d4>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    80490bd <_init-0x9bb>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8049050 <_init-0xa28>
jae    80490c6 <_init-0x9b2>
jb     80490c8 <_init-0x9b0>
outsl  %ds:(%esi),(%dx)
imul   $0x65,(%eax),%eax
outsb  %ds:(%esi),(%dx)
fs
jo     80490d3 <_init-0x9a5>
outsb  %gs:(%esi),(%dx)
je     8049060 <_init-0xa18>
jae    80490d6 <_init-0x9a2>
jb     80490d8 <_init-0x9a0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x78(%ebp)
arpl   %bp,%gs:0x0(%eax,%esi,2)
jae    80490e4 <_init-0x994>
jb     80490de <_init-0x99a>
outsb  %gs:(%esi),(%dx)
add    %dh,0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     80490f0 <_init-0x988>
jns    80490f1 <_init-0x987>
gs
je     8049081 <_init-0x9f7>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    80490eb <_init-0x98d>
je     8049088 <_init-0x9f0>
jae    80490fe <_init-0x97a>
jb     80490ff <_init-0x979>
je     8049100 <_init-0x978>
add    %bl,0x5f(%edi)
gs
jb     8049106 <_init-0x972>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x73637400,0x6e(%edi),%ebp
gs
je     8049107 <_init-0x971>
je     804911c <_init-0x95c>
jb     80490aa <_init-0x9ce>
arpl   %bp,0x64(%eax)
imul   $0x6f74626d,0x0(%edx),%esi
ja     8049119 <_init-0x95f>
add    %dh,0x79(%esp,%esi,2)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
jo     804913b <_init-0x93d>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x65736464,0x61(%edi),%esp
je     80490dc <_init-0x99c>
data16
arpl   %bp,0x6f(%eax)
ja     8049150 <_init-0x928>
add    %bl,0x5f(%edi)
jae    8049150 <_init-0x928>
addr16 jae 804914f <_init-0x929>
je     8049156 <_init-0x922>
insl   (%dx),%es:(%edi)
jo     80490ef <_init-0x989>
jae    8049165 <_init-0x913>
outsl  %fs:(%esi),(%dx)
jne    8049169 <_init-0x90f>
add    %ah,0x70(%esi)
jne    804916e <_init-0x90a>
arpl   %ax,(%eax)
data16
jo     8049160 <_init-0x918>
je     8049169 <_init-0x90f>
arpl   %bp,0x6e(%edi)
data16
add    %dh,0x65(%edx)
addr16
gs
jb     804917e <_init-0x8fa>
outsl  %ds:(%esi),(%dx)
jb     804910f <_init-0x969>
jae    8049185 <_init-0x8f3>
jb     8049181 <_init-0x8f7>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8049189 <_init-0x8ef>
add    %bl,0x5f(%edi)
jbe    804919c <_init-0x8dc>
outsb  %ds:(%esi),(%dx)
jo     804919e <_init-0x8da>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80491b2 <_init-0x8c6>
jb     80491a3 <_init-0x8d5>
popa
je     8049143 <_init-0x935>
jne    80491b2 <_init-0x8c6>
popa
jae    80491b3 <_init-0x8c5>
add    %dh,0x74(%ebx)
jb     80491b0 <_init-0x8c8>
popa
jae    80491b5 <_init-0x8c3>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     80491cc <_init-0x8ac>
je     80491bc <_init-0x8bc>
je     8049193 <_init-0x8e5>
xor    $0x0,%al
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x706f006f,0x66(%bp),%ebp
outsb  %gs:(%esi),(%dx)
imul   $0x73785f5f,%fs:0x0(%edx),%esi
je     80491da <_init-0x89e>
je     80491b1 <_init-0x8c7>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80491f4 <_init-0x884>
outsb  %ds:(%esi),(%dx)
jbe    8049192 <_init-0x8e6>
jb     80491f9 <_init-0x87f>
arpl   %bp,0x6d(%bx)
jo     804919a <_init-0x8de>
outsl  %ds:(%esi),(%dx)
jo     8049211 <_init-0x867>
popa
jb     8049207 <_init-0x871>
add    %dh,0x74(%ebx)
fs
gs
jb     8049219 <_init-0x85f>
add    %dh,0x63(%edi)
ja     8049215 <_init-0x863>
fs
je     8049217 <_init-0x861>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
addr16
gs
je     8049229 <_init-0x84f>
jo     8049230 <_init-0x848>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x78(%di)
arpl   %si,%gs:0x70(%esi)
add    %dh,0x74(%ebx)
jb     804923b <_init-0x83d>
arpl   %sp,0x73(%ecx)
arpl   %bp,%gs:0x70(%ebp)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8049243 <_init-0x835>
ja     8049246 <_init-0x832>
add    %bl,0x5f(%edi)
addr16
gs
je     804924d <_init-0x82b>
gs
insb   (%dx),%es:(%edi)
imul   $0x69727766,0x0(%ebp),%ebp
je     8049259 <_init-0x81f>
add    %ah,0x72(%esi)
gs
popa
add    %dh,%fs:0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
jae    804927d <_init-0x7fb>
gs
insl   (%dx),%es:(%edi)
jo     8049243 <_init-0x835>
xor    $0x0,%al
addr16
gs
je     8049278 <_init-0x800>
jne    804927e <_init-0x7fa>
add    %dh,%fs:0x61(%edi)
imul   $0x74730064,0x69(%eax,%esi,2),%esi
jb     8049286 <_init-0x7f2>
push   $0x74750072
imul   $0x765f5f00,0x65(%ebp),%ebp
data16
jo     80492a4 <_init-0x7d4>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
bound  %ebp,0x6e(%ebp,%eiz,2)
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     80492ab <_init-0x7cd>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     80492cb <_init-0x7ad>
add    %dh,0x67(%ebx,%eiz,2)
gs
je     80492bf <_init-0x7b9>
je     80492d4 <_init-0x7a4>
jb     8049262 <_init-0x816>
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     80492db <_init-0x79d>
jne    80492de <_init-0x79a>
jo     80492d5 <_init-0x7a3>
jb     80492d1 <_init-0x7a7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     80492ef <_init-0x789>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80492e9 <_init-0x78f>
jb     80492e5 <_init-0x793>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    80492fe <_init-0x77a>
jb     80492f9 <_init-0x77f>
outsb  %ds:(%esi),(%dx)
je     80492f9 <_init-0x77f>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x73(%ecx)
ja     804930c <_init-0x76c>
jne    804930c <_init-0x76c>
arpl   %si,0x6d(%eax,%eax,1)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804930d <_init-0x76b>
add    %ah,0x6f(%esi)
jo     8049312 <_init-0x766>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     804931c <_init-0x75c>
js     804932d <_init-0x74b>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8049339 <_init-0x73f>
add    %bl,0x49(%edi)
dec    %edi
pop    %edi
addr16
gs
je     8049332 <_init-0x746>
add    %dh,0x74(%ebx)
jb     8049337 <_init-0x741>
insl   (%dx),%es:(%edi)
jo     80492d7 <_init-0x7a1>
jae    804934d <_init-0x72b>
jb     8049340 <_init-0x738>
jb     804934f <_init-0x729>
outsl  %ds:(%esi),(%dx)
jb     80492e0 <_init-0x798>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049360 <_init-0x718>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     80492f9 <_init-0x77f>
jae    804936f <_init-0x709>
jo     8049360 <_init-0x718>
jo     8049378 <_init-0x700>
add    %dh,0x63(%edi)
je     8049373 <_init-0x705>
insl   (%dx),%es:(%edi)
bound  %eax,(%eax)
pop    %edi
gs
fs
popa
je     804936e <_init-0x70a>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    804938a <_init-0x6ee>
popa
jb     804938d <_init-0x6eb>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%ecx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x3000300,%eax
add    %al,0x0
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,0x3000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000400,%eax
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x300
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
pop    %es
add    %al,%cl
add    %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x69691(%ecx)
add    %cl,(%eax)
add    %bl,(%ebx)
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x70000,%eax
es
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x630,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
cmp    (%esi),%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8049533 <_init-0x545>
imul   $0x40000,(%ecx),%ecx
inc    %esp
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
push   %eax
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x20000,%eax
pop    %edx
push   %es
add    %al,(%eax)
add    %al,(%eax)
cld
outsl  %ds:(%esi),(%dx)
pop    %es
or     %al,(%esi)
dec    %ecx
add    %al,(%eax)
and    %dh,0x7(%ebx)
or     %al,0x240000ab
jae    8049562 <_init-0x516>
or     %al,0x280000a3
jae    804956a <_init-0x50e>
or     %al,0x400000ad
jae    8049572 <_init-0x506>
or     %al,0x440000a4
jae    804957a <_init-0x4fe>
or     %al,0x480000a6
jae    8049582 <_init-0x4f6>
or     %al,0x600000a7
jae    804958a <_init-0x4ee>
or     %al,0x640000a2
jae    8049592 <_init-0x4e6>
or     %al,0x680000a9
jae    804959a <_init-0x4de>
.byte 0x8
.byte 0x5
scas   %es:(%edi),%al
or     $0x70,%al
pop    %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
jo     80495aa <_init-0x4ce>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%esi,2)
pop    %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
jo     80495ba <_init-0x4be>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%esi,2)
pop    %es
or     %al,(%edi)
add    $0x70200000,%eax
pop    %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0x70,%al
pop    %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
sub    %dh,0x7(%eax)
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%esi,2)
pop    %es
or     %al,(%edi)
or     %eax,(%eax)
add    %dh,(%eax)
jo     80495ea <_init-0x48e>
or     %al,(%edi)
or     (%eax),%eax
add    %dh,(%eax,%esi,2)
pop    %es
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax)
jo     80495fa <_init-0x47e>
or     %al,(%edi)
or     $0x703c0000,%eax
pop    %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %eax
jo     804960a <_init-0x46e>
or     %al,(%edi)
sldt   (%eax)
inc    %esp
jo     8049612 <_init-0x466>
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x70(%eax)
pop    %es
or     %al,(%edi)
adc    %eax,(%eax)
add    %cl,0x7(%eax,%esi,2)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x70(%eax)
pop    %es
or     %al,(%edi)
adc    (%eax),%eax
add    %dl,0x7(%eax,%esi,2)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x70(%eax)
pop    %es
or     %al,(%edi)
adc    $0x705c0000,%eax
pop    %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
jo     804964a <_init-0x42e>
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
fs
jo     8049652 <_init-0x426>
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x70(%eax)
pop    %es
or     %al,(%edi)
sbb    %eax,(%eax)
add    %ch,0x7(%eax,%esi,2)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x70(%eax)
pop    %es
or     %al,(%edi)
sbb    (%eax),%eax
add    %dh,0x7(%eax,%esi,2)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x70(%eax)
pop    %es
or     %al,(%edi)
sbb    $0x707c0000,%eax
pop    %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
xorb   $0x8,0x7(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
test   %dh,0x7(%eax)
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x7080770(%eax)
and    %eax,(%eax)
add    %cl,0x22070807(%eax,%esi,2)
add    %al,(%eax)
nop
jo     80496aa <_init-0x3ce>
or     %al,(%edi)
and    (%eax),%eax
add    %dl,0x24070807(%eax,%esi,2)
add    %al,(%eax)
cwtl
jo     80496ba <_init-0x3be>
or     %al,(%edi)
and    $0x709c0000,%eax
pop    %es
or     %al,(%edi)
add    %al,%es:(%eax)
mov    0x7080770,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jo     80496d2 <_init-0x3a6>
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x7080770(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070807(%eax,%esi,2)
add    %al,(%eax)
mov    $0x70,%al
pop    %es
or     %al,(%edi)
sub    (%eax),%eax
add    %dh,0x2c070807(%eax,%esi,2)
add    %al,(%eax)
mov    $0x7080770,%eax
sub    $0x70bc0000,%eax
pop    %es
or     %al,(%edi)
add    %al,%cs:(%eax)
(bad)
jo     804970a <_init-0x36e>
or     %al,(%edi)
das
add    %al,(%eax)
les    0x7(%eax),%esi
or     %al,(%edi)
xor    %al,(%eax)
add    %cl,%al
jo     804971a <_init-0x35e>
or     %al,(%edi)
xor    %eax,(%eax)
add    %cl,%ah
jo     8049722 <_init-0x356>
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%al
jo     804972a <_init-0x34e>
or     %al,(%edi)
xor    (%eax),%eax
add    %dl,%ah
jo     8049732 <_init-0x346>
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%al
jo     804973a <_init-0x33e>
or     %al,(%edi)
xor    $0x70dc0000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ss:(%eax)
loopne 80497b2 <_init-0x2c6>
pop    %es
or     %al,(%edi)
aaa
add    %al,(%eax)
in     $0x70,%al
pop    %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %ch,%al
jo     804975a <_init-0x31e>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %ch,%ah
jo     8049762 <_init-0x316>
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%al
jo     804976a <_init-0x30e>
or     %al,(%edi)
cmp    (%eax),%eax
add    %dh,%ah
jo     8049772 <_init-0x306>
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%al
jo     804977a <_init-0x2fe>
or     %al,(%edi)
cmp    $0x70fc0000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ds:(%eax)
add    %dh,0x7(%ecx)
or     %al,(%edi)
aas
add    %al,(%eax)
add    $0x71,%al
pop    %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
or     %dh,0x7(%ecx)
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
or     $0x71,%al
pop    %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
adc    %dh,0x7(%ecx)
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
adc    $0x71,%al
pop    %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
sbb    %dh,0x7(%ecx)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
sbb    $0x71,%al
pop    %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
and    %dh,0x7(%ecx)
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
and    $0x71,%al
pop    %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
sub    %dh,0x7(%ecx)
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
sub    $0x71,%al
pop    %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
xor    %dh,0x7(%ecx)
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
xor    $0x71,%al
pop    %es
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
cmp    %dh,0x7(%ecx)
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
cmp    $0x71,%al
pop    %es
or     %al,(%edi)
dec    %esi
add    %al,(%eax)
inc    %eax
jno    804980a <_init-0x26e>
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
inc    %esp
jno    8049812 <_init-0x266>
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %eax
jno    804981a <_init-0x25e>
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
dec    %esp
jno    8049822 <_init-0x256>
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
jno    804982a <_init-0x24e>
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
push   %esp
jno    8049832 <_init-0x246>
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %eax
jno    804983a <_init-0x23e>
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pop    %esp
jno    8049842 <_init-0x236>
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pusha
jno    804984a <_init-0x22e>
or     %al,(%edi)
push   %edi
add    %al,(%eax)
fs
jno    8049852 <_init-0x226>
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
push   $0x7080771
pop    %ecx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jno    8049862 <_init-0x216>
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
jo     80498d3 <_init-0x1a5>
pop    %es
or     %al,(%edi)
pop    %ebx
add    %al,(%eax)
je     80498db <_init-0x19d>
pop    %es
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
js     80498e3 <_init-0x195>
pop    %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
jl     80498eb <_init-0x18d>
pop    %es
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
xorb   $0x8,0x7(%ecx)
pop    %es
pop    %edi
add    %al,(%eax)
test   %dh,0x7(%ecx)
or     %al,(%edi)
pusha
add    %al,(%eax)
mov    %dh,0x7(%ecx)
or     %al,(%edi)
popa
add    %al,(%eax)
mov    %?,0x7(%ecx)
or     %al,(%edi)
bound  %eax,(%eax)
add    %dl,0x7080771(%eax)
arpl   %ax,(%eax)
add    %dl,0x64070807(%ecx,%esi,2)
add    %al,(%eax)
cwtl
jno    80498ba <_init-0x1be>
or     %al,(%edi)
add    %al,%gs:(%eax)
pushf
jno    80498c2 <_init-0x1b6>
or     %al,(%edi)
data16
add    %al,(%eax)
mov    0x7080771,%al
add    %al,(%bx,%si)
movsb  %ds:(%esi),%es:(%edi)
jno    80498d2 <_init-0x1a6>
or     %al,(%edi)
push   $0x71a80000
pop    %es
or     %al,(%edi)
imul   $0x771ac00,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %dh,0x7080771(%eax)
imul   $0x0,(%eax),%eax
mov    $0x71,%ah
pop    %es
or     %al,(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x7080771,%eax
insl   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x7080771,%esp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
(bad)
jno    804990a <_init-0x16e>
or     %al,(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
les    0x7(%ecx),%esi
or     %al,(%edi)
jo     804990f <_init-0x169>
add    %cl,%al
jno    804991a <_init-0x15e>
or     %al,(%edi)
jno    8049917 <_init-0x161>
add    %cl,%ah
jno    8049922 <_init-0x156>
or     %al,(%edi)
jb     804991f <_init-0x159>
add    %dl,%al
jno    804992a <_init-0x14e>
or     %al,(%edi)
jae    8049927 <_init-0x151>
add    %dl,%ah
jno    8049932 <_init-0x146>
or     %al,(%edi)
je     804992f <_init-0x149>
add    %bl,%al
jno    804993a <_init-0x13e>
or     %al,(%edi)
jne    8049937 <_init-0x141>
add    %bl,%ah
jno    8049942 <_init-0x136>
or     %al,(%edi)
jbe    804993f <_init-0x139>
add    %ah,%al
jno    804994a <_init-0x12e>
or     %al,(%edi)
ja     8049947 <_init-0x131>
add    %ah,%ah
jno    8049952 <_init-0x126>
or     %al,(%edi)
js     804994f <_init-0x129>
add    %ch,%al
jno    804995a <_init-0x11e>
or     %al,(%edi)
jns    8049957 <_init-0x121>
add    %ch,%ah
jno    8049962 <_init-0x116>
or     %al,(%edi)
jp     804995f <_init-0x119>
add    %dh,%al
jno    804996a <_init-0x10e>
or     %al,(%edi)
jnp    8049967 <_init-0x111>
add    %dh,%ah
jno    8049972 <_init-0x106>
or     %al,(%edi)
jl     804996f <_init-0x109>
add    %bh,%al
jno    804997a <_init-0xfe>
or     %al,(%edi)
jge    8049977 <_init-0x101>
add    %bh,%ah
jno    8049982 <_init-0xf6>
or     %al,(%edi)
jg     804997f <_init-0xf9>
add    %al,(%eax)
jb     804998a <_init-0xee>
or     %al,(%edi)
addb   $0x0,(%eax)
add    $0x72,%al
pop    %es
or     %al,(%edi)
addl   $0x7720800,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
or     $0x72,%al
pop    %es
or     %al,(%edi)
addl   $0x0,(%eax)
adc    %dh,0x7(%edx)
or     %al,(%edi)
test   %al,(%eax)
add    %dl,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
test   %eax,(%eax)
add    %bl,(%eax)
jb     80499ba <_init-0xbe>
or     %al,(%edi)
xchg   %al,(%eax)
add    %bl,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
xchg   %eax,(%eax)
add    %ah,(%eax)
jb     80499ca <_init-0xae>
or     %al,(%edi)
mov    %eax,(%eax)
add    %ah,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
mov    (%eax),%al
add    %ch,(%eax)
jb     80499da <_init-0x9e>
or     %al,(%edi)
mov    (%eax),%eax
add    %ch,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
mov    %es,(%eax)
add    %dh,(%eax)
jb     80499ea <_init-0x8e>
or     %al,(%edi)
lea    (%eax),%eax
add    %dh,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
mov    (%eax),%es
add    %bh,(%eax)
jb     80499fa <_init-0x7e>
or     %al,(%edi)
popl   (%eax)
add    %bh,(%edx,%esi,2)
pop    %es
or     %al,(%edi)
nop
add    %al,(%eax)
inc    %eax
jb     8049a0a <_init-0x6e>
or     %al,(%edi)
xchg   %eax,%ecx
add    %al,(%eax)
inc    %esp
jb     8049a12 <_init-0x66>
or     %al,(%edi)
xchg   %eax,%edx
add    %al,(%eax)
dec    %eax
jb     8049a1a <_init-0x5e>
or     %al,(%edi)
xchg   %eax,%ebx
add    %al,(%eax)
dec    %esp
jb     8049a22 <_init-0x56>
or     %al,(%edi)
xchg   %eax,%esp
add    %al,(%eax)
push   %eax
jb     8049a2a <_init-0x4e>
or     %al,(%edi)
xchg   %eax,%ebp
add    %al,(%eax)
push   %esp
jb     8049a32 <_init-0x46>
or     %al,(%edi)
xchg   %eax,%esi
add    %al,(%eax)
pop    %eax
jb     8049a3a <_init-0x3e>
or     %al,(%edi)
xchg   %eax,%edi
add    %al,(%eax)
pop    %esp
jb     8049a42 <_init-0x36>
or     %al,(%edi)
cwtl
add    %al,(%eax)
pusha
jb     8049a4a <_init-0x2e>
or     %al,(%edi)
cltd
add    %al,(%eax)
fs
jb     8049a52 <_init-0x26>
or     %al,(%edi)
lcall  $0x807,$0x72680000
pop    %es
fwait
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jb     8049a62 <_init-0x16>
or     %al,(%edi)
pushf
add    %al,(%eax)
jo     8049ad4 <strstr@plt+0x4>
pop    %es
or     %al,(%edi)
popf
add    %al,(%eax)
je     8049adc <strstr@plt+0xc>
pop    %es
or     %al,(%edi)
sahf
add    %al,(%eax)
js     8049ae4 <strcmp@plt+0x4>
pop    %es
or     %al,(%edi)
lahf
push   %ebx
sub    $0x8,%esp
call   8049a81 <_init+0x9>
pop    %ebx
add    $0x2d57f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8049a97 <_init+0x1f>
call   8049f20 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8077004
jmp    *0x8077008
add    %al,(%eax)
jmp    *0x807700c
push   $0x0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077010
push   $0x8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077014
push   $0x10
jmp    8049aa0 <_init+0x28>
jmp    *0x8077018
push   $0x18
jmp    8049aa0 <_init+0x28>
jmp    *0x807701c
push   $0x20
jmp    8049aa0 <_init+0x28>
jmp    *0x8077020
push   $0x28
jmp    8049aa0 <_init+0x28>
jmp    *0x8077024
push   $0x30
jmp    8049aa0 <_init+0x28>
jmp    *0x8077028
push   $0x38
jmp    8049aa0 <_init+0x28>
jmp    *0x807702c
push   $0x40
jmp    8049aa0 <_init+0x28>
jmp    *0x8077030
push   $0x48
jmp    8049aa0 <_init+0x28>
jmp    *0x8077034
push   $0x50
jmp    8049aa0 <_init+0x28>
jmp    *0x8077038
push   $0x58
jmp    8049aa0 <_init+0x28>
jmp    *0x807703c
push   $0x60
jmp    8049aa0 <_init+0x28>
jmp    *0x8077040
push   $0x68
jmp    8049aa0 <_init+0x28>
jmp    *0x8077044
push   $0x70
jmp    8049aa0 <_init+0x28>
jmp    *0x8077048
push   $0x78
jmp    8049aa0 <_init+0x28>
jmp    *0x807704c
push   $0x80
jmp    8049aa0 <_init+0x28>
jmp    *0x8077050
push   $0x88
jmp    8049aa0 <_init+0x28>
jmp    *0x8077054
push   $0x90
jmp    8049aa0 <_init+0x28>
jmp    *0x8077058
push   $0x98
jmp    8049aa0 <_init+0x28>
jmp    *0x807705c
push   $0xa0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077060
push   $0xa8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077064
push   $0xb0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077068
push   $0xb8
jmp    8049aa0 <_init+0x28>
jmp    *0x807706c
push   $0xc0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077070
push   $0xc8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077074
push   $0xd0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077078
push   $0xd8
jmp    8049aa0 <_init+0x28>
jmp    *0x807707c
push   $0xe0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077080
push   $0xe8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077084
push   $0xf0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077088
push   $0xf8
jmp    8049aa0 <_init+0x28>
jmp    *0x807708c
push   $0x100
jmp    8049aa0 <_init+0x28>
jmp    *0x8077090
push   $0x108
jmp    8049aa0 <_init+0x28>
jmp    *0x8077094
push   $0x110
jmp    8049aa0 <_init+0x28>
jmp    *0x8077098
push   $0x118
jmp    8049aa0 <_init+0x28>
jmp    *0x807709c
push   $0x120
jmp    8049aa0 <_init+0x28>
jmp    *0x80770a0
push   $0x128
jmp    8049aa0 <_init+0x28>
jmp    *0x80770a4
push   $0x130
jmp    8049aa0 <_init+0x28>
jmp    *0x80770a8
push   $0x138
jmp    8049aa0 <_init+0x28>
jmp    *0x80770ac
push   $0x140
jmp    8049aa0 <_init+0x28>
jmp    *0x80770b0
push   $0x148
jmp    8049aa0 <_init+0x28>
jmp    *0x80770b4
push   $0x150
jmp    8049aa0 <_init+0x28>
jmp    *0x80770b8
push   $0x158
jmp    8049aa0 <_init+0x28>
jmp    *0x80770bc
push   $0x160
jmp    8049aa0 <_init+0x28>
jmp    *0x80770c0
push   $0x168
jmp    8049aa0 <_init+0x28>
jmp    *0x80770c4
push   $0x170
jmp    8049aa0 <_init+0x28>
jmp    *0x80770c8
push   $0x178
jmp    8049aa0 <_init+0x28>
jmp    *0x80770cc
push   $0x180
jmp    8049aa0 <_init+0x28>
jmp    *0x80770d0
push   $0x188
jmp    8049aa0 <_init+0x28>
jmp    *0x80770d4
push   $0x190
jmp    8049aa0 <_init+0x28>
jmp    *0x80770d8
push   $0x198
jmp    8049aa0 <_init+0x28>
jmp    *0x80770dc
push   $0x1a0
jmp    8049aa0 <_init+0x28>
jmp    *0x80770e0
push   $0x1a8
jmp    8049aa0 <_init+0x28>
jmp    *0x80770e4
push   $0x1b0
jmp    8049aa0 <_init+0x28>
jmp    *0x80770e8
push   $0x1b8
jmp    8049aa0 <_init+0x28>
jmp    *0x80770ec
push   $0x1c0
jmp    8049aa0 <_init+0x28>
jmp    *0x80770f0
push   $0x1c8
jmp    8049aa0 <_init+0x28>
jmp    *0x80770f4
push   $0x1d0
jmp    8049aa0 <_init+0x28>
jmp    *0x80770f8
push   $0x1d8
jmp    8049aa0 <_init+0x28>
jmp    *0x80770fc
push   $0x1e0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077100
push   $0x1e8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077104
push   $0x1f0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077108
push   $0x1f8
jmp    8049aa0 <_init+0x28>
jmp    *0x807710c
push   $0x200
jmp    8049aa0 <_init+0x28>
jmp    *0x8077110
push   $0x208
jmp    8049aa0 <_init+0x28>
jmp    *0x8077114
push   $0x210
jmp    8049aa0 <_init+0x28>
jmp    *0x8077118
push   $0x218
jmp    8049aa0 <_init+0x28>
jmp    *0x807711c
push   $0x220
jmp    8049aa0 <_init+0x28>
jmp    *0x8077120
push   $0x228
jmp    8049aa0 <_init+0x28>
jmp    *0x8077124
push   $0x230
jmp    8049aa0 <_init+0x28>
jmp    *0x8077128
push   $0x238
jmp    8049aa0 <_init+0x28>
jmp    *0x807712c
push   $0x240
jmp    8049aa0 <_init+0x28>
jmp    *0x8077130
push   $0x248
jmp    8049aa0 <_init+0x28>
jmp    *0x8077134
push   $0x250
jmp    8049aa0 <_init+0x28>
jmp    *0x8077138
push   $0x258
jmp    8049aa0 <_init+0x28>
jmp    *0x807713c
push   $0x260
jmp    8049aa0 <_init+0x28>
jmp    *0x8077140
push   $0x268
jmp    8049aa0 <_init+0x28>
jmp    *0x8077144
push   $0x270
jmp    8049aa0 <_init+0x28>
jmp    *0x8077148
push   $0x278
jmp    8049aa0 <_init+0x28>
jmp    *0x807714c
push   $0x280
jmp    8049aa0 <_init+0x28>
jmp    *0x8077150
push   $0x288
jmp    8049aa0 <_init+0x28>
jmp    *0x8077154
push   $0x290
jmp    8049aa0 <_init+0x28>
jmp    *0x8077158
push   $0x298
jmp    8049aa0 <_init+0x28>
jmp    *0x807715c
push   $0x2a0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077160
push   $0x2a8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077164
push   $0x2b0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077168
push   $0x2b8
jmp    8049aa0 <_init+0x28>
jmp    *0x807716c
push   $0x2c0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077170
push   $0x2c8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077174
push   $0x2d0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077178
push   $0x2d8
jmp    8049aa0 <_init+0x28>
jmp    *0x807717c
push   $0x2e0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077180
push   $0x2e8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077184
push   $0x2f0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077188
push   $0x2f8
jmp    8049aa0 <_init+0x28>
jmp    *0x807718c
push   $0x300
jmp    8049aa0 <_init+0x28>
jmp    *0x8077190
push   $0x308
jmp    8049aa0 <_init+0x28>
jmp    *0x8077194
push   $0x310
jmp    8049aa0 <_init+0x28>
jmp    *0x8077198
push   $0x318
jmp    8049aa0 <_init+0x28>
jmp    *0x807719c
push   $0x320
jmp    8049aa0 <_init+0x28>
jmp    *0x80771a0
push   $0x328
jmp    8049aa0 <_init+0x28>
jmp    *0x80771a4
push   $0x330
jmp    8049aa0 <_init+0x28>
jmp    *0x80771a8
push   $0x338
jmp    8049aa0 <_init+0x28>
jmp    *0x80771ac
push   $0x340
jmp    8049aa0 <_init+0x28>
jmp    *0x80771b0
push   $0x348
jmp    8049aa0 <_init+0x28>
jmp    *0x80771b4
push   $0x350
jmp    8049aa0 <_init+0x28>
jmp    *0x80771b8
push   $0x358
jmp    8049aa0 <_init+0x28>
jmp    *0x80771bc
push   $0x360
jmp    8049aa0 <_init+0x28>
jmp    *0x80771c0
push   $0x368
jmp    8049aa0 <_init+0x28>
jmp    *0x80771c4
push   $0x370
jmp    8049aa0 <_init+0x28>
jmp    *0x80771c8
push   $0x378
jmp    8049aa0 <_init+0x28>
jmp    *0x80771cc
push   $0x380
jmp    8049aa0 <_init+0x28>
jmp    *0x80771d0
push   $0x388
jmp    8049aa0 <_init+0x28>
jmp    *0x80771d4
push   $0x390
jmp    8049aa0 <_init+0x28>
jmp    *0x80771d8
push   $0x398
jmp    8049aa0 <_init+0x28>
jmp    *0x80771dc
push   $0x3a0
jmp    8049aa0 <_init+0x28>
jmp    *0x80771e0
push   $0x3a8
jmp    8049aa0 <_init+0x28>
jmp    *0x80771e4
push   $0x3b0
jmp    8049aa0 <_init+0x28>
jmp    *0x80771e8
push   $0x3b8
jmp    8049aa0 <_init+0x28>
jmp    *0x80771ec
push   $0x3c0
jmp    8049aa0 <_init+0x28>
jmp    *0x80771f0
push   $0x3c8
jmp    8049aa0 <_init+0x28>
jmp    *0x80771f4
push   $0x3d0
jmp    8049aa0 <_init+0x28>
jmp    *0x80771f8
push   $0x3d8
jmp    8049aa0 <_init+0x28>
jmp    *0x80771fc
push   $0x3e0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077200
push   $0x3e8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077204
push   $0x3f0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077208
push   $0x3f8
jmp    8049aa0 <_init+0x28>
jmp    *0x807720c
push   $0x400
jmp    8049aa0 <_init+0x28>
jmp    *0x8077210
push   $0x408
jmp    8049aa0 <_init+0x28>
jmp    *0x8077214
push   $0x410
jmp    8049aa0 <_init+0x28>
jmp    *0x8077218
push   $0x418
jmp    8049aa0 <_init+0x28>
jmp    *0x807721c
push   $0x420
jmp    8049aa0 <_init+0x28>
jmp    *0x8077220
push   $0x428
jmp    8049aa0 <_init+0x28>
jmp    *0x8077224
push   $0x430
jmp    8049aa0 <_init+0x28>
jmp    *0x8077228
push   $0x438
jmp    8049aa0 <_init+0x28>
jmp    *0x807722c
push   $0x440
jmp    8049aa0 <_init+0x28>
jmp    *0x8077230
push   $0x448
jmp    8049aa0 <_init+0x28>
jmp    *0x8077234
push   $0x450
jmp    8049aa0 <_init+0x28>
jmp    *0x8077238
push   $0x458
jmp    8049aa0 <_init+0x28>
jmp    *0x807723c
push   $0x460
jmp    8049aa0 <_init+0x28>
jmp    *0x8077240
push   $0x468
jmp    8049aa0 <_init+0x28>
jmp    *0x8077244
push   $0x470
jmp    8049aa0 <_init+0x28>
jmp    *0x8077248
push   $0x478
jmp    8049aa0 <_init+0x28>
jmp    *0x807724c
push   $0x480
jmp    8049aa0 <_init+0x28>
jmp    *0x8077250
push   $0x488
jmp    8049aa0 <_init+0x28>
jmp    *0x8077254
push   $0x490
jmp    8049aa0 <_init+0x28>
jmp    *0x8077258
push   $0x498
jmp    8049aa0 <_init+0x28>
jmp    *0x807725c
push   $0x4a0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077260
push   $0x4a8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077264
push   $0x4b0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077268
push   $0x4b8
jmp    8049aa0 <_init+0x28>
jmp    *0x807726c
push   $0x4c0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077270
push   $0x4c8
jmp    8049aa0 <_init+0x28>
jmp    *0x8077274
push   $0x4d0
jmp    8049aa0 <_init+0x28>
jmp    *0x8077278
push   $0x4d8
jmp    8049aa0 <_init+0x28>
push   %ebp
mov    $0xa0,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
mov    $0x806ede0,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x300,%esp
mov    0xc(%ebp),%ebx
lea    0x80(%esp),%edi
rep movsl %ds:(%esi),%es:(%edi)
movl   $0x806e126,0x4(%esp)
movl   $0x6,(%esp)
movl   $0x1,0x60(%esp)
movl   $0x1,0x64(%esp)
call   804a1f0 <setlocale@plt>
test   %eax,%eax
je     804a4de <fchmod@plt+0x7e>
movl   $0xe,(%esp)
mov    $0x806e66b,%edi
call   804a1e0 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804a4de <fchmod@plt+0x7e>
call   804cd90 <fchmod@plt+0x2930>
movl   $0x806e671,0x4(%esp)
lea    0x80(%esp),%esi
movl   $0x806e0c8,(%esp)
call   804a2f0 <bindtextdomain@plt>
movl   $0x806e0c8,(%esp)
call   8049d60 <textdomain@plt>
mov    0x8(%ebp),%edi
movb   $0x0,0x4f(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x806ecf0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049f80 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804a802 <fchmod@plt+0x3a2>
sub    $0x24,%eax
cmp    $0x56,%eax
jbe    804a548 <fchmod@plt+0xe8>
call   8059c60 <fchmod@plt+0xf800>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    *0x806f060(,%eax,4)
orl    $0x20,0x8077414
jmp    804a50d <fchmod@plt+0xad>
orl    $0x8,0x8077414
jmp    804a50d <fchmod@plt+0xad>
orl    $0x40,0x8077414
movb   $0x0,0x4f(%esp)
jmp    804a50d <fchmod@plt+0xad>
orl    $0x100,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x4,0x8077418
jmp    804a50d <fchmod@plt+0xad>
orl    $0x800,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
mov    %eax,0x4(%esp)
mov    0x80773c8,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773c8
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
movl   $0x80772e8,0x4(%esp)
mov    %eax,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
test   %al,%al
je     804adb6 <fchmod@plt+0x956>
movb   $0x1,0x4f(%esp)
jmp    804a50d <fchmod@plt+0xad>
orl    $0x2,0x8077418
jmp    804a50d <fchmod@plt+0xad>
orl    $0x400000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
mov    %eax,0x4(%esp)
mov    0x80773d0,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773d0
jmp    804a50d <fchmod@plt+0xad>
orl    $0x200,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x10,0x8077414
jmp    804a50d <fchmod@plt+0xad>
orl    $0x1000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x80,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x10000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x4,0x8077414
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
mov    %eax,0x4(%esp)
mov    0x80773c0,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773c0
jmp    804a50d <fchmod@plt+0xad>
orl    $0x40000000,0x8077414
40
jmp    804a50d <fchmod@plt+0xad>
call   805a2e0 <fchmod@plt+0xfe80>
movl   $0x0,(%esp)
call   8049f30 <exit@plt>
orl    $0x20000000,0x8077414
20
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
movl   $0x80772e4,0x4(%esp)
mov    %eax,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
test   %al,%al
je     804a6de <fchmod@plt+0x27e>
cmpl   $0x0,0x80772e4
jg     804a50d <fchmod@plt+0xad>
mov    0x8077368,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eca8,0x4(%esp)
jmp    804adcc <fchmod@plt+0x96c>
orl    $0x8000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x1000000,0x8077414
01
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
mov    %eax,0x4(%esp)
mov    0x80773e4,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773e4
jmp    804a50d <fchmod@plt+0xad>
orl    $0x8000000,0x8077414
08
jmp    804a50d <fchmod@plt+0xad>
orl    $0x40000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x80000000,0x8077414
80
jmp    804a50d <fchmod@plt+0xad>
orl    $0x20000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
movb   $0x1,0x807747c
jmp    804a50d <fchmod@plt+0xad>
orl    $0x800000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x4000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x10000000,0x8077414
10
jmp    804a50d <fchmod@plt+0xad>
orl    $0x1,0x8077418
jmp    804a50d <fchmod@plt+0xad>
mov    0x8077368,%eax
mov    %eax,0x4(%esp)
mov    0x80773d4,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773d4
jmp    804a50d <fchmod@plt+0xad>
orl    $0x80000,0x8077414
00
jmp    804a50d <fchmod@plt+0xad>
orl    $0x2000000,0x8077414
02
jmp    804a50d <fchmod@plt+0xad>
orl    $0x8,0x8077418
jmp    804a50d <fchmod@plt+0xad>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
cmpb   $0x72,(%eax)
je     804ada7 <fchmod@plt+0x947>
mov    0x8077414,%eax
test   $0x1000000,%eax
je     804a832 <fchmod@plt+0x3d2>
and    $0xfff7ffdf,%eax
mov    %eax,0x8077414
movb   $0x1,0x807747c
movl   $0x0,(%esp)
call   8053700 <fchmod@plt+0x92a0>
cmpb   $0x0,0x807747c
jne    804a96f <fchmod@plt+0x50f>
mov    0x80773d0,%eax
mov    $0x8077414,%esi
mov    $0x4,%ecx
mov    0x80772e8,%edx
lea    0x70(%esp),%edi
movl   $0x0,0x80773d0
00
mov    %eax,0x48(%esp)
mov    0x80773d4,%eax
mov    %edx,0x34(%esp)
mov    0x80773e4,%edx
movl   $0x0,0x80773d4
00
movl   $0x0,0x80773e4
00
mov    %eax,0x44(%esp)
mov    0x80773c8,%eax
mov    %edx,0x40(%esp)
mov    0x80772e4,%edx
movl   $0x0,0x80773c8
00
mov    %eax,0x3c(%esp)
mov    %edx,0x38(%esp)
rep movsl %ds:(%esi),%es:(%edi)
call   805f1f0 <fchmod@plt+0x14d90>
cmpl   $0x0,0x48(%esp)
je     804a8de <fchmod@plt+0x47e>
mov    0x80773d0,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x48(%esp),%eax
mov    %eax,0x80773d0
cmpb   $0x0,0x4f(%esp)
je     804a8ef <fchmod@plt+0x48f>
mov    0x34(%esp),%edx
mov    %edx,0x80772e8
cmpl   $0x0,0x44(%esp)
je     804a90c <fchmod@plt+0x4ac>
mov    0x80773d4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x44(%esp),%eax
mov    %eax,0x80773d4
cmpl   $0x0,0x40(%esp)
je     804a92a <fchmod@plt+0x4ca>
mov    0x80773e4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x40(%esp),%edx
mov    %edx,0x80773e4
cmpl   $0x0,0x3c(%esp)
je     804a947 <fchmod@plt+0x4e7>
mov    0x80773c8,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,0x80773c8
cmpl   $0xffffffff,0x38(%esp)
je     804a958 <fchmod@plt+0x4f8>
mov    0x38(%esp),%edx
mov    %edx,0x80772e4
xor    %eax,%eax
mov    0x70(%esp,%eax,4),%edx
or     %edx,0x8077414(,%eax,4)
add    $0x1,%eax
cmp    $0x4,%eax
jne    804a95a <fchmod@plt+0x4fa>
jmp    804a97f <fchmod@plt+0x51f>
call   8049d40 <geteuid@plt>
test   %eax,%eax
jne    804a97f <fchmod@plt+0x51f>
orl    $0x40,0x8077414
cmpb   $0x0,0x4f(%esp)
je     804a98d <fchmod@plt+0x52d>
andl   $0xffffffbf,0x8077414
testb  $0x1,0x8077418
je     804a9a0 <fchmod@plt+0x540>
movl   $0x200000,0x80772e0
00
call   8060780 <fchmod@plt+0x16320>
cmpb   $0x0,0x807747c
jne    804a9bb <fchmod@plt+0x55b>
testb  $0x80,0x8077416
jne    804ae3e <fchmod@plt+0x9de>
testb  $0x1,0x8077417
je     804ae34 <fchmod@plt+0x9d4>
call   804f760 <fchmod@plt+0x5300>
cmpl   $0x0,0x80773ec
je     804ae16 <fchmod@plt+0x9b6>
cmpl   $0x0,0x80773e8
je     804aeef <fchmod@plt+0xa8f>
cmpl   $0x0,0x80773e4
je     804aed1 <fchmod@plt+0xa71>
mov    0x80773e4,%eax
movl   $0x1,0x8(%esp)
movl   $0x80776e0,(%esp)
mov    %eax,0x4(%esp)
call   804a260 <regcomp@plt>
test   %eax,%eax
mov    %eax,0x80777c0
jne    804ad56 <fchmod@plt+0x8f6>
mov    0x80773e4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773e4
00
testb  $0x1,0x8077417
jne    804aa4b <fchmod@plt+0x5eb>
cmpl   $0x0,0x80773c8
je     804ae4a <fchmod@plt+0x9ea>
cmpl   $0x0,0x80773f4
je     804ae9b <fchmod@plt+0xa3b>
cmpl   $0x0,0x80773f0
je     804af1c <fchmod@plt+0xabc>
cmpl   $0xffffffff,0x80772e4
je     804af0d <fchmod@plt+0xaad>
movl   $0x8077440,0x4(%esp)
movl   $0x0,(%esp)
call   804a330 <tcgetattr@plt>
call   8049d10 <initscr@plt>
test   %eax,%eax
je     804ae0a <fchmod@plt+0x9aa>
call   805ab60 <fchmod@plt+0x10700>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
call   8059910 <fchmod@plt+0xf4b0>
call   805a6d0 <fchmod@plt+0x10270>
xchg   %ax,%ax
call   8059b30 <fchmod@plt+0xf6d0>
mov    0x8077328,%eax
test   %eax,%eax
jle    804aaf2 <fchmod@plt+0x692>
mov    0x8(%ebp),%edx
sub    $0x1,%edx
cmp    %edx,%eax
jge    804aaf2 <fchmod@plt+0x692>
mov    (%ebx,%eax,4),%eax
cmpb   $0x2b,(%eax)
jne    804aaf2 <fchmod@plt+0x692>
lea    0x64(%esp),%edx
add    $0x1,%eax
mov    %edx,0x8(%esp)
lea    0x60(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066830 <fchmod@plt+0x1c3d0>
addl   $0x1,0x8077328
mov    0x8077328,%eax
cmp    %eax,0x8(%ebp)
jle    804ab1b <fchmod@plt+0x6bb>
mov    (%ebx,%eax,4),%eax
cmpb   $0x2d,(%eax)
jne    804ab1b <fchmod@plt+0x6bb>
cmpb   $0x0,0x1(%eax)
jne    804ab1b <fchmod@plt+0x6bb>
call   805ade0 <fchmod@plt+0x10980>
call   80694c0 <fchmod@plt+0x1f060>
addl   $0x1,0x8077328
mov    0x8077414,%eax
lea    0x6c(%esp),%edi
mov    0x8077328,%esi
movl   $0x1,0x68(%esp)
movl   $0x1,0x6c(%esp)
mov    %eax,%edx
or     $0x40,%ah
and    $0x4000,%edx
add    $0x1,%esi
mov    %edx,0x30(%esp)
mov    0x8(%ebp),%edx
mov    %eax,0x8077414
sub    $0x1,%edx
cmp    %esi,0x8(%ebp)
mov    %edx,0x2c(%esp)
jg     804abce <fchmod@plt+0x76e>
jmp    804ac07 <fchmod@plt+0x7a7>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8050490 <fchmod@plt+0x6030>
mov    0x68(%esp),%edx
mov    0x6c(%esp),%eax
cmp    $0x1,%edx
jg     804ab8a <fchmod@plt+0x72a>
cmp    $0x1,%eax
jle    804abc6 <fchmod@plt+0x766>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
movl   $0x1,0x68(%esp)
movl   $0x1,0x6c(%esp)
add    $0x1,%esi
cmp    0x8(%ebp),%esi
je     804ac07 <fchmod@plt+0x7a7>
cmp    %esi,0x2c(%esp)
mov    (%ebx,%esi,4),%eax
jle    804ab68 <fchmod@plt+0x708>
cmpb   $0x2b,(%eax)
jne    804ab68 <fchmod@plt+0x708>
cmpl   $0x1,0x6c(%esp)
jne    804ab68 <fchmod@plt+0x708>
cmpl   $0x1,0x68(%esp)
jne    804ab68 <fchmod@plt+0x708>
lea    0x68(%esp),%edx
add    $0x1,%eax
mov    %edi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066830 <fchmod@plt+0x1c3d0>
jmp    804abc6 <fchmod@plt+0x766>
mov    0x8077328,%eax
cmp    %eax,0x8(%ebp)
jg     804aeb9 <fchmod@plt+0xa59>
cmpl   $0x0,0x80773f8
je     804ae78 <fchmod@plt+0xa18>
cmpl   $0x0,0x30(%esp)
jne    804ac33 <fchmod@plt+0x7d3>
andl   $0xffffbfff,0x8077414
ff
mov    0x80773f8,%eax
mov    0x44(%eax),%eax
test   %eax,%eax
je     804ac4a <fchmod@plt+0x7ea>
cmpl   $0x0,0x10(%eax)
jle    804ac4a <fchmod@plt+0x7ea>
call   805b1c0 <fchmod@plt+0x10d60>
mov    0x60(%esp),%eax
cmp    $0x1,%eax
jg     804ac5a <fchmod@plt+0x7fa>
cmpl   $0x1,0x64(%esp)
jle    804ac8a <fchmod@plt+0x82a>
mov    0x64(%esp),%edx
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
call   806aac0 <fchmod@plt+0x20660>
call   804ed70 <fchmod@plt+0x4910>
jmp    804acf0 <fchmod@plt+0x890>
xchg   %ax,%ax
nop
lea    0x0(%esi,%eiz,1),%esi
call   805d5a0 <fchmod@plt+0x13140>
testb  $0x4,0x8077414
jne    804ad38 <fchmod@plt+0x8d8>
lea    0x5f(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x5d(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x5c(%esp),%eax
lea    0x5e(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x5b(%esp),%eax
movl   $0x1,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
movl   $0x1,0x80777bc
00
call   805b750 <fchmod@plt+0x112f0>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
cmpb   $0x0,0x8077430
jne    804ac98 <fchmod@plt+0x838>
movl   $0x1,0x4(%esp)
movl   $0x8077720,(%esp)
movb   $0x1,0x8077430
call   804a150 <__sigsetjmp@plt>
call   805d5a0 <fchmod@plt+0x13140>
testb  $0x4,0x8077414
je     804acb2 <fchmod@plt+0x852>
call   8066e30 <fchmod@plt+0x1c9d0>
test   %eax,%eax
jne    804acb2 <fchmod@plt+0x852>
movl   $0x1,(%esp)
call   806aae0 <fchmod@plt+0x20680>
jmp    804acb2 <fchmod@plt+0x852>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80776e0,0x4(%esp)
mov    %eax,(%esp)
call   804a070 <regerror@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0xc(%esp)
movl   $0x80776e0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x80773e0
mov    0x80777c0,%eax
mov    %eax,(%esp)
call   804a070 <regerror@plt>
jmp    804aa35 <fchmod@plt+0x5d5>
orl    $0x1000000,0x8077414
01
jmp    804a815 <fchmod@plt+0x3b5>
mov    0x8077368,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eccc,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
mov    0x8077324,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804a240 <fputc@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
movl   $0x806e683,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773ec
jmp    804a9da <fchmod@plt+0x57a>
call   804f650 <fchmod@plt+0x51f0>
jmp    804a9c8 <fchmod@plt+0x568>
xchg   %ax,%ax
call   8052e60 <fchmod@plt+0x8a00>
jmp    804a9bb <fchmod@plt+0x55b>
movl   $0x806e69f,(%esp)
call   8049ea0 <getenv@plt>
test   %eax,%eax
je     804aa4b <fchmod@plt+0x5eb>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773c8
jmp    804aa4b <fchmod@plt+0x5eb>
movl   $0x0,0x4(%esp)
movl   $0x806e126,(%esp)
call   8050490 <fchmod@plt+0x6030>
andl   $0xfffffeff,0x8077414
ff
jmp    804ac22 <fchmod@plt+0x7c2>
movl   $0x806e6a5,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773f4
jmp    804aa58 <fchmod@plt+0x5f8>
movl   $0x0,0x4(%esp)
mov    (%ebx,%eax,4),%eax
mov    %eax,(%esp)
call   8050490 <fchmod@plt+0x6030>
jmp    804ac15 <fchmod@plt+0x7b5>
movl   $0x806e68e,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773e4
jmp    804a9f4 <fchmod@plt+0x594>
movl   $0x806e687,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773e8
jmp    804a9e7 <fchmod@plt+0x587>
movl   $0x8,0x80772e4
00
jmp    804aa72 <fchmod@plt+0x612>
movl   $0x806fc88,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x1,0x8077834
00
movl   $0x1,0x8077838
00
mov    %eax,0x80773f0
jmp    804aa65 <fchmod@plt+0x605>
xchg   %ax,%ax
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x806b1a0
push   $0x806b130
push   %ecx
push   %esi
push   $0x804a470
call   8049fe0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x807730b,%eax
sub    $0x8077308,%eax
cmp    $0x6,%eax
ja     804af91 <fchmod@plt+0xb31>
repz ret
mov    $0x0,%eax
test   %eax,%eax
je     804af8f <fchmod@plt+0xb2f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8077308,(%esp)
call   *%eax
leave
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8077308,%eax
sub    $0x8077308,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804afca <fchmod@plt+0xb6a>
repz ret
mov    $0x0,%edx
test   %edx,%edx
je     804afc8 <fchmod@plt+0xb68>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8077308,(%esp)
call   *%edx
leave
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x807736c
jne    804b00c <fchmod@plt+0xbac>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804af80 <fchmod@plt+0xb20>
movb   $0x1,0x807736c
leave
repz ret
xchg   %ax,%ax
mov    0x8076f00,%eax
test   %eax,%eax
je     804b037 <fchmod@plt+0xbd7>
mov    $0x0,%eax
test   %eax,%eax
je     804b037 <fchmod@plt+0xbd7>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8076f00,(%esp)
call   *%eax
leave
jmp    804afb0 <fchmod@plt+0xb50>
jmp    804afb0 <fchmod@plt+0xb50>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
cmpl   $0xffffffff,0x8077284
je     804b508 <fchmod@plt+0x10a8>
call   8067b50 <fchmod@plt+0x1d6f0>
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x807737c,%ebx
xor    %edx,%edx
mov    0x8077378,%eax
mov    0x8077410,%ecx
div    %ebx
xor    %edx,%edx
imul   %ecx,%ebx
div    %ecx
mov    %eax,%esi
imul   %ebx,%esi
cmp    0x8077370,%esi
jae    804b4f0 <fchmod@plt+0x1090>
test   %ecx,%ecx
jle    804b4f0 <fchmod@plt+0x1090>
lea    0x0(,%esi,4),%edx
xor    %ebp,%ebp
mov    %edx,0x28(%esp)
xor    %ebx,%ebx
jmp    804b2ca <fchmod@plt+0xe6a>
lea    0x0(%esi),%esi
lea    -0x8(%edx),%ecx
cmp    %ecx,%eax
jb     804b2fd <fchmod@plt+0xe9d>
mov    $0xb,%ecx
sub    %edx,%ecx
add    %ecx,%eax
movb   $0x1,0x2f(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
cmp    0x8077378,%esi
mov    %eax,%edi
je     804b4a0 <fchmod@plt+0x1040>
mov    0x8077380,%eax
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
mov    %ebx,%eax
cmpb   $0x0,0x2f(%esp)
jne    804b408 <fchmod@plt+0xfa8>
mov    %eax,0x8(%esp)
mov    0x8077704,%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     804b169 <fchmod@plt+0xd09>
mov    0x8077704,%eax
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    %edi,(%esp)
call   8049be0 <free@plt>
mov    0x8077380,%edi
lea    0x40(%esp),%edx
mov    %edx,0x8(%esp)
add    %ebx,%edi
mov    0x28(%esp),%ebx
add    0x8077374,%ebx
mov    (%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a3b0 <__lxstat64@plt>
cmp    $0xffffffff,%eax
je     804b310 <fchmod@plt+0xeb0>
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804b310 <fchmod@plt+0xeb0>
cmp    $0x4000,%eax
jne    804b398 <fchmod@plt+0xf38>
mov    0x24(%esp),%eax
cmpb   $0x2e,(%eax)
jne    804b448 <fchmod@plt+0xfe8>
cmpb   $0x2e,0x1(%eax)
jne    804b448 <fchmod@plt+0xfe8>
cmpb   $0x0,0x2(%eax)
jne    804b448 <fchmod@plt+0xfe8>
movl   $0x5,0x8(%esp)
mov    $0xc,%ebx
movl   $0x806b1ce,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x3c(%esp)
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    %eax,%ebx
jb     804b370 <fchmod@plt+0xf10>
mov    %edi,%edx
sub    %eax,%edx
mov    0x8077704,%eax
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     804b266 <fchmod@plt+0xe06>
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
cmp    0x8077378,%esi
je     804b4c8 <fchmod@plt+0x1068>
mov    0x3c(%esp),%eax
lea    0x2(%edi),%ebx
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8077340,%eax
sub    0x8077380,%eax
cmp    %eax,%ebx
jle    804b295 <fchmod@plt+0xe35>
add    $0x1,%ebp
xor    %ebx,%ebx
mov    0x8077704,%eax
add    $0x1,%esi
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    %esi,0x8077370
jbe    804b4f0 <fchmod@plt+0x1090>
addl   $0x4,0x28(%esp)
cmp    0x8077410,%ebp
jge    804b4f0 <fchmod@plt+0x1090>
mov    0x28(%esp),%edx
mov    0x8077374,%eax
mov    (%eax,%edx,1),%eax
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077380,%edx
cmpl   $0xe,0x8077340
jg     804b0c8 <fchmod@plt+0xc68>
movb   $0x0,0x2f(%esp)
xor    %eax,%eax
jmp    804b0e1 <fchmod@plt+0xc81>
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804b343 <fchmod@plt+0xee3>
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804b448 <fchmod@plt+0xfe8>
movl   $0x806c0d2,0x4(%esp)
mov    $0x7,%ebx
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,0x3c(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    %eax,%ebx
jae    804b22b <fchmod@plt+0xdcb>
mov    0x3c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
lea    0x3c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    %ebx,%eax
jmp    804b22b <fchmod@plt+0xdcb>
nop
mov    0x8077284,%eax
mov    0x6c(%esp),%ebx
add    $0x4,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x70(%esp),%edx
mov    0x6c(%esp),%ecx
cmp    $0x0,%edx
mov    %eax,0x3c(%esp)
jl     804b494 <fchmod@plt+0x1034>
jle    804b488 <fchmod@plt+0x1028>
shr    $0x1e,%ebx
mov    $0x47,%edx
nop
mov    %ebx,0x10(%esp)
mov    $0x7,%ebx
mov    %edx,0x14(%esp)
movl   $0x806b1db,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a440 <__sprintf_chk@plt>
mov    0x3c(%esp),%eax
jmp    804b21b <fchmod@plt+0xdbb>
xchg   %ax,%ax
mov    0x8077704,%eax
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     804b43f <fchmod@plt+0xfdf>
mov    0x8077704,%eax
movl   $0xffffffff,0x8(%esp)
movl   $0x8070333,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
lea    0x3(%ebx),%eax
jmp    804b136 <fchmod@plt+0xcd6>
nop
movl   $0x5,0x8(%esp)
mov    $0x7,%ebx
movl   $0x806b1c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x3c(%esp)
jmp    804b21b <fchmod@plt+0xdbb>
lea    0x0(%esi),%esi
cmp    $0x3ff,%ecx
ja     804b520 <fchmod@plt+0x10c0>
mov    $0x20,%edx
jmp    804b3d0 <fchmod@plt+0xf70>
xchg   %ax,%ax
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
jmp    804b10b <fchmod@plt+0xcab>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
jmp    804b272 <fchmod@plt+0xe12>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,(%esp)
call   8066210 <fchmod@plt+0x1bdb0>
mov    %eax,0x8077284
jmp    804b057 <fchmod@plt+0xbf7>
xchg   %ax,%ax
test   %edx,%edx
js     804b550 <fchmod@plt+0x10f0>
cmp    $0xfffff,%ecx
jbe    804b550 <fchmod@plt+0x10f0>
cmp    $0x0,%edx
jg     804b3c7 <fchmod@plt+0xf67>
jl     804b543 <fchmod@plt+0x10e3>
cmp    $0x3fffffff,%ecx
ja     804b3c7 <fchmod@plt+0xf67>
shr    $0x14,%ebx
mov    $0x4d,%edx
jmp    804b3d0 <fchmod@plt+0xf70>
shr    $0xa,%ebx
mov    $0x4b,%edx
jmp    804b3d0 <fchmod@plt+0xf70>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%esi
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
movl   $0x0,0x8077380
00
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804a2b0 <readdir64@plt>
test   %eax,%eax
je     804b5d0 <fchmod@plt+0x1170>
cmpb   $0x2e,0x13(%eax)
je     804b758 <fchmod@plt+0x12f8>
add    $0x13,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    0x8077380,%eax
jbe    804b5c1 <fchmod@plt+0x1161>
mov    0x8077340,%edx
cmp    %edx,%eax
cmova  %edx,%eax
mov    %eax,0x8077380
mov    %esi,(%esp)
add    $0x1,%ebx
call   804a2b0 <readdir64@plt>
test   %eax,%eax
jne    804b594 <fchmod@plt+0x1134>
mov    %esi,(%esp)
call   804a450 <rewinddir@plt>
mov    0x8077374,%eax
addl   $0xa,0x8077380
test   %eax,%eax
je     804b5fa <fchmod@plt+0x119a>
mov    0x8077370,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050c40 <fchmod@plt+0x67e0>
mov    %ebx,0x8077370
shl    $0x2,%ebx
add    $0x1,%ebp
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8066570 <fchmod@plt+0x1c110>
mov    %ebp,0x2c(%esp)
mov    %eax,0x8077374
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a2b0 <readdir64@plt>
test   %eax,%eax
je     804b6a4 <fchmod@plt+0x1244>
cmp    %ebx,0x8077370
jbe    804b6a4 <fchmod@plt+0x1244>
cmpb   $0x2e,0x13(%eax)
je     804b748 <fchmod@plt+0x12e8>
mov    0x8077374,%edx
lea    0x13(%eax),%edi
mov    %edi,(%esp)
lea    (%edx,%ebx,4),%ebp
call   8049fc0 <strlen@plt>
add    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x0(%ebp)
mov    0x50(%esp),%eax
mov    %edi,0x14(%esp)
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x8077374,%eax
movl   $0x1,0x4(%esp)
mov    (%eax,%ebx,4),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   804a440 <__sprintf_chk@plt>
mov    %esi,(%esp)
call   804a2b0 <readdir64@plt>
test   %eax,%eax
jne    804b62c <fchmod@plt+0x11cc>
mov    %esi,(%esp)
mov    %ebx,0x8077370
call   804a3e0 <closedir@plt>
mov    0x8077380,%ebx
cmp    $0xe,%ebx
jg     804b6cc <fchmod@plt+0x126c>
movl   $0xf,0x8077380
00
mov    $0xf,%ebx
mov    0x8077340,%eax
cmp    %ebx,%eax
jge    804b6dc <fchmod@plt+0x127c>
mov    %eax,0x8077380
mov    %eax,%ebx
mov    0x8077370,%esi
test   %esi,%esi
je     804b739 <fchmod@plt+0x12d9>
mov    0x8077410,%edi
test   %edi,%edi
jle    804b739 <fchmod@plt+0x12d9>
sub    %ebx,%eax
xor    %ebp,%ebp
mov    %eax,0x28(%esp)
xor    %edx,%edx
xor    %ecx,%ecx
movl   $0x0,0x2c(%esp)
xor    %eax,%eax
xchg   %ax,%ax
add    $0x1,%edx
lea    0x2(%eax,%ebx,1),%eax
cmp    %eax,0x28(%esp)
jge    804b724 <fchmod@plt+0x12c4>
add    $0x1,%ecx
test   %ebp,%ebp
jne    804b722 <fchmod@plt+0x12c2>
mov    %edx,0x2c(%esp)
mov    %edx,%ebp
xor    %eax,%eax
cmp    %esi,%edx
je     804b72c <fchmod@plt+0x12cc>
cmp    %edi,%ecx
jl     804b708 <fchmod@plt+0x12a8>
mov    0x2c(%esp),%eax
test   %ebp,%ebp
mov    %eax,0x807737c
jne    804b73f <fchmod@plt+0x12df>
mov    %ebx,0x807737c
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0x0,0x14(%eax)
je     804b620 <fchmod@plt+0x11c0>
jmp    804b63e <fchmod@plt+0x11de>
nop
cmpb   $0x0,0x14(%eax)
je     804b588 <fchmod@plt+0x1128>
jmp    804b59e <fchmod@plt+0x113e>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x18(%esp)
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x400,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
cmpb   $0x0,(%esi)
jne    804b7ae <fchmod@plt+0x134e>
mov    (%ebx),%eax
sub    $0x20,%eax
cmp    $0x57,%eax
jbe    804b7c0 <fchmod@plt+0x1360>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
jmp    *0x806b2b8(,%eax,4)
nop
movl   $0x0,0x4(%esp)
movl   $0xa,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
movl   $0x0,0x4(%esp)
movl   $0x11,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
movl   $0x0,0x4(%esp)
movl   $0x7,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
movl   $0x0,0x4(%esp)
movl   $0x12,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
movl   $0x0,0x4(%esp)
movl   $0x9,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0xb,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0xc,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,(%ebx)
jmp    804b7ae <fchmod@plt+0x134e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8077370,%esi
mov    0x30(%esp),%edi
test   %esi,%esi
je     804b8e0 <fchmod@plt+0x1480>
mov    0x8077374,%ebp
xor    %ebx,%ebx
jmp    804b8b7 <fchmod@plt+0x1457>
nop
add    $0x1,%ebx
cmp    %esi,%ebx
je     804b8e0 <fchmod@plt+0x1480>
mov    %edi,0x4(%esp)
mov    0x0(%ebp,%ebx,4),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    804b8b0 <fchmod@plt+0x1450>
mov    %ebx,0x8077378
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8077384,%eax
movl   $0x0,0x4c(%esp)
test   %eax,%eax
je     804bc90 <fchmod@plt+0x1830>
call   805f740 <fchmod@plt+0x152e0>
mov    0x8077428,%ecx
cmpb   $0x0,(%ecx)
je     804bb28 <fchmod@plt+0x16c8>
mov    0x8077340,%ebx
mov    $0x55555556,%edi
mov    %ecx,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,%eax
imul   %edi
sar    $0x1f,%ebx
sub    %ebx,%edx
mov    %edx,0x8(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %eax,(%esp)
mov    %eax,%esi
call   8049fc0 <strlen@plt>
add    $0x7,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%ecx
mov    %esi,0x10(%esp)
movl   $0x806b1e4,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
mov    %ecx,%eax
imul   %edi
mov    $0x8070333,%eax
sar    $0x1f,%ecx
mov    $0x806e126,%edi
sub    %ecx,%edx
cmp    %edx,%ebp
mov    $0x806e126,%edx
cmovbe %edx,%eax
mov    %eax,0x14(%esp)
call   804a440 <__sprintf_chk@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x8077414,%edx
test   $0x20,%dh
jne    804bb52 <fchmod@plt+0x16f2>
test   $0x4,%dh
mov    $0x806e126,%esi
jne    804bb84 <fchmod@plt+0x1724>
and    $0x2,%edx
mov    $0x806e126,%ebp
jne    804bbb6 <fchmod@plt+0x1756>
movl   $0x5,0x8(%esp)
movl   $0x806b215,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x30(%esp)
lea    0x4b(%esp),%edi
mov    %esi,0x2c(%esp)
lea    0x4a(%esp),%esi
mov    %ebx,0x38(%esp)
movl   $0x806e126,0x34(%esp)
mov    %ebp,0x28(%esp)
mov    %eax,0x24(%esp)
mov    0x8077384,%eax
movl   $0x806b21c,0x20(%esp)
movl   $0x804b040,0x1c(%esp)
movl   $0x80773b0,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x800,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
mov    %ebx,(%esp)
mov    %eax,0x4c(%esp)
call   8049be0 <free@plt>
mov    0x8077384,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x4c(%esp),%eax
movl   $0x0,0x8077384
00
cmp    $0xffffffff,%eax
je     804bc4e <fchmod@plt+0x17ee>
cmp    $0x0,%eax
jl     804bc40 <fchmod@plt+0x17e0>
jne    804bac2 <fchmod@plt+0x1662>
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
je     804bc4e <fchmod@plt+0x17ee>
lea    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x400,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
mov    0x4c(%esp),%edx
cmp    $0xfffffffe,%edx
sete   %cl
test   %edx,%edx
je     804baf4 <fchmod@plt+0x1694>
test   %cl,%cl
je     804bbe0 <fchmod@plt+0x1780>
xor    %ebx,%ebx
testb  $0x4,0x8077415
je     804bb1d <fchmod@plt+0x16bd>
mov    0x8077428,%eax
test   %cl,%cl
cmove  0x80773d8,%eax
mov    %eax,(%esp)
call   805f530 <fchmod@plt+0x150d0>
test   %al,%al
je     804bc80 <fchmod@plt+0x1820>
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x806e126,0x4(%esp)
mov    $0x806e126,%edi
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x8077414,%edx
test   $0x20,%dh
mov    %eax,%ebx
je     804b9d8 <fchmod@plt+0x1578>
movl   $0x5,0x8(%esp)
mov    $0x806e126,%esi
movl   $0x806b1ec,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x8077414,%edx
test   $0x4,%dh
mov    %eax,%edi
je     804b9e6 <fchmod@plt+0x1586>
movl   $0x5,0x8(%esp)
mov    $0x806e126,%ebp
movl   $0x806b1f9,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x8077414,%edx
and    $0x2,%edx
mov    %eax,%esi
je     804b9f4 <fchmod@plt+0x1594>
movl   $0x5,0x8(%esp)
movl   $0x806b203,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ebp
jmp    804b9f4 <fchmod@plt+0x1594>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     804bc80 <fchmod@plt+0x1820>
movzwl 0x10(%eax),%eax
cmp    $0x1,%ax
je     804bcb0 <fchmod@plt+0x1850>
cmp    $0x2,%ax
je     804bcc0 <fchmod@plt+0x1860>
cmp    $0x3,%ax
jne    804bc80 <fchmod@plt+0x1820>
xorl   $0x400,0x8077414
00
mov    0x80773d8,%eax
mov    $0x1,%ebx
mov    %eax,0x4(%esp)
mov    0x8077384,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077384
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8077428,%eax
cmpb   $0x0,(%eax)
jne    804bac2 <fchmod@plt+0x1662>
movl   $0x5,0x8(%esp)
mov    $0xffffffff,%ebx
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    804bb1d <fchmod@plt+0x16bd>
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077384
jmp    804b90c <fchmod@plt+0x14ac>
xchg   %ax,%ax
xorl   $0x2,0x8077414
jmp    804bc10 <fchmod@plt+0x17b0>
lea    0x0(%esi,%eiz,1),%esi
xorl   $0x2000,0x8077414
00
jmp    804bc10 <fchmod@plt+0x17b0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8077378,%ebx
mov    0x8077374,%eax
movzbl 0x40(%esp),%edx
mov    0x44(%esp),%esi
mov    0x48(%esp),%edi
mov    (%eax,%ebx,4),%eax
mov    %dl,0x1f(%esp)
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
testb  $0x20,0x8077415
mov    %eax,%ebp
je     804bd13 <fchmod@plt+0x18b3>
mov    %ebp,(%esp)
call   8049fc0 <strlen@plt>
add    %ebp,%eax
movzbl 0x1f(%esp),%edx
xor    $0x1,%edx
mov    %dl,0x1f(%esp)
nop
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   80663a0 <fchmod@plt+0x1bf40>
test   %eax,%eax
je     804bd47 <fchmod@plt+0x18e7>
cmp    %esi,%ebx
jne    804be48 <fchmod@plt+0x19e8>
cmpb   $0x0,0x1f(%esp)
jne    804be48 <fchmod@plt+0x19e8>
cmpb   $0x0,0x8077388
jne    804be30 <fchmod@plt+0x19d0>
testb  $0x20,0x8077415
je     804bd98 <fchmod@plt+0x1938>
test   %ebx,%ebx
je     804bdc0 <fchmod@plt+0x1960>
sub    $0x1,%ebx
lea    0x0(,%ebx,4),%eax
cmp    %esi,%ebx
je     804bdb2 <fchmod@plt+0x1952>
mov    0x8077374,%edx
mov    (%edx,%eax,1),%eax
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
testb  $0x20,0x8077415
mov    %eax,%ebp
je     804bd20 <fchmod@plt+0x18c0>
mov    %ebp,(%esp)
call   8049fc0 <strlen@plt>
add    %ebp,%eax
jmp    804bd20 <fchmod@plt+0x18c0>
nop
mov    0x8077370,%eax
sub    $0x1,%eax
cmp    %eax,%ebx
jae    804be00 <fchmod@plt+0x19a0>
add    $0x1,%ebx
cmp    %esi,%ebx
lea    0x0(,%ebx,4),%eax
jne    804bd6f <fchmod@plt+0x190f>
movb   $0x1,0x8077388
jmp    804bd6f <fchmod@plt+0x190f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    0x8077370,%ebx
movl   $0x806b233,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
sub    $0x1,%ebx
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
lea    0x0(,%ebx,4),%eax
jmp    804bd6b <fchmod@plt+0x190b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x806b233,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
xor    %eax,%eax
jmp    804bd6b <fchmod@plt+0x190b>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   805f650 <fchmod@plt+0x151f0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x8077378
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x8077388
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x400,(%esp)
movl   $0x400,0x80777bc
00
call   8068380 <fchmod@plt+0x1df20>
add    $0x1c,%esp
jmp    805f620 <fchmod@plt+0x151c0>
jmp    804bea0 <fchmod@plt+0x1a40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x8077378,%ebx
call   804b8f0 <fchmod@plt+0x1490>
cmp    $0xffffffff,%eax
je     804bf13 <fchmod@plt+0x1ab3>
cmp    $0x1,%eax
je     804bea4 <fchmod@plt+0x1a44>
test   %eax,%eax
jne    804bfa8 <fchmod@plt+0x1b48>
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
je     804bf20 <fchmod@plt+0x1ac0>
mov    %eax,0x4(%esp)
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077428
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
jne    804bf3c <fchmod@plt+0x1adc>
mov    0x80773d8,%eax
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x0,0x8077388
mov    %eax,0x8(%esp)
call   804bcd0 <fchmod@plt+0x1870>
cmp    %ebx,0x8077378
je     804bf50 <fchmod@plt+0x1af0>
add    $0x18,%esp
pop    %ebx
jmp    804be70 <fchmod@plt+0x1a10>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077428,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773d8
cmpb   $0x0,(%eax)
je     804beeb <fchmod@plt+0x1a8b>
mov    %eax,0x4(%esp)
movl   $0x80773b0,(%esp)
call   80608b0 <fchmod@plt+0x16450>
jmp    804beeb <fchmod@plt+0x1a8b>
xchg   %ax,%ax
test   %al,%al
je     804bf13 <fchmod@plt+0x1ab3>
mov    0x80773d8,%eax
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804bcd0 <fchmod@plt+0x1870>
cmp    0x8077378,%ebx
jne    804bf13 <fchmod@plt+0x1ab3>
test   %al,%al
jne    804bf13 <fchmod@plt+0x1ab3>
movl   $0x5,0x8(%esp)
movl   $0x806b242,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    804bf13 <fchmod@plt+0x1ab3>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x8077378,%ebx
call   805f740 <fchmod@plt+0x152e0>
mov    0x8077428,%eax
cmpb   $0x0,(%eax)
je     804c018 <fchmod@plt+0x1bb8>
testb  $0x4,0x8077415
je     804bfe2 <fchmod@plt+0x1b82>
mov    %eax,(%esp)
call   805f530 <fchmod@plt+0x150d0>
test   %al,%al
je     804c0a0 <fchmod@plt+0x1c40>
mov    0x80773d8,%eax
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x0,0x8077388
mov    %eax,0x8(%esp)
call   804bcd0 <fchmod@plt+0x1870>
cmp    %ebx,0x8077378
je     804c048 <fchmod@plt+0x1be8>
add    $0x18,%esp
pop    %ebx
jmp    804be70 <fchmod@plt+0x1a10>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b25e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x18,%esp
pop    %ebx
jmp    804be70 <fchmod@plt+0x1a10>
lea    0x0(%esi),%esi
test   %al,%al
je     804c00a <fchmod@plt+0x1baa>
mov    0x80773d8,%eax
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804bcd0 <fchmod@plt+0x1870>
cmp    0x8077378,%ebx
jne    804c00a <fchmod@plt+0x1baa>
test   %al,%al
jne    804c00a <fchmod@plt+0x1baa>
movl   $0x5,0x8(%esp)
movl   $0x806b242,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    804c00a <fchmod@plt+0x1baa>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x0,0x8077378
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077370,%eax
sub    $0x1,%eax
mov    %eax,0x8077378
ret
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
call   804a200 <strrchr@plt>
test   %eax,%eax
je     804c118 <fchmod@plt+0x1cb8>
sub    %ebx,%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x1c(%esp),%ebx
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0x8077414,%eax
movl   $0x0,(%esp)
mov    0xf0(%esp),%ebx
lea    0x63(%esp),%esi
lea    0x62(%esp),%ebp
lea    0x64(%esp),%edi
and    $0x4,%eax
mov    %eax,0x4c(%esp)
call   804a380 <curs_set@plt>
call   8067ba0 <fchmod@plt+0x1d740>
movl   $0x400,(%esp)
movl   $0x400,0x80777bc
00
call   8068380 <fchmod@plt+0x1df20>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
andl   $0xfffffffb,0x8077414
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x0,0x44(%esp)
movl   $0x0,0x5c(%esp)
mov    %eax,0x58(%esp)
mov    %ebx,(%esp)
movl   $0xffffffff,0x64(%esp)
call   804f320 <fchmod@plt+0x4ec0>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80669c0 <fchmod@plt+0x1c560>
mov    %eax,0x48(%esp)
mov    0xf4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804b560 <fchmod@plt+0x1100>
mov    0x8077370,%eax
movl   $0x804eb40,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077374,%eax
mov    %eax,(%esp)
call   804a2c0 <qsort@plt>
mov    0x44(%esp),%ecx
test   %ecx,%ecx
je     804c818 <fchmod@plt+0x23b8>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804b890 <fchmod@plt+0x1430>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x48(%esp),%eax
mov    $0xffffffff,%ebx
mov    %eax,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
movl   $0x0,0x44(%esp)
xchg   %ax,%ax
mov    0x8077378,%ecx
xor    %edx,%edx
mov    %ecx,%eax
divl   0x807737c
cmpl   $0xffffffff,0x64(%esp)
mov    %eax,0x40(%esp)
je     804c267 <fchmod@plt+0x1e07>
cmp    %ecx,%ebx
je     804c272 <fchmod@plt+0x1e12>
call   804b040 <fchmod@plt+0xbe0>
mov    0x8077378,%ebx
mov    0x8077704,%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
cmp    $0x199,%eax
mov    %eax,0x64(%esp)
je     804c3f0 <fchmod@plt+0x1f90>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804b770 <fchmod@plt+0x1310>
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x400,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     804c248 <fchmod@plt+0x1de8>
mov    %eax,(%esp)
call   8056590 <fchmod@plt+0xc130>
test   %eax,%eax
je     804c370 <fchmod@plt+0x1f10>
movzwl (%eax),%eax
cmp    $0x8,%ax
je     804c520 <fchmod@plt+0x20c0>
cmp    $0x9,%ax
je     804c530 <fchmod@plt+0x20d0>
cmp    $0xa,%ax
je     804c5a8 <fchmod@plt+0x2148>
cmp    $0x3e,%ax
je     804c5d0 <fchmod@plt+0x2170>
cmp    $0xb,%ax
je     804c4f0 <fchmod@plt+0x2090>
cmp    $0xc,%ax
je     804c568 <fchmod@plt+0x2108>
cmp    $0x5,%ax
je     804c548 <fchmod@plt+0x20e8>
cmp    $0x6,%ax
je     804c5e0 <fchmod@plt+0x2180>
cmp    $0x7,%ax
je     804c638 <fchmod@plt+0x21d8>
cmp    $0xd,%ax
je     804c600 <fchmod@plt+0x21a0>
cmp    $0xe,%ax
je     804c618 <fchmod@plt+0x21b8>
cmp    $0xf,%ax
je     804c7f0 <fchmod@plt+0x2390>
cmp    $0x10,%ax
je     804c827 <fchmod@plt+0x23c7>
cmp    $0x11,%ax
je     804c84a <fchmod@plt+0x23ea>
cmp    $0x12,%ax
jne    804c248 <fchmod@plt+0x1de8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
call   806a7c0 <fchmod@plt+0x20360>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
mov    0x4c(%esp),%edx
test   %edx,%edx
je     804c39c <fchmod@plt+0x1f3c>
orl    $0x4,0x8077414
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8077370,%eax
mov    %eax,0x4(%esp)
mov    0x8077374,%eax
mov    %eax,(%esp)
call   8050c40 <fchmod@plt+0x67e0>
mov    0x5c(%esp),%eax
movl   $0x0,0x8077374
00
movl   $0x0,0x8077370
00
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x6c(%esp),%edx
lea    0x68(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8067810 <fchmod@plt+0x1d3b0>
test   %eax,%eax
jne    804c296 <fchmod@plt+0x1e36>
lea    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
lea    0x68(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a210 <wmouse_trafo@plt>
test   %al,%al
je     804c296 <fchmod@plt+0x1e36>
mov    0x8077380,%edx
mov    0x68(%esp),%eax
mov    0x807737c,%ecx
imul   0x6c(%esp),%ecx
add    $0x2,%edx
mov    %edx,0x54(%esp)
mov    %eax,%edx
sar    $0x1f,%edx
idivl  0x54(%esp)
xor    %edx,%edx
add    %eax,%ecx
mov    0x40(%esp),%eax
divl   0x8077410
mov    0x8077410,%edx
imul   0x807737c,%edx
imul   %edx,%eax
add    %eax,%ecx
mov    0x807737c,%eax
imul   0x54(%esp),%eax
cmp    %eax,0x68(%esp)
jle    804c499 <fchmod@plt+0x2039>
sub    $0x1,%ecx
mov    0x8077370,%eax
mov    %ecx,0x8077378
sub    $0x1,%eax
cmp    %ecx,%eax
jae    804c4b2 <fchmod@plt+0x2052>
mov    %eax,0x8077378
mov    %eax,%ecx
cmp    %ecx,%ebx
jne    804c296 <fchmod@plt+0x1e36>
movl   $0x0,0x4(%esp)
movl   $0x11,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1caa0>
jmp    804c296 <fchmod@plt+0x1e36>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077410,%ecx
xor    %edx,%edx
mov    0x40(%esp),%eax
div    %ecx
mov    0x8077378,%eax
add    %ecx,%edx
imul   0x807737c,%edx
cmp    %eax,%edx
ja     804c553 <fchmod@plt+0x20f3>
sub    %edx,%eax
mov    %eax,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi,%eiz,1),%esi
call   806aa70 <fchmod@plt+0x20610>
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
call   8057db0 <fchmod@plt+0xd950>
movl   $0x0,(%esp)
call   804a380 <curs_set@plt>
jmp    804c248 <fchmod@plt+0x1de8>
xchg   %ax,%ax
cmpb   $0x0,0x62(%esp)
je     804c248 <fchmod@plt+0x1de8>
movl   $0x0,0x8077378
00
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
mov    0x8077410,%ecx
xor    %edx,%edx
mov    0x40(%esp),%eax
div    %ecx
mov    %ecx,%eax
sub    %edx,%eax
mov    0x8077370,%edx
imul   0x807737c,%eax
add    0x8077378,%eax
sub    $0x1,%edx
cmp    %edx,%eax
mov    %eax,0x8077378
jbe    804c248 <fchmod@plt+0x1de8>
mov    %edx,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
call   804bea0 <fchmod@plt+0x1a40>
movl   $0x0,(%esp)
call   804a380 <curs_set@plt>
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
call   804bfb0 <fchmod@plt+0x1b50>
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
cmpb   $0x0,0x62(%esp)
je     804c248 <fchmod@plt+0x1de8>
mov    0x8077370,%eax
sub    $0x1,%eax
mov    %eax,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
mov    0x807737c,%eax
mov    0x8077378,%edx
cmp    %edx,%eax
ja     804c248 <fchmod@plt+0x1de8>
sub    %eax,%edx
jmp    804c59d <fchmod@plt+0x213d>
nop
mov    0x8077378,%eax
test   %eax,%eax
je     804c248 <fchmod@plt+0x1de8>
sub    $0x1,%eax
mov    %eax,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
mov    0x58(%esp),%eax
movl   $0x806b278,0x20(%esp)
movl   $0x804b040,0x1c(%esp)
movl   $0x0,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1000,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
movl   $0x0,(%esp)
mov    %eax,0x38(%esp)
call   804a380 <curs_set@plt>
movl   $0x400,(%esp)
movl   $0x400,0x80777bc
00
call   8068380 <fchmod@plt+0x1df20>
mov    0x38(%esp),%edx
test   %edx,%edx
js     804c972 <fchmod@plt+0x2512>
mov    0x80773d8,%eax
cmpb   $0xa,(%eax)
je     804c972 <fchmod@plt+0x2512>
test   %edx,%edx
jne    804c8a5 <fchmod@plt+0x2445>
mov    0x58(%esp),%eax
movl   $0x806e126,0x4(%esp)
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x58(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   80662e0 <fchmod@plt+0x1be80>
movl   $0x80773d8,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
cmpb   $0x2f,(%eax)
mov    %eax,0x50(%esp)
je     804c787 <fchmod@plt+0x2327>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%edx
mov    0x80773d8,%eax
mov    %edx,0x38(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x38(%esp),%edx
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x50(%esp)
mov    0x80773d8,%eax
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a440 <__sprintf_chk@plt>
mov    0x50(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
je     804c9b3 <fchmod@plt+0x2553>
mov    0x80773d0,%edx
movl   $0x5,0x8(%esp)
movl   $0x806b418,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049c80 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi),%esi
mov    0x8077370,%edx
mov    0x807737c,%eax
add    0x8077378,%eax
sub    $0x1,%edx
cmp    %edx,%eax
ja     804c248 <fchmod@plt+0x1de8>
mov    %eax,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
xchg   %ax,%ax
movl   $0x0,0x8077378
00
jmp    804c22d <fchmod@plt+0x1dcd>
mov    0x8077370,%edx
mov    0x8077378,%eax
sub    $0x1,%edx
cmp    %eax,%edx
jbe    804c248 <fchmod@plt+0x1de8>
add    $0x1,%eax
mov    %eax,0x8077378
jmp    804c248 <fchmod@plt+0x1de8>
mov    0x8077374,%eax
mov    0x8077378,%edx
mov    (%eax,%edx,4),%eax
cmpb   $0x2f,(%eax)
jne    804c8ef <fchmod@plt+0x248f>
cmpb   $0x2e,0x1(%eax)
jne    804c8ef <fchmod@plt+0x248f>
cmpb   $0x2e,0x2(%eax)
jne    804c8ef <fchmod@plt+0x248f>
cmpb   $0x0,0x3(%eax)
jne    804c8ef <fchmod@plt+0x248f>
movl   $0x5,0x8(%esp)
movl   $0x806b29d,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804c248 <fchmod@plt+0x1de8>
movl   $0x0,0x4(%esp)
movl   $0x37,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1caa0>
mov    0x80773d8,%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x58(%esp)
jmp    804c248 <fchmod@plt+0x1de8>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
jne    804c9e3 <fchmod@plt+0x2583>
mov    0x8077374,%eax
mov    0x8077378,%edx
lea    (%eax,%edx,4),%ecx
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ecx),%eax
movl   $0x3,(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
mov    0x3c(%esp),%ecx
cmp    $0xffffffff,%eax
je     804cb19 <fchmod@plt+0x26b9>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ca23 <fchmod@plt+0x25c3>
mov    (%ecx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x5c(%esp)
jmp    804c370 <fchmod@plt+0x1f10>
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x58(%esp),%eax
movl   $0x806e126,0x4(%esp)
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x58(%esp)
jmp    804c248 <fchmod@plt+0x1de8>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a400 <opendir@plt>
test   %eax,%eax
je     804cab2 <fchmod@plt+0x2652>
mov    %eax,0xf4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x50(%esp),%ebx
jmp    804c1ac <fchmod@plt+0x1d4c>
mov    0x80773d0,%edx
movl   $0x5,0x8(%esp)
movl   $0x806b418,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049c80 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804c248 <fchmod@plt+0x1de8>
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
cmpb   $0x2e,(%eax)
jne    804ca68 <fchmod@plt+0x2608>
cmpb   $0x2e,0x1(%eax)
jne    804ca68 <fchmod@plt+0x2608>
cmpb   $0x0,0x2(%eax)
jne    804ca68 <fchmod@plt+0x2608>
mov    0x8077378,%edx
mov    0x8077374,%eax
mov    (%eax,%edx,4),%eax
mov    %eax,(%esp)
call   804c0d0 <fchmod@plt+0x1c70>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x44(%esp)
mov    0x8077374,%eax
mov    0x8077378,%edx
mov    (%eax,%edx,4),%eax
mov    %eax,(%esp)
call   804a400 <opendir@plt>
test   %eax,%eax
je     804cb74 <fchmod@plt+0x2714>
mov    %eax,0xf4(%esp)
mov    0x8077378,%edx
mov    0x8077374,%eax
mov    (%eax,%edx,4),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%ebx
jmp    804c1ac <fchmod@plt+0x1d4c>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
mov    0x80773d8,%edx
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
mov    %eax,0x3c(%esp)
call   8049c80 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    804c248 <fchmod@plt+0x1de8>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
mov    0x3c(%esp),%ecx
mov    (%ecx),%ecx
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049c80 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    0x3c(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804c248 <fchmod@plt+0x1de8>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
mov    0x8077378,%edx
mov    %eax,%ecx
mov    0x8077374,%eax
mov    (%eax,%edx,4),%edx
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
mov    %ecx,0x3c(%esp)
call   8049c80 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804c248 <fchmod@plt+0x1de8>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x88,%esp
mov    0x90(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
mov    %ebx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x1c(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804cc2b <fchmod@plt+0x27cb>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ccb6 <fchmod@plt+0x2856>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804c0d0 <fchmod@plt+0x1c70>
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80669c0 <fchmod@plt+0x1c560>
mov    %ebx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x1c(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804cc74 <fchmod@plt+0x2814>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ccb6 <fchmod@plt+0x2856>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x1001,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x1001,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049fa0 <getcwd@plt>
xor    %edx,%edx
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804ccba <fchmod@plt+0x285a>
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    0x1c(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
jne    804cd00 <fchmod@plt+0x28a0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804cd1d <fchmod@plt+0x28bd>
mov    %eax,(%esp)
call   804a400 <opendir@plt>
test   %eax,%eax
je     804cd26 <fchmod@plt+0x28c6>
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804c120 <fchmod@plt+0x1cc0>
add    $0x88,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x80773d0,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jne    804ccd6 <fchmod@plt+0x2876>
call   8049ee0 <beep@plt>
xor    %eax,%eax
jmp    804ccf2 <fchmod@plt+0x2892>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804cd1d <fchmod@plt+0x28bd>
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    804cd1d <fchmod@plt+0x28bd>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a430 <mbtowc@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049b10 <wctomb@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x807738c
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x807738c,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl %al,%edx
cmp    %edx,%eax
sete   %al
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
jne    804cdf0 <fchmod@plt+0x2990>
call   804a420 <__ctype_b_loc@plt>
mov    0x30(%esp),%ecx
movzbl (%ecx),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
add    $0x2c,%esp
shr    $0x3,%ax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    0x30(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804ce28 <fchmod@plt+0x29c8>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a050 <iswalnum@plt>
test   %eax,%eax
setne  %al
add    $0x2c,%esp
ret
xchg   %ax,%ax
call   804cd40 <fchmod@plt+0x28e0>
mov    $0xfffd,%eax
movl   $0xfffd,0x1c(%esp)
jmp    804ce15 <fchmod@plt+0x29b5>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
jne    804ce68 <fchmod@plt+0x2a08>
call   804a420 <__ctype_b_loc@plt>
mov    0x30(%esp),%ecx
movzbl (%ecx),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
add    $0x2c,%esp
and    $0x1,%eax
ret
lea    0x0(%esi),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    0x30(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804cea0 <fchmod@plt+0x2a40>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a120 <iswblank@plt>
test   %eax,%eax
setne  %al
add    $0x2c,%esp
ret
xchg   %ax,%ax
call   804cd40 <fchmod@plt+0x28e0>
mov    $0xfffd,%eax
movl   $0xfffd,0x1c(%esp)
jmp    804ce8d <fchmod@plt+0x2a2d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
cmpl   $0x1f,0x4(%esp)
setbe  %al
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0x1,%eax
lea    0x80(%edx),%ecx
cmp    $0x1f,%ecx
jbe    804cef2 <fchmod@plt+0x2a92>
cmp    $0x1f,%edx
jbe    804cef2 <fchmod@plt+0x2a92>
sub    $0x7f,%edx
cmp    $0x20,%edx
setbe  %al
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%edx
lea    -0x7f(%edx),%eax
cmp    $0x20,%eax
setbe  %al
cmp    $0x1f,%edx
setbe  %dl
or     %edx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
jne    804cf48 <fchmod@plt+0x2ae8>
mov    0x30(%esp),%eax
movzbl (%eax),%edx
mov    $0x1,%eax
cmp    $0x1f,%edx
ja     804cf88 <fchmod@plt+0x2b28>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804cf98 <fchmod@plt+0x2b38>
mov    0x1c(%esp),%edx
lea    -0x7f(%edx),%eax
cmp    $0x20,%eax
setbe  %al
cmp    $0x1f,%edx
setbe  %dl
add    $0x2c,%esp
or     %edx,%eax
ret
lea    0x0(%esi),%esi
sub    $0x7f,%edx
cmp    $0x20,%edx
setbe  %al
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
call   804cd40 <fchmod@plt+0x28e0>
xor    %eax,%eax
jmp    804cf3d <fchmod@plt+0x2add>
jmp    804cfb0 <fchmod@plt+0x2b50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
jne    804cfe0 <fchmod@plt+0x2b80>
call   804a420 <__ctype_b_loc@plt>
mov    0x30(%esp),%ecx
movzbl (%ecx),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
add    $0x2c,%esp
shr    $0x2,%ax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    0x30(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804d018 <fchmod@plt+0x2bb8>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049b60 <iswpunct@plt>
test   %eax,%eax
setne  %al
add    $0x2c,%esp
ret
xchg   %ax,%ax
call   804cd40 <fchmod@plt+0x28e0>
mov    $0xfffd,%eax
movl   $0xfffd,0x1c(%esp)
jmp    804d005 <fchmod@plt+0x2ba5>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x20(%esp),%ebx
mov    %esi,0x18(%esp)
mov    0x24(%esp),%esi
mov    %ebx,(%esp)
call   804cdc0 <fchmod@plt+0x2960>
test   %al,%al
jne    804d080 <fchmod@plt+0x2c20>
mov    %esi,%edx
test   %dl,%dl
jne    804d068 <fchmod@plt+0x2c08>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x20(%esp)
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
jmp    804cfb0 <fchmod@plt+0x2b50>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
jmp    804d0a0 <fchmod@plt+0x2c40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x40,%eax
cmp    $0xa,%dl
je     804d0bc <fchmod@plt+0x2c5c>
lea    0x40(%edx),%ecx
mov    $0x3f,%eax
cmp    $0x7f,%dl
cmovne %ecx,%eax
repz ret
xchg   %ax,%ax
mov    0x4(%esp),%edx
mov    $0x40,%eax
cmp    $0xa,%edx
je     804d0d9 <fchmod@plt+0x2c79>
lea    0x40(%edx),%ecx
mov    $0x3f,%al
cmp    $0x7f,%edx
cmovne %ecx,%eax
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpb   $0x0,0x807738c
mov    0x34(%esp),%ebx
mov    0x38(%esp),%esi
jne    804d128 <fchmod@plt+0x2cc8>
mov    0x30(%esp),%eax
movl   $0x1,(%esi)
movzbl (%eax),%edx
mov    $0x40,%eax
cmp    $0xa,%dl
je     804d11b <fchmod@plt+0x2cbb>
lea    0x40(%edx),%ecx
mov    $0x3f,%eax
cmp    $0x7f,%dl
cmovne %ecx,%eax
mov    %al,(%ebx)
add    $0x24,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804d188 <fchmod@plt+0x2d28>
mov    0x1c(%esp),%edx
mov    $0x40,%eax
cmp    $0xa,%edx
je     804d162 <fchmod@plt+0x2d02>
lea    0x40(%edx),%ecx
mov    $0x3f,%al
cmp    $0x7f,%edx
cmovne %ecx,%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049b10 <wctomb@plt>
test   %eax,%eax
mov    %eax,(%esi)
jns    804d11d <fchmod@plt+0x2cbd>
call   804cd70 <fchmod@plt+0x2910>
movl   $0x0,(%esi)
jmp    804d11d <fchmod@plt+0x2cbd>
lea    0x0(%esi,%eiz,1),%esi
call   804cd40 <fchmod@plt+0x28e0>
movl   $0x3,(%esi)
movw   $0xbfef,(%ebx)
movb   $0xbd,0x2(%ebx)
jmp    804d11d <fchmod@plt+0x2cbd>
jmp    804d1b0 <fchmod@plt+0x2d50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
mov    %ebx,0x24(%esp)
mov    0x34(%esp),%ebx
mov    %esi,0x28(%esp)
mov    0x30(%esp),%esi
jne    804d1f0 <fchmod@plt+0x2d90>
mov    0x38(%esp),%edx
movl   $0x1,(%edx)
movzbl (%esi),%eax
mov    %al,(%ebx)
mov    %ebx,%eax
mov    0x28(%esp),%esi
mov    0x24(%esp),%ebx
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804d268 <fchmod@plt+0x2e08>
mov    0x1c(%esp),%eax
lea    -0xd800(%eax),%edx
cmp    $0x7ff,%edx
jbe    804d268 <fchmod@plt+0x2e08>
cmp    $0x10ffff,%eax
ja     804d268 <fchmod@plt+0x2e08>
lea    -0xfdd0(%eax),%edx
cmp    $0x1f,%edx
jbe    804d268 <fchmod@plt+0x2e08>
movzwl %ax,%edx
cmp    $0xfffd,%edx
jg     804d268 <fchmod@plt+0x2e08>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049b10 <wctomb@plt>
mov    0x38(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
jns    804d1db <fchmod@plt+0x2d7b>
call   804cd70 <fchmod@plt+0x2910>
mov    0x38(%esp),%eax
movl   $0x0,(%eax)
jmp    804d1db <fchmod@plt+0x2d7b>
xchg   %ax,%ax
call   804cd40 <fchmod@plt+0x28e0>
mov    0x38(%esp),%eax
movl   $0x3,(%eax)
mov    %ebx,%eax
movw   $0xbfef,(%ebx)
movb   $0xbd,0x2(%ebx)
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
xchg   %ax,%ax
cmpb   $0x0,0x807738c
mov    $0x1,%eax
jne    804d2a0 <fchmod@plt+0x2e40>
ret
nop
sub    $0x2c,%esp
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804d2f8 <fchmod@plt+0x2e98>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049b90 <wcwidth@plt>
cmp    $0xffffffff,%eax
je     804d2e0 <fchmod@plt+0x2e80>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffd,(%esp)
movl   $0xfffd,0x1c(%esp)
call   8049b90 <wcwidth@plt>
jmp    804d2d5 <fchmod@plt+0x2e75>
xchg   %ax,%ax
call   804cd40 <fchmod@plt+0x28e0>
mov    $0xfffd,%eax
movl   $0xfffd,0x1c(%esp)
jmp    804d2c8 <fchmod@plt+0x2e68>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x807738c
jne    804d320 <fchmod@plt+0x2ec0>
mov    $0x1,%eax
ret
nop
jmp    8049e20 <__ctype_get_mb_cur_max@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
cmpb   $0x0,0x807738c
mov    %esi,0x18(%esp)
mov    0x24(%esp),%esi
mov    %ebx,0x14(%esp)
je     804d3c0 <fchmod@plt+0x2f60>
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049b10 <wctomb@plt>
test   %eax,%eax
mov    %eax,(%esi)
js     804d3a0 <fchmod@plt+0x2f40>
mov    0x20(%esp),%eax
lea    -0xd800(%eax),%edx
cmp    $0x7ff,%edx
jbe    804d3a0 <fchmod@plt+0x2f40>
cmp    $0x10ffff,%eax
ja     804d3a0 <fchmod@plt+0x2f40>
lea    -0xfdd0(%eax),%edx
cmp    $0x1f,%edx
jbe    804d3a0 <fchmod@plt+0x2f40>
and    $0xffff,%eax
cmp    $0xfffd,%eax
jle    804d3e4 <fchmod@plt+0x2f84>
lea    0x0(%esi),%esi
call   804cd70 <fchmod@plt+0x2910>
mov    %ebx,%eax
mov    0x14(%esp),%ebx
movl   $0x0,(%esi)
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%eax
movl   $0x1,(%esi)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    %eax,%ebx
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
cmpb   $0x0,0x807738c
mov    %esi,0x30(%esp)
mov    0x40(%esp),%esi
mov    %edi,0x34(%esp)
mov    0x48(%esp),%edi
mov    %ebp,0x38(%esp)
mov    0x44(%esp),%ebp
mov    %ebx,0x2c(%esp)
jne    804d488 <fchmod@plt+0x3028>
test   %ebp,%ebp
je     804d432 <fchmod@plt+0x2fd2>
movzbl (%esi),%eax
mov    %al,0x0(%ebp)
test   %edi,%edi
je     804d480 <fchmod@plt+0x3020>
movzbl (%esi),%eax
cmp    $0x9,%al
je     804d538 <fchmod@plt+0x30d8>
lea    0x80(%eax),%edx
cmp    $0x1f,%edx
ja     804d470 <fchmod@plt+0x3010>
addl   $0x2,(%edi)
mov    $0x1,%ebx
mov    %ebx,%eax
mov    0x30(%esp),%esi
mov    0x2c(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
cmp    $0x1f,%eax
jbe    804d44c <fchmod@plt+0x2fec>
sub    $0x7f,%eax
cmp    $0x20,%eax
jbe    804d44c <fchmod@plt+0x2fec>
addl   $0x1,(%edi)
mov    $0x1,%ebx
jmp    804d454 <fchmod@plt+0x2ff4>
nop
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049db0 <mblen@plt>
cmp    $0x0,%eax
mov    %eax,%ebx
jl     804d570 <fchmod@plt+0x3110>
mov    $0x1,%eax
cmove  %eax,%ebx
xor    %edx,%edx
test   %ebp,%ebp
je     804d4c7 <fchmod@plt+0x3067>
lea    0x0(%esi),%esi
movzbl (%esi,%edx,1),%eax
mov    %al,0x0(%ebp,%edx,1)
add    $0x1,%edx
cmp    %edx,%ebx
jg     804d4b8 <fchmod@plt+0x3058>
test   %edi,%edi
je     804d454 <fchmod@plt+0x2ff4>
cmpb   $0x9,(%esi)
je     804d520 <fchmod@plt+0x30c0>
mov    %esi,(%esp)
call   804cf20 <fchmod@plt+0x2ac0>
test   %al,%al
je     804d558 <fchmod@plt+0x30f8>
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
lea    0x1c(%esp),%edx
addl   $0x1,(%edi)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d0e0 <fchmod@plt+0x2c80>
mov    (%edi),%ebp
mov    %eax,(%esp)
mov    %eax,%esi
call   804d290 <fchmod@plt+0x2e30>
add    %eax,%ebp
mov    %ebp,(%edi)
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    804d454 <fchmod@plt+0x2ff4>
lea    0x0(%esi),%esi
mov    (%edi),%eax
xor    %edx,%edx
mov    0x80772e4,%esi
lea    (%eax,%esi,1),%ecx
div    %esi
sub    %edx,%ecx
mov    %ecx,(%edi)
jmp    804d454 <fchmod@plt+0x2ff4>
mov    0x80772e4,%ebx
xor    %edx,%edx
mov    (%edi),%eax
lea    (%eax,%ebx,1),%ecx
div    %ebx
mov    $0x1,%ebx
sub    %edx,%ecx
mov    %ecx,(%edi)
jmp    804d454 <fchmod@plt+0x2ff4>
lea    0x0(%esi),%esi
mov    (%edi),%ebp
mov    %esi,(%esp)
call   804d290 <fchmod@plt+0x2e30>
add    %eax,%ebp
mov    %ebp,(%edi)
jmp    804d454 <fchmod@plt+0x2ff4>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    $0x1,%ebx
movl   $0x0,(%esp)
call   8049db0 <mblen@plt>
jmp    804d4ac <fchmod@plt+0x304c>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%edi
mov    %esi,%ebx
jmp    804d5aa <fchmod@plt+0x314a>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    %eax,%ebx
mov    %esi,%ebp
sub    %ebx,%ebp
lea    (%edi,%ebp,1),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
cmp    %eax,%ebx
ja     804d5a8 <fchmod@plt+0x3148>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    $0x18,%esp
add    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpb   $0x0,0x807738c
mov    0x50(%esp),%ebx
mov    0x54(%esp),%esi
mov    0x58(%esp),%edi
je     804d760 <fchmod@plt+0x3300>
cmp    %esi,%ebx
je     804d790 <fchmod@plt+0x3330>
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x18(%esp)
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x1c(%esp)
cmpb   $0x0,(%ebx)
jne    804d6fe <fchmod@plt+0x329e>
jmp    804d7c0 <fchmod@plt+0x3360>
mov    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
lea    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804a430 <mbtowc@plt>
xor    %edx,%edx
test   %eax,%eax
js     804d7a0 <fchmod@plt+0x3340>
mov    %ebp,%eax
cmp    %dl,%al
jne    804d808 <fchmod@plt+0x33a8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <towlower@plt>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <towlower@plt>
cmp    %eax,%ebp
jne    804d808 <fchmod@plt+0x33a8>
mov    %ebx,(%esp)
sub    $0x1,%edi
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
add    %eax,%ebx
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%esi
cmpb   $0x0,(%ebx)
je     804d7c0 <fchmod@plt+0x3360>
cmpb   $0x0,(%esi)
je     804d7c0 <fchmod@plt+0x3360>
test   %edi,%edi
je     804d778 <fchmod@plt+0x3318>
mov    0x18(%esp),%eax
xor    %ebp,%ebp
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
lea    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
jns    804d668 <fchmod@plt+0x3208>
call   804cd40 <fchmod@plt+0x28e0>
mov    0x18(%esp),%edx
mov    $0x1,%ebp
movzbl (%edx),%eax
mov    %eax,0x28(%esp)
jmp    804d668 <fchmod@plt+0x3208>
nop
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0f0 <strncasecmp@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804cd40 <fchmod@plt+0x28e0>
mov    0x1c(%esp),%edx
movzbl (%edx),%eax
mov    $0x1,%edx
mov    %eax,0x2c(%esp)
jmp    804d6a2 <fchmod@plt+0x3242>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
test   %edi,%edi
je     804d790 <fchmod@plt+0x3330>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <towlower@plt>
mov    %eax,%ebx
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <towlower@plt>
add    $0x3c,%esp
sub    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    804d7dc <fchmod@plt+0x337c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d610 <fchmod@plt+0x31b0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edi
mov    0x38(%esp),%ebx
cmpb   $0x0,(%eax)
je     804d8c8 <fchmod@plt+0x3468>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebp
call   8049fc0 <strlen@plt>
cmp    %eax,%ebp
ja     804d8c6 <fchmod@plt+0x3466>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
cmp    %edi,%ebx
mov    %eax,%esi
jb     804d8c6 <fchmod@plt+0x3466>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebp
ja     804d8bc <fchmod@plt+0x345c>
mov    0x34(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
je     804d8c8 <fchmod@plt+0x3468>
sub    $0x1,%ebx
add    $0x1,%esi
cmp    %ebx,%edi
jbe    804d8a0 <fchmod@plt+0x3440>
xor    %ebx,%ebx
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edi
mov    0x38(%esp),%ebx
cmpb   $0x0,(%eax)
je     804d948 <fchmod@plt+0x34e8>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebp
call   8049fc0 <strlen@plt>
cmp    %eax,%ebp
ja     804d946 <fchmod@plt+0x34e6>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
cmp    %edi,%ebx
mov    %eax,%esi
jb     804d946 <fchmod@plt+0x34e6>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebp
ja     804d93c <fchmod@plt+0x34dc>
mov    0x34(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a0f0 <strncasecmp@plt>
test   %eax,%eax
je     804d948 <fchmod@plt+0x34e8>
sub    $0x1,%ebx
add    $0x1,%esi
cmp    %ebx,%edi
jbe    804d920 <fchmod@plt+0x34c0>
xor    %ebx,%ebx
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
cmpb   $0x0,0x807738c
mov    0x20(%esp),%ebx
mov    0x24(%esp),%edi
je     804d9b8 <fchmod@plt+0x3558>
xor    %esi,%esi
cmpb   $0x0,(%ebx)
je     804d9ac <fchmod@plt+0x354c>
test   %edi,%edi
jne    804d992 <fchmod@plt+0x3532>
jmp    804d9ac <fchmod@plt+0x354c>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%edi
lea    0x0(%esi),%esi
je     804d9ac <fchmod@plt+0x354c>
mov    %ebx,(%esp)
add    $0x1,%esi
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
jne    804d988 <fchmod@plt+0x3528>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,0x24(%esp)
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a140 <strnlen@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804d960 <fchmod@plt+0x3500>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
cmpb   $0x0,0x807738c
mov    %ebx,0x2c(%esp)
mov    0x40(%esp),%ebx
mov    %esi,0x30(%esp)
mov    0x44(%esp),%esi
mov    %ebp,0x38(%esp)
mov    0x48(%esp),%ebp
mov    %edi,0x34(%esp)
je     804da38 <fchmod@plt+0x35d8>
cmpb   $0x0,(%esi)
jne    804da60 <fchmod@plt+0x3600>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
xchg   %ax,%ax
mov    %ebp,0x48(%esp)
mov    0x34(%esp),%edi
mov    %esi,0x44(%esp)
mov    0x38(%esp),%ebp
mov    %ebx,0x40(%esp)
mov    0x30(%esp),%esi
mov    0x2c(%esp),%ebx
add    $0x3c,%esp
jmp    804d8e0 <fchmod@plt+0x3480>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    %ebx,(%esp)
mov    %eax,%edi
call   804d9d0 <fchmod@plt+0x3570>
cmp    %eax,%edi
ja     804da8c <fchmod@plt+0x362c>
mov    %ebp,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    %eax,0x1c(%esp)
cmp    0x1c(%esp),%edi
jbe    804daae <fchmod@plt+0x364e>
cmp    %ebx,%ebp
jne    804da90 <fchmod@plt+0x3630>
xor    %ebp,%ebp
jmp    804da20 <fchmod@plt+0x35c0>
mov    %ebp,%edx
sub    %ebx,%edx
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   804d590 <fchmod@plt+0x3130>
addl   $0x1,0x1c(%esp)
cmp    0x1c(%esp),%edi
lea    (%ebx,%eax,1),%ebp
ja     804da88 <fchmod@plt+0x3628>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804d610 <fchmod@plt+0x31b0>
test   %eax,%eax
jne    804da88 <fchmod@plt+0x3628>
jmp    804da20 <fchmod@plt+0x35c0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
cmpb   $0x0,0x807738c
mov    %ebx,0x1c(%esp)
mov    0x30(%esp),%ebx
mov    %ebp,0x28(%esp)
mov    0x34(%esp),%ebp
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
je     804db10 <fchmod@plt+0x36b0>
cmpb   $0x0,0x0(%ebp)
jne    804db30 <fchmod@plt+0x36d0>
mov    %ebx,%eax
mov    0x20(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
mov    %ebp,0x34(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x30(%esp)
mov    0x24(%esp),%edi
mov    0x1c(%esp),%ebx
mov    0x28(%esp),%ebp
add    $0x2c,%esp
jmp    804a280 <strcasestr@plt>
mov    %ebx,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    %ebp,(%esp)
mov    %eax,%esi
call   804d9d0 <fchmod@plt+0x3570>
cmpb   $0x0,(%ebx)
mov    %eax,%edi
je     804db90 <fchmod@plt+0x3730>
cmp    %eax,%esi
jae    804db76 <fchmod@plt+0x3716>
lea    0x0(%esi),%esi
jmp    804db90 <fchmod@plt+0x3730>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
sub    $0x1,%esi
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
je     804db90 <fchmod@plt+0x3730>
cmp    %esi,%edi
ja     804db90 <fchmod@plt+0x3730>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804d610 <fchmod@plt+0x31b0>
test   %eax,%eax
jne    804db58 <fchmod@plt+0x36f8>
jmp    804dafa <fchmod@plt+0x369a>
nop
xor    %ebx,%ebx
jmp    804dafa <fchmod@plt+0x369a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmpb   $0x0,0x807738c
mov    0x50(%esp),%edi
mov    0x54(%esp),%esi
jne    804dbd0 <fchmod@plt+0x3770>
movsbl (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049f90 <strchr@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
movb   $0x0,0x1f(%esp)
test   %eax,%eax
js     804dc93 <fchmod@plt+0x3833>
cmpb   $0x0,(%edi)
mov    %edi,%esi
je     804dc64 <fchmod@plt+0x3804>
movb   $0x0,0x1e(%esp)
jmp    804dc21 <fchmod@plt+0x37c1>
nop
lea    0x0(%esi,%eiz,1),%esi
add    %ebp,%edi
add    %ebp,%esi
cmpb   $0x0,(%edi)
je     804dc64 <fchmod@plt+0x3804>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a430 <mbtowc@plt>
test   %eax,%eax
js     804dc80 <fchmod@plt+0x3820>
movzbl 0x1f(%esp),%eax
cmp    %al,0x1e(%esp)
jne    804dc18 <fchmod@plt+0x37b8>
mov    0x2c(%esp),%eax
cmp    %eax,0x28(%esp)
jne    804dc18 <fchmod@plt+0x37b8>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
xor    %eax,%eax
cmpb   $0x0,(%edi)
cmovne %esi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804cd40 <fchmod@plt+0x28e0>
movzbl (%edi),%eax
movb   $0x1,0x1e(%esp)
mov    %eax,0x28(%esp)
jmp    804dc4f <fchmod@plt+0x37ef>
call   804cd40 <fchmod@plt+0x28e0>
movzbl (%esi),%eax
movb   $0x1,0x1f(%esp)
mov    %eax,0x2c(%esp)
jmp    804dc05 <fchmod@plt+0x37a5>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x807738c
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
jne    804dcfa <fchmod@plt+0x389a>
mov    %esi,0x24(%esp)
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    804a1b0 <strpbrk@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804dba0 <fchmod@plt+0x3740>
test   %eax,%eax
jne    804dd01 <fchmod@plt+0x38a1>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
jne    804dcd8 <fchmod@plt+0x3878>
xor    %ebx,%ebx
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x28(%esp),%ebx
mov    0x24(%esp),%edi
cmp    %esi,%ebx
jae    804dd2f <fchmod@plt+0x38cf>
jmp    804dd50 <fchmod@plt+0x38f0>
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     804dd50 <fchmod@plt+0x38f0>
movsbl (%ebx),%eax
test   %al,%al
je     804dd28 <fchmod@plt+0x38c8>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
je     804dd28 <fchmod@plt+0x38c8>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x10,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
cmpb   $0x0,0x807738c
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebx
je     804ddb8 <fchmod@plt+0x3958>
cmpb   $0x0,(%ebx)
jne    804dd90 <fchmod@plt+0x3930>
cmp    %esi,%ebx
jne    804dda4 <fchmod@plt+0x3944>
xor    %ebx,%ebx
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   804dba0 <fchmod@plt+0x3740>
test   %eax,%eax
jne    804dd86 <fchmod@plt+0x3926>
cmp    %esi,%ebx
je     804dd84 <fchmod@plt+0x3924>
sub    %esi,%ebx
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804d590 <fchmod@plt+0x3130>
lea    (%esi,%eax,1),%ebx
jmp    804dd7b <fchmod@plt+0x391b>
nop
mov    %ebx,0x28(%esp)
mov    %edi,0x24(%esp)
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804dd10 <fchmod@plt+0x38b0>
nop
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%esi
movsbl (%esi),%ebx
test   %bl,%bl
je     804de10 <fchmod@plt+0x39b0>
call   804a420 <__ctype_b_loc@plt>
mov    (%eax),%eax
jmp    804ddfa <fchmod@plt+0x399a>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movsbl (%esi),%ebx
test   %bl,%bl
je     804de10 <fchmod@plt+0x39b0>
testb  $0x1,(%eax,%ebx,2)
je     804ddf0 <fchmod@plt+0x3990>
add    $0x4,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x807738c
mov    0x20(%esp),%ebx
je     804deb0 <fchmod@plt+0x3a50>
call   8049e20 <__ctype_get_mb_cur_max@plt>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x0,(%ebx)
mov    %eax,%esi
jne    804de77 <fchmod@plt+0x3a17>
xchg   %ax,%ax
mov    %esi,(%esp)
xor    %ebx,%ebx
call   8049be0 <free@plt>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
je     804de48 <fchmod@plt+0x39e8>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     804de60 <fchmod@plt+0x3a00>
mov    %esi,(%esp)
mov    $0x1,%ebx
call   8049be0 <free@plt>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    804ddd0 <fchmod@plt+0x3970>
xchg   %ax,%ax
mov    0x4(%esp),%edx
lea    -0xd800(%edx),%eax
cmp    $0x7ff,%eax
jbe    804def8 <fchmod@plt+0x3a98>
cmp    $0x10ffff,%edx
ja     804def8 <fchmod@plt+0x3a98>
lea    -0xfdd0(%edx),%ecx
xor    %eax,%eax
cmp    $0x1f,%ecx
jbe    804defa <fchmod@plt+0x3a9a>
and    $0xffff,%edx
cmp    $0xfffd,%edx
setle  %al
ret
xchg   %ax,%ax
xor    %eax,%eax
repz ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x807738c
mov    $0x1,%eax
jne    804df10 <fchmod@plt+0x3ab0>
repz ret
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804a250 <mbstowcs@plt>
cmp    $0xffffffff,%eax
setne  %al
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    0x80773c4,%edi
push   %esi
push   %ebx
test   %edi,%edi
je     804df98 <fchmod@plt+0x3b38>
mov    0xc(%edi),%esi
mov    $0x1,%ebp
test   %esi,%esi
mov    %esi,%edx
je     804df91 <fchmod@plt+0x3b31>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%esi
je     804dfa0 <fchmod@plt+0x3b40>
mov    (%edx),%ecx
mov    %esi,%eax
jmp    804df77 <fchmod@plt+0x3b17>
lea    0x0(%esi),%esi
mov    0x1c(%eax),%eax
cmp    %edx,%eax
je     804dfa0 <fchmod@plt+0x3b40>
cmp    %ecx,(%eax)
jne    804df70 <fchmod@plt+0x3b10>
movzbl 0x4(%edx),%ebx
cmp    %bl,0x4(%eax)
jne    804df70 <fchmod@plt+0x3b10>
mov    0x8(%eax),%eax
mov    %eax,0x8(%edx)
mov    0x1c(%edx),%edx
test   %edx,%edx
jne    804df60 <fchmod@plt+0x3b00>
mov    0x14(%edi),%edi
test   %edi,%edi
jne    804df4e <fchmod@plt+0x3aee>
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,0x8(%edx)
add    $0x1,%ebp
jmp    804df8a <fchmod@plt+0x3b2a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   8049bc0 <has_colors@plt>
test   %al,%al
jne    804dfc8 <fchmod@plt+0x3b68>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049d90 <start_color@plt>
call   8049b40 <use_default_colors@plt>
cmp    $0xffffffff,%eax
setne  %al
mov    %eax,%esi
mov    0x80773f8,%eax
mov    0x48(%eax),%ebx
test   %ebx,%ebx
jne    804e009 <fchmod@plt+0x3ba9>
jmp    804dfbe <fchmod@plt+0x3b5e>
cmp    $0xffff,%dx
je     804e030 <fchmod@plt+0x3bd0>
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movswl 0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049c90 <init_pair@plt>
mov    0x1c(%ebx),%ebx
test   %ebx,%ebx
je     804dfbe <fchmod@plt+0x3b5e>
movswl (%ebx),%eax
movswl 0x2(%ebx),%edx
cmp    $0xffff,%ax
jne    804dfe8 <fchmod@plt+0x3b88>
mov    %esi,%ecx
test   %cl,%cl
jne    804e03f <fchmod@plt+0x3bdf>
cmp    $0xffff,%dx
mov    $0x7,%eax
jne    804dfee <fchmod@plt+0x3b8e>
xor    %edx,%edx
jmp    804dfee <fchmod@plt+0x3b8e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ecx
mov    $0xffffffff,%edx
test   %cl,%cl
jne    804dfee <fchmod@plt+0x3b8e>
xor    %edx,%edx
jmp    804dfee <fchmod@plt+0x3b8e>
or     $0xffffffff,%eax
cmp    $0xffff,%dx
jne    804dfee <fchmod@plt+0x3b8e>
or     $0xffffffff,%edx
jmp    804dfee <fchmod@plt+0x3b8e>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80773c0,%edx
mov    0x80773f8,%ebp
test   %edx,%edx
movl   $0x0,0x44(%ebp)
movl   $0x0,0x48(%ebp)
je     804e180 <fchmod@plt+0x3d20>
mov    $0x806b442,%edi
mov    $0x5,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e0f4 <fchmod@plt+0x3c94>
mov    0x80773c4,%ebx
test   %ebx,%ebx
mov    %ebx,%eax
je     804e2c0 <fchmod@plt+0x3e60>
mov    %ebx,%edi
mov    %edx,%esi
jmp    804e0b2 <fchmod@plt+0x3c52>
nop
mov    0x48(%ebp),%eax
test   %eax,%eax
jne    804e0d1 <fchmod@plt+0x3c71>
mov    0x14(%edi),%edi
test   %edi,%edi
je     804e18f <fchmod@plt+0x3d2f>
mov    %esi,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    804e0a0 <fchmod@plt+0x3c40>
mov    0xc(%edi),%eax
mov    %edi,0x44(%ebp)
test   %eax,%eax
mov    %eax,0x48(%ebp)
je     804e0a7 <fchmod@plt+0x3c47>
mov    %eax,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%ecx
test   %ecx,%ecx
je     804e100 <fchmod@plt+0x3ca0>
mov    0x14(%esi),%edx
test   %edx,%edx
je     804e0ed <fchmod@plt+0x3c8d>
mov    0x18(%esi),%eax
test   %eax,%eax
je     804e140 <fchmod@plt+0x3ce0>
mov    0x1c(%esi),%esi
test   %esi,%esi
jne    804e0d8 <fchmod@plt+0x3c78>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x1,0x5(%esi)
sbb    %ebx,%ebx
and    $0xfffffffe,%ebx
mov    %eax,0x10(%esi)
mov    0xc(%esi),%eax
add    $0x3,%ebx
mov    %eax,(%esp)
call   8066390 <fchmod@plt+0x1bf30>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804a260 <regcomp@plt>
jmp    804e0df <fchmod@plt+0x3c7f>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x1,0x5(%esi)
sbb    %ebx,%ebx
and    $0xfffffffe,%ebx
mov    %eax,0x18(%esi)
mov    0x14(%esi),%eax
add    $0x3,%ebx
mov    %eax,(%esp)
call   8066390 <fchmod@plt+0x1bf30>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a260 <regcomp@plt>
jmp    804e0ed <fchmod@plt+0x3c8d>
xchg   %ax,%ax
mov    0x80773c4,%eax
test   %eax,%eax
mov    %eax,%ebx
je     804e2c0 <fchmod@plt+0x3e60>
movl   $0x0,0x28(%esp)
mov    $0x8,%ebp
movl   $0x0,0x2c(%esp)
jmp    804e1be <fchmod@plt+0x3d5e>
xchg   %ax,%ax
mov    0xc(%ebx),%eax
mov    %ebx,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x14(%ebx),%ebx
test   %ebx,%ebx
je     804e2a8 <fchmod@plt+0x3e48>
mov    (%ebx),%esi
mov    $0x806b447,%edi
mov    %ebp,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e1a8 <fchmod@plt+0x3d48>
mov    0x4(%ebx),%esi
test   %esi,%esi
je     804e1b3 <fchmod@plt+0x3d53>
mov    %ebx,%edi
jmp    804e1f3 <fchmod@plt+0x3d93>
xchg   %ax,%ax
mov    0x80773f8,%eax
mov    0x48(%eax),%eax
test   %eax,%eax
jne    804e240 <fchmod@plt+0x3de0>
test   %bl,%bl
jne    804e280 <fchmod@plt+0x3e20>
mov    0x8(%esi),%esi
test   %esi,%esi
je     804e240 <fchmod@plt+0x3de0>
mov    0x4(%esi),%eax
test   %eax,%eax
sete   %bl
je     804e248 <fchmod@plt+0x3de8>
mov    0x80773f8,%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    804e1d8 <fchmod@plt+0x3d78>
mov    0xc(%edi),%eax
mov    0x80773f8,%edx
test   %eax,%eax
mov    %edi,0x44(%edx)
mov    %eax,0x48(%edx)
je     804e1e4 <fchmod@plt+0x3d84>
mov    %edi,%ebx
jmp    804e1b3 <fchmod@plt+0x3d53>
nop
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x4(%esi)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8066390 <fchmod@plt+0x1bf30>
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   804a260 <regcomp@plt>
mov    0x4(%esi),%eax
jmp    804e1fd <fchmod@plt+0x3d9d>
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049e50 <regfree@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x4(%esi)
jmp    804e1ec <fchmod@plt+0x3d8c>
lea    0x0(%esi),%esi
mov    0x80773f8,%ebp
mov    0x48(%ebp),%esi
test   %esi,%esi
jne    804e0d8 <fchmod@plt+0x3c78>
mov    0x80773c4,%eax
jmp    804e2d0 <fchmod@plt+0x3e70>
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
je     804e3e4 <fchmod@plt+0x3f84>
mov    %eax,%edi
lea    0x0(%esi),%esi
mov    0x8(%edi),%esi
test   %esi,%esi
jne    804e313 <fchmod@plt+0x3eb3>
jmp    804e3c8 <fchmod@plt+0x3f68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x48(%eax),%eax
test   %eax,%eax
jne    804e3c8 <fchmod@plt+0x3f68>
test   %bl,%bl
jne    804e3a0 <fchmod@plt+0x3f40>
mov    0x8(%esi),%esi
test   %esi,%esi
je     804e3c8 <fchmod@plt+0x3f68>
mov    0x4(%esi),%eax
test   %eax,%eax
sete   %bl
je     804e368 <fchmod@plt+0x3f08>
mov    0x80773f8,%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x4(%edx),%edx
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    804e2f0 <fchmod@plt+0x3e90>
mov    0x80773f8,%edx
mov    0xc(%edi),%eax
mov    %edi,0x44(%edx)
mov    %eax,0x48(%edx)
jmp    804e2f8 <fchmod@plt+0x3e98>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x4(%esi)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8066390 <fchmod@plt+0x1bf30>
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   804a260 <regcomp@plt>
mov    0x4(%esi),%eax
jmp    804e31d <fchmod@plt+0x3ebd>
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049e50 <regfree@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x4(%esi)
jmp    804e308 <fchmod@plt+0x3ea8>
lea    0x0(%esi),%esi
mov    0x14(%edi),%edi
test   %edi,%edi
jne    804e2e0 <fchmod@plt+0x3e80>
mov    0x80773f8,%ebp
mov    0x48(%ebp),%esi
test   %esi,%esi
jne    804e0d8 <fchmod@plt+0x3c78>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     804e0f4 <fchmod@plt+0x3c94>
mov    0x2c(%esp),%eax
mov    %eax,0x44(%ebp)
mov    0x28(%esp),%eax
mov    %eax,0x48(%ebp)
mov    %eax,%esi
jmp    804e0d8 <fchmod@plt+0x3c78>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
je     804e44b <fchmod@plt+0x3feb>
mov    0x24(%esp),%esi
add    %esi,%esi
xchg   %ax,%ax
mov    %ebx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     804e444 <fchmod@plt+0x3fe4>
add    %esi,%eax
cmpw   $0x2,(%eax)
je     804e458 <fchmod@plt+0x3ff8>
movw   $0xffff,(%eax)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804e428 <fchmod@plt+0x3fc8>
movb   $0x1,0x80773bc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %ebx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     804e474 <fchmod@plt+0x4014>
add    %esi,%eax
cmpw   $0x2,(%eax)
jne    804e44b <fchmod@plt+0x3feb>
movw   $0xffff,(%eax)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804e458 <fchmod@plt+0x3ff8>
movb   $0x1,0x80773bc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
mov    0xc(%eax),%ebx
test   %ebx,%ebx
je     804e4cb <fchmod@plt+0x406b>
mov    0x24(%esp),%esi
add    %esi,%esi
xchg   %ax,%ax
mov    %ebx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     804e4c4 <fchmod@plt+0x4064>
add    %esi,%eax
cmpw   $0x2,(%eax)
je     804e4d8 <fchmod@plt+0x4078>
movw   $0xffff,(%eax)
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804e4a8 <fchmod@plt+0x4048>
movb   $0x1,0x80773bc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %ebx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     804e4f4 <fchmod@plt+0x4094>
add    %esi,%eax
cmpw   $0x2,(%eax)
jne    804e4cb <fchmod@plt+0x406b>
movw   $0xffff,(%eax)
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804e4d8 <fchmod@plt+0x4078>
movb   $0x1,0x80773bc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x24(%esp),%ebx
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804e490 <fchmod@plt+0x4030>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804e410 <fchmod@plt+0x3fb0>
mov    0x10(%esi),%eax
mov    0x18(%esp),%esi
movw   $0xffff,(%eax,%ebx,2)
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
movzbl 0x64(%esp),%eax
mov    0x60(%esp),%esi
mov    %al,0x2f(%esp)
mov    0x80773f8,%eax
mov    0x48(%eax),%ebx
mov    0x44(%eax),%eax
test   %eax,%eax
je     804e650 <fchmod@plt+0x41f0>
test   %ebx,%ebx
lea    0x38(%esp),%edi
jne    804e5a2 <fchmod@plt+0x4142>
jmp    804e650 <fchmod@plt+0x41f0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804e510 <fchmod@plt+0x40b0>
mov    0x1c(%ebx),%ebx
test   %ebx,%ebx
je     804e650 <fchmod@plt+0x41f0>
mov    0x18(%ebx),%ebp
test   %ebp,%ebp
je     804e597 <fchmod@plt+0x4137>
mov    %esi,(%esp)
call   805b180 <fchmod@plt+0x10d20>
cmpb   $0x0,0x2f(%esp)
jne    804e588 <fchmod@plt+0x4128>
lea    0x30(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,%ebp
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
mov    0x20(%ebx),%ecx
mov    0x10(%esi),%edx
movzwl (%edx,%ecx,2),%edx
cmp    $0x10,%dx
je     804e658 <fchmod@plt+0x41f8>
cmp    $0x2,%dx
je     804e658 <fchmod@plt+0x41f8>
and    $0x4,%edx
je     804e668 <fchmod@plt+0x4208>
test   %eax,%eax
jne    804e668 <fchmod@plt+0x4208>
test   %ebp,%ebp
jne    804e635 <fchmod@plt+0x41d5>
mov    0x34(%esp),%eax
cmp    %eax,0x3c(%esp)
jle    804e668 <fchmod@plt+0x4208>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804e410 <fchmod@plt+0x3fb0>
mov    0x1c(%ebx),%ebx
test   %ebx,%ebx
jne    804e5a2 <fchmod@plt+0x4142>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %eax,%eax
je     804e668 <fchmod@plt+0x4208>
test   %ebp,%ebp
jne    804e597 <fchmod@plt+0x4137>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804e510 <fchmod@plt+0x40b0>
jmp    804e597 <fchmod@plt+0x4137>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
movb   $0x0,0x8077390
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x80773f8,%eax
mov    0x10(%eax),%ebx
cmp    0x8(%eax),%ebx
je     804e6e8 <fchmod@plt+0x4288>
movl   $0x0,0x14(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x8077404,0x4(%esp)
movl   $0x8077408,(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x80773f8,%eax
movl   $0x0,0x1c(%eax)
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,0x10(%esp)
mov    %eax,0x14(%esp)
jmp    804e6b0 <fchmod@plt+0x4250>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x38,%esp
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x2c(%esp),%eax
movl   $0x8077404,0x4(%esp)
movl   $0x8077408,(%esp)
mov    %eax,0x14(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
add    $0x38,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    %esi,0x28(%esp)
mov    0x80773f8,%esi
mov    %ebx,0x24(%esp)
mov    0x10(%esi),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x18(%esi),%edx
cmp    %edx,%eax
ja     804e7f0 <fchmod@plt+0x4390>
cmp    0x8(%esi),%ebx
je     804e7e3 <fchmod@plt+0x4383>
movl   $0x0,0x14(%esp)
mov    0x8(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x8077404,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x8077408,(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
nop
mov    %ebx,0x10(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0xc(%esp)
movl   $0x8077404,0x4(%esp)
movl   $0x8077408,(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
sub    $0x2c,%esp
mov    %ebx,0x24(%esp)
mov    0x80773f8,%ebx
mov    %esi,0x28(%esp)
mov    0x8(%ebx),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
movl   $0x8077404,0x4(%esp)
movl   $0x8077408,(%esp)
mov    %eax,0x8(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x3c,%esp
mov    0x48(%esp),%eax
cmpb   $0x0,0x8077390
mov    %ebx,0x2c(%esp)
mov    0x44(%esp),%ecx
mov    %ebp,0x38(%esp)
mov    0x40(%esp),%ebx
mov    %esi,0x30(%esp)
mov    0x8077414,%ebp
mov    %edi,0x34(%esp)
mov    %eax,0x1c(%esp)
jne    804e8d5 <fchmod@plt+0x4475>
mov    0x8077408,%eax
test   %eax,%eax
je     804e8d5 <fchmod@plt+0x4475>
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8058ce0 <fchmod@plt+0xe880>
mov    0x18(%esp),%ecx
movl   $0x0,0x8077408
00
test   %bl,%bl
je     804e938 <fchmod@plt+0x44d8>
mov    0x8077408,%eax
test   %eax,%eax
je     804ea18 <fchmod@plt+0x45b8>
mov    0x8077404,%edi
mov    (%edi),%eax
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x18(%esp),%ecx
mov    %eax,%esi
orl    $0x80000000,0x8077414
80
test   %cl,%cl
movb   $0x1,0x8077390
je     804e947 <fchmod@plt+0x44e7>
call   804e820 <fchmod@plt+0x43c0>
test   %bl,%bl
jne    804e96c <fchmod@plt+0x450c>
cmpb   $0x0,0x1c(%esp)
jne    804e9ae <fchmod@plt+0x454e>
movl   $0x5,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
jmp    804e9ae <fchmod@plt+0x454e>
nop
xor    %esi,%esi
xor    %edi,%edi
test   %cl,%cl
movb   $0x1,0x8077390
jne    804e915 <fchmod@plt+0x44b5>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
jne    804e9f8 <fchmod@plt+0x4598>
testb  $0x10,0x8077415
jne    804e9e8 <fchmod@plt+0x4588>
call   804e690 <fchmod@plt+0x4230>
test   %bl,%bl
je     804e91e <fchmod@plt+0x44be>
mov    0x8077408,%eax
test   %eax,%eax
je     804e9a0 <fchmod@plt+0x4540>
test   %edi,%edi
je     804ea28 <fchmod@plt+0x45c8>
mov    0x8077404,%eax
add    %esi,(%edi)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80592c0 <fchmod@plt+0xee60>
sub    %esi,(%edi)
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
test   %ebp,%ebp
js     804e9ae <fchmod@plt+0x454e>
andl   $0x7fffffff,0x8077414
7f
call   80694c0 <fchmod@plt+0x1f060>
mov    0x80773f8,%eax
movl   $0x0,0x44(%esp)
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x10(%eax),%eax
mov    0x38(%esp),%ebp
movb   $0x1,0x80773bc
mov    %eax,0x40(%esp)
add    $0x3c,%esp
jmp    804e550 <fchmod@plt+0x40f0>
xchg   %ax,%ax
call   804e780 <fchmod@plt+0x4320>
jmp    804e968 <fchmod@plt+0x4508>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   804e700 <fchmod@plt+0x42a0>
mov    0x80773f8,%eax
movb   $0x0,0x25(%eax)
jmp    804e968 <fchmod@plt+0x4508>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
xor    %edi,%edi
jmp    804e900 <fchmod@plt+0x44a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077404,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80592c0 <fchmod@plt+0xee60>
jmp    804e992 <fchmod@plt+0x4532>
nop
sub    $0x1c,%esp
movl   $0x5,(%esp)
call   8062720 <fchmod@plt+0x182c0>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804e880 <fchmod@plt+0x4420>
add    $0x1c,%esp
ret
nop
sub    $0x1c,%esp
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   804e880 <fchmod@plt+0x4420>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x5,(%esp)
call   8062720 <fchmod@plt+0x182c0>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   804e880 <fchmod@plt+0x4420>
add    $0x1c,%esp
ret
nop
mov    0x8077408,%edx
test   %edx,%edx
je     804eb36 <fchmod@plt+0x46d6>
push   %ebx
sub    $0x18,%esp
movl   $0x6,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
mov    0x8077404,%eax
mov    %eax,0x4(%esp)
mov    0x8077408,%eax
mov    %eax,(%esp)
call   80592c0 <fchmod@plt+0xee60>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
call   80694c0 <fchmod@plt+0x1f060>
mov    0x80773f8,%eax
movl   $0x0,0x4(%esp)
movb   $0x1,0x80773bc
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   804e550 <fchmod@plt+0x40f0>
add    $0x18,%esp
pop    %ebx
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x8c,%esp
mov    0x90(%esp),%eax
mov    %esi,0x80(%esp)
mov    %ebx,0x7c(%esp)
lea    0x10(%esp),%ebx
mov    %edi,0x84(%esp)
mov    (%eax),%esi
mov    0x94(%esp),%eax
mov    %ebp,0x88(%esp)
xor    %ebp,%ebp
mov    (%eax),%edi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804eba3 <fchmod@plt+0x4743>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
mov    %eax,%ebp
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804ebcc <fchmod@plt+0x476c>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ec00 <fchmod@plt+0x47a0>
mov    %ebp,%eax
test   %al,%al
jne    804ec10 <fchmod@plt+0x47b0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d830 <fchmod@plt+0x33d0>
mov    0x7c(%esp),%ebx
mov    0x80(%esp),%esi
mov    0x84(%esp),%edi
mov    0x88(%esp),%ebp
add    $0x8c,%esp
ret
xchg   %ax,%ax
mov    %ebp,%eax
test   %al,%al
jne    804ebd2 <fchmod@plt+0x4772>
mov    $0x1,%eax
jmp    804ebde <fchmod@plt+0x477e>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    804ebde <fchmod@plt+0x477e>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%ebx
movl   $0x0,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
mov    %eax,0x4(%ebx)
mov    0x80773f8,%eax
mov    0x4(%eax),%ebx
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
mov    %edx,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
movl   $0x0,0x10(%edx)
movl   $0x0,0x14(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%ebx
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
call   804ec20 <fchmod@plt+0x47c0>
mov    0x80773f8,%eax
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
movl   $0x0,0x20(%eax)
movb   $0x0,0x24(%eax)
movb   $0x0,0x25(%eax)
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
movl   $0x0,0x30(%eax)
movl   $0x0,0x34(%eax)
movl   $0x0,0x38(%eax)
movl   $0x0,0x3c(%eax)
movl   $0x0,0x48(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%eax
test   %eax,%eax
je     804ed40 <fchmod@plt+0x48e0>
mov    0x4c(%eax),%ebx
call   80594c0 <fchmod@plt+0xf060>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    %eax,(%esp)
call   8059510 <fchmod@plt+0xf0b0>
mov    0x80773f8,%eax
mov    0x4c(%eax),%eax
mov    %eax,0x80773f8
add    $0x18,%esp
pop    %ebx
jmp    804ec80 <fchmod@plt+0x4820>
call   80594c0 <fchmod@plt+0xf060>
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x80773f8
call   8059510 <fchmod@plt+0xf0b0>
add    $0x18,%esp
pop    %ebx
jmp    804ec80 <fchmod@plt+0x4820>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
call   804dfb0 <fchmod@plt+0x3b50>
add    $0x1c,%esp
jmp    806a7c0 <fchmod@plt+0x20360>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%eax
mov    0x20(%esp),%ecx
mov    0x4c(%eax),%edx
cmp    %edx,%eax
je     804ee18 <fchmod@plt+0x49b8>
test   %cl,%cl
je     804edf0 <fchmod@plt+0x4990>
mov    %edx,0x80773f8
call   804ed70 <fchmod@plt+0x4910>
mov    0x80773f8,%eax
mov    (%eax),%ebx
cmpb   $0x0,(%ebx)
je     804edf8 <fchmod@plt+0x4998>
movl   $0x5,0x8(%esp)
movl   $0x806b474,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%eax),%edx
jmp    804eda8 <fchmod@plt+0x4948>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b469,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ebx
jmp    804edbf <fchmod@plt+0x495f>
movl   $0x5,0x8(%esp)
movl   $0x806b44f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8068500 <fchmod@plt+0x1e0a0>
jmp    804ee50 <fchmod@plt+0x49f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   804ed90 <fchmod@plt+0x4930>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804ed90 <fchmod@plt+0x4930>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80773f8,%edx
xor    %eax,%eax
cmp    0x4c(%edx),%edx
je     804eec2 <fchmod@plt+0x4a62>
sub    $0x1c,%esp
call   804ee70 <fchmod@plt+0x4a10>
mov    0x80773f8,%eax
mov    0x50(%eax),%eax
mov    %eax,(%esp)
call   8059570 <fchmod@plt+0xf110>
call   806aac0 <fchmod@plt+0x20660>
add    $0x1c,%esp
mov    $0x1,%eax
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
movl   $0x14,(%esp)
mov    %ebx,0x1c(%esp)
mov    0x30(%esp),%ebx
mov    %esi,0x20(%esp)
mov    0x3c(%esp),%esi
mov    %edi,0x24(%esp)
mov    0x34(%esp),%edi
mov    %ebp,0x28(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80662b0 <fchmod@plt+0x1be50>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
testb  $0x4,0x8077416
mov    %eax,0x0(%ebp)
jne    804ef29 <fchmod@plt+0x4ac9>
test   %esi,%esi
jne    804ef90 <fchmod@plt+0x4b30>
mov    0x38(%esp),%edx
movl   $0x0,0x10(%ebp)
cmpb   $0x0,(%edx)
je     804ef78 <fchmod@plt+0x4b18>
mov    0x80773f8,%eax
movl   $0x0,0xc(%ebp)
mov    0x4(%eax),%ecx
movl   $0x1,0x4(%ebp)
mov    %ecx,0x8(%ebp)
movb   $0x0,(%edx)
mov    %ebp,0xc(%eax)
mov    %ebp,0x4(%eax)
mov    %ebp,%eax
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
movl   $0x0,0x8(%ebp)
mov    %edi,0xc(%ebp)
mov    %ebp,0x8(%edi)
add    $0x1,%eax
mov    %eax,0x4(%ebp)
jmp    804ef5b <fchmod@plt+0x4afb>
cmpb   $0xd,-0x1(%ebx,%esi,1)
jne    804ef29 <fchmod@plt+0x4ac9>
movb   $0x0,-0x1(%eax,%esi,1)
jmp    804ef29 <fchmod@plt+0x4ac9>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x8077288,%ebx
mov    0xb0(%esp),%esi
mov    0xb4(%esp),%ebp
cmp    $0xffffffff,%ebx
je     804f0a1 <fchmod@plt+0x4c41>
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebp,(%esp)
mov    %eax,%edi
call   8049fc0 <strlen@plt>
add    %eax,%edi
lea    0x2(%ebx,%edi,1),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0x10(%esp)
lea    0x30(%esp),%esi
mov    %ebp,0x14(%esp)
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   804a440 <__sprintf_chk@plt>
jmp    804f052 <fchmod@plt+0x4bf2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%ebx
je     804f07e <fchmod@plt+0x4c1e>
mov    0x2c(%esp),%eax
add    $0x1,%ebx
mov    %ebx,0x10(%esp)
movl   $0x806b483,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
add    %edi,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a440 <__sprintf_chk@plt>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
jne    804f020 <fchmod@plt+0x4bc0>
mov    0x2c(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x2c(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,(%esp)
call   8066210 <fchmod@plt+0x1bdb0>
mov    %eax,%ebx
mov    %eax,0x8077288
jmp    804efc7 <fchmod@plt+0x4b67>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x202c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x201c(%esp)
xor    %eax,%eax
mov    0x2040(%esp),%esi
lea    0x1c(%esp),%edi
mov    0x2044(%esp),%ebp
mov    %esi,0xc(%esp)
movl   $0x2000,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049e60 <fread@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f130 <fchmod@plt+0x4cd0>
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049e10 <fwrite@plt>
cmp    %eax,%ebx
jbe    804f0eb <fchmod@plt+0x4c8b>
mov    $0xfffffffe,%ebx
jmp    804f15f <fchmod@plt+0x4cff>
mov    %esi,(%esp)
mov    $0xffffffff,%ebx
call   8049c10 <ferror@plt>
test   %eax,%eax
jne    804f15f <fchmod@plt+0x4cff>
mov    %ebp,0xc(%esp)
xor    %ebx,%ebx
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8049e10 <fwrite@plt>
mov    %esi,(%esp)
call   8049c40 <fclose@plt>
mov    %ebp,(%esp)
cmp    $0xffffffff,%eax
mov    $0xffffffff,%eax
cmove  %eax,%ebx
call   8049c40 <fclose@plt>
cmp    $0xffffffff,%eax
mov    $0xfffffffe,%eax
cmove  %eax,%ebx
mov    0x201c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    804f1a2 <fchmod@plt+0x4d42>
add    $0x202c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049cc0 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
cmpb   $0x7e,(%ecx)
je     804f1e0 <fchmod@plt+0x4d80>
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
add    $0x2c,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ecx),%eax
test   %al,%al
je     804f2e0 <fchmod@plt+0x4e80>
cmp    $0x2f,%al
mov    $0x1,%ebx
setne  %dl
test   %dl,%dl
lea    0x2(%ecx),%eax
jne    804f20d <fchmod@plt+0x4dad>
jmp    804f2e0 <fchmod@plt+0x4e80>
lea    0x0(%esi),%esi
cmp    $0x2f,%dl
je     804f21c <fchmod@plt+0x4dbc>
movzbl (%eax),%edx
add    $0x1,%ebx
mov    %eax,%esi
add    $0x1,%eax
test   %dl,%dl
jne    804f208 <fchmod@plt+0x4da8>
cmp    $0x1,%ebx
je     804f2e3 <fchmod@plt+0x4e83>
lea    0x1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    %eax,%edi
movb   $0x0,(%eax,%ebx,1)
lea    0x1(%eax),%ebp
lea    0x0(%esi),%esi
call   8049ca0 <getpwent@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f308 <fchmod@plt+0x4ea8>
mov    %ebp,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    804f248 <fchmod@plt+0x4de8>
call   804a220 <endpwent@plt>
mov    0x14(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%edi
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049fc0 <strlen@plt>
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a440 <__sprintf_chk@plt>
mov    %edi,(%esp)
call   8049be0 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%esi
call   8066960 <fchmod@plt+0x1c500>
mov    0x8077398,%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%edi
jmp    804f27f <fchmod@plt+0x4e1f>
lea    0x0(%esi,%eiz,1),%esi
call   804a220 <endpwent@plt>
lea    0x0(%esi),%esi
jmp    804f27f <fchmod@plt+0x4e1f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%ebx
test   %ebx,%ebx
je     804f63f <fchmod@plt+0x51df>
movl   $0x1001,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x1001,0x4(%esp)
mov    %eax,0x18(%esp)
jmp    804f379 <fchmod@plt+0x4f19>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8070334,(%esp)
call   8049c70 <chdir@plt>
cmp    $0xffffffff,%eax
je     804f568 <fchmod@plt+0x5108>
mov    0x18(%esp),%eax
movl   $0x1001,0x4(%esp)
mov    %eax,(%esp)
call   8049fa0 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804f358 <fchmod@plt+0x4ef8>
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    0x18(%esp),%esi
cmpb   $0x2f,(%esi)
jne    804f538 <fchmod@plt+0x50d8>
cmpb   $0x0,0x1(%esi)
jne    804f538 <fchmod@plt+0x50d8>
mov    %ebx,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
lea    0x20(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x1c(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804f3e9 <fchmod@plt+0x4f89>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804f5c0 <fchmod@plt+0x5160>
mov    0x1c(%esp),%ebx
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804a200 <strrchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f630 <fchmod@plt+0x51d0>
lea    0x1(%esi),%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x1c(%esp),%edi
mov    %eax,%ebx
sub    %edi,%esi
add    $0x1,%esi
mov    %esi,0x4(%esp)
lea    0x1c(%esp),%esi
mov    %esi,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049c70 <chdir@plt>
cmp    $0xffffffff,%eax
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
je     804f598 <fchmod@plt+0x5138>
call   8049be0 <free@plt>
movl   $0x1001,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x1001,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049fa0 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804f620 <fchmod@plt+0x51c0>
mov    %esi,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    0x1c(%esp),%esi
cmpb   $0x2f,(%esi)
je     804f5b0 <fchmod@plt+0x5150>
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
add    $0x2,%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
call   8049fc0 <strlen@plt>
movw   $0x2f,(%esi,%eax,1)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049c70 <chdir@plt>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebp,%eax
test   %al,%al
jne    804f51c <fchmod@plt+0x50bc>
mov    0x1c(%esp),%esi
test   %esi,%esi
je     804f51c <fchmod@plt+0x50bc>
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049e40 <strcat@plt>
test   %ebx,%ebx
je     804f528 <fchmod@plt+0x50c8>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
add    $0x2,%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esp)
mov    %eax,%esi
mov    %eax,0x18(%esp)
call   8049fc0 <strlen@plt>
movw   $0x2f,(%esi,%eax,1)
jmp    804f3ac <fchmod@plt+0x4f4c>
mov    0x18(%esp),%eax
test   %eax,%eax
jne    804f389 <fchmod@plt+0x4f29>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x18(%esp)
jmp    804f3ac <fchmod@plt+0x4f4c>
lea    0x0(%esi,%eiz,1),%esi
call   8049be0 <free@plt>
movl   $0x0,0x1c(%esp)
jmp    804f4dc <fchmod@plt+0x507c>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%esi)
je     804f4c4 <fchmod@plt+0x5064>
jmp    804f499 <fchmod@plt+0x5039>
nop
mov    0x1c(%esp),%edi
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
cmpb   $0x2f,-0x1(%edi,%eax,1)
je     804f5fa <fchmod@plt+0x519a>
add    $0x2,%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
call   8049fc0 <strlen@plt>
movw   $0x2f,(%ebx,%eax,1)
mov    0x1c(%esp),%edi
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   804a200 <strrchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f646 <fchmod@plt+0x51e6>
mov    $0x1,%ebp
xor    %ebx,%ebx
jmp    804f422 <fchmod@plt+0x4fc2>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebp
jmp    804f4c4 <fchmod@plt+0x5064>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    804f4dc <fchmod@plt+0x507c>
xor    %eax,%eax
jmp    804f52c <fchmod@plt+0x50cc>
mov    %edi,%ebx
mov    $0x1,%ebp
jmp    804f632 <fchmod@plt+0x51d2>
nop
mov    0x80773d4,%eax
test   %eax,%eax
je     804f69d <fchmod@plt+0x523d>
push   %ebx
sub    $0x18,%esp
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%ebx
je     804f67a <fchmod@plt+0x521a>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
je     804f6a0 <fchmod@plt+0x5240>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x80773d4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773d4
00
add    $0x18,%esp
pop    %ebx
repz ret
nop
mov    0x80773d4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebx,0x80773d4
jmp    804f699 <fchmod@plt+0x5239>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x80773d0,%edx
mov    %esi,0x20(%esp)
xor    %esi,%esi
mov    %edi,0x24(%esp)
mov    0x34(%esp),%edi
mov    %ebx,0x1c(%esp)
test   %edx,%edx
mov    %ebp,0x28(%esp)
je     804f726 <fchmod@plt+0x52c6>
mov    0x30(%esp),%eax
mov    %edi,%esi
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%ebx
je     804f726 <fchmod@plt+0x52c6>
mov    0x80773cc,%esi
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   8049ad0 <strstr@plt>
mov    %edi,%edx
mov    %eax,%ebp
xor    %eax,%eax
test   %dl,%dl
jne    804f740 <fchmod@plt+0x52e0>
cmp    %ebx,%ebp
je     804f750 <fchmod@plt+0x52f0>
cmp    %esi,%eax
setne  %al
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    %esi,%eax
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049ad0 <strstr@plt>
cmp    %ebx,%ebp
jne    804f717 <fchmod@plt+0x52b7>
xor    %esi,%esi
jmp    804f71e <fchmod@plt+0x52be>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x80773d0,%eax
test   %eax,%eax
je     804f78d <fchmod@plt+0x532d>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,0x80773cc
je     804f7c8 <fchmod@plt+0x5368>
mov    %eax,(%esp)
call   8049c70 <chdir@plt>
cmp    $0xffffffff,%eax
je     804f790 <fchmod@plt+0x5330>
add    $0x1c,%esp
repz ret
nop
mov    0x80773cc,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80773d0,%eax
movl   $0x0,0x80773cc
00
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773d0
00
add    $0x1c,%esp
jmp    804f78d <fchmod@plt+0x532d>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804f795 <fchmod@plt+0x5335>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%ebx
je     804f809 <fchmod@plt+0x53a9>
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a110 <access@plt>
test   %eax,%eax
jne    804f810 <fchmod@plt+0x53b0>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
jne    804f810 <fchmod@plt+0x53b0>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049be0 <free@plt>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
jmp    804f830 <fchmod@plt+0x53d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x806b488,(%esp)
call   8049ea0 <getenv@plt>
test   %eax,%eax
je     804f8e0 <fchmod@plt+0x5480>
mov    %eax,(%esp)
call   804f7d0 <fchmod@plt+0x5370>
test   %eax,%eax
mov    %eax,%ebx
je     804f8e0 <fchmod@plt+0x5480>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
add    $0xc,%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8049fc0 <strlen@plt>
add    %ebx,%eax
movl   $0x6f6e616e,(%eax)
movl   $0x5858582e,0x4(%eax)
movl   $0x585858,0x8(%eax)
movl   $0x0,(%esp)
call   804a370 <umask@plt>
movl   $0x3f,(%esp)
mov    %eax,%esi
call   804a370 <umask@plt>
mov    %ebx,(%esp)
call   8049eb0 <mkstemp64@plt>
cmp    $0xffffffff,%eax
je     804f918 <fchmod@plt+0x54b8>
movl   $0x806b49a,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
mov    0x20(%esp),%edx
mov    %eax,(%edx)
mov    %esi,(%esp)
call   804a370 <umask@plt>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
movl   $0x806b48f,(%esp)
call   804f7d0 <fchmod@plt+0x5370>
test   %eax,%eax
mov    %eax,%ebx
jne    804f85b <fchmod@plt+0x53fb>
movl   $0x806b494,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%ebx
jmp    804f85b <fchmod@plt+0x53fb>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049be0 <free@plt>
jmp    804f8cf <fchmod@plt+0x546f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0xec,%esp
mov    %edi,0xe4(%esp)
mov    0xf0(%esp),%edi
mov    %ebx,0xdc(%esp)
mov    %esi,0xe0(%esp)
lea    0x10(%esp),%esi
mov    %ebp,0xe8(%esp)
mov    0xf4(%esp),%ebp
mov    %edi,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%ebx
je     804fa91 <fchmod@plt+0x5631>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804fa70 <fchmod@plt+0x5610>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804faa8 <fchmod@plt+0x5648>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %dl
cmp    $0x2000,%eax
je     804fbb8 <fchmod@plt+0x5758>
test   %dl,%dl
jne    804fc00 <fchmod@plt+0x57a0>
cmp    $0x6000,%eax
je     804fbc8 <fchmod@plt+0x5768>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     804fc20 <fchmod@plt+0x57c0>
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
mov    0xf8(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
je     804fb00 <fchmod@plt+0x56a0>
movl   $0x5,0x8(%esp)
movl   $0x806b49e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    %esi,%eax
mov    0xdc(%esp),%ebx
mov    0xe0(%esp),%esi
mov    0xe4(%esp),%edi
mov    0xe8(%esp),%ebp
add    $0xec,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804f993 <fchmod@plt+0x5533>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%ebx
jmp    804f993 <fchmod@plt+0x5533>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
jne    804fb50 <fchmod@plt+0x56f0>
mov    %ebp,%eax
test   %al,%al
movl   $0x5,0x8(%esp)
je     804fb88 <fchmod@plt+0x5728>
movl   $0x806b4ab,0x4(%esp)
mov    $0xfffffffe,%esi
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    804fa47 <fchmod@plt+0x55e7>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049c80 <dcgettext@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
mov    %esi,(%esp)
call   804a3d0 <close@plt>
jmp    804fa3f <fchmod@plt+0x55df>
nop
movl   $0x5,0x8(%esp)
xor    %esi,%esi
movl   $0x806b49e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
jmp    804fa47 <fchmod@plt+0x55e7>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b4b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804fa47 <fchmod@plt+0x55e7>
lea    0x0(%esi),%esi
test   %dl,%dl
lea    0x0(%esi),%esi
jne    804fc00 <fchmod@plt+0x57a0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b4d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
mov    $0xffffffff,%esi
mov    %edi,0x4(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804fa47 <fchmod@plt+0x55e7>
nop
movl   $0x5,0x8(%esp)
movl   $0x806b4c3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    804fbe4 <fchmod@plt+0x5784>
xchg   %ax,%ax
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    804fa47 <fchmod@plt+0x55e7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xdc,%esp
testb  $0x1,0x8077415
mov    %ebx,0xd0(%esp)
mov    $0x1,%ebx
mov    %esi,0xd4(%esp)
mov    %edi,0xd8(%esp)
je     804fcb8 <fchmod@plt+0x5858>
mov    %ebx,%eax
mov    0xd4(%esp),%esi
mov    0xd0(%esp),%ebx
mov    0xd8(%esp),%edi
add    $0xdc,%esp
ret
nop
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%esi
je     804fd70 <fchmod@plt+0x5910>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804fd48 <fchmod@plt+0x58e8>
movl   $0x1b6,0x8(%esp)
movl   $0x441,0x4(%esp)
mov    %esi,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     804fd30 <fchmod@plt+0x58d0>
movl   $0x806f1c3,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
test   %eax,%eax
je     804fd30 <fchmod@plt+0x58d0>
mov    %eax,(%esp)
mov    $0x1,%ebx
call   8049c40 <fclose@plt>
jmp    804fd32 <fchmod@plt+0x58d2>
xor    %ebx,%ebx
mov    %edi,(%esp)
call   804a3d0 <close@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    804fc99 <fchmod@plt+0x5839>
nop
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xe0(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804fcee <fchmod@plt+0x588e>
mov    0xe0(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
jmp    804fcee <fchmod@plt+0x588e>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x80773f8,%eax
mov    0x7c(%esp),%edx
mov    0x80(%esp),%ecx
movb   $0x0,0x4f(%esp)
mov    0x10(%eax),%ebp
movl   $0x80,(%esp)
mov    %edx,0x38(%esp)
mov    %ecx,0x3c(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x0,0x38(%esp)
mov    %eax,%ebx
movb   $0x0,(%eax)
jne    8050208 <fchmod@plt+0x5da8>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
cmp    0x4(%eax),%edx
je     8050225 <fchmod@plt+0x5dc5>
mov    0xc(%edx),%ebp
movl   $0x0,0x34(%esp)
xor    %edi,%edi
xor    %esi,%esi
movb   $0x0,0x33(%esp)
movl   $0x80,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    0x70(%esp),%edx
mov    %edx,(%esp)
call   8049ce0 <_IO_getc@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edx
je     804ff08 <fchmod@plt+0x5aa8>
cmp    $0xa,%dl
mov    %dl,0x33(%esp)
je     804fe70 <fchmod@plt+0x5a10>
testb  $0x4,0x8077416
jne    804fe50 <fchmod@plt+0x59f0>
mov    0x34(%esp),%eax
test   %eax,%eax
jne    804fe41 <fchmod@plt+0x59e1>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    804fe50 <fchmod@plt+0x59f0>
test   %edi,%edi
je     804fe50 <fchmod@plt+0x59f0>
cmpb   $0xd,-0x1(%ebx,%edi,1)
je     8050230 <fchmod@plt+0x5dd0>
mov    0x28(%esp),%eax
add    $0x1,%esi
sub    $0x1,%eax
cmp    %eax,%edi
jae    804fee0 <fchmod@plt+0x5a80>
mov    %dl,(%ebx,%edi,1)
add    $0x1,%edi
movb   $0x0,(%ebx,%edi,1)
jmp    804fe08 <fchmod@plt+0x59a8>
xchg   %ax,%ax
testb  $0x4,0x8077416
jne    804fe91 <fchmod@plt+0x5a31>
mov    0x34(%esp),%eax
test   %eax,%eax
jne    804fec0 <fchmod@plt+0x5a60>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804fec0 <fchmod@plt+0x5a60>
movl   $0x0,0x34(%esp)
lea    0x4f(%esp),%eax
xor    %edi,%edi
mov    %esi,0xc(%esp)
xor    %esi,%esi
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   804eed0 <fchmod@plt+0x4a70>
addl   $0x1,0x2c(%esp)
movb   $0x0,(%ebx)
mov    %eax,%ebp
jmp    804fe08 <fchmod@plt+0x59a8>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     804fe91 <fchmod@plt+0x5a31>
cmpb   $0xd,-0x1(%ebx,%edi,1)
jne    804fe91 <fchmod@plt+0x5a31>
mov    0x34(%esp),%eax
and    $0xfffffffd,%eax
cmp    $0x1,%eax
adcl   $0x0,0x34(%esp)
jmp    804fe91 <fchmod@plt+0x5a31>
lea    0x0(%esi,%eiz,1),%esi
subl   $0xffffff80,0x28(%esp)
mov    0x28(%esp),%ecx
mov    %ebx,(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x20(%esp),%edx
mov    %eax,%ebx
jmp    804fe62 <fchmod@plt+0x5a02>
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%ecx
mov    %ecx,(%esp)
call   8049c10 <ferror@plt>
test   %eax,%eax
jne    80501f0 <fchmod@plt+0x5d90>
mov    0x70(%esp),%edx
mov    %edx,(%esp)
call   8049c40 <fclose@plt>
cmpb   $0x0,0x3c(%esp)
jne    8050178 <fchmod@plt+0x5d18>
mov    $0x1,%edi
test   %esi,%esi
jne    8050068 <fchmod@plt+0x5c08>
testb  $0x4,0x8077416
je     8050050 <fchmod@plt+0x5bf0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
test   %ebp,%ebp
je     80503a2 <fchmod@plt+0x5f42>
mov    0x2c(%esp),%ebx
test   %ebx,%ebx
je     804ff8b <fchmod@plt+0x5b2b>
test   %esi,%esi
jne    80500a0 <fchmod@plt+0x5c40>
test   %ebp,%ebp
mov    0x80773f8,%eax
je     8050385 <fchmod@plt+0x5f25>
mov    0x10(%eax),%eax
mov    %eax,0x8(%ebp)
mov    %ebp,0xc(%eax)
mov    %eax,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%esi
mov    0x8(%esi),%eax
mov    0x14(%esi),%ebx
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
mov    0x8077414,%ecx
add    %eax,%ebx
test   %ecx,%ecx
mov    %ebx,0x14(%esi)
mov    0x80773f8,%ebx
js     804ffc9 <fchmod@plt+0x5b69>
mov    0x8(%ebx),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8050288 <fchmod@plt+0x5e28>
call   8066ae0 <fchmod@plt+0x1c680>
cmpb   $0x0,0x38(%esp)
mov    %eax,0x1c(%ebx)
jne    80501a8 <fchmod@plt+0x5d48>
cmpl   $0x3,0x34(%esp)
je     80501bf <fchmod@plt+0x5d5f>
cmpl   $0x2,0x34(%esp)
je     80502a8 <fchmod@plt+0x5e48>
cmpl   $0x1,0x34(%esp)
je     80502e0 <fchmod@plt+0x5e80>
mov    0x2c(%esp),%edx
mov    %edi,%eax
test   %al,%al
movl   $0x5,0x10(%esp)
mov    %edx,0xc(%esp)
jne    8050370 <fchmod@plt+0x5f10>
movl   $0x806b99c,0x8(%esp)
movl   $0x806b9cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a3c0 <dcngettext@plt>
mov    0x2c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0xd,0x33(%esp)
jne    804ff4d <fchmod@plt+0x5aed>
movb   $0xd,(%ebx)
mov    $0x1,%si
movb   $0x0,0x1(%ebx)
xchg   %ax,%ax
testb  $0x4,0x8077416
jne    805007c <fchmod@plt+0x5c1c>
cmpb   $0xd,-0x1(%ebx,%esi,1)
je     805034a <fchmod@plt+0x5eea>
lea    0x4f(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   804eed0 <fchmod@plt+0x4a70>
addl   $0x1,0x2c(%esp)
mov    %eax,%ebp
jmp    804ff4d <fchmod@plt+0x5aed>
mov    0x80773f8,%ecx
mov    0x10(%ecx),%ebx
mov    (%ebx),%edx
mov    %ecx,0x24(%esp)
mov    %edx,(%esp)
mov    %edx,0x20(%esp)
call   8049fc0 <strlen@plt>
mov    0x20(%esp),%edx
cmpl   $0x1,0x2c(%esp)
mov    0x24(%esp),%ecx
mov    %eax,0x28(%esp)
je     8050364 <fchmod@plt+0x5f04>
mov    %esi,0x18(%ecx)
mov    0x28(%esp),%ecx
mov    %edx,(%esp)
lea    0x1(%esi,%ecx,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x28(%esp),%ecx
add    $0x1,%ecx
mov    %eax,(%ebx)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   8049bb0 <memmove@plt>
mov    %esi,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x80773f8,%eax
cmp    %ebp,0x4(%eax)
je     80503bb <fchmod@plt+0x5f5b>
cmp    %ebp,0xc(%eax)
je     80503d1 <fchmod@plt+0x5f71>
cmp    %ebp,0x8(%eax)
je     80503c6 <fchmod@plt+0x5f66>
mov    0xc(%ebp),%ebp
test   %ebp,%ebp
je     8050385 <fchmod@plt+0x5f25>
mov    0x8(%ebp),%edx
test   %edx,%edx
je     804ff7a <fchmod@plt+0x5b1a>
mov    %edx,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%eax
jmp    804ff7a <fchmod@plt+0x5b1a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x74(%esp),%edi
test   %edi,%edi
jle    804ff33 <fchmod@plt+0x5ad3>
mov    0x74(%esp),%ecx
mov    %ecx,(%esp)
call   804a3d0 <close@plt>
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   804fc70 <fchmod@plt+0x5810>
test   %eax,%eax
setne  %dl
mov    %edx,%edi
jmp    804ff38 <fchmod@plt+0x5ad8>
movl   $0x8,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
cmpl   $0x3,0x34(%esp)
jne    804ffe7 <fchmod@plt+0x5b87>
mov    0x2c(%esp),%edx
mov    %edi,%eax
test   %al,%al
movl   $0x5,0x10(%esp)
mov    %edx,0xc(%esp)
je     8050320 <fchmod@plt+0x5ec0>
movl   $0x806b6ac,0x8(%esp)
movl   $0x806b6e0,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
xchg   %ax,%ax
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
jmp    804ff1c <fchmod@plt+0x5abc>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%esp)
call   8062720 <fchmod@plt+0x182c0>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
cmp    0x4(%eax),%edx
jne    804fde4 <fchmod@plt+0x5984>
movb   $0x1,0x4f(%esp)
jmp    804fde7 <fchmod@plt+0x5987>
nop
mov    0x34(%esp),%eax
lea    0x4f(%esp),%ecx
mov    $0x1,%edi
mov    %esi,0xc(%esp)
mov    $0x1,%esi
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
add    $0x2,%eax
cmpl   $0x1,0x34(%esp)
cmova  0x34(%esp),%eax
mov    %ebx,(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x34(%esp)
call   804eed0 <fchmod@plt+0x4a70>
mov    0x20(%esp),%edx
addl   $0x1,0x2c(%esp)
movb   $0x0,0x1(%ebx)
mov    %dl,(%ebx)
mov    %eax,%ebp
jmp    804fe08 <fchmod@plt+0x59a8>
lea    0x0(%esi,%eiz,1),%esi
call   8066b20 <fchmod@plt+0x1c6c0>
mov    0x80773f8,%ebx
mov    0x8(%ebx),%eax
movl   $0x0,0x18(%ebx)
mov    %eax,0x10(%ebx)
jmp    804ffc9 <fchmod@plt+0x5b69>
lea    0x0(%esi),%esi
mov    0x80773f8,%eax
mov    0x2c(%esp),%edx
movl   $0x2,0x30(%eax)
mov    %edi,%eax
test   %al,%al
movl   $0x5,0x10(%esp)
mov    %edx,0xc(%esp)
je     8050335 <fchmod@plt+0x5ed5>
movl   $0x806b7bc,0x8(%esp)
movl   $0x806b7e8,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
nop
mov    0x80773f8,%eax
mov    0x2c(%esp),%edx
movl   $0x1,0x30(%eax)
mov    %edi,%eax
test   %al,%al
movl   $0x5,0x10(%esp)
mov    %edx,0xc(%esp)
je     805038d <fchmod@plt+0x5f2d>
movl   $0x806b8ac,0x8(%esp)
movl   $0x806b8d8,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b714,0x8(%esp)
movl   $0x806b768,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
movl   $0x806b814,0x8(%esp)
movl   $0x806b860,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
mov    0x34(%esp),%eax
add    $0x2,%eax
cmpl   $0x1,0x34(%esp)
cmova  0x34(%esp),%eax
mov    %eax,0x34(%esp)
jmp    805007c <fchmod@plt+0x5c1c>
add    %esi,0x18(%ecx)
jmp    80500d5 <fchmod@plt+0x5c75>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b4f0,0x8(%esp)
movl   $0x806b4ff,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
mov    0x10(%eax),%eax
jmp    804ff83 <fchmod@plt+0x5b23>
movl   $0x806b904,0x8(%esp)
movl   $0x806b950,0x4(%esp)
jmp    8050027 <fchmod@plt+0x5bc7>
movl   $0x0,0x4(%esp)
movl   $0x806e126,(%esp)
call   8050490 <fchmod@plt+0x6030>
jmp    804ff5d <fchmod@plt+0x5afd>
mov    0x10(%eax),%edx
mov    %edx,0x4(%eax)
jmp    8050139 <fchmod@plt+0x5cd9>
mov    0x10(%eax),%edx
mov    %edx,0x8(%eax)
jmp    805014b <fchmod@plt+0x5ceb>
mov    0x10(%eax),%edx
mov    %edx,0xc(%eax)
jmp    8050142 <fchmod@plt+0x5ce2>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%ebx
cmpb   $0x0,(%ebx)
jne    8050428 <fchmod@plt+0x5fc8>
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
call   804ec20 <fchmod@plt+0x47c0>
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0x10(%eax)
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804f930 <fchmod@plt+0x54d0>
mov    %eax,%esi
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
call   804ec20 <fchmod@plt+0x47c0>
test   %esi,%esi
jle    8050403 <fchmod@plt+0x5fa3>
mov    0x2c(%esp),%eax
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804fd90 <fchmod@plt+0x5930>
jmp    8050403 <fchmod@plt+0x5fa3>
jmp    8050490 <fchmod@plt+0x6030>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x5c,%esp
mov    0x80773f8,%eax
mov    %ebx,0x4c(%esp)
mov    0x60(%esp),%ebx
mov    %edi,0x54(%esp)
mov    0x64(%esp),%edi
mov    %esi,0x50(%esp)
test   %eax,%eax
mov    %ebp,0x58(%esp)
je     8050638 <fchmod@plt+0x61d8>
mov    0x8077414,%eax
shr    $0xe,%eax
and    $0x1,%eax
mov    %eax,%esi
movzbl %al,%ebp
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
jne    8050600 <fchmod@plt+0x61a0>
cmpb   $0x0,(%ebx)
mov    $0xfffffffe,%edx
movb   $0x1,0x23(%esp)
jne    80505d8 <fchmod@plt+0x6178>
mov    %esi,%eax
xor    %ecx,%ecx
test   %al,%al
jne    8050588 <fchmod@plt+0x6128>
test   %edx,%edx
jle    805053f <fchmod@plt+0x60df>
mov    0x3c(%esp),%eax
and    $0xff,%edi
mov    %edi,0xc(%esp)
mov    %ebp,0x10(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %cl,0x28(%esp)
call   804fd90 <fchmod@plt+0x5930>
mov    0x80773f8,%edi
movzbl 0x28(%esp),%ecx
mov    0x34(%edi),%eax
test   %eax,%eax
je     8050648 <fchmod@plt+0x61e8>
test   %cl,%cl
je     8050568 <fchmod@plt+0x6108>
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0x10(%eax)
call   804e050 <fchmod@plt+0x3bf0>
jmp    805056e <fchmod@plt+0x610e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
jne    805055c <fchmod@plt+0x60fc>
mov    0x4c(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
add    $0x5c,%esp
ret
lea    0x0(%esi),%esi
mov    %edx,0x2c(%esp)
mov    %cl,0x28(%esp)
call   804ed00 <fchmod@plt+0x48a0>
mov    0x2c(%esp),%edx
cmpb   $0x0,0x23(%esp)
movzbl 0x28(%esp),%ecx
je     80504ff <fchmod@plt+0x609f>
mov    0x80773f8,%ecx
mov    %ebx,0x4(%esp)
mov    (%ecx),%eax
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %eax,(%ecx)
mov    $0x1,%ecx
jmp    80504ff <fchmod@plt+0x609f>
lea    0x0(%esi),%esi
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804f930 <fchmod@plt+0x54d0>
cmp    $0xffffffff,%eax
mov    %eax,%edx
setne  0x23(%esp)
jmp    80504f3 <fchmod@plt+0x6093>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    0x80773d0,%ebx
movl   $0x806b9fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    805056e <fchmod@plt+0x610e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%esi
mov    $0x1,%ebp
jmp    80504c8 <fchmod@plt+0x6068>
nop
movl   $0x60,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x34(%edi)
mov    0x80773f8,%eax
mov    0x34(%eax),%eax
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   804a360 <__xstat64@plt>
movzbl 0x28(%esp),%ecx
jmp    805053f <fchmod@plt+0x60df>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
movl   $0x806e126,0x4(%esp)
movzbl 0x90(%esp),%esi
lea    0x5a(%esp),%ebp
movl   $0x0,(%esp)
lea    0x59(%esp),%edi
call   8066920 <fchmod@plt+0x1c4c0>
movb   $0x0,0x59(%esp)
movb   $0x0,0x5a(%esp)
movb   $0x0,0x5b(%esp)
movl   $0x40,0x80777bc
00
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0xc(%eax),%edx
mov    %edx,0x40(%esp)
mov    0x18(%eax),%edx
mov    0x20(%eax),%eax
mov    %edx,0x48(%esp)
mov    %eax,0x44(%esp)
mov    0x8077414,%eax
lea    0x0(%esi),%esi
mov    %esi,%edx
test   %dl,%dl
movl   $0x5,0x8(%esp)
je     805082d <fchmod@plt+0x63cd>
test   $0x40,%ah
je     8050878 <fchmod@plt+0x6418>
movl   $0x806ba24,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x80773d0,%ecx
test   %ecx,%ecx
je     8050854 <fchmod@plt+0x63f4>
cmpb   $0x2e,(%ecx)
jne    8050736 <fchmod@plt+0x62d6>
cmpb   $0x0,0x1(%ecx)
mov    $0x806b50d,%edx
cmove  %edx,%ecx
mov    %esi,%edx
cmp    $0x1,%dl
sbb    %edx,%edx
and    $0xffffffc0,%edx
sub    $0xffffff80,%edx
mov    %ecx,0x24(%esp)
mov    %eax,0x20(%esp)
movl   $0x806a7c0,0x1c(%esp)
movl   $0x0,0x18(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
cmp    $0xffffffff,%eax
mov    %eax,0x5c(%esp)
je     8050b48 <fchmod@plt+0x66e8>
cmp    $0xfffffffe,%eax
je     8050860 <fchmod@plt+0x6400>
mov    0x80773d8,%eax
cmpb   $0xa,(%eax)
je     8050860 <fchmod@plt+0x6400>
mov    0x80773f8,%edx
mov    0x1c(%edx),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x3c(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,%ebx
lea    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     8050801 <fchmod@plt+0x63a1>
movzwl 0x10(%eax),%eax
cmp    $0x13,%ax
je     80508b8 <fchmod@plt+0x6458>
cmp    $0x14,%ax
je     80508d8 <fchmod@plt+0x6478>
cmp    $0x15,%ax
je     8050a78 <fchmod@plt+0x6618>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     80508f6 <fchmod@plt+0x6496>
cmp    $0xfffffffe,%eax
je     80508e8 <fchmod@plt+0x6488>
mov    %esi,%edx
mov    0x8077414,%eax
test   %dl,%dl
movl   $0x5,0x8(%esp)
jne    80506fa <fchmod@plt+0x629a>
test   $0x40,%ah
je     8050898 <fchmod@plt+0x6438>
movl   $0x806ba50,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x80773d0,%ecx
test   %ecx,%ecx
jne    8050725 <fchmod@plt+0x62c5>
mov    $0x806b50d,%ecx
jmp    8050736 <fchmod@plt+0x62d6>
xchg   %ax,%ax
testb  $0x40,0x8077415
je     8050b48 <fchmod@plt+0x66e8>
mov    0x80773d8,%eax
jmp    80507a3 <fchmod@plt+0x6343>
nop
movl   $0x806b510,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    8050717 <fchmod@plt+0x62b7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b52e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    8050717 <fchmod@plt+0x62b7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077414,%eax
test   $0x1,%ah
jne    80506e8 <fchmod@plt+0x6288>
xor    $0x40,%ah
mov    %eax,0x8077414
jmp    80506e8 <fchmod@plt+0x6288>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    $0x1,%esi
mov    0x8077414,%eax
jmp    80506e8 <fchmod@plt+0x6288>
lea    0x0(%esi),%esi
mov    0x8077414,%eax
test   $0x40,%ah
je     80506e8 <fchmod@plt+0x6288>
mov    0x80773f8,%eax
movb   $0x0,0x4f(%esp)
cmpb   $0x0,0x25(%eax)
jne    8050ac4 <fchmod@plt+0x6664>
xor    %edi,%edi
testb  $0x40,0x8077415
je     8050b0c <fchmod@plt+0x66ac>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   80662e0 <fchmod@plt+0x1be80>
movl   $0x80773d8,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    %esi,%edx
test   %dl,%dl
je     80509a0 <fchmod@plt+0x6540>
testb  $0x40,0x8077415
jne    8050b78 <fchmod@plt+0x6718>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   80622a0 <fchmod@plt+0x17e40>
testb  $0x40,0x8077415
je     80509dc <fchmod@plt+0x657c>
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0x10(%eax)
call   804ed70 <fchmod@plt+0x4910>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   8053700 <fchmod@plt+0x92a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   80669c0 <fchmod@plt+0x1c560>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x80773d8
call   8050490 <fchmod@plt+0x6030>
testb  $0x40,0x8077415
jne    8050978 <fchmod@plt+0x6518>
mov    0x80773f8,%ebp
mov    %edi,%eax
test   %al,%al
mov    0x40(%esp),%edx
mov    0x8(%ebp),%edi
mov    0x4(%ebp),%esi
mov    (%edi),%eax
cmovne %esi,%edx
mov    %edx,0x40(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmp    %edi,%esi
mov    %eax,0x18(%ebp)
je     8050b98 <fchmod@plt+0x6738>
cmpb   $0x0,0x25(%ebp)
je     8050a38 <fchmod@plt+0x65d8>
cmpb   $0x0,0x5b(%esp)
jne    8050a38 <fchmod@plt+0x65d8>
cmpb   $0x0,0x4f(%esp)
je     8050bba <fchmod@plt+0x675a>
mov    0x10(%ebp),%eax
mov    0x48(%esp),%edx
sub    %edx,0x2c(%ebp)
mov    %eax,0x28(%ebp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%edx
add    %edx,0x20(%ebp)
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    %esi,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%eax
mov    0x40(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x3c(%esp),%edx
mov    %edx,0x1c(%eax)
call   80694c0 <fchmod@plt+0x1f060>
call   806a7c0 <fchmod@plt+0x20360>
jmp    8050980 <fchmod@plt+0x6520>
lea    0x0(%esi),%esi
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804cbe0 <fchmod@plt+0x2780>
test   %eax,%eax
je     8050816 <fchmod@plt+0x63b6>
mov    0x80773d8,%edx
mov    %eax,0x38(%esp)
mov    %edx,(%esp)
call   8049be0 <free@plt>
mov    0x38(%esp),%eax
movl   $0x0,0x5c(%esp)
movb   $0x0,0x4f(%esp)
mov    %eax,0x80773d8
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     805090a <fchmod@plt+0x64aa>
lea    0x5b(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x64(%esp),%edx
cmp    %edx,0x60(%esp)
sete   0x4f(%esp)
xor    %edi,%edi
testb  $0x40,0x8077415
jne    8050919 <fchmod@plt+0x64b9>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    0x10(%eax),%eax
mov    %edx,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    %eax,0x80773fc
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
cmp    %edx,0xc(%eax)
sete   %al
mov    %eax,%edi
jmp    8050919 <fchmod@plt+0x64b9>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8050980 <fchmod@plt+0x6520>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x806e126,(%esp)
call   8050490 <fchmod@plt+0x6030>
jmp    8050945 <fchmod@plt+0x64e5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x25(%ebp)
je     8050bae <fchmod@plt+0x674e>
mov    0x10(%ebp),%ecx
cmpb   $0x0,0x5b(%esp)
mov    %ecx,0x28(%ebp)
jne    8050bae <fchmod@plt+0x674e>
add    %eax,0x2c(%ebp)
add    0x48(%esp),%eax
mov    %eax,0x18(%ebp)
jmp    8050a38 <fchmod@plt+0x65d8>
sub    %eax,0x2c(%ebp)
jmp    8050a38 <fchmod@plt+0x65d8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8077414,%eax
test   $0x1000000,%eax
jne    8050c30 <fchmod@plt+0x67d0>
and    $0x4100,%eax
sub    $0x1c,%esp
cmp    $0x100,%eax
je     8050c00 <fchmod@plt+0x67a0>
movl   $0x0,(%esp)
call   8050680 <fchmod@plt+0x6220>
add    $0x1c,%esp
jmp    806aac0 <fchmod@plt+0x20660>
nop
movl   $0x5,0x8(%esp)
movl   $0x806ba7c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x1c,%esp
jmp    806aac0 <fchmod@plt+0x20660>
lea    0x0(%esi,%eiz,1),%esi
jmp    805a440 <fchmod@plt+0xffe0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
test   %ebx,%ebx
je     8050c69 <fchmod@plt+0x6809>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%esi,%ebx,4),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
sub    $0x1,%ebx
jne    8050c58 <fchmod@plt+0x67f8>
mov    %esi,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8049be0 <free@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x7c,%esp
mov    0x80(%esp),%eax
mov    %ebx,0x74(%esp)
mov    %esi,0x78(%esp)
xor    %esi,%esi
mov    %eax,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
movl   $0x3,(%esp)
mov    %eax,%ebx
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     8050cce <fchmod@plt+0x686e>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    %esi,%eax
mov    0x74(%esp),%ebx
mov    0x78(%esp),%esi
add    $0x7c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%edi
mov    0x58(%esp),%esi
mov    0x50(%esp),%ebx
movl   $0x0,0x2c(%esp)
movl   $0x0,(%edi)
sub    $0x1,%esi
add    $0x1,%ebx
nop
call   8049ca0 <getpwent@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8050de0 <fchmod@plt+0x6980>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
jne    8050d18 <fchmod@plt+0x68b8>
movl   $0x1,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
jne    8050d18 <fchmod@plt+0x68b8>
mov    (%edi),%eax
lea    0x4(,%eax,4),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,0x2c(%esp)
mov    (%edi),%eax
mov    0x2c(%esp),%edx
lea    (%edx,%eax,4),%ecx
mov    0x0(%ebp),%eax
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    $0x2,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %eax,(%ecx)
mov    0x0(%ebp),%eax
movl   $0x806b548,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    (%edi),%eax
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   804a440 <__sprintf_chk@plt>
addl   $0x1,(%edi)
call   8049ca0 <getpwent@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    8050d27 <fchmod@plt+0x68c7>
lea    0x0(%esi),%esi
call   804a220 <endpwent@plt>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8050e00 <fchmod@plt+0x69a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
movzbl 0x64(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %dl,0x2f(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x68(%esp),%edx
movl   $0x0,(%edx)
mov    %eax,0x3c(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x3c(%esp),%esi
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   804a200 <strrchr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8051048 <fchmod@plt+0x6be8>
lea    0x1(%eax),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movb   $0x0,0x1(%ebx)
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,%esi
call   804f1b0 <fchmod@plt+0x4d50>
mov    %ebx,(%esp)
mov    %eax,0x3c(%esp)
call   8049be0 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804a400 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8051065 <fchmod@plt+0x6c05>
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
movl   $0x0,0x28(%esp)
mov    %eax,0x24(%esp)
nop
mov    %ebp,(%esp)
call   804a2b0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%edi
je     8050fd8 <fchmod@plt+0x6b78>
mov    0x24(%esp),%eax
lea    0x13(%edi),%ebx
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
jne    8050ec0 <fchmod@plt+0x6a60>
cmpb   $0x2e,(%esi)
je     8050efc <fchmod@plt+0x6a9c>
cmpb   $0x2e,0x13(%edi)
je     8051000 <fchmod@plt+0x6ba0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8049fc0 <strlen@plt>
lea    0x1(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %ebx,0x14(%esp)
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    0x3c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   804a440 <__sprintf_chk@plt>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804f6c0 <fchmod@plt+0x5260>
cmpb   $0x0,0x2f(%esp)
mov    %al,0x2e(%esp)
je     8051028 <fchmod@plt+0x6bc8>
mov    %edi,(%esp)
call   8049be0 <free@plt>
cmpb   $0x0,0x2e(%esp)
jne    8050ec0 <fchmod@plt+0x6a60>
mov    0x68(%esp),%edx
mov    (%edx),%eax
lea    0x4(,%eax,4),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x68(%esp),%edx
mov    %eax,0x28(%esp)
mov    (%edx),%eax
mov    0x28(%esp),%edx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
lea    (%edx,%eax,4),%edi
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x68(%esp),%edx
mov    %eax,(%edi)
addl   $0x1,(%edx)
mov    %ebp,(%esp)
call   804a2b0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%edi
jne    8050ed2 <fchmod@plt+0x6a72>
nop
mov    %ebp,(%esp)
call   804a3e0 <closedir@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x28(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl 0x14(%edi),%eax
test   %al,%al
je     8050ec0 <fchmod@plt+0x6a60>
cmp    $0x2e,%al
jne    8050efc <fchmod@plt+0x6a9c>
cmpb   $0x0,0x15(%edi)
je     8050ec0 <fchmod@plt+0x6a60>
xchg   %ax,%ax
jmp    8050efc <fchmod@plt+0x6a9c>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8050c80 <fchmod@plt+0x6820>
test   %al,%al
jne    8050f6b <fchmod@plt+0x6b0b>
mov    %edi,(%esp)
call   8049be0 <free@plt>
jmp    8050ec0 <fchmod@plt+0x6a60>
lea    0x0(%esi),%esi
movl   $0x806b50d,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x3c(%esp)
jmp    8050e99 <fchmod@plt+0x6a39>
call   8049ee0 <beep@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x28(%esp)
jmp    8050ff4 <fchmod@plt+0x6b94>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%edx
lea    0x3c(%esp),%esi
mov    0x74(%esp),%ecx
mov    0x64(%esp),%edi
movl   $0x0,0x3c(%esp)
mov    (%edx),%ebx
movb   $0x0,(%ecx)
test   %ebx,%ebx
jne    8051140 <fchmod@plt+0x6ce0>
mov    0x60(%esp),%eax
and    $0xff,%edi
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8050e00 <fchmod@plt+0x69a0>
mov    %eax,%ebp
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x3c(%esp),%ebx
test   %ebx,%ebx
je     8051102 <fchmod@plt+0x6ca2>
mov    0x68(%esp),%edx
mov    (%edx),%edx
cmp    %eax,%edx
mov    %edx,0x20(%esp)
je     80511a0 <fchmod@plt+0x6d40>
call   8049ee0 <beep@plt>
mov    0x3c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8050c40 <fchmod@plt+0x67e0>
mov    0x74(%esp),%ecx
cmpb   $0x0,(%ecx)
jne    8051124 <fchmod@plt+0x6cc4>
call   *0x70(%esp)
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
mov    0x60(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
cmpb   $0x7e,(%eax)
jne    80510bc <fchmod@plt+0x6c5c>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
je     805116f <fchmod@plt+0x6d0f>
mov    0x60(%esp),%edx
add    %ebx,%edx
cmp    %edx,%eax
jb     80510bc <fchmod@plt+0x6c5c>
mov    0x60(%esp),%eax
lea    0x3c(%esp),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8050cf0 <fchmod@plt+0x6890>
test   %eax,%eax
mov    %eax,%ebp
jne    80510dc <fchmod@plt+0x6c7c>
mov    0x68(%esp),%edx
mov    (%edx),%ebx
jmp    80510bc <fchmod@plt+0x6c5c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
add    0x20(%esp),%eax
movl   $0x806c0c7,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804d860 <fchmod@plt+0x3400>
test   %eax,%eax
je     80515bb <fchmod@plt+0x715b>
sub    0x60(%esp),%eax
add    $0x1,%eax
mov    %eax,0x2c(%esp)
call   804d310 <fchmod@plt+0x2eb0>
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%edi
call   804d310 <fchmod@plt+0x2eb0>
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
xor    %edx,%edx
mov    %ebp,0x1c(%esp)
mov    %edx,%ebp
mov    %eax,%esi
nop
cmpl   $0x1,0x3c(%esp)
jbe    805127a <fchmod@plt+0x6e1a>
mov    $0x1,%ebx
jmp    8051219 <fchmod@plt+0x6db9>
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ebx,0x3c(%esp)
jbe    805127a <fchmod@plt+0x6e1a>
mov    0x1c(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%edx),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x1c(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%edx
mov    (%ecx,%ebx,4),%eax
mov    %edx,0x18(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x18(%esp),%edx
movb   $0x0,(%edi,%edx,1)
movb   $0x0,(%esi,%eax,1)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
je     8051210 <fchmod@plt+0x6db0>
cmp    %ebx,0x3c(%esp)
ja     80512ab <fchmod@plt+0x6e4b>
mov    0x1c(%esp),%edx
mov    (%edx),%eax
cmpb   $0x0,(%eax,%ebp,1)
je     80512ab <fchmod@plt+0x6e4b>
mov    0x60(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    %eax,%ebp
jmp    8051200 <fchmod@plt+0x6da0>
mov    %ebp,%edx
mov    0x1c(%esp),%ebp
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x18(%esp),%edx
mov    0x2c(%esp),%ebx
add    %edx,%ebx
lea    0x1(%ebx),%esi
mov    %esi,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x2c(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x18(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
add    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x28(%esp),%edi
add    %ebx,%edi
movb   $0x0,(%edi)
mov    0x3c(%esp),%eax
cmp    $0x1,%eax
je     80515c8 <fchmod@plt+0x7168>
cmp    $0x1,%eax
jbe    8051345 <fchmod@plt+0x6ee5>
mov    0x68(%esp),%edx
cmp    %ebx,(%edx)
je     80513ce <fchmod@plt+0x6f6e>
call   8049ee0 <beep@plt>
mov    0x68(%esp),%edx
mov    (%edx),%eax
cmp    %ebx,%eax
je     805159e <fchmod@plt+0x713e>
mov    0x20(%esp),%esi
mov    0x6c(%esp),%edx
add    $0x1,%esi
mov    %esi,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
add    %ebx,%eax
movb   $0x0,(%edx)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x68(%esp),%edx
mov    %eax,0x60(%esp)
mov    (%edx),%eax
sub    %eax,%esi
add    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049bb0 <memmove@plt>
mov    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x68(%esp),%edx
mov    %ebx,(%edx)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    8051107 <fchmod@plt+0x6ca7>
mov    0x6c(%esp),%ecx
cmpb   $0x0,(%ecx)
je     8051340 <fchmod@plt+0x6ee0>
cmp    $0x1,%eax
jbe    80515af <fchmod@plt+0x714f>
movl   $0x804eb40,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a2c0 <qsort@plt>
mov    0x3c(%esp),%ecx
mov    0x8077340,%edx
test   %ecx,%ecx
je     80515fe <fchmod@plt+0x719e>
xor    %esi,%esi
xor    %ebx,%ebx
lea    -0x1(%edx),%ecx
jmp    8051432 <fchmod@plt+0x6fd2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%eax
cmova  %eax,%esi
add    $0x1,%ebx
cmp    %ebx,0x3c(%esp)
jbe    80515ef <fchmod@plt+0x718f>
mov    %ecx,0x4(%esp)
mov    0x0(%ebp,%ebx,4),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x8077340,%edx
lea    -0x1(%edx),%ecx
cmp    %ecx,%eax
jbe    8051420 <fchmod@plt+0x6fc0>
lea    0x1(%edx),%eax
mov    %ecx,%esi
mov    %eax,0x20(%esp)
mov    %eax,%edx
xor    %ebx,%ebx
sar    $0x1f,%edx
xor    %edi,%edi
idivl  0x20(%esp)
mov    %eax,0x1c(%esp)
call   8067b50 <fchmod@plt+0x1d6f0>
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
movl   $0x0,(%esp)
call   804a380 <curs_set@plt>
mov    %esi,0x24(%esp)
mov    %ebx,%esi
jmp    80514f8 <fchmod@plt+0x7098>
nop
mov    0x24(%esp),%ecx
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    0x0(%ebp,%edi,4),%eax
add    $0x1,%edi
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
movl   $0xffffffff,0x8(%esp)
mov    %eax,%ebx
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
xor    %edx,%edx
mov    %edi,%eax
divl   0x1c(%esp)
cmp    $0x1,%edx
adc    $0x0,%esi
cmp    0x3c(%esp),%edi
jae    8051585 <fchmod@plt+0x7125>
xor    %edx,%edx
mov    %edi,%eax
divl   0x1c(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
imul   %edx,%eax
mov    %edx,%ebx
mov    %eax,0x8(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
test   %ebx,%ebx
jne    80514a0 <fchmod@plt+0x7040>
mov    0x8077410,%eax
sub    $0x1,%eax
cmp    %esi,%eax
jne    80514a0 <fchmod@plt+0x7040>
mov    0x3c(%esp),%eax
sub    %edi,%eax
cmp    %eax,0x1c(%esp)
jae    80514a0 <fchmod@plt+0x7040>
movl   $0x5,0x8(%esp)
movl   $0x806b54c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x74(%esp),%ecx
movb   $0x1,(%ecx)
jmp    80513bd <fchmod@plt+0x6f5d>
mov    0x6c(%esp),%ecx
mov    0x3c(%esp),%eax
cmpb   $0x0,(%ecx)
jne    80513db <fchmod@plt+0x6f7b>
mov    0x6c(%esp),%ecx
movb   $0x1,(%ecx)
jmp    80513bd <fchmod@plt+0x6f5d>
movl   $0x0,0x2c(%esp)
jmp    80511d3 <fchmod@plt+0x6d73>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8050c80 <fchmod@plt+0x6820>
test   %al,%al
je     80515e6 <fchmod@plt+0x7186>
movb   $0x2f,(%edi)
mov    %esi,%ebx
mov    0x3c(%esp),%eax
jmp    805132f <fchmod@plt+0x6ecf>
mov    0x3c(%esp),%eax
jmp    805132f <fchmod@plt+0x6ecf>
lea    0x2(%esi),%ecx
mov    %ecx,0x20(%esp)
lea    0x1(%edx),%eax
jmp    8051458 <fchmod@plt+0x6ff8>
movl   $0x2,0x20(%esp)
xor    %esi,%esi
lea    0x1(%edx),%eax
jmp    8051458 <fchmod@plt+0x6ff8>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804a200 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %ebx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10c,%esp
mov    0x80773f8,%eax
mov    0x128(%esp),%edx
mov    0x120(%esp),%esi
movl   $0x0,0x34(%esp)
mov    0x4(%eax),%ebp
mov    %edx,0x24(%esp)
mov    0x130(%esp),%edx
cmpb   $0x0,(%esi)
mov    %edx,0x2c(%esp)
je     8051847 <fchmod@plt+0x73e7>
mov    0x124(%esp),%eax
test   %eax,%eax
je     805169b <fchmod@plt+0x723b>
mov    0x124(%esp),%edx
mov    %edx,0x34(%esp)
cmpb   $0x0,0x24(%esp)
je     8051ab0 <fchmod@plt+0x7650>
mov    %esi,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
movl   $0x3,(%esp)
mov    %eax,0x20(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804a3b0 <__lxstat64@plt>
cmp    $0xffffffff,%eax
setne  %dl
mov    %edx,%edi
je     80516f8 <fchmod@plt+0x7298>
mov    0x124(%esp),%eax
test   %eax,%eax
je     8051a90 <fchmod@plt+0x7630>
testb  $0x10,0x8077414
jne    8051b1a <fchmod@plt+0x76ba>
nop
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
mov    0x80773f8,%eax
setne  %bl
mov    0x34(%eax),%esi
test   %esi,%esi
je     8051b90 <fchmod@plt+0x7730>
mov    0x8077414,%eax
test   $0x80000,%eax
je     80518f8 <fchmod@plt+0x7498>
test   %bl,%bl
je     80518f8 <fchmod@plt+0x7498>
cmpb   $0x1,0x24(%esp)
je     80518f8 <fchmod@plt+0x7498>
mov    0x12c(%esp),%ebx
test   %ebx,%ebx
je     8051bc8 <fchmod@plt+0x7768>
mov    0x80773f8,%eax
mov    0x34(%eax),%ecx
mov    0x48(%ecx),%ebx
mov    0x40(%ecx),%eax
mov    0x124(%esp),%ecx
mov    %ebx,0x3c(%esp)
mov    %eax,0x38(%esp)
test   %ecx,%ecx
je     8052349 <fchmod@plt+0x7ee9>
mov    0x80773d4,%edx
mov    0x20(%esp),%eax
test   %edx,%edx
mov    %eax,(%esp)
je     80521f0 <fchmod@plt+0x7d90>
call   804f320 <fchmod@plt+0x4ec0>
test   %eax,%eax
mov    %eax,%esi
je     8051948 <fchmod@plt+0x74e8>
movzbl (%eax),%eax
lea    0x1(%esi),%ecx
mov    %esi,%ebx
test   %al,%al
jne    80517c9 <fchmod@plt+0x7369>
jmp    8051968 <fchmod@plt+0x7508>
xchg   %ax,%ax
mov    %ecx,%ebx
add    $0x1,%ecx
movzbl -0x1(%ecx),%eax
test   %al,%al
je     8051968 <fchmod@plt+0x7508>
cmp    $0x2f,%al
jne    80517b8 <fchmod@plt+0x7358>
movb   $0x21,(%ebx)
jmp    80517b8 <fchmod@plt+0x7358>
lea    0x0(%esi),%esi
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
xor    %ebx,%ebx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <fclose@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x28(%esp),%esi
test   %esi,%esi
je     8051847 <fchmod@plt+0x73e7>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
add    $0x10c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049d40 <geteuid@plt>
test   %eax,%eax
jne    8051884 <fchmod@plt+0x7424>
mov    0x80773f8,%eax
mov    0x34(%eax),%eax
mov    0x1c(%eax),%ecx
mov    %ecx,0x8(%esp)
mov    0x18(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049fd0 <fchown@plt>
cmp    $0xffffffff,%eax
je     80523b9 <fchmod@plt+0x7f59>
mov    0x80773f8,%eax
mov    0x34(%eax),%eax
mov    0x10(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a460 <fchmod@plt>
cmp    $0xffffffff,%eax
jne    80518ad <fchmod@plt+0x744d>
testb  $0x10,0x8077416
je     80523c6 <fchmod@plt+0x7f66>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804f0c0 <fchmod@plt+0x4c60>
test   %eax,%eax
jne    8052178 <fchmod@plt+0x7d18>
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a230 <utime@plt>
cmp    $0xffffffff,%eax
jne    80518eb <fchmod@plt+0x748b>
testb  $0x10,0x8077416
je     8052488 <fchmod@plt+0x8028>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x8077414,%eax
test   $0x10,%al
je     8051919 <fchmod@plt+0x74b9>
mov    %edi,%eax
test   %al,%al
je     8051919 <fchmod@plt+0x74b9>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8051c5b <fchmod@plt+0x77fb>
mov    0x124(%esp),%eax
test   %eax,%eax
je     8051cb8 <fchmod@plt+0x7858>
cmpl   $0x2,0x12c(%esp)
je     8051f19 <fchmod@plt+0x7ab9>
movl   $0x0,0x28(%esp)
jmp    8051d68 <fchmod@plt+0x7908>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051610 <fchmod@plt+0x71b0>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
xchg   %ax,%ax
mov    0x80773d4,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049fc0 <strlen@plt>
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0x14(%esp)
movl   $0x806b224,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    0x80773d4,%eax
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
call   804a440 <__sprintf_chk@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
movl   $0x806b589,0x4(%esp)
mov    %ebx,(%esp)
call   804efa0 <fchmod@plt+0x4b40>
cmpb   $0x0,(%eax)
mov    %eax,%esi
je     8051bf4 <fchmod@plt+0x7794>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   8049be0 <free@plt>
mov    %ebx,(%esp)
call   8049d50 <unlink@plt>
test   %eax,%eax
js     80521c3 <fchmod@plt+0x7d63>
mov    0x8077414,%eax
and    $0x100000,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x80,%eax
add    $0x441,%eax
movl   $0x1b6,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049b00 <open64@plt>
movl   $0x806b553,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8049f70 <fdopen@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8051a4b <fchmod@plt+0x75eb>
mov    %esi,%eax
shr    $0x1f,%eax
test   %al,%al
je     8051854 <fchmod@plt+0x73f4>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806badc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x20(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049be0 <free@plt>
add    $0x10c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
mov    %esi,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   804f6c0 <fchmod@plt+0x5260>
test   %al,%al
jne    8051b5a <fchmod@plt+0x76fa>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a3b0 <__lxstat64@plt>
cmp    $0xffffffff,%eax
setne  %dl
testb  $0x10,0x8077414
mov    %edx,%edi
je     80516f8 <fchmod@plt+0x7298>
mov    %edi,%eax
test   %al,%al
je     80516f8 <fchmod@plt+0x7298>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    80516f8 <fchmod@plt+0x7298>
movl   $0x5,0x8(%esp)
movl   $0x806baa0,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8051a90 <fchmod@plt+0x7630>
mov    0x80773d0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806b556,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8051a90 <fchmod@plt+0x7630>
lea    0x0(%esi),%esi
test   %bl,%bl
je     805172a <fchmod@plt+0x72ca>
cmpb   $0x1,0x24(%esp)
lea    0x0(%esi),%esi
je     805172a <fchmod@plt+0x72ca>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
jmp    805172a <fchmod@plt+0x72ca>
nop
mov    0x80773f8,%ecx
cmpb   $0x0,0x25(%ecx)
mov    0x34(%ecx),%ecx
jne    8051c53 <fchmod@plt+0x77f3>
test   %ecx,%ecx
je     80518f8 <fchmod@plt+0x7498>
mov    0x48(%ecx),%ebx
cmp    0x88(%esp),%ebx
jne    80518f8 <fchmod@plt+0x7498>
jmp    8051767 <fchmod@plt+0x7307>
movl   $0x5,0x8(%esp)
movl   $0x806b570,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806badc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049c80 <dcgettext@plt>
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
jmp    8051a90 <fchmod@plt+0x7630>
mov    0x48(%ecx),%ebx
jmp    8051767 <fchmod@plt+0x7307>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049d50 <unlink@plt>
cmp    $0xffffffff,%eax
jne    8051919 <fchmod@plt+0x74b9>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8051a90 <fchmod@plt+0x7630>
xchg   %ax,%ax
movl   $0x0,(%esp)
call   804a370 <umask@plt>
cmpb   $0x0,0x24(%esp)
mov    %eax,%esi
je     805222f <fchmod@plt+0x7dcf>
movl   $0x3f,(%esp)
call   804a370 <umask@plt>
cmpl   $0x2,0x12c(%esp)
je     8051f1b <fchmod@plt+0x7abb>
cmpl   $0x1,0x12c(%esp)
je     8052288 <fchmod@plt+0x7e28>
movl   $0x0,0x28(%esp)
cmpb   $0x1,0x24(%esp)
movl   $0x1b6,0x8(%esp)
sbb    %eax,%eax
and    $0x180,%eax
add    $0xc1,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049b00 <open64@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   804a370 <umask@plt>
cmp    $0xffffffff,%ebx
je     80522eb <fchmod@plt+0x7e8b>
cmpl   $0x1,0x12c(%esp)
mov    $0x806b553,%eax
je     80522bb <fchmod@plt+0x7e5b>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049f70 <fdopen@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8052438 <fchmod@plt+0x7fd8>
xor    %esi,%esi
test   %ebp,%ebp
jne    8051dae <fchmod@plt+0x794e>
jmp    8051e20 <fchmod@plt+0x79c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
jbe    8051ee8 <fchmod@plt+0x7a88>
mov    0x34(%esp),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049d80 <_IO_putc@plt>
cmp    $0xffffffff,%eax
je     80517d8 <fchmod@plt+0x7378>
mov    0x8(%ebp),%ebp
add    $0x1,%esi
test   %ebp,%ebp
je     8051e20 <fchmod@plt+0x79c0>
mov    0x0(%ebp),%edi
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebx
call   80662e0 <fchmod@plt+0x1be80>
mov    0x34(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049e10 <fwrite@plt>
mov    %ebx,0x4(%esp)
mov    %eax,%edi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80662b0 <fchmod@plt+0x1be50>
cmp    %edi,%ebx
ja     80517d8 <fchmod@plt+0x7378>
mov    0x80773f8,%eax
cmp    %ebp,0x8(%eax)
jne    8051d78 <fchmod@plt+0x7918>
mov    0x0(%ebp),%eax
mov    0x8(%ebp),%ebp
cmpb   $0x1,(%eax)
sbb    $0x0,%esi
add    $0x1,%esi
test   %ebp,%ebp
jne    8051dae <fchmod@plt+0x794e>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x12c(%esp)
je     8051f80 <fchmod@plt+0x7b20>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <fclose@plt>
test   %eax,%eax
jne    8051fee <fchmod@plt+0x7b8e>
mov    0x12c(%esp),%ebp
test   %ebp,%ebp
jne    80520ed <fchmod@plt+0x7c8d>
cmpb   $0x1,0x24(%esp)
je     80520ed <fchmod@plt+0x7c8d>
cmpb   $0x0,0x2c(%esp)
mov    0x80773f8,%ebx
je     805223c <fchmod@plt+0x7ddc>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     805241c <fchmod@plt+0x7fbc>
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    $0x1,%ebx
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
movl   $0x5,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x806b5bc,0x8(%esp)
movl   $0x806b5cc,0x4(%esp)
movl   $0x0,(%esp)
call   804a3c0 <dcngettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
movb   $0x0,0x24(%eax)
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
jmp    8051827 <fchmod@plt+0x73c7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
movl   $0xd,(%esp)
mov    %eax,0x4(%esp)
call   8049d80 <_IO_putc@plt>
cmp    $0xffffffff,%eax
je     80517d8 <fchmod@plt+0x7378>
mov    0x80773f8,%eax
cmpl   $0x2,0x30(%eax)
je     8051da4 <fchmod@plt+0x7944>
jmp    8051d87 <fchmod@plt+0x7927>
xor    %esi,%esi
mov    0x34(%esp),%eax
test   %eax,%eax
je     8052158 <fchmod@plt+0x7cf8>
lea    0x34(%esp),%eax
mov    %eax,(%esp)
call   804f830 <fchmod@plt+0x53d0>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     80522c5 <fchmod@plt+0x7e65>
mov    0x124(%esp),%eax
test   %eax,%eax
je     8052036 <fchmod@plt+0x7bd6>
mov    0x34(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804f0c0 <fchmod@plt+0x4c60>
test   %eax,%eax
jne    805208d <fchmod@plt+0x7c2d>
cmpl   $0x0,0x124(%esp)
jne    8051d68 <fchmod@plt+0x7908>
jmp    8051d01 <fchmod@plt+0x78a1>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
movl   $0x180,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     80520ff <fchmod@plt+0x7c9f>
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
test   %eax,%eax
je     80520f7 <fchmod@plt+0x7c97>
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804f0c0 <fchmod@plt+0x4c60>
cmp    $0xffffffff,%eax
je     8051fee <fchmod@plt+0x7b8e>
mov    0x28(%esp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
call   8049d50 <unlink@plt>
cmp    $0xffffffff,%eax
jne    8051827 <fchmod@plt+0x73c7>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
xor    %ebx,%ebx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8051827 <fchmod@plt+0x73c7>
mov    0x20(%esp),%eax
movl   $0x180,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8051f4e <fchmod@plt+0x7aee>
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
test   %eax,%eax
je     80524ca <fchmod@plt+0x806a>
mov    0x34(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   804f0c0 <fchmod@plt+0x4c60>
test   %eax,%eax
je     8051d01 <fchmod@plt+0x78a1>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049d50 <unlink@plt>
mov    0x20(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    805183b <fchmod@plt+0x73db>
mov    $0x1,%ebx
jmp    8051827 <fchmod@plt+0x73c7>
mov    %ebx,(%esp)
call   804a3d0 <close@plt>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %ebx,0x8(%esp)
xor    %ebx,%ebx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <fclose@plt>
jmp    8051827 <fchmod@plt+0x73c7>
mov    0x20(%esp),%eax
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
jne    8051f27 <fchmod@plt+0x7ac7>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    8051a90 <fchmod@plt+0x7630>
call   804a080 <__errno_location@plt>
mov    (%eax),%ecx
cmp    $0x2,%ecx
lea    0x0(%esi),%esi
je     80519f7 <fchmod@plt+0x7597>
testb  $0x10,0x8077416
mov    $0x441,%eax
jne    8051a10 <fchmod@plt+0x75b0>
mov    %ecx,(%esp)
jmp    8051a55 <fchmod@plt+0x75f5>
call   8049fc0 <strlen@plt>
add    $0x2,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x806b587,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
call   804a440 <__sprintf_chk@plt>
jmp    80519e7 <fchmod@plt+0x7587>
mov    %eax,(%esp)
call   804a370 <umask@plt>
jmp    8051cdd <fchmod@plt+0x787d>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
call   804e050 <fchmod@plt+0x3bf0>
call   804dfb0 <fchmod@plt+0x3b50>
mov    0x80773f8,%ebx
mov    0x48(%ebx),%edi
test   %edi,%edi
je     8051e6d <fchmod@plt+0x7a0d>
testb  $0x20,0x8077416
jne    8051e6d <fchmod@plt+0x7a0d>
call   806a7c0 <fchmod@plt+0x20360>
mov    0x80773f8,%ebx
jmp    8051e6d <fchmod@plt+0x7a0d>
mov    0x20(%esp),%eax
movl   $0x1b6,0x8(%esp)
movl   $0x441,0x4(%esp)
mov    %eax,(%esp)
call   8049b00 <open64@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   804a370 <umask@plt>
cmp    $0xffffffff,%ebx
movl   $0x0,0x28(%esp)
je     80522eb <fchmod@plt+0x7e8b>
mov    $0x806beea,%eax
jmp    8051d50 <fchmod@plt+0x78f0>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b5a0,0x4(%esp)
mov    %eax,%ebx
jmp    8051b70 <fchmod@plt+0x7710>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8051a90 <fchmod@plt+0x7630>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049d50 <unlink@plt>
jmp    80520da <fchmod@plt+0x7c7a>
mov    0x20(%esp),%eax
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
jne    8051781 <fchmod@plt+0x7321>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
mov    0x8077414,%eax
jmp    80518f8 <fchmod@plt+0x7498>
testb  $0x10,0x8077416
jne    8051884 <fchmod@plt+0x7424>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806badc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <fclose@plt>
jmp    8051a90 <fchmod@plt+0x7630>
movl   $0x60,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x34(%ebx)
mov    0x80773f8,%eax
mov    0x34(%eax),%eax
jmp    8051e78 <fchmod@plt+0x7a18>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b58b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   804a3d0 <close@plt>
jmp    8051827 <fchmod@plt+0x73c7>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806badc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8051a90 <fchmod@plt+0x7630>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
mov    %ebx,(%esp)
call   804a3d0 <close@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049c40 <fclose@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049d50 <unlink@plt>
jmp    80520da <fchmod@plt+0x7c7a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x80773f8,%eax
mov    0x48(%esp),%ebx
movzbl 0x24(%eax),%esi
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    %eax,0x80773fc
mov    0x8077414,%eax
test   %eax,%eax
js     80525bf <fchmod@plt+0x815f>
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8052610 <fchmod@plt+0x81b0>
mov    0x4c(%esp),%eax
movzbl %bl,%ebx
mov    %ebx,0x8(%esp)
movl   $0x1,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8051640 <fchmod@plt+0x71e0>
mov    %eax,%ebx
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    %esi,%eax
test   %al,%al
je     8052607 <fchmod@plt+0x81a7>
call   80694c0 <fchmod@plt+0x1f060>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
call   8066b20 <fchmod@plt+0x1c6c0>
mov    0x4c(%esp),%eax
movzbl %bl,%ebx
mov    %ebx,0x8(%esp)
movl   $0x1,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8051640 <fchmod@plt+0x71e0>
mov    %eax,%ebx
mov    0x8077414,%eax
test   %eax,%eax
js     80525f0 <fchmod@plt+0x8190>
call   8066b90 <fchmod@plt+0x1c730>
jmp    80525f0 <fchmod@plt+0x8190>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    0xd0(%esp),%edx
movb   $0x0,0x4a(%esp)
movb   $0x0,0x4b(%esp)
movl   $0x20,0x80777bc
00
mov    %edx,0x34(%esp)
cmpb   $0x0,0x34(%esp)
mov    %dl,0x39(%esp)
je     8052c00 <fchmod@plt+0x87a0>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8052ca8 <fchmod@plt+0x8848>
mov    %eax,0x4(%esp)
xor    %edi,%edi
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%ebp
mov    0x80773f8,%eax
mov    0x30(%eax),%eax
cmp    $0x1,%eax
je     80529c0 <fchmod@plt+0x8560>
cmp    $0x2,%eax
mov    $0x806e126,%ebx
je     8052bc0 <fchmod@plt+0x8760>
mov    0x8077414,%edx
mov    $0x806e126,%esi
test   $0x80000,%edx
jne    80529e8 <fchmod@plt+0x8588>
and    $0x1000000,%edx
jne    8052740 <fchmod@plt+0x82e0>
cmpb   $0x0,0x39(%esp)
jne    8052740 <fchmod@plt+0x82e0>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     8052740 <fchmod@plt+0x82e0>
cmp    $0x2,%edi
movl   $0x5,0x8(%esp)
je     8052da8 <fchmod@plt+0x8948>
cmp    $0x1,%edi
je     8052d58 <fchmod@plt+0x88f8>
movl   $0x806b634,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805276e <fchmod@plt+0x830e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%edi
movl   $0x5,0x8(%esp)
je     8052b68 <fchmod@plt+0x8708>
cmp    $0x1,%edi
je     8052a18 <fchmod@plt+0x85b8>
movl   $0x806b67b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
testb  $0x1,0x8077417
mov    $0x1,%edx
je     805278d <fchmod@plt+0x832d>
mov    0x80773f8,%edx
mov    (%edx),%edx
cmpb   $0x0,(%edx)
sete   %dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
lea    0x4b(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x4a(%esp),%eax
mov    %esi,0x2c(%esp)
mov    %ebx,0x28(%esp)
movl   $0x806b222,0x20(%esp)
movl   $0x806a7c0,0x1c(%esp)
movl   $0x0,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x20,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
test   %eax,%eax
mov    %eax,0x4c(%esp)
js     8052d28 <fchmod@plt+0x88c8>
mov    0x80773d8,%eax
cmpb   $0xa,(%eax)
je     8052d28 <fchmod@plt+0x88c8>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
lea    0x4b(%esp),%edx
mov    %edx,0xc(%esp)
lea    0x4c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,%ebp
lea    0x4a(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
mov    0x80773d8,%ebx
test   %eax,%eax
je     8052884 <fchmod@plt+0x8424>
movzwl 0x10(%eax),%edx
cmp    $0x15,%dx
je     8052990 <fchmod@plt+0x8530>
cmp    $0x17,%dx
je     8052a38 <fchmod@plt+0x85d8>
cmp    $0x18,%dx
je     8052a50 <fchmod@plt+0x85f0>
cmp    $0x19,%dx
je     8052be8 <fchmod@plt+0x8788>
cmp    $0x1a,%dx
je     8052cf8 <fchmod@plt+0x8898>
cmp    $0x1b,%dx
je     8052d10 <fchmod@plt+0x88b0>
cmp    $0x9,%dx
mov    0x80773d8,%ebx
je     80529a8 <fchmod@plt+0x8548>
cmpb   $0x0,0x8077394
jne    8052898 <fchmod@plt+0x8438>
cmpb   $0x0,0x39(%esp)
jne    8052c38 <fchmod@plt+0x87d8>
test   %edi,%edi
jne    8052afa <fchmod@plt+0x869a>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,0x3c(%esp)
call   80662e0 <fchmod@plt+0x1be80>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804f320 <fchmod@plt+0x4ec0>
test   %ebx,%ebx
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
mov    %ebx,%eax
cmove  0x80773d8,%eax
mov    %eax,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
mov    0x80773f8,%eax
setne  0x3a(%esp)
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8052b88 <fchmod@plt+0x8728>
movzbl 0x3a(%esp),%eax
mov    0x80773d8,%edx
mov    %al,0x3b(%esp)
mov    0x3c(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80662b0 <fchmod@plt+0x1be50>
test   %esi,%esi
je     805293a <fchmod@plt+0x84da>
mov    %esi,(%esp)
call   8049be0 <free@plt>
test   %ebx,%ebx
je     8052946 <fchmod@plt+0x84e6>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
cmpb   $0x0,0x3b(%esp)
je     8052a70 <fchmod@plt+0x8610>
testb  $0x1,0x8077417
jne    80529a8 <fchmod@plt+0x8548>
cmpb   $0x0,0x3a(%esp)
jne    8052d90 <fchmod@plt+0x8930>
cmpb   $0x0,0x39(%esp)
jne    805297b <fchmod@plt+0x851b>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
jne    8052af4 <fchmod@plt+0x8694>
movl   $0x5,0x8(%esp)
movl   $0x806bb00,0x4(%esp)
jmp    8052ac8 <fchmod@plt+0x8668>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804cbe0 <fchmod@plt+0x2780>
test   %eax,%eax
mov    %eax,%ebx
jne    8052c20 <fchmod@plt+0x87c0>
nop
mov    0x80773f8,%eax
mov    0x30(%eax),%eax
cmp    $0x1,%eax
jne    80526cd <fchmod@plt+0x826d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b5db,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ebx
jmp    80526db <fchmod@plt+0x827b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b5f7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x8077414,%edx
mov    %eax,%esi
jmp    80526f2 <fchmod@plt+0x8292>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b664,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805276e <fchmod@plt+0x830e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%edx
xor    %eax,%eax
cmpl   $0x1,0x30(%edx)
setne  %al
mov    %eax,0x30(%edx)
jmp    80526c4 <fchmod@plt+0x8264>
nop
mov    0x80773f8,%edx
xor    %eax,%eax
cmpl   $0x2,0x30(%edx)
setne  %al
add    %eax,%eax
mov    %eax,0x30(%edx)
jmp    80526c4 <fchmod@plt+0x8264>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x3a(%esp)
je     8052af4 <fchmod@plt+0x8694>
mov    0x80773f8,%eax
mov    0x34(%eax),%eax
test   %eax,%eax
je     8052af4 <fchmod@plt+0x8694>
mov    0x98(%esp),%edx
cmp    %edx,0x48(%eax)
jl     8052ab8 <fchmod@plt+0x8658>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
xor    0x54(%esp),%ecx
xor    0x50(%esp),%edx
or     %edx,%ecx
jne    8052ab8 <fchmod@plt+0x8658>
mov    0x58(%eax),%edx
mov    0x5c(%eax),%eax
xor    0xac(%esp),%eax
xor    0xa8(%esp),%edx
or     %edx,%eax
je     8052af4 <fchmod@plt+0x8694>
movl   $0x5,0x8(%esp)
movl   $0x806bb24,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   805d5c0 <fchmod@plt+0x13160>
mov    %eax,0x4c(%esp)
add    $0x1,%eax
cmp    $0x1,%eax
jbe    80529a8 <fchmod@plt+0x8548>
mov    0x80773d8,%ebx
mov    %ebx,(%esp)
call   80662e0 <fchmod@plt+0x1be80>
movl   $0x80773d8,(%esp)
call   8066790 <fchmod@plt+0x1c330>
testb  $0x1,0x8077417
jne    8052b22 <fchmod@plt+0x86c2>
cmpb   $0x0,0x34(%esp)
je     8052c70 <fchmod@plt+0x8810>
mov    0x80773d8,%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8051640 <fchmod@plt+0x71e0>
mov    %ebp,(%esp)
mov    %al,0x30(%esp)
call   8049be0 <free@plt>
movzbl 0x30(%esp),%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x806b64c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805276e <fchmod@plt+0x830e>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
cmovne %esi,%eax
test   %ebx,%ebx
je     8052d80 <fchmod@plt+0x8920>
mov    0x80773d8,%edx
mov    %ebx,%ecx
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0x30(%esp)
call   8049ae0 <strcmp@plt>
mov    0x30(%esp),%edx
test   %eax,%eax
setne  0x3b(%esp)
jmp    805291e <fchmod@plt+0x84be>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b5e9,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ebx
jmp    80526db <fchmod@plt+0x827b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
xorl   $0x80000,0x8077414
00
mov    0x30(%eax),%eax
jmp    80526c4 <fchmod@plt+0x8264>
nop
mov    0x80773f8,%edx
mov    $0x806e126,%eax
cmpb   $0x0,0x25(%edx)
jne    80526a8 <fchmod@plt+0x8248>
mov    (%edx),%eax
jmp    80526a8 <fchmod@plt+0x8248>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebx,0x80773d8
jmp    8052884 <fchmod@plt+0x8424>
testb  $0x8,0x8077415
jne    8052898 <fchmod@plt+0x8438>
movl   $0x806b68e,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8052898 <fchmod@plt+0x8438>
call   806add0 <fchmod@plt+0x20970>
xor    %eax,%eax
movb   $0x1,0x8077394
jmp    8052b4b <fchmod@plt+0x86eb>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     8052b22 <fchmod@plt+0x86c2>
mov    0x80773d8,%eax
mov    %edi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8052540 <fchmod@plt+0x80e0>
jmp    8052b4b <fchmod@plt+0x86eb>
lea    0x0(%esi),%esi
testb  $0x8,0x8077415
je     80526a8 <fchmod@plt+0x8248>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8051640 <fchmod@plt+0x71e0>
test   %al,%al
jne    8052b5c <fchmod@plt+0x86fc>
mov    0x80773f8,%eax
mov    (%eax),%eax
jmp    80526a8 <fchmod@plt+0x8248>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
cmp    $0x2,%edi
mov    0x30(%eax),%eax
je     8052d78 <fchmod@plt+0x8918>
mov    $0x2,%edi
jmp    80526c4 <fchmod@plt+0x8264>
nop
xor    %eax,%eax
cmp    $0x1,%edi
setne  %al
mov    %eax,%edi
mov    0x80773f8,%eax
mov    0x30(%eax),%eax
jmp    80526c4 <fchmod@plt+0x8264>
nop
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
xor    %eax,%eax
jmp    8052b4b <fchmod@plt+0x86eb>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b61b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805276e <fchmod@plt+0x830e>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    80526c4 <fchmod@plt+0x8264>
nop
mov    0x80773d8,%ecx
mov    %ecx,%edx
jmp    8052b9d <fchmod@plt+0x873d>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b692,0x4(%esp)
jmp    8052ac8 <fchmod@plt+0x8668>
lea    0x0(%esi),%esi
movl   $0x806b601,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805276e <fchmod@plt+0x830e>
jmp    8052dd0 <fchmod@plt+0x8970>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8052660 <fchmod@plt+0x8200>
add    $0x1c,%esp
jmp    806aac0 <fchmod@plt+0x20660>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8077398,%eax
test   %eax,%eax
je     8052e50 <fchmod@plt+0x89f0>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%esi
lea    0xf(%eax),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x8077398,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049e70 <strcpy@plt>
lea    (%ebx,%esi,1),%edx
movl   $0x616e2e2f,(%edx)
movl   $0x685f6f6e,0x4(%edx)
movl   $0x6f747369,0x8(%edx)
movw   $0x7972,0xc(%edx)
movb   $0x0,0xe(%edx)
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %ebx,%ebx
jmp    8052e47 <fchmod@plt+0x89e7>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   8052df0 <fchmod@plt+0x8990>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8052f30 <fchmod@plt+0x8ad0>
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8052f38 <fchmod@plt+0x8ad8>
movl   $0x0,0x28(%esp)
mov    $0x80773b0,%ebp
movl   $0x0,0x2c(%esp)
lea    0x2c(%esp),%edi
lea    0x28(%esp),%esi
nop
mov    %ebx,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049da0 <__getdelim@plt>
cmp    $0x0,%eax
jl     8052f10 <fchmod@plt+0x8ab0>
je     8052f08 <fchmod@plt+0x8aa8>
mov    0x28(%esp),%edx
cmpb   $0xa,-0x1(%edx,%eax,1)
je     8052ef8 <fchmod@plt+0x8a98>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80662b0 <fchmod@plt+0x1be50>
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80608b0 <fchmod@plt+0x16450>
jmp    8052eb0 <fchmod@plt+0x8a50>
movb   $0x0,-0x1(%edx,%eax,1)
sub    $0x1,%eax
test   %eax,%eax
jne    8052fbf <fchmod@plt+0x8b5f>
mov    $0x80773a4,%ebp
jmp    8052eb0 <fchmod@plt+0x8a50>
nop
mov    %ebx,(%esp)
call   8049c40 <fclose@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a080 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     8052f24 <fchmod@plt+0x8ac4>
andl   $0xff7fffff,0x8077414
ff
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x806b288,(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
movl   $0x5,0x8(%esp)
movl   $0x806bb60,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077348,%eax
mov    %eax,(%esp)
call   8049ce0 <_IO_getc@plt>
cmp    $0xa,%eax
jne    8052fa8 <fchmod@plt+0x8b48>
jmp    8052f24 <fchmod@plt+0x8ac4>
mov    0x28(%esp),%edx
jmp    8052eda <fchmod@plt+0x8a7a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x30(%esp),%ebp
test   %ebx,%ebx
jne    8053004 <fchmod@plt+0x8ba4>
jmp    8053040 <fchmod@plt+0x8be0>
lea    0x0(%esi),%esi
mov    %ebp,0x4(%esp)
movl   $0xa,(%esp)
call   8049d80 <_IO_putc@plt>
cmp    $0xffffffff,%eax
je     8053036 <fchmod@plt+0x8bd6>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8053040 <fchmod@plt+0x8be0>
mov    (%ebx),%edi
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   80662e0 <fchmod@plt+0x1be80>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049e10 <fwrite@plt>
cmp    %eax,%esi
jbe    8052fe8 <fchmod@plt+0x8b88>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   8060770 <fchmod@plt+0x16310>
test   %al,%al
je     80530ee <fchmod@plt+0x8c8e>
mov    0x80773a8,%eax
cmpl   $0x1,0x4(%eax)
je     80530f8 <fchmod@plt+0x8c98>
call   8052df0 <fchmod@plt+0x8990>
test   %eax,%eax
mov    %eax,%ebx
je     80530ee <fchmod@plt+0x8c8e>
movl   $0x806b553,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8053130 <fchmod@plt+0x8cd0>
movl   $0x180,0x4(%esp)
mov    %ebx,(%esp)
call   804a350 <chmod@plt>
mov    0x80773ac,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8052fd0 <fchmod@plt+0x8b70>
test   %al,%al
jne    8053118 <fchmod@plt+0x8cb8>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
mov    %ebx,0x4(%esp)
movl   $0x806b58b,(%esp)
mov    %eax,0x8(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    %esi,(%esp)
call   8049c40 <fclose@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x807739c,%eax
cmpl   $0x1,0x4(%eax)
je     80530ee <fchmod@plt+0x8c8e>
call   8052df0 <fchmod@plt+0x8990>
test   %eax,%eax
mov    %eax,%ebx
jne    805307c <fchmod@plt+0x8c1c>
jmp    80530ee <fchmod@plt+0x8c8e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773a0,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8052fd0 <fchmod@plt+0x8b70>
test   %al,%al
je     80530bb <fchmod@plt+0x8c5b>
jmp    80530de <fchmod@plt+0x8c7e>
nop
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
mov    %ebx,0x4(%esp)
movl   $0x806b58b,(%esp)
mov    %eax,0x8(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    80530e6 <fchmod@plt+0x8c86>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x80773b4,%edx
xor    %eax,%eax
push   %ebx
mov    0x8(%esp),%ecx
test   %edx,%edx
je     805318d <fchmod@plt+0x8d2d>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,0x4(%edx)
je     8053186 <fchmod@plt+0x8d26>
mov    0xc(%edx),%ebx
cmpb   $0x1,(%ebx)
sbb    $0xffffffff,%eax
mov    0x18(%edx),%edx
test   %edx,%edx
jne    8053178 <fchmod@plt+0x8d18>
pop    %ebx
ret
nop
mov    0x4(%esp),%eax
movzbl (%eax),%edx
mov    $0x1,%eax
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x4d,%cl
je     80531ba <fchmod@plt+0x8d5a>
cmp    $0x5e,%dl
je     80531b8 <fchmod@plt+0x8d58>
xor    %eax,%eax
cmp    $0x46,%dl
setne  %al
add    $0x2,%eax
ret
nop
xor    %eax,%eax
repz ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    %ebx,0x1c(%esp)
mov    0x80773b4,%ebx
mov    %esi,0x20(%esp)
mov    0x40(%esp),%esi
mov    %edi,0x24(%esp)
mov    0x44(%esp),%edi
mov    %ebp,0x28(%esp)
mov    0x30(%esp),%ebp
test   %ebx,%ebx
jne    80531f2 <fchmod@plt+0x8d92>
jmp    8053245 <fchmod@plt+0x8de5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
jne    80531f0 <fchmod@plt+0x8d90>
movl   $0x1c,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x18(%ebx)
mov    0x34(%esp),%edx
mov    %bp,(%eax)
mov    0x1c(%esp),%ebx
movl   $0x0,0x18(%eax)
mov    0x28(%esp),%ebp
mov    %edx,0x4(%eax)
mov    0x38(%esp),%edx
mov    %edx,0x8(%eax)
mov    %edi,%edx
mov    0x24(%esp),%edi
mov    %dl,0x11(%eax)
mov    0x3c(%esp),%edx
mov    %edx,0xc(%eax)
mov    %esi,%edx
mov    0x20(%esp),%esi
mov    %dl,0x10(%eax)
add    $0x2c,%esp
ret
movl   $0x1c,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x80773b4
jmp    8053208 <fchmod@plt+0x8da8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773b8,%eax
push   %ebx
xor    %ebx,%ebx
mov    0x8(%esp),%edx
movzwl 0xc(%esp),%ecx
test   %eax,%eax
jne    805327f <fchmod@plt+0x8e1f>
jmp    80532a8 <fchmod@plt+0x8e48>
nop
mov    0x1c(%eax),%eax
test   %eax,%eax
je     80532a8 <fchmod@plt+0x8e48>
test   %edx,0xc(%eax)
je     8053278 <fchmod@plt+0x8e18>
cmp    %cx,0x10(%eax)
jne    8053278 <fchmod@plt+0x8e18>
cmpl   $0x1,0x4(%eax)
je     8053298 <fchmod@plt+0x8e38>
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %eax,%ebx
mov    0x1c(%eax),%eax
test   %eax,%eax
jne    805327f <fchmod@plt+0x8e1f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
movswl 0x10(%esp),%eax
mov    0x14(%esp),%ebx
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8053260 <fchmod@plt+0x8e00>
test   %eax,%eax
je     80532d5 <fchmod@plt+0x8e75>
mov    0x8(%eax),%ebx
add    $0x8,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x20(%esp),%ebx
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    8053338 <fchmod@plt+0x8ed8>
mov    (%ebx),%esi
movsbl 0x1(%esi),%eax
sub    $0x40,%eax
mov    %eax,0x8(%ebx)
add    $0x1,%esi
movl   $0x806e280,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80534c0 <fchmod@plt+0x9060>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
je     80534d8 <fchmod@plt+0x9078>
cmp    $0x2,%eax
je     8053570 <fchmod@plt+0x9110>
mov    (%ebx),%esi
movsbl (%esi),%edx
mov    %edx,0x8(%ebx)
cmp    $0x1,%eax
je     8053490 <fchmod@plt+0x9030>
cmp    $0x3,%eax
jne    8053321 <fchmod@plt+0x8ec1>
mov    (%ebx),%esi
movl   $0x806e17b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053500 <fchmod@plt+0x90a0>
movl   $0x806bb89,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053510 <fchmod@plt+0x90b0>
movl   $0x806bb8f,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053520 <fchmod@plt+0x90c0>
movl   $0x806bb95,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053530 <fchmod@plt+0x90d0>
movl   $0x806bb9c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80535a8 <fchmod@plt+0x9148>
movl   $0x806bba4,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80535b8 <fchmod@plt+0x9158>
movl   $0x806bba9,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80535c8 <fchmod@plt+0x9168>
movl   $0x806bbae,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80535d8 <fchmod@plt+0x9178>
movl   $0x806bbb5,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053540 <fchmod@plt+0x90e0>
movl   $0x806bbba,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053550 <fchmod@plt+0x90f0>
movl   $0x806bbc1,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8053560 <fchmod@plt+0x9100>
movl   $0x806bbc7,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8053321 <fchmod@plt+0x8ec1>
movl   $0x168,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
xchg   %ax,%ax
mov    (%ebx),%esi
add    $0x2,%esi
movl   $0x806e280,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8053321 <fchmod@plt+0x8ec1>
movl   $0x20,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%ebx)
mov    0x14(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
nop
mov    (%ebx),%esi
movsbl 0x2(%esi),%edi
lea    0x80(%edi),%eax
cmp    $0x17f,%eax
ja     80534f5 <fchmod@plt+0x9095>
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%edi,4),%edi
mov    %edi,0x8(%ebx)
jmp    8053492 <fchmod@plt+0x9032>
lea    0x0(%esi),%esi
movl   $0x103,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x102,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x104,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x105,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x153,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x152,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x106,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    (%ebx),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   804a3a0 <strtol@plt>
add    $0x108,%eax
mov    %eax,0x8(%ebx)
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    8053352 <fchmod@plt+0x8ef2>
mov    (%ebx),%esi
jmp    8053306 <fchmod@plt+0x8ea6>
nop
movl   $0x14b,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x14a,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x107,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x157,0x8(%ebx)
jmp    8053321 <fchmod@plt+0x8ec1>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80773b8,%ebp
mov    0x48(%esp),%edx
mov    0x50(%esp),%ecx
mov    0x40(%esp),%ebx
test   %ebp,%ebp
mov    0x44(%esp),%esi
mov    %edx,0x18(%esp)
mov    0x4c(%esp),%edi
mov    %ecx,0x1c(%esp)
je     80536dc <fchmod@plt+0x927c>
mov    0x1c(%ebp),%eax
test   %eax,%eax
je     805363a <fchmod@plt+0x91da>
cmp    %ebx,0xc(%ebp)
je     80536b8 <fchmod@plt+0x9258>
mov    %eax,%ebp
mov    0x1c(%ebp),%eax
test   %eax,%eax
jne    8053628 <fchmod@plt+0x91c8>
cmp    %ebx,0xc(%ebp)
je     80536c8 <fchmod@plt+0x9268>
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x1c(%ebp)
movl   $0x0,0x1c(%eax)
movzbl (%esi),%edx
mov    %dl,0x17(%esp)
and    $0xffffffdf,%edx
mov    %edx,%ebp
mov    $0x1,%edx
mov    %ebp,%ecx
cmp    $0x4d,%cl
je     8053685 <fchmod@plt+0x9225>
cmpb   $0x5e,0x17(%esp)
je     80536d8 <fchmod@plt+0x9278>
xor    %edx,%edx
cmpb   $0x46,0x17(%esp)
setne  %dl
add    $0x2,%edx
mov    %edx,0x4(%eax)
movzwl 0x18(%esp),%edx
mov    %ebx,0xc(%eax)
mov    %edi,0x14(%eax)
mov    %esi,(%eax)
mov    %dx,0x10(%eax)
mov    0x1c(%esp),%edx
test   %edx,%edx
setne  0x18(%eax)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80532e0 <fchmod@plt+0x8e80>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,0x0(%ebp)
jne    8053631 <fchmod@plt+0x91d1>
mov    %ebp,%eax
jmp    8053659 <fchmod@plt+0x91f9>
lea    0x0(%esi),%esi
cmp    0x0(%ebp),%esi
jne    8053643 <fchmod@plt+0x91e3>
mov    %ebp,%eax
jmp    8053659 <fchmod@plt+0x91f9>
lea    0x0(%esi),%esi
xor    %edx,%edx
jmp    8053685 <fchmod@plt+0x9225>
movl   $0x20,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x80773b8
movl   $0x0,0x1c(%eax)
jmp    8053659 <fchmod@plt+0x91f9>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x80773b4,%eax
mov    0x30(%esp),%ebx
test   %eax,%eax
je     8053732 <fchmod@plt+0x92d2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x80773b4
call   8049be0 <free@plt>
mov    0x80773b4,%eax
test   %eax,%eax
jne    8053718 <fchmod@plt+0x92b8>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bbd7,0xc(%esp)
movl   $0x806bbee,0x8(%esp)
movl   $0x1eff,0x4(%esp)
movl   $0x9,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772dc,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bbf7,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3afe,0x4(%esp)
movl   $0x31,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80773f8,%eax
test   %eax,%eax
je     80561d8 <fchmod@plt+0xbd78>
cmp    0x4c(%eax),%eax
je     80561d8 <fchmod@plt+0xbd78>
mov    $0x806bbd1,%eax
mov    %eax,0x8(%esp)
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c568,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x12,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bc13,0xc(%esp)
movl   $0x806bbcc,0x8(%esp)
movl   $0x400,0x4(%esp)
movl   $0x12,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c598,0xc(%esp)
movl   $0x806bc2e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x32,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806bc37,0xc(%esp)
movl   $0x806bca6,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x39,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c5b8,0xc(%esp)
movl   $0x806bc55,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x33,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c5e4,0xc(%esp)
movl   $0x806bc5f,0x8(%esp)
movl   $0x401,0x4(%esp)
movl   $0xa,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bc68,0xc(%esp)
movl   $0x806bc7e,0x8(%esp)
movl   $0x501,0x4(%esp)
movl   $0xb,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806bc88,0xc(%esp)
movl   $0x806bc9a,0x8(%esp)
movl   $0x501,0x4(%esp)
movl   $0xc,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c610,0xc(%esp)
movl   $0x806bcb0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x34,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
test   %bl,%bl
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
je     8055f30 <fchmod@plt+0xbad0>
movl   $0x806e126,0xc(%esp)
movl   $0x806bca4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x35,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c674,0xc(%esp)
movl   $0x806bcb9,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x36,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c698,0xc(%esp)
movl   $0x806bcc1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x84,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c6c0,0xc(%esp)
movl   $0x806bcca,0x8(%esp)
movl   $0x1f,0x4(%esp)
movl   $0x1c,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c6e4,0xc(%esp)
movl   $0x806bcd5,0x8(%esp)
movl   $0x1f,0x4(%esp)
movl   $0x1d,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bcdf,0xc(%esp)
movl   $0x806bcfc,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x37,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772d8,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c704,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x38,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c730,0xc(%esp)
movl   $0x806bd07,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3d,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772b8,%eax
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806bd11,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x401,0x4(%esp)
movl   $0x3e,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c754,0xc(%esp)
movl   $0x806bd24,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3f,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bd2e,0xc(%esp)
movl   $0x806bd46,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x40,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bd52,0xc(%esp)
movl   $0x806bd6c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x41,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x4,0x8077418
jne    8056168 <fchmod@plt+0xbd08>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bd9c,0xc(%esp)
movl   $0x806bdb5,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x10,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c7a8,0xc(%esp)
movl   $0x806bdb5,0x8(%esp)
movl   $0x400,0x4(%esp)
movl   $0x10,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0x10,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bdbd,0xc(%esp)
movl   $0x806bdd3,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0xe,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c7c8,0xc(%esp)
movl   $0x806bdd3,0x8(%esp)
movl   $0x400,0x4(%esp)
movl   $0xe,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0xe,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bdd8,0xc(%esp)
movl   $0x806bdec,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x44,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bdf6,0xc(%esp)
movl   $0x806be07,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2f,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806be11,0xc(%esp)
movl   $0x806be25,0x8(%esp)
movl   $0x501,0x4(%esp)
movl   $0xd,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806be2f,0xc(%esp)
movl   $0x806be3f,0x8(%esp)
movl   $0x501,0x4(%esp)
movl   $0xf,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c7ec,0xc(%esp)
movl   $0x806be49,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x28,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806be4e,0xc(%esp)
movl   $0x806bf0b,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x27,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c80c,0xc(%esp)
movl   $0x806be68,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x3a,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c848,0xc(%esp)
movl   $0x806be73,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x3b,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x5,0x8(%esp)
movl   $0x806be7e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806be91,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2e,(%esp)
mov    %eax,0x8(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c880,0xc(%esp)
movl   $0x806beac,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x42,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c8b0,0xc(%esp)
movl   $0x806beb6,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x43,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x5,0x8(%esp)
movl   $0x806bec2,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c8e4,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x26,(%esp)
mov    %eax,0x8(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c908,0xc(%esp)
movl   $0x806bed0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x25,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c928,0xc(%esp)
movl   $0x806beda,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x24,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x28e,0x4(%esp)
movl   $0x24,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c94c,0xc(%esp)
movl   $0x806bee9,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x23,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0x23,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c970,0xc(%esp)
movl   $0x806beed,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x11,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0x11,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c998,0xc(%esp)
movl   $0x806bef3,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x22,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0x22,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c9c0,0xc(%esp)
movl   $0x806befa,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x21,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1fff,0x4(%esp)
movl   $0x21,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c9f0,0xc(%esp)
movl   $0x806bf04,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x45,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5f,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806e126,0xc(%esp)
movl   $0x806e126,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5e,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bf0f,0xc(%esp)
movl   $0x806bf27,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x3c,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806ca24,0xc(%esp)
movl   $0x806bf32,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2d,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806ca58,0xc(%esp)
movl   $0x806bf3d,0x8(%esp)
movl   $0x101,0x4(%esp)
movl   $0x8,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806ca7c,0xc(%esp)
movl   $0x806bf45,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x30,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772d0,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806caa8,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x806,0x4(%esp)
movl   $0x1,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772cc,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cad4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x806,0x4(%esp)
movl   $0x2,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772c8,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806caf8,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x806,0x4(%esp)
movl   $0x3,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772c4,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cb20,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x80e,0x4(%esp)
movl   $0x2a,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772c0,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cb4c,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x80e,0x4(%esp)
movl   $0x29,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772d4,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c5e4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x20,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772bc,%eax
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c5e4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
movl   $0x1f,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
je     8055f60 <fchmod@plt+0xbb00>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c5b8,0xc(%esp)
movl   $0x806bfd6,0x8(%esp)
movl   $0x80,0x4(%esp)
movl   $0x49,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x8077290,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cb9c,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x80,0x4(%esp)
movl   $0x13,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806ca58,0xc(%esp)
movl   $0x806bf3d,0x8(%esp)
movl   $0x100,0x4(%esp)
movl   $0x5a,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806c568,0xc(%esp)
movl   $0x806bbcc,0x8(%esp)
movl   $0x100,0x4(%esp)
movl   $0x12,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772b4,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cbbc,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0xc00,0x4(%esp)
movl   $0x5,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x80772b0,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cbe0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0xc00,0x4(%esp)
movl   $0x6,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
mov    0x807728c,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bfe2,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x400,0x4(%esp)
movl   $0x7,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x9,0x8(%esp)
movl   $0x806bff2,0x4(%esp)
movl   $0x1eff,(%esp)
movl   $0x1,0x80777bc
00
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x9,0x8(%esp)
movl   $0x806bff5,0x4(%esp)
movl   $0x1eff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x12,0x8(%esp)
movl   $0x806bff8,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x12,0x8(%esp)
movl   $0x806bffb,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x37,0x8(%esp)
movl   $0x806bffe,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x37,0x8(%esp)
movl   $0x806c001,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x37,0x8(%esp)
movl   $0x806c005,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x32,0x8(%esp)
movl   $0x806c009,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x32,0x8(%esp)
movl   $0x806c00c,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x39,0x8(%esp)
movl   $0x806c00f,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x39,0x8(%esp)
movl   $0x806c012,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x33,0x8(%esp)
movl   $0x806c015,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x33,0x8(%esp)
movl   $0x806c018,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x33,0x8(%esp)
movl   $0x806bb9c,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x806c01b,0x4(%esp)
movl   $0x401,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x806c01e,0x4(%esp)
movl   $0x401,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xb,0x8(%esp)
movl   $0x806c021,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xb,0x8(%esp)
movl   $0x806c024,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xb,0x8(%esp)
movl   $0x806bbb5,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xc,0x8(%esp)
movl   $0x806c027,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xc,0x8(%esp)
movl   $0x806c02a,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xc,0x8(%esp)
movl   $0x806bbba,0x4(%esp)
movl   $0xd01,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x34,0x8(%esp)
movl   $0x806c02d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x34,0x8(%esp)
movl   $0x806c030,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x35,0x8(%esp)
movl   $0x806c033,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x35,0x8(%esp)
movl   $0x806c036,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x36,0x8(%esp)
movl   $0x806c03a,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x36,0x8(%esp)
movl   $0x806c03d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x84,0x8(%esp)
movl   $0x806c041,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x84,0x8(%esp)
movl   $0x806c044,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x38,0x8(%esp)
movl   $0x806c048,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x38,0x8(%esp)
movl   $0x806c04b,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x38,0x8(%esp)
movl   $0x806c04f,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x38,0x8(%esp)
movl   $0x806c015,0x4(%esp)
movl   $0x2,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x20,0x8(%esp)
movl   $0x806c015,0x4(%esp)
movl   $0x4,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x37,0x8(%esp)
movl   $0x806c041,0x4(%esp)
movl   $0x2,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3d,0x8(%esp)
movl   $0x806c053,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3d,0x8(%esp)
movl   $0x806c056,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3d,0x8(%esp)
movl   $0x806c05a,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3e,0x8(%esp)
movl   $0x806c05e,0x4(%esp)
movl   $0x401,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3e,0x8(%esp)
movl   $0x806c062,0x4(%esp)
movl   $0x401,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3f,0x8(%esp)
movl   $0x806c066,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3f,0x8(%esp)
movl   $0x806c06a,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x806c06e,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x41,0x8(%esp)
movl   $0x806c072,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
testb  $0x4,0x8077418
je     8054ea4 <fchmod@plt+0xaa44>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2c,0x8(%esp)
movl   $0x806c076,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2b,0x8(%esp)
movl   $0x806c07a,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x806c07e,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xe,0x8(%esp)
movl   $0x806c081,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x44,0x8(%esp)
movl   $0x806c084,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2f,0x8(%esp)
movl   $0x806c08b,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x806bb95,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xe,0x8(%esp)
movl   $0x806bb8f,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x5f,0x8(%esp)
movl   $0x806c093,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x5e,0x8(%esp)
movl   $0x806c096,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xd,0x8(%esp)
movl   $0x806c099,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xd,0x8(%esp)
movl   $0x806e17b,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xf,0x8(%esp)
movl   $0x806c09c,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0xf,0x8(%esp)
movl   $0x806bb89,0x4(%esp)
movl   $0x501,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x28,0x8(%esp)
movl   $0x806c09f,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x28,0x8(%esp)
movl   $0x806bbc1,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x27,0x8(%esp)
movl   $0x806c0a2,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x27,0x8(%esp)
movl   $0x806bbc7,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2a,0x8(%esp)
movl   $0x806c099,0x4(%esp)
movl   $0x80e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2a,0x8(%esp)
movl   $0x806e17b,0x4(%esp)
movl   $0x80e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x29,0x8(%esp)
movl   $0x806c09c,0x4(%esp)
movl   $0x80e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x29,0x8(%esp)
movl   $0x806bb89,0x4(%esp)
movl   $0x80e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3a,0x8(%esp)
movl   $0x806c01b,0x4(%esp)
movl   $0xe,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3b,0x8(%esp)
movl   $0x806c009,0x4(%esp)
movl   $0xe,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3a,0x8(%esp)
movl   $0x806c0a5,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3a,0x8(%esp)
movl   $0x806c0a9,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3b,0x8(%esp)
movl   $0x806c0ad,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3b,0x8(%esp)
movl   $0x806c0b1,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x806c0b5,0x4(%esp)
movl   $0x2,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x806c0b5,0x4(%esp)
movl   $0x4,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x806c0b5,0x4(%esp)
movl   $0x8,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x806c0b9,0x4(%esp)
movl   $0xe,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3,0x8(%esp)
movl   $0x806c04f,0x4(%esp)
movl   $0xe,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1c,0x8(%esp)
movl   $0x806c0bd,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1c,0x8(%esp)
movl   $0x806c0c1,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1d,0x8(%esp)
movl   $0x806c0c5,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1d,0x8(%esp)
movl   $0x806c0c9,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1c,0x8(%esp)
movl   $0x806c021,0x4(%esp)
movl   $0x11e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1d,0x8(%esp)
movl   $0x806c027,0x4(%esp)
movl   $0x11e,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806c0bd,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806c0c1,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x6,0x8(%esp)
movl   $0x806c0c5,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x6,0x8(%esp)
movl   $0x806c0c9,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x806bffe,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x806c001,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x806c005,0x4(%esp)
movl   $0xc00,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2e,0x8(%esp)
movl   $0x806c0cd,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x42,0x8(%esp)
movl   $0x806c0d1,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x42,0x8(%esp)
movl   $0x806c0d5,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x43,0x8(%esp)
movl   $0x806c0d9,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x43,0x8(%esp)
movl   $0x806c0dd,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x26,0x8(%esp)
movl   $0x806c0e1,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x26,0x8(%esp)
movl   $0x806c0e5,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x25,0x8(%esp)
movl   $0x806c0e9,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x25,0x8(%esp)
movl   $0x806c0ed,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x24,0x8(%esp)
movl   $0x806c0f1,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x45,0x8(%esp)
movl   $0x806c0f5,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x3c,0x8(%esp)
movl   $0x806c0f9,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x2d,0x8(%esp)
movl   $0x806c0fd,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x3,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c101,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x2,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c0b5,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x1b,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c105,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0xf,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c109,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x1a,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c10d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x15,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c111,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x19,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c115,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x7,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c119,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0xc,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c11d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x6,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c121,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x1c,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c125,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x13,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c0b9,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0xe,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c129,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x9,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c12d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x12,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c131,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x5,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c135,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x23,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x806c139,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1f,0x8(%esp)
movl   $0x806c041,0x4(%esp)
movl   $0x10,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x13,0x8(%esp)
movl   $0x806c129,0x4(%esp)
movl   $0xc0,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x31,0x8(%esp)
movl   $0x806c03a,0x4(%esp)
movl   $0x3afe,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x12,0x8(%esp)
movl   $0x806bff8,0x4(%esp)
movl   $0x100,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x12,0x8(%esp)
movl   $0x806bffb,0x4(%esp)
movl   $0x100,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x17,0x8(%esp)
movl   $0x806c0fd,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x18,0x8(%esp)
movl   $0x806c12d,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1b,0x8(%esp)
movl   $0x806c05a,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1a,0x8(%esp)
movl   $0x806c10d,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x19,0x8(%esp)
movl   $0x806c0b9,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x15,0x8(%esp)
movl   $0x806c041,0x4(%esp)
movl   $0x20,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x15,0x8(%esp)
movl   $0x806c041,0x4(%esp)
movl   $0x40,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x14,0x8(%esp)
movl   $0x806bff8,0x4(%esp)
movl   $0x40,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x30,0x8(%esp)
movl   $0x806c13d,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x8,0x8(%esp)
movl   $0x806c140,0x4(%esp)
movl   $0x1,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x23,0x8(%esp)
movl   $0x806c143,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x11,0x8(%esp)
movl   $0x806c146,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x11,0x8(%esp)
movl   $0x806bbae,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x22,0x8(%esp)
movl   $0x806c149,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x22,0x8(%esp)
movl   $0x806bba4,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x21,0x8(%esp)
movl   $0x806c14c,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x21,0x8(%esp)
movl   $0x806bba9,0x4(%esp)
movl   $0x1fff,(%esp)
call   80535f0 <fchmod@plt+0x9190>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806c644,0xc(%esp)
movl   $0x806bcae,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x35,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
jmp    80539c2 <fchmod@plt+0x9562>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80772ac,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bf4d,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x50,0x4(%esp)
movl   $0x15,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x80772a8,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bf60,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x17,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x80772a4,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bf7d,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x18,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x80772a0,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bf9a,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x1b,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x807729c,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bfab,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x1a,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x8077298,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cb74,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x20,0x4(%esp)
movl   $0x19,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x8077294,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bfbd,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x40,0x4(%esp)
movl   $0x14,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
testb  $0x1,0x8077417
jne    805450d <fchmod@plt+0xa0ad>
mov    0x8077290,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806cb9c,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x40,0x4(%esp)
movl   $0x13,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
jmp    805450d <fchmod@plt+0xa0ad>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x806bd7a,0xc(%esp)
movl   $0x806bd92,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2c,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
movl   $0x0,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x806c788,0xc(%esp)
movl   $0x806bd97,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2b,(%esp)
call   80531c0 <fchmod@plt+0x8d60>
jmp    8053c0d <fchmod@plt+0x97ad>
lea    0x0(%esi),%esi
mov    $0x806bbcc,%eax
jmp    80537b6 <fchmod@plt+0x9356>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
cmp    $0x8,%ax
je     8056408 <fchmod@plt+0xbfa8>
cmp    $0x9,%ax
je     8056410 <fchmod@plt+0xbfb0>
cmp    $0xa,%ax
je     8056418 <fchmod@plt+0xbfb8>
cmp    $0xb,%ax
je     8056420 <fchmod@plt+0xbfc0>
cmp    $0xc,%ax
je     8056428 <fchmod@plt+0xbfc8>
cmp    $0xd,%ax
je     8056430 <fchmod@plt+0xbfd0>
cmp    $0xe,%ax
je     8056438 <fchmod@plt+0xbfd8>
cmp    $0xf,%ax
je     8056440 <fchmod@plt+0xbfe0>
cmp    $0x10,%ax
je     8056458 <fchmod@plt+0xbff8>
cmp    $0x11,%ax
je     8056460 <fchmod@plt+0xc000>
cmp    $0x12,%ax
je     8056470 <fchmod@plt+0xc010>
cmp    $0x1c,%ax
je     8056478 <fchmod@plt+0xc018>
cmp    $0x1d,%ax
je     8056480 <fchmod@plt+0xc020>
cmp    $0x21,%ax
je     8056488 <fchmod@plt+0xc028>
cmp    $0x22,%ax
je     8056490 <fchmod@plt+0xc030>
cmp    $0x23,%ax
je     8056498 <fchmod@plt+0xc038>
cmp    $0x24,%ax
je     8056448 <fchmod@plt+0xbfe8>
cmp    $0x25,%ax
je     80564a0 <fchmod@plt+0xc040>
cmp    $0x26,%ax
je     80564a8 <fchmod@plt+0xc048>
cmp    $0x27,%ax
je     80564b0 <fchmod@plt+0xc050>
cmp    $0x28,%ax
je     80564c0 <fchmod@plt+0xc060>
cmp    $0x30,%ax
je     80564c8 <fchmod@plt+0xc068>
cmp    $0x32,%ax
je     80564d0 <fchmod@plt+0xc070>
cmp    $0x33,%ax
je     80564d5 <fchmod@plt+0xc075>
cmp    $0x34,%ax
je     80564b8 <fchmod@plt+0xc058>
cmp    $0x35,%ax
je     80564da <fchmod@plt+0xc07a>
cmp    $0x36,%ax
je     80564df <fchmod@plt+0xc07f>
cmp    $0x37,%ax
je     80564e5 <fchmod@plt+0xc085>
cmp    $0x38,%ax
je     80564ea <fchmod@plt+0xc08a>
cmp    $0x5e,%ax
je     80564ef <fchmod@plt+0xc08f>
cmp    $0x5f,%ax
je     805644d <fchmod@plt+0xbfed>
cmp    $0x95,%ax
je     80564b8 <fchmod@plt+0xc058>
cmp    $0x45,%ax
je     80564f5 <fchmod@plt+0xc095>
cmp    $0x2b,%ax
je     80564ff <fchmod@plt+0xc09f>
cmp    $0x2c,%ax
je     8056505 <fchmod@plt+0xc0a5>
cmp    $0x2d,%ax
je     805650a <fchmod@plt+0xc0aa>
cmp    $0x2e,%ax
je     805650f <fchmod@plt+0xc0af>
cmp    $0x2f,%ax
je     80564fa <fchmod@plt+0xc09a>
cmp    $0x39,%ax
je     8056515 <fchmod@plt+0xc0b5>
cmp    $0x3a,%ax
je     805651a <fchmod@plt+0xc0ba>
cmp    $0x3b,%ax
je     805651f <fchmod@plt+0xc0bf>
cmp    $0x3c,%ax
je     8056525 <fchmod@plt+0xc0c5>
cmp    $0x3d,%ax
je     805652a <fchmod@plt+0xc0ca>
cmp    $0x3e,%ax
je     8056535 <fchmod@plt+0xc0d5>
cmp    $0x3f,%ax
je     805653a <fchmod@plt+0xc0da>
cmp    $0x40,%ax
je     805653f <fchmod@plt+0xc0df>
cmp    $0x41,%ax
je     8056545 <fchmod@plt+0xc0e5>
cmp    $0x42,%ax
je     805654a <fchmod@plt+0xc0ea>
cmp    $0x43,%ax
je     805654f <fchmod@plt+0xc0ef>
cmp    $0x44,%ax
je     805652f <fchmod@plt+0xc0cf>
cmp    $0x84,%ax
je     8056555 <fchmod@plt+0xc0f5>
cmp    $0x96,%ax
je     805652f <fchmod@plt+0xc0cf>
cmp    $0x97,%ax
je     80564fa <fchmod@plt+0xc09a>
repz ret
jmp    806aa90 <fchmod@plt+0x20630>
lea    0x0(%esi),%esi
jmp    8057dd0 <fchmod@plt+0xd970>
lea    0x0(%esi),%esi
jmp    8060ca0 <fchmod@plt+0x16840>
lea    0x0(%esi),%esi
jmp    8057e70 <fchmod@plt+0xda10>
lea    0x0(%esi),%esi
jmp    8057f80 <fchmod@plt+0xdb20>
lea    0x0(%esi),%esi
jmp    8058870 <fchmod@plt+0xe410>
lea    0x0(%esi),%esi
jmp    8058a30 <fchmod@plt+0xe5d0>
lea    0x0(%esi),%esi
jmp    80589f0 <fchmod@plt+0xe590>
lea    0x0(%esi),%esi
jmp    8066140 <fchmod@plt+0x1bce0>
lea    0x0(%esi),%esi
jmp    805aee0 <fchmod@plt+0x10a80>
lea    0x0(%esi),%esi
jmp    8058ac0 <fchmod@plt+0xe660>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
jmp    8063430 <fchmod@plt+0x18fd0>
lea    0x0(%esi),%esi
jmp    805a570 <fchmod@plt+0x10110>
lea    0x0(%esi),%esi
jmp    8057df0 <fchmod@plt+0xd990>
lea    0x0(%esi),%esi
jmp    8057e20 <fchmod@plt+0xd9c0>
lea    0x0(%esi),%esi
jmp    8062f60 <fchmod@plt+0x18b00>
lea    0x0(%esi),%esi
jmp    8062cc0 <fchmod@plt+0x18860>
lea    0x0(%esi),%esi
jmp    80619d0 <fchmod@plt+0x17570>
lea    0x0(%esi),%esi
jmp    804ee70 <fchmod@plt+0x4a10>
lea    0x0(%esi),%esi
jmp    804ee50 <fchmod@plt+0x49f0>
lea    0x0(%esi),%esi
jmp    8058700 <fchmod@plt+0xe2a0>
lea    0x0(%esi),%esi
jmp    804ea40 <fchmod@plt+0x45e0>
lea    0x0(%esi),%esi
jmp    8058650 <fchmod@plt+0xe1f0>
lea    0x0(%esi),%esi
jmp    805a630 <fchmod@plt+0x101d0>
lea    0x0(%esi),%esi
jmp    8052dd0 <fchmod@plt+0x8970>
jmp    8050bd0 <fchmod@plt+0x6770>
jmp    804ead0 <fchmod@plt+0x4670>
nop
jmp    806ac30 <fchmod@plt+0x207d0>
jmp    80611e0 <fchmod@plt+0x16d80>
jmp    8060a00 <fchmod@plt+0x165a0>
nop
jmp    805af10 <fchmod@plt+0x10ab0>
jmp    804eaa0 <fchmod@plt+0x4640>
jmp    8058620 <fchmod@plt+0xe1c0>
nop
jmp    80635f0 <fchmod@plt+0x19190>
jmp    8061cb0 <fchmod@plt+0x17850>
jmp    8065f90 <fchmod@plt+0x1bb30>
nop
jmp    80604c0 <fchmod@plt+0x16060>
jmp    8064f20 <fchmod@plt+0x1aac0>
jmp    8058090 <fchmod@plt+0xdc30>
nop
jmp    80581b0 <fchmod@plt+0xdd50>
jmp    8064f40 <fchmod@plt+0x1aae0>
jmp    8061940 <fchmod@plt+0x174e0>
nop
jmp    8058370 <fchmod@plt+0xdf10>
jmp    805fac0 <fchmod@plt+0x15660>
jmp    804ea70 <fchmod@plt+0x4610>
nop
jmp    8063e80 <fchmod@plt+0x19a20>
jmp    8063e60 <fchmod@plt+0x19a00>
jmp    8058890 <fchmod@plt+0xe430>
nop
jmp    8058a10 <fchmod@plt+0xe5b0>
jmp    8065d60 <fchmod@plt+0x1b900>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     8056583 <fchmod@plt+0xc123>
xchg   %ax,%ax
mov    0x24(%eax),%edx
mov    %edx,(%ebx)
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    (%ebx),%eax
test   %eax,%eax
jne    8056570 <fchmod@plt+0xc110>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773b4,%eax
test   %eax,%eax
je     80565b4 <fchmod@plt+0xc154>
mov    0x4(%esp),%edx
movzwl 0x10(%edx),%edx
cmp    (%eax),%dx
jne    80565ad <fchmod@plt+0xc14d>
jmp    80565b4 <fchmod@plt+0xc154>
cmp    %dx,(%eax)
je     80565b4 <fchmod@plt+0xc154>
mov    0x18(%eax),%eax
test   %eax,%eax
jne    80565a8 <fchmod@plt+0xc148>
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x806c14f,%eax
sub    $0x2,%edx
cmp    $0x21,%edx
ja     80565d8 <fchmod@plt+0xc178>
mov    0x806cca0(,%edx,4),%eax
repz ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x20,(%esp)
mov    0x24(%esp),%esi
call   8066570 <fchmod@plt+0x1c110>
movb   $0x1,0x18(%eax)
mov    %eax,%ebx
movl   $0x806e13b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056620 <fchmod@plt+0xc1c0>
movw   $0x9,0x10(%ebx)
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x806c155,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056648 <fchmod@plt+0xc1e8>
movw   $0x31,0x10(%ebx)
mov    %ebx,%eax
movb   $0x0,0x18(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movl   $0x806c15c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056678 <fchmod@plt+0xc218>
movl   $0x806c161,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056688 <fchmod@plt+0xc228>
movw   $0x32,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movw   $0x12,0x10(%ebx)
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movl   $0x806faeb,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80566c0 <fchmod@plt+0xc260>
movl   $0x806c16a,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80566d0 <fchmod@plt+0xc270>
movw   $0xa,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
nop
lea    0x0(%esi,%eiz,1),%esi
movw   $0x33,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806c176,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056770 <fchmod@plt+0xc310>
movl   $0x806c186,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805677b <fchmod@plt+0xc31b>
movl   $0x806c172,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056786 <fchmod@plt+0xc326>
movl   $0x806c179,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056786 <fchmod@plt+0xc326>
movl   $0x806c182,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056791 <fchmod@plt+0xc331>
movl   $0x806c18b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056791 <fchmod@plt+0xc331>
movl   $0x806facc,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805679c <fchmod@plt+0xc33c>
movw   $0x34,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
nop
lea    0x0(%esi,%eiz,1),%esi
movw   $0xd,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movw   $0xf,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movw   $0xb,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movw   $0xc,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806fad5,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80567bb <fchmod@plt+0xc35b>
movw   $0x35,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c194,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     80567e3 <fchmod@plt+0xc383>
movl   $0x806c19b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80567ee <fchmod@plt+0xc38e>
movw   $0x36,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1a5,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805680d <fchmod@plt+0xc3ad>
movw   $0x1c,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1af,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805682c <fchmod@plt+0xc3cc>
movw   $0x1d,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1b8,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805684b <fchmod@plt+0xc3eb>
movw   $0x37,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806faf7,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805686a <fchmod@plt+0xc40a>
movw   $0x38,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1d7,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056889 <fchmod@plt+0xc429>
movw   $0x39,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1c1,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80568a8 <fchmod@plt+0xc448>
movw   $0x3a,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1cb,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80568c7 <fchmod@plt+0xc467>
movw   $0x3b,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1d3,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80568e6 <fchmod@plt+0xc486>
movw   $0x3c,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1df,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056905 <fchmod@plt+0xc4a5>
movw   $0x3d,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1e4,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805692d <fchmod@plt+0xc4cd>
movl   $0x806c1f0,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056938 <fchmod@plt+0xc4d8>
movw   $0x3e,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c1f9,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056957 <fchmod@plt+0xc4f7>
movw   $0x3f,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c4c3,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056976 <fchmod@plt+0xc516>
movw   $0x40,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c202,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056995 <fchmod@plt+0xc535>
movw   $0x41,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c20b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80569b4 <fchmod@plt+0xc554>
movw   $0x42,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c214,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80569d3 <fchmod@plt+0xc573>
movw   $0x43,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c21f,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80569f2 <fchmod@plt+0xc592>
movw   $0x44,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e4ea,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056a11 <fchmod@plt+0xc5b1>
movw   $0x30,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c228,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056a30 <fchmod@plt+0xc5d0>
movw   $0x2f,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c231,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056a4f <fchmod@plt+0xc5ef>
movw   $0x2e,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c23d,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056a6e <fchmod@plt+0xc60e>
movw   $0x2d,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e462,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056a8d <fchmod@plt+0xc62d>
movw   $0x2c,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c247,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056aac <fchmod@plt+0xc64c>
movw   $0x2b,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c24c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056acf <fchmod@plt+0xc66f>
movw   $0x2a,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c258,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056af2 <fchmod@plt+0xc692>
movw   $0x29,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e4cc,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056b1c <fchmod@plt+0xc6bc>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x3,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c264,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056b46 <fchmod@plt+0xc6e6>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x2,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e27c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056b70 <fchmod@plt+0xc710>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x1b,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c270,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056b9a <fchmod@plt+0xc73a>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0xf,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c27d,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056bc4 <fchmod@plt+0xc764>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x1a,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c28f,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056bee <fchmod@plt+0xc78e>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x15,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e16c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056c18 <fchmod@plt+0xc7b8>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x19,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e369,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056c42 <fchmod@plt+0xc7e2>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x7,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c298,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056c6c <fchmod@plt+0xc80c>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0xc,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e4a2,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056c96 <fchmod@plt+0xc836>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x6,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e1c4,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056cc0 <fchmod@plt+0xc860>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x1c,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2a1,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056cea <fchmod@plt+0xc88a>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x13,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2ac,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056d14 <fchmod@plt+0xc8b4>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0xe,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e3a4,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056d3e <fchmod@plt+0xc8de>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x9,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e252,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056d68 <fchmod@plt+0xc908>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x12,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2b8,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056d92 <fchmod@plt+0xc932>
movw   $0x1e,0x10(%ebx)
movb   $0x0,0x18(%ebx)
movl   $0x5,0x14(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806f245,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056dba <fchmod@plt+0xc95a>
movl   $0x806c2c6,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056dc5 <fchmod@plt+0xc965>
movw   $0x10,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806bb90,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056ded <fchmod@plt+0xc98d>
movl   $0x806c2ce,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056df8 <fchmod@plt+0xc998>
movw   $0xe,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2d3,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056770 <fchmod@plt+0xc310>
movl   $0x806c2dc,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805677b <fchmod@plt+0xc31b>
movl   $0x806bbc2,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056e47 <fchmod@plt+0xc9e7>
movw   $0x28,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c4df,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056e66 <fchmod@plt+0xca06>
movw   $0x27,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2e5,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056e85 <fchmod@plt+0xca25>
movw   $0x26,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2ed,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056ea4 <fchmod@plt+0xca44>
movw   $0x25,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2f5,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056ec3 <fchmod@plt+0xca63>
movw   $0x24,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c2fe,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056ee2 <fchmod@plt+0xca82>
movw   $0x23,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806bbaf,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056f01 <fchmod@plt+0xcaa1>
movw   $0x11,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806faac,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056f20 <fchmod@plt+0xcac0>
movw   $0x22,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c302,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056f3f <fchmod@plt+0xcadf>
movw   $0x21,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c30c,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056f5e <fchmod@plt+0xcafe>
movw   $0x8,0x10(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c314,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056f81 <fchmod@plt+0xcb21>
movw   $0x1,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c31d,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8056fa9 <fchmod@plt+0xcb49>
movl   $0x806c324,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056fb8 <fchmod@plt+0xcb58>
movw   $0x3,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c32a,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056fdb <fchmod@plt+0xcb7b>
movw   $0x20,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c336,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8056ffe <fchmod@plt+0xcb9e>
movw   $0x1f,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806bc26,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057026 <fchmod@plt+0xcbc6>
movl   $0x806c33f,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8057035 <fchmod@plt+0xcbd5>
movw   $0x15,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c347,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8057058 <fchmod@plt+0xcbf8>
movw   $0x17,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c351,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805707b <fchmod@plt+0xcc1b>
movw   $0x18,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c35b,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805709e <fchmod@plt+0xcc3e>
movw   $0x1b,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c362,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80570c1 <fchmod@plt+0xcc61>
movw   $0x1a,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806e178,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    80570e4 <fchmod@plt+0xcc84>
movw   $0x19,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c36a,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8057107 <fchmod@plt+0xcca7>
movw   $0x13,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c374,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805712a <fchmod@plt+0xccca>
movw   $0x5,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
movl   $0x806c37e,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805714d <fchmod@plt+0xcced>
movw   $0x6,0x10(%ebx)
movb   $0x0,0x18(%ebx)
jmp    8056615 <fchmod@plt+0xc1b5>
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049be0 <free@plt>
jmp    8056615 <fchmod@plt+0xc1b5>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x20(%esp),%ebx
movl   $0x806c387,0x4(%esp)
mov    %esi,0x18(%esp)
mov    $0x1fff,%esi
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    8057198 <fchmod@plt+0xcd38>
mov    %esi,%eax
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x806c38b,0x4(%esp)
mov    $0x1,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806bd1d,0x4(%esp)
mov    $0x2,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806faf7,0x4(%esp)
mov    $0x4,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c390,0x4(%esp)
mov    $0x8,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c399,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c1b8,0x4(%esp)
mov    $0x10,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c161,0x4(%esp)
mov    $0x20,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806faeb,0x4(%esp)
mov    $0x40,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c3a5,0x4(%esp)
mov    $0x80,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c3b1,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806e13b,0x4(%esp)
mov    $0x100,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c3b8,0x4(%esp)
mov    $0x200,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806bc26,0x4(%esp)
mov    $0x400,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c3be,0x4(%esp)
mov    $0x800,%si
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     8057188 <fchmod@plt+0xcd28>
movl   $0x806c3ca,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
cmp    $0x1,%eax
sbb    %esi,%esi
and    $0x1001,%esi
sub    $0x1,%esi
jmp    8057188 <fchmod@plt+0xcd28>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8077414,%eax
mov    %eax,%edx
and    $0xfbffffff,%eax
mov    %eax,0x8077414
mov    0x80777bc,%eax
and    $0x4000000,%edx
mov    %edx,0x2c(%esp)
cmp    $0x4,%eax
je     8057365 <fchmod@plt+0xcf05>
cmp    $0x2,%eax
jne    80575a0 <fchmod@plt+0xd140>
mov    $0x806d594,%ebx
mov    $0x806d64c,%eax
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,0x24(%esp)
mov    %eax,%edi
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
test   %edi,%edi
mov    %eax,%ebx
je     80573c9 <fchmod@plt+0xcf69>
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,%ebx
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     80573df <fchmod@plt+0xcf7f>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,%ebx
mov    0x80773b4,%ebp
mov    0x80777bc,%eax
test   %ebp,%ebp
jne    80573f7 <fchmod@plt+0xcf97>
jmp    8057424 <fchmod@plt+0xcfc4>
mov    0x18(%ebp),%ebp
test   %ebp,%ebp
je     8057424 <fchmod@plt+0xcfc4>
test   %eax,0x4(%ebp)
je     80573f0 <fchmod@plt+0xcf90>
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,%esi
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x18(%ebp),%ebp
lea    (%esi,%esi,2),%edx
test   %ebp,%ebp
lea    0x2(%ebx,%eax,1),%eax
lea    (%eax,%edx,8),%ebx
mov    0x80777bc,%eax
jne    80573f7 <fchmod@plt+0xcf97>
cmp    $0x1,%eax
je     805776f <fchmod@plt+0xd30f>
mov    0x8077434,%eax
test   %eax,%eax
je     805743e <fchmod@plt+0xcfde>
mov    %eax,(%esp)
call   8049be0 <free@plt>
add    $0x1,%ebx
mov    %ebx,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    %eax,0x8077434
mov    0x28(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049cb0 <stpcpy@plt>
test   %edi,%edi
je     8057470 <fchmod@plt+0xd010>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0x24(%esp),%edx
test   %edx,%edx
je     8057488 <fchmod@plt+0xd028>
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049e40 <strcat@plt>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    0x80773b4,%edi
mov    0x80777bc,%edx
add    %eax,%ebx
test   %edi,%edi
je     805757a <fchmod@plt+0xd11a>
xchg   %ax,%ax
test   %edx,0x4(%edi)
je     805756f <fchmod@plt+0xd10f>
mov    0x8(%edi),%ecx
test   %ecx,%ecx
je     805756f <fchmod@plt+0xd10f>
cmpb   $0x0,(%ecx)
je     805756f <fchmod@plt+0xd10f>
mov    0x80773b8,%esi
xor    %ebp,%ebp
test   %esi,%esi
je     805750c <fchmod@plt+0xd0ac>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3,%ebp
je     8057500 <fchmod@plt+0xd0a0>
cmpl   $0x3,0x4(%esi)
je     8057500 <fchmod@plt+0xd0a0>
mov    0x80777bc,%edx
test   %edx,0xc(%esi)
je     8057500 <fchmod@plt+0xd0a0>
movzwl (%edi),%edx
cmp    %dx,0x10(%esi)
je     8057660 <fchmod@plt+0xd200>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esi),%esi
test   %esi,%esi
jne    80574d8 <fchmod@plt+0xd078>
cmp    $0x2,%ebp
jg     805751e <fchmod@plt+0xd0be>
sub    %ebx,%ebp
xchg   %ax,%ax
movb   $0x9,(%ebx)
add    $0x1,%ebx
lea    (%ebx,%ebp,1),%eax
cmp    $0x2,%eax
jle    8057510 <fchmod@plt+0xd0b0>
movl   $0x5,0x8(%esp)
mov    0xc(%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,(%esp)
movl   $0x806e0ff,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
call   804a440 <__sprintf_chk@plt>
add    %eax,%ebx
cmpb   $0x0,0x10(%edi)
jne    80576a0 <fchmod@plt+0xd240>
mov    0x80777bc,%edx
mov    0x18(%edi),%edi
test   %edi,%edi
jne    80574a8 <fchmod@plt+0xd048>
cmp    $0x1,%edx
je     80576c8 <fchmod@plt+0xd268>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8057595 <fchmod@plt+0xd135>
orl    $0x4000000,0x8077414
04
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x8,%eax
je     8057365 <fchmod@plt+0xcf05>
cmp    $0x10,%eax
je     80577f3 <fchmod@plt+0xd393>
cmp    $0x40,%eax
je     8057760 <fchmod@plt+0xd300>
cmp    $0x20,%eax
xchg   %ax,%ax
je     805782d <fchmod@plt+0xd3cd>
cmp    $0x400,%eax
je     805783b <fchmod@plt+0xd3db>
cmp    $0x800,%eax
je     8057842 <fchmod@plt+0xd3e2>
cmp    $0x1000,%eax
je     8057851 <fchmod@plt+0xd3f1>
cmp    $0x200,%eax
je     8057834 <fchmod@plt+0xd3d4>
add    $0xffffff80,%eax
je     8057858 <fchmod@plt+0xd3f8>
movl   $0x5,0x8(%esp)
movl   $0x806dc30,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806dde8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806df94,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049c80 <dcgettext@plt>
mov    %eax,0x24(%esp)
jmp    80573ad <fchmod@plt+0xcf4d>
xchg   %ax,%ax
add    $0x1,%ebp
mov    (%esi),%eax
cmp    $0x1,%ebp
je     80576b0 <fchmod@plt+0xd250>
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
movl   $0x806fb56,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a440 <__sprintf_chk@plt>
add    %eax,%ebx
movb   $0x9,(%ebx)
add    $0x1,%ebx
jmp    8057500 <fchmod@plt+0xd0a0>
nop
lea    0x0(%esi,%eiz,1),%esi
movw   $0xa,(%ebx)
add    $0x1,%ebx
jmp    8057569 <fchmod@plt+0xd109>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x806f1fe,0x4(%esp)
call   804a290 <sprintf@plt>
add    %eax,%ebx
jmp    8057690 <fchmod@plt+0xd230>
mov    0x80773b8,%esi
test   %esi,%esi
jne    80576e3 <fchmod@plt+0xd283>
jmp    8057583 <fchmod@plt+0xd123>
nop
mov    0x1c(%esi),%esi
test   %esi,%esi
je     8057583 <fchmod@plt+0xd123>
cmpw   $0x1e,0x10(%esi)
jne    80576d8 <fchmod@plt+0xd278>
movl   $0x5,0x8(%esp)
movl   $0x806e092,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   80565c0 <fchmod@plt+0xc160>
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x18(%esp)
mov    %eax,0x14(%esp)
mov    (%esi),%eax
mov    %ebx,(%esp)
movl   $0x806e0a1,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
call   804a440 <__sprintf_chk@plt>
add    %eax,%ebx
jmp    80576d8 <fchmod@plt+0xd278>
mov    $0x806d7dc,%ebx
mov    $0x806d8a0,%eax
jmp    805736f <fchmod@plt+0xcf0f>
movl   $0x5,0x8(%esp)
movl   $0x806e092,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x80773b8,%edx
test   %edx,%edx
je     805742d <fchmod@plt+0xcfcd>
lea    0x9(%eax),%ecx
mov    %edx,%esi
mov    %ecx,%ebp
jmp    80577bb <fchmod@plt+0xd35b>
lea    0x0(%esi),%esi
mov    0x1c(%esi),%esi
test   %esi,%esi
je     805742d <fchmod@plt+0xcfcd>
cmpw   $0x1e,0x10(%esi)
jne    80577b0 <fchmod@plt+0xd350>
mov    0x14(%esi),%eax
add    %ebp,%ebx
mov    %eax,(%esp)
call   80565c0 <fchmod@plt+0xc160>
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,%ebx
jmp    80577b0 <fchmod@plt+0xd350>
mov    $0x806d48c,%eax
movl   $0x5,0x8(%esp)
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8049fc0 <strlen@plt>
movl   $0x0,0x24(%esp)
mov    %eax,%ebx
jmp    80573df <fchmod@plt+0xcf7f>
mov    $0x806d2dc,%eax
jmp    80577f8 <fchmod@plt+0xd398>
mov    $0x806ce58,%eax
jmp    80577f8 <fchmod@plt+0xd398>
mov    $0x806d128,%eax
jmp    80577f8 <fchmod@plt+0xd398>
mov    $0x806da50,%ebx
mov    $0x806da98,%eax
jmp    805736f <fchmod@plt+0xcf0f>
mov    $0x806cff8,%eax
jmp    80577f8 <fchmod@plt+0xd398>
mov    $0x806cd28,%eax
jmp    80577f8 <fchmod@plt+0xd398>
nop
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x18(%esp)
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x100,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
cmpb   $0x0,(%esi)
jne    80578a8 <fchmod@plt+0xd448>
mov    (%ebx),%eax
cmp    $0x45,%eax
je     80578bd <fchmod@plt+0xd45d>
jg     80578b8 <fchmod@plt+0xd458>
cmp    $0x20,%eax
je     80578e0 <fchmod@plt+0xd480>
cmp    $0x2d,%eax
je     8057908 <fchmod@plt+0xd4a8>
nop
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x65,%eax
jne    80578a8 <fchmod@plt+0xd448>
movl   $0x0,0x4(%esp)
movl   $0x12,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    0x18(%esp),%esi
mov    %eax,(%ebx)
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
nop
movl   $0x0,0x4(%esp)
movl   $0xb,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    0x18(%esp),%esi
mov    %eax,(%ebx)
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0xc,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    0x18(%esp),%esi
mov    %eax,(%ebx)
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8077340,%ebp
mov    0x30(%esp),%esi
cmp    $0x18,%ebp
lea    -0x1(%ebp),%eax
jg     8057953 <fchmod@plt+0xd4f3>
mov    $0x19,%ebp
mov    $0x18,%eax
movl   $0x1,0x8(%esp)
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8062530 <fchmod@plt+0x180d0>
test   %eax,%eax
cmovns %eax,%edi
lea    (%esi,%edi,1),%eax
mov    %edi,%ebx
movzbl (%eax),%edx
cmp    $0xa,%dl
jne    805799d <fchmod@plt+0xd53d>
jmp    80579a1 <fchmod@plt+0xd541>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%ebx
lea    (%esi,%ebx,1),%eax
movzbl (%eax),%edx
cmp    $0xa,%dl
je     80579a1 <fchmod@plt+0xd541>
test   %dl,%dl
jne    8057980 <fchmod@plt+0xd520>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
cmp    %ebp,%eax
cmovbe %ebx,%edi
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8077414,%eax
movl   $0x0,(%esp)
movl   $0xffffffff,0x24(%esp)
and    $0x8,%eax
mov    %eax,0x18(%esp)
mov    0x80777bc,%eax
mov    %eax,0x1c(%esp)
call   804a380 <curs_set@plt>
call   8067b50 <fchmod@plt+0x1d6f0>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
call   8067ba0 <fchmod@plt+0x1d740>
call   8057330 <fchmod@plt+0xced0>
mov    0x8077414,%eax
movl   $0x100,0x80777bc
00
test   $0x8,%al
jne    8057d95 <fchmod@plt+0xd935>
movl   $0x100,(%esp)
call   8068380 <fchmod@plt+0x1df20>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x8077434,%ebx
movl   $0x0,0x14(%esp)
mov    0x14(%esp),%esi
cmpb   $0x0,(%ebx)
jne    8057a79 <fchmod@plt+0xd619>
jmp    8057d65 <fchmod@plt+0xd905>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
lea    0x1(%esi),%edx
je     8057a98 <fchmod@plt+0xd638>
mov    %edx,%esi
mov    %ebx,(%esp)
call   8057930 <fchmod@plt+0xd4d0>
add    %eax,%ebx
movzbl (%ebx),%eax
cmp    $0xa,%al
jne    8057a70 <fchmod@plt+0xd610>
movzbl 0x1(%ebx),%eax
add    $0x1,%ebx
lea    0x1(%esi),%edx
test   %al,%al
jne    8057a77 <fchmod@plt+0xd617>
test   %edx,%edx
mov    %esi,0x14(%esp)
je     8057d65 <fchmod@plt+0xd905>
mov    $0xffffffff,%eax
xor    %edi,%edi
mov    0x24(%esp),%edx
cmp    %eax,%edi
jne    8057bab <fchmod@plt+0xd74b>
nop
cmp    $0xffffffff,%edx
je     8057bab <fchmod@plt+0xd74b>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
lea    0x23(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x22(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
cmp    $0x199,%eax
mov    %eax,0x24(%esp)
je     8057cd8 <fchmod@plt+0xd878>
lea    0x23(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x22(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   8057860 <fchmod@plt+0xd400>
lea    0x23(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x22(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x100,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     8057b9d <fchmod@plt+0xd73d>
mov    %eax,(%esp)
call   8056590 <fchmod@plt+0xc130>
test   %eax,%eax
je     8057b9d <fchmod@plt+0xd73d>
movzwl (%eax),%eax
cmp    $0x8,%ax
je     8057c5c <fchmod@plt+0xd7fc>
cmp    $0xb,%ax
je     8057cb8 <fchmod@plt+0xd858>
cmp    $0xc,%ax
je     8057d00 <fchmod@plt+0xd8a0>
cmp    $0xd,%ax
je     8057d20 <fchmod@plt+0xd8c0>
cmp    $0xf,%ax
je     8057d48 <fchmod@plt+0xd8e8>
cmp    $0x1c,%ax
je     8057c61 <fchmod@plt+0xd801>
cmp    $0x1d,%ax
je     8057c61 <fchmod@plt+0xd801>
cmp    $0x12,%ax
je     8057c61 <fchmod@plt+0xd801>
mov    %edi,%eax
cmp    %eax,%edi
mov    0x24(%esp),%edx
je     8057ab8 <fchmod@plt+0xd658>
call   8067b50 <fchmod@plt+0x1d6f0>
test   %edi,%edi
mov    0x8077434,%ebp
je     8057bdc <fchmod@plt+0xd77c>
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8057930 <fchmod@plt+0xd4d0>
add    %eax,%ebp
xor    %eax,%eax
cmpb   $0xa,0x0(%ebp)
sete   %al
add    $0x1,%ebx
add    %eax,%ebp
cmp    %edi,%ebx
jne    8057bc0 <fchmod@plt+0xd760>
mov    0x8077410,%esi
test   %esi,%esi
je     8057ac1 <fchmod@plt+0xd661>
cmpb   $0x0,0x0(%ebp)
je     8057ac1 <fchmod@plt+0xd661>
xor    %ebx,%ebx
jmp    8057c02 <fchmod@plt+0xd7a2>
cmpb   $0x0,0x0(%ebp)
je     8057ac1 <fchmod@plt+0xd661>
mov    %ebp,(%esp)
call   8057930 <fchmod@plt+0xd4d0>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%esi
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8057c3f <fchmod@plt+0xd7df>
mov    0x8077704,%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
add    %esi,%ebp
xor    %eax,%eax
cmpb   $0xa,0x0(%ebp)
sete   %al
add    $0x1,%ebx
add    %eax,%ebp
cmp    %ebx,0x8077410
ja     8057bf8 <fchmod@plt+0xd798>
jmp    8057ac1 <fchmod@plt+0xd661>
call   806aa70 <fchmod@plt+0x20610>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%eax
test   %ebx,%ebx
mov    %eax,0x80777bc
jne    8057d72 <fchmod@plt+0xd912>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8068380 <fchmod@plt+0x1df20>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
call   *0x50(%esp)
mov    0x8077434,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x8077434
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077410,%eax
lea    -0x2(%eax),%edx
cmp    %edx,%edi
jbe    8057d38 <fchmod@plt+0xd8d8>
mov    %edi,%edx
sub    %eax,%edx
mov    %edi,%eax
lea    0x2(%edx),%edi
jmp    8057b9f <fchmod@plt+0xd73f>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x28(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   8067810 <fchmod@plt+0x1d3b0>
mov    %edi,%eax
jmp    8057b9f <fchmod@plt+0xd73f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077410,%edx
mov    %edi,%eax
add    %edi,%edx
lea    -0x1(%edx),%ecx
cmp    0x14(%esp),%ecx
jae    8057b9f <fchmod@plt+0xd73f>
lea    -0x2(%edx),%edi
jmp    8057b9f <fchmod@plt+0xd73f>
nop
xor    %eax,%eax
test   %edi,%edi
je     8057b9f <fchmod@plt+0xd73f>
mov    %edi,%eax
sub    $0x1,%edi
jmp    8057b9f <fchmod@plt+0xd73f>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
xor    %edi,%edi
jmp    8057b9f <fchmod@plt+0xd73f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077410,%eax
lea    -0x1(%edi,%eax,1),%edx
mov    %edi,%eax
cmp    0x14(%esp),%edx
jae    8057b9f <fchmod@plt+0xd73f>
add    $0x1,%edi
jmp    8057b9f <fchmod@plt+0xd73f>
movl   $0x0,0x14(%esp)
jmp    8057aa4 <fchmod@plt+0xd644>
call   8067bd0 <fchmod@plt+0x1d770>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
orl    $0x8,0x8077414
call   8059910 <fchmod@plt+0xf4b0>
jmp    8057c82 <fchmod@plt+0xd822>
and    $0xfffffff7,%eax
mov    %eax,0x8077414
call   8059910 <fchmod@plt+0xf4b0>
jmp    8057a34 <fchmod@plt+0xd5d4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x804b040,(%esp)
call   80579c0 <fchmod@plt+0xd560>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x806a7c0,(%esp)
call   80579c0 <fchmod@plt+0xd560>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x80773f8,%eax
movb   $0x1,0x80773bc
mov    0x4(%eax),%edx
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%ebx
mov    0x8(%ebx),%eax
mov    %eax,0x10(%ebx)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    0x8077410,%edx
movb   $0x1,0x80773bc
sub    $0x1,%edx
mov    %eax,0x1c(%ebx)
mov    0x80773f8,%eax
mov    %edx,0x20(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
mov    0x4(%eax),%ecx
cmp    $0x1,%ecx
je     8057f58 <fchmod@plt+0xdaf8>
mov    0x8077418,%edx
mov    0x8077410,%esi
test   $0x8,%dl
jne    8057ea7 <fchmod@plt+0xda47>
lea    -0x1(%esi),%edi
cmp    %edi,%ecx
jl     8057f58 <fchmod@plt+0xdaf8>
testb  $0x80,0x8077415
je     8057f38 <fchmod@plt+0xdad8>
sub    $0x2,%esi
test   %esi,%esi
jle    8057f0a <fchmod@plt+0xdaaa>
cmp    %eax,0x4(%ebx)
je     8057f0a <fchmod@plt+0xdaaa>
xor    %edi,%edi
jmp    8057ed3 <fchmod@plt+0xda73>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x4(%ebx),%eax
je     8057f0a <fchmod@plt+0xdaaa>
mov    0x8077418,%edx
mov    0xc(%eax),%eax
and    $0x8,%edx
mov    %eax,0x10(%ebx)
je     8057efc <fchmod@plt+0xda9c>
test   %eax,%eax
je     8057efc <fchmod@plt+0xda9c>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
mov    0x80773f8,%ebx
divl   0x8077340
add    %eax,%edi
sub    $0x1,%esi
mov    %esi,%eax
sub    %edi,%eax
test   %eax,%eax
mov    0x10(%ebx),%eax
jg     8057ec8 <fchmod@plt+0xda68>
mov    0x1c(%ebx),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x18(%ebx)
movl   $0x1,(%esp)
call   806a720 <fchmod@plt+0x202c0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebx),%eax
movl   $0x0,0x20(%ebx)
movl   $0x0,0x1c(%ebx)
mov    %eax,0x10(%ebx)
jmp    8057eb4 <fchmod@plt+0xda54>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movb   $0x1,0x80773bc
mov    %eax,0xc(%ebx)
mov    %eax,0x10(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%ebx
mov    0x807740c,%edx
mov    0x10(%ebx),%eax
mov    0x8(%ebx),%ecx
mov    0x4(%eax),%esi
add    %edx,%esi
sub    $0x1,%esi
cmp    0x4(%ecx),%esi
jg     8058010 <fchmod@plt+0xdbb0>
testb  $0x80,0x8077415
je     8057ff8 <fchmod@plt+0xdb98>
sub    $0x2,%edx
test   %edx,%edx
jle    8057fcf <fchmod@plt+0xdb6f>
cmp    %eax,%ecx
jne    8057fc4 <fchmod@plt+0xdb64>
jmp    8057fcf <fchmod@plt+0xdb6f>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
je     8057fcc <fchmod@plt+0xdb6c>
sub    $0x1,%edx
mov    0x8(%eax),%eax
jne    8057fc0 <fchmod@plt+0xdb60>
mov    %eax,0x10(%ebx)
mov    0x1c(%ebx),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x18(%ebx)
movl   $0x1,(%esp)
call   806a720 <fchmod@plt+0x202c0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%eax
movl   $0x0,0x20(%ebx)
movl   $0x0,0x1c(%ebx)
mov    %eax,0x10(%ebx)
jmp    8057fad <fchmod@plt+0xdb4d>
xchg   %ax,%ax
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8057e20 <fchmod@plt+0xd9c0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80773f8,%eax
mov    0x20(%esp),%esi
mov    0x10(%eax),%ebx
cmp    0x4(%eax),%ebx
mov    0x1c(%eax),%edi
je     805805e <fchmod@plt+0xdbfe>
mov    %ebx,%edx
jmp    8058043 <fchmod@plt+0xdbe3>
xchg   %ax,%ax
mov    0x10(%eax),%edx
mov    0xc(%edx),%edx
subl   $0x1,0x20(%eax)
mov    %edx,0x10(%eax)
mov    %edx,(%esp)
call   80642e0 <fchmod@plt+0x19e80>
test   %al,%al
mov    0x80773f8,%eax
je     8058040 <fchmod@plt+0xdbe0>
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %esi,%eax
test   %al,%al
je     805807e <fchmod@plt+0xdc1e>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   8058020 <fchmod@plt+0xdbc0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80773f8,%ebx
mov    0x30(%esp),%edi
mov    0x10(%ebx),%esi
cmp    0x8(%ebx),%esi
mov    0x1c(%ebx),%ebp
mov    %esi,%eax
jne    80580f0 <fchmod@plt+0xdc90>
jmp    8058190 <fchmod@plt+0xdd30>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
mov    0x8(%eax),%eax
cmp    %eax,0x8(%ebx)
mov    %eax,0x10(%ebx)
je     8058190 <fchmod@plt+0xdd30>
mov    %eax,(%esp)
call   80643c0 <fchmod@plt+0x19f60>
test   %al,%al
je     80580d8 <fchmod@plt+0xdc78>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
cmp    0x8(%ebx),%eax
jne    805813f <fchmod@plt+0xdcdf>
jmp    8058190 <fchmod@plt+0xdd30>
nop
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80642e0 <fchmod@plt+0x19e80>
test   %al,%al
jne    805814e <fchmod@plt+0xdcee>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
mov    0x8(%eax),%eax
addl   $0x1,0x20(%ebx)
cmp    %eax,0x8(%ebx)
mov    %eax,0x10(%ebx)
je     8058190 <fchmod@plt+0xdd30>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80643c0 <fchmod@plt+0x19f60>
test   %al,%al
jne    8058110 <fchmod@plt+0xdcb0>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
cmp    0x8(%ebx),%eax
je     8058190 <fchmod@plt+0xdd30>
mov    0x8(%eax),%eax
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
mov    %eax,0x10(%ebx)
mov    %edi,%eax
test   %al,%al
je     8058182 <fchmod@plt+0xdd22>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
jmp    8058170 <fchmod@plt+0xdd10>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   80580b0 <fchmod@plt+0xdc50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80773f8,%eax
mov    0x44(%esp),%edx
mov    0x40(%esp),%edi
mov    %edx,0x14(%esp)
mov    0x1c(%eax),%edx
mov    0x10(%eax),%eax
and    $0xff,%edi
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x80773f8,%edx
movb   $0x0,0x13(%esp)
mov    0x18(%edx),%esi
mov    %eax,%ebx
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    %esi,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%esi
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
je     8058335 <fchmod@plt+0xded5>
mov    0x80773f8,%edx
mov    0x10(%edx),%ecx
mov    0x18(%edx),%ebp
mov    (%ecx),%eax
cmpb   $0x0,(%eax,%ebp,1)
je     8058270 <fchmod@plt+0xde10>
add    %ebp,%esi
mov    $0x1,%ebp
mov    %esi,0x18(%edx)
jmp    8058220 <fchmod@plt+0xddc0>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x13(%esp)
mov    $0x1,%eax
jmp    805829d <fchmod@plt+0xde3d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
cmp    %ecx,0x8(%edx)
je     8058293 <fchmod@plt+0xde33>
movl   $0x0,0x18(%edx)
xor    %eax,%eax
mov    0x8(%ecx),%ecx
test   %ecx,%ecx
mov    %ecx,0x10(%edx)
je     80582f0 <fchmod@plt+0xde90>
test   %al,%al
jne    8058285 <fchmod@plt+0xde25>
mov    (%ecx),%eax
mov    0x18(%edx),%esi
add    %esi,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%esi
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
jne    80582f0 <fchmod@plt+0xde90>
mov    0x80773f8,%edx
mov    0x10(%edx),%ecx
mov    0x18(%edx),%ebp
mov    (%ecx),%eax
cmpb   $0x0,(%eax,%ebp,1)
je     8058280 <fchmod@plt+0xde20>
add    %ebp,%esi
mov    %esi,0x18(%edx)
jmp    80582a6 <fchmod@plt+0xde46>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
test   %eax,%eax
je     805835c <fchmod@plt+0xdefc>
call   8066ae0 <fchmod@plt+0x1c680>
cmpb   $0x0,0x14(%esp)
mov    %eax,0x1c(%ebx)
je     8058328 <fchmod@plt+0xdec8>
mov    0x18(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
movzbl 0x13(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%edx
mov    %dl,0x13(%esp)
mov    0x80773f8,%edx
mov    0x10(%edx),%ecx
mov    0x18(%edx),%eax
mov    (%ecx),%ebp
cmpb   $0x0,0x0(%ebp,%eax,1)
je     8058364 <fchmod@plt+0xdf04>
add    %esi,%eax
mov    %eax,0x18(%edx)
xor    %eax,%eax
jmp    805829d <fchmod@plt+0xde3d>
mov    0x8(%ebx),%eax
mov    %eax,0x10(%ebx)
jmp    8058305 <fchmod@plt+0xdea5>
mov    $0x1,%eax
jmp    805829d <fchmod@plt+0xde3d>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x8077414,%eax
movl   $0x1,0x4(%esp)
shr    $0x1e,%eax
and    $0x1,%eax
mov    %eax,(%esp)
call   80581d0 <fchmod@plt+0xdd70>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x2c,%esp
mov    0x80773f8,%eax
mov    0x44(%esp),%edx
mov    0x40(%esp),%edi
mov    %edx,0x14(%esp)
mov    0x1c(%eax),%edx
mov    0x10(%eax),%eax
and    $0xff,%edi
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movb   $0x0,0x13(%esp)
mov    %eax,%esi
mov    0x80773f8,%edx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    0x18(%edx),%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
je     8058545 <fchmod@plt+0xe0e5>
mov    0x80773f8,%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
jne    80584d0 <fchmod@plt+0xe070>
movb   $0x1,0x13(%esp)
mov    $0x1,%eax
mov    0x10(%ebx),%ebp
test   %ebp,%ebp
je     8058577 <fchmod@plt+0xe117>
test   %al,%al
jne    805853e <fchmod@plt+0xe0de>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
add    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
mov    0x80773f8,%ebx
test   %al,%al
jne    8058590 <fchmod@plt+0xe130>
mov    0x18(%ebx),%eax
test   %eax,%eax
jne    80584a8 <fchmod@plt+0xe048>
mov    0x10(%ebx),%ecx
mov    $0x1,%eax
cmp    0x4(%ebx),%ecx
mov    0xc(%ecx),%ebp
je     80584ee <fchmod@plt+0xe08e>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebp,0x10(%ebx)
mov    %eax,0x18(%ebx)
jmp    8058446 <fchmod@plt+0xdfe6>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
mov    0x10(%ebx),%ebp
jmp    8058446 <fchmod@plt+0xdfe6>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
mov    $0x1,%ebx
jmp    80583e2 <fchmod@plt+0xdf82>
test   %ebp,%ebp
mov    %ebp,0x10(%ebx)
jne    805843e <fchmod@plt+0xdfde>
mov    %ecx,0x10(%ebx)
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
cmpb   $0x0,0x14(%esp)
mov    %eax,0x1c(%ebx)
je     8058531 <fchmod@plt+0xe0d1>
mov    0x18(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
movzbl 0x13(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%ecx
jmp    8058489 <fchmod@plt+0xe029>
mov    %bl,0x13(%esp)
mov    0x80773f8,%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
je     805857f <fchmod@plt+0xe11f>
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
xor    %eax,%eax
jmp    8058433 <fchmod@plt+0xdfd3>
mov    0x4(%ebx),%ecx
jmp    80584f9 <fchmod@plt+0xe099>
mov    $0x1,%eax
jmp    8058433 <fchmod@plt+0xdfd3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%edx
test   %edx,%edx
je     8058577 <fchmod@plt+0xe117>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     8058500 <fchmod@plt+0xe0a0>
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%edx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    0x18(%edx),%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ebx
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
je     8058613 <fchmod@plt+0xe1b3>
mov    0x80773f8,%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
je     8058500 <fchmod@plt+0xe0a0>
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
jmp    80585b8 <fchmod@plt+0xe158>
mov    0x80773f8,%eax
add    %ebx,0x18(%eax)
jmp    8058500 <fchmod@plt+0xe0a0>
sub    $0x1c,%esp
mov    0x8077414,%eax
movl   $0x1,0x4(%esp)
shr    $0x1e,%eax
and    $0x1,%eax
mov    %eax,(%esp)
call   80583a0 <fchmod@plt+0xdf40>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x80773f8,%ebx
testb  $0x2,0x8077417
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
mov    0x1c(%ebx),%esi
jne    80586b8 <fchmod@plt+0xe258>
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
mov    %esi,(%esp)
call   806a2a0 <fchmod@plt+0x1fe40>
test   %al,%al
je     80586a2 <fchmod@plt+0xe242>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x10(%ebx),%eax
mov    0x18(%ebx),%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
mov    0x18(%ebx),%eax
cmp    %edi,%eax
je     80586e3 <fchmod@plt+0xe283>
mov    0x10(%ebx),%edx
mov    (%edx),%edx
cmpb   $0x0,(%edx,%eax,1)
jne    80586ea <fchmod@plt+0xe28a>
movl   $0x0,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
jmp    805867f <fchmod@plt+0xe21f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x80773f8,%ebx
mov    %esi,0x18(%esp)
mov    0x10(%ebx),%eax
mov    0x1c(%ebx),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    %esi,(%esp)
call   806a2a0 <fchmod@plt+0x1fe40>
test   %al,%al
je     805874f <fchmod@plt+0xe2ef>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%ebx
mov    0x20(%esp),%esi
mov    0x10(%ebx),%eax
mov    0x4(%ebx),%edx
cmp    %edx,%eax
je     805881b <fchmod@plt+0xe3bb>
mov    %esi,%ecx
test   %cl,%cl
je     805878c <fchmod@plt+0xe32c>
cmp    0xc(%ebx),%edx
je     805881b <fchmod@plt+0xe3bb>
mov    0xc(%eax),%eax
mov    0x1c(%ebx),%edx
mov    %eax,0x10(%ebx)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x80773f8,%edx
mov    %eax,0x18(%ebx)
mov    0x20(%edx),%eax
test   %eax,%eax
je     8058828 <fchmod@plt+0xe3c8>
testb  $0x8,0x8077418
je     80587cd <fchmod@plt+0xe36d>
mov    0xc(%edx),%ecx
mov    0x10(%edx),%edx
mov    0x8(%edx),%edx
mov    0x4(%edx),%ebx
cmp    %ebx,0x4(%ecx)
je     8058828 <fchmod@plt+0xe3c8>
mov    %esi,%edx
test   %dl,%dl
je     80587f0 <fchmod@plt+0xe390>
mov    $0x1,%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   806a3f0 <fchmod@plt+0x1ff90>
mov    0x80773f8,%eax
mov    0x20(%eax),%eax
test   %eax,%eax
jle    805881b <fchmod@plt+0xe3bb>
movl   $0x0,(%esp)
call   806a2f0 <fchmod@plt+0x1fe90>
test   %al,%al
jne    8058850 <fchmod@plt+0xe3f0>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
testb  $0x80,0x8077415
mov    $0x1,%eax
jne    80587d8 <fchmod@plt+0xe378>
mov    %esi,%ecx
test   %cl,%cl
jne    80587d8 <fchmod@plt+0xe378>
mov    0x8077410,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
add    $0x1,%eax
jmp    80587d8 <fchmod@plt+0xe378>
nop
mov    0x80773f8,%eax
movl   $0x0,0x4(%esp)
mov    0x10(%eax),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
jmp    8058804 <fchmod@plt+0xe3a4>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8058760 <fchmod@plt+0xe300>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   8058760 <fchmod@plt+0xe300>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%ebx
mov    0x20(%esp),%esi
mov    0x10(%ebx),%eax
cmp    0x8(%ebx),%eax
je     805897c <fchmod@plt+0xe51c>
mov    0x8(%eax),%eax
mov    0x1c(%ebx),%edx
mov    %eax,0x10(%ebx)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x80773f8,%edx
mov    %eax,0x18(%ebx)
mov    0x8077418,%eax
and    $0x8,%eax
je     8058988 <fchmod@plt+0xe528>
mov    0x10(%edx),%ecx
mov    0xc(%edx),%ebx
mov    0x4(%ecx),%ecx
sub    0x4(%ebx),%ecx
cmp    0x807740c,%ecx
jl     8058988 <fchmod@plt+0xe528>
testb  $0x80,0x8077415
mov    $0x1,%eax
je     80589b0 <fchmod@plt+0xe550>
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   806a3f0 <fchmod@plt+0x1ff90>
mov    0x8077418,%eax
movb   $0x1,0x80773bc
and    $0x8,%eax
test   %eax,%eax
jne    8058955 <fchmod@plt+0xe4f5>
mov    0x8077410,%eax
mov    0x80773f8,%edx
sub    $0x1,%eax
cmp    %eax,0x20(%edx)
jge    805897c <fchmod@plt+0xe51c>
movl   $0x0,(%esp)
call   806a2f0 <fchmod@plt+0x1fe90>
test   %al,%al
jne    80589d0 <fchmod@plt+0xe570>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8077410,%ecx
sub    $0x1,%ecx
cmp    %ecx,0x20(%edx)
je     805890d <fchmod@plt+0xe4ad>
mov    %esi,%edx
test   %dl,%dl
je     805893e <fchmod@plt+0xe4de>
mov    $0x1,%eax
jmp    805891f <fchmod@plt+0xe4bf>
lea    0x0(%esi),%esi
mov    %esi,%ecx
test   %cl,%cl
jne    805891f <fchmod@plt+0xe4bf>
mov    0x8077410,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
add    $0x1,%eax
jmp    805891f <fchmod@plt+0xe4bf>
mov    0x80773f8,%eax
movl   $0x0,0x4(%esp)
mov    0x10(%eax),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
jmp    8058965 <fchmod@plt+0xe505>
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   80588b0 <fchmod@plt+0xe450>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   80588b0 <fchmod@plt+0xe450>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%ebx
mov    0x18(%ebx),%eax
mov    0x1c(%ebx),%esi
test   %eax,%eax
jne    8058aa0 <fchmod@plt+0xe640>
mov    0x4(%ebx),%eax
cmp    %eax,0x10(%ebx)
je     8058a68 <fchmod@plt+0xe608>
call   8058870 <fchmod@plt+0xe410>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    %esi,(%esp)
call   806a2a0 <fchmod@plt+0x1fe40>
test   %al,%al
je     8058a93 <fchmod@plt+0xe633>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
jmp    8058a68 <fchmod@plt+0xe608>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
mov    0x18(%ebx),%ecx
mov    0x1c(%ebx),%esi
mov    (%eax),%edx
cmpb   $0x0,(%edx,%ecx,1)
jne    8058b28 <fchmod@plt+0xe6c8>
cmp    0x8(%ebx),%eax
je     8058af3 <fchmod@plt+0xe693>
call   80589f0 <fchmod@plt+0xe590>
mov    0x80773f8,%ebx
movl   $0x0,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    %esi,(%esp)
call   806a2a0 <fchmod@plt+0x1fe40>
test   %al,%al
je     8058b1e <fchmod@plt+0xe6be>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   804d5e0 <fchmod@plt+0x3180>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
jmp    8058af3 <fchmod@plt+0xe693>
nop
movb   $0x1,0x807747d
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x14,(%esp)
mov    0x20(%esp),%ebx
call   8066570 <fchmod@plt+0x1c110>
test   %ebx,%ebx
movl   $0x0,(%eax)
mov    %ebx,0xc(%eax)
movl   $0x0,0x8(%eax)
je     8058b90 <fchmod@plt+0xe730>
mov    0x4(%ebx),%edx
movl   $0x0,0x10(%eax)
add    $0x1,%edx
mov    %edx,0x4(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x1,%edx
mov    %edx,0x4(%eax)
movl   $0x0,0x10(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
movl   $0x14,(%esp)
mov    %ebx,0x14(%esp)
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x0,0x10(%ebx)
mov    %eax,(%ebx)
mov    0x8(%esi),%eax
mov    %eax,0x8(%ebx)
mov    0xc(%esi),%eax
mov    %eax,0xc(%ebx)
mov    0x4(%esi),%eax
mov    0x18(%esp),%esi
mov    %eax,0x4(%ebx)
mov    %ebx,%eax
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
mov    0x4(%esp),%ecx
test   %edx,%edx
mov    %edx,0x8(%eax)
mov    %ecx,0xc(%eax)
mov    %eax,0x8(%ecx)
je     8058c2c <fchmod@plt+0xe7cc>
mov    %eax,0xc(%edx)
repz ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     8058c41 <fchmod@plt+0xe7e1>
mov    0x8(%eax),%ecx
mov    %ecx,0x8(%edx)
mov    0x8(%eax),%eax
test   %eax,%eax
je     8058c4b <fchmod@plt+0xe7eb>
mov    %edx,0xc(%eax)
repz ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     8058c66 <fchmod@plt+0xe806>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     8058c75 <fchmod@plt+0xe815>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049be0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8058bb0 <fchmod@plt+0xe750>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
mov    %eax,%edi
movl   $0x0,0xc(%eax)
je     8058ccf <fchmod@plt+0xe86f>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8058bb0 <fchmod@plt+0xe750>
mov    %eax,0x8(%esi)
mov    0x8(%ebx),%ebx
mov    %esi,0xc(%eax)
mov    %eax,%esi
test   %ebx,%ebx
jne    8058cb8 <fchmod@plt+0xe858>
movl   $0x0,0x8(%eax)
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
jne    8058cfa <fchmod@plt+0xe89a>
jmp    8058d19 <fchmod@plt+0xe8b9>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
mov    0x8(%ebx),%eax
test   %eax,%eax
jne    8058cf8 <fchmod@plt+0xe898>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8058c50 <fchmod@plt+0xe7f0>
mov    %eax,%ebx
jmp    8058d0c <fchmod@plt+0xe8ac>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     8058d40 <fchmod@plt+0xe8e0>
mov    0x4(%edx),%edx
xchg   %ax,%ax
add    $0x1,%edx
mov    %edx,0x4(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    8058d30 <fchmod@plt+0xe8d0>
repz ret
nop
xor    %edx,%edx
jmp    8058d30 <fchmod@plt+0xe8d0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
movl   $0x18,(%esp)
mov    %ebx,0x1c(%esp)
mov    %esi,0x20(%esp)
mov    0x38(%esp),%esi
mov    %edi,0x24(%esp)
mov    0x34(%esp),%edi
mov    %ebp,0x28(%esp)
mov    0x30(%esp),%ebp
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0x4(%eax),%ecx
cmp    %ebp,%ecx
je     8058e58 <fchmod@plt+0xe9f8>
mov    %ecx,(%ebx)
mov    %ebp,0x4(%eax)
mov    0x8(%eax),%ecx
cmp    %esi,%ecx
je     8058e48 <fchmod@plt+0xe9e8>
mov    %ecx,0xc(%ebx)
mov    %esi,0x8(%eax)
mov    0xc(%ebp),%eax
mov    %eax,0x4(%ebx)
lea    0x1(%edi),%eax
movl   $0x0,0xc(%ebp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    %eax,0x8(%ebx)
movb   $0x0,(%eax,%edi,1)
mov    0x8(%esi),%eax
mov    %eax,0x10(%ebx)
mov    0x3c(%esp),%eax
add    (%esi),%eax
movl   $0x0,0x8(%esi)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x14(%ebx)
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x0(%ebp),%esi
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
sub    %edi,%eax
add    %esi,%edi
add    $0x1,%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049bb0 <memmove@plt>
mov    %ebp,(%esp)
call   8066790 <fchmod@plt+0x1c330>
mov    %ebx,%eax
mov    0x20(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
nop
movl   $0x0,0xc(%ebx)
jmp    8058da3 <fchmod@plt+0xe943>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%ebx)
jmp    8058d92 <fchmod@plt+0xe932>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80773f8,%eax
mov    0x40(%esp),%ebx
mov    0x4(%eax),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%edi
mov    0x80773f8,%eax
mov    0x4(%eax),%esi
mov    (%ebx),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
mov    %edx,0xc(%esi)
je     8058eae <fchmod@plt+0xea4e>
mov    %esi,0x8(%edx)
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    (%esi),%ebp
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   8049fc0 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %ebp,(%esp)
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esi)
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%eax
mov    %edi,0x4(%esp)
mov    0x4(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049e40 <strcat@plt>
mov    %edi,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%eax
mov    0x8(%eax),%esi
mov    (%ebx),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8058f3c <fchmod@plt+0xeadc>
mov    %esi,0xc(%eax)
mov    (%esi),%edi
mov    %edi,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esi)
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049e40 <strcat@plt>
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    (%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     8058fa1 <fchmod@plt+0xeb41>
mov    0x80773f8,%eax
mov    %edx,0x4(%eax)
mov    (%ebx),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     8058fb2 <fchmod@plt+0xeb52>
mov    0x80773f8,%eax
mov    %edx,0x8(%eax)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ecx
mov    0x64(%esp),%edi
mov    0x50(%esp),%edx
mov    0x54(%esp),%esi
mov    0x58(%esp),%ebp
cmp    %edi,%ecx
mov    %edx,0x20(%esp)
mov    0x60(%esp),%edx
mov    %ecx,0x1c(%esp)
jne    8059008 <fchmod@plt+0xeba8>
cmp    %edx,%ebp
jne    8059008 <fchmod@plt+0xeba8>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x18(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    0x80773f8,%ebx
movb   $0x0,0x2a(%esp)
mov    0x18(%esp),%edx
mov    0x4(%ebx),%ecx
mov    %eax,0x80773fc
mov    0xc(%ebx),%eax
mov    %ecx,0x24(%esp)
mov    0x4(%ecx),%ecx
mov    0x4(%eax),%eax
mov    %ecx,0x14(%esp)
cmp    %ecx,%eax
jl     805905b <fchmod@plt+0xebfb>
mov    0x8(%ebx),%ecx
cmp    0x4(%ecx),%eax
setle  0x2a(%esp)
cmpb   $0x0,0x25(%ebx)
movb   $0x0,0x2b(%esp)
jne    80591e0 <fchmod@plt+0xed80>
mov    0x14(%ebx),%edi
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
mov    0x20(%esp),%edx
mov    (%edx),%ecx
sub    %eax,%edi
mov    %edi,0x14(%ebx)
test   %ecx,%ecx
je     8059238 <fchmod@plt+0xedd8>
mov    (%esi),%edi
mov    (%edi),%ebx
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%edi)
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049e40 <strcat@plt>
mov    0x80773f8,%ebx
mov    (%esi),%edx
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,0x8(%edx)
mov    (%esi),%edx
mov    0x8(%edx),%eax
test   %eax,%eax
je     8059100 <fchmod@plt+0xeca0>
mov    %edx,0xc(%eax)
mov    0x8(%ebx),%eax
mov    %eax,(%esi)
mov    0x80773f8,%ebx
mov    0x8(%edi),%eax
test   %eax,%eax
je     8059125 <fchmod@plt+0xecc5>
mov    0xc(%eax),%edx
test   %edx,%edx
je     805928f <fchmod@plt+0xee2f>
mov    0x4(%edx),%edx
lea    0x0(%esi),%esi
add    $0x1,%edx
mov    %edx,0x4(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    8059118 <fchmod@plt+0xecb8>
movl   $0x14,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x4(%ebx)
mov    0x80773f8,%eax
mov    0x4(%eax),%ebx
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x1c(%esp),%ecx
cmpb   $0x0,0x2b(%esp)
mov    %eax,(%ebx)
mov    0x80773f8,%eax
mov    0x4(%eax),%ebx
mov    %ebx,0x8(%eax)
movl   $0x0,0x10(%ebx)
mov    %ebx,0x10(%eax)
mov    %ecx,0x18(%eax)
jne    8059228 <fchmod@plt+0xedc8>
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
cmpb   $0x0,0x2a(%esp)
jne    8059270 <fchmod@plt+0xee10>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8059288 <fchmod@plt+0xee28>
mov    0x4(%eax),%eax
xchg   %ax,%ax
add    $0x1,%eax
mov    %eax,0x4(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    80591a0 <fchmod@plt+0xed40>
mov    0x8077414,%eax
test   %eax,%eax
js     8058fff <fchmod@plt+0xeb9f>
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     8058fff <fchmod@plt+0xeb9f>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8066b20 <fchmod@plt+0x1c6c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    0x4(%eax),%eax
cmp    %eax,0x14(%esp)
jg     805906a <fchmod@plt+0xec0a>
mov    0x8(%ebx),%ecx
cmp    0x4(%ecx),%eax
jg     805906a <fchmod@plt+0xec0a>
mov    0x2c(%esp),%eax
cmp    %eax,0x24(%esp)
je     805929a <fchmod@plt+0xee3a>
cmp    %ecx,0x2c(%esp)
je     80592ac <fchmod@plt+0xee4c>
movb   $0x1,0x2b(%esp)
jmp    805906a <fchmod@plt+0xec0a>
lea    0x0(%esi),%esi
mov    %ebx,0x28(%eax)
mov    %ecx,0x2c(%eax)
jmp    8059179 <fchmod@plt+0xed19>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    %eax,(%edx)
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    %eax,(%esi)
mov    (%edx),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     8059296 <fchmod@plt+0xee36>
mov    0x4(%edx),%edx
add    $0x1,%edx
mov    %edx,0x4(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    8059258 <fchmod@plt+0xedf8>
mov    0x80773f8,%ebx
jmp    8059125 <fchmod@plt+0xecc5>
movl   $0x1,(%esp)
call   806a720 <fchmod@plt+0x202c0>
jmp    8059190 <fchmod@plt+0xed30>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80591a0 <fchmod@plt+0xed40>
xor    %edx,%edx
jmp    8059118 <fchmod@plt+0xecb8>
xor    %edx,%edx
jmp    8059258 <fchmod@plt+0xedf8>
mov    0x1c(%esp),%eax
cmp    0x2c(%ebx),%eax
ja     805906a <fchmod@plt+0xec0a>
jmp    805920e <fchmod@plt+0xedae>
cmp    0x2c(%ebx),%edi
jae    8059218 <fchmod@plt+0xedb8>
movb   $0x0,0x2b(%esp)
jmp    805906a <fchmod@plt+0xec0a>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x80773f8,%eax
movb   $0x0,0x3f(%esp)
movb   $0x0,0x2f(%esp)
mov    0x18(%eax),%edi
cmpb   $0x0,0x25(%eax)
mov    %edi,%edx
jne    8059420 <fchmod@plt+0xefc0>
mov    0x10(%eax),%eax
mov    %edx,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    0x80773f8,%ebx
mov    0xc(%ebx),%edx
mov    %eax,0x80773fc
mov    0x70(%esp),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   8058c90 <fchmod@plt+0xe830>
mov    0x80773f8,%esi
mov    %eax,0x4(%ebx)
mov    0x4(%esi),%ebp
mov    0x8(%ebp),%ebx
mov    %ebp,0x8(%esi)
test   %ebx,%ebx
jne    8059342 <fchmod@plt+0xeee2>
jmp    805947f <fchmod@plt+0xf01f>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    0x8(%ebx),%eax
test   %eax,%eax
jne    8059340 <fchmod@plt+0xeee0>
mov    (%ebx),%eax
mov    %ebx,0x8(%esi)
mov    %ebx,0x10(%esi)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmp    %ebx,%ebp
mov    %eax,%ecx
mov    %eax,0x18(%esi)
je     8059494 <fchmod@plt+0xf034>
cmpb   $0x0,0x25(%esi)
jne    80593f0 <fchmod@plt+0xef90>
mov    0x14(%esi),%edi
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
add    %eax,%edi
mov    0x80773f8,%eax
mov    %edi,0x14(%esi)
mov    0x8(%eax),%edx
mov    0x4(%eax),%ebx
mov    0x4(%edx),%edx
sub    $0x1,%edx
add    %edx,0x20(%eax)
mov    0x28(%esp),%edx
cmp    %edx,0x24(%esp)
je     8059470 <fchmod@plt+0xf010>
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8059478 <fchmod@plt+0xf018>
mov    0x4(%eax),%eax
add    $0x1,%eax
mov    %eax,0x4(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    80593c0 <fchmod@plt+0xef60>
mov    0x8077414,%ebx
test   %ebx,%ebx
js     80593e6 <fchmod@plt+0xef86>
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8059410 <fchmod@plt+0xefb0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmpb   $0x0,0x3f(%esp)
jne    8059370 <fchmod@plt+0xef10>
cmpb   $0x0,0x2f(%esp)
je     8059468 <fchmod@plt+0xf008>
mov    %ebx,0x28(%esi)
sub    %edi,0x2c(%esi)
jmp    8059370 <fchmod@plt+0xef10>
lea    0x0(%esi),%esi
call   8066b20 <fchmod@plt+0x1c6c0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x3f(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x44(%esp),%eax
cmp    %eax,0x40(%esp)
mov    0x80773f8,%eax
sete   0x2f(%esp)
mov    0x18(%eax),%edx
jmp    80592e5 <fchmod@plt+0xee85>
xchg   %ax,%ax
sub    %eax,0x2c(%esi)
jmp    8059370 <fchmod@plt+0xef10>
mov    %ebx,0xc(%eax)
jmp    80593a6 <fchmod@plt+0xef46>
xor    %eax,%eax
jmp    80593c0 <fchmod@plt+0xef60>
mov    0x0(%ebp),%eax
mov    %ebp,%ebx
mov    %ebp,0x10(%esi)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ecx
mov    %eax,0x18(%esi)
cmpb   $0x0,0x25(%esi)
je     80594a7 <fchmod@plt+0xf047>
cmpb   $0x0,0x3f(%esp)
mov    %ebp,0x28(%esi)
jne    80594a7 <fchmod@plt+0xf047>
add    %ecx,0x2c(%esi)
add    %edi,%ecx
mov    %ecx,0x18(%esi)
jmp    8059370 <fchmod@plt+0xef10>
jmp    80594c0 <fchmod@plt+0xf060>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
movl   $0x54,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x34(%eax)
movl   $0x9,0x40(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0xc(%esp),%edx
mov    0x8(%esp),%eax
mov    0x4(%esp),%ecx
test   %edx,%edx
mov    %edx,0x4c(%eax)
mov    %ecx,0x50(%eax)
mov    %eax,0x4c(%ecx)
je     805952c <fchmod@plt+0xf0cc>
mov    %eax,0x50(%edx)
repz ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     805955c <fchmod@plt+0xf0fc>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049be0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x50(%eax),%edx
mov    0x4c(%eax),%ecx
mov    %ecx,0x4c(%edx)
mov    0x4c(%eax),%ecx
mov    %edx,0x50(%ecx)
jmp    8059530 <fchmod@plt+0xf0d0>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806e0af,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
testb  $0x8,0x8077414
jne    805961d <fchmod@plt+0xf1bd>
call   8067bd0 <fchmod@plt+0x1d770>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
call   804a1c0 <endwin@plt>
movl   $0x8077440,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049e80 <tcsetattr@plt>
cmpb   $0x0,0x807747c
jne    8059611 <fchmod@plt+0xf1b1>
testb  $0x80,0x8077416
jne    8059624 <fchmod@plt+0xf1c4>
movl   $0x0,(%esp)
call   8049f30 <exit@plt>
call   8067ba0 <fchmod@plt+0x1d740>
jmp    80595d1 <fchmod@plt+0xf171>
call   8053050 <fchmod@plt+0x8bf0>
lea    0x0(%esi,%eiz,1),%esi
jmp    8059611 <fchmod@plt+0xf1b1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
testb  $0x1,0x8077417
mov    %esi,0x24(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x20(%esp)
mov    0x34(%esp),%esi
mov    %edi,0x28(%esp)
jne    8059728 <fchmod@plt+0xf2c8>
cmpb   $0x0,(%eax)
mov    $0x806e0c8,%edx
movl   $0x806e0cd,0x4(%esp)
cmove  %edx,%eax
mov    %eax,(%esp)
call   804efa0 <fchmod@plt+0x4b40>
cmpb   $0x0,(%eax)
mov    %eax,%ebx
jne    8059738 <fchmod@plt+0xf2d8>
movl   $0x5,0x8(%esp)
movl   $0x806b570,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e0ea,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049c80 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
test   %esi,%esi
je     805970a <fchmod@plt+0xf2aa>
mov    0x10(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a350 <chmod@plt>
mov    0x1c(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049b30 <chown@plt>
mov    %ebx,0x30(%esp)
mov    0x24(%esp),%esi
mov    0x20(%esp),%ebx
mov    0x28(%esp),%edi
add    $0x2c,%esp
jmp    8049be0 <free@plt>
lea    0x0(%esi),%esi
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
add    $0x2c,%esp
ret
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8051640 <fchmod@plt+0x71e0>
test   %al,%al
je     8059789 <fchmod@plt+0xf329>
movl   $0x5,0x8(%esp)
movl   $0x806e0d3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    80596c8 <fchmod@plt+0xf268>
cmpb   $0x0,(%ebx)
je     805968a <fchmod@plt+0xf22a>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e6dc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049c80 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
jmp    80596e1 <fchmod@plt+0xf281>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804a1c0 <endwin@plt>
movl   $0x8077440,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049e80 <tcsetattr@plt>
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   8049af0 <__vfprintf_chk@plt>
mov    0x80773f8,%eax
test   %eax,%eax
je     80598c5 <fchmod@plt+0xf465>
cmpb   $0x0,0x24(%eax)
mov    %eax,%ebx
je     8059888 <fchmod@plt+0xf428>
cmpl   $0x0,0x80773fc
je     8059869 <fchmod@plt+0xf409>
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    0x80773f8,%eax
mov    0x34(%eax),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8059640 <fchmod@plt+0xf1e0>
mov    0x80773f8,%eax
test   %eax,%eax
mov    %eax,%ebx
je     80598c5 <fchmod@plt+0xf465>
lea    0x0(%esi),%esi
mov    0x4c(%eax),%edx
cmp    %edx,%ebx
je     80598c0 <fchmod@plt+0xf460>
cmpb   $0x0,0x24(%edx)
mov    %edx,%eax
je     8059888 <fchmod@plt+0xf428>
mov    %edx,0x80773f8
mov    0x34(%edx),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8059640 <fchmod@plt+0xf1e0>
mov    0x80773f8,%eax
mov    0x4c(%eax),%edx
cmp    %edx,%ebx
jne    805988f <fchmod@plt+0xf42f>
lea    0x0(%esi),%esi
mov    %eax,0x80773f8
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
jmp    80598e0 <fchmod@plt+0xf480>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806e103,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   80597f0 <fchmod@plt+0xf390>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x8077414,%eax
mov    0x8077364,%ecx
mov    %eax,%edx
shr    $0x1b,%edx
and    $0x1,%edx
shr    $0x2,%eax
lea    -0x5(%ecx,%edx,1),%edx
and    $0x2,%eax
add    %edx,%eax
mov    0x8077340,%edx
mov    %eax,0x8077410
cmp    $0x3,%edx
jle    8059aaa <fchmod@plt+0xf64a>
test   %eax,%eax
jle    8059aaa <fchmod@plt+0xf64a>
mov    0x80772e8,%eax
test   %eax,%eax
jle    8059a98 <fchmod@plt+0xf638>
mov    %eax,0x807742c
mov    0x8077830,%eax
test   %eax,%eax
je     8059972 <fchmod@plt+0xf512>
mov    %eax,(%esp)
call   8049f60 <delwin@plt>
mov    0x8077704,%eax
test   %eax,%eax
je     8059983 <fchmod@plt+0xf523>
mov    %eax,(%esp)
call   8049f60 <delwin@plt>
mov    0x807783c,%eax
test   %eax,%eax
je     8059994 <fchmod@plt+0xf534>
mov    %eax,(%esp)
call   8049f60 <delwin@plt>
mov    0x8077340,%eax
mov    $0x2,%ebx
mov    %ebx,%edx
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077414,%eax
shr    $0x1b,%eax
and    $0x1,%eax
sub    %eax,%edx
mov    %edx,(%esp)
call   8049dc0 <newwin@plt>
mov    %ebx,%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x8077830
mov    0x8077414,%eax
shr    $0x1b,%eax
and    $0x1,%eax
sub    %eax,%edx
mov    0x8077340,%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077410,%eax
mov    %eax,(%esp)
call   8049dc0 <newwin@plt>
mov    0x8077414,%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x8077704
mov    %edx,%eax
and    $0x8,%edx
shr    $0x1b,%eax
and    $0x1,%eax
sub    %eax,%ebx
add    0x8077410,%ebx
cmp    $0x1,%edx
mov    0x8077340,%edx
sbb    %eax,%eax
and    $0x2,%eax
add    $0x1,%eax
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049dc0 <newwin@plt>
testb  $0x2,0x8077416
mov    %eax,0x807783c
jne    8059a93 <fchmod@plt+0xf633>
mov    0x8077830,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049d00 <keypad@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049d00 <keypad@plt>
mov    0x807783c,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049d00 <keypad@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %ecx,%ecx
add    %edx,%eax
cmovns %eax,%ecx
mov    %ecx,0x807742c
jmp    8059961 <fchmod@plt+0xf501>
movl   $0x5,0x8(%esp)
movl   $0x806e6fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   80597f0 <fchmod@plt+0xf390>
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049c60 <mousemask@plt>
mov    0x80772ec,%eax
mov    %eax,(%esp)
call   804a340 <mouseinterval@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x0,0x4(%esp)
movl   $0x7ffffff,(%esp)
call   8049c60 <mousemask@plt>
movl   $0x32,(%esp)
call   804a340 <mouseinterval@plt>
mov    %eax,0x80772ec
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
testb  $0x2,0x8077415
jne    8059b40 <fchmod@plt+0xf6e0>
jmp    8059ad0 <fchmod@plt+0xf670>
xchg   %ax,%ax
jmp    8059b00 <fchmod@plt+0xf6a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %esi,0x14(%esp)
mov    0x20(%esp),%esi
movl   $0x806e11f,0x4(%esp)
movl   $0x1,(%esp)
mov    %ebx,0x10(%esp)
mov    0x24(%esp),%ebx
mov    %esi,0x8(%esp)
mov    %edi,0x18(%esp)
mov    0x28(%esp),%edi
call   804a130 <__printf_chk@plt>
mov    %esi,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    $0x7,%eax
jbe    8059c40 <fchmod@plt+0xf7e0>
mov    %ebx,0x8(%esp)
movl   $0x806e120,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
mov    %ebx,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    $0x7,%eax
ja     8059c20 <fchmod@plt+0xf7c0>
movl   $0x806e124,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
test   %edi,%edi
je     8059c01 <fchmod@plt+0xf7a1>
movl   $0x5,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x806f1fe,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a130 <__printf_chk@plt>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
movl   $0xa,0x20(%esp)
add    $0x1c,%esp
jmp    804a060 <putchar@plt>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    $0xf,%eax
ja     8059bcd <fchmod@plt+0xf76d>
movl   $0x9,(%esp)
call   804a060 <putchar@plt>
jmp    8059bcd <fchmod@plt+0xf76d>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x9,(%esp)
call   804a060 <putchar@plt>
jmp    8059b94 <fchmod@plt+0xf734>
jmp    8059c60 <fchmod@plt+0xf800>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x806e724,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e758,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e127,0x8(%esp)
movl   $0x806e139,0x4(%esp)
movl   $0x806e140,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e147,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x806e77c,0x8(%esp)
movl   $0x806e126,0x4(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e154,0x8(%esp)
movl   $0x806e16a,0x4(%esp)
movl   $0x806c05b,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e7a0,0x8(%esp)
movl   $0x806e176,0x4(%esp)
movl   $0x806c0ba,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e17f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e191,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806e7c0,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e7ec,0x8(%esp)
movl   $0x806e19a,0x4(%esp)
movl   $0x806c0fe,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e1a5,0x8(%esp)
movl   $0x806e1c2,0x4(%esp)
movl   $0x806c07b,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e1d1,0x8(%esp)
movl   $0x806e1ee,0x4(%esp)
movl   $0x806c12a,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e814,0x8(%esp)
movl   $0x806e1fc,0x4(%esp)
movl   $0x806c116,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e209,0x8(%esp)
movl   $0x806e224,0x4(%esp)
movl   $0x806c11a,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e840,0x8(%esp)
movl   $0x806e234,0x4(%esp)
movl   $0x806c11e,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e86c,0x8(%esp)
movl   $0x806e243,0x4(%esp)
movl   $0x806c122,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e894,0x8(%esp)
movl   $0x806e250,0x4(%esp)
movl   $0x806c132,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e25c,0x8(%esp)
movl   $0x806e27a,0x4(%esp)
movl   $0x806c106,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e286,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e297,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806e2a0,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e2af,0x8(%esp)
movl   $0x806e2bf,0x4(%esp)
movl   $0x806c050,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e8bc,0x8(%esp)
movl   $0x806e2cc,0x4(%esp)
movl   $0x806c10a,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e2d5,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e2e7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806e8e4,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e2f2,0x8(%esp)
movl   $0x806e30e,0x4(%esp)
movl   $0x806c077,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e908,0x8(%esp)
movl   $0x806e31b,0x4(%esp)
movl   $0x806c0f2,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e92c,0x8(%esp)
movl   $0x806e325,0x4(%esp)
movl   $0x806c05f,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e332,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e341,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806e954,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e97c,0x8(%esp)
movl   $0x806e34a,0x4(%esp)
movl   $0x806e352,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e99c,0x8(%esp)
movl   $0x806e355,0x4(%esp)
movl   $0x806e364,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e9c4,0x8(%esp)
movl   $0x806e367,0x4(%esp)
movl   $0x806e374,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e9e4,0x8(%esp)
movl   $0x806e377,0x4(%esp)
movl   $0x806e37d,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806ea04,0x8(%esp)
movl   $0x806e380,0x4(%esp)
movl   $0x806e38b,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e38e,0x8(%esp)
movl   $0x806e3aa,0x4(%esp)
movl   $0x806e3b2,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e3b5,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e3ca,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806e3d3,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806ea2c,0x8(%esp)
movl   $0x806e3eb,0x4(%esp)
movl   $0x806e3f6,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806ea54,0x8(%esp)
movl   $0x806e3f9,0x4(%esp)
movl   $0x806e401,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e404,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e413,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x806ea88,0x8(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x5,0x8(%esp)
movl   $0x806e41e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e42f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
movl   $0x806e439,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806eaac,0x8(%esp)
movl   $0x806e452,0x4(%esp)
movl   $0x806e45d,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806eacc,0x8(%esp)
movl   $0x806e460,0x4(%esp)
movl   $0x806e467,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e46a,0x8(%esp)
movl   $0x806e480,0x4(%esp)
movl   $0x806e487,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e48a,0x8(%esp)
movl   $0x806e4a0,0x4(%esp)
movl   $0x806e4a9,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e4ac,0x8(%esp)
movl   $0x806e4ca,0x4(%esp)
movl   $0x806e4d3,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e4d6,0x8(%esp)
movl   $0x806e4e8,0x4(%esp)
movl   $0x806e4f2,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806e4f5,0x8(%esp)
movl   $0x806e50f,0x4(%esp)
movl   $0x806c13a,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x0,0x8(%esp)
movl   $0x806e126,0x4(%esp)
movl   $0x806e51a,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x806eaf0,0x8(%esp)
movl   $0x806e126,0x4(%esp)
movl   $0x806e526,(%esp)
call   8059b50 <fchmod@plt+0xf6f0>
movl   $0x0,(%esp)
call   8049f30 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806eb14,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x806e531,0x10(%esp)
movl   $0x806e53d,0xc(%esp)
movl   $0x8070279,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806eb3c,(%esp)
call   8049ef0 <puts@plt>
movl   $0x806eb78,(%esp)
call   8049ef0 <puts@plt>
movl   $0x5,0x8(%esp)
movl   $0x806eba4,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e546,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e55a,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e576,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e586,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e596,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e5ac,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0x806e5bd,0x4(%esp)
movl   $0x1,(%esp)
call   804a130 <__printf_chk@plt>
movl   $0xa,(%esp)
call   804a060 <putchar@plt>
add    $0x2c,%esp
ret
nop
mov    0x8077414,%eax
shr    $0x1b,%eax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077414,%eax
shr    $0x2,%eax
and    $0x2,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806ebe4,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x8077417
jne    805a560 <fchmod@plt+0x10100>
sub    $0x1c,%esp
call   8059ad0 <fchmod@plt+0xf670>
mov    0x8077364,%eax
movl   $0x0,0x8(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x8077344,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
call   804a1c0 <endwin@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e5cc,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <__printf_chk@plt>
mov    0x8077360,%eax
mov    %eax,(%esp)
call   8049b70 <fflush@plt>
movl   $0x8077440,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049e80 <tcsetattr@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x1,(%esp)
movl   $0x80598e0,0x80775c0
08
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0xf,(%esp)
call   804a2e0 <sigaction@plt>
movl   $0x13,0x4(%esp)
movl   $0x0,(%esp)
call   8049f50 <kill@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
jmp    805a440 <fchmod@plt+0xffe0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80773f8,%eax
cmpb   $0x0,0x24(%eax)
jne    805a5a0 <fchmod@plt+0x10140>
call   804ee90 <fchmod@plt+0x4a30>
test   %al,%al
je     805a61e <fchmod@plt+0x101be>
movl   $0x0,(%esp)
call   8053700 <fchmod@plt+0x92a0>
add    $0x1c,%esp
jmp    806aac0 <fchmod@plt+0x20660>
nop
testb  $0x8,0x8077415
je     805a5c0 <fchmod@plt+0x10160>
movl   $0x1,(%esp)
call   8052660 <fchmod@plt+0x8200>
test   %al,%al
jne    805a57e <fchmod@plt+0x1011e>
jmp    805a58b <fchmod@plt+0x1012b>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806ec18,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   805d5c0 <fchmod@plt+0x13160>
test   %eax,%eax
je     805a57e <fchmod@plt+0x1011e>
cmp    $0x1,%eax
je     805a5a9 <fchmod@plt+0x10149>
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    805a58b <fchmod@plt+0x1012b>
xchg   %ax,%ax
call   80595c0 <fchmod@plt+0xf160>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
testb  $0x20,0x8077414
jne    805a640 <fchmod@plt+0x101e0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   805a470 <fchmod@plt+0x10010>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x9c,%esp
mov    %esi,0x98(%esp)
mov    0xa0(%esp),%esi
mov    %ebx,0x94(%esp)
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
call   804a1a0 <sigemptyset@plt>
and    $0xff,%esi
mov    %ebx,(%esp)
movl   $0x1c,0x4(%esp)
call   804a000 <sigaddset@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
call   8049b80 <sigprocmask@plt>
mov    0x94(%esp),%ebx
mov    0x98(%esp),%esi
add    $0x9c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x80775c0,%edx
xor    %eax,%eax
push   %edi
mov    $0x23,%ecx
mov    %edx,%edi
sub    $0x18,%esp
rep stos %eax,%es:(%edi)
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x2,(%esp)
movl   $0x1,0x80775c0
00
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x3,(%esp)
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x1,(%esp)
movl   $0x80598e0,0x80775c0
08
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0xf,(%esp)
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x1c,(%esp)
movl   $0x805ab90,0x80775c0
08
call   804a2e0 <sigaction@plt>
movl   $0x0,(%esp)
call   805a660 <fchmod@plt+0x10200>
testb  $0x20,0x8077414
je     805a800 <fchmod@plt+0x103a0>
movl   $0x80775c4,(%esp)
call   804a030 <sigfillset@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x14,(%esp)
movl   $0x805a470,0x80775c0
08
call   804a2e0 <sigaction@plt>
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x12,(%esp)
movl   $0x805ac80,0x80775c0
08
call   804a2e0 <sigaction@plt>
add    $0x18,%esp
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
movl   $0x80775c0,0x4(%esp)
movl   $0x14,(%esp)
movl   $0x1,0x80775c0
00
call   804a2e0 <sigaction@plt>
add    $0x18,%esp
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,%edi
mov    %ebx,%ecx
shr    $0x5,%edi
mov    0x8077414(,%edi,4),%eax
shl    %cl,%esi
lea    -0x3(%ebx),%edx
xor    %esi,%eax
cmp    $0x20,%edx
mov    %eax,0x8077414(,%edi,4)
ja     805a87c <fchmod@plt+0x1041c>
jmp    *0x806ed40(,%edx,4)
nop
call   8059910 <fchmod@plt+0xf4b0>
lea    0x0(%esi),%esi
call   806aa90 <fchmod@plt+0x20630>
mov    0x8077414(,%edi,4),%eax
test   %esi,%eax
setne  %cl
cmp    $0x6,%ebx
mov    %ecx,%esi
je     805a88d <fchmod@plt+0x1042d>
cmp    $0x3,%ebx
jne    805a8f0 <fchmod@plt+0x10490>
xor    $0x1,%esi
mov    %ebx,(%esp)
call   80565c0 <fchmod@plt+0xc160>
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
mov    %eax,%ebx
mov    %esi,%eax
test   %al,%al
jne    805a8f8 <fchmod@plt+0x10498>
movl   $0x806e5f1,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x806e5fa,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x15,%ebx
jne    805a890 <fchmod@plt+0x10430>
jmp    805a88d <fchmod@plt+0x1042d>
nop
movl   $0x806e5e9,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805a8d4 <fchmod@plt+0x10474>
xchg   %ax,%ax
call   806aa90 <fchmod@plt+0x20630>
test   %esi,0x8077414(,%edi,4)
setne  %cl
mov    %ecx,%esi
jmp    805a890 <fchmod@plt+0x10430>
xchg   %ax,%ax
call   805a6d0 <fchmod@plt+0x10270>
jmp    805a915 <fchmod@plt+0x104b5>
nop
call   8059b30 <fchmod@plt+0xf6d0>
jmp    805a915 <fchmod@plt+0x104b5>
nop
nop
lea    0x0(%esi,%eiz,1),%esi
call   806a7c0 <fchmod@plt+0x20360>
test   %esi,0x8077414(,%edi,4)
setne  %al
mov    %eax,%esi
jmp    805a88d <fchmod@plt+0x1042d>
xchg   %ax,%ax
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
call   806a7c0 <fchmod@plt+0x20360>
jmp    805a915 <fchmod@plt+0x104b5>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x58,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a330 <tcgetattr@plt>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
andl   $0xffff7fff,0x1c(%esp)
andl   $0xfffffffe,0x14(%esp)
call   8049e80 <tcsetattr@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805a9cb <fchmod@plt+0x1056b>
add    $0x58,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049cc0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x58,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a330 <tcgetattr@plt>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
andl   $0xfffffffe,0x1c(%esp)
call   8049e80 <tcsetattr@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805aa33 <fchmod@plt+0x105d3>
add    $0x58,%esp
pop    %ebx
ret
call   8049cc0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x58,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a330 <tcgetattr@plt>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
orl    $0x1,0x1c(%esp)
call   8049e80 <tcsetattr@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805aa93 <fchmod@plt+0x10633>
add    $0x58,%esp
pop    %ebx
ret
call   8049cc0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x58,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a330 <tcgetattr@plt>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
andl   $0xfffffbff,0x10(%esp)
call   8049e80 <tcsetattr@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805aaf6 <fchmod@plt+0x10696>
add    $0x58,%esp
pop    %ebx
ret
call   8049cc0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x58,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   804a330 <tcgetattr@plt>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
orl    $0x400,0x10(%esp)
call   8049e80 <tcsetattr@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    805ab56 <fchmod@plt+0x106f6>
add    $0x58,%esp
pop    %ebx
ret
call   8049cc0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
call   8049d20 <raw@plt>
call   8049f10 <nonl@plt>
call   804a270 <noecho@plt>
call   805a970 <fchmod@plt+0x10510>
testb  $0x40,0x8077416
je     805ab85 <fchmod@plt+0x10725>
call   805ab00 <fchmod@plt+0x106a0>
add    $0xc,%esp
jmp    805a9e0 <fchmod@plt+0x10580>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
movl   $0x0,(%esp)
mov    %ebx,0x24(%esp)
mov    %esi,0x28(%esp)
call   8049fb0 <ttyname@plt>
test   %eax,%eax
je     805abe9 <fchmod@plt+0x10789>
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     805abe9 <fchmod@plt+0x10789>
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
mov    %ebx,(%esp)
call   8049dd0 <ioctl@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a3d0 <close@plt>
cmp    $0xffffffff,%esi
jne    805abf5 <fchmod@plt+0x10795>
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
movzwl 0x1a(%esp),%eax
cmpl   $0x0,0x80773fc
mov    %eax,0x8077340
movzwl 0x18(%esp),%eax
mov    %eax,0x8077364
je     805ac1e <fchmod@plt+0x107be>
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
call   804a1c0 <endwin@plt>
call   804a2a0 <doupdate@plt>
call   805ab60 <fchmod@plt+0x10700>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
call   8059910 <fchmod@plt+0xf4b0>
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
movl   $0x1,0x80777bc
00
call   806aa90 <fchmod@plt+0x20630>
movl   $0x1,0x4(%esp)
movl   $0x8077720,(%esp)
call   804a160 <__longjmp_chk@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
testb  $0x2,0x8077415
je     805ac91 <fchmod@plt+0x10831>
call   8059b00 <fchmod@plt+0xf6a0>
movl   $0x0,0x10(%esp)
add    $0xc,%esp
jmp    805ab90 <fchmod@plt+0x10730>
jmp    805acb0 <fchmod@plt+0x10850>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x38,%esp
movl   $0x806b4ed,0x4(%esp)
movl   $0x806e600,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
je     805ad98 <fchmod@plt+0x10938>
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x806e605,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804fd90 <fchmod@plt+0x5930>
movl   $0x0,0x4(%esp)
movl   $0x806e611,(%esp)
call   8049b00 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805adb1 <fchmod@plt+0x10951>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
mov    %ebx,(%esp)
call   804a3d0 <close@plt>
cmpb   $0x0,0x807747d
je     805ad80 <fchmod@plt+0x10920>
cmpb   $0x0,0x807747e
je     805ad50 <fchmod@plt+0x108f0>
call   805ab60 <fchmod@plt+0x10700>
add    $0x38,%esp
pop    %ebx
jmp    804a2a0 <doupdate@plt>
xchg   %ax,%ax
movl   $0x0,0x8(%esp)
movl   $0x8077480,0x4(%esp)
movl   $0x2,(%esp)
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
jne    805ad40 <fchmod@plt+0x108e0>
movl   $0x806e61a,(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
jmp    805ad40 <fchmod@plt+0x108e0>
nop
movl   $0x8077440,0x4(%esp)
movl   $0x0,(%esp)
call   804a330 <tcgetattr@plt>
jmp    805ad37 <fchmod@plt+0x108d7>
xchg   %ax,%ax
movl   $0x806e60b,(%esp)
mov    %eax,0x2c(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
mov    0x2c(%esp),%eax
jmp    805acd0 <fchmod@plt+0x10870>
movl   $0x5,0x8(%esp)
movl   $0x806ec58,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   80597f0 <fchmod@plt+0xf390>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   804a1c0 <endwin@plt>
cmpb   $0x0,0x807747d
je     805aeb0 <fchmod@plt+0x10a50>
movl   $0x5,0x8(%esp)
movl   $0x806ec84,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
call   805aa40 <fchmod@plt+0x105e0>
movl   $0x8077520,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
je     805ae98 <fchmod@plt+0x10a38>
movl   $0x8077480,0x8(%esp)
movl   $0x8077520,0x4(%esp)
movl   $0x2,(%esp)
movl   $0x8058b40,0x8077520
08
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
je     805ae98 <fchmod@plt+0x10a38>
movl   $0x0,0x4(%esp)
movl   $0x806e126,(%esp)
call   8050490 <fchmod@plt+0x6030>
add    $0x1c,%esp
jmp    805acb0 <fchmod@plt+0x10850>
nop
movl   $0x806e61a,(%esp)
movb   $0x1,0x807747e
call   8066550 <fchmod@plt+0x1c0f0>
jmp    805ae7b <fchmod@plt+0x10a1b>
lea    0x0(%esi),%esi
movl   $0x8077440,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049e80 <tcsetattr@plt>
jmp    805adf5 <fchmod@plt+0x10995>
jmp    805aee0 <fchmod@plt+0x10a80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806e624,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806e63f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%ebx
lea    0x28(%esp),%esi
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8067810 <fchmod@plt+0x1d3b0>
test   %eax,%eax
mov    %eax,%edi
je     805af78 <fchmod@plt+0x10b18>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077704,%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a210 <wmouse_trafo@plt>
test   %al,%al
je     805af69 <fchmod@plt+0x10b09>
mov    0x80773f8,%ebx
testb  $0x8,0x8077418
mov    0x2c(%esp),%esi
mov    0x10(%ebx),%eax
mov    0x18(%ebx),%edx
mov    %eax,0x14(%esp)
mov    0x1c(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    0x20(%ebx),%edx
mov    %eax,0x18(%esp)
mov    %edx,0x10(%esp)
je     805b090 <fchmod@plt+0x10c30>
mov    0xc(%ebx),%edx
mov    0x8(%edx),%ebp
mov    %edx,0x10(%ebx)
test   %ebp,%ebp
je     805b163 <fchmod@plt+0x10d03>
test   %esi,%esi
jle    805b163 <fchmod@plt+0x10d03>
xor    %ebp,%ebp
jmp    805aff4 <fchmod@plt+0x10b94>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%eax
jle    805b02a <fchmod@plt+0x10bca>
mov    0x10(%ebx),%eax
mov    %ebp,0x20(%ebx)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
mov    0x80773f8,%ebx
divl   0x8077340
mov    0x10(%ebx),%edx
mov    0x8(%edx),%edx
mov    0x8(%edx),%ecx
mov    %edx,0x10(%ebx)
test   %ecx,%ecx
lea    0x1(%ebp,%eax,1),%ebp
mov    0x2c(%esp),%eax
jne    805aff0 <fchmod@plt+0x10b90>
cmp    %ebp,%eax
jge    805b140 <fchmod@plt+0x10ce0>
mov    0xc(%edx),%edx
sub    0x20(%ebx),%eax
imul   0x8077340,%eax
add    0x28(%esp),%eax
mov    %edx,0x10(%ebx)
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x18(%ebx)
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
cmp    %esi,0x10(%esp)
mov    %eax,0x1c(%ebx)
je     805b120 <fchmod@plt+0x10cc0>
mov    0x18(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %esi,%edx
jge    805b16c <fchmod@plt+0x10d0c>
mov    0x8(%ebx),%ebp
mov    %edx,%ecx
mov    0x14(%esp),%eax
add    $0x1,%ecx
cmp    %ebp,%eax
jne    805b0bb <fchmod@plt+0x10c5b>
jmp    805b0f6 <fchmod@plt+0x10c96>
lea    0x0(%esi),%esi
cmp    %ebp,%eax
lea    0x1(%ecx),%ecx
je     805b158 <fchmod@plt+0x10cf8>
cmp    %esi,%ecx
mov    0x8(%eax),%eax
mov    %ecx,%edx
jne    805b0b0 <fchmod@plt+0x10c50>
mov    %eax,0x10(%ebx)
mov    %esi,0x20(%ebx)
cmp    %edx,%esi
jge    805b0f6 <fchmod@plt+0x10c96>
mov    0x10(%ebx),%eax
sub    $0x1,%edx
mov    0x4(%ebx),%ecx
cmp    %ecx,%eax
jne    805b0e7 <fchmod@plt+0x10c87>
jmp    805b0f6 <fchmod@plt+0x10c96>
lea    0x0(%esi),%esi
sub    $0x1,%edx
cmp    %ecx,%eax
je     805b150 <fchmod@plt+0x10cf0>
cmp    %esi,%edx
mov    0xc(%eax),%eax
mov    %edx,%ebp
jne    805b0e0 <fchmod@plt+0x10c80>
mov    %eax,0x10(%ebx)
mov    %esi,0x20(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
mov    0x80773f8,%ebx
add    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    (%eax),%eax
jmp    805b04c <fchmod@plt+0x10bec>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x1c(%esp),%edx
cmp    %edx,0x18(%eax)
jne    805b06f <fchmod@plt+0x10c0f>
call   8061940 <fchmod@plt+0x174e0>
jmp    805b06f <fchmod@plt+0x10c0f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
jmp    805b046 <fchmod@plt+0x10be6>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x10(%ebx)
mov    %ebp,0x20(%ebx)
jmp    805b0f6 <fchmod@plt+0x10c96>
mov    %eax,0x10(%ebx)
mov    %edx,0x20(%ebx)
jmp    805b0ca <fchmod@plt+0x10c6a>
mov    %esi,%eax
xor    %ebp,%ebp
jmp    805b02a <fchmod@plt+0x10bca>
mov    0x10(%esp),%edx
jmp    805b0ca <fchmod@plt+0x10c6a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x10(%ebx),%eax
test   %eax,%eax
je     805b198 <fchmod@plt+0x10d38>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x44(%eax),%eax
mov    0x10(%eax),%eax
add    %eax,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x10(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80773f8,%eax
mov    0x48(%eax),%esi
test   %esi,%esi
je     805b1dc <fchmod@plt+0x10d7c>
testb  $0x20,0x8077416
je     805b200 <fchmod@plt+0x10da0>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8049c50 <time@plt>
movl   $0x0,0x4(%esp)
mov    %eax,%edi
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
mov    0x18(%esi),%eax
test   %eax,%eax
je     805b3ff <fchmod@plt+0x10f9f>
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805b3ff <fchmod@plt+0x10f9f>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
movl   $0x0,(%esp)
call   8049c50 <time@plt>
mov    %eax,%ebx
sub    %edi,%eax
cmp    $0x1,%eax
jle    805b27b <fchmod@plt+0x10e1b>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
jne    805b1dc <fchmod@plt+0x10d7c>
mov    %ebx,%edi
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ecx
lea    0x30(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%ecx),%eax
add    %edx,%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    805b40f <fchmod@plt+0x10faf>
mov    0x34(%esp),%ebx
lea    0x38(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x1,0x8(%esp)
add    %edx,%ebx
mov    0x2c(%esp),%edx
mov    (%edx),%eax
add    %ebx,%eax
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    805b318 <fchmod@plt+0x10eb8>
mov    0x3c(%esp),%edx
mov    0x20(%esi),%ecx
add    %ebx,%edx
mov    0x2c(%esp),%ebx
mov    0x10(%ebx),%eax
orw    $0x20,(%eax,%ecx,2)
jmp    805b280 <fchmod@plt+0x10e20>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%edx
mov    0x8(%edx),%ebx
test   %ebx,%ebx
jne    805b333 <fchmod@plt+0x10ed3>
jmp    805b3ff <fchmod@plt+0x10f9f>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     805b3e8 <fchmod@plt+0x10f88>
movl   $0x0,(%esp)
call   8049c50 <time@plt>
mov    %eax,%ebp
sub    %edi,%eax
cmp    $0x1,%eax
jle    805b360 <fchmod@plt+0x10f00>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
jne    805b1dc <fchmod@plt+0x10d7c>
mov    %ebp,%edi
lea    0x38(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    805b328 <fchmod@plt+0x10ec8>
mov    0x2c(%esp),%ecx
mov    0x20(%esi),%edx
mov    0x10(%ecx),%eax
mov    0x8(%ecx),%ebp
orw    $0x8,(%eax,%edx,2)
cmp    %ebx,%ebp
je     805b3c3 <fchmod@plt+0x10f63>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x10(%ebp),%eax
mov    0x8(%ebp),%ebp
mov    0x20(%esi),%edx
cmp    %ebx,%ebp
movw   $0x10,(%eax,%edx,2)
jne    805b3a8 <fchmod@plt+0x10f48>
mov    %ebx,(%esp)
call   805b180 <fchmod@plt+0x10d20>
mov    0x20(%esi),%edx
mov    0x10(%ebx),%eax
mov    %ebx,0x2c(%esp)
orw    $0x4,(%eax,%edx,2)
mov    0x3c(%esp),%edx
jmp    805b280 <fchmod@plt+0x10e20>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    0x8(%ebx),%ebx
mov    %ebx,0x2c(%esp)
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    805b242 <fchmod@plt+0x10de2>
mov    0x1c(%esi),%esi
test   %esi,%esi
jne    805b223 <fchmod@plt+0x10dc3>
jmp    805b1dc <fchmod@plt+0x10d7c>
test   %edx,%edx
jne    805b3e8 <fchmod@plt+0x10f88>
mov    0x2c(%esp),%ecx
mov    0x20(%esi),%edx
mov    0x10(%ecx),%eax
mov    0x8(%ecx),%ebx
movw   $0x2,(%eax,%edx,2)
mov    %ebx,0x2c(%esp)
jmp    805b3f3 <fchmod@plt+0x10f93>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edx
mov    %edx,0x28(%esp)
mov    0x54(%esp),%edx
mov    %edx,0x20(%esp)
movzbl 0x58(%esp),%edx
mov    %dl,0x27(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%ebx
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
testb  $0x8,0x8077418
mov    %eax,%edi
jne    805b6f0 <fchmod@plt+0x11290>
mov    0x20(%esp),%ebx
xor    %esi,%esi
test   %ebx,%ebx
jne    805b592 <fchmod@plt+0x11132>
jmp    805b5d0 <fchmod@plt+0x11170>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0xa,(%eax)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,%ebx
add    %eax,%esi
mov    0x8077414,%ecx
mov    0x80773f8,%eax
test   %ecx,%ecx
mov    0x10(%eax),%edx
js     805b4ce <fchmod@plt+0x1106e>
cmp    %edx,0x8(%eax)
je     805b6c0 <fchmod@plt+0x11260>
lea    (%edi,%ebx,2),%eax
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x1c(%esp),%edx
mov    %edi,%ecx
add    %ebx,%edi
mov    %eax,(%edx)
mov    0x80773f8,%edx
mov    0x18(%edx),%eax
mov    0x10(%edx),%edx
sub    %eax,%ecx
mov    (%edx),%edx
add    %ebx,%ecx
mov    %ecx,0x8(%esp)
lea    (%edx,%eax,1),%ecx
add    %ebx,%eax
add    %eax,%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8049bb0 <memmove@plt>
mov    0x80773f8,%edx
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    0x18(%edx),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x80773f8,%eax
addl   $0x1,0x14(%eax)
call   80694c0 <fchmod@plt+0x1f060>
movl   $0x0,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     805b565 <fchmod@plt+0x11105>
mov    0x28(%eax),%edx
cmp    %edx,0x10(%eax)
je     805b6a8 <fchmod@plt+0x11248>
add    %ebx,0x18(%eax)
testb  $0x40,0x8077414
je     805b680 <fchmod@plt+0x11220>
mov    0x48(%eax),%eax
test   %eax,%eax
je     805b58c <fchmod@plt+0x1112c>
testb  $0x20,0x8077416
jne    805b58c <fchmod@plt+0x1112c>
movb   $0x1,0x80773bc
cmp    %esi,0x20(%esp)
jbe    805b5d0 <fchmod@plt+0x11170>
cmpb   $0x0,0x27(%esp)
je     805b640 <fchmod@plt+0x111e0>
mov    0x28(%esp),%eax
add    %esi,%eax
movzbl (%eax),%edx
test   %dl,%dl
je     805b498 <fchmod@plt+0x11038>
cmp    $0xa,%dl
jne    805b49b <fchmod@plt+0x1103b>
movl   $0x0,(%esp)
add    $0x1,%esi
call   8063430 <fchmod@plt+0x18fd0>
cmp    %esi,0x20(%esp)
ja     805b592 <fchmod@plt+0x11132>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x8,0x8077418
je     805b5e6 <fchmod@plt+0x11186>
cmpb   $0x0,0x80773bc
je     805b708 <fchmod@plt+0x112a8>
mov    %ebp,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    0x80773f8,%eax
movl   $0x0,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   804e550 <fchmod@plt+0x40f0>
cmpb   $0x0,0x80773bc
jne    805b6d8 <fchmod@plt+0x11278>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x54(%esp)
mov    0x10(%eax),%eax
mov    %eax,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    806a010 <fchmod@plt+0x1fbb0>
mov    0x28(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
add    %esi,%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x1c(%esp),%edx
add    %eax,%esi
mov    %eax,%ebx
movsbl (%edx),%eax
mov    %eax,(%esp)
call   804cec0 <fchmod@plt+0x2a60>
test   %al,%al
jne    805b58c <fchmod@plt+0x1112c>
jmp    805b4b3 <fchmod@plt+0x11053>
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8063000 <fchmod@plt+0x18ba0>
test   %al,%al
je     805b69e <fchmod@plt+0x1123e>
movb   $0x1,0x80773bc
mov    0x80773f8,%eax
jmp    805b575 <fchmod@plt+0x11115>
mov    0x2c(%eax),%edx
cmp    %edx,0x18(%eax)
jae    805b565 <fchmod@plt+0x11105>
add    %ebx,%edx
mov    %edx,0x2c(%eax)
jmp    805b565 <fchmod@plt+0x11105>
xchg   %ax,%ax
call   8066b20 <fchmod@plt+0x1c6c0>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
jmp    805b4ce <fchmod@plt+0x1106e>
lea    0x0(%esi),%esi
call   806a7c0 <fchmod@plt+0x20360>
movb   $0x0,0x80773bc
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    %eax,0x2c(%esp)
jmp    805b480 <fchmod@plt+0x11020>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%ecx
xor    %edx,%edx
div    %ecx
xor    %edx,%edx
mov    %eax,%ebx
mov    0x2c(%esp),%eax
div    %ecx
cmp    %eax,%ebx
je     805b5e6 <fchmod@plt+0x11186>
movb   $0x1,0x80773bc
jmp    805b5e6 <fchmod@plt+0x11186>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%eax
mov    0x5c(%esp),%edx
mov    0x64(%esp),%edi
mov    0x50(%esp),%esi
movb   $0x0,(%eax)
mov    0x54(%esp),%ebx
movb   $0x0,(%edx)
mov    0x8077704,%eax
mov    0x60(%esp),%edx
movb   $0x0,(%edx)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
mov    %edi,%edx
test   %dl,%dl
mov    %eax,0x2c(%esp)
je     805b7a0 <fchmod@plt+0x11340>
cmpb   $0x0,(%ebx)
jne    805b8f0 <fchmod@plt+0x11490>
lea    0x2c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
mov    %eax,%ebp
setne  0x1f(%esp)
je     805b948 <fchmod@plt+0x114e8>
mov    %edi,%eax
test   %al,%al
jne    805b7e8 <fchmod@plt+0x11388>
call   804e680 <fchmod@plt+0x4220>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x2c(%esp)
je     805b920 <fchmod@plt+0x114c0>
cmpb   $0x0,0x1f(%esp)
jne    805b92b <fchmod@plt+0x114cb>
testb  $0x1,0x8077415
je     805b9c0 <fchmod@plt+0x11560>
call   8059590 <fchmod@plt+0xf130>
call   8066e30 <fchmod@plt+0x1c9d0>
test   %eax,%eax
jne    805b7d1 <fchmod@plt+0x11371>
mov    0x8077650,%edi
test   %edi,%edi
je     805b8a1 <fchmod@plt+0x11441>
mov    0x807764c,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x807764c,%eax
test   %eax,%eax
je     805baa6 <fchmod@plt+0x11646>
mov    0x8077650,%ecx
xor    %edx,%edx
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx,%edx,4),%eax
mov    %al,(%ebx,%edx,1)
add    $0x1,%edx
cmp    %esi,%edx
jne    805b850 <fchmod@plt+0x113f0>
mov    %esi,%eax
movb   $0x0,(%ebx,%edx,1)
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   805b430 <fchmod@plt+0x10fd0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x8077650,%eax
movl   $0x0,0x807764c
00
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x8077650
00
cmpb   $0x0,0x1f(%esp)
je     805b7d1 <fchmod@plt+0x11371>
movzwl 0x10(%ebp),%eax
cmp    $0x3f,%ax
je     805b9a0 <fchmod@plt+0x11540>
cmp    $0x34,%ax
je     805b9a0 <fchmod@plt+0x11540>
cmp    $0x45,%ax
sete   %bl
test   %ax,%ax
jne    805ba00 <fchmod@plt+0x115a0>
mov    0x60(%esp),%edx
test   %bl,%bl
movb   $0x1,(%edx)
je     805b7d1 <fchmod@plt+0x11371>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x199,%eax
jne    805b7a0 <fchmod@plt+0x11340>
call   805af40 <fchmod@plt+0x10ae0>
cmp    $0x1,%eax
je     805baad <fchmod@plt+0x1164d>
movb   $0x0,(%esi)
movl   $0xffffffff,0x2c(%esp)
movb   $0x0,(%ebx)
jmp    805b7a0 <fchmod@plt+0x11340>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
je     805b810 <fchmod@plt+0x113b0>
test   %ebp,%ebp
je     805b93a <fchmod@plt+0x114da>
cmpw   $0x24,0x10(%ebp)
je     805b819 <fchmod@plt+0x113b9>
call   8062520 <fchmod@plt+0x180c0>
nop
jmp    805b819 <fchmod@plt+0x113b9>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804cec0 <fchmod@plt+0x2a60>
test   %al,%al
jne    805b95d <fchmod@plt+0x114fd>
cmpb   $0x0,(%esi)
je     805b9b0 <fchmod@plt+0x11550>
movl   $0x5,0x8(%esp)
movl   $0x806e65b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
movb   $0x0,(%esi)
movl   $0xffffffff,0x2c(%esp)
movb   $0x0,(%ebx)
jmp    805b7cb <fchmod@plt+0x1136b>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    805b8cb <fchmod@plt+0x1146b>
lea    0x0(%esi),%esi
cmpb   $0x0,(%ebx)
je     805b7cb <fchmod@plt+0x1136b>
jmp    805b95d <fchmod@plt+0x114fd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x807764c,%eax
add    $0x1,%eax
mov    %eax,0x807764c
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8077650,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x807764c,%edx
mov    0x2c(%esp),%ecx
mov    %eax,0x8077650
mov    %ecx,-0x4(%eax,%edx,4)
jmp    805b810 <fchmod@plt+0x113b0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8056590 <fchmod@plt+0xc130>
mov    0x5c(%esp),%edx
testb  $0x1,0x8077415
movb   $0x1,(%edx)
mov    %eax,%esi
je     805ba30 <fchmod@plt+0x115d0>
test   %eax,%eax
je     805ba30 <fchmod@plt+0x115d0>
cmpb   $0x0,0x11(%eax)
jne    805ba30 <fchmod@plt+0x115d0>
call   8059590 <fchmod@plt+0xf130>
jmp    805b8d4 <fchmod@plt+0x11474>
xchg   %ax,%ax
movswl 0x10(%ebp),%eax
cmp    $0x1e,%ax
je     805ba96 <fchmod@plt+0x11636>
mov    %eax,(%esp)
call   80561f0 <fchmod@plt+0xbd90>
test   %esi,%esi
je     805ba78 <fchmod@plt+0x11618>
cmpb   $0x0,0x11(%esi)
jne    805ba78 <fchmod@plt+0x11618>
mov    0x80773f8,%edx
mov    0x44(%edx),%eax
test   %eax,%eax
je     805ba78 <fchmod@plt+0x11618>
mov    0x10(%eax),%esi
test   %esi,%esi
jle    805ba78 <fchmod@plt+0x11618>
movl   $0x0,0x4(%esp)
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   804e550 <fchmod@plt+0x40f0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x80773bc
je     805b8d4 <fchmod@plt+0x11474>
call   806a7c0 <fchmod@plt+0x20360>
movb   $0x0,0x80773bc
jmp    805b8d4 <fchmod@plt+0x11474>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   805a830 <fchmod@plt+0x103d0>
jmp    805b8d4 <fchmod@plt+0x11474>
xor    %edx,%edx
jmp    805b860 <fchmod@plt+0x11400>
mov    0x8077704,%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
mov    %eax,0x2c(%esp)
jmp    805b7a0 <fchmod@plt+0x11340>
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x80773d8,%eax
mov    0x20(%esp),%ecx
mov    0x80772f4,%edx
test   %cl,%cl
je     805bb58 <fchmod@plt+0x116f8>
lea    -0x1(%eax,%edx,1),%edx
cmp    %eax,%edx
jbe    805bb20 <fchmod@plt+0x116c0>
cmpb   $0x0,-0x1(%edx)
jne    805bb22 <fchmod@plt+0x116c2>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
jb     805bb14 <fchmod@plt+0x116b4>
test   %cl,%cl
jne    805bb60 <fchmod@plt+0x11700>
mov    0x24(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804dcb0 <fchmod@plt+0x3850>
test   %eax,%eax
je     805bb14 <fchmod@plt+0x116b4>
sub    0x80773d8,%eax
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
mov    $0x1,%eax
add    $0x1c,%esp
ret
lea    0x1(%eax,%edx,1),%edx
jmp    805bb0a <fchmod@plt+0x116aa>
xchg   %ax,%ax
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804dd60 <fchmod@plt+0x3900>
jmp    805bb36 <fchmod@plt+0x116d6>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x8,%esp
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
cmp    %ecx,%edx
je     805bbc0 <fchmod@plt+0x11760>
mov    0x8077340,%ebx
xor    %eax,%eax
sub    $0x1,%ebx
cmp    %ebx,%edx
jb     805bbb5 <fchmod@plt+0x11755>
mov    %edx,%esi
sub    %ecx,%ebx
sub    %ecx,%esi
xor    %edx,%edx
mov    %esi,%eax
div    %ebx
mov    %esi,%eax
sub    %edx,%eax
mov    (%esp),%ebx
mov    0x4(%esp),%esi
add    $0x8,%esp
ret
xor    %eax,%eax
mov    (%esp),%ebx
mov    0x4(%esp),%esi
add    $0x8,%esp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x807765c,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
lea    0x2(%eax),%ebx
call   805bad0 <fchmod@plt+0x11670>
lea    (%ebx,%eax,1),%ecx
mov    %eax,%esi
cmp    %ecx,%ebx
je     805bc38 <fchmod@plt+0x117d8>
mov    0x8077340,%edx
xor    %eax,%eax
sub    $0x1,%edx
cmp    %edx,%ecx
jb     805bc10 <fchmod@plt+0x117b0>
sub    %ebx,%edx
mov    %esi,%eax
mov    %edx,%ebx
xor    %edx,%edx
div    %ebx
mov    %esi,%eax
sub    %edx,%eax
sub    %eax,%ecx
mov    0x807783c,%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805bc10 <fchmod@plt+0x117b0>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x807765c,%eax
mov    0x24(%esp),%esi
mov    0x20(%esp),%edi
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    %esi,0x4(%esp)
xor    %esi,%esi
mov    %edi,(%esp)
lea    0x2(%eax),%ebx
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,%ecx
lea    (%ebx,%eax,1),%eax
cmp    %eax,%ebx
je     805bc86 <fchmod@plt+0x11826>
mov    0x8077340,%edx
sub    $0x1,%edx
cmp    %edx,%eax
jae    805bdb8 <fchmod@plt+0x11958>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     805bcfe <fchmod@plt+0x1189e>
mov    0x8077340,%eax
sub    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x807765c,%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x8(%esp)
mov    0x807765c,%eax
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x807783c,%eax
not    %ebx
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
cmp    $0x1,%esi
mov    0x807783c,%eax
sbb    %edx,%edx
and    $0xfffffffc,%edx
add    $0x24,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
add    0x8077340,%ebx
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
movl   $0xffffffff,0x8(%esp)
mov    %eax,%ebx
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
call   805bbd0 <fchmod@plt+0x11770>
mov    0x807783c,%eax
mov    %eax,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a010 <wnoutrefresh@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%esi
mov    %ecx,%eax
sub    %ebx,%esi
xor    %edx,%edx
div    %esi
mov    %ecx,%esi
sub    %edx,%esi
jmp    805bc86 <fchmod@plt+0x11826>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
testb  $0x10,0x8077415
jne    805be20 <fchmod@plt+0x119c0>
movl   $0x0,0x4(%esp)
movl   $0x80773d8,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
movl   $0x0,0x80772f4
00
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0x80772f4,%eax
movl   $0x80773d8,(%esp)
mov    %eax,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
jmp    805be04 <fchmod@plt+0x119a4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
mov    %ebx,0x2c(%esp)
mov    %esi,0x30(%esp)
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
mov    0x80773d8,%eax
add    0x80772f4,%eax
cmpb   $0x0,(%eax)
je     805befc <fchmod@plt+0x11a9c>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x80773d8,%esi
mov    0x80772f4,%edi
lea    (%esi,%edi,1),%ebp
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   8049fc0 <strlen@plt>
mov    %ebp,(%esp)
sub    %edi,%eax
add    %ebx,%edi
lea    0x1(%eax),%edx
add    %edi,%esi
sub    %ebx,%edx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
call   8049bb0 <memmove@plt>
mov    0x1c(%esp),%ecx
mov    0x80772f4,%eax
movl   $0x80773d8,(%esp)
add    %ecx,%eax
sub    %ebx,%eax
mov    %eax,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edx
mov    %edx,0x24(%esp)
mov    0x54(%esp),%edx
mov    %edx,0x20(%esp)
mov    0x58(%esp),%edx
mov    %edx,0x2c(%esp)
movzbl 0x5c(%esp),%edx
mov    %dl,0x2b(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%edx
movb   $0x0,(%edx)
mov    %eax,%edi
mov    0x20(%esp),%eax
test   %eax,%eax
jne    805bff4 <fchmod@plt+0x11b94>
jmp    805c080 <fchmod@plt+0x11c20>
movb   $0xa,(%eax)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,%ebx
add    %eax,%esi
lea    (%edi,%ebx,2),%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x80772f4,%edx
mov    %edi,%ecx
add    %ebx,%edi
sub    %edx,%ecx
add    %ebx,%ecx
mov    %ecx,0x8(%esp)
lea    (%eax,%edx,1),%ecx
add    %ebx,%edx
mov    %eax,0x80773d8
add    %edx,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049bb0 <memmove@plt>
mov    0x80773d8,%eax
add    0x80772f4,%eax
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
add    %ebx,0x80772f4
cmp    %esi,0x20(%esp)
jbe    805c080 <fchmod@plt+0x11c20>
cmpb   $0x0,0x2b(%esp)
je     805c038 <fchmod@plt+0x11bd8>
mov    0x24(%esp),%eax
add    %esi,%eax
movzbl (%eax),%edx
test   %dl,%dl
je     805bf70 <fchmod@plt+0x11b10>
cmp    $0xa,%dl
jne    805bf73 <fchmod@plt+0x11b13>
mov    0x2c(%esp),%edx
movb   $0x1,(%edx)
mov    0x20(%esp),%edx
mov    %eax,0x50(%esp)
sub    %esi,%edx
mov    %edx,0x54(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8067790 <fchmod@plt+0x1d330>
xchg   %ax,%ax
mov    0x24(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
add    %esi,%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x1c(%esp),%edx
add    %eax,%esi
mov    %eax,%ebx
movsbl (%edx),%eax
mov    %eax,(%esp)
call   804cec0 <fchmod@plt+0x2a60>
test   %al,%al
je     805bf8b <fchmod@plt+0x11b2b>
cmp    %esi,0x20(%esp)
ja     805bff4 <fchmod@plt+0x11b94>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049be0 <free@plt>
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
mov    0x80772f4,%eax
mov    %eax,0x54(%esp)
mov    0x80773d8,%eax
mov    %eax,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805bc40 <fchmod@plt+0x117e0>
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
lea    0x1c(%esp),%eax
movb   $0x0,(%esi)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8068860 <fchmod@plt+0x1e400>
mov    %eax,%edi
mov    0x1c(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x1c(%esp),%ecx
xor    %edx,%edx
test   %ecx,%ecx
mov    %eax,%ebx
je     805c0ff <fchmod@plt+0x11c9f>
nop
mov    (%edi,%edx,4),%ecx
mov    %cl,(%ebx,%edx,1)
add    $0x1,%edx
cmp    %edx,0x1c(%esp)
ja     805c0f0 <fchmod@plt+0x11c90>
movb   $0x0,(%ebx,%edx,1)
mov    0x1c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x4(%esp)
call   805bf10 <fchmod@plt+0x11ab0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x807765c,%eax
mov    %ebx,0x10(%esp)
mov    0x20(%esp),%ebx
mov    %esi,0x14(%esp)
xor    %esi,%esi
mov    %edi,0x18(%esp)
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
lea    0x2(%eax),%ecx
lea    (%ecx,%ebx,1),%eax
cmp    %eax,%ecx
je     805c169 <fchmod@plt+0x11d09>
mov    0x8077340,%edx
sub    $0x1,%edx
cmp    %edx,%eax
jae    805c1a8 <fchmod@plt+0x11d48>
mov    0x80772f0,%ebx
lea    (%ecx,%ebx,1),%eax
cmp    %eax,%ecx
je     805c1c3 <fchmod@plt+0x11d63>
mov    0x8077340,%edi
xor    %edx,%edx
sub    $0x1,%edi
cmp    %edi,%eax
jb     805c191 <fchmod@plt+0x11d31>
mov    %ebx,%eax
sub    %ecx,%edi
xor    %edx,%edx
div    %edi
sub    %edx,%ebx
mov    %ebx,%edx
cmp    %edx,%esi
mov    0x10(%esp),%ebx
setne  %al
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %edx,%esi
mov    %ebx,%eax
sub    %ecx,%esi
xor    %edx,%edx
div    %esi
mov    %ebx,%esi
mov    0x80772f0,%ebx
lea    (%ecx,%ebx,1),%eax
sub    %edx,%esi
cmp    %eax,%ecx
jne    805c176 <fchmod@plt+0x11d16>
xor    %edx,%edx
jmp    805c191 <fchmod@plt+0x11d31>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80773d8,%eax
add    0x80772f4,%eax
je     805c3f4 <fchmod@plt+0x11f94>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x4(%esp)
mov    0x80773f4,%eax
mov    %eax,(%esp)
call   804dba0 <fchmod@plt+0x3740>
test   %eax,%eax
mov    %eax,%edi
je     805c3ed <fchmod@plt+0x11f8d>
mov    0x80772f4,%eax
mov    %eax,0x1c(%esp)
mov    0x80772f0,%eax
mov    %eax,0x14(%esp)
mov    0x80773f4,%eax
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    %eax,%ebx
shr    %ebx
je     805c40c <fchmod@plt+0x11fac>
xor    %esi,%esi
xor    %ebp,%ebp
mov    0x80773f4,%eax
add    $0x1,%ebp
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    %eax,%esi
cmp    %ebx,%ebp
jne    805c230 <fchmod@plt+0x11dd0>
mov    %edi,%eax
sub    0x80773f4,%eax
mov    %edi,0x18(%esp)
cmp    %eax,%esi
mov    %edi,%esi
setbe  0x10(%esp)
movzbl 0x10(%esp),%ebp
jmp    805c294 <fchmod@plt+0x11e34>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f4,%edi
sub    %edi,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d590 <fchmod@plt+0x3130>
sub    $0x1,%ebx
lea    (%edi,%eax,1),%esi
je     805c2b1 <fchmod@plt+0x11e51>
mov    %ebp,%eax
test   %al,%al
jne    805c278 <fchmod@plt+0x11e18>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%esi
sub    $0x1,%ebx
jne    805c294 <fchmod@plt+0x11e34>
movzbl 0x10(%esp),%eax
mov    0x18(%esp),%edi
mov    %eax,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%ebp
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,%ebx
call   804d310 <fchmod@plt+0x2eb0>
lea    0x1(%eax,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   804a090 <strncpy@plt>
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%esp)
add    %ebp,%ebx
mov    %esi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
lea    0x2c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    $0x1,%ebx
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
call   804d310 <fchmod@plt+0x2eb0>
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
xchg   %ax,%ax
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   805baf0 <fchmod@plt+0x11690>
test   %al,%al
je     805c3f8 <fchmod@plt+0x11f98>
mov    0x80773d8,%eax
add    0x80772f4,%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a320 <strncmp@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x2,%eax
lea    -0x1(%ebx,%eax,1),%ebx
test   %ebx,%ebx
jne    805c358 <fchmod@plt+0x11ef8>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c3d9 <fchmod@plt+0x11f79>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
repz ret
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %eax,0x80772f4
mov    0x14(%esp),%eax
mov    %eax,0x80772f0
jmp    805c3d9 <fchmod@plt+0x11f79>
mov    %edi,%esi
movl   $0x1,0x10(%esp)
jmp    805c2be <fchmod@plt+0x11e5e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80772f0,%eax
mov    0x40(%esp),%esi
mov    %eax,0x1c(%esp)
call   804d310 <fchmod@plt+0x2eb0>
and    $0xff,%esi
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x80772f4,%eax
add    0x80773d8,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
mov    0x80772f4,%eax
je     805c4f0 <fchmod@plt+0x12090>
test   %eax,%eax
jne    805c4d0 <fchmod@plt+0x12070>
mov    $0x1,%edi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c4c0 <fchmod@plt+0x12060>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    $0x1,%edi
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x80772f4
jmp    805c450 <fchmod@plt+0x11ff0>
test   %eax,%eax
jne    805c502 <fchmod@plt+0x120a2>
jmp    805c488 <fchmod@plt+0x12028>
xchg   %ax,%ax
test   %eax,%eax
lea    0x0(%esi),%esi
je     805c488 <fchmod@plt+0x12028>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x80772f4
add    0x80773d8,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
mov    0x80772f4,%eax
je     805c4f8 <fchmod@plt+0x12098>
test   %eax,%eax
je     805c488 <fchmod@plt+0x12028>
nop
jmp    805c566 <fchmod@plt+0x12106>
lea    0x0(%esi),%esi
mov    0x80772f4,%eax
test   %eax,%eax
nop
je     805c488 <fchmod@plt+0x12028>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x80772f4
add    0x80773d8,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
jne    805c558 <fchmod@plt+0x120f8>
add    %ebp,0x80772f4
jmp    805c488 <fchmod@plt+0x12028>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80772f0,%edi
mov    0x40(%esp),%esi
call   804d310 <fchmod@plt+0x2eb0>
and    $0xff,%esi
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x80772f4,%ebp
movb   $0x0,0x1f(%esp)
mov    %eax,%ebx
mov    0x80773d8,%eax
xchg   %ax,%ax
add    %eax,%ebp
mov    %ebp,(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804d030 <fchmod@plt+0x2bd0>
mov    0x80772f4,%edx
test   %al,%al
mov    0x80773d8,%eax
je     805c670 <fchmod@plt+0x12210>
cmpb   $0x0,(%eax,%edx,1)
je     805c640 <fchmod@plt+0x121e0>
add    %edx,%ebp
mov    %ebp,0x80772f4
movb   $0x1,0x1f(%esp)
jmp    805c5f8 <fchmod@plt+0x12198>
movb   $0x1,0x1f(%esp)
mov    %ebx,(%esp)
call   8049be0 <free@plt>
call   805bad0 <fchmod@plt+0x11670>
mov    %edi,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
jne    805c6c0 <fchmod@plt+0x12260>
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,(%eax,%edx,1)
je     805c645 <fchmod@plt+0x121e5>
add    %edx,%ebp
add    %ebp,%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,0x80772f4
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804d030 <fchmod@plt+0x2bd0>
test   %al,%al
jne    805c645 <fchmod@plt+0x121e5>
mov    0x80773d8,%eax
mov    0x80772f4,%edx
cmpb   $0x0,(%eax,%edx,1)
je     805c645 <fchmod@plt+0x121e5>
jmp    805c676 <fchmod@plt+0x12216>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x80773d8,%ebx
mov    %esi,0x18(%esp)
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    0x80772f4,%edx
cmp    %edx,%eax
ja     805c720 <fchmod@plt+0x122c0>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
nop
mov    %edx,0x4(%esp)
mov    0x80772f0,%esi
mov    %ebx,(%esp)
call   804d5e0 <fchmod@plt+0x3180>
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %esi,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c713 <fchmod@plt+0x122b3>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
nop
mov    0x80772f4,%eax
test   %eax,%eax
jne    805c780 <fchmod@plt+0x12320>
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80772f0,%ebx
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   804d590 <fchmod@plt+0x3130>
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %ebx,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c7cc <fchmod@plt+0x1236c>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
add    $0x18,%esp
pop    %ebx
ret
jmp    805c7e0 <fchmod@plt+0x12380>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x80772f4,%eax
test   %eax,%eax
jne    805c7f0 <fchmod@plt+0x12390>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
call   805c770 <fchmod@plt+0x12310>
add    $0xc,%esp
jmp    805be40 <fchmod@plt+0x119e0>
push   %ebx
sub    $0x18,%esp
mov    0x80773d8,%eax
mov    0x80772f0,%ebx
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %ebx,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c848 <fchmod@plt+0x123e8>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
testb  $0x2,0x8077417
mov    %ebx,0x10(%esp)
mov    0x80772f0,%ebx
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
je     805c8a0 <fchmod@plt+0x12440>
mov    0x80773d8,%eax
mov    0x80772f4,%edi
mov    %eax,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
cmp    %eax,%edi
mov    %eax,%esi
mov    %eax,0x80772f4
je     805c8a0 <fchmod@plt+0x12440>
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmp    %eax,%esi
jne    805c8aa <fchmod@plt+0x1244a>
lea    0x0(%esi),%esi
movl   $0x0,0x80772f4
00
call   805bad0 <fchmod@plt+0x11670>
mov    %ebx,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c8d6 <fchmod@plt+0x12476>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
mov    %esi,0x30(%esp)
lea    0x1c(%esp),%esi
mov    %edi,0x34(%esp)
lea    0x18(%esp),%edi
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %ebx,0x2c(%esp)
mov    %ebp,0x38(%esp)
call   8067810 <fchmod@plt+0x1d3b0>
test   %eax,%eax
mov    %eax,%ebx
je     805c940 <fchmod@plt+0x124e0>
mov    %ebx,%eax
mov    0x30(%esp),%esi
mov    0x2c(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x807783c,%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a210 <wmouse_trafo@plt>
test   %al,%al
je     805c925 <fchmod@plt+0x124c5>
mov    0x807765c,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
lea    0x2(%eax),%esi
cmp    0x18(%esp),%esi
ja     805c925 <fchmod@plt+0x124c5>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    805c925 <fchmod@plt+0x124c5>
mov    0x80772f0,%edi
call   805bad0 <fchmod@plt+0x11670>
lea    (%eax,%esi,1),%edx
mov    %eax,%ecx
xor    %eax,%eax
cmp    %edx,%esi
je     805c9b0 <fchmod@plt+0x12550>
mov    0x8077340,%ebp
mov    %ebx,%eax
sub    $0x1,%ebp
cmp    %ebp,%edx
jb     805c9b0 <fchmod@plt+0x12550>
sub    %esi,%ebp
mov    %ecx,%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
sub    %edx,%eax
sub    %esi,%eax
add    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %edi,(%esp)
mov    %eax,0x80772f0
call   805c130 <fchmod@plt+0x11cd0>
test   %al,%al
je     805c925 <fchmod@plt+0x124c5>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
jmp    805c925 <fchmod@plt+0x124c5>
jmp    805ca10 <fchmod@plt+0x125b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
call   806aa70 <fchmod@plt+0x20610>
add    $0x8,%esp
mov    %ebx,%eax
pop    %ebx
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x807783c,%eax
mov    0x5c(%esp),%edx
mov    0x58(%esp),%ebx
mov    0x64(%esp),%ebp
mov    0x54(%esp),%esi
movb   $0x0,(%ebx)
movb   $0x0,(%edx)
mov    0x60(%esp),%edx
movb   $0x0,(%edx)
mov    0x50(%esp),%edx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
mov    %ebp,%edx
test   %dl,%dl
mov    %eax,0x2c(%esp)
je     805ca80 <fchmod@plt+0x12620>
cmpb   $0x0,(%esi)
jne    805cc90 <fchmod@plt+0x12830>
lea    0x2c(%esp),%eax
mov    0x50(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
mov    %eax,%edi
setne  %al
test   %al,%al
mov    %al,(%ebx)
mov    0x2c(%esp),%eax
je     805cd18 <fchmod@plt+0x128b8>
mov    %ebp,%edx
test   %dl,%dl
je     805cc88 <fchmod@plt+0x12828>
cmp    $0xffffffff,%eax
je     805cb20 <fchmod@plt+0x126c0>
cmpb   $0x0,(%ebx)
jne    805cb29 <fchmod@plt+0x126c9>
testb  $0x1,0x8077417
je     805caec <fchmod@plt+0x1268c>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     805caec <fchmod@plt+0x1268c>
cmpl   $0x20,0x80777bc
je     805cda0 <fchmod@plt+0x12940>
mov    0x8077654,%eax
add    $0x1,%eax
mov    %eax,0x8077654
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8077658,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x8077654,%edx
mov    0x2c(%esp),%ecx
mov    %eax,0x8077658
mov    %ecx,-0x4(%eax,%edx,4)
cmpb   $0x0,(%ebx)
je     805cda0 <fchmod@plt+0x12940>
mov    0x8077658,%eax
test   %eax,%eax
je     805cbc3 <fchmod@plt+0x12763>
mov    0x8077654,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
mov    0x8077654,%eax
test   %eax,%eax
je     805cde5 <fchmod@plt+0x12985>
mov    0x8077658,%ecx
xor    %edx,%edx
mov    %ebx,0x1c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx,%edx,4),%ebx
mov    %bl,(%esi,%edx,1)
add    $0x1,%edx
cmp    %eax,%edx
jne    805cb68 <fchmod@plt+0x12708>
mov    0x1c(%esp),%ebx
movb   $0x0,(%esi,%edx,1)
lea    0x2b(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
call   805bf10 <fchmod@plt+0x11ab0>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x8077658,%eax
movl   $0x0,0x8077654
00
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x8077658
00
cmpb   $0x0,(%ebx)
je     805cd08 <fchmod@plt+0x128a8>
movzwl 0x10(%edi),%eax
cmp    $0x11,%ax
je     805cd08 <fchmod@plt+0x128a8>
cmp    $0x23,%ax
je     805cd08 <fchmod@plt+0x128a8>
cmp    $0x8,%ax
je     805cdec <fchmod@plt+0x1298c>
cmp    $0x95,%ax
je     805cd70 <fchmod@plt+0x12910>
cmp    $0x10,%ax
je     805ce6e <fchmod@plt+0x12a0e>
cmp    $0xe,%ax
je     805ce7c <fchmod@plt+0x12a1c>
cmp    $0x96,%ax
je     805ce8a <fchmod@plt+0x12a2a>
cmp    $0x97,%ax
je     805ce9f <fchmod@plt+0x12a3f>
cmp    $0x28,%ax
je     805ceb4 <fchmod@plt+0x12a54>
cmp    $0x27,%ax
je     805cec2 <fchmod@plt+0x12a62>
cmp    $0x2e,%ax
je     805ced0 <fchmod@plt+0x12a70>
cmp    $0x24,%ax
je     805ce01 <fchmod@plt+0x129a1>
cmp    $0x22,%ax
je     805cdb5 <fchmod@plt+0x12955>
cmp    $0x21,%ax
jne    805ccc0 <fchmod@plt+0x12860>
testb  $0x1,0x8077417
je     805cc7a <fchmod@plt+0x1281a>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     805cc7a <fchmod@plt+0x1281a>
cmpl   $0x20,0x80777bc
je     805cd08 <fchmod@plt+0x128a8>
call   805c7e0 <fchmod@plt+0x12380>
mov    0x2c(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x199,%eax
jne    805ca80 <fchmod@plt+0x12620>
call   805c8f0 <fchmod@plt+0x12490>
cmp    $0x1,%eax
je     805cede <fchmod@plt+0x12a7e>
mov    0x50(%esp),%edx
movl   $0xffffffff,0x2c(%esp)
movb   $0x0,(%edx)
movb   $0x0,(%esi)
jmp    805ca80 <fchmod@plt+0x12620>
mov    %edi,(%esp)
call   8056590 <fchmod@plt+0xc130>
cmpw   $0x0,0x10(%edi)
je     805ccfa <fchmod@plt+0x1289a>
cmpb   $0x0,0x18(%edi)
je     805ccfa <fchmod@plt+0x1289a>
mov    0x5c(%esp),%ebx
test   %eax,%eax
movb   $0x1,(%ebx)
je     805ccfa <fchmod@plt+0x1289a>
testb  $0x1,0x8077415
je     805ccef <fchmod@plt+0x1288f>
cmpb   $0x0,0x11(%eax)
je     805ccfa <fchmod@plt+0x1289a>
movswl (%eax),%eax
mov    %eax,(%esp)
call   80561f0 <fchmod@plt+0xbd90>
mov    0x60(%esp),%edx
movb   $0x1,(%edx)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804cec0 <fchmod@plt+0x2a60>
test   %al,%al
jne    805cd40 <fchmod@plt+0x128e0>
mov    0x50(%esp),%edx
cmpb   $0x0,(%edx)
jne    805cd40 <fchmod@plt+0x128e0>
cmpb   $0x0,(%esi)
jne    805cd40 <fchmod@plt+0x128e0>
mov    0x2c(%esp),%eax
jmp    805cab6 <fchmod@plt+0x12656>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ee0 <beep@plt>
mov    0x50(%esp),%edx
mov    %ebp,%eax
test   %al,%al
movl   $0xffffffff,0x2c(%esp)
movb   $0x0,(%edx)
movb   $0x0,(%esi)
jne    805cb20 <fchmod@plt+0x126c0>
mov    $0xffffffff,%eax
jmp    805cc88 <fchmod@plt+0x12828>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x8077417
je     805cd92 <fchmod@plt+0x12932>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     805cd92 <fchmod@plt+0x12932>
cmpl   $0x20,0x80777bc
je     805cd08 <fchmod@plt+0x128a8>
call   805bdd0 <fchmod@plt+0x11970>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
call   8066e30 <fchmod@plt+0x1c9d0>
test   %eax,%eax
jne    805cbc3 <fchmod@plt+0x12763>
lea    0x0(%esi),%esi
jmp    805cb29 <fchmod@plt+0x126c9>
testb  $0x1,0x8077417
je     805cdd7 <fchmod@plt+0x12977>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     805cdd7 <fchmod@plt+0x12977>
cmpl   $0x20,0x80777bc
je     805cd08 <fchmod@plt+0x128a8>
call   805be40 <fchmod@plt+0x119e0>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
xor    %edx,%edx
jmp    805cb7a <fchmod@plt+0x1271a>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   805ca10 <fchmod@plt+0x125b0>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
testb  $0x1,0x8077417
je     805ce23 <fchmod@plt+0x129c3>
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     805ce23 <fchmod@plt+0x129c3>
cmpl   $0x20,0x80777bc
je     805cd08 <fchmod@plt+0x128a8>
lea    0x2b(%esp),%eax
mov    %eax,(%esp)
call   805c0b0 <fchmod@plt+0x11c50>
cmpb   $0x0,0x2b(%esp)
je     805cd08 <fchmod@plt+0x128a8>
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
movl   $0x0,0x4(%esp)
movl   $0x11,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    0x60(%esp),%edx
movb   $0x1,(%edx)
jmp    805cc88 <fchmod@plt+0x12828>
call   805c6f0 <fchmod@plt+0x12290>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
call   805c770 <fchmod@plt+0x12310>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
movl   $0x0,(%esp)
call   805c5c0 <fchmod@plt+0x12160>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
movl   $0x0,(%esp)
call   805c420 <fchmod@plt+0x11fc0>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
call   805c850 <fchmod@plt+0x123f0>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
call   805c800 <fchmod@plt+0x123a0>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
call   805c1d0 <fchmod@plt+0x11d70>
mov    0x2c(%esp),%eax
jmp    805cc88 <fchmod@plt+0x12828>
mov    0x50(%esp),%edx
mov    0x807783c,%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
mov    %eax,0x2c(%esp)
jmp    805ca80 <fchmod@plt+0x12620>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x7c(%esp),%eax
movzbl 0x74(%esp),%edx
mov    0x80(%esp),%ebx
mov    0x84(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %dl,0x3b(%esp)
movzbl 0x78(%esp),%ebp
movl   $0xffffffff,0x4c(%esp)
movb   $0x0,0x4b(%esp)
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,0x80773d8
call   8049fc0 <strlen@plt>
mov    0x80772f4,%edx
cmpb   $0x0,0x8077660
je     805cf79 <fchmod@plt+0x12b19>
mov    0x80772f8,%edx
mov    0x80772fc,%ecx
mov    %edx,0x80772f4
mov    %ecx,0x80772f0
cmp    $0xffffffff,%edx
je     805d1a0 <fchmod@plt+0x12d40>
cmp    %edx,%eax
jb     805d1a0 <fchmod@plt+0x12d40>
mov    0x90(%esp),%eax
mov    $0xffffffff,%edi
mov    %eax,0x80777bc
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    %ebp,%eax
movzbl %al,%ebp
mov    %ebp,0x3c(%esp)
mov    0x88(%esp),%ebp
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
jmp    805d034 <fchmod@plt+0x12bd4>
lea    0x0(%esi),%esi
cmp    $0x2a,%dx
movb   $0x0,0x4b(%esp)
je     805d1b8 <fchmod@plt+0x12d58>
cmp    $0x29,%dx
je     805d220 <fchmod@plt+0x12dc0>
cmp    $0x9,%dx
je     805d298 <fchmod@plt+0x12e38>
cmpb   $0x0,0x4a(%esp)
jne    805d120 <fchmod@plt+0x12cc0>
mov    0x4c(%esp),%edi
call   805bbd0 <fchmod@plt+0x11770>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x8c(%esp),%edx
lea    0x4a(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x48(%esp),%eax
movl   $0x1,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x18(%esp)
lea    0x49(%esp),%edx
mov    %edx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   805ca30 <fchmod@plt+0x125d0>
lea    0x4c(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x4c(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
mov    %eax,%ecx
je     805d013 <fchmod@plt+0x12bb3>
movzwl 0x10(%eax),%edx
mov    %edx,%eax
and    $0xffffffdf,%eax
cmp    $0x11,%ax
je     805d120 <fchmod@plt+0x12cc0>
cmp    $0x23,%dx
jne    805cff0 <fchmod@plt+0x12b90>
test   %ebp,%ebp
je     805d278 <fchmod@plt+0x12e18>
movl   $0x9,0x4(%esp)
movl   $0x23,(%esp)
mov    %ecx,0x2c(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    0x2c(%esp),%ecx
cmp    %edi,%eax
mov    0x80773d8,%edi
je     805d0ed <fchmod@plt+0x12c8d>
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%ecx
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
test   %eax,%eax
jne    805d2b8 <fchmod@plt+0x12e58>
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   805bc40 <fchmod@plt+0x117e0>
mov    0x2c(%esp),%ecx
cmpb   $0x0,0x4a(%esp)
je     805d01e <fchmod@plt+0x12bbe>
lea    0x0(%esi),%esi
mov    0x88(%esp),%eax
mov    %ecx,%ebp
test   %eax,%eax
je     805d152 <fchmod@plt+0x12cf2>
mov    0x88(%esp),%edx
mov    (%edx),%eax
mov    %eax,(%esp)
call   8060800 <fchmod@plt+0x163a0>
mov    0x34(%esp),%eax
test   %eax,%eax
je     805d152 <fchmod@plt+0x12cf2>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
test   %ebp,%ebp
je     805d189 <fchmod@plt+0x12d29>
movzwl 0x10(%ebp),%eax
and    $0xffffffdf,%eax
cmp    $0x11,%ax
jne    805d310 <fchmod@plt+0x12eb0>
mov    0x80772f8,%eax
cmpb   $0x0,0x49(%esp)
mov    %eax,0x80772f4
mov    0x80772fc,%eax
mov    %eax,0x80772f0
jne    805d189 <fchmod@plt+0x12d29>
movb   $0x1,0x8077660
mov    0x70(%esp),%eax
mov    0x4c(%esp),%edx
mov    %edx,(%eax)
add    $0x5c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x80772f4
call   805bad0 <fchmod@plt+0x11670>
mov    %eax,0x80772f0
jmp    805cf8a <fchmod@plt+0x12b2a>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     805d013 <fchmod@plt+0x12bb3>
mov    0x0(%ebp),%eax
mov    0x8(%eax),%ecx
test   %ecx,%ecx
je     805d338 <fchmod@plt+0x12ed8>
mov    %ebp,(%esp)
call   8061770 <fchmod@plt+0x17310>
test   %eax,%eax
je     805d300 <fchmod@plt+0x12ea0>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x80773d8
call   8049fc0 <strlen@plt>
mov    %eax,0x80772f4
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
movb   $0x0,0x4a(%esp)
jmp    805d01e <fchmod@plt+0x12bbe>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     805d013 <fchmod@plt+0x12bb3>
mov    %ebp,(%esp)
call   8061790 <fchmod@plt+0x17330>
mov    0x80773d8,%edi
test   %eax,%eax
je     805d25f <fchmod@plt+0x12dff>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x80773d8
call   8049fc0 <strlen@plt>
mov    %eax,0x80772f4
mov    0x0(%ebp),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     805d3c8 <fchmod@plt+0x12f68>
mov    0x80772f4,%eax
jmp    805d203 <fchmod@plt+0x12da3>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x3b(%esp)
jne    805d360 <fchmod@plt+0x12f00>
mov    0x80772f4,%eax
mov    0x80773d8,%edi
jmp    805d0fe <fchmod@plt+0x12c9e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80772f4,%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   805bc40 <fchmod@plt+0x117e0>
movb   $0x0,0x4a(%esp)
jmp    805d01e <fchmod@plt+0x12bbe>
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x8(%esp)
call   80617b0 <fchmod@plt+0x17350>
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x80773d8
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%ecx
mov    %eax,0x80772f4
jmp    805d0fe <fchmod@plt+0x12c9e>
xchg   %ax,%ax
mov    0x80772f4,%eax
mov    0x80773d8,%edi
jmp    805d203 <fchmod@plt+0x12da3>
cmpb   $0x0,0x49(%esp)
je     805d3b8 <fchmod@plt+0x12f58>
mov    0x80772f8,%eax
mov    %eax,0x80772f4
mov    0x80772fc,%eax
mov    %eax,0x80772f0
jmp    805d189 <fchmod@plt+0x12d29>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
je     805d1ce <fchmod@plt+0x12d6e>
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x34(%esp)
jmp    805d1ce <fchmod@plt+0x12d6e>
nop
mov    0x94(%esp),%edx
lea    0x4b(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x80773d8,%eax
movl   $0x80772f4,0x8(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x14(%esp)
mov    0x8c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    0x3c(%esp),%edx
mov    %edx,0x4(%esp)
call   8051090 <fchmod@plt+0x6c30>
mov    0x2c(%esp),%ecx
mov    %eax,%edi
mov    %eax,0x80773d8
mov    0x80772f4,%eax
jmp    805d0fe <fchmod@plt+0x12c9e>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x8077660
jmp    805d189 <fchmod@plt+0x12d29>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%edi)
jne    805d26d <fchmod@plt+0x12e0d>
mov    0x34(%esp),%eax
test   %eax,%eax
je     805d26d <fchmod@plt+0x12e0d>
mov    0x34(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
jmp    805d1ea <fchmod@plt+0x12d8a>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x807765c,%eax
mov    0x60(%esp),%esi
mov    0x64(%esp),%edi
movb   $0x0,0x3b(%esp)
test   %eax,%eax
je     805d415 <fchmod@plt+0x12fb5>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8077340,%ebp
lea    0x84(%esp),%ebx
and    $0xff,%edi
call   804d310 <fchmod@plt+0x2eb0>
and    $0xff,%esi
sub    $0x4,%ebp
imul   %eax,%ebp
add    $0x1,%ebp
mov    %ebp,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x807765c
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8068380 <fchmod@plt+0x1df20>
mov    0x8077340,%ebp
call   804d310 <fchmod@plt+0x2eb0>
mov    0x80(%esp),%edx
mov    %ebx,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
sub    $0x4,%ebp
mov    %edx,0x10(%esp)
movl   $0x1,0x8(%esp)
imul   %eax,%ebp
mov    0x807765c,%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a0d0 <__vsnprintf_chk@plt>
mov    0x8077340,%eax
sub    $0x4,%eax
mov    %eax,0x4(%esp)
mov    0x807765c,%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
movl   $0x807765c,(%esp)
mov    %eax,0x4(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
lea    0x3b(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x68(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   805cf00 <fchmod@plt+0x12aa0>
mov    %eax,%ebx
mov    0x807765c,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80772f4,%eax
test   %ebx,%ebx
movl   $0x0,0x807765c
00
mov    %eax,0x80772f8
mov    0x80772f0,%eax
mov    %eax,0x80772fc
je     805d54c <fchmod@plt+0x130ec>
movzwl 0x10(%ebx),%eax
cmp    $0x31,%ax
je     805d578 <fchmod@plt+0x13118>
cmp    $0x11,%ax
je     805d588 <fchmod@plt+0x13128>
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
cmpb   $0x0,0x3b(%esp)
je     805d56b <fchmod@plt+0x1310b>
mov    0x7c(%esp),%eax
call   *%eax
mov    0x3c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0xffffffff,0x3c(%esp)
jmp    805d54c <fchmod@plt+0x130ec>
lea    0x0(%esi),%esi
mov    0x80773d8,%eax
cmpb   $0x1,(%eax)
sbb    %eax,%eax
and    $0xfffffffe,%eax
mov    %eax,0x3c(%esp)
jmp    805d54c <fchmod@plt+0x130ec>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x80772f8
ff
movl   $0xffffffff,0x80772fc
ff
movb   $0x1,0x8077660
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80777bc,%eax
mov    0x80(%esp),%ebx
movl   $0x5,0x8(%esp)
mov    0x84(%esp),%ebp
movl   $0x806f1bc,0x4(%esp)
movl   $0x0,(%esp)
mov    %bl,0x37(%esp)
mov    %eax,0x38(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806f1bf,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x24(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806f1c2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   8049c80 <dcgettext@plt>
testb  $0x8,0x8077414
movl   $0x10,0x2c(%esp)
mov    %eax,0x3c(%esp)
jne    805d79b <fchmod@plt+0x1333b>
mov    0x8077340,%eax
mov    $0x10,%esi
cmp    $0x1f,%eax
jg     805d675 <fchmod@plt+0x13215>
mov    %eax,%edx
shr    $0x1f,%edx
add    %eax,%edx
sar    %edx
mov    %edx,0x2c(%esp)
mov    %edx,%esi
call   8067bd0 <fchmod@plt+0x1d770>
mov    0x24(%esp),%edx
lea    0x51(%esp),%edi
movsbl (%edx),%eax
movl   $0x806f1c5,0xc(%esp)
movl   $0x3,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   804a440 <__sprintf_chk@plt>
mov    0x807783c,%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
movl   $0x5,0x8(%esp)
movl   $0x806f1c9,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8068130 <fchmod@plt+0x1dcd0>
test   %bl,%bl
jne    805da00 <fchmod@plt+0x135a0>
mov    0x807783c,%eax
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x28(%esp),%edx
movzbl (%edx),%eax
movl   $0x5,0x8(%esp)
movl   $0x806f1d1,0x4(%esp)
movl   $0x0,(%esp)
mov    %al,0x52(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8068130 <fchmod@plt+0x1dcd0>
mov    0x807783c,%eax
movl   $0x10,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c48f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x806c03a,(%esp)
mov    %eax,0x4(%esp)
call   8068130 <fchmod@plt+0x1dcd0>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     805d809 <fchmod@plt+0x133a9>
mov    0x8077340,%eax
mov    %ebp,(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80772e0,%eax
lea    0x50(%esp),%esi
movl   $0x0,0x8(%esp)
lea    0x4f(%esp),%ebx
lea    0x54(%esp),%edi
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x2c(%esp),%eax
add    %eax,%eax
mov    %eax,0x30(%esp)
nop
mov    0x807783c,%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x2000,0x80777bc
00
mov    %eax,(%esp)
call   8069540 <fchmod@plt+0x1f0e0>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x54(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     805d93c <fchmod@plt+0x134dc>
movzwl 0x10(%eax),%eax
cmp    $0x31,%ax
je     805d930 <fchmod@plt+0x134d0>
mov    0x54(%esp),%ebp
cmp    $0x199,%ebp
je     805d94c <fchmod@plt+0x134ec>
cmp    $0x8,%ax
je     805d9f0 <fchmod@plt+0x13590>
mov    0x24(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
je     805d8f0 <fchmod@plt+0x13490>
mov    $0x1,%eax
mov    0x38(%esp),%edx
mov    %edx,0x80777bc
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
jne    805d938 <fchmod@plt+0x134d8>
cmpb   $0x0,0x37(%esp)
je     805d858 <fchmod@plt+0x133f8>
mov    0x3c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
je     805d858 <fchmod@plt+0x133f8>
mov    $0x2,%eax
jmp    805d8dd <fchmod@plt+0x1347d>
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    805d8dd <fchmod@plt+0x1347d>
nop
xor    %eax,%eax
jmp    805d8dd <fchmod@plt+0x1347d>
mov    0x54(%esp),%ebp
cmp    $0x199,%ebp
jne    805d8c4 <fchmod@plt+0x13464>
lea    0x5c(%esp),%edx
lea    0x58(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8067810 <fchmod@plt+0x1d3b0>
test   %eax,%eax
jne    805d858 <fchmod@plt+0x133f8>
lea    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
lea    0x58(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a210 <wmouse_trafo@plt>
test   %al,%al
je     805d858 <fchmod@plt+0x133f8>
mov    0x58(%esp),%eax
cmp    %eax,0x30(%esp)
jle    805d858 <fchmod@plt+0x133f8>
mov    0x5c(%esp),%ecx
test   %ecx,%ecx
jle    805d858 <fchmod@plt+0x133f8>
mov    %eax,%edx
sub    $0x1,%ecx
sar    $0x1f,%edx
idivl  0x2c(%esp)
mov    %eax,%edx
sub    %ecx,%eax
neg    %edx
add    %edx,%edx
imul   %ecx,%edx
lea    0x1(%eax,%edx,1),%eax
cmp    $0x2,%eax
jne    805d9e2 <fchmod@plt+0x13582>
cmpb   $0x1,0x37(%esp)
jne    805d858 <fchmod@plt+0x133f8>
cmp    $0xfffffffe,%eax
je     805d858 <fchmod@plt+0x133f8>
jmp    805d8dd <fchmod@plt+0x1347d>
call   806aa70 <fchmod@plt+0x20610>
jmp    805d858 <fchmod@plt+0x133f8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
movl   $0x5,0x8(%esp)
movl   $0x806f1cd,0x4(%esp)
movl   $0x0,(%esp)
mov    %al,0x52(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8068130 <fchmod@plt+0x1dcd0>
jmp    805d6fa <fchmod@plt+0x1329a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
testb  $0x2,0x8077418
je     805da70 <fchmod@plt+0x13610>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x8077324,%eax
movl   $0xa,(%esp)
mov    %ebx,0x24(%esp)
mov    %esi,0x28(%esp)
mov    %eax,0x4(%esp)
call   804a240 <fputc@plt>
mov    0x8077664,%ebx
test   %ebx,%ebx
jne    805daf8 <fchmod@plt+0x13698>
mov    0x30(%esp),%eax
lea    0x34(%esp),%ebx
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   8049af0 <__vfprintf_chk@plt>
mov    0x8077324,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804a240 <fputc@plt>
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
movl   $0x5,0x8(%esp)
mov    0x807766c,%esi
movl   $0x806f1d4,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x1,0x8077668
call   8049c80 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
jmp    805da9a <fchmod@plt+0x1363a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x4,%esp
call   804a420 <__ctype_b_loc@plt>
mov    0x10(%esp),%ebx
mov    (%eax),%esi
jmp    805db6f <fchmod@plt+0x1370f>
lea    0x0(%esi),%esi
test   %dl,%dl
je     805dba4 <fchmod@plt+0x13744>
add    $0x1,%ebx
movzbl (%ebx),%edx
movsbl %dl,%ecx
testb  $0x1,(%esi,%ecx,2)
je     805db68 <fchmod@plt+0x13708>
test   %dl,%dl
mov    %ebx,%ecx
je     805dba4 <fchmod@plt+0x13744>
movb   $0x0,(%ebx)
mov    (%eax),%edx
add    $0x1,%ebx
movsbl 0x1(%ecx),%eax
testb  $0x1,(%edx,%eax,2)
je     805dba4 <fchmod@plt+0x13744>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movsbl (%ebx),%eax
testb  $0x1,(%edx,%eax,2)
jne    805db98 <fchmod@plt+0x13738>
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%ecx
cmpb   $0x22,(%ecx)
mov    %ecx,%eax
jne    805dc10 <fchmod@plt+0x137b0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x22,%dl
je     805dc08 <fchmod@plt+0x137a8>
test   %dl,%dl
jne    805dbc8 <fchmod@plt+0x13768>
test   %ebx,%ebx
je     805dc20 <fchmod@plt+0x137c0>
movb   $0x0,(%ebx)
add    $0x1,%ebx
je     805dbfc <fchmod@plt+0x1379c>
call   804a420 <__ctype_b_loc@plt>
mov    (%eax),%edx
jmp    805dbf3 <fchmod@plt+0x13793>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movsbl (%ebx),%eax
testb  $0x1,(%edx,%eax,2)
jne    805dbf0 <fchmod@plt+0x13790>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
jmp    805dbc8 <fchmod@plt+0x13768>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
pop    %ebx
jmp    805db50 <fchmod@plt+0x136f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
movl   $0x806f3a4,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805dbfc <fchmod@plt+0x1379c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
movzbl (%ebx),%edx
jmp    805dc5b <fchmod@plt+0x137fb>
xchg   %ax,%ax
test   %dl,%dl
je     805dca0 <fchmod@plt+0x13840>
movzbl 0x1(%ebx),%edx
add    $0x1,%ebx
cmp    $0x22,%dl
jne    805dc50 <fchmod@plt+0x137f0>
call   804a420 <__ctype_b_loc@plt>
movzbl 0x1(%ebx),%edx
movsbl %dl,%ecx
mov    (%eax),%esi
testb  $0x1,(%esi,%ecx,2)
jne    805dc78 <fchmod@plt+0x13818>
test   %dl,%dl
jne    805dc58 <fchmod@plt+0x137f8>
movb   $0x0,(%ebx)
add    $0x1,%ebx
mov    (%eax),%eax
jmp    805dc8e <fchmod@plt+0x1382e>
lea    0x0(%esi),%esi
add    $0x1,%ebx
movsbl (%ebx),%ecx
testb  $0x1,(%eax,%ecx,2)
jne    805dc88 <fchmod@plt+0x13828>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f3c8,(%esp)
xor    %ebx,%ebx
call   805da60 <fchmod@plt+0x13600>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x5c,%esp
mov    0x60(%esp),%eax
mov    %ebx,0x4c(%esp)
mov    %esi,0x50(%esp)
lea    0x20(%esp),%esi
mov    %edi,0x54(%esp)
mov    %eax,(%esp)
mov    %ebp,0x58(%esp)
call   8066390 <fchmod@plt+0x1bf30>
mov    %esi,(%esp)
mov    %eax,%edi
mov    0x64(%esp),%eax
mov    %edi,0x4(%esp)
or     $0x1,%eax
mov    %eax,0x8(%esp)
call   804a260 <regcomp@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805dd60 <fchmod@plt+0x13900>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a070 <regerror@plt>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x1c(%esp),%edx
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,%ebp
mov    %eax,0x8(%esp)
call   804a070 <regerror@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x806f1ee,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    %ebp,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049e50 <regfree@plt>
test   %ebx,%ebx
mov    0x50(%esp),%esi
sete   %al
mov    0x4c(%esp),%ebx
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
add    $0x5c,%esp
ret
jmp    805dd90 <fchmod@plt+0x13930>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
movzbl (%edi),%eax
test   %al,%al
je     805df60 <fchmod@plt+0x13b00>
cmp    $0x22,%al
je     805ddc0 <fchmod@plt+0x13960>
movl   $0x806f3c8,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
xchg   %ax,%ax
add    $0x1,%edi
mov    %edi,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%ebx
je     805df58 <fchmod@plt+0x13af8>
mov    0x80773c4,%esi
test   %esi,%esi
jne    805ddef <fchmod@plt+0x1398f>
jmp    805dfa1 <fchmod@plt+0x13b41>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esi),%esi
test   %esi,%esi
je     805de16 <fchmod@plt+0x139b6>
mov    (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    805dde8 <fchmod@plt+0x13988>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x80773c4,%eax
test   %eax,%eax
je     805dfa1 <fchmod@plt+0x13b41>
movl   $0x18,(%esp)
mov    0x8077670,%esi
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x14(%esi)
mov    0x8077670,%eax
mov    0x14(%eax),%esi
mov    %esi,0x8077670
mov    %edi,0x4(%esp)
mov    $0x806b442,%edi
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    $0x5,%ecx
movl   $0x0,0x8077674
00
movl   $0x0,0x8077678
00
mov    %eax,(%esi)
mov    0x8077670,%eax
movl   $0x0,0xc(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x10(%eax)
mov    (%eax),%eax
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     805df94 <fchmod@plt+0x13b34>
mov    $0x806b447,%edi
mov    $0x8,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805df74 <fchmod@plt+0x13b14>
xor    %eax,%eax
cmpb   $0x0,(%ebx)
jne    805dfbe <fchmod@plt+0x13b5e>
xor    %edi,%edi
xchg   %ax,%ax
test   %al,%al
je     805df58 <fchmod@plt+0x13af8>
cmp    $0x22,%al
jne    805dee2 <fchmod@plt+0x13a82>
lea    0x0(%esi,%eiz,1),%esi
jmp    805def0 <fchmod@plt+0x13a90>
lea    0x0(%esi),%esi
cmp    $0x22,%al
lea    0x0(%esi),%esi
je     805deec <fchmod@plt+0x13a8c>
add    $0x1,%ebx
movzbl (%ebx),%eax
test   %al,%al
jne    805ded8 <fchmod@plt+0x13a78>
test   %al,%al
je     805df58 <fchmod@plt+0x13af8>
lea    0x1(%ebx),%ebp
mov    %ebp,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%ebx
je     805df58 <fchmod@plt+0x13af8>
movl   $0xc,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x8,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,%esi
call   805dcc0 <fchmod@plt+0x13860>
test   %al,%al
je     805df80 <fchmod@plt+0x13b20>
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
test   %edi,%edi
movl   $0x0,0x4(%esi)
mov    %eax,(%esi)
je     805df8a <fchmod@plt+0x13b2a>
mov    %esi,0x8(%edi)
movl   $0x0,0x8(%esi)
mov    %esi,%edi
movzbl (%ebx),%eax
jmp    805dec0 <fchmod@plt+0x13a60>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806f201,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
movzbl (%ebx),%eax
jmp    805debc <fchmod@plt+0x13a5c>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    805df4c <fchmod@plt+0x13aec>
mov    0x8077670,%eax
mov    %esi,0x4(%eax)
jmp    805df43 <fchmod@plt+0x13ae3>
movl   $0x806f215,0x30(%esp)
jmp    805ddb2 <fchmod@plt+0x13952>
movl   $0x18,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
mov    %eax,0x80773c4
mov    %eax,0x8077670
jmp    805de39 <fchmod@plt+0x139d9>
movl   $0x806f3fc,0x30(%esp)
jmp    805ddb2 <fchmod@plt+0x13952>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
cmpl   $0x1,0x4(%edx)
je     805dfe0 <fchmod@plt+0x13b80>
repz ret
xchg   %ax,%ax
xor    %eax,%eax
cmpl   $0x5b,0x8(%edx)
sete   %al
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
cmpb   $0x0,(%ebx)
je     805e128 <fchmod@plt+0x13cc8>
mov    %ebx,(%esp)
call   805db50 <fchmod@plt+0x136f0>
mov    %ebx,0x4(%esp)
xor    %ebx,%ebx
movl   $0x0,(%esp)
mov    %eax,%edi
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
jmp    805e03c <fchmod@plt+0x13bdc>
lea    0x0(%esi,%eiz,1),%esi
call   8049ab0 <__ctype_toupper_loc@plt>
movsbl (%esi,%ebx,1),%edx
mov    (%eax),%eax
mov    (%eax,%edx,4),%eax
mov    %al,(%esi,%ebx,1)
add    $0x1,%ebx
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
cmp    %eax,%ebx
jb     805e028 <fchmod@plt+0x13bc8>
movzbl (%esi),%eax
cmp    $0x5e,%al
je     805e05f <fchmod@plt+0x13bff>
cmp    $0x4d,%al
je     805e05f <fchmod@plt+0x13bff>
cmp    $0x46,%al
je     805e05f <fchmod@plt+0x13bff>
cmp    $0x4b,%al
jne    805e140 <fchmod@plt+0x13ce0>
mov    %edi,(%esp)
call   805db50 <fchmod@plt+0x136f0>
cmpb   $0x0,(%edi)
mov    %eax,%ebp
je     805e170 <fchmod@plt+0x13d10>
mov    %eax,(%esp)
call   805db50 <fchmod@plt+0x136f0>
cmpb   $0x0,0x0(%ebp)
je     805e158 <fchmod@plt+0x13cf8>
mov    %ebp,(%esp)
call   8057160 <fchmod@plt+0xcd00>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   80565e0 <fchmod@plt+0xc180>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
je     805e1bd <fchmod@plt+0x13d5d>
test   %edx,%edx
jle    805e1a8 <fchmod@plt+0x13d48>
mov    %edx,0xc(%eax)
mov    %esi,(%eax)
mov    %esi,(%esp)
call   8053190 <fchmod@plt+0x8d30>
mov    %eax,0x4(%ebx)
mov    %ebx,(%esp)
call   80532e0 <fchmod@plt+0x8e80>
cmpl   $0x1,0x4(%ebx)
je     805e184 <fchmod@plt+0x13d24>
mov    0x80773b8,%esi
test   %esi,%esi
mov    %esi,%edx
jne    805e0ef <fchmod@plt+0x13c8f>
jmp    805e110 <fchmod@plt+0x13cb0>
lea    0x0(%esi),%esi
mov    0x1c(%edx),%edx
test   %edx,%edx
je     805e110 <fchmod@plt+0x13cb0>
mov    0xc(%edx),%eax
mov    0xc(%ebx),%ecx
test   %eax,%ecx
je     805e0e8 <fchmod@plt+0x13c88>
mov    0x8(%ebx),%edi
cmp    %edi,0x8(%edx)
jne    805e0e8 <fchmod@plt+0x13c88>
not    %ecx
and    %eax,%ecx
mov    %ecx,0xc(%edx)
mov    0x1c(%edx),%edx
test   %edx,%edx
jne    805e0ef <fchmod@plt+0x13c8f>
nop
mov    %esi,0x1c(%ebx)
mov    %ebx,0x80773b8
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f233,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f42c,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f484,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f45c,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
cmpl   $0x5b,0x8(%ebx)
jne    805e0d4 <fchmod@plt+0x13c74>
mov    (%ebx),%eax
movl   $0x806f4fc,(%esp)
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e119 <fchmod@plt+0x13cb9>
lea    0x0(%esi),%esi
mov    %ebp,0x4(%esp)
movl   $0x806f4d8,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e119 <fchmod@plt+0x13cb9>
mov    %edi,0x4(%esp)
movl   $0x806f4b0,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e119 <fchmod@plt+0x13cb9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
cmpb   $0x0,(%ebx)
je     805e2b0 <fchmod@plt+0x13e50>
mov    %ebx,(%esp)
call   805db50 <fchmod@plt+0x136f0>
mov    %ebx,0x4(%esp)
xor    %ebx,%ebx
movl   $0x0,(%esp)
mov    %eax,%edi
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
jmp    805e22c <fchmod@plt+0x13dcc>
lea    0x0(%esi,%eiz,1),%esi
call   8049ab0 <__ctype_toupper_loc@plt>
movsbl (%esi,%ebx,1),%edx
mov    (%eax),%eax
mov    (%eax,%edx,4),%eax
mov    %al,(%esi,%ebx,1)
add    $0x1,%ebx
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
cmp    %eax,%ebx
jb     805e218 <fchmod@plt+0x13db8>
movzbl (%esi),%eax
cmp    $0x5e,%al
je     805e24b <fchmod@plt+0x13deb>
cmp    $0x4d,%al
je     805e24b <fchmod@plt+0x13deb>
cmp    $0x46,%al
je     805e24b <fchmod@plt+0x13deb>
cmp    $0x4b,%al
jne    805e2c8 <fchmod@plt+0x13e68>
mov    %edi,(%esp)
call   805db50 <fchmod@plt+0x136f0>
cmpb   $0x0,(%edi)
je     805e2e0 <fchmod@plt+0x13e80>
mov    %edi,(%esp)
call   8057160 <fchmod@plt+0xcd00>
test   %eax,%eax
mov    %eax,%ebp
jle    805e2f4 <fchmod@plt+0x13e94>
mov    0x80773b8,%ebx
not    %eax
mov    %eax,0x1c(%esp)
test   %ebx,%ebx
je     805e2a7 <fchmod@plt+0x13e47>
xchg   %ax,%ax
mov    0xc(%ebx),%edi
test   %edi,%ebp
je     805e2a0 <fchmod@plt+0x13e40>
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    805e2a0 <fchmod@plt+0x13e40>
and    0x1c(%esp),%edi
mov    %edi,0xc(%ebx)
mov    0x1c(%ebx),%ebx
test   %ebx,%ebx
jne    805e280 <fchmod@plt+0x13e20>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x806f233,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f42c,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f484,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805da60 <fchmod@plt+0x13600>
mov    %edi,0x4(%esp)
movl   $0x806f4d8,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e2a7 <fchmod@plt+0x13e47>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x6,0x8(%esp)
movl   $0x806f244,0x4(%esp)
mov    %ebx,(%esp)
call   804a0f0 <strncasecmp@plt>
test   %eax,%eax
jne    805e33e <fchmod@plt+0x13ede>
mov    0x24(%esp),%eax
add    $0x6,%ebx
movb   $0x1,(%eax)
movl   $0x806f24b,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x2,%edx
test   %eax,%eax
jne    805e360 <fchmod@plt+0x13f00>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
movl   $0x806f31e,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x1,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f251,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x4,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f256,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x7,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f25c,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x3,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f263,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x6,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f268,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
mov    $0x5,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
movl   $0x806f270,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
xor    %edx,%edx
test   %eax,%eax
je     805e357 <fchmod@plt+0x13ef7>
mov    %ebx,0x4(%esp)
movl   $0x806f528,(%esp)
call   805da60 <fchmod@plt+0x13600>
or     $0xffffffff,%edx
jmp    805e357 <fchmod@plt+0x13ef7>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80773c4,%edx
movzbl 0x54(%esp),%eax
mov    0x50(%esp),%ebx
movb   $0x0,0x2f(%esp)
test   %edx,%edx
mov    %al,0x1b(%esp)
je     805e738 <fchmod@plt+0x142d8>
cmpb   $0x0,(%ebx)
je     805e650 <fchmod@plt+0x141f0>
mov    %ebx,(%esp)
call   805db50 <fchmod@plt+0x136f0>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%edi
call   8049f90 <strchr@plt>
test   %eax,%eax
je     805e698 <fchmod@plt+0x14238>
movl   $0x806c0e7,0x4(%esp)
mov    %ebx,(%esp)
call   804a170 <strtok@plt>
movl   $0x806c0e7,0x4(%esp)
movl   $0x0,(%esp)
call   804a170 <strtok@plt>
movb   $0x0,0x1c(%esp)
test   %eax,%eax
mov    %eax,%esi
je     805e760 <fchmod@plt+0x14300>
movl   $0x6,0x8(%esp)
movl   $0x806f244,0x4(%esp)
mov    %esi,(%esp)
call   804a0f0 <strncasecmp@plt>
test   %eax,%eax
je     805e668 <fchmod@plt+0x14208>
lea    0x2f(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   805e310 <fchmod@plt+0x13eb0>
cmpb   $0x0,0x1c(%esp)
mov    %ax,0x1e(%esp)
je     805e6a3 <fchmod@plt+0x14243>
movw   $0xffff,0x1c(%esp)
cmpb   $0x0,(%edi)
jne    805e52f <fchmod@plt+0x140cf>
jmp    805e712 <fchmod@plt+0x142b2>
xchg   %ax,%ax
movl   $0x806f3c8,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    %edi,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
mov    %eax,%edi
test   %edi,%edi
je     805e65c <fchmod@plt+0x141fc>
cmpb   $0x0,(%edi)
je     805e65c <fchmod@plt+0x141fc>
movl   $0x6,0x8(%esp)
xor    %ebx,%ebx
movl   $0x806f29e,0x4(%esp)
mov    %edi,(%esp)
call   804a0f0 <strncasecmp@plt>
test   %eax,%eax
jne    805e555 <fchmod@plt+0x140f5>
add    $0x6,%edi
mov    $0x1,%ebx
cmpb   $0x22,(%edi)
jne    805e508 <fchmod@plt+0x140a8>
lea    0x1(%edi),%esi
mov    %esi,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%edi
je     805e65c <fchmod@plt+0x141fc>
movl   $0x24,(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x1,0x1b(%esp)
mov    %esi,(%esp)
mov    %eax,%ebp
sbb    %eax,%eax
not    %eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
call   805dcc0 <fchmod@plt+0x13860>
test   %al,%al
je     805e680 <fchmod@plt+0x14220>
movzwl 0x1c(%esp),%eax
mov    %ax,0x0(%ebp)
movzwl 0x1e(%esp),%eax
mov    %ax,0x2(%ebp)
movzbl 0x2f(%esp),%eax
mov    %al,0x4(%ebp)
movzbl 0x1b(%esp),%eax
mov    %al,0x5(%ebp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x0,0x10(%ebp)
movl   $0x0,0x14(%ebp)
movl   $0x0,0x18(%ebp)
movl   $0x0,0x1c(%ebp)
mov    %eax,0xc(%ebp)
mov    0x8077674,%eax
test   %eax,%eax
je     805e728 <fchmod@plt+0x142c8>
mov    %ebp,0x1c(%eax)
mov    %ebp,0x8077674
xor    %esi,%esi
test   %bl,%bl
je     805e526 <fchmod@plt+0x140c6>
movl   $0x4,0x8(%esp)
movl   $0x806f2a5,0x4(%esp)
mov    %edi,(%esp)
call   804a0f0 <strncasecmp@plt>
test   %eax,%eax
jne    805e76d <fchmod@plt+0x1430d>
cmpb   $0x22,0x4(%edi)
je     805e6c0 <fchmod@plt+0x14260>
movl   $0x806f3c8,(%esp)
add    $0x4,%edi
call   805da60 <fchmod@plt+0x13600>
jmp    805e51e <fchmod@plt+0x140be>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f276,(%esp)
call   805da60 <fchmod@plt+0x13600>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
movl   $0x806f60c,(%esp)
call   805da60 <fchmod@plt+0x13600>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,(%esp)
mov    $0x1,%esi
call   8049be0 <free@plt>
jmp    805e606 <fchmod@plt+0x141a6>
lea    0x0(%esi),%esi
movw   $0xffff,0x1e(%esp)
lea    0x2f(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   805e310 <fchmod@plt+0x13eb0>
cmp    $0xffff,%ax
mov    %ax,0x1c(%esp)
jne    805e4fc <fchmod@plt+0x1409c>
jmp    805e65c <fchmod@plt+0x141fc>
lea    0x5(%edi),%ebx
mov    %ebx,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%edi
je     805e65c <fchmod@plt+0x141fc>
mov    %esi,%eax
test   %al,%al
jne    805e526 <fchmod@plt+0x140c6>
cmpb   $0x1,0x1b(%esp)
mov    %ebx,(%esp)
sbb    %eax,%eax
xor    %esi,%esi
not    %eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
call   805dcc0 <fchmod@plt+0x13860>
test   %al,%al
jne    805e749 <fchmod@plt+0x142e9>
mov    0x8077670,%eax
mov    %esi,0x14(%ebp)
mov    0x10(%eax),%ebx
mov    %ebx,0x20(%ebp)
add    $0x1,%ebx
mov    %ebx,0x10(%eax)
jmp    805e526 <fchmod@plt+0x140c6>
movl   $0x806f289,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e65c <fchmod@plt+0x141fc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077670,%eax
mov    %ebp,0xc(%eax)
jmp    805e5fe <fchmod@plt+0x1419e>
lea    0x0(%esi),%esi
movl   $0x806f5d8,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e65c <fchmod@plt+0x141fc>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
jmp    805e6f9 <fchmod@plt+0x14299>
lea    0x0(%esi),%esi
lea    0x1(%ebx),%esi
movb   $0x1,0x1c(%esp)
jmp    805e4b5 <fchmod@plt+0x14055>
movl   $0x806f634,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e65c <fchmod@plt+0x141fc>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80773c4,%ecx
mov    0x20(%esp),%ebx
test   %ecx,%ecx
je     805e875 <fchmod@plt+0x14415>
movzbl (%ebx),%eax
test   %al,%al
jne    805e7c9 <fchmod@plt+0x14369>
jmp    805e862 <fchmod@plt+0x14402>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f3c8,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    %ebx,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%ebx
je     805e840 <fchmod@plt+0x143e0>
movzbl (%ebx),%eax
test   %al,%al
je     805e840 <fchmod@plt+0x143e0>
cmp    $0x22,%al
jne    805e7a8 <fchmod@plt+0x14348>
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
call   805dc40 <fchmod@plt+0x137e0>
test   %eax,%eax
mov    %eax,%ebx
je     805e840 <fchmod@plt+0x143e0>
movl   $0xc,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%esi
call   805dcc0 <fchmod@plt+0x13860>
test   %al,%al
je     805e848 <fchmod@plt+0x143e8>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x0,0x4(%esi)
movl   $0x0,0x8(%esi)
mov    %eax,(%esi)
mov    0x8077678,%eax
test   %eax,%eax
je     805e858 <fchmod@plt+0x143f8>
mov    %esi,0x8(%eax)
movzbl (%ebx),%eax
mov    %esi,0x8077678
test   %al,%al
jne    805e7c9 <fchmod@plt+0x14369>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    805e7c2 <fchmod@plt+0x14362>
lea    0x0(%esi),%esi
mov    0x8077670,%eax
mov    %esi,0x8(%eax)
jmp    805e82c <fchmod@plt+0x143cc>
movl   $0x806f289,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    805da60 <fchmod@plt+0x13600>
movl   $0x806f660,0x20(%esp)
jmp    805e86a <fchmod@plt+0x1440a>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
movzbl 0x74(%esp),%edx
lea    0x2c(%esp),%ebp
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    %dl,0x17(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%edx
lea    0x28(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   8049da0 <__getdelim@plt>
test   %eax,%eax
jle    805e99c <fchmod@plt+0x1453c>
mov    0x28(%esp),%ebx
lea    -0x1(%ebx,%eax,1),%eax
cmpb   $0xa,(%eax)
je     805e950 <fchmod@plt+0x144f0>
addl   $0x1,0x8077664
call   804a420 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    805e8f3 <fchmod@plt+0x14493>
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl (%ebx),%eax
movsbl %al,%edx
testb  $0x1,(%ecx,%edx,2)
jne    805e8f0 <fchmod@plt+0x14490>
cmp    $0x23,%al
je     805e8a8 <fchmod@plt+0x14448>
test   %al,%al
je     805e8a8 <fchmod@plt+0x14448>
mov    %ebx,(%esp)
call   805db50 <fchmod@plt+0x136f0>
movl   $0x806fa82,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805e960 <fchmod@plt+0x14500>
cmpb   $0x0,0x17(%esp)
movl   $0x1,0x18(%esp)
jne    805e987 <fchmod@plt+0x14527>
cmpb   $0x0,(%esi)
jne    805eaa1 <fchmod@plt+0x14641>
movl   $0x806f2e9,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e8a8 <fchmod@plt+0x14448>
xchg   %ax,%ax
movb   $0x0,(%eax)
mov    0x28(%esp),%ebx
jmp    805e8dd <fchmod@plt+0x1447d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806f2aa,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805ea71 <fchmod@plt+0x14611>
cmpb   $0x0,0x17(%esp)
movl   $0xffffffff,0x18(%esp)
je     805e934 <fchmod@plt+0x144d4>
mov    %ebx,0x4(%esp)
movl   $0x806f694,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    0x8077670,%eax
test   %eax,%eax
je     805e9b3 <fchmod@plt+0x14553>
mov    0x8077674,%ebx
test   %ebx,%ebx
je     805ec41 <fchmod@plt+0x147e1>
mov    0x28(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x70(%esp),%edx
mov    %edx,(%esp)
call   8049c40 <fclose@plt>
movl   $0x0,0x8077664
00
movw   $0x12,0x32(%esp)
movw   $0x12,0x34(%esp)
movw   $0x31,0x36(%esp)
movw   $0x31,0x38(%esp)
movw   $0x31,0x3a(%esp)
movl   $0x1,0x3c(%esp)
movl   $0x100,0x40(%esp)
movl   $0x2,0x44(%esp)
movl   $0x4,0x48(%esp)
movl   $0x10,0x4c(%esp)
mov    0x80773b4,%ebx
test   %ebx,%ebx
je     805ea61 <fchmod@plt+0x14601>
movswl 0x32(%esp,%esi,2),%eax
jmp    805ea3f <fchmod@plt+0x145df>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%ebx
test   %ebx,%ebx
je     805ea61 <fchmod@plt+0x14601>
cmp    %ax,(%ebx)
jne    805ea38 <fchmod@plt+0x145d8>
mov    0x3c(%esp,%esi,4),%edx
test   %edx,0x4(%ebx)
je     805ea38 <fchmod@plt+0x145d8>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8053260 <fchmod@plt+0x8e00>
test   %eax,%eax
je     805edff <fchmod@plt+0x1499f>
add    $0x1,%esi
cmp    $0x5,%esi
jne    805ea22 <fchmod@plt+0x145c2>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806f2b0,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eb43 <fchmod@plt+0x146e3>
cmpb   $0x0,0x17(%esp)
jne    805e987 <fchmod@plt+0x14527>
mov    %esi,(%esp)
call   805f080 <fchmod@plt+0x14c20>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    %esi,(%esp)
mov    $0x806e19c,%edi
xor    %ebx,%ebx
call   805db50 <fchmod@plt+0x136f0>
mov    %eax,0x1c(%esp)
jmp    805eac6 <fchmod@plt+0x14666>
xchg   %ax,%ax
add    $0x1,%ebx
mov    0x806f820(,%ebx,8),%edi
test   %edi,%edi
je     805eb2e <fchmod@plt+0x146ce>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eab8 <fchmod@plt+0x14658>
cmpl   $0x1,0x18(%esp)
mov    0x806f824(,%ebx,8),%ecx
je     805ec15 <fchmod@plt+0x147b5>
test   %ecx,%ecx
je     805eb7b <fchmod@plt+0x1471b>
mov    $0x1,%edx
mov    %ecx,%eax
shl    %cl,%edx
shr    $0x5,%eax
mov    %edx,%ecx
not    %ecx
and    %ecx,0x8077414(,%eax,4)
mov    0x806f820(,%ebx,8),%ebx
movl   $0x806e462,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ec30 <fchmod@plt+0x147d0>
test   %ebx,%ebx
jne    805e8a8 <fchmod@plt+0x14448>
mov    %esi,0x4(%esp)
movl   $0x806f34a,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e8a8 <fchmod@plt+0x14448>
movl   $0x806c291,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eb90 <fchmod@plt+0x14730>
mov    0x8077670,%eax
test   %eax,%eax
je     805eb6e <fchmod@plt+0x1470e>
mov    0x8077674,%edx
test   %edx,%edx
je     805ede8 <fchmod@plt+0x14988>
mov    %esi,(%esp)
call   805dd90 <fchmod@plt+0x13930>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    %edi,0x4(%esp)
movl   $0x806f333,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x806f2b8,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ec58 <fchmod@plt+0x147f8>
movl   $0x806e580,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ecfc <fchmod@plt+0x1489c>
movl   $0x806f2bf,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ed1e <fchmod@plt+0x148be>
movl   $0x806f2c8,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ed11 <fchmod@plt+0x148b1>
movl   $0x806f2c6,0x4(%esp)
mov    %ebx,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eccb <fchmod@plt+0x1486b>
mov    %esi,(%esp)
call   805e1e0 <fchmod@plt+0x13d80>
jmp    805e8a8 <fchmod@plt+0x14448>
test   %ecx,%ecx
je     805ec65 <fchmod@plt+0x14805>
mov    0x18(%esp),%edx
mov    %ecx,%eax
shr    $0x5,%eax
shl    %cl,%edx
or     %edx,0x8077414(,%eax,4)
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x0,(%esp)
call   8053700 <fchmod@plt+0x92a0>
jmp    805eb26 <fchmod@plt+0x146c6>
mov    (%eax),%eax
movl   $0x806f6c0,(%esp)
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e9b3 <fchmod@plt+0x14553>
mov    %esi,(%esp)
call   805e780 <fchmod@plt+0x14320>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    0x1c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805ece0 <fchmod@plt+0x14880>
mov    0x1c(%esp),%esi
cmp    $0x22,%al
sete   %al
movzbl %al,%eax
add    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   805dbb0 <fchmod@plt+0x13750>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%esp)
mov    %eax,%esi
call   804df00 <fchmod@plt+0x3aa0>
test   %al,%al
je     805edd0 <fchmod@plt+0x14970>
movl   $0x806e6bf,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805ed33 <fchmod@plt+0x148d3>
mov    %esi,0x80773d0
jmp    805eb07 <fchmod@plt+0x146a7>
mov    %ebx,0x4(%esp)
movl   $0x806f2cd,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    %edi,0x4(%esp)
movl   $0x806f6e4,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x806f820(,%ebx,8),%ebx
jmp    805eb26 <fchmod@plt+0x146c6>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   805e430 <fchmod@plt+0x13fd0>
jmp    805e8a8 <fchmod@plt+0x14448>
mov    %esi,(%esp)
call   805dff0 <fchmod@plt+0x13b90>
jmp    805e8a8 <fchmod@plt+0x14448>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   805e430 <fchmod@plt+0x13fd0>
jmp    805e8a8 <fchmod@plt+0x14448>
movl   $0x806e6cc,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ee81 <fchmod@plt+0x14a21>
movl   $0x806f2f6,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ee43 <fchmod@plt+0x149e3>
movl   $0x806f322,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ef64 <fchmod@plt+0x14b04>
movl   $0x806f32d,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805eedb <fchmod@plt+0x14a7b>
movl   $0x806f2fb,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
je     805ef19 <fchmod@plt+0x14ab9>
movl   $0x806e6ae,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eeb8 <fchmod@plt+0x14a58>
mov    %esi,0x80773e4
jmp    805eb07 <fchmod@plt+0x146a7>
xchg   %ax,%ax
movl   $0x806f708,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x806f820(,%ebx,8),%ebx
jmp    805eb26 <fchmod@plt+0x146c6>
mov    (%eax),%eax
movl   $0x806f6c0,(%esp)
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805eb6e <fchmod@plt+0x1470e>
mov    0x8(%ebx),%eax
movl   $0x806f758,(%esp)
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x8077324,%eax
movl   $0x56,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806f788,(%esp)
mov    %eax,0xc(%esp)
call   8049e10 <fwrite@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
mov    %esi,(%esp)
mov    %esi,0x80773f4
call   804de20 <fchmod@plt+0x39c0>
test   %al,%al
je     805eb07 <fchmod@plt+0x146a7>
movl   $0x806f304,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x80773f4,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773f4
00
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x80772e8,0x4(%esp)
mov    %esi,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
test   %al,%al
jne    805ef57 <fchmod@plt+0x14af7>
mov    %esi,0x4(%esp)
movl   $0x806eccc,(%esp)
call   805da60 <fchmod@plt+0x13600>
movl   $0xfffffff8,0x80772e8
ff
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x806e6d1,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805ef9f <fchmod@plt+0x14b3f>
mov    %esi,0x80773d4
jmp    805eb07 <fchmod@plt+0x146a7>
mov    %esi,(%esp)
mov    %esi,0x80773ec
call   804de20 <fchmod@plt+0x39c0>
test   %al,%al
je     805eb07 <fchmod@plt+0x146a7>
movl   $0x806f304,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x80773ec,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773ec
00
jmp    805eb07 <fchmod@plt+0x146a7>
mov    %esi,(%esp)
mov    %esi,0x80773e8
call   804de20 <fchmod@plt+0x39c0>
test   %al,%al
je     805eb07 <fchmod@plt+0x146a7>
movl   $0x806f304,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x80773e8,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773e8
00
jmp    805eb07 <fchmod@plt+0x146a7>
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    805eb07 <fchmod@plt+0x146a7>
mov    %esi,(%esp)
mov    %esi,0x80773f0
call   804d9d0 <fchmod@plt+0x3570>
cmp    $0x2,%eax
je     805efbe <fchmod@plt+0x14b5e>
movl   $0x806f730,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x80773f0,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x80773f0
00
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x806e44a,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805f01a <fchmod@plt+0x14bba>
mov    %esi,0x80773c8
jmp    805eb07 <fchmod@plt+0x146a7>
mov    0x80773f0,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    $0x2,%eax
jne    805ef77 <fchmod@plt+0x14b17>
mov    0x80773f0,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8077834
add    0x80773f0,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,0x8077838
jmp    805eb07 <fchmod@plt+0x146a7>
movl   $0x806e6b7,0x4(%esp)
mov    %edi,(%esp)
call   8049ff0 <strcasecmp@plt>
test   %eax,%eax
jne    805eb07 <fchmod@plt+0x146a7>
movl   $0x80772e4,0x4(%esp)
mov    %esi,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
test   %al,%al
je     805f054 <fchmod@plt+0x14bf4>
mov    0x80772e4,%edi
test   %edi,%edi
jg     805ef57 <fchmod@plt+0x14af7>
mov    %esi,0x4(%esp)
movl   $0x806eca8,(%esp)
call   805da60 <fchmod@plt+0x13600>
movl   $0xffffffff,0x80772e4
ff
jmp    805eb07 <fchmod@plt+0x146a7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x70,%esp
mov    0x807766c,%edi
mov    0x80(%esp),%eax
mov    0x8077664,%esi
cmpb   $0x22,(%eax)
mov    %eax,(%esp)
sete   %bl
add    %eax,%ebx
call   805dbb0 <fchmod@plt+0x13750>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     805f114 <fchmod@plt+0x14cb4>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %dl
cmp    $0x2000,%eax
jne    805f168 <fchmod@plt+0x14d08>
test   %dl,%dl
jne    805f16c <fchmod@plt+0x14d0c>
movl   $0x5,0x8(%esp)
movl   $0x806b4d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    %ebx,(%esp)
call   804f1b0 <fchmod@plt+0x4d50>
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8049de0 <fopen64@plt>
test   %eax,%eax
je     805f1a8 <fchmod@plt+0x14d48>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ebx,0x807766c
movl   $0x0,0x8077664
00
call   805e880 <fchmod@plt+0x14420>
mov    %edi,0x807766c
mov    %esi,0x8077664
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %dl,%dl
je     805f190 <fchmod@plt+0x14d30>
movl   $0x5,0x8(%esp)
movl   $0x806b4c3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805f108 <fchmod@plt+0x14ca8>
lea    0x0(%esi),%esi
cmp    $0x6000,%eax
jne    805f114 <fchmod@plt+0x14cb4>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805f0ec <fchmod@plt+0x14c8c>
lea    0x0(%esi),%esi
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805da60 <fchmod@plt+0x13600>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x84,%esp
mov    0x807766c,%eax
movl   $0x806f35c,0x4(%esp)
lea    0x20(%esp),%esi
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebx
mov    %eax,0x807766c
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     805f283 <fchmod@plt+0x14e23>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %dl
cmp    $0x2000,%eax
jne    805f3f0 <fchmod@plt+0x14f90>
test   %dl,%dl
jne    805f3f8 <fchmod@plt+0x14f98>
movl   $0x5,0x8(%esp)
movl   $0x806b4d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x807766c,%ebx
movl   $0x806b4ed,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
je     805f2a7 <fchmod@plt+0x14e47>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805e880 <fchmod@plt+0x14420>
call   8049d40 <geteuid@plt>
test   %eax,%eax
jne    805f2b7 <fchmod@plt+0x14e57>
orl    $0x40,0x8077414
call   8066960 <fchmod@plt+0x1c500>
mov    0x8077398,%eax
test   %eax,%eax
je     805f510 <fchmod@plt+0x150b0>
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    $0x9,%eax
mov    %eax,0x4(%esp)
mov    0x807766c,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x8077398,%edx
movl   $0x806f368,0x14(%esp)
movl   $0x806f370,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x807766c
call   804a440 <__sprintf_chk@plt>
mov    0x807766c,%ebx
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
call   804a360 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     805f38d <fchmod@plt+0x14f2d>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %dl
cmp    $0x2000,%eax
jne    805f420 <fchmod@plt+0x14fc0>
test   %dl,%dl
jne    805f428 <fchmod@plt+0x14fc8>
movl   $0x5,0x8(%esp)
movl   $0x806b4d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805da60 <fchmod@plt+0x13600>
mov    0x807766c,%ebx
movl   $0x806b4ed,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <fopen64@plt>
test   %eax,%eax
je     805f4d8 <fchmod@plt+0x15078>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805e880 <fchmod@plt+0x14420>
mov    0x807766c,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
cmpb   $0x0,0x8077668
movl   $0x0,0x807766c
00
je     805f3de <fchmod@plt+0x14f7e>
testb  $0x2,0x8077418
je     805f450 <fchmod@plt+0x14ff0>
call   804df40 <fchmod@plt+0x3ae0>
add    $0x84,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     805f4b0 <fchmod@plt+0x15050>
movl   $0x5,0x8(%esp)
movl   $0x806b4c3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805f271 <fchmod@plt+0x14e11>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     805f4c0 <fchmod@plt+0x15060>
movl   $0x5,0x8(%esp)
movl   $0x806b4c3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    805f37b <fchmod@plt+0x14f1b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806bb60,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x0,0x8077668
call   8049c80 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a2d0 <__fprintf_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077348,%eax
mov    %eax,(%esp)
call   8049ce0 <_IO_getc@plt>
cmp    $0xa,%eax
jne    805f490 <fchmod@plt+0x15030>
call   804df40 <fchmod@plt+0x3ae0>
add    $0x84,%esp
pop    %ebx
pop    %esi
ret
cmp    $0x6000,%eax
jne    805f283 <fchmod@plt+0x14e23>
jmp    805f255 <fchmod@plt+0x14df5>
cmp    $0x6000,%eax
jne    805f38d <fchmod@plt+0x14f2d>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805f35f <fchmod@plt+0x14eff>
lea    0x0(%esi),%esi
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
je     805f3b5 <fchmod@plt+0x14f55>
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x806b288,(%esp)
mov    %eax,0x8(%esp)
mov    0x807766c,%eax
mov    %eax,0x4(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805f3b5 <fchmod@plt+0x14f55>
xchg   %ax,%ax
movl   $0x806f7e0,(%esp)
call   805da60 <fchmod@plt+0x13600>
jmp    805f3b5 <fchmod@plt+0x14f55>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x8077414,%eax
mov    %esi,0x20(%esp)
mov    0x30(%esp),%esi
movl   $0x80776c0,(%esp)
mov    %ebx,0x1c(%esp)
and    $0x2,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x2,%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x24(%esp)
mov    %ebp,0x28(%esp)
call   804a260 <regcomp@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805f598 <fchmod@plt+0x15138>
movb   $0x1,0x807767c
mov    $0x1,%eax
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80776c0,0x4(%esp)
mov    %eax,(%esp)
call   804a070 <regerror@plt>
mov    %eax,(%esp)
mov    %eax,%ebp
call   8066570 <fchmod@plt+0x1c110>
mov    %ebp,0xc(%esp)
movl   $0x80776c0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%edi
call   804a070 <regerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806f1ee,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %edi,(%esp)
call   8049be0 <free@plt>
xor    %eax,%eax
jmp    805f580 <fchmod@plt+0x15120>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x807767c
jne    805f630 <fchmod@plt+0x151d0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x80776c0,(%esp)
movb   $0x0,0x807767c
call   8049e50 <regfree@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x8077340,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,0x10(%esp)
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x14(%esp)
mov    $0x806e126,%esi
mov    %edi,0x18(%esp)
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %eax,%ebx
mov    0x8077340,%eax
mov    %ebx,(%esp)
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
mov    %eax,0x4(%esp)
call   804d960 <fchmod@plt+0x3500>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
cmpb   $0x0,(%ebx,%eax,1)
mov    %eax,%edi
movl   $0x5,0x8(%esp)
mov    $0x8070333,%eax
movl   $0x806f978,0x4(%esp)
movl   $0x0,(%esp)
cmovne %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x14(%esp),%esi
mov    %ebx,0x20(%esp)
mov    0x18(%esp),%edi
mov    0x10(%esp),%ebx
add    $0x1c,%esp
jmp    8049be0 <free@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   806aac0 <fchmod@plt+0x20660>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     805f738 <fchmod@plt+0x152d8>
call   806a7c0 <fchmod@plt+0x20360>
add    $0xc,%esp
jmp    805f620 <fchmod@plt+0x151c0>
sub    $0x1c,%esp
mov    0x8077428,%edx
test   %edx,%edx
je     805f780 <fchmod@plt+0x15320>
mov    0x8077424,%eax
test   %eax,%eax
je     805f760 <fchmod@plt+0x15300>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077424
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077428
jmp    805f74d <fchmod@plt+0x152ed>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movzbl 0x40(%esp),%eax
mov    %al,0x1e(%esp)
movzbl 0x44(%esp),%eax
mov    %al,0x1f(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%ebx
mov    0x20(%eax),%edi
mov    (%ebx),%esi
movl   $0x0,(%esp)
call   8049c50 <time@plt>
testb  $0x20,0x8077415
mov    %eax,%ebp
mov    0x80773f8,%eax
mov    0x18(%eax),%eax
je     805f9f8 <fchmod@plt+0x15598>
sub    $0x1,%eax
add    %eax,%esi
call   806ac50 <fchmod@plt+0x207f0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8049c50 <time@plt>
sub    %ebp,%eax
cmp    $0x1,%eax
jle    805f834 <fchmod@plt+0x153d4>
movl   $0x0,(%esp)
call   8049c50 <time@plt>
mov    %eax,%ebp
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8068f00 <fchmod@plt+0x1eaa0>
test   %eax,%eax
je     805f834 <fchmod@plt+0x153d4>
cmpw   $0x31,(%eax)
je     805fa60 <fchmod@plt+0x15600>
mov    0x50(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80663a0 <fchmod@plt+0x1bf40>
test   %eax,%eax
mov    %eax,%esi
je     805f88d <fchmod@plt+0x1542d>
testb  $0x4,0x8077415
je     805f930 <fchmod@plt+0x154d0>
mov    0x80777e4,%edx
sub    0x80777e0,%edx
cmpb   $0x0,0x1e(%esp)
jne    805f949 <fchmod@plt+0x154e9>
cmpb   $0x0,0x1f(%esp)
je     805fa00 <fchmod@plt+0x155a0>
mov    0x80773f8,%eax
cmp    %ebx,0x10(%eax)
jne    805fa00 <fchmod@plt+0x155a0>
cmpb   $0x0,0x8077684
jne    805f9c0 <fchmod@plt+0x15560>
mov    0x8077414,%eax
and    $0x2000,%eax
je     805f8d8 <fchmod@plt+0x15478>
mov    0xc(%ebx),%ebx
sub    $0x1,%edi
test   %ebx,%ebx
je     805f9e0 <fchmod@plt+0x15580>
cmp    0x48(%esp),%ebx
je     805f920 <fchmod@plt+0x154c0>
test   %eax,%eax
mov    (%ebx),%esi
je     805f7f8 <fchmod@plt+0x15398>
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,%esi
jmp    805f7f8 <fchmod@plt+0x15398>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
add    $0x1,%edi
test   %ebx,%ebx
jne    805f8b4 <fchmod@plt+0x15454>
mov    0x80773f8,%eax
xor    %edi,%edi
mov    0x4(%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806b233,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x8077414,%eax
and    $0x2000,%eax
cmp    0x48(%esp),%ebx
jne    805f8ba <fchmod@plt+0x1545a>
movb   $0x1,0x8077684
jmp    805f8ba <fchmod@plt+0x1545a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmpb   $0x0,0x1e(%esp)
mov    %eax,%edx
je     805f874 <fchmod@plt+0x15414>
lea    0x1(%edx),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x14(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    0x14(%esp),%edx
mov    %eax,%ecx
movb   $0x0,(%eax,%edx,1)
mov    (%ebx),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
sub    0x10(%esp),%eax
mov    %eax,(%esp)
call   80665e0 <fchmod@plt+0x1c180>
mov    0x18(%esp),%ecx
mov    %ecx,(%esp)
mov    %al,0x18(%esp)
call   8049be0 <free@plt>
movzbl 0x18(%esp),%eax
mov    0x14(%esp),%edx
test   %al,%al
jne    805f874 <fchmod@plt+0x15414>
cmpb   $0x0,0x8077684
je     805f89a <fchmod@plt+0x1543a>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   805f650 <fchmod@plt+0x151f0>
call   806ac80 <fchmod@plt+0x20820>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x8077410,%edi
mov    0x8(%eax),%ebx
sub    $0x1,%edi
jmp    805f8ec <fchmod@plt+0x1548c>
xchg   %ax,%ax
add    $0x1,%eax
jmp    805f7ec <fchmod@plt+0x1538c>
sub    (%ebx),%esi
cmpb   $0x0,0x8077684
je     805fa1a <fchmod@plt+0x155ba>
testb  $0x20,0x8077415
jne    805fa8e <fchmod@plt+0x1562e>
cmp    0x4c(%esp),%esi
ja     805f9c0 <fchmod@plt+0x15560>
mov    %edx,0x14(%esp)
call   806ac80 <fchmod@plt+0x20820>
mov    0x80773f8,%ebp
mov    %ebx,0x10(%ebp)
mov    %esi,0x18(%ebp)
call   8066ae0 <fchmod@plt+0x1c680>
mov    0x54(%esp),%ecx
mov    0x14(%esp),%edx
test   %ecx,%ecx
mov    %eax,0x1c(%ebp)
mov    0x80773f8,%eax
mov    %edi,0x20(%eax)
je     805fa99 <fchmod@plt+0x15639>
mov    0x54(%esp),%eax
mov    %edx,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    0x4c(%esp),%esi
jae    805fa1a <fchmod@plt+0x155ba>
jmp    805f9c0 <fchmod@plt+0x15560>
mov    $0x1,%eax
xchg   %ax,%ax
jmp    805f9d3 <fchmod@plt+0x15573>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
movb   $0x0,0x8077684
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
mov    0x80773f8,%eax
mov    %ebx,0x2c(%esp)
mov    %esi,0x30(%esp)
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
mov    0x10(%eax),%ebx
mov    0x18(%eax),%esi
mov    0x1c(%eax),%edi
call   805f740 <fchmod@plt+0x152e0>
mov    0x8077428,%edx
cmpb   $0x0,(%edx)
je     805fb88 <fchmod@plt+0x15728>
testb  $0x4,0x8077415
je     805fb14 <fchmod@plt+0x156b4>
mov    %edx,(%esp)
call   805f530 <fchmod@plt+0x150d0>
mov    0x8077428,%edx
test   %al,%al
je     805fbb8 <fchmod@plt+0x15758>
mov    0x80773f8,%eax
movl   $0x0,0x14(%esp)
mov    %edx,0x10(%esp)
movb   $0x0,0x8077684
mov    0x18(%eax),%edx
mov    %edx,0xc(%esp)
mov    0x10(%eax),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   805f7a0 <fchmod@plt+0x15340>
mov    0x80773f8,%ebp
cmp    %ebx,0x10(%ebp)
je     805fbd0 <fchmod@plt+0x15770>
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
jmp    805f720 <fchmod@plt+0x152c0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806b25e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%ebp
jmp    805fb59 <fchmod@plt+0x156f9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,0x18(%ebp)
jne    805fb59 <fchmod@plt+0x156f9>
test   %al,%al
je     805fb59 <fchmod@plt+0x156f9>
testb  $0x4,0x8077415
je     805fbfb <fchmod@plt+0x1579b>
mov    0x8077428,%eax
movl   $0x80776c0,(%esp)
mov    %eax,0x4(%esp)
call   8066310 <fchmod@plt+0x1beb0>
test   %al,%al
jne    805fc0d <fchmod@plt+0x157ad>
movl   $0x5,0x8(%esp)
movl   $0x806b242,0x4(%esp)
jmp    805fb98 <fchmod@plt+0x15738>
mov    0x80773f8,%eax
mov    0x80773d8,%edx
movl   $0x0,0x14(%esp)
mov    %edx,0x10(%esp)
mov    0x18(%eax),%edx
mov    %edx,0xc(%esp)
mov    0x10(%eax),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   805f7a0 <fchmod@plt+0x15340>
mov    0x80773f8,%ebp
cmp    0x10(%ebp),%ebx
jne    805fb59 <fchmod@plt+0x156f9>
cmp    0x18(%ebp),%esi
jne    805fb59 <fchmod@plt+0x156f9>
test   %al,%al
jne    805fb59 <fchmod@plt+0x156f9>
jmp    805fbfb <fchmod@plt+0x1579b>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80773f8,%eax
mov    0x54(%esp),%edx
mov    0x8077424,%ebx
mov    0x50(%esp),%ebp
mov    0x10(%eax),%eax
mov    %edx,0x28(%esp)
mov    (%eax),%eax
mov    %dl,0x20(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
movzbl 0x20(%esp),%ecx
sub    0x80777e4,%eax
add    0x80777e0,%eax
lea    0x1(%eax),%esi
movzbl (%ebx),%eax
jmp    805fcce <fchmod@plt+0x1586e>
test   %cl,%cl
je     805fcc6 <fchmod@plt+0x15866>
mov    %al,0x0(%ebp)
movzbl 0x1(%ebx),%edx
add    $0x1,%ebp
add    $0x1,%ebx
add    $0x1,%esi
mov    %edx,%eax
test   %al,%al
je     805fd30 <fchmod@plt+0x158d0>
cmp    $0x5c,%al
movzbl 0x1(%ebx),%edx
jne    805fcb8 <fchmod@plt+0x15858>
movsbl %dl,%edi
mov    %edi,0x2c(%esp)
sub    $0x30,%edi
mov    %edi,0x24(%esp)
mov    0x2c(%esp),%edi
sub    $0x31,%edi
cmp    $0x8,%edi
ja     805fcb8 <fchmod@plt+0x15858>
mov    0x24(%esp),%edi
cmp    0x80776d8,%edi
ja     805fcb8 <fchmod@plt+0x15858>
mov    0x24(%esp),%edx
mov    0x80777e0(,%edx,8),%eax
mov    0x80777e4(,%edx,8),%edi
lea    0x2(%ebx),%edx
mov    %edx,0x24(%esp)
sub    %eax,%edi
add    %edi,%esi
test   %cl,%cl
jne    805fd48 <fchmod@plt+0x158e8>
movzbl 0x2(%ebx),%eax
mov    %edx,%ebx
test   %al,%al
jne    805fcd2 <fchmod@plt+0x15872>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x28(%esp)
je     805fd3b <fchmod@plt+0x158db>
movb   $0x0,0x0(%ebp)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80773f8,%edx
mov    %edi,0x8(%esp)
mov    0x10(%edx),%edx
mov    %edx,0x2c(%esp)
mov    0x80773f8,%edx
add    0x18(%edx),%eax
mov    0x2c(%esp),%edx
add    (%edx),%eax
mov    %ebp,(%esp)
add    %edi,%ebp
mov    %cl,0x20(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
movzbl 0x2(%ebx),%eax
movzbl 0x20(%esp),%ecx
mov    0x24(%esp),%ebx
jmp    805fcce <fchmod@plt+0x1586e>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
testb  $0x4,0x8077415
jne    805fe68 <fchmod@plt+0x15a08>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebx
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebx,%eax,1),%eax
sub    %esi,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x8(%esp)
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
testb  $0x4,0x8077415
jne    805fe48 <fchmod@plt+0x159e8>
mov    0x80773d8,%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x18(%eax),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
add    0x18(%eax),%esi
mov    (%edx),%eax
mov    %ebx,(%esp)
add    %esi,%eax
mov    %eax,0x4(%esp)
call   8049e40 <strcat@plt>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x80773f8,%eax
movl   $0x1,0x4(%esp)
mov    0x18(%eax),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   805fc70 <fchmod@plt+0x15810>
jmp    805fe22 <fchmod@plt+0x159c2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80777e4,%esi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
sub    0x80777e0,%esi
call   805fc70 <fchmod@plt+0x15810>
jmp    805fdd7 <fchmod@plt+0x15977>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80773f8,%eax
mov    0x80(%esp),%ebx
movb   $0x0,0x4b(%esp)
movzbl 0x25(%eax),%edx
mov    0xc(%eax),%eax
test   %dl,%dl
mov    %dl,0x33(%esp)
mov    %eax,0x38(%esp)
jne    8060338 <fchmod@plt+0x15ed8>
mov    0x84(%esp),%eax
test   %eax,%eax
je     805fed4 <fchmod@plt+0x15a74>
mov    0x84(%esp),%ecx
movb   $0x0,(%ecx)
movzbl %bl,%ebx
xor    %ebp,%ebp
mov    %ebx,0x2c(%esp)
mov    $0xffffffff,%edi
mov    %ebp,%ebx
movb   $0x0,0x8077684
movb   $0x0,0x31(%esp)
movb   $0x0,0x32(%esp)
lea    0x0(%esi),%esi
mov    0x90(%esp),%edx
lea    0x4c(%esp),%eax
mov    0x8c(%esp),%ecx
mov    %eax,0x14(%esp)
mov    %edx,0x10(%esp)
mov    0x88(%esp),%edx
mov    (%ecx),%eax
mov    0x2c(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
movzbl 0x31(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   805f7a0 <fchmod@plt+0x15340>
test   %al,%al
je     8060248 <fchmod@plt+0x15de8>
cmpb   $0x0,0x31(%esp)
mov    0x80773f8,%eax
je     80600e0 <fchmod@plt+0x15c80>
cmpb   $0x0,0x32(%esp)
je     80600e0 <fchmod@plt+0x15c80>
mov    0x88(%esp),%edx
cmp    %edx,0x10(%eax)
je     8060248 <fchmod@plt+0x15de8>
test   %bl,%bl
je     8060103 <fchmod@plt+0x15ca3>
cmp    $0xffffffff,%edi
mov    $0x0,%eax
cmove  %eax,%edi
xor    %edx,%edx
xor    %ebp,%ebp
test   %bl,%bl
je     8060110 <fchmod@plt+0x15cb0>
testb  $0x4,0x8077415
movb   $0x0,0x31(%esp)
jne    80601e5 <fchmod@plt+0x15d85>
test   %dl,%dl
jne    805ffa8 <fchmod@plt+0x15b48>
test   %bl,%bl
je     805fef8 <fchmod@plt+0x15a98>
movl   $0x2,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
mov    0x90(%esp),%edx
cmp    $0x2,%ebp
mov    $0x1,%eax
cmove  %eax,%ebx
mov    %edx,(%esp)
call   805fd90 <fchmod@plt+0x15930>
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049fc0 <strlen@plt>
mov    0x80773f8,%esi
mov    0x10(%esi),%ecx
mov    %eax,%edx
mov    (%ecx),%eax
mov    %edx,0x28(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
sub    %eax,%edx
cmpb   $0x0,0x33(%esp)
je     8060210 <fchmod@plt+0x15db0>
cmpb   $0x0,0x4b(%esp)
je     8060210 <fchmod@plt+0x15db0>
cmp    %ecx,0x88(%esp)
je     80602c8 <fchmod@plt+0x15e68>
testb  $0x20,0x8077415
jne    8060039 <fchmod@plt+0x15bd9>
mov    0x18(%esi),%eax
add    0x4c(%esp),%eax
lea    -0x1(%edx,%eax,1),%eax
mov    %eax,0x18(%esi)
mov    0x14(%esi),%esi
mov    %ebp,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    0x80773f8,%ecx
mov    %eax,0x34(%esp)
mov    0x10(%ecx),%eax
mov    (%eax),%eax
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    0x24(%esp),%ecx
add    0x34(%esp),%esi
sub    %eax,%esi
mov    0x80773f8,%eax
mov    %esi,0x14(%ecx)
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %ebp,(%eax)
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   804e550 <fchmod@plt+0x40f0>
call   806a7c0 <fchmod@plt+0x20360>
test   %bl,%bl
jne    80600cc <fchmod@plt+0x15c6c>
mov    0x80773f8,%eax
mov    0x48(%eax),%esi
test   %esi,%esi
je     80600ba <fchmod@plt+0x15c5a>
testb  $0x20,0x8077416
je     8060280 <fchmod@plt+0x15e20>
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
call   80694c0 <fchmod@plt+0x1f060>
add    $0x1,%edi
jmp    805fef8 <fchmod@plt+0x15a98>
lea    0x0(%esi,%eiz,1),%esi
mov    0x88(%esp),%ecx
mov    $0x1,%edx
cmp    %ecx,0x10(%eax)
movzbl 0x32(%esp),%ecx
cmovne %ecx,%edx
test   %bl,%bl
mov    %dl,0x32(%esp)
jne    805ff73 <fchmod@plt+0x15b13>
call   806a7c0 <fchmod@plt+0x20360>
jmp    805ff73 <fchmod@plt+0x15b13>
lea    0x0(%esi),%esi
call   8066ae0 <fchmod@plt+0x1c680>
mov    0x80773f8,%edx
mov    %eax,%esi
mov    0x4c(%esp),%eax
add    0x18(%edx),%eax
mov    %eax,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %esi,0x4(%esp)
movl   $0x0,0xc(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a380 <curs_set@plt>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   806acb0 <fchmod@plt+0x20850>
movl   $0x5,0x8(%esp)
movl   $0x806f98b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   805d5c0 <fchmod@plt+0x13160>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   806acb0 <fchmod@plt+0x20850>
mov    %esi,(%esp)
call   8049be0 <free@plt>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
cmp    $0xffffffff,%ebp
je     8060230 <fchmod@plt+0x15dd0>
test   %ebp,%ebp
setg   %dl
testb  $0x4,0x8077415
movb   $0x0,0x31(%esp)
je     805ff9c <fchmod@plt+0x15b3c>
mov    0x90(%esp),%ecx
movl   $0x80776c0,(%esp)
mov    %dl,0x28(%esp)
mov    %ecx,0x4(%esp)
call   8066310 <fchmod@plt+0x1beb0>
movzbl 0x28(%esp),%edx
mov    %al,0x31(%esp)
jmp    805ff9c <fchmod@plt+0x15b3c>
xchg   %ax,%ax
cmp    0x28(%esi),%ecx
je     8060290 <fchmod@plt+0x15e30>
cmpb   $0x0,0x33(%esp)
je     8060015 <fchmod@plt+0x15bb5>
cmpb   $0x0,0x4b(%esp)
je     8060022 <fchmod@plt+0x15bc2>
jmp    8060015 <fchmod@plt+0x15bb5>
mov    0x84(%esp),%ebp
test   %ebp,%ebp
je     8060248 <fchmod@plt+0x15de8>
mov    0x84(%esp),%edx
movb   $0x1,(%edx)
lea    0x0(%esi),%esi
cmpb   $0x0,0x33(%esp)
jne    8060310 <fchmod@plt+0x15eb0>
mov    0x8077414,%ebx
test   %ebx,%ebx
js     8060270 <fchmod@plt+0x15e10>
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    8060300 <fchmod@plt+0x15ea0>
add    $0x6c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   806a7c0 <fchmod@plt+0x20360>
jmp    80600cc <fchmod@plt+0x15c6c>
lea    0x0(%esi),%esi
mov    0x2c(%esi),%eax
mov    %eax,0x34(%esp)
mov    0x18(%esi),%eax
cmp    %eax,0x34(%esp)
mov    %eax,0x20(%esp)
jbe    8060215 <fchmod@plt+0x15db5>
add    0x4c(%esp),%eax
cmp    %eax,0x34(%esp)
jae    80603b9 <fchmod@plt+0x15f59>
mov    0x20(%esp),%eax
mov    %eax,0x2c(%esi)
jmp    8060215 <fchmod@plt+0x15db5>
lea    0x0(%esi),%esi
mov    0x18(%esi),%ecx
mov    %ecx,0x34(%esp)
mov    0x8c(%esp),%ecx
mov    (%ecx),%eax
cmp    %eax,0x34(%esp)
ja     8060022 <fchmod@plt+0x15bc2>
mov    0x34(%esp),%ecx
add    0x4c(%esp),%ecx
cmp    %eax,%ecx
cmovae %ecx,%eax
mov    0x8c(%esp),%ecx
add    %edx,%eax
mov    %eax,(%ecx)
jmp    8060022 <fchmod@plt+0x15bc2>
nop
call   8066b20 <fchmod@plt+0x1c6c0>
add    $0x6c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    0x80773f8,%eax
mov    0x38(%esp),%edx
movb   $0x1,0x25(%eax)
mov    %edx,0xc(%eax)
call   806a7c0 <fchmod@plt+0x20360>
jmp    8060253 <fchmod@plt+0x15df3>
xchg   %ax,%ax
lea    0x4b(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x5c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    %eax,0x80773fc
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
movb   $0x0,0x25(%eax)
mov    %edx,0xc(%eax)
movl   $0x1,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   804e550 <fchmod@plt+0x40f0>
call   806a7c0 <fchmod@plt+0x20360>
jmp    805febf <fchmod@plt+0x15a5f>
mov    0x34(%esp),%eax
add    %edx,%eax
mov    %eax,0x2c(%esi)
jmp    8060215 <fchmod@plt+0x15db5>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80773f8,%eax
mov    0x30(%esp),%ecx
mov    0x10(%eax),%esi
test   %cl,%cl
mov    0x20(%eax),%edi
mov    %ecx,%ebp
mov    0x18(%eax),%eax
mov    (%esi),%ebx
je     80604b0 <fchmod@plt+0x16050>
lea    -0x1(%ebx,%eax,1),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
jbe    8060450 <fchmod@plt+0x15ff0>
cmpb   $0x0,-0x1(%eax)
je     8060428 <fchmod@plt+0x15fc8>
mov    %ebp,%edx
test   %dl,%dl
je     8060470 <fchmod@plt+0x16010>
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   804dd60 <fchmod@plt+0x3900>
test   %eax,%eax
jne    8060484 <fchmod@plt+0x16024>
mov    %ebp,%eax
test   %al,%al
je     8060458 <fchmod@plt+0x15ff8>
mov    0xc(%esi),%esi
sub    $0x1,%edi
test   %esi,%esi
je     8060462 <fchmod@plt+0x16002>
mov    (%esi),%ebx
mov    %ebp,%edx
test   %dl,%dl
mov    %ebx,%eax
je     8060400 <fchmod@plt+0x15fa0>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
add    %ebx,%eax
cmp    %ebx,%eax
ja     8060404 <fchmod@plt+0x15fa4>
jae    806040a <fchmod@plt+0x15faa>
mov    %ebp,%eax
test   %al,%al
jne    806042e <fchmod@plt+0x15fce>
mov    0x8(%esi),%esi
add    $0x1,%edi
test   %esi,%esi
jne    8060438 <fchmod@plt+0x15fd8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804dcb0 <fchmod@plt+0x3850>
test   %eax,%eax
je     8060428 <fchmod@plt+0x15fc8>
mov    0x80773f8,%ebx
sub    (%esi),%eax
mov    %esi,0x10(%ebx)
mov    %eax,0x18(%ebx)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    0x80773f8,%eax
mov    %edi,0x20(%eax)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x1(%ebx,%eax,1),%eax
jmp    8060400 <fchmod@plt+0x15fa0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    (%edx),%edx
add    0x18(%eax),%edx
je     80606e8 <fchmod@plt+0x16288>
mov    0x80773f4,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804dba0 <fchmod@plt+0x3740>
test   %eax,%eax
mov    %eax,%edi
je     80606e8 <fchmod@plt+0x16288>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x18(%eax),%edx
mov    0x1c(%eax),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x24(%esp)
mov    0x80773f4,%eax
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    %eax,%ebx
shr    %ebx
je     806075b <fchmod@plt+0x162fb>
xor    %esi,%esi
xor    %ebp,%ebp
lea    0x0(%esi),%esi
mov    0x80773f4,%eax
add    $0x1,%ebp
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    %eax,%esi
cmp    %ebx,%ebp
jne    8060530 <fchmod@plt+0x160d0>
mov    %edi,%eax
sub    0x80773f4,%eax
mov    %edi,0x28(%esp)
cmp    %eax,%esi
mov    %edi,%esi
setbe  0x1c(%esp)
movzbl 0x1c(%esp),%ebp
jmp    8060594 <fchmod@plt+0x16134>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f4,%edi
sub    %edi,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d590 <fchmod@plt+0x3130>
sub    $0x1,%ebx
lea    (%edi,%eax,1),%esi
je     80605b1 <fchmod@plt+0x16151>
mov    %ebp,%eax
test   %al,%al
jne    8060578 <fchmod@plt+0x16118>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   804d5e0 <fchmod@plt+0x3180>
add    %eax,%esi
sub    $0x1,%ebx
jne    8060594 <fchmod@plt+0x16134>
movzbl 0x1c(%esp),%edx
mov    0x28(%esp),%edi
mov    %edx,0x1c(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%ebp
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,%ebx
call   804d310 <fchmod@plt+0x2eb0>
lea    0x1(%eax,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x3c(%esp)
call   804a090 <strncpy@plt>
mov    0x3c(%esp),%eax
mov    %ebx,0x8(%esp)
add    %ebp,%ebx
mov    %esi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
lea    0x3c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    $0x1,%ebx
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
call   804d310 <fchmod@plt+0x2eb0>
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
xchg   %ax,%ax
mov    0x3c(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80603d0 <fchmod@plt+0x15f70>
test   %al,%al
je     8060718 <fchmod@plt+0x162b8>
mov    0x80773f8,%edx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    0x18(%edx),%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804a320 <strncmp@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x2,%eax
lea    -0x1(%ebx,%eax,1),%ebx
test   %ebx,%ebx
jne    8060658 <fchmod@plt+0x161f8>
mov    0x24(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x20(%esp),%edx
mov    %edx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806f9a2,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806f9b0,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
mov    0x20(%esp),%edx
mov    %edx,0x10(%eax)
mov    0x2c(%esp),%edx
mov    %edx,0x18(%eax)
mov    0x24(%esp),%edx
mov    %edx,0x1c(%eax)
jmp    80606ca <fchmod@plt+0x1626a>
mov    %edi,%esi
movl   $0x1,0x1c(%esp)
jmp    80605be <fchmod@plt+0x1615e>
lea    0x0(%esi),%esi
movzbl 0x8077685,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x0,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    %eax,0x80773b0
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
mov    0x80773b0,%eax
movl   $0x0,(%esp)
mov    %eax,0x80773ac
mov    %eax,0x80773a8
call   8058b50 <fchmod@plt+0xe6f0>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    %eax,0x80773a4
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
mov    0x80773a4,%eax
mov    %eax,0x80773a0
mov    %eax,0x807739c
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
cmp    0x80773b0,%eax
je     8060828 <fchmod@plt+0x163c8>
cmp    0x80773a4,%eax
je     8060818 <fchmod@plt+0x163b8>
repz ret
xchg   %ax,%ax
mov    0x807739c,%eax
mov    %eax,0x80773a4
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773a8,%eax
mov    %eax,0x80773b0
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%ebx
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x8(%eax),%esi
cmp    %esi,%ebx
je     8060898 <fchmod@plt+0x16438>
test   %ebx,%ebx
jne    8060876 <fchmod@plt+0x16416>
jmp    8060898 <fchmod@plt+0x16438>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
cmp    %esi,%ebx
lea    0x0(%esi),%esi
je     8060898 <fchmod@plt+0x16438>
test   %ebx,%ebx
je     806088c <fchmod@plt+0x1642c>
mov    %ebp,0x8(%esp)
mov    (%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
jne    8060868 <fchmod@plt+0x16408>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edx
mov    0x44(%esp),%esi
mov    (%edx),%eax
cmp    0x80773b0,%eax
je     80609e0 <fchmod@plt+0x16580>
xor    %edx,%edx
mov    $0x807739c,%ebx
cmp    0x80773a4,%eax
mov    $0x80773a0,%ebp
cmovne %edx,%ebx
cmovne %edx,%ebp
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    0x0(%ebp),%ecx
mov    (%ebx),%edi
mov    %esi,0x8(%esp)
mov    %ecx,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %ecx,0x1c(%esp)
call   8060840 <fchmod@plt+0x163e0>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     8060943 <fchmod@plt+0x164e3>
cmp    %eax,%ecx
je     80609f0 <fchmod@plt+0x16590>
mov    0x8(%eax),%edi
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
test   %edi,%edi
je     8060941 <fchmod@plt+0x164e1>
mov    %edi,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    (%ebx),%edi
cmpl   $0x65,0x4(%edi)
je     80609b0 <fchmod@plt+0x16550>
mov    %esi,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%edi)
mov    (%ebx),%eax
mov    0x8(%eax),%esi
mov    %eax,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8058c10 <fchmod@plt+0xe7b0>
mov    (%ebx),%eax
mov    0x8(%eax),%esi
mov    %esi,(%ebx)
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x40(%esp),%edx
movb   $0x1,0x8077685
mov    %eax,(%esi)
mov    (%ebx),%eax
mov    %eax,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%edi
mov    0x8(%edi),%edx
mov    %edx,0x0(%ebp)
mov    %edi,(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    %edi,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    (%ebx),%edi
jmp    8060949 <fchmod@plt+0x164e9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80773a8,%ebx
mov    $0x80773ac,%ebp
jmp    80608e5 <fchmod@plt+0x16485>
nop
mov    0x8(%eax),%edx
mov    %edx,0x0(%ebp)
jmp    806091a <fchmod@plt+0x164ba>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x5c,%esp
testb  $0x1,0x8077415
mov    %ebx,0x4c(%esp)
mov    %esi,0x50(%esp)
mov    %edi,0x54(%esp)
mov    %ebp,0x58(%esp)
movb   $0x0,0x3a(%esp)
movb   $0x0,0x3b(%esp)
je     8060a48 <fchmod@plt+0x165e8>
call   8059590 <fchmod@plt+0xf130>
call   805f720 <fchmod@plt+0x152c0>
mov    0x4c(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
add    $0x5c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   8061230 <fchmod@plt+0x16dd0>
cmp    $0xffffffff,%eax
je     8060b1a <fchmod@plt+0x166ba>
cmp    $0xfffffffe,%eax
je     8060b28 <fchmod@plt+0x166c8>
cmp    $0x1,%eax
je     8060c40 <fchmod@plt+0x167e0>
test   %eax,%eax
jne    8060a30 <fchmod@plt+0x165d0>
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
jne    8060c10 <fchmod@plt+0x167b0>
mov    0x8077424,%eax
movl   $0x806e126,0x4(%esp)
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x5,0x8(%esp)
movl   $0x806f9c4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8077424
call   8049c80 <dcgettext@plt>
movl   $0x806a7c0,0x1c(%esp)
movl   $0x80773a4,0x18(%esp)
movl   $0x8,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x20(%esp)
lea    0x3b(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x3a(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8077424,%eax
mov    %eax,0xc(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
test   %eax,%eax
je     8060b40 <fchmod@plt+0x166e0>
cmp    $0xfffffffe,%eax
je     8060b55 <fchmod@plt+0x166f5>
cmp    $0xffffffff,%eax
je     8060c50 <fchmod@plt+0x167f0>
call   805f720 <fchmod@plt+0x152c0>
nop
jmp    8060a30 <fchmod@plt+0x165d0>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   8060ca0 <fchmod@plt+0x16840>
jmp    8060a30 <fchmod@plt+0x165d0>
lea    0x0(%esi),%esi
mov    0x80773d8,%eax
movl   $0x80773a4,(%esp)
mov    %eax,0x4(%esp)
call   80608b0 <fchmod@plt+0x16450>
mov    0x80773d8,%eax
mov    %eax,0x4(%esp)
mov    0x8077424,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077424
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    0xc(%eax),%ebp
mov    0x10(%eax),%esi
mov    0x1c(%eax),%edi
mov    0x8077428,%eax
movl   $0x0,0x4(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    %edx,0x3c(%esp)
call   805fe90 <fchmod@plt+0x15a30>
mov    0x80773f8,%edx
mov    %ebp,0xc(%edx)
mov    %esi,0x10(%edx)
mov    %eax,%ebx
mov    0x3c(%esp),%eax
mov    %edi,0x1c(%edx)
mov    %eax,0x18(%edx)
call   806a7c0 <fchmod@plt+0x20360>
test   %ebx,%ebx
js     8060b1a <fchmod@plt+0x166ba>
movl   $0x5,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x806f9d1,0x8(%esp)
movl   $0x806f9ea,0x4(%esp)
movl   $0x0,(%esp)
call   804a3c0 <dcngettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8060b1a <fchmod@plt+0x166ba>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x80773b0,(%esp)
call   80608b0 <fchmod@plt+0x16450>
mov    0x80773d8,%eax
mov    %eax,0x4(%esp)
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077428
jmp    8060a89 <fchmod@plt+0x16629>
call   8060a00 <fchmod@plt+0x165a0>
jmp    8060a30 <fchmod@plt+0x165d0>
lea    0x0(%esi),%esi
mov    0x8077424,%eax
cmpb   $0x0,(%eax)
jne    8060c88 <fchmod@plt+0x16828>
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8060b1a <fchmod@plt+0x166ba>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773d8
jmp    8060c5a <fchmod@plt+0x167fa>
sub    $0x3c,%esp
mov    %ebx,0x2c(%esp)
mov    %esi,0x30(%esp)
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%ebx
mov    0x18(%eax),%esi
mov    0x1c(%eax),%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8061230 <fchmod@plt+0x16dd0>
cmp    $0xffffffff,%eax
je     8060d87 <fchmod@plt+0x16927>
cmp    $0xfffffffe,%eax
je     8060dd8 <fchmod@plt+0x16978>
cmp    $0x1,%eax
je     8060cb3 <fchmod@plt+0x16853>
test   %eax,%eax
xchg   %ax,%ax
jne    8060e58 <fchmod@plt+0x169f8>
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
je     8060da0 <fchmod@plt+0x16940>
mov    %eax,0x4(%esp)
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077428
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
jne    8060dc0 <fchmod@plt+0x16960>
mov    0x80773f8,%eax
mov    0x80773d8,%edx
movl   $0x0,0x14(%esp)
movb   $0x0,0x8077684
mov    %edx,0x10(%esp)
mov    0x18(%eax),%edx
mov    %edx,0xc(%esp)
mov    0x10(%eax),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   805f7a0 <fchmod@plt+0x15340>
mov    0x80773f8,%ebp
cmp    %ebx,0x10(%ebp)
je     8060df0 <fchmod@plt+0x16990>
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   806a8b0 <fchmod@plt+0x20450>
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
jmp    805f720 <fchmod@plt+0x152c0>
nop
mov    0x8077428,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x80773d8
cmpb   $0x0,(%eax)
je     8060d28 <fchmod@plt+0x168c8>
mov    %eax,0x4(%esp)
movl   $0x80773b0,(%esp)
call   80608b0 <fchmod@plt+0x16450>
jmp    8060d28 <fchmod@plt+0x168c8>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
jmp    8060a00 <fchmod@plt+0x165a0>
cmp    %esi,0x18(%ebp)
jne    8060d73 <fchmod@plt+0x16913>
test   %al,%al
je     8060d73 <fchmod@plt+0x16913>
testb  $0x4,0x8077415
je     8060e23 <fchmod@plt+0x169c3>
mov    0x8077428,%eax
movl   $0x80776c0,(%esp)
mov    %eax,0x4(%esp)
call   8066310 <fchmod@plt+0x1beb0>
test   %al,%al
jne    8060e6c <fchmod@plt+0x16a0c>
movl   $0x5,0x8(%esp)
movl   $0x806b242,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%ebp
jmp    8060d73 <fchmod@plt+0x16913>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
mov    0x80773f8,%eax
mov    0x80773d8,%edx
movl   $0x0,0x14(%esp)
mov    %edx,0x10(%esp)
mov    0x18(%eax),%edx
mov    %edx,0xc(%esp)
mov    0x10(%eax),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   805f7a0 <fchmod@plt+0x15340>
mov    0x80773f8,%ebp
cmp    0x10(%ebp),%ebx
jne    8060d73 <fchmod@plt+0x16913>
cmp    0x18(%ebp),%esi
jne    8060d73 <fchmod@plt+0x16913>
test   %al,%al
jne    8060d73 <fchmod@plt+0x16913>
jmp    8060e23 <fchmod@plt+0x169c3>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
cmpb   $0x0,0x7c(%esp)
mov    0x78(%esp),%edi
mov    0x80(%esp),%esi
mov    0x84(%esp),%ebx
movb   $0x0,0x4a(%esp)
movb   $0x0,0x4b(%esp)
jne    8060fa8 <fchmod@plt+0x16b48>
mov    0x70(%esp),%eax
mov    0x80773f8,%edi
test   %eax,%eax
jle    80610e8 <fchmod@plt+0x16c88>
mov    0x74(%esp),%eax
test   %eax,%eax
jle    80610fe <fchmod@plt+0x16c9e>
mov    0x4(%edi),%edx
mov    0x8(%edi),%ecx
mov    %edx,0x10(%edi)
cmp    %ecx,%edx
je     8060f4d <fchmod@plt+0x16aed>
mov    0x70(%esp),%eax
cmp    $0x1,%eax
jle    8060f4d <fchmod@plt+0x16aed>
sub    $0x1,%eax
jmp    8060f3d <fchmod@plt+0x16add>
nop
sub    $0x1,%eax
je     8060f98 <fchmod@plt+0x16b38>
mov    0x8(%edx),%edx
mov    %eax,%ebp
cmp    %ecx,%edx
jne    8060f38 <fchmod@plt+0x16ad8>
mov    %edx,0x10(%edi)
mov    %eax,0x70(%esp)
mov    0x74(%esp),%eax
and    $0xff,%esi
sub    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x74(%esp),%edx
sub    $0x1,%edx
mov    %eax,0x18(%edi)
mov    0x80773f8,%eax
mov    %edx,0x1c(%eax)
mov    %esi,(%esp)
call   806a720 <fchmod@plt+0x202c0>
test   %bl,%bl
jne    80610d8 <fchmod@plt+0x16c78>
call   806aac0 <fchmod@plt+0x20660>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edx,0x10(%edi)
mov    %ebp,0x70(%esp)
jmp    8060f4d <fchmod@plt+0x16aed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
movl   $0x5,0x8(%esp)
movl   $0x806fa4c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049c80 <dcgettext@plt>
mov    %edi,%ecx
mov    $0x806e126,%edx
test   %cl,%cl
cmovne %ebp,%edx
lea    0x4b(%esp),%ecx
lea    0x4a(%esp),%edi
mov    %ecx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x20(%esp)
movl   $0x806a7c0,0x1c(%esp)
movl   $0x0,0x18(%esp)
mov    %edi,0x10(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
mov    %ebp,(%esp)
mov    %eax,0x4c(%esp)
call   8049be0 <free@plt>
mov    0x4c(%esp),%edx
mov    0x3c(%esp),%ecx
test   %edx,%edx
js     806110d <fchmod@plt+0x16cad>
lea    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     8061077 <fchmod@plt+0x16c17>
cmpw   $0x1f,0x10(%eax)
je     8061136 <fchmod@plt+0x16cd6>
lea    0x74(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x70(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80773d8,%eax
mov    %eax,(%esp)
call   8066830 <fchmod@plt+0x1c3d0>
test   %al,%al
je     80610b8 <fchmod@plt+0x16c58>
mov    0x70(%esp),%eax
test   %eax,%eax
jle    80610b8 <fchmod@plt+0x16c58>
mov    0x74(%esp),%eax
mov    0x80773f8,%edi
test   %eax,%eax
jg     8060f1c <fchmod@plt+0x16abc>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    8060f8a <fchmod@plt+0x16b2a>
movl   $0x5,0x8(%esp)
movl   $0x806fa02,0x4(%esp)
jmp    806111d <fchmod@plt+0x16cbd>
xchg   %ax,%ax
call   806a7c0 <fchmod@plt+0x20360>
jmp    8060f8a <fchmod@plt+0x16b2a>
lea    0x0(%esi),%esi
mov    0x10(%edi),%eax
mov    0x4(%eax),%eax
mov    %eax,0x70(%esp)
mov    0x74(%esp),%eax
test   %eax,%eax
jg     8060f1c <fchmod@plt+0x16abc>
mov    0x1c(%edi),%eax
add    $0x1,%eax
mov    %eax,0x74(%esp)
jmp    8060f1c <fchmod@plt+0x16abc>
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8060f8a <fchmod@plt+0x16b2a>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   8061230 <fchmod@plt+0x16dd0>
call   8060ca0 <fchmod@plt+0x16840>
jmp    8060f8f <fchmod@plt+0x16b2f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x80773f8,%eax
mov    %ebx,0x24(%esp)
mov    0x38(%esp),%edx
mov    0x34(%esp),%ebx
mov    %esi,0x28(%esp)
mov    0x3c(%esp),%esi
mov    %edx,0x20(%eax)
lea    0x1(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x14(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
movl   $0x0,0x8(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
mov    0x80773f8,%eax
mov    %esi,0x1c(%eax)
mov    0x28(%esp),%esi
mov    %ebx,0x34(%esp)
mov    0x10(%eax),%eax
mov    0x24(%esp),%ebx
mov    %eax,0x30(%esp)
add    $0x2c,%esp
jmp    806a010 <fchmod@plt+0x1fbb0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x80773f8,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x1c(%eax),%edx
add    $0x1,%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8077680,%ecx
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edx
movb   $0x0,0x5e(%esp)
test   %ecx,%ecx
movb   $0x0,0x5f(%esp)
je     80616d8 <fchmod@plt+0x17278>
test   %dl,%dl
jne    8061518 <fchmod@plt+0x170b8>
call   805f740 <fchmod@plt+0x152e0>
mov    0x8077428,%ecx
cmpb   $0x0,(%ecx)
jne    8061428 <fchmod@plt+0x16fc8>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,%esi
test   %bl,%bl
mov    $0x806e126,%edi
je     80612c5 <fchmod@plt+0x16e65>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
movl   $0x5,0x8(%esp)
je     8061540 <fchmod@plt+0x170e0>
movl   $0x806fa20,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    0x8077414,%eax
mov    $0x806e126,%ebp
test   $0x20,%ah
jne    8061569 <fchmod@plt+0x17109>
test   $0x4,%ah
movl   $0x806e126,0x4c(%esp)
jne    806159d <fchmod@plt+0x1713d>
test   $0x2,%al
mov    $0x806e126,%ecx
jne    80615cf <fchmod@plt+0x1716f>
movl   $0x5,0x8(%esp)
movl   $0x806b215,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
call   8049c80 <dcgettext@plt>
cmp    $0x1,%bl
mov    0x48(%esp),%ecx
mov    %edi,0x34(%esp)
mov    0x4c(%esp),%edi
sbb    %edx,%edx
and    $0xfffffffe,%edx
add    $0x4,%edx
mov    %ecx,0x28(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x24(%esp)
lea    0x5f(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x5e(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8077680,%eax
mov    %edi,0x2c(%esp)
mov    %esi,0x38(%esp)
mov    %ebp,0x30(%esp)
movl   $0x806b21c,0x20(%esp)
movl   $0x806a7c0,0x1c(%esp)
movl   $0x80773b0,0x18(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
mov    %eax,%edi
mov    0x8077324,%eax
mov    %eax,(%esp)
call   8049b70 <fflush@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x8077680,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
cmp    $0xffffffff,%edi
movl   $0x0,0x8077680
00
je     80614e6 <fchmod@plt+0x17086>
test   %edi,%edi
js     80616c0 <fchmod@plt+0x17260>
test   %edi,%edi
sete   %al
mov    %eax,%esi
jne    80613db <fchmod@plt+0x16f7b>
cmp    $0x1,%bl
jne    80614d8 <fchmod@plt+0x17078>
mov    0x80773b8,%edx
test   %edx,%edx
je     8061405 <fchmod@plt+0x16fa5>
mov    0x80777bc,%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,0xc(%edx)
je     80613fe <fchmod@plt+0x16f9e>
cmp    %edi,0x8(%edx)
je     80615f8 <fchmod@plt+0x17198>
mov    0x1c(%edx),%edx
test   %edx,%edx
jne    80613f0 <fchmod@plt+0x16f90>
cmp    $0xfffffffe,%edi
sete   %dl
je     8061688 <fchmod@plt+0x17228>
mov    %esi,%eax
test   %al,%al
jne    8061688 <fchmod@plt+0x17228>
mov    $0xffffffff,%eax
jmp    8061535 <fchmod@plt+0x170d5>
lea    0x0(%esi),%esi
mov    0x8077340,%esi
mov    $0x55555556,%ebp
mov    %ecx,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,%eax
imul   %ebp
sar    $0x1f,%esi
sub    %esi,%edx
mov    %edx,0x8(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %eax,(%esp)
mov    %eax,%edi
call   8049fc0 <strlen@plt>
add    $0x7,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    %edi,0x10(%esp)
movl   $0x806b1e4,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ecx
mov    0x8077340,%eax
imul   %ebp
mov    0x8077340,%eax
sar    $0x1f,%eax
sub    %eax,%edx
mov    $0x8070333,%eax
cmp    %edx,%ecx
mov    $0x806e126,%edx
cmovbe %edx,%eax
mov    %eax,0x14(%esp)
call   804a440 <__sprintf_chk@plt>
mov    %edi,(%esp)
call   8049be0 <free@plt>
jmp    806128f <fchmod@plt+0x16e2f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
cmpb   $0x0,(%eax)
jne    80613db <fchmod@plt+0x16f7b>
movl   $0x5,0x8(%esp)
movl   $0x806b229,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    $0xffffffff,%eax
jmp    8061535 <fchmod@plt+0x170d5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773d8,%eax
mov    %eax,0x4(%esp)
mov    0x8077680,%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077680
xor    %eax,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x806fa3b,0x4(%esp)
mov    $0x806e126,%ebp
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    0x8077414,%eax
test   $0x20,%ah
je     80612d8 <fchmod@plt+0x16e78>
movl   $0x5,0x8(%esp)
movl   $0x806b1ec,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x806e126,0x4c(%esp)
mov    %eax,%ebp
mov    0x8077414,%eax
test   $0x4,%ah
je     80612e9 <fchmod@plt+0x16e89>
movl   $0x5,0x8(%esp)
movl   $0x806b1f9,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    $0x806e126,%ecx
mov    %eax,0x4c(%esp)
mov    0x8077414,%eax
test   $0x2,%al
je     80612f6 <fchmod@plt+0x16e96>
movl   $0x5,0x8(%esp)
movl   $0x806b203,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ecx
jmp    80612f6 <fchmod@plt+0x16e96>
lea    0x0(%esi),%esi
cmp    $0xfffffffe,%edi
movzbl 0x10(%edx),%eax
sete   %dl
je     8061688 <fchmod@plt+0x17228>
mov    %esi,%ecx
test   %cl,%cl
jne    8061688 <fchmod@plt+0x17228>
cmp    $0x1,%al
je     80616fe <fchmod@plt+0x1729e>
cmp    $0x2,%al
je     8061729 <fchmod@plt+0x172c9>
cmp    $0x3,%al
je     8061735 <fchmod@plt+0x172d5>
cmp    $0x20,%al
je     8061741 <fchmod@plt+0x172e1>
cmp    $0x38,%al
je     8061741 <fchmod@plt+0x172e1>
cmp    $0x37,%al
jne    806141b <fchmod@plt+0x16fbb>
mov    0x80773f8,%eax
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    0x1c(%eax),%edx
add    $0x1,%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
add    $0x6c,%esp
mov    $0x3,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
testb  $0x4,0x8077415
je     8061535 <fchmod@plt+0x170d5>
mov    0x8077428,%eax
test   %dl,%dl
cmove  0x80773d8,%eax
mov    %eax,(%esp)
call   805f530 <fchmod@plt+0x150d0>
cmp    $0x1,%al
sbb    %eax,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077428,%eax
cmpb   $0x0,(%eax)
jne    80613c9 <fchmod@plt+0x16f69>
jmp    80614e6 <fchmod@plt+0x17086>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x48(%esp),%edx
mov    %eax,0x8077680
jmp    806125d <fchmod@plt+0x16dfd>
xorl   $0x2,0x8077414
mov    0x80773d8,%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077680
mov    $0x1,%eax
jmp    8061535 <fchmod@plt+0x170d5>
xorl   $0x2000,0x8077414
00
jmp    8061705 <fchmod@plt+0x172a5>
xorl   $0x400,0x8077414
00
jmp    8061705 <fchmod@plt+0x172a5>
mov    0x80773d8,%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077680
mov    $0xfffffffe,%eax
jmp    8061535 <fchmod@plt+0x170d5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    (%edx),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     8061788 <fchmod@plt+0x17328>
mov    %eax,(%edx)
mov    (%eax),%eax
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    (%edx),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     80617a8 <fchmod@plt+0x17348>
mov    %eax,(%edx)
mov    (%eax),%eax
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%esi
mov    0x44(%esp),%ebx
test   %esi,%esi
je     80618a8 <fchmod@plt+0x17448>
mov    0x40(%esp),%eax
mov    (%eax),%eax
cmp    0x80773b0,%eax
mov    %eax,0x18(%esp)
je     80618e8 <fchmod@plt+0x17488>
mov    0x18(%esp),%edx
xor    %edi,%edi
cmp    0x80773a4,%edx
movl   $0x0,0x1c(%esp)
je     80618d0 <fchmod@plt+0x17470>
mov    0x18(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x8(%edx),%eax
jmp    8061835 <fchmod@plt+0x173d5>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
jne    80618b8 <fchmod@plt+0x17458>
mov    0x8(%ebp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8060840 <fchmod@plt+0x163e0>
test   %eax,%eax
mov    %eax,%ebp
jne    8061810 <fchmod@plt+0x173b0>
mov    0x18(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   8060840 <fchmod@plt+0x163e0>
test   %eax,%eax
mov    %eax,%edi
jne    8061889 <fchmod@plt+0x17429>
jmp    80618a8 <fchmod@plt+0x17448>
nop
mov    0x8(%edi),%eax
mov    0x18(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8060840 <fchmod@plt+0x163e0>
test   %eax,%eax
mov    %eax,%edi
je     80618a8 <fchmod@plt+0x17448>
mov    %ebx,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
je     8061868 <fchmod@plt+0x17408>
mov    0x40(%esp),%eax
mov    %edi,(%eax)
mov    (%edi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    %ebp,(%eax)
mov    0x0(%ebp),%ebx
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773a0,%edx
mov    0x807739c,%edi
mov    %edx,0x1c(%esp)
jmp    80617f7 <fchmod@plt+0x17397>
lea    0x0(%esi),%esi
mov    0x80773ac,%edx
mov    0x80773a8,%edi
mov    %edx,0x1c(%esp)
jmp    80617f7 <fchmod@plt+0x17397>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x8077300,%eax
movl   $0x9,0x4(%esp)
mov    %eax,(%esp)
call   8049f50 <kill@plt>
cmp    $0xffffffff,%eax
je     8061928 <fchmod@plt+0x174c8>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806fa6d,0x20(%esp)
add    $0x1c,%esp
jmp    8066550 <fchmod@plt+0x1c0f0>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80773f8,%edx
movzbl 0x25(%edx),%eax
xor    $0x1,%eax
test   %al,%al
mov    %al,0x25(%edx)
movl   $0x5,0x8(%esp)
jne    8061998 <fchmod@plt+0x17538>
movl   $0x806fa7b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
add    $0x1c,%esp
jmp    806a7c0 <fchmod@plt+0x20360>
xchg   %ax,%ax
movl   $0x806fa72,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    %edx,0x28(%eax)
mov    0x18(%eax),%edx
mov    %edx,0x2c(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
testb  $0x10,0x8077417
mov    %ebx,0x10(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
je     8061a68 <fchmod@plt+0x17608>
call   8066ae0 <fchmod@plt+0x1c680>
xor    %esi,%esi
mov    0x80772e4,%edi
mov    %eax,%ecx
jmp    8061a02 <fchmod@plt+0x175a2>
lea    0x0(%esi),%esi
mov    %ebx,%esi
add    $0x1,%ecx
xor    %edx,%edx
mov    %ecx,%eax
div    %edi
lea    0x1(%esi),%ebx
test   %edx,%edx
jne    8061a00 <fchmod@plt+0x175a0>
add    $0x2,%esi
mov    %esi,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %ebx,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   804a040 <memset@plt>
movb   $0x0,(%esi,%ebx,1)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   805b430 <fchmod@plt+0x10fd0>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806e125,(%esp)
call   805b430 <fchmod@plt+0x10fd0>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
je     8061b4d <fchmod@plt+0x176ed>
mov    %eax,(%esp)
call   8058c90 <fchmod@plt+0xe830>
mov    0x8(%eax),%edx
mov    %eax,0x8077408
mov    %eax,0x8077404
test   %edx,%edx
jne    8061ad2 <fchmod@plt+0x17672>
jmp    8061adf <fchmod@plt+0x1767f>
xchg   %ax,%ax
mov    %eax,%edx
mov    0x8(%edx),%eax
test   %eax,%eax
jne    8061ad0 <fchmod@plt+0x17670>
mov    %edx,0x8077404
cmpb   $0x0,0x20(%ebx)
je     8061aec <fchmod@plt+0x1768c>
mov    0x24(%ebx),%eax
cmp    (%ebx),%eax
jl     8061b58 <fchmod@plt+0x176f8>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x8(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
mov    0x8077404,%eax
mov    %eax,0x4(%esp)
mov    0x8077408,%eax
mov    %eax,(%esp)
call   80592c0 <fchmod@plt+0xee60>
mov    0x8077408,%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
movl   $0x0,0x8077408
00
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x28(%ebx),%edx
mov    %eax,(%esp)
add    $0x1,%edx
mov    %edx,0x4(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
jmp    8061b20 <fchmod@plt+0x176c0>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x18(%ebx),%eax
test   %eax,%eax
je     8061c6d <fchmod@plt+0x1780d>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x8(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
mov    0x8077408,%edx
movzbl 0x20(%ebx),%eax
mov    0x80773f8,%esi
test   %edx,%edx
mov    %al,0x25(%esi)
je     8061c01 <fchmod@plt+0x177a1>
mov    %edx,(%esp)
call   8049be0 <free@plt>
movzbl 0x20(%ebx),%eax
mov    0x80773f8,%esi
test   %al,%al
movl   $0x0,0x8077408
00
je     8061c78 <fchmod@plt+0x17818>
mov    0x24(%ebx),%ecx
mov    0x4(%esi),%edx
cmp    $0x1,%ecx
je     8061c2a <fchmod@plt+0x177ca>
mov    $0x1,%eax
nop
add    $0x1,%eax
mov    0x8(%edx),%edx
cmp    %ecx,%eax
jne    8061c20 <fchmod@plt+0x177c0>
mov    %edx,0x28(%esi)
mov    0x28(%ebx),%eax
mov    %eax,0x2c(%esi)
movl   $0x1,0x8(%esp)
movzbl 0x21(%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804e880 <fchmod@plt+0x4420>
mov    0x80773f8,%eax
movb   $0x1,0x80773bc
movb   $0x0,0x25(%eax)
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x21(%ebx)
jne    8061c2d <fchmod@plt+0x177cd>
mov    0x18(%ebx),%eax
mov    0x10(%esi),%ecx
jmp    8061c8a <fchmod@plt+0x1782a>
xchg   %ax,%ax
mov    %edx,%ecx
mov    0x8(%eax),%eax
test   %eax,%eax
je     8061c98 <fchmod@plt+0x17838>
mov    0x8(%ecx),%edx
test   %edx,%edx
jne    8061c88 <fchmod@plt+0x17828>
mov    %ecx,0x28(%esi)
movl   $0x0,0x2c(%esi)
movb   $0x1,0x25(%esi)
jmp    8061c2d <fchmod@plt+0x177cd>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80773f8,%ecx
mov    0x8077404,%eax
mov    0x8077408,%ebp
mov    0x3c(%ecx),%edi
mov    0x10(%ecx),%ebx
mov    %eax,0x2c(%esp)
test   %edi,%edi
je     8062270 <fchmod@plt+0x17e10>
mov    (%edi),%esi
mov    0x4(%ebx),%eax
cmp    %eax,%esi
jg     8061ded <fchmod@plt+0x1798d>
mov    0xc(%ebx),%edx
test   %edx,%edx
jne    8061d34 <fchmod@plt+0x178d4>
xchg   %ax,%ax
cmp    %eax,%esi
je     8061d38 <fchmod@plt+0x178d8>
movl   $0x5,0x8(%esp)
movl   $0x806fc8c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ebx
mov    0x4(%edx),%eax
mov    0xc(%ebx),%edx
test   %edx,%edx
je     8061cf0 <fchmod@plt+0x17890>
cmp    %eax,%esi
jne    8061d28 <fchmod@plt+0x178c8>
mov    0x8(%edi),%eax
cmpl   $0x8,0x4(%edi)
mov    %eax,0x18(%ecx)
jbe    8061e0c <fchmod@plt+0x179ac>
movl   $0x5,0x8(%esp)
movl   $0x806fcc8,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%esi
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
movl   $0x5,0x8(%esp)
movl   $0x806faff,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
mov    0x3c(%eax),%edx
mov    0x2c(%edx),%edx
movl   $0x9,0x40(%eax)
mov    %edx,0x3c(%eax)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%edx),%eax
mov    %edx,%ebx
mov    0x8(%ebx),%edx
test   %edx,%edx
je     8061cf0 <fchmod@plt+0x17890>
cmp    %eax,%esi
jne    8061de8 <fchmod@plt+0x17988>
mov    0x8(%edi),%eax
cmpl   $0x8,0x4(%edi)
mov    %eax,0x18(%ecx)
ja     8061d48 <fchmod@plt+0x178e8>
mov    0x4(%edi),%eax
movl   $0x5,0x8(%esp)
jmp    *0x806fdf0(,%eax,4)
xchg   %ax,%ax
movl   $0x806fadb,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x8(%ebx),%ebp
test   %ebp,%ebp
mov    %eax,%esi
je     8061d68 <fchmod@plt+0x17908>
mov    (%ebx),%edx
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ecx
mov    0x0(%ebp),%eax
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
mov    %edx,(%esp)
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x8(%ebx),%edx
mov    %eax,(%ebx)
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049e40 <strcat@plt>
mov    %ebp,(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    %ebp,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
jmp    8061d68 <fchmod@plt+0x17908>
movl   $0x806fad0,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   8061b90 <fchmod@plt+0x17730>
jmp    8061d68 <fchmod@plt+0x17908>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806fac7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   8061aa0 <fchmod@plt+0x17640>
jmp    8061d68 <fchmod@plt+0x17908>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806fabd,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8058b50 <fchmod@plt+0xe6f0>
mov    %eax,%ebp
mov    0xc(%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x0(%ebp)
mov    0x8(%edi),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    0x8(%edi),%edx
movb   $0x0,(%eax,%edx,1)
mov    (%ebx),%edx
mov    %eax,0x28(%esp)
mov    %edx,(%esp)
call   8049be0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%ebx)
mov    0x8(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8058c10 <fchmod@plt+0xe7b0>
mov    %ebx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
jmp    8061d68 <fchmod@plt+0x17908>
lea    0x0(%esi),%esi
movl   $0x806fab3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    (%ebx),%ebp
mov    %ebp,(%esp)
mov    %eax,%esi
call   8049fc0 <strlen@plt>
mov    %eax,%edx
mov    0xc(%edi),%eax
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x24(%esp),%edx
mov    %ebp,(%esp)
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%ebx)
mov    %eax,%ebp
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0xc(%edi),%edx
mov    %edx,0x4(%esp)
lea    -0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0x10(%edi),%eax
test   %eax,%eax
je     8062249 <fchmod@plt+0x17de9>
mov    0x8(%ebx),%ebp
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x0(%ebp)
jmp    8061f6d <fchmod@plt+0x17b0d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806faf2,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    (%ebx),%edx
mov    %eax,%esi
mov    0xc(%edi),%eax
mov    %edx,0xc(%edi)
mov    %eax,(%ebx)
jmp    8061d68 <fchmod@plt+0x17908>
lea    0x0(%esi),%esi
movl   $0x806faa7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x8(%edi),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0xc(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0xc(%edi),%eax
mov    0x8(%edi),%edx
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   8049fc0 <strlen@plt>
mov    (%ebx),%ecx
mov    0x24(%esp),%edx
add    %edx,%ecx
add    %eax,%edx
add    %ebp,%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8049e70 <strcpy@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
cmpl   $0x2,0x14(%edi)
mov    %ebp,(%ebx)
jne    8061d68 <fchmod@plt+0x17908>
mov    0xc(%edi),%eax
mov    0x80773f8,%ebp
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,0x18(%ebp)
jmp    8061d68 <fchmod@plt+0x17908>
lea    0x0(%esi),%esi
movl   $0x806fa9e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebp),%edx
sub    %eax,%edx
mov    %edx,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x8(%edi),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0xc(%edi),%eax
mov    0x8(%edi),%edx
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   8049fc0 <strlen@plt>
mov    0x24(%esp),%edx
add    %edx,%eax
add    %ebp,%edx
add    (%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049e70 <strcpy@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebp,(%ebx)
jmp    8061d68 <fchmod@plt+0x17908>
lea    0x0(%esi),%esi
movl   $0x806fae6,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x80773f8,%edx
movl   $0x0,0x8077408
00
movl   $0x0,0x8077404
00
mov    %eax,%esi
mov    (%edi),%eax
add    0x24(%edi),%eax
mov    %edx,0x24(%esp)
sub    $0x1,%eax
mov    %eax,(%esp)
call   8066cc0 <fchmod@plt+0x1c860>
mov    0x24(%esp),%edx
mov    %eax,0x28(%edx)
mov    0x80773f8,%eax
movl   $0x0,0x2c(%eax)
movb   $0x1,0x25(%eax)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x8(%edi),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
call   804e700 <fchmod@plt+0x42a0>
mov    0x8077408,%eax
mov    %ebp,0x8077408
mov    %eax,0x18(%edi)
mov    0x8077404,%eax
mov    %eax,0x1c(%edi)
mov    0x2c(%esp),%eax
mov    %eax,0x8077404
mov    0x80773f8,%eax
movb   $0x0,0x25(%eax)
jmp    8061d68 <fchmod@plt+0x17908>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x8(%eax),%ebp
mov    %ebp,(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    %ebp,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
jmp    8061f6d <fchmod@plt+0x17b0d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806fa86,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8061d1c <fchmod@plt+0x178bc>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x158,%esp
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a100 <pipe@plt>
cmp    $0xffffffff,%eax
je     80623e0 <fchmod@plt+0x17f80>
movl   $0x806fb28,(%esp)
call   8049ea0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    $0x806fb11,%eax
cmove  %eax,%ebx
call   804a190 <fork@plt>
test   %eax,%eax
mov    %eax,0x8077300
je     8062499 <fchmod@plt+0x18039>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
cmpl   $0xffffffff,0x8077300
je     8062448 <fchmod@plt+0x17fe8>
lea    0xc4(%esp),%ebx
call   805aa40 <fchmod@plt+0x105e0>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
je     80623c8 <fchmod@plt+0x17f68>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x2,(%esp)
movl   $0x8061900,0xc4(%esp)
08
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
je     80623c8 <fchmod@plt+0x17f68>
xor    %ebx,%ebx
mov    0x30(%esp),%eax
movl   $0x806b4ed,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <fdopen@plt>
test   %eax,%eax
je     8062480 <fchmod@plt+0x18020>
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x806e605,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804fd90 <fchmod@plt+0x5930>
movl   $0x0,(%esp)
call   8049d30 <wait@plt>
cmp    $0xffffffff,%eax
je     8062468 <fchmod@plt+0x18008>
test   %bl,%bl
je     8062410 <fchmod@plt+0x17fb0>
call   805ab60 <fchmod@plt+0x10700>
add    $0x158,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x806e61a,(%esp)
mov    $0x1,%ebx
call   8066550 <fchmod@plt+0x1c0f0>
jmp    8062356 <fchmod@plt+0x17ef6>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806fb19,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x158,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
lea    0x38(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   804a2e0 <sigaction@plt>
cmp    $0xffffffff,%eax
jne    80623b3 <fchmod@plt+0x17f53>
movl   $0x806e61a,(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
jmp    80623b3 <fchmod@plt+0x17f53>
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x5,0x8(%esp)
movl   $0x806fb2e,0x4(%esp)
jmp    80623f0 <fchmod@plt+0x17f90>
xchg   %ax,%ax
movl   $0x806fb44,(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
jmp    80623af <fchmod@plt+0x17f4f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806fb3d,(%esp)
mov    %eax,0x2c(%esp)
call   8066550 <fchmod@plt+0x1c0f0>
mov    0x2c(%esp),%eax
jmp    8062372 <fchmod@plt+0x17f12>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x8077360,%eax
mov    %eax,(%esp)
call   804a0b0 <fileno@plt>
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
mov    0x8077324,%eax
mov    %eax,(%esp)
call   804a0b0 <fileno@plt>
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
mov    %ebx,(%esp)
call   8051610 <fchmod@plt+0x71b0>
mov    0x160(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x806e352,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   804a0e0 <execl@plt>
movl   $0x0,(%esp)
call   8049f30 <exit@plt>
lea    0x0(%esi),%esi
movb   $0x0,0x8077688
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x58(%esp),%eax
movl   $0x0,0x2c(%esp)
cmpb   $0x0,(%ebx)
mov    %eax,0x1c(%esp)
mov    %al,0x1b(%esp)
je     80625bf <fchmod@plt+0x1815f>
mov    $0xffffffff,%esi
mov    %edi,%eax
mov    %esi,%edi
mov    %eax,%esi
jmp    806257f <fchmod@plt+0x1811f>
nop
lea    0x0(%esi,%eiz,1),%esi
add    %ebp,%ebx
add    %ebp,%esi
cmpb   $0x0,(%ebx)
je     8062670 <fchmod@plt+0x18210>
mov    0x54(%esp),%eax
cmp    %eax,0x2c(%esp)
ja     80625d0 <fchmod@plt+0x18170>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     80625a7 <fchmod@plt+0x18147>
mov    %esi,%edi
cmpb   $0x0,0x1b(%esp)
je     8062568 <fchmod@plt+0x18108>
cmpb   $0xa,(%ebx)
jne    8062568 <fchmod@plt+0x18108>
mov    %esi,%edi
mov    0x54(%esp),%eax
cmp    %eax,0x2c(%esp)
ja     80625d6 <fchmod@plt+0x18176>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %edi,%esi
mov    %eax,%edi
test   %esi,%esi
jle    8062658 <fchmod@plt+0x181f8>
cmp    $0xffffffff,%esi
je     8062680 <fchmod@plt+0x18220>
sub    %edi,%ebx
add    %esi,%ebx
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
movzbl 0x1b(%esp),%edi
add    %eax,%ebx
cmpb   $0x0,(%ebx)
jne    806263b <fchmod@plt+0x181db>
jmp    8062647 <fchmod@plt+0x181e7>
lea    0x0(%esi),%esi
mov    %edi,%eax
test   %al,%al
jne    80626f8 <fchmod@plt+0x18298>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    %eax,%ebx
add    %eax,%esi
cmpb   $0x0,(%ebx)
je     8062647 <fchmod@plt+0x181e7>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
jne    8062610 <fchmod@plt+0x181b0>
mov    %esi,%edi
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1c(%esp)
je     80625da <fchmod@plt+0x1817a>
sub    %ebp,%edi
jmp    80625bf <fchmod@plt+0x1815f>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,%esi
mov    %eax,%edi
jmp    80625b5 <fchmod@plt+0x18155>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
cmpb   $0x0,(%ebx)
movl   $0x0,0x14(%esp)
je     80626ec <fchmod@plt+0x1828c>
mov    %ebx,%ebp
mov    %esi,%ebx
jmp    80626b3 <fchmod@plt+0x18253>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1b(%esp)
je     80626a5 <fchmod@plt+0x18245>
cmpb   $0xa,0x0(%ebp)
je     80626d9 <fchmod@plt+0x18279>
test   %bl,%bl
jne    8062708 <fchmod@plt+0x182a8>
add    %esi,%ebp
add    %esi,%edi
cmpb   $0x0,0x0(%ebp)
je     80626ec <fchmod@plt+0x1828c>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     8062698 <fchmod@plt+0x18238>
add    %esi,%ebp
mov    $0x1,%ebx
mov    %edi,0x14(%esp)
add    %esi,%edi
cmpb   $0x0,0x0(%ebp)
jne    80626b3 <fchmod@plt+0x18253>
mov    $0xffffffff,%edi
jmp    80625bf <fchmod@plt+0x1815f>
xchg   %ax,%ax
cmpb   $0xa,(%ebx)
jne    806261a <fchmod@plt+0x181ba>
mov    %esi,%edi
jmp    8062649 <fchmod@plt+0x181e9>
mov    0x14(%esp),%edi
jmp    80625bf <fchmod@plt+0x1815f>
jmp    8062720 <fchmod@plt+0x182c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80773f8,%esi
testb  $0x4,0x8077418
mov    0x40(%esp),%edi
je     8062801 <fchmod@plt+0x183a1>
cmp    $0x5,%edi
mov    0x3c(%esi),%eax
je     8062810 <fchmod@plt+0x183b0>
mov    0x38(%esi),%ebx
test   %ebx,%ebx
je     8062795 <fchmod@plt+0x18335>
cmp    %ebx,%eax
jne    8062762 <fchmod@plt+0x18302>
jmp    8062795 <fchmod@plt+0x18335>
nop
cmp    0x3c(%esi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
je     8062795 <fchmod@plt+0x18335>
mov    0x2c(%ebx),%eax
mov    %eax,0x38(%esi)
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8062777 <fchmod@plt+0x18317>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     8062786 <fchmod@plt+0x18326>
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x38(%esi),%ebx
test   %ebx,%ebx
jne    8062758 <fchmod@plt+0x182f8>
movl   $0x30,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x10(%esi),%ebp
cmp    $0x9,%edi
mov    0x18(%esi),%edx
mov    %eax,%ebx
mov    %edi,0x4(%eax)
mov    0x4(%ebp),%eax
mov    %edx,0x8(%ebx)
mov    %eax,(%ebx)
mov    0x38(%esi),%eax
mov    %eax,0x2c(%ebx)
mov    %ebx,0x38(%esi)
mov    %ebx,0x3c(%esi)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movb   $0x0,0x20(%ebx)
movl   $0x0,0x24(%ebx)
movl   $0x0,0x28(%ebx)
movl   $0x0,0x14(%ebx)
movb   $0x0,0x21(%ebx)
jbe    8062840 <fchmod@plt+0x183e0>
mov    %edi,0x40(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     806274a <fchmod@plt+0x182ea>
cmpl   $0x5,0x4(%eax)
jne    806274a <fchmod@plt+0x182ea>
cmpb   $0x0,0x20(%eax)
jne    806274a <fchmod@plt+0x182ea>
mov    0x10(%esi),%edx
mov    0x4(%edx),%ecx
cmp    %ecx,(%eax)
jne    806274a <fchmod@plt+0x182ea>
jmp    8062801 <fchmod@plt+0x183a1>
lea    0x0(%esi,%eiz,1),%esi
jmp    *0x806fe14(,%edi,4)
mov    0x0(%ebp),%ecx
mov    %edx,0x1c(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x18(%esp)
call   8049fc0 <strlen@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
cmp    %eax,%edx
jne    80629b7 <fchmod@plt+0x18557>
movl   $0x4,0x4(%ebx)
mov    0x8(%ebp),%eax
mov    $0x4,%edi
test   %eax,%eax
je     80627fe <fchmod@plt+0x1839e>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0xc(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
mov    0x80773f8,%edx
movzbl 0x25(%edx),%eax
test   %al,%al
mov    %al,0x20(%ebx)
je     80628b7 <fchmod@plt+0x18457>
mov    0x28(%edx),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%ebx)
mov    0x2c(%edx),%eax
mov    %eax,0x28(%ebx)
mov    0x8077414,%eax
mov    %ebx,0x807768c
shr    $0xc,%eax
and    $0x1,%eax
mov    %al,0x21(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
movl   $0x5,0x8(%esp)
movl   $0x806fd3c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    80627fe <fchmod@plt+0x1839e>
mov    0x807768c,%eax
test   %eax,%eax
je     80629fd <fchmod@plt+0x1859d>
cmpl   $0x5,0x4(%eax)
jne    80627fe <fchmod@plt+0x1839e>
mov    0x18(%eax),%edx
mov    0x1c(%eax),%eax
mov    %edx,0x18(%ebx)
mov    %eax,0x1c(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
mov    0x807742c,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8062530 <fchmod@plt+0x180d0>
mov    %eax,%ebp
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
add    %ebp,%eax
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
cmpb   $0x0,0x8077688
mov    %eax,0xc(%ebx)
jne    80629dd <fchmod@plt+0x1857d>
mov    %ebp,0x8(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0xc(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
movl   $0x2,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x10(%esi),%edx
mov    (%edx),%ecx
mov    0x18(%esi),%edx
movzbl (%ecx,%edx,1),%edx
movb   $0x0,0x1(%eax)
mov    %dl,(%eax)
mov    %eax,0xc(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
add    %ecx,%edx
movl   $0x2,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   80667d0 <fchmod@plt+0x1c370>
movb   $0x0,0x1(%eax)
mov    %eax,0xc(%ebx)
jmp    80627fe <fchmod@plt+0x1839e>
mov    0x10(%esi),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x10(%ebx)
jmp    806296e <fchmod@plt+0x1850e>
movl   $0x5,0x8(%esp)
movl   $0x806fd00,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    80627fe <fchmod@plt+0x1839e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
testb  $0x4,0x8077418
mov    %ebx,0x2c(%esp)
mov    0x40(%esp),%eax
mov    %esi,0x30(%esp)
mov    0x80773f8,%ebx
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
je     8062b06 <fchmod@plt+0x186a6>
mov    0x40(%ebx),%esi
cmp    %eax,%esi
jne    8062a8d <fchmod@plt+0x1862d>
cmp    $0x8,%esi
je     8062b20 <fchmod@plt+0x186c0>
cmp    $0x5,%esi
je     8062b20 <fchmod@plt+0x186c0>
cmp    $0x3,%esi
je     8062b20 <fchmod@plt+0x186c0>
mov    0x3c(%ebx),%edx
mov    0x10(%ebx),%ecx
mov    (%edx),%edi
cmp    %edi,0x4(%ecx)
je     8062b20 <fchmod@plt+0x186c0>
mov    %eax,0x40(%esp)
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
jmp    8062720 <fchmod@plt+0x182c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077408,%eax
test   %eax,%eax
je     8062b03 <fchmod@plt+0x186a3>
mov    0x18(%edi),%edx
test   %edx,%edx
je     8062acd <fchmod@plt+0x1866d>
mov    %edx,(%esp)
call   8049be0 <free@plt>
mov    0x8077408,%eax
mov    %eax,(%esp)
call   8058c90 <fchmod@plt+0xe830>
mov    0x8(%eax),%edx
mov    %eax,0x18(%edi)
mov    %eax,0x1c(%edi)
test   %edx,%edx
jne    8062aea <fchmod@plt+0x1868a>
jmp    8062af4 <fchmod@plt+0x18694>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x8(%edx),%eax
test   %eax,%eax
jne    8062ae8 <fchmod@plt+0x18688>
mov    %edx,0x1c(%edi)
mov    0x40(%ebx),%eax
cmp    %eax,%esi
je     8062b03 <fchmod@plt+0x186a3>
mov    %esi,(%esp)
call   8062720 <fchmod@plt+0x182c0>
mov    %esi,0x40(%ebx)
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
mov    0x38(%ebx),%edi
cmpl   $0x8,0x4(%edi)
ja     8062b03 <fchmod@plt+0x186a3>
mov    0x4(%edi),%eax
jmp    *0x806fe3c(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%edi)
jmp    8062b03 <fchmod@plt+0x186a3>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,0x14(%edi)
jmp    8062b03 <fchmod@plt+0x186a3>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8062720 <fchmod@plt+0x182c0>
mov    0x40(%ebx),%eax
jmp    8062af7 <fchmod@plt+0x18697>
lea    0x0(%esi),%esi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x18(%ebx),%edx
mov    0x8(%edi),%ecx
cmp    %ecx,%edx
mov    %eax,%ebp
lea    0x2(%eax),%eax
je     8062c40 <fchmod@plt+0x187e0>
sub    $0x1,%ecx
cmp    %ecx,%edx
jne    8062c30 <fchmod@plt+0x187d0>
mov    0x14(%edi),%edx
test   %edx,%edx
jne    8062ca1 <fchmod@plt+0x18841>
movl   $0x2,0x14(%edi)
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x10(%ebx),%eax
mov    (%eax),%edx
mov    0x18(%ebx),%eax
movzbl (%edx,%eax,1),%eax
mov    %al,0x0(%ebp)
mov    0xc(%edi),%eax
mov    %eax,0x4(%esp)
lea    0x1(%ebp),%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x40(%ebx),%eax
mov    %ebp,0xc(%edi)
subl   $0x1,0x8(%edi)
jmp    8062af7 <fchmod@plt+0x18697>
mov    0xc(%edi),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8049fc0 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
lea    0x8(,%eax,4),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x10(%ebx),%edx
mov    (%edx),%ecx
mov    0x18(%ebx),%edx
movzbl (%ecx,%edx,1),%edx
movb   $0x0,0x1(%eax,%ebp,1)
mov    %dl,(%eax,%ebp,1)
mov    %eax,0xc(%edi)
mov    0x40(%ebx),%eax
jmp    8062af7 <fchmod@plt+0x18697>
nop
movl   $0x1,0x40(%esp)
jmp    8062a91 <fchmod@plt+0x18631>
lea    0x0(%esi),%esi
mov    0x14(%edi),%edx
test   %edx,%edx
jne    8062cb3 <fchmod@plt+0x18853>
movl   $0x1,0x14(%edi)
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%edx
mov    0xc(%edi),%eax
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
call   8049e70 <strcpy@plt>
mov    0x10(%ebx),%eax
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
mov    0x18(%ebx),%eax
movzbl (%ecx,%eax,1),%eax
movb   $0x0,0x1(%edx,%ebp,1)
mov    %al,(%edx,%ebp,1)
mov    0xc(%edi),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%edx
mov    0x40(%ebx),%eax
mov    %edx,0xc(%edi)
jmp    8062af7 <fchmod@plt+0x18697>
cmp    $0x2,%edx
je     8062ba3 <fchmod@plt+0x18743>
mov    %esi,0x40(%esp)
jmp    8062a91 <fchmod@plt+0x18631>
cmp    $0x1,%edx
je     8062c4e <fchmod@plt+0x187ee>
jmp    8062caa <fchmod@plt+0x1884a>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x1,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%ebx)
mov    0x80773f8,%eax
mov    0x10(%eax),%ebx
mov    0x18(%eax),%ebp
mov    (%ebx),%edi
lea    (%edi,%ebp,1),%edx
cmpb   $0x0,(%edx)
jne    8062e38 <fchmod@plt+0x189d8>
cmp    0x8(%eax),%ebx
je     8062dcd <fchmod@plt+0x1896d>
mov    0x8(%ebx),%esi
movb   $0x1,0x80773bc
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %edi,(%esp)
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x80773f8,%edx
mov    %eax,(%ebx)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
add    0x18(%edx),%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
jne    8062e18 <fchmod@plt+0x189b8>
cmp    %esi,0x8(%eax)
je     8062f10 <fchmod@plt+0x18ab0>
mov    %esi,(%esp)
xor    %ebx,%ebx
call   8058c30 <fchmod@plt+0xe7d0>
mov    %esi,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%ecx
mov    0x8077414,%edx
subl   $0x1,0x14(%ecx)
test   %edx,%edx
js     8062d9f <fchmod@plt+0x1893f>
mov    0x10(%ecx),%eax
cmp    0x8(%ecx),%eax
je     8062ef0 <fchmod@plt+0x18a90>
testb  $0x8,0x8077418
jne    8062dd8 <fchmod@plt+0x18978>
call   80694c0 <fchmod@plt+0x1f060>
cmpb   $0x0,0x80773bc
jne    8062dcd <fchmod@plt+0x1896d>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x80773bc
jne    8062da8 <fchmod@plt+0x18948>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%ecx
xor    %edx,%edx
div    %ecx
xor    %edx,%edx
mov    %eax,%esi
mov    %ebx,%eax
div    %ecx
cmp    %eax,%esi
je     8062da8 <fchmod@plt+0x18948>
movb   $0x1,0x80773bc
jmp    8062da8 <fchmod@plt+0x18948>
lea    0x0(%esi),%esi
mov    0x10(%eax),%edx
mov    0x8(%edx),%ecx
cmp    %ecx,0x28(%eax)
jne    8062d54 <fchmod@plt+0x188f4>
mov    %edx,0x28(%eax)
mov    0x18(%eax),%edx
add    %edx,0x2c(%eax)
jmp    8062d54 <fchmod@plt+0x188f4>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
xor    %ebx,%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    0x18(%eax),%ebp
mov    (%edx),%edi
lea    (%edi,%ebp,1),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8049fc0 <strlen@plt>
mov    0x1c(%esp),%edx
testb  $0x8,0x8077418
mov    %eax,%ecx
jne    8062f20 <fchmod@plt+0x18ac0>
lea    0x1(%ecx),%eax
add    %esi,%ebp
sub    %esi,%eax
add    %ebp,%edi
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   8049bb0 <memmove@plt>
mov    0x80773f8,%edx
mov    0x1c(%esp),%ecx
mov    0x18(%edx),%eax
add    %ecx,%eax
sub    %esi,%eax
mov    %eax,0x4(%esp)
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x80773f8,%ecx
cmpb   $0x0,0x25(%ecx)
je     8062ed4 <fchmod@plt+0x18a74>
mov    0x10(%ecx),%eax
cmp    %eax,0x28(%ecx)
je     8062f48 <fchmod@plt+0x18ae8>
subl   $0x1,0x14(%ecx)
testb  $0x8,0x8077418
je     8062da8 <fchmod@plt+0x18948>
jmp    8062dd8 <fchmod@plt+0x18978>
lea    0x0(%esi),%esi
mov    (%eax),%eax
cmpb   $0x0,(%eax)
je     8062d9f <fchmod@plt+0x1893f>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8066b20 <fchmod@plt+0x1c6c0>
jmp    8062d9f <fchmod@plt+0x1893f>
lea    0x0(%esi),%esi
mov    0x10(%eax),%edx
mov    %edx,0x8(%eax)
jmp    8062d5d <fchmod@plt+0x188fd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x1c(%esp),%ecx
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    0x18(%eax),%ebp
mov    (%edx),%edi
lea    (%edi,%ebp,1),%edx
jmp    8062e83 <fchmod@plt+0x18a23>
nop
mov    0x2c(%ecx),%eax
cmp    %eax,0x18(%ecx)
jae    8062ed4 <fchmod@plt+0x18a74>
sub    %esi,%eax
mov    %eax,0x2c(%ecx)
jmp    8062ed4 <fchmod@plt+0x18a74>
lea    0x0(%esi),%esi
sub    $0xc,%esp
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
cmp    %edx,0x10(%eax)
je     8062f80 <fchmod@plt+0x18b20>
call   8058a30 <fchmod@plt+0xe5d0>
add    $0xc,%esp
jmp    8062cc0 <fchmod@plt+0x18860>
lea    0x0(%esi),%esi
mov    0x18(%eax),%ecx
test   %ecx,%ecx
jne    8062f70 <fchmod@plt+0x18b10>
add    $0xc,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
cmpb   $0x0,(%ebx)
mov    %eax,%edi
jne    8062fc1 <fchmod@plt+0x18b61>
jmp    8062fe3 <fchmod@plt+0x18b83>
nop
lea    0x0(%esi,%eiz,1),%esi
add    %esi,%ebx
add    %esi,%ebp
cmpb   $0x0,(%ebx)
je     8062fe3 <fchmod@plt+0x18b83>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %edi,(%esp)
mov    %eax,%esi
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
jne    8062fb8 <fchmod@plt+0x18b58>
mov    %edi,(%esp)
call   8049be0 <free@plt>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x4c,%esp
mov    %ebx,0x3c(%esp)
mov    0x50(%esp),%ebx
mov    %esi,0x40(%esp)
mov    %edi,0x44(%esp)
mov    0x54(%esp),%edi
mov    %ebp,0x48(%esp)
mov    (%ebx),%esi
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,%ebp
mov    0x807742c,%eax
mov    %eax,0x4(%esp)
call   8062530 <fchmod@plt+0x180d0>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8063050 <fchmod@plt+0x18bf0>
mov    (%ebx),%eax
add    %esi,%eax
cmpb   $0x0,(%eax)
jne    8063068 <fchmod@plt+0x18c08>
xor    %eax,%eax
mov    0x3c(%esp),%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebp
add    $0x4c,%esp
ret
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d5e0 <fchmod@plt+0x3180>
mov    (%ebx),%edx
add    %eax,%esi
cmpb   $0x0,(%edx,%esi,1)
je     8063050 <fchmod@plt+0x18bf0>
mov    %edi,%eax
test   %al,%al
je     8063290 <fchmod@plt+0x18e30>
testb  $0x80,0x8077414
movl   $0x0,0x18(%esp)
movl   $0x0,0x2c(%esp)
jne    8063268 <fchmod@plt+0x18e08>
add    %esi,%edx
mov    %edx,0x20(%esp)
mov    %ebp,%edx
sub    %esi,%edx
cmpb   $0x0,0x8077688
mov    %edx,0x28(%esp)
je     8063210 <fchmod@plt+0x18db0>
mov    0x80773f8,%eax
cmp    %ebx,0x8(%eax)
je     8063210 <fchmod@plt+0x18db0>
mov    0x20(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
call   804d590 <fchmod@plt+0x3130>
add    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     80632a3 <fchmod@plt+0x18e43>
mov    0x8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049fc0 <strlen@plt>
mov    0x28(%esp),%edx
add    %eax,%edx
cmp    0x807742c,%edx
ja     8063218 <fchmod@plt+0x18db8>
testb  $0x80,0x8077414
jne    8063394 <fchmod@plt+0x18f34>
movb   $0x1,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movb   $0x0,(%eax)
mov    %eax,%ebp
testb  $0x80,0x8077414
jne    8063340 <fchmod@plt+0x18ee0>
mov    0x20(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   8049e40 <strcat@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
cmpb   $0x0,0x24(%esp)
je     80632e0 <fchmod@plt+0x18e80>
mov    %edi,%ecx
test   %cl,%cl
je     80633c8 <fchmod@plt+0x18f68>
mov    0x1c(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   8049e40 <strcat@plt>
mov    0x8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8(%ebx),%eax
mov    0x80773f8,%edi
mov    %ebp,(%eax)
mov    0x8077414,%ebp
test   %ebp,%ebp
js     80631be <fchmod@plt+0x18d5e>
mov    0x8(%edi),%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
jne    80633e0 <fchmod@plt+0x18f80>
movb   $0x1,0x8077688
mov    0x18(%edi),%eax
cmp    %eax,%esi
jb     8063368 <fchmod@plt+0x18f08>
cmpb   $0x0,0x25(%edi)
mov    $0x1,%eax
je     8063052 <fchmod@plt+0x18bf2>
mov    0x28(%edi),%edx
cmp    %ebx,%edx
je     80633f0 <fchmod@plt+0x18f90>
cmpb   $0x0,0x24(%esp)
mov    $0x1,%eax
je     8063052 <fchmod@plt+0x18bf2>
cmp    0x8(%ebx),%edx
jne    8063052 <fchmod@plt+0x18bf2>
mov    0x28(%esp),%ecx
add    %ecx,0x2c(%edi)
jmp    8063052 <fchmod@plt+0x18bf2>
nop
movl   $0x0,0x1c(%esp)
testb  $0x80,0x8077414
mov    0x28(%esp),%edx
je     806341c <fchmod@plt+0x18fbc>
mov    0x80773f8,%ebp
mov    0x18(%esp),%eax
add    0x18(%esp),%edx
mov    0x14(%ebp),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x24(%esp)
mov    0x2c(%esp),%ecx
mov    %ecx,(%esp)
call   804d960 <fchmod@plt+0x3500>
mov    0x14(%esp),%edx
add    0x24(%esp),%eax
movb   $0x0,0x24(%esp)
mov    %eax,0x14(%ebp)
jmp    8063130 <fchmod@plt+0x18cd0>
nop
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0x14(%esp),%edx
cmp    %eax,%esi
mov    %eax,0x18(%esp)
je     8063050 <fchmod@plt+0x18bf0>
mov    %edx,0x2c(%esp)
mov    (%ebx),%edx
jmp    80630a9 <fchmod@plt+0x18c49>
nop
movl   $0x3,(%esp)
call   8062720 <fchmod@plt+0x182c0>
mov    (%ebx),%edx
jmp    806308c <fchmod@plt+0x18c2c>
lea    0x2(%ebp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
addl   $0x1,0x28(%esp)
mov    %eax,(%ebx)
movb   $0x20,(%eax,%ebp,1)
mov    (%ebx),%eax
movb   $0x0,0x1(%eax,%ebp,1)
mov    (%ebx),%edx
mov    0x80773f8,%eax
add    %esi,%edx
mov    %edx,0x20(%esp)
addl   $0x1,0x14(%eax)
jmp    80630f6 <fchmod@plt+0x18c96>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x8(%eax),%edi
mov    %eax,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8058c10 <fchmod@plt+0xe7b0>
mov    0x80773f8,%eax
mov    0x10(%eax),%ecx
cmp    %ecx,0x8(%eax)
je     8063411 <fchmod@plt+0x18fb1>
mov    0x8(%ecx),%ecx
movb   $0x1,0x8077688
mov    %ebp,(%ecx)
addl   $0x1,0x14(%eax)
mov    %ebx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%edi
jmp    80631c5 <fchmod@plt+0x18d65>
nop
mov    0x18(%esp),%eax
mov    0x2c(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0x18(%esp),%eax
movb   $0x0,0x0(%ebp,%eax,1)
jmp    806314d <fchmod@plt+0x18ced>
xchg   %ax,%ax
mov    0x10(%edi),%edx
sub    %esi,%eax
add    0x18(%esp),%eax
movb   $0x0,0x8077688
mov    0x8(%edx),%edx
mov    %eax,0x18(%edi)
mov    %edx,0x10(%edi)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%edi)
mov    0x80773f8,%edi
jmp    80631d0 <fchmod@plt+0x18d70>
mov    0x1c(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %ecx,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0x1c(%esp),%ecx
movb   $0x1,0x24(%esp)
mov    0x14(%esp),%edx
mov    %ecx,0x2c(%esp)
add    %eax,%ecx
mov    %eax,0x18(%esp)
mov    %ecx,0x1c(%esp)
jmp    8063130 <fchmod@plt+0x18cd0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x3,(%esp)
call   8062a30 <fchmod@plt+0x185d0>
jmp    806317e <fchmod@plt+0x18d1e>
lea    0x0(%esi,%eiz,1),%esi
call   8066b20 <fchmod@plt+0x1c6c0>
mov    0x80773f8,%edi
jmp    80631be <fchmod@plt+0x18d5e>
mov    0x2c(%edi),%ecx
cmp    %ecx,%esi
jae    80631ea <fchmod@plt+0x18d8a>
sub    0x18(%esp),%esi
mov    0x8(%ebx),%edx
not    %esi
add    %esi,%ecx
mov    %edx,0x28(%edi)
mov    %ecx,0x2c(%edi)
jmp    8063052 <fchmod@plt+0x18bf2>
mov    0x8(%ecx),%edi
mov    %edi,0x8(%eax)
jmp    806331c <fchmod@plt+0x18ebc>
movb   $0x0,0x24(%esp)
jmp    8063130 <fchmod@plt+0x18cd0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80773f8,%eax
mov    0x30(%esp),%esi
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
mov    %eax,%ebx
mov    %esi,%eax
test   %al,%al
je     80635a8 <fchmod@plt+0x19148>
testb  $0x80,0x8077414
jne    8063580 <fchmod@plt+0x19120>
mov    0x80773f8,%edx
xor    %esi,%esi
mov    0x18(%edx),%ecx
mov    0x10(%edx),%eax
add    (%eax),%ecx
mov    %ecx,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%esi,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x80773f8,%ecx
mov    0x10(%ecx),%edx
mov    %eax,(%ebx)
add    %esi,%eax
mov    (%edx),%edx
add    0x18(%ecx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049e70 <strcpy@plt>
testb  $0x80,0x8077414
jne    8063540 <fchmod@plt+0x190e0>
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x80773f8,%edx
cmpb   $0x0,0x25(%edx)
mov    0x10(%edx),%ecx
je     80634e2 <fchmod@plt+0x19082>
cmp    0x28(%edx),%ecx
je     80635c8 <fchmod@plt+0x19168>
cmp    %ecx,0x8(%edx)
mov    %esi,0x18(%edx)
je     80635c0 <fchmod@plt+0x19160>
mov    0x8(%ecx),%eax
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8058c10 <fchmod@plt+0xe7b0>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%eax
addl   $0x1,0x14(%eax)
mov    %ebx,0x10(%eax)
call   80694c0 <fchmod@plt+0x1f060>
mov    0x80773f8,%ebx
call   8066ae0 <fchmod@plt+0x1c680>
movb   $0x1,0x80773bc
mov    %eax,0x1c(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x80773f8,%eax
mov    %esi,0x8(%esp)
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x80773f8,%edi
mov    (%ebx),%eax
mov    0x14(%edi),%ebp
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
add    %eax,%ebp
mov    %ebp,0x14(%edi)
jmp    80634b3 <fchmod@plt+0x19053>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0x80773f8,%edx
mov    0x18(%edx),%ecx
cmp    %ecx,%eax
mov    %ecx,%esi
cmovbe %eax,%esi
jmp    806346f <fchmod@plt+0x1900f>
nop
movl   $0x7,(%esp)
call   8062720 <fchmod@plt+0x182c0>
jmp    8063457 <fchmod@plt+0x18ff7>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%edx)
jmp    80634ee <fchmod@plt+0x1908e>
mov    0x18(%edx),%eax
mov    0x2c(%edx),%edi
cmp    %edi,%eax
jae    80634e2 <fchmod@plt+0x19082>
sub    %eax,%edi
add    %esi,%edi
mov    %ebx,0x28(%edx)
mov    %edi,0x2c(%edx)
jmp    80634e2 <fchmod@plt+0x19082>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80773f8,%eax
mov    0x38(%eax),%ecx
mov    0x10(%eax),%esi
test   %ecx,%ecx
je     8063710 <fchmod@plt+0x192b0>
mov    0x2c(%ecx),%ebx
mov    0x3c(%eax),%edx
cmp    %edx,%ebx
jne    8063622 <fchmod@plt+0x191c2>
jmp    8063752 <fchmod@plt+0x192f2>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
test   %ebx,%ebx
je     8063710 <fchmod@plt+0x192b0>
mov    0x2c(%ebx),%eax
cmp    %edx,%eax
nop
jne    8063620 <fchmod@plt+0x191c0>
mov    (%ebx),%edi
mov    0x4(%esi),%eax
cmp    %eax,%edi
jle    8063645 <fchmod@plt+0x191e5>
jmp    80636f5 <fchmod@plt+0x19295>
mov    0x4(%edx),%eax
mov    %edx,%esi
mov    0xc(%esi),%edx
test   %edx,%edx
je     8063768 <fchmod@plt+0x19308>
cmp    %eax,%edi
jne    8063640 <fchmod@plt+0x191e0>
cmpl   $0x8,0x4(%ebx)
jbe    8063740 <fchmod@plt+0x192e0>
movl   $0x5,0x8(%esp)
movl   $0x806fcc8,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
movl   $0x5,0x8(%esp)
movl   $0x806fb49,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    0x80773f8,%eax
mov    %ebx,0x3c(%eax)
movl   $0x9,0x40(%eax)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%edx),%eax
mov    %edx,%esi
mov    0x8(%esi),%edx
test   %edx,%edx
je     8063768 <fchmod@plt+0x19308>
cmp    %eax,%edi
jne    80636f0 <fchmod@plt+0x19290>
cmpl   $0x8,0x4(%ebx)
ja     806365e <fchmod@plt+0x191fe>
jmp    8063740 <fchmod@plt+0x192e0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806fb5b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
movl   $0x5,0x8(%esp)
jmp    *0x806fe60(,%eax,4)
mov    %ecx,%ebx
mov    0x4(%esi),%eax
mov    (%ebx),%edi
cmp    %eax,%edi
jle    8063645 <fchmod@plt+0x191e5>
jmp    80636f5 <fchmod@plt+0x19295>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%edi
je     8063654 <fchmod@plt+0x191f4>
movl   $0x5,0x8(%esp)
movl   $0x806fc8c,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806fadb,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,%edi
mov    0x8(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
movl   $0x1,(%esp)
call   8063430 <fchmod@plt+0x18fd0>
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806fad0,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8061aa0 <fchmod@plt+0x17640>
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806fac7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8061b90 <fchmod@plt+0x17730>
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806fabd,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0xc(%ebx),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
add    %eax,%ebp
mov    %ebp,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    (%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049cb0 <stpcpy@plt>
mov    0xc(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebp,(%esi)
mov    0x8(%esi),%ebp
test   %ebp,%ebp
je     80638bd <fchmod@plt+0x1945d>
mov    %ebp,(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    %ebp,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
mov    %esi,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806fab3,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
testb  $0x4,0x14(%ebx)
mov    %eax,%edi
je     80638ed <fchmod@plt+0x1948d>
movb   $0x1,0x8077688
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8063000 <fchmod@plt+0x18ba0>
mov    %esi,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806faf2,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    (%esi),%edx
mov    %eax,%edi
mov    0xc(%ebx),%eax
mov    %edx,0xc(%ebx)
mov    %eax,(%esi)
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806faa7,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x8(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%edx
add    %edx,%eax
add    %ebp,%edx
add    (%esi),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049e70 <strcpy@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %ebp,(%esi)
jmp    8063680 <fchmod@plt+0x19220>
movl   $0x806fa9e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%ebp
mov    0x8(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0xc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%edx
mov    (%esi),%ecx
add    %edx,%ecx
add    %edx,%eax
add    %ebp,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
jmp    80639a2 <fchmod@plt+0x19542>
movl   $0x806fae6,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,%edi
mov    0x8(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8060ed0 <fchmod@plt+0x16a70>
mov    0x1c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   80592c0 <fchmod@plt+0xee60>
mov    0x80773f8,%esi
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,0x1c(%esi)
jmp    8063680 <fchmod@plt+0x19220>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
cmpl   $0x0,0x70(%esp)
je     8063c9a <fchmod@plt+0x1983a>
movb   $0x0,0x33(%esp)
movb   $0x1,0x34(%esp)
jl     8063d10 <fchmod@plt+0x198b0>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
jne    8063cd8 <fchmod@plt+0x19878>
mov    0x10(%eax),%eax
mov    %eax,0x40(%esp)
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x33(%esp)
movl   $0x0,0x38(%esp)
je     8063d60 <fchmod@plt+0x19900>
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebx
cmp    0x8(%eax),%ebx
je     8063c88 <fchmod@plt+0x19828>
lea    0x1(%ebp),%edx
mov    %edx,0x3c(%esp)
jmp    8063bbe <fchmod@plt+0x1975e>
xchg   %ax,%ax
mov    0x3c(%esp),%eax
add    %edi,%eax
add    $0x1,%edi
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
sub    %esi,%edi
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
lea    (%eax,%esi,1),%edx
mov    %eax,(%ebx)
mov    %edx,0x4(%esp)
lea    (%esi,%ebp,1),%edx
add    %edx,%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049bb0 <memmove@plt>
mov    0x38(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
add    %esi,%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x80773f8,%eax
add    %ebp,0x14(%eax)
cmpb   $0x0,0x25(%eax)
je     8063b92 <fchmod@plt+0x19732>
cmp    0x28(%eax),%ebx
je     8063d30 <fchmod@plt+0x198d0>
cmp    0x10(%eax),%ebx
je     8063ca8 <fchmod@plt+0x19848>
mov    0x8077414,%edx
test   %edx,%edx
js     8063bae <fchmod@plt+0x1974e>
cmp    0x8(%eax),%ebx
je     8063da8 <fchmod@plt+0x19948>
mov    0x44(%esp),%eax
mov    0x8(%ebx),%ebx
cmp    0x8(%eax),%ebx
je     8063c88 <fchmod@plt+0x19828>
mov    (%ebx),%esi
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8062f90 <fchmod@plt+0x18b30>
cmpb   $0x0,0x33(%esp)
mov    %eax,%esi
je     8063b30 <fchmod@plt+0x196d0>
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
cmp    0x70(%esp),%eax
jb     8063bae <fchmod@plt+0x1974e>
sub    0x70(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %esi,%ecx
mov    %eax,%edx
sub    %eax,%ecx
mov    (%ebx),%eax
sub    %ecx,%edi
mov    %ecx,0x34(%esp)
mov    $0x1,%ecx
sub    %edx,%ecx
add    %edi,%ecx
add    $0x1,%edi
mov    %ecx,0x8(%esp)
lea    (%eax,%esi,1),%ecx
add    %edx,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   8049bb0 <memmove@plt>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x80773f8,%eax
mov    0x34(%esp),%ecx
mov    0x2c(%esp),%edx
sub    %ecx,0x14(%eax)
cmpb   $0x0,0x25(%eax)
je     8063c63 <fchmod@plt+0x19803>
cmp    0x28(%eax),%ebx
je     8063e28 <fchmod@plt+0x199c8>
cmp    0x10(%eax),%ebx
je     8063db8 <fchmod@plt+0x19958>
mov    0x44(%esp),%eax
mov    0x8(%ebx),%ebx
movb   $0x1,0x34(%esp)
cmp    0x8(%eax),%ebx
jne    8063bbe <fchmod@plt+0x1975e>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x33(%esp)
je     8063d48 <fchmod@plt+0x198e8>
cmpb   $0x0,0x34(%esp)
jne    8063cc0 <fchmod@plt+0x19860>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%eax),%edx
cmp    %edx,%esi
ja     8063b9b <fchmod@plt+0x1973b>
add    %ebp,%edx
mov    %edx,0x18(%eax)
jmp    8063b9b <fchmod@plt+0x1973b>
lea    0x0(%esi),%esi
call   80694c0 <fchmod@plt+0x1f060>
movb   $0x1,0x80773bc
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
jmp    8063afc <fchmod@plt+0x1969c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
negl   0x70(%esp)
movb   $0x1,0x33(%esp)
cmpb   $0x0,0x25(%eax)
movb   $0x0,0x34(%esp)
je     8063af1 <fchmod@plt+0x19691>
jmp    8063cd8 <fchmod@plt+0x19878>
nop
mov    0x2c(%eax),%edx
cmp    %edx,%esi
ja     8063b92 <fchmod@plt+0x19732>
add    %ebp,%edx
mov    %edx,0x2c(%eax)
jmp    8063b92 <fchmod@plt+0x19732>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
jmp    8063c93 <fchmod@plt+0x19833>
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
testb  $0x10,0x8077417
mov    %eax,0x38(%esp)
je     8063dd8 <fchmod@plt+0x19978>
mov    0x70(%esp),%ebp
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,0x8(%esp)
call   804a040 <memset@plt>
mov    0x38(%esp),%eax
movb   $0x0,(%eax,%ebp,1)
jmp    8063b11 <fchmod@plt+0x196b1>
lea    0x0(%esi,%eiz,1),%esi
call   8066b20 <fchmod@plt+0x1c6c0>
jmp    8063bae <fchmod@plt+0x1974e>
lea    0x0(%esi),%esi
mov    0x18(%eax),%ecx
cmp    %ecx,%edx
lea    0x0(%esi),%esi
jae    8063c6c <fchmod@plt+0x1980c>
cmp    %ecx,%esi
jb     8063e3f <fchmod@plt+0x199df>
mov    %edx,0x18(%eax)
jmp    8063c6c <fchmod@plt+0x1980c>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
movl   $0x9,0x4(%esp)
mov    %eax,%edx
sar    $0x1f,%edx
idivl  0x80772e4
mov    %eax,%ebx
mov    %edx,%esi
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
lea    (%esi,%ebx,1),%ebp
mov    %eax,(%esp)
call   804a040 <memset@plt>
mov    0x38(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x20,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   804a040 <memset@plt>
jmp    8063d94 <fchmod@plt+0x19934>
lea    0x0(%esi),%esi
mov    0x2c(%eax),%ecx
cmp    %ecx,%edx
jae    8063c63 <fchmod@plt+0x19803>
cmp    %ecx,%esi
jb     8063e4b <fchmod@plt+0x199eb>
mov    %edx,0x2c(%eax)
jmp    8063c63 <fchmod@plt+0x19803>
sub    0x34(%esp),%ecx
mov    %ecx,0x18(%eax)
jmp    8063c6c <fchmod@plt+0x1980c>
sub    0x34(%esp),%ecx
mov    %ecx,0x2c(%eax)
jmp    8063c63 <fchmod@plt+0x19803>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80772e4,%eax
neg    %eax
mov    %eax,(%esp)
call   8063ac0 <fchmod@plt+0x19660>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80772e4,%eax
mov    %eax,(%esp)
call   8063ac0 <fchmod@plt+0x19660>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
mov    0x54(%esp),%ebx
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
add    %eax,%ebx
call   8049fc0 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x54(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x0(%ebp),%edx
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
mov    %edx,0x4(%esp)
call   804a090 <strncpy@plt>
mov    0x54(%esp),%edi
movzbl (%ebx),%eax
add    0x2c(%esp),%edi
movl   $0x0,0x18(%esp)
nop
test   %al,%al
je     8063f90 <fchmod@plt+0x19b30>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     8064010 <fchmod@plt+0x19bb0>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
movb   $0x20,(%edi)
add    $0x1,%edi
add    %eax,%ebx
cmpb   $0x0,(%ebx)
je     8063f90 <fchmod@plt+0x19b30>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     8064180 <fchmod@plt+0x19d20>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x80773f8,%edx
add    %eax,%ebx
add    %eax,%esi
cmpb   $0x0,0x25(%edx)
je     8063f30 <fchmod@plt+0x19ad0>
cmp    %ebp,0x28(%edx)
jne    8063f30 <fchmod@plt+0x19ad0>
add    0x18(%esp),%eax
mov    %ebx,%ecx
sub    0x0(%ebp),%ecx
cmp    %ecx,0x2c(%edx)
cmovb  0x18(%esp),%eax
cmpb   $0x0,(%ebx)
mov    %eax,0x18(%esp)
jne    8063f35 <fchmod@plt+0x19ad5>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
mov    0x54(%esp),%eax
mov    0x2c(%esp),%edx
add    %edx,%eax
cmp    %edi,%eax
jb     8063fb2 <fchmod@plt+0x19b52>
jmp    8063fb8 <fchmod@plt+0x19b58>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edi
add    $0x1,%esi
cmp    %eax,%edi
je     8063fb8 <fchmod@plt+0x19b58>
cmpb   $0x20,-0x1(%edi)
je     8063fa8 <fchmod@plt+0x19b48>
test   %esi,%esi
je     80641ce <fchmod@plt+0x19d6e>
mov    0x80773f8,%eax
sub    %esi,0x14(%eax)
mov    %edi,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%eax
mov    0x2c(%esp),%edx
cmpb   $0x0,0x25(%eax)
mov    %edx,0x0(%ebp)
je     8064002 <fchmod@plt+0x19ba2>
cmp    %ebp,0x28(%eax)
je     8064203 <fchmod@plt+0x19da3>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80773ec,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804dba0 <fchmod@plt+0x3740>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
test   %eax,%eax
je     8064188 <fchmod@plt+0x19d28>
call   804d400 <fchmod@plt+0x2fa0>
test   %eax,%eax
jle    8064065 <fchmod@plt+0x19c05>
lea    (%ebx,%eax,1),%ecx
mov    %edi,%edx
mov    %eax,0x1c(%esp)
xchg   %ax,%ax
movzbl (%ebx),%eax
add    $0x1,%ebx
mov    %al,(%edx)
add    $0x1,%edx
cmp    %ecx,%ebx
jne    8064050 <fchmod@plt+0x19bf0>
mov    0x1c(%esp),%eax
add    %eax,%edi
cmpb   $0x0,(%ebx)
jne    80640d0 <fchmod@plt+0x19c70>
xor    %eax,%eax
jmp    8064073 <fchmod@plt+0x19c13>
xchg   %ax,%ax
movzbl (%ebx),%eax
test   %al,%al
je     8063f90 <fchmod@plt+0x19b30>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     8064180 <fchmod@plt+0x19d20>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x80773f8,%edx
add    %eax,%ebx
add    %eax,%esi
cmpb   $0x0,0x25(%edx)
je     8064070 <fchmod@plt+0x19c10>
cmp    %ebp,0x28(%edx)
jne    8064070 <fchmod@plt+0x19c10>
add    0x18(%esp),%eax
mov    %ebx,%ecx
sub    0x0(%ebp),%ecx
cmp    %ecx,0x2c(%edx)
cmovb  0x18(%esp),%eax
mov    %eax,0x18(%esp)
jmp    8064070 <fchmod@plt+0x19c10>
nop
mov    0x80773e8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804dba0 <fchmod@plt+0x3740>
test   %eax,%eax
je     8064125 <fchmod@plt+0x19cc5>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
test   %eax,%eax
jle    8064125 <fchmod@plt+0x19cc5>
lea    (%ebx,%eax,1),%ecx
mov    %edi,%edx
mov    %eax,0x1c(%esp)
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
add    $0x1,%ebx
mov    %al,(%edx)
add    $0x1,%edx
cmp    %ecx,%ebx
jne    8064110 <fchmod@plt+0x19cb0>
mov    0x1c(%esp),%eax
add    %eax,%edi
cmpb   $0x0,(%ebx)
je     806406a <fchmod@plt+0x19c0a>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
jne    80641de <fchmod@plt+0x19d7e>
cmpb   $0x0,(%ebx)
je     806406a <fchmod@plt+0x19c0a>
mov    %ebx,(%esp)
call   804ce40 <fchmod@plt+0x29e0>
test   %al,%al
je     8064070 <fchmod@plt+0x19c10>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
movb   $0x20,(%edi)
add    $0x1,%edi
add    %eax,%ebx
movzbl (%ebx),%eax
jmp    8064073 <fchmod@plt+0x19c13>
nop
movzbl (%ebx),%eax
jmp    8063ef8 <fchmod@plt+0x19a98>
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebx,%edx
mov    %eax,%ecx
mov    %eax,0x1c(%esp)
add    %ebx,%ecx
mov    %edi,%eax
cmpl   $0x0,0x1c(%esp)
jle    8064180 <fchmod@plt+0x19d20>
mov    %ebx,0x14(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx),%ebx
add    $0x1,%edx
mov    %bl,(%eax)
add    $0x1,%eax
cmp    %ecx,%edx
jne    80641a8 <fchmod@plt+0x19d48>
mov    0x14(%esp),%ebx
mov    0x1c(%esp),%ecx
add    0x1c(%esp),%edi
movzbl (%ebx,%ecx,1),%eax
mov    %edx,%ebx
jmp    8063ef8 <fchmod@plt+0x19a98>
mov    %edx,(%esp)
call   8049be0 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
movb   $0x20,(%edi)
add    $0x1,%edi
add    %eax,%ebx
jmp    806413e <fchmod@plt+0x19cde>
mov    0x2c(%eax),%ecx
sub    %edx,%edi
sub    0x18(%esp),%ecx
cmp    %edi,%ecx
mov    %ecx,0x2c(%eax)
jbe    8064002 <fchmod@plt+0x19ba2>
mov    %edi,0x2c(%eax)
jmp    8064002 <fchmod@plt+0x19ba2>
nop
sub    $0x3c,%esp
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80776e0,(%esp)
mov    %eax,0x4(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
mov    $0x0,%eax
je     8064263 <fchmod@plt+0x19e03>
cmpl   $0xffffffff,0x28(%esp)
cmovne 0x2c(%esp),%eax
add    $0x3c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%ebx
mov    %ebx,(%esp)
call   8064220 <fchmod@plt+0x19dc0>
xor    %edx,%edx
cmp    0x24(%esp),%eax
je     8064290 <fchmod@plt+0x19e30>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
nop
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
sete   %dl
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x2c(%esp),%edx
cmp    0x24(%esp),%edx
ja     80642dc <fchmod@plt+0x19e7c>
mov    0x28(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a320 <strncmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x20(%esp),%ebx
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
test   %ebx,%ebx
je     8064326 <fchmod@plt+0x19ec6>
mov    0x80773f8,%eax
cmp    %ebx,0x4(%eax)
je     8064351 <fchmod@plt+0x19ef1>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8064220 <fchmod@plt+0x19dc0>
mov    %eax,%esi
mov    (%ebx),%eax
add    %esi,%eax
mov    %eax,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    (%ebx),%edx
mov    %eax,%edi
lea    (%edx,%esi,1),%eax
cmpb   $0x0,(%eax,%edi,1)
jne    8064338 <fchmod@plt+0x19ed8>
xor    %eax,%eax
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
mov    0xc(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8064270 <fchmod@plt+0x19e10>
test   %al,%al
jne    8064368 <fchmod@plt+0x19f08>
mov    $0x1,%eax
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0xc(%ebx),%eax
mov    (%eax),%eax
add    %esi,%eax
mov    %eax,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0xc(%ebx),%edx
mov    (%edx),%edx
add    %esi,%edx
cmpb   $0x0,(%edx,%eax,1)
je     8064351 <fchmod@plt+0x19ef1>
test   %edi,%edi
je     8064395 <fchmod@plt+0x19f35>
test   %esi,%esi
jne    8064395 <fchmod@plt+0x19f35>
testb  $0x80,0x8077414
je     8064351 <fchmod@plt+0x19ef1>
mov    %edi,0xc(%esp)
add    (%ebx),%esi
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
mov    %esi,0x8(%esp)
call   80642b0 <fchmod@plt+0x19e50>
xor    $0x1,%eax
jmp    8064328 <fchmod@plt+0x19ec8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
xor    %eax,%eax
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x14(%esp)
test   %esi,%esi
je     80643f2 <fchmod@plt+0x19f92>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8064220 <fchmod@plt+0x19dc0>
mov    (%esi),%ebx
add    %eax,%ebx
mov    %ebx,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
cmpb   $0x0,(%ebx,%eax,1)
setne  %al
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80773f8,%eax
mov    0x64(%esp),%edx
mov    0x60(%esp),%ebp
movzbl 0x25(%eax),%ecx
mov    %edx,0x34(%esp)
mov    0xc(%eax),%edx
mov    0x18(%eax),%ebx
test   %cl,%cl
mov    0x4(%edx),%esi
mov    0x10(%eax),%edx
mov    %ebx,0x3c(%esp)
mov    0x4(%edx),%edi
je     8064550 <fchmod@plt+0x1a0f0>
mov    0x28(%eax),%edx
mov    0x4(%edx),%edx
mov    %edx,0x30(%esp)
mov    0x2c(%eax),%edx
mov    %edx,0x38(%esp)
mov    0x34(%esp),%edx
test   %edx,%edx
je     806458f <fchmod@plt+0x1a12f>
mov    0x8(%eax),%edx
mov    %ebp,%ebx
mov    0x34(%esp),%eax
cmp    %edx,%ebp
jne    8064470 <fchmod@plt+0x1a010>
jmp    8064598 <fchmod@plt+0x1a138>
xchg   %ax,%ax
cmp    %edx,%ebx
je     8064598 <fchmod@plt+0x1a138>
sub    $0x1,%eax
mov    0x8(%ebx),%ebx
jne    8064468 <fchmod@plt+0x1a008>
xor    %eax,%eax
mov    %eax,0x14(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x8077690,0x4(%esp)
movl   $0x8077400,(%esp)
mov    %cl,0x2c(%esp)
call   8058fd0 <fchmod@plt+0xeb70>
mov    0x8077690,%eax
mov    %eax,0x4(%esp)
mov    0x8077400,%eax
mov    %eax,(%esp)
call   80592c0 <fchmod@plt+0xee60>
mov    0x80773f8,%ebp
movzbl 0x2c(%esp),%ecx
mov    0x10(%ebp),%edx
cmp    0x4(%ebp),%edx
je     8064588 <fchmod@plt+0x1a128>
test   %cl,%cl
mov    0xc(%edx),%eax
jne    8064568 <fchmod@plt+0x1a108>
test   %eax,%eax
je     8064538 <fchmod@plt+0x1a0d8>
mov    0x34(%esp),%ebx
jmp    8064502 <fchmod@plt+0x1a0a2>
cmp    %edx,%edi
je     8064514 <fchmod@plt+0x1a0b4>
test   %cl,%cl
xchg   %ax,%ax
je     80644f8 <fchmod@plt+0x1a098>
cmp    %edx,0x30(%esp)
je     8064520 <fchmod@plt+0x1a0c0>
mov    0xc(%eax),%eax
sub    $0x1,%ebx
test   %eax,%eax
je     8064538 <fchmod@plt+0x1a0d8>
test   %ebx,%ebx
je     8064538 <fchmod@plt+0x1a0d8>
mov    0x4(%eax),%edx
cmp    %esi,%edx
jne    80644e8 <fchmod@plt+0x1a088>
cmp    %edx,%edi
mov    %eax,0xc(%ebp)
jne    80644ec <fchmod@plt+0x1a08c>
mov    %eax,0x10(%ebp)
jmp    80644ec <fchmod@plt+0x1a08c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x28(%ebp)
mov    0xc(%eax),%eax
sub    $0x1,%ebx
mov    0x38(%esp),%edx
test   %eax,%eax
mov    %edx,0x2c(%ebp)
jne    8064502 <fchmod@plt+0x1a0a2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,0x18(%ebp)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80694c0 <fchmod@plt+0x1f060>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x38(%esp)
movl   $0x0,0x30(%esp)
jmp    8064448 <fchmod@plt+0x19fe8>
lea    0x0(%esi),%esi
mov    0x30(%esp),%ebx
cmp    %ebx,0x4(%edx)
jne    80644de <fchmod@plt+0x1a07e>
mov    %edx,0x28(%ebp)
mov    0x38(%esp),%edx
mov    %edx,0x2c(%ebp)
jmp    80644de <fchmod@plt+0x1a07e>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
jmp    80644de <fchmod@plt+0x1a07e>
mov    %ebp,%ebx
jmp    8064478 <fchmod@plt+0x1a018>
xchg   %ax,%ax
cmp    $0x1,%eax
jne    8064478 <fchmod@plt+0x1a018>
mov    (%ebx),%eax
mov    %cl,0x2c(%esp)
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
movzbl 0x2c(%esp),%ecx
jmp    806447a <fchmod@plt+0x1a01a>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80777c0,%ebx
test   %ebx,%ebx
jne    80646d8 <fchmod@plt+0x1a278>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%esi
cmp    0x8(%ebx),%esi
je     80646c0 <fchmod@plt+0x1a260>
mov    %esi,(%esp)
call   80643c0 <fchmod@plt+0x19f60>
test   %al,%al
je     8064670 <fchmod@plt+0x1a210>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   80642e0 <fchmod@plt+0x19e80>
test   %al,%al
je     8064720 <fchmod@plt+0x1a2c0>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8064220 <fchmod@plt+0x19dc0>
mov    0x80773f8,%edx
mov    0x10(%edx),%ebx
mov    0x20(%edx),%edi
movl   $0x0,(%esp)
mov    %eax,%esi
call   80580b0 <fchmod@plt+0xdc50>
mov    0x80773f8,%ecx
mov    0x10(%ecx),%eax
mov    0x4(%eax),%edx
sub    0x4(%ebx),%edx
mov    0x24(%esp),%eax
cmpl   $0x1,0x18(%ecx)
mov    %ebx,0x10(%ecx)
mov    %edi,0x20(%ecx)
mov    0x20(%esp),%ecx
sbb    $0xffffffff,%edx
mov    %esi,(%ecx)
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   80580b0 <fchmod@plt+0xdc50>
mov    0x80773f8,%eax
mov    0x18(%eax),%ecx
mov    0x10(%eax),%eax
test   %ecx,%ecx
jne    80645fa <fchmod@plt+0x1a19a>
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80643c0 <fchmod@plt+0x19f60>
test   %al,%al
je     80646d3 <fchmod@plt+0x1a273>
mov    0x80773f8,%edx
mov    0x10(%edx),%eax
cmp    0x4(%edx),%eax
je     80645fa <fchmod@plt+0x1a19a>
mov    0xc(%eax),%eax
mov    %eax,0x10(%edx)
jmp    80645fa <fchmod@plt+0x1a19a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
cmp    %eax,0x18(%ebx)
jne    80645e6 <fchmod@plt+0x1a186>
xor    %eax,%eax
jmp    8064663 <fchmod@plt+0x1a203>
nop
movl   $0x5,0x8(%esp)
mov    0x80773e0,%esi
movl   $0x806fb6d,0x4(%esp)
mov    0x80773e4,%ebx
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8058020 <fchmod@plt+0xdbc0>
jmp    806460a <fchmod@plt+0x1a1aa>
jmp    8064740 <fchmod@plt+0x1a2e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0x80773f8,%eax
mov    0xa0(%esp),%edx
mov    0xc(%eax),%ecx
mov    %edx,0x48(%esp)
mov    %dl,0x51(%esp)
mov    0x10(%eax),%edx
cmpb   $0x0,0x48(%esp)
mov    %ecx,0x54(%esp)
mov    0x18(%eax),%ecx
movl   $0x0,0x18(%eax)
mov    %edx,0x58(%esp)
mov    0x1c(%eax),%edx
mov    %ecx,0x5c(%esp)
mov    0x14(%eax),%ecx
mov    %edx,0x60(%esp)
mov    0x28(%eax),%edx
mov    %ecx,0x64(%esp)
mov    0x2c(%eax),%ecx
mov    %edx,0x68(%esp)
movzbl 0x24(%eax),%edx
mov    %ecx,0x6c(%esp)
mov    %dl,0x53(%esp)
je     80647ab <fchmod@plt+0x1a34b>
mov    0x4(%eax),%edx
mov    %edx,0x10(%eax)
movb   $0x0,0x52(%esp)
movl   $0x0,0x44(%esp)
lea    0x7c(%esp),%ecx
lea    0x78(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80645c0 <fchmod@plt+0x1a160>
test   %al,%al
je     8064df3 <fchmod@plt+0x1a993>
mov    0x80773f8,%edx
mov    0x7c(%esp),%eax
mov    0x10(%edx),%ecx
mov    0x8(%edx),%edx
mov    %ecx,0x40(%esp)
mov    0x4(%ecx),%ecx
mov    0x4(%edx),%ebx
lea    (%ecx,%eax,1),%edi
lea    0x1(%ebx),%esi
cmp    %esi,%edi
mov    0x44(%esp),%esi
sete   0x52(%esp)
test   %esi,%esi
je     8064db8 <fchmod@plt+0x1a958>
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    0x78(%esp),%esi
mov    %eax,0x34(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%edi
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8064e18 <fchmod@plt+0x1a9b8>
mov    %esi,%edx
mov    0x34(%esp),%esi
xor    %ebp,%ebp
movl   $0x0,0x30(%esp)
nop
add    (%edi),%edx
mov    %edx,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0x78(%esp),%edx
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
lea    (%eax,%edx,1),%ebx
call   8049fc0 <strlen@plt>
mov    0x2c(%esp),%edx
cmp    %ebx,%eax
je     8064896 <fchmod@plt+0x1a436>
lea    0x1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80667d0 <fchmod@plt+0x1c370>
mov    %ebp,%ecx
test   %cl,%cl
mov    %eax,%esi
movb   $0x0,(%eax,%ebx,1)
jne    8064d80 <fchmod@plt+0x1a920>
mov    0x78(%esp),%edx
mov    0x80773f8,%eax
mov    $0x1,%ecx
mov    0x7c(%esp),%ebx
mov    0x10(%eax),%eax
cmp    %edi,%eax
mov    0x8(%edi),%edi
cmove  %ecx,%ebp
addl   $0x1,0x30(%esp)
cmp    0x30(%esp),%ebx
ja     8064848 <fchmod@plt+0x1a3e8>
mov    %esi,0x34(%esp)
mov    %edx,%esi
cmp    $0x1,%ebx
jne    806491f <fchmod@plt+0x1a4bf>
jmp    8064a10 <fchmod@plt+0x1a5b0>
lea    0x0(%esi),%esi
cmp    %ebx,0x8(%eax)
je     8064a00 <fchmod@plt+0x1a5a0>
cmpb   $0x0,0x25(%eax)
lea    0x0(%esi),%esi
je     80648eb <fchmod@plt+0x1a48b>
cmp    %ebx,0x28(%eax)
je     8064d70 <fchmod@plt+0x1a910>
mov    %ebx,(%esp)
call   8058c30 <fchmod@plt+0xe7d0>
mov    %ebx,(%esp)
call   8058c50 <fchmod@plt+0xe7f0>
mov    0x7c(%esp),%edx
mov    0x80773f8,%eax
mov    0x78(%esp),%esi
sub    $0x1,%edx
mov    %edx,0x7c(%esp)
subl   $0x1,0x14(%eax)
cmp    $0x1,%edx
mov    0x10(%eax),%eax
je     8064a10 <fchmod@plt+0x1a5b0>
mov    0x8(%eax),%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    (%ebx),%ebp
mov    %ebp,(%esp)
add    %ebp,%esi
mov    %eax,%edi
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,0x38(%esp)
call   8062f90 <fchmod@plt+0x18b30>
mov    0x78(%esp),%esi
add    %eax,%esi
mov    0x80773f8,%eax
mov    0x10(%eax),%ebp
sub    %esi,0x14(%eax)
test   %edi,%edi
mov    0x0(%ebp),%eax
je     80649ae <fchmod@plt+0x1a54e>
cmpb   $0x20,-0x1(%eax,%edi,1)
je     80649ae <fchmod@plt+0x1a54e>
lea    0x2(%edi),%ecx
lea    0x1(%edi),%edx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x3c(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,0x0(%ebp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
movb   $0x20,(%eax,%edi,1)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
movb   $0x0,0x1(%eax,%edi,1)
mov    0x80773f8,%eax
mov    0x3c(%esp),%edi
mov    0x10(%eax),%ebp
addl   $0x1,0x14(%eax)
mov    0x0(%ebp),%eax
mov    0x38(%esp),%edx
mov    %edi,%ecx
sub    %esi,%ecx
mov    %eax,(%esp)
lea    0x1(%ecx,%edx,1),%ecx
mov    %ecx,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,0x0(%ebp)
mov    (%ebx),%eax
add    %esi,%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049e40 <strcat@plt>
mov    0x80773f8,%eax
cmp    %ebx,0xc(%eax)
jne    80648d0 <fchmod@plt+0x1a470>
mov    0x10(%eax),%edx
cmp    %ebx,0x8(%eax)
mov    %edx,0xc(%eax)
jne    80648d9 <fchmod@plt+0x1a479>
mov    0x10(%eax),%edx
mov    %edx,0x8(%eax)
jmp    80648d9 <fchmod@plt+0x1a479>
nop
lea    0x0(%esi,%eiz,1),%esi
add    (%eax),%esi
mov    %esi,(%esp)
call   8062f90 <fchmod@plt+0x18b30>
add    0x78(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8063ea0 <fchmod@plt+0x19a40>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8064bd8 <fchmod@plt+0x1a778>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
jmp    8064a65 <fchmod@plt+0x1a605>
mov    0x7c(%esp),%ecx
mov    0x8(%edx),%edx
sub    $0x1,%ecx
mov    %ecx,0x7c(%esp)
addl   $0x1,0x20(%eax)
test   %ecx,%ecx
mov    %edx,0x10(%eax)
je     8064bd8 <fchmod@plt+0x1a778>
mov    (%edx),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x807742c,%edi
cmp    %edi,%eax
jbe    8064bd8 <fchmod@plt+0x1a778>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%esi
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebp
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebx
call   8066a80 <fchmod@plt+0x1c620>
movl   $0x0,0x8(%esp)
sub    %eax,%edi
mov    0x80773f8,%eax
mov    %edi,0x4(%esp)
mov    0x10(%eax),%eax
mov    (%eax),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8062530 <fchmod@plt+0x180d0>
cmp    $0xffffffff,%eax
je     8064bd8 <fchmod@plt+0x1a778>
lea    (%eax,%ebx,1),%edi
cmp    %ebp,%edi
je     8064bd8 <fchmod@plt+0x1a778>
mov    0x80773f8,%eax
add    $0x1,%edi
mov    0x10(%eax),%eax
mov    0x8(%eax),%esi
mov    %eax,(%esp)
call   8058b50 <fchmod@plt+0xe6f0>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8058c10 <fchmod@plt+0xe7b0>
mov    0x78(%esp),%eax
test   %eax,%eax
jne    8064b26 <fchmod@plt+0x1a6c6>
testb  $0x80,0x8077414
mov    $0x0,%eax
cmove  %eax,%ebx
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x8(%eax),%esi
mov    %ebx,%eax
sub    %edi,%eax
lea    0x1(%eax,%ebp,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,(%esi)
mov    0x34(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%edx
add    %edi,%edx
mov    %edx,0x4(%esp)
mov    0x8(%eax),%eax
mov    (%eax),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049e70 <strcpy@plt>
mov    0x80773f8,%edx
addl   $0x1,0x7c(%esp)
mov    0x14(%edx),%eax
cmpb   $0x0,0x25(%edx)
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,0x14(%edx)
je     8064baa <fchmod@plt+0x1a74a>
mov    0x28(%edx),%eax
cmp    0x10(%edx),%eax
je     8064d50 <fchmod@plt+0x1a8f0>
mov    %edi,0x4(%esp)
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
cmp    %edx,0x8(%eax)
jne    8064a48 <fchmod@plt+0x1a5e8>
mov    0x8(%edx),%ecx
mov    %ecx,0x8(%eax)
jmp    8064a48 <fchmod@plt+0x1a5e8>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x80773f8,%ebx
mov    0x10(%ebx),%eax
cmp    0x8(%ebx),%eax
je     8064da0 <fchmod@plt+0x1a940>
mov    0x8(%eax),%eax
addl   $0x1,0x20(%ebx)
mov    %eax,0x10(%ebx)
mov    0x40(%esp),%edx
mov    %edx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
cmpb   $0x0,0x51(%esp)
jne    80647b8 <fchmod@plt+0x1a358>
mov    0x44(%esp),%edi
movl   $0x0,0x4c(%esp)
test   %edi,%edi
je     8064c33 <fchmod@plt+0x1a7d3>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,0x4c(%esp)
call   806a7c0 <fchmod@plt+0x20360>
movl   $0x1,0x4(%esp)
movl   $0x8077720,(%esp)
movb   $0x0,0x8077430
call   804a150 <__sigsetjmp@plt>
movl   $0x5,0x8(%esp)
movl   $0x806fb85,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
testb  $0x4,0x8077414
jne    8064e1f <fchmod@plt+0x1a9bf>
movl   $0x1,(%esp)
lea    0x74(%esp),%esi
call   8053700 <fchmod@plt+0x92a0>
lea    0x73(%esp),%ebx
call   806aac0 <fchmod@plt+0x20660>
lea    0x77(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x76(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x75(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   805b750 <fchmod@plt+0x112f0>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x7c(%esp)
lea    0x7c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     8064cf9 <fchmod@plt+0x1a899>
cmpw   $0x35,0x10(%eax)
je     8064e30 <fchmod@plt+0x1a9d0>
movzbl 0x74(%esp),%eax
mov    %eax,0x8(%esp)
movzbl 0x73(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1caa0>
mov    0x8077400,%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
movl   $0x0,0x8077400
00
call   8067ba0 <fchmod@plt+0x1d740>
movl   $0x0,(%esp)
call   8053700 <fchmod@plt+0x92a0>
call   806aac0 <fchmod@plt+0x20660>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x2c(%edx),%ecx
cmp    %ecx,%edi
jae    8064baa <fchmod@plt+0x1a74a>
mov    0x8(%eax),%eax
sub    %edi,%ecx
add    %ecx,%ebx
mov    %ebx,0x2c(%edx)
mov    %eax,0x28(%edx)
jmp    8064baa <fchmod@plt+0x1a74a>
lea    0x0(%esi),%esi
mov    0x10(%eax),%edx
sub    %esi,%edi
add    %edi,0x2c(%eax)
mov    %edx,0x28(%eax)
jmp    80648eb <fchmod@plt+0x1a48b>
mov    %eax,0x34(%esp)
mov    0x80773f8,%eax
mov    0x7c(%esp),%ebx
mov    0x78(%esp),%esi
mov    0x10(%eax),%eax
jmp    80648c0 <fchmod@plt+0x1a460>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,0x18(%ebx)
jmp    8064c00 <fchmod@plt+0x1a7a0>
lea    0x0(%esi),%esi
cmpb   $0x0,0x51(%esp)
je     8064dce <fchmod@plt+0x1a96e>
mov    (%edx),%eax
sub    %ecx,%ebx
cmpb   $0x0,(%eax)
setne  %al
movzbl %al,%eax
add    %ebx,%eax
mov    0x40(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8064400 <fchmod@plt+0x19fa0>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    %eax,0x40(%esp)
mov    %eax,0x44(%esp)
jmp    8064807 <fchmod@plt+0x1a3a7>
mov    0x44(%esp),%edi
test   %edi,%edi
je     8064e06 <fchmod@plt+0x1a9a6>
cmpb   $0x0,0x48(%esp)
jne    8064c27 <fchmod@plt+0x1a7c7>
movb   $0x1,0x80773bc
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%eax
jmp    806491f <fchmod@plt+0x1a4bf>
movl   $0x1,(%esp)
call   806aae0 <fchmod@plt+0x20680>
jmp    8064c84 <fchmod@plt+0x1a824>
mov    0x44(%esp),%esi
test   %esi,%esi
je     8064d2e <fchmod@plt+0x1a8ce>
xor    %eax,%eax
cmpb   $0x0,0x52(%esp)
je     8064e53 <fchmod@plt+0x1a9f3>
mov    0x4c(%esp),%ecx
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x44(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    %eax,0x80773fc
mov    0x80773f8,%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
mov    0x80773f8,%eax
mov    0x8077690,%edx
mov    0x8077400,%ebx
mov    %edx,0x8(%eax)
mov    %ebx,0x4(%eax)
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    %ebx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%eax
mov    0x54(%esp),%ecx
mov    0x58(%esp),%edx
cmpb   $0x0,0x25(%eax)
mov    %ecx,0xc(%eax)
mov    0x5c(%esp),%ecx
mov    %edx,0x10(%eax)
mov    0x60(%esp),%edx
mov    %ecx,0x18(%eax)
mov    0x64(%esp),%ecx
mov    %edx,0x1c(%eax)
mov    %ecx,0x14(%eax)
je     8064eef <fchmod@plt+0x1aa8f>
mov    0x68(%esp),%edx
mov    0x6c(%esp),%ecx
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
movzbl 0x53(%esp),%edx
movl   $0x0,0x8077400
00
test   %dl,%dl
mov    %dl,0x24(%eax)
je     8064f11 <fchmod@plt+0x1aab1>
movb   $0x1,0x80773bc
jmp    8064d2e <fchmod@plt+0x1a8ce>
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
jmp    8064f05 <fchmod@plt+0x1aaa5>
nop
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8064740 <fchmod@plt+0x1a2e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   8064740 <fchmod@plt+0x1a2e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x80773f8,%eax
mov    0x90(%esp),%ebx
movb   $0x0,0x58(%esp)
movb   $0x0,0x59(%esp)
mov    0xc(%eax),%edx
mov    0x10(%eax),%ecx
mov    0x18(%eax),%edi
mov    0x1c(%eax),%ebp
mov    %edx,0x30(%esp)
mov    0x8077414,%edx
mov    %ecx,0x34(%esp)
movzbl 0x25(%eax),%eax
movb   $0x0,0x5a(%esp)
movb   $0x0,0x5b(%esp)
mov    %edx,%ecx
and    $0x2,%ecx
mov    %ecx,0x38(%esp)
mov    %edx,%ecx
and    $0x2000,%ecx
mov    %ecx,0x3c(%esp)
mov    %edx,%ecx
and    $0xdb,%dh
and    $0x400,%ecx
or     $0x2,%edx
mov    %ecx,0x40(%esp)
mov    %al,0x4e(%esp)
mov    %edx,0x8077414
call   805f740 <fchmod@plt+0x152e0>
mov    0x8077428,%edx
mov    0x8077424,%ecx
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x44(%esp)
mov    %ecx,0x48(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8077428
call   8066920 <fchmod@plt+0x1c4c0>
cmpb   $0x0,0x4e(%esp)
mov    %eax,0x8077424
jne    80652c8 <fchmod@plt+0x1ae68>
mov    0x80773f8,%eax
movb   $0x0,0x4f(%esp)
mov    0x4(%eax),%edx
lea    0x5c(%esp),%esi
movl   $0xffffffff,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
call   805fab0 <fchmod@plt+0x15650>
jmp    8065075 <fchmod@plt+0x1ac15>
mov    0x80773f8,%eax
mov    %ebx,0x8(%esp)
mov    0x10(%eax),%edx
mov    (%edx),%edx
mov    %edx,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   80665e0 <fchmod@plt+0x1c180>
test   %al,%al
jne    8065190 <fchmod@plt+0x1ad30>
mov    0x80773f8,%eax
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   805f7a0 <fchmod@plt+0x15340>
test   %al,%al
jne    8065050 <fchmod@plt+0x1abf0>
cmpb   $0x0,0x4e(%esp)
je     8065100 <fchmod@plt+0x1aca0>
mov    0x8077414,%eax
test   %eax,%eax
js     80650c4 <fchmod@plt+0x1ac64>
cmpb   $0x0,0x4f(%esp)
jne    8065352 <fchmod@plt+0x1aef2>
mov    0x80773f8,%eax
mov    0x8(%eax),%edx
cmp    %edx,0x4(%eax)
mov    0x68(%esp),%edx
je     806535c <fchmod@plt+0x1aefc>
mov    0x6c(%esp),%edi
cmpb   $0x0,0x5b(%esp)
je     8065348 <fchmod@plt+0x1aee8>
mov    %edx,0x2c(%eax)
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    0x80773f8,%eax
movb   $0x1,0x25(%eax)
mov    0x8077428,%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8077424,%eax
mov    0x44(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x8077428
call   8049be0 <free@plt>
mov    0x48(%esp),%edx
mov    0x80773f8,%eax
mov    0x30(%esp),%ecx
mov    %edx,0x8077424
mov    0x34(%esp),%edx
mov    %edi,0x18(%eax)
mov    %ecx,0xc(%eax)
mov    %ebp,0x1c(%eax)
mov    %edx,0x10(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
jne    8065156 <fchmod@plt+0x1acf6>
andl   $0xfffffffd,0x8077414
mov    0x3c(%esp),%eax
test   %eax,%eax
je     8065168 <fchmod@plt+0x1ad08>
orl    $0x2000,0x8077414
00
mov    0x40(%esp),%ebp
test   %ebp,%ebp
je     806517a <fchmod@plt+0x1ad1a>
orl    $0x400,0x8077414
00
movzbl 0x5a(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
xor    $0x1,%eax
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8066ae0 <fchmod@plt+0x1c680>
mov    0x80773f8,%edx
mov    %eax,%esi
mov    0x5c(%esp),%eax
add    0x18(%edx),%eax
mov    %eax,0x4(%esp)
mov    0x10(%edx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %esi,0x4(%esp)
movl   $0x0,0xc(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %eax,%esi
call   806a7c0 <fchmod@plt+0x20360>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   806acb0 <fchmod@plt+0x20850>
movl   $0x5,0x8(%esp)
movl   $0x806fb98,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
movl   $0x806a7c0,0x1c(%esp)
movl   $0x0,0x18(%esp)
mov    %ebx,0xc(%esp)
movl   $0x200,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x20(%esp)
lea    0x59(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x10(%esp)
movl   $0x0,(%esp)
call   805d3f0 <fchmod@plt+0x12f90>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
cmp    $0xffffffff,%eax
sete   0x5a(%esp)
call   806acb0 <fchmod@plt+0x20850>
mov    %esi,(%esp)
call   8049be0 <free@plt>
cmpb   $0x0,0x5a(%esp)
jne    80650a9 <fchmod@plt+0x1ac49>
mov    0x80773d8,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049ae0 <strcmp@plt>
test   %eax,%eax
je     80650a9 <fchmod@plt+0x1ac49>
mov    0x80773f8,%eax
lea    0x18(%eax),%edx
subl   $0x1,0x18(%eax)
mov    %ebx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    0x10(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    0x5a(%esp),%eax
mov    %eax,0x4(%esp)
call   805fe90 <fchmod@plt+0x15a30>
jmp    80650a9 <fchmod@plt+0x1ac49>
lea    0x5b(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    0x8077414,%edx
test   %edx,%edx
mov    %eax,0x80773fc
mov    0x80773f8,%eax
js     806536b <fchmod@plt+0x1af0b>
mov    0x8(%eax),%edx
mov    (%edx),%edx
cmpb   $0x0,(%edx)
setne  0x4f(%esp)
movb   $0x0,0x25(%eax)
jmp    806502e <fchmod@plt+0x1abce>
lea    0x0(%esi),%esi
mov    %edi,0x2c(%eax)
mov    %edx,%edi
jmp    80650eb <fchmod@plt+0x1ac8b>
call   8066b90 <fchmod@plt+0x1c730>
jmp    80650c4 <fchmod@plt+0x1ac64>
mov    0x6c(%esp),%edi
add    %edx,%edi
mov    %edi,0x6c(%esp)
jmp    80650dd <fchmod@plt+0x1ac7d>
movb   $0x0,0x4f(%esp)
jmp    8065339 <fchmod@plt+0x1aed9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x7c,%esp
lea    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,0x6c(%esp)
mov    %esi,0x70(%esp)
mov    %edi,0x74(%esp)
mov    %ebp,0x78(%esp)
call   804a100 <pipe@plt>
cmp    $0xffffffff,%eax
je     80654c8 <fchmod@plt+0x1b068>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a100 <pipe@plt>
cmp    $0xffffffff,%eax
je     80654c8 <fchmod@plt+0x1b068>
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a100 <pipe@plt>
cmp    $0xffffffff,%eax
je     80654c8 <fchmod@plt+0x1b068>
movl   $0x5,0x8(%esp)
movl   $0x806fd74,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   804a190 <fork@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80654f8 <fchmod@plt+0x1b098>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
call   804a190 <fork@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    8065598 <fchmod@plt+0x1b138>
mov    0x48(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
test   %eax,%eax
jne    8065461 <fchmod@plt+0x1b001>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x54(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
cmp    $0x1,%eax
je     8065860 <fchmod@plt+0x1b400>
mov    $0xffffffff,%ebx
mov    %ebx,(%esp)
call   804a3d0 <close@plt>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806fbab,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    0x6c(%esp),%ebx
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
mov    0x78(%esp),%ebp
add    $0x7c,%esp
ret
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x80(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049b00 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8065461 <fchmod@plt+0x1b001>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
test   %eax,%eax
jne    8065466 <fchmod@plt+0x1b006>
mov    %ebx,(%esp)
call   804a3d0 <close@plt>
mov    0x4c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
cmp    $0x1,%eax
jne    8065466 <fchmod@plt+0x1b006>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x0,0x8(%esp)
movl   $0x806c3b8,0x4(%esp)
movl   $0x806c3b8,(%esp)
call   8049cd0 <execlp@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
nop
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
call   804a190 <fork@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     80657b0 <fchmod@plt+0x1b350>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    %ebp,%eax
shr    $0x1f,%eax
test   %al,%al
jne    8065830 <fchmod@plt+0x1b3d0>
mov    %ebx,%eax
shr    $0x1f,%eax
test   %al,%al
jne    8065830 <fchmod@plt+0x1b3d0>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
js     8065830 <fchmod@plt+0x1b3d0>
mov    0x58(%esp),%eax
movl   $0x5,0x4(%esp)
mov    %eax,(%esp)
call   8049c00 <fpathconf@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     806589c <fchmod@plt+0x1b43c>
mov    0x1c(%esp),%esi
xor    %edi,%edi
add    $0x1,%esi
mov    %esi,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %ebx,0x28(%esp)
mov    %ebp,0x2c(%esp)
mov    %eax,0x24(%esp)
mov    %eax,%ebx
mov    %eax,%ebp
jmp    806565f <fchmod@plt+0x1b1ff>
lea    0x0(%esi),%esi
add    0x1c(%esp),%esi
add    %eax,%edi
mov    %ebp,(%esp)
mov    %esi,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
lea    (%eax,%edi,1),%ebx
mov    %eax,%ebp
mov    0x1c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8049b20 <read@plt>
test   %eax,%eax
jne    8065648 <fchmod@plt+0x1b1e8>
mov    %ebx,%ecx
mov    0x28(%esp),%ebx
movb   $0x0,(%ecx)
mov    0x58(%esp),%eax
mov    %ebp,0x24(%esp)
mov    0x2c(%esp),%ebp
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x24(%esp),%edx
movzbl (%edx),%eax
mov    %edx,%esi
mov    %edx,%ecx
add    $0x1,%esi
test   %al,%al
je     80656e9 <fchmod@plt+0x1b289>
lea    0x0(%esi),%esi
cmp    $0xa,%al
mov    %esi,%edi
lea    -0x1(%esi),%edx
je     80656bd <fchmod@plt+0x1b25d>
cmp    $0xd,%al
jne    80656d3 <fchmod@plt+0x1b273>
cmp    %edx,%ecx
movb   $0x0,-0x1(%esi)
je     80656d1 <fchmod@plt+0x1b271>
mov    %ecx,(%esp)
call   8064f60 <fchmod@plt+0x1ab00>
test   %al,%al
je     80656e9 <fchmod@plt+0x1b289>
mov    %esi,%ecx
movzbl (%esi),%eax
add    $0x1,%esi
test   %al,%al
jne    80656b0 <fchmod@plt+0x1b250>
cmp    %edi,%ecx
je     80656e9 <fchmod@plt+0x1b289>
mov    %ecx,(%esp)
call   8064f60 <fchmod@plt+0x1ab00>
mov    0x24(%esp),%edx
mov    %edx,(%esp)
call   8049be0 <free@plt>
call   805f720 <fchmod@plt+0x152c0>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
movb   $0x1,0x80773bc
call   8049e30 <waitpid@plt>
lea    0x40(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049e30 <waitpid@plt>
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049e30 <waitpid@plt>
mov    0x3c(%esp),%eax
test   $0x7f,%al
jne    80658c9 <fchmod@plt+0x1b469>
movzbl %ah,%eax
test   %eax,%eax
jne    80658c9 <fchmod@plt+0x1b469>
mov    0x40(%esp),%eax
test   $0x7f,%al
jne    80658ea <fchmod@plt+0x1b48a>
movzbl %ah,%eax
test   %eax,%eax
jne    80658ea <fchmod@plt+0x1b48a>
mov    0x44(%esp),%eax
test   $0x7f,%al
jne    806578e <fchmod@plt+0x1b32e>
movzbl %ah,%eax
test   %eax,%eax
je     806590b <fchmod@plt+0x1b4ab>
movl   $0x5,0x8(%esp)
movl   $0x806fbfe,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    80654e4 <fchmod@plt+0x1b084>
nop
mov    0x50(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
test   %eax,%eax
jne    8065461 <fchmod@plt+0x1b001>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
mov    0x5c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049ac0 <dup2@plt>
cmp    $0x1,%eax
jne    8065461 <fchmod@plt+0x1b001>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x0,0x8(%esp)
movl   $0x806fbc9,0x4(%esp)
movl   $0x806fbc9,(%esp)
call   8049cd0 <execlp@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x5,0x8(%esp)
movl   $0x806fb2e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    80654e4 <fchmod@plt+0x1b084>
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x0,0xc(%esp)
movl   $0x806fbc1,0x8(%esp)
movl   $0x806fbc4,0x4(%esp)
movl   $0x806fbc4,(%esp)
call   8049cd0 <execlp@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <close@plt>
movl   $0x5,0x8(%esp)
movl   $0x806fda4,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    80654e4 <fchmod@plt+0x1b084>
movl   $0x5,0x8(%esp)
movl   $0x806fbce,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    80654e4 <fchmod@plt+0x1b084>
movl   $0x5,0x8(%esp)
movl   $0x806fbe5,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    80654e4 <fchmod@plt+0x1b084>
xor    %eax,%eax
jmp    80654e4 <fchmod@plt+0x1b084>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80773f8,%eax
movb   $0x0,0x4b(%esp)
mov    0x18(%eax),%edx
movzbl 0x25(%eax),%ebx
mov    0x1c(%eax),%ecx
mov    0x14(%eax),%esi
mov    %edx,0x30(%esp)
mov    0x20(%eax),%edx
test   %bl,%bl
mov    %ecx,0x38(%esp)
mov    %edx,0x34(%esp)
mov    0x10(%eax),%edx
mov    0x4(%edx),%edx
mov    %edx,0x3c(%esp)
je     8065967 <fchmod@plt+0x1b507>
mov    0x28(%eax),%edx
mov    0x4(%edx),%edi
movb   $0x0,0x25(%eax)
test   %esi,%esi
je     8065a90 <fchmod@plt+0x1b630>
call   804a1c0 <endwin@plt>
mov    0x8077694,%eax
test   %eax,%eax
je     8065ac0 <fchmod@plt+0x1b660>
mov    0x8077304,%edx
mov    0x80(%esp),%ecx
mov    %ecx,-0x8(%eax,%edx,4)
call   804a190 <fork@plt>
cmp    $0x0,%eax
je     8065d0c <fchmod@plt+0x1b8ac>
jl     8065a68 <fchmod@plt+0x1b608>
movl   $0x0,(%esp)
call   805a660 <fchmod@plt+0x10200>
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8049d30 <wait@plt>
call   804a2a0 <doupdate@plt>
call   805ab60 <fchmod@plt+0x10700>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
call   8059910 <fchmod@plt+0xf4b0>
mov    0x4c(%esp),%eax
test   $0x7f,%al
jne    80659ec <fchmod@plt+0x1b58c>
movzbl %ah,%eax
test   %eax,%eax
je     8065b60 <fchmod@plt+0x1b700>
movl   $0x5,0x8(%esp)
movl   $0x806fc2f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%esi
mov    0x80773f8,%eax
mov    %bl,0x25(%eax)
mov    %esi,(%esp)
call   8049fc0 <strlen@plt>
mov    %eax,%ebx
mov    0x80773c8,%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    0x80773c8,%eax
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
call   804a440 <__sprintf_chk@plt>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806fb2e,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
add    $0x6c,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x806fc14,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8077304,%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
movl   $0x806fc89,0x4(%esp)
mov    %eax,%edx
mov    %eax,0x8077694
mov    0x80773c8,%eax
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   804a170 <strtok@plt>
mov    0x2c(%esp),%edx
mov    %eax,(%edx)
jmp    8065b28 <fchmod@plt+0x1b6c8>
mov    0x8077304,%eax
add    $0x1,%eax
mov    %eax,0x8077304
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8077694,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x8077304,%edx
mov    %eax,0x8077694
mov    %ebp,-0xc(%eax,%edx,4)
movl   $0x806fc89,0x4(%esp)
movl   $0x0,(%esp)
call   804a170 <strtok@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    8065af8 <fchmod@plt+0x1b698>
mov    0x8077694,%eax
mov    0x8077304,%edx
movl   $0x0,-0x4(%eax,%edx,4)
jmp    8065987 <fchmod@plt+0x1b527>
lea    0x0(%esi),%esi
test   %bl,%bl
jne    8065baf <fchmod@plt+0x1b74f>
mov    0x80(%esp),%ecx
mov    %ecx,(%esp)
call   80503e0 <fchmod@plt+0x5f80>
mov    0x38(%esp),%ecx
xor    %ebx,%ebx
mov    0x34(%esp),%edx
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ecx
mov    %edx,0x8(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8061160 <fchmod@plt+0x16d00>
call   80694c0 <fchmod@plt+0x1f060>
movl   $0x1,(%esp)
call   805a660 <fchmod@plt+0x10200>
jmp    8065a5c <fchmod@plt+0x1b5fc>
lea    0x4b(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x5c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    0x8077414,%ebx
test   %ebx,%ebx
mov    %eax,0x80773fc
js     8065d2b <fchmod@plt+0x1b8cb>
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
movzbl (%eax),%ebp
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
sub    %eax,%esi
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   80503e0 <fchmod@plt+0x5f80>
mov    0x80773f8,%eax
mov    0x8077414,%ecx
mov    0x4(%eax),%ebx
test   %ecx,%ecx
mov    %ebx,%edx
js     8065c62 <fchmod@plt+0x1b802>
mov    %ebp,%ecx
test   %cl,%cl
jne    8065ce3 <fchmod@plt+0x1b883>
cmp    %edx,0x8(%eax)
je     8065cf5 <fchmod@plt+0x1b895>
mov    0x58(%esp),%edx
mov    %edx,0x30(%esp)
mov    0x5c(%esp),%edx
cmpb   $0x0,0x4b(%esp)
je     8065cde <fchmod@plt+0x1b87e>
mov    0x30(%esp),%ecx
mov    %edx,0x30(%esp)
mov    %ecx,0x2c(%eax)
movl   $0x80773fc,(%esp)
call   8058e70 <fchmod@plt+0xea10>
mov    %ebx,(%esp)
call   8058d20 <fchmod@plt+0xe8c0>
mov    0x80773f8,%eax
mov    0x34(%esp),%edx
add    %esi,0x14(%eax)
mov    %edx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    0x2c(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8061160 <fchmod@plt+0x16d00>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
movb   $0x1,0x25(%eax)
mov    %edx,0x28(%eax)
mov    0x18(%eax),%edx
mov    %edx,0x2c(%eax)
jmp    8065b73 <fchmod@plt+0x1b713>
mov    %edx,0x2c(%eax)
jmp    8065c89 <fchmod@plt+0x1b829>
call   8066b90 <fchmod@plt+0x1c730>
mov    0x80773f8,%eax
mov    0x4(%eax),%edx
jmp    8065c62 <fchmod@plt+0x1b802>
mov    0x58(%esp),%ecx
mov    0x5c(%esp),%edx
mov    %ecx,0x30(%esp)
add    %ecx,%edx
mov    %edx,0x5c(%esp)
jmp    8065c77 <fchmod@plt+0x1b817>
mov    0x8077694,%eax
mov    %eax,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049d70 <execvp@plt>
movl   $0x1,(%esp)
call   8049f30 <exit@plt>
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
sub    %eax,%esi
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   80503e0 <fchmod@plt+0x5f80>
mov    0x80773f8,%eax
mov    0x4(%eax),%ebx
mov    %ebx,%edx
jmp    8065c62 <fchmod@plt+0x1b802>
nop
push   %esi
push   %ebx
sub    $0x34,%esp
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804f830 <fchmod@plt+0x53d0>
testb  $0x1,0x8077417
jne    8065eb8 <fchmod@plt+0x1ba58>
test   %eax,%eax
mov    %eax,%ebx
je     8065f18 <fchmod@plt+0x1bab8>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
jne    8065e48 <fchmod@plt+0x1b9e8>
mov    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8051640 <fchmod@plt+0x71e0>
test   %al,%al
je     8065e70 <fchmod@plt+0x1ba10>
mov    0x80773c8,%esi
mov    %ebx,(%esp)
test   %esi,%esi
je     8065f08 <fchmod@plt+0x1baa8>
call   8065920 <fchmod@plt+0x1b4c0>
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049d50 <unlink@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
movl   $0x1,0x80777bc
00
call   806aa90 <fchmod@plt+0x20630>
test   %esi,%esi
je     8065f58 <fchmod@plt+0x1baf8>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
nop
jne    8065ec8 <fchmod@plt+0x1ba68>
movl   $0x5,0x8(%esp)
movl   $0x806fc43,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8052540 <fchmod@plt+0x80e0>
test   %al,%al
jne    8065dc7 <fchmod@plt+0x1b967>
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b5a0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049c80 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
call   805a440 <fchmod@plt+0xffe0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806fc5d,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8065380 <fchmod@plt+0x1af20>
mov    %eax,%esi
nop
jmp    8065ddf <fchmod@plt+0x1b97f>
lea    0x0(%esi),%esi
call   804a080 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049f00 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b5a0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049c80 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8065e3e <fchmod@plt+0x1b9de>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806fc14,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8065e3e <fchmod@plt+0x1b9de>
jmp    8065f90 <fchmod@plt+0x1bb30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
movzbl 0x25(%eax),%esi
mov    0x1c(%eax),%ecx
mov    0x10(%eax),%ebp
mov    %edx,0x28(%esp)
mov    %esi,%edx
test   %dl,%dl
mov    %ecx,0x2c(%esp)
jne    806606b <fchmod@plt+0x1bc0b>
mov    0x4(%eax),%edx
xor    %ebx,%ebx
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    %edx,0x10(%eax)
jmp    8065ff9 <fchmod@plt+0x1bb99>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   80581d0 <fchmod@plt+0xdd70>
cmp    $0x1,%al
mov    0x80773f8,%eax
sbb    $0xffffffff,%ebx
mov    0x10(%eax),%edx
cmp    %edx,0x8(%eax)
jne    8065fd8 <fchmod@plt+0x1bb78>
mov    (%edx),%edi
mov    0x18(%eax),%ecx
cmpb   $0x0,(%edi,%ecx,1)
jne    8065fd8 <fchmod@plt+0x1bb78>
mov    %esi,%ecx
test   %cl,%cl
jne    80660ce <fchmod@plt+0x1bc6e>
mov    0x4(%edx),%esi
mov    0x2c(%esp),%ecx
mov    0x28(%esp),%edx
mov    0x14(%eax),%edi
mov    %ebp,0x10(%eax)
mov    $0x806e126,%ebp
mov    %ecx,0x1c(%eax)
mov    %edx,0x18(%eax)
movl   $0x5,0x8(%esp)
movl   $0x806fdc8,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8058d50 <fchmod@plt+0xe8f0>
mov    %eax,0x80773fc
mov    0x80773f8,%eax
movb   $0x0,0x25(%eax)
jmp    8065fbb <fchmod@plt+0x1bb5b>
mov    0x4(%eax),%eax
mov    0x4(%edx),%esi
sub    0x4(%eax),%esi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
add    $0x1,%esi
movl   $0x80773fc,(%esp)
mov    %eax,%edi
call   8058e70 <fchmod@plt+0xea10>
mov    0x80773f8,%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %ebp,0x10(%eax)
movb   $0x1,0x25(%eax)
mov    %edx,0x18(%eax)
mov    %ecx,0x1c(%eax)
movl   $0x5,0x8(%esp)
movl   $0x806fc7b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,%ebp
jmp    806602f <fchmod@plt+0x1bbcf>
jmp    8066140 <fchmod@plt+0x1bce0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x24,%esp
movl   $0x5,0x8(%esp)
movl   $0x806beda,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8068860 <fchmod@plt+0x1e400>
testb  $0x4,0x8077414
mov    %eax,%esi
je     80661f8 <fchmod@plt+0x1bd98>
movl   $0x1,(%esp)
call   806aae0 <fchmod@plt+0x20680>
mov    0x1c(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
xor    %edx,%edx
mov    %eax,%ebx
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80661bf <fchmod@plt+0x1bd5f>
mov    (%esi,%edx,4),%ecx
mov    %cl,(%ebx,%edx,1)
add    $0x1,%edx
cmp    %edx,0x1c(%esp)
ja     80661b0 <fchmod@plt+0x1bd50>
movb   $0x0,(%ebx,%edx,1)
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    0x1c(%esp),%eax
mov    %ebx,(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
call   805b430 <fchmod@plt+0x10fd0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
jmp    8066195 <fchmod@plt+0x1bd35>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     8066236 <fchmod@plt+0x1bdd6>
xor    %cl,%cl
mov    $0xcccccccd,%ebx
lea    0x0(%esi),%esi
mov    %edx,%eax
add    $0x1,%ecx
mul    %ebx
shr    $0x3,%edx
test   %edx,%edx
jne    8066228 <fchmod@plt+0x1bdc8>
mov    %ecx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    %ebx,0x24(%esp)
mov    0x30(%esp),%ebx
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,0x28(%esp)
mov    %ebx,(%esp)
call   804a3a0 <strtol@plt>
mov    %eax,%esi
call   804a080 <__errno_location@plt>
cmpl   $0x22,(%eax)
mov    $0x0,%eax
je     8066299 <fchmod@plt+0x1be39>
cmpb   $0x0,(%ebx)
je     8066299 <fchmod@plt+0x1be39>
mov    0x1c(%esp),%edx
cmpb   $0x0,(%edx)
jne    8066299 <fchmod@plt+0x1be39>
mov    0x34(%esp),%eax
test   %eax,%eax
je     80662a8 <fchmod@plt+0x1be48>
mov    0x34(%esp),%eax
mov    %esi,(%eax)
mov    $0x1,%eax
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
jmp    8066299 <fchmod@plt+0x1be39>
nop
mov    0x8(%esp),%ecx
mov    0x4(%esp),%eax
test   %ecx,%ecx
lea    (%eax,%ecx,1),%edx
je     80662cf <fchmod@plt+0x1be6f>
nop
cmpb   $0x0,(%eax)
jne    80662c8 <fchmod@plt+0x1be68>
movb   $0xa,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    80662c0 <fchmod@plt+0x1be60>
repz ret
jmp    80662e0 <fchmod@plt+0x1be80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
movzbl (%eax),%edx
test   %dl,%dl
jne    80662fa <fchmod@plt+0x1be9a>
jmp    806630c <fchmod@plt+0x1beac>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
test   %dl,%dl
je     806630c <fchmod@plt+0x1beac>
cmp    $0xa,%dl
jne    80662f0 <fchmod@plt+0x1be90>
movb   $0x0,(%eax)
add    $0x1,%eax
movzbl (%eax),%edx
test   %dl,%dl
jne    80662fa <fchmod@plt+0x1be9a>
repz ret
xchg   %ax,%ax
sub    $0x2c,%esp
mov    %ebx,0x24(%esp)
mov    0x30(%esp),%ebx
mov    %esi,0x28(%esp)
mov    0x34(%esp),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0a0 <regexec@plt>
xor    %edx,%edx
test   %eax,%eax
jne    8066377 <fchmod@plt+0x1bf17>
movl   $0x3,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
sete   %dl
mov    %edx,%eax
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
mov    0x38(%esp),%ebx
mov    0x34(%esp),%edx
cmp    %esi,%ebx
jbe    80663bf <fchmod@plt+0x1bf5f>
cmpb   $0x0,-0x1(%ebx)
je     80664b8 <fchmod@plt+0x1c058>
cmp    %esi,%ebx
jb     80664b8 <fchmod@plt+0x1c058>
mov    0x8077414,%eax
test   $0x4,%ah
je     8066468 <fchmod@plt+0x1c008>
test   $0x20,%ah
je     8066488 <fchmod@plt+0x1c028>
movl   $0x0,0x10(%esp)
movl   $0x80777e0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80776c0,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    80664b8 <fchmod@plt+0x1c058>
add    0x80777e0,%esi
cmp    %esi,%ebx
jae    8066422 <fchmod@plt+0x1bfc2>
jmp    80664b8 <fchmod@plt+0x1c058>
lea    0x0(%esi),%esi
mov    %eax,%esi
lea    0x1(%esi),%eax
movl   $0x1,0x10(%esp)
movl   $0x80777e0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x80776c0,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
jne    80664e8 <fchmod@plt+0x1c088>
mov    0x80777e0,%eax
lea    0x1(%esi,%eax,1),%eax
cmp    %eax,%ebx
jae    8066420 <fchmod@plt+0x1bfc0>
jmp    80664e8 <fchmod@plt+0x1c088>
nop
test   $0x2,%al
je     80664c8 <fchmod@plt+0x1c068>
test   $0x20,%ah
nop
jne    8066530 <fchmod@plt+0x1c0d0>
mov    %ebx,0x30(%esp)
mov    %edx,0x34(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    8049ad0 <strstr@plt>
xor    %eax,%eax
cmp    %esi,%ebx
seta   %al
mov    %eax,0x10(%esp)
movl   $0x80777e0,0xc(%esp)
movl   $0xa,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x80776c0,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
je     80664e0 <fchmod@plt+0x1c080>
nop
xor    %esi,%esi
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
test   $0x20,%ah
jne    8066518 <fchmod@plt+0x1c0b8>
mov    %ebx,0x30(%esp)
mov    %edx,0x34(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804dad0 <fchmod@plt+0x3670>
nop
mov    0x80777e0,%esi
add    %ebx,%esi
mov    %esi,0x4(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80777e0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x80776c0,(%esp)
call   804a0a0 <regexec@plt>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
mov    %ebx,0x38(%esp)
mov    %esi,0x30(%esp)
mov    %edx,0x34(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804d9f0 <fchmod@plt+0x3590>
xchg   %ax,%ax
mov    %ebx,0x38(%esp)
mov    %esi,0x30(%esp)
mov    %edx,0x34(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804d860 <fchmod@plt+0x3400>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
call   804a1c0 <endwin@plt>
mov    %ebx,(%esp)
call   8049e00 <perror@plt>
add    $0x18,%esp
pop    %ebx
jmp    804a2a0 <doupdate@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x14(%esp)
mov    %esi,(%esp)
call   8049ed0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80665a0 <fchmod@plt+0x1c140>
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     806658d <fchmod@plt+0x1c12d>
movl   $0x5,0x8(%esp)
movl   $0x806fe84,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   80597f0 <fchmod@plt+0xf390>
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
mov    %ebx,0x2c(%esp)
mov    0x44(%esp),%ebx
mov    %esi,0x30(%esp)
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%edi
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <strlen@plt>
mov    0x40(%esp),%ebp
mov    %ebx,(%esp)
add    %eax,%ebp
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   804d590 <fchmod@plt+0x3130>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
lea    (%ebx,%ebp,1),%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    0x40(%esp),%edx
test   %edx,%edx
jne    80666c8 <fchmod@plt+0x1c268>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    $0x1,%edx
cmp    %ebp,%eax
je     8066692 <fchmod@plt+0x1c232>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
mov    %eax,%edx
xor    $0x1,%edx
mov    %edi,(%esp)
mov    %dl,0x1c(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
movzbl 0x1c(%esp),%edx
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    %edx,%eax
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804d030 <fchmod@plt+0x2bd0>
xor    %edx,%edx
test   %al,%al
je     806666c <fchmod@plt+0x1c20c>
jmp    8066692 <fchmod@plt+0x1c232>
sub    $0x1c,%esp
mov    %esi,0x18(%esp)
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
mov    %ebx,0x14(%esp)
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   8049ec0 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8066718 <fchmod@plt+0x1c2b8>
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     8066705 <fchmod@plt+0x1c2a5>
movl   $0x5,0x8(%esp)
movl   $0x806fe84,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   80597f0 <fchmod@plt+0xf390>
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    %ebx,0x14(%esp)
mov    0x24(%esp),%ebx
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
lea    0x1(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esi)
movb   $0x0,(%eax,%ebx,1)
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %esi,0x18(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x14(%esp)
mov    (%esi),%ebx
test   %ebx,%ebx
je     80667be <fchmod@plt+0x1c35e>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,(%esi)
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    $0x806e126,%edx
mov    %ebx,0x10(%esp)
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %esi,0x14(%esp)
mov    0x28(%esp),%esi
mov    %edi,0x18(%esp)
test   %ebx,%ebx
cmove  %edx,%ebx
cmp    %eax,%ebx
je     8066801 <fchmod@plt+0x1c3a1>
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
call   804a090 <strncpy@plt>
mov    %edi,%eax
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x3c,%esp
mov    %ebx,0x2c(%esp)
mov    0x40(%esp),%ebx
movl   $0x2c,0x4(%esp)
mov    %edi,0x34(%esp)
mov    0x44(%esp),%edi
mov    %ebp,0x38(%esp)
mov    %ebx,(%esp)
mov    %esi,0x30(%esp)
call   8049f90 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebp
setne  %dl
jne    80668d0 <fchmod@plt+0x1c470>
mov    $0x1,%esi
test   %edi,%edi
je     80668a1 <fchmod@plt+0x1c441>
test   %dl,%dl
je     8066900 <fchmod@plt+0x1c4a0>
sub    %ebx,%ebp
lea    0x1(%ebp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   80667d0 <fchmod@plt+0x1c370>
movb   $0x0,(%eax,%ebp,1)
mov    %eax,%ebx
cmpb   $0x0,(%eax)
jne    80668b8 <fchmod@plt+0x1c458>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    %esi,%eax
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
nop
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
test   %al,%al
mov    $0x0,%eax
cmove  %eax,%esi
jmp    8066899 <fchmod@plt+0x1c439>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     8066864 <fchmod@plt+0x1c404>
mov    0x48(%esp),%eax
mov    %dl,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    0x1(%ebp),%eax
mov    %eax,(%esp)
call   8066240 <fchmod@plt+0x1bde0>
movzbl 0x1c(%esp),%edx
mov    %eax,%esi
jmp    8066869 <fchmod@plt+0x1c409>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %dl,0x1c(%esp)
call   8066240 <fchmod@plt+0x1bde0>
movzbl 0x1c(%esp),%edx
test   %al,%al
cmove  %edx,%esi
jmp    80668a1 <fchmod@plt+0x1c441>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
test   %ebx,%ebx
je     8066950 <fchmod@plt+0x1c4f0>
mov    %ebx,(%esp)
call   8049fc0 <strlen@plt>
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80667d0 <fchmod@plt+0x1c370>
add    $0x18,%esp
pop    %ebx
ret
mov    $0x1,%eax
jmp    8066937 <fchmod@plt+0x1c4d7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8077398,%eax
test   %eax,%eax
je     8066970 <fchmod@plt+0x1c510>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x806fe9b,(%esp)
call   8049ea0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80669a0 <fchmod@plt+0x1c540>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,0x8077398
add    $0x18,%esp
pop    %ebx
ret
call   8049d40 <geteuid@plt>
mov    %eax,(%esp)
call   8049b50 <getpwuid@plt>
test   %eax,%eax
je     8066986 <fchmod@plt+0x1c526>
mov    0x14(%eax),%ebx
jmp    8066986 <fchmod@plt+0x1c526>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x24(%esp),%eax
add    $0x1c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
je     8066a04 <fchmod@plt+0x1c5a4>
mov    0x8077340,%ecx
lea    -0x1(%ecx),%ebx
cmp    %ebx,%edx
jb     8066a04 <fchmod@plt+0x1c5a4>
mov    %edx,%eax
sub    %ecx,%eax
add    $0x2,%eax
cmp    $0x8,%ecx
jg     8066a08 <fchmod@plt+0x1c5a8>
pop    %ebx
ret
xchg   %ax,%ax
lea    -0x7(%edx),%ebx
sub    $0x8,%ecx
mov    %ebx,%eax
xor    %edx,%edx
div    %ecx
mov    %ebx,%eax
pop    %ebx
sub    %edx,%eax
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
mov    0x44(%esp),%edi
movl   $0x0,0x1c(%esp)
cmpb   $0x0,(%ebx)
je     8066a6b <fchmod@plt+0x1c60b>
lea    0x1c(%esp),%ebp
jmp    8066a51 <fchmod@plt+0x1c5f1>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%ebx
add    %eax,%esi
cmpb   $0x0,(%ebx)
je     8066a6b <fchmod@plt+0x1c60b>
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
cmp    %edi,0x1c(%esp)
jbe    8066a48 <fchmod@plt+0x1c5e8>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %esi,%esi
je     8066acd <fchmod@plt+0x1c66d>
cmpb   $0x0,(%ebx)
je     8066acd <fchmod@plt+0x1c66d>
lea    0x1c(%esp),%edi
jmp    8066aaf <fchmod@plt+0x1c64f>
nop
sub    %eax,%esi
cmpb   $0x0,(%ebx)
je     8066ac9 <fchmod@plt+0x1c669>
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d400 <fchmod@plt+0x2fa0>
add    %eax,%ebx
cmp    %esi,%eax
jb     8066aa8 <fchmod@plt+0x1c648>
mov    0x1c(%esp),%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x80773f8,%eax
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80773f8,%eax
mov    0x8(%eax),%ebx
movl   $0x14,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,0x8(%ebx)
mov    0x80773f8,%eax
mov    0x8(%eax),%eax
mov    0x8(%eax),%ebx
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
mov    %eax,(%ebx)
mov    0x80773f8,%eax
mov    0x8(%eax),%edx
mov    0x8(%edx),%ecx
mov    %edx,0xc(%ecx)
movl   $0x0,0x8(%ecx)
mov    0x8(%edx),%ecx
mov    0x4(%edx),%edx
movl   $0x0,0x10(%ecx)
add    $0x1,%edx
mov    %edx,0x4(%ecx)
mov    %ecx,0x8(%eax)
addl   $0x1,0x14(%eax)
add    $0x18,%esp
pop    %ebx
ret
mov    0x80773f8,%eax
mov    0x8(%eax),%edx
mov    (%edx),%ecx
cmpb   $0x0,(%ecx)
jne    8066bce <fchmod@plt+0x1c76e>
cmp    0x4(%eax),%edx
je     8066bce <fchmod@plt+0x1c76e>
sub    $0x1c,%esp
mov    0xc(%edx),%edx
mov    %edx,0x8(%eax)
mov    0x8(%edx),%eax
mov    %eax,(%esp)
call   8058ce0 <fchmod@plt+0xe880>
mov    0x80773f8,%eax
mov    0x8(%eax),%edx
movl   $0x0,0x8(%edx)
subl   $0x1,0x14(%eax)
add    $0x1c,%esp
repz ret
mov    0x80773f8,%eax
push   %esi
push   %ebx
mov    0x1c(%esp),%ecx
mov    0x28(%eax),%edx
mov    0x10(%eax),%ebx
mov    0x4(%edx),%esi
cmp    %esi,0x4(%ebx)
je     8066c20 <fchmod@plt+0x1c7c0>
jle    8066c28 <fchmod@plt+0x1c7c8>
mov    0xc(%esp),%esi
test   %ecx,%ecx
mov    0x10(%esp),%ebx
mov    %edx,(%esi)
mov    0x80773f8,%eax
mov    0x14(%esp),%esi
mov    0x2c(%eax),%edx
mov    0x10(%eax),%eax
mov    %edx,(%ebx)
mov    0x18(%esp),%edx
mov    %eax,(%esi)
mov    0x80773f8,%eax
mov    0x18(%eax),%eax
mov    %eax,(%edx)
je     8066c1d <fchmod@plt+0x1c7bd>
movb   $0x1,(%ecx)
pop    %ebx
pop    %esi
ret
mov    0x2c(%eax),%ebx
cmp    %ebx,0x18(%eax)
ja     8066beb <fchmod@plt+0x1c78b>
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    0x18(%esp),%esi
mov    %edx,(%ebx)
mov    0x80773f8,%eax
mov    0x10(%esp),%ebx
mov    0x2c(%eax),%edx
mov    0x10(%eax),%eax
mov    %edx,(%esi)
mov    0xc(%esp),%edx
mov    %eax,(%edx)
mov    0x80773f8,%eax
mov    0x18(%eax),%eax
mov    %eax,(%ebx)
je     8066c1d <fchmod@plt+0x1c7bd>
movb   $0x0,(%ecx)
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edi
mov    0x20(%esp),%ebx
jmp    8066c91 <fchmod@plt+0x1c831>
lea    0x0(%esi),%esi
cmp    %edi,%ebx
je     8066c95 <fchmod@plt+0x1c835>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
mov    0x8(%ebx),%ebx
add    %eax,%esi
cmp    $0x1,%ebx
sbb    $0xffffffff,%esi
test   %ebx,%ebx
jne    8066c78 <fchmod@plt+0x1c818>
test   %ebx,%ebx
je     8066cac <fchmod@plt+0x1c84c>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804d9d0 <fchmod@plt+0x3570>
add    %eax,%esi
cmpl   $0x1,0x8(%ebx)
sbb    $0xffffffff,%esi
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80773f8,%ecx
mov    0x4(%esp),%edx
mov    0x10(%ecx),%eax
cmp    %edx,0x4(%eax)
jl     8066cf5 <fchmod@plt+0x1c895>
je     8066cee <fchmod@plt+0x1c88e>
mov    0x4(%ecx),%ecx
jmp    8066ce8 <fchmod@plt+0x1c888>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%eax
cmp    %edx,0x4(%eax)
je     8066cee <fchmod@plt+0x1c88e>
cmp    %ecx,%eax
jne    8066ce0 <fchmod@plt+0x1c880>
xor    %eax,%eax
repz ret
cmp    %edx,0x4(%eax)
je     8066cee <fchmod@plt+0x1c88e>
mov    0x8(%eax),%eax
test   %eax,%eax
jne    8066cf0 <fchmod@plt+0x1c890>
repz ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x8077698,%eax
mov    %esi,0x14(%esp)
mov    0x20(%esp),%esi
mov    %ebx,0x10(%esp)
mov    %edi,0x18(%esp)
test   %eax,%eax
je     8066d30 <fchmod@plt+0x1c8d0>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
xor    %ebx,%ebx
call   805a660 <fchmod@plt+0x10200>
call   804a2a0 <doupdate@plt>
cmpb   $0x0,0x80773dc
jne    8066d78 <fchmod@plt+0x1c918>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
jne    8066d87 <fchmod@plt+0x1c927>
add    $0x1,%ebx
cmp    $0x80,%ebx
jne    8066d50 <fchmod@plt+0x1c8f0>
movl   $0x0,(%esp)
call   80598e0 <fchmod@plt+0xf480>
jmp    8066d50 <fchmod@plt+0x1c8f0>
mov    %esi,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8066d1c <fchmod@plt+0x1c8bc>
movl   $0x0,(%esp)
call   805a660 <fchmod@plt+0x10200>
movl   $0x4,(%esp)
addl   $0x1,0x807769c
call   8066570 <fchmod@plt+0x1c110>
mov    %edi,(%eax)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8077698
call   804a020 <nodelay@plt>
jmp    8066dfc <fchmod@plt+0x1c99c>
nop
mov    0x807769c,%eax
add    $0x1,%eax
mov    %eax,0x807769c
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8077698,%eax
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    0x807769c,%edx
mov    %ebx,-0x4(%eax,%edx,4)
movl   $0x0,(%esp)
mov    %eax,0x8077698
call   805a660 <fchmod@plt+0x10200>
movl   $0x1,(%esp)
call   805a660 <fchmod@plt+0x10200>
mov    %esi,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    8066dc0 <fchmod@plt+0x1c960>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a020 <nodelay@plt>
jmp    8066d1c <fchmod@plt+0x1c8bc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807769c,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x24(%esp),%ebx
movl   $0x1,(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
call   805a660 <fchmod@plt+0x10200>
movl   $0x0,(%esp)
call   805a660 <fchmod@plt+0x10200>
test   %ebx,%ebx
je     8066ec8 <fchmod@plt+0x1ca68>
mov    0x807769c,%edx
mov    %ebx,%eax
add    %edx,%eax
jae    8066e84 <fchmod@plt+0x1ca24>
mov    %edx,%ebx
mov    $0xffffffff,%eax
not    %ebx
mov    %eax,0x807769c
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8077698,%eax
lea    0x0(,%ebx,4),%edi
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,%esi
mov    %eax,0x8077698
mov    0x807769c,%eax
cmp    %eax,%ebx
jb     8066ed8 <fchmod@plt+0x1ca78>
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049bf0 <memcpy@plt>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
sub    %ebx,%eax
shl    $0x2,%eax
mov    %eax,0x8(%esp)
lea    (%esi,%edi,1),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049bb0 <memmove@plt>
jmp    8066eb4 <fchmod@plt+0x1ca54>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
cmpb   $0x0,0x28(%esp)
mov    0x24(%esp),%ebx
jne    8066f18 <fchmod@plt+0x1cab8>
movsbl 0x20(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
test   %bl,%bl
je     8066f4c <fchmod@plt+0x1caec>
lea    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x1b,0x20(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
add    $0x18,%esp
pop    %ebx
ret
jmp    8066f60 <fchmod@plt+0x1cb00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
movl   $0x1,(%esp)
mov    %esi,0x20(%esp)
mov    0x34(%esp),%esi
mov    %ebx,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %ebp,0x28(%esp)
call   805a660 <fchmod@plt+0x10200>
movl   $0x0,(%esp)
call   805a660 <fchmod@plt+0x10200>
mov    0x807769c,%eax
test   %eax,%eax
jne    8066fbd <fchmod@plt+0x1cb5d>
mov    0x30(%esp),%edx
test   %edx,%edx
je     8067050 <fchmod@plt+0x1cbf0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8066d00 <fchmod@plt+0x1c8a0>
mov    0x807769c,%eax
test   %eax,%eax
je     8067050 <fchmod@plt+0x1cbf0>
cmp    %esi,%eax
cmovbe %eax,%esi
sub    %esi,%eax
shl    $0x2,%esi
mov    %esi,(%esp)
mov    %eax,0x807769c
call   8066570 <fchmod@plt+0x1c110>
mov    0x8077698,%ebx
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8049bf0 <memcpy@plt>
mov    0x807769c,%eax
test   %eax,%eax
je     8067038 <fchmod@plt+0x1cbd8>
lea    0x0(,%eax,4),%ebp
add    %ebx,%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049bb0 <memmove@plt>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,0x8077698
mov    %edi,%eax
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
movl   $0x0,0x8077698
00
jmp    806701f <fchmod@plt+0x1cbbf>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    806701f <fchmod@plt+0x1cbbf>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
lea    0x80(%ebx),%eax
cmp    $0x17f,%eax
ja     806707f <fchmod@plt+0x1cc1f>
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
cmp    $0x62,%ebx
je     80670e0 <fchmod@plt+0x1cc80>
jg     8067098 <fchmod@plt+0x1cc38>
cmp    $0x61,%ebx
je     8067100 <fchmod@plt+0x1cca0>
add    $0x18,%esp
mov    $0xffffffff,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
cmp    $0x63,%ebx
je     80670c0 <fchmod@plt+0x1cc60>
cmp    $0x64,%ebx
jne    806708b <fchmod@plt+0x1cc2b>
movl   $0x0,0x4(%esp)
movl   $0xe,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x10,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0xf,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
cmp    $0x1,%ecx
jbe    806713f <fchmod@plt+0x1ccdf>
mov    (%edx),%eax
cmp    $0x5b,%eax
je     8067160 <fchmod@plt+0x1cd00>
cmp    $0x6f,%eax
je     8067148 <fchmod@plt+0x1cce8>
cmp    $0x4f,%eax
je     8067178 <fchmod@plt+0x1cd18>
mov    $0xffffffff,%eax
pop    %ebx
ret
xchg   %ax,%ax
mov    0x4(%edx),%eax
lea    -0x61(%eax),%edx
cmp    $0x3,%edx
ja     806713f <fchmod@plt+0x1ccdf>
mov    %eax,0x8(%esp)
pop    %ebx
jmp    8067060 <fchmod@plt+0x1cc00>
lea    0x0(%esi),%esi
mov    0x4(%edx),%ebx
lea    -0x31(%ebx),%eax
cmp    $0x33,%eax
ja     806713f <fchmod@plt+0x1ccdf>
jmp    *0x806fea0(,%eax,4)
lea    0x0(%esi),%esi
mov    0x4(%edx),%ebx
lea    -0x31(%ebx),%eax
cmp    $0x48,%eax
ja     806713f <fchmod@plt+0x1ccdf>
jmp    *0x806ff70(,%eax,4)
lea    0x0(%esi),%esi
movl   $0x0,0xc(%esp)
movl   $0x27,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
xchg   %ax,%ax
movl   $0x0,0xc(%esp)
movl   $0x28,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
xchg   %ax,%ax
movl   $0x0,0xc(%esp)
movl   $0xc,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
xchg   %ax,%ax
movl   $0x0,0xc(%esp)
movl   $0xb,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
xchg   %ax,%ax
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8067060 <fchmod@plt+0x1cc00>
lea    0x0(%esi),%esi
movl   $0x0,0xc(%esp)
movl   $0x33,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
xchg   %ax,%ax
movl   $0x0,0xc(%esp)
movl   $0x22,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
mov    $0x15e,%eax
pop    %ebx
ret
cmp    $0x52,%edx
mov    $0x10b,%eax
je     8067144 <fchmod@plt+0x1cce4>
cmp    $0x53,%edx
jne    806713f <fchmod@plt+0x1ccdf>
mov    $0x10c,%eax
pop    %ebx
ret
mov    $0x10d,%eax
pop    %ebx
ret
mov    $0x10a,%eax
pop    %ebx
ret
mov    $0x109,%eax
pop    %ebx
ret
mov    $0x10e,%eax
pop    %ebx
ret
mov    $0x110,%eax
pop    %ebx
ret
mov    $0x10f,%eax
pop    %ebx
ret
mov    $0x10b,%eax
pop    %ebx
ret
mov    $0x116,%eax
pop    %ebx
ret
mov    $0x113,%eax
pop    %ebx
ret
mov    $0x114,%eax
pop    %ebx
ret
mov    $0x112,%eax
pop    %ebx
ret
mov    $0x111,%eax
pop    %ebx
ret
cmp    $0x2,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x8(%edx),%edx
mov    $0xffffffff,%eax
sub    $0x41,%edx
cmp    $0x4,%edx
ja     8067144 <fchmod@plt+0x1cce4>
jmp    *0x8070094(,%edx,4)
cmp    $0x2,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x8(%edx),%eax
sub    $0x30,%eax
cmp    $0x9,%eax
ja     8067200 <fchmod@plt+0x1cda0>
jmp    *0x80700a8(,%eax,4)
cmp    $0x2,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x8(%edx),%eax
sub    $0x31,%eax
cmp    $0xa,%eax
ja     80671a8 <fchmod@plt+0x1cd48>
jmp    *0x80700d0(,%eax,4)
cmp    $0x2,%ecx
mov    $0x10b,%eax
je     8067144 <fchmod@plt+0x1cce4>
mov    0x8(%edx),%edx
mov    $0xa,%al
cmp    $0x51,%edx
je     8067144 <fchmod@plt+0x1cce4>
jg     8067235 <fchmod@plt+0x1cdd5>
cmp    $0x50,%edx
mov    $0x9,%al
jne    806713f <fchmod@plt+0x1ccdf>
pop    %ebx
ret
mov    $0x2c,%eax
pop    %ebx
ret
mov    $0x2a,%eax
pop    %ebx
ret
movl   $0x0,0xc(%esp)
movl   $0x10,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
mov    $0x2b,%eax
pop    %ebx
ret
movl   $0x0,0xc(%esp)
movl   $0xe,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
movl   $0x0,0xc(%esp)
movl   $0xf,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
cmp    $0x2,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x8(%edx),%edx
mov    $0x116,%eax
cmp    $0x51,%edx
je     8067144 <fchmod@plt+0x1cce4>
jg     8067458 <fchmod@plt+0x1cff8>
cmp    $0x50,%edx
mov    $0x15,%al
jne    806713f <fchmod@plt+0x1ccdf>
pop    %ebx
nop
lea    0x0(%esi,%eiz,1),%esi
ret
mov    $0x2f,%eax
pop    %ebx
ret
mov    $0x2d,%eax
pop    %ebx
ret
movl   $0x0,0xc(%esp)
movl   $0xd,0x8(%esp)
pop    %ebx
jmp    80532b0 <fchmod@plt+0x8e50>
cmp    $0x2,%ecx
je     806713f <fchmod@plt+0x1ccdf>
cmpl   $0x3b,0x8(%edx)
jne    806713f <fchmod@plt+0x1ccdf>
cmp    $0x3,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0xc(%edx),%eax
cmp    $0x32,%eax
je     8067473 <fchmod@plt+0x1d013>
cmp    $0x35,%eax
jne    806713f <fchmod@plt+0x1ccdf>
cmp    $0x4,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x10(%edx),%eax
lea    -0x41(%eax),%edx
cmp    $0x3,%edx
ja     806713f <fchmod@plt+0x1ccdf>
jmp    8067153 <fchmod@plt+0x1ccf3>
mov    $0x118,%eax
pop    %ebx
ret
mov    $0x117,%eax
pop    %ebx
ret
mov    $0x115,%eax
pop    %ebx
ret
cmp    $0x3,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0xc(%edx),%eax
cmp    $0x32,%eax
jne    8067409 <fchmod@plt+0x1cfa9>
jmp    8067412 <fchmod@plt+0x1cfb2>
nop
cmp    $0x52,%edx
mov    $0x117,%eax
je     8067144 <fchmod@plt+0x1cce4>
cmp    $0x53,%edx
mov    $0x18,%al
jne    806713f <fchmod@plt+0x1ccdf>
pop    %ebx
ret
cmp    $0x4,%ecx
je     806713f <fchmod@plt+0x1ccdf>
mov    0x10(%edx),%eax
lea    -0x41(%eax),%edx
cmp    $0x12,%edx
ja     806713f <fchmod@plt+0x1ccdf>
jmp    *0x80700fc(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80776a8,%eax
mov    0x4(%esp),%edx
add    $0x1,%eax
cmp    $0x2,%eax
mov    %eax,0x80776a8
je     8067538 <fchmod@plt+0x1d0d8>
cmp    $0x3,%eax
je     8067508 <fchmod@plt+0x1d0a8>
cmp    $0x1,%eax
je     80674e0 <fchmod@plt+0x1d080>
mov    %edx,%eax
cmp    $0xffffffff,%eax
je     8067500 <fchmod@plt+0x1d0a0>
movl   $0x0,0x80776a8
00
movl   $0x0,0x80776ac
00
ret
lea    -0x30(%edx),%ecx
mov    %edx,%eax
cmp    $0x2,%ecx
ja     80674c6 <fchmod@plt+0x1d066>
imul   $0x64,%edx,%eax
sub    $0x12c0,%eax
mov    %eax,0x80776ac
mov    $0xffffffff,%eax
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
lea    -0x30(%edx),%ecx
cmp    $0x5,%ecx
jbe    8067526 <fchmod@plt+0x1d0c6>
cmpl   $0xf9,0x80776ac
00
mov    %edx,%eax
jg     80674c6 <fchmod@plt+0x1d066>
lea    -0x36(%edx),%edx
cmp    $0x3,%edx
ja     80674c6 <fchmod@plt+0x1d066>
mov    0x80776ac,%eax
add    %ecx,%eax
mov    %eax,0x80776ac
jmp    80674c6 <fchmod@plt+0x1d066>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%edx),%eax
cmp    $0x5,%eax
jbe    806755e <fchmod@plt+0x1d0fe>
cmpl   $0xc7,0x80776ac
00
jg     80674c4 <fchmod@plt+0x1d064>
lea    -0x36(%edx),%ecx
mov    %edx,%eax
cmp    $0x3,%ecx
ja     80674c6 <fchmod@plt+0x1d066>
lea    (%edx,%edx,4),%eax
lea    -0x1e0(%eax,%eax,1),%eax
add    %eax,0x80776ac
jmp    80674f7 <fchmod@plt+0x1d097>
sub    $0xc,%esp
mov    %ebx,(%esp)
mov    0x10(%esp),%ebx
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
lea    -0x30(%ebx),%eax
cmp    $0x9,%eax
jbe    8067608 <fchmod@plt+0x1d1a8>
lea    0x80(%ebx),%esi
cmp    $0x17f,%esi
jbe    80675b8 <fchmod@plt+0x1d158>
cmp    $0x60,%ebx
mov    %ebx,%edx
jg     80675d1 <fchmod@plt+0x1d171>
mov    %ebx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%ebx
mov    0x4(%esp),%esi
mov    0x8(%esp),%edi
add    $0xc,%esp
ret
nop
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%edx
mov    %ebx,%eax
cmpl   $0x60,(%edx,%ebx,4)
jle    80675a8 <fchmod@plt+0x1d148>
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%edx
cmp    $0x66,%edx
mov    %ebx,%eax
jg     80675a8 <fchmod@plt+0x1d148>
mov    0x18(%esp),%eax
cmp    $0x17f,%esi
mov    (%eax),%edi
ja     80675f0 <fchmod@plt+0x1d190>
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
sub    $0x57,%ebx
mov    0x18(%esp),%edx
mov    $0xffffffff,%eax
imul   0x14(%esp),%ebx
add    %edi,%ebx
mov    %ebx,(%edx)
jmp    80675a8 <fchmod@plt+0x1d148>
nop
mov    0x18(%esp),%edx
imul   0x14(%esp),%eax
add    %eax,(%edx)
mov    $0xffffffff,%eax
jmp    80675a8 <fchmod@plt+0x1d148>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x80776b0,%eax
mov    0x20(%esp),%edx
add    $0x1,%eax
cmp    $0x6,%eax
mov    %eax,0x80776b0
jbe    8067658 <fchmod@plt+0x1d1f8>
mov    %edx,%eax
cmp    $0xffffffff,%eax
je     8067654 <fchmod@plt+0x1d1f4>
movl   $0x0,0x80776b0
00
movl   $0x0,0x80776b4
00
add    $0x1c,%esp
ret
jmp    *0x8070148(,%eax,4)
nop
movl   $0x80776b4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   8067570 <fchmod@plt+0x1d110>
cmp    $0xffffffff,%eax
jne    8067640 <fchmod@plt+0x1d1e0>
mov    0x80776b4,%eax
jmp    806763b <fchmod@plt+0x1d1db>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%edx),%eax
cmp    $0x1,%eax
ja     8067639 <fchmod@plt+0x1d1d9>
shl    $0x14,%eax
mov    %eax,0x80776b4
mov    $0xffffffff,%eax
jmp    8067654 <fchmod@plt+0x1d1f4>
nop
mov    0x80776b4,%ecx
test   %ecx,%ecx
je     80676b1 <fchmod@plt+0x1d251>
cmp    $0x30,%edx
mov    %edx,%eax
jne    806763b <fchmod@plt+0x1d1db>
movl   $0x80776b4,0x8(%esp)
movl   $0x10000,0x4(%esp)
mov    %edx,(%esp)
call   8067570 <fchmod@plt+0x1d110>
jmp    806763b <fchmod@plt+0x1d1db>
xchg   %ax,%ax
movl   $0x80776b4,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edx,(%esp)
call   8067570 <fchmod@plt+0x1d110>
jmp    806763b <fchmod@plt+0x1d1db>
lea    0x0(%esi),%esi
movl   $0x80776b4,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %edx,(%esp)
call   8067570 <fchmod@plt+0x1d110>
jmp    806763b <fchmod@plt+0x1d1db>
lea    0x0(%esi),%esi
movl   $0x80776b4,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %edx,(%esp)
call   8067570 <fchmod@plt+0x1d110>
jmp    806763b <fchmod@plt+0x1d1db>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
cmp    $0x32,%edx
je     8067760 <fchmod@plt+0x1d300>
cmp    $0x20,%edx
je     8067760 <fchmod@plt+0x1d300>
cmp    $0x2f,%edx
mov    $0x1f,%eax
je     8067762 <fchmod@plt+0x1d302>
lea    -0x33(%edx),%eax
cmp    $0x4,%eax
jbe    8067780 <fchmod@plt+0x1d320>
cmp    $0x3f,%edx
jne    8067768 <fchmod@plt+0x1d308>
mov    $0x7f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
repz ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x38,%edx
je     8067755 <fchmod@plt+0x1d2f5>
lea    -0x40(%edx),%eax
cmp    $0x1f,%eax
jbe    8067762 <fchmod@plt+0x1d302>
lea    -0x60(%edx),%eax
cmp    $0x1e,%eax
cmova  %edx,%eax
ret
nop
lea    -0x18(%edx),%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x24(%esp),%ebx
mov    %edi,0x18(%esp)
mov    0x20(%esp),%edi
mov    %esi,0x14(%esp)
test   %ebx,%ebx
jne    80677c0 <fchmod@plt+0x1d360>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(,%ebx,4),%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
xor    %edx,%edx
mov    %eax,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl (%edi,%edx,1),%ecx
mov    %ecx,(%esi,%edx,4)
add    $0x1,%edx
cmp    %ebx,%edx
jne    80677d8 <fchmod@plt+0x1d378>
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
mov    0x10(%esp),%ebx
mov    %esi,0x20(%esp)
mov    0x18(%esp),%edi
mov    0x14(%esp),%esi
add    $0x1c,%esp
jmp    8049be0 <free@plt>
lea    0x0(%esi),%esi
sub    $0x4c,%esp
mov    %ebx,0x3c(%esp)
mov    0x50(%esp),%ebx
lea    0x1c(%esp),%eax
mov    %edi,0x44(%esp)
mov    0x54(%esp),%edi
mov    %ebp,0x48(%esp)
mov    0x58(%esp),%ebp
mov    %esi,0x40(%esp)
movl   $0xffffffff,(%ebx)
movl   $0xffffffff,(%edi)
mov    %eax,(%esp)
call   8049f40 <getmouse@plt>
cmp    $0xffffffff,%eax
je     80679b8 <fchmod@plt+0x1d558>
mov    0x20(%esp),%eax
mov    $0x2,%esi
mov    %eax,(%ebx)
mov    0x24(%esp),%eax
mov    %eax,(%edi)
mov    (%ebx),%edx
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e90 <wenclose@plt>
testb  $0x5,0x2c(%esp)
jne    8067898 <fchmod@plt+0x1d438>
mov    %esi,%eax
mov    0x3c(%esp),%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebp
add    $0x4c,%esp
ret
lea    0x0(%esi),%esi
mov    %ebp,%edx
xor    %si,%si
test   %dl,%dl
je     806787f <fchmod@plt+0x1d41f>
testb  $0x8,0x8077414
jne    806787f <fchmod@plt+0x1d41f>
test   %al,%al
je     806787f <fchmod@plt+0x1d41f>
mov    0x807783c,%eax
movl   $0x0,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a210 <wmouse_trafo@plt>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80679e5 <fchmod@plt+0x1d585>
mov    0x80777bc,%ecx
sub    $0x1,%ebp
cmp    $0x1,%ecx
je     80679c8 <fchmod@plt+0x1d568>
mov    %ecx,(%esp)
call   8053160 <fchmod@plt+0x8d00>
cmp    $0xc,%eax
mov    %eax,%edi
ja     80679c8 <fchmod@plt+0x1d568>
cmp    $0x1,%eax
ja     8067a34 <fchmod@plt+0x1d5d4>
mov    0x8077340,%esi
mov    $0x2aaaaaab,%ecx
mov    %esi,%eax
imul   %ecx
mov    %esi,%eax
sar    $0x1f,%eax
mov    %edx,%ecx
sub    %eax,%ecx
mov    (%ebx),%eax
mov    %eax,%edx
sar    $0x1f,%edx
idiv   %ecx
lea    0x0(%ebp,%eax,2),%ebp
mov    %edx,%ebx
cmp    %edi,%ebp
jae    80679f6 <fchmod@plt+0x1d596>
test   %ebp,%ebp
mov    0x80773b4,%edx
jle    8067a1c <fchmod@plt+0x1d5bc>
mov    0x18(%edx),%eax
mov    0x80777bc,%ecx
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     806796e <fchmod@plt+0x1d50e>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    0x18(%eax),%eax
test   %eax,%eax
je     806796e <fchmod@plt+0x1d50e>
test   %ecx,0x4(%edx)
je     8067958 <fchmod@plt+0x1d4f8>
mov    0xc(%edx),%ebx
cmpb   $0x0,(%ebx)
je     8067958 <fchmod@plt+0x1d4f8>
sub    $0x1,%ebp
jne    8067950 <fchmod@plt+0x1d4f0>
movswl (%edx),%eax
mov    $0x2,%esi
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8053260 <fchmod@plt+0x8e00>
test   %eax,%eax
je     806787f <fchmod@plt+0x1d41f>
movl   $0x0,0x8(%esp)
xor    %edx,%edx
cmpl   $0x1,0x4(%eax)
sete   %dl
mov    %edx,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8066f00 <fchmod@plt+0x1caa0>
jmp    806787f <fchmod@plt+0x1d41f>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%esi
jmp    806787f <fchmod@plt+0x1d41f>
lea    0x0(%esi),%esi
mov    $0x6,%ecx
mov    $0xc,%edi
mov    0x8077340,%esi
xor    %edx,%edx
mov    %esi,%eax
div    %ecx
mov    %eax,%ecx
jmp    806791b <fchmod@plt+0x1d4bb>
mov    0x20(%esp),%eax
mov    %eax,(%ebx)
mov    0x24(%esp),%eax
mov    %eax,(%edi)
jmp    806787f <fchmod@plt+0x1d41f>
mov    %esi,%edx
mov    %esi,%eax
sar    $0x1f,%edx
mov    $0x2,%esi
idiv   %ecx
cmp    %edx,%ebx
jge    806787f <fchmod@plt+0x1d41f>
sub    $0x2,%ebp
cmp    %edi,%ebp
jae    806787f <fchmod@plt+0x1d41f>
jmp    8067932 <fchmod@plt+0x1d4d2>
test   %edx,%edx
mov    $0x2,%esi
je     806787f <fchmod@plt+0x1d41f>
mov    0x80777bc,%ecx
jmp    8067973 <fchmod@plt+0x1d513>
mov    %eax,%ecx
and    $0x1,%ecx
shr    %eax
add    %eax,%ecx
jmp    80679d2 <fchmod@plt+0x1d572>
nop
mov    0x80773b8,%eax
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    0x14(%esp),%ebx
jne    8067a6e <fchmod@plt+0x1d60e>
jmp    8067a88 <fchmod@plt+0x1d628>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%esi
cmp    %esi,(%ecx)
je     8067a88 <fchmod@plt+0x1d628>
mov    0x1c(%eax),%eax
test   %eax,%eax
je     8067a88 <fchmod@plt+0x1d628>
test   %edx,0xc(%eax)
je     8067a67 <fchmod@plt+0x1d607>
cmpl   $0x1,0x4(%eax)
jne    8067a60 <fchmod@plt+0x1d600>
cmpb   $0x0,(%ebx)
je     8067a67 <fchmod@plt+0x1d607>
mov    0x8(%eax),%esi
cmp    %esi,(%ecx)
jne    8067a67 <fchmod@plt+0x1d607>
lea    0x0(%esi),%esi
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x2c(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a300 <wmove@plt>
test   %ebx,%ebx
jle    8067ad5 <fchmod@plt+0x1d675>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   8049bd0 <waddch@plt>
sub    $0x1,%ebx
jne    8067ac0 <fchmod@plt+0x1d660>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8077340,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
testb  $0x8,0x8077417
je     8067b20 <fchmod@plt+0x1d6c0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8077340,%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
mov    0x8077410,%eax
test   %eax,%eax
jle    8067b8d <fchmod@plt+0x1d72d>
nop
mov    0x8077340,%eax
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
cmp    %ebx,0x8077410
jg     8067b60 <fchmod@plt+0x1d700>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8077340,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
testb  $0x8,0x8077414
je     8067be0 <fchmod@plt+0x1d780>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8077340,%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
mov    0x8077340,%eax
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x6c(%esp),%ebx
mov    0x64(%esp),%esi
test   %bl,%bl
jne    8068003 <fchmod@plt+0x1dba3>
mov    0x68(%esp),%edx
test   %edx,%edx
je     8067d60 <fchmod@plt+0x1d900>
call   804d310 <fchmod@plt+0x2eb0>
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x60(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,%ebp
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x60(%esp),%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x24(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,0x20(%esp)
call   804d310 <fchmod@plt+0x2eb0>
add    0x80772e4,%eax
add    $0x1,%eax
shl    $0x7,%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x60(%esp),%edi
add    0x24(%esp),%edi
mov    %eax,0x38(%esp)
movzbl (%edi),%eax
cmp    $0x9,%al
jne    8067d7c <fchmod@plt+0x1d91c>
xor    %ebx,%ebx
test   %al,%al
je     8067e0d <fchmod@plt+0x1d9ad>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %eax,0x2c(%esp)
call   804d310 <fchmod@plt+0x2eb0>
mov    0x80772e4,%edx
lea    0x1(%ebx,%edx,1),%edx
add    %edx,%eax
mov    0x28(%esp),%edx
sub    $0x1,%edx
cmp    %edx,%eax
jae    8067eb8 <fchmod@plt+0x1da58>
cmpb   $0x9,0x0(%ebp)
jne    8067e50 <fchmod@plt+0x1d9f0>
testb  $0x4,0x8077417
je     8067dd8 <fchmod@plt+0x1d978>
mov    0x8077834,%eax
test   %eax,%eax
jle    8067de3 <fchmod@plt+0x1d983>
xor    %eax,%eax
xchg   %ax,%ax
mov    0x80773f0,%edx
movzbl (%edx,%eax,1),%ecx
add    $0x1,%eax
mov    0x38(%esp),%edx
mov    %cl,(%edx,%ebx,1)
add    $0x1,%ebx
cmp    %eax,0x8077834
jg     8067d38 <fchmod@plt+0x1d8d8>
jmp    8067de3 <fchmod@plt+0x1d983>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806e126,0x4(%esp)
movl   $0x0,(%esp)
call   8066920 <fchmod@plt+0x1c4c0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %al,%al
je     8067cce <fchmod@plt+0x1d86e>
cmp    0x20(%esp),%esi
ja     806809e <fchmod@plt+0x1dc3e>
mov    0x20(%esp),%eax
test   %eax,%eax
je     8068033 <fchmod@plt+0x1dbd3>
test   %bl,%bl
je     8068033 <fchmod@plt+0x1dbd3>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   804cf20 <fchmod@plt+0x2ac0>
test   %al,%al
je     806803a <fchmod@plt+0x1dbda>
movzbl (%edi),%eax
xor    %ebx,%ebx
jmp    8067cd0 <fchmod@plt+0x1d870>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
movb   $0x20,(%eax,%ebx,1)
add    $0x1,%ebx
add    $0x1,%esi
xor    %edx,%edx
mov    %esi,%eax
divl   0x80772e4
test   %edx,%edx
jne    8067dd8 <fchmod@plt+0x1d978>
mov    0x2c(%esp),%eax
add    %eax,0x24(%esp)
mov    0x60(%esp),%edi
add    0x24(%esp),%edi
cmpb   $0x0,(%edi)
jne    8067cd8 <fchmod@plt+0x1d878>
mov    %ebp,(%esp)
call   8049be0 <free@plt>
mov    0x38(%esp),%eax
mov    0x68(%esp),%ecx
movb   $0x0,(%eax,%ebx,1)
mov    0x38(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8066750 <fchmod@plt+0x1c2f0>
mov    0x38(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   804cf20 <fchmod@plt+0x2ac0>
test   %al,%al
jne    8067f68 <fchmod@plt+0x1db08>
cmpb   $0x20,0x0(%ebp)
jne    8067ef0 <fchmod@plt+0x1da90>
testb  $0x4,0x8077417
je     8067ff0 <fchmod@plt+0x1db90>
mov    0x8077834,%eax
mov    0x8077838,%edx
add    %eax,%edx
cmp    %edx,%eax
jge    8067eaf <fchmod@plt+0x1da4f>
mov    0x80773f0,%edx
movzbl (%edx,%eax,1),%ecx
add    $0x1,%eax
mov    0x38(%esp),%edx
mov    %cl,(%edx,%ebx,1)
mov    0x8077834,%edx
add    $0x1,%ebx
add    0x8077838,%edx
cmp    %eax,%edx
jg     8067e88 <fchmod@plt+0x1da28>
add    $0x1,%esi
jmp    8067df4 <fchmod@plt+0x1d994>
nop
call   804d310 <fchmod@plt+0x2eb0>
add    0x80772e4,%eax
add    $0x1,%eax
shl    $0x7,%eax
add    %eax,0x28(%esp)
mov    0x28(%esp),%ecx
mov    0x38(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80666e0 <fchmod@plt+0x1c280>
mov    %eax,0x38(%esp)
jmp    8067d10 <fchmod@plt+0x1d8b0>
lea    0x0(%esi),%esi
call   804d310 <fchmod@plt+0x2eb0>
mov    %ebx,%edi
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
lea    0x3c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804d1b0 <fchmod@plt+0x2d50>
mov    %eax,%ecx
mov    0x3c(%esp),%eax
test   %eax,%eax
jle    8067f44 <fchmod@plt+0x1dae4>
mov    %ecx,%eax
sub    %ebx,%eax
mov    %ecx,0x20(%esp)
lea    0x0(%esi),%esi
movzbl (%eax,%edi,1),%ecx
mov    0x38(%esp),%edx
mov    %cl,(%edx,%edi,1)
add    $0x1,%edi
mov    %edi,%edx
sub    %ebx,%edx
cmp    %edx,0x3c(%esp)
jg     8067f28 <fchmod@plt+0x1dac8>
mov    0x20(%esp),%ecx
mov    %ecx,(%esp)
mov    %edi,%ebx
mov    %ecx,0x1c(%esp)
call   804d290 <fchmod@plt+0x2e30>
mov    0x1c(%esp),%ecx
mov    %ecx,(%esp)
add    %eax,%esi
call   8049be0 <free@plt>
jmp    8067df4 <fchmod@plt+0x1d994>
lea    0x0(%esi),%esi
call   804d310 <fchmod@plt+0x2eb0>
add    $0x1,%esi
lea    0x1(%ebx),%edi
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x38(%esp),%edx
movb   $0x5e,(%edx,%ebx,1)
lea    0x3c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804d0e0 <fchmod@plt+0x2c80>
mov    %eax,%edx
mov    0x3c(%esp),%eax
test   %eax,%eax
jle    8067fcc <fchmod@plt+0x1db6c>
mov    %edx,%ecx
xor    %eax,%eax
sub    %ebx,%ecx
mov    %ecx,%ebx
mov    %edx,0x20(%esp)
lea    0x0(%esi),%esi
movzbl -0x1(%ebx,%edi,1),%edx
add    $0x1,%eax
mov    0x38(%esp),%ecx
mov    %dl,(%ecx,%edi,1)
add    $0x1,%edi
cmp    %eax,0x3c(%esp)
jg     8067fb0 <fchmod@plt+0x1db50>
mov    0x20(%esp),%edx
mov    %edx,(%esp)
mov    %edi,%ebx
mov    %edx,0x1c(%esp)
call   804d290 <fchmod@plt+0x2e30>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
add    %eax,%esi
call   8049be0 <free@plt>
jmp    8067df4 <fchmod@plt+0x1d994>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
add    $0x1,%esi
movb   $0x20,(%eax,%ebx,1)
add    $0x1,%ebx
jmp    8067df4 <fchmod@plt+0x1d994>
mov    0x68(%esp),%ecx
test   %ecx,%ecx
je     8067c57 <fchmod@plt+0x1d7f7>
mov    0x60(%esp),%ecx
mov    %ecx,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x68(%esp),%edx
add    %esi,%edx
cmp    %edx,%eax
jbe    8067c63 <fchmod@plt+0x1d803>
subl   $0x1,0x68(%esp)
jmp    8067c57 <fchmod@plt+0x1d7f7>
xor    %ebx,%ebx
jmp    8067cd8 <fchmod@plt+0x1d878>
call   804cda0 <fchmod@plt+0x2940>
test   %al,%al
je     8067dca <fchmod@plt+0x1d96a>
mov    %ebp,(%esp)
call   804d290 <fchmod@plt+0x2e30>
cmp    $0x2,%eax
jne    8067dca <fchmod@plt+0x1d96a>
cmp    0x20(%esp),%esi
ja     8068095 <fchmod@plt+0x1dc35>
mov    0x38(%esp),%eax
add    $0x1,%esi
mov    $0x2,%ebx
movb   $0x20,(%eax)
mov    $0x1,%eax
mov    0x38(%esp),%edx
add    $0x1,%esi
movb   $0x20,(%edx,%eax,1)
mov    0x2c(%esp),%eax
add    %eax,0x24(%esp)
mov    0x60(%esp),%edi
add    0x24(%esp),%edi
movzbl (%edi),%eax
jmp    8067cd0 <fchmod@plt+0x1d870>
mov    $0x1,%ebx
xor    %eax,%eax
jmp    8068072 <fchmod@plt+0x1dc12>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <fchmod@plt+0x2fa0>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   804cf20 <fchmod@plt+0x2ac0>
test   %al,%al
je     806803a <fchmod@plt+0x1dbda>
call   804d310 <fchmod@plt+0x2eb0>
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
lea    0x3c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804d0e0 <fchmod@plt+0x2c80>
mov    %eax,%edi
mov    0x3c(%esp),%eax
test   %eax,%eax
jle    806810c <fchmod@plt+0x1dcac>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%ebx,1),%eax
mov    0x38(%esp),%edx
mov    %al,(%edx,%ebx,1)
add    $0x1,%ebx
cmp    %ebx,0x3c(%esp)
jg     80680f8 <fchmod@plt+0x1dc98>
mov    %edi,(%esp)
call   804d290 <fchmod@plt+0x2e30>
mov    %edi,(%esp)
add    %eax,%esi
call   8049be0 <free@plt>
jmp    806807d <fchmod@plt+0x1dc1d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    %esi,0x20(%esp)
mov    0x30(%esp),%esi
mov    %ebx,0x1c(%esp)
mov    0x38(%esp),%ebx
mov    %edi,0x24(%esp)
mov    %ebp,0x28(%esp)
mov    0x34(%esp),%ebp
mov    %esi,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
movl   $0x0,0x8(%esp)
lea    0x1(%eax),%edi
mov    0x80772e0,%eax
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
cmp    %ebx,%edi
jae    8068210 <fchmod@plt+0x1ddb0>
sub    %edi,%ebx
je     8068210 <fchmod@plt+0x1ddb0>
mov    0x807783c,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x1c(%esp),%ebx
mov    %ebp,0x34(%esp)
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
mov    %eax,0x38(%esp)
mov    0x807783c,%eax
mov    %eax,0x30(%esp)
add    $0x2c,%esp
jmp    8049c30 <waddnstr@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80773f8,%ebx
test   %ebx,%ebx
je     8068348 <fchmod@plt+0x1dee8>
call   8066ae0 <fchmod@plt+0x1c680>
testb  $0x8,0x8077418
mov    %eax,%ebp
je     80682f8 <fchmod@plt+0x1de98>
mov    0x80773f8,%esi
mov    0xc(%esi),%ebx
movl   $0x0,0x20(%esi)
test   %ebx,%ebx
je     806836d <fchmod@plt+0x1df0d>
cmp    0x10(%esi),%ebx
je     806836d <fchmod@plt+0x1df0d>
xor    %edi,%edi
jmp    8068288 <fchmod@plt+0x1de28>
xchg   %ax,%ax
cmp    %ebx,0x10(%esi)
je     80682ae <fchmod@plt+0x1de4e>
mov    0x20(%esi),%edi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
mov    0x8(%ebx),%ebx
divl   0x8077340
test   %ebx,%ebx
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x20(%esi)
mov    0x80773f8,%esi
jne    8068280 <fchmod@plt+0x1de20>
mov    0x20(%esi),%ebx
call   8066ae0 <fchmod@plt+0x1c680>
mov    0x8077340,%ecx
xor    %edx,%edx
div    %ecx
add    %ebx,%eax
mov    %eax,0x20(%esi)
mov    0x80773f8,%eax
mov    0x20(%eax),%ebx
cmp    0x8077410,%ebx
jge    806833c <fchmod@plt+0x1dedc>
mov    %ebp,%eax
xor    %edx,%edx
div    %ecx
mov    0x8077704,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   804a300 <wmove@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80773f8,%edx
mov    0x10(%edx),%eax
mov    0xc(%edx),%ecx
mov    0x4(%eax),%eax
sub    0x4(%ecx),%eax
cmp    0x8077410,%eax
mov    %eax,0x20(%edx)
jge    806833c <fchmod@plt+0x1dedc>
mov    %ebp,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
sub    %eax,%ebp
mov    0x80773f8,%eax
mov    %ebp,0x8(%esp)
mov    0x20(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebx,%ebx
jmp    80682b1 <fchmod@plt+0x1de51>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
testb  $0x8,0x8077414
mov    0x40(%esp),%esi
jne    80684f0 <fchmod@plt+0x1e090>
cmp    $0x1,%esi
je     80684d8 <fchmod@plt+0x1e078>
mov    %esi,(%esp)
mov    $0xc,%ebp
call   8053160 <fchmod@plt+0x8d00>
cmp    $0xc,%eax
cmovbe %eax,%ebp
mov    %ebp,%ecx
mov    %ebp,%eax
shr    %eax
and    $0x1,%ecx
add    %eax,%ecx
test   %ebp,%ebp
setne  %al
mov    %eax,%edi
mov    0x8077340,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,0x18(%esp)
call   8067bd0 <fchmod@plt+0x1d770>
mov    %edi,%edx
mov    0x80773b4,%ebx
test   %dl,%dl
je     80684b0 <fchmod@plt+0x1e050>
xor    %edi,%edi
jmp    80683fb <fchmod@plt+0x1df9b>
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
mov    0x18(%ebx),%ebx
jbe    80684b0 <fchmod@plt+0x1e050>
test   %ebx,%ebx
je     80684b0 <fchmod@plt+0x1e050>
test   %esi,0x4(%ebx)
je     80683f0 <fchmod@plt+0x1df90>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     80683f0 <fchmod@plt+0x1df90>
cmpb   $0x0,(%eax)
je     80683f0 <fchmod@plt+0x1df90>
movswl (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8053260 <fchmod@plt+0x8e00>
test   %eax,%eax
mov    %eax,%ecx
je     80683f0 <fchmod@plt+0x1df90>
mov    %edi,%eax
shr    %eax
imul   0x18(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edi,%eax
add    $0x1,%edi
and    $0x1,%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x8077340,%eax
xor    %edx,%edx
movl   $0x5,0x8(%esp)
divl   0x18(%esp)
mov    0x8(%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
add    0x18(%esp),%edx
mov    %edx,0x1c(%esp)
call   8049c80 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    0x14(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8068130 <fchmod@plt+0x1dcd0>
cmp    %edi,%ebp
mov    0x18(%ebx),%ebx
ja     80683fb <fchmod@plt+0x1df9b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <wnoutrefresh@plt>
nop
mov    $0x1,%edi
mov    $0x6,%ecx
mov    $0xc,%ebp
jmp    80683c6 <fchmod@plt+0x1df66>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
lea    0x44(%esp),%edi
call   804a3f0 <isendwin@plt>
test   %al,%al
jne    80686e8 <fchmod@plt+0x1e288>
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x8077414,%ebp
mov    %ebp,%eax
and    $0xfbffffff,%eax
mov    %eax,0x8077414
call   804d310 <fchmod@plt+0x2eb0>
mov    0x8077340,%edx
sub    $0x3,%edx
imul   %edx,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    %eax,%esi
call   804d310 <fchmod@plt+0x2eb0>
mov    0x8077340,%edx
mov    %ebx,0x10(%esp)
mov    %edi,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
sub    $0x3,%edx
movl   $0x1,0x8(%esp)
imul   %edx,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__vsnprintf_chk@plt>
mov    0x8077340,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
sub    $0x4,%eax
mov    %eax,0x8(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
and    $0x4000000,%ebp
mov    %eax,%ebx
jne    80686d8 <fchmod@plt+0x1e278>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    %ebx,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%edx
movl   $0x0,0x4(%esp)
sub    $0x4,%edx
sub    %eax,%edx
mov    0x807783c,%eax
shr    %edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
mov    0x807783c,%eax
movl   $0xffffffff,0x8(%esp)
movl   $0x807025c,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x807783c,%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x807783c,%eax
movl   $0xffffffff,0x8(%esp)
movl   $0x807025f,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    0x8077414,%edx
mov    $0x1,%eax
movb   $0x1,0x80776bc
and    $0x20000004,%edx
cmp    $0x20000000,%edx
mov    $0x1a,%edx
cmovne %edx,%eax
mov    %eax,0x80776b8
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4000000,0x8077414
04
jmp    80685b5 <fchmod@plt+0x1e155>
nop
mov    0x8077324,%eax
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049af0 <__vfprintf_chk@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
test   %eax,%eax
mov    %eax,%ebx
je     8068720 <fchmod@plt+0x1e2c0>
call   804cda0 <fchmod@plt+0x2940>
test   %al,%al
je     80687f0 <fchmod@plt+0x1e390>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8067620 <fchmod@plt+0x1d1c0>
cmp    $0xffffffff,%eax
jne    80687f0 <fchmod@plt+0x1e390>
cmp    0x8077704,%esi
je     806882a <fchmod@plt+0x1e3ca>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
test   %eax,%eax
mov    %eax,%ebx
je     8068768 <fchmod@plt+0x1e308>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8067620 <fchmod@plt+0x1d1c0>
cmp    $0xffffffff,%eax
je     8068768 <fchmod@plt+0x1e308>
lea    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d330 <fchmod@plt+0x2ed0>
mov    %eax,%edi
mov    0x1c(%esp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%esi
jle    80687d2 <fchmod@plt+0x1e372>
xor    %edx,%edx
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
mov    %ecx,(%esi,%edx,4)
mov    0x1c(%esp),%ecx
add    $0x1,%edx
cmp    %edx,%ecx
jg     80687c0 <fchmod@plt+0x1e360>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
mov    %esi,(%esp)
call   8049be0 <free@plt>
mov    %edi,(%esp)
call   8049be0 <free@plt>
jmp    8068800 <fchmod@plt+0x1e3a0>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
mov    %ebx,(%esp)
call   8049be0 <free@plt>
mov    0x807769c,%eax
mov    0x34(%esp),%edx
mov    %eax,(%edx)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x8070262,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
jmp    8068768 <fchmod@plt+0x1e308>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8077414,%eax
mov    0x20(%esp),%ebx
test   $0x400000,%eax
jne    80688e8 <fchmod@plt+0x1e488>
test   $0x20000,%eax
je     80688d0 <fchmod@plt+0x1e470>
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8068710 <fchmod@plt+0x1e2b0>
mov    0x8077414,%edx
test   $0x400000,%edx
mov    %eax,%esi
jne    80688c0 <fchmod@plt+0x1e460>
and    $0x20000,%edx
jne    80688b4 <fchmod@plt+0x1e454>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049d00 <keypad@plt>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   805ab00 <fchmod@plt+0x106a0>
mov    0x8077414,%edx
jmp    806889c <fchmod@plt+0x1e43c>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049d00 <keypad@plt>
jmp    806887c <fchmod@plt+0x1e41c>
lea    0x0(%esi),%esi
call   805aaa0 <fchmod@plt+0x10640>
mov    0x8077414,%eax
jmp    8068875 <fchmod@plt+0x1e415>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
lea    0x24(%esp),%eax
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
mov    0x807769c,%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8067120 <fchmod@plt+0x1ccc0>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049be0 <free@plt>
cmp    $0xffffffff,%ebx
je     8068958 <fchmod@plt+0x1e4f8>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077704,%eax
cmp    %eax,0x20(%esp)
jne    806894c <fchmod@plt+0x1e4ec>
movl   $0x5,0x8(%esp)
movl   $0x806e65b,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
call   8049ee0 <beep@plt>
jmp    806894c <fchmod@plt+0x1e4ec>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebp
mov    0x44(%esp),%eax
mov    0x40(%esp),%edi
movb   $0x0,(%eax)
movb   $0x0,0x0(%ebp)
cmpb   $0x0,0x80773dc
jne    8068a48 <fchmod@plt+0x1e5e8>
nop
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
test   %eax,%eax
mov    %eax,%ebx
je     80689b8 <fchmod@plt+0x1e558>
mov    (%ebx),%esi
cmp    $0xffffffff,%esi
je     8068a00 <fchmod@plt+0x1e5a0>
cmp    $0x1b,%esi
je     8068a18 <fchmod@plt+0x1e5b8>
mov    0x80776a0,%eax
cmp    $0x1,%eax
je     8068be0 <fchmod@plt+0x1e780>
jle    8068cdb <fchmod@plt+0x1e87b>
cmp    $0x2,%eax
je     8068c20 <fchmod@plt+0x1e7c0>
cmp    $0x3,%eax
je     8068a66 <fchmod@plt+0x1e606>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%esi
mov    %ebx,(%esp)
call   8049be0 <free@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x80776a0,%edx
cmp    $0x2,%edx
lea    0x1(%edx),%ecx
jbe    8068a3b <fchmod@plt+0x1e5db>
mov    %ecx,%eax
mov    $0x55555556,%edx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sub    %eax,%edx
lea    (%edx,%edx,2),%eax
sub    %eax,%ecx
mov    %ecx,0x80776a0
jmp    8068a00 <fchmod@plt+0x1e5a0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8066f60 <fchmod@plt+0x1cb00>
test   %eax,%eax
mov    %eax,%ebx
jne    80689ce <fchmod@plt+0x1e56e>
xor    %esi,%esi
jmp    8068a0d <fchmod@plt+0x1e5ad>
mov    0x807769c,%eax
movl   $0x0,0x80776a0
00
test   %eax,%eax
jne    8068dce <fchmod@plt+0x1e96e>
cmp    $0xffffffff,%esi
je     8068a00 <fchmod@plt+0x1e5a0>
cmp    $0x162,%esi
je     8068a00 <fchmod@plt+0x1e5a0>
jg     8068ae8 <fchmod@plt+0x1e688>
cmp    $0x107,%esi
je     8068eb0 <fchmod@plt+0x1ea50>
jg     8068b48 <fchmod@plt+0x1e6e8>
cmp    $0x103,%esi
je     8068e2f <fchmod@plt+0x1e9cf>
jle    8068d1b <fchmod@plt+0x1e8bb>
cmp    $0x104,%esi
je     8068d91 <fchmod@plt+0x1e931>
cmp    $0x105,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
mov    (%ebx),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
xchg   %ax,%ax
cmp    $0x187,%esi
je     8068d60 <fchmod@plt+0x1e900>
jg     8068b90 <fchmod@plt+0x1e730>
cmp    $0x17b,%esi
je     8068e48 <fchmod@plt+0x1e9e8>
jle    8068ceb <fchmod@plt+0x1e88b>
cmp    $0x17f,%esi
je     8068de9 <fchmod@plt+0x1e989>
cmp    $0x182,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
mov    (%ebx),%eax
movl   $0x27,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
cmp    $0xffffffff,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
jmp    8068a00 <fchmod@plt+0x1e5a0>
xchg   %ax,%ax
cmp    $0x15d,%esi
je     8068e7e <fchmod@plt+0x1ea1e>
jle    8068d45 <fchmod@plt+0x1e8e5>
cmp    $0x15f,%esi
je     8068b24 <fchmod@plt+0x1e6c4>
jl     8068a00 <fchmod@plt+0x1e5a0>
cmp    $0x160,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
mov    (%ebx),%eax
movl   $0xc,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
lea    0x0(%esi),%esi
cmp    $0x192,%esi
je     8068ad0 <fchmod@plt+0x1e670>
jle    8068d79 <fchmod@plt+0x1e919>
cmp    $0x197,%esi
je     8068bc2 <fchmod@plt+0x1e762>
cmp    $0x19a,%esi
je     8068a00 <fchmod@plt+0x1e5a0>
cmp    $0x195,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
movl   $0x0,0x4(%esp)
movl   $0x30,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
lea    0x0(%esi),%esi
mov    0x807769c,%eax
movl   $0x0,0x80776a0
00
test   %eax,%eax
jne    8068dbb <fchmod@plt+0x1e95b>
mov    0x44(%esp),%eax
movb   $0x1,(%eax)
lea    0x80(%esi),%eax
cmp    $0x17f,%eax
ja     8068a86 <fchmod@plt+0x1e626>
call   804a410 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%esi,4),%esi
jmp    8068a7d <fchmod@plt+0x1e61d>
xchg   %ax,%ax
mov    0x807769c,%eax
test   %eax,%eax
jne    8068daa <fchmod@plt+0x1e94a>
lea    -0x30(%esi),%edx
mov    0x80776a4,%eax
cmp    $0x2,%edx
ja     8068ec9 <fchmod@plt+0x1ea69>
test   %eax,%eax
je     8068c4a <fchmod@plt+0x1e7ea>
test   %eax,%eax
jle    8068ed2 <fchmod@plt+0x1ea72>
add    $0x1,%eax
mov    %esi,(%esp)
mov    %eax,0x80776a4
call   80674a0 <fchmod@plt+0x1d040>
cmp    $0xffffffff,%eax
je     8068a00 <fchmod@plt+0x1e5a0>
lea    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x80776a0
00
movl   $0x0,0x80776a4
00
call   804d330 <fchmod@plt+0x2ed0>
mov    %eax,%edi
mov    0x1c(%esp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%esi
jle    8068cba <fchmod@plt+0x1e85a>
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%ecx
mov    %ecx,(%esi,%edx,4)
mov    0x1c(%esp),%ecx
add    $0x1,%edx
cmp    %edx,%ecx
jg     8068ca8 <fchmod@plt+0x1e848>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   8066e40 <fchmod@plt+0x1c9e0>
mov    %edi,(%esp)
call   8049be0 <free@plt>
mov    %esi,(%esp)
call   8049be0 <free@plt>
jmp    8068a00 <fchmod@plt+0x1e5a0>
test   %eax,%eax
lea    0x0(%esi),%esi
je     8068a7d <fchmod@plt+0x1e61d>
jmp    8068a00 <fchmod@plt+0x1e5a0>
cmp    $0x163,%esi
je     8068e48 <fchmod@plt+0x1e9e8>
cmp    $0x17a,%esi
je     8068a00 <fchmod@plt+0x1e5a0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804cdb0 <fchmod@plt+0x2950>
xor    $0x1,%eax
mov    %al,0x0(%ebp)
jmp    8068a05 <fchmod@plt+0x1e5a5>
cmp    $0x7f,%esi
je     8068e0b <fchmod@plt+0x1e9ab>
cmp    $0x102,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
mov    (%ebx),%eax
movl   $0xf,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
cmp    $0x157,%esi
je     8068e97 <fchmod@plt+0x1ea37>
cmp    $0x15c,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
movl   $0x28,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
cmp    $0x188,%esi
je     8068e65 <fchmod@plt+0x1ea05>
cmp    $0x189,%esi
jne    8068d08 <fchmod@plt+0x1e8a8>
mov    (%ebx),%eax
movl   $0xe,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    0x44(%esp),%eax
movl   $0x0,0x80776a0
00
movb   $0x1,(%eax)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8068900 <fchmod@plt+0x1e4a0>
mov    %eax,%esi
jmp    8068a7d <fchmod@plt+0x1e61d>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8068900 <fchmod@plt+0x1e4a0>
mov    %eax,(%esp)
call   8067730 <fchmod@plt+0x1d2d0>
mov    %eax,%esi
jmp    8068a7d <fchmod@plt+0x1e61d>
mov    (%ebx),%eax
testb  $0x1,0x8077416
mov    %eax,0x4(%esp)
je     8068e1c <fchmod@plt+0x1e9bc>
movl   $0x22,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
testb  $0x1,0x8077416
movl   $0x0,0x4(%esp)
jne    8068df8 <fchmod@plt+0x1e998>
movl   $0x21,(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    (%ebx),%eax
movl   $0xd,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    0x80777bc,%eax
movl   $0x31,0x4(%esp)
mov    %eax,(%esp)
call   8053260 <fchmod@plt+0x8e00>
mov    0x8(%eax),%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    (%ebx),%eax
movl   $0x33,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    (%ebx),%eax
movl   $0xb,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    (%ebx),%eax
movl   $0x11,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
mov    (%ebx),%eax
movl   $0x21,(%esp)
mov    %eax,0x4(%esp)
call   80532b0 <fchmod@plt+0x8e50>
mov    %eax,%esi
jmp    8068b38 <fchmod@plt+0x1e6d8>
cmp    $0x9,%edx
jbe    8068c42 <fchmod@plt+0x1e7e2>
test   %eax,%eax
movl   $0x0,0x80776a0
00
jne    8068eef <fchmod@plt+0x1ea8f>
mov    %esi,(%esp)
call   8067730 <fchmod@plt+0x1d2d0>
mov    %eax,%esi
jmp    8068a7d <fchmod@plt+0x1e61d>
movl   $0x0,0x80776a4
00
jmp    8068a7d <fchmod@plt+0x1e61d>
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    %ebx,0x20(%esp)
lea    0x1b(%esp),%ebx
mov    %esi,0x24(%esp)
lea    0x1a(%esp),%esi
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,0x28(%esp)
xor    %edi,%edi
movb   $0x0,0x1a(%esp)
movb   $0x0,0x1b(%esp)
call   8068990 <fchmod@plt+0x1e530>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8068f6a <fchmod@plt+0x1eb0a>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80777bc,%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8067a40 <fchmod@plt+0x1d5e0>
test   %eax,%eax
je     8068f6a <fchmod@plt+0x1eb0a>
mov    %eax,(%esp)
call   8056590 <fchmod@plt+0xc130>
mov    %eax,%edi
mov    %edi,%eax
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8077340,%esi
movl   $0x8070270,(%esp)
mov    0x50(%esp),%edi
call   8066b00 <fchmod@plt+0x1c6a0>
movl   $0x0,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x1c(%esp)
mov    0x80772e0,%eax
mov    %eax,0x4(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
call   8067ae0 <fchmod@plt+0x1d680>
cmp    $0x3,%esi
jle    8069050 <fchmod@plt+0x1ebf0>
mov    0x8077340,%ecx
mov    $0x55555556,%edx
mov    0x1c(%esp),%ebx
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,%eax
imul   %edx
mov    0x8077830,%eax
sar    $0x1f,%ecx
sub    %ecx,%edx
sub    $0x3,%edx
cmp    %edx,0x1c(%esp)
mov    %eax,(%esp)
cmova  %edx,%ebx
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806903d <fchmod@plt+0x1ebdd>
mov    %ebx,0x4(%esp)
movl   $0x8070270,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
movl   $0x8070270,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
add    $0x3,%ebx
sub    %ebx,%esi
test   %esi,%esi
setg   %dl
mov    %ebx,0x1c(%esp)
mov    %edx,%ebp
jmp    8069054 <fchmod@plt+0x1ebf4>
nop
xor    %esi,%esi
xor    %ebp,%ebp
test   %edi,%edi
mov    $0x806e126,%eax
movl   $0x806e126,0x20(%esp)
je     80693c8 <fchmod@plt+0x1ef68>
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
cmp    %esi,%eax
mov    %eax,%ebx
jae    806907d <fchmod@plt+0x1ec1d>
mov    %ebp,%eax
test   %al,%al
jne    80690d8 <fchmod@plt+0x1ec78>
xor    %ebp,%ebp
mov    %ebp,(%esp)
call   8049be0 <free@plt>
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax)
je     8069241 <fchmod@plt+0x1ede1>
mov    0x8077340,%eax
sub    $0x1,%eax
cmp    %eax,%ebx
jb     80691f8 <fchmod@plt+0x1ed98>
mov    0x8077830,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069241 <fchmod@plt+0x1ede1>
mov    0x8077340,%eax
mov    %eax,0x4(%esp)
jmp    806921c <fchmod@plt+0x1edbc>
add    $0x1,%ebx
test   %edi,%edi
je     8069368 <fchmod@plt+0x1ef08>
movl   $0x5,0x8(%esp)
movl   $0x807028d,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x24(%esp)
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
add    %ebx,%edx
cmp    %esi,%edx
jae    806912f <fchmod@plt+0x1eccf>
add    $0x2,%eax
mov    %eax,%edx
mov    %eax,0x28(%esp)
add    %ebx,%edx
test   %edi,%edi
movb   $0x0,0x2f(%esp)
je     80693bb <fchmod@plt+0x1ef5b>
cmp    %edx,%esi
jb     8069288 <fchmod@plt+0x1ee28>
sub    %edx,%esi
xor    %ebp,%ebp
xor    %eax,%eax
mov    %esi,%edx
cmpb   $0x0,0x2f(%esp)
je     806929b <fchmod@plt+0x1ee3b>
sub    %eax,%edx
mov    $0xaaaaaaab,%ecx
mov    %edx,%eax
mul    %ecx
mov    0x8077830,%eax
movl   $0x0,0x4(%esp)
shr    %edx
add    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     80691b3 <fchmod@plt+0x1ed53>
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
cmpb   $0x0,0x2f(%esp)
jne    806907f <fchmod@plt+0x1ec1f>
mov    0x8077830,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
mov    0x8077830,%eax
movl   $0xffffffff,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
jmp    806907f <fchmod@plt+0x1ec1f>
lea    0x0(%esi,%eiz,1),%esi
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x8077830,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069241 <fchmod@plt+0x1ede1>
mov    %ebx,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
mov    0x8077830,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <wnoutrefresh@plt>
xchg   %ax,%ax
xor    %edx,%edx
xor    %esi,%esi
xor    %ebp,%ebp
xor    %eax,%eax
cmpb   $0x0,0x2f(%esp)
jne    8069157 <fchmod@plt+0x1ecf7>
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x18(%esp),%edx
movl   $0x0,0xc(%esp)
cmp    %edx,%eax
jb     8069418 <fchmod@plt+0x1efb8>
cmp    $0x7,%esi
jle    8069418 <fchmod@plt+0x1efb8>
sub    %edx,%eax
lea    -0x3(%esi),%ecx
add    $0x3,%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
movl   $0x0,0x4(%esp)
mov    %eax,%ebp
mov    0x1c(%esp),%eax
sub    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069330 <fchmod@plt+0x1eed0>
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x8077830,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
mov    0x8077830,%eax
mov    %esi,0x8(%esp)
movl   $0x8070333,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
jmp    80691d3 <fchmod@plt+0x1ed73>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%eax
mov    (%eax),%eax
cmpb   $0x0,(%eax)
movl   $0x5,0x8(%esp)
jne    8069448 <fchmod@plt+0x1efe8>
movl   $0x806b469,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x24(%esp)
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
movb   $0x1,0x2f(%esp)
add    $0x1,%eax
mov    %eax,0x28(%esp)
lea    (%eax,%ebx,1),%edx
mov    0x80773f8,%eax
mov    (%eax),%edi
jmp    806913c <fchmod@plt+0x1ecdc>
nop
mov    0x80773f8,%eax
cmpb   $0x0,0x24(%eax)
jne    8069468 <fchmod@plt+0x1f008>
testb  $0x1,0x8077415
jne    8069490 <fchmod@plt+0x1f030>
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax)
jne    8069069 <fchmod@plt+0x1ec09>
movl   $0x5,0x8(%esp)
movl   $0x807027f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
jmp    8069069 <fchmod@plt+0x1ec09>
lea    0x0(%esi),%esi
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x18(%esp),%edx
jmp    8069157 <fchmod@plt+0x1ecf7>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8070292,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x24(%esp)
jmp    8069103 <fchmod@plt+0x1eca3>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x807027f,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x20(%esp)
jmp    80693e4 <fchmod@plt+0x1ef84>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8070288,0x4(%esp)
movl   $0x0,(%esp)
call   8049c80 <dcgettext@plt>
mov    %eax,0x20(%esp)
jmp    80693e4 <fchmod@plt+0x1ef84>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80773f8,%eax
cmpb   $0x0,0x24(%eax)
je     80694d0 <fchmod@plt+0x1f070>
repz ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movb   $0x1,0x24(%eax)
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
add    $0x1c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80776b8,%eax
test   %eax,%eax
jle    806950e <fchmod@plt+0x1f0ae>
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x80776b8
jne    806950e <fchmod@plt+0x1f0ae>
testb  $0x4,0x8077414
je     8069510 <fchmod@plt+0x1f0b0>
repz ret
sub    $0x1c,%esp
call   8067ba0 <fchmod@plt+0x1d740>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%esi
lea    0x0(%esi),%esi
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8068990 <fchmod@plt+0x1e530>
cmp    $0xffffffff,%eax
je     8069558 <fchmod@plt+0x1f0f8>
cmp    0x8077704,%ebx
je     806957c <fchmod@plt+0x1f11c>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,0x1c(%esp)
call   80694f0 <fchmod@plt+0x1f090>
mov    0x1c(%esp),%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edi
mov    0x8c(%esp),%edx
mov    %edx,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x8c(%esp),%edx
mov    %eax,0x34(%esp)
mov    0x8077340,%eax
lea    -0x1(%edx,%eax,1),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x88(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x30(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069621 <fchmod@plt+0x1f1c1>
mov    0x84(%esp),%edx
mov    0x8077704,%eax
movl   $0xffffffff,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80773f8,%eax
mov    0x48(%eax),%ebx
test   %ebx,%ebx
je     806991c <fchmod@plt+0x1f4bc>
testb  $0x20,0x8077416
jne    806991c <fchmod@plt+0x1f4bc>
mov    0x10(%edi),%edx
test   %edx,%edx
je     8069e02 <fchmod@plt+0x1f9a2>
lea    0x50(%esp),%ebp
lea    0x0(%esi),%esi
cmpb   $0x0,0x4(%ebx)
jne    8069ae0 <fchmod@plt+0x1f680>
movl   $0x0,0x8(%esp)
mov    0x8(%ebx),%eax
shl    $0x8,%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
mov    0x18(%ebx),%edx
test   %edx,%edx
je     8069b97 <fchmod@plt+0x1f737>
mov    0x10(%edi),%eax
test   %eax,%eax
je     80698d0 <fchmod@plt+0x1f470>
mov    0x20(%ebx),%ecx
lea    (%eax,%ecx,2),%ecx
movzwl (%ecx),%eax
cmp    $0x2,%ax
je     80698d0 <fchmod@plt+0x1f470>
cmp    $0xffff,%ax
mov    0xc(%edi),%esi
je     8069cd4 <fchmod@plt+0x1f874>
cmp    $0x10,%ax
je     8069d2e <fchmod@plt+0x1f8ce>
cmp    $0x4,%ax
jne    8069726 <fchmod@plt+0x1f2c6>
nop
jmp    8069d7c <fchmod@plt+0x1f91c>
lea    0x0(%esi),%esi
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
jne    8069e77 <fchmod@plt+0x1fa17>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
je     8069738 <fchmod@plt+0x1f2d8>
mov    0xc(%esi),%esi
test   %esi,%esi
jne    80696c8 <fchmod@plt+0x1f268>
mov    0x54(%esp),%edx
cmp    %edx,0x50(%esp)
je     8069cfc <fchmod@plt+0x1f89c>
mov    0x30(%esp),%eax
test   %eax,%eax
je     80698d0 <fchmod@plt+0x1f470>
xor    %eax,%eax
xor    %esi,%esi
jmp    8069781 <fchmod@plt+0x1f321>
lea    0x0(%esi),%esi
mov    0x54(%esp),%edx
add    %edx,0x58(%esp)
add    0x5c(%esp),%edx
cmp    %edx,0x34(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x5c(%esp)
jae    8069772 <fchmod@plt+0x1f312>
cmp    %eax,%edx
jg     8069b08 <fchmod@plt+0x1f6a8>
lea    0x1(%eax),%esi
cmp    %esi,0x30(%esp)
mov    %esi,%eax
jbe    80698d0 <fchmod@plt+0x1f470>
xor    %edx,%edx
test   %esi,%esi
setne  %dl
mov    %edx,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
add    (%edi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
je     80698d0 <fchmod@plt+0x1f470>
mov    0x50(%esp),%edx
add    %esi,%edx
cmp    %edx,0x30(%esp)
jbe    80698d0 <fchmod@plt+0x1f470>
add    %esi,0x54(%esp)
xor    %esi,%esi
cmp    %edx,0x34(%esp)
mov    %edx,0x50(%esp)
movl   $0x0,0x38(%esp)
jb     8069ab0 <fchmod@plt+0x1f650>
mov    0x84(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
xor    %edx,%edx
movl   $0x1,0x8(%esp)
mov    %eax,0x3c(%esp)
mov    0x54(%esp),%eax
test   %eax,%eax
setne  %dl
mov    %edx,0x10(%esp)
lea    0x58(%esp),%edx
mov    %edx,0xc(%esp)
add    (%edi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
test   %eax,%eax
je     8069750 <fchmod@plt+0x1f2f0>
mov    0x8(%edi),%esi
test   %esi,%esi
jne    806984b <fchmod@plt+0x1f3eb>
jmp    8069ad0 <fchmod@plt+0x1f670>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%esi
test   %esi,%esi
je     8069ad0 <fchmod@plt+0x1f670>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
je     8069840 <fchmod@plt+0x1f3e0>
mov    0x38(%esp),%edx
mov    0x8077704,%eax
mov    %edx,0x8(%esp)
mov    0x88(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     80698c2 <fchmod@plt+0x1f462>
mov    0x84(%esp),%eax
add    0x3c(%esp),%eax
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x20(%ebx),%edx
mov    0x10(%edi),%eax
movw   $0x8,(%eax,%edx,2)
xchg   %ax,%ax
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
movl   $0x200000,0x4(%esp)
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
movl   $0x0,0x8(%esp)
mov    0x8(%ebx),%eax
shl    $0x8,%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
mov    0x1c(%ebx),%ebx
test   %ebx,%ebx
jne    8069650 <fchmod@plt+0x1f1f0>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     8069a98 <fchmod@plt+0x1f638>
mov    0x28(%eax),%ecx
mov    0x4(%edi),%edx
cmp    0x4(%ecx),%edx
jg     8069aa0 <fchmod@plt+0x1f640>
jge    8069943 <fchmod@plt+0x1f4e3>
mov    0x10(%eax),%eax
cmp    0x4(%eax),%edx
jl     8069a98 <fchmod@plt+0x1f638>
lea    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x10(%esp)
call   8066bd0 <fchmod@plt+0x1c770>
mov    0x40(%esp),%eax
mov    0x4(%edi),%edx
cmp    %edx,0x4(%eax)
jge    8069d1b <fchmod@plt+0x1f8bb>
mov    0x34(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x48(%esp),%ecx
cmp    0x4(%ecx),%edx
jge    8069d08 <fchmod@plt+0x1f8a8>
mov    0x30(%esp),%edx
mov    %edx,0x4c(%esp)
cmp    %eax,0x30(%esp)
jbe    8069a98 <fchmod@plt+0x1f638>
mov    0x34(%esp),%edx
cmp    0x4c(%esp),%edx
jae    8069a98 <fchmod@plt+0x1f638>
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    $0xffffffff,%ebx
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,%ebp
mov    %eax,%edx
mov    0x4c(%esp),%eax
sub    0x8c(%esp),%ebp
cmp    %eax,0x30(%esp)
mov    %ebp,%esi
ja     8069e58 <fchmod@plt+0x1f9f8>
test   %ebp,%ebp
js     8069e4d <fchmod@plt+0x1f9ed>
mov    0x84(%esp),%edx
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
test   %ebx,%ebx
mov    %eax,%edi
jle    8069a1a <fchmod@plt+0x1f5ba>
mov    0x84(%esp),%eax
mov    %ebx,0x4(%esp)
add    %edi,%eax
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,%ebx
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
mov    0x88(%esp),%edx
mov    0x8077704,%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069a75 <fchmod@plt+0x1f615>
mov    0x8077704,%eax
add    0x84(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%eax),%eax
cmp    0x4(%eax),%edx
jle    8069943 <fchmod@plt+0x1f4e3>
jmp    8069a98 <fchmod@plt+0x1f638>
xchg   %ax,%ax
mov    %edx,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,%esi
sub    0x8c(%esp),%esi
mov    %esi,0x38(%esp)
jmp    80697de <fchmod@plt+0x1f37e>
mov    0x50(%esp),%eax
jmp    8069772 <fchmod@plt+0x1f312>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
movl   $0x200000,0x4(%esp)
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
jmp    806965a <fchmod@plt+0x1f1fa>
lea    0x0(%esi),%esi
mov    %edx,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x84(%esp),%edx
add    0x3c(%esp),%edx
sub    0x8c(%esp),%eax
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
sub    %esi,%eax
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,%esi
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
mov    0x28(%esp),%edx
cmp    $0xffffffff,%eax
je     8069b7a <fchmod@plt+0x1f71a>
mov    0x8077704,%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
test   %esi,%esi
jle    8069ad0 <fchmod@plt+0x1f670>
mov    0x10(%edi),%eax
mov    0x20(%ebx),%edx
movw   $0x20,(%eax,%edx,2)
mov    0x50(%esp),%eax
jmp    8069772 <fchmod@plt+0x1f312>
mov    0x30(%esp),%eax
xor    %esi,%esi
test   %eax,%eax
jne    8069c7a <fchmod@plt+0x1f81a>
jmp    80698d0 <fchmod@plt+0x1f470>
lea    0x0(%esi),%esi
cmp    %eax,0x30(%esp)
jbe    8069c70 <fchmod@plt+0x1f810>
cmp    %edx,0x34(%esp)
xchg   %ax,%ax
jae    8069c70 <fchmod@plt+0x1f810>
xor    %edx,%edx
xor    %ecx,%ecx
cmp    %eax,0x34(%esp)
jb     8069cde <fchmod@plt+0x1f87e>
mov    0x84(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x28(%esp),%edx
add    0x84(%esp),%esi
sub    0x8c(%esp),%eax
mov    %esi,(%esp)
sub    %edx,%eax
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x2c(%esp),%ecx
mov    0x88(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x38(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069c65 <fchmod@plt+0x1f805>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x54(%esp),%esi
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,0x30(%esp)
jbe    80698d0 <fchmod@plt+0x1f470>
xor    %eax,%eax
test   %esi,%esi
setne  %al
mov    %eax,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%edi),%eax
add    %esi,%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
je     80698d0 <fchmod@plt+0x1f470>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
add    %esi,%eax
add    %esi,%edx
cmp    %edx,%eax
mov    %edx,%esi
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
jne    8069bb0 <fchmod@plt+0x1f750>
add    $0x1,%esi
mov    %esi,0x54(%esp)
jmp    8069c70 <fchmod@plt+0x1f810>
movw   $0x2,(%ecx)
jmp    8069726 <fchmod@plt+0x1f2c6>
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,%edx
sub    0x8c(%esp),%edx
mov    %edx,%ecx
jmp    8069bd4 <fchmod@plt+0x1f774>
add    $0x1,%edx
mov    %edx,0x54(%esp)
jmp    80698d0 <fchmod@plt+0x1f470>
mov    0x30(%esp),%edx
cmp    0x4c(%esp),%edx
jae    806999c <fchmod@plt+0x1f53c>
jmp    8069994 <fchmod@plt+0x1f534>
mov    0x44(%esp),%eax
cmp    %eax,0x34(%esp)
jbe    8069987 <fchmod@plt+0x1f527>
jmp    806997f <fchmod@plt+0x1f51f>
mov    0x88(%esp),%edx
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806990c <fchmod@plt+0x1f4ac>
movl   $0xffffffff,0x8(%esp)
mov    0x84(%esp),%edx
mov    0x8077704,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
jmp    806990c <fchmod@plt+0x1f4ac>
lea    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%edi),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804a0a0 <regexec@plt>
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x84(%esp),%edx
sub    0x8c(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x88(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%esi
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806990c <fchmod@plt+0x1f4ac>
mov    %esi,0x8(%esp)
jmp    8069d5f <fchmod@plt+0x1f8ff>
mov    0x44(%eax),%eax
test   %eax,%eax
je     8069649 <fchmod@plt+0x1f1e9>
mov    0x10(%eax),%eax
test   %eax,%eax
jle    8069649 <fchmod@plt+0x1f1e9>
add    %eax,%eax
mov    %eax,(%esp)
call   8066570 <fchmod@plt+0x1c110>
mov    0x80773f8,%edx
mov    0x44(%edx),%edx
mov    %eax,0x10(%edi)
mov    0x10(%edx),%edx
test   %edx,%edx
jle    8069649 <fchmod@plt+0x1f1e9>
lea    (%eax,%edx,2),%edx
movw   $0xffff,(%eax)
add    $0x2,%eax
cmp    %edx,%eax
jne    8069e3c <fchmod@plt+0x1f9dc>
jmp    8069649 <fchmod@plt+0x1f1e9>
add    %ebp,%ebx
xor    %esi,%esi
xor    %ebp,%ebp
jmp    80699ea <fchmod@plt+0x1f58a>
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x28(%esp),%edx
mov    %eax,%ebx
sub    %edx,%ebx
jmp    80699e2 <fchmod@plt+0x1f582>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
cmp    %edx,%eax
je     8069cfc <fchmod@plt+0x1f89c>
xor    %ecx,%ecx
mov    %edi,0x38(%esp)
mov    %ecx,%edi
jmp    8069ea0 <fchmod@plt+0x1fa40>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
sub    %eax,%edx
add    %eax,%edi
mov    %edx,0x54(%esp)
add    %edi,%edx
setne  %al
movzbl %al,%eax
mov    %eax,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
add    (%esi),%edx
mov    %edx,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
je     8069f12 <fchmod@plt+0x1fab2>
movl   $0x1,0x10(%esp)
add    $0x1,%edi
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%esi),%eax
add    %edi,%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
jne    8069e98 <fchmod@plt+0x1fa38>
mov    0x38(%esp),%edi
jmp    8069738 <fchmod@plt+0x1f2d8>
mov    0x38(%esp),%edi
mov    %edi,%esi
jmp    8069f2b <fchmod@plt+0x1facb>
lea    0x0(%esi),%esi
mov    0x8(%esi),%esi
test   %esi,%esi
je     8069738 <fchmod@plt+0x1f2d8>
lea    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   804a0a0 <regexec@plt>
cmp    $0x1,%eax
je     8069f20 <fchmod@plt+0x1fac0>
cmp    %esi,%edi
je     8069fb8 <fchmod@plt+0x1fb58>
mov    0x20(%ebx),%edx
mov    $0xffffffff,%esi
mov    0x10(%edi),%eax
movw   $0x10,(%eax,%edx,2)
mov    0x88(%esp),%edx
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     8069738 <fchmod@plt+0x1f2d8>
mov    0x84(%esp),%edx
mov    0x8077704,%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
jmp    8069738 <fchmod@plt+0x1f2d8>
mov    0x5c(%esp),%eax
cmp    %eax,0x34(%esp)
jae    8069738 <fchmod@plt+0x1f2d8>
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    0x84(%esp),%edx
sub    0x8c(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    0x20(%ebx),%edx
mov    %eax,%esi
mov    0x10(%edi),%eax
movw   $0x4,(%eax,%edx,2)
jmp    8069f6e <fchmod@plt+0x1fb0e>
jmp    806a010 <fchmod@plt+0x1fbb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80773f8,%eax
testb  $0x8,0x8077418
mov    0x40(%esp),%edi
je     806a078 <fchmod@plt+0x1fc18>
mov    0xc(%eax),%ebx
xor    %esi,%esi
cmp    %edi,%ebx
je     806a063 <fchmod@plt+0x1fc03>
test   %ebx,%ebx
jne    806a042 <fchmod@plt+0x1fbe2>
jmp    806a063 <fchmod@plt+0x1fc03>
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     806a081 <fchmod@plt+0x1fc21>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
mov    0x8(%ebx),%ebx
divl   0x8077340
cmp    %ebx,%edi
lea    0x1(%esi,%eax,1),%esi
jne    806a038 <fchmod@plt+0x1fbd8>
test   %esi,%esi
js     806a06b <fchmod@plt+0x1fc0b>
cmp    0x8077410,%esi
jl     806a08d <fchmod@plt+0x1fc2d>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%eax),%eax
mov    0x4(%edi),%esi
sub    0x4(%eax),%esi
test   %esi,%esi
js     806a06b <fchmod@plt+0x1fc0b>
cmp    0x8077410,%esi
jge    806a06b <fchmod@plt+0x1fc0b>
mov    0x8077340,%eax
xor    %ebx,%ebx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
testb  $0x8,0x8077418
je     806a280 <fchmod@plt+0x1fe20>
mov    %ebx,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
mov    %eax,%ebp
mov    0x8077418,%eax
mov    %ebp,0x4(%esp)
shr    $0x3,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    %eax,0xc(%esp)
mov    0x8077340,%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x18(%esp)
call   8069590 <fchmod@plt+0x1f130>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
testb  $0x8,0x8077418
jne    806a1b8 <fchmod@plt+0x1fd58>
test   %ebp,%ebp
jne    806a180 <fchmod@plt+0x1fd20>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%edx
add    %edx,%ebp
cmp    %ebp,%eax
ja     806a148 <fchmod@plt+0x1fce8>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8077704,%eax
sub    $0x1,%edx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806a13c <fchmod@plt+0x1fcdc>
mov    0x8077704,%eax
movl   $0x24,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
xor    %eax,%eax
jmp    806a13e <fchmod@plt+0x1fcde>
xchg   %ax,%ax
mov    0x8077704,%eax
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806a126 <fchmod@plt+0x1fcc6>
mov    0x8077704,%eax
movl   $0x24,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
jmp    806a126 <fchmod@plt+0x1fcc6>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077340,%ecx
add    %ecx,%ebx
cmp    %ebx,%eax
mov    %eax,0x1c(%esp)
jb     806a13c <fchmod@plt+0x1fcdc>
cmp    0x8077410,%esi
jge    806a13c <fchmod@plt+0x1fcdc>
mov    %esi,%ebp
jmp    806a1f4 <fchmod@plt+0x1fd94>
xchg   %ax,%ax
cmp    %ebp,0x8077410
jle    806a070 <fchmod@plt+0x1fc10>
mov    0x8077704,%eax
add    $0x1,%ebp
mov    %ecx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
mov    0x8077418,%eax
mov    %ebx,0x4(%esp)
shr    $0x3,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    %eax,0xc(%esp)
mov    0x8077340,%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8067c40 <fchmod@plt+0x1d7e0>
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x18(%esp)
call   8069590 <fchmod@plt+0x1f130>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <free@plt>
mov    0x8077340,%ecx
mov    %ebp,%eax
sub    %esi,%eax
add    %ecx,%ebx
cmp    %ebx,0x1c(%esp)
jae    806a1e8 <fchmod@plt+0x1fd88>
jmp    806a070 <fchmod@plt+0x1fc10>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8066a80 <fchmod@plt+0x1c620>
mov    %eax,%ebx
jmp    806a0be <fchmod@plt+0x1fc5e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80773f8,%edx
mov    $0x1,%eax
cmpb   $0x0,0x25(%edx)
je     806a2b8 <fchmod@plt+0x1fe58>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
cmp    %eax,%ebx
setne  %al
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x80773f8,%edx
mov    $0x1,%eax
cmpb   $0x0,0x25(%edx)
je     806a308 <fchmod@plt+0x1fea8>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
mov    %eax,%ebx
mov    0x80773f8,%eax
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   80669e0 <fchmod@plt+0x1c580>
cmp    %eax,%ebx
setne  %al
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%eax
testb  $0x8,0x8077418
mov    0xc(%eax),%ebx
je     806a3b8 <fchmod@plt+0x1ff58>
mov    0x8077410,%eax
movl   $0x0,0x807740c
00
test   %eax,%eax
jle    806a3ab <fchmod@plt+0x1ff4b>
test   %ebx,%ebx
je     806a3dd <fchmod@plt+0x1ff7d>
xor    %eax,%eax
xor    %esi,%esi
jmp    806a381 <fchmod@plt+0x1ff21>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     806a3c8 <fchmod@plt+0x1ff68>
mov    0x807740c,%eax
add    $0x1,%eax
mov    %eax,0x807740c
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
mov    0x8(%ebx),%ebx
divl   0x8077340
lea    0x1(%esi,%eax,1),%esi
mov    0x8077410,%eax
cmp    %esi,%eax
jg     806a378 <fchmod@plt+0x1ff18>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077410,%eax
mov    %eax,0x807740c
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    0x807740c,%edx
sub    %esi,%eax
add    %edx,%eax
mov    %eax,0x807740c
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xor    %edx,%edx
xor    %esi,%esi
jmp    806a3ce <fchmod@plt+0x1ff6e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edi
test   %ecx,%ecx
jle    806a4b0 <fchmod@plt+0x20050>
movl   $0x0,(%esp)
call   806a2f0 <fchmod@plt+0x1fe90>
testb  $0x8,0x8077418
mov    %eax,%ebp
jne    806a4d0 <fchmod@plt+0x20070>
mov    0x80773f8,%eax
mov    0xc(%eax),%esi
mov    0x44(%esp),%ebx
jmp    806a453 <fchmod@plt+0x1fff3>
cmp    %esi,0x4(%eax)
je     806a498 <fchmod@plt+0x20038>
mov    0xc(%esi),%edx
testb  $0x8,0x8077418
mov    %edx,0xc(%eax)
jne    806a46b <fchmod@plt+0x2000b>
sub    $0x1,%ebx
test   %ebx,%ebx
jle    806a498 <fchmod@plt+0x20038>
mov    0x80773f8,%eax
mov    0xc(%eax),%esi
test   %edi,%edi
je     806a430 <fchmod@plt+0x1ffd0>
cmp    %esi,0x8(%eax)
je     806a498 <fchmod@plt+0x20038>
mov    0x8(%esi),%edx
testb  $0x8,0x8077418
mov    %edx,0xc(%eax)
je     806a444 <fchmod@plt+0x1ffe4>
mov    0xc(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
divl   0x8077340
sub    %eax,%ebx
test   %eax,%eax
mov    $0x1,%eax
cmovg  %eax,%ebp
sub    $0x1,%ebx
test   %ebx,%ebx
jg     806a44b <fchmod@plt+0x1ffeb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
sub    %ebx,%eax
mov    %eax,%ebx
mov    %ebp,%eax
jne    806a4b8 <fchmod@plt+0x20058>
test   %al,%al
jne    806a4c0 <fchmod@plt+0x20060>
cmp    0x8077410,%ebx
jge    806a4c0 <fchmod@plt+0x20060>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %al,%al
je     806a580 <fchmod@plt+0x20120>
movb   $0x1,0x80773bc
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x1,%edi
jne    806a422 <fchmod@plt+0x1ffc2>
mov    0x80773f8,%eax
mov    0x807740c,%edx
mov    0xc(%eax),%esi
test   %edx,%edx
mov    %esi,%ebx
jle    806a50c <fchmod@plt+0x200ac>
test   %esi,%esi
jne    806a502 <fchmod@plt+0x200a2>
jmp    806a50c <fchmod@plt+0x200ac>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     806a50c <fchmod@plt+0x200ac>
sub    $0x1,%edx
mov    0x8(%ebx),%ebx
test   %edx,%edx
jg     806a4f8 <fchmod@plt+0x20098>
test   %ebx,%ebx
je     806a42a <fchmod@plt+0x1ffca>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
divl   0x8077340
mov    %eax,%ebx
mov    0x80773f8,%eax
test   %ebx,%ebx
mov    0xc(%eax),%esi
jle    806a42a <fchmod@plt+0x1ffca>
test   %esi,%esi
jne    806a558 <fchmod@plt+0x200f8>
jmp    806a42a <fchmod@plt+0x1ffca>
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,0x44(%esp)
test   %ebx,%ebx
mov    0x8(%esi),%esi
jle    806a578 <fchmod@plt+0x20118>
test   %esi,%esi
je     806a578 <fchmod@plt+0x20118>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
divl   0x8077340
not    %eax
add    %eax,%ebx
mov    0x80773f8,%eax
cmp    %esi,0x8(%eax)
jne    806a548 <fchmod@plt+0x200e8>
mov    0xc(%eax),%esi
jmp    806a42a <fchmod@plt+0x1ffca>
cmp    0x8077410,%ebx
jge    806a4c0 <fchmod@plt+0x20060>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
test   %edi,%edi
jne    806a673 <fchmod@plt+0x20213>
mov    %ebx,%eax
neg    %eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a390 <wscrl@plt>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
mov    0x80773f8,%eax
mov    0xc(%eax),%esi
cmp    0x4(%eax),%esi
mov    0x8077410,%eax
je     806a6bd <fchmod@plt+0x2025d>
xor    %edx,%edx
cmp    $0x1,%ebx
setne  %dl
lea    0x1(%ebx,%edx,1),%ebp
cmp    %eax,%ebp
cmovg  %eax,%ebp
cmp    $0x1,%edi
je     806a6c9 <fchmod@plt+0x20269>
test   %esi,%esi
setne  %dl
test   %dl,%dl
je     806a4b0 <fchmod@plt+0x20050>
test   %ebp,%ebp
jle    806a4b0 <fchmod@plt+0x20050>
cmp    $0x1,%edi
mov    %ebp,%ebx
sete   %dl
jmp    806a630 <fchmod@plt+0x201d0>
lea    0x0(%esi),%esi
test   %esi,%esi
je     806a4b0 <fchmod@plt+0x20050>
cmp    %ebp,%ebx
jne    806a638 <fchmod@plt+0x201d8>
test   %dl,%dl
jne    806a664 <fchmod@plt+0x20204>
cmp    $0x1,%ebx
jne    806a642 <fchmod@plt+0x201e2>
test   %edi,%edi
nop
je     806a664 <fchmod@plt+0x20204>
mov    0x80773f8,%ecx
xor    %eax,%eax
cmp    %esi,0x10(%ecx)
je     806a6c4 <fchmod@plt+0x20264>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %dl,0x1c(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
movzbl 0x1c(%esp),%edx
sub    $0x1,%ebx
mov    0x8(%esi),%esi
test   %ebx,%ebx
jg     806a628 <fchmod@plt+0x201c8>
jmp    806a4b0 <fchmod@plt+0x20050>
mov    0x8077704,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804a390 <wscrl@plt>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
cmp    $0x1,%edi
jne    806a708 <fchmod@plt+0x202a8>
mov    0x80773f8,%edx
mov    0x8077410,%eax
mov    0xc(%edx),%esi
mov    0x8(%edx),%edx
mov    0x4(%esi),%ecx
add    %eax,%ecx
cmp    0x4(%edx),%ecx
jle    806a5e9 <fchmod@plt+0x20189>
mov    %eax,%ebx
jmp    806a5e9 <fchmod@plt+0x20189>
mov    0x18(%ecx),%eax
jmp    806a64f <fchmod@plt+0x201ef>
sub    %ebp,%eax
test   %esi,%esi
setne  %cl
test   %eax,%eax
mov    %ecx,%edx
jle    806a608 <fchmod@plt+0x201a8>
test   %cl,%cl
jne    806a6f6 <fchmod@plt+0x20296>
jmp    806a4b0 <fchmod@plt+0x20050>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
lea    0x0(%esi),%esi
jle    806a608 <fchmod@plt+0x201a8>
mov    0x8(%esi),%esi
sub    $0x1,%eax
test   %esi,%esi
setne  %dl
jne    806a6e8 <fchmod@plt+0x20288>
jmp    806a4b0 <fchmod@plt+0x20050>
mov    0x80773f8,%edx
mov    0x8077410,%eax
mov    0xc(%edx),%esi
jmp    806a5e9 <fchmod@plt+0x20189>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80773f8,%eax
mov    0x20(%esp),%ebx
mov    0x10(%eax),%edx
test   %ebx,%ebx
jne    806a7a0 <fchmod@plt+0x20340>
mov    0x8077410,%ecx
mov    %ecx,%ebx
shr    $0x1f,%ebx
add    %ecx,%ebx
sar    %ebx
test   %ebx,%ebx
jle    806a7b3 <fchmod@plt+0x20353>
mov    0xc(%edx),%esi
test   %esi,%esi
jne    806a761 <fchmod@plt+0x20301>
jmp    806a7b3 <fchmod@plt+0x20353>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     806a785 <fchmod@plt+0x20325>
mov    %eax,%esi
testb  $0x8,0x8077418
je     806a77e <fchmod@plt+0x2031e>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
xor    %edx,%edx
divl   0x8077340
sub    %eax,%ebx
sub    $0x1,%ebx
test   %ebx,%ebx
jg     806a758 <fchmod@plt+0x202f8>
mov    0x80773f8,%eax
mov    %esi,0xc(%eax)
call   806a340 <fchmod@plt+0x1fee0>
movb   $0x1,0x80773bc
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x20(%eax),%ebx
mov    0x8077410,%ecx
lea    -0x1(%ecx),%esi
cmp    %ecx,%ebx
cmovge %esi,%ebx
jmp    806a744 <fchmod@plt+0x202e4>
mov    %edx,%esi
jmp    806a78a <fchmod@plt+0x2032a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   806a340 <fchmod@plt+0x1fee0>
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    0xc(%eax),%esi
mov    0x4(%edx),%edx
mov    0x4(%esi),%ecx
cmp    %ecx,%edx
jl     806a7ed <fchmod@plt+0x2038d>
add    0x807740c,%ecx
cmp    %ecx,%edx
jl     806a898 <fchmod@plt+0x20438>
movl   $0x0,(%esp)
call   806a720 <fchmod@plt+0x202c0>
mov    0x8077410,%ecx
mov    0x80773f8,%eax
test   %ecx,%ecx
mov    0xc(%eax),%esi
jle    806a87d <fchmod@plt+0x2041d>
test   %esi,%esi
je     806a848 <fchmod@plt+0x203e8>
xor    %ebx,%ebx
jmp    806a83c <fchmod@plt+0x203dc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
mov    0x8(%esi),%esi
lea    0x1(%eax,%ebx,1),%ebx
cmp    %ebx,0x8077410
jle    806a87d <fchmod@plt+0x2041d>
test   %esi,%esi
je     806a850 <fchmod@plt+0x203f0>
mov    0x80773f8,%eax
xor    %edx,%edx
cmp    %esi,0x10(%eax)
jne    806a818 <fchmod@plt+0x203b8>
mov    0x18(%eax),%edx
jmp    806a818 <fchmod@plt+0x203b8>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
mov    0x8077340,%eax
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8067a90 <fchmod@plt+0x1d630>
cmp    %ebx,0x8077410
jg     806a850 <fchmod@plt+0x203f0>
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8077410,%edx
test   %edx,%edx
jg     806a80f <fchmod@plt+0x203af>
jmp    806a87d <fchmod@plt+0x2041d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x2c,%esp
movl   $0x0,(%esp)
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
call   806a2f0 <fchmod@plt+0x1fe90>
test   %al,%al
je     806aa20 <fchmod@plt+0x205c0>
mov    0x80773f8,%ecx
mov    0x4(%esi),%edx
mov    0xc(%ecx),%eax
mov    0x4(%eax),%eax
cmp    %eax,%edx
jl     806a8fb <fchmod@plt+0x2049b>
mov    0x807740c,%ebp
add    %eax,%ebp
cmp    %ebp,%edx
jl     806a9b0 <fchmod@plt+0x20550>
xor    %edi,%edi
cmpb   $0x0,0x25(%ecx)
jne    806a968 <fchmod@plt+0x20508>
movl   $0x0,(%esp)
call   806a720 <fchmod@plt+0x202c0>
test   %bl,%bl
jne    806aa30 <fchmod@plt+0x205d0>
mov    0x80773f8,%eax
cmpb   $0x0,0x25(%eax)
je     806a955 <fchmod@plt+0x204f5>
mov    0x10(%eax),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x4(%edi)
je     806a955 <fchmod@plt+0x204f5>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x4(%edi)
jle    806a960 <fchmod@plt+0x20500>
mov    0xc(%edi),%edi
cmp    %eax,0x4(%edi)
jne    806a92d <fchmod@plt+0x204cd>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8(%edi),%edi
jmp    806a928 <fchmod@plt+0x204c8>
lea    0x0(%esi),%esi
mov    0x8(%ecx),%ecx
mov    %esi,%edi
mov    0x4(%ecx),%ebp
mov    0x807740c,%ecx
add    %eax,%ecx
add    0x8077410,%eax
cmp    %ebp,%ecx
cmovle %eax,%ebp
jmp    806a98e <fchmod@plt+0x2052e>
lea    0x0(%esi),%esi
mov    0xc(%edi),%edi
mov    0x4(%edi),%edx
cmp    %edx,%ebp
je     806a903 <fchmod@plt+0x204a3>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
cmp    0x4(%edi),%ebp
jl     806a988 <fchmod@plt+0x20528>
mov    0x8(%edi),%edi
jmp    806a98b <fchmod@plt+0x2052b>
mov    0x10(%ecx),%edi
mov    %edi,0x18(%esp)
mov    0x4(%edi),%edi
cmp    %edi,%eax
mov    %edi,0x1c(%esp)
jg     806a8fb <fchmod@plt+0x2049b>
cmp    %edi,%ebp
jle    806a8fb <fchmod@plt+0x2049b>
mov    0x18(%esp),%edi
lea    0x0(%esi),%esi
cmp    %edi,%esi
je     806a9f8 <fchmod@plt+0x20598>
test   %bl,%bl
jne    806aa50 <fchmod@plt+0x205f0>
cmpb   $0x0,0x25(%ecx)
je     806a9f8 <fchmod@plt+0x20598>
mov    0x10(%ecx),%edi
mov    0x4(%edi),%eax
cmp    %eax,0x4(%esi)
jle    806aa48 <fchmod@plt+0x205e8>
mov    0xc(%esi),%esi
cmp    %edi,%esi
jne    806a9dc <fchmod@plt+0x2057c>
test   %bl,%bl
je     806a955 <fchmod@plt+0x204f5>
mov    0x18(%ecx),%eax
mov    %eax,0x44(%esp)
mov    0x10(%ecx),%eax
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    806a010 <fchmod@plt+0x1fbb0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806a2f0 <fchmod@plt+0x1fe90>
mov    %eax,%ebx
jmp    806a8d8 <fchmod@plt+0x20478>
nop
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
jmp    806a917 <fchmod@plt+0x204b7>
lea    0x0(%esi),%esi
mov    0x8(%esi),%esi
jmp    806a9d8 <fchmod@plt+0x20578>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806a010 <fchmod@plt+0x1fbb0>
mov    0x80773f8,%ecx
jmp    806a9e0 <fchmod@plt+0x20580>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8077320,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
call   806aa70 <fchmod@plt+0x20610>
movl   $0x0,(%esp)
call   8068f80 <fchmod@plt+0x1eb20>
call   806a7c0 <fchmod@plt+0x20360>
mov    0x80777bc,%eax
mov    %eax,(%esp)
call   8068380 <fchmod@plt+0x1df20>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   8068380 <fchmod@plt+0x1df20>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%esi
call   8066ae0 <fchmod@plt+0x1c680>
add    $0x1,%eax
mov    %eax,0x40(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x80773f8,%ecx
mov    0x10(%ecx),%edx
lea    0x1(%eax),%ebx
mov    (%edx),%eax
add    0x18(%ecx),%eax
mov    0x8(%edx),%edi
movzbl (%eax),%ebp
movl   $0x0,0x8(%edx)
movb   $0x0,(%eax)
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8066c60 <fchmod@plt+0x1c800>
mov    %ebp,%ecx
mov    %eax,0x44(%esp)
mov    0x80773f8,%eax
mov    0x10(%eax),%edx
mov    0x18(%eax),%eax
mov    (%edx),%edx
mov    %cl,(%edx,%eax,1)
mov    0x80773f8,%ecx
mov    %esi,%edx
test   %dl,%dl
mov    0x10(%ecx),%eax
mov    %edi,0x8(%eax)
je     806ab76 <fchmod@plt+0x20716>
cmpb   $0x0,0x80776bc
jne    806ac03 <fchmod@plt+0x207a3>
mov    0x4(%eax),%ebp
mov    0x8(%ecx),%eax
mov    0x14(%ecx),%edi
xor    %ecx,%ecx
mov    0x4(%eax),%esi
imul   $0x64,%ebp,%eax
mov    %eax,%edx
sar    $0x1f,%edx
idiv   %esi
xor    %edx,%edx
mov    %eax,0x48(%esp)
imul   $0x64,0x40(%esp),%eax
div    %ebx
test   %edi,%edi
mov    %eax,0x4c(%esp)
jne    806ac18 <fchmod@plt+0x207b8>
movl   $0x5,0x8(%esp)
movl   $0x8070550,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
call   8049c80 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x4c(%esp),%edx
mov    %edi,0x20(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x24(%esp)
mov    0x44(%esp),%ecx
mov    %edx,0x18(%esp)
mov    0x48(%esp),%edx
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8068500 <fchmod@plt+0x1e0a0>
movb   $0x0,0x80776bc
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
imul   $0x64,0x44(%esp),%eax
xor    %edx,%edx
div    %edi
mov    %eax,%ecx
jmp    806aba3 <fchmod@plt+0x20743>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   806aae0 <fchmod@plt+0x20680>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
movb   $0x1,0x80773dc
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
movb   $0x0,0x80773dc
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    %ebx,0x1c(%esp)
mov    %esi,0x20(%esp)
mov    0x30(%esp),%esi
mov    %edi,0x24(%esp)
mov    %ebp,0x28(%esp)
call   8066ae0 <fchmod@plt+0x1c680>
mov    %eax,%ebp
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8066b00 <fchmod@plt+0x1c6a0>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80669e0 <fchmod@plt+0x1c580>
mov    0x8077340,%edi
add    %eax,%edi
sub    %ebp,%edi
cmp    %ebx,%edi
sbb    $0x0,%edi
call   8068230 <fchmod@plt+0x1ddd0>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a010 <wnoutrefresh@plt>
mov    %esi,%eax
test   %al,%al
jne    806ada8 <fchmod@plt+0x20948>
test   %ebx,%ebx
jne    806ad60 <fchmod@plt+0x20900>
mov    0x8077704,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
mov    %esi,%eax
test   %al,%al
je     806ad4c <fchmod@plt+0x208ec>
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049df0 <wattr_off@plt>
mov    0x1c(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
mov    0x34(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8066a20 <fchmod@plt+0x1c5c0>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
cmp    %ebx,%edi
jae    806ad28 <fchmod@plt+0x208c8>
mov    0x8077704,%eax
movl   $0x24,0x4(%esp)
mov    %eax,(%esp)
call   8049bd0 <waddch@plt>
jmp    806ad28 <fchmod@plt+0x208c8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80772e0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049ba0 <wattr_on@plt>
jmp    806ad0f <fchmod@plt+0x208af>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x37,%ecx
push   %edi
push   %esi
mov    $0x8070180,%esi
push   %ebx
sub    $0x12c,%esp
mov    0x8077414,%ebp
movl   $0x80702b5,0x24(%esp)
movl   $0x806e31d,0x28(%esp)
movl   $0x80702ca,0x2c(%esp)
mov    %ebp,%ebx
and    $0x8,%ebp
mov    %ebp,0x18(%esp)
lea    0x44(%esp),%ebp
and    $0x8000000,%ebx
mov    %ebp,%edi
movl   $0x80702dd,0x30(%esp)
rep movsl %ds:(%esi),%es:(%edi)
movl   $0x80702f0,0x34(%esp)
movl   $0x807030d,0x38(%esp)
movl   $0x807031a,0x3c(%esp)
movl   $0x8070337,0x40(%esp)
call   804cda0 <fchmod@plt+0x2940>
mov    0x18(%esp),%esi
mov    $0x8070298,%edx
test   %al,%al
mov    $0x80702a7,%eax
cmove  %eax,%edx
test   %esi,%esi
mov    %edx,0x80(%esp)
sete   %dl
test   %ebx,%ebx
sete   %al
or     %al,%dl
mov    %dl,0x1f(%esp)
jne    806b118 <fchmod@plt+0x20cb8>
movl   $0x0,(%esp)
call   804a380 <curs_set@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
call   8067ae0 <fchmod@plt+0x1d680>
call   8067b10 <fchmod@plt+0x1d6b0>
call   8067b50 <fchmod@plt+0x1d6f0>
call   8067ba0 <fchmod@plt+0x1d740>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8067bd0 <fchmod@plt+0x1d770>
mov    0x8077830,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
mov    0x807783c,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
movl   $0x2bc,(%esp)
call   804a310 <napms@plt>
cmpl   $0xffffff93,0x8077410
jl     806b0d0 <fchmod@plt+0x20c70>
movl   $0x0,0x18(%esp)
xor    %ebx,%ebx
jmp    806b071 <fchmod@plt+0x20c11>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8077340,%eax
mov    %edi,(%esp)
mov    %eax,%ecx
shr    $0x1f,%ecx
lea    (%ecx,%eax,1),%esi
call   8066b00 <fchmod@plt+0x1c6a0>
mov    0x8077410,%edx
sar    %esi
lea    -0x1(%esi),%ecx
shr    %eax
sub    %eax,%ecx
mov    %edx,%eax
shr    $0x1f,%eax
mov    %ecx,0x8(%esp)
lea    -0x1(%edx),%ecx
add    %eax,%edx
and    $0x1,%edx
sub    %eax,%edx
mov    0x8077704,%eax
sub    %edx,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a300 <wmove@plt>
cmp    $0xffffffff,%eax
je     806af70 <fchmod@plt+0x20b10>
mov    0x8077704,%eax
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <waddnstr@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
jne    806b0c8 <fchmod@plt+0x20c68>
movl   $0x2bc,(%esp)
call   804a310 <napms@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a390 <wscrl@plt>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
jne    806b0c8 <fchmod@plt+0x20c68>
movl   $0x2bc,(%esp)
add    $0x1,%ebx
call   804a310 <napms@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
mov    0x8077704,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a390 <wscrl@plt>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a180 <scrollok@plt>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   8049cf0 <wrefresh@plt>
mov    0x8077410,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
add    $0x36,%eax
cmp    %ebx,%eax
jl     806b0d0 <fchmod@plt+0x20c70>
mov    0x8077704,%eax
mov    %eax,(%esp)
call   804a1d0 <wgetch@plt>
cmp    $0xffffffff,%eax
jne    806b0c8 <fchmod@plt+0x20c68>
cmp    $0x36,%ebx
jg     806af70 <fchmod@plt+0x20b10>
mov    0x0(%ebp,%ebx,4),%edi
test   %edi,%edi
jne    806af08 <fchmod@plt+0x20aa8>
mov    0x18(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x24(%esp,%edx,4),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c80 <dcgettext@plt>
addl   $0x1,0x18(%esp)
mov    %eax,%edi
jmp    806af08 <fchmod@plt+0x20aa8>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804a0c0 <ungetch@plt>
cmpb   $0x0,0x1f(%esp)
je     806b0e6 <fchmod@plt+0x20c86>
andl   $0xf7fffff7,0x8077414
f7
call   8059910 <fchmod@plt+0xf4b0>
movl   $0x1,(%esp)
call   804a380 <curs_set@plt>
mov    0x8077704,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a020 <nodelay@plt>
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    806aa90 <fchmod@plt+0x20630>
xchg   %ax,%ax
orl    $0x8000008,0x8077414
08
call   8059910 <fchmod@plt+0xf4b0>
jmp    806ae76 <fchmod@plt+0x20a16>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   806b1a2 <fchmod@plt+0x20d42>
add    $0xbec7,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%edi
call   8049a78 <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%edi
sar    $0x2,%edi
test   %edi,%edi
je     806b189 <fchmod@plt+0x20d29>
xor    %esi,%esi
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%esi,4)
add    $0x1,%esi
cmp    %edi,%esi
jne    806b168 <fchmod@plt+0x20d08>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    806b1a0 <fchmod@plt+0x20d40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
mov    (%esp),%ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x8,%esp
call   806b1b1 <_fini+0x9>
pop    %ebx
add    $0xbe4f,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
sub    %ah,0x72(%ecx,%ebp,2)
sub    %eax,(%eax)
sub    %dh,0x61(%eax)
jb     806b238 <_IO_stdin_used+0x74>
outsb  %ds:(%esi),(%dx)
je     806b1f6 <_IO_stdin_used+0x32>
imul   $0x6c342500,%fs:0x29(%edx),%esi
jne    806b200 <_IO_stdin_used+0x3c>
and    $0x20004263,%eax
pop    %ebx
and    $0x5d732573,%eax
add    %ah,(%eax)
pop    %ebx
inc    %edx
popa
arpl   %bp,0x77(%ebx)
popa
jb     806b25a <_IO_stdin_used+0x96>
jae    806b255 <_IO_stdin_used+0x91>
add    %ah,(%eax)
pop    %ebx
push   %edx
gs
addr16
gs
js     806b271 <_IO_stdin_used+0xad>
pop    %ebp
add    %ah,(%eax)
pop    %ebx
inc    %ebx
popa
jae    806b26e <_IO_stdin_used+0xaa>
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    806b278 <_IO_stdin_used+0xb4>
je     806b27a <_IO_stdin_used+0xb6>
jbe    806b278 <_IO_stdin_used+0xb4>
pop    %ebp
add    %dl,0x65(%ebx)
popa
jb     806b27d <_IO_stdin_used+0xb9>
push   $0x25732500
jae    806b246 <_IO_stdin_used+0x82>
jae    806b248 <_IO_stdin_used+0x84>
jae    806b24a <_IO_stdin_used+0x86>
jae    806b24c <_IO_stdin_used+0x88>
jae    806b229 <_IO_stdin_used+0x65>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
insb   (%dx),%es:(%edi)
gs add %dl,%fs:%gs:0x65(%ebx)
popa
jb     806b29b <_IO_stdin_used+0xd7>
push   $0x61725720
jo     806b2af <_IO_stdin_used+0xeb>
gs add %dl,%fs:%gs:0x69(%eax,%ebp,2)
jae    806b267 <_IO_stdin_used+0xa3>
imul   $0x20656874,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806b273 <_IO_stdin_used+0xaf>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x75(%ebx)
jb     806b2cb <_IO_stdin_used+0x107>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x75(%ebx)
jb     806b2d7 <_IO_stdin_used+0x113>
outsb  %gs:(%esi),(%dx)
je     806b289 <_IO_stdin_used+0xc5>
jae    806b2d0 <_IO_stdin_used+0x10c>
popa
jb     806b2d1 <_IO_stdin_used+0x10d>
push   $0x74617020
je     806b2da <_IO_stdin_used+0x116>
jb     806b2e5 <_IO_stdin_used+0x121>
add    %al,0x6f(%edi)
and    %dl,0x20(%edi,%ebp,2)
inc    %esp
imul   $0x726f7463,0x65(%edx),%esi
jns    806b288 <_IO_stdin_used+0xc4>
inc    %ebp
jb     806b2fd <_IO_stdin_used+0x139>
outsl  %ds:(%esi),(%dx)
jb     806b2ae <_IO_stdin_used+0xea>
jb     806b2f5 <_IO_stdin_used+0x131>
popa
imul   $0x3a732520,%fs:0x67(%esi),%ebp
and    %ah,0x61430073
outsb  %ds:(%esi),(%dx)
daa
je     806b2c3 <_IO_stdin_used+0xff>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    806b30c <_IO_stdin_used+0x148>
and    %dh,0x70(%ebp)
and    %ah,0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    806b2b7 <_IO_stdin_used+0xf3>
add    %ch,-0x48(%eax)
add    $0x8,%al
scas   %es:(%edi),%al
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,0x480804b7(%esi)
mov    $0xb7ae0804,%eax
add    $0x8,%al
scas   %es:(%edi),%al
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,0x280804b7(%esi)
mov    $0xb7ae0804,%eax
add    $0x8,%al
scas   %es:(%edi),%al
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,0x100804b7(%esi)
mov    $0xb7ae0804,%eax
add    $0x8,%al
clc
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x1ff7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x37f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,0x100804b7(%esi)
mov    $0xb7ae0804,%eax
add    $0x8,%al
clc
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x1ff7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x51f7fb49(%esi)
mov    $0x4,%bh
or     %ch,-0x37f7fb49(%esi)
mov    $0x4,%bh
or     %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806b43e <_IO_stdin_used+0x27a>
outsl  %ds:(%si),(%dx)
and    %ch,0x75(%edi)
je     806b498 <_IO_stdin_used+0x2d4>
imul   $0x2520666f,0x20(%ebp,%eiz,2),%esp
jae    806b44f <_IO_stdin_used+0x28b>
imul   $0x74736572,0x20(%esi),%ebp
jb     806b4a1 <_IO_stdin_used+0x2dd>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x6f(%ebp)
fs add %ch,%fs:%gs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x66(%ebp,%eiz,2)
popa
jne    806b4b9 <_IO_stdin_used+0x2f5>
je     806b44f <_IO_stdin_used+0x28b>
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jb     806b4bb <_IO_stdin_used+0x2f7>
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806b4db <_IO_stdin_used+0x317>
add    %cl,0x65(%esi)
ja     806b48d <_IO_stdin_used+0x2c9>
inc    %edx
jne    806b4d6 <_IO_stdin_used+0x312>
data16
gs
jb     806b474 <_IO_stdin_used+0x2b0>
push   %ebx
ja     806b4e0 <_IO_stdin_used+0x31c>
je     806b4dc <_IO_stdin_used+0x318>
push   $0x74206465
outsl  %ds:(%esi),(%dx)
and    %ah,0x252e0073
insb   (%dx),%es:(%edi)
jne    806b488 <_IO_stdin_used+0x2c4>
push   %esp
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
add    %ch,(%edi)
je     806b4ff <_IO_stdin_used+0x33b>
jo     806b494 <_IO_stdin_used+0x2d0>
das
je     806b504 <_IO_stdin_used+0x340>
jo     806b4c8 <_IO_stdin_used+0x304>
add    %dh,0x2b(%edx)
bound  %eax,(%eax)
push   %edx
gs
popa
imul   $0x6c694620,%fs:0x67(%esi),%ebp
add    %cl,%gs:0x65(%esi)
ja     806b4cf <_IO_stdin_used+0x30b>
inc    %esi
imul   $0x22732522,0x0(%ebp,%eiz,2),%ebp
and    %ch,0x6f(%esi)
je     806b4dd <_IO_stdin_used+0x319>
outsw  %ds:(%esi),(%dx)
jne    806b52f <_IO_stdin_used+0x36b>
add    %ah,%fs:(%edx)
and    $0x69202273,%eax
jae    806b4eb <_IO_stdin_used+0x327>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806b4d7 <_IO_stdin_used+0x313>
and    0x69202273,%ah
jae    806b4ff <_IO_stdin_used+0x33b>
popa
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6c696620,0x65(%ebx),%esp
add    %dh,%gs:0x62(%edx)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x65520073,0x65(%esi),%ebp
popa
and    %ah,%fs:0x6c20756c
imul   $0x2f2e00,0x65(%esi),%ebp
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x20(%edi,%ebp,2)
gs
js     806b583 <_IO_stdin_used+0x3bf>
arpl   %si,0x74(%ebp)
and    %bl,%gs:0x66(%ebx)
jb     806b596 <_IO_stdin_used+0x3d2>
insl   (%dx),%es:(%edi)
and    %ah,0x205d73
inc    %esi
imul   $0x69206f74,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
jae    806b59f <_IO_stdin_used+0x3db>
jb     806b5b0 <_IO_stdin_used+0x3ec>
and    %bl,0x66(%ebx)
jb     806b5b0 <_IO_stdin_used+0x3ec>
insl   (%dx),%es:(%edi)
and    %ah,0x205d73
jle    806b56f <_IO_stdin_used+0x3ab>
jae    806b54c <_IO_stdin_used+0x388>
sub    %ch,0x6f(%ebp)
jb     806b5b6 <_IO_stdin_used+0x3f2>
sub    %eax,(%eax)
ja     806b5b7 <_IO_stdin_used+0x3f3>
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806b57c <_IO_stdin_used+0x3b8>
ja     806b5d0 <_IO_stdin_used+0x40c>
imul   $0x7374756f,0x20(%ebp,%eiz,2),%esi
imul   $0x2520666f,0x20(%ebp,%eiz,2),%esp
jae    806b570 <_IO_stdin_used+0x3ac>
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    806b599 <_IO_stdin_used+0x3d5>
bound  %esp,0x63(%ecx)
imul   $0x20,0x70(%ebp),%esi
imul   $0x3f,0x73(%ebp,%eiz,2),%bp
and    $0x45007e73,%eax
jb     806b600 <_IO_stdin_used+0x43c>
outsl  %ds:(%esi),(%dx)
jb     806b5b1 <_IO_stdin_used+0x3ed>
ja     806b605 <_IO_stdin_used+0x441>
imul   $0x73252067,0x6e(%ecx,%ebp,2),%esi
cmp    (%eax),%ah
and    $0x72450073,%eax
jb     806b613 <_IO_stdin_used+0x44f>
jb     806b5c6 <_IO_stdin_used+0x402>
ja     806b61a <_IO_stdin_used+0x456>
imul   $0x65742067,0x6e(%ecx,%ebp,2),%esi
insl   (%dx),%es:(%edi)
jo     806b5d3 <_IO_stdin_used+0x40f>
imul   $0x2520,0x3a(%ebp,%eiz,2),%bp
jae    806b5bc <_IO_stdin_used+0x3f8>
push   %edi
jb     806b62e <_IO_stdin_used+0x46a>
je     806b626 <_IO_stdin_used+0x462>
and    %ah,0x6c20756c
imul   $0x72570073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
je     806b636 <_IO_stdin_used+0x472>
and    %ah,0x6c20756c
imul   $0x445b2000,0x65(%esi),%ebp
dec    %edi
push   %ebx
and    %al,0x6f(%esi)
jb     806b652 <_IO_stdin_used+0x48e>
popa
je     806b645 <_IO_stdin_used+0x481>
add    %ah,(%eax)
pop    %ebx
dec    %ebp
popa
arpl   %sp,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     806b660 <_IO_stdin_used+0x49c>
popa
je     806b653 <_IO_stdin_used+0x48f>
add    %ah,(%eax)
pop    %ebx
inc    %edx
popa
arpl   %bp,0x75(%ebx)
jo     806b65d <_IO_stdin_used+0x499>
add    %dl,0x72(%eax)
gs
jo     806b66b <_IO_stdin_used+0x4a7>
outsb  %ds:(%esi),(%dx)
and    %dl,%fs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
inc    %esi
imul   $0x65707041,0x0(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dl,%fs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
inc    %esi
imul   $0x74697257,0x0(%ebp,%eiz,2),%ebp
and    %dl,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
inc    %esi
imul   $0x656c6946,0x0(%ebp,%eiz,2),%ebp
and    %cl,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
push   %eax
jb     806b6c1 <_IO_stdin_used+0x4fd>
jo     806b6c3 <_IO_stdin_used+0x4ff>
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x0(%edi,%ebp,2)
inc    %esi
imul   $0x656d614e,0x20(%ebp,%eiz,2),%ebp
and    %dh,0x20(%edi,%ebp,2)
inc    %ecx
jo     806b6e4 <_IO_stdin_used+0x520>
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x0(%edi,%ebp,2)
inc    %esi
imul   $0x656d614e,0x20(%ebp,%eiz,2),%ebp
and    %dh,0x20(%edi,%ebp,2)
push   %edi
jb     806b6f4 <_IO_stdin_used+0x530>
je     806b6f2 <_IO_stdin_used+0x52e>
add    %bh,0x7a(%edx)
jns    806b692 <_IO_stdin_used+0x4ce>
inc    %esi
imul   $0x73697865,0x20(%ebp,%eiz,2),%ebp
je     806b710 <_IO_stdin_used+0x54c>
sub    $0x20,%al
dec    %edi
push   %esi
inc    %ebp
push   %edx
push   %edi
push   %edx
dec    %ecx
push   %esp
inc    %ebp
and    %bh,(%edi)
and    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b726 <_IO_stdin_used+0x562>
jb     806b737 <_IO_stdin_used+0x573>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b748 <_IO_stdin_used+0x584>
popa
je     806b707 <_IO_stdin_used+0x543>
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b759 <_IO_stdin_used+0x595>
jb     806b76a <_IO_stdin_used+0x5a6>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b77b <_IO_stdin_used+0x5b7>
popa
je     806b73a <_IO_stdin_used+0x576>
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b78e <_IO_stdin_used+0x5ca>
jb     806b79f <_IO_stdin_used+0x5db>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b7b0 <_IO_stdin_used+0x5ec>
popa
je     806b766 <_IO_stdin_used+0x5a2>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b7e1 <_IO_stdin_used+0x61d>
jb     806b7f2 <_IO_stdin_used+0x62e>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b803 <_IO_stdin_used+0x63f>
popa
je     806b7b9 <_IO_stdin_used+0x5f5>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b836 <_IO_stdin_used+0x672>
jb     806b847 <_IO_stdin_used+0x683>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %cl,0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b850 <_IO_stdin_used+0x68c>
popa
je     806b80f <_IO_stdin_used+0x64b>
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b861 <_IO_stdin_used+0x69d>
jb     806b872 <_IO_stdin_used+0x6ae>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %cl,0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b87b <_IO_stdin_used+0x6b7>
popa
je     806b83a <_IO_stdin_used+0x676>
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b88e <_IO_stdin_used+0x6ca>
jb     806b89f <_IO_stdin_used+0x6db>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %cl,0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b8a8 <_IO_stdin_used+0x6e4>
popa
je     806b85e <_IO_stdin_used+0x69a>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b8d9 <_IO_stdin_used+0x715>
jb     806b8ea <_IO_stdin_used+0x726>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %cl,0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806b8f3 <_IO_stdin_used+0x72f>
popa
je     806b8a9 <_IO_stdin_used+0x6e5>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b926 <_IO_stdin_used+0x762>
jb     806b937 <_IO_stdin_used+0x773>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6f(%esi)
jb     806b940 <_IO_stdin_used+0x77c>
popa
je     806b8ff <_IO_stdin_used+0x73b>
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b951 <_IO_stdin_used+0x78d>
jb     806b962 <_IO_stdin_used+0x79e>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6f(%esi)
jb     806b96b <_IO_stdin_used+0x7a7>
popa
je     806b92a <_IO_stdin_used+0x766>
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x43282073,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    806b97e <_IO_stdin_used+0x7ba>
jb     806b98f <_IO_stdin_used+0x7cb>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6f(%esi)
jb     806b998 <_IO_stdin_used+0x7d4>
popa
je     806b94e <_IO_stdin_used+0x78a>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x6f432820,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jbe    806b9c9 <_IO_stdin_used+0x805>
jb     806b9da <_IO_stdin_used+0x816>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6f(%esi)
jb     806b9e3 <_IO_stdin_used+0x81f>
popa
je     806b999 <_IO_stdin_used+0x7d5>
sub    $0x72615720,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6c20756c
imul   $0x57282073,0x65(%esi),%ebp
popa
jb     806ba1e <_IO_stdin_used+0x85a>
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %dl,0x65(%edx)
popa
and    %ah,%fs:0x6c20756c
imul   $0x57202820,0x65(%esi),%ebp
popa
jb     806ba4e <_IO_stdin_used+0x88a>
imul   $0x6f4e203a,0x67(%esi),%ebp
and    %dh,0x72(%edi)
imul   $0x6d726570,0x20(%ebp,%eiz,2),%esi
imul   $0x296e6f69,0x73(%ebx),%esi
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806ba22 <_IO_stdin_used+0x85e>
imul   $0x20747265,0x73(%esi),%ebp
imul   $0x7266,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     806ba8a <_IO_stdin_used+0x8c6>
imul   $0x2520666f,0x20(%ebp,%eiz,2),%esp
jae    806ba21 <_IO_stdin_used+0x85d>
add    %al,(%eax)
add    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x20(%edi,%ebp,2)
gs
js     806ba97 <_IO_stdin_used+0x8d3>
arpl   %si,0x74(%ebp)
and    %ch,%gs:0x6e(%ecx)
and    %ch,0x65(%esi)
ja     806ba5e <_IO_stdin_used+0x89a>
bound  %esi,0x66(%ebp)
data16
gs
jb     806ba65 <_IO_stdin_used+0x8a1>
pop    %ebx
data16
jb     806bab8 <_IO_stdin_used+0x8f4>
insl   (%dx),%es:(%edi)
and    %ah,0x205d73
inc    %esi
imul   $0x69206f74,0x20(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
jae    806bac1 <_IO_stdin_used+0x8fd>
jb     806bad2 <_IO_stdin_used+0x90e>
and    %ch,0x6e(%ecx)
je     806bad2 <_IO_stdin_used+0x90e>
and    %ch,0x65(%esi)
ja     806ba88 <_IO_stdin_used+0x8c4>
bound  %esi,0x66(%ebp)
data16
gs
jb     806ba8f <_IO_stdin_used+0x8cb>
pop    %ebx
data16
jb     806bae2 <_IO_stdin_used+0x91e>
insl   (%dx),%es:(%edi)
and    %ah,0x205d73
add    %al,(%eax)
dec    %ebx
gs
jns    806baa0 <_IO_stdin_used+0x8dc>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%ecx)
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x746c756d,%eax
imul   $0x72656666,0x75(%edx),%esp
and    %ch,0x6f(%ebp)
fs add %al,%fs:%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806bac7 <_IO_stdin_used+0x903>
jo     806bb1b <_IO_stdin_used+0x957>
gs
jo     806bb11 <_IO_stdin_used+0x94d>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x72(%edi)
and    %ah,0x70(%ecx)
jo     806bb1b <_IO_stdin_used+0x957>
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x20(%edi,%ebp,2)
popa
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x74697720,0x6b(%esi),%ebp
push   $0x6e2d2d20
outsl  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806baf6 <_IO_stdin_used+0x932>
jae    806bb3d <_IO_stdin_used+0x979>
je     806bada <_IO_stdin_used+0x916>
add    %al,(%eax)
inc    %ebp
jb     806bb51 <_IO_stdin_used+0x98d>
outsl  %ds:(%esi),(%dx)
jb     806bb02 <_IO_stdin_used+0x93e>
ja     806bb56 <_IO_stdin_used+0x992>
imul   $0x61622067,0x6e(%ecx,%ebp,2),%esi
arpl   %bp,0x75(%ebx)
jo     806bb11 <_IO_stdin_used+0x94d>
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
and    $0x73,%eax
add    %dl,0x61(%ebx)
jbe    806bb69 <_IO_stdin_used+0x9a5>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x6e(%ebp)
fs
gs
jb     806bb30 <_IO_stdin_used+0x96c>
inc    %esp
dec    %ecx
inc    %esi
inc    %esi
inc    %ebp
push   %edx
inc    %ebp
dec    %esi
push   %esp
and    %cl,0x41(%esi)
dec    %ebp
inc    %ebp
and    %bh,(%edi)
and    %al,(%eax)
add    %al,(%eax)
inc    %esi
imul   $0x20736177,0x20(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x73206465,%fs:0x69(%esi),%esp
imul   $0x6f792065,0x63(%esi),%ebp
jne    806bb60 <_IO_stdin_used+0x99c>
outsl  %ds:(%esi),(%dx)
jo     806bba8 <_IO_stdin_used+0x9e4>
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
sub    $0x20,%al
arpl   %bp,0x6e(%edi)
je     806bbb9 <_IO_stdin_used+0x9f5>
outsb  %ds:(%esi),(%dx)
jne    806bbb8 <_IO_stdin_used+0x9f4>
and    %dh,0x61(%ebx)
jbe    806bbc1 <_IO_stdin_used+0x9fd>
outsb  %ds:(%esi),(%dx)
and    %bh,(%bx)
and    %al,(%eax)
add    %al,(%eax)
or     0x72(%eax),%dl
gs
jae    806bbd9 <_IO_stdin_used+0xa15>
and    %al,0x6e(%ebp)
je     806bbd0 <_IO_stdin_used+0xa0c>
jb     806bb8d <_IO_stdin_used+0x9c9>
je     806bbde <_IO_stdin_used+0xa1a>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806bbde <_IO_stdin_used+0xa1a>
outsb  %ds:(%esi),(%dx)
jne    806bbdd <_IO_stdin_used+0xa19>
and    %dh,0x74(%ebx)
popa
jb     806bbf2 <_IO_stdin_used+0xa2e>
imul   $0x6e616e20,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
imul   $0x6e,0x77(%edi,%ebp,2),%esp
add    %ch,0x6c(%ebx)
gs
data16
je     806bb95 <_IO_stdin_used+0x9d1>
imul   $0x67,0x69(%edx),%esi
push   $0x696b0074
outsb  %ds:(%esi),(%dx)
jae    806bc06 <_IO_stdin_used+0xa42>
jb     806bc17 <_IO_stdin_used+0xa53>
add    %ch,0x64(%ebx)
gs
insb   (%dx),%es:(%edi)
add    %ch,0x62(%ebx)
jae    806bc1d <_IO_stdin_used+0xa59>
add    %ch,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     806bc18 <_IO_stdin_used+0xa54>
jb     806bbb5 <_IO_stdin_used+0x9f1>
imul   $0x70,0x75(%eax),%esi
add    %ch,0x70(%ebx)
outsl  %fs:(%esi),(%dx)
ja     806bc2e <_IO_stdin_used+0xa6a>
add    %ch,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%ebx)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x78(%ebp)
imul   $0x65736f6c,0x43(%eax,%eax,1),%esi
add    %al,0x73(%ecx,%ebp,2)
jo     806bc48 <_IO_stdin_used+0xa84>
popa
jns    806bbff <_IO_stdin_used+0xa3b>
je     806bc49 <_IO_stdin_used+0xa85>
imul   $0x706c6568,0x20(%ebx),%esi
and    %dh,0x78(%ebp,%eiz,2)
je     806bbee <_IO_stdin_used+0xa2a>
inc    %edi
gs
je     806bc12 <_IO_stdin_used+0xa4e>
dec    %eax
gs
insb   (%dx),%es:(%edi)
jo     806bbf7 <_IO_stdin_used+0xa33>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806bc78 <_IO_stdin_used+0xab4>
outsb  %gs:(%esi),(%dx)
je     806bc2a <_IO_stdin_used+0xa66>
data16
jne    806bc7b <_IO_stdin_used+0xab7>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,0x78(%ebp)
imul   $0x206d6f72,0x66(%eax,%eiz,1),%esi
je     806bc87 <_IO_stdin_used+0xac3>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806bc9e <_IO_stdin_used+0xada>
gs
jb     806bc2e <_IO_stdin_used+0xa6a>
push   %edi
jb     806bc9a <_IO_stdin_used+0xad6>
je     806bc98 <_IO_stdin_used+0xad4>
dec    %edi
jne    806bcaa <_IO_stdin_used+0xae6>
add    %cl,0x75(%edx)
jae    806bcaf <_IO_stdin_used+0xaeb>
imul   $0x65687420,0x79(%esi),%esp
and    %ah,0x75(%ebx)
jb     806bcb9 <_IO_stdin_used+0xaf5>
outsb  %gs:(%esi),(%dx)
je     806bc6b <_IO_stdin_used+0xaa7>
jo     806bcae <_IO_stdin_used+0xaea>
jb     806bcb0 <_IO_stdin_used+0xaec>
addr16 jb 806bcb3 <_IO_stdin_used+0xaef>
jo     806bcbc <_IO_stdin_used+0xaf8>
add    %dl,0x65(%edx)
popa
and    %al,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %dl,%gs:0x68(%edi)
gs
jb     806bcc9 <_IO_stdin_used+0xb05>
and    %cl,0x73(%ecx)
add    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
jo     806bce2 <_IO_stdin_used+0xb1e>
gs
jbe    806bcdc <_IO_stdin_used+0xb18>
outsl  %ds:(%esi),(%dx)
jne    806bce9 <_IO_stdin_used+0xb25>
and    %dh,0x63(%ebx)
jb     806bce0 <_IO_stdin_used+0xb1c>
outsb  %gs:(%esi),(%dx)
add    %dl,0x72(%eax)
gs
jbe    806bca3 <_IO_stdin_used+0xadf>
push   %eax
popa
add    %al,%gs:0x6f(%bx)
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
gs
js     806bd06 <_IO_stdin_used+0xb42>
and    %dh,0x63(%ebx)
jb     806bcfc <_IO_stdin_used+0xb38>
outsb  %gs:(%esi),(%dx)
add    %cl,0x65(%esi)
js     806bd12 <_IO_stdin_used+0xb4e>
and    %dl,0x61(%eax)
add    %dl,%gs:0x6e(%di)
dec    %edx
jne    806bd1c <_IO_stdin_used+0xb58>
je     806bd14 <_IO_stdin_used+0xb50>
data16
jns    806bcae <_IO_stdin_used+0xaea>
push   %ebp
outsb  %ds:(%esi),(%dx)
inc    %ebx
jne    806bd27 <_IO_stdin_used+0xb63>
and    %dl,0x78(%ebp,%eiz,2)
je     806bcb9 <_IO_stdin_used+0xaf5>
inc    %ebx
jne    806bd2e <_IO_stdin_used+0xb6a>
and    %dl,0x6f(%eax)
jae    806bcc1 <_IO_stdin_used+0xafd>
push   %esp
outsl  %ds:(%esi),(%dx)
and    %dl,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,0x69(%esi)
jb     806bd41 <_IO_stdin_used+0xb7d>
je     806bcf0 <_IO_stdin_used+0xb2c>
dec    %esp
imul   $0x73614c00,0x65(%esi),%ebp
je     806bcfa <_IO_stdin_used+0xb36>
dec    %esp
imul   $0x206f4700,0x65(%esi),%ebp
je     806bd53 <_IO_stdin_used+0xb8f>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6e(%ecx)
and    %ah,%fs:0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    806bd60 <_IO_stdin_used+0xb9c>
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,0x6f(%edi)
and    %dl,0x20(%edi,%ebp,2)
dec    %esp
imul   $0x72614d00,0x65(%esi),%ebp
imul   $0x54,(%eax),%esp
gs
js     806bd84 <_IO_stdin_used+0xbc0>
add    %dl,0x65(%edx)
jo     806bd7a <_IO_stdin_used+0xbb6>
popa
je     806bd38 <_IO_stdin_used+0xb74>
insb   (%dx),%es:(%edi)
popa
jae    806bd90 <_IO_stdin_used+0xbcc>
and    %dh,0x65(%ebx)
popa
jb     806bd85 <_IO_stdin_used+0xbc1>
push   $0x706f4300
jns    806bd49 <_IO_stdin_used+0xb85>
push   %esp
gs
js     806bda1 <_IO_stdin_used+0xbdd>
add    %cl,0x6e(%ecx)
fs outsb %fs:%gs:(%esi),(%dx)
je     806bd55 <_IO_stdin_used+0xb91>
je     806bd9f <_IO_stdin_used+0xbdb>
and    %ah,%gs:0x75(%ebx)
jb     806bdaf <_IO_stdin_used+0xbeb>
outsb  %gs:(%esi),(%dx)
je     806bd61 <_IO_stdin_used+0xb9d>
insb   (%dx),%es:(%edi)
imul   $0x646e4900,0x65(%esi),%ebp
outsb  %gs:(%esi),(%dx)
je     806bd6d <_IO_stdin_used+0xba9>
push   %esp
gs
js     806bdc5 <_IO_stdin_used+0xc01>
add    %dl,0x6e(%ebp)
imul   $0x20746e65,0x64(%esi),%ebp
je     806bdc5 <_IO_stdin_used+0xc01>
and    %ah,%gs:0x75(%ebx)
jb     806bdd5 <_IO_stdin_used+0xc11>
outsb  %gs:(%esi),(%dx)
je     806bd87 <_IO_stdin_used+0xbc3>
insb   (%dx),%es:(%edi)
imul   $0x696e5500,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
je     806bd95 <_IO_stdin_used+0xbd1>
push   %esp
gs
js     806bded <_IO_stdin_used+0xc29>
add    %dl,0x6e(%ebp)
outsl  %fs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     806bda8 <_IO_stdin_used+0xbe4>
outsl  %ds:(%esi),(%dx)
jo     806bdf0 <_IO_stdin_used+0xc2c>
jb     806bdee <_IO_stdin_used+0xc2a>
je     806bdf8 <_IO_stdin_used+0xc34>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dl,0x6e(%ebp)
outsl  %fs:(%esi),(%dx)
add    %dl,0x65(%edx)
outsl  %fs:(%esi),(%dx)
add    %al,0x6f(%edi)
and    %ah,0x6f(%esi)
jb     806be1a <_IO_stdin_used+0xc56>
popa
jb     806be0a <_IO_stdin_used+0xc46>
and    %ch,0x6e(%edi)
and    %ah,%gs:0x68(%ebx)
popa
jb     806be11 <_IO_stdin_used+0xc4d>
arpl   %si,0x72(%ebp,%eiz,2)
add    %al,0x6f(%esi)
jb     806be30 <_IO_stdin_used+0xc6c>
popa
jb     806be20 <_IO_stdin_used+0xc5c>
add    %al,0x6f(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x20(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x68(%ebx)
popa
jb     806be2f <_IO_stdin_used+0xc6b>
arpl   %si,0x72(%ebp,%eiz,2)
add    %al,0x61(%edx)
arpl   %bp,0x0(%ebx)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     806be56 <_IO_stdin_used+0xc92>
popa
jb     806be46 <_IO_stdin_used+0xc82>
and    %ch,0x6e(%edi)
and    %dh,%gs:0x6f(%edi)
jb     806be4f <_IO_stdin_used+0xc8b>
add    %cl,0x65(%esi)
js     806be64 <_IO_stdin_used+0xca0>
and    %dl,0x6f(%edi)
jb     806be59 <_IO_stdin_used+0xc95>
add    %al,0x6f(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x20(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%edi)
jb     806be6a <_IO_stdin_used+0xca6>
add    %dl,0x72(%eax)
gs
jbe    806be2c <_IO_stdin_used+0xc68>
push   %edi
outsl  %ds:(%esi),(%dx)
jb     806be74 <_IO_stdin_used+0xcb0>
add    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
jo     806be8b <_IO_stdin_used+0xcc7>
gs
jbe    806be85 <_IO_stdin_used+0xcc1>
outsl  %ds:(%esi),(%dx)
jne    806be92 <_IO_stdin_used+0xcce>
and    %ch,0x6e(%ecx,%ebp,2)
add    %dl,%gs:0x72(%eax)
gs
jbe    806be4a <_IO_stdin_used+0xc86>
dec    %esp
imul   $0x206f4700,0x65(%esi),%ebp
je     806bea3 <_IO_stdin_used+0xcdf>
and    %ch,0x65(%esi)
js     806bead <_IO_stdin_used+0xce9>
and    %ch,0x6e(%ecx,%ebp,2)
add    %cl,%gs:0x65(%esi)
js     806beb7 <_IO_stdin_used+0xcf3>
and    %cl,0x6e(%ecx,%ebp,2)
add    %cl,%gs:0x6f(%eax)
insl   (%dx),%es:(%edi)
add    %al,%gs:0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x75(%ebx)
jb     806bed1 <_IO_stdin_used+0xd0d>
outsb  %gs:(%esi),(%dx)
je     806be83 <_IO_stdin_used+0xcbf>
insb   (%dx),%es:(%edi)
imul   $0x67654200,0x65(%esi),%ebp
and    %ch,0x66(%edi)
and    %dl,0x61(%eax)
jb     806be73 <_IO_stdin_used+0xcaf>
inc    %ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %dl,0x61(%eax)
jb     806be7e <_IO_stdin_used+0xcba>
inc    %esi
imul   $0x68744f20,0x64(%esi),%ebp
gs
jb     806bea9 <_IO_stdin_used+0xce5>
inc    %edx
jb     806beed <_IO_stdin_used+0xd29>
arpl   %bp,0x65(%ebx)
je     806be91 <_IO_stdin_used+0xccd>
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806bf01 <_IO_stdin_used+0xd3d>
and    %ch,%gs:0x61(%ebp)
je     806bf02 <_IO_stdin_used+0xd3e>
push   $0x20676e69
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     806beac <_IO_stdin_used+0xce8>
push   %ebx
arpl   %si,0x6f(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dl,0x70(%ebp)
add    %dl,0x63(%ebx)
jb     806bf29 <_IO_stdin_used+0xd65>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %al,0x77(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dl,0x72(%eax)
gs
jbe    806bf30 <_IO_stdin_used+0xd6c>
outsl  %ds:(%esi),(%dx)
jne    806bf3d <_IO_stdin_used+0xd79>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x65(%esi)
js     806bf48 <_IO_stdin_used+0xd84>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %dl,%gs:0x65(%esi)
jb     806bf40 <_IO_stdin_used+0xd7c>
popa
je     806bf4a <_IO_stdin_used+0xd86>
insl   (%dx),%es:(%edi)
and    %cl,0x6e(%ecx)
jo     806bf5c <_IO_stdin_used+0xd98>
je     806bee9 <_IO_stdin_used+0xd25>
push   %esp
popa
bound  %eax,(%eax)
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     806bf56 <_IO_stdin_used+0xd92>
jb     806bef3 <_IO_stdin_used+0xd2f>
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     806bf5e <_IO_stdin_used+0xd9a>
add    %al,0x61(%edx)
arpl   %bp,0x73(%ebx)
jo     806bf62 <_IO_stdin_used+0xd9e>
arpl   %sp,0x0(%ebp)
inc    %ebx
jne    806bf7b <_IO_stdin_used+0xdb7>
push   %esp
imul   $0x4a00646e,0x45(%esp,%ebp,2),%ebp
jne    806bf85 <_IO_stdin_used+0xdc1>
je     806bf7d <_IO_stdin_used+0xdb9>
data16
jns    806bf37 <_IO_stdin_used+0xd73>
je     806bf81 <_IO_stdin_used+0xdbd>
and    %ah,%gs:0x6e(%ebp)
je     806bf88 <_IO_stdin_used+0xdc4>
jb     806bf86 <_IO_stdin_used+0xdc2>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
dec    %edx
jae    806bfa2 <_IO_stdin_used+0xdde>
imul   $0x726f5700,0x79(%esi),%esp
and    %al,%fs:0x6f(%ebx)
jne    806bfa9 <_IO_stdin_used+0xde5>
je     806bf3d <_IO_stdin_used+0xd79>
push   %edx
gs
data16
jb     806bfa7 <_IO_stdin_used+0xde3>
jae    806bfac <_IO_stdin_used+0xde8>
add    %dl,0x75(%ebx)
jae    806bfb9 <_IO_stdin_used+0xdf5>
outsb  %gs:(%esi),(%dx)
add    %al,%fs:0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x7262,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
ja     806bfd0 <_IO_stdin_used+0xe0c>
gs
jb     806bf60 <_IO_stdin_used+0xd9c>
push   %esp
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x66(%edi)
and    %al,0x53(%edi,%ecx,2)
and    %ah,0x6f(%esi)
jb     806bfe7 <_IO_stdin_used+0xe23>
popa
je     806bf7d <_IO_stdin_used+0xdb9>
push   %esp
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x66(%edi)
and    %cl,0x61(%ebp)
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806c004 <_IO_stdin_used+0xe40>
popa
je     806bf9a <_IO_stdin_used+0xdd6>
push   %esp
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
and    %ah,%gs:0x70(%ecx)
jo     806c00a <_IO_stdin_used+0xe46>
outsb  %ds:(%esi),(%dx)
imul   $0x676f5400,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%di)
and    %dh,%gs:0x72(%eax)
gs
jo     806c01c <_IO_stdin_used+0xe58>
outsb  %ds:(%esi),(%dx)
imul   $0x65784500,%fs:0x67(%esi),%ebp
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x78(%ebp)
je     806c02e <_IO_stdin_used+0xe6a>
jb     806c039 <_IO_stdin_used+0xe75>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:0x6e(%ecx)
jae    806c03f <_IO_stdin_used+0xe7b>
jb     806c050 <_IO_stdin_used+0xe8c>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    806bff2 <_IO_stdin_used+0xe2e>
pop    %esi
inc    %edi
add    %al,0x31(%esi)
add    %bl,0x58(%esi)
add    %al,0x32(%esi)
add    %bl,0x5f(%esi)
add    %al,0x31(%esi)
xor    (%eax),%eax
dec    %ebp
sub    $0x4f5e0047,%eax
add    %al,0x33(%esi)
add    %bl,0x4a(%esi)
add    %al,0x34(%esi)
add    %bl,0x52(%esi)
add    %al,0x35(%esi)
add    %bl,0x57(%esi)
add    %al,0x36(%esi)
add    %bl,0x59(%esi)
add    %al,0x37(%esi)
add    %bl,0x56(%esi)
add    %al,0x38(%esi)
add    %bl,0x4b(%esi)
add    %al,0x39(%esi)
add    %bl,0x55(%esi)
add    %al,0x31(%esi)
xor    %al,(%eax)
pop    %esi
inc    %ebx
add    %al,0x31(%esi)
xor    %eax,(%eax)
pop    %esi
push   %esp
add    %al,0x31(%esi)
xor    (%eax),%al
pop    %esi
pop    %esp
add    %al,0x31(%esi)
xor    $0x0,%al
dec    %ebp
sub    $0x5e5e0052,%eax
add    %al,0x31(%esi)
xor    $0x412d4d00,%eax
add    %cl,0x2d(%ebp)
push   %edi
add    %al,0x31(%esi)
add    %cl,%ss:0x2d(%ebp)
pop    %esi
add    %cl,0x2d(%ebp)
add    %cl,%ss:0x2d(%ebp)
jge    806c072 <_IO_stdin_used+0xeae>
dec    %ebp
sub    $0x2d4d007b,%eax
push   %ebp
add    %cl,0x2d(%ebp)
inc    %ebp
add    %bl,0x46(%esi)
add    %bl,0x42(%esi)
add    %bl,0x53(%esi)
jo     806c0e9 <_IO_stdin_used+0xf25>
arpl   %sp,0x0(%ebp)
dec    %ebp
sub    $0x63617053,%eax
add    %bl,%gs:0x51(%esi)
add    %bl,0x53(%esi)
add    %bl,0x50(%esi)
add    %bl,0x4e(%esi)
add    %bl,0x41(%esi)
add    %bl,0x45(%esi)
add    %cl,0x2d(%ebp)
sub    %al,(%eax)
dec    %ebp
sub    $0x2d4d0039,%eax
sub    %eax,(%eax)
dec    %ebp
sub    $0x2d4d0030,%eax
inc    %ebx
add    %cl,0x2d(%ebp)
inc    %edx
add    %cl,0x2d(%ebp)
pop    %esp
add    %cl,0x2d(%ebp)
jl     806c0c5 <_IO_stdin_used+0xf01>
dec    %ebp
sub    $0x2d4d002f,%eax
aas
add    %cl,0x2d(%ebp)
pop    %ebp
add    %cl,0x2d(%ebp)
sub    $0x5f2d4d00,%eax
add    %cl,0x2d(%ebp)
sub    (%eax),%eax
dec    %ebp
sub    $0x2d4d003d,%eax
cmp    $0x0,%al
dec    %ebp
sub    $0x2d4d002c,%eax
add    %cl,%ds:0x2d(%ebp)
add    %cl,%cs:0x2d(%ebp)
push   %esi
add    %cl,0x2d(%ebp)
push   %esp
add    %cl,0x2d(%ebp)
dec    %edx
add    %cl,0x2d(%ebp)
inc    %esp
add    %cl,0x2d(%ebp)
pop    %eax
add    %cl,0x2d(%ebp)
dec    %edi
add    %cl,0x2d(%ebp)
push   %ebx
add    %cl,0x2d(%ebp)
push   %eax
add    %cl,0x2d(%ebp)
pop    %ecx
add    %cl,0x2d(%ebp)
dec    %eax
add    %cl,0x2d(%ebp)
dec    %ecx
add    %cl,0x2d(%ebp)
dec    %ebx
add    %cl,0x2d(%ebp)
dec    %esp
add    %cl,0x2d(%ebp)
push   %ecx
add    %cl,0x2d(%ebp)
inc    %esi
add    %cl,0x2d(%ebp)
dec    %ebp
add    %cl,0x2d(%ebp)
dec    %esi
add    %cl,0x2d(%ebp)
pop    %edx
add    %cl,0x2d(%ebp)
and    $0x0,%al
pop    %esi
pop    %edx
add    %bl,0x4c(%esi)
add    %bl,0x49(%esi)
add    %bl,0x4d(%esi)
add    %bl,0x44(%esi)
add    %bl,0x48(%esi)
add    %bh,(%edi)
aas
aas
aas
aas
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
add    %ah,0x78(%ebp)
imul   $0x65746972,0x77(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
jne    806c1dd <_IO_stdin_used+0x1019>
add    %dh,0x68(%edi)
gs
jb     806c1d4 <_IO_stdin_used+0x1010>
imul   $0x65676170,0x0(%ebx),%esi
jne    806c1e8 <_IO_stdin_used+0x1024>
add    %dh,0x72(%eax)
gs
jbe    806c1ee <_IO_stdin_used+0x102a>
popa
add    %dh,%gs:0x61(%bx,%si)
gs outsl %fs:%gs:(%si),(%dx)
ja     806c1f8 <_IO_stdin_used+0x1034>
add    %ch,0x65(%esi)
js     806c203 <_IO_stdin_used+0x103f>
jo     806c1f2 <_IO_stdin_used+0x102e>
add    %ah,%gs:0x75(%bp,%di)
jb     806c208 <_IO_stdin_used+0x1044>
outsl  %ds:(%esi),(%dx)
jae    806c19b <_IO_stdin_used+0xfd7>
arpl   %si,0x72(%ebp)
jae    806c20f <_IO_stdin_used+0x104b>
jb     806c212 <_IO_stdin_used+0x104e>
outsl  %ds:(%esi),(%dx)
jae    806c1a5 <_IO_stdin_used+0xfe1>
imul   $0x6c74,0x73(%edx),%si
imul   $0x73616c00,0x65(%esi),%ebp
je     806c220 <_IO_stdin_used+0x105c>
imul   $0x746f6700,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x67656200,0x65(%esi),%ebp
imul   $0x617261,0x70(%esi),%ebp
outsb  %gs:(%esi),(%dx)
fs
jo     806c231 <_IO_stdin_used+0x106d>
jb     806c233 <_IO_stdin_used+0x106f>
add    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
push   $0x75
jae    806c24f <_IO_stdin_used+0x108b>
imul   $0x72616d00,0x79(%esi),%esp
imul   $0x73,(%eax),%eax
gs
popa
jb     806c24c <_IO_stdin_used+0x1088>
push   $0x69616761
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
jae    806c259 <_IO_stdin_used+0x1095>
popa
jb     806c25a <_IO_stdin_used+0x1096>
push   $0x706f6300
jns    806c272 <_IO_stdin_used+0x10ae>
gs
js     806c275 <_IO_stdin_used+0x10b1>
add    %dh,0x6e(%ebp)
imul   $0x746e65,0x64(%esi),%ebp
jae    806c270 <_IO_stdin_used+0x10ac>
jb     806c27e <_IO_stdin_used+0x10ba>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    806c283 <_IO_stdin_used+0x10bf>
add    %dh,0x63(%ebx)
jb     806c287 <_IO_stdin_used+0x10c3>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %fs:(%esi),(%dx)
ja     806c28c <_IO_stdin_used+0x10c8>
add    %ch,0x65(%esi)
js     806c297 <_IO_stdin_used+0x10d3>
ja     806c294 <_IO_stdin_used+0x10d0>
jb     806c28b <_IO_stdin_used+0x10c7>
add    %dh,0x72(%eax)
gs
jbe    806c2a4 <_IO_stdin_used+0x10e0>
outsl  %ds:(%esi),(%dx)
jb     806c294 <_IO_stdin_used+0x10d0>
add    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
bound  %esi,%fs:0x61(%edx)
arpl   %bp,0x65(%ebx)
je     806c23d <_IO_stdin_used+0x1079>
ja     806c2ae <_IO_stdin_used+0x10ea>
jb     806c2a5 <_IO_stdin_used+0x10e1>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806c247 <_IO_stdin_used+0x1083>
jb     806c2ae <_IO_stdin_used+0x10ea>
outsl  %fs:(%esi),(%dx)
add    %dh,0x72(%eax)
gs
jbe    806c2b9 <_IO_stdin_used+0x10f5>
imul   $0x79726f,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
gs
js     806c2d0 <_IO_stdin_used+0x110c>
push   $0x6f747369
jb     806c2dc <_IO_stdin_used+0x1118>
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    806c2dd <_IO_stdin_used+0x1119>
jne    806c2db <_IO_stdin_used+0x1117>
fs
popa
je     806c2d4 <_IO_stdin_used+0x1110>
add    %dh,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806c2de <_IO_stdin_used+0x111a>
jae    806c2db <_IO_stdin_used+0x1117>
jb     806c2e9 <_IO_stdin_used+0x1125>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%edi)
imul   $0x65636170,0x73(%ebp,%eiz,2),%esi
imul   $0x79616c,%fs:0x70(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    806c30c <_IO_stdin_used+0x1148>
outsb  %ds:(%esi),(%dx)
je     806c2f7 <_IO_stdin_used+0x1133>
js     806c298 <_IO_stdin_used+0x10d4>
arpl   %si,0x74(%ebp)
je     806c30c <_IO_stdin_used+0x1148>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     806c30e <_IO_stdin_used+0x114a>
imul   $0x6c74756d,0x0(%ebp,%eiz,2),%ebp
imul   $0x72656666,0x75(%edx),%esp
add    %dh,0x75(%ebx)
jae    806c32c <_IO_stdin_used+0x1168>
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     806c341 <_IO_stdin_used+0x117d>
popa
jb     806c331 <_IO_stdin_used+0x116d>
add    %ah,0x61(%edx)
arpl   %bp,0x0(%ebx)
jo     806c347 <_IO_stdin_used+0x1183>
gs
jbe    806c344 <_IO_stdin_used+0x1180>
imul   $0x78656e00,0x65(%esi),%ebp
je     806c34d <_IO_stdin_used+0x1189>
imul   $0x65727000,0x65(%esi),%ebp
jbe    806c34c <_IO_stdin_used+0x1188>
jne    806c352 <_IO_stdin_used+0x118e>
add    %ch,0x65(%esi)
js     806c365 <_IO_stdin_used+0x11a1>
bound  %esi,0x66(%ebp)
add    %dh,0x65(%esi)
jb     806c35b <_IO_stdin_used+0x1197>
popa
je     806c365 <_IO_stdin_used+0x11a1>
insl   (%dx),%es:(%edi)
add    %dh,0x62(%ecx,%eiz,2)
add    %ah,0x61(%edx)
arpl   %bp,0x73(%ebx)
jo     806c36a <_IO_stdin_used+0x11a6>
arpl   %sp,0x0(%ebp)
jb     806c373 <_IO_stdin_used+0x11af>
data16
jb     806c376 <_IO_stdin_used+0x11b2>
jae    806c37b <_IO_stdin_used+0x11b7>
add    %ah,0x61(%ebx)
jae    806c37d <_IO_stdin_used+0x11b9>
jae    806c37f <_IO_stdin_used+0x11bb>
outsb  %ds:(%esi),(%dx)
jae    806c31d <_IO_stdin_used+0x1159>
jb     806c384 <_IO_stdin_used+0x11c0>
addr16
gs
js     806c393 <_IO_stdin_used+0x11cf>
add    %dh,0x65(%edx)
addr16
gs
js     806c32a <_IO_stdin_used+0x1166>
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     806c3a1 <_IO_stdin_used+0x11dd>
gs
jo     806c39e <_IO_stdin_used+0x11da>
popa
arpl   %sp,0x0(%ebp)
outsl  %ds:(%si),(%dx)
je     806c3a9 <_IO_stdin_used+0x11e5>
je     806c3a1 <_IO_stdin_used+0x11dd>
js     806c3b2 <_IO_stdin_used+0x11ee>
add    %dh,0x66(%edi,%ebp,2)
imul   $0x736f6400,0x73(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     806c3bb <_IO_stdin_used+0x11f7>
popa
je     806c351 <_IO_stdin_used+0x118d>
insl   (%dx),%es:(%edi)
popa
arpl   %sp,0x6f(%esi)
jb     806c3c5 <_IO_stdin_used+0x1201>
popa
je     806c35b <_IO_stdin_used+0x1197>
popa
jo     806c3ce <_IO_stdin_used+0x120a>
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x72(%eax)
gs
jo     806c3cc <_IO_stdin_used+0x1208>
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x65(%esi)
ja     806c3d0 <_IO_stdin_used+0x120c>
jne    806c3d6 <_IO_stdin_used+0x1212>
data16
gs
jb     806c374 <_IO_stdin_used+0x11b0>
imul   $0x6674,0x73(%edx),%si
imul   $0x7473616c,0x0(%ebp,%eiz,2),%ebp
imul   $0x6c61,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
add    %ch,0x61(%ebp)
imul   $0x6c706572,0x0(%esi),%ebp
popa
arpl   %sp,0x32(%ebp)
add    %dh,0x65(%edx)
jo     806c409 <_IO_stdin_used+0x1245>
popa
arpl   %sp,0x77(%ebp)
imul   $0x65747865,0x0(%eax,%ebp,2),%esi
jb     806c419 <_IO_stdin_used+0x1255>
popa
insb   (%dx),%es:(%edi)
arpl   %bp,0x64(%ebp)
add    %ah,0x78(%ebp)
je     806c418 <_IO_stdin_used+0x1254>
insl   (%dx),%es:(%edi)
add    %dh,%fs:0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%edi)
gs
jb     806c428 <_IO_stdin_used+0x1264>
imul   $0x656c69,0x66(%ebx),%esi
outsl  %ds:(%si),(%dx)
je     806c43d <_IO_stdin_used+0x1279>
imul   $0x54206f47,%fs:0x0(%edx),%esi
outsl  %ds:(%esi),(%dx)
and    %al,0x72(%ecx,%ebp,2)
add    %al,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %al,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     806c413 <_IO_stdin_used+0x124f>
inc    %esi
imul   $0x70657250,0x0(%ebp,%eiz,2),%ebp
outsb  %gs:(%esi),(%dx)
add    %al,%fs:0x70(%ecx)
jo     806c469 <_IO_stdin_used+0x12a5>
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:0x61(%ebp)
arpl   %sp,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     806c47c <_IO_stdin_used+0x12b8>
popa
je     806c412 <_IO_stdin_used+0x124e>
inc    %esp
dec    %edi
push   %ebx
and    %al,0x6f(%esi)
jb     806c487 <_IO_stdin_used+0x12c3>
popa
je     806c41d <_IO_stdin_used+0x1259>
push   %esp
outsl  %ds:(%esi),(%dx)
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806c426 <_IO_stdin_used+0x1262>
dec    %esp
popa
jae    806c49e <_IO_stdin_used+0x12da>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x69(%esi)
jb     806c4a7 <_IO_stdin_used+0x12e3>
je     806c456 <_IO_stdin_used+0x1292>
inc    %esi
imul   $0x72656857,0x0(%ebp,%eiz,2),%ebp
gs
dec    %ecx
jae    806c463 <_IO_stdin_used+0x129f>
dec    %esi
gs
js     806c4bb <_IO_stdin_used+0x12f7>
add    %al,0x6f(%edi)
and    %dl,0x20(%edi,%ebp,2)
push   %esp
gs
js     806c4c6 <_IO_stdin_used+0x1302>
add    %cl,0x65(%esi)
js     806c4cb <_IO_stdin_used+0x1307>
dec    %eax
jae    806c4ce <_IO_stdin_used+0x130a>
outsl  %ds:(%esi),(%dx)
jb     806c4d6 <_IO_stdin_used+0x1312>
add    %dl,0x72(%eax)
gs
jbe    806c4ab <_IO_stdin_used+0x12e7>
jae    806c4d9 <_IO_stdin_used+0x1315>
outsl  %ds:(%esi),(%dx)
jb     806c4e1 <_IO_stdin_used+0x131d>
add    %dl,0x65(%edx)
addr16
gs
js     806c4df <_IO_stdin_used+0x131b>
add    %al,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     806c4dc <_IO_stdin_used+0x1318>
jae    806c47a <_IO_stdin_used+0x12b6>
inc    %ebx
popa
jae    806c4e3 <_IO_stdin_used+0x131f>
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    806c484 <_IO_stdin_used+0x12c0>
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dl,0x65(%edx)
jo     806c4f7 <_IO_stdin_used+0x1333>
popa
arpl   %sp,0x0(%ebp)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ebp)
add    %cl,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806c4bb <_IO_stdin_used+0x12f7>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %dl,%fs:%gs:0x75(%ebx)
jae    806c514 <_IO_stdin_used+0x1350>
outsb  %gs:(%esi),(%dx)
jae    806c511 <_IO_stdin_used+0x134d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%edi,%ebp,2)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x72(%edi)
popa
jo     806c52a <_IO_stdin_used+0x1366>
imul   $0x74754100,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
fs outsb %fs:%gs:(%esi),(%dx)
je     806c4ca <_IO_stdin_used+0x1306>
dec    %ebp
outsl  %ds:(%esi),(%dx)
jne    806c541 <_IO_stdin_used+0x137d>
and    %dh,%gs:0x75(%ebx)
jo     806c544 <_IO_stdin_used+0x1380>
outsl  %ds:(%esi),(%dx)
jb     806c54b <_IO_stdin_used+0x1387>
add    %al,0x75(%ebx)
je     806c4fc <_IO_stdin_used+0x1338>
je     806c54d <_IO_stdin_used+0x1389>
and    %ah,0x6e(%ebp)
add    %cl,%fs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     806c551 <_IO_stdin_used+0x138d>
jo     806c556 <_IO_stdin_used+0x1392>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806c56b <_IO_stdin_used+0x13a7>
add    %dl,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806c567 <_IO_stdin_used+0x13a3>
and    %dh,0x63(%ebx)
jb     806c573 <_IO_stdin_used+0x13af>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x63614200,0x67(%esi),%ebp
imul   $0x20,0x70(%ebp),%esi
imul   $0x4300,0x73(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806c53d <_IO_stdin_used+0x1379>
jae    806c598 <_IO_stdin_used+0x13d4>
outsb  %ds:(%esi),(%dx)
je     806c583 <_IO_stdin_used+0x13bf>
js     806c544 <_IO_stdin_used+0x1380>
push   $0x6c686769
imul   $0x676e6974,0x68(%edi),%esp
add    %dl,0x6d(%ebx)
popa
jb     806c5aa <_IO_stdin_used+0x13e6>
and    %ch,0x6f(%eax)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x65(%ebx)
jns    806c540 <_IO_stdin_used+0x137c>
push   %edi
push   $0x73657469
jo     806c5a9 <_IO_stdin_used+0x13e5>
arpl   %sp,0x20(%ebp)
imul   $0x79616c,%fs:0x70(%ebx),%esi
push   %ebx
outsl  %ds:(%esi),(%dx)
data16
je     806c578 <_IO_stdin_used+0x13b4>
insb   (%dx),%es:(%edi)
imul   $0x61727720,0x65(%esi),%ebp
jo     806c5d2 <_IO_stdin_used+0x140e>
imul   $0x43000000,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    806c5d2 <_IO_stdin_used+0x140e>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c5e8 <_IO_stdin_used+0x1424>
outsb  %gs:(%esi),(%dx)
je     806c59a <_IO_stdin_used+0x13d6>
imul   $0x7562,0x20(%ebp,%eiz,2),%bp
data16
data16
gs
jb     806c5a6 <_IO_stdin_used+0x13e2>
das
and    %al,0x78(%ebp)
imul   $0x206d6f72,0x66(%eax,%eiz,1),%esi
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
push   %edi
jb     806c604 <_IO_stdin_used+0x1440>
je     806c602 <_IO_stdin_used+0x143e>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c618 <_IO_stdin_used+0x1454>
outsb  %gs:(%esi),(%dx)
je     806c5ca <_IO_stdin_used+0x1406>
imul   $0x6f74,0x20(%ebp,%eiz,2),%bp
and    %ah,0x73(%ecx,%ebp,2)
imul   $0x0,(%eax),%eax
dec    %ecx
outsb  %ds:(%esi),(%dx)
jae    806c621 <_IO_stdin_used+0x145d>
jb     806c632 <_IO_stdin_used+0x146e>
and    %ah,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     806c62c <_IO_stdin_used+0x1468>
gs
jb     806c5e7 <_IO_stdin_used+0x1423>
imul   $0x6e69,0x20(%ebp,%eiz,2),%bp
je     806c63f <_IO_stdin_used+0x147b>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c64b <_IO_stdin_used+0x1487>
outsb  %gs:(%esi),(%dx)
je     806c5fd <_IO_stdin_used+0x1439>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%eax)
add    %al,(%eax)
push   %ebx
gs
popa
jb     806c64c <_IO_stdin_used+0x1488>
push   $0x726f6620
and    %ah,0x20(%ecx)
jae    806c667 <_IO_stdin_used+0x14a3>
jb     806c65e <_IO_stdin_used+0x149a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%bx)
and    %ah,0x20(%ecx)
jb     806c664 <_IO_stdin_used+0x14a0>
addr16 jne 806c66e <_IO_stdin_used+0x14aa>
popa
jb     806c625 <_IO_stdin_used+0x1461>
gs
js     806c678 <_IO_stdin_used+0x14b4>
jb     806c66f <_IO_stdin_used+0x14ab>
jae    806c67f <_IO_stdin_used+0x14bb>
imul   $0x74754300,0x6e(%edi),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c68e <_IO_stdin_used+0x14ca>
outsb  %gs:(%esi),(%dx)
je     806c640 <_IO_stdin_used+0x147c>
insb   (%dx),%es:(%edi)
imul   $0x646e6120,0x65(%esi),%ebp
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jb     806c693 <_IO_stdin_used+0x14cf>
and    %ch,0x74(%ecx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
je     806c69f <_IO_stdin_used+0x14db>
jne    806c6a5 <_IO_stdin_used+0x14e1>
data16
gs
jb     806c643 <_IO_stdin_used+0x147f>
add    %dl,0x6e(%ebp)
arpl   %si,0x74(%ebp)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
je     806c6b9 <_IO_stdin_used+0x14f5>
jne    806c6bf <_IO_stdin_used+0x14fb>
data16
gs
jb     806c67d <_IO_stdin_used+0x14b9>
imul   $0x6874206f,0x74(%esi),%ebp
and    %ah,%gs:0x75(%ebx)
jb     806c6dc <_IO_stdin_used+0x1518>
outsb  %gs:(%esi),(%dx)
je     806c68e <_IO_stdin_used+0x14ca>
insb   (%dx),%es:(%edi)
imul   $0x69440000,0x65(%esi),%ebp
jae    806c6e8 <_IO_stdin_used+0x1524>
insb   (%dx),%es:(%edi)
popa
jns    806c69c <_IO_stdin_used+0x14d8>
je     806c6e6 <_IO_stdin_used+0x1522>
and    %dh,%gs:0x6f(%eax)
jae    806c6ed <_IO_stdin_used+0x1529>
je     806c6ef <_IO_stdin_used+0x152b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c707 <_IO_stdin_used+0x1543>
outsl  %ds:(%esi),(%dx)
jb     806c697 <_IO_stdin_used+0x14d3>
add    %cl,0x6e(%ecx)
jbe    806c70b <_IO_stdin_used+0x1547>
imul   $0x74,0x20(%ebp),%esp
push   $0x70732065
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x65(%ebx)
jb     806c6dd <_IO_stdin_used+0x1519>
and    %ch,0x66(%ecx)
and    %ah,0x76(%ecx)
popa
imul   $0x656c,0x62(%ecx,%eiz,2),%ebp
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806c730 <_IO_stdin_used+0x156c>
and    %ah,%gs:0x69(%esi)
jb     806c741 <_IO_stdin_used+0x157d>
je     806c6f0 <_IO_stdin_used+0x152c>
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x65(%esi),%ebp
je     806c742 <_IO_stdin_used+0x157e>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806c754 <_IO_stdin_used+0x1590>
and    %ch,%gs:0x73(%ecx,%eiz,2)
je     806c713 <_IO_stdin_used+0x154f>
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x65(%esi),%ebp
je     806c765 <_IO_stdin_used+0x15a1>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %dl,%gs:0x65(%edx)
jo     806c774 <_IO_stdin_used+0x15b0>
popa
arpl   %sp,0x20(%ebp)
popa
and    %dh,0x74(%ebx)
jb     806c77b <_IO_stdin_used+0x15b7>
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%bx)
and    %ah,0x20(%ecx)
jb     806c781 <_IO_stdin_used+0x15bd>
addr16 jne 806c78b <_IO_stdin_used+0x15c7>
popa
jb     806c742 <_IO_stdin_used+0x157e>
gs
js     806c795 <_IO_stdin_used+0x15d1>
jb     806c78c <_IO_stdin_used+0x15c8>
jae    806c79c <_IO_stdin_used+0x15d8>
imul   $0x0,0x6e(%edi),%ebp
dec    %ebp
popa
jb     806c79f <_IO_stdin_used+0x15db>
and    %dh,0x78(%ebp,%eiz,2)
je     806c75a <_IO_stdin_used+0x1596>
popa
je     806c75d <_IO_stdin_used+0x1599>
je     806c7a7 <_IO_stdin_used+0x15e3>
and    %ah,%gs:0x75(%ebx)
jb     806c7b8 <_IO_stdin_used+0x15f4>
outsl  %ds:(%esi),(%dx)
jb     806c768 <_IO_stdin_used+0x15a4>
jo     806c7b9 <_IO_stdin_used+0x15f5>
jae    806c7b5 <_IO_stdin_used+0x15f1>
je     806c7b7 <_IO_stdin_used+0x15f3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     806c7d1 <_IO_stdin_used+0x160d>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806c7d3 <_IO_stdin_used+0x160f>
outsb  %gs:(%esi),(%dx)
je     806c785 <_IO_stdin_used+0x15c1>
insb   (%dx),%es:(%edi)
imul   $0x646e6120,0x65(%esi),%ebp
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jb     806c7d8 <_IO_stdin_used+0x1614>
and    %ch,0x74(%ecx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
je     806c7e4 <_IO_stdin_used+0x1620>
jne    806c7ea <_IO_stdin_used+0x1626>
data16
gs
jb     806c788 <_IO_stdin_used+0x15c4>
push   %edx
gs outsl %fs:%gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     806c7b6 <_IO_stdin_used+0x15f2>
jne    806c806 <_IO_stdin_used+0x1642>
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x70(%edi)
gs
jb     806c803 <_IO_stdin_used+0x163f>
je     806c80d <_IO_stdin_used+0x1649>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806c818 <_IO_stdin_used+0x1654>
and    %ch,%gs:0x65(%esi)
js     806c82a <_IO_stdin_used+0x1666>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%ebp,2)
je     806c7c8 <_IO_stdin_used+0x1604>
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806c838 <_IO_stdin_used+0x1674>
and    %dh,%gs:0x72(%eax)
gs
jbe    806c840 <_IO_stdin_used+0x167c>
outsl  %ds:(%esi),(%dx)
jne    806c84d <_IO_stdin_used+0x1689>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%ebp,2)
je     806c7ec <_IO_stdin_used+0x1628>
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x67(%ebp)
imul   $0x20676e69,0x6e(%esi),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x75(%ebx)
jb     806c875 <_IO_stdin_used+0x16b1>
outsb  %gs:(%esi),(%dx)
je     806c827 <_IO_stdin_used+0x1663>
insb   (%dx),%es:(%edi)
imul   $0x206f4700,0x65(%esi),%ebp
je     806c880 <_IO_stdin_used+0x16bc>
and    %ah,0x65(%edx)
imul   $0x20676e69,0x6e(%bp),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%eax)
jb     806c884 <_IO_stdin_used+0x16c0>
addr16 jb 806c887 <_IO_stdin_used+0x16c3>
jo     806c890 <_IO_stdin_used+0x16cc>
cmp    (%eax),%esp
je     806c894 <_IO_stdin_used+0x16d0>
outsb  %gs:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x72(%eax)
gs
jbe    806c8a0 <_IO_stdin_used+0x16dc>
outsl  %ds:(%esi),(%dx)
jne    806c8ad <_IO_stdin_used+0x16e9>
and    %dh,0x61(%eax)
jb     806c8a0 <_IO_stdin_used+0x16dc>
addr16 jb 806c8a3 <_IO_stdin_used+0x16df>
jo     806c8ac <_IO_stdin_used+0x16e8>
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %ch,0x75(%edx)
jae    806c8c3 <_IO_stdin_used+0x16ff>
and    %ah,0x65(%edx)
jns    806c8c3 <_IO_stdin_used+0x16ff>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x61(%eax)
jb     806c8c3 <_IO_stdin_used+0x16ff>
addr16 jb 806c8c6 <_IO_stdin_used+0x1702>
jo     806c8cf <_IO_stdin_used+0x170b>
cmp    (%eax),%esp
je     806c8d3 <_IO_stdin_used+0x170f>
outsb  %gs:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ch,0x65(%esi)
js     806c8e9 <_IO_stdin_used+0x1725>
and    %dh,0x61(%eax)
jb     806c8db <_IO_stdin_used+0x1717>
addr16 jb 806c8de <_IO_stdin_used+0x171a>
jo     806c8e7 <_IO_stdin_used+0x1723>
add    %dl,0x63(%ebx)
jb     806c8f3 <_IO_stdin_used+0x172f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x70(%ebp)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x69(%edi)
je     806c8ff <_IO_stdin_used+0x173b>
outsl  %ds:(%esi),(%dx)
jne    806c90e <_IO_stdin_used+0x174a>
and    %dh,0x63(%ebx)
jb     806c90e <_IO_stdin_used+0x174a>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x75(%ebx)
jb     806c920 <_IO_stdin_used+0x175c>
outsl  %ds:(%esi),(%dx)
jb     806c8b0 <_IO_stdin_used+0x16ec>
push   %ebx
arpl   %si,0x6f(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x77(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x69(%edi)
je     806c931 <_IO_stdin_used+0x176d>
outsl  %ds:(%esi),(%dx)
jne    806c940 <_IO_stdin_used+0x177c>
and    %dh,0x63(%ebx)
jb     806c940 <_IO_stdin_used+0x177c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x75(%ebx)
jb     806c952 <_IO_stdin_used+0x178e>
outsl  %ds:(%esi),(%dx)
jb     806c8e2 <_IO_stdin_used+0x171e>
add    %al,(%eax)
push   %ebx
ja     806c950 <_IO_stdin_used+0x178c>
je     806c94c <_IO_stdin_used+0x1788>
push   $0x206f7420
je     806c958 <_IO_stdin_used+0x1794>
and    %dh,%gs:0x72(%eax)
gs
jbe    806c960 <_IO_stdin_used+0x179c>
outsl  %ds:(%esi),(%dx)
jne    806c96d <_IO_stdin_used+0x17a9>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806c907 <_IO_stdin_used+0x1743>
add    %dl,0x77(%ebx)
imul   $0x206f7420,0x68(%ebx,%eiz,2),%esi
je     806c97c <_IO_stdin_used+0x17b8>
and    %ch,%gs:0x65(%esi)
js     806c98e <_IO_stdin_used+0x17ca>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806c927 <_IO_stdin_used+0x1763>
add    %cl,0x6e(%ecx)
jae    806c991 <_IO_stdin_used+0x17cd>
jb     806c9a2 <_IO_stdin_used+0x17de>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%esi)
js     806c9ab <_IO_stdin_used+0x17e7>
and    %ch,0x65(%ebx)
jns    806c9af <_IO_stdin_used+0x17eb>
je     806c9b0 <_IO_stdin_used+0x17ec>
outsl  %ds:(%esi),(%dx)
imul   $0x76,0x20(%ebp),%esp
gs
jb     806c9a8 <_IO_stdin_used+0x17e4>
popa
je     806c9b2 <_IO_stdin_used+0x17ee>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jae    806c9b5 <_IO_stdin_used+0x17f1>
jb     806c9c6 <_IO_stdin_used+0x1802>
and    %ah,0x20(%ecx)
je     806c9b8 <_IO_stdin_used+0x17f4>
bound  %esp,(%eax)
popa
je     806c97c <_IO_stdin_used+0x17b8>
je     806c9c6 <_IO_stdin_used+0x1802>
and    %ah,%gs:0x75(%ebx)
jb     806c9d7 <_IO_stdin_used+0x1813>
outsl  %ds:(%esi),(%dx)
jb     806c987 <_IO_stdin_used+0x17c3>
jo     806c9d8 <_IO_stdin_used+0x1814>
jae    806c9d4 <_IO_stdin_used+0x1810>
je     806c9d6 <_IO_stdin_used+0x1812>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6e(%ecx)
jae    806c9d9 <_IO_stdin_used+0x1815>
jb     806c9ea <_IO_stdin_used+0x1826>
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     806c9e9 <_IO_stdin_used+0x1825>
imul   $0x20746120,0x65(%esi),%ebp
je     806c9ee <_IO_stdin_used+0x182a>
and    %ah,%gs:0x75(%ebx)
jb     806c9ff <_IO_stdin_used+0x183b>
outsl  %ds:(%esi),(%dx)
jb     806c9af <_IO_stdin_used+0x17eb>
jo     806ca00 <_IO_stdin_used+0x183c>
jae    806c9fc <_IO_stdin_used+0x1838>
je     806c9fe <_IO_stdin_used+0x183a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x6c(%ebp,%eiz,2)
gs
je     806ca03 <_IO_stdin_used+0x183f>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x68(%ebx)
popa
jb     806ca09 <_IO_stdin_used+0x1845>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x6e(%ebp)
fs
gs
jb     806c9d3 <_IO_stdin_used+0x180f>
je     806ca1d <_IO_stdin_used+0x1859>
and    %ah,%gs:0x75(%ebx)
jb     806ca2e <_IO_stdin_used+0x186a>
outsl  %ds:(%esi),(%dx)
jb     806c9be <_IO_stdin_used+0x17fa>
add    %al,(%eax)
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     806ca2b <_IO_stdin_used+0x1867>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x68(%ebx)
popa
jb     806ca31 <_IO_stdin_used+0x186d>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x20(%edi,%ebp,2)
je     806ca42 <_IO_stdin_used+0x187e>
and    %ch,%gs:0x66(%ebp,%eiz,2)
je     806ca01 <_IO_stdin_used+0x183d>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806ca5f <_IO_stdin_used+0x189b>
outsl  %ds:(%esi),(%dx)
jb     806c9ef <_IO_stdin_used+0x182b>
add    %al,0x75(%ebx)
je     806ca14 <_IO_stdin_used+0x1850>
data16
jb     806ca66 <_IO_stdin_used+0x18a2>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806ca74 <_IO_stdin_used+0x18b0>
outsl  %ds:(%esi),(%dx)
jb     806ca24 <_IO_stdin_used+0x1860>
jo     806ca75 <_IO_stdin_used+0x18b1>
jae    806ca71 <_IO_stdin_used+0x18ad>
je     806ca73 <_IO_stdin_used+0x18af>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
je     806ca7a <_IO_stdin_used+0x18b6>
and    %ah,%gs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x6f(%ebx)
jne    806ca96 <_IO_stdin_used+0x18d2>
je     806ca4a <_IO_stdin_used+0x1886>
je     806ca94 <_IO_stdin_used+0x18d0>
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x6f(%edi)
jb     806caa0 <_IO_stdin_used+0x18dc>
jae    806ca6a <_IO_stdin_used+0x18a6>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806ca71 <_IO_stdin_used+0x18ad>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x68(%ebx)
popa
jb     806cab0 <_IO_stdin_used+0x18ec>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806ca55 <_IO_stdin_used+0x1891>
add    %al,(%eax)
add    %dl,0x65(%edx)
data16
jb     806cac2 <_IO_stdin_used+0x18fe>
jae    806cac7 <_IO_stdin_used+0x1903>
and    %ch,(%eax)
jb     806cac8 <_IO_stdin_used+0x1904>
fs
jb     806cac7 <_IO_stdin_used+0x1903>
ja     806ca91 <_IO_stdin_used+0x18cd>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806cae3 <_IO_stdin_used+0x191f>
outsb  %gs:(%esi),(%dx)
je     806ca95 <_IO_stdin_used+0x18d1>
jae    806cada <_IO_stdin_used+0x1916>
jb     806cade <_IO_stdin_used+0x191a>
outsb  %gs:(%esi),(%dx)
add    %dl,0x75(%ebx)
jae    806caf0 <_IO_stdin_used+0x192c>
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ah,0x64(%ebp)
imul   $0x66692820,0x72(%edi,%ebp,2),%esi
and    %dh,0x75(%ebx)
jae    806cb07 <_IO_stdin_used+0x1943>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx)
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
sub    %eax,(%eax)
add    %dl,0x67(%edi,%ebp,2)
insb   (%dx),%es:(%di)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x61(%ebx)
jae    806cb1c <_IO_stdin_used+0x1958>
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    806cb26 <_IO_stdin_used+0x1962>
je     806cb28 <_IO_stdin_used+0x1964>
jbe    806cb2a <_IO_stdin_used+0x1966>
je     806cb3c <_IO_stdin_used+0x1978>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
popa
jb     806cb33 <_IO_stdin_used+0x196f>
push   $0x52000000
gs
jbe    806cb3d <_IO_stdin_used+0x1979>
jb     806cb4d <_IO_stdin_used+0x1989>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
popa
jb     806cb59 <_IO_stdin_used+0x1995>
push   $0x676f5400
insb   (%dx),%es:(%di)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%edx)
addr16 jne 806cb7b <_IO_stdin_used+0x19b7>
popa
jb     806cb32 <_IO_stdin_used+0x196e>
gs
js     806cb85 <_IO_stdin_used+0x19c1>
jb     806cb7c <_IO_stdin_used+0x19b8>
jae    806cb8c <_IO_stdin_used+0x19c8>
imul   $0x73,0x6e(%edi),%ebp
push   %edx
arpl   %sp,%gs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
gs
jbe    806cb99 <_IO_stdin_used+0x19d5>
outsl  %ds:(%esi),(%dx)
jne    806cba6 <_IO_stdin_used+0x19e2>
and    %dh,0x65(%ebx)
popa
jb     806cb9c <_IO_stdin_used+0x19d8>
push   $0x7065722f
insb   (%dx),%es:(%edi)
popa
arpl   %sp,0x20(%ebp)
jae    806cbb9 <_IO_stdin_used+0x19f5>
jb     806cbb0 <_IO_stdin_used+0x19ec>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %dl,0x65(%edx)
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%esi)
js     806cbcf <_IO_stdin_used+0x1a0b>
and    %dh,0x65(%ebx)
popa
jb     806cbc4 <_IO_stdin_used+0x1a00>
push   $0x7065722f
insb   (%dx),%es:(%edi)
popa
arpl   %sp,0x20(%ebp)
jae    806cbe1 <_IO_stdin_used+0x1a1d>
jb     806cbd8 <_IO_stdin_used+0x1a14>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %dl,0x67(%edi,%ebp,2)
insb   (%dx),%es:(%di)
and    %ah,%gs:0x61(%edx)
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x72(%edi)
imul   $0x206c616e,0x69(%edi),%esp
imul   $0x5400,0x0(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
addr32 insb (%dx),%es:(%di)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x66(%edi)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     806cbd4 <_IO_stdin_used+0x1a10>
bound  %esi,0x66(%ebp)
data16
gs
jb     806cbbb <_IO_stdin_used+0x19f7>
add    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
je     806cc2c <_IO_stdin_used+0x1a68>
and    %ah,%gs:0x69(%esi)
jb     806cc3d <_IO_stdin_used+0x1a79>
je     806cbec <_IO_stdin_used+0x1a28>
imul   $0x6e69,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%ebp,2)
je     806cbdd <_IO_stdin_used+0x1a19>
add    %al,(%eax)
add    %al,0x6f(%edi)
and    %dh,0x20(%edi,%ebp,2)
je     806cc50 <_IO_stdin_used+0x1a8c>
and    %ch,%gs:0x73(%ecx,%eiz,2)
je     806cc0f <_IO_stdin_used+0x1a4b>
imul   $0x6e69,0x20(%ebp,%eiz,2),%bp
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%ebp,2)
je     806cc00 <_IO_stdin_used+0x1a3c>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    806cc79 <_IO_stdin_used+0x1ab5>
popa
outsb  %ds:(%esi),(%dx)
je     806cc29 <_IO_stdin_used+0x1a65>
arpl   %si,0x72(%ebp)
jae    806cc7d <_IO_stdin_used+0x1ab9>
jb     806cc30 <_IO_stdin_used+0x1a6c>
jo     806cc81 <_IO_stdin_used+0x1abd>
jae    806cc7d <_IO_stdin_used+0x1ab9>
je     806cc7f <_IO_stdin_used+0x1abb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx,%ebp,2)
jo     806cc8a <_IO_stdin_used+0x1ac6>
popa
jns    806cc21 <_IO_stdin_used+0x1a5d>
add    %al,(%eax)
add    %cl,0x6f(%esi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    806cc91 <_IO_stdin_used+0x1acd>
jb     806cca1 <_IO_stdin_used+0x1add>
imul   $0x6f726620,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
das
dec    %ebp
popa
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806ccb0 <_IO_stdin_used+0x1aec>
popa
je     806cc46 <_IO_stdin_used+0x1a82>
add    %al,(%eax)
push   %ebp
jae    806ccb0 <_IO_stdin_used+0x1aec>
and    %ch,0x66(%edi)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6f(%ebp)
jb     806ccbc <_IO_stdin_used+0x1af8>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6f(%esi)
jb     806cc81 <_IO_stdin_used+0x1abd>
gs imul $0x67,%fs:%gs:0x6e(%ecx,%ebp,2),%esi
00
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    806ccd6 <_IO_stdin_used+0x1b12>
jb     806cce6 <_IO_stdin_used+0x1b22>
imul   $0x20666f20,0x6e(%edi),%ebp
je     806ccf5 <_IO_stdin_used+0x1b31>
jo     806cce3 <_IO_stdin_used+0x1b1f>
and    %dh,%fs:0x62(%ecx,%eiz,2)
jae    806cca5 <_IO_stdin_used+0x1ae1>
je     806ccf6 <_IO_stdin_used+0x1b32>
and    %dh,0x70(%ebx)
popa
arpl   %sp,0x73(%ebp)
add    %al,(%eax)
add    %cl,%ah
push   %es
or     %dl,0x4f0806c4(%esi)
roll   $0x8,(%esi)
mov    0xab0806c4,%al
les    (%esi),%eax
or     %bh,0x4f0806c4(%esi)
roll   $0x8,(%esi)
lret   $0x6c4
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %bl,%al
les    (%esi),%eax
or     %cl,-0x3f(%edi)
push   %es
or     %ah,%bl
les    (%esi),%eax
or     %bh,%cl
les    (%esi),%eax
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %ah,(%esp,%ecx,8)
push   %es
or     %cl,(%edx)
lds    (%esi),%eax
or     %cl,-0x3f(%edi)
push   %es
or     %dl,(%edi)
lds    (%esi),%eax
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %dh,(%ecx)
lds    (%esi),%eax
or     %al,-0x3b(%eax)
push   %es
or     %cl,-0x34(%eax)
push   %es
or     %ch,0x6(%esp,%ecx,8)
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %cl,-0x3f(%edi)
push   %es
or     %dl,-0x3b(%ebx)
push   %es
or     %al,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %al,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %cl,%fs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806cd5d <_IO_stdin_used+0x1b99>
push   %esp
gs
js     806cdb5 <_IO_stdin_used+0x1bf1>
or     (%edx),%cl
and    %dl,0x69(%eax,%ebp,2)
jae    806cd69 <_IO_stdin_used+0x1ba5>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806cdc7 <_IO_stdin_used+0x1c03>
and    %bh,0x6f(%ecx)
jne    806cd79 <_IO_stdin_used+0x1bb5>
je     806cdca <_IO_stdin_used+0x1c06>
and    %ch,0x6e(%ecx)
jae    806cdc5 <_IO_stdin_used+0x1c01>
jb     806cdd6 <_IO_stdin_used+0x1c12>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     806cddb <_IO_stdin_used+0x1c17>
jne    806cde1 <_IO_stdin_used+0x1c1d>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
je     806cdff <_IO_stdin_used+0x1c3b>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806ce0b <_IO_stdin_used+0x1c47>
outsb  %gs:(%esi),(%dx)
je     806cdbd <_IO_stdin_used+0x1bf9>
bound  %esi,0x66(%ebp)
data16
gs
jb     806cdc4 <_IO_stdin_used+0x1c00>
sub    %ch,0x72(%edi)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     806cdce <_IO_stdin_used+0x1c0a>
bound  %esi,0x66(%ebp)
data16
gs
jb     806cdd5 <_IO_stdin_used+0x1c11>
imul   $0x746c756d,0x20(%esi),%ebp
imul   $0x69662065,0x6c(%eax),%esi
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806cded <_IO_stdin_used+0x1c29>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %ebp,%fs:%gs:(%esi)
and    %ah,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    806cdfc <_IO_stdin_used+0x1c38>
outsb  %ds:(%esi),(%dx)
gs gs and %ah,%fs:%gs:0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     806ce4e <_IO_stdin_used+0x1c8a>
gs
jb     806ce09 <_IO_stdin_used+0x1c45>
bound  %ebp,0x6e(%ecx,%eiz,2)
imul   $0x62,(%eax),%esp
jne    806ce58 <_IO_stdin_used+0x1c94>
data16
gs
jb     806ce22 <_IO_stdin_used+0x1c5e>
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806ce1e <_IO_stdin_used+0x1c5a>
outsb  %gs:(%esi),(%dx)
je     806ce67 <_IO_stdin_used+0x1ca3>
jb     806ce24 <_IO_stdin_used+0x1c60>
popa
outsb  %ds:(%esi),(%dx)
jns    806ce28 <_IO_stdin_used+0x1c64>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806ce87 <_IO_stdin_used+0x1cc3>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806cea1 <_IO_stdin_used+0x1cdd>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
and    %al,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%ebp)
fs cmp %fs:%gs:(%edx),%cl
or     (%eax),%al
push   %ebx
jo     806cec0 <_IO_stdin_used+0x1cfc>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %al,0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
dec    %eax
gs
insb   (%dx),%es:(%edi)
jo     806ce89 <_IO_stdin_used+0x1cc5>
push   %esp
gs
js     806cee1 <_IO_stdin_used+0x1d1d>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x65(%ebx)
jb     806cea2 <_IO_stdin_used+0x1cde>
arpl   %bp,0x65(%eax)
arpl   %bp,0x73(%ebx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x67(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x78(%ebp,%eiz,2)
je     806cec2 <_IO_stdin_used+0x1cfe>
imul   $0x20656874,0x20(%esi),%ebp
arpl   %si,0x72(%ebp)
jb     806cf13 <_IO_stdin_used+0x1d4f>
outsb  %ds:(%esi),(%dx)
je     806ced1 <_IO_stdin_used+0x1d0d>
imul   $0x2020,0x2e(%ebp,%eiz,2),%bp
push   %edi
push   $0x61206e65
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%edi)
jb     806cf30 <_IO_stdin_used+0x1d6c>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp)
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806cf3d <_IO_stdin_used+0x1d79>
jb     806cf3f <_IO_stdin_used+0x1d7b>
fs
sub    $0x20,%al
imul   $0x69682073,0x69(%eax,%eiz,1),%esi
addr16 push $0x6867696c
je     806cf52 <_IO_stdin_used+0x1d8e>
and    %ah,%fs:0x6e(%ecx)
and    %ah,%fs:0x20(%ecx)
jb     806cf5c <_IO_stdin_used+0x1d98>
jo     806cf65 <_IO_stdin_used+0x1da1>
popa
arpl   %sp,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     806cf21 <_IO_stdin_used+0x1d5d>
arpl   %sp,0x6e(%ecx)
and    %ah,0x65(%edx)
and    %ah,0x64(%ebp)
imul   $0x4920202e,0x64(%ebp,%eiz,2),%esi
je     806cf34 <_IO_stdin_used+0x1d70>
ja     806cf7f <_IO_stdin_used+0x1dbb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806cf98 <_IO_stdin_used+0x1dd4>
and    %dh,0x20(%edi,%ebp,2)
jb     806cf8f <_IO_stdin_used+0x1dcb>
jo     806cf98 <_IO_stdin_used+0x1dd4>
popa
arpl   %sp,0x20(%ebp)
gs
jbe    806cf98 <_IO_stdin_used+0x1dd4>
jb     806cfae <_IO_stdin_used+0x1dea>
and    %ch,0x6e(%ecx)
jae    806cfae <_IO_stdin_used+0x1dea>
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    806cfaf <_IO_stdin_used+0x1deb>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%ebp)
jae    806cfc3 <_IO_stdin_used+0x1dff>
jo     806cfb7 <_IO_stdin_used+0x1df3>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x6f(%edi)
jb     806cfbf <_IO_stdin_used+0x1dfb>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806cfd9 <_IO_stdin_used+0x1e15>
outsb  %gs:(%esi),(%dx)
je     806cf8b <_IO_stdin_used+0x1dc7>
imul   $0x6f20,0x2c(%ebp,%eiz,2),%bp
jb     806cfa0 <_IO_stdin_used+0x1ddc>
and    %ch,0x66(%ecx)
and    %bh,0x6f(%ecx)
jne    806cf9c <_IO_stdin_used+0x1dd8>
push   $0x20657661
jae    806cfe8 <_IO_stdin_used+0x1e24>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806cfaf <_IO_stdin_used+0x1deb>
ja     806cffa <_IO_stdin_used+0x1e36>
je     806cffb <_IO_stdin_used+0x1e37>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
jb     806d007 <_IO_stdin_used+0x1e43>
sub    $0x20,%al
imul   $0x20656874,0x20(%esi),%ebp
jae    806d00c <_IO_stdin_used+0x1e48>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806cfe1 <_IO_stdin_used+0x1e1d>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d02a <_IO_stdin_used+0x1e66>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d044 <_IO_stdin_used+0x1e80>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dl,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %al,0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%edx),%cl
or     (%eax),%al
add    %al,0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806d070 <_IO_stdin_used+0x1eac>
gs
jb     806d020 <_IO_stdin_used+0x1e5c>
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dl,0x20(%edi,%ebp,2)
inc    %esp
imul   $0x726f7463,0x65(%edx),%esi
jns    806d030 <_IO_stdin_used+0x1e6c>
dec    %eax
gs
insb   (%dx),%es:(%edi)
jo     806d035 <_IO_stdin_used+0x1e71>
push   %esp
gs
js     806d08d <_IO_stdin_used+0x1ec9>
or     (%edx),%cl
and    %al,0x6e(%ebp)
je     806d085 <_IO_stdin_used+0x1ec1>
jb     806d042 <_IO_stdin_used+0x1e7e>
je     806d08c <_IO_stdin_used+0x1ec8>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806d05c <_IO_stdin_used+0x1e98>
jns    806d0ad <_IO_stdin_used+0x1ee9>
jne    806d060 <_IO_stdin_used+0x1e9c>
ja     806d0b1 <_IO_stdin_used+0x1eed>
jne    806d0b0 <_IO_stdin_used+0x1eec>
and    %ch,%fs:0x6b(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
bound  %esi,0x6f(%edx)
ja     806d0c6 <_IO_stdin_used+0x1f02>
and    %dh,%gs:0x2e(%edi,%ebp,2)
or     (%edx),%cl
and    %cl,0x66(%ecx)
and    %dh,0x62(%ecx,%eiz,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     806d0d3 <_IO_stdin_used+0x1f0f>
gs
je     806d0d3 <_IO_stdin_used+0x1f0f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
jae    806d091 <_IO_stdin_used+0x1ecd>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806d095 <_IO_stdin_used+0x1ed1>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
sub    $0x20,%al
jns    806d0f5 <_IO_stdin_used+0x1f31>
jne    806d0a8 <_IO_stdin_used+0x1ee4>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dl,0x62(%ecx,%eiz,2)
and    %ch,0x65(%ebx)
jns    806d0bc <_IO_stdin_used+0x1ef8>
je     806d10d <_IO_stdin_used+0x1f49>
and    %ch,(%eax)
popa
je     806d117 <_IO_stdin_used+0x1f53>
gs
insl   (%dx),%es:(%edi)
jo     806d11b <_IO_stdin_used+0x1f57>
and    %dh,0x29(%edi,%ebp,2)
and    %ah,0x75(%ecx)
je     806d11f <_IO_stdin_used+0x1f5b>
insl   (%dx),%es:(%edi)
popa
je     806d11d <_IO_stdin_used+0x1f59>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    806d0da <_IO_stdin_used+0x1f16>
arpl   %bp,0x6d(%edi)
jo     806d12b <_IO_stdin_used+0x1f67>
gs
je     806d127 <_IO_stdin_used+0x1f63>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806d0f1 <_IO_stdin_used+0x1f2d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d14d <_IO_stdin_used+0x1f89>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d167 <_IO_stdin_used+0x1fa3>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806d17e <_IO_stdin_used+0x1fba>
gs
jb     806d12e <_IO_stdin_used+0x1f6a>
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dl,0x20(%edi,%ebp,2)
inc    %esp
imul   $0x726f7463,0x65(%edx),%esi
jns    806d13e <_IO_stdin_used+0x1f7a>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%edx),%cl
or     (%eax),%al
add    %al,(%eax)
inc    %esi
imul   $0x776f7242,0x20(%ebp,%eiz,2),%ebp
jae    806d198 <_IO_stdin_used+0x1fd4>
jb     806d155 <_IO_stdin_used+0x1f91>
dec    %eax
gs
insb   (%dx),%es:(%edi)
jo     806d15a <_IO_stdin_used+0x1f96>
push   %esp
gs
js     806d1b2 <_IO_stdin_used+0x1fee>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806d1c2 <_IO_stdin_used+0x1ffe>
gs
jb     806d172 <_IO_stdin_used+0x1fae>
imul   $0x64657375,0x20(%ebx),%esi
and    %dh,0x20(%edi,%ebp,2)
jbe    806d1c8 <_IO_stdin_used+0x2004>
jae    806d1d6 <_IO_stdin_used+0x2012>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    806d186 <_IO_stdin_used+0x1fc2>
bound  %esi,0x6f(%edx)
ja     806d1de <_IO_stdin_used+0x201a>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806d19b <_IO_stdin_used+0x1fd7>
jae    806d1f1 <_IO_stdin_used+0x202d>
jb     806d1f4 <_IO_stdin_used+0x2030>
arpl   %si,0x72(%ebp,%esi,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
jae    806d1ef <_IO_stdin_used+0x202b>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x61(%eax,%eiz,1)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     806d1ba <_IO_stdin_used+0x1ff6>
jb     806d201 <_IO_stdin_used+0x203d>
popa
imul   $0x20726f20,%fs:0x67(%esi),%ebp
ja     806d219 <_IO_stdin_used+0x2055>
imul   $0x20202e67,0x6e(%ecx,%ebp,2),%esi
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    806d1d3 <_IO_stdin_used+0x200f>
insl   (%dx),%es:(%edi)
popa
jns    806d1d7 <_IO_stdin_used+0x2013>
jne    806d22c <_IO_stdin_used+0x2068>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x72(%ecx)
jb     806d232 <_IO_stdin_used+0x206e>
ja     806d1e5 <_IO_stdin_used+0x2021>
imul   $0x73,0x79(%ebp),%esp
and    %ch,0x72(%edi)
and    %dl,0x61(%eax)
and    %dl,%gs:0x70(%di)
das
inc    %esp
outsl  %ds:(%esi),(%dx)
ja     806d247 <_IO_stdin_used+0x2083>
and    %dh,0x20(%edi,%ebp,2)
bound  %esi,0x6f(%edx)
ja     806d255 <_IO_stdin_used+0x2091>
and    %dh,%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    806d251 <_IO_stdin_used+0x208d>
push   $0x65687420
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806d222 <_IO_stdin_used+0x205e>
and    %ah,0x6e(%ecx)
and    %dl,%fs:0x20(%ebx)
outsl  %ds:(%esi),(%dx)
jb     806d220 <_IO_stdin_used+0x205c>
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     806d269 <_IO_stdin_used+0x20a5>
jb     806d226 <_IO_stdin_used+0x2062>
je     806d277 <_IO_stdin_used+0x20b3>
and    %ah,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    806d274 <_IO_stdin_used+0x20b0>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %ah,0x6e(%ebp)
je     806d28e <_IO_stdin_used+0x20ca>
jb     806d24b <_IO_stdin_used+0x2087>
je     806d295 <_IO_stdin_used+0x20d1>
and    %dh,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806d270 <_IO_stdin_used+0x20ac>
and    %ah,(%eax)
push   %esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jbe    806d2b0 <_IO_stdin_used+0x20ec>
and    %dh,0x70(%ebp)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
sub    $0x20,%al
jae    806d2c1 <_IO_stdin_used+0x20fd>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x74(%eax,%eiz,1)
push   $0x69642065
jb     806d2ce <_IO_stdin_used+0x210a>
arpl   %si,0x72(%edi,%ebp,2)
jns    806d28f <_IO_stdin_used+0x20cb>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:(%edx)
cs and %cs:(%eax),%ah
popa
je     806d29e <_IO_stdin_used+0x20da>
je     806d2e8 <_IO_stdin_used+0x2124>
and    %dh,%gs:0x70(%edi,%ebp,2)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     806d2c5 <_IO_stdin_used+0x2101>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d30e <_IO_stdin_used+0x214a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d328 <_IO_stdin_used+0x2164>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806d348 <_IO_stdin_used+0x2184>
gs
jb     806d312 <_IO_stdin_used+0x214e>
or     (%edx),%cl
add    %al,(%eax)
push   %edi
jb     806d348 <_IO_stdin_used+0x2184>
je     806d346 <_IO_stdin_used+0x2182>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %cl,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806d30c <_IO_stdin_used+0x2148>
push   %esp
gs
js     806d364 <_IO_stdin_used+0x21a0>
or     (%edx),%cl
and    %dl,0x70(%ecx,%edi,2)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax,%ebp,2)
je     806d326 <_IO_stdin_used+0x2162>
jns    806d377 <_IO_stdin_used+0x21b3>
jne    806d32a <_IO_stdin_used+0x2166>
ja     806d375 <_IO_stdin_used+0x21b1>
jae    806d376 <_IO_stdin_used+0x21b2>
and    %dh,0x20(%edi,%ebp,2)
jae    806d375 <_IO_stdin_used+0x21b1>
jbe    806d37b <_IO_stdin_used+0x21b7>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806d391 <_IO_stdin_used+0x21cd>
outsb  %gs:(%esi),(%dx)
je     806d343 <_IO_stdin_used+0x217f>
imul   $0x7361,0x20(%ebp,%eiz,2),%bp
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%eax)
gs
jae    806d3a7 <_IO_stdin_used+0x21e3>
and    %al,0x6e(%ebp)
je     806d39e <_IO_stdin_used+0x21da>
jb     806d35b <_IO_stdin_used+0x2197>
je     806d3ac <_IO_stdin_used+0x21e8>
and    %dh,0x61(%ebx)
jbe    806d3a7 <_IO_stdin_used+0x21e3>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%edx),%cl
and    %cl,0x66(%ecx)
and    %bh,0x6f(%ecx)
jne    806d376 <_IO_stdin_used+0x21b2>
push   $0x20657661
jae    806d3c2 <_IO_stdin_used+0x21fe>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806d389 <_IO_stdin_used+0x21c5>
ja     806d3d4 <_IO_stdin_used+0x2210>
je     806d3d5 <_IO_stdin_used+0x2211>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
jb     806d3e1 <_IO_stdin_used+0x221d>
sub    $0x20,%al
jns    806d3e9 <_IO_stdin_used+0x2225>
jne    806d39c <_IO_stdin_used+0x21d8>
ja     806d3e7 <_IO_stdin_used+0x2223>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806d3fe <_IO_stdin_used+0x223a>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jae    806d3f3 <_IO_stdin_used+0x222f>
jbe    806d3f9 <_IO_stdin_used+0x2235>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806d3ba <_IO_stdin_used+0x21f6>
je     806d404 <_IO_stdin_used+0x2240>
and    %dh,%gs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x6f(%eax)
jb     806d41f <_IO_stdin_used+0x225b>
imul   $0x206f7420,0x6e(%edi),%ebp
popa
and    %dh,0x65(%ebx)
jo     806d419 <_IO_stdin_used+0x2255>
jb     806d41b <_IO_stdin_used+0x2257>
je     806d421 <_IO_stdin_used+0x225d>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs and %ah,%cs:%gs:(%eax)
push   %esp
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
fs
jne    806d42f <_IO_stdin_used+0x226b>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x76(%edi)
gs
jb     806d458 <_IO_stdin_used+0x2294>
jb     806d44c <_IO_stdin_used+0x2288>
je     806d44e <_IO_stdin_used+0x228a>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x75(%ebx)
jb     806d462 <_IO_stdin_used+0x229e>
outsb  %gs:(%esi),(%dx)
je     806d414 <_IO_stdin_used+0x2250>
imul   $0x6977,0x20(%ebp,%eiz,2),%bp
je     806d465 <_IO_stdin_used+0x22a1>
and    %ch,0x75(%edx)
jae    806d476 <_IO_stdin_used+0x22b2>
and    %ah,0x20(%ecx)
jo     806d476 <_IO_stdin_used+0x22b2>
jb     806d47d <_IO_stdin_used+0x22b9>
imul   $0x20666f20,0x6e(%edi),%ebp
imul   $0x20656874,0x20(%esp,%ebp,1),%esi
arpl   %si,0x72(%ebp)
jb     806d482 <_IO_stdin_used+0x22be>
outsb  %ds:(%esi),(%dx)
je     806d440 <_IO_stdin_used+0x227c>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
and    %ch,%gs:0x73(%ecx)
and    %ch,0x6f(%esi)
je     806d450 <_IO_stdin_used+0x228c>
je     806d49a <_IO_stdin_used+0x22d6>
and    %ah,%gs:0x66(%ebp,%eiz,2)
popa
jne    806d4a6 <_IO_stdin_used+0x22e2>
je     806d45c <_IO_stdin_used+0x2298>
imul   $0x73696874,0x20(%esi),%ebp
and    %ch,0x6f(%ebp)
fs gs or %cs:%fs:%gs:(%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d4c0 <_IO_stdin_used+0x22fc>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d4da <_IO_stdin_used+0x2316>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dl,0x72(%edi)
imul   $0x656c6946,0x20(%ebp,%eiz,2),%esi
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%edx),%cl
or     (%eax),%al
inc    %edi
outsl  %ds:(%esi),(%dx)
and    %dl,0x20(%edi,%ebp,2)
dec    %esp
imul   $0x6c654820,0x65(%esi),%ebp
jo     806d4bc <_IO_stdin_used+0x22f8>
push   %esp
gs
js     806d514 <_IO_stdin_used+0x2350>
or     (%edx),%cl
and    %al,0x6e(%ebp)
je     806d50c <_IO_stdin_used+0x2348>
jb     806d4c9 <_IO_stdin_used+0x2305>
je     806d513 <_IO_stdin_used+0x234f>
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x61(%eax,%ebp,2)
je     806d4de <_IO_stdin_used+0x231a>
jns    806d52f <_IO_stdin_used+0x236b>
jne    806d4e2 <_IO_stdin_used+0x231e>
ja     806d52d <_IO_stdin_used+0x2369>
jae    806d52e <_IO_stdin_used+0x236a>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%si),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x69(%eax)
je     806d4f8 <_IO_stdin_used+0x2334>
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     806d541 <_IO_stdin_used+0x237d>
jb     806d50c <_IO_stdin_used+0x2348>
and    %ah,(%eax)
dec    %ecx
data16
and    %dh,0x65(%eax,%ebp,2)
jb     806d54d <_IO_stdin_used+0x2389>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x65(%esi)
ja     806d556 <_IO_stdin_used+0x2392>
jb     806d513 <_IO_stdin_used+0x234f>
insb   (%dx),%es:(%edi)
imul   $0x666f2073,0x65(%esi),%ebp
and    %dh,0x78(%ebp,%eiz,2)
je     806d521 <_IO_stdin_used+0x235d>
je     806d56b <_IO_stdin_used+0x23a7>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %bh,0x6f(%ecx)
jne    806d535 <_IO_stdin_used+0x2371>
outsb  %gs:(%esi),(%dx)
je     806d57e <_IO_stdin_used+0x23ba>
jb     806d580 <_IO_stdin_used+0x23bc>
fs
sub    $0x20,%al
jns    806d58f <_IO_stdin_used+0x23cb>
jne    806d542 <_IO_stdin_used+0x237e>
ja     806d58d <_IO_stdin_used+0x23c9>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %ah,0x72(%edx)
outsl  %ds:(%esi),(%dx)
jne    806d596 <_IO_stdin_used+0x23d2>
push   $0x6f742074
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     806d55e <_IO_stdin_used+0x239a>
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x65(%esi),%ebp
je     806d5b0 <_IO_stdin_used+0x23ec>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d5c6 <_IO_stdin_used+0x2402>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d5e0 <_IO_stdin_used+0x241c>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x6f(%edi)
and    %dl,0x20(%edi,%ebp,2)
dec    %esp
imul   $0x646f6d20,0x65(%esi),%ebp
cmp    %gs:(%edx),%cl
or     (%eax),%al
add    %al,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    806d5bb <_IO_stdin_used+0x23f7>
push   $0x20657661
jae    806d607 <_IO_stdin_used+0x2443>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806d5ce <_IO_stdin_used+0x240a>
ja     806d619 <_IO_stdin_used+0x2455>
je     806d61a <_IO_stdin_used+0x2456>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
jb     806d626 <_IO_stdin_used+0x2462>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
popa
jb     806d62d <_IO_stdin_used+0x2469>
push   $0x206f7420
jb     806d636 <_IO_stdin_used+0x2472>
jo     806d63f <_IO_stdin_used+0x247b>
popa
arpl   %sp,0x2c(%ebp)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806d5fd <_IO_stdin_used+0x2439>
insl   (%dx),%es:(%edi)
popa
je     806d644 <_IO_stdin_used+0x2480>
push   $0x69207365
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806d61a <_IO_stdin_used+0x2456>
ja     806d665 <_IO_stdin_used+0x24a1>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
jo     806d672 <_IO_stdin_used+0x24ae>
popa
arpl   %sp,0x64(%ebp)
or     %cs:(%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d682 <_IO_stdin_used+0x24be>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d69c <_IO_stdin_used+0x24d8>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dl,0x65(%ebx)
popa
jb     806d6a3 <_IO_stdin_used+0x24df>
push   $0x646f6d20
cmp    %gs:(%edx),%cl
or     (%eax),%al
add    %al,(%eax)
push   %ebx
gs
popa
jb     806d6b4 <_IO_stdin_used+0x24f0>
push   $0x6d6f4320
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %cl,%fs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806d680 <_IO_stdin_used+0x24bc>
push   %esp
gs
js     806d6d8 <_IO_stdin_used+0x2514>
or     (%edx),%cl
and    %al,0x6e(%ebp)
je     806d6d0 <_IO_stdin_used+0x250c>
jb     806d68d <_IO_stdin_used+0x24c9>
je     806d6d7 <_IO_stdin_used+0x2513>
and    %dh,%gs:0x6f(%edi)
jb     806d6d9 <_IO_stdin_used+0x2515>
jae    806d697 <_IO_stdin_used+0x24d3>
outsl  %ds:(%esi),(%dx)
jb     806d69a <_IO_stdin_used+0x24d6>
arpl   %bp,0x61(%eax)
jb     806d6e0 <_IO_stdin_used+0x251c>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806d6a5 <_IO_stdin_used+0x24e1>
jns    806d6f6 <_IO_stdin_used+0x2532>
jne    806d6a9 <_IO_stdin_used+0x24e5>
ja     806d6fa <_IO_stdin_used+0x2536>
jne    806d6f9 <_IO_stdin_used+0x2535>
and    %ch,%fs:0x6b(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
jae    806d6fe <_IO_stdin_used+0x253a>
popa
jb     806d6ff <_IO_stdin_used+0x253b>
push   $0x726f6620
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jae    806d724 <_IO_stdin_used+0x2560>
and    %al,0x6e(%ebp)
je     806d71b <_IO_stdin_used+0x2557>
jb     806d6e6 <_IO_stdin_used+0x2522>
and    %ah,(%eax)
dec    %ecx
data16
and    %dh,0x65(%eax,%ebp,2)
jb     806d727 <_IO_stdin_used+0x2563>
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     806d72f <_IO_stdin_used+0x256b>
push   $0x726f6620
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806d6fb <_IO_stdin_used+0x2537>
jns    806d74c <_IO_stdin_used+0x2588>
jne    806d6ff <_IO_stdin_used+0x253b>
outsb  %gs:(%esi),(%dx)
je     806d748 <_IO_stdin_used+0x2584>
jb     806d74a <_IO_stdin_used+0x2586>
fs
sub    $0x20,%al
je     806d752 <_IO_stdin_used+0x258e>
and    %dh,%gs:0x63(%ebx)
jb     806d755 <_IO_stdin_used+0x2591>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x70(%ebp)
fs
popa
je     806d766 <_IO_stdin_used+0x25a2>
and    %dh,%fs:0x20(%edi,%ebp,2)
je     806d770 <_IO_stdin_used+0x25ac>
and    %ch,%gs:0x63(%edi,%ebp,2)
popa
je     806d779 <_IO_stdin_used+0x25b5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%esi)
popa
jb     806d784 <_IO_stdin_used+0x25c0>
jae    806d795 <_IO_stdin_used+0x25d1>
and    %ch,0x61(%ebp)
je     806d789 <_IO_stdin_used+0x25c5>
push   $0x726f6620
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
popa
jb     806d798 <_IO_stdin_used+0x25d4>
push   $0x72747320
imul   $0x200a0a2e,0x67(%esi),%ebp
push   %esp
push   $0x72702065
gs
jbe    806d7b3 <_IO_stdin_used+0x25ef>
outsl  %ds:(%esi),(%dx)
jne    806d7c0 <_IO_stdin_used+0x25fc>
and    %dh,0x65(%ebx)
popa
jb     806d7b6 <_IO_stdin_used+0x25f2>
push   $0x72747320
imul   $0x6c697720,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     806d7d7 <_IO_stdin_used+0x2613>
and    %ch,0x6e(%ecx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806d7e8 <_IO_stdin_used+0x2624>
and    %ah,0x66(%ecx)
je     806d7df <_IO_stdin_used+0x261b>
jb     806d79c <_IO_stdin_used+0x25d8>
je     806d7e6 <_IO_stdin_used+0x2622>
and    %dh,%gs:0x65(%ebx)
popa
jb     806d7e8 <_IO_stdin_used+0x2624>
push   $0x6f727020
insl   (%dx),%es:(%edi)
jo     806d801 <_IO_stdin_used+0x263d>
and    %ah,%cs:(%eax)
dec    %eax
imul   $0x4520676e,0x69(%esp,%esi,2),%esi
outsb  %ds:(%esi),(%dx)
je     806d801 <_IO_stdin_used+0x263d>
jb     806d7be <_IO_stdin_used+0x25fa>
ja     806d809 <_IO_stdin_used+0x2645>
je     806d80a <_IO_stdin_used+0x2646>
outsl  %ds:(%esi),(%dx)
jne    806d819 <_IO_stdin_used+0x2655>
and    %ah,0x6e(%ebp)
je     806d80f <_IO_stdin_used+0x264b>
jb     806d815 <_IO_stdin_used+0x2651>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
jns    806d7d3 <_IO_stdin_used+0x260f>
je     806d81a <_IO_stdin_used+0x2656>
js     806d82b <_IO_stdin_used+0x2667>
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax)
jb     806d827 <_IO_stdin_used+0x2663>
outsl  %ds:(%esi),(%dx)
jb     806d831 <_IO_stdin_used+0x266d>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
gs
jbe    806d837 <_IO_stdin_used+0x2673>
outsl  %ds:(%esi),(%dx)
jne    806d844 <_IO_stdin_used+0x2680>
and    %dh,0x65(%ebx)
popa
jb     806d83a <_IO_stdin_used+0x2676>
push   $0x20202e
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    806d803 <_IO_stdin_used+0x263f>
outsb  %ds:(%esi),(%dx)
gs gs and %ah,%fs:%gs:0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     806d855 <_IO_stdin_used+0x2691>
gs
jb     806d810 <_IO_stdin_used+0x264c>
bound  %ebp,0x6e(%ecx,%eiz,2)
imul   $0x62,(%eax),%esp
jne    806d85f <_IO_stdin_used+0x269b>
data16
gs
jb     806d829 <_IO_stdin_used+0x2665>
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806d825 <_IO_stdin_used+0x2661>
outsb  %gs:(%esi),(%dx)
je     806d86e <_IO_stdin_used+0x26aa>
jb     806d82b <_IO_stdin_used+0x2667>
popa
outsb  %ds:(%esi),(%dx)
jns    806d82f <_IO_stdin_used+0x266b>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806d83c <_IO_stdin_used+0x2678>
je     806d897 <_IO_stdin_used+0x26d3>
jo     806d885 <_IO_stdin_used+0x26c1>
and    %ch,0x6e(%ecx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
js     806d895 <_IO_stdin_used+0x26d1>
jae    806d8a2 <_IO_stdin_used+0x26de>
outsb  %gs:(%esi),(%dx)
je     806d852 <_IO_stdin_used+0x268e>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
and    %ah,%gs:0x74(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806d8bc <_IO_stdin_used+0x26f8>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%eax)
gs
jae    806d8c5 <_IO_stdin_used+0x2701>
and    %al,0x6e(%ebp)
je     806d8bc <_IO_stdin_used+0x26f8>
jb     806d887 <_IO_stdin_used+0x26c3>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d8d0 <_IO_stdin_used+0x270c>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806d8ea <_IO_stdin_used+0x2726>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %cl,0x6e(%ecx)
jae    806d8f2 <_IO_stdin_used+0x272e>
jb     806d903 <_IO_stdin_used+0x273f>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%ebp)
fs cmp %fs:%gs:(%edx),%cl
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jae    806d909 <_IO_stdin_used+0x2745>
jb     806d91a <_IO_stdin_used+0x2756>
and    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %cl,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806d8d1 <_IO_stdin_used+0x270d>
push   %esp
gs
js     806d929 <_IO_stdin_used+0x2765>
or     (%edx),%cl
and    %dl,0x70(%ecx,%edi,2)
and    %ch,%gs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,0x20(%ecx)
imul   $0x6f74,0x20(%ebp,%eiz,2),%bp
and    %ah,0x65(%edx)
and    %ch,0x6e(%ecx)
jae    806d942 <_IO_stdin_used+0x277e>
jb     806d953 <_IO_stdin_used+0x278f>
gs and %ch,%fs:%gs:0x6e(%ecx)
je     806d955 <_IO_stdin_used+0x2791>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     806d961 <_IO_stdin_used+0x279d>
outsb  %gs:(%esi),(%dx)
je     806d913 <_IO_stdin_used+0x274f>
imul   $0x7562,0x20(%ebp,%eiz,2),%bp
data16
data16
gs
jb     806d91f <_IO_stdin_used+0x275b>
popa
je     806d922 <_IO_stdin_used+0x275e>
je     806d96c <_IO_stdin_used+0x27a8>
and    %ah,%gs:0x75(%ebx)
jb     806d97c <_IO_stdin_used+0x27b8>
outsb  %gs:(%esi),(%dx)
je     806d92e <_IO_stdin_used+0x276a>
arpl   %si,0x72(%ebp)
jae    806d982 <_IO_stdin_used+0x27be>
jb     806d935 <_IO_stdin_used+0x2771>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x200a0a2e,0x6e(%edi),%ebp
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    806d948 <_IO_stdin_used+0x2784>
push   $0x20657661
arpl   %bp,0x6d(%edi)
jo     806d99b <_IO_stdin_used+0x27d7>
insb   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     806d9a7 <_IO_stdin_used+0x27e3>
and    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     806d9ae <_IO_stdin_used+0x27ea>
jo     806d9b3 <_IO_stdin_used+0x27ef>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806d975 <_IO_stdin_used+0x27b1>
jae    806d9cc <_IO_stdin_used+0x2808>
jo     806d9c9 <_IO_stdin_used+0x2805>
outsl  %ds:(%esi),(%dx)
jb     806d9d0 <_IO_stdin_used+0x280c>
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806d9d8 <_IO_stdin_used+0x2814>
je     806d9d7 <_IO_stdin_used+0x2813>
jo     806d9dc <_IO_stdin_used+0x2818>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806d9f1 <_IO_stdin_used+0x282d>
and    %dh,0x69(%edi)
je     806d9eb <_IO_stdin_used+0x2827>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x726f2046
and    %ch,0x6c756d2d
je     806d9fe <_IO_stdin_used+0x283a>
bound  %esi,0x66(%ebp)
data16
gs
jb     806d9bc <_IO_stdin_used+0x27f8>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6c(%esi)
popa
addr16 jae 806d9db <_IO_stdin_used+0x2817>
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x65(%ebp)
je     806da19 <_IO_stdin_used+0x2855>
sub    $0x6f742046,%eax
addr32 insb (%dx),%es:(%di)
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806d9e6 <_IO_stdin_used+0x2822>
popa
and    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806da31 <_IO_stdin_used+0x286d>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
sub    $0x20,%al
imul   $0x69747265,0x73(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%bx,%di)
imul   $0x6977,0x20(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
jne    806da62 <_IO_stdin_used+0x289e>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %ch,%fs:%gs:0x6e(%ecx)
je     806da74 <_IO_stdin_used+0x28b0>
and    %ah,0x20(%ecx)
jae    806da6f <_IO_stdin_used+0x28ab>
jo     806da6d <_IO_stdin_used+0x28a9>
jb     806da6f <_IO_stdin_used+0x28ab>
je     806da75 <_IO_stdin_used+0x28b1>
and    %ah,0x75(%edx)
data16
data16
gs
jb     806da38 <_IO_stdin_used+0x2874>
sub    %dh,0x73(%ebp)
and    %cl,%gs:0x65(%ebp)
je     806da82 <_IO_stdin_used+0x28be>
sub    $0x6e61203c,%eax
and    %bh,%fs:(%esi)
and    %dh,0x20(%edi,%ebp,2)
jae    806daa6 <_IO_stdin_used+0x28e2>
imul   $0x74656220,0x68(%ebx,%eiz,2),%esi
ja     806da9e <_IO_stdin_used+0x28da>
outsb  %gs:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806dabb <_IO_stdin_used+0x28f7>
sub    %ebp,(%esi)
and    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %dl,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806dac5 <_IO_stdin_used+0x2901>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    806dadf <_IO_stdin_used+0x291b>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806daf6 <_IO_stdin_used+0x2932>
gs
jb     806daa6 <_IO_stdin_used+0x28e2>
push   %ebx
gs
popa
jb     806daee <_IO_stdin_used+0x292a>
push   $0x646f6d20
cmp    %gs:(%edx),%cl
or     (%eax),%al
add    %al,(%eax)
add    %al,0x72(%edx)
outsl  %ds:(%esi),(%dx)
ja     806db10 <_IO_stdin_used+0x294c>
gs
jb     806dac0 <_IO_stdin_used+0x28fc>
push   %ebx
gs
popa
jb     806db08 <_IO_stdin_used+0x2944>
push   $0x6d6f4320
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %cl,%fs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806dad4 <_IO_stdin_used+0x2910>
push   %esp
gs
js     806db2c <_IO_stdin_used+0x2968>
or     (%edx),%cl
and    %al,0x6e(%ebp)
je     806db24 <_IO_stdin_used+0x2960>
jb     806dae1 <_IO_stdin_used+0x291d>
je     806db2b <_IO_stdin_used+0x2967>
and    %dh,%gs:0x6f(%edi)
jb     806db2d <_IO_stdin_used+0x2969>
jae    806daeb <_IO_stdin_used+0x2927>
outsl  %ds:(%esi),(%dx)
jb     806daee <_IO_stdin_used+0x292a>
arpl   %bp,0x61(%eax)
jb     806db34 <_IO_stdin_used+0x2970>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806daf9 <_IO_stdin_used+0x2935>
jns    806db4a <_IO_stdin_used+0x2986>
jne    806dafd <_IO_stdin_used+0x2939>
ja     806db4e <_IO_stdin_used+0x298a>
jne    806db4d <_IO_stdin_used+0x2989>
and    %ch,%fs:0x6b(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
jae    806db52 <_IO_stdin_used+0x298e>
popa
jb     806db53 <_IO_stdin_used+0x298f>
push   $0x726f6620
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jae    806db78 <_IO_stdin_used+0x29b4>
and    %al,0x6e(%ebp)
je     806db6f <_IO_stdin_used+0x29ab>
jb     806db3a <_IO_stdin_used+0x2976>
and    %ah,(%eax)
dec    %ecx
data16
and    %dh,0x65(%eax,%ebp,2)
jb     806db7b <_IO_stdin_used+0x29b7>
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
popa
je     806db83 <_IO_stdin_used+0x29bf>
push   $0x726f6620
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x78(%ebp,%eiz,2)
je     806db4f <_IO_stdin_used+0x298b>
jns    806dba0 <_IO_stdin_used+0x29dc>
jne    806db53 <_IO_stdin_used+0x298f>
outsb  %gs:(%esi),(%dx)
je     806db9c <_IO_stdin_used+0x29d8>
jb     806db9e <_IO_stdin_used+0x29da>
fs
sub    $0x20,%al
je     806dba6 <_IO_stdin_used+0x29e2>
and    %dh,%gs:0x63(%ebx)
jb     806dba9 <_IO_stdin_used+0x29e5>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x70(%ebp)
fs
popa
je     806dbba <_IO_stdin_used+0x29f6>
and    %dh,%fs:0x20(%edi,%ebp,2)
je     806dbc4 <_IO_stdin_used+0x2a00>
and    %ch,%gs:0x63(%edi,%ebp,2)
popa
je     806dbcd <_IO_stdin_used+0x2a09>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%esi)
popa
jb     806dbd8 <_IO_stdin_used+0x2a14>
jae    806dbe9 <_IO_stdin_used+0x2a25>
and    %ch,0x61(%ebp)
je     806dbdd <_IO_stdin_used+0x2a19>
push   $0x726f6620
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
popa
jb     806dbec <_IO_stdin_used+0x2a28>
push   $0x72747320
imul   $0x200a0a2e,0x67(%esi),%ebp
push   %esp
push   $0x72702065
gs
jbe    806dc07 <_IO_stdin_used+0x2a43>
outsl  %ds:(%esi),(%dx)
jne    806dc14 <_IO_stdin_used+0x2a50>
and    %dh,0x65(%ebx)
popa
jb     806dc0a <_IO_stdin_used+0x2a46>
push   $0x72747320
imul   $0x6c697720,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     806dc2b <_IO_stdin_used+0x2a67>
and    %ch,0x6e(%ecx)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806dc3c <_IO_stdin_used+0x2a78>
and    %ah,0x66(%ecx)
je     806dc33 <_IO_stdin_used+0x2a6f>
jb     806dbf0 <_IO_stdin_used+0x2a2c>
je     806dc3a <_IO_stdin_used+0x2a76>
and    %dh,%gs:0x65(%ebx)
popa
jb     806dc3c <_IO_stdin_used+0x2a78>
push   $0x6f727020
insl   (%dx),%es:(%edi)
jo     806dc55 <_IO_stdin_used+0x2a91>
and    %ah,%cs:(%eax)
dec    %eax
imul   $0x4520676e,0x69(%esp,%esi,2),%esi
outsb  %ds:(%esi),(%dx)
je     806dc55 <_IO_stdin_used+0x2a91>
jb     806dc12 <_IO_stdin_used+0x2a4e>
ja     806dc5d <_IO_stdin_used+0x2a99>
je     806dc5e <_IO_stdin_used+0x2a9a>
outsl  %ds:(%esi),(%dx)
jne    806dc6d <_IO_stdin_used+0x2aa9>
and    %ah,0x6e(%ebp)
je     806dc63 <_IO_stdin_used+0x2a9f>
jb     806dc69 <_IO_stdin_used+0x2aa5>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
jns    806dc27 <_IO_stdin_used+0x2a63>
je     806dc6e <_IO_stdin_used+0x2aaa>
js     806dc7f <_IO_stdin_used+0x2abb>
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax)
jb     806dc7b <_IO_stdin_used+0x2ab7>
outsl  %ds:(%esi),(%dx)
jb     806dc85 <_IO_stdin_used+0x2ac1>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
gs
jbe    806dc8b <_IO_stdin_used+0x2ac7>
outsl  %ds:(%esi),(%dx)
jne    806dc98 <_IO_stdin_used+0x2ad4>
and    %dh,0x65(%ebx)
popa
jb     806dc8e <_IO_stdin_used+0x2aca>
push   $0xa0a2e
dec    %ebp
popa
imul   $0x6f6e616e,0x20(%esi),%ebp
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806dc5f <_IO_stdin_used+0x2a9b>
je     806dca6 <_IO_stdin_used+0x2ae2>
js     806dcb7 <_IO_stdin_used+0x2af3>
or     (%edx),%cl
and    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x64(%ebp)
imul   $0x20736920,0x72(%edi,%ebp,2),%esi
fs
gs
jae    806dcc6 <_IO_stdin_used+0x2b02>
outsb  %ds:(%si),(%dx)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
gs
insl   (%dx),%es:(%edi)
jne    806dcd5 <_IO_stdin_used+0x2b11>
popa
je     806dcd1 <_IO_stdin_used+0x2b0d>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x20646e61,0x20(%ecx,%edi,2),%esi
gs
popa
jae    806dcec <_IO_stdin_used+0x2b28>
sub    $0x752d666f,%eax
jae    806dcf3 <_IO_stdin_used+0x2b2f>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x57(%ebp)
and    %dl,0x69(%eax)
arpl   %bp,0x20(%edi)
je     806dd05 <_IO_stdin_used+0x2b41>
js     806dd16 <_IO_stdin_used+0x2b52>
and    %ah,0x64(%ebp)
imul   $0x5420202e,0x72(%edi,%ebp,2),%esi
push   $0x20657265
popa
jb     806dd1a <_IO_stdin_used+0x2b56>
and    %ah,0x6f(%esi)
jne    806dd2c <_IO_stdin_used+0x2b68>
and    %ch,0x61(%ebp)
imul   $0x74636573,0x20(%esi),%ebp
imul   $0x666f2073,0x6e(%edi),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x64(%ebp)
imul   $0x5420202e,0x72(%edi,%ebp,2),%esi
push   $0x6f742065
jo     806dd01 <_IO_stdin_used+0x2b3d>
insb   (%dx),%es:(%edi)
imul   $0x6f687320,0x65(%esi),%ebp
ja     806dd5e <_IO_stdin_used+0x2b9a>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 806dd57 <_IO_stdin_used+0x2b93>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%esi)
jb     806dd6f <_IO_stdin_used+0x2bab>
imul   $0x6874202c,0x6e(%edi),%ebp
and    %ah,%gs:0x75(%ebx)
jb     806dd7b <_IO_stdin_used+0x2bb7>
outsb  %gs:(%esi),(%dx)
je     806dd2d <_IO_stdin_used+0x2b69>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
and    %ah,%gs:0x65(%edx)
imul   $0x69646520,0x67(%esi),%ebp
je     806dd86 <_IO_stdin_used+0x2bc2>
fs
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%edi)
gs
je     806dd95 <_IO_stdin_used+0x2bd1>
gs
jb     806dd50 <_IO_stdin_used+0x2b8c>
outsl  %ds:(%esi),(%dx)
jb     806dd53 <_IO_stdin_used+0x2b8f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806dd57 <_IO_stdin_used+0x2b93>
je     806dda1 <_IO_stdin_used+0x2bdd>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%eax)
jae    806dd64 <_IO_stdin_used+0x2ba0>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x202e6465,%fs:0x69(%esi),%esp
and    %cl,0x65(%esi)
js     806ddcc <_IO_stdin_used+0x2c08>
and    %ch,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
imul   $0x74696465,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806dd8c <_IO_stdin_used+0x2bc8>
ja     806ddd7 <_IO_stdin_used+0x2c13>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     806dd93 <_IO_stdin_used+0x2bcf>
jae    806dddd <_IO_stdin_used+0x2c19>
outsl  %ds:(%esi),(%dx)
ja     806dde1 <_IO_stdin_used+0x2c1d>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edx)
imul   $0x69646520,0x67(%esi),%ebp
je     806ddf4 <_IO_stdin_used+0x2c30>
fs and %ah,%cs:%fs:(%eax)
push   %esp
push   $0x74732065
popa
je     806de11 <_IO_stdin_used+0x2c4d>
jae    806ddbe <_IO_stdin_used+0x2bfa>
insb   (%dx),%es:(%edi)
imul   $0x20736920,0x65(%esi),%ebp
je     806de10 <_IO_stdin_used+0x2c4c>
and    %dh,%gs:0x69(%eax,%ebp,2)
jb     806de13 <_IO_stdin_used+0x2c4f>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%edx)
je     806de36 <_IO_stdin_used+0x2c72>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     806de41 <_IO_stdin_used+0x2c7d>
and    %ch,0x6d(%ecx)
jo     806de42 <_IO_stdin_used+0x2c7e>
jb     806de49 <_IO_stdin_used+0x2c85>
popa
outsb  %ds:(%esi),(%dx)
je     806ddf9 <_IO_stdin_used+0x2c35>
insl   (%dx),%es:(%edi)
gs
jae    806de50 <_IO_stdin_used+0x2c8c>
popa
addr16
gs
jae    806de10 <_IO_stdin_used+0x2c4c>
and    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   $0x6f622065
je     806de64 <_IO_stdin_used+0x2ca0>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%edi,%esi,2)
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806de1d <_IO_stdin_used+0x2c59>
jae    806de67 <_IO_stdin_used+0x2ca3>
outsl  %ds:(%esi),(%dx)
ja     806de22 <_IO_stdin_used+0x2c5e>
je     806de6c <_IO_stdin_used+0x2ca8>
and    %ch,%gs:0x6f(%ebp)
jae    806de7e <_IO_stdin_used+0x2cba>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806de34 <_IO_stdin_used+0x2c70>
jne    806de89 <_IO_stdin_used+0x2cc5>
gs and %dh,%fs:%gs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jb     806de92 <_IO_stdin_used+0x2cce>
arpl   %si,0x74(%ebp)
jae    806de43 <_IO_stdin_used+0x2c7f>
imul   $0x20656874,0x20(%esi),%ebp
gs imul $0x200a0a2e,%fs:%gs:0x72(%edi,%ebp,2),%esi
20
push   %esp
push   $0x6f6e2065
je     806de9d <_IO_stdin_used+0x2cd9>
je     806dea7 <_IO_stdin_used+0x2ce3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     806de65 <_IO_stdin_used+0x2ca1>
jae    806deaf <_IO_stdin_used+0x2ceb>
outsl  %ds:(%esi),(%dx)
jb     806debe <_IO_stdin_used+0x2cfa>
arpl   %si,0x74(%ebp)
jae    806de6f <_IO_stdin_used+0x2cab>
imul   $0x66207361,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806decf <_IO_stdin_used+0x2d0b>
cmp    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     806ded5 <_IO_stdin_used+0x2d11>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
sub    $0x2079656b,%eax
jae    806ded1 <_IO_stdin_used+0x2d0d>
jno    806dee3 <_IO_stdin_used+0x2d1f>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6f(%esi)
je     806dedd <_IO_stdin_used+0x2d19>
je     806dee3 <_IO_stdin_used+0x2d1f>
and    %dh,%fs:0x69(%edi)
je     806deec <_IO_stdin_used+0x2d28>
and    %ah,0x20(%ecx)
arpl   %sp,0x72(%ecx)
gs
je     806dead <_IO_stdin_used+0x2ce9>
sub    %bl,0x29(%esi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %ah,0x6e(%ebp)
je     806df0c <_IO_stdin_used+0x2d48>
jb     806df0e <_IO_stdin_used+0x2d4a>
and    %ah,%fs:0x69(%ebp)
je     806df17 <_IO_stdin_used+0x2d53>
gs
jb     806ded2 <_IO_stdin_used+0x2d0e>
bound  %edi,0x20(%ecx)
jne    806df2a <_IO_stdin_used+0x2d66>
imul   $0x65687420,0x67(%esi),%ebp
and    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806df36 <_IO_stdin_used+0x2d72>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
inc    %ebx
je     806df3d <_IO_stdin_used+0x2d79>
insb   (%dx),%es:(%edi)
sub    %esp,(%eax)
imul   $0x20,0x79(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     806def5 <_IO_stdin_used+0x2d31>
jo     806df49 <_IO_stdin_used+0x2d85>
gs
jae    806df4d <_IO_stdin_used+0x2d89>
imul   $0x65687420,0x67(%esi),%ebp
and    %al,0x73(%ebp)
arpl   %sp,0x70(%ecx)
and    %ch,%gs:(%eax)
inc    %ebp
jae    806df50 <_IO_stdin_used+0x2d8c>
sub    %esp,(%eax)
imul   $0x20,0x79(%ebp),%esp
je     806df6c <_IO_stdin_used+0x2da8>
imul   $0x4520202e,0x65(%ebx),%esp
jae    806df61 <_IO_stdin_used+0x2d9d>
popa
jo     806df66 <_IO_stdin_used+0x2da2>
sub    $0x2079656b,%eax
jae    806df6d <_IO_stdin_used+0x2da9>
jno    806df7f <_IO_stdin_used+0x2dbb>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6f(%esi)
je     806df79 <_IO_stdin_used+0x2db5>
je     806df7f <_IO_stdin_used+0x2dbb>
and    %dh,%fs:0x69(%edi)
je     806df88 <_IO_stdin_used+0x2dc4>
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x65(%ebp)
je     806df8a <_IO_stdin_used+0x2dc6>
and    %ch,(%eax)
dec    %ebp
sub    $0x79732029,%eax
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %ah,0x6e(%ebp)
je     806dfaa <_IO_stdin_used+0x2de6>
jb     806dfac <_IO_stdin_used+0x2de8>
and    %dh,%fs:0x73(%ebp)
imul   $0x74696520,0x67(%esi),%ebp
push   $0x74207265
push   $0x73452065
arpl   %bp,(%eax,%eiz,1)
inc    %ecx
insb   (%dx),%es:(%edi)
je     806df8f <_IO_stdin_used+0x2dcb>
and    %ch,0x72(%edi)
and    %cl,0x65(%ebp)
je     806dfcc <_IO_stdin_used+0x2e08>
and    %ch,0x65(%ebx)
jns    806df90 <_IO_stdin_used+0x2dcc>
fs
gs
jo     806dfd9 <_IO_stdin_used+0x2e15>
outsb  %ds:(%esi),(%dx)
imul   $0x206e6f20,%fs:0x67(%esi),%ebp
jns    806dfee <_IO_stdin_used+0x2e2a>
jne    806dff3 <_IO_stdin_used+0x2e2f>
and    %ch,0x65(%ebx)
jns    806dfe8 <_IO_stdin_used+0x2e24>
outsl  %ds:(%esi),(%dx)
popa
jb     806dfee <_IO_stdin_used+0x2e2a>
and    %dh,0x65(%ebx)
je     806e004 <_IO_stdin_used+0x2e40>
jo     806dfbf <_IO_stdin_used+0x2dfb>
and    %ah,(%eax)
add    %al,0x6c(%ecx)
jae    806e007 <_IO_stdin_used+0x2e43>
sub    $0x20,%al
jo     806e00e <_IO_stdin_used+0x2e4a>
gs
jae    806e012 <_IO_stdin_used+0x2e4e>
imul   $0x63734520,0x67(%esi),%ebp
and    %dh,0x69(%edi,%esi,2)
arpl   %sp,0x20(%ebp)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
imul   $0x74206120,0x67(%esi),%ebp
push   $0x2d656572
imul   $0x65642074,%fs:0x69(%edi),%esp
arpl   %bp,0x6d(%ecx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,(%eax)
xor    %dh,(%eax)
and    %dh,0x20(%edi,%ebp,2)
xor    0x69772035,%dh
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6e(%ebp)
je     806e058 <_IO_stdin_used+0x2e94>
jb     806e015 <_IO_stdin_used+0x2e51>
je     806e05f <_IO_stdin_used+0x2e9b>
and    %ah,%gs:0x68(%ebx)
popa
jb     806e05f <_IO_stdin_used+0x2e9b>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x69(%edi)
je     806e06f <_IO_stdin_used+0x2eab>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
jb     806e082 <_IO_stdin_used+0x2ebe>
gs
jae    806e083 <_IO_stdin_used+0x2ebf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c617620,%fs:0x67(%esi),%ebp
jne    806e084 <_IO_stdin_used+0x2ec0>
and    %ah,%cs:(%eax)
push   %esp
push   $0x6f662065
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806e096 <_IO_stdin_used+0x2ed2>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%bp,%di)
jns    806e0a7 <_IO_stdin_used+0x2ee3>
je     806e0a8 <_IO_stdin_used+0x2ee4>
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x73(%ebp),%esp
popa
jb     806e0a3 <_IO_stdin_used+0x2edf>
and    %ah,0x76(%ecx)
popa
imul   $0x6920656c,0x62(%ecx,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
imul   $0x74696465,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806e07c <_IO_stdin_used+0x2eb8>
ja     806e0c7 <_IO_stdin_used+0x2f03>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     806e091 <_IO_stdin_used+0x2ecd>
and    %ah,(%eax)
inc    %ecx
insb   (%dx),%es:(%edi)
je     806e0ce <_IO_stdin_used+0x2f0a>
jb     806e0d9 <_IO_stdin_used+0x2f15>
popa
je     806e0d7 <_IO_stdin_used+0x2f13>
jbe    806e0d5 <_IO_stdin_used+0x2f11>
and    %ch,0x65(%ebx)
jns    806e0e8 <_IO_stdin_used+0x2f24>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     806e0ed <_IO_stdin_used+0x2f29>
and    %ch,0x6e(%ecx)
and    %dh,0x61(%eax)
jb     806e0ec <_IO_stdin_used+0x2f28>
outsb  %ds:(%esi),(%dx)
je     806e0f2 <_IO_stdin_used+0x2f2e>
gs
jae    806e0f2 <_IO_stdin_used+0x2f2e>
jae    806e0c9 <_IO_stdin_used+0x2f05>
or     (%edx),%cl
add    %ah,0x6e(%ebp)
popa
bound  %ebp,0x2f(%ebp,%eiz,2)
imul   $0x656c62,%fs:0x61(%ebx),%esi
sub    %ah,0x9092973
or     %esp,0x73252073
or     (%eax),%al
dec    %ebx
gs
jns    806e0d3 <_IO_stdin_used+0x2f0f>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%ecx)
and    %dh,0x69(%esi)
gs
ja     806e0e3 <_IO_stdin_used+0x2f1f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,(%esi)
jae    806e131 <_IO_stdin_used+0x2f6d>
jbe    806e137 <_IO_stdin_used+0x2f73>
add    %cl,(%edx)
inc    %edx
jne    806e13d <_IO_stdin_used+0x2f79>
data16
gs
jb     806e0fb <_IO_stdin_used+0x2f37>
ja     806e14f <_IO_stdin_used+0x2f8b>
imul   $0x6f74206e,0x65(%esp,%esi,2),%esi
and    %ah,0xa000a73
inc    %edx
jne    806e154 <_IO_stdin_used+0x2f90>
data16
gs
jb     806e112 <_IO_stdin_used+0x2f4e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806e116 <_IO_stdin_used+0x2f52>
ja     806e16a <_IO_stdin_used+0x2fa6>
imul   $0x25203a6e,0x65(%esp,%esi,2),%esi
jae    806e10c <_IO_stdin_used+0x2f48>
add    %dl,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    806e16f <_IO_stdin_used+0x2fab>
and    %dl,%fs:0x49(%ebx)
inc    %edi
dec    %eax
push   %ebp
push   %eax
and    %ch,0x72(%edi)
and    %dl,0x49(%ebx)
inc    %edi
push   %esp
inc    %ebp
push   %edx
dec    %ebp
or     (%eax),%al
and    %ah,0x9000973
or     %eax,(%eax)
push   %ebx
push   $0x7420776f
push   $0x6d207369
gs
jae    806e1a8 <_IO_stdin_used+0x2fe4>
popa
add    %ch,%gs:(%di)
sub    $0x706c6568,%eax
add    %ch,0x2d202c68
aas
add    %ch,(%ebx)
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
sub    $0x43,%al
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
add    %al,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jae    806e1ca <_IO_stdin_used+0x3006>
popa
jb     806e1d4 <_IO_stdin_used+0x3010>
and    %ch,0x6f(%eax)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x65(%ebx)
jns    806e16a <_IO_stdin_used+0x2fa6>
sub    $0x616d732d,%eax
jb     806e1e5 <_IO_stdin_used+0x3021>
push   $0x656d6f
sub    $0x6361622d,%eax
imul   $0x0,0x70(%ebp),%esi
sub    $0x6361622d,%eax
imul   $0x64,0x70(%ebp),%esi
imul   $0x7269643c,0x3d(%edx),%esi
add    %ch,%ds:0x643c2043
imul   $0x622d2d00,0x3e(%edx),%esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
je     806e207 <_IO_stdin_used+0x3043>
js     806e218 <_IO_stdin_used+0x3054>
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    806e20f <_IO_stdin_used+0x304b>
jb     806e220 <_IO_stdin_used+0x305c>
and    %dh,0x70(%ecx,%edi,2)
gs and %dh,%fs:%gs:0x62(%ecx,%eiz,2)
jae    806e1d8 <_IO_stdin_used+0x3014>
je     806e229 <_IO_stdin_used+0x3065>
and    %dh,0x70(%ebx)
popa
arpl   %sp,0x73(%ebp)
add    %ch,0x6261742d
jae    806e23d <_IO_stdin_used+0x3079>
outsl  %ds:(%esi),(%dx)
jae    806e23c <_IO_stdin_used+0x3078>
popa
arpl   %sp,0x73(%ebp)
add    %al,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806e247 <_IO_stdin_used+0x3083>
je     806e246 <_IO_stdin_used+0x3082>
jo     806e24b <_IO_stdin_used+0x3087>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     806e260 <_IO_stdin_used+0x309c>
add    %ch,0x6c756d2d
je     806e25e <_IO_stdin_used+0x309a>
bound  %esi,0x66(%ebp)
data16
gs
jb     806e1fc <_IO_stdin_used+0x3038>
sub    $0x7369682d,%eax
je     806e272 <_IO_stdin_used+0x30ae>
jb     806e27e <_IO_stdin_used+0x30ba>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,0x6f(%si)
outsb  %ds:(%esi),(%dx)
daa
je     806e22f <_IO_stdin_used+0x306b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x61,(%eax),%esp
je     806e237 <_IO_stdin_used+0x3073>
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806e280 <_IO_stdin_used+0x30bc>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806e224 <_IO_stdin_used+0x3060>
sub    $0x6e67692d,%eax
outsl  %ds:(%esi),(%dx)
jb     806e291 <_IO_stdin_used+0x30cd>
jb     806e291 <_IO_stdin_used+0x30cd>
imul   $0x2d00,0x73(%ebp,%eiz,2),%bp
sub    $0x69626572,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x70,%fs:0x79(%ebp),%esp
popa
add    %ch,%fs:0x6e6f6e2d
gs
ja     806e2b7 <_IO_stdin_used+0x30f3>
imul   $0x2d2d0073,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6e(%edi)
jbe    806e2be <_IO_stdin_used+0x30fa>
jb     806e2cf <_IO_stdin_used+0x310b>
add    %dl,0x73(%ebp)
and    %ch,%gs:0x6e(%edi)
and    %ch,%gs:0x6f(%ebp)
jb     806e2cd <_IO_stdin_used+0x3109>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6f(%esi)
jb     806e292 <_IO_stdin_used+0x30ce>
gs imul $0x2d2d0067,%fs:%gs:0x6e(%ecx,%ebp,2),%esi
2d
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806e2e5 <_IO_stdin_used+0x3121>
jae    806e2f2 <_IO_stdin_used+0x312e>
popa
arpl   %sp,0x0(%ebp)
sub    $0x6f75712d,%eax
je     806e2f2 <_IO_stdin_used+0x312e>
jae    806e303 <_IO_stdin_used+0x313f>
jb     806e2ce <_IO_stdin_used+0x310a>
cmp    $0x73,%al
je     806e307 <_IO_stdin_used+0x3143>
add    %ch,%ds:0x733c2051
je     806e310 <_IO_stdin_used+0x314c>
add    %dl,%ds:0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     806e30e <_IO_stdin_used+0x314a>
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%bp,%di)
jb     806e315 <_IO_stdin_used+0x3151>
outsb  %ds:(%esi),(%dx)
add    %dl,0x65(%bp,%si)
jae    806e327 <_IO_stdin_used+0x3163>
jb     806e31e <_IO_stdin_used+0x315a>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x6f(%ebp)
fs add %ch,%fs:%gs:0x7365722d
je     806e338 <_IO_stdin_used+0x3174>
imul   $0x2d006465,0x74(%ebx),%esp
sub    $0x6f6f6d73,%eax
je     806e33c <_IO_stdin_used+0x3178>
add    %ch,0x6261742d
jae    806e345 <_IO_stdin_used+0x3181>
jp     806e343 <_IO_stdin_used+0x317f>
cmp    $0x6f63233c,%eax
insb   (%dx),%es:(%edi)
jae    806e324 <_IO_stdin_used+0x3160>
add    %ch,0x233c2054
arpl   %bp,0x6c(%edi)
jae    806e32f <_IO_stdin_used+0x316b>
add    %al,0x20(%edi,%ebp,2)
jno    806e36c <_IO_stdin_used+0x31a8>
imul   $0x61747320,0x6b(%ebx),%esp
je     806e375 <_IO_stdin_used+0x31b1>
jae    806e364 <_IO_stdin_used+0x31a0>
popa
jb     806e325 <_IO_stdin_used+0x3161>
bound  %ebp,0x6e(%ecx,%eiz,2)
imul   $0x67,0x6e(%ecx),%ebp
add    %ch,0x6975712d
arpl   %bp,0x62(%ebx)
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x2d,(%eax),%eax
sub    $0x73726576,%eax
imul   $0x772d2d00,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806e38f <_IO_stdin_used+0x31cb>
bound  %ebp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
fs
jae    806e332 <_IO_stdin_used+0x316e>
sub    $0x6e79732d,%eax
je     806e39a <_IO_stdin_used+0x31d6>
js     806e378 <_IO_stdin_used+0x31b4>
cmp    $0x73,%al
je     806e3b1 <_IO_stdin_used+0x31ed>
add    %ch,%ds:0x733c2059
je     806e3ba <_IO_stdin_used+0x31f6>
add    %ch,%ds:0x6e6f632d
jae    806e3c5 <_IO_stdin_used+0x3201>
add    %ch,0x2d2d0063
jb     806e3be <_IO_stdin_used+0x31fa>
bound  %ebp,0x6e(%ecx)
fs
fs
gs
insb   (%dx),%es:(%edi)
gs
je     806e3c8 <_IO_stdin_used+0x3204>
add    %ch,0x2d2d0064
popa
jne    806e3e0 <_IO_stdin_used+0x321c>
outsl  %ds:(%esi),(%dx)
imul   $0x746e65,0x64(%esi),%ebp
sub    $0x2d2d0069,%eax
arpl   %si,0x74(%ebp)
add    %ch,0x2d2d006b
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806e38b <_IO_stdin_used+0x31c7>
sub    $0x6e45006c,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     806e3ff <_IO_stdin_used+0x323b>
and    %dh,%gs:0x73(%ebp)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6f(%ebp)
jne    806e41b <_IO_stdin_used+0x3257>
add    %ch,%gs:0x756f6d2d
jae    806e416 <_IO_stdin_used+0x3252>
add    %ch,0x2d2d006d
outsl  %ds:(%esi),(%dx)
jo     806e41f <_IO_stdin_used+0x325b>
jb     806e41d <_IO_stdin_used+0x3259>
je     806e427 <_IO_stdin_used+0x3263>
outsb  %ds:(%esi),(%dx)
imul   $0x7269643c,%fs:0x3d(%bp,%si),%esi
72
add    %ch,%ds:0x643c206f
imul   $0x74655300,0x3e(%edx),%esi
and    %ch,0x70(%edi)
gs
jb     806e43d <_IO_stdin_used+0x3279>
je     806e447 <_IO_stdin_used+0x3283>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%si)
jb     806e44a <_IO_stdin_used+0x3286>
arpl   %si,0x72(%edi,%ebp,2)
jns    806e3eb <_IO_stdin_used+0x3227>
sub    $0x6572702d,%eax
jae    806e457 <_IO_stdin_used+0x3293>
jb     806e46a <_IO_stdin_used+0x32a6>
add    %ch,%gs:0x2d2d0070
jno    806e472 <_IO_stdin_used+0x32ae>
imul   $0x712d00,0x74(%ebp),%esp
sub    $0x6c69662d,%eax
insb   (%dx),%es:(%edi)
cmp    $0x6f63233c,%eax
insb   (%dx),%es:(%edi)
jae    806e450 <_IO_stdin_used+0x328c>
add    %ch,0x233c2072
arpl   %bp,0x6c(%edi)
jae    806e45b <_IO_stdin_used+0x3297>
add    %ch,0x6570732d
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     806e465 <_IO_stdin_used+0x32a1>
cmp    $0x70,%al
jb     806e49b <_IO_stdin_used+0x32d7>
add    %ch,%ds:(%di)
jae    806e452 <_IO_stdin_used+0x328e>
cmp    $0x70,%al
jb     806e4a5 <_IO_stdin_used+0x32e1>
add    %al,%ds:0x6e(%di)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
popa
insb   (%dx),%es:(%edi)
je     806e4a9 <_IO_stdin_used+0x32e5>
jb     806e4b4 <_IO_stdin_used+0x32f0>
popa
je     806e4ae <_IO_stdin_used+0x32ea>
and    %dh,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     806e452 <_IO_stdin_used+0x328e>
sub    $0x6d65742d,%eax
jo     806e4bf <_IO_stdin_used+0x32fb>
imul   $0x2d00742d,0x0(%ebp,%eiz,2),%ebp
sub    $0x6f646e75,%eax
add    %ch,0x69560075
gs
ja     806e48f <_IO_stdin_used+0x32cb>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:(%eax)
jb     806e4dc <_IO_stdin_used+0x3318>
popa
fs
sub    $0x796c6e6f,%eax
sub    %eax,(%eax)
sub    $0x6569762d,%eax
ja     806e487 <_IO_stdin_used+0x32c3>
sub    $0x6f440076,%eax
outsb  %ds:(%esi),(%dx)
daa
je     806e4b0 <_IO_stdin_used+0x32ec>
ja     806e504 <_IO_stdin_used+0x3340>
popa
jo     806e4b5 <_IO_stdin_used+0x32f1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%si)
outsb  %ds:(%esi),(%dx)
gs
jae    806e4a0 <_IO_stdin_used+0x32dc>
sub    $0x776f6e2d,%eax
jb     806e508 <_IO_stdin_used+0x3344>
jo     806e4a9 <_IO_stdin_used+0x32e5>
sub    $0x6f440077,%eax
outsb  %ds:(%esi),(%dx)
daa
je     806e4d2 <_IO_stdin_used+0x330e>
jae    806e51c <_IO_stdin_used+0x3358>
outsl  %ds:(%esi),(%dx)
ja     806e4d7 <_IO_stdin_used+0x3313>
je     806e521 <_IO_stdin_used+0x335d>
and    %dh,%gs:0x6f(%edi,%esi,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806e4e4 <_IO_stdin_used+0x3320>
insb   (%dx),%es:(%edi)
imul   $0x2d2d0073,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   $0x706c65
sub    $0x6e450078,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jae    806e554 <_IO_stdin_used+0x3390>
jae    806e551 <_IO_stdin_used+0x338d>
outsb  %gs:(%esi),(%dx)
jae    806e54e <_IO_stdin_used+0x338a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x7375732d
jo     806e554 <_IO_stdin_used+0x3390>
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x6e45007a
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jae    806e56d <_IO_stdin_used+0x33a9>
data16
je     806e521 <_IO_stdin_used+0x335d>
insb   (%dx),%es:(%edi)
imul   $0x61727720,0x65(%esi),%ebp
jo     806e57b <_IO_stdin_used+0x33b7>
imul   $0x732d2d00,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
data16
je     806e58d <_IO_stdin_used+0x33c9>
jb     806e579 <_IO_stdin_used+0x33b5>
jo     806e51a <_IO_stdin_used+0x3356>
sub    $0x2d202c61,%eax
bound  %ebp,(%eax,%eiz,1)
sub    $0x2d002c65,%eax
data16
sub    $0x20,%al
sub    $0x2d202c67,%eax
push   $0x0
dec    %edi
arpl   %si,0x20(%eax,%eiz,1)
xor    %esp,(%eax)
xor    (%eax),%dh
xor    %esi,(%edx)
add    %dh,(%ecx)
xor    $0x3a,%al
xor    %esi,(%ecx)
cmp    (%ecx),%dh
xor    %eax,(%eax)
or     (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806e5b6 <_IO_stdin_used+0x33f2>
insb   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x70(%edi)
je     806e5be <_IO_stdin_used+0x33fa>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    806e593 <_IO_stdin_used+0x33cf>
add    %ah,(%eax)
sub    $0x7369642d,%eax
popa
bound  %ebp,0x2d(%ebp,%eiz,2)
ja     806e5d9 <_IO_stdin_used+0x3415>
popa
jo     806e5da <_IO_stdin_used+0x3416>
imul   $0x2d73612d,0x67(%esi),%ebp
jb     806e5e2 <_IO_stdin_used+0x341e>
outsl  %ds:(%esi),(%dx)
je     806e576 <_IO_stdin_used+0x33b2>
and    %ch,0x616e652d
bound  %ebp,0x2d(%ebp,%eiz,2)
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806e586 <_IO_stdin_used+0x33c2>
and    %ch,0x616e652d
bound  %ebp,0x2d(%ebp,%eiz,2)
gs
js     806e607 <_IO_stdin_used+0x3443>
jb     806e5f6 <_IO_stdin_used+0x3432>
add    %ah,(%eax)
sub    $0x616e652d,%eax
bound  %ebp,0x2d(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806e60f <_IO_stdin_used+0x344b>
je     806e60e <_IO_stdin_used+0x344a>
bound  %esi,0x66(%ebp)
data16
gs
jb     806e5ac <_IO_stdin_used+0x33e8>
and    %ch,0x616e652d
bound  %ebp,0x2d(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806e61f <_IO_stdin_used+0x345b>
add    %ah,(%eax)
sub    $0x616e652d,%eax
bound  %ebp,0x2d(%ebp,%eiz,2)
jne    806e63d <_IO_stdin_used+0x3479>
data16
cmp    %al,(%eax)
push   %ebp
jae    806e634 <_IO_stdin_used+0x3470>
and    %ah,(%edx)
data16
and    (%bx,%si),%ah
je     806e646 <_IO_stdin_used+0x3482>
and    %dh,0x65(%edx)
je     806e651 <_IO_stdin_used+0x348d>
jb     806e64c <_IO_stdin_used+0x3488>
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x73252073
add    %ch,(%edi)
fs
gs
jbe    806e634 <_IO_stdin_used+0x3470>
jae    806e67b <_IO_stdin_used+0x34b7>
imul   $0x65706f66,%fs:0x0(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,(%edi)
fs
gs
jbe    806e645 <_IO_stdin_used+0x3481>
je     806e68c <_IO_stdin_used+0x34c8>
jns    806e61a <_IO_stdin_used+0x3456>
jae    806e685 <_IO_stdin_used+0x34c1>
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %bl,0x4f(%eax)
dec    %esi
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806e693 <_IO_stdin_used+0x34cf>
fs
sub    $0x20,%al
insl   (%dx),%es:(%edi)
jne    806e6a1 <_IO_stdin_used+0x34dd>
bound  %ebp,0x20(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806e6a8 <_IO_stdin_used+0x34e4>
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %eax
dec    %edi
inc    %esi
inc    %esi
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806e6af <_IO_stdin_used+0x34eb>
fs
sub    $0x20,%al
insl   (%dx),%es:(%edi)
jne    806e6bd <_IO_stdin_used+0x34f9>
bound  %ebp,0x20(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806e6c4 <_IO_stdin_used+0x3500>
bound  %ebp,0x0(%ebp,%eiz,2)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dl,%fs:0x54(%ebp)
inc    %esi
sub    $0x752f0038,%eax
jae    806e6e7 <_IO_stdin_used+0x3523>
das
jae    806e6e0 <_IO_stdin_used+0x351c>
popa
jb     806e6e0 <_IO_stdin_used+0x351c>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:(%ecx)
cs
aas
add    %ah,(%edx)
daa
sub    %edi,(%esi)
pop    %ebp
jge    806e68e <_IO_stdin_used+0x34ca>
pop    %esi
sub    %bl,0x20(%ebx)
or     %ebx,0x2a(%ebp)
pop    %ebx
and    (%edx),%edi
jl,pt  806e718 <_IO_stdin_used+0x3554>
pop    %ebp
sub    %ebp,(%ebx)
add    %dl,0x50(%ebx)
inc    %ebp
dec    %esp
dec    %esp
add    %ch,(%eax)
cmp    $0x5b,%al
jnp    806e6d3 <_IO_stdin_used+0x350f>
ds
pop    %ebp
jge    806e6ae <_IO_stdin_used+0x34ea>
jno    806e725 <_IO_stdin_used+0x3561>
outsl  %ds:(%esi),(%dx)
je     806e718 <_IO_stdin_used+0x3554>
jae    806e729 <_IO_stdin_used+0x3565>
jb     806e6b7 <_IO_stdin_used+0x34f3>
je     806e71a <_IO_stdin_used+0x3556>
bound  %esi,0x69(%ebx)
jp     806e723 <_IO_stdin_used+0x355f>
add    %ch,0x70(%edi)
gs
jb     806e725 <_IO_stdin_used+0x3561>
je     806e72f <_IO_stdin_used+0x356b>
outsb  %ds:(%esi),(%dx)
imul   $0x6c6c6966,%fs:0x0(%bp,%si),%esi
6c
add    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     806e73c <_IO_stdin_used+0x3578>
imul   $0x75420a00,0x0(%edx),%esi
data16
data16
gs
jb     806e704 <_IO_stdin_used+0x3540>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806e708 <_IO_stdin_used+0x3544>
ja     806e75c <_IO_stdin_used+0x3598>
imul   $0x6f74206e,0x65(%esp,%esi,2),%esi
and    %ah,0x25203a73
jae    806e704 <_IO_stdin_used+0x3540>
add    %al,(%eax)
push   %edi
imul   $0x7320776f,0x64(%esi),%ebp
imul   $0x20736920,0x65(%edx),%edi
je     806e77c <_IO_stdin_used+0x35b8>
outsl  %ds:(%esi),(%dx)
and    %dh,0x6d(%ebx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     806e739 <_IO_stdin_used+0x3575>
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
cs cs or %cs:(%eax),%al
add    %al,(%eax)
push   %ebp
jae    806e788 <_IO_stdin_used+0x35c4>
cmp    %gs:(%bx,%si),%ah
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %bl,0x4f(%ebx)
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
pop    %ebp
and    %bl,0x5b(%ebx)
sub    0x4e(%ecx,%ecx,2),%ecx
inc    %ebp
sub    $0x43,%al
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
pop    %ebp
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
jo     806e7cf <_IO_stdin_used+0x360b>
imul   $0x4e470909,0x6e(%edi),%ebp
push   %ebp
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,0x70(%bx)
je     806e7d6 <_IO_stdin_used+0x3612>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %ecx,(%ecx)
dec    %ebp
gs
popa
outsb  %ds:(%esi),(%dx)
imul   $0xa,0x67(%esi),%ebp
push   %ebx
je     806e7e0 <_IO_stdin_used+0x361c>
jb     806e7f5 <_IO_stdin_used+0x3631>
and    %ah,0x74(%ecx)
and    %ch,0x6e(%ecx,%ebp,2)
and    %cl,%gs:0x4e(%ecx,%ecx,2)
inc    %ebp
sub    $0x20,%al
arpl   %bp,0x6c(%edi)
jne    806e802 <_IO_stdin_used+0x363e>
outsb  %ds:(%esi),(%dx)
and    %al,0x4f(%ebx)
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
add    %al,(%eax)
add    %dl,0x61(%ebx)
jbe    806e809 <_IO_stdin_used+0x3645>
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     806e81f <_IO_stdin_used+0x365b>
and    %ch,0x66(%edi)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x0,0x73(%ebp,%eiz,2),%bp
inc    %esp
imul   $0x726f7463,0x65(%edx),%esi
jns    806e7ea <_IO_stdin_used+0x3626>
outsw  %ds:(%esi),(%dx)
jb     806e7ee <_IO_stdin_used+0x362a>
jae    806e831 <_IO_stdin_used+0x366d>
jbe    806e83b <_IO_stdin_used+0x3677>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%di)
imul   $0x61622065,0x75(%ecx),%esi
arpl   %bp,0x75(%ebx)
jo     806e803 <_IO_stdin_used+0x363f>
imul   $0x0,0x73(%ebp,%eiz,2),%bp
add    %al,(%eax)
push   %ebp
jae    806e854 <_IO_stdin_used+0x3690>
and    %ah,0x6f(%edx)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6e(%ecx)
jae    806e86d <_IO_stdin_used+0x36a9>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%edx)
jbe    806e869 <_IO_stdin_used+0x36a5>
jb     806e879 <_IO_stdin_used+0x36b5>
and    %dh,%gs:0x69(%esi)
fs outsl %fs:%gs:(%esi),(%dx)
and    %dh,0x78(%ebp,%eiz,2)
je     806e813 <_IO_stdin_used+0x364f>
add    %cl,0x67(%edi,%ebp,2)
and    %ah,(%esi)
and    %dh,0x65(%edx)
popa
and    %dh,%fs:0x65(%ebx)
popa
jb     806e887 <_IO_stdin_used+0x36c3>
push   $0x7065722f
insb   (%dx),%es:(%edi)
popa
arpl   %sp,0x20(%ebp)
jae    806e8a4 <_IO_stdin_used+0x36e0>
jb     806e89b <_IO_stdin_used+0x36d7>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%bx,%si)
jae    806e8ad <_IO_stdin_used+0x36e9>
outsl  %ds:(%esi),(%dx)
jb     806e8b5 <_IO_stdin_used+0x36f1>
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
imul   $0x656d756e,0x20(%eax),%edi
jb     806e8b3 <_IO_stdin_used+0x36ef>
arpl   %sp,(%eax)
imul   $0x70,0x79(%ebp),%esp
popa
and    %ch,%fs:0x65(%ebx)
jns    806e877 <_IO_stdin_used+0x36b3>
arpl   %bp,0x6e(%edi)
data16
jne    806e8d0 <_IO_stdin_used+0x370c>
imul   $0x6f727020,0x6e(%edi),%ebp
bound  %ebp,0x6d(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     806e892 <_IO_stdin_used+0x36ce>
popa
fs and %ch,%fs:0x65(%esi)
ja     806e8e6 <_IO_stdin_used+0x3722>
imul   $0x6f742073,0x65(%esi),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6e(%ebp)
fs
jae    806e8ab <_IO_stdin_used+0x36e7>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806e894 <_IO_stdin_used+0x36d0>
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     806e8ba <_IO_stdin_used+0x36f6>
arpl   %bp,0x6e(%edi)
jbe    806e904 <_IO_stdin_used+0x3740>
jb     806e915 <_IO_stdin_used+0x3751>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806e8c8 <_IO_stdin_used+0x3704>
data16
jb     806e91a <_IO_stdin_used+0x3756>
insl   (%dx),%es:(%edi)
and    %al,0x53(%edi,%ecx,2)
das
dec    %ebp
popa
arpl   %sp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     806e926 <_IO_stdin_used+0x3762>
popa
je     806e8bc <_IO_stdin_used+0x36f8>
push   %ebx
arpl   %si,0x6f(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x6e(%ecx)
jae    806e943 <_IO_stdin_used+0x377f>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ch,0x61(%eax)
insb   (%dx),%es:(%edi)
sub    $0x6373,%ax
jb     806e944 <_IO_stdin_used+0x3780>
outsb  %gs:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x65(%ebx)
je     806e908 <_IO_stdin_used+0x3744>
ja     806e953 <_IO_stdin_used+0x378f>
fs
je     806e955 <_IO_stdin_used+0x3791>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
je     806e956 <_IO_stdin_used+0x3792>
bound  %esp,(%eax)
je     806e968 <_IO_stdin_used+0x37a4>
and    %ah,(%ebx)
arpl   %bp,0x6c(%edi)
jae    806e920 <_IO_stdin_used+0x375c>
arpl   %bp,0x6c(%edi)
jne    806e972 <_IO_stdin_used+0x37ae>
outsb  %ds:(%esi),(%dx)
jae    806e908 <_IO_stdin_used+0x3744>
push   %eax
jb     806e974 <_IO_stdin_used+0x37b0>
outsb  %ds:(%esi),(%dx)
je     806e92e <_IO_stdin_used+0x376a>
jbe    806e975 <_IO_stdin_used+0x37b1>
jb     806e985 <_IO_stdin_used+0x37c1>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806e989 <_IO_stdin_used+0x37c5>
popa
je     806e988 <_IO_stdin_used+0x37c4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x65746544,0x0(%eax,%eax,1),%esi
arpl   %si,0x77(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
jb     806e99b <_IO_stdin_used+0x37d7>
and    %ah,0x6f(%edx)
jne    806e9aa <_IO_stdin_used+0x37e6>
fs
popa
jb     806e9a9 <_IO_stdin_used+0x37e5>
gs
jae    806e963 <_IO_stdin_used+0x379f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806e9ac <_IO_stdin_used+0x37e8>
and    %ah,0x63(%ecx)
arpl   %si,0x72(%ebp)
popa
je     806e9b5 <_IO_stdin_used+0x37f1>
insb   (%dx),%es:(%edi)
jns    806e953 <_IO_stdin_used+0x378f>
add    %dl,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806e9ba <_IO_stdin_used+0x37f6>
js     806e97b <_IO_stdin_used+0x37b7>
fs imul $0x6974,%fs:%gs:0x69(%esi),%bp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
jne    806e9de <_IO_stdin_used+0x381a>
and    %ah,%gs:0x6f(%esi)
jb     806e991 <_IO_stdin_used+0x37cd>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806e9e0 <_IO_stdin_used+0x381c>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    806e9f5 <_IO_stdin_used+0x3831>
popa
outsb  %ds:(%esi),(%dx)
je     806e9f1 <_IO_stdin_used+0x382d>
jns    806e9a7 <_IO_stdin_used+0x37e3>
jae    806e9f1 <_IO_stdin_used+0x382d>
outsl  %ds:(%esi),(%dx)
ja     806e9ac <_IO_stdin_used+0x37e8>
arpl   %si,0x72(%ebp)
jae    806ea00 <_IO_stdin_used+0x383c>
jb     806e9b3 <_IO_stdin_used+0x37ef>
jo     806ea04 <_IO_stdin_used+0x3840>
jae    806ea00 <_IO_stdin_used+0x383c>
je     806ea02 <_IO_stdin_used+0x383e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x69(%esi)
js     806e9c0 <_IO_stdin_used+0x37fc>
inc    %edx
popa
arpl   %bp,0x73(%ebx)
jo     806ea08 <_IO_stdin_used+0x3844>
arpl   %sp,0x2f(%ebp)
inc    %esp
gs
insb   (%dx),%es:(%edi)
gs
je     806ea15 <_IO_stdin_used+0x3851>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
data16
jne    806ea2a <_IO_stdin_used+0x3866>
imul   $0x6f727020,0x6e(%edi),%ebp
bound  %ebp,0x6d(%ebp,%eiz,2)
add    %al,(%eax)
inc    %ecx
jne    806ea3b <_IO_stdin_used+0x3877>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     806ea35 <_IO_stdin_used+0x3871>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    806e9f2 <_IO_stdin_used+0x382e>
imul   $0x20746e65,0x64(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     806e9fd <_IO_stdin_used+0x3839>
insb   (%dx),%es:(%edi)
imul   $0x43000073,0x65(%esi),%ebp
jne    806ea5b <_IO_stdin_used+0x3897>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x75(%ebx)
jb     806ea64 <_IO_stdin_used+0x38a0>
outsl  %ds:(%esi),(%dx)
jb     806ea14 <_IO_stdin_used+0x3850>
je     806ea65 <_IO_stdin_used+0x38a1>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     806ea2a <_IO_stdin_used+0x3866>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806ea31 <_IO_stdin_used+0x386d>
jae    806ea8c <_IO_stdin_used+0x38c8>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    806ea4c <_IO_stdin_used+0x3888>
and    %ch,0x76(%edi)
gs
jb     806ea9d <_IO_stdin_used+0x38d9>
jb     806ea91 <_IO_stdin_used+0x38cd>
je     806ea8f <_IO_stdin_used+0x38cb>
add    %al,(%eax)
push   %eax
jb     806ea94 <_IO_stdin_used+0x38d0>
jae    806ea96 <_IO_stdin_used+0x38d2>
jb     806eaa9 <_IO_stdin_used+0x38e5>
and    %bl,%gs:0x4f(%eax)
dec    %esi
and    %ch,(%eax)
pop    %esi
push   %ecx
sub    %esp,(%eax)
popa
outsb  %ds:(%esi),(%dx)
and    %bl,%fs:0x4f(%eax)
inc    %esi
inc    %esi
and    %ch,(%eax)
pop    %esi
push   %ebx
sub    %esp,(%eax)
imul   $0x73,0x79(%ebp),%esp
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
imul   $0x20796c74,0x6e(%ebp,%eiz,2),%ebp
imul   $0x2065726f,0x6e(%edi),%esp
jae    806eada <_IO_stdin_used+0x3916>
popa
jb     806eadd <_IO_stdin_used+0x3919>
jne    806eadb <_IO_stdin_used+0x3917>
and    %ch,0x73(%ecx)
jae    806eae5 <_IO_stdin_used+0x3921>
gs
jae    806ea93 <_IO_stdin_used+0x38cf>
insb   (%dx),%es:(%edi)
imul   $0x20637220,0x65(%ebx),%ebp
imul   $0x7265,0x20(%ebp,%eiz,2),%bp
jb     806eaf3 <_IO_stdin_used+0x392f>
jb     806eaf9 <_IO_stdin_used+0x3935>
add    %al,(%eax)
push   %ebx
gs
je     806eaac <_IO_stdin_used+0x38e8>
ja     806eb00 <_IO_stdin_used+0x393c>
popa
jo     806eb01 <_IO_stdin_used+0x393d>
imul   $0x696f7020,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     806eabb <_IO_stdin_used+0x38f7>
popa
je     806eabe <_IO_stdin_used+0x38fa>
arpl   %bp,0x6c(%edi)
jne    806eb10 <_IO_stdin_used+0x394c>
outsb  %ds:(%esi),(%dx)
and    %ah,(%ebx)
arpl   %bp,0x6c(%edi)
jae    806eaab <_IO_stdin_used+0x38e7>
add    %al,0x75(%ecx)
je     806eb1f <_IO_stdin_used+0x395b>
and    %dh,0x61(%ebx)
jbe    806eb1a <_IO_stdin_used+0x3956>
and    %ch,0x6e(%edi)
and    %ah,0x78(%ebp)
imul   $0x276e6f64,0x20(%esp,%ebp,1),%esi
je     806eae5 <_IO_stdin_used+0x3921>
jo     806eb39 <_IO_stdin_used+0x3975>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     806eb3f <_IO_stdin_used+0x397b>
add    %al,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806eaf2 <_IO_stdin_used+0x392e>
outsb  %gs:(%si),(%dx)
gs
jb     806eb41 <_IO_stdin_used+0x397d>
arpl   %sp,(%eax)
jne    806eb4a <_IO_stdin_used+0x3986>
outsl  %fs:(%esi),(%dx)
and    %bl,0x45(%ebx)
pop    %eax
push   %eax
inc    %ebp
push   %edx
dec    %ecx
dec    %ebp
inc    %ebp
dec    %esi
push   %esp
inc    %ecx
dec    %esp
pop    %ebp
add    %al,(%eax)
add    %ch,(%eax)
imul   $0x6465726f,0x6e(%edi),%esp
sub    $0x20,%al
outsw  %ds:(%esi),(%dx)
jb     806eb1e <_IO_stdin_used+0x395a>
push   %eax
imul   $0x6d6f6320,0x6f(%ebx),%esp
jo     806eb69 <_IO_stdin_used+0x39a5>
je     806eb73 <_IO_stdin_used+0x39af>
bound  %ebp,0x6c(%ecx)
imul   $0x20000000,0x29(%ecx,%edi,2),%esi
inc    %edi
dec    %esi
push   %ebp
and    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%esi)
jb     806eb95 <_IO_stdin_used+0x39d1>
imul   $0x20732520,0x6e(%edi),%ebp
sub    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     806eb98 <_IO_stdin_used+0x39d4>
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x25202c73
jae    806eb63 <_IO_stdin_used+0x399f>
or     (%eax),%al
and    %ch,(%eax)
inc    %ebx
sub    %esp,(%eax)
xor    %edi,(%ecx)
cmp    %edi,(%ecx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%eax)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%ecx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%ebx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%esp,%ebp,1)
and    %dh,(%edx)
xor    %dh,(%eax)
xor    $0x3032202c,%eax
xor    %dh,(%esi)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%edi)
sub    $0x0,%al
add    %ah,(%eax)
xor    (%eax),%dh
xor    %bh,(%eax)
sub    $0x20,%al
xor    (%eax),%dh
xor    %bh,(%ecx)
and    %al,0x72(%esi)
gs and %dl,%gs:0x6f(%ebx)
data16
je     806ec05 <_IO_stdin_used+0x3a41>
popa
jb     806ebf6 <_IO_stdin_used+0x3a32>
and    %al,0x6f(%esi)
jne    806ec04 <_IO_stdin_used+0x3a40>
fs
popa
je     806ec03 <_IO_stdin_used+0x3a3f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %al,(%eax)
and    %al,0x6d(%ebp)
popa
imul   $0x6f6e616e,0x20(%edx,%edi,1),%ebp
inc    %eax
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x74696465,%eax
outsl  %ds:(%esi),(%dx)
jb     806ebeb <_IO_stdin_used+0x3a27>
outsl  %ds:(%esi),(%dx)
jb     806ec27 <_IO_stdin_used+0x3a63>
or     %edx,0x65(%edi)
bound  %edi,(%edx)
and    %ch,0x74(%eax)
je     806ec3a <_IO_stdin_used+0x3a76>
cmp    (%edi),%ch
das
ja     806ec46 <_IO_stdin_used+0x3a82>
ja     806ebff <_IO_stdin_used+0x3a3b>
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x74696465,%eax
outsl  %ds:(%esi),(%dx)
jb     806ec0b <_IO_stdin_used+0x3a47>
outsl  %ds:(%esi),(%dx)
jb     806ec47 <_IO_stdin_used+0x3a83>
das
add    %al,(%eax)
add    %dl,0x6f(%ebx)
jb     806ec5a <_IO_stdin_used+0x3a96>
jns    806ec16 <_IO_stdin_used+0x3a52>
and    %dh,0x75(%ebx)
jo     806ec5f <_IO_stdin_used+0x3a9b>
outsl  %ds:(%esi),(%dx)
jb     806ec66 <_IO_stdin_used+0x3aa2>
and    %ah,0x6f(%esi)
jb     806ec17 <_IO_stdin_used+0x3a53>
je     806ec61 <_IO_stdin_used+0x3a9d>
imul   $0x636e7566,0x20(%ebx),%esi
je     806ec6b <_IO_stdin_used+0x3aa7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
jae    806ec29 <_IO_stdin_used+0x3a65>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %al,(%eax)
push   %ebx
popa
jbe    806ec81 <_IO_stdin_used+0x3abd>
and    %ch,0x6f(%ebp)
imul   $0x62206465,%fs:0x69(%esi),%esp
jne    806ec8f <_IO_stdin_used+0x3acb>
data16
gs
jb     806ec4d <_IO_stdin_used+0x3a89>
sub    %al,0x4e(%ecx)
push   %ebx
push   %edi
inc    %ebp
push   %edx
dec    %ecx
dec    %esi
inc    %edi
and    %ah,(%edx)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    (%eax),%ah
push   %edi
dec    %ecx
dec    %esp
dec    %esp
and    %al,0x53(%ebp,%eax,2)
push   %esp
push   %edx
dec    %edi
pop    %ecx
and    %al,0x48(%ebx)
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
push   %ebx
sub    %esp,(%eax)
aas
and    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    806ecc8 <_IO_stdin_used+0x3b04>
outsb  %fs:(%esi),(%dx)
daa
je     806ec81 <_IO_stdin_used+0x3abd>
jb     806ecc8 <_IO_stdin_used+0x3b04>
outsl  %ds:(%esi),(%dx)
jo     806eccb <_IO_stdin_used+0x3b07>
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%ebx)
imul   $0x6d6f7266,%fs:0x20(%esi),%ebp
and    %ch,0x65(%ebx)
jns    806ecd9 <_IO_stdin_used+0x3b15>
outsl  %ds:(%esi),(%dx)
popa
jb     806ecdf <_IO_stdin_used+0x3b1b>
sub    $0x20,%al
jae    806ecee <_IO_stdin_used+0x3b2a>
jb     806ecf3 <_IO_stdin_used+0x3b2f>
jns    806ec8d <_IO_stdin_used+0x3ac9>
add    %dl,0x65(%edx)
popa
imul   $0x6f726620,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
imul   $0x20435e20,%fs:0x2c(%esi),%ebp
je     806ed0c <_IO_stdin_used+0x3b48>
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jb     806ed17 <_IO_stdin_used+0x3b53>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x65(%edx)
jno    806ed21 <_IO_stdin_used+0x3b5d>
gs
jae    806ed23 <_IO_stdin_used+0x3b5f>
gs and %dh,%fs:%gs:0x62(%ecx,%eiz,2)
and    %dh,0x69(%ebx)
jp     806ed1f <_IO_stdin_used+0x3b5b>
and    %ah,(%edx)
and    $0x69202273,%eax
jae    806ece3 <_IO_stdin_used+0x3b1f>
imul   $0x64696c61,0x76(%esi),%ebp
add    %al,(%eax)
push   %edx
gs
jno    806ed45 <_IO_stdin_used+0x3b81>
gs
jae    806ed47 <_IO_stdin_used+0x3b83>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
jp     806ed44 <_IO_stdin_used+0x3b80>
and    %ah,(%edx)
and    $0x69202273,%eax
jae    806ed08 <_IO_stdin_used+0x3b44>
imul   $0x64696c61,0x76(%esi),%ebp
add    %ch,0x3f(%eax)
inc    %ecx
inc    %edx
inc    %ebx
cmp    0x46(%ebp,%eax,2),%al
dec    %eax
dec    %ecx
dec    %ebx
dec    %esp
dec    %esi
dec    %edi
push   %ecx
cmp    0x53(%edx),%dl
push   %esp
cmp    0x56(%ebp),%dl
push   %edi
pop    %ecx
cmp    0x62(%ecx),%ah
arpl   %sp,0x66(%ebp,%eiz,2)
imul   $0x3a6f6d6c,0x6b(%bp,%si),%ebp
jo     806ed8b <_IO_stdin_used+0x3bc7>
jb     806ed56 <_IO_stdin_used+0x3b92>
jae    806ed58 <_IO_stdin_used+0x3b94>
je     806ed95 <_IO_stdin_used+0x3bd1>
jbe    806ed99 <_IO_stdin_used+0x3bd5>
js     806ed9e <_IO_stdin_used+0x3bda>
and    $0x0,%al
add    %al,(%eax)
push   $0x7c0805a8
test   $0x5,%al
or     %ch,(%eax)
test   $0xa87c0805,%eax
add    $0x5a87c08,%eax
or     %bh,0x5(%eax,%ebp,4)
or     %dh,(%eax)
test   $0xa87c0805,%eax
add    $0x5a87c08,%eax
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,(%eax)
test   $0xa87c0805,%eax
add    $0x5a87c08,%eax
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bl,-0x57(%eax)
add    $0x5a86808,%eax
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %bh,0x5(%eax,%ebp,4)
or     %dl,(%eax)
test   $0x805,%eax
add    %al,(%eax)
cmp    %ecx,%esp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
pushf
loope  806edf9 <_IO_stdin_used+0x3c35>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dh,%al
loope  806ee09 <_IO_stdin_used+0x3c45>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
es
loop   806ee19 <_IO_stdin_used+0x3c55>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ecx)
add    %al,(%eax)
ss
loop   806ee29 <_IO_stdin_used+0x3c65>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
inc    %ebp
loop   806ee39 <_IO_stdin_used+0x3c75>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %bh,0x6(%edx,%eiz,8)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
scas   %es:(%edi),%al
out    %al,$0x6
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
shl    $0x6,%edx
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
mov    $0xe6,%bh
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x806e3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
xchg   %eax,%ecx
ret    $0x806
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ecx
add    %al,(%eax)
add    %cl,0x6(%ebx,%eiz,8)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
push   %edi
jecxz  806eeb9 <_IO_stdin_used+0x3cf5>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %al,0x806e3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ah,0x806(%ebx,%eiz,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,0x10806e6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
in     (%dx),%eax
jecxz  806eef9 <_IO_stdin_used+0x3d35>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
sti
jecxz  806ef09 <_IO_stdin_used+0x3d45>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
int3
out    %al,$0x6
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
dec    %edx
in     $0x6,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
push   %esp
in     $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %al,0x806e4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
mov    %al,0x806e4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
int3
in     $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
ljmp   $0x0,$0x806e4
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
loope  806ef89 <_IO_stdin_used+0x3dc5>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
js     806ef73 <_IO_stdin_used+0x3daf>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
shl    %esi
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
(bad)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
(bad)
loope  806efc9 <_IO_stdin_used+0x3e05>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
push   %edx
loop   806efd9 <_IO_stdin_used+0x3e15>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
into
loop   806efe9 <_IO_stdin_used+0x3e25>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
adc    %ah,%bl
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
(bad)
in     $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
daa
jecxz  806f019 <_IO_stdin_used+0x3e55>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edi)
add    %al,(%eax)
imul   $0x806,%ebx,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0xfacc0000,(%eax),%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
adc    %esp,%ebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
mulb   -0x5ac1f7fc(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %eax,$0xa7
add    $0x8,%al
fsubs  -0x5847f7fc(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
popf
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    -0x5ac1f7fc(%edi),%fs
add    $0x8,%al
jg     806f099 <_IO_stdin_used+0x3ed5>
add    $0x8,%al
jae    806f09d <_IO_stdin_used+0x3ed9>
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
cmpsl  %es:(%edi),%fs:(%esi)
add    $0x8,%al
push   %ebp
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
aaa
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
pop    %ss
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     %ah,-0x5906f7fc(%edi)
add    $0x8,%al
mov    $0xa90804a6,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cwtl
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    %esp,-0x5ac1f7fc(%esi)
add    $0x8,%al
imul   $0xa53e0804,-0x5ac1f7fc(%esi),%esp
a5
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
or     $0xd0804a5,%eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
pop    %ebp
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
dec    %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     $0xd0804a5,%eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
or     $0x3e0804a5,%eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
aas
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
or     $0x300804a5,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
and    $0xa6,%al
add    $0x8,%al
adc    $0x3e0804a6,%eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
cmc
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa5
add    $0x8,%al
fisubl -0x5a4cf7fc(%ebp)
add    $0x8,%al
xchg   %eax,%ebx
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
test   %ah,-0x5a84f7fc(%ebp)
add    $0x8,%al
outsl  %ds:(%esi),(%dx)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
popa
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
pop    %eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %edi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
pop    %ecx
jns    806f1bf <_IO_stdin_used+0x3ffb>
dec    %esi
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ecx)
add    %ah,(%eax)
and    $0x65590063,%eax
jae    806f1cd <_IO_stdin_used+0x4009>
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %cl,0x6f(%esi)
add    %al,0x72(%ebp)
jb     806f247 <_IO_stdin_used+0x4083>
jb     806f1fa <_IO_stdin_used+0x4036>
imul   $0x6f207325,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x203a756c
add    %al,0x61(%edx)
and    %dh,%fs:0x65(%edx)
addr16
gs
js     806f218 <_IO_stdin_used+0x4054>
and    0x203a2273,%ah
and    $0x694d0073,%eax
jae    806f278 <_IO_stdin_used+0x40b4>
imul   $0x6e797320,0x67(%esi),%ebp
je     806f26f <_IO_stdin_used+0x40ab>
js     806f230 <_IO_stdin_used+0x406c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %gs:(%eax),%ah
jae    806f29b <_IO_stdin_used+0x40d7>
outsb  %ds:(%esi),(%dx)
je     806f286 <_IO_stdin_used+0x40c2>
js     806f247 <_IO_stdin_used+0x4083>
imul   $0x65736572,0x20(%ebx),%esi
jb     806f2a6 <_IO_stdin_used+0x40e2>
gs add %cl,%fs:%gs:0x69(%ebp)
jae    806f2aa <_IO_stdin_used+0x40e6>
imul   $0x79656b20,0x67(%esi),%ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x72(%edx)
imul   $0x72670074,0x68(%edi),%esp
gs outsb %gs:(%esi),(%dx)
add    %ah,0x6c(%edx)
jne    806f2ba <_IO_stdin_used+0x40f6>
add    %dh,0x68(%edi)
imul   $0x6c6c6579,0x0(%ebp,%eiz,2),%esi
outsl  %ds:(%esi),(%dx)
ja     806f263 <_IO_stdin_used+0x409f>
arpl   %di,0x61(%ecx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x61(%ebp)
outsb  %gs:(%si),(%dx)
je     806f2d0 <_IO_stdin_used+0x410c>
add    %ah,0x6c(%edx)
popa
arpl   %bp,0x0(%ebx)
dec    %ebp
imul   $0x20676e69,0x73(%ebx),%esi
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f2a4 <_IO_stdin_used+0x40e0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x69(%ebp)
jae    806f300 <_IO_stdin_used+0x413c>
imul   $0x67657220,0x67(%esi),%ebp
gs
js     806f2b7 <_IO_stdin_used+0x40f3>
jae    806f30d <_IO_stdin_used+0x4149>
jb     806f304 <_IO_stdin_used+0x4140>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
popa
jb     806f317 <_IO_stdin_used+0x4153>
cmp    $0x646e6500,%eax
cmp    $0x736e7500,%eax
gs
je     806f2b0 <_IO_stdin_used+0x40ec>
imul   $0x6564756c,0x63(%esi),%ebp
add    %ch,0x65(%eax)
popa
fs
gs
jb     806f2bf <_IO_stdin_used+0x40fb>
imul   $0x726f6c,0x6f(%ebx),%esp
jne    806f336 <_IO_stdin_used+0x4172>
bound  %ebp,0x6e(%ecx)
add    %al,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edx)
and    $0x6e202273,%eax
outsl  %ds:(%esi),(%dx)
je     806f2fe <_IO_stdin_used+0x413a>
jne    806f34e <_IO_stdin_used+0x418a>
fs
gs
jb     806f357 <_IO_stdin_used+0x4193>
je     806f355 <_IO_stdin_used+0x4191>
outsl  %ds:(%esi),(%dx)
add    %cl,%fs:0x69(%ebp)
jae    806f360 <_IO_stdin_used+0x419c>
imul   $0x616c6620,0x67(%esi),%ebp
add    %ch,0x61(%di)
je     806f35d <_IO_stdin_used+0x4199>
push   $0x63617262
imul   $0x73,0x74(%ebp),%esp
add    %cl,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x6e616c62,%eax
imul   $0x63,(%eax),%esp
push   $0x63617261
je     806f37b <_IO_stdin_used+0x41b7>
jb     806f38b <_IO_stdin_used+0x41c7>
and    %dh,0x65(%edx)
jno    806f392 <_IO_stdin_used+0x41ce>
imul   $0x68770064,0x65(%edx),%esi
imul   $0x65636170,0x73(%ebp,%eiz,2),%esi
add    %dh,0x75(%eax)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x43(%eax,%eax,1)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806f35a <_IO_stdin_used+0x4196>
jne    806f3aa <_IO_stdin_used+0x41e6>
jae    806f3a3 <_IO_stdin_used+0x41df>
je     806f360 <_IO_stdin_used+0x419c>
data16
insb   (%dx),%es:(%edi)
popa
and    %ah,(%bp,%si)
and    $0x55002273,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%esi)
popa
and    %ah,(%bp,%si)
and    $0x2f002273,%eax
gs
je     806f3c3 <_IO_stdin_used+0x41ff>
das
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806f3ca <_IO_stdin_used+0x4206>
add    %ch,(%esi)
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806f3d2 <_IO_stdin_used+0x420e>
add    %ah,0x73252f73
add    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806f3db <_IO_stdin_used+0x4217>
imul   $0x72756365,0x73(%esi),%ebp
gs
pop    %edi
bound  %esp,0x63(%ecx)
imul   $0x0,0x70(%ebp),%esi
bound  %esp,0x63(%ecx)
imul   $0x72,0x61(%edi),%esi
fs
jae    806f396 <_IO_stdin_used+0x41d2>
arpl   %sp,0x73(%ecx)
gs
jae    806f401 <_IO_stdin_used+0x423d>
outsb  %ds:(%esi),(%dx)
jae    806f408 <_IO_stdin_used+0x4244>
je     806f40a <_IO_stdin_used+0x4246>
jbe    806f408 <_IO_stdin_used+0x4244>
add    %al,0x72(%ecx)
addr16 jne 806f416 <_IO_stdin_used+0x4252>
outsb  %gs:(%esi),(%dx)
je     806f3cd <_IO_stdin_used+0x4209>
daa
and    $0x68202773,%eax
popa
jae    806f3d6 <_IO_stdin_used+0x4212>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
je     806f422 <_IO_stdin_used+0x425e>
jb     806f42c <_IO_stdin_used+0x4268>
imul   $0x20646574,0x61(%esi),%ebp
and    (%eax),%al
push   %edx
gs
addr16
gs
js     806f3ee <_IO_stdin_used+0x422a>
jae    806f444 <_IO_stdin_used+0x4280>
jb     806f43b <_IO_stdin_used+0x4277>
outsb  %ds:(%esi),(%dx)
addr16 jae 806f3f6 <_IO_stdin_used+0x4232>
insl   (%dx),%es:(%edi)
jne    806f44c <_IO_stdin_used+0x4288>
je     806f3fb <_IO_stdin_used+0x4237>
bound  %esp,0x67(%ebp)
imul   $0x20646e61,0x20(%esi),%ebp
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x69(%edi)
je     806f455 <_IO_stdin_used+0x4291>
and    %ah,0x20(%ecx)
and    (%eax),%ah
arpl   %bp,0x61(%eax)
jb     806f458 <_IO_stdin_used+0x4294>
arpl   %si,0x72(%ebp,%eiz,2)
add    %dl,0x65(%eax,%ebp,2)
and    %ah,(%edx)
fs
gs
popaw
jne    806f473 <_IO_stdin_used+0x42af>
je     806f42b <_IO_stdin_used+0x4267>
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806f470 <_IO_stdin_used+0x42ac>
js     806f431 <_IO_stdin_used+0x426d>
insl   (%dx),%es:(%edi)
jne    806f487 <_IO_stdin_used+0x42c3>
je     806f436 <_IO_stdin_used+0x4272>
je     806f479 <_IO_stdin_used+0x42b5>
imul   $0x6e,0x20(%ebp),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     806f487 <_IO_stdin_used+0x42c3>
outsb  %ds:(%esi),(%dx)
jae    806f48e <_IO_stdin_used+0x42ca>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    806f429 <_IO_stdin_used+0x4265>
add    %al,(%eax)
add    %ch,0x65(%ebx)
jns    806f492 <_IO_stdin_used+0x42ce>
imul   $0x73676e69,0x64(%esi),%ebp
and    %ch,0x75(%ebp)
jae    806f4b0 <_IO_stdin_used+0x42ec>
and    %ah,0x65(%edx)
imul   $0x68746977,0x20(%bp),%ebp
and    %ah,(%edx)
pop    %esi
and    (%eax,%eiz,1),%ch
and    0x22(%ebp),%cl
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806f475 <_IO_stdin_used+0x42b1>
and    0x22(%esi),%al
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
jne    806f4d2 <_IO_stdin_used+0x430e>
je     806f481 <_IO_stdin_used+0x42bd>
jae    806f4d3 <_IO_stdin_used+0x430f>
arpl   %bp,%gs:0x66(%ecx)
jns    806f489 <_IO_stdin_used+0x42c5>
data16
jne    806f4da <_IO_stdin_used+0x4316>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
bound  %ebp,0x6e(%ecx)
and    %ch,%fs:0x65(%ebx)
jns    806f49e <_IO_stdin_used+0x42da>
je     806f4ef <_IO_stdin_used+0x432b>
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
jne    806f4fa <_IO_stdin_used+0x4336>
je     806f4a9 <_IO_stdin_used+0x42e5>
jae    806f4fb <_IO_stdin_used+0x4337>
arpl   %bp,%gs:0x66(%ecx)
jns    806f4b1 <_IO_stdin_used+0x42ed>
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
jne    806f4b6 <_IO_stdin_used+0x42f2>
je     806f507 <_IO_stdin_used+0x4343>
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x65(%ebx)
jns    806f4c2 <_IO_stdin_used+0x42fe>
je     806f513 <_IO_stdin_used+0x434f>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     806f4c9 <_IO_stdin_used+0x4305>
and    0x6c(%ecx),%ah
insb   (%dx),%es:(%edi)
and    (%ecx),%ch
add    %al,0x6f(%ebx)
jne    806f520 <_IO_stdin_used+0x435c>
and    %ch,%fs:0x6f(%esi)
je     806f4da <_IO_stdin_used+0x4316>
insl   (%dx),%es:(%edi)
popa
jo     806f4de <_IO_stdin_used+0x431a>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x74202273,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
data16
jne    806f53e <_IO_stdin_used+0x437a>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    806f548 <_IO_stdin_used+0x4384>
and    %ch,%fs:0x6f(%esi)
je     806f502 <_IO_stdin_used+0x433e>
insl   (%dx),%es:(%edi)
popa
jo     806f506 <_IO_stdin_used+0x4342>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x74202273,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
jne    806f4fa <_IO_stdin_used+0x4336>
add    %al,(%eax)
push   %ebx
outsl  %ds:(%esi),(%dx)
jb     806f572 <_IO_stdin_used+0x43ae>
jns    806f52e <_IO_stdin_used+0x436a>
and    %ch,0x65(%ebx)
jns    806f57a <_IO_stdin_used+0x43b6>
je     806f57b <_IO_stdin_used+0x43b7>
and    %ah,(%edx)
and    $0x69202273,%eax
jae    806f532 <_IO_stdin_used+0x436e>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
imul   $0x0,%fs:0x67(%esi),%ebp
inc    %ebx
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f54e <_IO_stdin_used+0x438a>
and    0x6e202273,%ah
outsl  %ds:(%esi),(%dx)
je     806f557 <_IO_stdin_used+0x4393>
jne    806f5a7 <_IO_stdin_used+0x43e3>
fs
gs
jb     806f5b0 <_IO_stdin_used+0x43ec>
je     806f5ae <_IO_stdin_used+0x43ea>
outsl  %ds:(%esi),(%dx)
fs or  %cs:%fs:0x61(%esi),%dl
insb   (%dx),%es:(%edi)
imul   $0x726f6c6f,0x63(%eax,%eiz,1),%esp
jae    806f570 <_IO_stdin_used+0x43ac>
popa
jb     806f5b8 <_IO_stdin_used+0x43f4>
and    %ah,(%edx)
addr16 jb 806f5bd <_IO_stdin_used+0x43f9>
outsb  %gs:(%esi),(%dx)
and    (%eax,%eiz,1),%ch
and    0x65(%edx),%dh
and    %fs:(%eax,%eiz,1),%ch
and    0x6c(%edx),%ah
jne    806f5ce <_IO_stdin_used+0x440a>
and    (%edx,%ecx,1),%ch
and    0x68(%edi),%dh
imul   $0x7922202c,0x22(%ebp,%eiz,2),%esi
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806f59f <_IO_stdin_used+0x43db>
sub    $0x20,%al
and    0x79(%ebx),%ah
popa
outsb  %ds:(%esi),(%dx)
and    (%eax,%eiz,1),%ch
and    0x61(%ebp),%ch
outsb  %gs:(%si),(%dx)
je     806f5f0 <_IO_stdin_used+0x442c>
and    (%eax),%ah
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%edx),%ah
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x2c,(%edx),%esp
and    %dh,0x69(%edi)
je     806f60a <_IO_stdin_used+0x4446>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x70(%edi)
je     806f614 <_IO_stdin_used+0x4450>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
imul   $0x6222,%gs:0x20(%eax),%di
jb     806f624 <_IO_stdin_used+0x4460>
addr16 push $0x660a2274
outsl  %ds:(%esi),(%dx)
jb     806f5e4 <_IO_stdin_used+0x4420>
outsw  %ds:(%esi),(%dx)
jb     806f62d <_IO_stdin_used+0x4469>
addr16 jb 806f63a <_IO_stdin_used+0x4476>
jne    806f63b <_IO_stdin_used+0x4477>
and    %ah,%fs:0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f648 <_IO_stdin_used+0x4484>
add    %al,%cs:(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806f5ff <_IO_stdin_used+0x443b>
popa
fs and %ah,%fs:0x20(%ecx)
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f60b <_IO_stdin_used+0x4447>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x69(%edi)
je     806f65f <_IO_stdin_used+0x449b>
outsl  %ds:(%esi),(%dx)
jne    806f66e <_IO_stdin_used+0x44aa>
and    %ah,0x20(%ecx)
jae    806f678 <_IO_stdin_used+0x44b4>
outsb  %ds:(%esi),(%dx)
je     806f663 <_IO_stdin_used+0x449f>
js     806f624 <_IO_stdin_used+0x4460>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x61(%edx)
arpl   %bp,0x67(%ebx)
jb     806f682 <_IO_stdin_used+0x44be>
jne    806f683 <_IO_stdin_used+0x44bf>
and    %ah,%fs:0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f63d <_IO_stdin_used+0x4479>
and    0x63202273,%ah
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806f649 <_IO_stdin_used+0x4485>
bound  %esp,0x20(%ebp)
bound  %esi,0x69(%edx)
addr16 push $0x22000074
jae    806f6ab <_IO_stdin_used+0x44e7>
popa
jb     806f6ae <_IO_stdin_used+0x44ea>
cmp    $0x65722022,%eax
jno    806f6b6 <_IO_stdin_used+0x44f2>
imul   $0x20612073,0x65(%edx),%esi
arpl   %bp,0x72(%edi)
jb     806f6b2 <_IO_stdin_used+0x44ee>
jae    806f6bf <_IO_stdin_used+0x44fb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6e652220,%fs:0x67(%esi),%ebp
fs
cmp    $0x22,%eax
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806f687 <_IO_stdin_used+0x44c3>
popa
fs and %ah,%fs:0x20(%ecx)
push   $0x65646165
jb     806f694 <_IO_stdin_used+0x44d0>
jb     806f6db <_IO_stdin_used+0x4517>
addr16
gs
js     806f69a <_IO_stdin_used+0x44d6>
ja     806f6e5 <_IO_stdin_used+0x4521>
je     806f6e6 <_IO_stdin_used+0x4522>
outsl  %ds:(%esi),(%dx)
jne    806f6f5 <_IO_stdin_used+0x4531>
and    %ah,0x20(%ecx)
jae    806f6ff <_IO_stdin_used+0x453b>
outsb  %ds:(%esi),(%dx)
je     806f6ea <_IO_stdin_used+0x4526>
js     806f6ab <_IO_stdin_used+0x44e7>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edx)
and    $0x6e202273,%eax
outsl  %ds:(%esi),(%dx)
je     806f6c5 <_IO_stdin_used+0x4501>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806f710 <_IO_stdin_used+0x454c>
and    %ch,%fs:0x6e(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %dl,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806f726 <_IO_stdin_used+0x4562>
js     806f6e7 <_IO_stdin_used+0x4523>
and    0x68202273,%ah
popa
jae    806f6f0 <_IO_stdin_used+0x452c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806f6f9 <_IO_stdin_used+0x4535>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    806f6e2 <_IO_stdin_used+0x451e>
add    %al,(%eax)
dec    %edi
jo     806f75b <_IO_stdin_used+0x4597>
imul   $0x73252220,0x6e(%edi),%ebp
and    (%eax),%ah
jb     806f757 <_IO_stdin_used+0x4593>
jno    806f769 <_IO_stdin_used+0x45a5>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 806f76e <_IO_stdin_used+0x45aa>
outsb  %gs:(%esi),(%dx)
je     806f705 <_IO_stdin_used+0x4541>
add    %al,(%eax)
add    %cl,0x70(%edi)
je     806f775 <_IO_stdin_used+0x45b1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     806f736 <_IO_stdin_used+0x4572>
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x69746c75,0x6d(%eax,%eiz,1),%esp
bound  %edi,0x74(%ecx)
and    %dh,%gs:0x74(%ebx)
jb     806f795 <_IO_stdin_used+0x45d1>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
push   %esp
ja     806f7a2 <_IO_stdin_used+0x45de>
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
gs
sub    $0x756c6f63,%eax
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
popa
jb     806f7a8 <_IO_stdin_used+0x45e4>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806f76d <_IO_stdin_used+0x45a9>
jb     806f7b4 <_IO_stdin_used+0x45f0>
jno    806f7c6 <_IO_stdin_used+0x4602>
imul   $0x64,0x65(%edx),%esi
inc    %esi
popa
je     806f7bd <_IO_stdin_used+0x45f9>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806f7d1 <_IO_stdin_used+0x460d>
jb     806f79e <_IO_stdin_used+0x45da>
and    %ch,0x6f(%esi)
and    %ch,0x65(%ebx)
jns    806f7df <_IO_stdin_used+0x461b>
and    %ch,0x61(%ebp)
jo     806f7e1 <_IO_stdin_used+0x461d>
gs and %ah,%fs:%gs:0x6f(%esi)
jb     806f798 <_IO_stdin_used+0x45d4>
data16
jne    806f7e9 <_IO_stdin_used+0x4625>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x2273,%eax
add    %al,0x78(%ebp)
imul   $0x20202e67,0x6e(%ecx,%ebp,2),%esi
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    806f7fd <_IO_stdin_used+0x4639>
and    %dh,0x73(%ebp)
and    %ch,%gs:0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     806f80e <_IO_stdin_used+0x464a>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x706f2049
je     806f81b <_IO_stdin_used+0x4657>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x65(%esi)
gs fs gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
popa
fs
push   $0x75
jae    806f83c <_IO_stdin_used+0x4678>
and    %bh,0x6f(%ecx)
jne    806f83f <_IO_stdin_used+0x467b>
and    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806f837 <_IO_stdin_used+0x4673>
and    %dh,0x65(%ebx)
je     806f84d <_IO_stdin_used+0x4689>
imul   $0xa73,0x67(%esi),%ebp
dec    %ecx
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806f808 <_IO_stdin_used+0x4644>
imul   $0x6d20,0x64(%esi),%bp
jns    806f810 <_IO_stdin_used+0x464c>
push   $0x20656d6f
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    806f820 <_IO_stdin_used+0x465c>
and    %ah,(%eax)
push   %edi
popa
push   $0x21
pushf
loope  806f829 <_IO_stdin_used+0x4665>
or     %ah,(%eax)
add    %al,(%eax)
add    %bh,%bl
repnz push %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x6(%ebx,%eiz,8)
or     %al,(%edx)
add    %al,(%eax)
add    %cl,%ah
out    %al,$0x6
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x90806(%ebx,%eiz,8)
add    %al,(%eax)
lock loope 806f851 <_IO_stdin_used+0x468d>
or     %cl,(%esi)
add    %al,(%eax)
add    %bh,0x6(%edx,%eiz,8)
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,0x40806e3(%edx)
add    %al,(%eax)
add    %cl,%ah
in     $0x6,%al
or     %al,(%ebx)
add    %al,(%eax)
add    %al,-0x1e(%ebp)
push   %es
or     %bl,(%edi)
add    %al,(%eax)
add    %ah,0x60806e4(%edx)
add    %al,(%eax)
add    %bh,0x806e6(%edi)
add    %al,(%eax)
add    %ch,%ch
jecxz  806f889 <_IO_stdin_used+0x46c5>
or     %dl,(%esi)
add    %al,(%eax)
add    %ch,0x806f3
add    %al,(%eax)
add    %ch,0x806e6(%esi)
add    %al,(%eax)
add    %dl,-0x1d(%edi)
push   %es
or     %dl,(%eax)
add    %al,(%eax)
add    %dh,(%esi)
loop   806f8a9 <_IO_stdin_used+0x46e5>
or     %dl,(%ecx)
add    %al,(%eax)
add    %bl,0xa0806c3
add    %al,(%eax)
add    %cl,-0x1c(%edx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%dl
in     $0x6,%al
or     %al,0xb7000000
out    %al,$0x6
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x6(%esp,%eiz,8)
or     %cl,(%ebx)
add    %al,(%eax)
add    %al,0x80806e4(%edx)
add    %al,(%eax)
add    %ch,-0x1d(%ecx)
push   %es
or     %al,(%edi)
add    %al,(%eax)
add    %bh,-0x1f(%eax)
push   %es
or     %dl,(%ebx)
add    %al,(%eax)
add    %dh,-0xd(%esi)
push   %es
or     %dl,(%eax,%eax,1)
add    %al,(%eax)
shl    %esi
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0xd0806(%ebx,%esi,8)
add    %al,(%eax)
xchg   %eax,%esi
repz push %es
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,%ah
cli
push   %es
or     %cl,(%eax,%eax,1)
add    %al,(%eax)
(bad)
loope  806f919 <_IO_stdin_used+0x4755>
or     %dl,(%edi)
add    %al,(%eax)
add    %dh,%dh
repnz push %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x1e(%edx)
push   %es
or     %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
jecxz  806f931 <_IO_stdin_used+0x476d>
or     %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
jecxz  806f939 <_IO_stdin_used+0x4775>
or     %bl,0x6c000000
loope  806f941 <_IO_stdin_used+0x477d>
or     %bl,(%ecx)
add    %al,(%eax)
add    %cl,%dh
loop   806f949 <_IO_stdin_used+0x4785>
or     %cl,(%edi)
add    %al,(%eax)
add    %al,%ah
loope  806f951 <_IO_stdin_used+0x478d>
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
(bad)
in     $0x6,%al
or     %ah,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
repz push %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi)
jecxz  806f969 <_IO_stdin_used+0x47a5>
or     %bl,(%esi)
add    %al,(%eax)
add    %dl,(%ecx)
in     $0x6,%eax
or     %ah,(%ebx)
add    %al,(%eax)
add    %ah,(%edx)
and    $0x25732a2e,%eax
jae    806f9a2 <_IO_stdin_used+0x47de>
and    %ch,0x6f(%esi)
je     806f9a5 <_IO_stdin_used+0x47e1>
outsw  %ds:(%esi),(%dx)
jne    806f9f7 <_IO_stdin_used+0x4833>
add    %dl,%fs:0x65(%edx)
jo     806f9fb <_IO_stdin_used+0x4837>
popa
arpl   %sp,0x20(%ebp)
je     806f9fd <_IO_stdin_used+0x4839>
imul   $0x74736e69,0x20(%ebx),%esi
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3f(%ebp)
add    %cl,0x6f(%esi)
je     806f9c6 <_IO_stdin_used+0x4802>
popa
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     806f9b0 <_IO_stdin_used+0x47ec>
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     806fa1a <_IO_stdin_used+0x4856>
push   $0x20676e69
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     806f9c4 <_IO_stdin_used+0x4800>
push   %edx
gs
jo     806fa34 <_IO_stdin_used+0x4870>
popa
arpl   %sp,0x20(%ebp)
ja     806fa37 <_IO_stdin_used+0x4873>
je     806fa38 <_IO_stdin_used+0x4874>
add    %dl,0x65(%edx)
jo     806fa41 <_IO_stdin_used+0x487d>
popa
arpl   %sp,0x64(%ebp)
and    %ah,0x6f20756c
arpl   %sp,0x75(%ebx)
jb     806fa56 <_IO_stdin_used+0x4892>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
add    %dl,0x65(%edx)
jo     806fa5a <_IO_stdin_used+0x4896>
popa
arpl   %sp,0x64(%ebp)
and    %ah,0x6f20756c
arpl   %sp,0x75(%ebx)
jb     806fa6f <_IO_stdin_used+0x48ab>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    806fa67 <_IO_stdin_used+0x48a3>
insb   (%dx),%es:(%edi)
imul   $0x20656e69,0x6c(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jb     806fa32 <_IO_stdin_used+0x486e>
arpl   %bp,0x6c(%edi)
jne    806fa84 <_IO_stdin_used+0x48c0>
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,(%eax)
sub    %dh,0x20(%edi,%ebp,2)
jb     806fa8c <_IO_stdin_used+0x48c8>
jo     806fa95 <_IO_stdin_used+0x48d1>
popa
arpl   %sp,0x29(%ebp)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,(%eax)
sub    %dh,0x20(%edi,%ebp,2)
jb     806faa7 <_IO_stdin_used+0x48e3>
jo     806fab0 <_IO_stdin_used+0x48ec>
popa
arpl   %sp,0x29(%ebp)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     806fab5 <_IO_stdin_used+0x48f1>
jb     806fa72 <_IO_stdin_used+0x48ae>
insb   (%dx),%es:(%edi)
imul   $0x6d756e20,0x65(%esi),%ebp
bound  %esp,0x72(%ebp)
sub    $0x20,%al
arpl   %bp,0x6c(%edi)
jne    806fad1 <_IO_stdin_used+0x490d>
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %cl,0x61(%ebp)
jb     806fae1 <_IO_stdin_used+0x491d>
and    %dl,0x65(%ebx)
je     806fa7b <_IO_stdin_used+0x48b7>
dec    %ebp
popa
jb     806faea <_IO_stdin_used+0x4926>
and    %dl,0x6e(%ebp)
jae    806fae9 <_IO_stdin_used+0x4925>
je     806fa86 <_IO_stdin_used+0x48c2>
dec    %esi
outsl  %ds:(%esi),(%dx)
je     806faf2 <_IO_stdin_used+0x492e>
imul   $0x206e6920,0x67(%esi),%ebp
jne    806fb01 <_IO_stdin_used+0x493d>
outsl  %fs:(%esi),(%dx)
and    %ah,0x75(%edx)
data16
data16
gs
jb     806fabe <_IO_stdin_used+0x48fa>
add    %dh,0x78(%ebp,%eiz,2)
je     806fac3 <_IO_stdin_used+0x48ff>
popa
fs add %dh,%fs:0x78(%ebp,%eiz,2)
je     806facc <_IO_stdin_used+0x4908>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     806fb17 <_IO_stdin_used+0x4953>
add    %ch,0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x72(%edi)
popa
jo     806fabd <_IO_stdin_used+0x48f9>
insb   (%dx),%es:(%edi)
imul   $0x696f6a20,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dh,0x78(%ebp,%eiz,2)
je     806faec <_IO_stdin_used+0x4928>
arpl   %si,0x74(%ebp)
add    %dh,0x78(%ebp,%eiz,2)
je     806faf5 <_IO_stdin_used+0x4931>
jne    806fb45 <_IO_stdin_used+0x4981>
arpl   %si,0x74(%ebp)
add    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x72(%edx)
gs
popa
imul   $0x74,(%eax),%eax
gs
js     806fb5e <_IO_stdin_used+0x499a>
and    %ch,0x6e(%ecx)
jae    806fb54 <_IO_stdin_used+0x4990>
jb     806fb65 <_IO_stdin_used+0x49a1>
add    %dh,0x78(%ebp,%eiz,2)
je     806fb17 <_IO_stdin_used+0x4953>
jb     806fb5e <_IO_stdin_used+0x499a>
jo     806fb67 <_IO_stdin_used+0x49a3>
popa
arpl   %sp,0x0(%ebp)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x6f697463,%fs:0x61(%eax,%eiz,1),%esp
6f
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
and    $0x2f002973,%eax
bound  %ebp,0x6e(%ecx)
das
jae    806fb80 <_IO_stdin_used+0x49bc>
add    %al,0x6f(%ebx)
jne    806fb89 <_IO_stdin_used+0x49c5>
and    %ch,%fs:0x6f(%esi)
je     806fb43 <_IO_stdin_used+0x497f>
jo     806fb8e <_IO_stdin_used+0x49ca>
jo     806fb8c <_IO_stdin_used+0x49c8>
add    %dl,0x48(%ebx)
inc    %ebp
dec    %esp
dec    %esp
add    %al,0x6f(%ebx)
jne    806fb9e <_IO_stdin_used+0x49da>
and    %ch,%fs:0x6f(%esi)
je     806fb58 <_IO_stdin_used+0x4994>
outsw  %ds:(%esi),(%dx)
jb     806fba7 <_IO_stdin_used+0x49e3>
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     806fba7 <_IO_stdin_used+0x49e3>
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%edi)
imul   $0x64696465,0x52(%eax,%eax,1),%esi
and    %ah,0x63(%ecx)
je     806fbbc <_IO_stdin_used+0x49f8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
and    $0x4e002973,%eax
outsl  %ds:(%esi),(%dx)
je     806fbc7 <_IO_stdin_used+0x4a03>
imul   $0x206f7420,0x67(%esi),%ebp
jb     806fbcd <_IO_stdin_used+0x4a09>
sub    $0x216f64,%eax
inc    %edx
popa
and    %dh,%fs:0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     806fbdb <_IO_stdin_used+0x4a17>
and    %dh,0x74(%ebx)
jb     806fbe4 <_IO_stdin_used+0x4a20>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    806fbbb <_IO_stdin_used+0x49f7>
and    %ah,0x61430073
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
ja     806fbad <_IO_stdin_used+0x49e9>
push   %ebp
outsb  %ds:(%esi),(%dx)
dec    %edx
jne    806fc05 <_IO_stdin_used+0x4a41>
je     806fbfd <_IO_stdin_used+0x4a39>
data16
jns    806fbb8 <_IO_stdin_used+0x49f4>
add    %al,0x64(%ebp)
imul   $0x70657220,0x61(%eax,%eiz,1),%esi
insb   (%dx),%es:(%edi)
popa
arpl   %sp,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     806fbab <_IO_stdin_used+0x49e7>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    806fc1b <_IO_stdin_used+0x4a57>
and    %ch,%fs:0x6f(%esi)
je     806fbd5 <_IO_stdin_used+0x4a11>
arpl   %si,0x65(%edx)
popa
je     806fc20 <_IO_stdin_used+0x4a5c>
and    %dh,0x69(%eax)
jo     806fc25 <_IO_stdin_used+0x4a61>
add    %ch,0x6f730066
jb     806fc3c <_IO_stdin_used+0x4a78>
add    %dh,0x6e(%ebp)
imul   $0x6f727245,0x0(%ecx),%esi
jb     806fbf4 <_IO_stdin_used+0x4a30>
imul   $0x6e696b6f,0x76(%esi),%ebp
and    %ah,(%bp,%si)
jae    806fc50 <_IO_stdin_used+0x4a8c>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    (%eax),%al
inc    %ebp
jb     806fc5a <_IO_stdin_used+0x4a96>
outsl  %ds:(%esi),(%dx)
jb     806fc0b <_IO_stdin_used+0x4a47>
imul   $0x6e696b6f,0x76(%esi),%ebp
and    %ah,(%bp,%si)
jae    806fc66 <_IO_stdin_used+0x4aa2>
jb     806fc6d <_IO_stdin_used+0x4aa9>
and    %ch,0x45002266
jb     806fc73 <_IO_stdin_used+0x4aaf>
outsl  %ds:(%esi),(%dx)
jb     806fc24 <_IO_stdin_used+0x4a60>
imul   $0x6e696b6f,0x76(%esi),%ebp
and    %ah,(%bp,%si)
jne    806fc7e <_IO_stdin_used+0x4aba>
imul   $0x6e694600,0x22(%ecx),%esi
imul   $0x63206465,0x68(%ebx),%esi
push   $0x696b6365
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%bp,%di)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x72724500,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     806fc55 <_IO_stdin_used+0x4a91>
imul   $0x6e696b6f,0x76(%esi),%ebp
and    %ah,(%bp,%si)
and    $0x53002273,%eax
jo     806fcab <_IO_stdin_used+0x4ae7>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%bp)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
add    %dl,0x70(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%bp)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
cmp    (%eax),%ah
and    $0x6e490073,%eax
and    %dl,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    %al,(%eax)
add    %cl,0x6e(%ecx)
je     806fcf5 <_IO_stdin_used+0x4b31>
jb     806fd00 <_IO_stdin_used+0x4b3c>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806fd08 <_IO_stdin_used+0x4b44>
jb     806fcd5 <_IO_stdin_used+0x4b11>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806fcc2 <_IO_stdin_used+0x4afe>
insl   (%dx),%es:(%edi)
popa
je     806fd09 <_IO_stdin_used+0x4b45>
push   $0x6e696c20
and    %ah,%gs:0x20202e64
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    806fd1d <_IO_stdin_used+0x4b59>
and    %dh,0x61(%ebx)
jbe    806fd22 <_IO_stdin_used+0x4b5e>
and    %bh,0x6f(%ecx)
jne    806fd34 <_IO_stdin_used+0x4b70>
and    %dh,0x6f(%edi)
jb     806fd32 <_IO_stdin_used+0x4b6e>
add    %cl,0x6e(%ecx)
je     806fd31 <_IO_stdin_used+0x4b6d>
jb     806fd3c <_IO_stdin_used+0x4b78>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806fd44 <_IO_stdin_used+0x4b80>
jb     806fd11 <_IO_stdin_used+0x4b4d>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
gs and %ah,%cs:%gs:(%eax)
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    806fd52 <_IO_stdin_used+0x4b8e>
and    %dh,0x61(%ebx)
jbe    806fd57 <_IO_stdin_used+0x4b93>
and    %bh,0x6f(%ecx)
jne    806fd69 <_IO_stdin_used+0x4ba5>
and    %dh,0x6f(%edi)
jb     806fd67 <_IO_stdin_used+0x4ba3>
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     806fd69 <_IO_stdin_used+0x4ba5>
jb     806fd74 <_IO_stdin_used+0x4bb0>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806fd7c <_IO_stdin_used+0x4bb8>
jb     806fd49 <_IO_stdin_used+0x4b85>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     806fd36 <_IO_stdin_used+0x4b72>
jae    806fd7d <_IO_stdin_used+0x4bb9>
je     806fd8f <_IO_stdin_used+0x4bcb>
jo     806fd3c <_IO_stdin_used+0x4b78>
jne    806fd8c <_IO_stdin_used+0x4bc8>
arpl   %si,0x74(%ebp)
and    %ah,%cs:(%eax)
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    806fd8f <_IO_stdin_used+0x4bcb>
and    %dh,0x61(%ebx)
jbe    806fd94 <_IO_stdin_used+0x4bd0>
and    %bh,0x6f(%ecx)
jne    806fda6 <_IO_stdin_used+0x4be2>
and    %dh,0x6f(%edi)
jb     806fda4 <_IO_stdin_used+0x4be0>
add    %al,%cs:(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     806fda5 <_IO_stdin_used+0x4be1>
jb     806fdb0 <_IO_stdin_used+0x4bec>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806fdb8 <_IO_stdin_used+0x4bf4>
jb     806fd85 <_IO_stdin_used+0x4bc1>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
gs and %ah,%cs:%gs:(%eax)
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    806fdc6 <_IO_stdin_used+0x4c02>
and    %dh,0x61(%ebx)
jbe    806fdcb <_IO_stdin_used+0x4c07>
and    %bh,0x6f(%ecx)
jne    806fddd <_IO_stdin_used+0x4c19>
and    %dh,0x6f(%edi)
jb     806fddb <_IO_stdin_used+0x4c17>
add    %al,%cs:(%eax)
add    %al,0x72(%ebx)
gs
popa
je     806fde3 <_IO_stdin_used+0x4c1f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%di)
jae    806fdf4 <_IO_stdin_used+0x4c30>
jo     806fde8 <_IO_stdin_used+0x4c24>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x6f(%edi)
jb     806fdf0 <_IO_stdin_used+0x4c2c>
and    %ch,0x73(%ecx,%ebp,2)
je     806fdbe <_IO_stdin_used+0x4bfa>
and    %dh,0x6c(%eax)
gs
popa
jae    806fdfe <_IO_stdin_used+0x4c3a>
and    %dh,0x61(%edi)
imul   $0x2e,0x2e(%esi,%ebp,1),%esi
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    806fe14 <_IO_stdin_used+0x4c50>
and    %ch,%fs:0x6f(%esi)
je     806fdce <_IO_stdin_used+0x4c0a>
addr16
gs
je     806fdd2 <_IO_stdin_used+0x4c0e>
jae    806fe1d <_IO_stdin_used+0x4c59>
jp     806fe1b <_IO_stdin_used+0x4c57>
and    %ch,0x66(%edi)
and    %dh,0x69(%eax)
jo     806fe23 <_IO_stdin_used+0x4c5f>
and    %ah,0x75(%edx)
data16
data16
gs
jb     806fdc6 <_IO_stdin_used+0x4c02>
add    %al,(%eax)
and    $0x726f5773,%eax
fs
jae    806fe0a <_IO_stdin_used+0x4c46>
and    %ah,0x2020756c
dec    %esp
imul   $0x25203a73,0x65(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,%fs:(%eax)
inc    %ebx
push   $0x3a737261
and    %ah,0x756c
add    %al,(%eax)
clc
and    %al,(%esi)
or     %bh,(%eax)
and    %al,(%esi)
or     %dl,(%eax)
and    %al,(%esi)
or     %al,-0xff7f9e1(%eax)
push   %ds
push   %es
or     %cl,%al
push   %ds
push   %es
or     %ah,0x2008061e(%eax)
push   %ds
push   %es
or     %cl,-0x6ef7f9df(%eax)
sub    %eax,(%esi)
or     %al,0x28(%edi)
push   %es
or     %dh,0x29(%esi)
push   %es
or     %ah,(%ecx)
sub    %eax,(%esi)
or     %dh,0x28(%ecx)
push   %es
or     %dl,-0x6f7f9d8(%edi)
sub    %al,(%esi)
or     %bh,%dh
daa
push   %es
or     %dh,0x29(%esi)
push   %es
or     %dl,%al
sub    %al,(%esi)
or     %ch,%al
sub    (%esi),%eax
or     %ch,0x2b(%eax)
push   %es
or     %bl,0x2b(%eax)
push   %es
or     %cl,0x2b(%eax)
push   %es
or     %al,(%ebx)
sub    (%esi),%eax
or     %dh,0x5808062a(%eax)
sub    (%esi),%eax
or     %al,(%ebx)
sub    (%esi),%eax
or     %bh,(%eax)
sub    (%esi),%eax
or     %bh,0x2f080639(%eax)
cmp    %eax,(%esi)
or     %cl,(%edx)
cmp    %eax,(%esi)
or     %cl,%dl
cmp    %al,(%esi)
or     %al,0x38(%ecx)
push   %es
or     %bl,(%esi)
cmp    %al,(%esi)
or     %bh,%bl
aaa
push   %es
or     %ah,0x46080637(%eax)
cmp    (%esi),%al
or     %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ch,0x75(%edi)
je     806feb0 <_IO_stdin_used+0x4cec>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806ff12 <_IO_stdin_used+0x4d4e>
and    %eax,(%eax)
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %ch,%dl
jb     806fea9 <_IO_stdin_used+0x4ce5>
or     %cl,%bl
jb     806fead <_IO_stdin_used+0x4ce9>
or     %bl,(%eax)
jb     806feb1 <_IO_stdin_used+0x4ced>
or     %dl,-0x27f7f98f(%eax)
jno    806feb9 <_IO_stdin_used+0x4cf5>
or     %al,%al
jno    806febd <_IO_stdin_used+0x4cf9>
or     %ch,-0x6ff7f98f(%eax)
jno    806fec5 <_IO_stdin_used+0x4d01>
or     %bl,(%eax)
jb     806fec9 <_IO_stdin_used+0x4d05>
or     %bh,(%edi)
jno    806fecd <_IO_stdin_used+0x4d09>
or     %bh,(%edi)
jno    806fed1 <_IO_stdin_used+0x4d0d>
or     %bh,(%edi)
jno    806fed5 <_IO_stdin_used+0x4d11>
or     %bh,(%edi)
jno    806fed9 <_IO_stdin_used+0x4d15>
or     %bh,(%edi)
jno    806fedd <_IO_stdin_used+0x4d19>
or     %bh,(%edi)
jno    806fee1 <_IO_stdin_used+0x4d1d>
or     %al,(%eax)
jb     806fee5 <_IO_stdin_used+0x4d21>
or     %dh,%al
jno    806fee9 <_IO_stdin_used+0x4d25>
or     %dh,%al
jno    806feed <_IO_stdin_used+0x4d29>
or     %dh,%al
jno    806fef1 <_IO_stdin_used+0x4d2d>
or     %dh,%al
jno    806fef5 <_IO_stdin_used+0x4d31>
or     %ch,(%esi)
jb     806fef9 <_IO_stdin_used+0x4d35>
or     %dl,-0x3ff7f98f(%eax)
jno    806ff01 <_IO_stdin_used+0x4d3d>
or     %ch,-0x27f7f98f(%eax)
jno    806ff09 <_IO_stdin_used+0x4d45>
or     %bh,(%edi)
jno    806ff0d <_IO_stdin_used+0x4d49>
or     %bh,(%edi)
jno    806ff11 <_IO_stdin_used+0x4d4d>
or     %al,(%eax)
jb     806ff15 <_IO_stdin_used+0x4d51>
or     %ah,0x72(%ecx)
push   %es
or     %bl,0x72(%edx)
push   %es
or     %cl,(%ecx)
jae    806ff21 <_IO_stdin_used+0x4d5d>
or     %cl,0x6(%edx,%esi,2)
or     %dl,0x72(%ebx)
push   %es
or     %ch,0x72(%eax)
push   %es
or     %dh,0x72(%esi)
push   %es
or     %ch,0x72(%edi)
push   %es
or     %al,%al
jno    806ff39 <_IO_stdin_used+0x4d75>
or     %bl,%al
jno    806ff3d <_IO_stdin_used+0x4d79>
or     %cl,-0x6df7f98e(%ebx)
jb     806ff45 <_IO_stdin_used+0x4d81>
or     %dl,-0x7bf7f98f(%eax)
jb     806ff4d <_IO_stdin_used+0x4d89>
or     %ah,0x3f080672(%edi)
jno    806ff55 <_IO_stdin_used+0x4d91>
or     %bh,(%edi)
jno    806ff59 <_IO_stdin_used+0x4d95>
or     %bh,(%edi)
jno    806ff5d <_IO_stdin_used+0x4d99>
or     %bh,(%edi)
jno    806ff61 <_IO_stdin_used+0x4d9d>
or     %bh,(%edi)
jno    806ff65 <_IO_stdin_used+0x4da1>
or     %dh,%al
jno    806ff69 <_IO_stdin_used+0x4da5>
or     %dh,%al
jno    806ff6d <_IO_stdin_used+0x4da9>
or     %dh,%al
jno    806ff71 <_IO_stdin_used+0x4dad>
or     %dh,%al
jno    806ff75 <_IO_stdin_used+0x4db1>
or     %ah,%ch
jae    806ff79 <_IO_stdin_used+0x4db5>
or     %cl,0x3f080673(%edi)
jno    806ff81 <_IO_stdin_used+0x4dbd>
or     %bh,(%edi)
jno    806ff85 <_IO_stdin_used+0x4dc1>
or     %bh,(%edi)
jno    806ff89 <_IO_stdin_used+0x4dc5>
or     %bh,(%edi)
jno    806ff8d <_IO_stdin_used+0x4dc9>
or     %bh,(%edi)
jno    806ff91 <_IO_stdin_used+0x4dcd>
or     %bh,(%edi)
jno    806ff95 <_IO_stdin_used+0x4dd1>
or     %bh,(%edi)
jno    806ff99 <_IO_stdin_used+0x4dd5>
or     %bh,(%edi)
jno    806ff9d <_IO_stdin_used+0x4dd9>
or     %bh,(%edi)
jno    806ffa1 <_IO_stdin_used+0x4ddd>
or     %bh,(%edi)
jno    806ffa5 <_IO_stdin_used+0x4de1>
or     %bh,(%edi)
jno    806ffa9 <_IO_stdin_used+0x4de5>
or     %bh,(%edi)
jno    806ffad <_IO_stdin_used+0x4de9>
or     %bh,(%edi)
jno    806ffb1 <_IO_stdin_used+0x4ded>
or     %bh,(%edi)
jno    806ffb5 <_IO_stdin_used+0x4df1>
or     %dh,%al
jno    806ffb9 <_IO_stdin_used+0x4df5>
or     %dh,%al
jno    806ffbd <_IO_stdin_used+0x4df9>
or     %dh,%al
jno    806ffc1 <_IO_stdin_used+0x4dfd>
or     %dh,%al
jno    806ffc5 <_IO_stdin_used+0x4e01>
or     %ch,(%esi)
jb     806ffc9 <_IO_stdin_used+0x4e05>
or     %dl,0x3f080671(%eax)
jno    806ffd1 <_IO_stdin_used+0x4e0d>
or     %ch,0x3f080671(%eax)
jno    806ffd9 <_IO_stdin_used+0x4e15>
or     %bh,(%edi)
jno    806ffdd <_IO_stdin_used+0x4e19>
or     %bh,(%edi)
jno    806ffe1 <_IO_stdin_used+0x4e1d>
or     %bh,(%edi)
jno    806ffe5 <_IO_stdin_used+0x4e21>
or     %ch,0x3f080671(%eax)
jno    806ffed <_IO_stdin_used+0x4e29>
or     %bh,(%edi)
jno    806fff1 <_IO_stdin_used+0x4e2d>
or     %ah,0x72(%ecx)
push   %es
or     %bl,0x72(%edx)
push   %es
or     %bh,0x72(%ebp)
push   %es
or     %cl,0x6(%edx,%esi,2)
or     %dl,0x72(%ebx)
push   %es
or     %ch,0x72(%eax)
push   %es
or     %dh,0x72(%esi)
push   %es
or     %ch,0x72(%edi)
push   %es
or     %ah,-0x66f7f98e(%eax)
jb     8070019 <_IO_stdin_used+0x4e55>
or     %bh,(%edi)
jno    807001d <_IO_stdin_used+0x4e59>
or     %bh,(%edi)
jno    8070021 <_IO_stdin_used+0x4e5d>
or     %bh,(%edi)
jno    8070025 <_IO_stdin_used+0x4e61>
or     %bh,(%edi)
jno    8070029 <_IO_stdin_used+0x4e65>
or     %bh,(%edi)
jno    807002d <_IO_stdin_used+0x4e69>
or     %bh,(%edi)
jno    8070031 <_IO_stdin_used+0x4e6d>
or     %bh,(%edi)
jno    8070035 <_IO_stdin_used+0x4e71>
or     %dh,%al
jno    8070039 <_IO_stdin_used+0x4e75>
or     %dh,%al
jno    807003d <_IO_stdin_used+0x4e79>
or     %dh,%al
jno    8070041 <_IO_stdin_used+0x4e7d>
or     %dh,%al
jno    8070045 <_IO_stdin_used+0x4e81>
or     %bh,(%edi)
jno    8070049 <_IO_stdin_used+0x4e85>
or     %bh,(%edi)
jno    807004d <_IO_stdin_used+0x4e89>
or     %bh,(%edi)
jno    8070051 <_IO_stdin_used+0x4e8d>
or     %bh,(%edi)
jno    8070055 <_IO_stdin_used+0x4e91>
or     %bh,(%edi)
jno    8070059 <_IO_stdin_used+0x4e95>
or     %bh,(%edi)
jae    807005d <_IO_stdin_used+0x4e99>
or     %bl,0x6(%ebx,%esi,2)
or     %bh,(%eax)
jae    8070065 <_IO_stdin_used+0x4ea1>
or     %cl,%al
jae    8070069 <_IO_stdin_used+0x4ea5>
or     %bl,(%eax)
jb     807006d <_IO_stdin_used+0x4ea9>
or     %al,%cl
jae    8070071 <_IO_stdin_used+0x4ead>
or     %al,(%eax)
jb     8070075 <_IO_stdin_used+0x4eb1>
or     %dl,0x79080671(%eax)
jae    807007d <_IO_stdin_used+0x4eb9>
or     %al,%al
jno    8070081 <_IO_stdin_used+0x4ebd>
or     %ah,0x73(%ebx)
push   %es
or     %ch,(%esi)
jb     8070089 <_IO_stdin_used+0x4ec5>
or     %al,0x73(%esi)
push   %es
or     %ch,-0x30f7f98f(%eax)
jae    8070095 <_IO_stdin_used+0x4ed1>
or     %bl,%al
jno    8070099 <_IO_stdin_used+0x4ed5>
or     %ah,0x72(%ecx)
push   %es
or     %bl,0x72(%edx)
push   %es
or     %bh,0x72(%ebp)
push   %es
or     %cl,0x6(%edx,%esi,2)
or     %dl,0x72(%ebx)
push   %es
or     %ah,-0x66f7f98e(%eax)
jb     80700b5 <_IO_stdin_used+0x4ef1>
or     %al,(%eax)
jb     80700b9 <_IO_stdin_used+0x4ef5>
or     %cl,-0x6df7f98e(%ebx)
jb     80700c1 <_IO_stdin_used+0x4efd>
or     %bh,0x84080674
jb     80700c9 <_IO_stdin_used+0x4f05>
or     %al,(%eax)
jb     80700cd <_IO_stdin_used+0x4f09>
or     %dh,(%esi)
je     80700d1 <_IO_stdin_used+0x4f0d>
or     %ch,(%edi)
je     80700d5 <_IO_stdin_used+0x4f11>
or     %ah,0x72(%ecx)
push   %es
or     %bl,0x72(%edx)
push   %es
or     %bh,0x72(%ebp)
push   %es
or     %cl,0x6(%edx,%esi,2)
or     %dl,0x72(%ebx)
push   %es
or     %ch,0x68080671(%eax)
jb     80700f1 <_IO_stdin_used+0x4f2d>
or     %dh,0x72(%esi)
push   %es
or     %ch,0x72(%edi)
push   %es
or     %ch,0x44080671(%eax)
je     8070101 <_IO_stdin_used+0x4f3d>
or     %dl,0x71(%ebx)
push   %es
or     %dl,0x71(%ebx)
push   %es
or     %dl,0x71(%ebx)
push   %es
or     %dl,0x71(%ebx)
push   %es
or     %bh,(%edi)
jno    8070115 <_IO_stdin_used+0x4f51>
or     %bh,(%edi)
jno    8070119 <_IO_stdin_used+0x4f55>
or     %bh,(%edi)
jno    807011d <_IO_stdin_used+0x4f59>
or     %bh,(%edi)
jno    8070121 <_IO_stdin_used+0x4f5d>
or     %bh,(%edi)
jno    8070125 <_IO_stdin_used+0x4f61>
or     %bh,(%edi)
jno    8070129 <_IO_stdin_used+0x4f65>
or     %bh,(%edi)
jno    807012d <_IO_stdin_used+0x4f69>
or     %bh,(%edi)
jno    8070131 <_IO_stdin_used+0x4f6d>
or     %bh,(%edi)
jno    8070135 <_IO_stdin_used+0x4f71>
or     %bh,(%edi)
jno    8070139 <_IO_stdin_used+0x4f75>
or     %bh,(%edi)
jno    807013d <_IO_stdin_used+0x4f79>
or     %bh,0x84080674
jb     8070145 <_IO_stdin_used+0x4f81>
or     %dh,(%esi)
je     8070149 <_IO_stdin_used+0x4f85>
or     %ch,(%edi)
je     807014d <_IO_stdin_used+0x4f89>
or     %bh,(%ecx)
jbe    8070151 <_IO_stdin_used+0x4f8d>
or     %cl,-0x5ff7f98a(%eax)
jbe    8070159 <_IO_stdin_used+0x4f95>
or     %dl,%al
jbe    807015d <_IO_stdin_used+0x4f99>
or     %dh,%al
jbe    8070161 <_IO_stdin_used+0x4f9d>
or     %dl,(%eax)
ja     8070165 <_IO_stdin_used+0x4fa1>
or     %ah,0x76(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x2(%ecx)
pop    %es
or     %ah,(%esi)
loope  8070195 <_IO_stdin_used+0x4fd1>
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x3(%ecx)
pop    %es
or     %ah,0x3(%edx)
pop    %es
or     %dh,0x3(%eax)
pop    %es
or     %bh,0x3(%esi)
pop    %es
or     %cl,-0x66f7f8fd(%ebp)
add    (%edi),%eax
or     %ch,-0x3ff7f8fd(%edi)
add    (%edi),%eax
or     %cl,%bh
add    (%edi),%eax
or     %bl,%cl
add    (%edi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%ch
add    (%edi),%eax
or     %dh,%ah
add    (%edi),%eax
or     %al,(%edx)
add    $0x7,%al
or     %dl,(%edx)
add    $0x7,%al
or     %ah,(%ecx)
add    $0x7,%al
or     %ch,0x42080704
add    $0x7,%al
or     %dl,0x4(%eax)
pop    %es
or     %bl,0x4(%edx)
pop    %es
or     %ch,0x4(%eax)
pop    %es
or     %dh,0x4(%ebx)
pop    %es
or     %ah,(%esi)
loope  80701f5 <_IO_stdin_used+0x5031>
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x4(%edi)
pop    %es
or     %bl,0x4af0807(%esp,%eax,1)
pop    %es
or     %bh,-0x35f7f8fc(%esi)
add    $0x7,%al
or     %bl,%bl
add    $0x7,%al
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%bl
add    $0x7,%al
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%dl
add    $0x7,%al
or     %cl,(%eax)
add    $0x5150807,%eax
pop    %es
or     %ah,0x807(,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
es
loope  8070239 <_IO_stdin_used+0x5075>
or     %ah,(%esi)
loope  807023d <_IO_stdin_used+0x5079>
or     %ah,(%esi)
loope  8070241 <_IO_stdin_used+0x507d>
or     %ah,(%esi)
loope  8070245 <_IO_stdin_used+0x5081>
or     %dl,-0x7bf7f8fb(%eax)
jmp    807024d <_IO_stdin_used+0x5089>
or     %ah,(%esi)
loope  8070251 <_IO_stdin_used+0x508d>
or     %ah,(%esi)
loope  8070255 <_IO_stdin_used+0x5091>
or     %ah,(%esi)
loope  8070259 <_IO_stdin_used+0x5095>
or     %ah,(%esi)
loope  807025d <_IO_stdin_used+0x5099>
or     %dh,0x205b0807(,%eax,1)
add    %ah,(%eax)
pop    %ebp
add    %dl,0x6e(%ebp)
imul   $0x49206564,0x6f(%ebx),%esp
outsb  %ds:(%esi),(%dx)
jo     80702e3 <_IO_stdin_used+0x511f>
je     8070270 <_IO_stdin_used+0x50ac>
inc    %edi
dec    %esi
push   %ebp
and    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,(%edx)
xor    %cs:(%esi),%ch
add    %cl,%ss:0x6f(%ebp)
imul   $0x56006465,%fs:0x69(%esi),%esp
imul   $0x52494400,0x77(%ebp),%esp
cmp    (%eax),%al
inc    %esi
imul   $0x6f6c4600,0x3a(%ebp,%eiz,2),%ebp
jb     8070306 <_IO_stdin_used+0x5142>
popa
outsb  %ds:(%esi),(%dx)
and    %cl,-0x3d(%ebx)
mov    $0x6e,%dh
imul   $0x726f6c46,0x0(%edi),%esp
imul   $0x6ef64b20,0x6e(%ecx),%esp
imul   $0x20656854,0x0(%edi),%esp
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x78(%ebp,%eiz,2)
je     80702e3 <_IO_stdin_used+0x511f>
gs imul $0x6f724200,%fs:%gs:0x72(%edi,%ebp,2),%esi
6f
jne    8070336 <_IO_stdin_used+0x5172>
push   $0x6f742074
and    %bh,0x6f(%ecx)
jne    80702f9 <_IO_stdin_used+0x5135>
bound  %edi,0x3a(%ecx)
add    %dl,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
imul   $0x74,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
cmp    (%eax),%al
push   %esp
push   $0x72462065
gs and %dl,%gs:0x6f(%ebx)
data16
je     8070375 <_IO_stdin_used+0x51b1>
popa
jb     8070366 <_IO_stdin_used+0x51a2>
and    %al,0x6f(%esi)
jne    8070374 <_IO_stdin_used+0x51b0>
fs
popa
je     8070373 <_IO_stdin_used+0x51af>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%esi)
jb     8070331 <_IO_stdin_used+0x516d>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x72(%ebp)
jae    807037c <_IO_stdin_used+0x51b8>
jae    8070353 <_IO_stdin_used+0x518f>
add    %ah,0x6e(%ecx)
and    %ah,%fs:0x6e(%ecx)
jns    8070391 <_IO_stdin_used+0x51cd>
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6c(%ebp)
jae    807038e <_IO_stdin_used+0x51ca>
and    %dh,0x65(%edi)
and    %ah,0x6f(%esi)
jb     8070398 <_IO_stdin_used+0x51d4>
outsl  %ds:(%esi),(%dx)
je     8070362 <_IO_stdin_used+0x519e>
cs add %dl,%cs:0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
imul   $0x79,(%eax),%esp
outsl  %ds:(%esi),(%dx)
jne    8070361 <_IO_stdin_used+0x519d>
outsw  %ds:(%esi),(%dx)
jb     8070365 <_IO_stdin_used+0x51a1>
jne    80703ba <_IO_stdin_used+0x51f6>
imul   $0x6e616e20,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %eax,(%eax)
inc    %ebx
push   $0x20736972
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
addr16 jb 80703c3 <_IO_stdin_used+0x51ff>
je     80703d4 <_IO_stdin_used+0x5210>
popa
add    %cl,0x6f(%edx)
jb     80703ca <_IO_stdin_used+0x5206>
imul   $0x6c6c614d,(%eax),%esp
popa
arpl   %bp,0x0(%eax)
inc    %ecx
fs
popa
insl   (%dx),%es:(%edi)
and    %dl,0x6f(%edx)
outsl  %ds:(%si),(%dx)
jns    80703ee <_IO_stdin_used+0x522a>
imul   $0x52,0x0(%ecx),%ebp
outsl  %ds:(%esi),(%dx)
bound  %esp,(%eax)
push   %ebx
imul   $0x73726f62,0x6d(%ebp),%esp
imul   $0x52,0x0(%ecx),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6f(%ebx)
and    %al,0x6f(%ebx)
jb     807040a <_IO_stdin_used+0x5246>
imul   $0x69766144,(%eax),%eax
and    %cl,%fs:0x77(%ecx,%eiz,2)
jb     8070409 <_IO_stdin_used+0x5245>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
push   %edx
popa
insl   (%dx),%es:(%edi)
jae    8070412 <_IO_stdin_used+0x524e>
jns    80703af <_IO_stdin_used+0x51eb>
inc    %esp
popa
jbe    807041c <_IO_stdin_used+0x5258>
and    %al,%fs:0x65(%edx)
outsb  %ds:(%esi),(%dx)
bound  %esp,0x6e(%ebp)
outsb  %ds:(%esi),(%dx)
imul   $0x6b694d00,0x6b(%ebx),%esp
and    %al,%gs:0x72(%esi)
jns    807043c <_IO_stdin_used+0x5278>
imul   $0x4b007265,0x67(%esi),%ebp
outsb  %gs:(%esi),(%dx)
and    %dl,0x6c(%ecx,%edi,2)
gs
jb     80703d9 <_IO_stdin_used+0x5215>
push   %ebx
jbe    8070441 <_IO_stdin_used+0x527d>
outsb  %ds:(%esi),(%dx)
and    %al,0x75(%edi)
arpl   %bp,0x65(%ebx)
jae    80703e5 <_IO_stdin_used+0x5221>
push   %eax
popa
jne    8070455 <_IO_stdin_used+0x5291>
imul   $0x74726956,(%eax),%esp
popa
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
add    %al,0x6e(%ecx,%eiz,2)
imul   $0x654d2065,0x6c(%ebp),%esp
fs
jb     807046a <_IO_stdin_used+0x52a6>
add    %al,0x6c(%ebx)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     807042a <_IO_stdin_used+0x5266>
dec    %esp
popa
outsw  %ds:(%esi),(%dx)
jb     8070475 <_IO_stdin_used+0x52b1>
je     8070412 <_IO_stdin_used+0x524e>
push   %esp
gs imul $0x69726548,%fs:%gs:(%eax),%esp
jns    807047e <_IO_stdin_used+0x52ba>
outsb  %ds:(%esi),(%dx)
je     807048f <_IO_stdin_used+0x52cb>
add    %al,0x69(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dl,0x6f(%ebx)
jne    807048e <_IO_stdin_used+0x52ca>
popa
outsb  %ds:(%esi),(%dx)
add    %al,0x68(%ebx)
jb     807049a <_IO_stdin_used+0x52d6>
jae    80704a7 <_IO_stdin_used+0x52e3>
imul   $0x69655720,0x6e(%ecx),%esp
jae    80704a3 <_IO_stdin_used+0x52df>
gs
jb     80704a1 <_IO_stdin_used+0x52dd>
gs
jb     8070442 <_IO_stdin_used+0x527e>
inc    %ebp
jb     80704ae <_IO_stdin_used+0x52ea>
imul   $0x41,(%eax),%esp
outsb  %ds:(%esi),(%dx)
fs
gs
jb     80704c0 <_IO_stdin_used+0x52fc>
outsb  %gs:(%esi),(%dx)
add    %al,0x69(%edx)
and    %al,0x61(%bx)
jne    80704cc <_IO_stdin_used+0x5308>
add    %cl,%gs:0x6f(%edx)
jae    80704c6 <_IO_stdin_used+0x5302>
jne    80704c1 <_IO_stdin_used+0x52fd>
and    %cl,0x65(%edx)
outsb  %ds:(%esi),(%dx)
jae    80704cb <_IO_stdin_used+0x5307>
outsb  %ds:(%esi),(%dx)
add    %dl,0x79(%edx)
popa
outsb  %ds:(%esi),(%dx)
and    %cl,0x72(%ebx)
bound  %esi,%gs:0x0(%ebx)
inc    %ecx
insb   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
je     807049a <_IO_stdin_used+0x52d6>
inc    %ebx
push   $0x50006e69
insb   (%dx),%es:(%edi)
popa
je     80704f8 <_IO_stdin_used+0x5334>
jae    80704e8 <_IO_stdin_used+0x5324>
jne    80704fa <_IO_stdin_used+0x5336>
addr16 push $0x61745320
je     80704f5 <_IO_stdin_used+0x5331>
and    %dl,0x6e(%ebp)
imul   $0x74697372,0x65(%esi),%esi
jns    807049c <_IO_stdin_used+0x52d8>
inc    %edx
outsb  %gs:(%esi),(%dx)
gs
je     80704c2 <_IO_stdin_used+0x52fe>
dec    %esp
popa
bound  %ebp,0x72(%edi)
popa
je     8070519 <_IO_stdin_used+0x5355>
jb     8070515 <_IO_stdin_used+0x5351>
gs
jae    80704af <_IO_stdin_used+0x52eb>
inc    %ecx
insl   (%dx),%es:(%edi)
jns    80704d3 <_IO_stdin_used+0x530f>
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
addr16 jb 807051f <_IO_stdin_used+0x535b>
je     8070530 <_IO_stdin_used+0x536c>
popa
add    %cl,0x6e(%ecx,%ebp,2)
fs
popa
and    %bl,0x6f(%ecx)
jne    8070536 <_IO_stdin_used+0x5372>
add    %cl,0x65(%bp,%si)
jb     8070533 <_IO_stdin_used+0x536f>
insl   (%dx),%es:(%edi)
jns    80704f1 <_IO_stdin_used+0x532d>
push   %edx
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x63(%ecx)
push   $0x647561
push   %edx
imul   $0x20647261,0x68(%ebx),%esp
dec    %ebx
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
bound  %esp,(%eax)
dec    %ecx
dec    %ecx
add    %cl,0x6e(%ecx,%ebp,2)
jne    8070563 <_IO_stdin_used+0x539f>
and    %dl,0x72(%edi,%ebp,2)
jbe    8070557 <_IO_stdin_used+0x5393>
insb   (%dx),%es:(%edi)
fs
jae    80704fa <_IO_stdin_used+0x5336>
push   %esp
push   $0x73616d6f
and    %al,0x63(%ecx,%ebp,2)
imul   $0x0,0x79(%ebp),%esp
push   %eax
popa
jbe    8070571 <_IO_stdin_used+0x53ad>
insb   (%dx),%es:(%edi)
and    %al,0x75(%ebx)
jb     8070586 <_IO_stdin_used+0x53c2>
imul   $0x6479655a,0x0(%ebx),%esi
and    %al,0x65(%edx)
outsb  %ds:(%esi),(%dx)
sub    $0x696c6148,%eax
insl   (%dx),%es:(%edi)
add    %al,0x72(%ebp)
imul   $0x52202e53,0x20(%ebx),%esp
popa
jns    807059d <_IO_stdin_used+0x53d9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%eax)
je     80705a8 <_IO_stdin_used+0x53e4>
cmp    (%edi),%ch
das
ja     80705b4 <_IO_stdin_used+0x53f0>
ja     807056d <_IO_stdin_used+0x53a9>
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x74696465,%eax
outsl  %ds:(%esi),(%dx)
jb     8070579 <_IO_stdin_used+0x53b5>
outsl  %ds:(%esi),(%dx)
jb     80705b5 <_IO_stdin_used+0x53f1>
das
add    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x252f646c
insb   (%dx),%es:(%edi)
and    %ch,%fs:(%eax)
and    $0x29252564,%eax
sub    $0x20,%al
arpl   %bp,0x6c(%edi)
and    %ah,0x252f756c
insb   (%dx),%es:(%edi)
jne    8070591 <_IO_stdin_used+0x53cd>
sub    %ah,0x29252564
sub    $0x20,%al
arpl   %bp,0x61(%eax)
jb     807059e <_IO_stdin_used+0x53da>
and    $0x252f756c,%eax
insb   (%dx),%es:(%edi)
jne    80705a6 <_IO_stdin_used+0x53e2>
sub    %ah,0x29252564
add    %al,(%eax)
add    %al,(%eax)
sub    %al,0x29(%ebx)
and    %dh,(%ecx)
cmp    %edi,(%ecx)
cmp    %ebp,(%eax,%eiz,1)
xor    (%eax),%dh
xor    %dh,(%eax)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%ecx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%ebx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%esp,%ebp,1)
and    %dh,(%edx)
xor    %dh,(%eax)
xor    $0x3032202c,%eax
xor    %dh,(%esi)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%edi)
add    %al,(%eax)
add    %ebx,(%ebx)
add    (%ebx),%edi
jo     80705de <_IO_stdin_used+0x541a>
add    %al,(%eax)
lea    (%ecx),%eax
add    %al,(%eax)
aam    $0x94
std
decl   -0x615c0000(%esp,%ecx,1)
std
jmp    *%eax
add    %al,%cs:(%eax)
je     8070594 <_IO_stdin_used+0x53d0>
std
pushl  -0x6bfffff4(%eax)
scas   %es:(%edi),%eax
std
push   %esp
or     $0x0,%al
add    %ah,0xd34fffd(%ecx,%esi,4)
add    %al,(%eax)
les    0xd58fffd(%edx),%esi
add    %al,(%eax)
and    $0xb3,%al
std
ljmp   *-0x48fc0000(%ebp,%ecx,1)
std
lcall  *(%esi,%ecx,1)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xe70fffd,%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0xe84fffd,%eax
add    %al,(%eax)
aam    $0xb8
std
lcall  *-0x461c0000(%esi,%ecx,1)
std
dec    %eax
push   %cs
add    %al,(%eax)
in     $0xba,%al
std
incl   (%eax)
sldt   (%eax)
hlt
mov    $0xf14fffd,%edx
add    %al,(%eax)
add    $0xbb,%al
std
ljmp   *(%eax)
sldt   (%eax)
push   %esp
mov    $0xf4cfffd,%ebx
add    %al,(%eax)
adc    $0xc6,%al
std
call   *0x7400000f(%eax)
(bad)
std
(bad)
mov    $0xa400000f,%eax
(bad)
std
call   *%eax
sldt   (%eax)
(bad)
(bad)
std
(bad)
call   dc070688 <_end+0xd3ff8e48>
(bad)
std
(bad)
cld
sldt   (%eax)
in     $0xc7,%al
std
call   *(%eax)
adc    %al,(%eax)
add    %dh,%ah
(bad)
std
jmp    *(%eax,%edx,1)
add    %al,(%eax)
je     807065a <_IO_stdin_used+0x5496>
std
incl   0x0(%eax,%edx,1)
add    %dh,%ah
enter  $0xfffd,$0x64
adc    %al,(%eax)
add    %al,(%ecx,%ecx,8)
std
(bad)
js     80706b6 <_IO_stdin_used+0x54f2>
add    %al,(%eax)
xor    $0xc9,%al
std
decl   -0x36ac0000(%eax,%edx,1)
std
jmp    *-0x1bfffff0(%eax)
leave
std
dec    %eax
adc    %al,(%eax)
add    %ah,-0x3(%edx,%ecx,8)
(bad)
call   dc0706d9 <_end+0xd3ff8e99>
lret   $0xfffd
sbb    %dl,(%ecx)
add    %al,(%eax)
hlt
lret   $0xfffd
sub    $0x11,%al
add    %al,(%eax)
adc    $0xcb,%al
std
incl   0x11(%eax)
add    %al,(%eax)
in     $0xcb,%al
std
ljmp   *0x0(%ecx,%edx,1)
add    %al,%ah
int3
std
call   *-0x32bc0000(%ecx,%edx,1)
std
pushl  0x64000011(%eax)
int    $0xfd
inc    %esp
adc    %eax,(%eax)
add    %dh,(%esi,%ecx,8)
std
(bad)
in     (%dx),%al
adc    %eax,(%eax)
add    %al,%ah
iret
std
lcall  *(%eax)
adc    (%eax),%al
add    %dl,(%eax,%edx,8)
std
call   *0x0(%edx,%edx,1)
add    %al,-0x3(%eax,%edx,8)
pushl  0x0(%edx,%edx,1)
add    %ah,-0x3(%edx,%edx,8)
jmp    *%esp
adc    (%eax),%al
add    %dl,0x12fcfffd(%edx,%edx,8)
add    %al,(%eax)
adc    $0xd3,%al
std
(bad)
cmp    %dl,(%ebx)
add    %al,(%eax)
xchg   %eax,%esp
sar    %cl,%ebp
pushl  0x0(%ebx,%edx,1)
add    %al,(%esp,%edx,8)
std
(bad)
mov    $0x24000013,%esp
aam    $0xfd
call   *%esp
adc    (%eax),%eax
add    %al,0x1408fffd(,%edx,8)
add    %al,(%eax)
aam    $0xd5
std
(bad)
cmp    $0x14,%al
add    %al,(%eax)
in     $0xd6,%al
std
call   *-0x28bc0000(%esp,%edx,1)
std
dec    %esp
adc    $0x0,%al
add    %dl,0x1510fffd(%edi,%edx,8)
add    %al,(%eax)
add    $0xd8,%al
std
call   *0x0(%ebp,%edx,1)
add    %dl,-0x3(%eax,%ebx,8)
decl   -0x270c0000(%ebp,%edx,1)
std
call   *%esp
adc    $0xd9340000,%eax
std
(bad)
call   7c0707ae <_end+0x73ff8f6e>
fscale
incl   (%eax)
push   %ss
add    %al,(%eax)
in     $0xd9,%al
std
(bad)
cmp    $0x16,%al
add    %al,(%eax)
test   %bl,%dl
std
ljmp   *0x16(%eax)
add    %al,(%eax)
inc    %esp
fdivrp %st,%st(5)
ljmp   *-0x3bffffea(%eax)
fdivrp %st,%st(5)
jmp    *%eax
push   %ss
add    %al,(%eax)
inc    %esp
(bad)
lcall  *(%eax)
pop    %ss
add    %al,(%eax)
test   %bl,%bh
std
(bad)
cmp    %dl,(%edi)
add    %al,(%eax)
mov    $0xe0,%ah
std
(bad)
js     80707ed <_IO_stdin_used+0x5629>
add    %al,(%eax)
(bad)
loopne 80707d8 <_IO_stdin_used+0x5614>
decl   -0x1ecc0000(%edi,%edx,1)
std
pushl  -0x4bffffe9(%eax)
loope  80707e8 <_IO_stdin_used+0x5624>
call   *%esp
pop    %ss
add    %al,(%eax)
push   %esp
loop   80707f0 <_IO_stdin_used+0x562c>
(bad)
cld
pop    %ss
add    %al,(%eax)
mov    $0xe2,%ah
std
lcall  *(%eax,%ebx,1)
add    %al,(%eax)
je     80707e6 <_IO_stdin_used+0x5622>
std
decl   0x18(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
in     $0xfd,%al
jmp    *0x18(%eax)
add    %al,(%eax)
aam    $0xe4
std
(bad)
js     807082e <_IO_stdin_used+0x566a>
add    %al,(%eax)
add    $0xe5,%al
std
call   *0x74000018(%eax)
in     $0xfd,%eax
pushl  -0x19ac0000(%eax,%ebx,1)
std
jmp    *%eax
sbb    %al,(%eax)
add    %dh,0x1904fffd(%esi,%eiz,8)
add    %al,(%eax)
xor    $0xe7,%al
std
ljmp   *(%eax)
sbb    %eax,(%eax)
add    %ah,0x1954fffd(%edi,%eiz,8)
add    %al,(%eax)
(bad)
out    %eax,$0xfd
ljmp   *0x0(%ecx,%ebx,1)
add    %al,0x1998fffd(%eax,%ebp,8)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
call   21b8085b <_end+0x19b0901b>
add    %al,(%eax)
(bad)
call   21d00863 <_end+0x19c89023>
add    %al,(%eax)
add    $0xe9,%al
std
jmp    *%eax
sbb    %eax,(%eax)
add    %dl,%ah
jmp    22140873 <_end+0x1a0c9033>
add    %al,(%eax)
hlt
ljmp   $0x0,$0x1a64fffd
in     $0xeb,%al
std
jmp    *-0x12ac0000(%edx,%ebx,1)
std
(bad)
cld
sbb    (%eax),%al
add    %al,0x1b40fffd(%eax,%esi,8)
add    %al,(%eax)
hlt
lock std
ljmp   *0x1b(%eax)
add    %al,(%eax)
xchg   %eax,%esp
icebp
std
call   *-0xdfc0000(%ebx,%ebx,1)
std
pushl  -0xd9c0000(%ebx,%ebx,1)
std
jmp    *%eax
sbb    (%eax),%eax
add    %ah,-0x3(%ebx,%esi,8)
call   *(%eax)
sbb    $0x0,%al
add    %ah,0x1c3cfffd(%esi,%esi,8)
add    %al,(%eax)
(bad)
idiv   %ebp
jmp    *0x0(%esp,%ebx,1)
add    %dl,(%esi,%edi,8)
std
jmp    *-0x13c0000(%esp,%ebx,1)
std
call   *%eax
sbb    $0x0,%al
add    %dh,0x1cfcfffe(%eax,%eax,1)
add    %al,(%eax)
add    $0x6,%al
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
je     80708f8 <_IO_stdin_used+0x5734>
(bad)
jmp    *0x1d(%eax)
add    %al,(%eax)
mov    $0x6,%ah
(bad)
decl   0x7240000(%ebp,%ebx,1)
(bad)
ljmp   *0x8340000(%ebp,%ebx,1)
(bad)
(bad)
call   cc07092e <_end+0xc3ff90ee>
or     %dh,%bh
ljmp   *(%eax)
push   %ds
add    %al,(%eax)
inc    %esp
adc    %bh,%dh
ljmp   *0x1e(%eax)
add    %al,(%eax)
je     8070932 <_IO_stdin_used+0x576e>
(bad)
decl   0x7400001e(%eax)
pop    %ds
(bad)
jmp    *%esp
push   %ds
add    %al,(%eax)
xchg   %eax,%esp
and    %bh,%dh
call   *(%edi,%ebx,1)
add    %al,(%eax)
add    $0x28,%al
(bad)
lcall  *0x1f(%eax)
add    %al,(%eax)
and    $0x28,%al
(bad)
pushl  0x1f(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sub    %bh,%dh
jmp    *0x400001f(%eax)
sub    %dh,%bh
jmp    *%eax
pop    %ds
add    %al,(%eax)
test   %ch,(%edx)
(bad)
pushl  (%eax,%eiz,1)
add    %al,(%eax)
xchg   %eax,%esp
sub    %esi,%edi
jmp    *0x0(%eax,%eiz,1)
add    %al,%ah
sub    %esi,%edi
incl   -0xbffffe0(%eax)
sub    %esi,%edi
call   *0x2c940000(%eax,%eiz,1)
(bad)
inc    %eax
and    %al,(%eax)
add    %ah,%ah
sub    $0xfe,%al
jmp    *%esp
and    %al,(%eax)
add    %dl,0x2104fffe(,%ebp,1)
add    %al,(%eax)
and    $0x30,%al
(bad)
pushl  (%ecx,%eiz,1)
add    %al,(%eax)
xor    $0x31,%al
(bad)
pushl  0x0(%ecx,%eiz,1)
add    %ah,(%esp,%ebx,2)
(bad)
lcall  *0x5f940000(%ecx,%eiz,1)
(bad)
pushl  -0x3bffffdf(%eax)
pop    %edi
(bad)
call   *%eax
and    %eax,(%eax)
add    %dh,%ah
pop    %edi
(bad)
jmp    *%esp
and    %eax,(%eax)
add    %dl,(%eax,%eiz,2)
(bad)
(bad)
clc
and    %eax,(%eax)
add    %dl,0x2240fffe(%ebx,%ebp,2)
add    %al,(%eax)
fs
insl   (%dx),%es:(%edi)
(bad)
jmp    *0x0(%edx,%eiz,1)
add    %dl,0x22a4fffe(%edx,%esi,2)
add    %al,(%eax)
fs
jae    80709e1 <_IO_stdin_used+0x581d>
(bad)
fsubl  (%edx)
add    %al,(%eax)
hlt
jae    80709e9 <_IO_stdin_used+0x5825>
lcall  *(%eax)
and    (%eax),%eax
add    %ah,%ah
ja     80709f1 <_IO_stdin_used+0x582d>
lcall  *0x23(%eax)
add    %al,(%eax)
add    $0x78,%al
(bad)
pushl  0x23(%eax)
add    %al,(%eax)
and    $0x78,%al
(bad)
decl   0x54000023(%eax)
js     8070a09 <_IO_stdin_used+0x5845>
lcall  *0x78a40000(%ebx,%eiz,1)
(bad)
(bad)
mov    $0xb4000023,%esp
jns    8070a19 <_IO_stdin_used+0x5855>
incl   (%esp)
add    %al,(%eax)
push   %esp
jp     8070a21 <_IO_stdin_used+0x585d>
(bad)
cmp    $0x24,%al
add    %al,(%eax)
les    -0x2(%edx),%edi
pushl  0x24(%eax)
add    %al,(%eax)
in     $0x7a,%al
(bad)
decl   -0x1bffffdc(%eax)
jnp    8070a39 <_IO_stdin_used+0x5875>
dec    %eax
and    $0x0,%al
add    %al,(%esp,%edi,2)
(bad)
jmp    *%eax
and    $0x0,%al
add    %ah,0x2520fffe(%ebp,%edi,2)
add    %al,(%eax)
aam    $0x7d
(bad)
(bad)
cmp    %ah,0x80540000
(bad)
(bad)
js     8070a83 <_IO_stdin_used+0x58bf>
add    %al,(%eax)
test   %al,0x2590fffe(%eax)
add    %al,(%eax)
xor    $0x81,%al
(bad)
(bad)
mov    $0x94000025,%eax
cmp    $0x25d8ff,%esi
add    %ah,0x2608fffe(%edx,%eax,4)
add    %al,(%eax)
les    0x2620fffe(%edx),%eax
add    %al,(%eax)
in     $0x82,%al
(bad)
(bad)
cmp    %ah,(%esi)
add    %al,(%eax)
and    $0x84,%al
(bad)
ljmp   *0x26(%eax)
add    %al,(%eax)
inc    %esp
test   %bh,%dh
incl   0x64000026(%eax)
test   %bh,%dh
lcall  *-0xbffffda(%eax)
test   %bh,%dh
dec    %eax
add    %al,%es:(%eax)
je     8070a37 <_IO_stdin_used+0x5873>
(bad)
(bad)
clc
add    %al,%es:(%eax)
test   %al,0x270cfffe(%ebp)
add    %al,(%eax)
in     $0x85,%al
(bad)
(bad)
cmp    %ah,(%edi)
add    %al,(%eax)
inc    %esp
xchg   %bh,%dh
lcall  *0x27(%eax)
add    %al,(%eax)
fs
xchg   %bh,%dh
ljmp   *0x0(%edi,%eiz,1)
add    %al,0x2780fffe(%esi,%eax,4)
add    %al,(%eax)
les    0x27a0fffe(%esi),%eax
add    %al,(%eax)
adc    $0x87,%al
(bad)
call   *%esp
daa
add    %al,(%eax)
push   %esp
xchg   %edi,%esi
(bad)
clc
daa
add    %al,(%eax)
test   %al,0x280cfffe(%edi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    %bh,%dh
(bad)
cmp    %ch,(%eax)
add    %al,(%eax)
add    $0x8a,%al
(bad)
(bad)
js     8070b36 <_IO_stdin_used+0x5972>
add    %al,(%eax)
hlt
mov    %?,%esi
call   *%eax
sub    %al,(%eax)
add    %dh,%ah
mov    %esi,%?
ljmp   *(%eax)
sub    %eax,(%eax)
add    %al,-0x2(%edi,%ecx,4)
incl   0x29(%eax)
add    %al,(%eax)
fs
(bad)
(bad)
call   *0x0(%ecx,%ebp,1)
add    %ah,0x2974fffe(%edi,%ecx,4)
add    %al,(%eax)
les    0x2988fffe(%edi),%ecx
add    %al,(%eax)
hlt
(bad)
(bad)
jmp    *0x74000029(%eax)
nop
(bad)
pushl  -0x6ddc0000(%ecx,%ebp,1)
(bad)
jmp    *%esp
sub    %eax,(%eax)
add    %dl,(%ebx,%edx,4)
(bad)
incl   (%eax)
sub    (%eax),%al
add    %al,-0x2(%ebx,%edx,4)
call   *(%edx,%ebp,1)
add    %al,(%eax)
add    $0x95,%al
(bad)
(bad)
cmp    $0x2a,%al
add    %al,(%eax)
xor    $0x95,%al
(bad)
call   *0x0(%edx,%ebp,1)
add    %ah,-0x2(%ebp,%edx,4)
ljmp   *0x0(%edx,%ebp,1)
add    %al,0x2a80fffe(%ebp,%edx,4)
add    %al,(%eax)
xchg   %eax,%esp
xchg   %eax,%esi
(bad)
ljmp   *0x1400002a(%eax)
popf
(bad)
inc    %esp
sub    (%eax),%al
add    %dl,-0x2(%esi,%ebx,4)
jmp    *%eax
sub    (%eax),%al
add    %ah,-0x2(%esi,%ebx,4)
push   %esp
sub    (%eax),%al
add    %dh,-0x2(%esi,%ebx,4)
decl   (%eax)
sub    (%eax),%eax
add    %ah,0x2b20fffe(%esi,%ebx,4)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lahf
(bad)
(bad)
cmp    %ch,(%ebx)
add    %al,(%eax)
mov    %fs:0x2b54fffe,%al
add    %al,(%eax)
xchg   %eax,%esp
mov    0x2b6cfffe,%al
add    %al,(%eax)
add    $0xa1,%al
(bad)
call   *0x6400002b(%eax)
mov    %al,0x2bbcfffe
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    %eax,0x2bf4fffe
add    %al,(%eax)
adc    $0xa4,%al
(bad)
lcall  *(%eax)
sub    $0x0,%al
add    %dh,-0x2(%esp,%eiz,4)
(bad)
cmp    $0x2c,%al
add    %al,(%eax)
aam    $0xa4
(bad)
jmp    *0x2c(%eax)
add    %al,(%eax)
xor    $0xa5,%al
(bad)
incl   -0x5a6c0000(%esp,%ebp,1)
(bad)
ljmp   *-0x3bffffd4(%eax)
movsl  %ds:(%esi),%es:(%edi)
(bad)
inc    %eax
sub    $0x0,%al
add    %dh,0x2ce4fffe(%esi,%eiz,4)
add    %al,(%eax)
in     $0xa6,%al
(bad)
(bad)
cld
sub    $0x0,%al
add    %dl,(%eax,%ebp,4)
(bad)
jmp    *(%eax)
sub    $0xa9140000,%eax
(bad)
(bad)
cmp    $0x2d,%al
add    %al,(%eax)
inc    %esp
test   $0x2d54fffe,%eax
add    %al,(%eax)
je     8070beb <_IO_stdin_used+0x5a27>
(bad)
ljmp   *0x0(%ebp,%ebp,1)
add    %dh,0x2dc4fffe(%ebx,%ebp,4)
add    %al,(%eax)
hlt
stos   %eax,%es:(%edi)
(bad)
push   %eax
sub    $0xae640000,%eax
(bad)
pushl  (%eax)
add    %al,%cs:(%eax)
test   %dh,0x2e88fffe(%ecx)
add    %al,(%eax)
add    $0xb5,%al
(bad)
incl   (%edi,%ebp,1)
add    %al,(%eax)
and    $0xb5,%al
(bad)
lcall  *(%edi,%ebp,1)
add    %al,(%eax)
mov    $0xb5,%ah
(bad)
(bad)
cmp    $0x2f,%al
add    %al,(%eax)
add    $0xb6,%al
(bad)
jmp    *0x0(%edi,%ebp,1)
add    %dh,-0x2(%esi,%esi,4)
call   *-0x47fc0000(%edi,%ebp,1)
(bad)
dec    %esp
das
add    %al,(%eax)
je     8070c52 <_IO_stdin_used+0x5a8e>
(bad)
(bad)
call   4c070cd0 <_end+0x43ff9490>
mov    $0x3010fffe,%ecx
add    %al,(%eax)
in     $0xba,%al
(bad)
jmp    *0x0(%eax,%esi,1)
add    %ah,-0x2(%ebx,%edi,4)
lcall  *0x4000030(%eax)
mov    $0x30c0fffe,%esp
add    %al,(%eax)
push   %esp
mov    $0x3108fffe,%esi
add    %al,(%eax)
hlt
mov    $0x3148fffe,%edi
add    %al,(%eax)
and    $0xc1,%al
(bad)
lcall  *-0x3e5c0000(%ecx,%esi,1)
(bad)
inc    %esp
xor    %eax,(%eax)
add    %dl,(%edx,%eax,8)
(bad)
(bad)
call   3c070d1a <_end+0x33ff94da>
ret    $0xfffe
add    %dh,(%edx)
add    %al,(%eax)
test   %al,%dl
(bad)
jmp    *(%edx,%esi,1)
add    %al,(%eax)
and    $0xc3,%al
(bad)
decl   0x32(%eax)
add    %al,(%eax)
inc    %esp
(bad)
(bad)
pushl  0x0(%edx,%esi,1)
add    %ah,-0x2(%esp,%eax,8)
call   *-0x36cc0000(%edx,%esi,1)
(bad)
(bad)
in     (%dx),%al
xor    (%eax),%al
add    %ah,(%esi,%ecx,8)
(bad)
ljmp   *(%ebx,%esi,1)
add    %al,(%eax)
aam    $0xcf
(bad)
ljmp   *0x0(%ebx,%esi,1)
add    %dh,%ah
iret
(bad)
incl   -0x6bffffcd(%eax)
aam    $0xfe
inc    %esp
xor    (%eax),%eax
add    %al,0x33e8fffe(%ebp,%edx,8)
add    %al,(%eax)
in     $0xd5,%al
(bad)
call   *(%esp,%esi,1)
add    %al,(%eax)
je     8070d20 <_IO_stdin_used+0x5b5c>
(bad)
incl   0x0(%esp,%esi,1)
add    %dh,%ah
(bad)
(bad)
(bad)
jl     8070d8a <_IO_stdin_used+0x5bc6>
add    %al,(%eax)
(bad)
xlat   %ds:(%ebx)
(bad)
jmp    *-0x25fc0000(%esp,%esi,1)
(bad)
call   *(%eax)
xor    $0xda240000,%eax
(bad)
jmp    *-0x23ec0000(,%esi,1)
(bad)
(bad)
mov    $0x44000035,%esp
(bad)
incl   0x36(%eax)
add    %al,(%eax)
fs
fdivrp %st,%st(6)
jmp    *0x0(%esi,%esi,1)
add    %dh,0x36bcfffe(%ecx,%eiz,8)
add    %al,(%eax)
mov    $0xe2,%ah
(bad)
incl   (%edi,%esi,1)
add    %al,(%eax)
mov    $0xea,%ah
(bad)
incl   0x0(%edi,%esi,1)
add    %ah,(%esp,%ebp,8)
(bad)
decl   -0x109c0000(%edi,%esi,1)
(bad)
dec    %esp
aaa
add    %al,(%eax)
push   %esp
lock (bad)
push   %esp
aaa
add    %al,(%eax)
test   %dh,%al
(bad)
decl   (%eax,%edi,1)
add    %al,(%eax)
push   %esp
icebp
(bad)
pushl  (%eax)
cmp    %al,(%eax)
add    %dh,-0x2(%ecx,%esi,8)
decl   0x38(%eax)
add    %al,(%eax)
aam    $0xf1
(bad)
ljmp   *0x38(%eax)
add    %al,(%eax)
in     $0xf4,%al
(bad)
(bad)
fdivrs (%eax)
add    %al,(%eax)
hlt
hlt
(bad)
(bad)
in     (%dx),%al
cmp    %al,(%eax)
add    %ah,0x3920fffe(%esi,%esi,8)
add    %al,(%eax)
(bad)
idiv   %esi
jmp    *0x39(%eax)
add    %al,(%eax)
(bad)
clc
(bad)
call   *0x4000039(%eax)
(bad)
(bad)
(bad)
call   fc070e42 <_end+0xf3ff9602>
(bad)
(bad)
incl   0x3a(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %edi,%edi
lcall  *-0x4bffffc6(%eax)
add    %edi,%edi
ljmp   *0x2340000(%edx,%edi,1)
(bad)
call   *%eax
cmp    (%eax),%al
add    %dh,-0x1(%edx,%eax,1)
jmp    *%esp
cmp    (%eax),%al
add    %ah,%ah
add    %bh,%bh
(bad)
cmp    %bh,(%ebx)
add    %al,(%eax)
xor    $0x4,%al
(bad)
(bad)
js     8070e79 <_IO_stdin_used+0x5cb5>
add    %al,(%eax)
aam    $0x6
(bad)
jmp    *0x400003b(%eax)
or     %edi,%edi
jmp    *%eax
cmp    (%eax),%eax
add    %dl,0x3c20ffff(%ebx,%ecx,1)
add    %al,(%eax)
adc    $0xc,%al
(bad)
incl   0x3c(%eax)
add    %al,(%eax)
fs
or     $0xff,%al
lcall  *0x3c(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %edi,%edi
dec    %eax
cmp    $0x0,%al
add    %al,%ah
adc    %edi,%edi
(bad)
fdivrl (%eax,%eax,1)
add    %ah,%ah
adc    %edi,%edi
push   %eax
cmp    $0x0,%al
add    %dh,(%ebx,%edx,1)
(bad)
decl   0x3d(%eax)
add    %al,(%eax)
je     8070e9d <_IO_stdin_used+0x5cd9>
(bad)
ljmp   *0x3d(%eax)
add    %al,(%eax)
add    $0x14,%al
(bad)
decl   -0x2bffffc3(%eax)
adc    $0xff,%al
pushl  0x15c40000(%ebp,%edi,1)
(bad)
(bad)
fdivrs 0x16e40000
(bad)
decl   (%eax)
add    %al,%ds:(%eax)
aam    $0x1c
(bad)
jmp    *0x3e(%eax)
add    %al,(%eax)
push   %esp
pop    %ds
(bad)
call   *0x1f640000(%esi,%edi,1)
(bad)
ljmp   *0x5400003e(%eax)
and    %edi,%edi
incl   (%eax)
aas
add    %al,(%eax)
fs
and    $0xff,%al
incl   0x3f(%eax)
add    %al,(%eax)
hlt
es
(bad)
pushl  0x0(%edi,%edi,1)
add    %dl,0x3fb4ffff(%ecx,%ebp,1)
add    %al,(%eax)
les    (%ecx),%ebp
(bad)
call   *%esp
aas
add    %al,(%eax)
xor    $0x2a,%al
(bad)
call   *(%eax)
inc    %eax
add    %al,(%eax)
fs
cs
(bad)
(bad)
cmp    $0x40,%al
add    %al,(%eax)
and    $0x30,%al
(bad)
(bad)
jl     8070f46 <_IO_stdin_used+0x5d82>
add    %al,(%eax)
hlt
xor    $0xff,%al
(bad)
in     (%dx),%al
inc    %eax
add    %al,(%eax)
xchg   %eax,%esp
cmp    %bh,%bh
incl   0x0(%ecx,%eax,2)
add    %dh,0x415cffff(%eax,%edi,1)
add    %al,(%eax)
aam    $0x38
(bad)
pushl  0x0(%ecx,%eax,2)
add    %dl,-0x1(%esp,%edi,1)
dec    %esp
inc    %ecx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    $0xff,%al
jmp    *%esp
inc    %ecx
add    %al,(%eax)
in     $0x3c,%al
(bad)
call   *(%eax)
inc    %edx
add    %al,(%eax)
adc    $0x3d,%al
(bad)
ljmp   *(%eax)
inc    %edx
add    %al,(%eax)
hlt
cmp    $0x4258ffff,%eax
add    %al,(%eax)
xor    $0x3e,%al
(bad)
(bad)
js     8070f98 <_IO_stdin_used+0x5dd4>
add    %al,(%eax)
hlt
aas
(bad)
(bad)
mov    $0x74000042,%eax
inc    %ecx
(bad)
incl   (%ebx,%eax,2)
add    %al,(%eax)
push   %esp
dec    %ecx
(bad)
lcall  *0x0(%ebx,%eax,2)
add    %dh,-0x1(%ecx,%ecx,2)
pushl  0x0(%ebx,%eax,2)
add    %dl,0x438cffff(%ecx,%ecx,2)
add    %al,(%eax)
mov    $0x4d,%ah
(bad)
call   *%eax
inc    %ebx
add    %al,(%eax)
push   %esp
push   %ebx
(bad)
(bad)
cld
inc    %ebx
add    %al,(%eax)
xchg   %eax,%esp
push   %edi
(bad)
ljmp   *0x0(%esp,%eax,2)
add    %al,%ah
pop    %ecx
(bad)
inc    %esp
inc    %esp
add    %al,(%eax)
je     8070ffd <_IO_stdin_used+0x5e39>
(bad)
incl   0x5c440000(,%eax,2)
(bad)
pushl  0x5c740000(,%eax,2)
(bad)
call   *0x45(%eax)
add    %al,(%eax)
in     $0x5c,%al
(bad)
pushl  0x0(%ebp,%eax,2)
add    %dl,0x4588ffff(,%ebx,2)
add    %al,(%eax)
inc    %esp
pop    %ebp
(bad)
lcall  *0x5dc40000(%ebp,%eax,2)
(bad)
(bad)
mov    $0xd4000045,%esp
pop    %ebp
(bad)
call   *%eax
inc    %ebp
add    %al,(%eax)
test   %bl,-0x1(%edi)
incl   0x46(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %edi
(bad)
jmp    *0x46(%eax)
add    %al,(%eax)
adc    $0x60,%al
(bad)
decl   0x14000046(%eax)
popa
(bad)
pushl  0x61840000(%esi,%eax,2)
(bad)
(bad)
faddl  0x0(%esi)
add    %al,%ah
popa
(bad)
(bad)
cld
inc    %esi
add    %al,(%eax)
add    $0x62,%al
(bad)
lcall  *(%edi,%eax,2)
add    %al,(%eax)
fs
(bad)
(bad)
incl   0x47(%eax)
add    %al,(%eax)
push   %esp
arpl   %di,%di
ljmp   *0x0(%edi,%eax,2)
add    %dl,0x4790ffff(%ebx,%eiz,2)
add    %al,(%eax)
hlt
arpl   %di,%di
pushl  0x64140000(%edi,%eax,2)
(bad)
dec    %esp
inc    %edi
add    %al,(%eax)
push   %esp
fs
(bad)
push   %eax
inc    %edi
add    %al,(%eax)
mov    $0x64,%ah
(bad)
ljmp   *(%eax,%ecx,2)
add    %al,(%eax)
adc    $0x65,%al
(bad)
jmp    *0x48(%eax)
add    %al,(%eax)
xor    $0x65,%al
(bad)
(bad)
js     80710a6 <_IO_stdin_used+0x5ee2>
add    %al,(%eax)
push   %esp
gs
(bad)
call   *-0x3bffffb8(%eax)
gs
(bad)
pushl  0x66040000(%eax,%ecx,2)
(bad)
dec    %esp
dec    %eax
add    %al,(%eax)
xchg   %eax,%esp
data16
(bad)
(bad)
cld
dec    %eax
add    %al,(%eax)
hlt
data16
(bad)
pushl  (%eax)
dec    %ecx
add    %al,(%eax)
xor    $0x67,%al
(bad)
incl   0x0(%ecx,%ecx,2)
add    %ah,-0x1(%eax,%ebp,2)
ljmp   *0x0(%ecx,%ecx,2)
add    %dh,-0x1(%eax,%ebp,2)
incl   0x34000049(%eax)
imul   $0x49a8ff,%edi,%edi
add    %dl,0x49ccffff(%ecx,%ebp,2)
add    %al,(%eax)
xchg   %eax,%esp
push   $0xffffffff
(bad)
clc
dec    %ecx
add    %al,(%eax)
push   %esp
imul   $0xffffffff,%edi,%edi
inc    %eax
dec    %edx
add    %al,(%eax)
aam    $0x6e
(bad)
jmp    *0x0(%ebx,%ecx,2)
add    %ah,0x4b78ffff(%edi,%ebp,2)
add    %al,(%eax)
push   %esp
jo     80710d2 <_IO_stdin_used+0x5f0e>
jmp    *0x6400004b(%eax)
jno    80710da <_IO_stdin_used+0x5f16>
(bad)
mov    $0xc400004b,%esp
jno    80710e2 <_IO_stdin_used+0x5f1e>
call   *%eax
dec    %ebx
add    %al,(%eax)
inc    %esp
jb     80710ea <_IO_stdin_used+0x5f26>
incl   (%eax)
dec    %esp
add    %al,(%eax)
je     8071166 <_IO_stdin_used+0x5fa2>
(bad)
ljmp   *(%esp,%ecx,2)
add    %al,(%eax)
les    -0x1(%edi,%edi,8),%esi
push   %eax
dec    %esp
add    %al,(%eax)
adc    $0x75,%al
(bad)
(bad)
jl     8071152 <_IO_stdin_used+0x5f8e>
add    %al,(%eax)
inc    %esp
jne    807110a <_IO_stdin_used+0x5f46>
call   *0x75840000(%esp,%ecx,2)
(bad)
ljmp   *0x75d40000(%esp,%ecx,2)
(bad)
dec    %esp
dec    %esp
add    %al,(%eax)
add    $0x76,%al
(bad)
jmp    *%esp
dec    %esp
add    %al,(%eax)
je     80711a0 <_IO_stdin_used+0x5fdc>
(bad)
(bad)
cld
dec    %esp
add    %al,(%eax)
fs
jnp    8071132 <_IO_stdin_used+0x5f6e>
call   *0x0(%ebp,%ecx,2)
add    %ah,-0x1(%esp,%edi,2)
decl   -0x4bffffb3(%eax)
jge    8071142 <_IO_stdin_used+0x5f7e>
push   %esp
dec    %ebp
add    %al,(%eax)
xor    $0x7f,%al
(bad)
decl   0x4e(%eax)
add    %al,(%eax)
inc    %esp
cmp    $0x4e9cff,%edi
add    %dl,0x4ed4ffff(%edx,%eax,4)
add    %al,(%eax)
xor    $0x83,%al
(bad)
incl   (%edi,%ecx,2)
add    %al,(%eax)
les    0x4f34ffff(%ebx),%eax
add    %al,(%eax)
xor    $0x89,%al
(bad)
pushl  0x0(%edi,%ecx,2)
add    %dh,0x4f98ffff(%ecx,%ecx,4)
add    %al,(%eax)
hlt
mov    %edi,%?
(bad)
fmuls  0x0(%edi)
add    %ah,(%edi,%ecx,4)
(bad)
push   %eax
dec    %edi
add    %al,(%eax)
je     8071121 <_IO_stdin_used+0x5f5d>
(bad)
decl   (%eax)
push   %eax
add    %al,(%eax)
les    0x504cffff(%edi),%ecx
add    %al,(%eax)
inc    %esp
lcall  $0x0,$0x5090ffff
aam    $0x9c
(bad)
(bad)
call   2c071201 <_end+0x23ff99c1>
popf
(bad)
decl   (%eax)
push   %ecx
add    %al,(%eax)
je     8071157 <_IO_stdin_used+0x5f93>
(bad)
ljmp   *(%eax)
push   %ecx
add    %al,(%eax)
and    $0x9e,%al
(bad)
pushl  0x0(%ecx,%edx,2)
add    %dl,-0x1(%ecx,%eiz,4)
dec    %esp
push   %ecx
add    %al,(%eax)
hlt
mov    0x51fcffff,%eax
add    %al,(%eax)
in     $0xa2,%al
(bad)
ljmp   *(%edx,%edx,2)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
movsb  %ds:(%esi),%es:(%edi)
(bad)
incl   -0x5b3c0000(%edx,%edx,2)
(bad)
lcall  *-0x5b0c0000(%edx,%edx,2)
(bad)
pushl  -0x5aec0000(%edx,%edx,2)
(bad)
dec    %esp
push   %edx
add    %al,(%eax)
cmpsb  %es:(%edi),%fs:(%esi)
(bad)
decl   (%ebx,%edx,2)
add    %al,(%eax)
test   %ah,0x5324ffff(%esi)
add    %al,(%eax)
mov    $0xa6,%ah
(bad)
(bad)
cmp    $0x53,%al
add    %al,(%eax)
in     $0xa6,%al
(bad)
call   *0x0(%ebx,%edx,2)
add    %al,(%eax,%ebp,4)
(bad)
incl   0x64000053(%eax)
stos   %eax,%es:(%edi)
(bad)
inc    %esp
push   %ebx
add    %al,(%eax)
aam    $0xab
(bad)
incl   (%eax)
push   %esp
add    %al,(%eax)
(bad)
stos   %eax,%es:(%edi)
(bad)
call   *(%esp,%edx,2)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8071257 <_IO_stdin_used+0x6093>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
mov    %bh,%ch
call   *%eax
or     %eax,(%eax)
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8071277 <_IO_stdin_used+0x60b3>
js     8071275 <_IO_stdin_used+0x60b1>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x1dfffd9d,%esp
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
mov    $0x140e0a04,%ecx
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
cwtl
mov    %al,0x207fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd9,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %ch,-0x5c(%eax)
std
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0x3(%ebx,%eax,4)
xchg   %al,(%edx)
jp     8071325 <_IO_stdin_used+0x6161>
mov    $0xe,%bl
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,%al
add    %al,(%eax)
add    %ah,-0x3(%ebp,%eiz,4)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d300e43
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,(%ecx,%eax,1)
add    %al,(%eax)
jo     8071327 <_IO_stdin_used+0x6163>
std
(bad)
fild   (%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x29,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
or     (%ecx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,-0x57200000(%ecx,%eax,1)
std
decl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%ecx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
sbb    $0xaa,%al
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x2,%al
add    %al,(%eax)
sbb    %ch,0x21fffd(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%ecx)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sub    $0x2,%al
add    %al,(%eax)
xor    %ch,0x10dfffd(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%dh
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
mov    (%esi),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    $0xab,%al
std
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x23fffffe(%eax)
stos   %eax,%es:(%edi)
std
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x54280000(%edx,%eax,1)
std
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,-0x2bfffffe(%eax)
stos   %eax,%es:(%edi)
std
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
std
(bad)
mov    $0xa,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e46
mov    $0x140e0a02,%esi
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
and    %al,(%ebx)
add    %al,(%eax)
jl     807151c <_IO_stdin_used+0x6358>
std
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x6ff1b9fe(%ebx)
add    %eax,(%ebx)
adc    %eax,(%ecx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %dh,0x23fffd(%edi,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
add    (%eax),%eax
add    %cl,%ah
mov    $0xfd,%bh
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
js     80715bd <_IO_stdin_used+0x63f9>
add    %al,(%eax)
aam    $0xb7
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x48300000(%ebx,%eax,1)
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x33fffffd(%eax)
mov    $0xfd,%bh
decl   0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
enter  $0xfdb7,$0xff
jl     80715fe <_IO_stdin_used+0x643a>
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xa(%esi)
push   %cs
add    $0x4f,%al
or     0xa(%ebp),%esi
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
aam    $0x3
add    %al,(%eax)
sub    %bh,0x74fffd(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%esi
push   %cs
add    $0x43,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%eax
add    %cl,0x9fffdb8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    $0x0,%al
add    %al,0x24fffd(%eax,%edi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0x4,%al
add    %al,(%eax)
mov    0x16fffdb8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
xor    %al,(%eax,%eax,1)
add    %ch,0x81fffd(%eax,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
add    $0x49,%al
or     0xe(%edx,%ecx,1),%ecx
add    $0x44,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
add    $0x0,%al
add    %dl,(%ecx,%edi,4)
std
(bad)
jl     80716a2 <_IO_stdin_used+0x64de>
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xa(%esi)
push   %cs
add    $0x4f,%al
or     0xa(%ebp),%esi
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
js     80716be <_IO_stdin_used+0x64fa>
add    %al,(%eax)
je     8071677 <_IO_stdin_used+0x64b3>
std
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x3(%ebx,%eax,4)
dec    %eax
xchg   %al,(%edx)
popa
or     %dh,%al
ret
push   %cs
add    $0x48,%al
or     0xa(%edi),%ecx
mov    $0xe,%bl
add    $0x49,%al
or     -0x3d(%eax),%edx
(bad)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   $0x4,%al
add    %al,(%eax)
mov    $0xb9,%ah
std
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x46400000(%esp,%eax,1)
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,%al
add    $0x0,%al
add    %cl,%ah
mov    $0xc1fffd,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%ebx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
cld
add    $0x0,%al
add    %dh,-0x46(%eax)
std
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %cl,-0x7d(%ebx)
add    -0x7a(%eax),%ecx
add    0xa(%edx),%ah
mov    $0xe,%bl
add    $0x48,%al
or     (%edx),%eax
popf
ret
(bad)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ah,-0x44d80000(,%eax,1)
std
(bad)
jl     807176e <_IO_stdin_used+0x65aa>
add    %al,(%eax)
add    %dl,0xe(%ebx)
xor    %dh,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
mov    %?,0x15fffd(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
push   %esp
add    $0xbb980000,%eax
std
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,-0x7a(%ebx)
add    -0x7d(%eax),%cl
add    (%edx),%eax
jb     80717b7 <_IO_stdin_used+0x65f3>
ret
(bad)
push   %cs
add    $0x48,%al
or     -0x3a(%ecx),%esi
ret
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,0x0(%ebp,%eax,1)
add    %al,-0x44(%eax)
std
decl   0x1(%esi)
inc    %ebx
push   %cs
inc    %eax
dec    %ebx
xchg   %al,(%eax,%ecx,2)
xchg   %eax,(%ebx)
dec    %eax
test   %eax,(%edx)
dec    %eax
addl   $0xffffffc7,0xc50a4302
mov    $0xe,%bl
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
test   $0x5,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x47fffd,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x79300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
in     $0x5,%al
add    %al,(%eax)
mov    $0x2dfffdbd,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %al,(%esi,%eax,1)
add    %al,(%eax)
enter  $0xfdbd,$0xff
adc    (%edx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
je     80718bc <_IO_stdin_used+0x66f8>
add    %al,(%eax)
js     8071879 <_IO_stdin_used+0x66b5>
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    %es,(%esi)
add    %al,(%eax)
nop
mov    $0x72fffd,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,%al
push   %es
add    %al,(%eax)
aam    $0xbf
std
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,(%edi,%eax,1)
add    %al,(%eax)
sbb    %al,%al
std
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
dec    %esp
pop    %es
add    %al,(%eax)
inc    %eax
sar    $0xff,%ch
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
fs
pop    %es
add    %al,(%eax)
dec    %eax
sar    $0xff,%ch
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
dec    %ebx
addl   $0xffffff85,0x48048648
add    -0x79(%eax),%cl
add    0xa(%edi),%ebx
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x43,%al
or     0xa(%edi),%ebx
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x49,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,-0xbfffff9(%eax)
sar    $0xff,%ch
movl   $0x43000000,(%eax)
push   %cs
xor    %cl,-0x7d(%ebx)
add    $0x4c028548,%eax
xchg   %al,(%edi,%eax,4)
add    0xa(%ebp),%ebx
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x41,%al
or     0xa(%ebx),%ebx
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,%ah
pop    %es
add    %al,(%eax)
nop
sar    $0xff,%ebp
or     %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
cmpsl  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
and    $0x8,%al
add    %al,(%eax)
dec    %eax
ret    $0xfffd
pop    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xc(%esi,%ecx,1),%ebp
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,0x0(%eax,%ecx,1)
add    %dh,-0x3e(%eax)
std
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jae    8071ac7 <_IO_stdin_used+0x6903>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,0x7c000008(%eax)
ret    $0xfffd
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
arpl   %cx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ah,%ah
or     %al,(%eax)
add    %ch,0x48fffdc2(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xa(%esi)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bl,(%ecx,%ecx,1)
add    %al,(%eax)
rol    $0xfd,%dl
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edi),%eax
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx,%ecx,1)
add    %bl,(%eax)
ret
std
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
js     8071bc3 <_IO_stdin_used+0x69ff>
add    %al,(%eax)
inc    %esp
ret
std
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %ah,0xe(%ebp)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
nop
or     %eax,(%eax)
add    %ch,-0x3(%ebx,%eax,8)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %edi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4f02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
int3
or     %eax,(%eax)
add    %ah,-0x6200023d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
clc
or     %eax,(%eax)
add    %dl,(%esp,%eax,8)
std
pushl  0x3(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%edx)
add    %al,(%eax)
xchg   %eax,%esp
(bad)
std
(bad)
js     8071c82 <_IO_stdin_used+0x6abe>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,0xa(%eax)
add    %al,(%eax)
fadd   %st,%st(7)
std
(bad)
js     8071cba <_IO_stdin_used+0x6af6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x2400000a(%eax)
enter  $0xfffd,$0x40
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x3(%ebx,%eax,4)
dec    %eax
xchg   %al,(%edx)
jo     8071cc6 <_IO_stdin_used+0x6b02>
ret
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
enter  $0xa,$0x0
inc    %esp
enter  $0xfffd,$0x29
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
or     %cl,(%ebx)
add    %al,(%eax)
xor    $0xc9,%al
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%ebx,%ecx,1)
add    %al,(%eax)
xor    %cl,%cl
std
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %al,0xb(%eax)
add    %al,(%eax)
jl     8071d4f <_IO_stdin_used+0x6b8b>
std
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
add    0xe(%ecx),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
or     %fs:(%eax),%eax
add    %bl,%al
leave
std
jmp    *0x0(%eax)
inc    %ebx
push   %cs
xor    %al,0x2(%esi,%eax,4)
dec    %edx
addl   $0x2,(%ebx)
pop    %ebp
or     %dh,%al
ret
push   %cs
add    $0x42,%al
or     -0x3d(%edi),%ebp
(bad)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,-0x35b00000(%ebx,%ecx,1)
std
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,0x3(%ebx,%eax,4)
dec    %edx
xchg   %al,(%edx)
add    -0x3a(%edx),%al
ret
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,-0x35700000(%ebx,%ecx,1)
std
(bad)
mov    $0x1,%edi
inc    %ebx
push   %cs
inc    %eax
push   %edi
addl   $0x4,0x86520285
xchg   %eax,(%ebx)
add    0xc7c50a01,%esi
mov    $0xe,%bl
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
fmuls  (%ebx)
add    %al,(%eax)
and    $0xcc,%al
std
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock or (%eax),%eax
add    %bh,(%esp,%ecx,8)
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %cl,(%eax,%eax,1)
add    %dl,-0x3(%esp,%ecx,8)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
and    %cl,(%eax,%eax,1)
add    %ch,-0x3(%esp,%ecx,8)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %cl,0xe(%ebx)
or     %al,0x200e4302(%ebx)
add    0xe(%edi),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
inc    %esp
or     $0x0,%al
add    %bh,-0x28000234(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
push   %cs
nop
add    %edx,-0x7a(%edx)
add    $0x83,%al
add    $0x8503875b,%eax
add    (%edx),%al
mov    (%edx),%cl
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x43,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0xc(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
int    $0xfd
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebp),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     $0x0,%al
add    %ch,0x7dfffdcd(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xe(%edi),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x400000c,%eax
into
std
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jbe    8071f19 <_IO_stdin_used+0x6d55>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0xc,%al
add    %al,(%eax)
dec    %eax
into
std
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0x4(%esi,%ecx,1)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,%ah
or     $0x0,%al
add    %dl,-0x32(%eax)
std
pushl  0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%esi),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,(%eax)
or     $0xcee40000,%eax
std
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
or     $0xceec0000,%eax
std
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
or     $0xcef40000,%eax
std
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %dl,0xe(%eax)
and    %bl,0xe(%ebp)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
jo     8071fbf <_IO_stdin_used+0x6dfb>
add    %al,(%eax)
sbb    $0xcf,%al
std
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7d(%ebx)
add    $0x48048648,%eax
xchg   %eax,(%ebx)
dec    %eax
test   %eax,(%edx)
add    0xa(%edx),%bh
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,-0x30400000(%ebp,%ecx,1)
std
lcall  *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
iret
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
or     $0xd0880000,%eax
std
jmp    *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x40c00e46
rorl   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%esi,%ecx,1)
add    %al,(%eax)
cmp    %dl,%cl
std
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5c400e43
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
repnz or (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x2db00000(%esi,%ecx,1)
std
ljmp   *(%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
or     %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
rorb   (%esi)
add    %al,(%eax)
cmp    $0xd5,%al
std
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %cl,0xe(%edx)
or     %al,0x200e4302(%ebx)
jg     8072135 <_IO_stdin_used+0x6f71>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
push   %cs
and    %al,0x2(%ebx)
sub    %al,(%eax)
add    %al,(%eax)
clc
push   %cs
add    %al,(%eax)
test   %dl,%ch
std
call   *0x43000000(%eax,%eax,1)
push   %cs
xor    %cl,-0x7a(%edx)
add    $0x46,%al
xchg   %eax,(%ebx)
dec    %esi
addl   $0xa,0x5a020285
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    $0xf,%al
add    %al,(%eax)
clc
aad    $0xfd
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
push   %cs
and    %ah,0xe(%ecx)
add    $0x43,%al
push   %cs
and    %dh,0xa(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x0(%edi,%ecx,1)
add    %cl,-0x2a(%eax)
std
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     80721a5 <_IO_stdin_used+0x6fe1>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
jo     80721c1 <_IO_stdin_used+0x6ffd>
add    %al,(%eax)
jl     807218c <_IO_stdin_used+0x6fc8>
std
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    0x4c00000f,%al
xlat   %ds:(%ebx)
std
pushl  (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %esi
push   %cs
lock add %eax,-0x79(%edi)
add    -0x7d(%ebp),%edx
add    $0x854b0486,%eax
add    (%ebx),%al
push   %cs
add    %ecx,(%edx)
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x45,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
int3
sldt   (%eax)
pusha
(bad)
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %esi
push   %cs
loopne 807221e <_IO_stdin_used+0x705a>
dec    %esi
addl   $0xffffff86,(%ebx,%edx,2)
add    -0x38f5a0fe(%edi),%eax
mov    $0xe,%bl
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
sldt   (%eax)
pop    %eax
(bad)
decl   0x0(%esi,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaf,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,(%eax,%edx,1)
add    %al,(%eax)
push   $0xa1fffde1
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jp     807229a <_IO_stdin_used+0x70d6>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,0x10(%eax)
add    %al,(%eax)
in     (%dx),%al
loope  80722a4 <_IO_stdin_used+0x70e0>
(bad)
in     (%dx),%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
pusha
dec    %ecx
addl   $0xffffff86,0x4e038748
add    $0x85,%al
add    (%edx),%al
iret
or     %ch,%al
mov    $0x47040ec3,%esi
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
mov    %ss,(%eax)
add    %al,(%eax)
mov    $0xe3,%al
std
incl   0x5(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
adc    %al,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
rclb   (%eax)
add    %al,(%eax)
mov    $0x65fffde8,%esp
add    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %cs
and    %dl,0xa(%esi)
push   %cs
add    $0x46,%al
or     0xe(%edi),%esp
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
lock adc %al,(%eax)
add    %cl,(%ecx,%ebp,8)
std
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    $0x11,%al
add    %al,(%eax)
and    %ch,%cl
std
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
addb   $0x4f,(%ecx)
addl   $0xffffff86,(%ebx)
add    (%edx),%al
push   %ecx
mov    $0xe,%bl
add    $0x38,%al
add    %al,(%eax)
add    %bh,(%ecx,%edx,1)
add    %al,(%eax)
jo     807236b <_IO_stdin_used+0x71a7>
std
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x11(%eax)
add    %al,(%eax)
inc    %esp
ljmp   $0x0,$0x28bfffd
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff4,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x94000011,%eax
in     (%dx),%al
std
incl   0x5(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
clc
adc    %eax,(%eax)
add    %dl,%ah
icebp
std
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x58,%al
add    %al,(%eax)
add    %bl,(%eax)
adc    (%eax),%al
add    %ah,%ah
icebp
std
push   %ebp
push   %cs
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2a00e4b
incb   (%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
push   %eax
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
je     80724c8 <_IO_stdin_used+0x7304>
add    %al,(%eax)
mov    %al,(%eax)
(bad)
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    %ch,%al
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x1780000(%edx,%edx,1)
(bad)
jmp    *0x7(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
clc
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
call   ac07253f <_end+0xa3ffacff>
or     %bh,%dh
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     %bh,%dh
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %ebp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xor    %dl,(%ebx)
add    %al,(%eax)
in     (%dx),%al
or     %bh,%dh
ljmp   *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcc,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dh,0x13(%eax)
add    %al,(%eax)
sbb    $0xa,%al
(bad)
(bad)
jge    80725ba <_IO_stdin_used+0x73f6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
les    (%ebx),%edx
add    %al,(%eax)
dec    %eax
or     %dh,%bh
incl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pushf
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
hlt
adc    (%eax),%eax
add    %ch,(%eax)
or     %esi,%edi
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
or     %al,0xec36502(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
adc    $0x0,%al
add    %bh,(%ebx,%ecx,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    $0x14,%al
add    %al,(%eax)
pop    %eax
or     %esi,%edi
lcall  *0x0(%eax)
inc    %ebx
push   %cs
xor    %al,0x5(%ebx,%eax,4)
dec    %edx
xchg   %al,(%eax,%ecx,2)
xchg   %eax,(%ebx)
dec    %eax
test   %eax,(%edx)
add    0xa(%ebx),%ah
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
push   %eax
adc    $0x0,%al
add    %cl,%ah
or     %esi,%edi
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %esi
push   %cs
or     %al,-0x3cf594fe(%ebx)
push   %cs
add    $0x47,%al
or     -0x3d(%ebx),%edx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
je     80726ca <_IO_stdin_used+0x7506>
add    %al,(%eax)
clc
or     %esi,%edi
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
fs
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %dl,0xc080000(%esp,%edx,1)
(bad)
incl   (%ebx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x4(%ebx,%eax,4)
dec    %esp
xchg   %al,(%ebx)
xchg   %eax,(%edx)
jge    80726f8 <_IO_stdin_used+0x7534>
mov    $0x48040ec3,%esi
or     (%ebx),%eax
sahf
add    %ecx,(%edx)
ret
mov    $0xe,%bh
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
les    (%eax,%eax,1),%edx
add    %ch,%al
push   %cs
(bad)
decl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
add    $0x15,%al
add    %al,(%eax)
mov    $0xe2fffe0f,%eax
sub    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    (%ebx),%esp
sub    %cl,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sub    $0x15,%al
add    %al,(%eax)
cmpb   $0xfe,(%edx)
ljmp   *0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
adc    $0x3ddc0000,%eax
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,0x15(%eax)
add    %al,(%eax)
in     (%dx),%al
cmp    $0x26fffe,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80727cb <_IO_stdin_used+0x7607>
add    %al,(%eax)
or     %bh,(%esi)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %cl,0x14000015(%eax)
ds
(bad)
(bad)
jl     80727dd <_IO_stdin_used+0x7619>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ebx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,%al
adc    $0x494c0000,%eax
(bad)
dec    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x3(%ebx,%eax,4)
push   %eax
xchg   %al,(%edx)
pop    %esi
or     %dh,%al
ret
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
adc    $0x4af80000,%eax
(bad)
ljmp   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
xor    $0x16,%al
add    %al,(%eax)
call   d30726cc <_end+0xcaffae8c>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0x3(%ebx,%eax,4)
xchg   %al,(%edx)
add    -0x3a(%edx,%ecx,1),%al
ret
push   %cs
add    $0x45,%al
or     0xa(%esi),%esp
ret
(bad)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%esp
ret
(bad)
push   %cs
add    $0x47,%al
or     -0x3d(%ecx),%esp
(bad)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ss
add    %al,(%eax)
adcb   $0xff,-0x2(%eax)
mov    %es,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,-0x2bffffea(%eax)
push   %eax
(bad)
jmp    *%edi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
call   8c072943 <_end+0x83ffb103>
push   %esp
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
mov    %ss,-0x1(%esi,%edi,8)
adc    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    %dl,(%edi)
add    %al,(%eax)
xchg   %eax,%esp
push   %esp
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    $0x17,%al
add    %al,(%eax)
mov    $0x54,%al
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jl     8072991 <_IO_stdin_used+0x77cd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %cl,0x0(%edi,%edx,1)
add    %ah,%al
push   %esp
(bad)
decl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%edi),%dh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
pop    %ss
add    %al,(%eax)
test   $0x55,%al
(bad)
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,%ah
pop    %ss
add    %al,(%eax)
adc    %dl,-0x2(%esi)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
dec    %esp
push   %esi
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    %bl,(%eax)
add    %al,(%eax)
push   %esp
push   %esi
(bad)
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffce,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
sbb    %al,(%eax)
add    %dl,(%edi,%edx,2)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
jo     8072aca <_IO_stdin_used+0x7906>
add    %al,(%eax)
sbb    $0x57,%al
(bad)
lcall  *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
mov    $0x18,%al
add    %al,(%eax)
jl     8072b4e <_IO_stdin_used+0x798a>
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%esi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
enter  $0x18,$0x0
xchg   %eax,%esp
pop    %eax
(bad)
incl   0x2(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff90,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
or     %bl,(%ecx)
add    %al,(%eax)
aam    $0x5a
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%esi)
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
and    %bl,(%ecx)
add    %al,(%eax)
in     (%dx),%al
pop    %edx
(bad)
jmp    *0x43000000(%eax,%eax,1)
push   %cs
and    %al,0x4(%ebx,%eax,4)
push   %ebp
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    0xa(%ebp),%al
mov    $0x47040ec3,%esi
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
sbb    %eax,(%eax)
add    %dh,-0x2(%ebx,%ebx,2)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x3(%ebx,%eax,4)
dec    %edx
xchg   %al,(%edx)
add    -0x3a(%ecx),%cl
ret
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %ch,0x19(%eax)
add    %al,(%eax)
mov    $0x5b,%ah
(bad)
decl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    $0x410c0e0a,%ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cwtl
sbb    %eax,(%eax)
add    %dl,0x13fffe(%esp,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x19,%al
add    %al,(%eax)
pushf
pop    %esp
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
enter  $0x19,$0x0
movsb  %ds:(%esi),%es:(%edi)
pop    %esp
(bad)
incl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
lret   $0xe0a
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
clc
sbb    %eax,(%eax)
add    %dh,0x13fffe(%ebp,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
adc    %bl,(%edx)
add    %al,(%eax)
mov    $0x13fffe5d,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
sub    %bl,(%edx)
add    %al,(%eax)
les    -0x2(%ebp),%ebx
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
popa
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
pop    %eax
sbb    (%eax),%al
add    %ah,(%esi,%ebx,2)
(bad)
(bad)
jg     8072ca2 <_IO_stdin_used+0x7ade>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %bl,(%edx)
add    %al,(%eax)
je     8072d2c <_IO_stdin_used+0x7b68>
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x5e700000(%edx,%ebx,1)
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
ja     8072cfd <_IO_stdin_used+0x7b39>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x1a,$0x0
movsb  %ds:(%esi),%es:(%edi)
pop    %esi
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,-0x7d(%edi)
add    -0x39bafdfe(%esi),%eax
ret
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
call   ec072d47 <_end+0xe3ffb507>
pop    %esi
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
sbb    (%eax),%al
add    %dh,%al
pop    %esi
(bad)
lcall  *0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    %bl,(%ebx)
add    %al,(%eax)
cld
pop    %esi
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dh,(%eax)
sbb    (%eax),%eax
add    %bl,(%edi,%ebx,2)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%al
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
sbb    %fs:(%eax),%eax
add    %bh,(%eax)
pop    %edi
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %bl,(%ebx)
add    %al,(%eax)
push   %esp
pop    %edi
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pushf
sbb    (%eax),%eax
add    %dh,0x5f(%eax)
(bad)
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7d(%edi)
add    $0x87480486,%eax
add    -0x7b(%eax),%ecx
add    (%edx),%al
aam    $0xa
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x1b,$0x0
fs
pusha
(bad)
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
sbb    $0x0,%al
add    %al,0x2effffe(%ecx,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
enter  $0xa01,$0xe
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x1c(%eax)
add    %al,(%eax)
sbb    $0x64,%al
(bad)
push   %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x22,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xc400001c,%eax
gs
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
rcrb   (%eax,%eax,1)
add    %bh,%ah
gs
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x1c,%al
add    %al,(%eax)
or     %ah,-0x2(%esi)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,0x66280000(,%ebx,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %bl,0x66340000
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xor    %bl,0x664c0000
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
sbb    $0x66b80000,%eax
(bad)
jmp    *0x1(%ebp)
inc    %ebx
push   %cs
xor    %dl,-0x7a(%ebx)
add    0x2874804(%ebx),%eax
add    -0x3c3938f6(%edi),%bh
push   %cs
add    $0x4b,%al
or     0xa(%edi),%ecx
mov    $0x41040ec3,%esi
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
je     8072fd3 <_IO_stdin_used+0x7e0f>
add    %al,(%eax)
cmp    %ch,-0x2(%eax)
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0xc00001d(%eax)
imul   $0x27ff,%esi,%edi
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0x69280000,%eax
(bad)
(bad)
mov    $0x1,%esi
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0x80e0a01(%edx),%eax
inc    %ecx
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
int3
sbb    $0x6ac00000,%eax
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x1d,%al
add    %al,(%eax)
fsubrs -0x2(%edx)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cld
sbb    $0x6af00000,%eax
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
adc    %bl,(%esi)
add    %al,(%eax)
cld
push   $0xfffffffe
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x3(%esi,%eax,4)
push   %edi
addl   $0xffffff87,(%esp,%ecx,2)
add    (%edx),%al
sahf
or     %bh,%al
mov    $0xe,%bl
add    $0x48,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
cmp    %bl,(%esi)
add    %al,(%eax)
in     $0x6b,%al
(bad)
pushl  0x6(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi,%ebx,1)
add    %cl,0x72(%eax)
(bad)
(bad)
aas
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%ebx)
cmp    (%ecx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jo     80730d0 <_IO_stdin_used+0x7f0c>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jae    80730b5 <_IO_stdin_used+0x7ef1>
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
test   %bl,(%esi)
add    %al,(%eax)
push   $0xcfffe73
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
push   %ds
add    %al,(%eax)
fs
jae    80730dd <_IO_stdin_used+0x7f19>
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x1e,%al
add    %al,(%eax)
jl     8073169 <_IO_stdin_used+0x7fa5>
(bad)
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
push   %eax
push   %cs
and    %al,(%edx)
(bad)  (%esi)
add    $0x18,%al
add    %al,(%eax)
add    %cl,%al
push   %ds
add    %al,(%eax)
fs
je     807310d <_IO_stdin_used+0x7f49>
pushl  0x0(%ebp)
inc    %ebx
push   %cs
and    %ah,0xa(%edi)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x1e,%al
add    %al,(%eax)
or     %dh,-0x2(%ebp)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cld
push   %ds
add    %al,(%eax)
and    %dh,-0x2(%ebp)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%esi)
mov    0x2864701,%al
dec    %esi
addl   $0x2,(%ebx)
dec    %edx
mov    $0xe,%bl
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    %bl,(%edi)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jne    8073165 <_IO_stdin_used+0x7fa1>
lcall  *0x1(%ebx)
add    %al,(%eax)
add    %cl,0xe(%eax)
or     %al,0x200e4a02(%edi)
add    (%eax),%ebx
add    %ecx,(%edx)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%ebp
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,0x0(%edi,%ebx,1)
add    %ah,0x3bfffe76(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%eax),%dh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x77a80000(%edi,%ebx,1)
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
add    0xa(%ebp),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,-0xbffffe1(%eax)
ja     80731ed <_IO_stdin_used+0x8029>
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
add    0xa(%ebp),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,%ah
pop    %ds
add    %al,(%eax)
xor    %bh,-0x2(%eax)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
add    0xa(%ebp),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dh,%al
pop    %ds
add    %al,(%eax)
insb   (%dx),%es:(%edi)
js     8073235 <_IO_stdin_used+0x8071>
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
add    0xa(%eax),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,(%eax,%eiz,1)
add    %al,(%eax)
test   $0x78,%al
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
add    0xa(%eax),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
cmp    %ah,(%eax)
add    %al,(%eax)
in     $0x78,%al
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
adc    %ah,0xe(%ebp)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
push   %eax
and    %al,(%eax)
add    %bh,%ah
js     8073295 <_IO_stdin_used+0x80d1>
jmp    *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7d(%edi)
add    0xa520202(%esi),%eax
mov    $0xe,%bl
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
je     80732d6 <_IO_stdin_used+0x8112>
add    %al,(%eax)
enter  $0xfe79,$0xff
and    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %bl,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    %fs,(%eax)
add    %al,(%eax)
loopne 807334b <_IO_stdin_used+0x8187>
(bad)
jmp    *0x1
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    -0x3cbef7f2(%edx,%ecx,1),%dl
push   %cs
add    $0x47,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dh,-0x13ffffe0(%eax)
jp     80732f5 <_IO_stdin_used+0x8131>
push   %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
scas   %es:(%edi),%eax
or     (%esi),%cl
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
int3
and    %al,(%eax)
add    %dl,%al
jnp    8073311 <_IO_stdin_used+0x814d>
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     $0x20,%al
add    %al,(%eax)
call   340731a8 <_end+0x2bffb968>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,%ah
and    %al,(%eax)
add    %al,(%eax)
jl     8073341 <_IO_stdin_used+0x817d>
pushl  0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x65500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx,%eiz,1)
add    %ch,%al
jge    8073399 <_IO_stdin_used+0x81d5>
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
andb   $0x0,(%ecx)
add    %bh,%ah
jge    80733c5 <_IO_stdin_used+0x8201>
ljmp   *0x0(%edx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6d600e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,%al
and    %eax,(%eax)
add    %ch,(%eax,%eax,4)
(bad)
call   *(%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
cmpsl  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,(%eax)
and    (%eax),%al
add    %dh,%ah
(bad)
(bad)
(bad)
jnp    8073465 <_IO_stdin_used+0x82a1>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
add    (%ecx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jo     80734d4 <_IO_stdin_used+0x8310>
add    %al,(%eax)
mov    $0xdefffd6f,%esp
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4702(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%edi,%ecx,2)
addl   $0x0,0x14000000
add    %al,(%eax)
xchg   %eax,%esp
and    (%eax),%al
add    %bh,%al
test   %edi,%esi
lcall  *0x0
inc    %ebx
push   %cs
and    %bl,0xe(%ecx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
and    (%eax),%al
add    %al,(%eax)
xchg   %bh,%dh
incl   0x0(%esi)
inc    %ebx
push   %cs
and    %ah,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%edi),%esi
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
int3
and    (%eax),%al
add    %dh,-0x7a(%eax)
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
or     $0x4f,%al
addl   $0xffffff86,(%ebx)
add    0xa(%ebp),%ch
mov    $0xe,%bl
add    $0x41,%al
or     -0x3a(%ebx,%eax,8),%ecx
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
hlt
and    (%eax),%al
add    %bl,0x6cfffe86(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
and    $0x23,%al
add    %al,(%eax)
fadds  0x18bfffe(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x1(%ebp),%esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
pop    %esp
and    (%eax),%eax
add    %dh,(%eax)
mov    %bh,%dh
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
dec    %edx
or     (%esi),%cl
add    $0x43,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
js     80735dd <_IO_stdin_used+0x8419>
add    %al,(%eax)
test   %cl,0xd0fffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
push   %eax
addl   $0xffffff85,0x3870486
add    (%edx),%al
mov    $0xc3c6c7c5,%esp
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,0x2c000023(%eax)
mov    %edi,%esi
jmp    *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x14,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dh,%ah
and    (%eax),%eax
add    %bh,-0x76(%eax)
(bad)
(bad)
jle    807363e <_IO_stdin_used+0x847a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x10(%esi,%ecx,1),%dh
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
sub    %ah,(%eax,%eax,1)
add    %al,%ah
mov    %dh,%bh
call   *0x0(%edi)
inc    %ebx
push   %cs
and    %cl,-0x7d(%ecx)
add    $0x48,%al
xchg   %al,(%ebx)
inc    %esi
xchg   %eax,(%edx)
add    0xa(%ebx),%bl
mov    $0x43040ec3,%esi
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %dl,0x24(%eax)
add    %al,(%eax)
cmp    $0x8b,%al
(bad)
decl   0x2(%ebx)
add    %al,(%eax)
add    %dl,0xe(%edx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x8,0x3500e43
add    (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
push   %cs
push   %eax
addl   $0xffffff87,0x4860285
add    (%eax,%eax,1),%edi
add    %al,(%eax)
cwtl
and    $0x0,%al
add    %al,-0x2(%ebp,%ecx,4)
call   *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9a,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,%al
and    $0x0,%al
add    %ah,0x123fffe(%esi,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
sub    $0x25,%al
add    %al,(%eax)
orb    $0x0,0x7ffffe(%edi)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x3(%ebx,%eax,4)
dec    %edx
xchg   %al,(%edx)
pop    %ebp
or     %dh,%al
ret
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %esi
ret
(bad)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,0x0(%ebp,%eiz,1)
add    %bl,%al
(bad)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %dl,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
js     80737df <_IO_stdin_used+0x861b>
add    %al,(%eax)
and    $0x90,%al
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%eax)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
nop
and    $0x902c0000,%eax
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x25,%ah
add    %al,(%eax)
pop    %eax
nop
(bad)
call   *0x0(%esi)
inc    %ebx
push   %cs
and    %cl,-0x7d(%ebx)
add    $0x4e,%al
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    -0x39(%ecx),%bh
mov    $0xe,%bl
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
fsubs  0x90d40000
(bad)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
inc    %esp
xchg   %al,(%eax,%ecx,2)
xchg   %eax,(%ebx)
pop    %ebx
addl   $0xffffffc5,0xa600285
mov    $0x46040ec3,%esi
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x26,%al
add    %al,(%eax)
enter  $0xfe91,$0xff
adc    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
dec    %esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,(%esi,%eiz,1)
add    %al,(%eax)
enter  $0xfe91,$0xff
rolb   (%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jg     80738ad <_IO_stdin_used+0x86e9>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
jl     80738e4 <_IO_stdin_used+0x8720>
add    %al,(%eax)
inc    %eax
xchg   %eax,%esi
(bad)
(bad)
in     (%dx),%eax
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8f,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0xf0000026,%esp
lcall  $0x0,$0x1abfffe
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,%ah
add    %al,%es:(%eax)
pusha
pushf
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
daa
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pushf
(bad)
lcall  *0x4(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
and    (%ebx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %esp
daa
add    %al,(%eax)
enter  $0xfea0,$0xff
out    %eax,$0x0
add    %al,(%eax)
add    %dl,0xe(%ebx)
xor    %dl,0x3(%ebx,%eax,4)
xchg   %al,(%edx)
add    0xa(%eax),%dh
mov    $0xe,%bl
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x27(%eax)
add    %al,(%eax)
xchg   %eax,%esp
mov    0x5cfffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %al,(%edx)
push   %edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
daa
add    %al,(%eax)
enter  $0xfea1,$0xff
(bad)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    0xa(%ecx),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x27
add    %al,(%eax)
sub    %ah,0x76fffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %cl,(%eax,%ebp,1)
add    %al,(%eax)
jo     80739f4 <_IO_stdin_used+0x8830>
(bad)
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
pusha
dec    %esp
addl   $0x3,0x874f0486
test   %eax,(%edx)
add    -0x3c39383b(%edx),%ah
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
xor    $0x28,%al
add    %al,(%eax)
sbb    %ah,0x23bfffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5e300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
fwait
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,-0x13ffffd8(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x28b40000(%eax,%eax,1)
add    %al,(%eax)
clc
movsb  %ds:(%esi),%es:(%edi)
(bad)
jmp    *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x25,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x4c000000(%eax),%eax
sub    %eax,(%eax)
add    %dl,-0x5a(%eax)
(bad)
jmp    *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
shrb   (%ecx)
add    %al,(%eax)
cld
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%esi),%al
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%ah
sub    %eax,(%eax)
add    %bh,%al
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
decl   0x3(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x28,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,0x0(%edx,%ebp,1)
add    %dh,%al
stos   %al,%es:(%edi)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%ebp),%bh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xchg   %eax,%esp
sub    (%eax),%al
add    %ch,-0xc000155(%eax)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,%ah
sub    (%eax),%al
add    %ch,-0x4d(%eax)
(bad)
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bafc(%ebx)
add    %eax,(%edx)
(bad)  (%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
orb    $0x10,(%esi)
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x2b,%al
add    %al,(%eax)
nop
mov    $0xfe,%ah
pushl  (%ecx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
nop
add    %eax,(%ebx)
icebp
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0x410c0e0a,%ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
sub    (%eax),%eax
add    %dl,-0x18000149(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7a(%ecx)
add    $0x6d,%al
addl   $0x6a,0x2850387
or     %ch,%al
mov    $0x45040ec3,%esi
or     (%eax,%eax,1),%edx
add    %al,(%eax)
test   %ch,(%ebx)
add    %al,(%eax)
pop    %eax
mov    $0x2afffe,%eax
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %dl,0xe(%esi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pushf
sub    (%eax),%eax
add    %dh,-0x48(%eax)
(bad)
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,-0x7d(%ecx)
add    $0x86,%al
add    -0x79(%ecx),%ecx
add    (%edx),%al
add    $0x40ec3c6,%edi
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
shrb   $0x0,(%ebx)
add    %bl,(%ecx,%edi,4)
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xe(%eax)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fsubrs (%ebx)
add    %al,(%eax)
and    $0xb9,%al
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%ebx
add    $0x44,%al
or     0x0(%eax,%eax,1),%ebp
add    %bh,%al
sub    (%eax),%eax
add    %ah,-0x2(%ecx,%edi,4)
incl   0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2f,0x3400e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
je     8073e81 <_IO_stdin_used+0x8cbd>
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   $0x400002c
mov    $0x8fffe,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
jl     8073eea <_IO_stdin_used+0x8d26>
add    %al,(%eax)
add    %bh,0x1a8ff(%esi,%edi,8)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
push   %ebp
addl   $0xffffff85,0x3870486
add    (%edx),%al
test   $0xa,%al
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x48,%al
or     (%edx),%eax
inc    %ebx
or     %ch,%al
mov    $0x45040ec3,%esi
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x2c,%al
add    %al,(%eax)
jl     8073eb3 <_IO_stdin_used+0x8cef>
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
lock sub $0x0,%al
add    %bl,-0x2(%esi,%edi,4)
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
stos   %eax,%es:(%edi)
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
sub    $0xbf2c0000,%eax
(bad)
pushl  (%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
faddl  (%ebx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    %cl,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,0x2d(%eax)
add    %al,(%eax)
adc    $0xc4,%al
(bad)
(bad)
jmp    8073fc5 <_IO_stdin_used+0x8e01>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,%al
sub    $0xc4ac0000,%eax
(bad)
ljmp   *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1a,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,%cs:(%eax)
add    $0xc7,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,(%esi,%ebp,1)
add    %al,(%eax)
add    %al,%bh
(bad)
(bad)
jns    8074086 <_IO_stdin_used+0x8ec2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pusha
add    %al,%cs:(%eax)
pop    %esp
(bad)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
je     80740e4 <_IO_stdin_used+0x8f20>
add    %al,(%eax)
mov    %al,%bh
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x2e,$0x0
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
decl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff0,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
or     %ch,(%edi)
add    %al,(%eax)
mov    $0xc8,%ah
(bad)
jmp    *0x2(%eax)
inc    %ebx
push   %cs
pusha
push   %edi
addl   $0xffffff85,0x3870486
add    0xa(%ecx),%ch
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
xor    %ch,(%edi)
add    %al,(%eax)
sub    $0xcb,%al
(bad)
ljmp   *(%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
push   %eax
addl   $0xffffff85,0x3870486
add    (%edx),%al
out    %eax,$0xa
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x46,%al
or     (%edx),%eax
dec    %ebx
or     %ch,%al
mov    $0x45040ec3,%esi
or     (%edx),%eax
jnp    80741ac <_IO_stdin_used+0x8fe8>
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jo     80741e1 <_IO_stdin_used+0x901d>
add    %al,(%eax)
sbb    $0xcd,%al
(bad)
incl   0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbb,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x2f,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
iret
(bad)
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %cl,-0x7d(%ebp)
add    -0x7a(%eax),%ecx
add    (%edx),%al
pop    %eax
mov    $0xe,%bl
add    $0x14,%al
add    %al,(%eax)
add    %dl,%al
das
add    %al,(%eax)
int3
iret
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %eax
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %ch,%al
das
add    %al,(%eax)
add    $0xd0,%al
(bad)
pushl  0x5
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
add    %eax,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
add    %ecx,%ds:(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
xor    %al,(%eax)
add    %dl,%ah
aam    $0xfe
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%esi,1)
add    %ah,%al
aam    $0xfe
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,-0x13ffffd0(%eax)
aam    $0xfe
decl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff4,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
fdivs  (%eax)
add    %al,(%eax)
in     $0xd5,%al
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
clc
xor    %al,(%eax)
add    %al,(%esi,%edx,8)
(bad)
decl   0x0(%ecx)
inc    %ebx
push   %cs
and    %al,(%edx)
dec    %esi
or     (%esi),%cl
add    $0x47,%al
or     0xe(%eax),%esi
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
xor    %eax,(%eax)
add    %dh,-0x2(%esi,%edx,8)
inc    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,-0x7d(%ebx)
add    $0x86,%al
add    0xa7c0202(%edi),%eax
mov    $0x46040ec3,%esi
or     -0x3d(%ebx),%ebp
mov    $0xe,%bh
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
inc    %esp
xor    %eax,(%eax)
add    %bl,(%eax)
xlat   %ds:(%ebx)
(bad)
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    -0x3cbef7f2(%edx,%ecx,1),%ch
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   $0xe4000031
xlat   %ds:(%ebx)
(bad)
lcall  *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
fisttpl (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,-0x2bffffcf(%eax)
fdivr  %st(6),%st
(bad)
jmp    80743ea <_IO_stdin_used+0x9226>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0x41140e0a,%ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,%al
xor    %eax,(%eax)
add    %ch,-0x2(%esi,%ebx,8)
(bad)
jp     807443c <_IO_stdin_used+0x9278>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x1ff1b9fe(%ebx)
add    (%ebx),%al
pop    %ss
add    %ecx,(%edx)
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    $0x32,%al
add    %al,(%eax)
mov    $0x8fffee0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
xor    (%eax),%al
add    %dh,0x1e1fffe(%eax,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff89,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
jl     80744c0 <_IO_stdin_used+0x92fc>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
xor    (%eax),%al
add    %cl,-0x2(%edx,%eiz,8)
incl   (%esi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdd,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
(bad)
xor    (%eax),%al
add    %bl,0x28afffe(,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
push   %ebx
addl   $0x3,0x874e0486
test   %eax,(%edx)
add    0xa(%eax),%dl
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x4c,%al
or     (%edx),%eax
imul   $0xc3c6c7c5,(%edx),%ecx
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
add    $0x33,%al
add    %al,(%eax)
js     8074531 <_IO_stdin_used+0x936d>
(bad)
lcall  *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x9,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
inc    %esp
xor    (%eax),%eax
add    %bl,%al
jmp    833458c <_end+0x2bcd4c>
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%edx),%ecx
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
xor    %fs:(%eax),%eax
add    %ch,%al
jmp    86d45ac <_end+0x65cd6c>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x55,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,0x1c000033(%eax)
ljmp   $0x0,$0x426fffe
add    %al,0xe(%ebx)
push   %eax
inc    %esp
addl   $0x3,0x8704864c
dec    %eax
test   %eax,(%edx)
add    0xa(%edx),%cl
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
int3
xor    (%eax),%eax
add    %ah,(%eax)
out    %al,(%dx)
(bad)
pushl  0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%ebp
add    %cl,(%esp,%esi,1)
add    %al,(%eax)
mov    0xc5fffeef,%al
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff4,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x0(%esp,%esi,1)
add    %al,(%eax)
hlt
(bad)
call   *0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x34
add    %al,(%eax)
dec    %eax
idiv   %esi
call   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
xor    $0x0,%al
add    %dl,-0x9(%eax)
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,-0x8a80000(,%esi,1)
(bad)
(bad)
jg     8074751 <_IO_stdin_used+0x958d>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5c,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
leave
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
pop    %esp
xor    $0xfa800000,%eax
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%ebx),%al
add    $0x28,%al
add    %al,(%eax)
add    %dh,0x0(%ebp,%esi,1)
add    %bh,0x40fffefa(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0x8(%esi,%ecx,1),%ebx
inc    %ebx
ret
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    0xcc000035,%al
cli
(bad)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0x4(%esi,%ecx,1)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xe4000035,%eax
cli
(bad)
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x4(%ebx,%eax,4)
dec    %esp
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    -0x39(%edx,%ecx,1),%al
mov    $0xe,%bl
add    $0x41,%al
or     0xa(%ebp),%ebp
ret
mov    $0xe,%bh
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
call   9c074862 <_end+0x93ffd022>
sti
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,-0x7a(%esi)
add    -0x7d(%eax),%cl
add    -0x3d(%esi,%eax,8),%ebp
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     %dh,(%esi)
add    %al,(%eax)
mov    $0xfb,%ah
(bad)
(bad)
mov    $0x1,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3b,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
dec    %eax
add    %al,%ss:(%eax)
xor    $0xfd,%al
(bad)
pushl  0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%eax),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    %eax,0x43100e0a
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,-0x1980000(%esi,%esi,1)
(bad)
(bad)
fild   (%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
add    %al,(%esi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
in     (%dx),%al
add    %al,%ss:(%eax)
lock add $0x13ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0x37,%al
add    %al,(%eax)
clc
add    $0x13ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,(%edi,%esi,1)
add    %al,(%eax)
add    %al,(%esi)
(bad)
call   *(%edx)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    (%edx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pusha
aaa
add    %al,(%eax)
fmull  (%ecx)
(bad)
call   *0x5(%edx)
inc    %ebx
push   %cs
addb   $0x57,(%ecx)
addl   $0xffffff85,0x3870486
add    (%ebx),%al
pop    %ebp
add    %ecx,(%edx)
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,0xf500000(%edi,%esi,1)
(bad)
(bad)
aas
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
add    %ecx,%ss:(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%ah
aaa
add    %al,(%eax)
and    %dl,(%ebx)
(bad)
jmp    *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    %ah,%bl
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %esp
cmp    %al,(%eax)
add    %bh,%al
adc    $0xff,%al
jmp    *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcf,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
cmp    %al,(%eax)
add    %ch,0x16(%eax)
(bad)
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
test   $0x410c0e0a,%eax
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
les    (%eax),%edi
add    %al,(%eax)
or     %dl,(%edi)
(bad)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec36802(%ebx)
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%al
cmp    %al,(%eax)
add    %bl,(%edi,%edx,1)
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,0x3(%ebx,%eax,4)
pop    %eax
xchg   %al,(%edx)
add    0xa(%ebp),%al
mov    $0xe,%bl
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
add    $0x39,%al
add    %al,(%eax)
push   $0x21ffff17
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
cmp    %eax,(%eax)
add    %al,0x2effff(%edi,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    $0x39,%al
add    %al,(%eax)
mov    0x75ffff17,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,0x3(%ebx,%eax,4)
dec    %eax
xchg   %al,(%edx)
add    -0x3a(%ebp),%ah
ret
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,0x0(%ecx,%edi,1)
add    %al,(%eax)
sbb    %bh,%bh
incl   0x0
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ah,0x39(%eax)
add    %al,(%eax)
cld
pop    %ss
(bad)
jmp    *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
fmull  (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%al
cmp    %eax,(%eax)
add    %bh,(%ecx,%ebx,1)
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %dh,%al
cmp    %eax,(%eax)
add    %bh,(%ecx,%ebx,1)
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x2(%esi,%eax,4)
dec    %eax
addl   $0x5b,(%ebx)
or     %dh,%al
ret
push   %cs
add    $0x46,%al
or     -0x3d(%ebp),%esi
(bad)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sbb    %bh,(%edx)
add    %al,(%eax)
test   %bl,(%ecx)
(bad)
incl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
inc    %esp
addl   $0x3,0x87048650
test   %eax,(%edx)
add    %cl,%cl
or     %ch,%al
mov    $0x48040ec3,%esi
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
inc    %esp
cmp    (%eax),%al
add    %bl,0x1a(%eax)
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,-0x7a(%eax)
add    -0x7d(%eax),%cl
add    0xa(%edi),%ebx
mov    $0xe,%bl
add    $0x46,%al
or     -0x3d(%ebp),%esi
(bad)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmp    (%eax),%al
add    %ah,0x36ffff1a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x3(%ebx,%eax,4)
dec    %eax
xchg   %al,(%edx)
data16
mov    $0xe,%bl
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    %?,(%edx)
add    %al,(%eax)
rcrb   $0xff,(%edx)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x2(%esi,%eax,4)
dec    %eax
addl   $0x6a,(%ebx)
mov    $0xe,%bl
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    (%eax),%al
add    %ah,%al
sbb    %bh,%bh
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,-0x7d(%ecx)
add    $0x4c,%al
xchg   %al,(%ebx)
dec    %eax
xchg   %eax,(%edx)
jl     8074cce <_IO_stdin_used+0x9b0a>
mov    $0xe,%bl
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sarb   (%edx)
add    %al,(%eax)
sbb    $0x1b,%al
(bad)
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
inc    %esp
addl   $0xffffff85,0x4f038750
add    0xa600204(%esi),%al
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%ah
cmp    (%eax),%al
add    %ah,%al
sbb    %edi,%edi
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
and    %bh,(%ebx)
add    %al,(%eax)
cld
sbb    %edi,%edi
call   *0x0(%esi)
add    %al,(%eax)
add    %dl,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
cmp    (%eax),%eax
add    %bh,(%eax)
sbb    $0xff,%al
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%ebx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %esp
cmp    (%eax),%eax
add    %al,0x1c(%eax)
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf59bfe(%ebx)
push   %cs
add    $0x43,%al
or     -0x3d(%edi),%ecx
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,(%ebx)
add    %bl,-0x1(%esp,%ebx,1)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x45,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bh,0x1c800000(%ebx,%edi,1)
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%eax),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock cmp (%eax),%eax
add    %ch,0x20ffff(%esp,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
or     %bh,(%eax,%eax,1)
add    %dh,0x1bffff(%esp,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
and    %bh,(%eax,%eax,1)
add    %bh,0x70ffff(%esp,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx),%ch
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
cmp    $0x0,%al
add    %cl,(%eax)
sbb    $0x40ffff,%eax
add    %al,(%eax)
add    %dl,0xe(%edi)
and    %ah,0xe(%edi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
pop    %esp
cmp    $0x0,%al
add    %dh,(%eax)
sbb    $0x8dffff,%eax
add    %al,(%eax)
add    %al,0xe(%esi)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %edi
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ebx),%edi
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
mov    %?,(%eax,%eax,1)
add    %dl,0x55ffff1d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%al
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sarb   $0x0,(%eax,%eax,1)
mov    $0x3effff1d,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x3c
add    %al,(%eax)
call   35074e3a <_end+0x2cffd5fa>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,-0x7a(%ecx)
add    0x4(%ebx,%eax,4),%ecx
xchg   %eax,(%edx)
push   %ebx
or     %bh,%al
mov    $0xe,%bl
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cld
cmp    $0x0,%al
add    %dh,%al
push   %ds
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
adc    %bh,0x1eec0000
(bad)
pushl  0x0(%edx)
inc    %ebx
push   %cs
and    %al,0x4(%ebx,%eax,4)
push   %ebx
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    0xa(%ebp),%bh
mov    $0x41040ec3,%esi
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
cmp    $0x1f840000,%eax
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
cmp    $0x1fc00000,%eax
(bad)
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7a(%ebx)
add    $0x50,%al
addl   $0x2,0x2850387
mov    $0xa,%dh
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,-0x6bffffc3(%eax)
and    %bh,%bh
(bad)
mov    $0x0,%ecx
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %eax,(%eax)
add    %dl,%al
cmp    $0x210c0000,%eax
(bad)
pushl  0x3(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf59bfe(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%edx
ret
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ecx
or     %bl,%al
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x47,%al
or     0xa(%ebp),%eax
ret
push   %cs
add    $0x4b,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x45,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebx
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     (%edx),%eax
nop
or     %bl,%al
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x45,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x45,%al
or     -0x3d(%edx,%ecx,1),%ebp
push   %cs
add    $0x46,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
ret
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %eax
or     %bl,%al
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
ret
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebp
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
hlt
add    %al,%ds:(%eax)
push   $0xd0ffff23
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
or     %bh,(%edi)
add    %al,(%eax)
and    $0x24,%al
(bad)
ljmp   *0x0(%edx)
inc    %ebx
push   %cs
adc    %al,-0x7d(%ebx)
add    $0x4c,%al
xchg   %al,(%ebx)
xchg   %eax,(%edx)
je     807516c <_IO_stdin_used+0x9fa8>
mov    $0x42040ec3,%esi
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
xor    %bh,(%edi)
add    %al,(%eax)
lods   %ds:(%esi),%al
and    $0xff,%al
decl   0x1
inc    %ebx
push   %cs
and    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi,%edi,1)
add    %ah,0x54ffff25(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pusha
aas
add    %al,(%eax)
in     (%dx),%al
and    $0x7affff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x4(%ebx,%eax,4)
dec    %eax
xchg   %eax,(%edx)
dec    %eax
xchg   %al,(%ebx)
push   %ebx
or     %bh,%al
mov    $0xe,%bl
add    $0x46,%al
or     (%edx),%eax
inc    %ebp
mov    $0x40ec3,%esi
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
nop
aas
add    %al,(%eax)
cmp    $0x26,%al
(bad)
ljmp   *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ebx
push   %cs
push   %eax
inc    %esp
addl   $0xffffff85,0x4803874c
add    -0x7a(%eax),%cl
add    $0x2,%al
popa
or     %ch,%al
mov    $0x44040ec3,%esi
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    $0x4000003f,%esp
sub    %bh,%bh
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%esi)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %edx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,%al
aas
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    %bh,%bh
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
or     $0x40,%al
add    %al,(%eax)
nop
sub    %bh,%bh
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    $0x40,%al
add    %al,(%eax)
test   $0x28,%al
(bad)
(bad)
cmp    $0x0,%eax
push   %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0x40,%al
add    %al,(%eax)
shrb   (%eax)
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jp     80752a1 <_IO_stdin_used+0xa0dd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,0x0(%eax,%eax,2)
add    %al,(%eax)
sub    %edi,%edi
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     80752f6 <_IO_stdin_used+0xa132>
add    %al,(%eax)
sbb    %ch,(%ecx)
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %al,(%edx)
dec    %edi
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x29700000(%eax,%eax,2)
(bad)
jmp    *%ebx
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
int3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
in     $0x40,%al
add    %al,(%eax)
or     %ch,(%esi)
(bad)
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,0x4(%esi,%eax,4)
dec    %eax
addl   $0x2,0x8503874c
add    -0x39383af6(%ecx),%bh
ret
push   %cs
add    $0x4c,%al
or     -0x3b(%ebx),%edx
mov    $0x40ec3,%esi
add    %al,(%eax)
push   $0x18000000
inc    %ecx
add    %al,(%eax)
aam    $0x2e
(bad)
incl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
test   %al,0x0(%ecx)
add    %bh,0x78ffff2f(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x47,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ebx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %bl,%al
inc    %ecx
add    %al,(%eax)
in     $0x30,%al
(bad)
decl   0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc8,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%eax),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
sub    $0x42,%al
add    %al,(%eax)
mov    0x43ffff32,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    (%eax),%edx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
fs
inc    %edx
add    %al,(%eax)
mov    $0x94ffff33,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
inc    %edx
add    %al,(%eax)
sub    %dh,(%edi,%edi,8)
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
les    0x0(%edx),%eax
add    %cl,0x6effff34(%eax)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
add    $0x43,%al
add    %al,(%eax)
mov    $0x7cffff39,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7d(%eax)
add    $0x48,%al
xchg   %al,(%ebx)
push   %ebx
xchg   %eax,(%edx)
add    -0x39(%ebp),%dl
mov    $0xe,%bl
add    $0x3c,%al
add    %al,(%eax)
add    %ch,(%eax)
inc    %ebx
add    %al,(%eax)
adc    $0x3a,%al
(bad)
pushl  0x5
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff6,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
push   $0x14000043
aas
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
and    %dl,0xe(%ebx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
addb   $0x0,0x0(%ebx)
sub    $0x3f,%al
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %ah,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,0x64000043(%eax)
aas
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jb     8075603 <_IO_stdin_used+0xa43f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bl,%ah
inc    %ebx
add    %al,(%eax)
jo     8075661 <_IO_stdin_used+0xa49d>
(bad)
pushl  0xa(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
add    $0x5,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
inc    %esp
add    %al,(%eax)
lods   %ds:(%esi),%al
dec    %ecx
(bad)
decl   0x2(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
leave
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
js     80756fe <_IO_stdin_used+0xa53a>
add    %al,(%eax)
in     $0x4b,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
pop    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,0x14000044(%eax)
dec    %esp
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
pop    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %bh,0x44000044(%eax)
dec    %esp
(bad)
jmp    *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xc3410c0e,(%edx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,0x4ca80000(,%eax,2)
(bad)
ljmp   *(%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
pop    %esp
inc    %ebp
add    %al,(%eax)
orb    $0xff,-0x1(%edi)
xchg   %eax,%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
ja     80757c3 <_IO_stdin_used+0xa5ff>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    %es,0x0(%ebp)
add    %dh,%al
dec    %edi
(bad)
(bad)
call   80757d9 <_IO_stdin_used+0xa615>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
int    $0xa
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x50b00000(%ebp,%eax,2)
(bad)
(bad)
mov    $0x1,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    $0xa,%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x46,%al
add    %al,(%eax)
sbb    %dl,-0x1(%edx)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    $0x46,%al
add    %al,(%eax)
and    %dl,-0x1(%edx)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
inc    %esi
add    %al,(%eax)
cmp    %dl,-0x1(%edx)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
inc    %esi
add    %al,(%eax)
inc    %eax
push   %edx
(bad)
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x26,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
pushf
inc    %esi
add    %al,(%eax)
push   %eax
push   %ebx
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x46,%ah
add    %al,(%eax)
pop    %eax
push   %ebx
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
int3
inc    %esi
add    %al,(%eax)
jo     8075965 <_IO_stdin_used+0xa7a1>
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
in     $0x46,%al
add    %al,(%eax)
mov    %dl,-0x1(%ebx)
lcall  *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %cl,-0x7d(%eax)
add    $0x874c0486,%eax
add    0xa980202(%ebp),%eax
vshufps $0xe,%ymm3,%ymm7,%ymm0
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
inc    %edi
add    %al,(%eax)
jl     80759aa <_IO_stdin_used+0xa7e6>
(bad)
lcall  *0x0(%ebx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x3,0x2c00e46
sub    %eax,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
push   %esp
inc    %edi
add    %al,(%eax)
cwtl
push   %edi
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
push   %cs
adc    %al,%bl
inc    %ecx
push   %cs
or     $0xc6,%al
inc    %ecx
push   %cs
or     %al,%bh
inc    %ecx
push   %cs
add    $0xc5,%al
adc    %al,(%eax)
add    %al,(%eax)
nop
inc    %edi
add    %al,(%eax)
int3
push   %edi
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x57ba0000(%edi,%eax,2)
(bad)
incl   (%eax,%eax,1)
.byte 0x10
mov    $0x4,%al
.byte 0x8
lock scas %es:(%edi),%eax
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sahf
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,%cl
add    %eax,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
js     8076ebc <_IO_stdin_used+0xbcf8>
add    $0x8,%al
or     $0xa8000000,%eax
mov    $0x6,%cl
or     %bl,(%ecx)
add    %al,(%eax)
add    %bh,%al
outsb  %ds:(%esi),(%dx)
pop    %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
outsb  %ds:(%esi),(%dx)
pop    %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
add    $0x8d,%al
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %dl,(%edx,%eax,4)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
fs
push   %es
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
jo     8076f8a <_IO_stdin_used+0xbdc6>
or     %al,(%edx)
add    %al,(%eax)
add    %ah,%al
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,0x11080495(%eax)
add    %al,(%eax)
add    %cl,-0x6b(%eax)
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x38(%edi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x68(%edi)
xchg   %eax,%ebx
add    $0x8,%al
add    %al,(%eax)
add    $0x6f,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x39f7fb66(%esi)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    8076fd9 <_IO_stdin_used+0xbe15>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    807701a <_IO_stdin_used+0xbe56>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    807705b <_IO_stdin_used+0xbe97>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    807709c <_IO_stdin_used+0xbed8>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    80770dd <_IO_stdin_used+0xbf19>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    807711e <_IO_stdin_used+0xbf5a>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
out    %al,$0xa0
add    $0x8,%al
mulb   -0x5ef9f7fc(%eax)
add    $0x8,%al
push   %ss
mov    0xa1260804,%eax
add    $0x8,%al
mov    %ss:0xa1460804,%eax
add    $0x8,%al
push   %esi
mov    0xa1660804,%eax
add    $0x8,%al
jbe    807715f <_IO_stdin_used+0xbf9b>
add    $0x8,%al
xchg   %ah,-0x5e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa1b60804,%eax
add    $0x8,%al
(bad)
mov    0xa1d60804,%eax
add    $0x8,%al
out    %al,$0xa1
add    $0x8,%al
mulb   -0x5df9f7fc(%ecx)
add    $0x8,%al
push   %ss
mov    %al,0xa2260804
add    $0x8,%al
mov    %al,%ss:0xa2460804
add    $0x8,%al
push   %esi
mov    %al,0xa2660804
add    $0x8,%al
jbe    80771a0 <_IO_stdin_used+0xbfdc>
add    $0x8,%al
xchg   %ah,-0x5d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    %al,0xa2b60804
add    $0x8,%al
(bad)
mov    %al,0xa2d60804
add    $0x8,%al
out    %al,$0xa2
add    $0x8,%al
mulb   -0x5cf9f7fc(%edx)
add    $0x8,%al
push   %ss
mov    %eax,0xa3260804
add    $0x8,%al
mov    %eax,%ss:0xa3460804
add    $0x8,%al
push   %esi
mov    %eax,0xa3660804
add    $0x8,%al
jbe    80771e1 <_IO_stdin_used+0xc01d>
add    $0x8,%al
xchg   %ah,-0x5c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    %eax,0xa3b60804
add    $0x8,%al
(bad)
mov    %eax,0xa3d60804
add    $0x8,%al
out    %al,$0xa3
add    $0x8,%al
mulb   -0x5bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
data16
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call   *%edx
ret
push   %es
or     %ch,-0x4c(%ecx)
push   %es
or     %bl,%ah
ret
push   %es
or     %ch,%ah
ret
push   %es
or     %bh,%al
ret
push   %es
or     %al,(%eax)
les    (%esi),%eax
or     %al,(%edi)
les    (%esi),%eax
or     %dl,(%edx)
les    (%esi),%eax
or     %bl,0x260806c4
les    (%esi),%eax
or     %dh,(%eax)
les    (%esi),%eax
or     %bh,(%ebx)
les    (%esi),%eax
or     %cl,-0x3c(%eax)
push   %es
or     %dl,-0x3c(%ebx)
push   %es
or     %bl,-0x3c(%esi)
push   %es
or     %ch,-0x3c(%ecx)
push   %es
or     %dh,-0x3c(%eax)
push   %es
or     %bh,-0x3c(%edx)
push   %es
or     %al,-0x3b78f7fa(%esp,%eax,8)
push   %es
or     %cl,0x806c4(%edi)
add    %al,(%eax,%eax,1)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
lret
.byte 0xdd
lods   %ds:(%esi),%eax
.byte 0x5
