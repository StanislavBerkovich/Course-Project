das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,-0x5(%ebp)
mov    $0x5c,%al
xchg   %eax,%esi
xor    %bl,0x65c5c030(%esi)
mov    %al,0x2bb77d84
dec    %edi
mov    $0x37,%dl
.byte 0xdb
adc    %eax,(%eax)
add    %al,(%eax)
jno    80481b2 <__ctype_toupper_loc@plt-0x15be>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ah,-0x3e(%edx,%eax,1)
adc    %ah,(%ecx)
or     $0x822,%eax
add    %al,-0x7effd7be(%eax)
add    %al,0x0(%ecx)
test   %ch,(%eax)
add    $0x25c4290,%eax
and    $0xa4,%al
add    %dl,(%eax)
add    $0x71,%al
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
je     80481e6 <__ctype_toupper_loc@plt-0x158a>
add    %al,(%eax)
ja     80481ea <__ctype_toupper_loc@plt-0x1586>
add    %al,(%eax)
jns    80481ee <__ctype_toupper_loc@plt-0x1582>
add    %al,(%eax)
jnp    80481f2 <__ctype_toupper_loc@plt-0x157e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jl     80481fa <__ctype_toupper_loc@plt-0x1576>
add    %al,(%eax)
jge    80481fe <__ctype_toupper_loc@plt-0x1572>
add    %al,(%eax)
jg     8048202 <__ctype_toupper_loc@plt-0x156e>
add    %al,(%eax)
addl   $0x820000,(%eax)
add    %al,(%eax)
addl   $0x0,(%eax)
add    %al,-0x77000000(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0x44000000(%ebx)
push   %eax
jbe    80481c2 <__ctype_toupper_loc@plt-0x15ae>
inc    %ebx
ret
mov    %dl,-0x5631f197(%edx)
or     $0xdf,%al
add    0x12f7c432(%ebx),%ebp
(bad)
loope  804822d <__ctype_toupper_loc@plt-0x1543>
mov    $0x86,%bh
lock xchg %eax,%esi
jl     80481d4 <__ctype_toupper_loc@plt-0x159c>
mov    0x2cce9789,%al
arpl   %si,-0x53(%edx)
dec    %ebx
jecxz  8048208 <__ctype_toupper_loc@plt-0x1568>
lret
mov    %al,%dl
stos   %al,%es:(%edi)
cmp    %esi,%edx
mov    (%esi,%ebx,1),%ebx
cs
mov    $0x4162e5a9,%esp
cmc
into
ror    %esi
stos   %al,%es:(%edi)
xor    -0x5d4c5610(%ebx),%esi
notl   (%edx)
out    %eax,$0x34
mov    $0x85050aa9,%esp
stos   %al,%es:(%edi)
jb     8048241 <__ctype_toupper_loc@plt-0x152f>
sub    0x10615566(%edx),%ebp
cmpsl  %es:(%edi),%ds:(%esi)
inc    %ebp
loop   8048255 <__ctype_toupper_loc@plt-0x151b>
dec    %ebx
popa
(bad)
sub    $0xcab2850,%eax
cmp    %ecx,0x7005fb92(%edx)
repnz lret $0x54da
push   %ss
sub    %bl,0x91051c8c
loope  804823d <__ctype_toupper_loc@plt-0x1533>
jle    80482aa <__ctype_toupper_loc@plt-0x14c6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ds
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
scas   %es:(%edi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     80483e7 <__ctype_toupper_loc@plt-0x1389>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  80483fa <__ctype_toupper_loc@plt-0x1376>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    8048406 <__ctype_toupper_loc@plt-0x136a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  8048416 <__ctype_toupper_loc@plt-0x135a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
das
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x1
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ecx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popa
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fadds  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cs
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pushf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     8048718 <__ctype_toupper_loc@plt-0x1058>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x3,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fwait
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x1
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    804890a <__ctype_toupper_loc@plt-0xe66>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,$0x2
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%edi)
add    %al,(%eax)
mov    0x4080732,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,-0x4ffffffc(%esi)
insl   (%dx),%es:(%edi)
push   %es
or     %dh,0x12000006(%ecx)
add    %cl,0x15300
add    %al,-0x68(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add %eax,(%eax)
add    %ah,-0x68(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x0
add    %al,(%eax)
loopne 8048a1c <__ctype_toupper_loc@plt-0xd54>
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
test   $0x90000000,%eax
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax,%eax,1),%al
add    %al,(%eax)
cwtl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%ecx),%eax
add    %al,(%eax)
(bad)
xor    (%edi),%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
(bad)
add    $0x32c00000,%eax
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,0x6(%edx,%esi,4)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
verw   0x5(%edi)
add    %al,(%eax)
xor    %bl,0x804(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%bh
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    (%edi),%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   $0x10000002
lcall  $0x0,$0x804
adc    (%eax),%al
add    %al,(%eax)
ds
add    $0x0,%al
add    %ah,0x4080732(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ah,(%ebx)
add    (%eax),%al
add    %dl,0x80498(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    $0x0,%al
add    %dl,(%eax)
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%al
add    %al,(%eax)
add    $0x33,%al
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
repz add %al,(%eax)
add    %dh,%al
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     8048ac8 <__ctype_toupper_loc@plt-0xca8>
add    %al,(%eax)
loopne 8048a62 <__ctype_toupper_loc@plt-0xd0e>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x3,%al
add    %al,(%eax)
rcrb   0x804(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0xe4000001,%eax
xor    (%edi),%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
adc    (%edx),%al
add    %al,(%eax)
jo     8048b6e <__ctype_toupper_loc@plt-0xc02>
push   %es
or     %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x39800
add    %al,0x34080680(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x35300
add    %dl,(%eax)
sahf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret
add    (%eax),%al
add    %dl,0x76(%eax)
push   %es
or     %ah,0x1200000a
add    %cl,0x50100
add    %al,%al
addb   $0x8,(%esi)
and    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x23900,%eax
add    %al,(%eax)
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%edx),%eax
add    %al,(%eax)
add    %dh,(%ebx)
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lret
add    $0x0,%al
add    %dl,0x8049d(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
fs
insb   (%dx),%es:(%edi)
jae,pn 8048bec <__ctype_toupper_loc@plt-0xb84>
xor    %cs:(%eax),%al
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048bee <__ctype_toupper_loc@plt-0xb82>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048c19 <__ctype_toupper_loc@plt-0xb57>
popa
jb     8048c1c <__ctype_toupper_loc@plt-0xb54>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048c0e <__ctype_toupper_loc@plt-0xb62>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048c2f <__ctype_toupper_loc@plt-0xb41>
gs
jae    8048bbf <__ctype_toupper_loc@plt-0xbb1>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048c2b <__ctype_toupper_loc@plt-0xb45>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048c5d <__ctype_toupper_loc@plt-0xb13>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ch,0x73(%ecx)
ja     8048c57 <__ctype_toupper_loc@plt-0xb19>
insb   (%dx),%es:(%edi)
jo     8048c61 <__ctype_toupper_loc@plt-0xb0f>
popa
add    %dh,0x74(%ebx)
jb     8048c62 <__ctype_toupper_loc@plt-0xb0e>
jo     8048c7a <__ctype_toupper_loc@plt-0xaf6>
add    %bl,0x5f(%edi)
jo     8048c78 <__ctype_toupper_loc@plt-0xaf8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
pop    %edi
jae    8048c79 <__ctype_toupper_loc@plt-0xaf7>
je     8048c75 <__ctype_toupper_loc@plt-0xafb>
jae    8048c91 <__ctype_toupper_loc@plt-0xadf>
outsb  %ds:(%esi),(%dx)
je     8048c7c <__ctype_toupper_loc@plt-0xaf4>
js     8048c1d <__ctype_toupper_loc@plt-0xb53>
data16
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8048c86 <__ctype_toupper_loc@plt-0xaea>
push   $0x74657300
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048ca7 <__ctype_toupper_loc@plt-0xac9>
outsl  %ds:(%esi),(%dx)
ja     8048c99 <__ctype_toupper_loc@plt-0xad7>
add    %dh,0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048ca3 <__ctype_toupper_loc@plt-0xacd>
jb     8048c40 <__ctype_toupper_loc@plt-0xb30>
jae    8048cb6 <__ctype_toupper_loc@plt-0xaba>
jb     8048cb2 <__ctype_toupper_loc@plt-0xabe>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048cb5 <__ctype_toupper_loc@plt-0xabb>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048cc5 <__ctype_toupper_loc@plt-0xaab>
arpl   %bp,0x72(%eax)
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048ccf <__ctype_toupper_loc@plt-0xaa1>
push   $0x6c6e755f
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x73(%ecx)
popa
insb   (%dx),%es:(%edi)
jo     8048cd5 <__ctype_toupper_loc@plt-0xa9b>
popa
add    %dh,0x65(%edx)
addr16
gs
js     8048cda <__ctype_toupper_loc@plt-0xa96>
arpl   %ax,(%eax)
jb     8048cde <__ctype_toupper_loc@plt-0xa92>
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     8048ce1 <__ctype_toupper_loc@plt-0xa8f>
push   $0x735f5f00
je     8048cf7 <__ctype_toupper_loc@plt-0xa79>
fs
jne    8048cf8 <__ctype_toupper_loc@plt-0xa78>
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048d03 <__ctype_toupper_loc@plt-0xa6d>
gs
js     8048d06 <__ctype_toupper_loc@plt-0xa6a>
add    %dh,0x63(%edi)
jb     8048d0b <__ctype_toupper_loc@plt-0xa65>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048d13 <__ctype_toupper_loc@plt-0xa5d>
je     8048d03 <__ctype_toupper_loc@plt-0xa6d>
je     8048d05 <__ctype_toupper_loc@plt-0xa6b>
je     8048cdc <__ctype_toupper_loc@plt-0xa94>
xor    $0x0,%al
data16
jo     8048d20 <__ctype_toupper_loc@plt-0xa50>
je     8048d10 <__ctype_toupper_loc@plt-0xa60>
pop    %edi
jne    8048d1e <__ctype_toupper_loc@plt-0xa52>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    8048d21 <__ctype_toupper_loc@plt-0xa4f>
imul   $0x64686366,%fs:0x0(%edx),%esi
imul   $0x6c627369,0x0(%edx),%esi
popa
outsb  %ds:(%esi),(%dx)
imul   $0x65,(%eax),%eax
jb     8048d44 <__ctype_toupper_loc@plt-0xa2c>
outsl  %ds:(%esi),(%dx)
jb     8048cd5 <__ctype_toupper_loc@plt-0xa9b>
imul   $0x63617073,0x77(%ebx),%esi
add    %dh,%gs:0x65(%edx)
addr16
data16
jb     8048d49 <__ctype_toupper_loc@plt-0xa27>
add    %bl,%gs:0x5f(%edi)
jae    8048d5e <__ctype_toupper_loc@plt-0xa12>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
bound  %esi,0x77(%edi,%ebp,2)
arpl   %ax,(%eax)
je     8048d7f <__ctype_toupper_loc@plt-0x9f1>
ja     8048d87 <__ctype_toupper_loc@plt-0x9e9>
jo     8048d84 <__ctype_toupper_loc@plt-0x9ec>
gs
jb     8048d17 <__ctype_toupper_loc@plt-0xa59>
popa
bound  %ebp,0x72(%edi)
je     8048d1d <__ctype_toupper_loc@plt-0xa53>
jae    8048d93 <__ctype_toupper_loc@plt-0x9dd>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048d29 <__ctype_toupper_loc@plt-0xa47>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     8048d98 <__ctype_toupper_loc@plt-0x9d8>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048d9f <__ctype_toupper_loc@plt-0x9d1>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048dc8 <__ctype_toupper_loc@plt-0x9a8>
gs
jb     8048dcc <__ctype_toupper_loc@plt-0x9a4>
pop    %edi
popaw
imul   $0x6c617773,0x69(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
jne    8048dd3 <__ctype_toupper_loc@plt-0x99d>
add    %ch,0x73(%ecx)
jae    8048ddb <__ctype_toupper_loc@plt-0x995>
popa
arpl   %sp,0x0(%ebp)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048dda <__ctype_toupper_loc@plt-0x996>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048df3 <__ctype_toupper_loc@plt-0x97d>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048d86 <__ctype_toupper_loc@plt-0x9ea>
data16
je     8048dfc <__ctype_toupper_loc@plt-0x974>
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x73(%ecx)
popa
je     8048e09 <__ctype_toupper_loc@plt-0x967>
jns    8048d97 <__ctype_toupper_loc@plt-0x9d9>
imul   $0x746e6972,0x70(%ebx),%esi
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048e1c <__ctype_toupper_loc@plt-0x954>
jb     8048e16 <__ctype_toupper_loc@plt-0x95a>
outsb  %gs:(%esi),(%dx)
add    %ch,0x73(%ecx)
js     8048e15 <__ctype_toupper_loc@plt-0x95b>
imul   $0x6e750074,0x69(%edi),%esp
addr16
gs
je     8048e1f <__ctype_toupper_loc@plt-0x951>
add    %ch,0x73(%ecx)
ja     8048e24 <__ctype_toupper_loc@plt-0x94c>
je     8048e3c <__ctype_toupper_loc@plt-0x934>
jo     8048e2a <__ctype_toupper_loc@plt-0x946>
add    %ah,0x72(%esi)
gs
popa
fs
pop    %edi
jne    8048e3c <__ctype_toupper_loc@plt-0x934>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048e3f <__ctype_toupper_loc@plt-0x931>
je     8048ddc <__ctype_toupper_loc@plt-0x994>
imul   $0x6d756e6c,0x61(%ebx),%esi
add    %ch,0x73(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048e4f <__ctype_toupper_loc@plt-0x921>
jb     8048dec <__ctype_toupper_loc@plt-0x984>
pop    %edi
pop    %edi
gs
jb     8048e63 <__ctype_toupper_loc@plt-0x90d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048e78 <__ctype_toupper_loc@plt-0x8f8>
popa
addr16
gs
jae    8048e76 <__ctype_toupper_loc@plt-0x8fa>
jp     8048e74 <__ctype_toupper_loc@plt-0x8fc>
add    %dh,0x63(%edi)
je     8048e83 <__ctype_toupper_loc@plt-0x8ed>
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048e8e <__ctype_toupper_loc@plt-0x8e2>
je     8048e7e <__ctype_toupper_loc@plt-0x8f2>
je     8048e55 <__ctype_toupper_loc@plt-0x91b>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048e98 <__ctype_toupper_loc@plt-0x8d8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x69,(%eax),%eax
jae    8048ea9 <__ctype_toupper_loc@plt-0x8c7>
jne    8048ea4 <__ctype_toupper_loc@plt-0x8cc>
jo     8048e9b <__ctype_toupper_loc@plt-0x8d5>
jb     8048e38 <__ctype_toupper_loc@plt-0x938>
jae    8048eae <__ctype_toupper_loc@plt-0x8c2>
outsl  %fs:(%esi),(%dx)
jne    8048eb2 <__ctype_toupper_loc@plt-0x8be>
add    %ah,0x74(%esi)
jae    8048ea2 <__ctype_toupper_loc@plt-0x8ce>
jb     8048eaa <__ctype_toupper_loc@plt-0x8c6>
popa
add    %bl,%fs:0x5f(%edi)
jae    8048ec0 <__ctype_toupper_loc@plt-0x8b0>
jb     8048ec2 <__ctype_toupper_loc@plt-0x8ae>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x70(%esi)
jne    8048ed3 <__ctype_toupper_loc@plt-0x89d>
jae    8048e61 <__ctype_toupper_loc@plt-0x90f>
jae    8048ed7 <__ctype_toupper_loc@plt-0x899>
jb     8048ed3 <__ctype_toupper_loc@plt-0x89d>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048edb <__ctype_toupper_loc@plt-0x895>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048ef4 <__ctype_toupper_loc@plt-0x87c>
jb     8048ee5 <__ctype_toupper_loc@plt-0x88b>
popa
jae    8048eea <__ctype_toupper_loc@plt-0x886>
arpl   %bp,0x70(%ebp)
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048ef3 <__ctype_toupper_loc@plt-0x87d>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
pop    %edi
arpl   %bp,0x6d(%edi)
jo     8048f1a <__ctype_toupper_loc@plt-0x856>
insb   (%dx),%es:(%edi)
gs
pop    %edi
jo     8048f17 <__ctype_toupper_loc@plt-0x859>
je     8048f2c <__ctype_toupper_loc@plt-0x844>
gs
jb     8048f29 <__ctype_toupper_loc@plt-0x847>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     8048f34 <__ctype_toupper_loc@plt-0x83c>
je     8048f24 <__ctype_toupper_loc@plt-0x84c>
je     8048efb <__ctype_toupper_loc@plt-0x875>
xor    $0x0,%al
imul   $0x72657070,0x75(%ebx),%esi
add    %ah,0x73(%esi)
je     8048f34 <__ctype_toupper_loc@plt-0x83c>
je     8048f3b <__ctype_toupper_loc@plt-0x835>
jae    8048f0d <__ctype_toupper_loc@plt-0x863>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048f43 <__ctype_toupper_loc@plt-0x82d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048ee1 <__ctype_toupper_loc@plt-0x88f>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     8048f64 <__ctype_toupper_loc@plt-0x80c>
je     8048f54 <__ctype_toupper_loc@plt-0x81c>
je     8048f2b <__ctype_toupper_loc@plt-0x845>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048f6e <__ctype_toupper_loc@plt-0x802>
outsb  %ds:(%esi),(%dx)
jbe    8048f0c <__ctype_toupper_loc@plt-0x864>
data16
je     8048f82 <__ctype_toupper_loc@plt-0x7ee>
pop    %edi
jae    8048f77 <__ctype_toupper_loc@plt-0x7f9>
je     8048f14 <__ctype_toupper_loc@plt-0x85c>
jb     8048f7b <__ctype_toupper_loc@plt-0x7f5>
arpl   %bp,0x6d(%bx)
jo     8048f1c <__ctype_toupper_loc@plt-0x854>
imul   $0x68706172,0x67(%ebx),%esi
add    %ch,0x70(%edi)
je     8048f89 <__ctype_toupper_loc@plt-0x7e7>
jb     8048f91 <__ctype_toupper_loc@plt-0x7df>
add    %dh,0x74(%ebx)
fs
gs
jb     8048fa3 <__ctype_toupper_loc@plt-0x7cd>
add    %dh,0x63(%edi)
ja     8048f9f <__ctype_toupper_loc@plt-0x7d1>
fs
je     8048fa1 <__ctype_toupper_loc@plt-0x7cf>
add    %bl,0x6f(%edi)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
outsb  %ds:(%esi),(%dx)
gs
ja     8048faa <__ctype_toupper_loc@plt-0x7c6>
push   $0x6b6e75
data16
jae    8048fb2 <__ctype_toupper_loc@plt-0x7be>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048fc6 <__ctype_toupper_loc@plt-0x7aa>
jo     8048fcd <__ctype_toupper_loc@plt-0x7a3>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%bp,%si)
pop    %edi
jae    8048fc9 <__ctype_toupper_loc@plt-0x7a7>
popa
jb     8048fca <__ctype_toupper_loc@plt-0x7a6>
push   $0x72776600
imul   $0x6e6f6369,0x0(%ebp,%eiz,2),%esi
jbe    8048fd5 <__ctype_toupper_loc@plt-0x79b>
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x5f(%edi)
data16
jo     8048fe6 <__ctype_toupper_loc@plt-0x78a>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048ff6 <__ctype_toupper_loc@plt-0x77a>
push   $0x626f0072
jae    804900e <__ctype_toupper_loc@plt-0x762>
popa
arpl   %bp,0x5f(%ebx)
data16
jb     8049006 <__ctype_toupper_loc@plt-0x76a>
add    %ch,%gs:0x73(%ecx)
ja     804900a <__ctype_toupper_loc@plt-0x766>
outsb  %ds:(%esi),(%dx)
je     804901c <__ctype_toupper_loc@plt-0x754>
insb   (%dx),%es:(%edi)
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048fb2 <__ctype_toupper_loc@plt-0x7be>
jo     8049026 <__ctype_toupper_loc@plt-0x74a>
outsl  %ds:(%esi),(%dx)
addr16 jb 8049019 <__ctype_toupper_loc@plt-0x757>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     804903e <__ctype_toupper_loc@plt-0x732>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     804903a <__ctype_toupper_loc@plt-0x736>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     804905a <__ctype_toupper_loc@plt-0x716>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    804904c <__ctype_toupper_loc@plt-0x724>
outsl  %ds:(%esi),(%dx)
jo     8049055 <__ctype_toupper_loc@plt-0x71b>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     804906b <__ctype_toupper_loc@plt-0x705>
jne    804906e <__ctype_toupper_loc@plt-0x702>
jo     8049065 <__ctype_toupper_loc@plt-0x70b>
jb     8049061 <__ctype_toupper_loc@plt-0x70f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     804907f <__ctype_toupper_loc@plt-0x6f1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049079 <__ctype_toupper_loc@plt-0x6f7>
jb     8049075 <__ctype_toupper_loc@plt-0x6fb>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
je     8049090 <__ctype_toupper_loc@plt-0x6e0>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8049086 <__ctype_toupper_loc@plt-0x6ea>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     8049094 <__ctype_toupper_loc@plt-0x6dc>
add    %bl,0x5f(%edi)
jae    804909d <__ctype_toupper_loc@plt-0x6d3>
jb     8049098 <__ctype_toupper_loc@plt-0x6d8>
outsb  %ds:(%esi),(%dx)
je     8049098 <__ctype_toupper_loc@plt-0x6d8>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x73(%ecx)
imul   $0x73690074,%fs:0x69(%edi),%esp
arpl   %bp,0x74(%esi)
jb     80490b2 <__ctype_toupper_loc@plt-0x6be>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80490b3 <__ctype_toupper_loc@plt-0x6bd>
add    %ah,0x6f(%esi)
jo     80490b8 <__ctype_toupper_loc@plt-0x6b8>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
bound  %esp,0x67(%ebp)
imul   $0x646e6962,0x0(%esi),%ebp
je     80490d1 <__ctype_toupper_loc@plt-0x69f>
js     80490e2 <__ctype_toupper_loc@plt-0x68e>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x5f737466,0x0(%esi),%ebp
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
jb     80490e5 <__ctype_toupper_loc@plt-0x68b>
outsb  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     80490bf <__ctype_toupper_loc@plt-0x6b1>
xor    $0x0,%al
data16
ja     8049100 <__ctype_toupper_loc@plt-0x670>
imul   $0x6f6c6e75,0x5f(%ebp,%eiz,2),%esi
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     8049102 <__ctype_toupper_loc@plt-0x66e>
insl   (%dx),%es:(%edi)
jo     80490a2 <__ctype_toupper_loc@plt-0x6ce>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049122 <__ctype_toupper_loc@plt-0x64e>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %dh,%fs:0x74(%ebx)
jo     8049121 <__ctype_toupper_loc@plt-0x64f>
jo     8049139 <__ctype_toupper_loc@plt-0x637>
add    %dh,0x74(%ebx)
jb     8049128 <__ctype_toupper_loc@plt-0x648>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8049133 <__ctype_toupper_loc@plt-0x63d>
jb     8049136 <__ctype_toupper_loc@plt-0x63a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80490d4 <__ctype_toupper_loc@plt-0x69c>
data16
jo     804914c <__ctype_toupper_loc@plt-0x624>
je     804914c <__ctype_toupper_loc@plt-0x624>
pop    %edi
jne    804914a <__ctype_toupper_loc@plt-0x626>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x73(%ecx)
jo     804915c <__ctype_toupper_loc@plt-0x614>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x5f(%eax,%eax,1)
pop    %edi
jo     8049161 <__ctype_toupper_loc@plt-0x60f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     804916c <__ctype_toupper_loc@plt-0x604>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8049170 <__ctype_toupper_loc@plt-0x600>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8049174 <__ctype_toupper_loc@plt-0x5fc>
js     804917a <__ctype_toupper_loc@plt-0x5f6>
je     8049113 <__ctype_toupper_loc@plt-0x65d>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x4000300
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %cl,(%ecx)
add    %al,(%eax,%eax,1)
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    $0x4000300,%eax
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,%gs:(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %cl,(%ecx)
add    %bl,0x10000005(%edi)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x80000,(%ecx),%ecx
stos   %eax,%es:(%edi)
add    $0x100000,%eax
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x70000,%eax
mov    $0x5,%bh
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    80492e4 <__ctype_toupper_loc@plt-0x48c>
imul   $0x60000,(%ecx),%ecx
roll   $0x0,0x100000
add    %dl,(%ecx,%ebp,2)
imul   $0x5cd,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
xlat   %ds:(%ebx)
add    $0x100000,%eax
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
loope  8049307 <__ctype_toupper_loc@plt-0x469>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x20000,%eax
jmp    8049317 <__ctype_toupper_loc@plt-0x459>
add    %al,(%eax)
add    %al,(%eax)
cld
das
pop    %es
or     %al,(%esi)
xor    %al,(%eax)
add    %ah,0x5080732(%eax)
jno    8049327 <__ctype_toupper_loc@plt-0x449>
add    %ah,0x7c050807(%edx,%esi,1)
add    %al,(%eax)
(bad)
xor    (%edi),%al
or     %al,0xe0000079
xor    (%edi),%al
or     %al,0xe4000075
xor    (%edi),%al
or     %al,0x85
xor    (%edi),%eax
or     %al,0x400008c
xor    (%edi),%eax
.byte 0x8
.byte 0x5
.byte 0x81
or     $0x30,%al
pop    %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
xor    %al,(%edi)
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%esi,1)
pop    %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
xor    %al,(%edi)
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%esi,1)
pop    %es
or     %al,(%edi)
add    $0x30200000,%eax
pop    %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
and    $0x30,%al
pop    %es
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax)
xor    %al,(%edi)
or     %al,(%edi)
or     %eax,(%eax)
add    %ch,(%eax,%esi,1)
pop    %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax)
xor    %al,(%edi)
or     %al,(%edi)
ja     80493a7 <__ctype_toupper_loc@plt-0x3c9>
add    %dh,(%eax,%esi,1)
pop    %es
or     %al,(%edi)
or     (%eax),%eax
add    %bh,(%eax)
xor    %al,(%edi)
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%esi,1)
pop    %es
or     %al,(%edi)
or     $0x30400000,%eax
pop    %es
or     %al,(%edi)
jae    80493c7 <__ctype_toupper_loc@plt-0x3a9>
add    %al,0x7(%eax,%esi,1)
or     %al,(%edi)
push   %cs
add    %al,(%eax)
dec    %eax
xor    %al,(%edi)
or     %al,(%edi)
je     80493d7 <__ctype_toupper_loc@plt-0x399>
add    %cl,0x7(%eax,%esi,1)
or     %al,(%edi)
sldt   (%eax)
push   %eax
xor    %al,(%edi)
or     %al,(%edi)
adc    %al,(%eax)
add    %dl,0x7(%eax,%esi,1)
or     %al,(%edi)
jg     80493ef <__ctype_toupper_loc@plt-0x381>
add    %bl,0x30(%eax)
pop    %es
or     %al,(%edi)
adc    %eax,(%eax)
add    %bl,0x7(%eax,%esi,1)
or     %al,(%edi)
adc    (%eax),%al
add    %ah,0x30(%eax)
pop    %es
or     %al,(%edi)
adc    (%eax),%eax
add    %ah,0x7(%eax,%esi,1)
or     %al,(%edi)
adc    $0x0,%al
add    %ch,0x30(%eax)
pop    %es
or     %al,(%edi)
addl   $0x0,(%eax)
insb   (%dx),%es:(%edi)
xor    %al,(%edi)
or     %al,(%edi)
adc    $0x30700000,%eax
pop    %es
or     %al,(%edi)
mov    (%eax),%eax
add    %dh,0x7(%eax,%esi,1)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
js     8049462 <__ctype_toupper_loc@plt-0x30e>
pop    %es
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
jl     804946a <__ctype_toupper_loc@plt-0x306>
pop    %es
or     %al,(%edi)
jnp    804943f <__ctype_toupper_loc@plt-0x331>
add    %al,0x7080730(%eax)
sbb    %al,(%eax)
add    %al,0x19070807(%eax,%esi,1)
add    %al,(%eax)
mov    %dh,(%eax)
pop    %es
or     %al,(%edi)
sbb    (%eax),%al
add    %cl,0x1b070807(%eax,%esi,1)
add    %al,(%eax)
nop
xor    %al,(%edi)
or     %al,(%edi)
sbb    $0x0,%al
add    %dl,0x76070807(%eax,%esi,1)
add    %al,(%eax)
cwtl
xor    %al,(%edi)
or     %al,(%edi)
sbb    $0x309c0000,%eax
pop    %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
mov    0x7080730,%al
pop    %ds
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %al,(%edi)
or     %al,(%edi)
and    %al,(%eax)
add    %ch,0x7080730(%eax)
and    %eax,(%eax)
add    %ch,0x22070807(%eax,%esi,1)
add    %al,(%eax)
mov    $0x30,%al
pop    %es
or     %al,(%edi)
and    (%eax),%eax
add    %dh,0x7d070807(%eax,%esi,1)
add    %al,(%eax)
mov    $0x7080730,%eax
and    $0x0,%al
add    %bh,0x25070807(%eax,%esi,1)
add    %al,(%eax)
(bad)
xor    %al,(%edi)
or     %al,(%edi)
add    %al,%es:(%eax)
les    (%eax),%esi
pop    %es
or     %al,(%edi)
daa
add    %al,(%eax)
enter  $0x730,$0x8
pop    %es
sub    %al,(%eax)
add    %cl,%ah
xor    %al,(%edi)
or     %al,(%edi)
sub    %eax,(%eax)
add    %dl,%al
xor    %al,(%edi)
or     %al,(%edi)
sub    (%eax),%al
add    %dl,%ah
xor    %al,(%edi)
or     %al,(%edi)
sub    (%eax),%eax
add    %bl,%al
xor    %al,(%edi)
or     %al,(%edi)
sub    $0x0,%al
add    %bl,%ah
xor    %al,(%edi)
or     %al,(%edi)
sub    $0x30e00000,%eax
pop    %es
or     %al,(%edi)
add    %al,%cs:(%eax)
in     $0x30,%al
pop    %es
or     %al,(%edi)
test   %al,(%eax)
add    %ch,%al
xor    %al,(%edi)
or     %al,(%edi)
das
add    %al,(%eax)
in     (%dx),%al
xor    %al,(%edi)
or     %al,(%edi)
xor    %al,(%eax)
add    %dh,%al
xor    %al,(%edi)
or     %al,(%edi)
xor    %eax,(%eax)
add    %dh,%ah
xor    %al,(%edi)
or     %al,(%edi)
xor    (%eax),%al
add    %bh,%al
xor    %al,(%edi)
or     %al,(%edi)
xor    (%eax),%eax
add    %bh,%ah
xor    %al,(%edi)
or     %al,(%edi)
xor    $0x0,%al
add    %al,(%eax)
xor    %eax,(%edi)
or     %al,(%edi)
xor    $0x31040000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ss:(%eax)
or     %dh,(%ecx)
pop    %es
or     %al,(%edi)
aaa
add    %al,(%eax)
or     $0x31,%al
pop    %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %dl,(%eax)
xor    %eax,(%edi)
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dl,(%ecx,%esi,1)
pop    %es
or     %al,(%edi)
cmp    (%eax),%al
add    %bl,(%eax)
xor    %eax,(%edi)
or     %al,(%edi)
cmp    (%eax),%eax
add    %bl,(%ecx,%esi,1)
pop    %es
or     %al,(%edi)
cmp    $0x0,%al
add    %ah,(%eax)
xor    %eax,(%edi)
or     %al,(%edi)
cmp    $0x31240000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ds:(%eax)
sub    %dh,(%ecx)
pop    %es
or     %al,(%edi)
aas
add    %al,(%eax)
sub    $0x31,%al
pop    %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
xor    %dh,(%ecx)
pop    %es
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
xor    $0x31,%al
pop    %es
or     %al,(%edi)
addb   $0x0,(%eax)
cmp    %dh,(%ecx)
pop    %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
cmp    $0x31,%al
pop    %es
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
inc    %eax
xor    %eax,(%edi)
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
inc    %esp
xor    %eax,(%edi)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
dec    %eax
xor    %eax,(%edi)
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
dec    %esp
xor    %eax,(%edi)
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
push   %eax
xor    %eax,(%edi)
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
push   %esp
xor    %eax,(%edi)
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
pop    %eax
xor    %eax,(%edi)
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
pop    %esp
xor    %eax,(%edi)
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
pusha
xor    %eax,(%edi)
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
xor    %eax,%fs:(%edi)
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
push   $0x7080731
dec    %esi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    %eax,(%edi)
or     %al,(%edi)
(bad)
add    %al,(%eax)
jo     8049653 <__ctype_toupper_loc@plt-0x11d>
pop    %es
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
je     804965b <__ctype_toupper_loc@plt-0x115>
pop    %es
or     %al,(%edi)
push   %eax
add    %al,(%eax)
js     8049663 <__ctype_toupper_loc@plt-0x10d>
pop    %es
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
jl     804966b <__ctype_toupper_loc@plt-0x105>
pop    %es
or     %al,(%edi)
push   %edx
add    %al,(%eax)
xorb   $0x7,(%ecx)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
test   %dh,(%ecx)
pop    %es
or     %al,(%edi)
push   %esp
add    %al,(%eax)
mov    %dh,(%ecx)
pop    %es
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
mov    %?,(%ecx)
pop    %es
or     %al,(%edi)
push   %edi
add    %al,(%eax)
nop
xor    %eax,(%edi)
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
xchg   %eax,%esp
xor    %eax,(%edi)
or     %al,(%edi)
lea    (%eax),%eax
add    %bl,0x7080731(%eax)
pop    %ecx
add    %al,(%eax)
pushf
xor    %eax,(%edi)
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
mov    0x7080731,%al
pop    %ebx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %eax,(%edi)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
test   $0x31,%al
pop    %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
lods   %ds:(%esi),%al
xor    %eax,(%edi)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
mov    $0x31,%al
pop    %es
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
mov    $0x31,%ah
pop    %es
or     %al,(%edi)
mov    %al,(%eax)
add    %bh,0x7080731(%eax)
popa
add    %al,(%eax)
mov    $0x7080731,%esp
bound  %eax,(%eax)
add    %al,%al
xor    %eax,(%edi)
or     %al,(%edi)
arpl   %ax,(%eax)
add    %al,%ah
xor    %eax,(%edi)
or     %al,(%edi)
add    %al,%fs:(%eax)
enter  $0x731,$0x8
pop    %es
add    %al,%gs:(%eax)
int3
xor    %eax,(%edi)
or     %al,(%edi)
data16
add    %al,(%eax)
(bad)
xor    %eax,(%edi)
or     %al,(%edi)
add    %al,(%bx,%si)
aam    $0x31
pop    %es
or     %al,(%edi)
push   $0x31d80000
pop    %es
or     %al,(%edi)
imul   $0x731dc00,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %ah,%al
xor    %eax,(%edi)
or     %al,(%edi)
imul   $0x0,(%eax),%eax
in     $0x31,%al
pop    %es
or     %al,(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
call   f0c9e46 <optarg+0x7056b42>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
in     (%dx),%al
xor    %eax,(%edi)
or     %al,(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
lock xor %eax,(%edi)
or     %al,(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
hlt
xor    %eax,(%edi)
or     %al,(%edi)
jo     804972f <__ctype_toupper_loc@plt-0x41>
push   %ebx
sub    $0x8,%esp
call   804af40 <__sprintf_chk@plt+0x1030>
add    $0x298c7,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804974e <__ctype_toupper_loc@plt-0x22>
call   8049af0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8073004
jmp    *0x8073008
add    %al,(%eax)
jmp    *0x807300c
push   $0x0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073010
push   $0x8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073014
push   $0x10
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073018
push   $0x18
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807301c
push   $0x20
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073020
push   $0x28
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073024
push   $0x30
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073028
push   $0x38
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807302c
push   $0x40
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073030
push   $0x48
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073034
push   $0x50
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073038
push   $0x58
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807303c
push   $0x60
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073040
push   $0x68
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073044
push   $0x70
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073048
push   $0x78
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807304c
push   $0x80
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073050
push   $0x88
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073054
push   $0x90
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073058
push   $0x98
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807305c
push   $0xa0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073060
push   $0xa8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073064
push   $0xb0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073068
push   $0xb8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807306c
push   $0xc0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073070
push   $0xc8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073074
push   $0xd0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073078
push   $0xd8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807307c
push   $0xe0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073080
push   $0xe8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073084
push   $0xf0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073088
push   $0xf8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807308c
push   $0x100
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073090
push   $0x108
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073094
push   $0x110
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073098
push   $0x118
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807309c
push   $0x120
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730a0
push   $0x128
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730a4
push   $0x130
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730a8
push   $0x138
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730ac
push   $0x140
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730b0
push   $0x148
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730b4
push   $0x150
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730b8
push   $0x158
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730bc
push   $0x160
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730c0
push   $0x168
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730c4
push   $0x170
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730c8
push   $0x178
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730cc
push   $0x180
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730d0
push   $0x188
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730d4
push   $0x190
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730d8
push   $0x198
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730dc
push   $0x1a0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730e0
push   $0x1a8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730e4
push   $0x1b0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730e8
push   $0x1b8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730ec
push   $0x1c0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730f0
push   $0x1c8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730f4
push   $0x1d0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730f8
push   $0x1d8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80730fc
push   $0x1e0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073100
push   $0x1e8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073104
push   $0x1f0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073108
push   $0x1f8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807310c
push   $0x200
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073110
push   $0x208
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073114
push   $0x210
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073118
push   $0x218
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807311c
push   $0x220
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073120
push   $0x228
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073124
push   $0x230
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073128
push   $0x238
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807312c
push   $0x240
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073130
push   $0x248
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073134
push   $0x250
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073138
push   $0x258
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807313c
push   $0x260
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073140
push   $0x268
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073144
push   $0x270
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073148
push   $0x278
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807314c
push   $0x280
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073150
push   $0x288
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073154
push   $0x290
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073158
push   $0x298
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807315c
push   $0x2a0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073160
push   $0x2a8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073164
push   $0x2b0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073168
push   $0x2b8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807316c
push   $0x2c0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073170
push   $0x2c8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073174
push   $0x2d0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073178
push   $0x2d8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807317c
push   $0x2e0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073180
push   $0x2e8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073184
push   $0x2f0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073188
push   $0x2f8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807318c
push   $0x300
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073190
push   $0x308
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073194
push   $0x310
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8073198
push   $0x318
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x807319c
push   $0x320
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731a0
push   $0x328
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731a4
push   $0x330
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731a8
push   $0x338
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731ac
push   $0x340
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731b0
push   $0x348
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731b4
push   $0x350
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731b8
push   $0x358
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731bc
push   $0x360
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731c0
push   $0x368
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731c4
push   $0x370
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731c8
push   $0x378
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731cc
push   $0x380
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731d0
push   $0x388
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731d4
push   $0x390
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731d8
push   $0x398
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731dc
push   $0x3a0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731e0
push   $0x3a8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731e4
push   $0x3b0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731e8
push   $0x3b8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731ec
push   $0x3c0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731f0
push   $0x3c8
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80731f4
push   $0x3d0
jmp    8049760 <__ctype_toupper_loc@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xd0,%esp
mov    0xc(%ebp),%eax
mov    %gs:0x14,%edx
mov    %edx,0xcc(%esp)
xor    %edx,%edx
movl   $0x2,0x807324c
00
mov    %eax,%edi
mov    %eax,0x3c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   805e0d0 <__sprintf_chk@plt+0x141c0>
mov    (%edi),%eax
movl   $0x806b38e,0x4(%esp)
movl   $0x6,(%esp)
movb   $0xa,0x8074044
mov    %eax,0x8073ae8
movl   $0xffffffff,0x80733fc
ff
movl   $0xffffffff,0x80733c0
ff
movl   $0x7fffffff,0x80733c4
7f
movl   $0xffffffff,0x80733e0
ff
movl   $0xffffffff,0x80733e4
ff
movl   $0xffffffff,0x80733d8
ff
movl   $0xffffffff,0x80733dc
ff
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x8073458
00
call   8049d30 <setlocale@plt>
movl   $0x806b443,0x4(%esp)
movl   $0x806b520,(%esp)
call   8049e00 <bindtextdomain@plt>
movl   $0x806b520,(%esp)
call   8049960 <textdomain@plt>
movl   $0x804bec0,(%esp)
movl   $0x2,0x807324c
00
call   806b210 <fts_children+0x3150>
movl   $0x806b455,(%esp)
call   8049a90 <getenv@plt>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
mov    %eax,%ebx
je     804a037 <__sprintf_chk@plt+0x127>
cmpb   $0x0,(%eax)
jne    804aad3 <__sprintf_chk@plt+0xbc3>
xor    %eax,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x30(%esp)
xchg   %ax,%ax
mov    0x80732e0,%eax
lea    0xb0(%esp),%ebx
xor    %edi,%edi
mov    %eax,0x34(%esp)
mov    %eax,%esi
jmp    804a08e <__sprintf_chk@plt+0x17e>
xchg   %ax,%ax
mov    %esi,0x8073208
mov    0x80732e0,%esi
lea    0x1(%ecx),%ebx
mov    %al,(%ecx)
mov    $0x1,%edi
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x806caa0,0xc(%esp)
movl   $0x806cde0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049b30 <getopt_long@plt>
lea    -0x30(%eax),%ecx
cmp    $0x9,%ecx
ja     804a1f8 <__sprintf_chk@plt+0x2e8>
cmp    %esi,0x8073208
lea    0xb0(%esp),%ecx
jne    804a078 <__sprintf_chk@plt+0x168>
test   %edi,%edi
je     804a1e8 <__sprintf_chk@plt+0x2d8>
xor    %ecx,%ecx
cmpb   $0x30,0xb0(%esp)
lea    0xc5(%esp),%edx
sete   %cl
sub    %ecx,%ebx
cmp    %edx,%ebx
mov    %ebx,%ecx
jne    804a078 <__sprintf_chk@plt+0x168>
mov    %eax,%edx
movl   $0x2e2e2e,0xc5(%esp)
00
lea    0xc8(%esp),%ebx
lea    0x48(%esp),%eax
movb   $0x0,(%ebx)
mov    %eax,0xc(%esp)
lea    0xb0(%esp),%eax
movl   $0x806b38e,0x10(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   8064590 <__sprintf_chk@plt+0x1a680>
mov    0x38(%esp),%edx
cmp    $0x1,%eax
ja     804a210 <__sprintf_chk@plt+0x300>
mov    0x4c(%esp),%eax
test   %eax,%eax
js     804a210 <__sprintf_chk@plt+0x300>
cmp    $0xffffffff,%edx
je     804a268 <__sprintf_chk@plt+0x358>
cmp    $0x89,%edx
ja     804aa64 <__sprintf_chk@plt+0xb54>
jmp    *0x806c85c(,%edx,4)
movl   $0x30a,0x807320c
00
mov    0x34(%esp),%eax
movl   $0x3,0x8073210
00
mov    %eax,0x24(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x806b589,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804a1bb <__sprintf_chk@plt+0x2ab>
movl   $0x1,0x8073400
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x806b5fb,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804ae5e <__sprintf_chk@plt+0xf4e>
movl   $0x2,0x8073400
00
jmp    804a060 <__sprintf_chk@plt+0x150>
lea    0x0(%esi),%esi
lea    0xb0(%esp),%ecx
jmp    804a078 <__sprintf_chk@plt+0x168>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
lea    0xb0(%esp),%eax
cmp    %eax,%ebx
jne    804a10c <__sprintf_chk@plt+0x1fc>
jmp    804a15b <__sprintf_chk@plt+0x24b>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806b798,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806b3bd,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
call   8049a60 <error@plt>
mov    0x38(%esp),%edx
cmp    $0xffffffff,%edx
jne    804a164 <__sprintf_chk@plt+0x254>
cmpl   $0x2,0x807345c
je     804add9 <__sprintf_chk@plt+0xec9>
call   80658c0 <__sprintf_chk@plt+0x1b9b0>
cmpl   $0x0,0x8073388
je     804abaa <__sprintf_chk@plt+0xc9a>
movl   $0x0,0x80733cc
00
movl   $0x0,0x80733d0
00
movl   $0x1,0x807338c
00
mov    0x807338c,%eax
or     0x80733d0,%eax
cmpl   $0x0,0x80733dc
mov    %eax,0x80733f8
js     804ad73 <__sprintf_chk@plt+0xe63>
cmpl   $0x0,0x80733e4
js     804ad5b <__sprintf_chk@plt+0xe4b>
cmpl   $0x0,0x807345c
jne    804ac58 <__sprintf_chk@plt+0xd48>
cmpl   $0x0,0x8073464
jne    804abec <__sprintf_chk@plt+0xcdc>
cmpl   $0x0,0x8073468
jne    804abbc <__sprintf_chk@plt+0xcac>
lea    0x50(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80499d0 <__fxstat64@plt>
test   %eax,%eax
jne    804a332 <__sprintf_chk@plt+0x422>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804a332 <__sprintf_chk@plt+0x422>
mov    $0x8073480,%edi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
cmpl   $0x0,0x30(%esp)
je     804ae73 <__sprintf_chk@plt+0xf63>
cmpl   $0x0,0x28(%esp)
jne    804adbb <__sprintf_chk@plt+0xeab>
xorl   $0x1,0x80733f4
movl   $0x0,0x8074048
00
movl   $0x0,0x807404c
00
mov    0x28(%esp),%eax
mov    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x8073434
mov    %edi,(%esp)
call   8049800 <free@plt>
mov    0x8(%ebp),%eax
sub    0x80732e0,%eax
sub    $0x1,%eax
jle    804a397 <__sprintf_chk@plt+0x487>
cmpl   $0x0,0x80733c8
je     804a39e <__sprintf_chk@plt+0x48e>
cmpl   $0x0,0x20(%esp)
je     804a3a8 <__sprintf_chk@plt+0x498>
movl   $0x1,0x80733f0
00
movl   $0x1,(%esp)
call   8049e40 <isatty@plt>
mov    0x80733c4,%eax
or     0x80733c0,%eax
je     804adf6 <__sprintf_chk@plt+0xee6>
testb  $0x2,0x807320c
je     804a3db <__sprintf_chk@plt+0x4cb>
cmpl   $0x0,0x8073438
je     804ae4f <__sprintf_chk@plt+0xf3f>
mov    0x8(%ebp),%eax
cmp    %eax,0x80732e0
jge    804ae02 <__sprintf_chk@plt+0xef2>
mov    0x3c(%esp),%esi
mov    $0x1,%ebx
mov    0x80732e0,%eax
mov    (%esi,%eax,4),%eax
call   804eaf0 <__sprintf_chk@plt+0x4be0>
and    %eax,%ebx
mov    0x80732e0,%eax
add    $0x1,%eax
cmp    0x8(%ebp),%eax
mov    %eax,0x80732e0
jl     804a3f3 <__sprintf_chk@plt+0x4e3>
cmpl   $0x0,0x8073440
mov    $0x2,%eax
cmove  %ebx,%eax
mov    %eax,(%esp)
call   8049b00 <exit@plt>
cmpl   $0x0,0x807344c
je     804aeb9 <__sprintf_chk@plt+0xfa9>
mov    0x8073304,%eax
movl   $0x10000000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807344c,%eax
mov    %eax,(%esp)
call   805bd40 <__sprintf_chk@plt+0x11e30>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
mov    %eax,0x80733b8
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733bc
00
jmp    804a060 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8073450
je     804aec8 <__sprintf_chk@plt+0xfb8>
mov    0x8073304,%eax
movl   $0xa,0x10(%esp)
movl   $0x10000000,0xc(%esp)
movl   $0x805bd40,(%esp)
mov    %eax,0x8(%esp)
mov    0x8073450,%eax
mov    %eax,0x4(%esp)
call   805c120 <__sprintf_chk@plt+0x12210>
test   %eax,%eax
je     804a060 <__sprintf_chk@plt+0x150>
call   8049c80 <__errno_location@plt>
mov    0x8073304,%ebx
movl   $0x806d4e8,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049a60 <error@plt>
jmp    804a060 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8073450
je     804aed7 <__sprintf_chk@plt+0xfc7>
cmp    $0x82,%edx
mov    $0x30000000,%eax
mov    $0x10000000,%edx
cmovne %edx,%eax
mov    %eax,0x8(%esp)
mov    0x8073304,%eax
mov    %eax,0x4(%esp)
mov    0x8073450,%eax
mov    %eax,(%esp)
call   805bd40 <__sprintf_chk@plt+0x11e30>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%ebx
test   %ebx,%ebx
je     804adc5 <__sprintf_chk@plt+0xeb5>
movl   $0x806d6a0,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804aa70 <__sprintf_chk@plt+0xb60>
movl   $0x806b4cf,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804aa70 <__sprintf_chk@plt+0xb60>
movl   $0x806b4d3,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804aa70 <__sprintf_chk@plt+0xb60>
movl   $0x806b4d9,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804abdd <__sprintf_chk@plt+0xccd>
movl   $0x806b4df,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804abdd <__sprintf_chk@plt+0xccd>
movl   $0x806b4e2,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804abdd <__sprintf_chk@plt+0xccd>
movl   $0x806b4e7,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804adc5 <__sprintf_chk@plt+0xeb5>
movl   $0x806b4ef,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804adc5 <__sprintf_chk@plt+0xeb5>
movl   $0x806b4ec,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strcasecmp@plt>
test   %eax,%eax
je     804adc5 <__sprintf_chk@plt+0xeb5>
movl   $0x1,0x8073468
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%ebx
movl   $0x806b4ae,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804a198 <__sprintf_chk@plt+0x288>
movl   $0x0,0x8073400
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movb   $0x0,0x8074044
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x807404c
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074048
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733f4
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806c7a8,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8073460
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8073388
00
movl   $0x0,0x807324c
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8073458
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733ec
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
movl   $0x806b38e,0x10(%esp)
movl   $0x80733c0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8064590 <__sprintf_chk@plt+0x1a680>
cmp    $0x1,%eax
jbe    804a060 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806b49c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733cc
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074050
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733c8
00
movl   $0x0,0x20(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
cmpb   $0x2d,(%eax)
je     804ab91 <__sprintf_chk@plt+0xc81>
movl   $0x806b64c,0x4(%esp)
mov    %eax,(%esp)
call   80499b0 <fopen64@plt>
mov    %eax,0x34(%esp)
cmpl   $0x0,0x34(%esp)
je     804aeee <__sprintf_chk@plt+0xfde>
mov    0x28(%esp),%eax
mov    $0x1,%edi
add    $0x1,%eax
je     804a7ee <__sprintf_chk@plt+0x8de>
lea    0x0(%esi),%esi
add    %edi,%edi
cmp    %eax,%edi
jbe    804a7e8 <__sprintf_chk@plt+0x8d8>
mov    0x30(%esp),%eax
lea    -0x1(%edi),%ebx
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x28(%esp),%esi
mov    %eax,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %ebx,0x38(%esp)
add    %esi,%eax
mov    %eax,%edx
mov    %eax,0x2c(%esp)
mov    0x34(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
call   8049a70 <fread_unlocked@plt>
test   %eax,%eax
je     804aa7f <__sprintf_chk@plt+0xb6f>
add    %eax,%esi
cmp    %esi,%ebx
jne    804a810 <__sprintf_chk@plt+0x900>
mov    0x30(%esp),%edx
test   %edx,%edx
je     804a86c <__sprintf_chk@plt+0x95c>
cmp    $0xaaaaaaa9,%edi
ja     804add4 <__sprintf_chk@plt+0xec4>
lea    0x1(%edi),%eax
shr    %eax
add    %eax,%edi
lea    -0x1(%edi),%ebx
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x38(%esp),%esi
mov    %eax,0x30(%esp)
jmp    804a810 <__sprintf_chk@plt+0x900>
mov    0x8073304,%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    0x28(%esp),%esi
repnz scas %es:(%edi),%al
mov    0x30(%esp),%eax
mov    %eax,(%esp)
not    %ecx
lea    -0x1(%esi,%ecx,1),%edi
lea    0x1(%edi),%ebx
mov    %ebx,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%edx
mov    %eax,0x30(%esp)
mov    0x8073304,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %edx,%esi
add    %edx,%eax
mov    %eax,(%esp)
call   8049a20 <strcpy@plt>
movb   $0xa,(%esi,%edi,1)
mov    %ebx,0x28(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073248,%eax
movl   $0x4,0x10(%esp)
movl   $0x806ca84,0xc(%esp)
movl   $0x806ca90,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073304,%eax
movl   $0x806b48e,(%esp)
mov    %eax,0x4(%esp)
call   805b0e0 <__sprintf_chk@plt+0x111d0>
mov    0x806ca84(,%eax,4),%eax
cmp    $0x3,%eax
mov    %eax,0x8073210
mov    0x34(%esp),%eax
cmovne 0x24(%esp),%eax
mov    %eax,0x24(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733d0
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80733e8
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x0,0x80733fc
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8073464
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8073454
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    $0x806b489,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0xffffffff,0x80733cc
ff
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x0,0x80733c8
00
movl   $0x1,0x20(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    $0x806b520,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    $0x806b483,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    $0x806b30c,%eax
call   804bd30 <__sprintf_chk@plt+0x1e20>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%ebx
movl   $0x806b462,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804ab6e <__sprintf_chk@plt+0xc5e>
movl   $0x1,0x8073438
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
lea    0x48(%esp),%edx
call   804c130 <__sprintf_chk@plt+0x2220>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
mov    $0x80733e0,%edx
call   804c130 <__sprintf_chk@plt+0x2220>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
mov    $0x80733d8,%edx
call   804c130 <__sprintf_chk@plt+0x2220>
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x8073304,%eax
mov    %eax,0x807323c
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x2,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x4cb0>
movl   $0x1,0x807345c
00
jmp    804a060 <__sprintf_chk@plt+0x150>
call   8049c80 <__errno_location@plt>
mov    0x34(%esp),%edx
testb  $0x20,(%edx)
mov    (%eax),%eax
jne    804ad8b <__sprintf_chk@plt+0xe7b>
mov    0x34(%esp),%eax
cmp    0x80732e4,%eax
je     804aaa7 <__sprintf_chk@plt+0xb97>
mov    %eax,(%esp)
call   8049870 <fclose@plt>
cmp    0x28(%esp),%esi
je     804a060 <__sprintf_chk@plt+0x150>
mov    0x30(%esp),%eax
cmpb   $0xa,-0x1(%eax,%esi,1)
je     804adb2 <__sprintf_chk@plt+0xea2>
lea    0x1(%esi),%eax
mov    %eax,0x28(%esp)
mov    0x2c(%esp),%eax
movb   $0xa,(%eax)
jmp    804a060 <__sprintf_chk@plt+0x150>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
not    %ecx
mov    %ecx,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
xor    %ecx,%ecx
mov    %eax,0x34(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   804bc80 <__sprintf_chk@plt+0x1d70>
mov    %eax,%esi
mov    $0x3ffffffe,%eax
sub    0x8(%ebp),%eax
cmp    %eax,%esi
ja     804add4 <__sprintf_chk@plt+0xec4>
mov    0x8(%ebp),%edx
add    %esi,%edx
lea    0x4(,%edx,4),%eax
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x38(%esp),%edx
mov    %edx,0x8(%ebp)
mov    %eax,%edi
lea    0x4(%eax),%eax
mov    %eax,%edx
mov    0x3c(%esp),%eax
mov    %edx,%ecx
mov    %edx,0x38(%esp)
mov    0x34(%esp),%edx
mov    (%eax),%eax
mov    %eax,(%edi)
mov    %ebx,%eax
call   804bc80 <__sprintf_chk@plt+0x1d70>
mov    0x38(%esp),%edx
mov    0x3c(%esp),%ebx
lea    (%edx,%eax,4),%ecx
xor    %eax,%eax
mov    0x4(%ebx,%eax,1),%edx
mov    %edx,(%ecx,%eax,1)
add    $0x4,%eax
test   %edx,%edx
jne    804ab53 <__sprintf_chk@plt+0xc43>
mov    %esi,0x1c(%esp)
mov    %edi,0x3c(%esp)
jmp    804a037 <__sprintf_chk@plt+0x127>
movl   $0x806b467,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804abc8 <__sprintf_chk@plt+0xcb8>
movl   $0x2,0x8073438
00
jmp    804a060 <__sprintf_chk@plt+0x150>
mov    0x80732e4,%edx
cmpb   $0x0,0x1(%eax)
mov    %edx,0x34(%esp)
je     804a7c9 <__sprintf_chk@plt+0x8b9>
jmp    804a7b5 <__sprintf_chk@plt+0x8a5>
cmpl   $0x0,0x80733cc
je     804a2a5 <__sprintf_chk@plt+0x395>
jmp    804a291 <__sprintf_chk@plt+0x381>
movl   $0x0,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x4cb0>
movl   $0x5,0x8(%esp)
movl   $0x806b46c,0x4(%esp)
jmp    804a749 <__sprintf_chk@plt+0x839>
movl   $0x0,0x807345c
00
jmp    804a060 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806c7d8,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806b50a,(%esp)
mov    %eax,%ebx
call   805ea30 <__sprintf_chk@plt+0x14b20>
movl   $0x0,0x18(%esp)
mov    %ebx,0x14(%esp)
movl   $0x806b517,0xc(%esp)
movl   $0x806b51c,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x8073ae8,%eax
mov    %eax,0x4(%esp)
mov    0x8073300,%eax
mov    %eax,(%esp)
call   80639d0 <__sprintf_chk@plt+0x19ac0>
movl   $0x0,(%esp)
call   8049b00 <exit@plt>
movl   $0x806b4f3,(%esp)
call   8049a90 <getenv@plt>
test   %eax,%eax
je     804ac77 <__sprintf_chk@plt+0xd67>
cmpb   $0x0,(%eax)
je     804ac77 <__sprintf_chk@plt+0xd67>
mov    %eax,0x8073234
mov    %eax,0x8073238
movl   $0x806b4fe,(%esp)
call   8049a90 <getenv@plt>
test   %eax,%eax
je     804a2dc <__sprintf_chk@plt+0x3cc>
cmpb   $0x0,(%eax)
je     804a2dc <__sprintf_chk@plt+0x3cc>
mov    %eax,(%esp)
call   8064430 <__sprintf_chk@plt+0x1a520>
movl   $0x0,0x38(%esp)
mov    %eax,%ebx
lea    0x1(%eax),%edi
movzbl -0x1(%edi),%eax
lea    -0x1(%edi),%edx
test   %al,%al
sete   0x34(%esp)
je     804acbd <__sprintf_chk@plt+0xdad>
cmp    $0x3a,%al
jne    804ad1d <__sprintf_chk@plt+0xe0d>
movb   $0x0,-0x1(%edi)
mov    $0x806ce20,%esi
mov    $0x806b440,%eax
jmp    804acd9 <__sprintf_chk@plt+0xdc9>
lea    0x0(%esi),%esi
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     804ace9 <__sprintf_chk@plt+0xdd9>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804acd0 <__sprintf_chk@plt+0xdc0>
mov    0x4(%esi),%eax
test   %eax,%eax
je     804acfa <__sprintf_chk@plt+0xdea>
mov    0x38(%esp),%edx
test   %edx,%edx
je     804acfa <__sprintf_chk@plt+0xdea>
mov    %edx,(%eax)
mov    0x8(%esi),%eax
test   %eax,%eax
je     804ad03 <__sprintf_chk@plt+0xdf3>
call   *%eax
cmpb   $0x0,0x34(%esp)
jne    804a2dc <__sprintf_chk@plt+0x3cc>
mov    %edi,%ebx
movl   $0x0,0x38(%esp)
add    $0x1,%edi
jmp    804aca9 <__sprintf_chk@plt+0xd99>
cmp    $0x3d,%al
je     804ad39 <__sprintf_chk@plt+0xe29>
cmpl   $0x0,0x38(%esp)
je     804ad18 <__sprintf_chk@plt+0xe08>
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    804ad18 <__sprintf_chk@plt+0xe08>
cmp    $0x3b,%al
je     804ad18 <__sprintf_chk@plt+0xe08>
jmp    804a2dc <__sprintf_chk@plt+0x3cc>
cmp    %ebx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
je     804a2dc <__sprintf_chk@plt+0x3cc>
cmpl   $0x0,0x38(%esp)
jne    804a2dc <__sprintf_chk@plt+0x3cc>
movb   $0x0,-0x1(%edi)
mov    %edi,0x38(%esp)
jmp    804ad18 <__sprintf_chk@plt+0xe08>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x80733e0
mov    %edx,0x80733e4
jmp    804a2cf <__sprintf_chk@plt+0x3bf>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x80733d8
mov    %edx,0x80733dc
jmp    804a2c2 <__sprintf_chk@plt+0x3b2>
mov    0x8073304,%ecx
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
mov    %ecx,0xc(%esp)
call   8049a60 <error@plt>
jmp    804aa93 <__sprintf_chk@plt+0xb83>
mov    %esi,0x28(%esp)
jmp    804a060 <__sprintf_chk@plt+0x150>
subl   $0x1,0x28(%esp)
jmp    804a363 <__sprintf_chk@plt+0x453>
movl   $0x2,0x807345c
00
jmp    804a060 <__sprintf_chk@plt+0x150>
call   8064470 <__sprintf_chk@plt+0x1a560>
movl   $0x1,(%esp)
call   8049e40 <isatty@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804ae41 <__sprintf_chk@plt+0xf31>
mov    %edx,0x807345c
jmp    804a275 <__sprintf_chk@plt+0x365>
movl   $0x1,(%esp)
call   8049b00 <exit@plt>
cmpl   $0x3,0x8073210
je     804ae1c <__sprintf_chk@plt+0xf0c>
mov    $0x806b74d,%eax
call   804eaf0 <__sprintf_chk@plt+0x4be0>
mov    %eax,%ebx
jmp    804a414 <__sprintf_chk@plt+0x504>
mov    0x24(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    804ae0b <__sprintf_chk@plt+0xefb>
mov    $0x806de52,%eax
movl   $0x2,0x8073444
00
call   804eaf0 <__sprintf_chk@plt+0x4be0>
mov    %eax,%ebx
jmp    804a414 <__sprintf_chk@plt+0x504>
call   8065880 <__sprintf_chk@plt+0x1b970>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
jmp    804adeb <__sprintf_chk@plt+0xedb>
movl   $0x1,0x8073438
00
jmp    804a3db <__sprintf_chk@plt+0x4cb>
movl   $0x5,0x8(%esp)
movl   $0x806b4b5,0x4(%esp)
jmp    804a749 <__sprintf_chk@plt+0x839>
mov    0x80732e0,%edx
cmp    0x8(%ebp),%edx
jge    804aa64 <__sprintf_chk@plt+0xb54>
mov    0x3c(%esp),%eax
or     $0xffffffff,%ecx
mov    (%eax,%edx,4),%ebx
xor    %eax,%eax
add    $0x1,%edx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
mov    %ebx,(%esp)
mov    %edx,0x80732e0
not    %ecx
lea    -0x1(%ecx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x28(%esp)
call   80643f0 <__sprintf_chk@plt+0x1a4e0>
mov    %eax,0x30(%esp)
jmp    804a363 <__sprintf_chk@plt+0x453>
call   805b9d0 <__sprintf_chk@plt+0x11ac0>
mov    %eax,0x807344c
jmp    804a438 <__sprintf_chk@plt+0x528>
call   805b9d0 <__sprintf_chk@plt+0x11ac0>
mov    %eax,0x8073450
jmp    804a486 <__sprintf_chk@plt+0x576>
mov    %edx,0x38(%esp)
call   805b9d0 <__sprintf_chk@plt+0x11ac0>
mov    0x38(%esp),%edx
mov    %eax,0x8073450
jmp    804a4f7 <__sprintf_chk@plt+0x5e7>
call   8049c80 <__errno_location@plt>
mov    0x8073304,%ebx
movl   $0x806d4e8,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049a60 <error@plt>
jmp    804a7d4 <__sprintf_chk@plt+0x8c4>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x806b200
push   $0x806b190
push   %ecx
push   %esi
push   $0x8049f20
call   8049bc0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80732a3,%eax
sub    $0x80732a0,%eax
cmp    $0x6,%eax
ja     804af60 <__sprintf_chk@plt+0x1050>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804af5f <__sprintf_chk@plt+0x104f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80732a0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80732a0,%eax
sub    $0x80732a0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804af99 <__sprintf_chk@plt+0x1089>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804af98 <__sprintf_chk@plt+0x1088>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80732a0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8073308
jne    804afdc <__sprintf_chk@plt+0x10cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804af50 <__sprintf_chk@plt+0x1040>
movb   $0x1,0x8073308
leave
repz ret
xchg   %ax,%ax
mov    0x8072f08,%eax
test   %eax,%eax
je     804b008 <__sprintf_chk@plt+0x10f8>
mov    $0x0,%eax
test   %eax,%eax
je     804b008 <__sprintf_chk@plt+0x10f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8072f08,(%esp)
call   *%eax
leave
jmp    804af80 <__sprintf_chk@plt+0x1070>
nop
jmp    804af80 <__sprintf_chk@plt+0x1070>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x21bb1c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b0c0 <__sprintf_chk@plt+0x11b0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
call   8049a60 <error@plt>
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8073320,%eax
test   %eax,%eax
je     804b088 <__sprintf_chk@plt+0x1178>
cmp    $0x2,%eax
je     804b0a5 <__sprintf_chk@plt+0x1195>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x806b312,(%esp)
call   8049a90 <getenv@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
not    %eax
add    $0x2,%eax
mov    %eax,0x8073320
jmp    804b07c <__sprintf_chk@plt+0x116c>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
jmp    804b0c0 <__sprintf_chk@plt+0x11b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8074050,%edx
mov    0x50(%esp),%eax
mov    %eax,0x18(%esp)
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,%ebx
mov    0x58(%esp),%eax
mov    %eax,%ecx
or     $0x400000,%eax
test   %edx,%edx
cmove  %ecx,%eax
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x1c(%esp)
call   8049e20 <re_set_syntax@plt>
movzbl 0x8074044,%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x8074050,%eax
mov    %eax,0x4(%esp)
call   80568f0 <__sprintf_chk@plt+0xc9e0>
mov    0x8073328,%edi
jmp    804b210 <__sprintf_chk@plt+0x1300>
xchg   %ax,%ax
mov    %eax,%ecx
add    $0x1,%ebp
sub    %esi,%ecx
sub    %ecx,%ebx
sub    $0x1,%ebx
add    $0x1,%edi
mov    0x807332c,%eax
cmp    $0x5d1745d,%edi
ja     804b5b4 <__sprintf_chk@plt+0x16a4>
imul   $0x2c,%edi,%edi
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x10(%esp),%ecx
imul   $0x2c,0x8073328,%edx
mov    %eax,0x807332c
add    %eax,%edx
mov    0x8073340,%eax
mov    %eax,(%edx)
mov    0x8073344,%eax
mov    %eax,0x4(%edx)
mov    0x8073348,%eax
mov    %eax,0x8(%edx)
mov    0x807334c,%eax
mov    %eax,0xc(%edx)
mov    0x8073350,%eax
mov    %eax,0x10(%edx)
mov    0x8073354,%eax
mov    %eax,0x14(%edx)
mov    0x8073358,%eax
mov    %eax,0x18(%edx)
mov    0x807335c,%eax
mov    %eax,0x1c(%edx)
mov    0x8073360,%eax
mov    %eax,0x20(%edx)
mov    0x8073364,%eax
mov    %eax,0x24(%edx)
mov    0x8073368,%eax
mov    %eax,0x28(%edx)
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   8049de0 <re_compile_pattern@plt>
test   %eax,%eax
je     804b1f8 <__sprintf_chk@plt+0x12e8>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049a60 <error@plt>
mov    0x8073328,%eax
test   %ebx,%ebx
lea    0x1(%eax),%edi
mov    %edi,0x8073328
je     804b238 <__sprintf_chk@plt+0x1328>
test   %ebp,%ebp
je     804b238 <__sprintf_chk@plt+0x1328>
mov    %ebp,%esi
mov    %ebx,0x8(%esp)
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    804b128 <__sprintf_chk@plt+0x1218>
mov    %ebx,%ecx
xor    %ebx,%ebx
jmp    804b134 <__sprintf_chk@plt+0x1224>
nop
mov    0x8074048,%eax
test   %eax,%eax
jne    804b24f <__sprintf_chk@plt+0x133f>
mov    0x807404c,%ebp
test   %ebp,%ebp
je     804b330 <__sprintf_chk@plt+0x1420>
mov    0x14(%esp),%eax
mov    0x1c(%esp),%esi
add    $0x2d,%eax
mov    %eax,(%esp)
shr    $0xd,%esi
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x807404c,%edi
xor    $0x1,%esi
and    $0x1,%esi
test   %edi,%edi
mov    %eax,%ebx
je     804b2d0 <__sprintf_chk@plt+0x13c0>
test   %esi,%esi
jne    804b535 <__sprintf_chk@plt+0x1625>
mov    $0x285e,%ecx
mov    0x14(%esp),%esi
mov    %cx,(%eax)
mov    0x18(%esp),%ecx
lea    0x2(%eax),%eax
movb   $0x0,(%eax)
mov    %eax,(%esp)
mov    %esi,0x8(%esp)
add    $0x2,%esi
mov    %ecx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    $0x806b34c,%eax
lea    (%ebx,%esi,1),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80498d0 <stpcpy@plt>
add    %esi,%eax
mov    %ebx,%esi
mov    %eax,0x14(%esp)
sub    %edi,0x14(%esp)
jmp    804b336 <__sprintf_chk@plt+0x1426>
lea    0x0(%esi),%esi
test   %esi,%esi
je     804b564 <__sprintf_chk@plt+0x1654>
mov    0x14(%esp),%esi
mov    $0x285c,%edx
mov    0x18(%esp),%ecx
lea    0x16(%eax),%eax
movl   $0x5c5e285c,-0x16(%eax)
movl   $0x5b5e5b7c,-0x12(%eax)
movl   $0x6e6c613a,-0xe(%eax)
movl   $0x5d3a6d75,-0xa(%eax)
movl   $0x295c5d5f,-0x6(%eax)
mov    %dx,-0x2(%eax)
movb   $0x0,(%eax)
mov    %esi,0x8(%esp)
add    $0x16,%esi
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
mov    $0x806b335,%eax
jmp    804b2ad <__sprintf_chk@plt+0x139d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebx
xor    %esi,%esi
call   805a900 <__sprintf_chk@plt+0x109f0>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x807336c
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
call   8059910 <__sprintf_chk@plt+0xfa00>
mov    0x807336c,%eax
mov    %eax,(%esp)
call   805a920 <__sprintf_chk@plt+0x10a10>
test   %eax,%eax
mov    %eax,%ebx
je     804b4c1 <__sprintf_chk@plt+0x15b1>
movl   $0x8073370,(%esp)
call   805a930 <__sprintf_chk@plt+0x10a20>
jmp    804b38f <__sprintf_chk@plt+0x147f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     804b401 <__sprintf_chk@plt+0x14f1>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     804b388 <__sprintf_chk@plt+0x1478>
mov    0x4(%ebx),%edi
addl   $0x1,0x8073324
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
mov    0x8074050,%edx
movl   $0x0,0x2c(%esp)
test   %edx,%edx
mov    %eax,0x28(%esp)
jne    804b508 <__sprintf_chk@plt+0x15f8>
mov    %eax,0x8(%esp)
mov    0x8073370,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8051670 <__sprintf_chk@plt+0x7760>
test   %eax,%eax
je     804b388 <__sprintf_chk@plt+0x1478>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049a60 <error@plt>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804b38f <__sprintf_chk@plt+0x147f>
mov    0x807336c,%eax
mov    %eax,(%esp)
call   805a920 <__sprintf_chk@plt+0x10a10>
test   %eax,%eax
mov    %eax,%ebx
jne    804b41f <__sprintf_chk@plt+0x150f>
jmp    804b490 <__sprintf_chk@plt+0x1580>
xchg   %ax,%ax
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     804b490 <__sprintf_chk@plt+0x1580>
mov    (%ebx),%eax
test   %eax,%eax
jne    804b418 <__sprintf_chk@plt+0x1508>
mov    0x4(%ebx),%edi
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
mov    0x8074050,%ebp
movl   $0x0,0x2c(%esp)
test   %ebp,%ebp
mov    %eax,0x28(%esp)
jne    804b4d8 <__sprintf_chk@plt+0x15c8>
mov    %eax,0x8(%esp)
mov    0x8073370,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8051670 <__sprintf_chk@plt+0x7760>
test   %eax,%eax
je     804b418 <__sprintf_chk@plt+0x1508>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049a60 <error@plt>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804b41f <__sprintf_chk@plt+0x150f>
lea    0x0(%esi),%esi
mov    0x8073370,%eax
mov    %eax,(%esp)
call   8051d40 <__sprintf_chk@plt+0x7e30>
test   %eax,%eax
je     804b4c1 <__sprintf_chk@plt+0x15b1>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049a60 <error@plt>
mov    %esi,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049800 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b4fc <__sprintf_chk@plt+0x15ec>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805a9a0 <__sprintf_chk@plt+0x10a90>
mov    %eax,%edi
mov    0x28(%esp),%eax
jmp    804b44a <__sprintf_chk@plt+0x153a>
lea    0x0(%esi),%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b52c <__sprintf_chk@plt+0x161c>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805a9a0 <__sprintf_chk@plt+0x10a90>
mov    %eax,%edi
mov    0x28(%esp),%eax
jmp    804b3c1 <__sprintf_chk@plt+0x14b1>
mov    0x14(%esp),%esi
lea    0x3(%eax),%eax
mov    0x18(%esp),%ecx
movl   $0x285c5e,-0x3(%eax)
mov    %eax,(%esp)
mov    %esi,0x8(%esp)
add    $0x3,%esi
mov    %ecx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    $0x806b34f,%eax
jmp    804b2ad <__sprintf_chk@plt+0x139d>
mov    0x14(%esp),%esi
mov    0x18(%esp),%ecx
movl   $0x5b7c5e28,(%eax)
movl   $0x613a5b5e,0x4(%eax)
movl   $0x6d756e6c,0x8(%eax)
movl   $0x5d5f5d3a,0xc(%eax)
mov    $0x2829,%eax
mov    %ax,0x10(%ebx)
lea    0x12(%ebx),%eax
movb   $0x0,0x12(%ebx)
mov    %esi,0x8(%esp)
add    $0x12,%esi
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
mov    $0x806b322,%eax
jmp    804b2ad <__sprintf_chk@plt+0x139d>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
movzbl 0x8074044,%eax
mov    0x90(%esp),%edi
movl   $0x0,0x60(%esp)
mov    %al,0x4b(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b5f9 <__sprintf_chk@plt+0x16e9>
mov    0x8074050,%ecx
test   %ecx,%ecx
jne    804bb08 <__sprintf_chk@plt+0x1bf8>
mov    0x94(%esp),%eax
mov    %edi,0x58(%esp)
add    %edi,%eax
cmp    %eax,%edi
mov    %eax,0x44(%esp)
jae    804b7b0 <__sprintf_chk@plt+0x18a0>
movsbl 0x4b(%esp),%eax
mov    %edi,%ebx
mov    %edi,0x90(%esp)
mov    %eax,0x4c(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x9c(%esp),%eax
test   %eax,%eax
mov    %eax,0x30(%esp)
je     804b9c2 <__sprintf_chk@plt+0x1ab2>
mov    0x8073328,%eax
test   %eax,%eax
je     804b79e <__sprintf_chk@plt+0x188e>
mov    0x34(%esp),%edx
xor    %ebp,%ebp
mov    0x30(%esp),%edi
movl   $0x0,0x2c(%esp)
mov    %edx,%eax
sub    %edi,%eax
mov    %eax,0x38(%esp)
lea    -0x1(%eax),%eax
mov    %eax,0x20(%esp)
mov    %edi,%eax
sub    0x90(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,%eax
sub    0x90(%esp),%eax
sub    $0x1,%eax
mov    %eax,0x24(%esp)
mov    %edx,%eax
sub    $0x1,%eax
mov    %eax,0x40(%esp)
jmp    804b6d7 <__sprintf_chk@plt+0x17c7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807404c,%eax
test   %eax,%eax
je     804b7d0 <__sprintf_chk@plt+0x18c0>
cmp    0x20(%esp),%ecx
je     804b7dd <__sprintf_chk@plt+0x18cd>
mov    0x8074048,%edx
test   %edx,%edx
jne    804b880 <__sprintf_chk@plt+0x1970>
lea    0x0(%esi),%esi
add    $0x1,%ebp
cmp    %ebp,0x8073328
jbe    804b790 <__sprintf_chk@plt+0x1880>
imul   $0x2c,%ebp,%esi
mov    0x807332c,%eax
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
add    %esi,%eax
lea    0x20(%eax),%edx
andb   $0xbf,0x1c(%eax)
mov    %edx,0x14(%esp)
mov    0x28(%esp),%edx
mov    %ecx,0x10(%esp)
mov    0x90(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
call   8049be0 <re_search@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jl     804bc1d <__sprintf_chk@plt+0x1d0d>
je     804b6c8 <__sprintf_chk@plt+0x17b8>
mov    0x807332c,%eax
mov    0x90(%esp),%edi
mov    0x28(%eax,%esi,1),%eax
add    %ebx,%edi
cmp    0x1c(%esp),%edi
mov    (%eax),%eax
ja     804b6c8 <__sprintf_chk@plt+0x17b8>
sub    %ebx,%eax
mov    %eax,%ecx
mov    0x9c(%esp),%eax
test   %eax,%eax
je     804b6a0 <__sprintf_chk@plt+0x1790>
mov    0x8074048,%eax
test   %eax,%eax
jne    804b6a0 <__sprintf_chk@plt+0x1790>
cmp    %edi,0x1c(%esp)
ja     804b7c0 <__sprintf_chk@plt+0x18b0>
cmp    %ecx,0x2c(%esp)
jae    804b6c8 <__sprintf_chk@plt+0x17b8>
cmp    0x1c(%esp),%edi
cmovne 0x2c(%esp),%ecx
add    $0x1,%ebp
cmp    %ebp,0x8073328
mov    %ecx,0x2c(%esp)
ja     804b6d7 <__sprintf_chk@plt+0x17c7>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
cmp    %eax,0x34(%esp)
ja     804bb4c <__sprintf_chk@plt+0x1c3c>
mov    0x44(%esp),%eax
cmp    %eax,0x34(%esp)
mov    0x34(%esp),%ebx
jb     804b628 <__sprintf_chk@plt+0x1718>
add    $0x7c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x2c(%esp)
mov    %edi,0x1c(%esp)
jmp    804b6c8 <__sprintf_chk@plt+0x17b8>
lea    0x0(%esi),%esi
mov    0x8074048,%eax
test   %eax,%eax
jne    804b880 <__sprintf_chk@plt+0x1970>
mov    0x38(%esp),%ecx
mov    0x30(%esp),%edi
mov    0x9c(%esp),%eax
test   %eax,%eax
jne    804b75e <__sprintf_chk@plt+0x184e>
mov    0x38(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    0x60(%esp),%edi
mov    %eax,%ebp
test   %edi,%edi
je     804b863 <__sprintf_chk@plt+0x1953>
test   %eax,%eax
je     804bc25 <__sprintf_chk@plt+0x1d15>
xor    %eax,%eax
xor    %edx,%edx
xor    %esi,%esi
movsbl (%edi,%esi,1),%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
add    %ecx,%eax
adc    %ebx,%edx
add    $0x1,%esi
cmp    %esi,%ebp
jne    804b818 <__sprintf_chk@plt+0x1908>
mov    %eax,%ebp
mov    0x28(%esp),%esi
mov    0x2c(%esp),%eax
add    %esi,%eax
cmp    %esi,%eax
jbe    804bc0d <__sprintf_chk@plt+0x1cfd>
add    %edi,%esi
xor    %edx,%edx
add    %eax,%edi
xor    %eax,%eax
movsbl (%esi),%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
add    %ecx,%eax
adc    %ebx,%edx
add    $0x1,%esi
cmp    %edi,%esi
jne    804b848 <__sprintf_chk@plt+0x1938>
add    %eax,0x2c(%esp)
add    0x28(%esp),%ebp
mov    0x98(%esp),%eax
mov    0x2c(%esp),%esi
mov    %esi,(%eax)
add    $0x7c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x3c(%esp)
mov    %ecx,%esi
cmp    0x90(%esp),%edi
je     804b8a8 <__sprintf_chk@plt+0x1998>
call   8049ef0 <__ctype_b_loc@plt>
movzbl -0x1(%edi),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804b8d2 <__sprintf_chk@plt+0x19c2>
cmp    $0x5f,%dl
je     804b8d2 <__sprintf_chk@plt+0x19c2>
lea    (%ebx,%esi,1),%eax
cmp    0x24(%esp),%eax
je     804bb5e <__sprintf_chk@plt+0x1c4e>
call   8049ef0 <__ctype_b_loc@plt>
movzbl (%edi,%esi,1),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804b8d2 <__sprintf_chk@plt+0x19c2>
cmp    $0x5f,%dl
jne    804bb5e <__sprintf_chk@plt+0x1c4e>
test   %esi,%esi
jne    804b968 <__sprintf_chk@plt+0x1a58>
cmp    0x40(%esp),%edi
xchg   %ax,%ax
je     804b6c8 <__sprintf_chk@plt+0x17b8>
mov    0x3c(%esp),%eax
add    $0x1,%edi
add    0x807332c,%eax
mov    0x24(%esp),%esi
lea    0x20(%eax),%edx
andb   $0xbf,0x1c(%eax)
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
mov    %esi,0x8(%esp)
mov    0x90(%esp),%esi
mov    %eax,(%esp)
sub    %edi,%edx
sub    0x90(%esp),%edi
sub    $0x1,%edx
mov    %edx,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0xc(%esp)
call   8049be0 <re_search@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804bc14 <__sprintf_chk@plt+0x1d04>
mov    0x3c(%esp),%esi
mov    0x807332c,%eax
mov    0x90(%esp),%edi
mov    0x28(%eax,%esi,1),%eax
add    %ebx,%edi
mov    (%eax),%esi
sub    %ebx,%esi
cmp    0x1c(%esp),%edi
ja     804b6c8 <__sprintf_chk@plt+0x17b8>
jmp    804b886 <__sprintf_chk@plt+0x1976>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    0x807332c,%eax
lea    0x20(%eax),%edx
orb    $0x40,0x1c(%eax)
mov    %edx,0x10(%esp)
mov    %edi,%edx
sub    0x90(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
lea    -0x1(%edi,%esi,1),%edx
mov    0x90(%esp),%esi
sub    0x30(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049ac0 <re_match@plt>
cmp    $0xffffffff,%eax
jl     804bc1d <__sprintf_chk@plt+0x1d0d>
test   %eax,%eax
jle    804b8da <__sprintf_chk@plt+0x19ca>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
jmp    804b955 <__sprintf_chk@plt+0x1a45>
mov    0x8073370,%eax
test   %eax,%eax
je     804bb65 <__sprintf_chk@plt+0x1c55>
mov    0x44(%esp),%esi
lea    0x64(%esp),%edx
mov    %edx,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%edx
sub    %ebx,%edx
mov    %edx,0x8(%esp)
call   8052230 <__sprintf_chk@plt+0x8320>
cmp    $0xffffffff,%eax
je     804b7b0 <__sprintf_chk@plt+0x18a0>
add    %eax,%ebx
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %esi,%edx
cmp    %ebx,0x90(%esp)
mov    %edx,0x34(%esp)
jae    804bc35 <__sprintf_chk@plt+0x1d25>
movzbl 0x4b(%esp),%ecx
cmp    %cl,-0x1(%ebx)
je     804bc35 <__sprintf_chk@plt+0x1d25>
mov    %ebx,%eax
mov    0x90(%esp),%edx
jmp    804ba4d <__sprintf_chk@plt+0x1b3d>
lea    0x0(%esi,%eiz,1),%esi
cmp    %cl,-0x1(%eax)
je     804ba54 <__sprintf_chk@plt+0x1b44>
sub    $0x1,%eax
cmp    %edx,%eax
jne    804ba48 <__sprintf_chk@plt+0x1b38>
mov    %eax,0x30(%esp)
mov    0x8073324,%eax
cmp    %eax,0x64(%esp)
jae    804ba9f <__sprintf_chk@plt+0x1b8f>
mov    0x30(%esp),%eax
cmp    %eax,0x58(%esp)
jae    804ba71 <__sprintf_chk@plt+0x1b61>
mov    %eax,0x58(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     804bae8 <__sprintf_chk@plt+0x1bd8>
mov    0x6c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   805aca0 <__sprintf_chk@plt+0x10d90>
test   %al,%al
je     804bae8 <__sprintf_chk@plt+0x1bd8>
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x807336c,%eax
mov    %eax,(%esp)
call   80592e0 <__sprintf_chk@plt+0xf3d0>
test   %eax,%eax
je     804b79e <__sprintf_chk@plt+0x188e>
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    804b63f <__sprintf_chk@plt+0x172f>
mov    0x30(%esp),%eax
mov    0x90(%esp),%edi
mov    0x34(%esp),%esi
sub    %eax,%esi
sub    %edi,%eax
mov    %esi,0x38(%esp)
mov    %eax,0x28(%esp)
jmp    804b7f4 <__sprintf_chk@plt+0x18e4>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   805a9a0 <__sprintf_chk@plt+0x10a90>
mov    0x9c(%esp),%edx
test   %edx,%edx
je     804bc2c <__sprintf_chk@plt+0x1d1c>
mov    0x9c(%esp),%edx
sub    %edi,%edx
mov    %eax,%edi
lea    (%eax,%edx,1),%esi
mov    %esi,0x9c(%esp)
jmp    804b5f9 <__sprintf_chk@plt+0x16e9>
mov    0x90(%esp),%edi
sub    %edi,%eax
mov    %eax,0x28(%esp)
jmp    804b800 <__sprintf_chk@plt+0x18f0>
mov    %esi,%ecx
jmp    804b7e5 <__sprintf_chk@plt+0x18d5>
lea    0x5c(%esp),%eax
mov    0x44(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x807336c,%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80592e0 <__sprintf_chk@plt+0xf3d0>
cmp    %edi,%eax
mov    %eax,0x30(%esp)
je     804b7b0 <__sprintf_chk@plt+0x18a0>
test   %eax,%eax
je     804b7b0 <__sprintf_chk@plt+0x18a0>
mov    %edi,%edx
mov    %eax,%esi
sub    %eax,%edx
mov    0x4c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
mov    %esi,%eax
cmove  %edi,%edx
cmp    %esi,0x90(%esp)
mov    %edx,0x34(%esp)
jae    804badc <__sprintf_chk@plt+0x1bcc>
movzbl 0x4b(%esp),%ecx
cmp    %cl,-0x1(%esi)
je     804badc <__sprintf_chk@plt+0x1bcc>
mov    %ecx,%edx
mov    0x90(%esp),%ecx
jmp    804bbfd <__sprintf_chk@plt+0x1ced>
cmp    %dl,-0x1(%eax)
je     804bc04 <__sprintf_chk@plt+0x1cf4>
sub    $0x1,%eax
cmp    %ecx,%eax
jne    804bbf8 <__sprintf_chk@plt+0x1ce8>
mov    %eax,0x30(%esp)
jmp    804badc <__sprintf_chk@plt+0x1bcc>
xor    %eax,%eax
jmp    804b85b <__sprintf_chk@plt+0x194b>
cmp    $0xffffffff,%eax
je     804b6c8 <__sprintf_chk@plt+0x17b8>
lea    0x0(%esi),%esi
call   8064470 <__sprintf_chk@plt+0x1a560>
xor    %ebp,%ebp
jmp    804b82e <__sprintf_chk@plt+0x191e>
mov    %eax,%edi
xchg   %ax,%ax
jmp    804b5f9 <__sprintf_chk@plt+0x16e9>
mov    %ebx,0x30(%esp)
jmp    804ba58 <__sprintf_chk@plt+0x1b48>
xchg   %ax,%ax
mov    0x8073238,%eax
mov    %eax,0x8073234
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x807345c
ff
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806b353,0x8073218
08
movl   $0x806b359,0x8073214
08
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
xor    %eax,%eax
sub    $0x4,%esp
mov    %ecx,(%esp)
movzbl (%esi),%ebx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
jbe    804bd0c <__sprintf_chk@plt+0x1dfc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%bl
je     804bd0c <__sprintf_chk@plt+0x1dfc>
test   %bl,%bl
je     804bd23 <__sprintf_chk@plt+0x1e13>
mov    (%esp),%ecx
test   %ecx,%ecx
je     804bcb6 <__sprintf_chk@plt+0x1da6>
mov    %edx,(%ecx,%eax,4)
movzbl (%esi),%ebx
add    $0x1,%eax
jmp    804bcdb <__sprintf_chk@plt+0x1dcb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%esi
test   %bl,%bl
je     804bd2b <__sprintf_chk@plt+0x1e1b>
movzbl %bl,%edi
cmp    $0x9,%edi
je     804bcf8 <__sprintf_chk@plt+0x1de8>
cmp    $0x20,%edi
je     804bcf8 <__sprintf_chk@plt+0x1de8>
lea    -0xa(%ebx),%ecx
cmp    $0x3,%cl
jbe    804bcf8 <__sprintf_chk@plt+0x1de8>
mov    %edx,%ebp
cmp    $0x5c,%bl
lea    0x1(%edx),%edx
mov    %bl,-0x1(%edx)
lea    0x1(%esi),%edi
movzbl 0x1(%esi),%ebx
jne    804bcc0 <__sprintf_chk@plt+0x1db0>
test   %bl,%bl
jne    804bd18 <__sprintf_chk@plt+0x1e08>
mov    %edi,%esi
lea    0x0(%esi),%esi
movb   $0x0,0x1(%ebp)
movzbl (%esi),%ebx
lea    0x2(%ebp),%edx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
ja     804bca0 <__sprintf_chk@plt+0x1d90>
add    $0x1,%esi
jmp    804bc8e <__sprintf_chk@plt+0x1d7e>
lea    0x0(%esi,%eiz,1),%esi
mov    %bl,-0x1(%edx)
add    $0x2,%esi
movzbl (%esi),%ebx
jmp    804bcc2 <__sprintf_chk@plt+0x1db2>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%edi
jmp    804bcf3 <__sprintf_chk@plt+0x1de3>
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
test   %eax,%eax
je     804bda0 <__sprintf_chk@plt+0x1e90>
mov    0x8073384,%ebx
test   %ebx,%ebx
je     804bdd0 <__sprintf_chk@plt+0x1ec0>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
je     804bd9a <__sprintf_chk@plt+0x1e8a>
mov    0x806b300,%eax
test   %eax,%eax
je     804be30 <__sprintf_chk@plt+0x1f20>
movl   $0x5,0x8(%esp)
movl   $0x806b778,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x806b2f8,%eax
mov    0x806b300,%edx
mov    %eax,0x8073434
mov    0x806b2fc,%eax
test   %edx,%edx
mov    %eax,0x8073430
jne    804bd9a <__sprintf_chk@plt+0x1e8a>
mov    0x806b2f4,%eax
mov    %eax,0x8073384
jmp    804bd9a <__sprintf_chk@plt+0x1e8a>
lea    0x0(%esi),%esi
mov    0x806b2f4,%edx
test   %edx,%edx
jne    804bdf5 <__sprintf_chk@plt+0x1ee5>
jmp    804be78 <__sprintf_chk@plt+0x1f68>
nop
add    $0x1,%ebx
lea    (%ebx,%ebx,2),%eax
mov    0x806b2f4(,%eax,4),%edx
test   %edx,%edx
je     804be78 <__sprintf_chk@plt+0x1f68>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    804bde0 <__sprintf_chk@plt+0x1ed0>
lea    (%ebx,%ebx,2),%eax
shl    $0x2,%eax
mov    0x806b2f8(%eax),%edx
mov    0x806b2fc(%eax),%eax
mov    %esi,0x8073384
mov    %edx,0x8073434
mov    %eax,0x8073430
jmp    804bd9a <__sprintf_chk@plt+0x1e8a>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x8073ae8,%esi
movl   $0x806b750,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804bd9a <__sprintf_chk@plt+0x1e8a>
nop
movl   $0x5,0x8(%esp)
movl   $0x806b35d,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804bd9a <__sprintf_chk@plt+0x1e8a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x807343c,%eax
test   %eax,%eax
je     804bed0 <__sprintf_chk@plt+0x1fc0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805b370 <__sprintf_chk@plt+0x11460>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x807341c,%ebx
mov    %eax,0xc(%esp)
neg    %eax
mov    0x8073428,%ebp
mov    %eax,0x1c(%esp)
mov    0x8073418,%esi
add    %ebx,%eax
mov    %eax,0x10(%esp)
mov    0x807342c,%eax
lea    (%eax,%ebp,1),%edi
sub    %ebx,%edi
cmp    %esi,%edi
mov    %eax,0x18(%esp)
jb     804bf78 <__sprintf_chk@plt+0x2068>
mov    0x10(%esp),%eax
mov    %eax,0x8073420
mov    %edi,%eax
xor    %edx,%edx
div    %esi
mov    0x8073424,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
sub    %edx,%edi
mov    %edi,0x8(%esp)
call   80621e0 <__sprintf_chk@plt+0x182d0>
test   %eax,%eax
js     804c068 <__sprintf_chk@plt+0x2158>
mov    %eax,%edi
mov    %eax,%esi
mov    %eax,%edx
mov    $0x1,%eax
sar    $0x1f,%edi
add    %esi,0x8073410
adc    %edi,0x8073414
add    %edx,%ebx
mov    %ebx,0x807341c
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
lea    0x1(%esi),%ebx
add    %esi,%eax
mov    %eax,0x14(%esp)
lea    -0x1(%ebp),%eax
sub    %esi,%eax
cmp    %eax,0x14(%esp)
mov    %eax,%ecx
jbe    804bfcf <__sprintf_chk@plt+0x20bf>
lea    (%eax,%eax,1),%ecx
cmp    %ecx,%eax
ja     804c123 <__sprintf_chk@plt+0x2213>
lea    0x1(%esi),%ebx
mov    %ecx,%eax
add    %ebx,%eax
jb     804c123 <__sprintf_chk@plt+0x2213>
mov    0x14(%esp),%edi
jmp    804bfc7 <__sprintf_chk@plt+0x20b7>
lea    (%ecx,%ecx,1),%eax
cmp    %ecx,%eax
jb     804c123 <__sprintf_chk@plt+0x2213>
mov    %eax,%ecx
add    %ebx,%ecx
jb     804c123 <__sprintf_chk@plt+0x2213>
mov    %eax,%ecx
cmp    %ecx,%edi
ja     804bfb0 <__sprintf_chk@plt+0x20a0>
mov    %edi,0x14(%esp)
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804c096 <__sprintf_chk@plt+0x2186>
add    %ebx,%ecx
cmp    %ecx,%ebp
jb     804c075 <__sprintf_chk@plt+0x2165>
mov    0x18(%esp),%edi
mov    %edi,%ebp
mov    0xc(%esp),%eax
xor    %edx,%edx
lea    0x1(%eax),%ecx
lea    (%edi,%ecx,1),%ebx
mov    %ebx,%eax
div    %esi
test   %edx,%edx
je     804c00d <__sprintf_chk@plt+0x20fd>
add    %esi,%ecx
sub    %edx,%ecx
lea    (%edi,%ecx,1),%ebx
mov    0xc(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
sub    0x18(%esp),%eax
add    %ebx,%edx
mov    %edx,(%esp)
mov    %edx,0x8073420
add    %ebp,%eax
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
call   80497f0 <memmove@plt>
movzbl 0x8074044,%eax
cmp    %ebp,%edi
mov    0xc(%esp),%edx
mov    %al,-0x1(%edx)
je     804c05b <__sprintf_chk@plt+0x214b>
mov    %ebp,(%esp)
call   8049800 <free@plt>
mov    %edi,0x807342c
add    0x8073428,%edi
sub    %ebx,%edi
jmp    804bf24 <__sprintf_chk@plt+0x2014>
xor    %edx,%edx
xor    %esi,%esi
xor    %edi,%edi
xor    %eax,%eax
jmp    804bf57 <__sprintf_chk@plt+0x2047>
mov    %ecx,(%esp)
mov    %ecx,0x8073428
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x8073418,%esi
mov    0x807342c,%ebp
mov    %eax,%edi
jmp    804bff2 <__sprintf_chk@plt+0x20e2>
mov    0x2c(%edx),%eax
mov    0x30(%edx),%edx
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
mov    0x8073410,%eax
sub    %eax,0x28(%esp)
mov    0xc(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x8073414,%edx
sbb    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
mov    0x24(%esp),%edi
cmp    %edi,%edx
jl     804c0f3 <__sprintf_chk@plt+0x21e3>
jg     804bfe2 <__sprintf_chk@plt+0x20d2>
mov    0x20(%esp),%eax
cmp    %eax,0x28(%esp)
ja     804bfe2 <__sprintf_chk@plt+0x20d2>
mov    0x2c(%esp),%eax
test   %eax,%eax
js     804bfe2 <__sprintf_chk@plt+0x20d2>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
test   %eax,%eax
jne    804bfe2 <__sprintf_chk@plt+0x20d2>
cmp    %edx,0x14(%esp)
ja     804bfe2 <__sprintf_chk@plt+0x20d2>
cmp    %edx,%ecx
cmova  %edx,%ecx
jmp    804bfe2 <__sprintf_chk@plt+0x20d2>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x24,%esp
movl   $0x806b38e,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8064590 <__sprintf_chk@plt+0x1a680>
cmp    $0x1,%eax
ja     804c170 <__sprintf_chk@plt+0x2260>
mov    0x4(%ebx),%eax
test   %eax,%eax
js     804c170 <__sprintf_chk@plt+0x2260>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x806b798,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x806b3bd,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8049a60 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
lea    0x6c(%esp),%edi
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
jmp    804c1f4 <__sprintf_chk@plt+0x22e4>
lea    0x0(%esi),%esi
mov    0x18(%esp),%ebp
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   806b030 <fts_children+0x2f70>
add    $0x30,%eax
mov    %al,(%edi)
lea    -0x1(%ebp),%eax
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x18(%esp)
call   806af00 <fts_children+0x2e40>
mov    %edx,%ecx
mov    %eax,%esi
or     %eax,%ecx
mov    %edx,%ebx
jne    804c1f0 <__sprintf_chk@plt+0x22e0>
mov    0x8073454,%ecx
test   %ecx,%ecx
je     804c275 <__sprintf_chk@plt+0x2365>
cmp    $0x1,%ebp
jle    804c275 <__sprintf_chk@plt+0x2365>
mov    0x18(%esp),%eax
mov    %edi,%ecx
sub    %ebp,%edi
movl   $0x20,0x4(%esp)
add    $0x1,%edi
sub    %eax,%ecx
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   8049c40 <memset@plt>
mov    0x807345c,%edx
lea    0x6c(%esp),%eax
sub    %edi,%eax
test   %edx,%edx
jne    804c2e0 <__sprintf_chk@plt+0x23d0>
mov    0x8073300,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049cd0 <fwrite_unlocked@plt>
mov    0x807345c,%eax
test   %eax,%eax
jne    804c2c8 <__sprintf_chk@plt+0x23b8>
mov    0x6c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c314 <__sprintf_chk@plt+0x2404>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804c2ac <__sprintf_chk@plt+0x239c>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804c2ac <__sprintf_chk@plt+0x239c>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804c2f8 <__sprintf_chk@plt+0x23e8>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804c285 <__sprintf_chk@plt+0x2375>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804c285 <__sprintf_chk@plt+0x2375>
call   80498f0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80733f0,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x24(%esp)
test   %ecx,%ecx
jne    804c518 <__sprintf_chk@plt+0x2608>
mov    0x80733ec,%ebx
test   %ebx,%ebx
je     804c3a0 <__sprintf_chk@plt+0x2490>
mov    0x80733ac,%eax
cmp    0x24(%esp),%eax
jb     804c588 <__sprintf_chk@plt+0x2678>
test   %edi,%edi
jne    804c6bb <__sprintf_chk@plt+0x27ab>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x807322c,%eax
mov    $0x4,%ecx
mov    0x80733a4,%edx
mov    %eax,(%esp)
mov    0x80733a0,%eax
call   804c1c0 <__sprintf_chk@plt+0x22b0>
mov    0x80733e8,%edi
test   %edi,%edi
je     804c469 <__sprintf_chk@plt+0x2559>
mov    $0x1,%edi
jmp    804c3b3 <__sprintf_chk@plt+0x24a3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80733e8,%ebx
test   %ebx,%ebx
je     804c460 <__sprintf_chk@plt+0x2550>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x18(%esp),%ebx
sub    0x8073420,%ebx
mov    0x80733b0,%eax
mov    0x80733b4,%edx
mov    %ebx,0x18(%esp)
sar    $0x1f,%ebx
add    %eax,0x18(%esp)
mov    %ebx,0x1c(%esp)
adc    %edx,0x1c(%esp)
cmp    0x1c(%esp),%edx
jae    804c4d0 <__sprintf_chk@plt+0x25c0>
test   %edi,%edi
jne    804c720 <__sprintf_chk@plt+0x2810>
mov    %ebp,%ebx
mov    0x8073228,%eax
mov    $0x6,%ecx
mov    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   804c1c0 <__sprintf_chk@plt+0x22b0>
mov    0x8073454,%edi
test   %edi,%edi
jne    804c478 <__sprintf_chk@plt+0x2568>
mov    0x807345c,%ecx
mov    0x8073224,%eax
test   %ecx,%ecx
jne    804c4b0 <__sprintf_chk@plt+0x25a0>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c868 <__sprintf_chk@plt+0x2958>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %bl,(%edx)
mov    0x807345c,%edx
mov    0x8073224,%eax
test   %edx,%edx
je     804c458 <__sprintf_chk@plt+0x2548>
cmpb   $0x0,(%eax)
jne    804c7b8 <__sprintf_chk@plt+0x28a8>
nop
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
je     804c458 <__sprintf_chk@plt+0x2548>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x8073454,%edi
mov    %ebp,%ebx
test   %edi,%edi
je     804c413 <__sprintf_chk@plt+0x2503>
lea    0x0(%esi),%esi
mov    0x8073300,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806b38c,(%esp)
mov    %eax,0xc(%esp)
call   8049cd0 <fwrite_unlocked@plt>
mov    0x807345c,%ecx
mov    0x8073224,%eax
test   %ecx,%ecx
je     804c426 <__sprintf_chk@plt+0x2516>
cmpb   $0x0,(%eax)
je     804c426 <__sprintf_chk@plt+0x2516>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804c426 <__sprintf_chk@plt+0x2516>
nop
jbe    804c780 <__sprintf_chk@plt+0x2870>
movl   $0x5,0x8(%esp)
movl   $0x806b370,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
test   %edi,%edi
je     804c3ed <__sprintf_chk@plt+0x24dd>
jmp    804c720 <__sprintf_chk@plt+0x2810>
nop
mov    0x807345c,%edx
mov    0x8073230,%eax
test   %edx,%edx
jne    804c7d0 <__sprintf_chk@plt+0x28c0>
mov    0x8073300,%eax
mov    %eax,0x4(%esp)
mov    0x8073448,%eax
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x807345c,%edi
mov    0x8073230,%eax
test   %edi,%edi
jne    804c798 <__sprintf_chk@plt+0x2888>
mov    0x80733fc,%esi
mov    $0x1,%edi
test   %esi,%esi
jne    804c341 <__sprintf_chk@plt+0x2431>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c87e <__sprintf_chk@plt+0x296e>
lea    0x1(%edx),%ecx
xor    %edi,%edi
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804c341 <__sprintf_chk@plt+0x2431>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    804c85f <__sprintf_chk@plt+0x294f>
movzbl 0x8074044,%esi
mov    %edi,0x18(%esp)
mov    %esi,%ecx
xor    %esi,%esi
mov    %ecx,%edi
jmp    804c5b2 <__sprintf_chk@plt+0x26a2>
nop
add    $0x1,%eax
add    $0x1,%esi
cmp    %eax,%ebx
jbe    804c5ca <__sprintf_chk@plt+0x26ba>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
jne    804c5a8 <__sprintf_chk@plt+0x2698>
mov    0x18(%esp),%edi
mov    %esi,%ecx
mov    %ebx,0x18(%esp)
xor    %ebx,%ebx
mov    0x80733a0,%eax
mov    0x80733a4,%edx
add    %eax,%ecx
adc    %edx,%ebx
mov    %edx,0x2c(%esp)
mov    %ecx,%edx
mov    %ebx,%ecx
cmp    %ebx,0x2c(%esp)
mov    %eax,0x28(%esp)
jb     804c641 <__sprintf_chk@plt+0x2731>
jbe    804c7f0 <__sprintf_chk@plt+0x28e0>
movl   $0x5,0x8(%esp)
movl   $0x806b370,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x18(%esp),%eax
mov    %edx,%ebx
mov    %ecx,%esi
add    $0x1,%ebx
adc    $0x0,%esi
cmp    %ecx,%esi
mov    %edx,0x80733a0
mov    %ecx,0x80733a4
mov    %eax,0x80733ac
ja     804c69e <__sprintf_chk@plt+0x278e>
jae    804c808 <__sprintf_chk@plt+0x28f8>
movl   $0x5,0x8(%esp)
movl   $0x806b370,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
mov    0x24(%esp),%eax
test   %edi,%edi
mov    %ebx,0x80733a0
mov    %esi,0x80733a4
mov    %eax,0x80733ac
je     804c362 <__sprintf_chk@plt+0x2452>
mov    0x807345c,%ecx
mov    0x8073224,%eax
test   %ecx,%ecx
jne    804c840 <__sprintf_chk@plt+0x2930>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c896 <__sprintf_chk@plt+0x2986>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
movsbl %al,%esi
mov    0x807345c,%edx
mov    0x8073224,%eax
test   %edx,%edx
je     804c367 <__sprintf_chk@plt+0x2457>
cmpb   $0x0,(%eax)
je     804c367 <__sprintf_chk@plt+0x2457>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804c367 <__sprintf_chk@plt+0x2457>
lea    0x0(%esi),%esi
mov    0x807345c,%ecx
mov    %ebp,%ebx
mov    0x8073224,%eax
test   %ecx,%ecx
jne    804c818 <__sprintf_chk@plt+0x2908>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c8b1 <__sprintf_chk@plt+0x29a1>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
mov    0x807345c,%edx
mov    0x8073224,%eax
test   %edx,%edx
je     804c3ed <__sprintf_chk@plt+0x24dd>
cmpb   $0x0,(%eax)
je     804c3ed <__sprintf_chk@plt+0x24dd>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804c3ef <__sprintf_chk@plt+0x24df>
xchg   %ax,%ax
cmp    0x18(%esp),%eax
jbe    804c3e5 <__sprintf_chk@plt+0x24d5>
lea    0x0(%esi),%esi
jmp    804c4d6 <__sprintf_chk@plt+0x25c6>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804c554 <__sprintf_chk@plt+0x2644>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804c554 <__sprintf_chk@plt+0x2644>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804c458 <__sprintf_chk@plt+0x2548>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804c52b <__sprintf_chk@plt+0x261b>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804c52b <__sprintf_chk@plt+0x261b>
nop
cmp    %edx,0x28(%esp)
jbe    804c641 <__sprintf_chk@plt+0x2731>
lea    0x0(%esi),%esi
jmp    804c5fd <__sprintf_chk@plt+0x26ed>
lea    0x0(%esi),%esi
cmp    %edx,%ebx
jae    804c69e <__sprintf_chk@plt+0x278e>
jmp    804c66a <__sprintf_chk@plt+0x275a>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804c735 <__sprintf_chk@plt+0x2825>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804c735 <__sprintf_chk@plt+0x2825>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804c6ce <__sprintf_chk@plt+0x27be>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804c6ce <__sprintf_chk@plt+0x27be>
xor    %ecx,%ecx
xor    %ebx,%ebx
jmp    804c5d6 <__sprintf_chk@plt+0x26c6>
mov    %esi,%ecx
movzbl %cl,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804c43f <__sprintf_chk@plt+0x252f>
movl   $0x0,0x4(%esp)
xor    %di,%di
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804c341 <__sprintf_chk@plt+0x2431>
mov    %ebp,%ecx
movsbl %cl,%esi
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804c6ec <__sprintf_chk@plt+0x27dc>
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804c750 <__sprintf_chk@plt+0x2840>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
mov    0x8073458,%edx
test   %edx,%edx
je     804cbd0 <__sprintf_chk@plt+0x2cc0>
cmp    $0x3a,%esi
sete   %al
mov    %eax,%esi
mov    0x80733f4,%eax
mov    %esi,%ecx
test   %eax,%eax
setne  %al
xor    %eax,%ecx
movzbl %cl,%edi
mov    0x807345c,%ecx
test   %ecx,%ecx
mov    %ecx,0x10(%esp)
je     804cbb8 <__sprintf_chk@plt+0x2ca8>
shr    $0x1f,%ecx
test   %al,%al
cmovne %ecx,%eax
mov    %esi,%ecx
cmp    %cl,%al
mov    0x8073220,%eax
cmove  0x807321c,%eax
test   %cl,%cl
mov    %eax,0x14(%esp)
mov    0x8073238,%eax
cmove  0x8073234,%eax
mov    %eax,0x1c(%esp)
test   %edx,%edx
je     804ca48 <__sprintf_chk@plt+0x2b38>
test   %edi,%edi
je     804ca48 <__sprintf_chk@plt+0x2b38>
cmp    %ebx,%ebp
jae    804cd18 <__sprintf_chk@plt+0x2e08>
mov    %ebx,%eax
mov    %ebp,%esi
sub    %ebp,%eax
mov    %eax,0x18(%esp)
movl   $0x0,0x10(%esp)
jmp    804c994 <__sprintf_chk@plt+0x2a84>
mov    0x10(%esp),%eax
movl   $0x1,0x2c(%esp)
test   %eax,%eax
je     804cce0 <__sprintf_chk@plt+0x2dd0>
mov    $0x1,%edx
lea    (%edi,%edx,1),%esi
cmp    %esi,%ebx
jbe    804ccc0 <__sprintf_chk@plt+0x2db0>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x8073430
cmp    $0xffffffff,%eax
je     804ccc0 <__sprintf_chk@plt+0x2db0>
lea    0x0(%ebp,%eax,1),%edi
cmp    %edi,%ebx
je     804ccc0 <__sprintf_chk@plt+0x2db0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804c970 <__sprintf_chk@plt+0x2a60>
mov    0x8073458,%ecx
test   %ecx,%ecx
je     804cc00 <__sprintf_chk@plt+0x2cf0>
cmpl   $0x1,0x80733f4
mov    %ebx,%edx
mov    %edi,%eax
sbb    %ecx,%ecx
and    $0xd,%ecx
add    $0x2d,%ecx
call   804c320 <__sprintf_chk@plt+0x2410>
mov    0x807345c,%edx
mov    0x2c(%esp),%eax
test   %edx,%edx
jne    804cc59 <__sprintf_chk@plt+0x2d49>
mov    0x8073300,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049cd0 <fwrite_unlocked@plt>
mov    0x807345c,%eax
test   %eax,%eax
jne    804cca0 <__sprintf_chk@plt+0x2d90>
mov    0x8073458,%esi
test   %esi,%esi
jne    804cc80 <__sprintf_chk@plt+0x2d70>
mov    0x2c(%esp),%edx
jmp    804c989 <__sprintf_chk@plt+0x2a79>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804cb30 <__sprintf_chk@plt+0x2c20>
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804cbe8 <__sprintf_chk@plt+0x2cd8>
test   %edi,%edi
jne    804cd1e <__sprintf_chk@plt+0x2e0e>
test   %edx,%edx
je     804caa8 <__sprintf_chk@plt+0x2b98>
mov    0x8073300,%eax
testb  $0x20,(%eax)
jne    804cb6f <__sprintf_chk@plt+0x2c5f>
mov    0x80733bc,%eax
mov    %ebx,0x80733a8
test   %eax,%eax
je     804ca99 <__sprintf_chk@plt+0x2b89>
mov    0x8073300,%eax
mov    %eax,(%esp)
call   8049940 <fflush_unlocked@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804cb38 <__sprintf_chk@plt+0x2c28>
xor    %eax,%eax
cmp    %ebp,%ebx
jbe    804cadc <__sprintf_chk@plt+0x2bcc>
movsbl -0x1(%ebx),%esi
mov    $0xffffffff,%edx
movzbl 0x8074044,%ecx
cmp    %ecx,%esi
je     804cd45 <__sprintf_chk@plt+0x2e35>
cmpb   $0xd,(%ebx,%edx,1)
cmove  %edx,%eax
add    %ebx,%eax
sub    %ebp,%eax
mov    %eax,%esi
je     804cb38 <__sprintf_chk@plt+0x2c28>
mov    0x14(%esp),%edi
mov    0x8073218,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
mov    0x8073300,%eax
mov    %ebp,(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049cd0 <fwrite_unlocked@plt>
cmpb   $0x0,(%edi)
je     804cb2a <__sprintf_chk@plt+0x2c1a>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
mov    0x8073458,%edx
test   %edx,%edx
jne    804ca6f <__sprintf_chk@plt+0x2b5f>
cmp    %ebp,%ebx
jbe    804ca6f <__sprintf_chk@plt+0x2b5f>
mov    0x8073300,%eax
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
call   8049cd0 <fwrite_unlocked@plt>
mov    0x8073300,%eax
testb  $0x20,(%eax)
je     804ca7d <__sprintf_chk@plt+0x2b6d>
movl   $0x5,0x8(%esp)
movl   $0x806b38f,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x807343c
00
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804ca7d <__sprintf_chk@plt+0x2b6d>
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x14(%esp)
jmp    804c944 <__sprintf_chk@plt+0x2a34>
lea    0x0(%esi),%esi
mov    %ebx,%edx
call   804c320 <__sprintf_chk@plt+0x2410>
mov    0x8073458,%edx
jmp    804c8eb <__sprintf_chk@plt+0x29db>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%esi
cmpb   $0x0,(%esi)
je     804cb30 <__sprintf_chk@plt+0x2c20>
jmp    804ca63 <__sprintf_chk@plt+0x2b53>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
cmpb   $0x0,(%eax)
jne    804ccf0 <__sprintf_chk@plt+0x2de0>
mov    0x10(%esp),%edx
mov    %edi,%eax
sub    %edx,%eax
test   %edx,%edx
je     804cd08 <__sprintf_chk@plt+0x2df8>
mov    0x8073300,%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8049cd0 <fwrite_unlocked@plt>
mov    0x807345c,%edx
movl   $0x0,0x10(%esp)
mov    0x2c(%esp),%eax
test   %edx,%edx
je     804ca06 <__sprintf_chk@plt+0x2af6>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804cc73 <__sprintf_chk@plt+0x2d63>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
mov    0x2c(%esp),%eax
jmp    804ca06 <__sprintf_chk@plt+0x2af6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073300,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   80498a0 <fputc_unlocked@plt>
jmp    804ca3f <__sprintf_chk@plt+0x2b2f>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804ca31 <__sprintf_chk@plt+0x2b21>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804ca31 <__sprintf_chk@plt+0x2b21>
nop
mov    0x8073458,%edx
test   %edx,%edx
jne    804cd18 <__sprintf_chk@plt+0x2e08>
mov    0x10(%esp),%ecx
test   %ecx,%ecx
je     804cd3d <__sprintf_chk@plt+0x2e2d>
mov    0x10(%esp),%ebp
jmp    804ca6b <__sprintf_chk@plt+0x2b5b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x10(%esp)
jmp    804c984 <__sprintf_chk@plt+0x2a74>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804cc0d <__sprintf_chk@plt+0x2cfd>
xchg   %ax,%ax
mov    %edi,%eax
sub    %esi,%eax
mov    %esi,0x10(%esp)
jmp    804cc1d <__sprintf_chk@plt+0x2d0d>
lea    0x0(%esi),%esi
mov    %ebx,0x10(%esp)
jmp    804ccd2 <__sprintf_chk@plt+0x2dc2>
test   %edx,%edx
jne    804c954 <__sprintf_chk@plt+0x2a44>
mov    0x1c(%esp),%edi
cmpb   $0x0,(%edi)
je     804caaf <__sprintf_chk@plt+0x2b9f>
cmp    %ebx,%ebp
mov    %ebp,%esi
jb     804c95c <__sprintf_chk@plt+0x2a4c>
mov    %esi,0x10(%esp)
xor    %edx,%edx
jmp    804ccd2 <__sprintf_chk@plt+0x2dc2>
lea    -0x1(%ebx),%eax
cmp    %eax,%ebp
mov    $0xffffffff,%eax
jae    804cadc <__sprintf_chk@plt+0x2bcc>
mov    $0xfe,%dl
jmp    804cad5 <__sprintf_chk@plt+0x2bc5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x80733a8,%ebp
test   %ebp,%ebp
je     804ce98 <__sprintf_chk@plt+0x2f88>
mov    0x8073394,%edi
mov    0x8073390,%esi
cmp    $0x0,%edi
jle    804ce88 <__sprintf_chk@plt+0x2f78>
cmp    %ebp,%ebx
ja     804cdcc <__sprintf_chk@plt+0x2ebc>
jmp    804ce64 <__sprintf_chk@plt+0x2f54>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    %esi,%edx
mov    $0x2d,%ecx
call   804c8d0 <__sprintf_chk@plt+0x29c0>
mov    0x8073394,%eax
mov    0x8073390,%edx
cmp    $0x0,%eax
jle    804ce70 <__sprintf_chk@plt+0x2f60>
mov    0x80733a8,%ebp
cmp    %ebx,%ebp
jae    804ce64 <__sprintf_chk@plt+0x2f54>
mov    %edx,%esi
mov    %eax,%edi
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
movzbl 0x8074044,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049c90 <memchr@plt>
add    $0xffffffff,%esi
mov    0x807339c,%edx
adc    $0xffffffff,%edi
or     0x8073398,%edx
mov    %esi,0x8073390
mov    %edi,0x8073394
lea    0x1(%eax),%esi
jne    804cd98 <__sprintf_chk@plt+0x2e88>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,%eax
sub    %ebp,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   *0x8073430
cmp    $0xffffffff,%eax
mov    0x80733f4,%eax
setne  %dl
test   %eax,%eax
sete   %al
cmp    %al,%dl
je     804ce50 <__sprintf_chk@plt+0x2f40>
mov    0x80733a8,%eax
jmp    804cd9a <__sprintf_chk@plt+0x2e8a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8073390
00
movl   $0x0,0x8073394
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     804ce64 <__sprintf_chk@plt+0x2f54>
cmp    $0x0,%edx
ja     804cdba <__sprintf_chk@plt+0x2eaa>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jl     804ce64 <__sprintf_chk@plt+0x2f54>
cmp    $0x0,%esi
jbe    804ce64 <__sprintf_chk@plt+0x2f54>
nop
jmp    804cd8c <__sprintf_chk@plt+0x2e7c>
lea    0x0(%esi),%esi
mov    0x8073420,%ebp
mov    %ebp,0x80733a8
jmp    804cd77 <__sprintf_chk@plt+0x2e67>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x8074044,%ebp
mov    %eax,0x28(%esp)
mov    0x80733f8,%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x24(%esp)
test   %eax,%eax
jne    804cf70 <__sprintf_chk@plt+0x3060>
cmpl   $0x0,0x8073394
jle    804d176 <__sprintf_chk@plt+0x3266>
mov    0x28(%esp),%eax
call   804cd60 <__sprintf_chk@plt+0x2e50>
mov    0x80733f8,%eax
test   %eax,%eax
jne    804cf70 <__sprintf_chk@plt+0x3060>
mov    0x80733a8,%edx
mov    0x80733e4,%edi
test   %edx,%edx
mov    %edx,0x2c(%esp)
cmove  0x8073420,%edx
cmp    $0x0,%edi
mov    %edx,0x20(%esp)
mov    0x80733e0,%edx
mov    %edx,0x1c(%esp)
jl     804d1b1 <__sprintf_chk@plt+0x32a1>
jle    804d1a6 <__sprintf_chk@plt+0x3296>
mov    0x28(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,%ecx
jmp    804cf50 <__sprintf_chk@plt+0x3040>
mov    0x1c(%esp),%ebx
add    $0x1,%eax
adc    $0x0,%edx
mov    %edx,%ebp
xor    %edi,%ebp
xor    %eax,%ebx
or     %ebx,%ebp
je     804d098 <__sprintf_chk@plt+0x3188>
cmp    %esi,0x20(%esp)
jae    804cf38 <__sprintf_chk@plt+0x3028>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
je     804cf38 <__sprintf_chk@plt+0x3028>
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
jne    804cf58 <__sprintf_chk@plt+0x3048>
jmp    804cf38 <__sprintf_chk@plt+0x3028>
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
mov    0x28(%esp),%ebx
test   %eax,%eax
je     804d16d <__sprintf_chk@plt+0x325d>
cmp    %ebx,0x18(%esp)
jbe    804d19b <__sprintf_chk@plt+0x328b>
cmpl   $0x0,0x807339c
jl     804d19b <__sprintf_chk@plt+0x328b>
jle    804d18e <__sprintf_chk@plt+0x327e>
mov    %ebp,%eax
xor    %edi,%edi
movsbl %al,%eax
xor    %ebp,%ebp
mov    %edi,%esi
mov    %ebp,%edi
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c90 <memchr@plt>
lea    0x1(%eax),%ebp
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804d078 <__sprintf_chk@plt+0x3168>
add    $0x1,%esi
adc    $0x0,%edi
cmp    %ebp,0x18(%esp)
jbe    804d000 <__sprintf_chk@plt+0x30f0>
cmp    %edi,0x807339c
jl     804d000 <__sprintf_chk@plt+0x30f0>
jg     804d070 <__sprintf_chk@plt+0x3160>
cmp    %esi,0x8073398
ja     804d070 <__sprintf_chk@plt+0x3160>
nop
mov    %esi,%eax
mov    %edi,%edx
mov    %ebp,%esi
mov    %eax,%edi
mov    %edx,%ebp
mov    0x24(%esp),%eax
mov    0x807341c,%ecx
mov    0x8073414,%edx
mov    %edi,(%eax)
mov    %ebp,0x4(%eax)
mov    0x8073410,%eax
sub    %esi,%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8073408
mov    %edx,0x807340c
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    804d16d <__sprintf_chk@plt+0x325d>
mov    0x80733d8,%eax
mov    0x80733dc,%edx
mov    %eax,0x8073390
mov    %edx,0x8073394
movl   $0x1,0x8073380
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%ebx
jmp    804cfb8 <__sprintf_chk@plt+0x30a8>
nop
mov    %ebx,%eax
mov    $0x3a,%ecx
mov    %ebp,%edx
call   804c8d0 <__sprintf_chk@plt+0x29c0>
mov    0x80733f8,%eax
mov    %eax,0x1c(%esp)
jmp    804cfe1 <__sprintf_chk@plt+0x30d1>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%ebp
mov    0x8073380,%ebx
test   %ebx,%ebx
je     804d106 <__sprintf_chk@plt+0x31f6>
cmp    0x2c(%esp),%esi
je     804d106 <__sprintf_chk@plt+0x31f6>
mov    0x807323c,%eax
test   %eax,%eax
je     804d106 <__sprintf_chk@plt+0x31f6>
mov    0x807345c,%ecx
mov    0x8073224,%edx
test   %ecx,%ecx
jne    804d214 <__sprintf_chk@plt+0x3304>
mov    0x8073300,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x807345c,%edx
mov    0x8073224,%eax
test   %edx,%edx
jne    804d1f9 <__sprintf_chk@plt+0x32e9>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d238 <__sprintf_chk@plt+0x3328>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
cmp    0x28(%esp),%esi
jae    804d24d <__sprintf_chk@plt+0x333d>
mov    %ebp,%eax
mov    0x28(%esp),%ebp
movsbl %al,%edi
mov    %al,0x1c(%esp)
jmp    804d122 <__sprintf_chk@plt+0x3212>
nop
mov    %ebx,%esi
mov    %ebp,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049c90 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804c8d0 <__sprintf_chk@plt+0x29c0>
cmp    %ebx,%ebp
ja     804d120 <__sprintf_chk@plt+0x3210>
movzbl 0x1c(%esp),%ebp
mov    0x80733f8,%eax
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
jne    804cf84 <__sprintf_chk@plt+0x3074>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     804d1d0 <__sprintf_chk@plt+0x32c0>
xor    %eax,%eax
xor    %edx,%edx
jmp    804d051 <__sprintf_chk@plt+0x3141>
jl     804cef6 <__sprintf_chk@plt+0x2fe6>
cmpl   $0x0,0x8073390
ja     804cee4 <__sprintf_chk@plt+0x2fd4>
jmp    804cef6 <__sprintf_chk@plt+0x2fe6>
cmpl   $0x0,0x8073398
ja     804cfa1 <__sprintf_chk@plt+0x3091>
mov    %ebx,%esi
xor    %edi,%edi
xor    %ebp,%ebp
jmp    804d00a <__sprintf_chk@plt+0x30fa>
cmpl   $0x0,0x1c(%esp)
ja     804cf2c <__sprintf_chk@plt+0x301c>
mov    0x1c(%esp),%edx
or     %edi,%edx
jne    804d1c7 <__sprintf_chk@plt+0x32b7>
mov    0x80733dc,%edx
or     0x80733d8,%edx
je     804d1f0 <__sprintf_chk@plt+0x32e0>
mov    0x28(%esp),%esi
jmp    804d09a <__sprintf_chk@plt+0x318a>
mov    0x28(%esp),%eax
mov    $0x3a,%ecx
mov    0x18(%esp),%edx
call   804c8d0 <__sprintf_chk@plt+0x29c0>
mov    0x80733f8,%eax
mov    %eax,0x1c(%esp)
jmp    804d03a <__sprintf_chk@plt+0x312a>
mov    0x28(%esp),%ebx
jmp    804d155 <__sprintf_chk@plt+0x3245>
cmpb   $0x0,(%eax)
je     804d0ec <__sprintf_chk@plt+0x31dc>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804d0ec <__sprintf_chk@plt+0x31dc>
cmpb   $0x0,(%edx)
je     804d0c7 <__sprintf_chk@plt+0x31b7>
mov    0x8073218,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
mov    0x807323c,%eax
jmp    804d0c7 <__sprintf_chk@plt+0x31b7>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804d106 <__sprintf_chk@plt+0x31f6>
mov    %esi,%ebx
mov    0x80733f8,%eax
jmp    804d155 <__sprintf_chk@plt+0x3245>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
sub    %edi,%ebp
cmp    $0x1,%eax
je     804d330 <__sprintf_chk@plt+0x3420>
mov    %edi,%eax
mov    %eax,%esi
mov    0x8074050,%eax
lea    (%edi,%ebp,1),%edi
test   %eax,%eax
jne    804d2df <__sprintf_chk@plt+0x33cf>
jmp    804d330 <__sprintf_chk@plt+0x3420>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ebp
mov    %ebp,%ebx
sub    %esi,%ebx
lea    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   *0x8073430
cmp    $0xffffffff,%eax
jne    804d628 <__sprintf_chk@plt+0x3718>
mov    %ebp,%esi
cmp    %edi,%esi
jae    804d308 <__sprintf_chk@plt+0x33f8>
movzbl 0x8074044,%eax
mov    %edi,%ebx
sub    %esi,%ebx
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
jne    804d2b0 <__sprintf_chk@plt+0x33a0>
mov    %edi,%ebp
jmp    804d2b7 <__sprintf_chk@plt+0x33a7>
xchg   %ax,%ax
mov    0x80733f4,%eax
test   %eax,%eax
je     804d320 <__sprintf_chk@plt+0x3410>
mov    0x10(%esp),%eax
cmp    %eax,0x14(%esp)
ja     804d6bb <__sprintf_chk@plt+0x37ab>
nop
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   *0x8073430
cmp    $0xffffffff,%eax
je     804d308 <__sprintf_chk@plt+0x33f8>
mov    0x10(%esp),%ecx
lea    (%ecx,%eax,1),%edi
mov    0x34(%esp),%eax
add    %edi,%eax
cmp    0x14(%esp),%edi
mov    %eax,0x18(%esp)
je     804d308 <__sprintf_chk@plt+0x33f8>
mov    0x80733f4,%eax
test   %eax,%eax
je     804d398 <__sprintf_chk@plt+0x3488>
cmp    %edi,0x10(%esp)
jb     804d4f0 <__sprintf_chk@plt+0x35e0>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ebp
mov    %eax,0x10(%esp)
mov    %eax,%edi
jmp    804d288 <__sprintf_chk@plt+0x3378>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80733f8,%eax
movzbl 0x8074044,%edx
test   %eax,%eax
jne    804d450 <__sprintf_chk@plt+0x3540>
cmpl   $0x0,0x8073394
jle    804d633 <__sprintf_chk@plt+0x3723>
mov    %edi,%eax
mov    %edx,0x10(%esp)
call   804cd60 <__sprintf_chk@plt+0x2e50>
mov    0x80733f8,%eax
mov    0x10(%esp),%edx
test   %eax,%eax
jne    804d450 <__sprintf_chk@plt+0x3540>
mov    0x80733a8,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
cmove  0x8073420,%eax
mov    %eax,0x1c(%esp)
mov    0x80733e0,%eax
mov    %eax,0x10(%esp)
mov    0x80733e4,%eax
cmp    $0x0,%eax
jl     804d656 <__sprintf_chk@plt+0x3746>
jle    804d64b <__sprintf_chk@plt+0x373b>
mov    %edi,%esi
xor    %ecx,%ecx
xor    %ebx,%ebx
mov    %eax,%ebp
mov    %edi,0x28(%esp)
jmp    804d430 <__sprintf_chk@plt+0x3520>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ebx,%edi
xor    %ebp,%edi
xor    %ecx,%eax
or     %eax,%edi
je     804d538 <__sprintf_chk@plt+0x3628>
cmp    %esi,0x1c(%esp)
jae    804d418 <__sprintf_chk@plt+0x3508>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
je     804d418 <__sprintf_chk@plt+0x3508>
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
jne    804d438 <__sprintf_chk@plt+0x3528>
jmp    804d418 <__sprintf_chk@plt+0x3508>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %eax,0x8073390
mov    0x8073398,%eax
mov    %edx,0x8073394
mov    0x807339c,%edx
addl   $0x1,0x20(%esp)
adcl   $0x0,0x24(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %edx,%ecx
or     %eax,%ecx
movl   $0x1,0x8073380
00
mov    %eax,0x8073398
mov    %edx,0x807339c
je     804d4a3 <__sprintf_chk@plt+0x3593>
mov    0x807338c,%edx
test   %edx,%edx
je     804d380 <__sprintf_chk@plt+0x3470>
mov    0x8073388,%ecx
test   %ecx,%ecx
jne    804d6f4 <__sprintf_chk@plt+0x37e4>
mov    0x807341c,%ecx
sub    0x18(%esp),%ecx
mov    0x8073410,%eax
mov    0x8073414,%edx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8073408
mov    0x20(%esp),%eax
mov    %edx,0x807340c
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
lea    0x38(%esp),%ecx
mov    %edi,%edx
call   804ceb0 <__sprintf_chk@plt+0x2fa0>
mov    0x38(%esp),%ecx
mov    0x8073398,%eax
mov    0x3c(%esp),%ebx
mov    0x807339c,%edx
add    %ecx,0x20(%esp)
adc    %ebx,0x24(%esp)
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x8073398
mov    %edx,0x807339c
jne    804d380 <__sprintf_chk@plt+0x3470>
jmp    804d320 <__sprintf_chk@plt+0x3410>
mov    0x28(%esp),%edi
mov    0x8073380,%ebp
test   %ebp,%ebp
je     804d5b0 <__sprintf_chk@plt+0x36a0>
cmp    %esi,0x2c(%esp)
je     804d5b0 <__sprintf_chk@plt+0x36a0>
mov    0x807323c,%eax
test   %eax,%eax
je     804d5b0 <__sprintf_chk@plt+0x36a0>
mov    0x807345c,%ebx
mov    0x8073224,%ecx
test   %ebx,%ebx
jne    804d68f <__sprintf_chk@plt+0x377f>
mov    0x8073300,%ecx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x4(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x807345c,%ebp
mov    0x8073224,%eax
mov    0x10(%esp),%edx
test   %ebp,%ebp
jne    804d670 <__sprintf_chk@plt+0x3760>
mov    0x8073300,%eax
mov    0x14(%eax),%ecx
cmp    0x18(%eax),%ecx
jae    804d700 <__sprintf_chk@plt+0x37f0>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%eax)
movb   $0xa,(%ecx)
cmp    %esi,%edi
jbe    804d5eb <__sprintf_chk@plt+0x36db>
movsbl %dl,%ebp
jmp    804d5c2 <__sprintf_chk@plt+0x36b2>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    %edi,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8049c90 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804c8d0 <__sprintf_chk@plt+0x29c0>
cmp    %ebx,%edi
ja     804d5c0 <__sprintf_chk@plt+0x36b0>
mov    0x80733f8,%esi
test   %esi,%esi
jne    804d450 <__sprintf_chk@plt+0x3540>
mov    0x18(%esp),%edx
mov    $0x3a,%ecx
mov    %edi,%eax
call   804c8d0 <__sprintf_chk@plt+0x29c0>
mov    0x80733f8,%ebx
test   %ebx,%ebx
jne    804d450 <__sprintf_chk@plt+0x3540>
mov    0x80733d8,%eax
mov    0x80733dc,%edx
jmp    804d454 <__sprintf_chk@plt+0x3544>
nop
sub    0x10(%esp),%esi
add    %esi,%eax
jmp    804d351 <__sprintf_chk@plt+0x3441>
jl     804d3d1 <__sprintf_chk@plt+0x34c1>
cmpl   $0x0,0x8073390
ja     804d3b9 <__sprintf_chk@plt+0x34a9>
jmp    804d3d1 <__sprintf_chk@plt+0x34c1>
cmpl   $0x0,0x10(%esp)
ja     804d404 <__sprintf_chk@plt+0x34f4>
or     0x10(%esp),%eax
jne    804d669 <__sprintf_chk@plt+0x3759>
mov    0x80733dc,%eax
or     0x80733d8,%eax
je     804d5eb <__sprintf_chk@plt+0x36db>
mov    %edi,%esi
jmp    804d53c <__sprintf_chk@plt+0x362c>
cmpb   $0x0,(%eax)
je     804d596 <__sprintf_chk@plt+0x3686>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
mov    0x10(%esp),%edx
jmp    804d596 <__sprintf_chk@plt+0x3686>
cmpb   $0x0,(%ecx)
je     804d569 <__sprintf_chk@plt+0x3659>
mov    0x8073218,%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
mov    0x807323c,%eax
mov    0x10(%esp),%edx
jmp    804d569 <__sprintf_chk@plt+0x3659>
mov    0x14(%esp),%edx
lea    0x38(%esp),%ecx
call   804ceb0 <__sprintf_chk@plt+0x2fa0>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
sub    %eax,0x8073398
sbb    %edx,0x807339c
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%esp)
call   8049b00 <exit@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
call   8049d50 <__overflow@plt>
mov    0x10(%esp),%edx
jmp    804d5b0 <__sprintf_chk@plt+0x36a0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x11c,%esp
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x2c(%esp)
call   80499d0 <__fxstat64@plt>
test   %eax,%eax
jne    804dbee <__sprintf_chk@plt+0x3cde>
mov    0x2c(%esp),%ebp
test   %ebp,%ebp
setne  0x1c(%esp)
jne    804dc45 <__sprintf_chk@plt+0x3d35>
mov    0x80733f8,%ebx
test   %ebx,%ebx
jne    804d7bc <__sprintf_chk@plt+0x38ac>
mov    0x80733cc,%ebp
test   %ebp,%ebp
jne    804d7bc <__sprintf_chk@plt+0x38ac>
cmpl   $0x0,0x80733c4
jl     804d7bc <__sprintf_chk@plt+0x38ac>
jle    804e420 <__sprintf_chk@plt+0x4510>
mov    0x8073490,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804d7bc <__sprintf_chk@plt+0x38ac>
mov    0x80734dc,%edx
mov    0x80734d8,%eax
mov    %edx,%edi
or     %eax,%edi
je     804d7bc <__sprintf_chk@plt+0x38ac>
xor    0xac(%esp),%edx
xor    0xa8(%esp),%eax
or     %eax,%edx
je     804e49d <__sprintf_chk@plt+0x458d>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <isatty@plt>
mov    0x8073418,%eax
movzbl 0x8074044,%ecx
test   %eax,%eax
je     804db7a <__sprintf_chk@plt+0x3c6a>
mov    0x807342c,%ebx
mov    %ecx,%edi
mov    %eax,%ebp
lea    0x1(%ebx),%esi
xor    %edx,%edx
mov    %esi,%eax
div    %ebp
test   %edx,%edx
je     804d7fb <__sprintf_chk@plt+0x38eb>
lea    0x1(%ebp),%eax
sub    %edx,%eax
lea    (%ebx,%eax,1),%esi
mov    %edi,%eax
mov    %al,-0x1(%esi)
mov    0x2c(%esp),%eax
mov    %esi,0x807341c
mov    %esi,0x8073420
mov    %eax,0x8073424
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804dd58 <__sprintf_chk@plt+0x3e48>
mov    0x80733c0,%eax
mov    0x80733c4,%edx
mov    %ecx,0x1c(%esp)
movl   $0x0,0x80733b0
00
mov    %eax,0x8073398
xor    %eax,%eax
mov    %edx,0x807339c
lea    0x50(%esp),%edx
movl   $0x0,0x80733b4
00
movl   $0x0,0x80733a8
00
movl   $0x0,0x80733a0
00
movl   $0x0,0x80733a4
00
movl   $0x0,0x8073408
00
movl   $0x0,0x807340c
00
movl   $0x0,0x8073390
00
movl   $0x0,0x8073394
00
call   804bee0 <__sprintf_chk@plt+0x1fd0>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     804e43e <__sprintf_chk@plt+0x452e>
mov    0x8073400,%ebx
test   %ebx,%ebx
jne    804dd91 <__sprintf_chk@plt+0x3e81>
mov    0x80733f8,%eax
test   %eax,%eax
jne    804e344 <__sprintf_chk@plt+0x4434>
mov    0x807341c,%eax
mov    0x8073420,%ebp
mov    %eax,0x1c(%esp)
sub    %ebp,%eax
cmpb   $0x0,0x8074044
je     804e390 <__sprintf_chk@plt+0x4480>
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x20(%esp)
call   8049c90 <memchr@plt>
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
test   %eax,%eax
je     804e680 <__sprintf_chk@plt+0x4770>
cmp    $0x2,%ebx
je     804dfbe <__sprintf_chk@plt+0x40ae>
mov    0x80733f8,%eax
mov    0x8073420,%esi
mov    0x807341c,%edi
movl   $0x1,0x3c(%esp)
mov    0x3c(%esp),%edx
xor    %ebp,%ebp
add    %edx,0x807338c
movl   $0x0,0x28(%esp)
add    %edx,%eax
mov    %eax,0x80733f8
movsbl %cl,%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0x38(%esp)
jmp    804da3d <__sprintf_chk@plt+0x3b2d>
lea    0x0(%esi),%esi
cmp    %ebp,%ebx
je     804d986 <__sprintf_chk@plt+0x3a76>
movl   $0x0,0x80733a8
00
mov    0x1c(%esp),%ebp
mov    0x80733e8,%eax
add    0x28(%esp),%ebp
sub    %ebx,%ebp
test   %eax,%eax
je     804da08 <__sprintf_chk@plt+0x3af8>
mov    0x807341c,%edi
mov    0x80733b0,%eax
mov    0x80733b4,%edx
sub    %esi,%edi
sub    %ebp,%edi
mov    %edi,%esi
xor    %edi,%edi
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804d9fc <__sprintf_chk@plt+0x3aec>
ja     804d9c0 <__sprintf_chk@plt+0x3ab0>
cmp    %esi,%eax
jbe    804d9fc <__sprintf_chk@plt+0x3aec>
movl   $0x5,0x8(%esp)
movl   $0x806b370,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80733b0
mov    %edi,0x80733b4
mov    0x80733ec,%edi
test   %edi,%edi
jne    804de50 <__sprintf_chk@plt+0x3f40>
lea    0x50(%esp),%edx
mov    %ebp,%eax
mov    %ecx,0x1c(%esp)
call   804bee0 <__sprintf_chk@plt+0x1fd0>
test   %eax,%eax
je     804df4f <__sprintf_chk@plt+0x403f>
mov    0x8073420,%esi
mov    0x807341c,%edi
mov    0x1c(%esp),%ecx
mov    0x80733a8,%ebx
mov    %esi,0x80733ac
test   %ebx,%ebx
je     804da57 <__sprintf_chk@plt+0x3b47>
mov    0x8073420,%eax
mov    %eax,0x80733a8
lea    (%esi,%ebp,1),%ebx
cmp    %edi,%ebx
je     804e234 <__sprintf_chk@plt+0x4324>
mov    %edi,%eax
movzbl -0x1(%ebx),%esi
sub    %ebx,%eax
add    $0x1,%eax
mov    %cl,-0x1(%ebx)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x4(%esp)
lea    -0x1(%ebx),%eax
mov    %eax,(%esp)
call   8049b60 <memrchr@plt>
mov    0x20(%esp),%ecx
add    $0x1,%eax
mov    %eax,%edx
mov    %eax,0x1c(%esp)
cmp    %edx,%ebx
mov    %esi,%eax
mov    %al,-0x1(%ebx)
je     804df06 <__sprintf_chk@plt+0x3ff6>
mov    %ebx,%eax
sub    %edx,%edi
sub    0x28(%esp),%eax
mov    %edi,0x28(%esp)
cmp    %eax,%edx
jbe    804db1b <__sprintf_chk@plt+0x3c0b>
mov    0x807339c,%edx
or     0x8073398,%edx
jne    804df31 <__sprintf_chk@plt+0x4021>
mov    0x8073394,%eax
or     0x8073390,%eax
jne    804df1b <__sprintf_chk@plt+0x400b>
mov    0x807339c,%eax
or     0x8073398,%eax
jne    804daf6 <__sprintf_chk@plt+0x3be6>
mov    0x8073394,%eax
or     0x8073390,%eax
je     804df8c <__sprintf_chk@plt+0x407c>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     804db1b <__sprintf_chk@plt+0x3c0b>
mov    0x807338c,%eax
test   %eax,%eax
je     804db1b <__sprintf_chk@plt+0x3c0b>
mov    0x80733f4,%edx
test   %edx,%edx
je     804e087 <__sprintf_chk@plt+0x4177>
mov    0x80733e0,%eax
xor    %edx,%edx
mov    0x80733e4,%edi
mov    0x80733a8,%ebp
mov    0x8073420,%esi
mov    0x1c(%esp),%ebx
mov    %eax,0x20(%esp)
xor    %eax,%eax
xchg   %ax,%ax
cmp    %edi,%edx
jg     804d978 <__sprintf_chk@plt+0x3a68>
jl     804db54 <__sprintf_chk@plt+0x3c44>
cmp    0x20(%esp),%eax
jae    804d978 <__sprintf_chk@plt+0x3a68>
cmp    %ebx,%esi
jae    804d978 <__sprintf_chk@plt+0x3a68>
cmp    %ebp,%ebx
xchg   %ax,%ax
je     804d986 <__sprintf_chk@plt+0x3a76>
add    $0x1,%eax
adc    $0x0,%edx
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    -0x1(%ebx),%cl
jne    804db70 <__sprintf_chk@plt+0x3c60>
jmp    804db40 <__sprintf_chk@plt+0x3c30>
mov    %ecx,0x20(%esp)
call   8049c20 <getpagesize@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x8073418
je     804e532 <__sprintf_chk@plt+0x4622>
lea    0x1(%eax,%eax,1),%eax
mov    0x20(%esp),%ecx
cmp    %eax,%ebx
jae    804e532 <__sprintf_chk@plt+0x4622>
xor    %edx,%edx
mov    $0x8000,%eax
div    %ebx
mov    $0x8000,%eax
test   %edx,%edx
je     804dbbc <__sprintf_chk@plt+0x3cac>
lea    0x8000(%ebx),%eax
sub    %edx,%eax
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x8073428
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x8073418,%ebp
movzbl 0x8074044,%edi
mov    0x20(%esp),%ecx
mov    %eax,0x807342c
mov    %eax,%ebx
jmp    804d7e6 <__sprintf_chk@plt+0x38d6>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ecx
mov    0x8073448,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804dc21 <__sprintf_chk@plt+0x3d11>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
mov    $0x1,%ebp
mov    0x2c(%esp),%ebx
test   %ebx,%ebx
jne    804dc98 <__sprintf_chk@plt+0x3d88>
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
mov    0x8073210,%eax
je     804dcf8 <__sprintf_chk@plt+0x3de8>
mov    0x60(%esp),%edx
mov    0x8073448,%ecx
and    $0xf000,%edx
cmp    $0x4000,%edx
jne    804dcda <__sprintf_chk@plt+0x3dca>
cmp    $0x4,%eax
je     804dc93 <__sprintf_chk@plt+0x3d83>
mov    0x8073444,%esi
test   %esi,%esi
jne    804dcf8 <__sprintf_chk@plt+0x3de8>
mov    0x807344c,%edx
test   %edx,%edx
je     804dcf8 <__sprintf_chk@plt+0x3de8>
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   805bb00 <__sprintf_chk@plt+0x11bf0>
test   %al,%al
je     804dcf3 <__sprintf_chk@plt+0x3de3>
mov    $0x1,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
test   %eax,%eax
je     804dc38 <__sprintf_chk@plt+0x3d28>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ecx
mov    0x8073448,%edx
test   %ecx,%ecx
mov    (%eax),%eax
je     804e213 <__sprintf_chk@plt+0x4303>
movl   $0x1,0x8073440
00
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8073450,%eax
test   %eax,%eax
je     804dcf3 <__sprintf_chk@plt+0x3de3>
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   805bb00 <__sprintf_chk@plt+0x11bf0>
test   %al,%al
jne    804dc93 <__sprintf_chk@plt+0x3d83>
mov    0x8073210,%eax
cmp    $0x3,%eax
je     804e113 <__sprintf_chk@plt+0x4203>
cmp    $0x4,%eax
je     804dd78 <__sprintf_chk@plt+0x3e68>
mov    0x8073438,%eax
cmp    $0x2,%eax
je     804dd20 <__sprintf_chk@plt+0x3e10>
test   %eax,%eax
jne    804d761 <__sprintf_chk@plt+0x3851>
test   %edi,%edi
jne    804d761 <__sprintf_chk@plt+0x3851>
mov    0x60(%esp),%eax
mov    %eax,%edx
and    $0xb000,%edx
cmp    $0x2000,%edx
je     804dc93 <__sprintf_chk@plt+0x3d83>
and    $0xf000,%eax
cmp    $0xc000,%eax
je     804dc93 <__sprintf_chk@plt+0x3d83>
cmp    $0x1000,%eax
jne    804d761 <__sprintf_chk@plt+0x3851>
jmp    804dc93 <__sprintf_chk@plt+0x3d83>
cmpb   $0x0,0x1c(%esp)
je     804ddb8 <__sprintf_chk@plt+0x3ea8>
movl   $0x0,0x8073410
00
movl   $0x0,0x8073414
00
jmp    804d829 <__sprintf_chk@plt+0x3919>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804dd06 <__sprintf_chk@plt+0x3df6>
jmp    804dc93 <__sprintf_chk@plt+0x3d83>
cmp    $0x2,%ebx
je     804d8cf <__sprintf_chk@plt+0x39bf>
mov    0x80733f8,%eax
mov    0x8073420,%esi
mov    0x807341c,%edi
movl   $0x0,0x3c(%esp)
jmp    804d93b <__sprintf_chk@plt+0x3a2b>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049da0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
mov    %eax,0x8073410
mov    %edx,0x8073414
jns    804d829 <__sprintf_chk@plt+0x3919>
call   8049c80 <__errno_location@plt>
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806b3c4,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    0x8073460,%esi
test   %esi,%esi
jne    804e473 <__sprintf_chk@plt+0x4563>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
jmp    804e473 <__sprintf_chk@plt+0x4563>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80733ac,%eax
cmp    %ebx,%eax
jae    804e435 <__sprintf_chk@plt+0x4525>
mov    %ebp,0x1c(%esp)
movzbl 0x8074044,%edi
xor    %esi,%esi
mov    %ecx,%ebp
jmp    804de7a <__sprintf_chk@plt+0x3f6a>
xchg   %ax,%ax
add    $0x1,%eax
add    $0x1,%esi
cmp    %ebx,%eax
jae    804de92 <__sprintf_chk@plt+0x3f82>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
jne    804de70 <__sprintf_chk@plt+0x3f60>
mov    %ebp,%ecx
mov    0x1c(%esp),%ebp
xor    %edi,%edi
mov    0x80733a0,%eax
mov    0x80733a4,%edx
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804deef <__sprintf_chk@plt+0x3fdf>
ja     804deb3 <__sprintf_chk@plt+0x3fa3>
cmp    %esi,%eax
jbe    804deef <__sprintf_chk@plt+0x3fdf>
movl   $0x5,0x8(%esp)
movl   $0x806b370,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80733a0
mov    %edi,0x80733a4
mov    %ebx,0x80733ac
jmp    804da16 <__sprintf_chk@plt+0x3b06>
mov    0x28(%esp),%eax
sub    %eax,0x1c(%esp)
sub    0x1c(%esp),%edi
mov    %edi,0x28(%esp)
jmp    804db1b <__sprintf_chk@plt+0x3c0b>
mov    0x1c(%esp),%eax
mov    %ecx,0x20(%esp)
call   804cd60 <__sprintf_chk@plt+0x2e50>
mov    0x20(%esp),%ecx
jmp    804dad8 <__sprintf_chk@plt+0x3bc8>
mov    0x1c(%esp),%edx
mov    %ecx,0x20(%esp)
call   804d260 <__sprintf_chk@plt+0x3350>
mov    0x20(%esp),%ecx
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804dac7 <__sprintf_chk@plt+0x3bb7>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%esi
mov    0x8073448,%edx
test   %esi,%esi
mov    (%eax),%eax
jne    804df82 <__sprintf_chk@plt+0x4072>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
mov    0x3c(%esp),%edx
mov    0x80733f8,%eax
sub    %edx,0x807338c
sub    %edx,%eax
mov    %eax,0x80733f8
not    %eax
test   %eax,%edx
je     804e0da <__sprintf_chk@plt+0x41ca>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
jne    804e0a4 <__sprintf_chk@plt+0x4194>
mov    $0xffffffff,%ebx
mov    $0x1,%ebp
xor    %esi,%esi
xor    %edi,%edi
mov    0x80733d0,%eax
test   %eax,%eax
je     804dffe <__sprintf_chk@plt+0x40ee>
mov    0x80733f0,%eax
test   %eax,%eax
jne    804e2e3 <__sprintf_chk@plt+0x43d3>
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0x806b3e9,0x4(%esp)
movl   $0x1,(%esp)
call   8049ce0 <__printf_chk@plt>
cmp    %ebx,0x80733cc
je     804e280 <__sprintf_chk@plt+0x4370>
mov    0x2c(%esp),%esi
test   %esi,%esi
jne    804dc98 <__sprintf_chk@plt+0x3d88>
mov    0x807339c,%eax
or     0x8073398,%eax
jne    804dc38 <__sprintf_chk@plt+0x3d28>
mov    0x8073408,%edx
mov    0x807340c,%eax
mov    0x8073414,%ebx
mov    0x8073410,%ecx
xor    %eax,%ebx
xor    %edx,%ecx
or     %ecx,%ebx
je     804dc38 <__sprintf_chk@plt+0x3d28>
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   8049da0 <lseek64@plt>
test   %edx,%edx
jns    804dc38 <__sprintf_chk@plt+0x3d28>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804dc38 <__sprintf_chk@plt+0x3d28>
jmp    804dca8 <__sprintf_chk@plt+0x3d98>
mov    0x3c(%esp),%edx
sub    %edx,%eax
mov    %eax,0x807338c
mov    0x80733f8,%eax
sub    %edx,%eax
mov    %eax,0x80733f8
not    %eax
test   %eax,%edx
je     804e0da <__sprintf_chk@plt+0x41ca>
movl   $0x5,0x8(%esp)
mov    0x8073448,%ebx
movl   $0x806b3d1,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
js     804e107 <__sprintf_chk@plt+0x41f7>
mov    0x30(%esp),%esi
mov    $0x1,%edx
mov    0x34(%esp),%edi
mov    %esi,%eax
or     %edi,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%ebx
mov    %eax,%ebp
neg    %ebx
lea    (%edx,%ebx,2),%ebx
jmp    804dfcc <__sprintf_chk@plt+0x40bc>
mov    0x30(%esp),%ebp
add    $0x2,%ebp
jmp    804dc30 <__sprintf_chk@plt+0x3d20>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804dd06 <__sprintf_chk@plt+0x3df6>
mov    0x2c(%esp),%eax
xor    %ebx,%ebx
test   %edi,%edi
sete   %bl
not    %ebx
and    0x807320c,%ebx
mov    %eax,(%esp)
call   8049eb0 <close@plt>
test   %eax,%eax
jne    804e7f7 <__sprintf_chk@plt+0x48e7>
mov    0x8073448,%eax
mov    %eax,0x48(%esp)
lea    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x4c(%esp)
call   8066db0 <fts_open>
test   %eax,%eax
mov    %eax,%esi
je     804e7f2 <__sprintf_chk@plt+0x48e2>
mov    $0x1,%ebp
mov    %esi,(%esp)
mov    %ebp,0x20(%esp)
mov    %edi,0x28(%esp)
call   8067650 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
je     804e1d8 <__sprintf_chk@plt+0x42c8>
mov    0x30(%ebp),%eax
xor    %ebx,%ebx
test   %eax,%eax
movzwl 0x3c(%ebp),%eax
sete   %bl
and    0x28(%esp),%ebx
cmp    $0x6,%ax
jne    804e5b0 <__sprintf_chk@plt+0x46a0>
cmpl   $0x3,0x8073210
je     804e6a0 <__sprintf_chk@plt+0x4790>
mov    $0x1,%eax
mov    %esi,(%esp)
and    %eax,0x20(%esp)
call   8067650 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
jne    804e198 <__sprintf_chk@plt+0x4288>
call   8049c80 <__errno_location@plt>
mov    0x20(%esp),%ebp
mov    %eax,%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    804e91a <__sprintf_chk@plt+0x4a0a>
mov    %esi,(%esp)
call   8067470 <fts_close>
test   %eax,%eax
je     804dc38 <__sprintf_chk@plt+0x3d28>
mov    0x8073460,%ecx
mov    (%ebx),%eax
mov    0x8073448,%edx
test   %ecx,%ecx
jne    804dcc3 <__sprintf_chk@plt+0x3db3>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
jmp    804dcc3 <__sprintf_chk@plt+0x3db3>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     804df8c <__sprintf_chk@plt+0x407c>
mov    0x807339c,%eax
lea    0x1(%edi),%edx
or     0x8073398,%eax
mov    %edx,0x807341c
mov    %cl,(%edi)
jne    804e591 <__sprintf_chk@plt+0x4681>
mov    0x8073394,%eax
or     0x8073390,%eax
je     804df8c <__sprintf_chk@plt+0x407c>
mov    0x807341c,%eax
call   804cd60 <__sprintf_chk@plt+0x2e50>
jmp    804df8c <__sprintf_chk@plt+0x407c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807345c,%edx
mov    0x8073230,%eax
test   %edx,%edx
jne    804e513 <__sprintf_chk@plt+0x4603>
mov    0x8073300,%eax
mov    %eax,0x4(%esp)
mov    0x8073448,%eax
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x807345c,%edi
mov    0x8073230,%eax
test   %edi,%edi
jne    804e482 <__sprintf_chk@plt+0x4572>
mov    0x8073300,%edx
mov    0x80733fc,%eax
mov    0x14(%edx),%ecx
and    $0xa,%eax
cmp    0x18(%edx),%ecx
jae    804e580 <__sprintf_chk@plt+0x4670>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%edx)
mov    %al,(%ecx)
jmp    804e00a <__sprintf_chk@plt+0x40fa>
mov    0x807345c,%ecx
mov    0x8073230,%eax
test   %ecx,%ecx
jne    804e370 <__sprintf_chk@plt+0x4460>
mov    0x8073300,%eax
mov    %eax,0x4(%esp)
mov    0x8073448,%eax
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x807345c,%edx
mov    0x8073230,%eax
test   %edx,%edx
jne    804e355 <__sprintf_chk@plt+0x4445>
mov    0x80733fc,%ecx
test   %ecx,%ecx
jne    804e3c4 <__sprintf_chk@plt+0x44b4>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804e56b <__sprintf_chk@plt+0x465b>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804dfe2 <__sprintf_chk@plt+0x40d2>
mov    0x8073420,%esi
mov    0x807341c,%edi
jmp    804ddab <__sprintf_chk@plt+0x3e9b>
cmpb   $0x0,(%eax)
je     804e317 <__sprintf_chk@plt+0x4407>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804e317 <__sprintf_chk@plt+0x4407>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804e2f2 <__sprintf_chk@plt+0x43e2>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804e2f2 <__sprintf_chk@plt+0x43e2>
nop
mov    %eax,0x8(%esp)
movl   $0xffffff80,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
call   8049c90 <memchr@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    804d919 <__sprintf_chk@plt+0x3a09>
mov    0x80733f8,%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
jmp    804ddab <__sprintf_chk@plt+0x3e9b>
mov    0x807345c,%edx
mov    0x8073224,%eax
test   %edx,%edx
jne    804e54c <__sprintf_chk@plt+0x463c>
mov    0x8073300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804e537 <__sprintf_chk@plt+0x4627>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x3a,(%edx)
mov    0x807345c,%ecx
mov    0x8073224,%eax
test   %ecx,%ecx
je     804dfe2 <__sprintf_chk@plt+0x40d2>
cmpb   $0x0,(%eax)
je     804dfe2 <__sprintf_chk@plt+0x40d2>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804dfe2 <__sprintf_chk@plt+0x40d2>
nop
cmpl   $0x1,0x80733c0
jbe    804d7bc <__sprintf_chk@plt+0x38ac>
lea    0x0(%esi),%esi
jmp    804d784 <__sprintf_chk@plt+0x3874>
xor    %esi,%esi
xor    %edi,%edi
jmp    804de9a <__sprintf_chk@plt+0x3f8a>
xchg   %ax,%ax
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ecx
mov    0x8073448,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804e473 <__sprintf_chk@plt+0x4563>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
jmp    804dfbe <__sprintf_chk@plt+0x40ae>
cmpb   $0x0,(%eax)
je     804e2bc <__sprintf_chk@plt+0x43ac>
mov    0x8073214,%eax
mov    %eax,(%esp)
call   8065900 <__sprintf_chk@plt+0x1b9f0>
jmp    804e2bc <__sprintf_chk@plt+0x43ac>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
xor    0x8073484,%edx
xor    0x8073480,%eax
or     %eax,%edx
jne    804d7bc <__sprintf_chk@plt+0x38ac>
mov    0x8073460,%edi
test   %edi,%edi
jne    804dc21 <__sprintf_chk@plt+0x3d11>
mov    0x8073448,%eax
mov    %eax,(%esp)
call   8062060 <__sprintf_chk@plt+0x18150>
movl   $0x5,0x8(%esp)
movl   $0x806b7b8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80498c0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
jmp    804dc21 <__sprintf_chk@plt+0x3d11>
cmpb   $0x0,(%eax)
je     804e293 <__sprintf_chk@plt+0x4383>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804e293 <__sprintf_chk@plt+0x4383>
call   8049e60 <abort@plt>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804e3f1 <__sprintf_chk@plt+0x44e1>
cmpb   $0x0,(%eax)
je     804e3d7 <__sprintf_chk@plt+0x44c7>
mov    %eax,0x4(%esp)
mov    0x8073218,%eax
mov    %eax,(%esp)
call   80658d0 <__sprintf_chk@plt+0x1b9c0>
jmp    804e3d7 <__sprintf_chk@plt+0x44c7>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <__overflow@plt>
jmp    804dfe2 <__sprintf_chk@plt+0x40d2>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049d50 <__overflow@plt>
jmp    804e00a <__sprintf_chk@plt+0x40fa>
mov    %ebp,%eax
sub    0x28(%esp),%eax
add    %esi,%eax
call   804d260 <__sprintf_chk@plt+0x3350>
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804e25c <__sprintf_chk@plt+0x434c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%eax),%ecx
cmp    $0x1,%cx
lea    0xa4(%ebp),%edi
jbe    804e5c5 <__sprintf_chk@plt+0x46b5>
cmp    $0x4,%ax
jne    804e63c <__sprintf_chk@plt+0x472c>
cmpl   $0x4,0x8073210
je     804e662 <__sprintf_chk@plt+0x4752>
test   %ebx,%ebx
je     804e5e0 <__sprintf_chk@plt+0x46d0>
mov    0x8073444,%ecx
test   %ecx,%ecx
jne    804e604 <__sprintf_chk@plt+0x46f4>
mov    0x807344c,%ecx
test   %ecx,%ecx
je     804e65a <__sprintf_chk@plt+0x474a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   805bb00 <__sprintf_chk@plt+0x11bf0>
test   %al,%al
jne    804e662 <__sprintf_chk@plt+0x4752>
mov    0x8073444,%ecx
movzwl 0x3c(%ebp),%eax
mov    0x1c(%ebp),%edi
movl   $0x1,0x1c(%esp)
add    %ecx,%edi
mov    0x2c(%esi),%ecx
mov    %edi,0x8073448
mov    %ecx,%edx
and    $0x2,%edx
jne    804e62b <__sprintf_chk@plt+0x471b>
test   $0x1,%cl
cmovne %ebx,%edx
mov    %edx,0x1c(%esp)
cmp    $0xe,%ax
ja     804e532 <__sprintf_chk@plt+0x4622>
jmp    *0x806c820(,%eax,4)
mov    0x8073450,%ecx
test   %ecx,%ecx
je     804e65a <__sprintf_chk@plt+0x474a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   805bb00 <__sprintf_chk@plt+0x11bf0>
test   %al,%al
jne    804e662 <__sprintf_chk@plt+0x4752>
movzwl 0x3c(%ebp),%eax
mov    0x8073444,%ecx
jmp    804e604 <__sprintf_chk@plt+0x46f4>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8068080 <fts_set>
mov    $0x1,%eax
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
mov    0x60(%esp),%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804e6c7 <__sprintf_chk@plt+0x47b7>
mov    0x80733f8,%eax
jmp    804ddab <__sprintf_chk@plt+0x3e9b>
test   %ebx,%ebx
je     804e1c1 <__sprintf_chk@plt+0x42b1>
cmpl   $0x1,0x80733c8
sbb    %eax,%eax
and    $0xfffffffe,%eax
sub    $0x1,%eax
and    %eax,0x80733f0
mov    $0x1,%eax
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
mov    0x2c(%esp),%eax
mov    %edx,0x20(%esp)
movl   $0x0,0x24(%esp)
test   %eax,%eax
jne    804e70f <__sprintf_chk@plt+0x47ff>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
call   8049da0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
js     804e696 <__sprintf_chk@plt+0x4786>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x2c(%esp),%edi
movl   $0x4,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x28(%esp)
call   8049da0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,%esi
mov    %edx,%ebx
js     804e7e7 <__sprintf_chk@plt+0x48d7>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x1c(%esp)
call   8049da0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
js     804e7a0 <__sprintf_chk@plt+0x4890>
cmp    0x80(%esp),%ebx
jl     804e795 <__sprintf_chk@plt+0x4885>
jg     804e784 <__sprintf_chk@plt+0x4874>
cmp    0x7c(%esp),%esi
jb     804e795 <__sprintf_chk@plt+0x4885>
mov    0x8073420,%esi
mov    0x807341c,%edi
jmp    804e696 <__sprintf_chk@plt+0x4786>
mov    0x8073400,%ebx
jmp    804d919 <__sprintf_chk@plt+0x3a09>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%edi
mov    0x8073448,%edx
mov    0x1c(%esp),%ecx
test   %edi,%edi
mov    (%eax),%eax
jne    804e7db <__sprintf_chk@plt+0x48cb>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
mov    0x1c(%esp),%ecx
movl   $0x1,0x8073440
00
jmp    804e773 <__sprintf_chk@plt+0x4863>
mov    0x1c(%esp),%edi
mov    %ebp,%esi
jmp    804e696 <__sprintf_chk@plt+0x4786>
call   8064470 <__sprintf_chk@plt+0x1a560>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ecx
test   %ecx,%ecx
mov    (%eax),%edx
mov    0x8073448,%eax
jne    804e82e <__sprintf_chk@plt+0x491e>
mov    %eax,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
mov    0x8073448,%eax
movl   $0x1,0x8073440
00
jmp    804e14f <__sprintf_chk@plt+0x423f>
mov    0x8073438,%eax
cmp    $0x2,%eax
je     804e853 <__sprintf_chk@plt+0x4943>
test   %eax,%eax
jne    804e8d1 <__sprintf_chk@plt+0x49c1>
test   %ebx,%ebx
jne    804e8d1 <__sprintf_chk@plt+0x49c1>
mov    0x54(%ebp),%eax
test   %eax,%eax
jne    804e89e <__sprintf_chk@plt+0x498e>
cmpl   $0x1,0x1c(%esp)
sbb    %eax,%eax
and    $0x100,%eax
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%ebp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049980 <__fxstatat64@plt>
test   %eax,%eax
jne    804e9fe <__sprintf_chk@plt+0x4aee>
mov    0xc0(%esp),%eax
mov    %eax,%ecx
and    $0xb000,%eax
and    $0xf000,%ecx
cmp    $0x2000,%eax
je     804e1c1 <__sprintf_chk@plt+0x42b1>
cmp    $0xc000,%ecx
je     804e1c1 <__sprintf_chk@plt+0x42b1>
cmp    $0x1000,%ecx
je     804e1c1 <__sprintf_chk@plt+0x42b1>
mov    0x2c(%esi),%ecx
and    $0x204,%ecx
mov    $0xffffff9c,%eax
cmp    $0x200,%ecx
jne    804e8e7 <__sprintf_chk@plt+0x49d7>
mov    0x1c(%esi),%eax
mov    0x1c(%esp),%ecx
mov    0x18(%ebp),%edx
test   %ecx,%ecx
je     804e99c <__sprintf_chk@plt+0x4a8c>
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
test   %eax,%eax
js     804e955 <__sprintf_chk@plt+0x4a45>
mov    %ebx,%edx
call   804d720 <__sprintf_chk@plt+0x3810>
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
mov    0x8073460,%edi
mov    0x8073448,%edx
test   %edi,%edi
jne    804e946 <__sprintf_chk@plt+0x4a36>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
jmp    804e1ed <__sprintf_chk@plt+0x42dd>
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    0x8073460,%ebp
mov    0x8073448,%edx
test   %ebp,%ebp
jne    804e988 <__sprintf_chk@plt+0x4a78>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
mov    $0x1,%eax
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
movl   $0x20000,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
test   %eax,%eax
jns    804e90e <__sprintf_chk@plt+0x49fe>
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x1f,%eax
je     804e1c1 <__sprintf_chk@plt+0x42b1>
cmp    $0x28,%eax
je     804e1c1 <__sprintf_chk@plt+0x42b1>
jmp    804e95c <__sprintf_chk@plt+0x4a4c>
mov    0x20(%ebp),%eax
mov    0x8073460,%ebp
test   %ebp,%ebp
jne    804e988 <__sprintf_chk@plt+0x4a78>
mov    %edi,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
jmp    804e988 <__sprintf_chk@plt+0x4a78>
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ebx
test   %ebx,%ebx
mov    (%eax),%eax
jne    804ea2b <__sprintf_chk@plt+0x4b1b>
mov    %edi,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
jmp    804e1c1 <__sprintf_chk@plt+0x42b1>
mov    0x8073460,%eax
test   %eax,%eax
jne    804e1c1 <__sprintf_chk@plt+0x42b1>
movl   $0x5,0x8(%esp)
movl   $0x806b39b,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b3b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80498c0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049a60 <error@plt>
mov    $0x1,%eax
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
cmpl   $0x3,0x8073210
jne    804ead0 <__sprintf_chk@plt+0x4bc0>
cmpl   $0x1,0x80733c8
sbb    %eax,%eax
and    $0x2,%eax
or     %eax,0x80733f0
mov    $0x1,%eax
jmp    804e1c6 <__sprintf_chk@plt+0x42b6>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8068080 <fts_set>
mov    0x2c(%esi),%ecx
jmp    804e8d1 <__sprintf_chk@plt+0x49c1>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
cmpb   $0x2d,(%eax)
je     804eb28 <__sprintf_chk@plt+0x4c18>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x8073448
call   805e090 <__sprintf_chk@plt+0x14180>
test   %eax,%eax
js     804eb50 <__sprintf_chk@plt+0x4c40>
mov    $0x1,%edx
add    $0x1c,%esp
jmp    804d720 <__sprintf_chk@plt+0x3810>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    804eaf8 <__sprintf_chk@plt+0x4be8>
mov    0x80733b8,%eax
test   %eax,%eax
je     804eb98 <__sprintf_chk@plt+0x4c88>
mov    %eax,0x8073448
mov    $0x1,%edx
xor    %eax,%eax
add    $0x1c,%esp
jmp    804d720 <__sprintf_chk@plt+0x3810>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
mov    0x8073460,%ecx
mov    0x8073448,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804eb83 <__sprintf_chk@plt+0x4c73>
mov    %edx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a60 <error@plt>
movl   $0x1,0x8073440
00
mov    $0x1,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806b3ef,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
jmp    804eb37 <__sprintf_chk@plt+0x4c27>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8073ae8,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806b7dc,0x4(%esp)
movl   $0x0,(%esp)
test   %ebx,%ebx
je     804ec53 <__sprintf_chk@plt+0x4d43>
call   80498c0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80732a4,%eax
mov    %eax,(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    0x8073ae8,%esi
movl   $0x5,0x8(%esp)
movl   $0x806b808,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80732a4,%eax
mov    %eax,(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049b00 <exit@plt>
call   80498c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b830,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
mov    0x8073300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806b2c0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    0x8073ae8,%esi
movl   $0x5,0x8(%esp)
movl   $0x806b864,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
cmpl   $0x0,0x806b300
je     804ed31 <__sprintf_chk@plt+0x4e21>
movl   $0x5,0x8(%esp)
movl   $0x806b8b8,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b9e0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806bb4c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806bc7c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806be4c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806bf94,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c14c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c27c,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c3d0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c4a0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
mov    0x8073300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806b280,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c634,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b400,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806b415,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806b426,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806c744,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
mov    0x8073300,%esi
movl   $0x5,0x8(%esp)
movl   $0x806c768,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
jmp    804ec4b <__sprintf_chk@plt+0x4d3b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f672 <__sprintf_chk@plt+0x5762>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804f31a <__sprintf_chk@plt+0x540a>
mov    (%eax),%esi
test   %esi,%esi
je     804f19c <__sprintf_chk@plt+0x528c>
mov    (%esi),%edi
test   %edi,%edi
je     804f0e6 <__sprintf_chk@plt+0x51d6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f067 <__sprintf_chk@plt+0x5157>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f02b <__sprintf_chk@plt+0x511b>
mov    (%ecx),%eax
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f6f8 <__sprintf_chk@plt+0x57e8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6e8 <__sprintf_chk@plt+0x57d8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f0a2 <__sprintf_chk@plt+0x5192>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f728 <__sprintf_chk@plt+0x5818>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f6a0 <__sprintf_chk@plt+0x5790>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f163 <__sprintf_chk@plt+0x5253>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f127 <__sprintf_chk@plt+0x5217>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f730 <__sprintf_chk@plt+0x5820>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6e0 <__sprintf_chk@plt+0x57d0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%eax
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804f680 <__sprintf_chk@plt+0x5770>
mov    (%esi),%edi
test   %edi,%edi
je     804f258 <__sprintf_chk@plt+0x5348>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f227 <__sprintf_chk@plt+0x5317>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f1eb <__sprintf_chk@plt+0x52db>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f718 <__sprintf_chk@plt+0x5808>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6b8 <__sprintf_chk@plt+0x57a8>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f6a8 <__sprintf_chk@plt+0x5798>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f2d5 <__sprintf_chk@plt+0x53c5>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f299 <__sprintf_chk@plt+0x5389>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f700 <__sprintf_chk@plt+0x57f0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6f0 <__sprintf_chk@plt+0x57e0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804f690 <__sprintf_chk@plt+0x5780>
mov    (%eax),%esi
test   %esi,%esi
je     804f4ec <__sprintf_chk@plt+0x55dc>
mov    (%esi),%edi
test   %edi,%edi
je     804f3e4 <__sprintf_chk@plt+0x54d4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f365 <__sprintf_chk@plt+0x5455>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6d0 <__sprintf_chk@plt+0x57c0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f3a0 <__sprintf_chk@plt+0x5490>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f708 <__sprintf_chk@plt+0x57f8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f6b0 <__sprintf_chk@plt+0x57a0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f461 <__sprintf_chk@plt+0x5551>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f425 <__sprintf_chk@plt+0x5515>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f710 <__sprintf_chk@plt+0x5800>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6c0 <__sprintf_chk@plt+0x57b0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f49c <__sprintf_chk@plt+0x558c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f720 <__sprintf_chk@plt+0x5810>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    0x4(%esp),%eax
mov    %edx,(%ebx)
mov    0x4(%eax),%esi
test   %esi,%esi
je     804f688 <__sprintf_chk@plt+0x5778>
mov    (%esi),%edi
test   %edi,%edi
je     804f5a4 <__sprintf_chk@plt+0x5694>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f573 <__sprintf_chk@plt+0x5663>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f537 <__sprintf_chk@plt+0x5627>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f738 <__sprintf_chk@plt+0x5828>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6c8 <__sprintf_chk@plt+0x57b8>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f698 <__sprintf_chk@plt+0x5788>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f5d3 <__sprintf_chk@plt+0x56c3>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f6d8 <__sprintf_chk@plt+0x57c8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f60e <__sprintf_chk@plt+0x56fe>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f740 <__sprintf_chk@plt+0x5830>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%ebx),%eax
jmp    804f30e <__sprintf_chk@plt+0x53fe>
nop
mov    (%ebx),%edx
jmp    804f65a <__sprintf_chk@plt+0x574a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804f666 <__sprintf_chk@plt+0x5756>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804f652 <__sprintf_chk@plt+0x5742>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804f194 <__sprintf_chk@plt+0x5284>
nop
mov    (%ebx),%edx
jmp    804f306 <__sprintf_chk@plt+0x53f6>
nop
mov    (%ebx),%eax
jmp    804f4e0 <__sprintf_chk@plt+0x55d0>
nop
mov    (%ebx),%eax
jmp    804f250 <__sprintf_chk@plt+0x5340>
nop
mov    (%ebx),%edx
jmp    804f4d8 <__sprintf_chk@plt+0x55c8>
nop
mov    (%ebx),%eax
jmp    804f59c <__sprintf_chk@plt+0x568c>
nop
mov    (%ebx),%eax
jmp    804f3dc <__sprintf_chk@plt+0x54cc>
nop
mov    (%ebx),%edx
jmp    804f64a <__sprintf_chk@plt+0x573a>
nop
mov    (%ebx),%edx
jmp    804f18c <__sprintf_chk@plt+0x527c>
nop
mov    (%ebx),%eax
jmp    804f0de <__sprintf_chk@plt+0x51ce>
nop
mov    (%ebx),%eax
jmp    804f2fe <__sprintf_chk@plt+0x53ee>
nop
mov    (%ebx),%eax
jmp    804f05f <__sprintf_chk@plt+0x514f>
nop
mov    (%ebx),%eax
jmp    804f2cd <__sprintf_chk@plt+0x53bd>
nop
mov    (%ebx),%edx
jmp    804f3d4 <__sprintf_chk@plt+0x54c4>
nop
mov    (%ebx),%eax
jmp    804f459 <__sprintf_chk@plt+0x5549>
nop
mov    (%ebx),%eax
jmp    804f21f <__sprintf_chk@plt+0x530f>
nop
mov    (%ebx),%eax
jmp    804f4d0 <__sprintf_chk@plt+0x55c0>
nop
mov    (%ebx),%edx
jmp    804f0d6 <__sprintf_chk@plt+0x51c6>
nop
mov    (%ebx),%eax
jmp    804f15b <__sprintf_chk@plt+0x524b>
nop
mov    (%ebx),%eax
jmp    804f56b <__sprintf_chk@plt+0x565b>
nop
mov    (%ebx),%eax
jmp    804f642 <__sprintf_chk@plt+0x5732>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804fcd6 <__sprintf_chk@plt+0x5dc6>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f9d8 <__sprintf_chk@plt+0x5ac8>
mov    (%eax),%esi
test   %esi,%esi
je     804f8ae <__sprintf_chk@plt+0x599e>
mov    (%esi),%edi
test   %edi,%edi
je     804f7fa <__sprintf_chk@plt+0x58ea>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f7a5 <__sprintf_chk@plt+0x5895>
mov    0x0(%ebp),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f7f0 <__sprintf_chk@plt+0x58e0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f7dc <__sprintf_chk@plt+0x58cc>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f8a4 <__sprintf_chk@plt+0x5994>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f875 <__sprintf_chk@plt+0x5965>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f83b <__sprintf_chk@plt+0x592b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f86b <__sprintf_chk@plt+0x595b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f89a <__sprintf_chk@plt+0x598a>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804f9ce <__sprintf_chk@plt+0x5abe>
mov    (%esi),%edi
test   %edi,%edi
je     804f916 <__sprintf_chk@plt+0x5a06>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f8e7 <__sprintf_chk@plt+0x59d7>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f90c <__sprintf_chk@plt+0x59fc>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804f9c0 <__sprintf_chk@plt+0x5ab0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f991 <__sprintf_chk@plt+0x5a81>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804f957 <__sprintf_chk@plt+0x5a47>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804f987 <__sprintf_chk@plt+0x5a77>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f9b6 <__sprintf_chk@plt+0x5aa6>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804fcc8 <__sprintf_chk@plt+0x5db8>
mov    (%eax),%esi
test   %esi,%esi
je     804fb4e <__sprintf_chk@plt+0x5c3e>
mov    (%esi),%edi
test   %edi,%edi
je     804fa4e <__sprintf_chk@plt+0x5b3e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fa1f <__sprintf_chk@plt+0x5b0f>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fa44 <__sprintf_chk@plt+0x5b34>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804fb44 <__sprintf_chk@plt+0x5c34>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fac9 <__sprintf_chk@plt+0x5bb9>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fa8f <__sprintf_chk@plt+0x5b7f>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804fabf <__sprintf_chk@plt+0x5baf>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fb3a <__sprintf_chk@plt+0x5c2a>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fb00 <__sprintf_chk@plt+0x5bf0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804fb30 <__sprintf_chk@plt+0x5c20>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804fcbe <__sprintf_chk@plt+0x5dae>
mov    (%esi),%edi
test   %edi,%edi
je     804fc06 <__sprintf_chk@plt+0x5cf6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fbd7 <__sprintf_chk@plt+0x5cc7>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fb9d <__sprintf_chk@plt+0x5c8d>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804fbcd <__sprintf_chk@plt+0x5cbd>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fbfc <__sprintf_chk@plt+0x5cec>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804fcb0 <__sprintf_chk@plt+0x5da0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fc35 <__sprintf_chk@plt+0x5d25>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fca6 <__sprintf_chk@plt+0x5d96>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fc6c <__sprintf_chk@plt+0x5d5c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804fc9c <__sprintf_chk@plt+0x5d8c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,(%esp)
je     8050202 <__sprintf_chk@plt+0x62f2>
mov    (%eax),%eax
mov    %edx,%ebx
mov    %ecx,%esi
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804ff24 <__sprintf_chk@plt+0x6014>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804fe06 <__sprintf_chk@plt+0x5ef6>
mov    (%eax),%edi
test   %edi,%edi
je     804fd7e <__sprintf_chk@plt+0x5e6e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fd41 <__sprintf_chk@plt+0x5e31>
mov    0x0(%ebp),%eax
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fd41 <__sprintf_chk@plt+0x5e31>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fd6f <__sprintf_chk@plt+0x5e5f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fd6f <__sprintf_chk@plt+0x5e5f>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fd7e <__sprintf_chk@plt+0x5e6e>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804fdf3 <__sprintf_chk@plt+0x5ee3>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fdb6 <__sprintf_chk@plt+0x5ea6>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fdb6 <__sprintf_chk@plt+0x5ea6>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fde4 <__sprintf_chk@plt+0x5ed4>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fde4 <__sprintf_chk@plt+0x5ed4>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fdf3 <__sprintf_chk@plt+0x5ee3>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fe06 <__sprintf_chk@plt+0x5ef6>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804ff11 <__sprintf_chk@plt+0x6001>
mov    (%eax),%edi
test   %edi,%edi
je     804fe89 <__sprintf_chk@plt+0x5f79>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fe4c <__sprintf_chk@plt+0x5f3c>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fe4c <__sprintf_chk@plt+0x5f3c>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804fe7a <__sprintf_chk@plt+0x5f6a>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fe7a <__sprintf_chk@plt+0x5f6a>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fe89 <__sprintf_chk@plt+0x5f79>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804fefe <__sprintf_chk@plt+0x5fee>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fec1 <__sprintf_chk@plt+0x5fb1>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fec1 <__sprintf_chk@plt+0x5fb1>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804feef <__sprintf_chk@plt+0x5fdf>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804feef <__sprintf_chk@plt+0x5fdf>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fefe <__sprintf_chk@plt+0x5fee>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804ff11 <__sprintf_chk@plt+0x6001>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804ff24 <__sprintf_chk@plt+0x6014>
mov    %bl,(%eax)
mov    (%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     80501f0 <__sprintf_chk@plt+0x62e0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     80500d2 <__sprintf_chk@plt+0x61c2>
mov    (%eax),%edi
test   %edi,%edi
je     804ffb4 <__sprintf_chk@plt+0x60a4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ff77 <__sprintf_chk@plt+0x6067>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804ff77 <__sprintf_chk@plt+0x6067>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ffa5 <__sprintf_chk@plt+0x6095>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804ffa5 <__sprintf_chk@plt+0x6095>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804ffb4 <__sprintf_chk@plt+0x60a4>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     80500bf <__sprintf_chk@plt+0x61af>
mov    (%eax),%edi
test   %edi,%edi
je     8050037 <__sprintf_chk@plt+0x6127>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fffa <__sprintf_chk@plt+0x60ea>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804fffa <__sprintf_chk@plt+0x60ea>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050028 <__sprintf_chk@plt+0x6118>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050028 <__sprintf_chk@plt+0x6118>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050037 <__sprintf_chk@plt+0x6127>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     80500ac <__sprintf_chk@plt+0x619c>
mov    (%edi),%ebp
test   %ebp,%ebp
je     805006f <__sprintf_chk@plt+0x615f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    805006f <__sprintf_chk@plt+0x615f>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     805009d <__sprintf_chk@plt+0x618d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    805009d <__sprintf_chk@plt+0x618d>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80500ac <__sprintf_chk@plt+0x619c>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80500bf <__sprintf_chk@plt+0x61af>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80500d2 <__sprintf_chk@plt+0x61c2>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     80501dd <__sprintf_chk@plt+0x62cd>
mov    (%eax),%edi
test   %edi,%edi
je     8050155 <__sprintf_chk@plt+0x6245>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050118 <__sprintf_chk@plt+0x6208>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050118 <__sprintf_chk@plt+0x6208>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050146 <__sprintf_chk@plt+0x6236>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050146 <__sprintf_chk@plt+0x6236>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050155 <__sprintf_chk@plt+0x6245>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     80501ca <__sprintf_chk@plt+0x62ba>
mov    (%edi),%ebp
test   %ebp,%ebp
je     805018d <__sprintf_chk@plt+0x627d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    805018d <__sprintf_chk@plt+0x627d>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     80501bb <__sprintf_chk@plt+0x62ab>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804fce0 <__sprintf_chk@plt+0x5dd0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80501bb <__sprintf_chk@plt+0x62ab>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80501ca <__sprintf_chk@plt+0x62ba>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80501dd <__sprintf_chk@plt+0x62cd>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    80501f0 <__sprintf_chk@plt+0x62e0>
mov    %bl,(%eax)
mov    (%esp),%eax
movzbl 0xc(%eax),%eax
add    %eax,%esi
movzbl (%esi),%eax
cmp    %eax,%ebx
jae    8050202 <__sprintf_chk@plt+0x62f2>
mov    %bl,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
test   %edx,%edx
mov    %edx,0x4(%esp)
je     80507f0 <__sprintf_chk@plt+0x68e0>
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     80502fa <__sprintf_chk@plt+0x63ea>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8050440 <__sprintf_chk@plt+0x6530>
mov    (%eax),%edi
test   %edi,%edi
je     80504d8 <__sprintf_chk@plt+0x65c8>
mov    (%edi),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     8050560 <__sprintf_chk@plt+0x6650>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     80505e0 <__sprintf_chk@plt+0x66d0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80503d8 <__sprintf_chk@plt+0x64c8>
mov    (%eax),%esi
test   %esi,%esi
je     80506c0 <__sprintf_chk@plt+0x67b0>
mov    (%esi),%ebp
test   %ebp,%ebp
je     8050800 <__sprintf_chk@plt+0x68f0>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     8050b9e <__sprintf_chk@plt+0x6c8e>
mov    %ebx,%ecx
mov    %edi,0x1c(%esp)
mov    %ebx,%edi
mov    %eax,%ebx
jmp    80502d6 <__sprintf_chk@plt+0x63c6>
nop
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b98 <__sprintf_chk@plt+0x6c88>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80502c8 <__sprintf_chk@plt+0x63b8>
lea    0x0(%esi),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%ebx
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050398 <__sprintf_chk@plt+0x6488>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050660 <__sprintf_chk@plt+0x6750>
mov    (%eax),%edi
test   %edi,%edi
je     8050728 <__sprintf_chk@plt+0x6818>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050860 <__sprintf_chk@plt+0x6950>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     8050c0e <__sprintf_chk@plt+0x6cfe>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    805037e <__sprintf_chk@plt+0x646e>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050c08 <__sprintf_chk@plt+0x6cf8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8050370 <__sprintf_chk@plt+0x6460>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x4(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
jne    80503c6 <__sprintf_chk@plt+0x64b6>
jmp    80507f0 <__sprintf_chk@plt+0x68e0>
nop
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     80507f0 <__sprintf_chk@plt+0x68e0>
mov    %eax,%ebx
mov    0x4(%ebx),%eax
cmp    %cl,%dl
cmova  (%ebx),%eax
test   %eax,%eax
jne    80503b8 <__sprintf_chk@plt+0x64a8>
jmp    80502e8 <__sprintf_chk@plt+0x63d8>
nop
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x14(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     8050aba <__sprintf_chk@plt+0x6baa>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8050426 <__sprintf_chk@plt+0x6516>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050ab8 <__sprintf_chk@plt+0x6ba8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8050418 <__sprintf_chk@plt+0x6508>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050980 <__sprintf_chk@plt+0x6a70>
mov    (%esi),%edi
test   %edi,%edi
je     8050790 <__sprintf_chk@plt+0x6880>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80508c0 <__sprintf_chk@plt+0x69b0>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     8050bce <__sprintf_chk@plt+0x6cbe>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    80504be <__sprintf_chk@plt+0x65ae>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050bc8 <__sprintf_chk@plt+0x6cb8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80504b0 <__sprintf_chk@plt+0x65a0>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80509d0 <__sprintf_chk@plt+0x6ac0>
mov    (%esi),%edi
test   %edi,%edi
je     8050920 <__sprintf_chk@plt+0x6a10>
mov    (%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%edi),%edi
movzbl 0xc(%ebx),%ebp
mov    %edi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     8050bea <__sprintf_chk@plt+0x6cda>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8050546 <__sprintf_chk@plt+0x6636>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050be8 <__sprintf_chk@plt+0x6cd8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8050538 <__sprintf_chk@plt+0x6628>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%esi
test   %esi,%esi
je     8050a20 <__sprintf_chk@plt+0x6b10>
mov    (%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     8050a2c <__sprintf_chk@plt+0x6b1c>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80505c6 <__sprintf_chk@plt+0x66b6>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%bl
je     8050bb8 <__sprintf_chk@plt+0x6ca8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    80505b8 <__sprintf_chk@plt+0x66a8>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050a68 <__sprintf_chk@plt+0x6b58>
mov    (%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     8050a74 <__sprintf_chk@plt+0x6b64>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8050646 <__sprintf_chk@plt+0x6736>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050c28 <__sprintf_chk@plt+0x6d18>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8050638 <__sprintf_chk@plt+0x6728>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     80503a4 <__sprintf_chk@plt+0x6494>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80506a6 <__sprintf_chk@plt+0x6796>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050ad0 <__sprintf_chk@plt+0x6bc0>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8050698 <__sprintf_chk@plt+0x6788>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x18(%esp),%eax
mov    %ebp,%ecx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %cl,%al
je     8050ada <__sprintf_chk@plt+0x6bca>
mov    %ebx,%edx
mov    %esi,%ebx
mov    %edx,%esi
jmp    805070e <__sprintf_chk@plt+0x67fe>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8050ad8 <__sprintf_chk@plt+0x6bc8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050700 <__sprintf_chk@plt+0x67f0>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%edi
mov    %edi,%eax
cmp    %dl,%al
je     8050afa <__sprintf_chk@plt+0x6bea>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8050776 <__sprintf_chk@plt+0x6866>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050af8 <__sprintf_chk@plt+0x6be8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8050768 <__sprintf_chk@plt+0x6858>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     805098c <__sprintf_chk@plt+0x6a7c>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80507d6 <__sprintf_chk@plt+0x68c6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b18 <__sprintf_chk@plt+0x6c08>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80507c8 <__sprintf_chk@plt+0x68b8>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     8050b2a <__sprintf_chk@plt+0x6c1a>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8050846 <__sprintf_chk@plt+0x6936>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b28 <__sprintf_chk@plt+0x6c18>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8050838 <__sprintf_chk@plt+0x6928>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     8050b4a <__sprintf_chk@plt+0x6c3a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    80508a6 <__sprintf_chk@plt+0x6996>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b48 <__sprintf_chk@plt+0x6c38>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8050898 <__sprintf_chk@plt+0x6988>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     8050b7a <__sprintf_chk@plt+0x6c6a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8050906 <__sprintf_chk@plt+0x69f6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b78 <__sprintf_chk@plt+0x6c68>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80508f8 <__sprintf_chk@plt+0x69e8>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     80502f0 <__sprintf_chk@plt+0x63e0>
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     80509dc <__sprintf_chk@plt+0x6acc>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8050966 <__sprintf_chk@plt+0x6a56>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050b68 <__sprintf_chk@plt+0x6c58>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8050958 <__sprintf_chk@plt+0x6a48>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     80502fa <__sprintf_chk@plt+0x63ea>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80509b6 <__sprintf_chk@plt+0x6aa6>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80502f8 <__sprintf_chk@plt+0x63e8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80509a8 <__sprintf_chk@plt+0x6a98>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0xc(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     8050440 <__sprintf_chk@plt+0x6530>
mov    %ebx,%esi
jmp    8050a06 <__sprintf_chk@plt+0x6af6>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     8050440 <__sprintf_chk@plt+0x6530>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %cl,%dl
cmova  (%esi),%eax
test   %eax,%eax
jne    80509f8 <__sprintf_chk@plt+0x6ae8>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%ecx
mov    %ebp,%edx
cmp    %dl,%cl
je     80504d8 <__sprintf_chk@plt+0x65c8>
mov    %ebx,%esi
jmp    8050a4e <__sprintf_chk@plt+0x6b3e>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     80504d8 <__sprintf_chk@plt+0x65c8>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    8050a40 <__sprintf_chk@plt+0x6b30>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80502e8 <__sprintf_chk@plt+0x63d8>
movzbl 0xc(%ebx),%ebp
mov    0x10(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     8050560 <__sprintf_chk@plt+0x6650>
mov    %ebx,%esi
jmp    8050a9e <__sprintf_chk@plt+0x6b8e>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     8050560 <__sprintf_chk@plt+0x6650>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    8050a90 <__sprintf_chk@plt+0x6b80>
xor    %eax,%eax
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
jne    80505ef <__sprintf_chk@plt+0x66df>
jmp    8050a74 <__sprintf_chk@plt+0x6b64>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    80503a4 <__sprintf_chk@plt+0x6494>
nop
mov    %esi,%ebx
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    80503fa <__sprintf_chk@plt+0x64ea>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    805067e <__sprintf_chk@plt+0x676e>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    805098c <__sprintf_chk@plt+0x6a7c>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    80506e2 <__sprintf_chk@plt+0x67d2>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    805074a <__sprintf_chk@plt+0x683a>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    80509dc <__sprintf_chk@plt+0x6acc>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    80507ae <__sprintf_chk@plt+0x689e>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0x1c(%esp),%edi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    805081e <__sprintf_chk@plt+0x690e>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    8050a2c <__sprintf_chk@plt+0x6b1c>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    80508de <__sprintf_chk@plt+0x69ce>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    805093e <__sprintf_chk@plt+0x6a2e>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
jne    805087e <__sprintf_chk@plt+0x696e>
jmp    80502f0 <__sprintf_chk@plt+0x63e0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    8050a74 <__sprintf_chk@plt+0x6b64>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x18(%esp)
je     8051151 <__sprintf_chk@plt+0x7241>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8050ea0 <__sprintf_chk@plt+0x6f90>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050d6d <__sprintf_chk@plt+0x6e5d>
mov    (%eax),%esi
test   %esi,%esi
je     8050ce0 <__sprintf_chk@plt+0x6dd0>
mov    (%esi),%eax
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050cd1 <__sprintf_chk@plt+0x6dc1>
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050cca <__sprintf_chk@plt+0x6dba>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050cbe <__sprintf_chk@plt+0x6dae>
jmp    805135e <__sprintf_chk@plt+0x744e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051360 <__sprintf_chk@plt+0x7450>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050cb0 <__sprintf_chk@plt+0x6da0>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050c98 <__sprintf_chk@plt+0x6d88>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050d53 <__sprintf_chk@plt+0x6e43>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050d49 <__sprintf_chk@plt+0x6e39>
xchg   %ax,%ax
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050d42 <__sprintf_chk@plt+0x6e32>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%ecx),%edx
cmp    %dl,%bl
jne    8050d36 <__sprintf_chk@plt+0x6e26>
jmp    80511b6 <__sprintf_chk@plt+0x72a6>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80511b8 <__sprintf_chk@plt+0x72a8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8050d28 <__sprintf_chk@plt+0x6e18>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050d10 <__sprintf_chk@plt+0x6e00>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebp
test   %ebp,%ebp
jne    80511c1 <__sprintf_chk@plt+0x72b1>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050e85 <__sprintf_chk@plt+0x6f75>
mov    (%eax),%esi
test   %esi,%esi
je     8050df8 <__sprintf_chk@plt+0x6ee8>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050de9 <__sprintf_chk@plt+0x6ed9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050de2 <__sprintf_chk@plt+0x6ed2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050dd6 <__sprintf_chk@plt+0x6ec6>
jmp    805136e <__sprintf_chk@plt+0x745e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051370 <__sprintf_chk@plt+0x7460>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050dc8 <__sprintf_chk@plt+0x6eb8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050db0 <__sprintf_chk@plt+0x6ea0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050e6b <__sprintf_chk@plt+0x6f5b>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050e61 <__sprintf_chk@plt+0x6f51>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050e5a <__sprintf_chk@plt+0x6f4a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050e4e <__sprintf_chk@plt+0x6f3e>
jmp    8051159 <__sprintf_chk@plt+0x7249>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051160 <__sprintf_chk@plt+0x7250>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050e40 <__sprintf_chk@plt+0x6f30>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050e28 <__sprintf_chk@plt+0x6f18>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edi
test   %edi,%edi
jne    8051169 <__sprintf_chk@plt+0x7259>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%esi
test   %esi,%esi
jne    80512b5 <__sprintf_chk@plt+0x73a5>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
nop
mov    0x10(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8051137 <__sprintf_chk@plt+0x7227>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050fc5 <__sprintf_chk@plt+0x70b5>
mov    (%eax),%esi
test   %esi,%esi
je     8050f38 <__sprintf_chk@plt+0x7028>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050f29 <__sprintf_chk@plt+0x7019>
lea    0x0(%esi),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050f22 <__sprintf_chk@plt+0x7012>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050f16 <__sprintf_chk@plt+0x7006>
jmp    805134d <__sprintf_chk@plt+0x743d>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051350 <__sprintf_chk@plt+0x7440>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050f08 <__sprintf_chk@plt+0x6ff8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050ef0 <__sprintf_chk@plt+0x6fe0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050fab <__sprintf_chk@plt+0x709b>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8050fa1 <__sprintf_chk@plt+0x7091>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050f9a <__sprintf_chk@plt+0x708a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050f8e <__sprintf_chk@plt+0x707e>
jmp    805121c <__sprintf_chk@plt+0x730c>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051220 <__sprintf_chk@plt+0x7310>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050f80 <__sprintf_chk@plt+0x7070>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050f68 <__sprintf_chk@plt+0x7058>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebx
test   %ebx,%ebx
jne    8051229 <__sprintf_chk@plt+0x7319>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805111d <__sprintf_chk@plt+0x720d>
mov    (%eax),%esi
test   %esi,%esi
je     8051091 <__sprintf_chk@plt+0x7181>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x1c(%esp)
je     805105f <__sprintf_chk@plt+0x714f>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%ebx
mov    (%eax),%eax
mov    %ebp,%edx
mov    %ebx,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%edi),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     8051051 <__sprintf_chk@plt+0x7141>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     805104a <__sprintf_chk@plt+0x713a>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805103e <__sprintf_chk@plt+0x712e>
jmp    805137e <__sprintf_chk@plt+0x746e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051380 <__sprintf_chk@plt+0x7470>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051030 <__sprintf_chk@plt+0x7120>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051018 <__sprintf_chk@plt+0x7108>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edi
mov    0x8(%eax),%eax
mov    %edi,0x10(%eax)
mov    0x8(%esp),%edi
mov    0x4(%esi),%eax
mov    0x18(%esp),%ecx
mov    %edi,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %edi,%edi
jne    805139d <__sprintf_chk@plt+0x748d>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8051091 <__sprintf_chk@plt+0x7181>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051103 <__sprintf_chk@plt+0x71f3>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %ebp,%ebp
je     80510f9 <__sprintf_chk@plt+0x71e9>
nop
mov    0x4(%ebp),%edx
test   %edx,%edx
je     80510f2 <__sprintf_chk@plt+0x71e2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80510e6 <__sprintf_chk@plt+0x71d6>
jmp    80513f0 <__sprintf_chk@plt+0x74e0>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80513f8 <__sprintf_chk@plt+0x74e8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80510d8 <__sprintf_chk@plt+0x71c8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    80510c0 <__sprintf_chk@plt+0x71b0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ecx
test   %ecx,%ecx
jne    8051401 <__sprintf_chk@plt+0x74f1>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edx
test   %edx,%edx
jne    8051455 <__sprintf_chk@plt+0x7545>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%eax
test   %eax,%eax
jne    80514ad <__sprintf_chk@plt+0x759d>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80511aa <__sprintf_chk@plt+0x729a>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    805119e <__sprintf_chk@plt+0x728e>
jmp    80512a5 <__sprintf_chk@plt+0x7395>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80512a8 <__sprintf_chk@plt+0x7398>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051190 <__sprintf_chk@plt+0x7280>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    805116d <__sprintf_chk@plt+0x725d>
jmp    8050e77 <__sprintf_chk@plt+0x6f67>
mov    %ecx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8051202 <__sprintf_chk@plt+0x72f2>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    80511f6 <__sprintf_chk@plt+0x72e6>
jmp    8051322 <__sprintf_chk@plt+0x7412>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051328 <__sprintf_chk@plt+0x7418>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    80511e8 <__sprintf_chk@plt+0x72d8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80511c5 <__sprintf_chk@plt+0x72b5>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8050d6d <__sprintf_chk@plt+0x6e5d>
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805125e <__sprintf_chk@plt+0x734e>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8051252 <__sprintf_chk@plt+0x7342>
jmp    8051278 <__sprintf_chk@plt+0x7368>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051280 <__sprintf_chk@plt+0x7370>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051248 <__sprintf_chk@plt+0x7338>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    805122d <__sprintf_chk@plt+0x731d>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8050fc5 <__sprintf_chk@plt+0x70b5>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x14(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8050fd8 <__sprintf_chk@plt+0x70c8>
jmp    805111d <__sprintf_chk@plt+0x720d>
mov    %edx,%eax
nop
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80512ee <__sprintf_chk@plt+0x73de>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    80512e2 <__sprintf_chk@plt+0x73d2>
jmp    8051308 <__sprintf_chk@plt+0x73f8>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051310 <__sprintf_chk@plt+0x7400>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80512d8 <__sprintf_chk@plt+0x73c8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80512b9 <__sprintf_chk@plt+0x73a9>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8050ea0 <__sprintf_chk@plt+0x6f90>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
jmp    8050ea0 <__sprintf_chk@plt+0x6f90>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8050d80 <__sprintf_chk@plt+0x6e70>
jmp    8050e85 <__sprintf_chk@plt+0x6f75>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8050f38 <__sprintf_chk@plt+0x7028>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8050ce0 <__sprintf_chk@plt+0x6dd0>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8050df8 <__sprintf_chk@plt+0x6ee8>
mov    %edx,%eax
mov    0x1c(%esp),%edi
mov    0x8(%eax),%eax
mov    0x18(%esp),%ecx
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x4(%esi),%eax
mov    0x8(%esp),%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x8(%esp),%ebp
mov    0x4(%ebp),%edx
test   %edx,%edx
je     80513da <__sprintf_chk@plt+0x74ca>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80513ce <__sprintf_chk@plt+0x74be>
jmp    8051085 <__sprintf_chk@plt+0x7175>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051088 <__sprintf_chk@plt+0x7178>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80513c0 <__sprintf_chk@plt+0x74b0>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    80513a1 <__sprintf_chk@plt+0x7491>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8051091 <__sprintf_chk@plt+0x7181>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8051436 <__sprintf_chk@plt+0x7526>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    805142a <__sprintf_chk@plt+0x751a>
jmp    8051442 <__sprintf_chk@plt+0x7532>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051448 <__sprintf_chk@plt+0x7538>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051420 <__sprintf_chk@plt+0x7510>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051405 <__sprintf_chk@plt+0x74f5>
jmp    805110f <__sprintf_chk@plt+0x71ff>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805148e <__sprintf_chk@plt+0x757e>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8051482 <__sprintf_chk@plt+0x7572>
jmp    805149a <__sprintf_chk@plt+0x758a>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80514a0 <__sprintf_chk@plt+0x7590>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051478 <__sprintf_chk@plt+0x7568>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051459 <__sprintf_chk@plt+0x7549>
jmp    8051129 <__sprintf_chk@plt+0x7219>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0x10(%esp),%edi
mov    0x8(%esp),%esi
mov    0x4(%esi),%edx
test   %edx,%edx
je     80514e6 <__sprintf_chk@plt+0x75d6>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80514da <__sprintf_chk@plt+0x75ca>
jmp    8051500 <__sprintf_chk@plt+0x75f0>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051508 <__sprintf_chk@plt+0x75f8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    80514d0 <__sprintf_chk@plt+0x75c0>
mov    0x10(%esi),%esi
test   %esi,%esi
jne    80514b5 <__sprintf_chk@plt+0x75a5>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8051151 <__sprintf_chk@plt+0x7241>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x548,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
test   %eax,%eax
mov    %eax,%ebx
je     8051650 <__sprintf_chk@plt+0x7740>
movl   $0x8049800,0x10(%esp)
movl   $0x8064290,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049910 <_obstack_begin@plt>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
movl   $0x0,0x2c(%ebx)
mov    %ecx,%eax
sub    %edx,%eax
cmp    $0x1f,%eax
jle    8051620 <__sprintf_chk@plt+0x7710>
mov    0x8(%ebx),%eax
add    $0x20,%edx
mov    %edx,0xc(%ebx)
cmp    %eax,%edx
je     8051647 <__sprintf_chk@plt+0x7737>
mov    0x18(%ebx),%esi
mov    %ecx,%ebp
add    %esi,%edx
not    %esi
and    %esi,%edx
mov    0x4(%ebx),%esi
mov    %edx,%edi
mov    %edx,0xc(%ebx)
sub    %esi,%edi
sub    %esi,%ebp
cmp    %ebp,%edi
jg     8051618 <__sprintf_chk@plt+0x7708>
test   %eax,%eax
mov    %edx,0x8(%ebx)
mov    %eax,0x30(%ebx)
je     8051654 <__sprintf_chk@plt+0x7744>
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    0x40(%esp),%eax
movl   $0x7fffffff,0x34(%ebx)
movl   $0xffffffff,0x38(%ebx)
movl   $0x0,0x53c(%ebx)
00
mov    %eax,0x544(%ebx)
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0xc(%ebx)
mov    %ecx,%edx
jmp    80515ab <__sprintf_chk@plt+0x769b>
nop
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   80498b0 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ecx
add    $0x20,%edx
cmp    %eax,%edx
mov    %edx,0xc(%ebx)
jne    8051590 <__sprintf_chk@plt+0x7680>
orb    $0x2,0x28(%ebx)
jmp    8051590 <__sprintf_chk@plt+0x7680>
xor    %eax,%eax
jmp    805160d <__sprintf_chk@plt+0x76fd>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049970 <obstack_free@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
xor    %eax,%eax
jmp    805160d <__sprintf_chk@plt+0x76fd>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb8(%esp),%eax
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%edi
add    %eax,%edx
test   %eax,%eax
mov    0x30(%edi),%esi
je     8051bf2 <__sprintf_chk@plt+0x7ce2>
lea    -0x1(%edx),%ebp
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,%ebp
sub    %edx,0x14(%esp)
jmp    805188d <__sprintf_chk@plt+0x797d>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edi
movzbl (%edi),%edx
movzbl (%eax,%edx,1),%eax
mov    0x4(%esi),%ebx
lea    0x4(%esi),%edx
mov    %edx,0x30(%esp)
movl   $0x0,0x60(%esp)
test   %ebx,%ebx
je     80518b0 <__sprintf_chk@plt+0x79a0>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x34(%esp)
test   %edx,%edx
mov    %ecx,0x64(%esp)
je     8051b58 <__sprintf_chk@plt+0x7c48>
cmp    0xc(%edx),%al
je     80518a8 <__sprintf_chk@plt+0x7998>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x38(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x68(%esp)
je     8051b78 <__sprintf_chk@plt+0x7c68>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x3c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x6c(%esp)
je     8051b68 <__sprintf_chk@plt+0x7c58>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x40(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x70(%esp)
je     8051bb8 <__sprintf_chk@plt+0x7ca8>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x44(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x74(%esp)
je     8051ba8 <__sprintf_chk@plt+0x7c98>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x48(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x78(%esp)
je     8051b98 <__sprintf_chk@plt+0x7c88>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x4c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x7c(%esp)
je     8051b88 <__sprintf_chk@plt+0x7c78>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x50(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x80(%esp)
je     8051b48 <__sprintf_chk@plt+0x7c38>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x54(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x84(%esp)
je     8051b38 <__sprintf_chk@plt+0x7c28>
cmp    0xc(%ebx),%al
je     8051877 <__sprintf_chk@plt+0x7967>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x58(%esp)
test   %edx,%edx
mov    %ecx,0x88(%esp)
je     8051b28 <__sprintf_chk@plt+0x7c18>
cmp    0xc(%edx),%al
je     80518a8 <__sprintf_chk@plt+0x7998>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x5c(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x8c(%esp)
je     8051b18 <__sprintf_chk@plt+0x7c08>
subl   $0x1,0xc(%esp)
mov    0x14(%esp),%eax
add    0xc(%esp),%eax
mov    0x8(%ebx),%esi
je     8051bf0 <__sprintf_chk@plt+0x7ce0>
mov    0x544(%ebp),%eax
test   %eax,%eax
jne    80516b8 <__sprintf_chk@plt+0x77a8>
mov    0xc(%esp),%eax
movzbl (%eax),%eax
jmp    80516c3 <__sprintf_chk@plt+0x77b3>
nop
mov    %edx,%ebx
jmp    8051877 <__sprintf_chk@plt+0x7967>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x18(%esp)
mov    0x10(%ebp),%ecx
mov    0xc(%ebp),%edx
mov    %ecx,0x10(%esp)
sub    %edx,%ecx
cmp    $0xf,%ecx
jle    8051ad8 <__sprintf_chk@plt+0x7bc8>
mov    0x8(%ebp),%ebx
add    $0x10,%edx
mov    %edx,0xc(%ebp)
cmp    %ebx,%edx
je     8051b0b <__sprintf_chk@plt+0x7bfb>
mov    0x18(%ebp),%ecx
mov    %ecx,%edi
add    %edi,%edx
mov    %ecx,0x20(%esp)
not    %ecx
and    %ecx,%edx
mov    %ecx,0x24(%esp)
mov    0x4(%ebp),%ecx
mov    %edx,%edi
mov    %edx,0xc(%ebp)
sub    %ecx,%edi
mov    %edi,0x28(%esp)
mov    0x10(%esp),%edi
mov    %ecx,0x1c(%esp)
sub    %ecx,%edi
cmp    %edi,0x28(%esp)
jle    8051918 <__sprintf_chk@plt+0x7a08>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%edx
test   %ebx,%ebx
mov    %edx,0x8(%ebp)
je     8051ceb <__sprintf_chk@plt+0x7ddb>
mov    0x10(%esp),%edi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
sub    %edx,%edi
cmp    $0x1f,%edi
jle    8051a88 <__sprintf_chk@plt+0x7b78>
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
je     8051acf <__sprintf_chk@plt+0x7bbf>
mov    %edx,0x2c(%esp)
mov    0x1c(%esp),%edi
add    0x20(%esp),%ecx
mov    0x10(%esp),%edx
and    0x24(%esp),%ecx
mov    %al,0x28(%esp)
mov    %ecx,%eax
sub    %edi,%edx
sub    %edi,%eax
cmp    %edx,%eax
movzbl 0x28(%esp),%eax
mov    %ecx,0xc(%ebp)
mov    0x2c(%esp),%edx
jle    805198a <__sprintf_chk@plt+0x7a7a>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%ecx
test   %edx,%edx
mov    %ecx,0x8(%ebp)
mov    %edx,0x8(%ebx)
je     8051cd7 <__sprintf_chk@plt+0x7dc7>
mov    0x14(%esi),%ecx
mov    %esi,0x8(%edx)
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
add    $0x1,%ecx
movl   $0x0,0xc(%edx)
movl   $0x0,0x10(%edx)
mov    %ecx,0x14(%edx)
movl   $0x0,0x18(%edx)
mov    %al,0xc(%ebx)
mov    0x18(%esp),%eax
movb   $0x0,0xd(%ebx)
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%esi
mov    0x30(%esp,%eax,4),%edx
test   %esi,%esi
jne    8051a20 <__sprintf_chk@plt+0x7b10>
mov    %ebx,(%edx)
test   %eax,%eax
je     8051877 <__sprintf_chk@plt+0x7967>
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8051a30 <__sprintf_chk@plt+0x7b20>
mov    0xc(%esp),%edi
jmp    8051a04 <__sprintf_chk@plt+0x7af4>
mov    0x30(%esp,%eax,4),%edx
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8051a28 <__sprintf_chk@plt+0x7b18>
cmpl   $0x1,0x60(%esp,%eax,4)
sbb    %ecx,%ecx
or     $0x1,%ecx
sub    $0x1,%eax
mov    %cl,0xd(%edx)
jne    80519f8 <__sprintf_chk@plt+0x7ae8>
mov    %edi,0xc(%esp)
jmp    8051877 <__sprintf_chk@plt+0x7967>
nop
mov    %ebx,0x4(%edx)
jmp    80519e2 <__sprintf_chk@plt+0x7ad2>
lea    0x0(%esi),%esi
mov    0x60(%esp,%eax,4),%esi
mov    %edi,0xc(%esp)
test   %esi,%esi
jne    8051bc8 <__sprintf_chk@plt+0x7cb8>
sub    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     8051877 <__sprintf_chk@plt+0x7967>
cmp    $0xfe,%cl
je     8051c27 <__sprintf_chk@plt+0x7d17>
cmp    $0x2,%cl
jne    8051c88 <__sprintf_chk@plt+0x7d78>
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8051ca1 <__sprintf_chk@plt+0x7d91>
cmp    $0x1,%ecx
jne    8051c88 <__sprintf_chk@plt+0x7d78>
mov    0x4(%edx),%ecx
mov    (%ecx),%esi
mov    %edx,(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,0x4(%edx)
movb   $0x0,0xd(%ecx)
jmp    8051c68 <__sprintf_chk@plt+0x7d58>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   80498b0 <_obstack_newchunk@plt>
mov    0x18(%ebp),%eax
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
mov    %eax,0x20(%esp)
not    %eax
mov    %eax,0x24(%esp)
mov    0x10(%ebp),%eax
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
mov    %eax,0x10(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
jne    8051953 <__sprintf_chk@plt+0x7a43>
orb    $0x2,0x28(%ebp)
jmp    8051953 <__sprintf_chk@plt+0x7a43>
movl   $0x10,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   80498b0 <_obstack_newchunk@plt>
mov    0xc(%ebp),%edx
mov    0x8(%ebp),%ebx
mov    0x10(%ebp),%eax
add    $0x10,%edx
cmp    %ebx,%edx
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %edx,0xc(%ebp)
jne    80518de <__sprintf_chk@plt+0x79ce>
orb    $0x2,0x28(%ebp)
jmp    80518de <__sprintf_chk@plt+0x79ce>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0xb,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0xa,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x9,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x2,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x4,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x3,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x8,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x7,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x6,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
movl   $0x5,0x18(%esp)
jmp    80518b8 <__sprintf_chk@plt+0x79a8>
lea    0x0(%esi),%esi
cmp    $0x1,%esi
jne    8051877 <__sprintf_chk@plt+0x7967>
add    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     8051877 <__sprintf_chk@plt+0x7967>
cmp    $0xfe,%cl
jne    8051a4f <__sprintf_chk@plt+0x7b3f>
jmp    8051c27 <__sprintf_chk@plt+0x7d17>
lea    0x0(%esi),%esi
mov    %ebp,%edi
mov    (%esi),%eax
test   %eax,%eax
mov    0x2c(%edi),%eax
jne    8051c01 <__sprintf_chk@plt+0x7cf1>
lea    0x1(%eax,%eax,1),%edx
mov    %edx,(%esi)
add    $0x1,%eax
mov    %eax,0x2c(%edi)
mov    0x14(%esi),%eax
cmp    0x34(%edi),%eax
jge    8051c12 <__sprintf_chk@plt+0x7d02>
mov    %eax,0x34(%edi)
cmp    0x38(%edi),%eax
jle    8051c1a <__sprintf_chk@plt+0x7d0a>
mov    %eax,0x38(%edi)
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8051c8d <__sprintf_chk@plt+0x7d7d>
cmp    $0x1,%ecx
jne    8051c88 <__sprintf_chk@plt+0x7d78>
mov    (%edx),%edi
mov    %eax,0x10(%esp)
mov    0x4(%edi),%ecx
mov    0x4(%ecx),%eax
mov    (%ecx),%esi
cmpb   $0x1,0xd(%ecx)
mov    %edi,(%ecx)
mov    %esi,0x4(%edi)
mov    %edx,0x4(%ecx)
mov    %eax,(%edx)
sete   %al
neg    %eax
mov    %al,0xd(%edi)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edx)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%edx
mov    0x30(%esp,%eax,4),%eax
test   %edx,%edx
jne    8051d1b <__sprintf_chk@plt+0x7e0b>
mov    %ecx,(%eax)
jmp    8051877 <__sprintf_chk@plt+0x7967>
lea    0x0(%esi),%esi
call   8049e60 <abort@plt>
mov    (%edx),%ecx
mov    0x4(%ecx),%esi
mov    %edx,0x4(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,(%edx)
movb   $0x0,0xd(%ecx)
jmp    8051c68 <__sprintf_chk@plt+0x7d58>
mov    0x4(%edx),%edi
mov    %eax,0x10(%esp)
mov    (%edi),%ecx
mov    (%ecx),%eax
cmpb   $0x1,0xd(%ecx)
mov    0x4(%ecx),%esi
mov    %edx,(%ecx)
mov    %eax,0x4(%edx)
sete   %al
neg    %eax
mov    %edi,0x4(%ecx)
mov    %esi,(%edi)
mov    %al,0xd(%edx)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edi)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
jmp    8051c68 <__sprintf_chk@plt+0x7d58>
cmp    %ebx,0x1c(%esp)
mov    %ebp,%edi
jae    8051d23 <__sprintf_chk@plt+0x7e13>
cmp    %ebx,0x10(%esp)
jbe    8051d23 <__sprintf_chk@plt+0x7e13>
mov    %ebx,0x8(%ebp)
mov    %ebx,0xc(%ebp)
movl   $0x5,0xb8(%esp)
00
movl   $0x806ceb0,0xb4(%esp)
08
movl   $0x0,0xb0(%esp)
00
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80498c0 <dcgettext@plt>
mov    %ecx,0x4(%eax)
jmp    8051877 <__sprintf_chk@plt+0x7967>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049970 <obstack_free@plt>
jmp    8051ceb <__sprintf_chk@plt+0x7ddb>
jmp    8051d40 <__sprintf_chk@plt+0x7e30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    $0x40,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x53c,%esp
mov    0x550(%esp),%eax
lea    0x42c(%esp),%edi
mov    %gs:0x14,%esi
mov    %esi,0x52c(%esp)
xor    %esi,%esi
mov    0x34(%eax),%ebx
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    $0xff,%eax
cmp    $0xff,%ebx
cmovle %ebx,%eax
movzbl %al,%eax
imul   $0x1010101,%eax,%eax
cmpl   $0x1,0x2c(%esi)
rep stos %eax,%es:(%edi)
je     8051fe1 <__sprintf_chk@plt+0x80d1>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%esi
test   %esi,%esi
mov    %esi,0x28(%esp)
je     8052149 <__sprintf_chk@plt+0x8239>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    0x28(%esp),%edx
call   804efc0 <__sprintf_chk@plt+0x50b0>
mov    0x1c(%esp),%edi
lea    0x42c(%esp),%ecx
mov    0x14(%esi),%edx
mov    0x34(%edi),%eax
mov    %eax,0x18(%esi)
mov    %eax,0x1c(%esi)
mov    0x4(%esi),%eax
call   804fce0 <__sprintf_chk@plt+0x5dd0>
mov    0x30(%edi),%eax
mov    0x4(%esi),%ebp
mov    %eax,%ebx
mov    %eax,0x18(%esp)
mov    0x10(%esi),%eax
test   %ebp,%ebp
mov    %eax,%edi
je     8051e58 <__sprintf_chk@plt+0x7f48>
mov    %eax,%edx
mov    0x0(%ebp),%eax
mov    %ebx,%ecx
call   8050c40 <__sprintf_chk@plt+0x6d30>
mov    0x4(%ebp),%eax
mov    %ebx,%ecx
mov    %edi,%edx
call   8050c40 <__sprintf_chk@plt+0x6d30>
test   %edi,%edi
je     8051e49 <__sprintf_chk@plt+0x7f39>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8051e42 <__sprintf_chk@plt+0x7f32>
movzbl 0xc(%ebp),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051e36 <__sprintf_chk@plt+0x7f26>
jmp    8051fcc <__sprintf_chk@plt+0x80bc>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051fd0 <__sprintf_chk@plt+0x80c0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051e28 <__sprintf_chk@plt+0x7f18>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051e10 <__sprintf_chk@plt+0x7f00>
mov    0x18(%esp),%edi
mov    0x8(%ebp),%eax
mov    %edi,0x10(%eax)
mov    0x10(%esi),%edi
xchg   %ax,%ax
test   %edi,%edi
je     8051ee9 <__sprintf_chk@plt+0x7fd9>
mov    (%esi),%eax
mov    0x4(%esi),%ebp
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    0x4(%edi),%ebx
je     8051ecc <__sprintf_chk@plt+0x7fbc>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     8051ebe <__sprintf_chk@plt+0x7fae>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8050210 <__sprintf_chk@plt+0x6300>
test   %eax,%eax
je     8051ebe <__sprintf_chk@plt+0x7fae>
test   %ebx,%ebx
je     8051ebe <__sprintf_chk@plt+0x7fae>
movzbl 0xc(%ebp),%ecx
movzbl 0xc(%ebx),%eax
cmp    %al,%cl
jne    8051eb2 <__sprintf_chk@plt+0x7fa2>
jmp    8051ecc <__sprintf_chk@plt+0x7fbc>
lea    0x0(%esi),%esi
movzbl 0xc(%edx),%eax
cmp    %cl,%al
je     8051ecc <__sprintf_chk@plt+0x7fbc>
mov    %edx,%ebx
mov    0x4(%ebx),%edx
cmp    %al,%cl
cmovb  (%ebx),%edx
test   %edx,%edx
jne    8051ea8 <__sprintf_chk@plt+0x7f98>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    0x18(%edi),%eax
jge    8051ecc <__sprintf_chk@plt+0x7fbc>
mov    %eax,0x18(%edi)
mov    0x18(%esp),%eax
test   %eax,%eax
je     8051ee2 <__sprintf_chk@plt+0x7fd2>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    %eax,0x1c(%edi)
jle    8051ee2 <__sprintf_chk@plt+0x7fd2>
mov    %eax,0x1c(%edi)
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051e70 <__sprintf_chk@plt+0x7f60>
mov    0xc(%esi),%esi
test   %esi,%esi
jne    8051db0 <__sprintf_chk@plt+0x7ea0>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%edx
mov    0xc(%edx),%eax
test   %eax,%eax
je     8051f29 <__sprintf_chk@plt+0x8019>
lea    0x0(%esi),%esi
mov    0x8(%eax),%ebx
mov    0x1c(%eax),%ecx
mov    0x1c(%ebx),%ebx
cmp    %ebx,%ecx
jle    8051f1a <__sprintf_chk@plt+0x800a>
mov    %ebx,0x1c(%eax)
mov    %ebx,%ecx
cmp    %ecx,0x18(%eax)
jle    8051f22 <__sprintf_chk@plt+0x8012>
mov    %ecx,0x18(%eax)
mov    0xc(%eax),%eax
test   %eax,%eax
jne    8051f08 <__sprintf_chk@plt+0x7ff8>
lea    0x2c(%esp),%esi
xor    %eax,%eax
mov    $0x100,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    0x4(%edx),%eax
mov    %esi,%edx
call   804f750 <__sprintf_chk@plt+0x5840>
mov    0x1c(%esp),%eax
mov    0x1c(%esp),%ebx
mov    0x544(%eax),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     80520f8 <__sprintf_chk@plt+0x81e8>
lea    0x0(%esi),%esi
movzbl (%ecx,%eax,1),%edx
mov    0x2c(%esp,%edx,4),%edx
mov    %edx,0x13c(%ebx,%eax,4)
add    $0x1,%eax
cmp    $0x100,%eax
jne    8051f60 <__sprintf_chk@plt+0x8050>
mov    %ecx,%eax
test   %eax,%eax
je     80521a6 <__sprintf_chk@plt+0x8296>
mov    0x1c(%esp),%ebx
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax,%edx,1),%ecx
movzbl 0x42c(%esp,%ecx,1),%ecx
mov    %cl,0x3c(%ebx,%edx,1)
add    $0x1,%edx
cmp    $0x100,%edx
jne    8051f90 <__sprintf_chk@plt+0x8080>
xor    %eax,%eax
mov    0x52c(%esp),%esi
xor    %gs:0x14,%esi
jne    8052150 <__sprintf_chk@plt+0x8240>
add    $0x53c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%ebp),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x10(%esi),%edi
jmp    8051e58 <__sprintf_chk@plt+0x7f48>
mov    0x544(%esi),%edx
test   %edx,%edx
jne    8051d99 <__sprintf_chk@plt+0x7e89>
mov    0x10(%esi),%ecx
mov    0xc(%esi),%eax
mov    %ecx,%edx
sub    %eax,%edx
cmp    %edx,%ebx
jle    805200f <__sprintf_chk@plt+0x80ff>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80498b0 <_obstack_newchunk@plt>
mov    0xc(%esi),%eax
mov    0x10(%esi),%ecx
mov    0x1c(%esp),%esi
add    %ebx,%eax
mov    0x8(%esi),%edx
mov    %eax,0xc(%esi)
cmp    %edx,%eax
jne    8052027 <__sprintf_chk@plt+0x8117>
orb    $0x2,0x28(%esi)
mov    0x1c(%esp),%esi
mov    0x18(%esi),%ebx
mov    %ecx,%edi
add    %ebx,%eax
not    %ebx
and    %ebx,%eax
mov    0x4(%esi),%ebx
mov    %eax,0xc(%esi)
mov    %eax,%esi
sub    %ebx,%esi
sub    %ebx,%edi
cmp    %edi,%esi
jle    805204b <__sprintf_chk@plt+0x813b>
mov    0x1c(%esp),%eax
mov    %ecx,0xc(%eax)
mov    %ecx,%eax
mov    0x1c(%esp),%esi
test   %edx,%edx
mov    %eax,0x8(%esi)
mov    %edx,0x53c(%esi)
je     8052185 <__sprintf_chk@plt+0x8275>
mov    0x34(%esi),%eax
mov    0x30(%esi),%ebx
mov    %eax,%ecx
sub    $0x1,%ecx
js     8052092 <__sprintf_chk@plt+0x8182>
mov    0x4(%ebx),%eax
movzbl 0xc(%eax),%eax
mov    %al,(%edx,%ecx,1)
mov    0x4(%ebx),%eax
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
mov    0x8(%eax),%ebx
mov    0x1c(%esp),%eax
mov    0x53c(%eax),%edx
jne    805206d <__sprintf_chk@plt+0x815d>
mov    0x34(%eax),%eax
test   %eax,%eax
mov    %eax,%ebx
lea    0x1(%eax),%ebp
mov    $0x1,%ecx
mov    %eax,%edi
jle    80520bb <__sprintf_chk@plt+0x81ab>
movzbl -0x1(%edx,%ecx,1),%esi
mov    %ebx,%eax
sub    %ecx,%eax
add    $0x1,%ecx
cmp    %ebp,%ecx
mov    %al,0x42c(%esp,%esi,1)
jne    80520a2 <__sprintf_chk@plt+0x8192>
mov    %edi,%eax
mov    %eax,%ecx
movzbl -0x1(%edx,%eax,1),%ebx
sub    $0x2,%ecx
js     80520dd <__sprintf_chk@plt+0x81cd>
cmp    %bl,-0x2(%edx,%eax,1)
jne    80520d5 <__sprintf_chk@plt+0x81c5>
jmp    80520dd <__sprintf_chk@plt+0x81cd>
nop
cmp    %bl,(%edx,%ecx,1)
je     80520dd <__sprintf_chk@plt+0x81cd>
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
jne    80520d0 <__sprintf_chk@plt+0x81c0>
mov    0x1c(%esp),%esi
not    %ecx
add    %ecx,%eax
mov    %eax,0x540(%esi)
mov    0x544(%esi),%eax
jmp    8051f7b <__sprintf_chk@plt+0x806b>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
lea    0x13c(%eax),%edi
mov    $0x400,%eax
test   $0x1,%edi
jne    8052167 <__sprintf_chk@plt+0x8257>
test   $0x2,%edi
jne    8052155 <__sprintf_chk@plt+0x8245>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     805212f <__sprintf_chk@plt+0x821f>
movzwl (%esi),%edx
mov    %dx,(%edi)
mov    $0x2,%edx
test   $0x1,%al
je     805213a <__sprintf_chk@plt+0x822a>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
mov    0x1c(%esp),%eax
mov    0x544(%eax),%eax
jmp    8051f7b <__sprintf_chk@plt+0x806b>
xor    %edx,%edx
jmp    8051efb <__sprintf_chk@plt+0x7feb>
call   80498f0 <__stack_chk_fail@plt>
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    8052117 <__sprintf_chk@plt+0x8207>
movzbl (%esi),%eax
mov    0x1c(%esp),%esi
mov    %al,0x13c(%esi)
lea    0x13d(%esi),%edi
mov    $0x3ff,%eax
lea    0x2d(%esp),%esi
jmp    805210f <__sprintf_chk@plt+0x81ff>
movl   $0x5,0x8(%esp)
movl   $0x806ceb0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
jmp    8051fad <__sprintf_chk@plt+0x809d>
mov    0x1c(%esp),%esi
mov    $0x100,%edx
lea    0x3c(%esi),%edi
test   $0x1,%edi
lea    0x42c(%esp),%esi
je     80521df <__sprintf_chk@plt+0x82cf>
mov    0x1c(%esp),%esi
movzbl 0x42c(%esp),%edx
lea    0x3d(%esi),%edi
mov    %dl,0x3c(%esi)
lea    0x42d(%esp),%esi
mov    $0xff,%edx
test   $0x2,%edi
je     80521f7 <__sprintf_chk@plt+0x82e7>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %cx,-0x2(%edi)
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     805220e <__sprintf_chk@plt+0x82fe>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%edx
je     8051fad <__sprintf_chk@plt+0x809d>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
jmp    8051fad <__sprintf_chk@plt+0x809d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpl   $0x1,0x2c(%eax)
je     8052261 <__sprintf_chk@plt+0x8351>
mov    0x50(%esp),%eax
mov    $0xffffffff,%esi
mov    0x34(%eax),%edi
cmp    %edi,0x58(%esp)
jae    8052379 <__sprintf_chk@plt+0x8469>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x544(%eax),%ebx
test   %ebx,%ebx
jne    8052241 <__sprintf_chk@plt+0x8331>
mov    0x34(%eax),%ebx
test   %ebx,%ebx
je     8052760 <__sprintf_chk@plt+0x8850>
cmp    %ebx,0x58(%esp)
mov    $0xffffffff,%esi
jb     8052257 <__sprintf_chk@plt+0x8347>
cmp    $0x1,%ebx
je     80527ee <__sprintf_chk@plt+0x88de>
mov    0x50(%esp),%eax
lea    (%ebx,%ebx,2),%ecx
shl    $0x2,%ecx
mov    0x53c(%eax),%edi
lea    0x3c(%eax),%edx
add    %ebx,%edi
movzbl -0x2(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    0x540(%eax),%ebp
mov    0x54(%esp),%eax
add    %ebx,%eax
cmp    %ecx,0x58(%esp)
jbe    8052779 <__sprintf_chk@plt+0x8869>
imul   $0xfffffff5,%ebx,%ecx
add    0x58(%esp),%ecx
add    0x54(%esp),%ecx
cmp    %ecx,%eax
mov    %ecx,0x10(%esp)
jbe    8052348 <__sprintf_chk@plt+0x8438>
jmp    8052779 <__sprintf_chk@plt+0x8869>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     8052367 <__sprintf_chk@plt+0x8457>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     8052367 <__sprintf_chk@plt+0x8457>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
cmp    %eax,0x10(%esp)
jb     8052779 <__sprintf_chk@plt+0x8869>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
jne    80522e0 <__sprintf_chk@plt+0x83d0>
movzbl -0x2(%eax),%ecx
cmp    %ecx,0xc(%esp)
je     8052712 <__sprintf_chk@plt+0x8802>
add    %ebp,%eax
jmp    805233e <__sprintf_chk@plt+0x842e>
add    $0x13c,%eax
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
add    $0x3c,%eax
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
mov    0x544(%eax),%ebp
mov    0x54(%esp),%eax
add    0x58(%esp),%eax
test   %edi,%edi
mov    %eax,0x20(%esp)
jne    8052509 <__sprintf_chk@plt+0x85f9>
mov    0x50(%esp),%eax
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    0x38(%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
mov    0x20(%esp),%esi
mov    0x2c(%esp),%edi
mov    %esi,%edx
sub    %eax,%edx
add    %edi,%eax
cmp    %edi,%edx
mov    $0x1,%edi
cmovle %esi,%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     80524d8 <__sprintf_chk@plt+0x85c8>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
movzbl -0x1(%eax),%eax
movzbl (%esi,%eax,1),%edi
test   %edi,%edi
jne    80523f0 <__sprintf_chk@plt+0x84e0>
mov    0x14(%esp),%esi
lea    -0x1(%esi),%edx
mov    0x28(%esp),%esi
mov    (%esi,%eax,4),%eax
test   %eax,%eax
je     80526ec <__sprintf_chk@plt+0x87dc>
mov    (%eax),%esi
movl   $0x0,0x18(%esp)
test   %esi,%esi
je     8052459 <__sprintf_chk@plt+0x8549>
mov    0x1c(%esp),%edi
mov    $0x0,%esi
cmp    %edx,%edi
cmovae %edx,%esi
mov    %esi,0x18(%esp)
mov    0x10(%esp),%esi
cmovae %eax,%esi
mov    %esi,0x10(%esp)
cmp    %edx,0x54(%esp)
mov    0x18(%eax),%edi
jae    80524b2 <__sprintf_chk@plt+0x85a2>
mov    0x14(%esp),%esi
sub    $0x2,%esi
test   %ebp,%ebp
mov    %esi,0xc(%esp)
je     8052685 <__sprintf_chk@plt+0x8775>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl 0x0(%ebp,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     80524b2 <__sprintf_chk@plt+0x85a2>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80524a6 <__sprintf_chk@plt+0x8596>
jmp    805263b <__sprintf_chk@plt+0x872b>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8052640 <__sprintf_chk@plt+0x8730>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052498 <__sprintf_chk@plt+0x8588>
mov    0x18(%esp),%ebx
test   %ebx,%ebx
jne    8052705 <__sprintf_chk@plt+0x87f5>
test   %edi,%edi
mov    $0x1,%eax
cmove  %eax,%edi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jle    8052400 <__sprintf_chk@plt+0x84f0>
mov    0x10(%esp),%edi
mov    0x5c(%esp),%esi
mov    (%edi),%eax
shr    %eax
mov    %eax,(%esi)
mov    0x5c(%esp),%eax
mov    0x1c(%esp),%esi
sub    0x54(%esp),%esi
mov    %esi,0x4(%eax)
mov    0x14(%edi),%eax
mov    0x5c(%esp),%edi
mov    %eax,0x8(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,%edx
xor    %esi,%esi
lea    0x0(,%edi,4),%eax
sub    %eax,%edx
cmp    %eax,0x58(%esp)
mov    0x54(%esp),%eax
mov    %ebp,0xc(%esp)
cmovb  %esi,%edx
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     80526f6 <__sprintf_chk@plt+0x87e6>
mov    0x18(%esp),%eax
cmp    %eax,0x14(%esp)
ja     80526d3 <__sprintf_chk@plt+0x87c3>
test   %eax,%eax
je     80526d3 <__sprintf_chk@plt+0x87c3>
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
lea    -0x1(%eax,%edi,1),%eax
movzbl (%eax),%ecx
movzbl (%esi,%ecx,1),%edi
test   %edi,%edi
mov    %edi,%edx
je     80525a8 <__sprintf_chk@plt+0x8698>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    80525a8 <__sprintf_chk@plt+0x8698>
mov    %esi,%ebp
jmp    8052584 <__sprintf_chk@plt+0x8674>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
jae    80525a8 <__sprintf_chk@plt+0x8698>
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%ecx
movzbl 0x0(%ebp,%ecx,1),%edx
test   %edx,%edx
mov    %edx,%edi
jne    8052580 <__sprintf_chk@plt+0x8670>
add    $0x1,%eax
mov    %eax,0x14(%esp)
test   %edi,%edi
jne    8052530 <__sprintf_chk@plt+0x8620>
mov    0x28(%esp),%eax
mov    0x14(%esp),%esi
mov    (%eax,%ecx,4),%eax
lea    -0x1(%esi),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %edx,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
cmp    %edx,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    8052626 <__sprintf_chk@plt+0x8716>
mov    0xc(%esp),%ebx
sub    $0x2,%esi
mov    %esi,%ebp
test   %ebx,%ebx
je     80526cb <__sprintf_chk@plt+0x87bb>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl (%ebx,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     8052626 <__sprintf_chk@plt+0x8716>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805261a <__sprintf_chk@plt+0x870a>
jmp    805268d <__sprintf_chk@plt+0x877d>
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8052690 <__sprintf_chk@plt+0x8780>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052610 <__sprintf_chk@plt+0x8700>
mov    0x1c(%esp),%ebp
test   %ebp,%ebp
je     8052530 <__sprintf_chk@plt+0x8620>
mov    0xc(%esp),%ebp
jmp    80523c2 <__sprintf_chk@plt+0x84b2>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%eax),%eax
mov    (%eax),%edx
test   %edx,%edx
je     8052665 <__sprintf_chk@plt+0x8755>
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%edi
cmp    %esi,%ebx
cmovae %esi,%edi
mov    %edi,0x18(%esp)
mov    0x10(%esp),%edi
cmovae %eax,%edi
mov    %edi,0x10(%esp)
mov    0xc(%esp),%ebx
sub    $0x1,%esi
cmp    %ebx,0x54(%esp)
mov    0x18(%eax),%edi
jae    80524b2 <__sprintf_chk@plt+0x85a2>
test   %ebp,%ebp
mov    %esi,0xc(%esp)
jne    8052478 <__sprintf_chk@plt+0x8568>
movzbl (%esi),%ebx
jmp    8052480 <__sprintf_chk@plt+0x8570>
mov    %edx,%eax
nop
mov    0x8(%eax),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %esi,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
sub    $0x1,%esi
cmp    %ebp,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    8052626 <__sprintf_chk@plt+0x8716>
mov    0xc(%esp),%ebx
mov    %esi,%ebp
test   %ebx,%ebx
jne    80525f8 <__sprintf_chk@plt+0x86e8>
movzbl (%esi),%ebx
jmp    80525ff <__sprintf_chk@plt+0x86ef>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
movzbl -0x1(%eax),%ecx
mov    0x24(%esp),%eax
movzbl (%eax,%ecx,1),%edi
jmp    80525af <__sprintf_chk@plt+0x869f>
mov    $0x1,%edi
jmp    80523f0 <__sprintf_chk@plt+0x84e0>
add    $0x3c,%esp
mov    $0xffffffff,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    80523d1 <__sprintf_chk@plt+0x84c1>
cmp    $0x2,%ebx
jle    8052749 <__sprintf_chk@plt+0x8839>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    8052375 <__sprintf_chk@plt+0x8465>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    805273c <__sprintf_chk@plt+0x882c>
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    8052826 <__sprintf_chk@plt+0x8916>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    805272a <__sprintf_chk@plt+0x881a>
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,%esi
sub    0x54(%esp),%esi
cmp    $0xffffffff,%esi
jne    8052764 <__sprintf_chk@plt+0x8854>
jmp    8052257 <__sprintf_chk@plt+0x8347>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
xor    %esi,%esi
mov    0x5c(%esp),%eax
movl   $0x0,(%eax)
mov    %esi,0x4(%eax)
mov    %ebx,0x8(%eax)
jmp    8052257 <__sprintf_chk@plt+0x8347>
mov    0x50(%esp),%esi
movzbl -0x1(%eax),%ecx
movzbl 0x3c(%esi,%ecx,1),%ecx
mov    0x54(%esp),%esi
add    0x58(%esp),%esi
mov    %esi,0x10(%esp)
mov    0x10(%esp),%esi
sub    %eax,%esi
cmp    %esi,%ecx
jg     80526f6 <__sprintf_chk@plt+0x87e6>
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
test   %ecx,%ecx
jne    8052792 <__sprintf_chk@plt+0x8882>
movzbl -0x2(%eax),%esi
mov    %ebp,%ecx
cmp    %esi,0xc(%esp)
jne    8052792 <__sprintf_chk@plt+0x8882>
cmp    $0x2,%ebx
jle    8052749 <__sprintf_chk@plt+0x8839>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    8052831 <__sprintf_chk@plt+0x8921>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    80527de <__sprintf_chk@plt+0x88ce>
xchg   %ax,%ax
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    805282f <__sprintf_chk@plt+0x891f>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    80527d0 <__sprintf_chk@plt+0x88c0>
jmp    8052747 <__sprintf_chk@plt+0x8837>
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    0x53c(%eax),%eax
movsbl (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
je     8052257 <__sprintf_chk@plt+0x8347>
sub    0x54(%esp),%eax
mov    %eax,%esi
jmp    8052751 <__sprintf_chk@plt+0x8841>
mov    %esi,%eax
add    %ebp,%eax
jmp    805233e <__sprintf_chk@plt+0x842e>
mov    %esi,%eax
mov    %ebp,%ecx
jmp    8052792 <__sprintf_chk@plt+0x8882>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049970 <obstack_free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049800 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    %esi,%edx
sub    $0x4c,%esp
cmp    $0xffffffff,%edx
mov    %eax,0x34(%esp)
movzbl 0x80739a0,%eax
mov    %esi,0x807352c
je     80529a1 <__sprintf_chk@plt+0x8a91>
mov    0x8073534,%ecx
add    $0x1,%edx
xor    %edi,%edi
mov    0x8073530,%ebx
mov    %edx,0x1c(%esp)
mov    %eax,0x30(%esp)
mov    %ecx,0x38(%esp)
mov    %ecx,%ebp
mov    0x34(%esp),%ecx
mov    %ebx,0x3c(%esp)
mov    %ebx,%esi
xor    %ebx,%ebx
jmp    80528ec <__sprintf_chk@plt+0x89dc>
lea    0x0(%esi),%esi
mov    %edi,%eax
sub    $0x1,%edi
mov    %al,0x0(%ebp)
movl   $0x0,(%esi)
add    $0x1,%ebx
add    $0x1,%ebp
add    $0x4,%esi
add    $0x1,%ecx
cmp    0x1c(%esp),%ebx
je     8052978 <__sprintf_chk@plt+0x8a68>
test   %edi,%edi
jne    80528c8 <__sprintf_chk@plt+0x89b8>
mov    0x1c(%esp),%eax
mov    %ecx,0x4(%esp)
movl   $0x807353c,0xc(%esp)
mov    %esi,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0x20(%esp)
mov    %esi,0x2c(%esp)
call   8049a40 <mbrtowc@plt>
mov    0x20(%esp),%ecx
lea    -0x1(%eax),%edx
cmp    $0xfffffffc,%edx
mov    %edx,0x24(%esp)
jbe    8052960 <__sprintf_chk@plt+0x8a50>
movsbl (%ecx),%eax
mov    %eax,%edx
mov    %edx,(%esi)
mov    %ebp,%edx
movb   $0x0,0x0(%ebp)
movsbl (%ecx),%eax
cmp    0x30(%esp),%eax
jne    80528d6 <__sprintf_chk@plt+0x89c6>
mov    0x28(%esp),%eax
mov    %eax,0x8073528
mov    0x2c(%esp),%eax
movb   $0x0,(%edx)
movl   $0x0,(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x1,%eax
je     8052998 <__sprintf_chk@plt+0x8a88>
mov    0x8073534,%edi
mov    %al,(%edi,%ebx,1)
mov    0x24(%esp),%edi
jmp    80528d6 <__sprintf_chk@plt+0x89c6>
nop
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
add    %ebx,%eax
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
add    %ebx,%edx
lea    (%eax,%ebx,4),%eax
mov    %eax,0x2c(%esp)
jmp    8052940 <__sprintf_chk@plt+0x8a30>
lea    0x0(%esi),%esi
movsbl (%ecx),%edx
cmp    %edx,(%esi)
jne    8052965 <__sprintf_chk@plt+0x8a55>
jmp    805292f <__sprintf_chk@plt+0x8a1f>
mov    0x8073530,%eax
mov    0x8073534,%edx
mov    %esi,0x28(%esp)
mov    %eax,0x2c(%esp)
mov    %esi,%eax
jmp    8052944 <__sprintf_chk@plt+0x8a34>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x2c,%esp
mov    0x4(%ecx),%ebp
mov    %edx,0x18(%esp)
mov    (%ecx),%esi
mov    %ecx,0x14(%esp)
mov    %ebp,%edx
jmp    80529e3 <__sprintf_chk@plt+0x8ad3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8052a06 <__sprintf_chk@plt+0x8af6>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    (%esi,%eax,8),%edi
jb     80529e0 <__sprintf_chk@plt+0x8ad0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8052a06 <__sprintf_chk@plt+0x8af6>
add    %ebx,%eax
shr    %eax
cmp    %edi,(%esi,%eax,8)
ja     80529e0 <__sprintf_chk@plt+0x8ad0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     80529f7 <__sprintf_chk@plt+0x8ae7>
cmp    %ebx,%ebp
jbe    8052a15 <__sprintf_chk@plt+0x8b05>
lea    (%esi,%ebx,8),%eax
cmp    %edi,(%eax)
je     8052ac8 <__sprintf_chk@plt+0x8bb8>
mov    0x14(%esp),%eax
lea    0x1(%ebp),%edx
cmp    %edx,0x8(%eax)
ja     8052a79 <__sprintf_chk@plt+0x8b69>
test   %esi,%esi
sete   %al
movzbl %al,%ecx
add    %ebp,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8052ad8 <__sprintf_chk@plt+0x8bc8>
cmp    $0x15555554,%edx
ja     8052aef <__sprintf_chk@plt+0x8bdf>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x14(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
mov    %eax,%esi
mov    %ecx,0x1c(%esp)
lea    0x1(%ecx),%edx
cmp    %ebx,%ebp
jbe    8052aad <__sprintf_chk@plt+0x8b9d>
mov    %ebp,%eax
sub    %ebx,%eax
shl    $0x3,%ebp
shl    $0x3,%eax
mov    %ebp,%ecx
sub    %eax,%ecx
add    %esi,%ecx
mov    %ecx,0x4(%esp)
mov    %esi,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%ebp,1),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   80497f0 <memmove@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edi,(%esi,%ebx,8)
mov    %eax,0x4(%esi,%ebx,8)
mov    0x14(%esp),%eax
mov    %edx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x18(%esp),%ecx
or     %ecx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %edx,%edx
jne    8052a49 <__sprintf_chk@plt+0x8b39>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8052a50 <__sprintf_chk@plt+0x8b40>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x64(%eax),%esi
cmp    %edx,%esi
mov    %esi,%eax
jg     8052bde <__sprintf_chk@plt+0x8cce>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%eax
cmp    %eax,%edx
jge    8052b18 <__sprintf_chk@plt+0x8c08>
mov    %eax,0x64(%ebx)
add    $0x1,%eax
mov    0x70(%ebx),%edx
cmp    $0x3fffffff,%eax
ja     8052be4 <__sprintf_chk@plt+0x8cd4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x74(%ebx),%edx
mov    %eax,0x70(%ebx)
add    $0x4,%eax
mov    %eax,0x6c(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8052be4 <__sprintf_chk@plt+0x8cd4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x78(%ebx),%edx
mov    %eax,0x74(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8052be4 <__sprintf_chk@plt+0x8cd4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x7c(%ebx),%edx
mov    %eax,0x78(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8052be4 <__sprintf_chk@plt+0x8cd4>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x64(%ebx),%ecx
cmp    %ecx,%esi
mov    %eax,0x7c(%ebx)
jge    8052bde <__sprintf_chk@plt+0x8cce>
lea    0x0(,%esi,4),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%eax
add    $0x1,%esi
movl   $0x0,(%eax,%edx,1)
mov    0x74(%ebx),%eax
movl   $0x0,(%eax,%edx,1)
add    $0x4,%edx
cmp    %ecx,%esi
jne    8052bc0 <__sprintf_chk@plt+0x8cb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x80739b0,%ebx
cmp    $0x1,%eax
jbe    8052c69 <__sprintf_chk@plt+0x8d59>
mov    0x10(%ebx),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x3c(%ebx)
ja     8052c63 <__sprintf_chk@plt+0x8d53>
mov    0x40(%ebx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%ebp
add    %ebp,%eax
test   %cl,%cl
lea    0x1(%eax),%ebp
jne    8052d38 <__sprintf_chk@plt+0x8e28>
cmp    $0x2aaaaaa9,%ebp
ja     8052d4f <__sprintf_chk@plt+0x8e3f>
add    $0x2,%eax
shr    %eax
add    %eax,%ebp
lea    0x0(,%ebp,4),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x40(%ebx)
mov    0x80739b0,%ebx
mov    0x10(%ebx),%eax
mov    %ebp,0x3c(%ebx)
mov    0x40(%ebx),%edx
mov    %edi,(%edx,%eax,4)
mov    0x10(%ebx),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x14(%ebx)
ja     8052cc4 <__sprintf_chk@plt+0x8db4>
mov    0xc(%ebx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%edi
add    %edi,%eax
test   %cl,%cl
lea    0x1(%eax),%edi
jne    8052d20 <__sprintf_chk@plt+0x8e10>
cmp    $0x2aaaaaa9,%edi
ja     8052d4f <__sprintf_chk@plt+0x8e3f>
add    $0x2,%eax
shr    %eax
add    %eax,%edi
lea    0x0(,%edi,4),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0xc(%ebx)
mov    0x80739b0,%ebx
mov    0x10(%ebx),%eax
mov    %edi,0x14(%ebx)
lea    0x1(%eax),%edx
mov    0xc(%ebx),%ecx
mov    %edx,0x10(%ebx)
mov    %esi,(%ecx,%eax,4)
sub    $0x100,%esi
cmp    $0xd,%esi
ja     8052ce0 <__sprintf_chk@plt+0x8dd0>
jmp    *0x806cee0(,%esi,4)
nop
addl   $0x1,0x1c(%ebx)
mov    0x8073520,%eax
add    $0x1,%eax
mov    %eax,0x8073520
cmp    %eax,0x18(%ebx)
jae    8052cf9 <__sprintf_chk@plt+0x8de9>
mov    %eax,0x18(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073520,%eax
sub    $0x1,%eax
mov    %eax,0x8073520
jmp    8052cf1 <__sprintf_chk@plt+0x8de1>
nop
mov    0x8073520,%eax
jmp    8052cf1 <__sprintf_chk@plt+0x8de1>
nop
test   %edi,%edi
jne    8052c9f <__sprintf_chk@plt+0x8d8f>
mov    $0x40,%eax
mov    $0x10,%edi
jmp    8052ca6 <__sprintf_chk@plt+0x8d96>
nop
test   %ebp,%ebp
jne    8052c41 <__sprintf_chk@plt+0x8d31>
mov    $0x40,%eax
mov    $0x10,%ebp
jmp    8052c48 <__sprintf_chk@plt+0x8d38>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x80739b0,%eax
mov    0x4(%eax),%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
test   %esi,%esi
mov    %eax,0x1c(%esp)
je     8052db8 <__sprintf_chk@plt+0x8ea8>
mov    %eax,%ebp
xor    %edi,%edi
jmp    8052d92 <__sprintf_chk@plt+0x8e82>
nop
add    $0x1,%edi
add    $0x20,%ebp
cmp    %esi,%edi
je     8052db8 <__sprintf_chk@plt+0x8ea8>
movl   $0x20,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
jne    8052d88 <__sprintf_chk@plt+0x8e78>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
lea    0x1(%esi),%eax
cmp    %eax,0x8(%ecx)
ja     8052e70 <__sprintf_chk@plt+0x8f60>
mov    0x1c(%esp),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%eax
add    %esi,%eax
test   %cl,%cl
lea    0x1(%eax),%esi
jne    8052e78 <__sprintf_chk@plt+0x8f68>
cmp    $0x5555554,%esi
ja     8052e8f <__sprintf_chk@plt+0x8f7f>
add    $0x2,%eax
shr    %eax
add    %eax,%esi
mov    %esi,%eax
shl    $0x5,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x80739b0,%edx
mov    0x18(%esp),%ecx
mov    %eax,(%ecx)
mov    0x4(%edx),%eax
mov    (%edx),%ecx
mov    %esi,0x8(%edx)
add    $0x1,%eax
mov    %ecx,0x1c(%esp)
mov    %ecx,%ebp
mov    %eax,0x4(%edx)
mov    %edi,%eax
shl    $0x5,%eax
add    %eax,%ebp
mov    (%ebx),%eax
mov    %eax,0x0(%ebp)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%ebp)
mov    0x8(%ebx),%eax
mov    %eax,0x8(%ebp)
mov    0xc(%ebx),%eax
mov    %eax,0xc(%ebp)
mov    0x10(%ebx),%eax
mov    %eax,0x10(%ebp)
mov    0x14(%ebx),%eax
mov    %eax,0x14(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,0x18(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,0x1c(%ebp)
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edx
mov    0x1c(%esp),%ebp
jmp    8052e26 <__sprintf_chk@plt+0x8f16>
test   %esi,%esi
jne    8052df4 <__sprintf_chk@plt+0x8ee4>
mov    $0x40,%eax
mov    $0x2,%esi
jmp    8052df9 <__sprintf_chk@plt+0x8ee9>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x40(%eax),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x48(%ebp),%ecx
movl   $0x0,0x40(%ebp)
movl   $0x0,0xc(%esp)
test   %ecx,%ecx
je     8052f76 <__sprintf_chk@plt+0x9066>
mov    0x44(%ebp),%ebx
xor    %esi,%esi
add    %edi,%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x28(%ebx),%edx
test   %edx,%edx
je     8052f26 <__sprintf_chk@plt+0x9016>
lea    0x0(%esi),%esi
mov    0x24(%ebx),%edx
mov    (%edx,%esi,4),%edx
add    $0x1,%esi
mov    %edx,(%esp)
call   8049800 <free@plt>
cmp    %esi,0x28(%ebx)
ja     8052f10 <__sprintf_chk@plt+0x9000>
mov    0x24(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8052f56 <__sprintf_chk@plt+0x9046>
lea    0x0(%esi),%esi
mov    0x2c(%ebx),%edx
mov    (%edx,%esi,4),%edx
add    $0x1,%esi
mov    %edx,(%esp)
call   8049800 <free@plt>
cmp    %esi,0x30(%ebx)
ja     8052f40 <__sprintf_chk@plt+0x9030>
mov    0x2c(%ebx),%eax
add    $0x34,%edi
mov    %eax,(%esp)
call   8049800 <free@plt>
addl   $0x1,0xc(%esp)
mov    0xc(%esp),%eax
cmp    %eax,0x48(%ebp)
ja     8052ed0 <__sprintf_chk@plt+0x8fc0>
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x44(%ebp)
movl   $0x0,0x48(%ebp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x80739b0,%ebx
cmp    $0x1,%eax
jbe    8053016 <__sprintf_chk@plt+0x9106>
mov    0x10(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x3c(%ebx)
ja     8053010 <__sprintf_chk@plt+0x9100>
mov    0x40(%ebx),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%edi
add    %edi,%edx
test   %al,%al
lea    0x1(%edx),%edi
jne    80530b0 <__sprintf_chk@plt+0x91a0>
cmp    $0x2aaaaaa9,%edi
ja     80530c7 <__sprintf_chk@plt+0x91b7>
add    $0x2,%edx
shr    %edx
add    %edx,%edi
lea    0x0(,%edi,4),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x40(%ebx)
mov    0x80739b0,%ebx
mov    0x10(%ebx),%edx
mov    %edi,0x3c(%ebx)
mov    0x40(%ebx),%eax
mov    %esi,(%eax,%edx,4)
mov    0x10(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x14(%ebx)
ja     805306d <__sprintf_chk@plt+0x915d>
mov    0xc(%ebx),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
jne    80530a0 <__sprintf_chk@plt+0x9190>
cmp    $0x2aaaaaa9,%esi
ja     80530c7 <__sprintf_chk@plt+0x91b7>
add    $0x2,%edx
shr    %edx
add    %edx,%esi
lea    0x0(,%esi,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0xc(%ebx)
mov    0x80739b0,%ebx
mov    0x10(%ebx),%edx
mov    %esi,0x14(%ebx)
lea    0x1(%edx),%eax
mov    %eax,0x10(%ebx)
mov    0xc(%ebx),%ecx
mov    0x8073520,%eax
movl   $0x111,(%ecx,%edx,4)
add    $0x1,%eax
addl   $0x1,0x1c(%ebx)
cmp    0x18(%ebx),%eax
mov    %eax,0x8073520
jbe    8053093 <__sprintf_chk@plt+0x9183>
mov    %eax,0x18(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %esi,%esi
jne    8053048 <__sprintf_chk@plt+0x9138>
mov    $0x40,%edx
mov    $0x10,%esi
jmp    805304f <__sprintf_chk@plt+0x913f>
test   %edi,%edi
jne    8052fee <__sprintf_chk@plt+0x90de>
mov    $0x40,%eax
mov    $0x10,%edi
jmp    8052ff5 <__sprintf_chk@plt+0x90e5>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8053158 <__sprintf_chk@plt+0x9248>
mov    %ebx,(%esp)
call   8049ca0 <btowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8053150 <__sprintf_chk@plt+0x9240>
mov    %ebx,%eax
mov    $0x1,%edx
shr    $0x5,%eax
mov    %ebx,%ecx
shl    %cl,%edx
or     %edx,(%esi,%eax,4)
mov    0x80739a4,%edx
test   %edx,%edx
je     8053150 <__sprintf_chk@plt+0x9240>
mov    %edi,(%esp)
call   8049920 <iswalpha@plt>
test   %eax,%eax
je     8053150 <__sprintf_chk@plt+0x9240>
mov    %edi,(%esp)
call   8049c00 <iswupper@plt>
mov    %edi,(%esp)
test   %eax,%eax
jne    80531c0 <__sprintf_chk@plt+0x92b0>
call   8049e50 <towupper@plt>
mov    %eax,(%esp)
call   8049bd0 <wctob@plt>
cmp    $0xffffffff,%eax
je     8053150 <__sprintf_chk@plt+0x9240>
mov    %eax,%ebx
mov    $0x1,%edx
shr    $0x5,%ebx
mov    %eax,%ecx
shl    %cl,%edx
or     %edx,(%esi,%ebx,4)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %ebx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
mov    %ebx,%ecx
shl    %cl,%eax
or     %eax,(%esi,%edx,4)
mov    0x80739a4,%eax
test   %eax,%eax
je     8053150 <__sprintf_chk@plt+0x9240>
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%eax
movzwl (%eax,%ebx,2),%eax
test   $0x4,%ah
je     8053150 <__sprintf_chk@plt+0x9240>
test   $0x1,%ah
lea    0x80(%ebx),%eax
je     80531d0 <__sprintf_chk@plt+0x92c0>
cmp    $0x17f,%eax
jbe    80531e8 <__sprintf_chk@plt+0x92d8>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80531ab <__sprintf_chk@plt+0x929b>
mov    %ebx,(%esp)
call   8049ca0 <btowc@plt>
cmp    $0xffffffff,%eax
je     8053150 <__sprintf_chk@plt+0x9240>
mov    %ebx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
mov    %ebx,%ecx
shl    %cl,%eax
or     %eax,(%esi,%edx,4)
jmp    8053150 <__sprintf_chk@plt+0x9240>
xchg   %ax,%ax
call   8049850 <towlower@plt>
jmp    8053132 <__sprintf_chk@plt+0x9222>
lea    0x0(%esi),%esi
cmp    $0x17f,%eax
ja     8053194 <__sprintf_chk@plt+0x9284>
call   8049770 <__ctype_toupper_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
jmp    8053194 <__sprintf_chk@plt+0x9284>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049ed0 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
jmp    8053194 <__sprintf_chk@plt+0x9284>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xec,%esp
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0xdc(%esp)
xor    %eax,%eax
lea    (%edx,%edx,8),%eax
mov    %ecx,0x30(%esp)
lea    0x0(,%eax,4),%ecx
mov    0x50(%esi),%eax
mov    %ecx,0x3c(%esp)
mov    0x1c(%eax,%ecx,1),%eax
cmp    $0x3fffffff,%eax
ja     80536b1 <__sprintf_chk@plt+0x97a1>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x1c(%esp),%esi
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
add    0x50(%esi),%eax
mov    0x30(%esp),%esi
mov    0x1c(%eax),%edx
mov    %eax,0x18(%esp)
shl    $0x2,%esi
mov    %esi,0x2c(%esp)
xor    %esi,%esi
test   %edx,%edx
mov    %esi,%ebp
je     80533e7 <__sprintf_chk@plt+0x94d7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x18(%eax),%eax
lea    (%eax,%ebp,8),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%edi
mov    0x1c(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%ebx,4),%eax
cmp    $0x110,%eax
je     8053410 <__sprintf_chk@plt+0x9500>
cmp    $0x111,%eax
jne    80533dc <__sprintf_chk@plt+0x94cc>
mov    0x8073530,%eax
mov    0x2c(%esp),%ecx
movzbl 0x80739a0,%edx
mov    (%eax,%ecx,1),%eax
cmp    %edx,%eax
mov    %eax,0x24(%esp)
je     80534b0 <__sprintf_chk@plt+0x95a0>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    80534bf <__sprintf_chk@plt+0x95af>
xor    %eax,%eax
xor    %esi,%esi
testb  $0x80,0x80739ac
jne    80533ce <__sprintf_chk@plt+0x94be>
mov    %edi,%eax
xor    %edi,%edi
shr    $0x8,%eax
and    $0xf,%eax
or     %eax,%edi
mov    0x18(%esp),%eax
movzbl 0x10(%eax),%edx
xor    %eax,%eax
test   %edx,%edi
je     80533ce <__sprintf_chk@plt+0x94be>
mov    0x1c(%esp),%ecx
mov    0x40(%ecx),%eax
mov    (%eax,%ebx,4),%ebx
sar    $0x2,%ebx
imul   $0x34,%ebx,%ebx
add    0x44(%ecx),%ebx
mov    0x30(%esp),%ecx
mov    0x4(%ebx),%edi
test   %edi,%edi
sete   %al
mov    %al,0x47(%esp)
movzbl %al,%eax
mov    %eax,0x40(%esp)
mov    0x8073534,%eax
movzbl (%eax,%ecx,1),%eax
test   %al,%al
movzbl %al,%edx
mov    $0x1,%eax
cmove  %eax,%edx
cmpl   $0xff,0x24(%esp)
mov    %edx,0x38(%esp)
jg     805337c <__sprintf_chk@plt+0x946c>
mov    (%ebx),%edx
cmp    $0xffffffff,%edx
je     805337c <__sprintf_chk@plt+0x946c>
mov    0x24(%esp),%ecx
shl    $0x5,%edx
mov    0x1c(%esp),%edi
mov    %ecx,%eax
shr    $0x3,%eax
and    $0x1c,%eax
add    (%edi),%eax
mov    (%eax,%edx,1),%eax
shr    %cl,%eax
test   $0x1,%al
jne    80533c1 <__sprintf_chk@plt+0x94b1>
mov    0x14(%ebx),%ecx
test   %ecx,%ecx
je     8053507 <__sprintf_chk@plt+0x95f7>
xor    %edi,%edi
jmp    805339c <__sprintf_chk@plt+0x948c>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    0x14(%ebx),%edi
jae    80534f8 <__sprintf_chk@plt+0x95e8>
mov    0x10(%ebx),%eax
mov    (%eax,%edi,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <iswctype@plt>
test   %eax,%eax
je     8053390 <__sprintf_chk@plt+0x9480>
mov    0x1c(%esp),%ecx
mov    0x3c(%esp),%eax
add    0x50(%ecx),%eax
mov    %eax,0x18(%esp)
mov    0x40(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
cmovne 0x38(%esp),%eax
mov    0x28(%esp),%ecx
mov    %eax,(%ecx,%ebp,4)
mov    0x18(%esp),%eax
mov    0x1c(%eax),%edx
add    $0x1,%ebp
cmp    %edx,%ebp
jb     8053280 <__sprintf_chk@plt+0x9370>
mov    0xdc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x28(%esp),%eax
jne    80536ac <__sprintf_chk@plt+0x979c>
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ecx
mov    0x8073530,%eax
mov    0x8073534,%edx
mov    (%eax,%ecx,1),%eax
mov    0x30(%esp),%ecx
movzbl (%edx,%ecx,1),%edx
mov    $0x1,%ecx
test   %dl,%dl
movzbl %dl,%ebx
cmove  %ecx,%ebx
movzbl 0x80739a0,%ecx
cmp    %ecx,%eax
je     8053480 <__sprintf_chk@plt+0x9570>
test   %eax,%eax
jne    805348b <__sprintf_chk@plt+0x957b>
xor    %edx,%edx
testb  $0x80,0x80739ac
jne    805346c <__sprintf_chk@plt+0x955c>
mov    %edi,%eax
xor    %edi,%edi
shr    $0x8,%eax
and    $0xf,%eax
or     %eax,%edi
mov    0x18(%esp),%eax
xor    %edx,%edx
movzbl 0x10(%eax),%eax
test   %eax,%edi
cmovne %ebx,%edx
mov    0x28(%esp),%eax
mov    %edx,(%eax,%ebp,4)
mov    0x18(%esp),%eax
mov    0x1c(%eax),%edx
jmp    80533dc <__sprintf_chk@plt+0x94cc>
nop
xor    %edx,%edx
testb  $0x40,0x80739ac
je     805346c <__sprintf_chk@plt+0x955c>
cmp    %ecx,%eax
je     8053451 <__sprintf_chk@plt+0x9541>
test   %eax,%eax
je     8053451 <__sprintf_chk@plt+0x9541>
cmp    $0x5f,%eax
je     80534a4 <__sprintf_chk@plt+0x9594>
mov    %eax,(%esp)
call   8049c60 <iswalnum@plt>
test   %eax,%eax
je     80534a7 <__sprintf_chk@plt+0x9597>
shr    $0x4,%edi
and    $0xf,%edi
xor    %eax,%eax
jmp    805345b <__sprintf_chk@plt+0x954b>
xchg   %ax,%ax
xor    %eax,%eax
testb  $0x40,0x80739ac
je     80533ce <__sprintf_chk@plt+0x94be>
mov    0x24(%esp),%eax
cmp    %edx,%eax
mov    %eax,%esi
je     80532eb <__sprintf_chk@plt+0x93db>
test   %eax,%eax
je     80532eb <__sprintf_chk@plt+0x93db>
cmp    $0x5f,%eax
je     80534e6 <__sprintf_chk@plt+0x95d6>
mov    %eax,(%esp)
call   8049c60 <iswalnum@plt>
test   %eax,%eax
je     80534e9 <__sprintf_chk@plt+0x95d9>
shr    $0x4,%edi
and    $0xf,%edi
xor    %eax,%eax
jmp    80532f5 <__sprintf_chk@plt+0x93e5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%esi
mov    0x3c(%esp),%eax
add    0x50(%esi),%eax
mov    %eax,0x18(%esp)
mov    0x30(%esp),%eax
add    0x807352c,%eax
mov    0x38(%esp),%esi
movl   $0x80,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8049cc0 <__strncpy_chk@plt>
mov    0x28(%ebx),%eax
movb   $0x0,0x5c(%esp,%esi,1)
test   %eax,%eax
mov    %eax,0x34(%esp)
je     80535c0 <__sprintf_chk@plt+0x96b0>
mov    0x24(%ebx),%eax
xor    %edi,%edi
mov    %ebp,0x48(%esp)
mov    %ebx,0x4c(%esp)
mov    %eax,%ebp
jmp    8053561 <__sprintf_chk@plt+0x9651>
xchg   %ax,%ax
add    $0x1,%edi
cmp    0x34(%esp),%edi
je     80535b8 <__sprintf_chk@plt+0x96a8>
mov    0x0(%ebp,%edi,4),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
movl   $0x80,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049cc0 <__strncpy_chk@plt>
lea    0x5c(%esp),%eax
movb   $0x0,0x5c(%esp,%esi,1)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049a80 <strcoll@plt>
test   %eax,%eax
jne    8053558 <__sprintf_chk@plt+0x9648>
mov    0x48(%esp),%ebp
mov    %esi,0x38(%esp)
jmp    80533c1 <__sprintf_chk@plt+0x94b1>
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebp
mov    0x4c(%esp),%ebx
mov    0x30(%ebx),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8053640 <__sprintf_chk@plt+0x9730>
mov    0x2c(%ebx),%eax
xor    %edi,%edi
mov    %ebp,0x48(%esp)
mov    %ebx,0x4c(%esp)
mov    %eax,%ebp
jmp    80535e9 <__sprintf_chk@plt+0x96d9>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    0x34(%esp),%edi
je     8053638 <__sprintf_chk@plt+0x9728>
mov    0x0(%ebp,%edi,4),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
movl   $0x80,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049cc0 <__strncpy_chk@plt>
lea    0x5c(%esp),%eax
movb   $0x0,0x5c(%esp,%esi,1)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049a80 <strcoll@plt>
test   %eax,%eax
jne    80535e0 <__sprintf_chk@plt+0x96d0>
jmp    80535a8 <__sprintf_chk@plt+0x9698>
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebp
mov    0x4c(%esp),%ebx
mov    0x20(%ebx),%edx
test   %edx,%edx
je     8053668 <__sprintf_chk@plt+0x9758>
mov    0x18(%ebx),%ecx
xor    %eax,%eax
mov    0x24(%esp),%esi
cmp    (%ecx,%eax,4),%esi
jl     8053661 <__sprintf_chk@plt+0x9751>
mov    0x1c(%ebx),%edi
cmp    (%edi,%eax,4),%esi
jle    80533c1 <__sprintf_chk@plt+0x94b1>
add    $0x1,%eax
cmp    %edx,%eax
jne    8053650 <__sprintf_chk@plt+0x9740>
mov    0xc(%ebx),%edx
test   %edx,%edx
je     8053698 <__sprintf_chk@plt+0x9788>
mov    0x8(%ebx),%ecx
mov    0x24(%esp),%ebx
cmp    (%ecx),%ebx
je     80533c1 <__sprintf_chk@plt+0x94b1>
xor    %eax,%eax
jmp    8053691 <__sprintf_chk@plt+0x9781>
lea    0x0(%esi),%esi
cmp    (%ecx,%eax,4),%ebx
je     80533c1 <__sprintf_chk@plt+0x94b1>
add    $0x1,%eax
cmp    %edx,%eax
jne    8053688 <__sprintf_chk@plt+0x9778>
movzbl 0x47(%esp),%eax
xor    $0x1,%eax
movzbl %al,%eax
mov    %eax,0x40(%esp)
jmp    80533c1 <__sprintf_chk@plt+0x94b1>
call   80498f0 <__stack_chk_fail@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80739b0,%edx
movl   $0x0,0x4(%esp)
mov    0xc(%edx),%ebp
mov    -0x4(%ebp,%eax,4),%edx
cmp    $0x108,%edx
jl     8053a10 <__sprintf_chk@plt+0x9b00>
cmp    $0x10a,%edx
jle    8053a20 <__sprintf_chk@plt+0x9b10>
sub    $0x10c,%edx
cmp    $0x1,%edx
ja     8053a10 <__sprintf_chk@plt+0x9b00>
sub    $0x1,%eax
mov    %eax,0x20(%esp)
mov    %eax,%edx
movl   $0x0,0x8(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     80539e0 <__sprintf_chk@plt+0x9ad0>
cmp    $0x10a,%eax
jle    8053a30 <__sprintf_chk@plt+0x9b20>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80539e0 <__sprintf_chk@plt+0x9ad0>
lea    -0x1(%edx),%eax
mov    %eax,0x24(%esp)
mov    %eax,%edx
movl   $0x0,0xc(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     80539b8 <__sprintf_chk@plt+0x9aa8>
cmp    $0x10a,%eax
jle    8053a40 <__sprintf_chk@plt+0x9b30>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80539b8 <__sprintf_chk@plt+0x9aa8>
lea    -0x1(%edx),%eax
mov    %eax,0x28(%esp)
mov    %eax,%edx
movl   $0x0,0x10(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     8053990 <__sprintf_chk@plt+0x9a80>
cmp    $0x10a,%eax
jle    8053a50 <__sprintf_chk@plt+0x9b40>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8053990 <__sprintf_chk@plt+0x9a80>
lea    -0x1(%edx),%eax
mov    %ebp,%edi
mov    %eax,0x2c(%esp)
mov    %eax,%edx
movl   $0x0,0x14(%esp)
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jl     8053960 <__sprintf_chk@plt+0x9a50>
cmp    $0x10a,%eax
jle    8053a60 <__sprintf_chk@plt+0x9b50>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8053960 <__sprintf_chk@plt+0x9a50>
lea    -0x1(%edx),%eax
mov    %eax,0x30(%esp)
mov    %eax,%ebp
movl   $0x0,0x18(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jl     8053938 <__sprintf_chk@plt+0x9a28>
cmp    $0x10a,%eax
jle    8053a70 <__sprintf_chk@plt+0x9b60>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8053938 <__sprintf_chk@plt+0x9a28>
lea    -0x1(%ebp),%eax
mov    %eax,0x34(%esp)
mov    %eax,%ebp
movl   $0x0,0x1c(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jl     8053910 <__sprintf_chk@plt+0x9a00>
cmp    $0x10a,%eax
jle    8053a80 <__sprintf_chk@plt+0x9b70>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8053910 <__sprintf_chk@plt+0x9a00>
sub    $0x1,%ebp
xor    %ebx,%ebx
mov    %ebp,%edx
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jl     80538f0 <__sprintf_chk@plt+0x99e0>
cmp    $0x10a,%eax
jle    8053a90 <__sprintf_chk@plt+0x9b80>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80538f0 <__sprintf_chk@plt+0x99e0>
sub    $0x1,%edx
xor    %esi,%esi
mov    %edx,%ecx
mov    -0x4(%edi,%ecx,4),%eax
cmp    $0x108,%eax
jl     80538d8 <__sprintf_chk@plt+0x99c8>
cmp    $0x10a,%eax
jle    8053aa0 <__sprintf_chk@plt+0x9b90>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80538d8 <__sprintf_chk@plt+0x99c8>
sub    $0x1,%ecx
mov    %ecx,%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   80536c0 <__sprintf_chk@plt+0x97b0>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%edx
sub    %eax,%ecx
lea    0x1(%esi,%eax,1),%esi
mov    -0x4(%edi,%ecx,4),%eax
cmp    $0x108,%eax
jge    8053898 <__sprintf_chk@plt+0x9988>
add    $0x1,%esi
sub    %esi,%edx
mov    -0x4(%edi,%edx,4),%eax
lea    0x1(%ebx,%esi,1),%ebx
cmp    $0x108,%eax
jge    8053871 <__sprintf_chk@plt+0x9961>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
add    $0x1,%ebx
sub    %ebx,%ebp
lea    0x1(%eax,%ebx,1),%eax
mov    %eax,0x1c(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jge    8053842 <__sprintf_chk@plt+0x9932>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%esi
mov    0x34(%esp),%ebp
add    $0x1,%eax
sub    %eax,%ebp
lea    0x1(%esi,%eax,1),%eax
mov    %eax,0x18(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jge    8053809 <__sprintf_chk@plt+0x98f9>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
mov    0x30(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0x14(%esp)
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jge    80537d0 <__sprintf_chk@plt+0x98c0>
mov    0x14(%esp),%eax
mov    %edi,%ebp
mov    0x10(%esp),%ebx
mov    0x2c(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,0x10(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    8053795 <__sprintf_chk@plt+0x9885>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x28(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0xc(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    805375c <__sprintf_chk@plt+0x984c>
mov    0xc(%esp),%eax
mov    0x8(%esp),%ebx
mov    0x24(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,0x8(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    8053723 <__sprintf_chk@plt+0x9813>
mov    0x8(%esp),%edx
mov    0x20(%esp),%eax
mov    0x4(%esp),%esi
add    $0x1,%edx
sub    %edx,%eax
lea    0x1(%esi,%edx,1),%esi
mov    -0x4(%ebp,%eax,4),%edx
mov    %esi,0x4(%esp)
cmp    $0x108,%edx
jge    80536e8 <__sprintf_chk@plt+0x97d8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
add    $0x1,%eax
pop    %ebp
ret
nop
sub    $0x1,%eax
addl   $0x1,0x4(%esp)
jmp    80536d8 <__sprintf_chk@plt+0x97c8>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x8(%esp)
jmp    8053714 <__sprintf_chk@plt+0x9804>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0xc(%esp)
jmp    805374d <__sprintf_chk@plt+0x983d>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x10(%esp)
jmp    8053786 <__sprintf_chk@plt+0x9876>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x14(%esp)
jmp    80537c1 <__sprintf_chk@plt+0x98b1>
lea    0x0(%esi),%esi
sub    $0x1,%ebp
addl   $0x1,0x18(%esp)
jmp    80537fa <__sprintf_chk@plt+0x98ea>
lea    0x0(%esi),%esi
sub    $0x1,%ebp
addl   $0x1,0x1c(%esp)
jmp    8053833 <__sprintf_chk@plt+0x9923>
lea    0x0(%esi),%esi
sub    $0x1,%edx
add    $0x1,%ebx
jmp    8053862 <__sprintf_chk@plt+0x9952>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ecx
add    $0x1,%esi
jmp    805388d <__sprintf_chk@plt+0x997d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xbc(%esp)
xor    %eax,%eax
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80544d5 <__sprintf_chk@plt+0xa5c5>
mov    0x80739b0,%ebx
mov    0x48(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x4c(%ebx)
ja     8053b34 <__sprintf_chk@plt+0x9c24>
mov    0x44(%ebx),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
jne    8054583 <__sprintf_chk@plt+0xa673>
cmp    $0x3483482,%esi
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%edx
shr    %edx
add    %edx,%esi
imul   $0x34,%esi,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x44(%ebx)
mov    0x80739b0,%ebx
mov    0x48(%ebx),%edx
mov    %esi,0x4c(%ebx)
lea    0x1(%edx),%eax
imul   $0x34,%edx,%edx
mov    0x44(%ebx),%ecx
mov    %eax,0x48(%ebx)
lea    (%ecx,%edx,1),%eax
mov    $0x34,%edx
test   $0x1,%al
mov    %eax,%edi
mov    %eax,0x20(%esp)
jne    8054621 <__sprintf_chk@plt+0xa711>
test   $0x2,%edi
jne    805462e <__sprintf_chk@plt+0xa71e>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    8053d98 <__sprintf_chk@plt+0x9e88>
and    $0x1,%edx
jne    8053d90 <__sprintf_chk@plt+0x9e80>
xor    %eax,%eax
movl   $0x0,0x58(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     8053b7c <__sprintf_chk@plt+0x9c6c>
mov    0x8073558,%esi
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
lea    0x78(%esp),%ebx
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80544ae <__sprintf_chk@plt+0xa59e>
lea    (%edi,%eax,1),%edx
sub    %eax,%esi
mov    0x78(%esp),%eax
mov    %edx,0x807355c
mov    %esi,0x8073558
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,%ebp
cmp    $0x5e,%ebp
movl   $0x0,0x40(%esp)
je     8054446 <__sprintf_chk@plt+0xa536>
xor    %eax,%eax
cmp    $0x3a,%ebp
sete   %al
mov    %eax,%edi
movl   $0x0,0x4c(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x3c(%esp)
and    $0xfffffffd,%edi
cmp    $0x5b,%ebp
mov    %edi,0x28(%esp)
je     8053e10 <__sprintf_chk@plt+0x9f00>
cmp    $0x5c,%ebp
mov    0x8073558,%esi
je     8053e28 <__sprintf_chk@plt+0x9f18>
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80545d7 <__sprintf_chk@plt+0xa6c7>
sub    %eax,%esi
add    %eax,%edi
mov    %esi,0x8073558
mov    0x78(%esp),%esi
mov    %edi,0x807355c
mov    %esi,(%esp)
call   8049bd0 <wctob@plt>
mov    0x2c(%esp),%ecx
mov    %ebp,0x38(%esp)
mov    %eax,%ebp
mov    %esi,0x2c(%esp)
mov    %ecx,0x24(%esp)
cmp    $0x2d,%ebp
je     8053e98 <__sprintf_chk@plt+0x9f88>
xor    %eax,%eax
cmpl   $0x3a,0x38(%esp)
setne  %al
lea    0x2(%eax,%eax,1),%edi
or     0x28(%esp),%edi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     80546b9 <__sprintf_chk@plt+0xa7a9>
mov    0x80739a4,%edx
test   %edx,%edx
je     8053cfe <__sprintf_chk@plt+0x9dee>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049920 <iswalpha@plt>
test   %eax,%eax
jne    80544e2 <__sprintf_chk@plt+0xa5d2>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049bd0 <wctob@plt>
cmp    $0xffffffff,%eax
je     805463f <__sprintf_chk@plt+0xa72f>
mov    %eax,%esi
mov    $0x1,%edx
shr    $0x5,%esi
mov    %eax,%ecx
shl    %cl,%edx
or     %edx,0x58(%esp,%esi,4)
cmp    $0x5d,%ebp
jne    8053c37 <__sprintf_chk@plt+0x9d27>
cmp    $0x7,%edi
je     80549ac <__sprintf_chk@plt+0xaa9c>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
nop
jbe    8054940 <__sprintf_chk@plt+0xaa30>
mov    0x20(%esp),%eax
mov    0x40(%esp),%ecx
mov    %ecx,0x4(%eax)
lea    0x58(%esp),%eax
movl   $0x20,0x8(%esp)
movl   $0x8073500,0x4(%esp)
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
mov    $0xffffffff,%edx
test   %eax,%eax
je     8053d81 <__sprintf_chk@plt+0x9e71>
lea    0x58(%esp),%eax
call   8052d60 <__sprintf_chk@plt+0x8e50>
mov    %eax,%edx
mov    0x20(%esp),%eax
mov    %edx,(%eax)
mov    $0x111,%eax
jmp    8053deb <__sprintf_chk@plt+0x9edb>
xchg   %ax,%ax
movb   $0x0,(%edi)
jmp    8053b7a <__sprintf_chk@plt+0x9c6a>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8053b7a <__sprintf_chk@plt+0x9c6a>
jmp    8053d90 <__sprintf_chk@plt+0x9e80>
movb   $0x0,0x98(%esp,%esi,1)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806d2c2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
test   %eax,%eax
jne    8054b5f <__sprintf_chk@plt+0xac4f>
movl   $0xffffffff,0x8073554
ff
mov    $0xffffffff,%eax
mov    0xbc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8054b9a <__sprintf_chk@plt+0xac8a>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
testb  $0x4,0x80739ac
jne    8054118 <__sprintf_chk@plt+0xa208>
mov    0x8073558,%esi
jmp    8053c56 <__sprintf_chk@plt+0x9d46>
testb  $0x1,0x80739ac
je     8053c56 <__sprintf_chk@plt+0x9d46>
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    8054736 <__sprintf_chk@plt+0xa826>
sub    %eax,%esi
add    %eax,%edi
mov    0x78(%esp),%eax
mov    %esi,0x8073558
mov    %edi,0x807355c
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049bd0 <wctob@plt>
mov    0x8073558,%esi
mov    %eax,%ebp
jmp    8053c56 <__sprintf_chk@plt+0x9d46>
lea    0x0(%esi),%esi
mov    0x8073558,%esi
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80545fc <__sprintf_chk@plt+0xa6ec>
add    %eax,%edi
sub    %eax,%esi
mov    %edi,0x807355c
mov    0x78(%esp),%edi
mov    %esi,0x8073558
mov    %edi,(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,%esi
cmp    $0x5d,%esi
je     805459a <__sprintf_chk@plt+0xa68a>
cmp    $0x5c,%esi
jne    8053f5d <__sprintf_chk@plt+0xa04d>
testb  $0x1,0x80739ac
je     8053f5d <__sprintf_chk@plt+0xa04d>
mov    0x8073558,%esi
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    805475d <__sprintf_chk@plt+0xa84d>
add    %eax,%edi
sub    %eax,%esi
mov    %edi,0x807355c
mov    0x78(%esp),%edi
mov    %esi,0x8073558
mov    %edi,(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8054330 <__sprintf_chk@plt+0xa420>
mov    0x20(%esp),%eax
mov    0x20(%eax),%ebp
lea    0x1(%ebp),%esi
cmp    %esi,0x30(%esp)
ja     8053fd2 <__sprintf_chk@plt+0xa0c2>
mov    0x18(%eax),%eax
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ebp,%ecx
test   %dl,%dl
lea    0x1(%ecx),%esi
mov    %esi,0x30(%esp)
jne    8054782 <__sprintf_chk@plt+0xa872>
cmpl   $0x2aaaaaa9,0x30(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
lea    0x2(%ecx),%edx
shr    %edx
add    %edx,0x30(%esp)
mov    0x30(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0x20(%ecx),%ebp
mov    %eax,0x18(%ecx)
lea    0x1(%ebp),%esi
cmp    %esi,0x34(%esp)
mov    0x20(%esp),%eax
jbe    8054098 <__sprintf_chk@plt+0xa188>
mov    0x1c(%eax),%ecx
mov    0x18(%eax),%edx
shl    $0x2,%ebp
mov    0x80739a4,%eax
add    %ebp,%edx
test   %eax,%eax
je     8054100 <__sprintf_chk@plt+0xa1f0>
mov    0x24(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   8049850 <towlower@plt>
mov    0x2c(%esp),%edx
mov    0x38(%esp),%ecx
add    %ecx,%ebp
mov    %eax,(%edx)
mov    0x20(%esp),%eax
mov    %esi,0x20(%eax)
mov    %edi,(%esp)
call   8049850 <towlower@plt>
mov    %eax,0x0(%ebp)
mov    0x8073558,%esi
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80545b0 <__sprintf_chk@plt+0xa6a0>
add    %eax,%edi
sub    %eax,%esi
mov    0x78(%esp),%eax
mov    %edi,0x807355c
mov    %esi,0x8073558
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,%ebp
mov    0x28(%esp),%edi
or     $0x8,%edi
jmp    8053d25 <__sprintf_chk@plt+0x9e15>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%eax),%eax
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ebp,%ecx
test   %dl,%dl
lea    0x1(%ecx),%esi
mov    %esi,0x34(%esp)
jne    8054796 <__sprintf_chk@plt+0xa886>
cmpl   $0x2aaaaaa9,0x34(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
lea    0x2(%ecx),%edx
shr    %edx
add    %edx,0x34(%esp)
mov    0x34(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0x20(%ecx),%ebp
mov    %eax,0x1c(%ecx)
mov    %eax,%ecx
mov    0x20(%esp),%eax
lea    0x1(%ebp),%esi
jmp    8053fe3 <__sprintf_chk@plt+0xa0d3>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
add    %ecx,%ebp
mov    %eax,(%edx)
mov    0x20(%esp),%eax
mov    %esi,0x20(%eax)
mov    %edi,%eax
jmp    8054027 <__sprintf_chk@plt+0xa117>
xchg   %ax,%ax
mov    0x8073558,%esi
test   %esi,%esi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80546fe <__sprintf_chk@plt+0xa7ee>
sub    %eax,%esi
add    %eax,%edi
mov    %esi,0x8073558
mov    0x78(%esp),%esi
mov    %edi,0x807355c
mov    %esi,(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,0x24(%esp)
cmpl   $0x3a,0x24(%esp)
je     8054191 <__sprintf_chk@plt+0xa281>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80546d6 <__sprintf_chk@plt+0xa7c6>
cmpl   $0x3d,0x24(%esp)
jne    80546cb <__sprintf_chk@plt+0xa7bb>
mov    0x8073558,%ebp
test   %ebp,%ebp
je     8053db8 <__sprintf_chk@plt+0x9ea8>
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0x807355c,%edi
movl   $0x807353c,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    8054308 <__sprintf_chk@plt+0xa3f8>
add    %eax,0x807355c
sub    %eax,0x8073558
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8049bd0 <wctob@plt>
mov    0x8073558,%ebp
cmp    0x24(%esp),%eax
je     8054220 <__sprintf_chk@plt+0xa310>
test   %ebp,%ebp
je     8053dac <__sprintf_chk@plt+0x9e9c>
cmp    $0x1f,%esi
ja     8054210 <__sprintf_chk@plt+0xa300>
mov    %al,0x98(%esp,%esi,1)
add    $0x1,%esi
jmp    80541a8 <__sprintf_chk@plt+0xa298>
movb   $0x0,0x98(%esp)
jmp    80541a8 <__sprintf_chk@plt+0xa298>
lea    0x0(%esi),%esi
mov    0x807355c,%edx
cmpb   $0x5d,(%edx)
jne    80541f7 <__sprintf_chk@plt+0xa2e7>
test   %ebp,%ebp
movb   $0x0,0x98(%esp,%esi,1)
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    %edx,0x4(%esp)
movl   $0x807353c,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x2c(%esp)
call   8049a40 <mbrtowc@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x8073244
jle    80548af <__sprintf_chk@plt+0xa99f>
add    %eax,%edx
sub    %eax,%ebp
mov    0x78(%esp),%eax
mov    %edx,0x807355c
mov    %ebp,0x8073558
mov    %eax,(%esp)
call   8049bd0 <wctob@plt>
cmpl   $0x3a,0x24(%esp)
je     80547aa <__sprintf_chk@plt+0xa89a>
mov    0x24(%esp),%eax
cmp    $0x3d,%eax
sete   %dl
cmp    $0x2e,%eax
sete   %cl
je     80542a9 <__sprintf_chk@plt+0xa399>
test   %dl,%dl
je     805402a <__sprintf_chk@plt+0xa11a>
add    $0x1,%esi
lea    0x98(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x24(%esp)
call   80643f0 <__sprintf_chk@plt+0x1a4e0>
mov    0x24(%esp),%edx
mov    0x2c(%esp),%ecx
test   %dl,%dl
mov    %eax,%esi
jne    80549e7 <__sprintf_chk@plt+0xaad7>
test   %cl,%cl
je     805402a <__sprintf_chk@plt+0xa11a>
mov    0x20(%esp),%eax
mov    0x30(%eax),%edx
lea    0x1(%edx),%ecx
cmp    %ecx,0x4c(%esp)
jbe    8054abf <__sprintf_chk@plt+0xabaf>
mov    0x2c(%eax),%eax
mov    0x20(%esp),%edi
mov    %ecx,0x30(%edi)
mov    %esi,(%eax,%edx,4)
jmp    805402a <__sprintf_chk@plt+0xa11a>
nop
lea    0x1(%edi),%eax
sub    $0x1,%ebp
mov    %eax,0x807355c
movzbl (%edi),%eax
movl   $0x1,0x8073244
00
mov    %ebp,0x8073558
jmp    80541f1 <__sprintf_chk@plt+0xa2e1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80739a4,%edi
movb   $0x5b,0x98(%esp)
movb   $0x0,0x99(%esp)
movb   $0x2d,0x9a(%esp)
test   %edi,%edi
movb   $0x0,0x9b(%esp)
movb   $0x5d,0x9c(%esp)
movb   $0x0,0x9d(%esp)
movb   $0x0,0x54(%esp)
movb   $0x0,0x55(%esp)
je     80543a5 <__sprintf_chk@plt+0xa495>
mov    0x38(%esp),%eax
sub    $0xffffff80,%eax
cmp    $0x17f,%eax
ja     8054394 <__sprintf_chk@plt+0xa484>
call   8049ed0 <__ctype_tolower_loc@plt>
mov    0x38(%esp),%ecx
mov    (%eax),%eax
mov    (%eax,%ecx,4),%eax
mov    %eax,0x38(%esp)
lea    0x80(%esi),%eax
cmp    $0x17f,%eax
jbe    8054727 <__sprintf_chk@plt+0xa817>
movzbl 0x38(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %ebx,(%esp)
mov    %al,0x99(%esp)
mov    %esi,%eax
xor    %esi,%esi
mov    %al,0x9b(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x4(%esp)
call   8049d60 <regcomp@plt>
nop
mov    0x80739a4,%ecx
test   %ecx,%ecx
je     80543f0 <__sprintf_chk@plt+0xa4e0>
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x1,0x1(%eax,%esi,2)
jne    805442e <__sprintf_chk@plt+0xa51e>
mov    %esi,%eax
mov    %al,0x54(%esp)
lea    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049cb0 <regexec@plt>
cmp    $0x1,%eax
je     805442e <__sprintf_chk@plt+0xa51e>
lea    0x58(%esp),%edx
mov    %esi,%eax
call   80530d0 <__sprintf_chk@plt+0x91c0>
add    $0x1,%esi
cmp    $0x100,%esi
jne    80543d8 <__sprintf_chk@plt+0xa4c8>
mov    %ebx,(%esp)
call   8049a00 <regfree@plt>
jmp    805402a <__sprintf_chk@plt+0xa11a>
mov    0x8073558,%edi
test   %edi,%edi
je     8053db8 <__sprintf_chk@plt+0x9ea8>
mov    0x807355c,%esi
movl   $0x807353c,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    8054889 <__sprintf_chk@plt+0xa979>
add    %eax,%esi
sub    %eax,%edi
mov    0x78(%esp),%eax
mov    %esi,0x807355c
mov    %edi,0x8073558
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049bd0 <wctob@plt>
mov    %eax,%ebp
movl   $0x1,0x40(%esp)
jmp    8053bfd <__sprintf_chk@plt+0x9ced>
movzbl (%edi),%ebp
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8073244
00
mov    %esi,0x8073558
mov    %eax,0x807355c
mov    %ebp,0x2c(%esp)
jmp    8053bec <__sprintf_chk@plt+0x9cdc>
movl   $0x0,0x20(%esp)
jmp    8053b7a <__sprintf_chk@plt+0x9c6a>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049850 <towlower@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   8049bd0 <wctob@plt>
cmp    $0xffffffff,%eax
jne    8053d13 <__sprintf_chk@plt+0x9e03>
mov    0x20(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
lea    0x1(%edx),%ecx
cmp    %ecx,0x3c(%esp)
mov    %eax,0x24(%esp)
ja     8054570 <__sprintf_chk@plt+0xa660>
test   %eax,%eax
sete   %al
movzbl %al,%ecx
add    %ecx,%edx
test   %al,%al
lea    0x1(%edx),%ecx
mov    %ecx,0x3c(%esp)
jne    80549d5 <__sprintf_chk@plt+0xaac5>
cmpl   $0x2aaaaaa9,0x3c(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%edx
shr    %edx
add    %edx,0x3c(%esp)
mov    0x3c(%esp),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0xc(%ecx),%edx
mov    %eax,0x8(%ecx)
mov    %eax,0x24(%esp)
lea    0x1(%edx),%ecx
mov    0x20(%esp),%eax
mov    %ecx,0xc(%eax)
mov    0x24(%esp),%eax
mov    %esi,(%eax,%edx,4)
jmp    8053d25 <__sprintf_chk@plt+0x9e15>
test   %esi,%esi
jne    8053b13 <__sprintf_chk@plt+0x9c03>
mov    $0x34,%edx
mov    $0x1,%esi
jmp    8053b16 <__sprintf_chk@plt+0x9c06>
mov    0x8073244,%eax
sub    %eax,0x807355c
add    %eax,0x8073558
jmp    8053cc0 <__sprintf_chk@plt+0x9db0>
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8073244
00
mov    %esi,0x8073558
mov    %eax,0x807355c
movzbl (%edi),%ebp
mov    %ebp,0x2c(%esp)
jmp    8054085 <__sprintf_chk@plt+0xa175>
lea    0x1(%edi),%eax
sub    $0x1,%esi
mov    %eax,0x807355c
movzbl (%edi),%eax
mov    %esi,0x8073558
movl   $0x1,0x8073244
00
mov    %eax,%esi
jmp    8053ca5 <__sprintf_chk@plt+0x9d95>
sub    $0x1,%esi
mov    %esi,0x8073558
movzbl (%edi),%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8073244
00
mov    %eax,0x807355c
mov    %esi,%edi
jmp    8053eef <__sprintf_chk@plt+0x9fdf>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x33,%dl
jmp    8053b53 <__sprintf_chk@plt+0x9c43>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    8053b5f <__sprintf_chk@plt+0x9c4f>
mov    0x20(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
lea    0x1(%edx),%ecx
cmp    %ecx,0x3c(%esp)
ja     80546a6 <__sprintf_chk@plt+0xa796>
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
mov    %esi,0x3c(%esp)
jne    80548e2 <__sprintf_chk@plt+0xa9d2>
cmpl   $0x2aaaaaa9,0x3c(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%edx
shr    %edx
add    %edx,0x3c(%esp)
mov    0x3c(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0xc(%ecx),%edx
mov    %eax,0x8(%ecx)
lea    0x1(%edx),%ecx
mov    0x20(%esp),%esi
mov    %ecx,0xc(%esi)
mov    0x24(%esp),%ecx
mov    %ecx,(%eax,%edx,4)
jmp    8053d25 <__sprintf_chk@plt+0x9e15>
mov    0x38(%esp),%eax
lea    0x58(%esp),%edx
call   80530d0 <__sprintf_chk@plt+0x91c0>
jmp    8053d25 <__sprintf_chk@plt+0x9e15>
cmpl   $0x2e,0x24(%esp)
je     8054191 <__sprintf_chk@plt+0xa281>
mov    0x24(%esp),%eax
cmp    $0xffffffff,%eax
je     8053e1d <__sprintf_chk@plt+0x9f0d>
mov    0x2c(%esp),%ecx
mov    %eax,%ebp
movl   $0x5b,0x38(%esp)
mov    %esi,0x2c(%esp)
mov    %ecx,0x24(%esp)
jmp    8053cb7 <__sprintf_chk@plt+0x9da7>
lea    0x1(%edi),%eax
sub    $0x1,%esi
mov    %eax,0x807355c
movzbl (%edi),%eax
mov    %esi,0x8073558
movl   $0x1,0x8073244
00
mov    %eax,0x24(%esp)
mov    %eax,%esi
jmp    8054171 <__sprintf_chk@plt+0xa261>
call   8049ed0 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%esi,4),%esi
jmp    80543a5 <__sprintf_chk@plt+0xa495>
movzbl (%edi),%ebp
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8073244
00
mov    %esi,0x8073558
mov    %eax,0x807355c
mov    %ebp,0x2c(%esp)
jmp    8053c56 <__sprintf_chk@plt+0x9d46>
sub    $0x1,%esi
mov    %esi,0x8073558
movzbl (%edi),%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8073244
00
mov    %eax,0x807355c
mov    %esi,%edi
jmp    8053f5d <__sprintf_chk@plt+0xa04d>
test   %esi,%esi
je     80548f2 <__sprintf_chk@plt+0xa9e2>
lea    0x0(,%esi,4),%edx
jmp    8053fb9 <__sprintf_chk@plt+0xa0a9>
test   %esi,%esi
je     80548d0 <__sprintf_chk@plt+0xa9c0>
lea    0x0(,%esi,4),%edx
jmp    80540d6 <__sprintf_chk@plt+0xa1c6>
mov    0x80739a4,%eax
test   %eax,%eax
je     8054904 <__sprintf_chk@plt+0xa9f4>
mov    $0x806d2cf,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80547e5 <__sprintf_chk@plt+0xa8d5>
mov    $0x806d2d5,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054904 <__sprintf_chk@plt+0xa9f4>
xor    %eax,%eax
mov    $0x806d2bc,%edi
xor    %esi,%esi
jmp    805480d <__sprintf_chk@plt+0xa8fd>
add    $0x1,%esi
lea    (%esi,%esi,2),%eax
mov    0x806d220(,%eax,4),%eax
test   %eax,%eax
je     8054811 <__sprintf_chk@plt+0xa901>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    80547f0 <__sprintf_chk@plt+0xa8e0>
lea    (%esi,%esi,2),%eax
lea    0x806d220(,%eax,4),%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805482b <__sprintf_chk@plt+0xa91b>
cmpb   $0x0,0x8(%esi)
je     8054856 <__sprintf_chk@plt+0xa946>
xor    %edi,%edi
jmp    805483f <__sprintf_chk@plt+0xa92f>
nop
add    $0x1,%edi
cmp    $0x100,%edi
je     805402a <__sprintf_chk@plt+0xa11a>
mov    %edi,(%esp)
call   *0x4(%esi)
test   %eax,%eax
je     8054830 <__sprintf_chk@plt+0xa920>
lea    0x58(%esp),%edx
mov    %edi,%eax
call   80530d0 <__sprintf_chk@plt+0x91c0>
jmp    8054830 <__sprintf_chk@plt+0xa920>
mov    %edi,(%esp)
call   8049810 <wctype@plt>
mov    0x20(%esp),%ecx
mov    %eax,%ebp
mov    0x20(%esp),%eax
mov    0x14(%eax),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x44(%esp)
jbe    8054a09 <__sprintf_chk@plt+0xaaf9>
mov    0x10(%ecx),%ecx
mov    %eax,%edi
mov    0x20(%esp),%eax
mov    %edx,0x14(%eax)
mov    %ebp,(%ecx,%edi,4)
jmp    805482b <__sprintf_chk@plt+0xa91b>
movzbl (%esi),%ebp
lea    -0x1(%edi),%eax
mov    %eax,0x8073558
lea    0x1(%esi),%eax
movl   $0x1,0x8073244
00
mov    %eax,0x807355c
mov    %ebp,0x2c(%esp)
jmp    80544a1 <__sprintf_chk@plt+0xa591>
sub    $0x1,%ebp
add    $0x1,%edx
movl   $0x1,0x8073244
00
mov    %ebp,0x8073558
mov    %edx,0x807355c
jmp    8054284 <__sprintf_chk@plt+0xa374>
mov    $0x40,%edx
movl   $0x10,0x34(%esp)
jmp    80540d6 <__sprintf_chk@plt+0xa1c6>
test   %esi,%esi
je     805492e <__sprintf_chk@plt+0xaa1e>
lea    0x0(,%esi,4),%edx
jmp    805468d <__sprintf_chk@plt+0xa77d>
mov    $0x40,%edx
movl   $0x10,0x30(%esp)
jmp    8053fb9 <__sprintf_chk@plt+0xa0a9>
mov    $0x806d2bc,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    0x98(%esp),%edi
seta   %al
setb   %dl
sub    %edx,%eax
movsbl %al,%eax
jmp    80547ec <__sprintf_chk@plt+0xa8dc>
mov    $0x40,%edx
movl   $0x10,0x3c(%esp)
jmp    805468d <__sprintf_chk@plt+0xa77d>
mov    0x40(%esp),%eax
test   %eax,%eax
je     8054999 <__sprintf_chk@plt+0xaa89>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jne    8054b3b <__sprintf_chk@plt+0xac2b>
testb  $0x1,0x80739ad
notl   0x58(%esp)
notl   0x5c(%esp)
notl   0x60(%esp)
notl   0x64(%esp)
notl   0x68(%esp)
notl   0x6c(%esp)
notl   0x70(%esp)
notl   0x74(%esp)
je     8054999 <__sprintf_chk@plt+0xaa89>
movzbl 0x80739a0,%ecx
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x3,%edx
and    $0x1c,%edx
shl    %cl,%eax
not    %eax
and    %eax,0x58(%esp,%edx,1)
lea    0x58(%esp),%eax
call   8052d60 <__sprintf_chk@plt+0x8e50>
add    $0x113,%eax
jmp    8053deb <__sprintf_chk@plt+0x9edb>
movl   $0x5,0x8(%esp)
movl   $0x806d3e4,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b070 <__sprintf_chk@plt+0x1160>
jmp    8053d37 <__sprintf_chk@plt+0x9e27>
test   %ecx,%ecx
je     8054b1b <__sprintf_chk@plt+0xac0b>
mov    %ecx,%eax
shl    $0x2,%eax
jmp    805454f <__sprintf_chk@plt+0xa63f>
mov    0x20(%esp),%eax
mov    0x28(%eax),%edx
lea    0x1(%edx),%ecx
cmp    %ecx,0x48(%esp)
jbe    8054a63 <__sprintf_chk@plt+0xab53>
mov    0x24(%eax),%eax
mov    0x20(%esp),%edi
mov    %ecx,0x28(%edi)
mov    %esi,(%eax,%edx,4)
jmp    805402a <__sprintf_chk@plt+0xa11a>
mov    0x10(%ecx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%edi
add    %edi,%eax
test   %cl,%cl
lea    0x1(%eax),%edi
mov    %edi,0x44(%esp)
jne    8054b2d <__sprintf_chk@plt+0xac1d>
cmpl   $0x2aaaaaa9,0x44(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%eax
shr    %eax
add    %eax,0x44(%esp)
mov    0x44(%esp),%eax
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0x14(%ecx),%edi
mov    %eax,0x10(%ecx)
mov    %eax,%ecx
lea    0x1(%edi),%edx
jmp    805487d <__sprintf_chk@plt+0xa96d>
mov    0x24(%eax),%ecx
test   %ecx,%ecx
sete   %al
mov    %eax,%edi
movzbl %al,%eax
add    %edx,%eax
lea    0x1(%eax),%edx
mov    %edx,0x48(%esp)
mov    %edi,%edx
test   %dl,%dl
jne    8054b9f <__sprintf_chk@plt+0xac8f>
cmpl   $0x2aaaaaa9,0x48(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%eax
shr    %eax
add    %eax,0x48(%esp)
mov    0x48(%esp),%eax
shl    $0x2,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0x28(%ecx),%edx
mov    %eax,0x24(%ecx)
lea    0x1(%edx),%ecx
jmp    80549fa <__sprintf_chk@plt+0xaaea>
mov    0x2c(%eax),%ecx
test   %ecx,%ecx
sete   %al
mov    %eax,%edi
movzbl %al,%eax
add    %edx,%eax
lea    0x1(%eax),%edx
mov    %edx,0x4c(%esp)
mov    %edi,%edx
test   %dl,%dl
jne    8054bbd <__sprintf_chk@plt+0xacad>
cmpl   $0x2aaaaaa9,0x4c(%esp)
ja     8054b95 <__sprintf_chk@plt+0xac85>
add    $0x2,%eax
shr    %eax
add    %eax,0x4c(%esp)
mov    0x4c(%esp),%eax
shl    $0x2,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    0x30(%ecx),%edx
mov    %eax,0x2c(%ecx)
lea    0x1(%edx),%ecx
jmp    80542f8 <__sprintf_chk@plt+0xa3e8>
mov    $0x40,%eax
movl   $0x10,0x3c(%esp)
jmp    805454f <__sprintf_chk@plt+0xa63f>
test   %edi,%edi
je     8054b83 <__sprintf_chk@plt+0xac73>
mov    %edi,%eax
shl    $0x2,%eax
jmp    8054a43 <__sprintf_chk@plt+0xab33>
movl   $0x806d200,0xc(%esp)
movl   $0x4a3,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d41c,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d2c2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
mov    $0x40,%eax
movl   $0x10,0x44(%esp)
jmp    8054a43 <__sprintf_chk@plt+0xab33>
call   8064470 <__sprintf_chk@plt+0x1a560>
call   80498f0 <__stack_chk_fail@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8054a9a <__sprintf_chk@plt+0xab8a>
mov    $0x40,%eax
movl   $0x10,0x48(%esp)
jmp    8054aa1 <__sprintf_chk@plt+0xab91>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    8054af6 <__sprintf_chk@plt+0xabe6>
mov    $0x40,%eax
movl   $0x10,0x4c(%esp)
jmp    8054afd <__sprintf_chk@plt+0xabed>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    $0x2,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
lea    0x20(%esp),%ebx
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x8073558,%esi
cmp    $0x1,%eax
jbe    8054c80 <__sprintf_chk@plt+0xad70>
test   %esi,%esi
je     8055288 <__sprintf_chk@plt+0xb378>
mov    0x807355c,%edx
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x10(%esp)
call   8049a40 <mbrtowc@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,0x8073244
jle    8054ce0 <__sprintf_chk@plt+0xadd0>
add    %eax,%edx
sub    %eax,%esi
mov    0x20(%esp),%eax
mov    %edx,0x807355c
mov    %esi,0x8073558
mov    %eax,(%esp)
mov    %eax,0x8073538
call   8049bd0 <wctob@plt>
cmp    $0xffffffff,%eax
je     8055280 <__sprintf_chk@plt+0xb370>
lea    -0xa(%eax),%edx
cmp    $0x72,%edx
ja     8055280 <__sprintf_chk@plt+0xb370>
jmp    *0x806cf18(,%edx,4)
lea    0x0(%esi),%esi
test   %esi,%esi
je     8055288 <__sprintf_chk@plt+0xb378>
mov    0x807355c,%edx
movl   $0x807353c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x10(%esp)
call   8049a40 <mbrtowc@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,0x8073244
jle    80552c8 <__sprintf_chk@plt+0xb3b8>
add    %eax,%edx
sub    %eax,%esi
mov    0x20(%esp),%eax
mov    %edx,0x807355c
mov    %esi,0x8073558
mov    %eax,(%esp)
call   8049bd0 <wctob@plt>
jmp    8054c67 <__sprintf_chk@plt+0xad57>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
sub    $0x1,%esi
mov    %eax,0x807355c
movzbl (%edx),%eax
movl   $0x1,0x8073244
00
mov    %esi,0x8073558
mov    %eax,0x8073538
jmp    8054c67 <__sprintf_chk@plt+0xad57>
mov    %eax,%esi
mov    0x80739ac,%eax
test   $0x4,%ah
jne    8054d28 <__sprintf_chk@plt+0xae18>
shr    $0xf,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
je     8054d6d <__sprintf_chk@plt+0xae5d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8073550
00
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80552a0 <__sprintf_chk@plt+0xb390>
movl   $0x112,0x8073554
00
mov    $0x112,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,%esi
mov    0x80739ac,%eax
test   $0x4,%ah
jne    8054d28 <__sprintf_chk@plt+0xae18>
test   %ebp,%ebp
jne    8054d28 <__sprintf_chk@plt+0xae18>
test   $0x8,%ah
je     8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x1,0x8073550
00
mov    $0x10d,%eax
movl   $0x10d,0x8073554
00
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
test   %ebp,%ebp
mov    %eax,%esi
jne    8054d28 <__sprintf_chk@plt+0xae18>
mov    0x80739ac,%eax
test   $0x8,%al
je     805532e <__sprintf_chk@plt+0xb41e>
movl   $0x103,0x8073554
00
mov    $0x103,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
je     8054d9b <__sprintf_chk@plt+0xae8b>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
mov    %eax,%esi
mov    0x80739ac,%eax
shr    $0xd,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
jne    8054d28 <__sprintf_chk@plt+0xae18>
addl   $0x1,0x807354c
mov    $0x10e,%eax
movl   $0x1,0x8073550
00
movl   $0x10e,0x8073554
00
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi),%esi
mov    0x80739ac,%edx
mov    %eax,%esi
mov    %edx,%eax
shr    $0xd,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
jne    8054d28 <__sprintf_chk@plt+0xae18>
mov    0x807354c,%eax
test   %eax,%eax
je     80553ce <__sprintf_chk@plt+0xb4be>
sub    $0x1,%eax
mov    %eax,0x807354c
mov    $0x10f,%eax
movl   $0x0,0x8073550
00
movl   $0x10f,0x8073554
00
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
xchg   %ax,%ax
test   %ebp,%ebp
mov    %eax,%esi
jne    8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x10,0x80739ac
je     805531b <__sprintf_chk@plt+0xb40b>
movl   $0x109,0x8073554
00
mov    $0x109,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
mov    0x80739ac,%ebp
and    $0x80000,%ebp
jne    8054d28 <__sprintf_chk@plt+0xae18>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     80553df <__sprintf_chk@plt+0xb4cf>
cmp    $0x73,%esi
mov    $0x806d2e1,%edx
mov    0x807355c,%edi
mov    $0x806d2e2,%eax
mov    0x8073558,%ebx
cmovne %edx,%eax
mov    %eax,(%esp)
mov    %eax,0x807355c
call   8049b80 <strlen@plt>
mov    %eax,0x8073558
call   8053ab0 <__sprintf_chk@plt+0x9ba0>
mov    %edi,0x807355c
mov    %ebx,0x8073558
movl   $0x0,0x8073550
00
mov    %eax,0x8073554
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x104,0x8073554
00
mov    $0x104,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
jne    8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ac
je     8055388 <__sprintf_chk@plt+0xb478>
movl   $0x102,0x8073554
00
mov    $0x102,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
je     8054f4f <__sprintf_chk@plt+0xb03f>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
test   %ebp,%ebp
mov    %eax,%esi
jne    8054d28 <__sprintf_chk@plt+0xae18>
lea    0x0(%esi),%esi
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805558f <__sprintf_chk@plt+0xb67f>
movl   $0x0,0x8073550
00
mov    $0x110,%eax
movl   $0x110,0x8073554
00
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x40,0x80739ad
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x0,0x8073550
00
mov    $0x101,%eax
movl   $0x101,0x8073554
00
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi),%esi
mov    %eax,%esi
mov    0x80739ac,%eax
test   $0x4,%ah
jne    8054d28 <__sprintf_chk@plt+0xae18>
mov    %eax,%edx
shr    %edx
and    $0x1,%edx
cmp    %ebp,%edx
jne    8054d28 <__sprintf_chk@plt+0xae18>
test   $0x10,%al
je     80554dd <__sprintf_chk@plt+0xb5cd>
movl   $0x10a,0x8073554
00
mov    $0x10a,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    0x80739ac,%eax
test   $0x4,%ah
jne    8054d28 <__sprintf_chk@plt+0xae18>
mov    %eax,%edx
shr    %edx
and    $0x1,%edx
cmp    %ebp,%edx
jne    8054d28 <__sprintf_chk@plt+0xae18>
test   $0x10,%al
je     8055498 <__sprintf_chk@plt+0xb588>
movl   $0x108,0x8073554
00
mov    $0x108,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x0,0x8073550
00
call   8053ab0 <__sprintf_chk@plt+0x9ba0>
mov    %eax,0x8073554
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x105,0x8073554
00
mov    $0x105,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x107,0x8073554
00
mov    $0x107,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x106,0x8073554
00
mov    $0x106,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    0x80739ac,%eax
test   $0x2,%ah
mov    %eax,0x10(%esp)
je     8054d28 <__sprintf_chk@plt+0xae18>
mov    %eax,%edi
shr    $0xc,%edi
xor    $0x1,%edi
and    $0x1,%edi
cmp    %ebp,%edi
jne    8054d28 <__sprintf_chk@plt+0xae18>
test   $0x10,%al
jne    8055169 <__sprintf_chk@plt+0xb259>
mov    0x8073550,%edx
test   %edx,%edx
jne    8054d28 <__sprintf_chk@plt+0xae18>
mov    0x807355c,%eax
mov    0x8073558,%ecx
movl   $0xffffffff,0x8073544
ff
movl   $0xffffffff,0x8073548
ff
add    %eax,%ecx
cmp    %ecx,%eax
mov    %ecx,%ebp
mov    %ecx,0x14(%esp)
je     805544e <__sprintf_chk@plt+0xb53e>
movsbl (%eax),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x9,%edx
mov    %cl,0x18(%esp)
ja     80556dc <__sprintf_chk@plt+0xb7cc>
mov    $0xffffffff,%edx
mov    %esi,0x18(%esp)
mov    %edi,0x1c(%esp)
jmp    80551f6 <__sprintf_chk@plt+0xb2e6>
lea    0x0(%esi),%esi
lea    (%edx,%edx,4),%edx
lea    (%ecx,%edx,2),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x8030,%ecx
mov    $0x8000,%ecx
cmovg  %ecx,%edx
add    $0x1,%eax
cmp    %eax,%ebp
je     8055440 <__sprintf_chk@plt+0xb530>
movzbl (%eax),%esi
mov    %esi,%ecx
movsbl %cl,%ecx
lea    -0x30(%ecx),%edi
cmp    $0x9,%edi
ja     80554ab <__sprintf_chk@plt+0xb59b>
test   %edx,%edx
jns    80551c0 <__sprintf_chk@plt+0xb2b0>
lea    -0x30(%ecx),%edx
jmp    80551d7 <__sprintf_chk@plt+0xb2c7>
nop
test   %ebp,%ebp
mov    %eax,%esi
je     8054d28 <__sprintf_chk@plt+0xae18>
testb  $0x8,0x80739ae
jne    8054d28 <__sprintf_chk@plt+0xae18>
xor    %eax,%eax
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     8055219 <__sprintf_chk@plt+0xb309>
call   8049ef0 <__ctype_b_loc@plt>
mov    $0x1,%edi
xor    %ecx,%ecx
mov    (%eax),%edx
jmp    805524c <__sprintf_chk@plt+0xb33c>
cmp    $0x5f,%ecx
je     8055252 <__sprintf_chk@plt+0xb342>
add    $0x1,%ecx
cmp    $0x100,%ecx
je     80553a9 <__sprintf_chk@plt+0xb499>
testb  $0x8,(%edx,%ecx,2)
je     8055238 <__sprintf_chk@plt+0xb328>
mov    %ecx,%eax
mov    %edi,%ebp
shr    $0x5,%eax
shl    %cl,%ebp
or     %ebp,(%ebx,%eax,4)
jmp    805523d <__sprintf_chk@plt+0xb32d>
test   %ebp,%ebp
jne    8055280 <__sprintf_chk@plt+0xb370>
mov    0x8073558,%eax
test   %eax,%eax
je     80556f0 <__sprintf_chk@plt+0xb7e0>
sub    $0x1,%edi
jne    80556d2 <__sprintf_chk@plt+0xb7c2>
call   8049e60 <abort@plt>
nop
mov    %eax,%esi
jmp    8054d28 <__sprintf_chk@plt+0xae18>
nop
movl   $0xffffffff,0x8073554
ff
mov    $0xffffffff,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80739a4,%eax
test   %eax,%eax
je     80552b7 <__sprintf_chk@plt+0xb3a7>
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x4,0x1(%eax,%esi,2)
jne    80552eb <__sprintf_chk@plt+0xb3db>
mov    %esi,0x8073554
mov    %esi,%eax
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
sub    $0x1,%esi
mov    %eax,0x807355c
movzbl (%edx),%eax
movl   $0x1,0x8073244
00
mov    %esi,0x8073558
jmp    8054c67 <__sprintf_chk@plt+0xad57>
xor    %eax,%eax
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     80552ed <__sprintf_chk@plt+0xb3dd>
mov    %ebx,%edx
mov    %esi,%eax
call   80530d0 <__sprintf_chk@plt+0x91c0>
mov    %ebx,%eax
call   8052d60 <__sprintf_chk@plt+0x8e50>
add    $0x113,%eax
mov    %eax,0x8073554
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
mov    0x8073550,%edi
test   %edi,%edi
je     8054e6f <__sprintf_chk@plt+0xaf5f>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
mov    0x8073558,%edx
test   %edx,%edx
je     8054d9b <__sprintf_chk@plt+0xae8b>
test   $0x20,%ah
je     80554f0 <__sprintf_chk@plt+0xb5e0>
mov    0x807355c,%ecx
cmpb   $0x29,(%ecx)
je     8054d9b <__sprintf_chk@plt+0xae8b>
test   $0x80,%ah
je     8055656 <__sprintf_chk@plt+0xb746>
cmpb   $0x7c,(%ecx)
je     8054d9b <__sprintf_chk@plt+0xae8b>
test   $0x8,%ah
je     8054d28 <__sprintf_chk@plt+0xae18>
mov    0x807355c,%eax
cmpb   $0xa,(%eax)
jne    8054d28 <__sprintf_chk@plt+0xae18>
jmp    8054d9b <__sprintf_chk@plt+0xae8b>
lea    0x0(%esi),%esi
mov    0x8073554,%eax
cmp    $0xffffffff,%eax
je     8054f4f <__sprintf_chk@plt+0xb03f>
sub    $0x10d,%eax
cmp    $0x1,%eax
ja     8054d28 <__sprintf_chk@plt+0xae18>
jmp    8054f4f <__sprintf_chk@plt+0xb03f>
cmp    $0x57,%esi
je     805541b <__sprintf_chk@plt+0xb50b>
mov    %ebx,%eax
movl   $0x0,0x8073550
00
call   8052d60 <__sprintf_chk@plt+0x8e50>
add    $0x113,%eax
mov    %eax,0x8073554
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
and    $0x20000,%edx
je     8054e30 <__sprintf_chk@plt+0xaf20>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
mov    %ebp,%eax
mov    $0x8,%ecx
mov    %ebx,%edi
rep stos %eax,%es:(%edi)
mov    $0x1,%edi
call   8049ef0 <__ctype_b_loc@plt>
xor    %ecx,%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
je     805540b <__sprintf_chk@plt+0xb4fb>
mov    %ecx,%eax
mov    %edi,%ebp
shr    $0x5,%eax
shl    %cl,%ebp
or     %ebp,(%ebx,%eax,4)
add    $0x1,%ecx
cmp    $0x100,%ecx
jne    80553f8 <__sprintf_chk@plt+0xb4e8>
cmp    $0x53,%esi
jne    80553ae <__sprintf_chk@plt+0xb49e>
notl   0x20(%esp)
notl   0x24(%esp)
notl   0x28(%esp)
notl   0x2c(%esp)
notl   0x30(%esp)
notl   0x34(%esp)
notl   0x38(%esp)
notl   0x3c(%esp)
jmp    80553ae <__sprintf_chk@plt+0xb49e>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    %edx,0x8073548
test   %edi,%edi
jne    8055461 <__sprintf_chk@plt+0xb551>
cmp    0x14(%esp),%eax
je     8055461 <__sprintf_chk@plt+0xb551>
cmpb   $0x7d,(%eax)
je     80555fc <__sprintf_chk@plt+0xb6ec>
testl  $0x200000,0x10(%esp)
jne    8054d28 <__sprintf_chk@plt+0xae18>
movl   $0x5,0x8(%esp)
movl   $0x806d301,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073550,%ebp
test   %ebp,%ebp
je     805505f <__sprintf_chk@plt+0xb14f>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
mov    %esi,%ecx
mov    0x1c(%esp),%edi
cmp    $0x2c,%cl
mov    0x18(%esp),%esi
mov    %edx,0x8073548
je     8055529 <__sprintf_chk@plt+0xb619>
test   %edi,%edi
mov    %edx,0x8073544
je     8055452 <__sprintf_chk@plt+0xb542>
cmp    %eax,0x14(%esp)
je     8055461 <__sprintf_chk@plt+0xb551>
cmp    $0x5c,%cl
jne    8055461 <__sprintf_chk@plt+0xb551>
add    $0x1,%eax
jmp    8055452 <__sprintf_chk@plt+0xb542>
mov    0x8073550,%ecx
test   %ecx,%ecx
je     805501f <__sprintf_chk@plt+0xb10f>
jmp    8054d28 <__sprintf_chk@plt+0xae18>
cmp    $0x1,%edx
jbe    80556be <__sprintf_chk@plt+0xb7ae>
mov    0x807355c,%ecx
cmpb   $0x5c,(%ecx)
je     805568b <__sprintf_chk@plt+0xb77b>
test   $0x80,%ah
jne    805535d <__sprintf_chk@plt+0xb44d>
cmpb   $0x5c,(%ecx)
jne    8055366 <__sprintf_chk@plt+0xb456>
cmpb   $0x7c,0x1(%ecx)
jne    8055366 <__sprintf_chk@plt+0xb456>
jmp    8054d9b <__sprintf_chk@plt+0xae8b>
test   %edx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
js     805567c <__sprintf_chk@plt+0xb76c>
mov    0x8073544,%ebp
add    $0x1,%eax
cmp    0x14(%esp),%eax
je     8055580 <__sprintf_chk@plt+0xb670>
movzbl (%eax),%ecx
movsbl %cl,%edx
mov    %cl,0x18(%esp)
lea    -0x30(%edx),%ecx
cmp    $0x9,%ecx
ja     8055664 <__sprintf_chk@plt+0xb754>
test   %ebp,%ebp
js     805558b <__sprintf_chk@plt+0xb67b>
lea    0x0(%ebp,%ebp,4),%ecx
lea    (%edx,%ecx,2),%edx
mov    $0x8000,%ecx
cmp    $0x8030,%edx
lea    -0x30(%edx),%ebp
cmovg  %ecx,%ebp
add    $0x1,%eax
cmp    0x14(%esp),%eax
jne    8055545 <__sprintf_chk@plt+0xb635>
mov    %ebp,0x8073544
jmp    805544e <__sprintf_chk@plt+0xb53e>
mov    %ecx,%ebp
jmp    805553c <__sprintf_chk@plt+0xb62c>
mov    0x80739ac,%esi
mov    $0x8,%ecx
mov    %ebx,%edi
mov    %ebp,%eax
rep stos %eax,%es:(%edi)
test   $0x40,%esi
notl   0x20(%esp)
notl   0x24(%esp)
notl   0x28(%esp)
notl   0x2c(%esp)
notl   0x30(%esp)
notl   0x34(%esp)
notl   0x38(%esp)
notl   0x3c(%esp)
jne    80555e6 <__sprintf_chk@plt+0xb6d6>
movzbl 0x80739a0,%edx
mov    %edx,%eax
mov    %edx,%ecx
shr    $0x3,%eax
and    $0x1f,%ecx
and    $0x1c,%eax
mov    $0xfffffffe,%edx
rol    %cl,%edx
and    %edx,(%ebx,%eax,1)
and    $0x80,%esi
je     80553ae <__sprintf_chk@plt+0xb49e>
andl   $0xfffffffe,0x20(%esp)
jmp    80553ae <__sprintf_chk@plt+0xb49e>
mov    0x8073548,%ecx
test   %ecx,%ecx
js     8055461 <__sprintf_chk@plt+0xb551>
mov    0x8073544,%edx
test   %edx,%edx
js     8055624 <__sprintf_chk@plt+0xb714>
cmp    %edx,%ecx
jg     8055461 <__sprintf_chk@plt+0xb551>
cmp    $0x7fff,%edx
jg     805569a <__sprintf_chk@plt+0xb78a>
mov    0x14(%esp),%ebx
add    $0x1,%eax
mov    %eax,0x807355c
movl   $0x0,0x8073550
00
movl   $0x10b,0x8073554
00
sub    %eax,%ebx
mov    $0x10b,%eax
mov    %ebx,0x8073558
jmp    8054d4f <__sprintf_chk@plt+0xae3f>
cmp    $0x1,%edx
ja     8055511 <__sprintf_chk@plt+0xb601>
jmp    8055366 <__sprintf_chk@plt+0xb456>
test   %edi,%edi
mov    %ebp,0x8073544
je     8055458 <__sprintf_chk@plt+0xb548>
movzbl 0x18(%esp),%ecx
jmp    80554d0 <__sprintf_chk@plt+0xb5c0>
movl   $0x0,0x8073548
00
jmp    8055536 <__sprintf_chk@plt+0xb626>
cmpb   $0x29,0x1(%ecx)
jne    8055508 <__sprintf_chk@plt+0xb5f8>
jmp    8054d9b <__sprintf_chk@plt+0xae8b>
movl   $0x5,0x8(%esp)
movl   $0x806d319,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
test   $0x80,%ah
mov    0x807355c,%ecx
jne    805535d <__sprintf_chk@plt+0xb44d>
jmp    8055366 <__sprintf_chk@plt+0xb456>
mov    $0x1,%ebp
jmp    8054bf2 <__sprintf_chk@plt+0xace2>
cmpb   $0x2c,0x18(%esp)
je     805567c <__sprintf_chk@plt+0xb76c>
movzbl 0x18(%esp),%ecx
or     $0xffffffff,%edx
jmp    80554c0 <__sprintf_chk@plt+0xb5b0>
movl   $0x5,0x8(%esp)
movl   $0x806d2ed,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x10(%esp)
je     805576c <__sprintf_chk@plt+0xb85c>
test   %edx,%edx
mov    %edx,%esi
je     8055743 <__sprintf_chk@plt+0xb833>
mov    %edx,(%esp)
mov    %ecx,%edi
call   8049b80 <strlen@plt>
test   %eax,%eax
jne    8055770 <__sprintf_chk@plt+0xb860>
mov    0x10(%esp),%edx
mov    (%edx),%eax
lea    0x4(%edx),%ebx
mov    %edx,%esi
test   %eax,%eax
je     805576c <__sprintf_chk@plt+0xb85c>
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    8055752 <__sprintf_chk@plt+0xb842>
xor    %eax,%eax
jmp    80557e8 <__sprintf_chk@plt+0xb8d8>
lea    0x1(%eax),%ebp
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
test   %ebx,%ebx
je     8055743 <__sprintf_chk@plt+0xb833>
mov    0x10(%esp),%eax
movb   $0x0,(%ebx,%edi,1)
mov    (%eax),%edi
test   %edi,%edi
je     80558c5 <__sprintf_chk@plt+0xb9b5>
mov    %ebx,(%esp)
xor    %ebp,%ebp
call   8049b80 <strlen@plt>
mov    %eax,%esi
nop
cmpb   $0x0,(%edi)
jne    80557c8 <__sprintf_chk@plt+0xb8b8>
jmp    80557f0 <__sprintf_chk@plt+0xb8e0>
nop
add    $0x1,%edi
cmpb   $0x0,(%edi)
je     80557f0 <__sprintf_chk@plt+0xb8e0>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    80557c0 <__sprintf_chk@plt+0xb8b0>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    0x10(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%eax
add    $0x1,%ebp
mov    (%eax,%ebp,4),%edi
test   %edi,%edi
jne    80557b8 <__sprintf_chk@plt+0xb8a8>
mov    %ebp,0x18(%esp)
movl   $0x0,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%ecx
lea    (%eax,%ecx,4),%eax
mov    (%eax),%esi
mov    %eax,0x1c(%esp)
test   %esi,%esi
je     805588f <__sprintf_chk@plt+0xb97f>
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
cmpb   $0x0,(%ebx)
mov    %eax,%edi
je     8055888 <__sprintf_chk@plt+0xb978>
mov    %ebx,%ebp
jmp    8055841 <__sprintf_chk@plt+0xb931>
add    $0x1,%ebp
cmpb   $0x0,0x0(%ebp)
je     8055888 <__sprintf_chk@plt+0xb978>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    8055838 <__sprintf_chk@plt+0xb928>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    0x14(%esp),%eax
subl   $0x1,0x18(%esp)
cmp    %eax,0x18(%esp)
je     805588f <__sprintf_chk@plt+0xb97f>
mov    0x18(%esp),%edx
mov    0x10(%esp),%eax
mov    0x1c(%esp),%ecx
lea    (%eax,%edx,4),%eax
mov    (%eax),%edx
mov    %edx,(%ecx)
movl   $0x0,(%eax)
jmp    8055810 <__sprintf_chk@plt+0xb900>
nop
addl   $0x1,0x14(%esp)
jmp    8055810 <__sprintf_chk@plt+0xb900>
mov    0x18(%esp),%esi
add    $0x2,%esi
cmp    $0x3fffffff,%esi
ja     80558d2 <__sprintf_chk@plt+0xb9c2>
mov    0x10(%esp),%eax
shl    $0x2,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebx,-0x8(%eax,%esi,1)
movl   $0x0,-0x4(%eax,%esi,1)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x18(%esp)
jmp    8055802 <__sprintf_chk@plt+0xb8f2>
call   8064470 <__sprintf_chk@plt+0x1a560>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x4(%edx),%ebx
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
test   %ebx,%ebx
mov    %ebx,%edi
mov    %ebx,0xc(%esp)
je     8055c63 <__sprintf_chk@plt+0xbd53>
mov    (%edx),%esi
xor    %eax,%eax
xor    %edx,%edx
xor    %ebx,%ebx
lea    0x0(%esi),%esi
lea    (%esi,%edx,8),%ecx
add    $0x1,%eax
mov    0x4(%ecx),%edx
add    (%ecx),%edx
xor    %edx,%ebx
cmp    %edi,%eax
mov    %eax,%edx
jne    8055910 <__sprintf_chk@plt+0xba00>
mov    0x54(%ebp),%esi
xor    %edi,%edi
mov    0x50(%ebp),%eax
test   %esi,%esi
mov    %eax,0x10(%esp)
jle    8055a00 <__sprintf_chk@plt+0xbaf0>
mov    %ebp,0x1c(%esp)
mov    %esi,%ebp
mov    %ebx,%esi
jmp    8055956 <__sprintf_chk@plt+0xba46>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
add    $0x24,%eax
cmp    %ebp,%edi
je     80559f8 <__sprintf_chk@plt+0xbae8>
cmp    %esi,(%eax)
jne    8055948 <__sprintf_chk@plt+0xba38>
mov    0xc(%esp),%ebx
cmp    %ebx,0x8(%eax)
jne    8055948 <__sprintf_chk@plt+0xba38>
movzbl 0x10(%eax),%edx
cmp    0x18(%esp),%edx
jne    8055948 <__sprintf_chk@plt+0xba38>
test   %ebx,%ebx
je     8055be0 <__sprintf_chk@plt+0xbcd0>
mov    0x14(%esp),%ebx
mov    0x4(%eax),%edx
mov    (%ebx),%ecx
mov    0x4(%edx),%ebx
cmp    %ebx,0x4(%ecx)
jne    8055948 <__sprintf_chk@plt+0xba38>
mov    (%edx),%ebx
cmp    %ebx,(%ecx)
jne    8055948 <__sprintf_chk@plt+0xba38>
mov    %edi,0x28(%esp)
xor    %ebx,%ebx
mov    0xc(%esp),%edi
mov    %esi,0x20(%esp)
mov    %eax,0x24(%esp)
mov    %ebp,0x2c(%esp)
jmp    80559c2 <__sprintf_chk@plt+0xbab2>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%edx),%ebp
mov    %ecx,%esi
mov    %edx,%eax
cmp    %ebp,0xc(%ecx)
jne    80559c9 <__sprintf_chk@plt+0xbab9>
mov    0x8(%eax),%eax
add    $0x8,%ecx
add    $0x8,%edx
cmp    %eax,0x8(%esi)
jne    80559c9 <__sprintf_chk@plt+0xbab9>
add    $0x1,%ebx
cmp    %edi,%ebx
jne    80559a8 <__sprintf_chk@plt+0xba98>
cmp    0xc(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edi
mov    0x2c(%esp),%ebp
je     8055be0 <__sprintf_chk@plt+0xbcd0>
add    $0x1,%edi
add    $0x24,%eax
cmp    %ebp,%edi
jne    8055956 <__sprintf_chk@plt+0xba46>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    %ebp,%esi
mov    0x1c(%esp),%ebp
lea    0x1(%esi),%eax
cmp    %eax,0x58(%ebp)
jg     8055c20 <__sprintf_chk@plt+0xbd10>
mov    0x10(%esp),%edx
test   %edx,%edx
sete   %dl
movzbl %dl,%ecx
test   %dl,%dl
lea    (%eax,%ecx,1),%esi
jne    8055c4c <__sprintf_chk@plt+0xbd3c>
cmp    $0x4bda12e,%esi
ja     8055c6a <__sprintf_chk@plt+0xbd5a>
lea    0x1(%esi),%eax
shr    %eax
add    %eax,%esi
lea    (%esi,%esi,8),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %esi,0x58(%ebp)
mov    0x14(%esp),%esi
mov    0x4(%esi),%edx
mov    %eax,0x50(%ebp)
mov    %eax,%esi
mov    %eax,0x10(%esp)
lea    (%edi,%edi,8),%eax
shl    $0x2,%eax
add    %eax,%esi
cmp    $0x1fffffff,%edx
mov    %eax,0x10(%esp)
mov    %ebx,(%esi)
ja     8055c6a <__sprintf_chk@plt+0xbd5a>
lea    0x0(,%edx,8),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0xc(%esp),%edx
movl   $0x0,0x8(%esi)
mov    %edx,0xc(%esi)
mov    %eax,0x4(%esi)
mov    0x14(%esp),%eax
mov    0x10(%esp),%esi
add    0x50(%ebp),%esi
mov    0x4(%eax),%ebx
cmp    %ebx,0xc(%esi)
ja     8055c2d <__sprintf_chk@plt+0xbd1d>
mov    0x4(%esi),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%edx
add    %edx,%ebx
test   %al,%al
jne    8055c35 <__sprintf_chk@plt+0xbd25>
cmp    $0x15555554,%ebx
ja     8055c6a <__sprintf_chk@plt+0xbd5a>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebx,0xc(%esi)
mov    0x14(%esp),%ebx
mov    0x4(%ebx),%ebx
mov    %eax,0x4(%esi)
mov    0x14(%esp),%ecx
shl    $0x3,%ebx
mov    (%ecx),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x14(%esp),%ecx
xor    %edx,%edx
movzbl 0x18(%esp),%ebx
mov    0x4(%ecx),%eax
mov    %eax,0x8(%esi)
mov    0x50(%ebp),%eax
mov    0x10(%esp),%esi
mov    %bl,0x10(%eax,%esi,1)
mov    0x50(%ebp),%eax
movb   $0x0,0x11(%eax,%esi,1)
mov    0x50(%ebp),%eax
add    %esi,%eax
xor    %esi,%esi
mov    %si,0x12(%eax)
mov    0x18(%esp),%esi
movl   $0x0,0x1c(%eax)
mov    0x4(%ecx),%ebx
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
xor    %eax,%eax
and    $0xf,%esi
test   %ebx,%ebx
mov    %esi,0x18(%esp)
je     8055bdc <__sprintf_chk@plt+0xbccc>
mov    %edi,0x1c(%esp)
mov    %ecx,%esi
mov    %ebx,%edi
jmp    8055b89 <__sprintf_chk@plt+0xbc79>
nop
cmp    $0x101,%edx
je     8055bf0 <__sprintf_chk@plt+0xbce0>
add    $0x1,%eax
cmp    %edi,%eax
mov    %eax,%edx
jae    8055bd8 <__sprintf_chk@plt+0xbcc8>
mov    (%esi),%ecx
lea    (%ecx,%edx,8),%ecx
mov    0xc(%ebp),%edx
mov    (%ecx),%ebx
mov    (%edx,%ebx,4),%edx
test   %edx,%edx
jns    8055b78 <__sprintf_chk@plt+0xbc68>
mov    0x4(%ecx),%ebx
mov    %ebx,%ecx
sar    $0x4,%ecx
mov    %ecx,0xc(%esp)
mov    %ebx,%ecx
sar    $0x8,%ecx
or     %ecx,0xc(%esp)
or     %ebx,0xc(%esp)
mov    0xc(%esp),%ecx
test   %ecx,0x18(%esp)
mov    0x10(%esp),%ecx
jne    8055c10 <__sprintf_chk@plt+0xbd00>
add    0x50(%ebp),%ecx
mov    0x14(%ecx),%ebx
test   %ebx,%ebx
jne    8055b80 <__sprintf_chk@plt+0xbc70>
add    $0x1,%eax
cmp    %edi,%eax
mov    %edx,0x14(%ecx)
mov    %eax,%edx
jb     8055b89 <__sprintf_chk@plt+0xbc79>
nop
mov    0x1c(%esp),%edi
addl   $0x1,0x54(%ebp)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esp),%edi
mov    $0x777,%ecx
mov    0x50(%ebp),%edx
mov    %cx,0x12(%edx,%edi,1)
movb   $0x1,0x11(%edx,%edi,1)
mov    0x4(%esi),%edi
jmp    8055b80 <__sprintf_chk@plt+0xbc70>
xchg   %ax,%ax
add    0x50(%ebp),%ecx
or     %bx,0x12(%ecx)
jmp    8055bc4 <__sprintf_chk@plt+0xbcb4>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    0x10(%esp),%esi
jmp    8055a5f <__sprintf_chk@plt+0xbb4f>
mov    0x4(%esi),%eax
jmp    8055afc <__sprintf_chk@plt+0xbbec>
test   %ebx,%ebx
jne    8055adc <__sprintf_chk@plt+0xbbcc>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8055ae3 <__sprintf_chk@plt+0xbbd3>
test   %esi,%esi
jne    8055a36 <__sprintf_chk@plt+0xbb26>
mov    $0x24,%eax
mov    $0x1,%esi
jmp    8055a3c <__sprintf_chk@plt+0xbb2c>
xor    %ebx,%ebx
jmp    8055923 <__sprintf_chk@plt+0xba13>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
mov    0x10(%edx),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8064380 <__sprintf_chk@plt+0x1a470>
mov    0x4(%edi),%esi
test   %esi,%esi
mov    %eax,0x2c(%esp)
je     8055d48 <__sprintf_chk@plt+0xbe38>
mov    0x1c(%esp),%eax
xor    %ecx,%ecx
mov    %ecx,%ebx
mov    (%eax),%ebp
mov    %ebp,0x14(%esp)
mov    %ebp,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
lea    (%eax,%ebx,8),%edx
mov    0x10(%esp),%eax
mov    (%edx),%edi
mov    0xc(%eax),%eax
lea    (%eax,%edi,4),%ecx
mov    (%ecx),%eax
lea    -0x100(%eax),%ebp
cmp    $0x12,%ebp
ja     8055d38 <__sprintf_chk@plt+0xbe28>
cmp    $0x101,%eax
je     8055d38 <__sprintf_chk@plt+0xbe28>
sub    $0x110,%eax
cmp    $0x1,%eax
jbe    8055d38 <__sprintf_chk@plt+0xbe28>
mov    0x4(%edx),%eax
test   %esi,%esi
mov    %eax,0x24(%esp)
je     8055f94 <__sprintf_chk@plt+0xc084>
mov    0x14(%esp),%ebp
mov    $0x0,%eax
cmp    0x0(%ebp),%edi
jne    8055d06 <__sprintf_chk@plt+0xbdf6>
jmp    8055d64 <__sprintf_chk@plt+0xbe54>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x0(%ebp,%eax,8),%edi
je     8055d60 <__sprintf_chk@plt+0xbe50>
add    $0x1,%eax
cmp    %esi,%eax
jne    8055d00 <__sprintf_chk@plt+0xbdf0>
mov    %ebp,0x14(%esp)
mov    %eax,%esi
mov    0x2c(%esp),%eax
add    %edi,%eax
cmpb   $0x0,(%eax)
jne    8055d3b <__sprintf_chk@plt+0xbe2b>
movb   $0x1,(%eax)
mov    (%ecx),%eax
sub    $0x102,%eax
cmp    $0x5,%eax
ja     8055dc0 <__sprintf_chk@plt+0xbeb0>
jmp    *0x806d0e4(,%eax,4)
add    $0x1,%ebx
cmp    %esi,%ebx
jae    8055d48 <__sprintf_chk@plt+0xbe38>
mov    0x14(%esp),%eax
jmp    8055cb0 <__sprintf_chk@plt+0xbda0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x14(%esp)
mov    0x1c(%esp),%ebp
lea    -0x1(%esi),%edx
cmp    %edx,%eax
mov    %edx,0x4(%ebp)
mov    %edx,%ebp
jae    8055f8d <__sprintf_chk@plt+0xc07d>
mov    %ecx,0x18(%esp)
mov    0x14(%esp),%ecx
sub    %eax,%esi
lea    0x0(,%eax,8),%edx
lea    -0x8(,%esi,8),%eax
mov    %ebp,%esi
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edx,1),%eax
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80497f0 <memmove@plt>
mov    0x18(%esp),%ecx
jmp    8055d13 <__sprintf_chk@plt+0xbe03>
andl   $0x444,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x5c(%eax),%edx
lea    (%edi,%edi,2),%eax
shl    $0x2,%eax
mov    %eax,0x28(%esp)
add    %edx,%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8055f16 <__sprintf_chk@plt+0xc006>
movl   $0x0,0x18(%esp)
mov    0x14(%esp),%ebp
mov    0x18(%esp),%ecx
mov    %edx,0x20(%esp)
lea    0x0(%esi),%esi
mov    (%eax),%eax
mov    %esi,%edx
xor    %ebx,%ebx
mov    (%eax,%ecx,8),%edi
jmp    8055e0b <__sprintf_chk@plt+0xbefb>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8055e30 <__sprintf_chk@plt+0xbf20>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%edi
jb     8055e08 <__sprintf_chk@plt+0xbef8>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8055e30 <__sprintf_chk@plt+0xbf20>
add    %ebx,%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%edi
jb     8055e08 <__sprintf_chk@plt+0xbef8>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8055e20 <__sprintf_chk@plt+0xbf10>
cmp    %ebx,%esi
jbe    8055e40 <__sprintf_chk@plt+0xbf30>
lea    0x0(%ebp,%ebx,8),%eax
cmp    (%eax),%edi
je     8055f20 <__sprintf_chk@plt+0xc010>
mov    0x1c(%esp),%eax
lea    0x1(%esi),%edx
cmp    %edx,0x8(%eax)
ja     8055eaf <__sprintf_chk@plt+0xbf9f>
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %esi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8055f38 <__sprintf_chk@plt+0xc028>
cmp    $0x15555554,%edx
ja     8055f9b <__sprintf_chk@plt+0xc08b>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x14(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x1c(%esp),%ecx
mov    0x14(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
mov    %eax,%ebp
mov    %ecx,0x14(%esp)
lea    0x1(%ecx),%edx
mov    0x10(%esp),%ecx
mov    0x5c(%ecx),%ecx
mov    %ecx,0x20(%esp)
cmp    %ebx,%esi
jbe    8055ee2 <__sprintf_chk@plt+0xbfd2>
mov    %esi,%eax
sub    %ebx,%eax
shl    $0x3,%esi
shl    $0x3,%eax
mov    %esi,%ecx
add    $0x8,%esi
sub    %eax,%ecx
sub    %eax,%esi
add    %ebp,%ecx
add    %ebp,%esi
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
call   80497f0 <memmove@plt>
mov    0x14(%esp),%edx
mov    0x24(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%esi
mov    %edi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x1c(%esp),%eax
mov    %edx,0x4(%eax)
mov    0x20(%esp),%eax
add    0x28(%esp),%eax
addl   $0x1,0x18(%esp)
mov    0x18(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     8055df8 <__sprintf_chk@plt+0xbee8>
mov    %ebp,0x14(%esp)
xor    %ebx,%ebx
jmp    8055d3b <__sprintf_chk@plt+0xbe2b>
lea    0x0(%esi),%esi
mov    0x24(%esp),%ecx
or     %ecx,0x4(%eax)
mov    0x10(%esp),%eax
mov    0x5c(%eax),%eax
mov    %eax,0x20(%esp)
jmp    8055efc <__sprintf_chk@plt+0xbfec>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    8055e74 <__sprintf_chk@plt+0xbf64>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8055e7b <__sprintf_chk@plt+0xbf6b>
andl   $0x252,0x24(%esp)
jmp    8055dc0 <__sprintf_chk@plt+0xbeb0>
andl   $0x202,0x24(%esp)
jmp    8055dc0 <__sprintf_chk@plt+0xbeb0>
andl   $0x50,0x24(%esp)
jmp    8055dc0 <__sprintf_chk@plt+0xbeb0>
andl   $0x700,0x24(%esp)
jmp    8055dc0 <__sprintf_chk@plt+0xbeb0>
andl   $0x525,0x24(%esp)
jmp    8055dc0 <__sprintf_chk@plt+0xbeb0>
mov    %edx,%esi
jmp    8055d13 <__sprintf_chk@plt+0xbe03>
xor    %esi,%esi
jmp    8055d13 <__sprintf_chk@plt+0xbe03>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x14(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x2c(%esp)
xor    %edi,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
call   8049780 <wcrtomb@plt>
test   %eax,%eax
mov    %eax,0x8073244
jle    80561a8 <__sprintf_chk@plt+0xc298>
cmp    $0x1,%eax
movzbl 0x1c(%esp),%eax
je     8056198 <__sprintf_chk@plt+0xc288>
mov    $0x1,%edx
call   8052bf0 <__sprintf_chk@plt+0x8ce0>
mov    0x8073244,%eax
mov    $0x1,%edi
cmp    $0x1,%eax
jg     8056097 <__sprintf_chk@plt+0xc187>
jmp    8056168 <__sprintf_chk@plt+0xc258>
lea    0x0(%esi),%esi
cmp    $0x2aaaaaa9,%ebx
ja     80561b4 <__sprintf_chk@plt+0xc2a4>
add    $0x2,%edx
shr    %edx
add    %edx,%ebx
lea    0x0(,%ebx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0xc(%esi)
mov    0x80739b0,%esi
mov    0x10(%esi),%edx
mov    %ebx,0x14(%esi)
lea    0x1(%edx),%eax
mov    %eax,0x10(%esi)
mov    0xc(%esi),%ecx
mov    0x8073520,%eax
mov    %ebp,(%ecx,%edx,4)
add    $0x1,%eax
addl   $0x1,0x1c(%esi)
cmp    0x18(%esi),%eax
mov    %eax,0x8073520
jbe    8056082 <__sprintf_chk@plt+0xc172>
mov    %eax,0x18(%esi)
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x8073244,%eax
add    $0x1,%edi
cmp    %edi,%eax
jle    8056168 <__sprintf_chk@plt+0xc258>
sub    $0x1,%eax
xor    %ebx,%ebx
movzbl 0x1c(%esp,%edi,1),%ebp
cmp    %edi,%eax
sete   %bl
call   80499e0 <__ctype_get_mb_cur_max@plt>
add    %ebx,%ebx
mov    0x80739b0,%esi
cmp    $0x1,%eax
jbe    8056125 <__sprintf_chk@plt+0xc215>
mov    0x10(%esi),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x3c(%esi)
ja     805611f <__sprintf_chk@plt+0xc20f>
mov    0x40(%esi),%ecx
test   %ecx,%ecx
sete   %dl
mov    %dl,0xc(%esp)
movzbl %dl,%edx
add    %edx,%eax
cmpb   $0x0,0xc(%esp)
lea    0x1(%eax),%edx
jne    8056180 <__sprintf_chk@plt+0xc270>
cmp    $0x2aaaaaa9,%edx
ja     80561b4 <__sprintf_chk@plt+0xc2a4>
add    $0x2,%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,4),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0xc(%esp),%edx
mov    %eax,0x40(%esi)
mov    0x80739b0,%esi
mov    0x10(%esi),%eax
mov    %edx,0x3c(%esi)
mov    0x40(%esi),%edx
mov    %ebx,(%edx,%eax,4)
mov    0x10(%esi),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x14(%esi)
ja     8056060 <__sprintf_chk@plt+0xc150>
mov    0xc(%esi),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%ebx
add    %ebx,%edx
test   %cl,%cl
lea    0x1(%edx),%ebx
je     8056028 <__sprintf_chk@plt+0xc118>
test   %ebx,%ebx
jne    805603b <__sprintf_chk@plt+0xc12b>
mov    $0x40,%edx
mov    $0x10,%ebx
jmp    8056042 <__sprintf_chk@plt+0xc132>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    80561b9 <__sprintf_chk@plt+0xc2a9>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %edx,%edx
jne    80560f5 <__sprintf_chk@plt+0xc1e5>
mov    $0x40,%eax
mov    $0x10,%edx
jmp    80560fc <__sprintf_chk@plt+0xc1ec>
nop
mov    $0x3,%edx
jmp    805600c <__sprintf_chk@plt+0xc0fc>
lea    0x0(%esi),%esi
movb   $0x0,0x1c(%esp)
xor    %eax,%eax
jmp    8056007 <__sprintf_chk@plt+0xc0f7>
call   8064470 <__sprintf_chk@plt+0x1a560>
call   80498f0 <__stack_chk_fail@plt>
xchg   %ax,%ax
sub    $0xc,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    $0x3,%edx
mov    $0x10d,%eax
add    $0xc,%esp
jmp    8052bf0 <__sprintf_chk@plt+0x8ce0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805629d <__sprintf_chk@plt+0xc38d>
nop
cmp    $0x111,%ebx
jne    805629d <__sprintf_chk@plt+0xc38d>
mov    0x80739b0,%eax
mov    0x48(%eax),%edx
mov    0x44(%eax),%eax
imul   $0x34,%edx,%ecx
lea    -0x34(%eax,%ecx,1),%ebx
mov    0x4(%ebx),%esi
test   %esi,%esi
jne    805636a <__sprintf_chk@plt+0xc45a>
mov    0xc(%ebx),%ecx
test   %ecx,%ecx
je     80562b0 <__sprintf_chk@plt+0xc3a0>
xor    %esi,%esi
xor    %edi,%edi
jmp    8056245 <__sprintf_chk@plt+0xc335>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %esi,0xc(%ebx)
jbe    8056263 <__sprintf_chk@plt+0xc353>
mov    $0x1,%edi
mov    0x8(%ebx),%eax
mov    (%eax,%esi,4),%eax
call   8055fb0 <__sprintf_chk@plt+0xc0a0>
mov    %edi,%eax
test   %al,%al
je     8056238 <__sprintf_chk@plt+0xc328>
call   80561c0 <__sprintf_chk@plt+0xc2b0>
add    $0x1,%esi
cmp    %esi,0xc(%ebx)
ja     8056240 <__sprintf_chk@plt+0xc330>
mov    0x4(%ebx),%eax
mov    $0x1,%ebp
movl   $0x0,0xc(%ebx)
test   %eax,%eax
je     80562c0 <__sprintf_chk@plt+0xc3b0>
mov    0x80739b0,%eax
mov    0x48(%eax),%eax
lea    -0x1(,%eax,4),%eax
call   8052fa0 <__sprintf_chk@plt+0x9090>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    $0x10d,%ebx
cmp    $0x1,%eax
ja     80561f8 <__sprintf_chk@plt+0xc2e8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
mov    $0x3,%edx
pop    %esi
pop    %edi
pop    %ebp
jmp    8052bf0 <__sprintf_chk@plt+0x8ce0>
movl   $0x0,0xc(%ebx)
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073240,%eax
cmp    $0xffffffff,%eax
je     8056340 <__sprintf_chk@plt+0xc430>
test   %eax,%eax
jne    80562f8 <__sprintf_chk@plt+0xc3e8>
cmpl   $0xffffffff,(%ebx)
je     80562f8 <__sprintf_chk@plt+0xc3e8>
mov    0x80739b0,%eax
mov    0x48(%eax),%eax
lea    -0x1(,%eax,4),%eax
call   8052fa0 <__sprintf_chk@plt+0x9090>
mov    %ebp,%eax
test   %al,%al
jne    805628a <__sprintf_chk@plt+0xc37a>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
test   %edx,%edx
jne    80562d3 <__sprintf_chk@plt+0xc3c3>
mov    0x14(%ebx),%edi
test   %edi,%edi
jne    80562d3 <__sprintf_chk@plt+0xc3c3>
mov    0x20(%ebx),%esi
test   %esi,%esi
jne    80562d3 <__sprintf_chk@plt+0xc3c3>
mov    0x28(%ebx),%ecx
test   %ecx,%ecx
jne    80562d3 <__sprintf_chk@plt+0xc3c3>
mov    0x30(%ebx),%edx
test   %edx,%edx
jne    80562d3 <__sprintf_chk@plt+0xc3c3>
cmpl   $0xffffffff,(%ebx)
je     80562ed <__sprintf_chk@plt+0xc3dd>
test   %eax,%eax
je     805637d <__sprintf_chk@plt+0xc46d>
mov    (%ebx),%eax
add    $0x113,%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
mov    %ebp,%eax
test   %al,%al
jne    805628a <__sprintf_chk@plt+0xc37a>
jmp    80562ed <__sprintf_chk@plt+0xc3dd>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xe,(%esp)
mov    $0x806d334,%edi
call   8049d20 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8073240
jmp    80562ca <__sprintf_chk@plt+0xc3ba>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
lea    -0x1(,%edx,4),%eax
jmp    8052fa0 <__sprintf_chk@plt+0x9090>
movl   $0x806d13c,0xc(%esp)
movl   $0x64c,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d33a,(%esp)
call   8049ee0 <__assert_fail@plt>
jmp    80563b0 <__sprintf_chk@plt+0xc4a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0xc,%esp
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    $0x3,%edx
mov    $0x10c,%eax
add    $0xc,%esp
jmp    8052bf0 <__sprintf_chk@plt+0x8ce0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x8073524,%ebx
cmp    $0x112,%ebx
je     805669e <__sprintf_chk@plt+0xc78e>
cmp    $0x110,%ebx
je     8056434 <__sprintf_chk@plt+0xc524>
cmp    $0xff,%ebx
jbe    805644a <__sprintf_chk@plt+0xc53a>
cmp    $0x112,%ebx
jg     805644a <__sprintf_chk@plt+0xc53a>
lea    -0x101(%ebx),%eax
cmp    $0x6,%eax
jbe    805644a <__sprintf_chk@plt+0xc53a>
lea    -0x110(%ebx),%eax
cmp    $0x1,%eax
jbe    805644a <__sprintf_chk@plt+0xc53a>
cmp    $0x10e,%ebx
je     8056797 <__sprintf_chk@plt+0xc887>
mov    $0x100,%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
mov    0x8073524,%eax
jmp    8056460 <__sprintf_chk@plt+0xc550>
mov    0x8073240,%eax
cmp    $0xffffffff,%eax
je     805676d <__sprintf_chk@plt+0xc85d>
test   %eax,%eax
jne    80566c9 <__sprintf_chk@plt+0xc7b9>
mov    %ebx,%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x108(%eax),%edx
cmp    $0x3,%edx
ja     805648c <__sprintf_chk@plt+0xc57c>
cmp    $0x10b,%eax
je     8056498 <__sprintf_chk@plt+0xc588>
call   80561e0 <__sprintf_chk@plt+0xc2d0>
call   8054be0 <__sprintf_chk@plt+0xacd0>
lea    -0x108(%eax),%edx
cmp    $0x3,%edx
mov    %eax,0x8073524
jbe    805646b <__sprintf_chk@plt+0xc55b>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8073548,%ebx
mov    0x8073544,%ebp
test   %ebx,%ebx
jne    80564b0 <__sprintf_chk@plt+0xc5a0>
test   %ebp,%ebp
je     8056638 <__sprintf_chk@plt+0xc728>
mov    0x80739b0,%eax
mov    0x10(%eax),%edi
mov    %edi,%eax
call   80536c0 <__sprintf_chk@plt+0x97b0>
sub    %eax,%edi
test   %ebp,%ebp
mov    %eax,%esi
mov    %edi,0x1c(%esp)
js     8056689 <__sprintf_chk@plt+0xc779>
test   %ebx,%ebx
je     8056666 <__sprintf_chk@plt+0xc756>
cmp    $0x1,%ebx
jle    805667f <__sprintf_chk@plt+0xc76f>
mov    0x1c(%esp),%eax
mov    $0x1,%edi
shl    $0x2,%eax
mov    %eax,0x18(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80565f0 <__sprintf_chk@plt+0xc6e0>
xor    %ebp,%ebp
test   %esi,%esi
mov    0x18(%esp),%ebx
je     8056528 <__sprintf_chk@plt+0xc618>
mov    0x80739b0,%eax
add    $0x1,%ebp
mov    0x40(%eax),%edx
mov    0xc(%eax),%eax
mov    (%edx,%ebx,1),%edx
mov    (%eax,%ebx,1),%eax
add    $0x4,%ebx
call   8052bf0 <__sprintf_chk@plt+0x8ce0>
cmp    %esi,%ebp
jne    8056508 <__sprintf_chk@plt+0xc5f8>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
add    $0x1,%edi
cmp    %edi,0x8073548
jg     80564f0 <__sprintf_chk@plt+0xc5e0>
mov    0x1c(%esp),%eax
shl    $0x2,%eax
cmp    %edi,0x8073544
mov    %eax,0x18(%esp)
jle    8056477 <__sprintf_chk@plt+0xc567>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80565b8 <__sprintf_chk@plt+0xc6a8>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
test   %esi,%esi
mov    0x18(%esp),%ebx
je     8056590 <__sprintf_chk@plt+0xc680>
lea    0x0(%esi),%esi
mov    0x80739b0,%eax
add    $0x1,%ebp
mov    0x40(%eax),%edx
mov    0xc(%eax),%eax
mov    (%edx,%ebx,1),%edx
mov    (%eax,%ebx,1),%eax
add    $0x4,%ebx
call   8052bf0 <__sprintf_chk@plt+0x8ce0>
cmp    %esi,%ebp
jne    8056570 <__sprintf_chk@plt+0xc660>
mov    $0x108,%eax
add    $0x1,%edi
call   80561e0 <__sprintf_chk@plt+0xc2d0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
cmp    %edi,0x8073544
jle    8056477 <__sprintf_chk@plt+0xc567>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
ja     8056560 <__sprintf_chk@plt+0xc650>
xor    %ebx,%ebx
test   %esi,%esi
mov    0x18(%esp),%ebp
je     8056590 <__sprintf_chk@plt+0xc680>
lea    0x0(%esi),%esi
mov    0x80739b0,%eax
mov    $0x3,%edx
add    $0x1,%ebx
mov    0xc(%eax),%eax
mov    (%eax,%ebp,1),%eax
add    $0x4,%ebp
call   8052bf0 <__sprintf_chk@plt+0x8ce0>
cmp    %esi,%ebx
jne    80565c8 <__sprintf_chk@plt+0xc6b8>
jmp    8056590 <__sprintf_chk@plt+0xc680>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
test   %esi,%esi
mov    0x18(%esp),%ebp
je     8056528 <__sprintf_chk@plt+0xc618>
xchg   %ax,%ax
mov    0x80739b0,%eax
mov    $0x3,%edx
add    $0x1,%ebx
mov    0xc(%eax),%eax
mov    (%eax,%ebp,1),%eax
add    $0x4,%ebp
call   8052bf0 <__sprintf_chk@plt+0x8ce0>
cmp    %esi,%ebx
jne    8056600 <__sprintf_chk@plt+0xc6f0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
add    $0x1,%edi
cmp    %edi,0x8073548
jg     80564f0 <__sprintf_chk@plt+0xc5e0>
jmp    8056538 <__sprintf_chk@plt+0xc628>
mov    0x80739b0,%ebx
mov    0x10(%ebx),%esi
mov    %esi,%eax
call   80536c0 <__sprintf_chk@plt+0x97b0>
sub    %eax,%esi
mov    %esi,0x10(%ebx)
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
call   80563d0 <__sprintf_chk@plt+0xc4c0>
mov    0x8073524,%eax
jmp    8056460 <__sprintf_chk@plt+0xc550>
mov    $0x108,%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
mov    0x8073548,%ebx
cmp    $0x1,%ebx
jg     80564e0 <__sprintf_chk@plt+0xc5d0>
mov    $0x1,%edi
jmp    8056538 <__sprintf_chk@plt+0xc628>
mov    $0x10a,%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
mov    0x8073548,%ebx
jmp    80564cf <__sprintf_chk@plt+0xc5bf>
mov    0x80739a4,%ecx
mov    0x8073538,%eax
test   %ecx,%ecx
je     80566b5 <__sprintf_chk@plt+0xc7a5>
mov    %eax,(%esp)
call   8049850 <towlower@plt>
call   8055fb0 <__sprintf_chk@plt+0xc0a0>
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
jmp    8056460 <__sprintf_chk@plt+0xc550>
mov    0x80739b0,%edi
mov    0x28(%edi),%edx
mov    %edi,%eax
test   %edx,%edx
jne    8056855 <__sprintf_chk@plt+0xc945>
mov    $0x1,%esi
xor    %ebx,%ebx
mov    %ebx,%eax
shl    $0x5,%eax
cmp    $0x1,%ebx
mov    0x806d160(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x806d164(%eax),%edx
mov    %edx,0x24(%esp)
mov    0x806d168(%eax),%edx
mov    %edx,0x28(%esp)
mov    0x806d16c(%eax),%edx
mov    %edx,0x2c(%esp)
mov    0x806d170(%eax),%edx
mov    %edx,0x30(%esp)
mov    0x806d174(%eax),%edx
mov    %edx,0x34(%esp)
mov    0x806d178(%eax),%edx
mov    0x806d17c(%eax),%eax
mov    %edx,0x38(%esp)
mov    %eax,0x3c(%esp)
je     8056898 <__sprintf_chk@plt+0xc988>
lea    0x20(%esp),%eax
call   8052d60 <__sprintf_chk@plt+0x8e50>
add    $0x113,%eax
cmp    $0x5,%esi
mov    %eax,0x28(%edi,%ebx,4)
je     8056850 <__sprintf_chk@plt+0xc940>
mov    0x80739b0,%edi
add    $0x1,%esi
add    $0x1,%ebx
jmp    80566e3 <__sprintf_chk@plt+0xc7d3>
movl   $0xe,(%esp)
mov    $0x806d334,%edi
call   8049d20 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8073240
jmp    8056442 <__sprintf_chk@plt+0xc532>
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
call   80563d0 <__sprintf_chk@plt+0xc4c0>
jmp    80567ba <__sprintf_chk@plt+0xc8aa>
test   %eax,%eax
js     805681d <__sprintf_chk@plt+0xc90d>
lea    0x0(%esi,%eiz,1),%esi
call   80563d0 <__sprintf_chk@plt+0xc4c0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x8073524,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    80567a8 <__sprintf_chk@plt+0xc898>
cmp    $0x10d,%eax
jne    805681d <__sprintf_chk@plt+0xc90d>
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
call   80563d0 <__sprintf_chk@plt+0xc4c0>
jmp    80567fa <__sprintf_chk@plt+0xc8ea>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
js     805680c <__sprintf_chk@plt+0xc8fc>
lea    0x0(%esi,%eiz,1),%esi
call   80563d0 <__sprintf_chk@plt+0xc4c0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x8073524,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    80567e8 <__sprintf_chk@plt+0xc8d8>
call   80561c0 <__sprintf_chk@plt+0xc2b0>
mov    0x8073524,%eax
cmp    $0x10d,%eax
je     80567d3 <__sprintf_chk@plt+0xc8c3>
cmp    $0x10f,%eax
je     8056477 <__sprintf_chk@plt+0xc567>
movl   $0x5,0x8(%esp)
movl   $0x806d348,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80739b0,%eax
mov    $0x1,%ebx
mov    0x28(%eax,%ebx,4),%eax
add    $0x1,%ebx
call   80561e0 <__sprintf_chk@plt+0xc2d0>
cmp    $0x5,%ebx
je     8056872 <__sprintf_chk@plt+0xc962>
mov    0x80739b0,%eax
jmp    805685a <__sprintf_chk@plt+0xc94a>
mov    $0x3,%ebx
mov    0x80739b0,%eax
mov    0x28(%eax),%eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
call   80561c0 <__sprintf_chk@plt+0xc2b0>
sub    $0x1,%ebx
jne    8056877 <__sprintf_chk@plt+0xc967>
jmp    8056477 <__sprintf_chk@plt+0xc567>
mov    0x80739ac,%ebp
test   $0x40,%ebp
jne    80568c4 <__sprintf_chk@plt+0xc9b4>
movzbl 0x80739a0,%edx
mov    %edx,%eax
mov    %edx,%ecx
shr    $0x3,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
and    $0x1c,%eax
shl    %cl,%edx
not    %edx
and    %edx,0x20(%esp,%eax,1)
and    $0x80,%ebp
je     80568d1 <__sprintf_chk@plt+0xc9c1>
andl   $0xfffffffe,0x20(%esp)
lea    0x20(%esp),%eax
call   8052d60 <__sprintf_chk@plt+0x8e50>
add    $0x113,%eax
mov    %eax,0x2c(%edi)
jmp    805675c <__sprintf_chk@plt+0xc84c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %ecx,%ecx
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edx
mov    0x28(%esp),%eax
movl   $0x1,0x80739a8
00
mov    %edx,0x80739ac
mov    0x24(%esp),%edx
mov    %eax,%ebx
mov    %al,0x80739a0
mov    %edx,0x80739a4
jmp    805694e <__sprintf_chk@plt+0xca3e>
mov    %ecx,%eax
mov    %esi,%edx
shr    $0x5,%eax
shl    %cl,%edx
or     %edx,0x8073560(,%eax,4)
movl   $0x4,0x80735a0(,%ecx,4)
00
add    $0x1,%ecx
cmp    $0x100,%ecx
je     8056998 <__sprintf_chk@plt+0xca88>
cmp    %cl,%bl
mov    %ecx,%edi
je     8056928 <__sprintf_chk@plt+0xca18>
test   %cl,%cl
je     8056928 <__sprintf_chk@plt+0xca18>
mov    %ecx,0xc(%esp)
call   8049ef0 <__ctype_b_loc@plt>
mov    0xc(%esp),%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
je     80569a0 <__sprintf_chk@plt+0xca90>
mov    %ecx,%eax
mov    %esi,%edx
shl    %cl,%edx
shr    $0x5,%eax
movl   $0x2,0x80735a0(,%ecx,4)
00
add    $0x1,%ecx
or     %edx,0x8073580(,%eax,4)
cmp    $0x100,%ecx
jne    805694e <__sprintf_chk@plt+0xca3e>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edi,%eax
cmp    $0x5f,%al
je     805696d <__sprintf_chk@plt+0xca5d>
movl   $0x1,0x80735a0(,%ecx,4)
00
jmp    8056943 <__sprintf_chk@plt+0xca33>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%ebx
movl   $0xffffffff,0x8073554
ff
movl   $0x1,0x8073550
00
mov    %eax,0x807355c
mov    0x24(%esp),%eax
mov    %ebx,0x80739b0
movl   $0x0,0x807354c
00
mov    %eax,0x8073558
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8056a26 <__sprintf_chk@plt+0xcb16>
movl   $0x0,0x8073244
00
movl   $0x0,0x807353c
00
movl   $0x0,0x8073540
00
mov    0x80739a8,%ecx
test   %ecx,%ecx
je     8056b15 <__sprintf_chk@plt+0xcc05>
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
mov    0x18(%ebx),%eax
mov    %eax,0x8073520
call   80563d0 <__sprintf_chk@plt+0xc4c0>
jmp    8056a5e <__sprintf_chk@plt+0xcb4e>
lea    0x0(%esi),%esi
test   %eax,%eax
js     8056ac1 <__sprintf_chk@plt+0xcbb1>
call   80563d0 <__sprintf_chk@plt+0xc4c0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x8073524,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    8056a50 <__sprintf_chk@plt+0xcb40>
cmp    $0x10d,%eax
jne    8056ac1 <__sprintf_chk@plt+0xcbb1>
nop
call   8054be0 <__sprintf_chk@plt+0xacd0>
mov    %eax,0x8073524
call   80563d0 <__sprintf_chk@plt+0xc4c0>
jmp    8056a9e <__sprintf_chk@plt+0xcb8e>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
js     8056ab0 <__sprintf_chk@plt+0xcba0>
call   80563d0 <__sprintf_chk@plt+0xc4c0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x8073524,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    8056a90 <__sprintf_chk@plt+0xcb80>
call   80561c0 <__sprintf_chk@plt+0xc2b0>
mov    0x8073524,%eax
cmp    $0x10d,%eax
je     8056a78 <__sprintf_chk@plt+0xcb68>
cmp    $0xffffffff,%eax
jne    8056af1 <__sprintf_chk@plt+0xcbe1>
mov    0x20(%ebx),%eax
not    %eax
call   80561e0 <__sprintf_chk@plt+0xc2d0>
call   80563b0 <__sprintf_chk@plt+0xc4a0>
mov    0x20(%ebx),%edx
xor    %eax,%eax
test   %edx,%edx
je     8056ae6 <__sprintf_chk@plt+0xcbd6>
call   80561c0 <__sprintf_chk@plt+0xc2b0>
mov    0x20(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x20(%ebx)
add    $0x18,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
movl   $0x806d369,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
movl   $0x5,0x8(%esp)
movl   $0x806d355,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804b040 <__sprintf_chk@plt+0x1130>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x94(%esp),%eax
mov    0x90(%esp),%edi
mov    %eax,0x60(%edi)
mov    0x18(%edi),%eax
cmp    $0x3fffffff,%eax
ja     8057736 <__sprintf_chk@plt+0xd826>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edi
mov    %eax,0x50(%esp)
mov    0x18(%edi),%eax
cmp    $0x3fffffff,%eax
ja     8057736 <__sprintf_chk@plt+0xd826>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edx
mov    %eax,0x4c(%esp)
mov    0x1c(%edx),%eax
cmp    $0x1fffffff,%eax
ja     8057736 <__sprintf_chk@plt+0xd826>
shl    $0x3,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edx
mov    %eax,%edi
mov    %eax,0x54(%esp)
mov    0x1c(%edx),%eax
lea    (%edi,%eax,8),%ebp
mov    0x18(%edx),%eax
cmp    $0x3fffffff,%eax
ja     8057736 <__sprintf_chk@plt+0xd826>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edx
mov    %eax,%esi
mov    %eax,0x58(%esp)
mov    0x1c(%edx),%eax
cmp    $0x1fffffff,%eax
ja     8057736 <__sprintf_chk@plt+0xd826>
shl    $0x3,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edx
mov    0x1c(%edx),%ebx
mov    %eax,%edi
mov    %eax,0x5c(%esp)
lea    0x0(,%ebx,8),%eax
cmp    $0x1fffffff,%ebx
lea    (%edi,%eax,1),%edx
mov    %edx,0x34(%esp)
ja     8057736 <__sprintf_chk@plt+0xd826>
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edx
movl   $0xc,0x4(%esp)
mov    %ebx,0x6c(%esp)
movl   $0x0,0x68(%esp)
mov    %eax,0x64(%esp)
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   80643c0 <__sprintf_chk@plt+0x1a4b0>
mov    0x90(%esp),%edx
mov    0x10(%edx),%ebx
mov    %eax,0x5c(%edx)
test   %ebx,%ebx
je     8057729 <__sprintf_chk@plt+0xd819>
mov    0x4c(%esp),%edi
mov    0x50(%esp),%eax
mov    %esi,0x2c(%esp)
mov    %ebx,%esi
movl   $0x0,0x30(%esp)
mov    %edi,0x44(%esp)
mov    %eax,0x3c(%esp)
lea    0x0(%esi),%esi
mov    0x30(%esp),%edi
mov    %edi,%eax
shl    $0x2,%eax
mov    %eax,0x40(%esp)
mov    0x90(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%edi,4),%eax
lea    -0x100(%eax),%edx
cmp    $0xd,%edx
ja     805739d <__sprintf_chk@plt+0xd48d>
jmp    *0x806d0fc(,%edx,4)
mov    %edi,0x18(%esp)
mov    0x64(%esp),%esi
mov    0x1c(%esp),%ebp
mov    0x20(%esp),%edi
mov    %edx,0x38(%esp)
jmp    8056cec <__sprintf_chk@plt+0xcddc>
xchg   %ax,%ax
mov    0x14(%esp),%ebx
lea    0x1(%ebx),%ecx
add    $0x1,%eax
mov    %ecx,0x68(%esp)
mov    -0x8(%edi,%eax,8),%edx
cmp    %eax,%ebp
mov    %ecx,0x14(%esp)
mov    -0x4(%edi,%eax,8),%ecx
mov    %edx,(%esi,%ebx,8)
mov    %ecx,0x4(%esi,%ebx,8)
ja     8056ce8 <__sprintf_chk@plt+0xcdd8>
mov    0x18(%esp),%edi
mov    0x38(%esp),%edx
mov    0x14(%esp),%ecx
cmp    %edx,0x4(%edi)
jbe    8056d4c <__sprintf_chk@plt+0xce3c>
mov    (%edi),%ebx
mov    0x64(%esp),%esi
mov    %edi,0x14(%esp)
add    $0x1,%edx
mov    -0x8(%ebx,%edx,8),%edi
lea    0x1(%ecx),%eax
mov    %eax,0x68(%esp)
mov    -0x4(%ebx,%edx,8),%ebp
mov    %edi,(%esi,%ecx,8)
mov    0x14(%esp),%edi
mov    %ebp,0x4(%esi,%ecx,8)
mov    %eax,%ecx
cmp    0x4(%edi),%edx
jb     8056d28 <__sprintf_chk@plt+0xce18>
mov    0x24(%esp),%eax
cmp    %ecx,0x8(%eax)
ja     8057630 <__sprintf_chk@plt+0xd720>
mov    (%eax),%edx
test   %edx,%edx
sete   %al
movzbl %al,%ebx
add    %ecx,%ebx
test   %al,%al
jne    8057658 <__sprintf_chk@plt+0xd748>
cmp    $0x15555554,%ebx
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x24(%esp),%edi
mov    0x68(%esp),%ecx
mov    %ebx,0x8(%edi)
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x68(%esp),%eax
mov    0x24(%esp),%edi
addl   $0x1,0x28(%esp)
mov    %eax,0x4(%edi)
mov    0x2c(%esp),%eax
mov    0x28(%esp),%edi
cmp    %edi,-0x4(%eax)
ja     8057298 <__sprintf_chk@plt+0xd388>
mov    0x90(%esp),%eax
mov    0x40(%esp),%edi
mov    0x20(%esp),%ebp
mov    0xc(%eax),%eax
mov    (%eax,%edi,1),%eax
mov    0x90(%esp),%edi
mov    0x10(%edi),%ebx
mov    %ebx,%esi
cmp    $0x10a,%eax
je     8056e0b <__sprintf_chk@plt+0xcefb>
mov    0x3c(%esp),%eax
movl   $0x1,-0x4(%eax)
addl   $0x1,0x30(%esp)
cmp    %ebx,0x30(%esp)
jb     8056ca0 <__sprintf_chk@plt+0xcd90>
test   %ebx,%ebx
mov    %esi,%edx
je     8056f73 <__sprintf_chk@plt+0xd063>
xor    %ebx,%ebx
mov    0x90(%esp),%esi
mov    %ebp,0x18(%esp)
jmp    8056e58 <__sprintf_chk@plt+0xcf48>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x101,%eax
je     8056e69 <__sprintf_chk@plt+0xcf59>
sub    $0x110,%eax
cmp    $0x1,%eax
jbe    8056e69 <__sprintf_chk@plt+0xcf59>
add    $0x1,%ebx
cmp    %edx,%ebx
jae    8056f6f <__sprintf_chk@plt+0xd05f>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
mov    (%eax,%ebx,4),%eax
lea    -0x100(%eax),%ecx
cmp    $0x12,%ecx
jbe    8056e38 <__sprintf_chk@plt+0xcf28>
lea    (%ebx,%ebx,2),%eax
shl    $0x2,%eax
mov    %eax,0x14(%esp)
add    0x5c(%esi),%eax
mov    0x4(%eax),%edi
mov    %eax,%ebp
cmp    %edi,0x6c(%esp)
mov    0x64(%esp),%eax
ja     8056ec8 <__sprintf_chk@plt+0xcfb8>
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ecx,%edi
test   %dl,%dl
jne    805769d <__sprintf_chk@plt+0xd78d>
cmp    $0x15555554,%edi
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%edi),%edx
shr    %edx
add    %edx,%edi
lea    0x0(,%edi,8),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %edi,0x6c(%esp)
mov    0x4(%ebp),%edi
mov    %eax,0x64(%esp)
mov    0x0(%ebp),%edx
shl    $0x3,%edi
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x4(%ebp),%eax
mov    %esi,%edx
mov    %eax,0x68(%esp)
lea    0x64(%esp),%eax
call   8055c70 <__sprintf_chk@plt+0xbd60>
mov    0x14(%esp),%edi
add    0x5c(%esi),%edi
mov    0x68(%esp),%ebp
cmp    %ebp,0x8(%edi)
mov    (%edi),%eax
ja     8056f43 <__sprintf_chk@plt+0xd033>
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ecx,%ebp
test   %dl,%dl
jne    80576b4 <__sprintf_chk@plt+0xd7a4>
cmp    $0x15555554,%ebp
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%ebp),%edx
shr    %edx
add    %edx,%ebp
lea    0x0(,%ebp,8),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebp,0x8(%edi)
mov    0x68(%esp),%ebp
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ebp
add    $0x1,%ebx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x10(%esi),%edx
mov    0x68(%esp),%eax
cmp    %edx,%ebx
mov    %eax,0x4(%edi)
jb     8056e58 <__sprintf_chk@plt+0xcf48>
mov    0x18(%esp),%ebp
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %ebp,%edi
movl   $0x0,0x68(%esp)
mov    -0x4(%eax),%esi
test   %esi,%esi
je     8056fa8 <__sprintf_chk@plt+0xd098>
lea    0x0(%esi),%esi
mov    (%edi),%eax
lea    0x64(%esp),%ecx
add    $0x1,%ebx
mov    0x4(%edi),%edx
add    $0x8,%edi
call   80529c0 <__sprintf_chk@plt+0x8ab0>
cmp    %esi,%ebx
jne    8056f90 <__sprintf_chk@plt+0xd080>
mov    0x90(%esp),%edx
lea    0x64(%esp),%eax
call   8055c70 <__sprintf_chk@plt+0xbd60>
mov    0x90(%esp),%eax
movl   $0x1,0x58(%eax)
movl   $0x0,0x54(%eax)
movl   $0x24,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x90(%esp),%edi
mov    $0x7,%ecx
mov    0x64(%esp),%edx
mov    %eax,0x50(%edi)
mov    0x68(%esp),%eax
test   %eax,%eax
je     8057042 <__sprintf_chk@plt+0xd132>
lea    (%edx,%eax,8),%esi
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %ebx,%edi
or     $0x4,%edi
mov    %eax,%ecx
shr    $0x2,%ecx
xor    %eax,%ecx
and    $0x111,%ecx
mov    %eax,%ecx
cmovne %edi,%ebx
shr    %ecx
mov    %ebx,%edi
xor    %eax,%ecx
or     $0x2,%edi
and    $0x111,%ecx
cmovne %edi,%ebx
add    $0x8,%edx
cmp    %esi,%edx
jne    8057000 <__sprintf_chk@plt+0xd0f0>
test   $0x4,%bl
mov    $0x4,%ecx
jne    8057042 <__sprintf_chk@plt+0xd132>
mov    %ebx,%ecx
xor    $0x7,%ecx
mov    0x90(%esp),%eax
lea    0x64(%esp),%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x2c(%esp),%edi
mov    0x3c(%esp),%eax
mov    0x44(%esp),%edx
movl   $0x0,(%edi)
add    $0x4,%edi
movl   $0x1,(%eax)
add    $0x4,%eax
mov    %edi,0x2c(%esp)
lea    0x4(%edx),%edi
movl   $0x0,(%edx)
mov    %edi,0x44(%esp)
mov    %eax,0x3c(%esp)
jmp    8056e0b <__sprintf_chk@plt+0xcefb>
mov    0x44(%esp),%edi
subl   $0x4,0x44(%esp)
mov    -0x4(%edi),%eax
add    %eax,-0x8(%edi)
mov    0x2c(%esp),%edi
subl   $0x4,0x2c(%esp)
mov    -0x4(%edi),%eax
add    %eax,-0x8(%edi)
mov    $0x1,%eax
mov    0x3c(%esp),%edi
mov    -0x4(%edi),%edx
test   %edx,%edx
jne    8057117 <__sprintf_chk@plt+0xd207>
mov    -0x8(%edi),%eax
mov    0x3c(%esp),%edi
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,-0x8(%edi)
mov    %ebx,%esi
subl   $0x4,0x3c(%esp)
jmp    8056e0b <__sprintf_chk@plt+0xcefb>
mov    0x44(%esp),%eax
mov    0x34(%esp),%edx
mov    -0x4(%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    -0x4(%eax),%edi
mov    -0x8(%eax),%eax
mov    %edi,0x48(%esp)
lea    (%edx,%edi,8),%edi
test   %eax,%eax
mov    %edi,0x40(%esp)
je     80575d8 <__sprintf_chk@plt+0xd6c8>
movl   $0x0,0x28(%esp)
mov    %ebp,0x20(%esp)
xchg   %ax,%ax
mov    0x28(%esp),%edi
mov    0x40(%esp),%eax
mov    (%eax,%edi,8),%eax
mov    0x90(%esp),%edi
lea    (%eax,%eax,2),%esi
mov    0x5c(%edi),%eax
shl    $0x2,%esi
add    %esi,%eax
mov    %eax,%edx
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x1c(%esp),%eax
add    0x4(%edx),%eax
cmp    %eax,0x6c(%esp)
ja     80571e4 <__sprintf_chk@plt+0xd2d4>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
sete   %dl
movzbl %dl,%ebx
add    %eax,%ebx
test   %dl,%dl
jne    8057686 <__sprintf_chk@plt+0xd776>
cmp    $0x15555554,%ebx
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebx,0x6c(%esp)
mov    %eax,0x64(%esp)
mov    0x90(%esp),%eax
add    0x5c(%eax),%esi
mov    %esi,0x24(%esp)
movl   $0x0,0x68(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
xor    %eax,%eax
jmp    8057217 <__sprintf_chk@plt+0xd307>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%esi
add    $0x1,%eax
mov    %esi,0x68(%esp)
mov    %esi,0x14(%esp)
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
mov    0x14(%esp),%ecx
cmp    %eax,0x1c(%esp)
mov    %ecx,%ebx
jbe    8057509 <__sprintf_chk@plt+0xd5f9>
cmp    0x4(%edi),%edx
jae    80574c0 <__sprintf_chk@plt+0xd5b0>
mov    0x20(%esp),%esi
mov    0x64(%esp),%ebp
lea    (%esi,%eax,8),%ebx
mov    (%edi),%esi
lea    (%esi,%edx,8),%esi
mov    %esi,0x18(%esp)
mov    (%esi),%esi
cmp    %esi,(%ebx)
ja     80571f8 <__sprintf_chk@plt+0xd2e8>
jae    8057490 <__sprintf_chk@plt+0xd580>
lea    0x1(%ecx),%ebx
add    $0x1,%edx
mov    %ebx,0x68(%esp)
mov    %ebx,0x14(%esp)
mov    0x18(%esp),%ebx
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
jmp    8057213 <__sprintf_chk@plt+0xd303>
mov    0x44(%esp),%edi
mov    -0x4(%edi),%edi
mov    %edi,0x1c(%esp)
mov    0x2c(%esp),%edi
mov    -0x4(%edi),%edi
test   %edi,%edi
je     8056df9 <__sprintf_chk@plt+0xcee9>
movl   $0x0,0x28(%esp)
mov    0x28(%esp),%edi
mov    %ebp,0x20(%esp)
nop
mov    0x34(%esp),%eax
mov    (%eax,%edi,8),%eax
mov    0x90(%esp),%edi
lea    (%eax,%eax,2),%esi
mov    0x5c(%edi),%eax
shl    $0x2,%esi
add    %esi,%eax
mov    %eax,%edx
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x1c(%esp),%eax
add    0x4(%edx),%eax
cmp    %eax,0x6c(%esp)
ja     8057318 <__sprintf_chk@plt+0xd408>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
sete   %dl
movzbl %dl,%ebx
add    %eax,%ebx
test   %dl,%dl
jne    805766f <__sprintf_chk@plt+0xd75f>
cmp    $0x15555554,%ebx
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebx,0x6c(%esp)
mov    %eax,0x64(%esp)
mov    0x90(%esp),%eax
add    0x5c(%eax),%esi
mov    %esi,0x24(%esp)
movl   $0x0,0x68(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
xor    %eax,%eax
jmp    8057347 <__sprintf_chk@plt+0xd437>
lea    0x1(%ecx),%esi
add    $0x1,%eax
mov    %esi,0x68(%esp)
mov    %esi,0x14(%esp)
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
mov    0x14(%esp),%ecx
cmp    %eax,0x1c(%esp)
mov    %ecx,%ebx
jbe    8056d19 <__sprintf_chk@plt+0xce09>
cmp    0x4(%edi),%edx
jae    8056cd0 <__sprintf_chk@plt+0xcdc0>
mov    0x20(%esp),%esi
mov    0x64(%esp),%ebp
lea    (%esi,%eax,8),%ebx
mov    (%edi),%esi
lea    (%esi,%edx,8),%esi
mov    %esi,0x18(%esp)
mov    (%esi),%esi
cmp    %esi,(%ebx)
ja     8057328 <__sprintf_chk@plt+0xd418>
jae    8057460 <__sprintf_chk@plt+0xd550>
lea    0x1(%ecx),%ebx
add    $0x1,%edx
mov    %ebx,0x68(%esp)
mov    %ebx,0x14(%esp)
mov    0x18(%esp),%ebx
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
jmp    8057343 <__sprintf_chk@plt+0xd433>
mov    0x3c(%esp),%edi
cmp    $0x101,%eax
sete   %al
mov    0x90(%esp),%ebx
movzbl %al,%eax
movl   $0x777,-0x4(%ebp)
mov    %eax,(%edi)
mov    0x44(%esp),%eax
lea    0x4(%edi),%edx
mov    %edx,0x14(%esp)
mov    0x30(%esp),%edx
lea    0x4(%eax),%edi
movl   $0x1,(%eax)
lea    -0x8(%ebp),%eax
mov    %edi,0x18(%esp)
mov    0x2c(%esp),%edi
mov    %eax,0x20(%esp)
mov    0x34(%esp),%eax
mov    %edx,-0x8(%ebp)
lea    0x4(%edi),%ecx
mov    %edx,-0x8(%eax)
lea    (%edx,%edx,2),%edx
movl   $0x1,(%edi)
lea    -0x8(%eax),%edi
movl   $0x777,-0x4(%eax)
mov    0x5c(%ebx),%eax
movl   $0x8,(%esp)
mov    %ecx,0x1c(%esp)
lea    (%eax,%edx,4),%ebx
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x1c(%esp),%ecx
movl   $0x1,0x8(%ebx)
mov    0x14(%esp),%edx
movl   $0x0,0x4(%ebx)
mov    0x20(%esp),%ebp
mov    %edi,0x34(%esp)
mov    0x18(%esp),%edi
mov    %ecx,0x2c(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,(%ebx)
mov    0x90(%esp),%ebx
mov    %edi,0x44(%esp)
mov    0x10(%ebx),%ebx
mov    %ebx,%esi
jmp    8056e0b <__sprintf_chk@plt+0xcefb>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%esi
lea    0x0(%ebp,%ecx,8),%ebp
add    $0x1,%ecx
mov    (%ebx),%ebx
add    $0x1,%eax
add    $0x1,%edx
mov    %ecx,0x14(%esp)
mov    %esi,0x4(%ebp)
mov    %ebx,0x0(%ebp)
mov    %ecx,0x68(%esp)
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%ecx
or     %ecx,0x4(%ebp)
jmp    8057343 <__sprintf_chk@plt+0xd433>
nop
mov    0x4(%ebx),%esi
lea    0x0(%ebp,%ecx,8),%ebp
add    $0x1,%ecx
mov    (%ebx),%ebx
add    $0x1,%eax
add    $0x1,%edx
mov    %ecx,0x14(%esp)
mov    %esi,0x4(%ebp)
mov    %ebx,0x0(%ebp)
mov    %ecx,0x68(%esp)
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%ecx
or     %ecx,0x4(%ebp)
jmp    8057213 <__sprintf_chk@plt+0xd303>
nop
mov    %edi,0x18(%esp)
mov    0x64(%esp),%esi
mov    0x1c(%esp),%ebp
mov    0x20(%esp),%edi
mov    %edx,0x38(%esp)
jmp    80574dc <__sprintf_chk@plt+0xd5cc>
xchg   %ax,%ax
mov    0x14(%esp),%ebx
lea    0x1(%ebx),%edx
add    $0x1,%eax
mov    %edx,0x68(%esp)
mov    -0x4(%edi,%eax,8),%ecx
cmp    %eax,%ebp
mov    %edx,0x14(%esp)
mov    -0x8(%edi,%eax,8),%edx
mov    %ecx,0x4(%esi,%ebx,8)
mov    %edx,(%esi,%ebx,8)
ja     80574d8 <__sprintf_chk@plt+0xd5c8>
mov    0x18(%esp),%edi
mov    0x38(%esp),%edx
mov    0x14(%esp),%ecx
cmp    %edx,0x4(%edi)
jbe    805753c <__sprintf_chk@plt+0xd62c>
mov    (%edi),%ebx
mov    0x64(%esp),%esi
mov    %edi,0x14(%esp)
add    $0x1,%edx
mov    -0x8(%ebx,%edx,8),%edi
lea    0x1(%ecx),%eax
mov    %eax,0x68(%esp)
mov    -0x4(%ebx,%edx,8),%ebp
mov    %edi,(%esi,%ecx,8)
mov    0x14(%esp),%edi
mov    %ebp,0x4(%esi,%ecx,8)
mov    %eax,%ecx
cmp    0x4(%edi),%edx
jb     8057518 <__sprintf_chk@plt+0xd608>
mov    0x24(%esp),%eax
cmp    %ecx,0x8(%eax)
ja     8057638 <__sprintf_chk@plt+0xd728>
mov    (%eax),%edx
test   %edx,%edx
sete   %al
movzbl %al,%ebx
add    %ecx,%ebx
test   %al,%al
jne    8057640 <__sprintf_chk@plt+0xd730>
cmp    $0x15555554,%ebx
ja     8057736 <__sprintf_chk@plt+0xd826>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x24(%esp),%edi
mov    0x68(%esp),%ecx
mov    %ebx,0x8(%edi)
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x68(%esp),%eax
mov    0x24(%esp),%edi
addl   $0x1,0x28(%esp)
mov    %eax,0x4(%edi)
mov    0x2c(%esp),%eax
mov    -0x8(%eax),%eax
cmp    0x28(%esp),%eax
ja     8057160 <__sprintf_chk@plt+0xd250>
mov    0x90(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x10(%edi),%ebx
mov    %ebx,%esi
mov    0x3c(%esp),%edi
mov    -0x8(%edi),%edx
mov    0x44(%esp),%edi
test   %edx,%edx
je     805771d <__sprintf_chk@plt+0xd80d>
mov    0x1c(%esp),%ecx
add    %ecx,-0x8(%edi)
mov    0x3c(%esp),%edi
subl   $0x4,0x44(%esp)
mov    -0x4(%edi),%ecx
test   %ecx,%ecx
je     80576cb <__sprintf_chk@plt+0xd7bb>
mov    0x2c(%esp),%edi
add    0x48(%esp),%eax
subl   $0x4,0x2c(%esp)
mov    %eax,-0x8(%edi)
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    0x3c(%esp),%edi
subl   $0x4,0x3c(%esp)
mov    %eax,-0x8(%edi)
jmp    8056e0b <__sprintf_chk@plt+0xcefb>
xchg   %ax,%ax
mov    (%eax),%eax
jmp    8056da0 <__sprintf_chk@plt+0xce90>
nop
mov    (%eax),%eax
jmp    8057590 <__sprintf_chk@plt+0xd680>
nop
test   %ebx,%ebx
jne    8057570 <__sprintf_chk@plt+0xd660>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8057577 <__sprintf_chk@plt+0xd667>
nop
test   %ebx,%ebx
jne    8056d80 <__sprintf_chk@plt+0xce70>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8056d87 <__sprintf_chk@plt+0xce77>
test   %ebx,%ebx
jne    80572ef <__sprintf_chk@plt+0xd3df>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    80572f6 <__sprintf_chk@plt+0xd3e6>
test   %ebx,%ebx
jne    80571bb <__sprintf_chk@plt+0xd2ab>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    80571c2 <__sprintf_chk@plt+0xd2b2>
test   %edi,%edi
jne    8056eaa <__sprintf_chk@plt+0xcf9a>
mov    $0x40,%edx
mov    $0x8,%edi
jmp    8056eb1 <__sprintf_chk@plt+0xcfa1>
test   %ebp,%ebp
jne    8056f27 <__sprintf_chk@plt+0xd017>
mov    $0x40,%edx
mov    $0x8,%ebp
jmp    8056f2e <__sprintf_chk@plt+0xd01e>
mov    0x34(%esp),%edi
lea    (%edi,%eax,8),%edx
mov    0x48(%esp),%edi
mov    %edi,%eax
sub    $0x1,%eax
test   %edi,%edi
je     8057706 <__sprintf_chk@plt+0xd7f6>
mov    0x34(%esp),%ecx
mov    %esi,0x14(%esp)
nop
mov    (%ecx,%eax,8),%esi
mov    0x4(%ecx,%eax,8),%edi
mov    %esi,(%edx,%eax,8)
mov    %edi,0x4(%edx,%eax,8)
sub    $0x1,%eax
cmp    $0xffffffff,%eax
jne    80576e8 <__sprintf_chk@plt+0xd7d8>
mov    0x14(%esp),%esi
mov    0x48(%esp),%edi
mov    0x2c(%esp),%eax
mov    %edx,0x34(%esp)
subl   $0x4,0x2c(%esp)
mov    %edi,-0x8(%eax)
xor    %eax,%eax
jmp    805761d <__sprintf_chk@plt+0xd70d>
mov    -0x4(%edi),%ecx
lea    0x0(%ebp,%ecx,8),%ebp
jmp    80575f2 <__sprintf_chk@plt+0xd6e2>
mov    0x4c(%esp),%eax
mov    %eax,0x44(%esp)
jmp    8056f73 <__sprintf_chk@plt+0xd063>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x104(%esp),%eax
movl   $0x800,(%esp)
mov    0x100(%esp),%ebx
mov    %eax,0x48(%esp)
mov    0x108(%esp),%eax
mov    %eax,0x6c(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x2000,(%esp)
mov    %eax,0x60(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,0x64(%esp)
xor    %eax,%eax
movl   $0x0,0x80(%esp,%eax,1)
00
add    $0x4,%eax
cmp    $0x20,%eax
jb     8057789 <__sprintf_chk@plt+0xd879>
mov    0x48(%esp),%edi
lea    (%ebx,%ebx,8),%eax
shl    $0x2,%eax
mov    %eax,0x68(%esp)
add    0x50(%edi),%eax
mov    0x8(%eax),%ebp
mov    %eax,%edi
test   %ebp,%ebp
je     805874b <__sprintf_chk@plt+0xe83b>
movl   $0x0,0x5c(%esp)
movl   $0x0,0x44(%esp)
lea    0x0(%esi),%esi
mov    0x5c(%esp),%ecx
mov    0x4(%edi),%eax
lea    (%eax,%ecx,8),%eax
mov    (%eax),%ecx
mov    0x4(%eax),%ebx
lea    0x0(,%ecx,4),%eax
mov    %eax,0x54(%esp)
mov    0x48(%esp),%eax
mov    %ecx,0x58(%esp)
mov    0xc(%eax),%eax
mov    (%eax,%ecx,4),%ecx
cmp    $0xff,%ecx
ja     8057dda <__sprintf_chk@plt+0xdeca>
mov    %ecx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
shl    %cl,%eax
or     %eax,0x80(%esp,%edx,4)
cmp    $0x777,%ebx
je     80579aa <__sprintf_chk@plt+0xda9a>
movzbl 0x10(%edi),%eax
mov    %eax,%esi
mov    %ebx,%eax
and    $0xf,%esi
shr    $0x8,%eax
test   %esi,%eax
je     8058330 <__sprintf_chk@plt+0xe420>
mov    0x80(%esp),%edx
mov    %ebx,%eax
shr    $0x4,%eax
test   %esi,%eax
jne    80578bb <__sprintf_chk@plt+0xd9ab>
mov    0x8073580,%eax
not    %eax
and    %eax,%edx
mov    0x8073584,%eax
mov    %edx,0x80(%esp)
not    %eax
and    %eax,0x84(%esp)
mov    0x8073588,%eax
not    %eax
and    %eax,0x88(%esp)
mov    0x807358c,%eax
not    %eax
and    %eax,0x8c(%esp)
mov    0x8073590,%eax
not    %eax
and    %eax,0x90(%esp)
mov    0x8073594,%eax
not    %eax
and    %eax,0x94(%esp)
mov    0x8073598,%eax
not    %eax
and    %eax,0x98(%esp)
mov    0x807359c,%eax
not    %eax
and    %eax,0x9c(%esp)
test   %esi,%ebx
jne    8057955 <__sprintf_chk@plt+0xda45>
mov    0x8073560,%eax
or     0x8073580,%eax
and    %eax,%edx
mov    0x8073564,%eax
or     0x8073584,%eax
and    %eax,0x84(%esp)
mov    0x8073568,%eax
or     0x8073588,%eax
and    %eax,0x88(%esp)
mov    0x807356c,%eax
or     0x807358c,%eax
and    %eax,0x8c(%esp)
mov    0x8073570,%eax
or     0x8073590,%eax
and    %eax,0x90(%esp)
mov    0x8073574,%eax
or     0x8073594,%eax
and    %eax,0x94(%esp)
mov    0x8073578,%eax
or     0x8073598,%eax
and    %eax,0x98(%esp)
mov    0x807357c,%eax
or     0x807359c,%eax
and    %eax,0x9c(%esp)
mov    %edx,0x80(%esp)
test   %edx,%edx
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x84(%esp),%edx
test   %edx,%edx
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x8c(%esp),%eax
test   %eax,%eax
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x90(%esp),%eax
test   %eax,%eax
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x94(%esp),%eax
test   %eax,%eax
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x98(%esp),%eax
test   %eax,%eax
jne    80579aa <__sprintf_chk@plt+0xda9a>
mov    0x9c(%esp),%eax
test   %eax,%eax
je     8057e18 <__sprintf_chk@plt+0xdf08>
mov    0x44(%esp),%ebx
test   %ebx,%ebx
je     8058545 <__sprintf_chk@plt+0xe635>
mov    0x60(%esp),%eax
mov    0x64(%esp),%edi
movl   $0x0,0x14(%esp)
mov    %eax,0x24(%esp)
jmp    8057b92 <__sprintf_chk@plt+0xdc82>
nop
mov    0x1c(%edi),%eax
mov    %eax,0x4c(%esp)
and    %ebx,%eax
mov    %eax,0xbc(%esp)
mov    (%edi),%eax
mov    %ecx,%edx
mov    $0x1,%ebp
not    %edx
and    %eax,%edx
not    %eax
and    %ecx,%eax
mov    0x28(%esp),%ecx
mov    %edx,0xc0(%esp)
mov    %eax,0x80(%esp)
not    %ecx
and    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %ecx,0xc4(%esp)
jne    8057a1d <__sprintf_chk@plt+0xdb0d>
xor    %ecx,%ecx
test   %edx,%edx
setne  %cl
mov    %ecx,%ebp
mov    0x2c(%esp),%edx
mov    $0x1,%ecx
not    %edx
and    0x28(%esp),%edx
test   %edx,%edx
mov    %edx,0x84(%esp)
jne    8057a3e <__sprintf_chk@plt+0xdb2e>
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    0x30(%esp),%edx
mov    $0x1,%eax
not    %edx
and    %esi,%edx
not    %esi
test   %edx,%edx
cmovne %eax,%ebp
and    0x30(%esp),%esi
mov    %edx,0xc8(%esp)
test   %esi,%esi
mov    %esi,0x88(%esp)
mov    0x18(%esp),%esi
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x34(%esp),%edx
test   %edx,%edx
mov    %edx,0xcc(%esp)
mov    0x34(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x1c(%esp),%esi
test   %edx,%edx
mov    %edx,0x8c(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x38(%esp),%edx
test   %edx,%edx
mov    %edx,0xd0(%esp)
mov    0x38(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x20(%esp),%esi
test   %edx,%edx
mov    %edx,0x90(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x3c(%esp),%edx
test   %edx,%edx
mov    %edx,0xd4(%esp)
mov    0x3c(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x50(%esp),%esi
test   %edx,%edx
mov    %edx,0x94(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x40(%esp),%edx
test   %edx,%edx
mov    %edx,0xd8(%esp)
mov    0x40(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x4c(%esp),%esi
test   %edx,%edx
mov    %edx,0x98(%esp)
mov    %ebx,%edx
cmovne %eax,%ecx
not    %edx
and    %esi,%edx
test   %edx,%edx
mov    %edx,0xdc(%esp)
mov    %esi,%edx
cmovne %eax,%ebp
not    %edx
and    %ebx,%edx
test   %edx,%edx
cmovne %eax,%ecx
test   %ebp,%ebp
mov    %edx,0x9c(%esp)
jne    8057cd0 <__sprintf_chk@plt+0xddc0>
mov    0x24(%esp),%eax
mov    (%eax),%ebx
mov    %eax,%esi
mov    0x4(%esi),%eax
test   %ecx,%ecx
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
mov    0x58(%esp),%esi
mov    %esi,(%ebx,%eax,4)
je     8058300 <__sprintf_chk@plt+0xe3f0>
addl   $0x1,0x14(%esp)
add    $0x20,%edi
mov    0x14(%esp),%eax
addl   $0x8,0x24(%esp)
cmp    %eax,0x44(%esp)
jbe    8058300 <__sprintf_chk@plt+0xe3f0>
mov    0x48(%esp),%eax
mov    0x54(%esp),%ecx
mov    0xc(%eax),%eax
mov    (%eax,%ecx,1),%ecx
cmp    $0xff,%ecx
ja     8057ba8 <__sprintf_chk@plt+0xdc98>
mov    %ecx,%eax
shr    $0x5,%eax
mov    (%edi,%eax,4),%eax
shr    %cl,%eax
test   $0x1,%al
je     8057b69 <__sprintf_chk@plt+0xdc59>
mov    0x84(%esp),%eax
mov    0x80(%esp),%ecx
mov    (%edi),%ebx
mov    %eax,%esi
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
and    %ecx,%ebx
mov    %ebx,0xa0(%esp)
mov    %eax,%edx
and    %esi,%edx
test   %edx,%edx
mov    %eax,0x2c(%esp)
mov    $0x1,%eax
mov    %edx,0xa4(%esp)
jne    8057be9 <__sprintf_chk@plt+0xdcd9>
xor    %eax,%eax
test   %ebx,%ebx
setne  %al
mov    0x88(%esp),%esi
mov    $0x1,%edx
mov    0x8c(%esp),%ebx
mov    %esi,%ebp
mov    %esi,0x30(%esp)
mov    0x8(%edi),%esi
mov    %ebx,0x18(%esp)
mov    0xc(%edi),%ebx
and    %esi,%ebp
test   %ebp,%ebp
mov    %ebp,0xa8(%esp)
mov    0x18(%esp),%ebp
cmovne %edx,%eax
mov    %ebx,0x34(%esp)
and    %ebx,%ebp
mov    0x90(%esp),%ebx
test   %ebp,%ebp
mov    %ebp,0xac(%esp)
cmovne %edx,%eax
mov    %ebx,0x1c(%esp)
mov    0x10(%edi),%ebx
mov    0x1c(%esp),%ebp
mov    %ebx,0x38(%esp)
and    %ebx,%ebp
mov    0x94(%esp),%ebx
test   %ebp,%ebp
mov    %ebp,0xb0(%esp)
cmovne %edx,%eax
mov    %ebx,0x20(%esp)
mov    0x14(%edi),%ebx
mov    0x20(%esp),%ebp
mov    %ebx,0x3c(%esp)
and    %ebx,%ebp
test   %ebp,%ebp
cmovne %edx,%eax
mov    0x98(%esp),%edx
mov    %ebp,0xb4(%esp)
mov    %edx,%ebx
mov    %edx,0x50(%esp)
mov    0x18(%edi),%edx
mov    %edx,0x40(%esp)
and    %ebx,%edx
mov    0x9c(%esp),%ebx
test   %edx,%edx
mov    %edx,0xb8(%esp)
jne    80579d0 <__sprintf_chk@plt+0xdac0>
mov    0x1c(%edi),%edx
mov    %edx,0x4c(%esp)
and    %ebx,%edx
test   %edx,%edx
mov    %edx,0xbc(%esp)
jne    80579e0 <__sprintf_chk@plt+0xdad0>
test   %eax,%eax
je     8057b69 <__sprintf_chk@plt+0xdc59>
jmp    80579e0 <__sprintf_chk@plt+0xdad0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%esi
mov    0xc0(%esp),%edx
mov    %esi,%eax
shl    $0x5,%eax
add    0x64(%esp),%eax
mov    %edx,(%eax)
mov    0xc4(%esp),%edx
mov    %edx,0x4(%eax)
mov    0xc8(%esp),%edx
mov    %edx,0x8(%eax)
mov    0xcc(%esp),%edx
mov    %edx,0xc(%eax)
mov    0xd0(%esp),%edx
mov    %edx,0x10(%eax)
mov    0xd4(%esp),%edx
mov    %edx,0x14(%eax)
mov    0xd8(%esp),%edx
mov    %edx,0x18(%eax)
mov    0xdc(%esp),%edx
mov    %edx,0x1c(%eax)
mov    0xa0(%esp),%eax
mov    %eax,(%edi)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%edi)
mov    0xa8(%esp),%eax
mov    %eax,0x8(%edi)
mov    0xac(%esp),%eax
mov    %eax,0xc(%edi)
mov    0xb0(%esp),%eax
mov    %eax,0x10(%edi)
mov    0xb4(%esp),%eax
mov    %eax,0x14(%edi)
mov    0xb8(%esp),%eax
mov    %eax,0x18(%edi)
mov    0xbc(%esp),%eax
mov    %eax,0x1c(%edi)
mov    0x48(%esp),%eax
mov    0x60(%esp),%ebx
mov    0x1c(%eax),%eax
lea    (%ebx,%esi,8),%esi
cmp    $0x3fffffff,%eax
ja     805871c <__sprintf_chk@plt+0xe80c>
shl    $0x2,%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x24(%esp),%ecx
mov    %eax,(%esi)
mov    0x4(%ecx),%ebp
mov    (%ecx),%ebx
mov    %eax,(%esp)
lea    0x0(,%ebp,4),%edx
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    %ebp,0x4(%esi)
mov    0x24(%esp),%esi
addl   $0x1,0x44(%esp)
jmp    8057b51 <__sprintf_chk@plt+0xdc41>
cmp    $0x112,%ecx
jg     80583ad <__sprintf_chk@plt+0xe49d>
sub    $0x110,%ecx
cmp    $0x1,%ecx
ja     8057e18 <__sprintf_chk@plt+0xdf08>
mov    0x1c(%edi),%esi
test   %esi,%esi
je     8058556 <__sprintf_chk@plt+0xe646>
mov    0x58(%esp),%eax
lea    0x18(%edi),%ecx
mov    %ebx,%edx
call   80529c0 <__sprintf_chk@plt+0x8ab0>
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     80577d0 <__sprintf_chk@plt+0xd8c0>
mov    0x48(%esp),%edi
mov    0x1c(%edi),%ebx
cmp    $0x1fffffff,%ebx
ja     805871c <__sprintf_chk@plt+0xe80c>
lea    0x0(,%ebx,8),%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %ebx,0x7c(%esp)
movl   $0x0,0x78(%esp)
mov    %eax,0x74(%esp)
mov    0x1c(%edi),%eax
cmp    $0x1fffffff,%eax
ja     805871c <__sprintf_chk@plt+0xe80c>
shl    $0x3,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x60(%edi),%ebp
test   %ebp,%ebp
mov    %eax,0x3c(%esp)
jne    8058583 <__sprintf_chk@plt+0xe673>
mov    0x6c(%esp),%eax
mov    $0x400,%edx
test   $0x1,%al
mov    %eax,%edi
jne    8058721 <__sprintf_chk@plt+0xe811>
test   $0x2,%edi
jne    8058737 <__sprintf_chk@plt+0xe827>
mov    %edx,%ecx
mov    $0xffffffff,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8057ebd <__sprintf_chk@plt+0xdfad>
mov    $0xffffffff,%ebx
add    $0x2,%edi
mov    %bx,-0x2(%edi)
and    $0x1,%edx
je     8057ec5 <__sprintf_chk@plt+0xdfb5>
movb   $0xff,(%edi)
mov    0x44(%esp),%edi
test   %edi,%edi
je     80582ab <__sprintf_chk@plt+0xe39b>
mov    0x60(%esp),%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x34(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0x78(%esp)
mov    0x4(%eax),%ebp
test   %ebp,%ebp
je     8057f5f <__sprintf_chk@plt+0xe04f>
mov    (%eax),%edi
xor    %esi,%esi
mov    0x48(%esp),%eax
mov    %ebp,0x14(%esp)
mov    0x5c(%eax),%edx
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    (%edi,%esi,4),%eax
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8057f56 <__sprintf_chk@plt+0xe046>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
mov    (%eax),%eax
lea    0x74(%esp),%ecx
mov    0x4(%eax,%ebx,8),%edx
mov    (%eax,%ebx,8),%eax
add    $0x1,%ebx
call   80529c0 <__sprintf_chk@plt+0x8ab0>
mov    (%edi,%esi,4),%eax
mov    0x5c(%ebp),%edx
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
cmp    %ebx,0x4(%eax)
ja     8057f30 <__sprintf_chk@plt+0xe020>
add    $0x1,%esi
cmp    0x14(%esp),%esi
jne    8057f18 <__sprintf_chk@plt+0xe008>
mov    0x48(%esp),%eax
mov    0x24(%eax),%edi
cmp    $0x1,%edi
jbe    8057fb0 <__sprintf_chk@plt+0xe0a0>
mov    0x78(%esp),%ecx
test   %ecx,%ecx
je     8057fa4 <__sprintf_chk@plt+0xe094>
mov    0x74(%esp),%esi
mov    0x40(%eax),%ebx
mov    (%esi),%eax
testb  $0x1,(%ebx,%eax,4)
je     8058410 <__sprintf_chk@plt+0xe500>
xor    %eax,%eax
jmp    8057f9d <__sprintf_chk@plt+0xe08d>
lea    0x0(%esi),%esi
mov    (%esi,%eax,8),%edx
testb  $0x1,(%ebx,%edx,4)
je     8058410 <__sprintf_chk@plt+0xe500>
add    $0x1,%eax
cmp    %ecx,%eax
jne    8057f90 <__sprintf_chk@plt+0xe080>
mov    0x48(%esp),%eax
movl   $0x0,0x38(%esp)
mov    0x60(%eax),%ebx
test   %ebx,%ebx
je     8057ff6 <__sprintf_chk@plt+0xe0e6>
cmp    $0x1,%edi
je     8057fc4 <__sprintf_chk@plt+0xe0b4>
mov    0x38(%esp),%ecx
test   %ecx,%ecx
jne    8057ff6 <__sprintf_chk@plt+0xe0e6>
mov    0x48(%esp),%esi
mov    0x50(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     8057ff6 <__sprintf_chk@plt+0xe0e6>
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
lea    0x74(%esp),%ecx
mov    0x4(%eax,%ebx,8),%edx
mov    (%eax,%ebx,8),%eax
add    $0x1,%ebx
call   80529c0 <__sprintf_chk@plt+0x8ab0>
mov    0x50(%esi),%eax
cmp    %ebx,0x8(%eax)
ja     8057fd8 <__sprintf_chk@plt+0xe0c8>
movzbl 0x80739a0,%ecx
mov    0x2c(%esp),%edi
mov    0x8073580,%edx
movzbl %cl,%eax
and    $0x1f,%ecx
shr    $0x5,%eax
mov    (%edi,%eax,4),%ebp
shr    %cl,%ebp
mov    (%edi),%ecx
and    $0x1,%ebp
cmp    $0x1,%ebp
sbb    %eax,%eax
neg    %ebp
and    $0xfffffffc,%eax
and    $0x4,%ebp
add    $0x6,%eax
test   %edx,%ecx
cmovne %eax,%ebp
mov    0x8073560,%eax
or     %edx,%eax
mov    %ebp,%edx
not    %eax
or     $0x1,%edx
test   %eax,%ecx
mov    0x4(%edi),%ecx
mov    0x8073584,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x8073564,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x8(%edi),%ecx
mov    0x8073588,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x8073568,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0xc(%edi),%ecx
mov    0x807358c,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x807356c,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x10(%edi),%ecx
mov    0x8073590,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x8073570,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x14(%edi),%ecx
mov    0x8073594,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x8073574,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x18(%edi),%ecx
mov    0x8073598,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x8073578,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x1c(%edi),%ecx
mov    0x807359c,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x807357c,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x78(%esp),%eax
cmovne %edx,%ebp
mov    0x74(%esp),%edx
xor    %ebx,%ebx
test   %eax,%eax
lea    (%edx,%eax,8),%esi
je     8058538 <__sprintf_chk@plt+0xe628>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %ebx,%edi
or     $0x4,%edi
mov    %eax,%ecx
shr    $0x2,%ecx
xor    %eax,%ecx
and    $0x111,%ecx
mov    %eax,%ecx
cmovne %edi,%ebx
shr    %ecx
mov    %ebx,%edi
xor    %eax,%ecx
or     $0x2,%edi
and    $0x111,%ecx
cmovne %edi,%ebx
add    $0x8,%edx
cmp    %esi,%edx
jne    8058158 <__sprintf_chk@plt+0xe248>
mov    %ebx,%eax
and    %ebp,%eax
mov    %eax,%esi
mov    %eax,%edi
and    $0x4,%esi
and    $0x2,%edi
cmp    %eax,%ebp
movl   $0xffffffff,0x28(%esp)
je     80581bb <__sprintf_chk@plt+0xe2ab>
mov    0x48(%esp),%eax
mov    %ebx,%ecx
xor    $0x7,%ecx
lea    0x74(%esp),%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
test   %esi,%esi
mov    %eax,0x20(%esp)
jne    805843c <__sprintf_chk@plt+0xe52c>
test   %edi,%edi
mov    %eax,0x1c(%esp)
jne    8058421 <__sprintf_chk@plt+0xe511>
movzbl 0x80739a0,%eax
movl   $0x0,0x24(%esp)
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi),%esi
mov    0x24(%esp),%esi
xor    %ebx,%ebx
mov    0x2c(%esp),%edi
mov    (%edi,%esi,4),%ebp
mov    %esi,%edi
shl    $0x6,%edi
shl    $0x5,%esi
jmp    805822e <__sprintf_chk@plt+0xe31e>
nop
cmp    $0x5f,%esi
je     805824e <__sprintf_chk@plt+0xe33e>
mov    0x28(%esp),%ecx
mov    %ecx,(%eax,%ebx,4)
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
add    $0x1,%esi
add    $0x2,%edi
cmp    $0x20,%ebx
je     8058263 <__sprintf_chk@plt+0xe353>
bt     %ebx,%ebp
jae    8058220 <__sprintf_chk@plt+0xe310>
cmp    %esi,0x14(%esp)
je     80582f0 <__sprintf_chk@plt+0xe3e0>
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%edi,1)
mov    0x18(%esp),%eax
je     8058210 <__sprintf_chk@plt+0xe300>
mov    0x1c(%esp),%ecx
add    $0x1,%esi
add    $0x2,%edi
mov    %ecx,(%eax,%ebx,4)
add    $0x1,%ebx
cmp    $0x20,%ebx
jne    805822e <__sprintf_chk@plt+0xe31e>
addl   $0x1,0x24(%esp)
subl   $0xffffff80,0x18(%esp)
cmpl   $0x8,0x24(%esp)
jne    80581f8 <__sprintf_chk@plt+0xe2e8>
addl   $0x1,0x30(%esp)
mov    0x44(%esp),%eax
addl   $0x8,0x34(%esp)
addl   $0x20,0x2c(%esp)
cmp    %eax,0x30(%esp)
jne    8057ef1 <__sprintf_chk@plt+0xdfe1>
mov    0x60(%esp),%edi
xor    %ebx,%ebx
mov    %eax,%esi
mov    (%edi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
cmp    %esi,%ebx
jne    8058299 <__sprintf_chk@plt+0xe389>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x64(%esp),%eax
mov    %eax,0x100(%esp)
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049800 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x20(%esp),%ecx
mov    %ecx,(%eax,%ebx,4)
jmp    8058220 <__sprintf_chk@plt+0xe310>
mov    0x44(%esp),%eax
cmp    %eax,0x14(%esp)
je     805845b <__sprintf_chk@plt+0xe54b>
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     80577d0 <__sprintf_chk@plt+0xd8c0>
jmp    8057e27 <__sprintf_chk@plt+0xdf17>
mov    0x8073564,%eax
mov    0x8073560,%edx
not    %eax
and    %eax,0x84(%esp)
not    %edx
mov    0x8073568,%eax
and    0x80(%esp),%edx
not    %eax
and    %eax,0x88(%esp)
mov    0x807356c,%eax
mov    %edx,0x80(%esp)
not    %eax
and    %eax,0x8c(%esp)
mov    0x8073570,%eax
not    %eax
and    %eax,0x90(%esp)
mov    0x8073574,%eax
not    %eax
and    %eax,0x94(%esp)
mov    0x8073578,%eax
not    %eax
and    %eax,0x98(%esp)
mov    0x807357c,%eax
not    %eax
and    %eax,0x9c(%esp)
jmp    8057840 <__sprintf_chk@plt+0xd930>
mov    0x48(%esp),%esi
lea    0x7fffeed(%ecx),%eax
shl    $0x5,%eax
add    (%esi),%eax
mov    (%eax),%edx
mov    %edx,0x80(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x84(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x88(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x8c(%esp)
mov    0x10(%eax),%edx
mov    %edx,0x90(%esp)
mov    0x14(%eax),%edx
mov    %edx,0x94(%esp)
mov    0x18(%eax),%edx
mov    0x1c(%eax),%eax
mov    %edx,0x98(%esp)
mov    %eax,0x9c(%esp)
jmp    8057817 <__sprintf_chk@plt+0xd907>
movl   $0x1,0x38(%esp)
mov    0x48(%esp),%eax
jmp    8057fb0 <__sprintf_chk@plt+0xe0a0>
mov    0x48(%esp),%eax
mov    $0x2,%ecx
lea    0x74(%esp),%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,0x1c(%esp)
jmp    80581d7 <__sprintf_chk@plt+0xe2c7>
mov    0x48(%esp),%eax
mov    $0x4,%ecx
lea    0x74(%esp),%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
jmp    80581cb <__sprintf_chk@plt+0xe2bb>
mov    0x14(%esp),%edi
mov    %edi,%eax
shl    $0x5,%eax
lea    0x0(,%edi,8),%edx
mov    0x80(%esp),%ecx
add    0x64(%esp),%eax
mov    %ecx,(%eax)
mov    0x84(%esp),%ecx
mov    %ecx,0x4(%eax)
mov    0x88(%esp),%ecx
mov    %ecx,0x8(%eax)
mov    0x8c(%esp),%ecx
mov    %ecx,0xc(%eax)
mov    0x90(%esp),%ecx
mov    %ecx,0x10(%eax)
mov    0x94(%esp),%ecx
mov    %ecx,0x14(%eax)
mov    0x98(%esp),%ecx
mov    %ecx,0x18(%eax)
mov    0x9c(%esp),%ecx
mov    %ecx,0x1c(%eax)
xor    %eax,%eax
movl   $0x0,0x80(%esp,%eax,1)
00
add    $0x4,%eax
cmp    $0x20,%eax
jb     80584c0 <__sprintf_chk@plt+0xe5b0>
mov    0x60(%esp),%eax
mov    0x48(%esp),%edi
lea    (%eax,%edx,1),%ebx
mov    0x1c(%edi),%eax
cmp    $0x3fffffff,%eax
ja     805871c <__sprintf_chk@plt+0xe80c>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x58(%esp),%ecx
movl   $0x1,0x4(%ebx)
mov    %ecx,(%eax)
mov    %eax,(%ebx)
mov    0x14(%esp),%eax
add    $0x1,%eax
mov    %eax,0x44(%esp)
mov    %edi,%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     80577d0 <__sprintf_chk@plt+0xd8c0>
jmp    8057e27 <__sprintf_chk@plt+0xdf17>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
xor    %esi,%esi
xor    %eax,%eax
xor    %ebx,%ebx
jmp    8058199 <__sprintf_chk@plt+0xe289>
xor    %edx,%edx
xor    %eax,%eax
movl   $0x0,0x14(%esp)
jmp    805846b <__sprintf_chk@plt+0xe55b>
movl   $0x8,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x1,0x20(%edi)
movl   $0x0,0x1c(%edi)
mov    %eax,0x18(%edi)
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
jmp    8057dfc <__sprintf_chk@plt+0xdeec>
mov    0x48(%esp),%eax
mov    0x50(%eax),%esi
mov    0x74(%esp),%eax
mov    0x8(%esi),%edx
cmp    %edx,0x7c(%esp)
ja     80585de <__sprintf_chk@plt+0xe6ce>
mov    0x74(%esp),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%ebx
add    %edx,%ebx
test   %al,%al
jne    8058705 <__sprintf_chk@plt+0xe7f5>
cmp    $0x15555554,%ebx
ja     805871c <__sprintf_chk@plt+0xe80c>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebx,0x7c(%esp)
mov    0x8(%esi),%edx
mov    %eax,0x74(%esp)
mov    0x4(%esi),%ecx
shl    $0x3,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x8(%esi),%eax
mov    0x74(%esp),%esi
test   %eax,%eax
mov    %eax,0x78(%esp)
je     80586e6 <__sprintf_chk@plt+0xe7d6>
lea    (%esi,%eax,8),%edi
xor    %ebx,%ebx
mov    0x4(%esi),%eax
mov    %ebx,%ecx
or     $0x4,%ecx
mov    %eax,%edx
shr    $0x2,%edx
xor    %eax,%edx
and    $0x111,%edx
mov    %eax,%edx
cmovne %ecx,%ebx
shr    %edx
mov    %ebx,%ecx
xor    %eax,%edx
or     $0x2,%ecx
and    $0x111,%edx
cmovne %ecx,%ebx
add    $0x8,%esi
cmp    %edi,%esi
jne    805860c <__sprintf_chk@plt+0xe6fc>
mov    0x48(%esp),%eax
mov    %ebx,%ecx
lea    0x74(%esp),%edi
xor    $0x7,%ecx
mov    %edi,%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
test   $0x4,%bl
mov    %eax,%esi
jne    80586c5 <__sprintf_chk@plt+0xe7b5>
mov    %ebx,%ecx
mov    %eax,%ebp
and    $0x2,%ecx
test   %ecx,%ecx
mov    %esi,%ebx
jne    80586b1 <__sprintf_chk@plt+0xe7a1>
call   8049ef0 <__ctype_b_loc@plt>
mov    0x6c(%esp),%edi
mov    (%eax),%ecx
mov    $0x1,%eax
jmp    8058683 <__sprintf_chk@plt+0xe773>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
testb  $0x8,-0x2(%ecx,%eax,2)
mov    %ebx,%edx
jne    8058693 <__sprintf_chk@plt+0xe783>
cmp    $0x60,%eax
je     80586de <__sprintf_chk@plt+0xe7ce>
mov    %esi,%edx
cmp    $0x100,%eax
mov    %edx,-0x4(%edi,%eax,4)
jne    8058680 <__sprintf_chk@plt+0xe770>
movzbl 0x80739a0,%eax
mov    0x6c(%esp),%edi
mov    %ebp,(%edi,%eax,4)
jmp    8057ec5 <__sprintf_chk@plt+0xdfb5>
mov    0x48(%esp),%eax
mov    $0x2,%ecx
mov    %edi,%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,%ebx
jmp    8058667 <__sprintf_chk@plt+0xe757>
mov    0x48(%esp),%eax
mov    $0x4,%ecx
mov    %edi,%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %ebx,%ecx
and    $0x2,%ecx
mov    %eax,%ebp
jmp    8058661 <__sprintf_chk@plt+0xe751>
mov    %ebx,0x17c(%edi)
jmp    8058680 <__sprintf_chk@plt+0xe770>
mov    0x48(%esp),%eax
lea    0x74(%esp),%edi
mov    $0x7,%ecx
mov    %edi,%edx
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,%ebx
mov    %eax,%esi
mov    %eax,%ebp
jmp    8058667 <__sprintf_chk@plt+0xe757>
test   %ebx,%ebx
jne    80585c0 <__sprintf_chk@plt+0xe6b0>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    80585c7 <__sprintf_chk@plt+0xe6b7>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x1(%eax),%edi
mov    $0x3ff,%dx
test   $0x2,%edi
movb   $0xff,(%eax)
je     8057ea0 <__sprintf_chk@plt+0xdf90>
mov    $0xffffffff,%esi
add    $0x2,%edi
mov    %si,-0x2(%edi)
sub    $0x2,%edx
jmp    8057ea0 <__sprintf_chk@plt+0xdf90>
movl   $0x0,0x44(%esp)
jmp    8057e27 <__sprintf_chk@plt+0xdf17>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x68(%edx),%eax
cmp    $0x3ff,%eax
jg     8058980 <__sprintf_chk@plt+0xea70>
add    $0x1,%eax
mov    %eax,0x68(%ebx)
mov    0x10(%esp),%ecx
mov    0x78(%ebx),%eax
lea    (%eax,%ecx,4),%edx
lea    (%ecx,%ecx,8),%eax
shl    $0x2,%eax
mov    %eax,0x1c(%esp)
add    0x50(%ebx),%eax
movl   $0x0,(%edx)
movzwl 0x12(%eax),%ecx
movzbl 0x10(%eax),%esi
mov    %ecx,%edi
shr    $0x8,%di
and    $0xf,%edi
and    %edi,%esi
je     8058966 <__sprintf_chk@plt+0xea56>
mov    $0x5,%ebp
mov    $0x4,%esi
movl   $0x7,0x18(%esp)
movl   $0x6,0x14(%esp)
mov    %esi,(%edx)
movzbl 0x10(%eax),%esi
mov    %ecx,%edi
shr    $0x4,%di
and    $0xf,%edi
test   %esi,%edi
je     80587f2 <__sprintf_chk@plt+0xe8e2>
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebp
mov    %edi,(%edx)
movzbl 0x10(%eax),%esi
and    $0xf,%ecx
test   %ecx,%esi
je     80587fb <__sprintf_chk@plt+0xe8eb>
mov    %ebp,(%edx)
movl   $0x400,(%esp)
xor    %edi,%edi
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8057740 <__sprintf_chk@plt+0xd830>
mov    0x64(%ebx),%esi
lea    0x0(%esi),%esi
cmp    %esi,0x0(%ebp,%edi,4)
jl     8058906 <__sprintf_chk@plt+0xe9f6>
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%eax
mov    %eax,0x64(%ebx)
cmp    %eax,0x0(%ebp,%edi,4)
jge    8058838 <__sprintf_chk@plt+0xe928>
add    $0x1,%eax
mov    0x70(%ebx),%edx
cmp    $0x3fffffff,%eax
ja     80589e8 <__sprintf_chk@plt+0xead8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x74(%ebx),%edx
mov    %eax,0x70(%ebx)
add    $0x4,%eax
mov    %eax,0x6c(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     80589e8 <__sprintf_chk@plt+0xead8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x78(%ebx),%edx
mov    %eax,0x74(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     80589e8 <__sprintf_chk@plt+0xead8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x7c(%ebx),%edx
mov    %eax,0x78(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     80589e8 <__sprintf_chk@plt+0xead8>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x64(%ebx),%ecx
cmp    %esi,%ecx
mov    %eax,0x7c(%ebx)
jle    8058953 <__sprintf_chk@plt+0xea43>
lea    0x0(,%esi,4),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%edx
add    $0x1,%esi
movl   $0x0,(%edx,%eax,1)
mov    0x74(%ebx),%edx
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    %ecx,%esi
jne    80588e8 <__sprintf_chk@plt+0xe9d8>
add    $0x1,%edi
cmp    $0x100,%edi
jne    8058828 <__sprintf_chk@plt+0xe918>
movzbl 0x80739a0,%eax
mov    0x7c(%ebx),%edx
mov    0x10(%esp),%edi
lea    0x0(%ebp,%eax,4),%eax
mov    (%eax),%ecx
mov    %ecx,(%edx,%edi,4)
mov    0x1c(%esp),%ecx
movl   $0xffffffff,(%eax)
mov    0x50(%ebx),%eax
cmpw   $0x0,0x12(%eax,%ecx,1)
jne    80589da <__sprintf_chk@plt+0xeaca>
mov    0x6c(%ebx),%eax
mov    %ebp,(%eax,%edi,4)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%edi
mov    %ecx,%esi
cmp    $0x100,%edi
jne    8058828 <__sprintf_chk@plt+0xe918>
jmp    8058915 <__sprintf_chk@plt+0xea05>
mov    $0x1,%ebp
movl   $0x3,0x18(%esp)
movl   $0x2,0x14(%esp)
jmp    80587d1 <__sprintf_chk@plt+0xe8c1>
mov    0x64(%edx),%eax
xor    %esi,%esi
test   %eax,%eax
jle    80589d0 <__sprintf_chk@plt+0xeac0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%eax
lea    0x0(,%esi,4),%edi
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x74(%ebx),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x6c(%ebx),%eax
mov    0x74(%ebx),%edx
add    %edi,%eax
movl   $0x0,(%edx,%esi,4)
add    $0x1,%esi
cmp    %esi,0x64(%ebx)
movl   $0x0,(%eax)
jg     8058990 <__sprintf_chk@plt+0xea80>
mov    $0x1,%eax
jmp    805877e <__sprintf_chk@plt+0xe86e>
mov    0x74(%ebx),%eax
mov    %ebp,(%eax,%edi,4)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    (%ecx),%edi
mov    %edx,0x10(%esp)
mov    0x8073534,%edx
mov    %eax,0x14(%esp)
mov    %edi,%eax
sub    0x807352c,%eax
movzbl (%edx,%eax,1),%eax
test   %al,%al
je     8058df3 <__sprintf_chk@plt+0xeee3>
mov    0x64(%esp),%ecx
mov    %eax,(%ecx)
mov    0x10(%esp),%ebx
xor    %esi,%esi
jmp    8058a4b <__sprintf_chk@plt+0xeb3b>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%edx
xor    %ebx,%ebx
mov    (%eax,%edx,4),%eax
test   %eax,%eax
cmovns %eax,%ebx
mov    0x64(%esp),%eax
add    $0x1,%esi
cmp    %esi,(%eax)
jle    8058a98 <__sprintf_chk@plt+0xeb88>
mov    0x0(%ebp),%edi
lea    0x1(%edi),%eax
mov    %eax,0x0(%ebp)
mov    0x14(%esp),%eax
mov    0x6c(%eax),%ecx
mov    (%ecx,%ebx,4),%eax
lea    0x0(,%ebx,4),%edx
test   %eax,%eax
jne    8058a30 <__sprintf_chk@plt+0xeb20>
test   %ebx,%ebx
js     8058d80 <__sprintf_chk@plt+0xee70>
mov    0x14(%esp),%eax
mov    0x74(%eax),%eax
mov    (%eax,%edx,1),%eax
test   %eax,%eax
je     8058ddc <__sprintf_chk@plt+0xeecc>
movzbl (%edi),%edx
add    $0x1,%esi
mov    (%eax,%edx,4),%ebx
mov    0x64(%esp),%eax
cmp    %esi,(%eax)
jg     8058a48 <__sprintf_chk@plt+0xeb38>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
lea    (%ebx,%ebx,8),%edx
mov    0x68(%esp),%ecx
mov    0x50(%eax),%eax
lea    (%eax,%edx,4),%ebx
mov    0x8(%ebx),%eax
cmp    %eax,0x8(%ecx)
ja     8058e08 <__sprintf_chk@plt+0xeef8>
mov    (%ecx),%edi
test   %edi,%edi
sete   %cl
movzbl %cl,%edx
test   %cl,%cl
lea    (%eax,%edx,1),%esi
jne    8058e4d <__sprintf_chk@plt+0xef3d>
cmp    $0x15555554,%esi
ja     8058e69 <__sprintf_chk@plt+0xef59>
lea    0x1(%esi),%eax
shr    %eax
add    %eax,%esi
lea    0x0(,%esi,8),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x68(%esp),%ecx
mov    %esi,0x8(%ecx)
mov    0x8(%ebx),%edx
mov    %eax,(%ecx)
mov    %eax,%ecx
mov    0x4(%ebx),%eax
shl    $0x3,%edx
mov    %ecx,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x8(%ebx),%eax
mov    0x68(%esp),%ecx
mov    0x60(%esp),%esi
mov    %eax,0x4(%ecx)
mov    0x10(%esp),%eax
lea    (%eax,%eax,8),%eax
shl    $0x2,%eax
test   %esi,%esi
je     8058e15 <__sprintf_chk@plt+0xef05>
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x14(%esp),%eax
mov    0x2c(%esp),%ecx
mov    0x50(%eax),%eax
mov    0x1c(%eax,%ecx,1),%edx
mov    %eax,0x30(%esp)
test   %edx,%edx
je     8058ccb <__sprintf_chk@plt+0xedbb>
movl   $0x0,0x28(%esp)
jmp    8058b77 <__sprintf_chk@plt+0xec67>
lea    0x0(%esi),%esi
addl   $0x1,0x28(%esp)
cmp    %edx,0x28(%esp)
jae    8058ccb <__sprintf_chk@plt+0xedbb>
mov    0x64(%esp),%edi
mov    0x3c(%esp),%eax
mov    0x28(%esp),%ecx
mov    (%edi),%edi
cmp    %edi,(%eax,%ecx,4)
jne    8058b68 <__sprintf_chk@plt+0xec58>
mov    0x14(%esp),%eax
mov    %ecx,%esi
mov    0x2c(%esp),%edi
mov    0x5c(%eax),%eax
mov    %eax,%ecx
mov    %eax,0x1c(%esp)
mov    0x30(%esp),%eax
mov    0x18(%eax,%edi,1),%eax
lea    0x0(,%esi,8),%edi
mov    %edi,0x34(%esp)
mov    %eax,0x20(%esp)
mov    (%eax,%esi,8),%eax
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8058b68 <__sprintf_chk@plt+0xec58>
mov    0x68(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    (%ecx),%ebp
mov    0x4(%ecx),%ecx
mov    %ecx,%edi
nop
mov    (%eax),%eax
mov    %edi,%edx
xor    %ebx,%ebx
mov    0x10(%esp),%ecx
lea    (%eax,%ecx,8),%eax
mov    (%eax),%esi
mov    0x4(%eax),%eax
mov    %eax,0x18(%esp)
jmp    8058bf3 <__sprintf_chk@plt+0xece3>
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8058c18 <__sprintf_chk@plt+0xed08>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%esi
jb     8058bf0 <__sprintf_chk@plt+0xece0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8058c18 <__sprintf_chk@plt+0xed08>
add    %ebx,%eax
shr    %eax
cmp    %esi,0x0(%ebp,%eax,8)
ja     8058bf0 <__sprintf_chk@plt+0xece0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8058c08 <__sprintf_chk@plt+0xecf8>
cmp    %edi,%ebx
jae    8058c28 <__sprintf_chk@plt+0xed18>
lea    0x0(%ebp,%ebx,8),%eax
cmp    %esi,(%eax)
je     8058d98 <__sprintf_chk@plt+0xee88>
mov    0x68(%esp),%eax
lea    0x1(%edi),%edx
cmp    %edx,0x8(%eax)
jbe    8058d00 <__sprintf_chk@plt+0xedf0>
mov    0x30(%esp),%eax
add    0x2c(%esp),%eax
mov    %eax,0x38(%esp)
cmp    %edi,%ebx
jae    8058c78 <__sprintf_chk@plt+0xed68>
mov    %edi,%eax
sub    %ebx,%eax
shl    $0x3,%edi
shl    $0x3,%eax
mov    %edi,%ecx
sub    %eax,%ecx
add    %ebp,%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edi,1),%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   80497f0 <memmove@plt>
mov    0x24(%esp),%edx
mov    0x18(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%edi
mov    %esi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x68(%esp),%eax
mov    %edx,0x4(%eax)
mov    0x20(%esp),%eax
mov    0x34(%esp),%ecx
addl   $0x1,0x10(%esp)
mov    (%eax,%ecx,1),%eax
mov    0x1c(%esp),%ecx
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x10(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     8058bd8 <__sprintf_chk@plt+0xecc8>
mov    0x38(%esp),%eax
addl   $0x1,0x28(%esp)
mov    0x1c(%eax),%edx
cmp    %edx,0x28(%esp)
jb     8058b77 <__sprintf_chk@plt+0xec67>
mov    0x3c(%esp),%eax
mov    0x60(%esp),%edx
test   %eax,%eax
setne  %al
test   %edx,%edx
sete   %dl
and    %edx,%eax
test   %al,%al
je     8058cef <__sprintf_chk@plt+0xeddf>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %edi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8058dc5 <__sprintf_chk@plt+0xeeb5>
cmp    $0x15555554,%edx
ja     8058e69 <__sprintf_chk@plt+0xef59>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x68(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
lea    0x1(%ecx),%edx
mov    0x14(%esp),%ecx
mov    0x5c(%ecx),%ebp
mov    0x50(%ecx),%ecx
mov    %ebp,0x1c(%esp)
mov    %eax,%ebp
mov    %ecx,0x30(%esp)
add    0x2c(%esp),%ecx
mov    %ecx,0x38(%esp)
mov    0x18(%ecx),%ecx
mov    %ecx,0x20(%esp)
jmp    8058c44 <__sprintf_chk@plt+0xed34>
lea    0x0(%esi),%esi
cmp    %edi,0x8073528
je     8058e64 <__sprintf_chk@plt+0xef54>
xor    %ebx,%ebx
jmp    8058a58 <__sprintf_chk@plt+0xeb48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
or     %ecx,0x4(%eax)
mov    0x14(%esp),%eax
mov    0x5c(%eax),%ecx
mov    0x50(%eax),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x30(%esp)
add    0x2c(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x18(%eax),%eax
mov    %eax,0x20(%esp)
jmp    8058c92 <__sprintf_chk@plt+0xed82>
test   %edx,%edx
jne    8058d28 <__sprintf_chk@plt+0xee18>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8058d2f <__sprintf_chk@plt+0xee1f>
mov    0x14(%esp),%edx
mov    %ebx,%eax
call   8058760 <__sprintf_chk@plt+0xe850>
mov    0x14(%esp),%eax
mov    0x6c(%eax),%ecx
jmp    8058a58 <__sprintf_chk@plt+0xeb48>
mov    0x64(%esp),%eax
movl   $0x1,(%eax)
jmp    8058a23 <__sprintf_chk@plt+0xeb13>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ecx
mov    %eax,%edx
mov    (%ecx),%ecx
jmp    8058afe <__sprintf_chk@plt+0xebee>
mov    %eax,%ecx
mov    %eax,0x2c(%esp)
mov    0x14(%esp),%eax
mov    0x50(%eax),%eax
mov    0x1c(%eax,%ecx,1),%ebx
test   %ebx,%ebx
je     8058cef <__sprintf_chk@plt+0xeddf>
mov    0x0(%ebp),%ecx
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
sub    0x807352c,%ecx
call   8053200 <__sprintf_chk@plt+0x92f0>
mov    %eax,0x3c(%esp)
jmp    8058b40 <__sprintf_chk@plt+0xec30>
test   %esi,%esi
jne    8058add <__sprintf_chk@plt+0xebcd>
mov    $0x40,%eax
mov    $0x8,%esi
jmp    8058ae4 <__sprintf_chk@plt+0xebd4>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x6c,%esp
mov    0x50(%edi),%esi
mov    %eax,0x34(%esp)
lea    (%edx,%edx,8),%eax
mov    (%ecx),%edi
mov    %ecx,0x48(%esp)
movl   $0x0,0x3c(%esp)
lea    (%esi,%eax,4),%eax
mov    0x1c(%eax),%eax
mov    %edi,%esi
mov    %edi,0x40(%esp)
test   %eax,%eax
mov    %eax,0x44(%esp)
jne    8058f12 <__sprintf_chk@plt+0xf002>
mov    0x34(%esp),%eax
mov    0x6c(%eax),%edx
mov    %eax,%edi
mov    (%edx,%ebx,4),%eax
lea    0x0(,%ebx,4),%ecx
test   %eax,%eax
je     8058ee8 <__sprintf_chk@plt+0xefd8>
movzbl (%esi),%edx
xor    %ebx,%ebx
mov    (%eax,%edx,4),%eax
test   %eax,%eax
cmovns %eax,%ebx
mov    0x48(%esp),%eax
addl   $0x1,(%eax)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %ebx,%ebx
js     8058f02 <__sprintf_chk@plt+0xeff2>
mov    0x74(%edi),%eax
mov    (%eax,%ecx,1),%eax
test   %eax,%eax
je     80592b9 <__sprintf_chk@plt+0xf3a9>
movzbl (%esi),%edx
mov    (%eax,%edx,4),%ebx
jmp    8058ecb <__sprintf_chk@plt+0xefbb>
cmp    %esi,0x8073528
je     80592d5 <__sprintf_chk@plt+0xf3c5>
xor    %ebx,%ebx
jmp    8058eb0 <__sprintf_chk@plt+0xefa0>
mov    0x34(%esp),%eax
mov    %edi,%ecx
sub    0x807352c,%ecx
call   8053200 <__sprintf_chk@plt+0x92f0>
mov    0x44(%esp),%ecx
xor    %edx,%edx
mov    %eax,%edi
mov    %eax,0x3c(%esp)
lea    (%edi,%ecx,4),%ecx
mov    (%eax),%esi
cmp    %esi,%edx
cmovl  %esi,%edx
add    $0x4,%eax
cmp    %ecx,%eax
jne    8058f32 <__sprintf_chk@plt+0xf022>
test   %edx,%edx
mov    %edx,0x4c(%esp)
je     80592ca <__sprintf_chk@plt+0xf3ba>
mov    0x34(%esp),%eax
mov    0x1c(%eax),%esi
cmp    $0x1fffffff,%esi
ja     80592da <__sprintf_chk@plt+0xf3ca>
lea    0x0(,%esi,8),%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x48(%esp),%edi
mov    %ebx,%edx
mov    %esi,0x5c(%esp)
movl   $0x0,0x58(%esp)
mov    %edi,%ecx
mov    %eax,0x54(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x34(%esp),%eax
call   80589f0 <__sprintf_chk@plt+0xeae0>
mov    0x8073530,%edx
mov    $0x4,%ecx
mov    (%edi),%eax
sub    0x50(%esp),%eax
sub    0x807352c,%eax
mov    (%edx,%eax,4),%eax
movzbl 0x80739a0,%edx
cmp    %edx,%eax
je     8058fd3 <__sprintf_chk@plt+0xf0c3>
test   %eax,%eax
jne    8059234 <__sprintf_chk@plt+0xf324>
mov    0x34(%esp),%edi
lea    0x54(%esp),%edx
mov    %edi,%eax
call   80558e0 <__sprintf_chk@plt+0xb9d0>
mov    %eax,%edx
mov    %eax,%ebx
mov    %edi,%eax
call   8052b00 <__sprintf_chk@plt+0x8bf0>
mov    0x48(%esp),%eax
mov    (%eax),%eax
sub    0x40(%esp),%eax
cmp    0x4c(%esp),%eax
jge    8059297 <__sprintf_chk@plt+0xf387>
lea    0x54(%esp),%eax
mov    0x48(%esp),%edi
mov    %ebx,%edx
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0x0,(%esp)
mov    %edi,%ecx
call   80589f0 <__sprintf_chk@plt+0xeae0>
lea    (%ebx,%ebx,8),%eax
mov    (%edi),%ecx
shl    $0x2,%eax
mov    %eax,0x38(%esp)
movl   $0x0,0x2c(%esp)
jmp    8059053 <__sprintf_chk@plt+0xf143>
nop
addl   $0x1,0x2c(%esp)
mov    0x44(%esp),%eax
cmp    %eax,0x2c(%esp)
je     8059206 <__sprintf_chk@plt+0xf2f6>
mov    0x3c(%esp),%edi
mov    %ecx,%eax
mov    0x2c(%esp),%esi
sub    0x40(%esp),%eax
cmp    %eax,(%edi,%esi,4)
jne    8059040 <__sprintf_chk@plt+0xf130>
mov    0x34(%esp),%eax
mov    0x38(%esp),%esi
mov    0x5c(%eax),%edi
mov    0x50(%eax),%eax
mov    %edi,0x20(%esp)
mov    0x18(%eax,%esi,1),%eax
mov    0x2c(%esp),%esi
mov    %eax,0x24(%esp)
mov    (%eax,%esi,8),%eax
lea    0x0(,%esi,8),%edx
mov    %edx,0x30(%esp)
lea    (%eax,%eax,2),%eax
lea    (%edi,%eax,4),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     8059040 <__sprintf_chk@plt+0xf130>
mov    0x58(%esp),%ecx
mov    0x54(%esp),%ebp
movl   $0x0,0x18(%esp)
mov    %ecx,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
mov    %edi,%edx
xor    %ebx,%ebx
mov    0x18(%esp),%ecx
lea    (%eax,%ecx,8),%eax
mov    (%eax),%esi
mov    0x4(%eax),%eax
mov    %eax,0x1c(%esp)
jmp    80590d3 <__sprintf_chk@plt+0xf1c3>
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    80590f8 <__sprintf_chk@plt+0xf1e8>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%esi
jb     80590d0 <__sprintf_chk@plt+0xf1c0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    80590f8 <__sprintf_chk@plt+0xf1e8>
add    %ebx,%eax
shr    %eax
cmp    %esi,0x0(%ebp,%eax,8)
ja     80590d0 <__sprintf_chk@plt+0xf1c0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     80590e8 <__sprintf_chk@plt+0xf1d8>
cmp    %edi,%ebx
jae    8059108 <__sprintf_chk@plt+0xf1f8>
lea    0x0(%ebp,%ebx,8),%eax
cmp    %esi,(%eax)
je     8059258 <__sprintf_chk@plt+0xf348>
lea    0x1(%edi),%edx
cmp    %edx,0x5c(%esp)
ja     805917f <__sprintf_chk@plt+0xf26f>
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %edi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8059280 <__sprintf_chk@plt+0xf370>
cmp    $0x15555554,%edx
ja     80592da <__sprintf_chk@plt+0xf3ca>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%edx
mov    0x58(%esp),%ecx
mov    %edx,0x5c(%esp)
lea    0x1(%ecx),%edx
mov    0x34(%esp),%ecx
mov    %eax,0x54(%esp)
mov    0x5c(%ecx),%ebp
mov    0x50(%ecx),%ecx
mov    %ebp,0x20(%esp)
mov    0x38(%esp),%ebp
mov    0x18(%ecx,%ebp,1),%ecx
mov    %eax,%ebp
mov    %ecx,0x24(%esp)
cmp    %edi,%ebx
jae    80591b3 <__sprintf_chk@plt+0xf2a3>
mov    %edi,%eax
sub    %ebx,%eax
shl    $0x3,%edi
shl    $0x3,%eax
mov    %edi,%ecx
sub    %eax,%ecx
add    %ebp,%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edi,1),%eax
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   80497f0 <memmove@plt>
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%edi
mov    %esi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x24(%esp),%eax
mov    %edx,0x58(%esp)
mov    0x30(%esp),%ecx
addl   $0x1,0x18(%esp)
mov    (%eax,%ecx,1),%eax
mov    0x20(%esp),%ecx
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x18(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     80590b8 <__sprintf_chk@plt+0xf1a8>
mov    0x48(%esp),%eax
addl   $0x1,0x2c(%esp)
mov    (%eax),%ecx
mov    0x44(%esp),%eax
cmp    %eax,0x2c(%esp)
jne    8059053 <__sprintf_chk@plt+0xf143>
mov    0x8073530,%eax
sub    0x50(%esp),%ecx
sub    0x807352c,%ecx
movzbl 0x80739a0,%edx
mov    (%eax,%ecx,4),%eax
mov    $0x4,%ecx
cmp    %edx,%eax
je     8058fd3 <__sprintf_chk@plt+0xf0c3>
test   %eax,%eax
je     8058fd3 <__sprintf_chk@plt+0xf0c3>
cmp    $0x5f,%eax
mov    $0x2,%cl
je     8058fd3 <__sprintf_chk@plt+0xf0c3>
mov    %eax,(%esp)
call   8049c60 <iswalnum@plt>
cmp    $0x1,%eax
sbb    %ecx,%ecx
add    $0x2,%ecx
jmp    8058fd3 <__sprintf_chk@plt+0xf0c3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%esi
or     %esi,0x4(%eax)
mov    0x34(%esp),%eax
mov    0x38(%esp),%esi
mov    0x5c(%eax),%ecx
mov    0x50(%eax),%eax
mov    %ecx,0x20(%esp)
mov    0x18(%eax,%esi,1),%eax
mov    %eax,0x24(%esp)
jmp    80591ca <__sprintf_chk@plt+0xf2ba>
xchg   %ax,%ax
test   %edx,%edx
jne    8059139 <__sprintf_chk@plt+0xf229>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8059140 <__sprintf_chk@plt+0xf230>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%edx
mov    %ebx,%eax
call   8058760 <__sprintf_chk@plt+0xe850>
mov    0x6c(%edi),%edx
jmp    8058eb0 <__sprintf_chk@plt+0xefa0>
mov    0x48(%esp),%eax
mov    (%eax),%esi
jmp    8058ea7 <__sprintf_chk@plt+0xef97>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x80739a0,%eax
mov    0x54(%esp),%edi
mov    %al,0x1e(%esp)
mov    0x50(%esp),%eax
mov    0x64(%eax),%ebp
test   %ebp,%ebp
je     805970c <__sprintf_chk@plt+0xf7fc>
mov    0x6c(%eax),%eax
mov    0x58(%esp),%esi
mov    %edi,0x2c(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
movzbl (%eax),%eax
mov    %al,0x1f(%esp)
movzbl 0x1e(%esp),%eax
mov    %al,(%esi)
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
cmp    $0x1,%esi
jbe    8059390 <__sprintf_chk@plt+0xf480>
mov    0x58(%esp),%ebx
sub    %edi,%ebx
add    $0x2,%ebx
mov    %ebx,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
cmp    $0x3fffffff,%ebx
mov    %eax,0x8073534
ja     8059827 <__sprintf_chk@plt+0xf917>
shl    $0x2,%ebx
mov    %ebx,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x58(%esp),%edx
movl   $0x0,0x807353c
00
movl   $0x0,0x8073540
00
mov    %eax,0x8073530
mov    0x2c(%esp),%eax
call   8052870 <__sprintf_chk@plt+0x8960>
mov    0x50(%esp),%eax
mov    0x2c(%esp),%edi
mov    0x24(%eax),%esi
xor    %ebx,%ebx
xor    %ebp,%ebp
cmp    $0x1,%esi
jbe    805959a <__sprintf_chk@plt+0xf68a>
mov    %ebx,%edx
mov    %ebp,%ebx
mov    %edi,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%edi
lea    0x0(,%ebx,4),%eax
mov    (%edi,%ebx,4),%esi
test   %esi,%esi
mov    %esi,0x14(%esp)
je     80594d8 <__sprintf_chk@plt+0xf5c8>
mov    0x8073528,%edi
cmp    %ebp,%edi
jb     80594d8 <__sprintf_chk@plt+0xf5c8>
test   %ebx,%ebx
jne    805943d <__sprintf_chk@plt+0xf52d>
mov    0x807352c,%eax
mov    0x8073530,%ecx
mov    %eax,%edx
mov    %ebp,%eax
sub    %edx,%eax
mov    (%ecx,%eax,4),%esi
test   %esi,%esi
jne    8059437 <__sprintf_chk@plt+0xf527>
mov    0x8073534,%esi
cmpb   $0x0,(%esi,%eax,1)
je     8059437 <__sprintf_chk@plt+0xf527>
cmp    %ebp,%edi
jbe    8059437 <__sprintf_chk@plt+0xf527>
mov    %ebx,0x18(%esp)
lea    0x1(%ebp),%eax
add    $0x1,%edi
mov    %edx,%ebx
jmp    8059421 <__sprintf_chk@plt+0xf511>
lea    0x0(%esi),%esi
cmpb   $0x0,(%esi,%edx,1)
je     8059431 <__sprintf_chk@plt+0xf521>
add    $0x1,%eax
cmp    %edi,%eax
je     80594a0 <__sprintf_chk@plt+0xf590>
mov    %eax,%edx
mov    %eax,%ebp
sub    %ebx,%edx
cmpl   $0x0,(%ecx,%edx,4)
mov    %eax,0x2c(%esp)
je     8059410 <__sprintf_chk@plt+0xf500>
mov    0x18(%esp),%ebx
mov    %eax,%ebp
cmp    %ebp,0x58(%esp)
jbe    80594aa <__sprintf_chk@plt+0xf59a>
mov    0x50(%esp),%ecx
lea    (%ebx,%ebx,8),%eax
shl    $0x2,%eax
add    0x50(%ecx),%eax
mov    0x1c(%eax),%edi
test   %edi,%edi
jne    8059470 <__sprintf_chk@plt+0xf560>
lea    0x1(%ebp),%edx
mov    0x14(%esp),%edi
mov    %edx,0x2c(%esp)
movzbl 0x0(%ebp),%eax
mov    %edx,%ebp
mov    (%edi,%eax,4),%eax
mov    %ebx,%edx
mov    %eax,%ebx
jmp    80593a8 <__sprintf_chk@plt+0xf498>
xchg   %ax,%ax
mov    0x64(%esp),%esi
test   %esi,%esi
jne    80596d1 <__sprintf_chk@plt+0xf7c1>
mov    0x50(%esp),%eax
lea    0x2c(%esp),%ecx
mov    %ebx,%edx
call   8058e70 <__sprintf_chk@plt+0xef60>
mov    0x50(%esp),%esi
mov    0x2c(%esp),%ebp
mov    0x6c(%esi),%ecx
mov    %ecx,0x10(%esp)
jmp    8059465 <__sprintf_chk@plt+0xf555>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,0x58(%esp)
mov    0x18(%esp),%ebx
ja     805943d <__sprintf_chk@plt+0xf52d>
mov    0x8073534,%eax
mov    %ecx,%edi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %edi,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x58(%esp),%edi
movzbl 0x1f(%esp),%eax
mov    %al,(%edi)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%edi
mov    %ebx,%ebp
mov    %edx,%ebx
mov    %ebp,%ecx
test   %ebp,%ebp
js     805962a <__sprintf_chk@plt+0xf71a>
cmp    %edi,0x58(%esp)
jae    8059510 <__sprintf_chk@plt+0xf600>
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    80594c3 <__sprintf_chk@plt+0xf5b3>
mov    0x8073534,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x8073530,%eax
jmp    80594bb <__sprintf_chk@plt+0xf5ab>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%esi
mov    0x74(%esi),%edx
mov    (%edx,%eax,1),%edx
test   %edx,%edx
je     8059634 <__sprintf_chk@plt+0xf724>
movzbl (%edi),%ebx
mov    0x78(%esi),%esi
mov    0x80735a0(,%ebx,4),%ebx
test   %ebx,(%esi,%eax,1)
je     8059688 <__sprintf_chk@plt+0xf778>
mov    0x64(%esp),%ebx
test   %ebx,%ebx
je     805955d <__sprintf_chk@plt+0xf64d>
lea    (%ecx,%ecx,8),%eax
mov    0x50(%esp),%ecx
shl    $0x2,%eax
mov    0x64(%esp),%esi
add    0x50(%ecx),%eax
cmpb   $0x0,0x11(%eax)
setne  %al
movzbl %al,%eax
mov    %eax,(%esi)
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    8059585 <__sprintf_chk@plt+0xf675>
mov    0x8073534,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x8073530,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x2c(%esp),%edi
mov    0x58(%esp),%esi
movzbl 0x1f(%esp),%eax
mov    %al,(%esi)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%ecx
lea    0x0(,%ebp,4),%eax
mov    %ebp,0x14(%esp)
mov    (%ecx,%ebp,4),%edx
test   %edx,%edx
je     80594de <__sprintf_chk@plt+0xf5ce>
lea    0x1(%edi),%esi
mov    %ecx,%ebp
mov    %esi,0x2c(%esp)
movzbl (%edi),%eax
mov    (%edx,%eax,4),%ebx
mov    (%ecx,%ebx,4),%ecx
lea    0x0(,%ebx,4),%eax
test   %ecx,%ecx
je     8059818 <__sprintf_chk@plt+0xf908>
lea    0x2(%edi),%edx
mov    %ebp,%esi
jmp    8059603 <__sprintf_chk@plt+0xf6f3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%ebp
add    $0x2,%edx
mov    %ebp,0x2c(%esp)
movzbl -0x2(%edx),%eax
mov    (%ecx,%eax,4),%ebx
mov    (%esi,%ebx,4),%ecx
lea    0x0(,%ebx,4),%eax
test   %ecx,%ecx
je     80596c2 <__sprintf_chk@plt+0xf7b2>
mov    %edx,0x2c(%esp)
movzbl -0x1(%edx),%eax
mov    (%ecx,%eax,4),%ebp
mov    (%esi,%ebp,4),%ecx
mov    %ebp,%edi
lea    0x0(,%ebp,4),%eax
test   %ecx,%ecx
jne    80595e0 <__sprintf_chk@plt+0xf6d0>
test   %ebp,%ebp
mov    %ebp,%ecx
mov    %edx,%edi
jns    80594e8 <__sprintf_chk@plt+0xf5d8>
cmp    %edi,0x58(%esp)
jb     80594ee <__sprintf_chk@plt+0xf5de>
movzbl 0x1e(%esp),%eax
cmp    %al,-0x1(%edi)
je     80597a7 <__sprintf_chk@plt+0xf897>
test   %ebp,%ebp
jns    8059662 <__sprintf_chk@plt+0xf752>
movzbl 0x1e(%esp),%eax
cmp    %al,-0x1(%edi)
je     80597e0 <__sprintf_chk@plt+0xf8d0>
mov    0x50(%esp),%eax
xor    %ebp,%ebp
mov    0x24(%eax),%esi
jmp    8059394 <__sprintf_chk@plt+0xf484>
mov    0x50(%esp),%edx
mov    %ebp,%eax
call   8058760 <__sprintf_chk@plt+0xe850>
mov    0x50(%esp),%eax
mov    0x2c(%esp),%edi
mov    0x6c(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
jmp    8059394 <__sprintf_chk@plt+0xf484>
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
cmp    $0x1,%esi
jbe    8059802 <__sprintf_chk@plt+0xf8f2>
mov    %ebp,%edx
mov    %ebp,%ebx
lea    0x2c(%esp),%ecx
call   8058e70 <__sprintf_chk@plt+0xef60>
mov    0x50(%esp),%edi
mov    0x6c(%edi),%edi
mov    %eax,%ebp
mov    %edi,0x10(%esp)
mov    0x50(%esp),%edi
mov    0x24(%edi),%esi
mov    0x2c(%esp),%edi
jmp    8059394 <__sprintf_chk@plt+0xf484>
mov    %edi,%esi
mov    %ebx,%ecx
mov    %ebp,%edi
mov    %ebx,%ebp
mov    %esi,%ebx
jmp    80594e0 <__sprintf_chk@plt+0xf5d0>
mov    0x64(%esp),%eax
movl   $0x1,(%eax)
mov    0x8073534,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x8073530,%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x58(%esp),%edi
movzbl 0x1f(%esp),%eax
mov    %al,(%edi)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x64(%eax)
movl   $0x0,0x68(%eax)
movl   $0x4,0x4(%esp)
movl   $0x2,(%esp)
call   80643c0 <__sprintf_chk@plt+0x1a4b0>
mov    0x50(%esp),%esi
mov    %eax,0x70(%esi)
add    $0x4,%eax
mov    %eax,0x6c(%esi)
movl   $0x4,0x4(%esp)
mov    0x64(%esi),%eax
mov    %eax,(%esp)
call   80643c0 <__sprintf_chk@plt+0x1a4b0>
mov    0x50(%esp),%esi
mov    %eax,0x74(%esi)
mov    0x64(%esi),%eax
cmp    $0x3fffffff,%eax
ja     8059827 <__sprintf_chk@plt+0xf917>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x50(%esp),%ecx
mov    %eax,0x78(%ecx)
mov    0x64(%ecx),%eax
cmp    $0x3fffffff,%eax
ja     8059827 <__sprintf_chk@plt+0xf917>
shl    $0x2,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x50(%esp),%esi
mov    %esi,%edx
mov    %eax,0x7c(%esi)
xor    %eax,%eax
call   8058760 <__sprintf_chk@plt+0xe850>
mov    0x50(%esp),%eax
jmp    8059305 <__sprintf_chk@plt+0xf3f5>
mov    0x60(%esp),%edx
test   %edx,%edx
je     80597b6 <__sprintf_chk@plt+0xf8a6>
mov    0x60(%esp),%eax
addl   $0x1,(%eax)
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    80597cf <__sprintf_chk@plt+0xf8bf>
mov    0x58(%esp),%edx
mov    %edi,%eax
call   8052870 <__sprintf_chk@plt+0x8960>
mov    0x2c(%esp),%edi
cmp    %edi,0x58(%esp)
jae    8059642 <__sprintf_chk@plt+0xf732>
jmp    80594ee <__sprintf_chk@plt+0xf5de>
xchg   %ax,%ax
mov    0x5c(%esp),%eax
test   %eax,%eax
je     8059654 <__sprintf_chk@plt+0xf744>
mov    0x50(%esp),%eax
mov    0x7c(%eax),%eax
mov    (%eax,%ebx,4),%ebp
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
jmp    8059394 <__sprintf_chk@plt+0xf484>
lea    0x1(%edi),%eax
mov    %ebp,%ebx
mov    %eax,0x2c(%esp)
movzbl (%edi),%ecx
mov    %eax,%edi
mov    (%edx,%ecx,4),%ebp
jmp    8059394 <__sprintf_chk@plt+0xf484>
mov    %ebx,%ecx
mov    %ebx,%ebp
mov    0x14(%esp),%ebx
mov    %esi,%edi
jmp    80594e0 <__sprintf_chk@plt+0xf5d0>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x84,%edx
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
test   $0x1,%bl
mov    %ebx,%edi
jne    80598e0 <__sprintf_chk@plt+0xf9d0>
test   $0x2,%edi
jne    80598f8 <__sprintf_chk@plt+0xf9e8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     805986c <__sprintf_chk@plt+0xf95c>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8059874 <__sprintf_chk@plt+0xf964>
movb   $0x0,(%edi)
movl   $0x1,0x8(%ebx)
movl   $0x20,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x1,0x14(%ebx)
mov    %eax,(%ebx)
movl   $0x4,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,0xc(%ebx)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
mov    %eax,0x24(%ebx)
jbe    80598d8 <__sprintf_chk@plt+0xf9c8>
movl   $0x1,0x3c(%ebx)
movl   $0x4,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x1,0x4c(%ebx)
mov    %eax,0x40(%ebx)
movl   $0x34,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,0x44(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %edi
ret
xchg   %ax,%ax
lea    0x1(%ebx),%edi
mov    $0x83,%dl
test   $0x2,%edi
movb   $0x0,(%ebx)
je     8059855 <__sprintf_chk@plt+0xf945>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    8059855 <__sprintf_chk@plt+0xf945>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    0x70(%esp),%ebx
mov    0x74(%esp),%esi
test   $0x1,%al
mov    %eax,%edi
mov    %edx,0x48(%esp)
mov    $0x84,%edx
mov    %eax,0x1c(%esp)
jne    805a5fc <__sprintf_chk@plt+0x106ec>
test   $0x2,%edi
jne    805a610 <__sprintf_chk@plt+0x10700>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8059961 <__sprintf_chk@plt+0xfa51>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
and    $0x1,%edx
je     8059969 <__sprintf_chk@plt+0xfa59>
movb   $0x0,(%edi)
mov    0x1c(%esp),%edi
movl   $0x1,0x8(%edi)
movl   $0x20,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x1,0x14(%edi)
mov    %eax,(%edi)
movl   $0x4,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,0xc(%edi)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
mov    %eax,0x24(%edi)
jbe    80599d1 <__sprintf_chk@plt+0xfac1>
movl   $0x1,0x3c(%edi)
movl   $0x4,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
movl   $0x1,0x4c(%edi)
mov    %eax,0x40(%edi)
movl   $0x34,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,0x44(%edi)
mov    0x1c(%esp),%edi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
call   80569c0 <__sprintf_chk@plt+0xcab0>
mov    0x10(%edi),%eax
mov    %eax,0x10(%esp)
add    $0x1,%eax
cmp    $0xfffffff,%eax
ja     805a7c0 <__sprintf_chk@plt+0x108b0>
shl    $0x4,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x1c(%esp),%edx
mov    0x80734e0,%edi
mov    0x80734e4,%esi
mov    0x80734e8,%ebx
mov    0x80734ec,%ecx
mov    0x10(%edx),%ebp
xor    %edx,%edx
mov    %eax,0x28(%esp)
lea    0x0(%esi),%esi
add    $0x1,%edx
add    $0x10,%eax
mov    %edi,-0x10(%eax)
mov    %esi,-0xc(%eax)
mov    %ebx,-0x8(%eax)
mov    %ecx,-0x4(%eax)
cmp    %ebp,%edx
jbe    8059a30 <__sprintf_chk@plt+0xfb20>
mov    0x28(%esp),%ebx
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
add    $0x1,%esi
add    $0x10,%ebx
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,-0x10(%ebx)
mov    %eax,%edi
movl   $0x2,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,-0xc(%ebx)
mov    %eax,%ebp
movl   $0x2,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,-0x8(%ebx)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x10(%esp),%ecx
movb   $0x0,0x0(%ebp)
movl   $0x0,(%edi)
movb   $0x0,(%ecx)
mov    %eax,-0x4(%ebx)
movb   $0x0,(%eax)
mov    0x1c(%esp),%eax
mov    0x10(%eax),%eax
cmp    %eax,%esi
jbe    8059a50 <__sprintf_chk@plt+0xfb40>
test   %eax,%eax
je     8059b8a <__sprintf_chk@plt+0xfc7a>
mov    0x28(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x18(%esp)
add    $0x20,%eax
mov    %eax,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%edx,4),%ebx
cmp    $0x109,%ebx
jle    8059c8b <__sprintf_chk@plt+0xfd7b>
cmp    $0x10d,%ebx
je     8059d62 <__sprintf_chk@plt+0xfe52>
jg     8059d11 <__sprintf_chk@plt+0xfe01>
cmp    $0x10a,%ebx
je     8059d41 <__sprintf_chk@plt+0xfe31>
cmp    $0x10c,%ebx
jne    805a397 <__sprintf_chk@plt+0x10487>
mov    0x3c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805a69a <__sprintf_chk@plt+0x1078a>
mov    0x18(%esp),%eax
mov    -0x10(%eax),%esi
lea    -0x20(%eax),%edx
mov    %edx,0x10(%esp)
mov    -0x20(%eax),%ebx
test   %esi,%esi
je     8059b7f <__sprintf_chk@plt+0xfc6f>
test   %ebx,%ebx
je     8059b7f <__sprintf_chk@plt+0xfc6f>
mov    (%esi),%edi
test   %edi,%edi
je     805a2d6 <__sprintf_chk@plt+0x103c6>
add    $0x4,%esi
jmp    8059b66 <__sprintf_chk@plt+0xfc56>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    -0x4(%esi),%edi
test   %edi,%edi
je     805a2cf <__sprintf_chk@plt+0x103bf>
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8055720 <__sprintf_chk@plt+0xb810>
test   %eax,%eax
mov    %eax,%ebx
jne    8059b58 <__sprintf_chk@plt+0xfc48>
mov    0x18(%esp),%eax
movl   $0x0,-0x20(%eax)
mov    $0x80734f0,%ebx
xor    %esi,%esi
cmpb   $0x0,(%ebx)
jne    805a13e <__sprintf_chk@plt+0x1022e>
mov    0x28(%esp),%ebx
movl   $0x0,0x10(%esp)
mov    (%ebx),%esi
test   %esi,%esi
je     8059bd3 <__sprintf_chk@plt+0xfcc3>
mov    (%esi),%edx
test   %edx,%edx
je     8059bd3 <__sprintf_chk@plt+0xfcc3>
lea    0x4(%esi),%edi
mov    %esi,%ebp
nop
mov    %edx,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x0(%ebp)
mov    %edi,%ebp
add    $0x4,%edi
mov    -0x4(%edi),%edx
test   %edx,%edx
jne    8059bb8 <__sprintf_chk@plt+0xfca8>
mov    %esi,(%esp)
add    $0x10,%ebx
call   8049800 <free@plt>
mov    -0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    -0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    -0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x1c(%esp),%eax
addl   $0x1,0x10(%esp)
mov    0x10(%esp),%edx
cmp    0x10(%eax),%edx
jbe    8059ba6 <__sprintf_chk@plt+0xfc96>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x8073240,%eax
cmp    $0xffffffff,%eax
je     805a5d2 <__sprintf_chk@plt+0x106c2>
test   %eax,%eax
je     8059c6f <__sprintf_chk@plt+0xfd5f>
mov    0x1c(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     8059c5d <__sprintf_chk@plt+0xfd4d>
mov    0xc(%eax),%ebx
xor    %eax,%eax
mov    (%ebx,%eax,4),%ecx
cmp    $0x110,%ecx
je     805a49c <__sprintf_chk@plt+0x1058c>
cmp    $0x111,%ecx
je     8059c6f <__sprintf_chk@plt+0xfd5f>
add    $0x1,%eax
cmp    %edx,%eax
jne    8059c3f <__sprintf_chk@plt+0xfd2f>
mov    0x1c(%esp),%esi
mov    %esi,%eax
call   8052ea0 <__sprintf_chk@plt+0x8f90>
movl   $0x1,0x24(%esi)
mov    0x48(%esp),%eax
mov    %eax,0x74(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x70(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8056b40 <__sprintf_chk@plt+0xcc30>
cmp    $0x108,%ebx
jge    805a180 <__sprintf_chk@plt+0x10270>
cmp    $0xffffffff,%ebx
je     805a0c7 <__sprintf_chk@plt+0x101b7>
jl     805a778 <__sprintf_chk@plt+0x10868>
cmp    $0x100,%ebx
jl     805a397 <__sprintf_chk@plt+0x10487>
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
mov    (%esi),%esi
movb   $0x0,(%ecx)
test   %esi,%esi
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     8059cf1 <__sprintf_chk@plt+0xfde1>
mov    (%esi),%eax
test   %eax,%eax
je     8059cf1 <__sprintf_chk@plt+0xfde1>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    8059cd7 <__sprintf_chk@plt+0xfdc7>
mov    0x1c(%esp),%eax
addl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%edx
addl   $0x10,0x18(%esp)
cmp    0x10(%eax),%edx
jb     8059ae0 <__sprintf_chk@plt+0xfbd0>
jmp    8059b8a <__sprintf_chk@plt+0xfc7a>
cmp    $0x10f,%ebx
jg     805a397 <__sprintf_chk@plt+0x10487>
movl   $0x806d134,0xc(%esp)
movl   $0xf59,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d440,(%esp)
call   8049ee0 <__assert_fail@plt>
mov    0x18(%esp),%eax
cmp    %eax,0x28(%esp)
jae    805a652 <__sprintf_chk@plt+0x10742>
mov    %eax,%edx
mov    -0x4(%eax),%eax
movb   $0x0,(%eax)
mov    %edx,%eax
sub    $0x10,%eax
mov    %eax,0x18(%esp)
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
mov    0x3c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805a676 <__sprintf_chk@plt+0x10766>
mov    0x18(%esp),%eax
lea    -0x20(%eax),%edx
mov    -0x14(%eax),%ebx
mov    -0x4(%eax),%eax
mov    %edx,0x40(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    805a1d8 <__sprintf_chk@plt+0x102c8>
mov    0x18(%esp),%edx
mov    -0x1c(%edx),%ebx
movzbl (%ebx),%eax
test   %al,%al
je     8059dca <__sprintf_chk@plt+0xfeba>
mov    -0xc(%edx),%edx
cmp    (%edx),%al
jne    8059dca <__sprintf_chk@plt+0xfeba>
lea    0x1(%ebx),%eax
add    $0x1,%edx
jmp    8059dbf <__sprintf_chk@plt+0xfeaf>
movzbl (%edx),%ebx
add    $0x1,%eax
add    $0x1,%edx
cmp    %bl,%cl
jne    8059dc8 <__sprintf_chk@plt+0xfeb8>
movzbl (%eax),%ecx
mov    %eax,%esi
test   %cl,%cl
jne    8059db2 <__sprintf_chk@plt+0xfea2>
mov    %esi,%ebx
mov    0x18(%esp),%edi
movb   $0x0,(%ebx)
mov    -0x18(%edi),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    -0x8(%edi),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,%esi
call   8049b80 <strlen@plt>
mov    %esi,%edx
cmp    %esi,%eax
cmovbe %eax,%edx
test   %edx,%edx
mov    %edx,%ebp
je     805a6be <__sprintf_chk@plt+0x107ae>
mov    0x10(%esp),%ecx
movzbl -0x1(%ecx,%eax,1),%edx
cmp    %dl,-0x1(%ebx,%esi,1)
jne    805a6be <__sprintf_chk@plt+0x107ae>
mov    $0x1,%edi
add    %ecx,%eax
sub    %ebp,%edi
xor    %edx,%edx
lea    (%ebx,%esi,1),%ebp
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
jmp    8059e3b <__sprintf_chk@plt+0xff2b>
mov    0x10(%esp),%ebx
movzbl -0x2(%ebp,%edx,1),%eax
sub    $0x1,%edx
cmp    -0x1(%ebx,%edx,1),%al
jne    8059e46 <__sprintf_chk@plt+0xff36>
mov    $0x1,%ecx
sub    %edx,%ecx
cmp    %edi,%edx
jne    8059e29 <__sprintf_chk@plt+0xff19>
test   %ecx,%ecx
mov    0x14(%esp),%ebx
je     8059ed6 <__sprintf_chk@plt+0xffc6>
sub    %ecx,%esi
lea    (%ebx,%esi,1),%edi
lea    0x4(%edi),%eax
cmp    %eax,%ebx
lea    0x4(%ebx),%eax
setae  %dl
cmp    %eax,%edi
setae  %al
or     %eax,%edx
cmp    $0x9,%ecx
seta   %al
test   %al,%dl
je     805a5b8 <__sprintf_chk@plt+0x106a8>
mov    %edi,%eax
or     %ebx,%eax
test   $0x3,%al
jne    805a5b8 <__sprintf_chk@plt+0x106a8>
mov    %ecx,%ebp
xor    %edx,%edx
shr    $0x2,%ebp
lea    0x0(,%ebp,4),%eax
mov    %eax,0x10(%esp)
mov    (%edi,%edx,4),%eax
mov    %eax,(%ebx,%edx,4)
add    $0x1,%edx
cmp    %ebp,%edx
jb     8059e95 <__sprintf_chk@plt+0xff85>
mov    0x10(%esp),%eax
cmp    %ecx,%eax
je     8059ed6 <__sprintf_chk@plt+0xffc6>
lea    (%ebx,%eax,1),%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,(%ebx,%ebp,4)
lea    0x1(%eax),%edx
cmp    %ecx,%edx
jae    8059ed6 <__sprintf_chk@plt+0xffc6>
add    %ebx,%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,0x1(%ebx,%eax,1)
lea    0x2(%eax),%edx
cmp    %ecx,%edx
jae    8059ed6 <__sprintf_chk@plt+0xffc6>
add    %ebx,%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,0x2(%ebx,%eax,1)
mov    0x18(%esp),%eax
movb   $0x0,(%ebx,%ecx,1)
mov    -0x10(%eax),%edx
mov    -0x20(%eax),%eax
test   %edx,%edx
mov    %edx,0x44(%esp)
mov    %eax,0x34(%esp)
je     8059b8a <__sprintf_chk@plt+0xfc7a>
test   %eax,%eax
je     8059b8a <__sprintf_chk@plt+0xfc7a>
movl   $0x4,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     8059b8a <__sprintf_chk@plt+0xfc7a>
mov    0x34(%esp),%edx
movl   $0x0,(%eax)
mov    (%edx),%eax
test   %eax,%eax
je     805a2ab <__sprintf_chk@plt+0x1039b>
lea    0x4(%edx),%esi
mov    %esi,0x4c(%esp)
mov    %esi,0x38(%esp)
mov    %eax,%esi
mov    %edx,0x30(%esp)
mov    0x44(%esp),%eax
mov    (%eax),%edx
test   %edx,%edx
mov    %edx,0x10(%esp)
je     805a267 <__sprintf_chk@plt+0x10357>
test   %esi,%esi
je     805a097 <__sprintf_chk@plt+0x10187>
add    $0x4,%eax
mov    %eax,0x24(%esp)
movl   $0x4,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805a097 <__sprintf_chk@plt+0x10187>
movl   $0x0,(%eax)
movsbl (%esi),%edx
test   %dl,%dl
je     805a05a <__sprintf_chk@plt+0x1014a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
je     805a22e <__sprintf_chk@plt+0x1031e>
movzbl 0x1(%esi),%edx
xor    %ebp,%ebp
movsbl (%esi),%edi
mov    %edx,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     805a200 <__sprintf_chk@plt+0x102f0>
cmp    0x1(%eax),%bl
mov    $0x1,%ecx
je     805a1e0 <__sprintf_chk@plt+0x102d0>
cmp    %ecx,%ebp
cmovb  %ecx,%ebp
add    $0x1,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
jne    8059fb0 <__sprintf_chk@plt+0x100a0>
test   %ebp,%ebp
movsbl %bl,%edx
jne    805a210 <__sprintf_chk@plt+0x10300>
add    $0x1,%esi
test   %dl,%dl
jne    8059f88 <__sprintf_chk@plt+0x10078>
mov    0x14(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     805a05a <__sprintf_chk@plt+0x1014a>
lea    0x4(%eax),%esi
mov    0x20(%esp),%ebp
mov    %esi,%ebx
jmp    805a012 <__sprintf_chk@plt+0x10102>
lea    0x0(%esi),%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%edi
test   %edi,%edi
je     805a02b <__sprintf_chk@plt+0x1011b>
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %ebp,%eax
call   8055720 <__sprintf_chk@plt+0xb810>
test   %eax,%eax
mov    %eax,%ebp
jne    805a008 <__sprintf_chk@plt+0x100f8>
mov    0x14(%esp),%eax
mov    %ebp,0x20(%esp)
mov    0x14(%esp),%ebx
mov    (%eax),%eax
test   %eax,%eax
je     805a05a <__sprintf_chk@plt+0x1014a>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%ebx)
mov    %esi,%ebx
add    $0x4,%esi
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    805a040 <__sprintf_chk@plt+0x10130>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x20(%esp),%eax
test   %eax,%eax
je     8059b8a <__sprintf_chk@plt+0xfc7a>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     805a267 <__sprintf_chk@plt+0x10357>
mov    0x30(%esp),%eax
addl   $0x4,0x24(%esp)
mov    (%eax),%esi
test   %esi,%esi
jne    8059f5a <__sprintf_chk@plt+0x1004a>
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     8059b8a <__sprintf_chk@plt+0xfc7a>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805a0a8 <__sprintf_chk@plt+0x10198>
jmp    8059b8a <__sprintf_chk@plt+0xfc7a>
mov    0x28(%esp),%edx
mov    %edx,%eax
add    $0x10,%eax
cmp    %eax,0x18(%esp)
jne    805a79c <__sprintf_chk@plt+0x1088c>
mov    (%edx),%ebp
mov    $0x80734f0,%ebx
mov    0x0(%ebp),%edi
test   %edi,%edi
je     805a118 <__sprintf_chk@plt+0x10208>
movl   $0x80734f0,(%esp)
add    $0x4,%ebp
mov    $0x80734f0,%ebx
call   8049b80 <strlen@plt>
mov    %eax,%esi
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
cmp    %esi,%eax
jbe    805a10e <__sprintf_chk@plt+0x101fe>
mov    %eax,%esi
mov    %edi,%ebx
add    $0x4,%ebp
mov    -0x4(%ebp),%edi
test   %edi,%edi
jne    805a0fe <__sprintf_chk@plt+0x101ee>
mov    0x28(%esp),%eax
mov    0xc(%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
sete   %al
cmpb   $0x0,(%ebx)
movzbl %al,%eax
mov    %eax,%esi
je     8059b9a <__sprintf_chk@plt+0xfc8a>
movl   $0xc,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %esi,(%eax)
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   80643f0 <__sprintf_chk@plt+0x1a4e0>
mov    0x1c(%esp),%edx
mov    %eax,0x4(%edi)
mov    0x80(%edx),%eax
mov    %eax,0x8(%edi)
mov    %edi,0x80(%edx)
jmp    8059b9a <__sprintf_chk@plt+0xfc8a>
mov    0x18(%esp),%eax
cmp    %eax,0x28(%esp)
jae    805a62e <__sprintf_chk@plt+0x1071e>
mov    %eax,%esi
mov    -0x10(%esi),%edi
lea    -0x10(%eax),%ebx
mov    -0x8(%esi),%edx
mov    -0xc(%eax),%eax
mov    -0x4(%esi),%ecx
test   %edi,%edi
movb   $0x0,(%ecx)
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     805a1cf <__sprintf_chk@plt+0x102bf>
mov    (%edi),%eax
test   %eax,%eax
je     805a1cf <__sprintf_chk@plt+0x102bf>
lea    0x4(%edi),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%edi)
mov    %esi,%edi
add    $0x4,%esi
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    805a1b5 <__sprintf_chk@plt+0x102a5>
mov    %ebx,0x18(%esp)
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
movb   $0x0,(%ebx)
jmp    8059d95 <__sprintf_chk@plt+0xfe85>
add    $0x1,%ecx
movzbl (%esi,%ecx,1),%edx
test   %dl,%dl
je     8059fc6 <__sprintf_chk@plt+0x100b6>
cmp    (%eax,%ecx,1),%dl
jne    8059fc6 <__sprintf_chk@plt+0x100b6>
jmp    805a1e0 <__sprintf_chk@plt+0x102d0>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    $0x1,%edx
cmove  %edx,%ebp
jmp    8059fcb <__sprintf_chk@plt+0x100bb>
nop
mov    0x14(%esp),%eax
mov    %ebp,%ecx
mov    %esi,%edx
call   8055720 <__sprintf_chk@plt+0xb810>
test   %eax,%eax
je     805a237 <__sprintf_chk@plt+0x10327>
movsbl 0x1(%esi),%edx
mov    %eax,0x14(%esp)
jmp    8059fe9 <__sprintf_chk@plt+0x100d9>
movsbl 0x1(%esi),%edx
jmp    8059fe9 <__sprintf_chk@plt+0x100d9>
mov    0x14(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     805a097 <__sprintf_chk@plt+0x10187>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805a248 <__sprintf_chk@plt+0x10338>
jmp    805a097 <__sprintf_chk@plt+0x10187>
mov    0x38(%esp),%eax
addl   $0x4,0x38(%esp)
mov    %eax,0x30(%esp)
mov    0x38(%esp),%eax
mov    -0x4(%eax),%esi
test   %esi,%esi
jne    8059f39 <__sprintf_chk@plt+0x10029>
mov    0x34(%esp),%esi
mov    0x4c(%esp),%ebx
mov    (%esi),%eax
test   %eax,%eax
je     805a2ab <__sprintf_chk@plt+0x1039b>
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805a291 <__sprintf_chk@plt+0x10381>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x18(%esp),%eax
mov    0x20(%esp),%edx
mov    %edx,-0x20(%eax)
mov    0x40(%esp),%eax
mov    %eax,0x18(%esp)
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
mov    0x18(%esp),%eax
mov    %ebx,-0x20(%eax)
mov    0x18(%esp),%eax
mov    -0x18(%eax),%edi
cmpb   $0x0,(%edi)
je     805a2f2 <__sprintf_chk@plt+0x103e2>
mov    -0xc(%eax),%eax
cmpb   $0x0,(%eax)
mov    %eax,0x14(%esp)
jne    805a4d1 <__sprintf_chk@plt+0x105c1>
mov    0x18(%esp),%eax
mov    -0x14(%eax),%ebx
cmpb   $0x0,(%ebx)
jne    805a537 <__sprintf_chk@plt+0x10627>
mov    -0x4(%eax),%esi
cmpb   $0x0,(%esi)
jne    805a30d <__sprintf_chk@plt+0x103fd>
movb   $0x0,(%edi)
mov    0x18(%esp),%eax
mov    -0x8(%eax),%ebp
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
test   %ebp,%ebp
mov    %eax,0x14(%esp)
je     805a379 <__sprintf_chk@plt+0x10469>
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     805a379 <__sprintf_chk@plt+0x10469>
mov    0x14(%esp),%ecx
mov    %edi,(%esp)
mov    %edx,0x20(%esp)
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x14(%esp),%ecx
mov    0x20(%esp),%edx
mov    %ebp,0x4(%esp)
add    $0x1,%edx
mov    %eax,%edi
lea    (%eax,%ecx,1),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
mov    0x18(%esp),%eax
test   %edi,%edi
mov    %edi,-0x18(%eax)
je     8059b8a <__sprintf_chk@plt+0xfc7a>
cmpb   $0x0,(%ebx)
je     805a387 <__sprintf_chk@plt+0x10477>
cmpb   $0x0,(%esi)
jne    805a4a1 <__sprintf_chk@plt+0x10591>
mov    0x10(%esp),%eax
movb   $0x0,(%ebx)
mov    %eax,0x18(%esp)
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
cmp    $0xffffffff,%ebx
jl     805a778 <__sprintf_chk@plt+0x10868>
test   %ebx,%ebx
je     8059b8a <__sprintf_chk@plt+0xfc7a>
lea    -0x110(%ebx),%eax
cmp    $0x1,%eax
jbe    805a450 <__sprintf_chk@plt+0x10540>
cmp    $0x112,%ebx
jg     805a450 <__sprintf_chk@plt+0x10540>
mov    0x18(%esp),%eax
mov    (%eax),%esi
mov    0x4(%eax),%ecx
mov    0x8(%eax),%edx
mov    0xc(%eax),%edi
test   %esi,%esi
movb   $0x0,(%edi)
movb   $0x0,(%edx)
movb   $0x0,(%ecx)
je     805a41c <__sprintf_chk@plt+0x1050c>
mov    (%esi),%eax
test   %eax,%eax
je     805a41c <__sprintf_chk@plt+0x1050c>
lea    0x4(%esi),%ebp
mov    %esi,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x14(%esp)
call   8049800 <free@plt>
mov    0x10(%esp),%eax
mov    %ebp,0x10(%esp)
add    $0x4,%ebp
mov    0x14(%esp),%ecx
mov    0x20(%esp),%edx
movl   $0x0,(%eax)
mov    -0x4(%ebp),%eax
test   %eax,%eax
jne    805a3ec <__sprintf_chk@plt+0x104dc>
mov    %bl,(%edx)
mov    %esi,%eax
mov    %bl,(%ecx)
mov    %bl,(%edi)
movb   $0x0,0x1(%edx)
mov    %edi,%edx
movb   $0x0,0x1(%ecx)
mov    $0x1,%ecx
movb   $0x0,0x1(%edi)
call   8055720 <__sprintf_chk@plt+0xb810>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
jne    8059cf1 <__sprintf_chk@plt+0xfde1>
jmp    8059b8a <__sprintf_chk@plt+0xfc7a>
nop
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
mov    (%esi),%esi
movb   $0x0,(%ecx)
test   %esi,%esi
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     8059cf1 <__sprintf_chk@plt+0xfde1>
mov    (%esi),%eax
test   %eax,%eax
je     8059cf1 <__sprintf_chk@plt+0xfde1>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805a47d <__sprintf_chk@plt+0x1056d>
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
call   8049e60 <abort@plt>
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049b80 <strlen@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    805a6c5 <__sprintf_chk@plt+0x107b5>
mov    0x18(%esp),%eax
mov    %ebx,-0x14(%eax)
mov    0x10(%esp),%eax
mov    %eax,0x18(%esp)
jmp    8059cf1 <__sprintf_chk@plt+0xfde1>
mov    %edi,(%esp)
xor    %esi,%esi
xor    %ebp,%ebp
call   8049b80 <strlen@plt>
test   %eax,%eax
jne    805a738 <__sprintf_chk@plt+0x10828>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
jne    805a700 <__sprintf_chk@plt+0x107f0>
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8055720 <__sprintf_chk@plt+0xb810>
mov    %eax,%ebx
mov    0x18(%esp),%eax
mov    %ebx,-0x20(%eax)
mov    %esi,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
je     8059b8a <__sprintf_chk@plt+0xfc7a>
mov    0x18(%esp),%eax
mov    -0x14(%eax),%ebx
cmpb   $0x0,(%ebx)
je     805a302 <__sprintf_chk@plt+0x103f2>
mov    0x18(%esp),%eax
mov    -0x1c(%eax),%ebp
mov    -0xc(%eax),%esi
test   %ebp,%ebp
je     805a621 <__sprintf_chk@plt+0x10711>
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,0x14(%esp)
test   %esi,%esi
je     805a59e <__sprintf_chk@plt+0x1068e>
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
test   %eax,%eax
mov    %eax,%ecx
je     805a59e <__sprintf_chk@plt+0x1068e>
mov    0x14(%esp),%eax
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
lea    0x1(%eax,%ecx,1),%eax
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%ecx
mov    %esi,0x4(%esp)
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,%ebp
mov    0x14(%esp),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
mov    0x18(%esp),%eax
test   %ebp,%ebp
mov    %ebp,-0x1c(%eax)
jne    805a302 <__sprintf_chk@plt+0x103f2>
jmp    8059b8a <__sprintf_chk@plt+0xfc7a>
lea    0x0(%esi),%esi
lea    (%ebx,%ecx,1),%edx
mov    %ebx,%eax
mov    %edx,%edi
movzbl (%eax,%esi,1),%edx
add    $0x1,%eax
mov    %dl,-0x1(%eax)
cmp    %edi,%eax
jne    805a5bf <__sprintf_chk@plt+0x106af>
jmp    8059ed6 <__sprintf_chk@plt+0xffc6>
movl   $0xe,(%esp)
mov    $0x806d334,%edi
call   8049d20 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8073240
jmp    8059c2b <__sprintf_chk@plt+0xfd1b>
lea    0x1(%eax),%edi
mov    $0x83,%dl
test   $0x2,%edi
movb   $0x0,(%eax)
je     805994a <__sprintf_chk@plt+0xfa3a>
xor    %ebp,%ebp
add    $0x2,%edi
mov    %bp,-0x2(%edi)
sub    $0x2,%edx
jmp    805994a <__sprintf_chk@plt+0xfa3a>
movl   $0x0,0x14(%esp)
jmp    805a555 <__sprintf_chk@plt+0x10645>
movl   $0x806d134,0xc(%esp)
movl   $0xf66,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d376,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d134,0xc(%esp)
movl   $0xf91,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d376,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d134,0xc(%esp)
movl   $0xf6b,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d381,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d134,0xc(%esp)
movl   $0xf9e,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d381,(%esp)
call   8049ee0 <__assert_fail@plt>
xor    %ecx,%ecx
jmp    8059ed6 <__sprintf_chk@plt+0xffc6>
lea    0x1(%edi,%eax,1),%eax
add    $0x1,%ebp
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
add    %eax,%edi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8049820 <memcpy@plt>
mov    0x18(%esp),%eax
test   %ebx,%ebx
mov    %ebx,-0x14(%eax)
je     8059b8a <__sprintf_chk@plt+0xfc7a>
jmp    805a4c4 <__sprintf_chk@plt+0x105b4>
lea    0x1(%ebp,%eax,1),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%edx
add    $0x1,%edx
mov    %edx,0x8(%esp)
add    %eax,%ebp
mov    %eax,%esi
mov    0x14(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049820 <memcpy@plt>
jmp    805a4fb <__sprintf_chk@plt+0x105eb>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x20(%esp),%edx
mov    %edi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
test   %esi,%esi
je     805a7c5 <__sprintf_chk@plt+0x108b5>
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%ebp
jmp    805a4e5 <__sprintf_chk@plt+0x105d5>
movl   $0x806d134,0xc(%esp)
movl   $0xfd1,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d3a1,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d134,0xc(%esp)
movl   $0xf96,0x8(%esp)
movl   $0x806d2db,0x4(%esp)
movl   $0x806d391,(%esp)
call   8049ee0 <__assert_fail@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
mov    %ebp,%esi
jmp    805a4e5 <__sprintf_chk@plt+0x105d5>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
cmpl   $0x1,0x24(%ebx)
jbe    805a7fc <__sprintf_chk@plt+0x108ec>
mov    %ebx,%eax
call   8052ea0 <__sprintf_chk@plt+0x8f90>
mov    0x54(%ebx),%ecx
xor    %esi,%esi
xor    %edi,%edi
test   %ecx,%ecx
je     805a831 <__sprintf_chk@plt+0x10921>
nop
mov    0x50(%ebx),%eax
add    $0x1,%edi
mov    0x4(%eax,%esi,1),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x50(%ebx),%eax
mov    0x18(%eax,%esi,1),%eax
add    $0x24,%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
cmp    %edi,0x54(%ebx)
ja     805a808 <__sprintf_chk@plt+0x108f8>
mov    0x50(%ebx),%eax
xor    %edi,%edi
xor    %esi,%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x10(%ebx),%edx
test   %edx,%edx
je     805a861 <__sprintf_chk@plt+0x10951>
nop
mov    0x5c(%ebx),%eax
add    $0x1,%esi
mov    (%eax,%edi,1),%eax
add    $0xc,%edi
mov    %eax,(%esp)
call   8049800 <free@plt>
cmp    %esi,0x10(%ebx)
ja     805a848 <__sprintf_chk@plt+0x10938>
mov    0x5c(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x64(%ebx),%eax
test   %eax,%eax
je     805a89c <__sprintf_chk@plt+0x1098c>
lea    0x0(%esi),%esi
mov    0x6c(%ebx),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x74(%ebx),%eax
mov    (%eax,%esi,4),%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
cmp    %esi,0x64(%ebx)
ja     805a878 <__sprintf_chk@plt+0x10968>
mov    0x70(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x74(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x78(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x80(%ebx),%ebx
test   %ebx,%ebx
jne    805a8da <__sprintf_chk@plt+0x109ca>
jmp    805a8f4 <__sprintf_chk@plt+0x109e4>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    0x8(%ebx),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    805a8d8 <__sprintf_chk@plt+0x109c8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x84,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x80(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x8074050,%eax
test   %eax,%eax
je     805a946 <__sprintf_chk@plt+0x10a36>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     805a960 <__sprintf_chk@plt+0x10a50>
movl   $0x0,(%esp)
call   8051520 <__sprintf_chk@plt+0x7610>
mov    0x20(%esp),%ecx
mov    %eax,(%ecx)
test   %eax,%eax
je     805a992 <__sprintf_chk@plt+0x10a82>
add    $0x1c,%esp
ret
call   8049ed0 <__ctype_tolower_loc@plt>
xor    %edx,%edx
nop
mov    (%eax),%ecx
mov    (%ecx,%edx,4),%ecx
add    $0x1,%edx
mov    %cl,0x80739df(%edx)
cmp    $0x100,%edx
jne    805a968 <__sprintf_chk@plt+0x10a58>
movl   $0x80739e0,(%esp)
call   8051520 <__sprintf_chk@plt+0x7610>
mov    0x20(%esp),%edx
mov    %eax,(%edx)
jmp    805a958 <__sprintf_chk@plt+0x10a48>
call   8064470 <__sprintf_chk@plt+0x1a560>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x78(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x4c(%esp)
xor    %ecx,%ecx
mov    0x70(%esp),%ebx
mov    (%eax),%edx
mov    %eax,0x28(%esp)
mov    0x80739c8,%eax
mov    %edi,0x2c(%esp)
cmp    %eax,%edx
ja     805aa18 <__sprintf_chk@plt+0x10b08>
test   %eax,%eax
je     805aa18 <__sprintf_chk@plt+0x10b08>
mov    0x80739c4,%ebp
test   %ebp,%ebp
je     805ac7b <__sprintf_chk@plt+0x10d6b>
mov    0x80739c0,%esi
test   %esi,%esi
je     805ac57 <__sprintf_chk@plt+0x10d47>
mov    0x28(%esp),%eax
mov    (%eax),%edx
mov    %ebp,%eax
test   %edx,%edx
jne    805aa60 <__sprintf_chk@plt+0x10b50>
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    805ac52 <__sprintf_chk@plt+0x10d42>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edx,%edx
mov    $0x1,%eax
cmovne %edx,%eax
mov    %eax,0x80739c8
mov    %eax,0x4(%esp)
mov    0x80739c4,%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x80739c4
mov    0x80739c8,%eax
mov    %eax,0x4(%esp)
mov    0x80739c0,%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x80739c0
jmp    805a9d7 <__sprintf_chk@plt+0x10ac7>
lea    0x0(%esi),%esi
lea    (%ebx,%edx,1),%eax
mov    %eax,%edi
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,0x18(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    %edi,%ebx
mov    %eax,0x20(%esp)
jae    805ac45 <__sprintf_chk@plt+0x10d35>
movb   $0x0,0x27(%esp)
movl   $0x0,0x14(%esp)
jmp    805ab17 <__sprintf_chk@plt+0x10c07>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
add    %edi,%ebx
mov    %eax,(%esp)
call   8049850 <towlower@plt>
lea    0x44(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049780 <wcrtomb@plt>
mov    %eax,%edx
mov    %edi,%eax
sub    %edx,%eax
mov    %al,(%esi)
lea    -0x1(%edx),%ecx
lea    0x1(%esi),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   8049c40 <memset@plt>
mov    0x1c(%esp),%edx
add    %edx,0x14(%esp)
add    %edx,%esi
add    %edx,%ebp
cmp    %edx,%edi
setne  %al
or     %al,0x27(%esp)
cmp    0x18(%esp),%ebx
jae    805abfc <__sprintf_chk@plt+0x10cec>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
mov    0x14(%esp),%edx
add    0x20(%esp),%edx
mov    %eax,%edi
mov    0x80739c8,%eax
cmp    %eax,%edx
jb     805abaf <__sprintf_chk@plt+0x10c9f>
mov    0x80739c4,%ecx
sub    0x80739c0,%esi
test   %ecx,%ecx
je     805ac28 <__sprintf_chk@plt+0x10d18>
cmp    $0xaaaaaaa9,%eax
ja     805ac4d <__sprintf_chk@plt+0x10d3d>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x80739c8
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,0x80739c4
mov    0x80739c8,%eax
mov    %eax,0x4(%esp)
mov    0x80739c0,%eax
mov    %eax,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x14(%esp),%ebp
add    0x80739c4,%ebp
mov    %eax,0x80739c0
add    %eax,%esi
lea    -0x1(%edi),%eax
cmp    $0xfffffffc,%eax
jbe    805aab0 <__sprintf_chk@plt+0x10ba0>
movb   $0x0,(%esi)
movzbl (%ebx),%eax
add    $0x1,%esi
addl   $0x1,0x14(%esp)
add    $0x1,%ebp
add    $0x1,%ebx
mov    %al,-0x1(%ebp)
cmp    0x18(%esp),%ebx
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
jb     805ab17 <__sprintf_chk@plt+0x10c07>
cmpb   $0x0,0x27(%esp)
je     805ac38 <__sprintf_chk@plt+0x10d28>
mov    0x80739c4,%eax
mov    %ebp,%edx
mov    0x80739c0,%ecx
sub    %eax,%edx
mov    0x2c(%esp),%ebx
mov    %ecx,(%ebx)
mov    0x28(%esp),%ecx
mov    %edx,(%ecx)
movb   $0x0,0x0(%ebp)
jmp    805a9ff <__sprintf_chk@plt+0x10aef>
nop
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    805ab72 <__sprintf_chk@plt+0x10c62>
nop
mov    0x80739c4,%eax
mov    %ebp,%edx
xor    %ecx,%ecx
sub    %eax,%edx
jmp    805ac12 <__sprintf_chk@plt+0x10d02>
mov    %ebp,%eax
xor    %edx,%edx
xor    %ecx,%ecx
jmp    805ac12 <__sprintf_chk@plt+0x10d02>
call   8064470 <__sprintf_chk@plt+0x1a560>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806d487,0xc(%esp)
movl   $0x62,0x8(%esp)
movl   $0x806d46d,0x4(%esp)
movl   $0x806d47f,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d487,0xc(%esp)
movl   $0x61,0x8(%esp)
movl   $0x806d46d,0x4(%esp)
movl   $0x806d47b,(%esp)
call   8049ee0 <__assert_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x58(%esp),%edx
mov    0x54(%esp),%esi
movl   $0x0,0x24(%esp)
mov    (%eax),%edi
mov    %edx,0x18(%esp)
mov    %gs:0x14,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %eax,0x1c(%esp)
cmp    %esi,%edi
mov    %edi,%ebp
movl   $0x0,0x28(%esp)
jae    805ad33 <__sprintf_chk@plt+0x10e23>
lea    0x24(%esp),%ebx
jmp    805acf8 <__sprintf_chk@plt+0x10de8>
xchg   %ax,%ax
lea    -0x1(%eax),%ecx
mov    %edi,%ebp
cmp    $0xfffffffc,%ecx
ja     805ad1b <__sprintf_chk@plt+0x10e0b>
add    %eax,%edi
cmp    %edi,%esi
jbe    805ad33 <__sprintf_chk@plt+0x10e23>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xfffffffe,%eax
jne    805ace8 <__sprintf_chk@plt+0x10dd8>
mov    $0x1,%eax
add    %eax,%edi
cmp    %edi,%esi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
ja     805acf8 <__sprintf_chk@plt+0x10de8>
mov    0x1c(%esp),%eax
cmp    %edi,%esi
mov    %ebp,(%eax)
mov    $0x1,%eax
jb     805ad4c <__sprintf_chk@plt+0x10e3c>
mov    0x5c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jne    805ad68 <__sprintf_chk@plt+0x10e58>
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
jne    805ad93 <__sprintf_chk@plt+0x10e83>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049a40 <mbrtowc@plt>
cmp    %eax,0x5c(%esp)
setb   %al
jmp    805ad4c <__sprintf_chk@plt+0x10e3c>
call   80498f0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x4cb0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%edi
mov    0x44(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     805af08 <__sprintf_chk@plt+0x10ff8>
mov    0x48(%esp),%eax
test   %eax,%eax
je     805aeb0 <__sprintf_chk@plt+0x10fa0>
mov    %edi,%eax
mov    0x48(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    805ae50 <__sprintf_chk@plt+0x10f40>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x48(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     805ae88 <__sprintf_chk@plt+0x10f78>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    805ae3e <__sprintf_chk@plt+0x10f2e>
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
cmp    %ebp,%eax
je     805aea0 <__sprintf_chk@plt+0x10f90>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    805ae10 <__sprintf_chk@plt+0x10f00>
mov    %ebx,0x18(%esp)
jmp    805ae3e <__sprintf_chk@plt+0x10f2e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    805af15 <__sprintf_chk@plt+0x11005>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x40(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    805aedb <__sprintf_chk@plt+0x10fcb>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     805ae88 <__sprintf_chk@plt+0x10f78>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    805aecd <__sprintf_chk@plt+0x10fbd>
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
cmp    %edi,%eax
je     805aea0 <__sprintf_chk@plt+0x10f90>
cmpl   $0xffffffff,0x18(%esp)
jne    805aec8 <__sprintf_chk@plt+0x10fb8>
mov    %ebx,0x18(%esp)
jmp    805aecd <__sprintf_chk@plt+0x10fbd>
movl   $0xffffffff,0x18(%esp)
jmp    805ae93 <__sprintf_chk@plt+0x10f83>
mov    $0xfffffffe,%eax
jmp    805ae97 <__sprintf_chk@plt+0x10f87>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     805afa8 <__sprintf_chk@plt+0x11098>
movl   $0x806d4ac,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8061ed0 <__sprintf_chk@plt+0x17fc0>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8060340 <__sprintf_chk@plt+0x16430>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049a60 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x806d491,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%esi
jmp    805af4a <__sprintf_chk@plt+0x1103a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80732a4,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x806d4c9,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   80498c0 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    805b05d <__sprintf_chk@plt+0x1114d>
jmp    805b0a8 <__sprintf_chk@plt+0x11198>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8062060 <__sprintf_chk@plt+0x18150>
movl   $0x806d4de,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80732a4,%eax
mov    %eax,(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     805b0a8 <__sprintf_chk@plt+0x11198>
test   %esi,%esi
je     805b020 <__sprintf_chk@plt+0x11110>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
jne    805b020 <__sprintf_chk@plt+0x11110>
mov    %ebp,(%esp)
call   8062060 <__sprintf_chk@plt+0x18150>
movl   $0x806d4e6,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80732a4,%eax
mov    %eax,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    805b04b <__sprintf_chk@plt+0x1113b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80732a4,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805b0c6 <__sprintf_chk@plt+0x111b6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049d50 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%edi
mov    0x48(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     805b2d2 <__sprintf_chk@plt+0x113c2>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     805b1e0 <__sprintf_chk@plt+0x112d0>
mov    %edi,%eax
mov    0x4c(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    805b170 <__sprintf_chk@plt+0x11260>
lea    0x0(%esi),%esi
mov    0x50(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x4c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
add    0x50(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     805b1a8 <__sprintf_chk@plt+0x11298>
mov    0x44(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    805b15e <__sprintf_chk@plt+0x1124e>
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
cmp    %eax,%ebp
je     805b1d0 <__sprintf_chk@plt+0x112c0>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    805b130 <__sprintf_chk@plt+0x11220>
mov    %ebx,0x18(%esp)
jmp    805b15e <__sprintf_chk@plt+0x1124e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    805b238 <__sprintf_chk@plt+0x11328>
cmpl   $0xffffffff,0x18(%esp)
je     805b2d2 <__sprintf_chk@plt+0x113c2>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x44(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    805b20b <__sprintf_chk@plt+0x112fb>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     805b1a8 <__sprintf_chk@plt+0x11298>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    805b1fd <__sprintf_chk@plt+0x112ed>
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
cmp    %eax,%edi
je     805b1d0 <__sprintf_chk@plt+0x112c0>
cmpl   $0xffffffff,0x18(%esp)
jne    805b1f8 <__sprintf_chk@plt+0x112e8>
mov    %ebx,0x18(%esp)
jmp    805b1fd <__sprintf_chk@plt+0x112ed>
movl   $0x5,0x8(%esp)
movl   $0x806d4ac,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x40(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8061ed0 <__sprintf_chk@plt+0x17fc0>
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
call   8060340 <__sprintf_chk@plt+0x16430>
mov    %esi,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049a60 <error@plt>
mov    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   805afc0 <__sprintf_chk@plt+0x110b0>
call   *0x54(%esp)
mov    $0xffffffff,%eax
jmp    805b1c2 <__sprintf_chk@plt+0x112b2>
movl   $0x5,0x8(%esp)
movl   $0x806d491,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%ebx
jmp    805b256 <__sprintf_chk@plt+0x11346>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     805b343 <__sprintf_chk@plt+0x11433>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    805b32b <__sprintf_chk@plt+0x1141b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     805b343 <__sprintf_chk@plt+0x11433>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
jne    805b320 <__sprintf_chk@plt+0x11410>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8073ae4
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8073ae0
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8073300,%eax
mov    %eax,(%esp)
call   80683e0 <fts_children+0x320>
test   %eax,%eax
je     805b399 <__sprintf_chk@plt+0x11489>
cmpb   $0x0,0x8073ae0
je     805b3b0 <__sprintf_chk@plt+0x114a0>
call   8049c80 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    805b3b0 <__sprintf_chk@plt+0x114a0>
mov    0x80732a4,%eax
mov    %eax,(%esp)
call   80683e0 <fts_children+0x320>
test   %eax,%eax
jne    805b408 <__sprintf_chk@plt+0x114f8>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x806b38f,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8073ae4,%eax
test   %eax,%eax
je     805b415 <__sprintf_chk@plt+0x11505>
mov    %eax,(%esp)
call   8060f70 <__sprintf_chk@plt+0x17060>
mov    %eax,%esi
call   8049c80 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x806b3bd,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049a60 <error@plt>
mov    0x807324c,%eax
mov    %eax,(%esp)
call   80497c0 <_exit@plt>
call   8049c80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x806d4e8,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049a60 <error@plt>
jmp    805b408 <__sprintf_chk@plt+0x114f8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
jmp    8049800 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805d920 <__sprintf_chk@plt+0x13a10>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    805c990 <__sprintf_chk@plt+0x12a80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x8,%al
jne    805b4c8 <__sprintf_chk@plt+0x115b8>
test   $0x10,%al
je     805b508 <__sprintf_chk@plt+0x115f8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805d920 <__sprintf_chk@plt+0x13a10>
nop
and    $0x10,%eax
mov    %eax,%edi
jne    805b520 <__sprintf_chk@plt+0x11610>
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
call   8049e30 <strncmp@plt>
test   %eax,%eax
jne    805b588 <__sprintf_chk@plt+0x11678>
movsbl (%ebx,%ebp,1),%eax
cmp    $0x2f,%eax
cmovne %eax,%edi
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049790 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8064430 <__sprintf_chk@plt+0x1a520>
mov    %eax,%edi
mov    %eax,%edx
jmp    805b549 <__sprintf_chk@plt+0x11639>
xchg   %ax,%ax
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805d920 <__sprintf_chk@plt+0x13a10>
test   %eax,%eax
jle    805b56b <__sprintf_chk@plt+0x1165b>
lea    0x1(%ebx),%edx
movb   $0x2f,(%ebx)
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805b530 <__sprintf_chk@plt+0x11620>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805d920 <__sprintf_chk@plt+0x13a10>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8049800 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
mov    %eax,%edi
mov    %edi,%eax
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
mov    %eax,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ecx
lea    0x28(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x84(%esp),%esi
movb   $0x0,0x24(%esp)
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
jne    805b69e <__sprintf_chk@plt+0x1178e>
movzbl (%ecx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    805b740 <__sprintf_chk@plt+0x11830>
movl   $0x1,0x38(%esp)
movsbl (%ecx),%edx
movb   $0x1,0x3c(%esp)
mov    %edx,0x40(%esp)
test   %edx,%edx
movb   $0x1,0x30(%esp)
jne    805b65e <__sprintf_chk@plt+0x1174e>
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    805b7ea <__sprintf_chk@plt+0x118da>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
cmpb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
je     805b730 <__sprintf_chk@plt+0x11820>
mov    %edx,(%esp)
call   8049850 <towlower@plt>
mov    %ebx,%edx
mov    0x38(%esp),%ecx
shl    $0x5,%edx
sub    %ebx,%edx
add    %edx,%eax
xor    %edx,%edx
div    %esi
add    %ebp,%ecx
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movb   $0x0,0x30(%esp)
mov    %edx,%ebx
je     805b5f0 <__sprintf_chk@plt+0x116e0>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x34(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     805b648 <__sprintf_chk@plt+0x11738>
cmp    $0xfffffffe,%eax
je     805b760 <__sprintf_chk@plt+0x11850>
test   %eax,%eax
jne    805b758 <__sprintf_chk@plt+0x11848>
mov    0x34(%esp),%eax
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%eax)
jne    805b7c6 <__sprintf_chk@plt+0x118b6>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    805b7a2 <__sprintf_chk@plt+0x11892>
xor    %edx,%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
movb   $0x1,0x3c(%esp)
call   8049830 <mbsinit@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805b61f <__sprintf_chk@plt+0x1170f>
movb   $0x0,0x24(%esp)
jmp    805b61f <__sprintf_chk@plt+0x1170f>
nop
movsbl 0x0(%ebp),%eax
jmp    805b675 <__sprintf_chk@plt+0x11765>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805b77e <__sprintf_chk@plt+0x1186e>
movb   $0x1,0x24(%esp)
jmp    805b69e <__sprintf_chk@plt+0x1178e>
xchg   %ax,%ax
mov    0x40(%esp),%edx
jmp    805b708 <__sprintf_chk@plt+0x117f8>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    0x40(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %eax,0x38(%esp)
jmp    805b659 <__sprintf_chk@plt+0x11749>
movl   $0x806d535,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d535,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d535,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
call   80498f0 <__stack_chk_fail@plt>
nop
push   %ebx
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    %ecx,%ebx
and    $0x2,%ebx
and    $0x20,%ecx
movzbl (%edx),%eax
je     805b8a8 <__sprintf_chk@plt+0x11998>
test   %ebx,%ebx
je     805b878 <__sprintf_chk@plt+0x11968>
add    $0x1,%edx
cmp    $0x2b,%al
je     805b9a8 <__sprintf_chk@plt+0x11a98>
jle    805b948 <__sprintf_chk@plt+0x11a38>
cmp    $0x40,%al
je     805b9a8 <__sprintf_chk@plt+0x11a98>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jle    805b968 <__sprintf_chk@plt+0x11a58>
cmp    $0x5b,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
movzbl (%edx),%eax
jmp    805b80e <__sprintf_chk@plt+0x118fe>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805b9b8 <__sprintf_chk@plt+0x11aa8>
jle    805b978 <__sprintf_chk@plt+0x11a68>
cmp    $0x5b,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
cmp    $0x5c,%al
jne    805b97c <__sprintf_chk@plt+0x11a6c>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805b9b8 <__sprintf_chk@plt+0x11aa8>
jg     805b848 <__sprintf_chk@plt+0x11938>
cmp    $0x21,%al
je     805b9b8 <__sprintf_chk@plt+0x11aa8>
cmp    $0x2a,%al
nop
je     805b970 <__sprintf_chk@plt+0x11a60>
test   %al,%al
jne    805b97c <__sprintf_chk@plt+0x11a6c>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     805b908 <__sprintf_chk@plt+0x119f8>
add    $0x1,%edx
cmp    $0x2b,%al
je     805b8ce <__sprintf_chk@plt+0x119be>
jle    805b930 <__sprintf_chk@plt+0x11a20>
cmp    $0x40,%al
je     805b8ce <__sprintf_chk@plt+0x119be>
lea    0x0(%esi,%eiz,1),%esi
jle    805b988 <__sprintf_chk@plt+0x11a78>
cmp    $0x5b,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
movzbl (%edx),%eax
jmp    805b8ac <__sprintf_chk@plt+0x1199c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805b926 <__sprintf_chk@plt+0x11a16>
lea    0x0(%esi,%eiz,1),%esi
jle    805b998 <__sprintf_chk@plt+0x11a88>
cmp    $0x5b,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
cmp    $0x5c,%al
jne    805b926 <__sprintf_chk@plt+0x11a16>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805b926 <__sprintf_chk@plt+0x11a16>
jg     805b8d8 <__sprintf_chk@plt+0x119c8>
cmp    $0x21,%al
je     805b926 <__sprintf_chk@plt+0x11a16>
cmp    $0x2a,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
test   %al,%al
nop
lea    0x0(%esi,%eiz,1),%esi
je     805b89e <__sprintf_chk@plt+0x1198e>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805b908 <__sprintf_chk@plt+0x119f8>
xchg   %ax,%ax
cmp    $0x21,%al
je     805b8ce <__sprintf_chk@plt+0x119be>
cmp    $0x2a,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
test   %al,%al
jne    805b8ce <__sprintf_chk@plt+0x119be>
xor    %eax,%eax
xchg   %ax,%ax
jmp    805b8a0 <__sprintf_chk@plt+0x11990>
lea    0x0(%esi),%esi
cmp    $0x21,%al
je     805b9a8 <__sprintf_chk@plt+0x11a98>
cmp    $0x2a,%al
xchg   %ax,%ax
je     805b970 <__sprintf_chk@plt+0x11a60>
test   %al,%al
jne    805b83e <__sprintf_chk@plt+0x1192e>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    805b8a0 <__sprintf_chk@plt+0x11990>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    805b83e <__sprintf_chk@plt+0x1192e>
mov    $0x1,%eax
pop    %ebx
ret
nop
cmp    $0x3f,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805b878 <__sprintf_chk@plt+0x11968>
nop
cmp    $0x3f,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
jmp    805b8ce <__sprintf_chk@plt+0x119be>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     805b970 <__sprintf_chk@plt+0x11a60>
jmp    805b926 <__sprintf_chk@plt+0x11a16>
nop
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    805b80e <__sprintf_chk@plt+0x118fe>
jmp    805b970 <__sprintf_chk@plt+0x11a60>
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     805b970 <__sprintf_chk@plt+0x11a60>
mov    %ecx,%edx
jmp    805b878 <__sprintf_chk@plt+0x11968>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x4,(%esp)
call   8064380 <__sprintf_chk@plt+0x1a470>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    (%edi),%ebx
test   %ebx,%ebx
jne    805ba26 <__sprintf_chk@plt+0x11b16>
jmp    805ba46 <__sprintf_chk@plt+0x11b36>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
jne    805ba18 <__sprintf_chk@plt+0x11b08>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
je     805ba46 <__sprintf_chk@plt+0x11b36>
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
test   %eax,%eax
jne    805ba08 <__sprintf_chk@plt+0x11af8>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   805cd00 <__sprintf_chk@plt+0x12df0>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    805ba24 <__sprintf_chk@plt+0x11b14>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049800 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x805b4a0,%eax
push   %edi
mov    $0x8049990,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x10000000,%esi
cmove  %eax,%edi
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
sete   %al
test   $0x40000000,%esi
mov    %eax,%ebp
jne    805baf0 <__sprintf_chk@plt+0x11be0>
movzbl (%ebx),%eax
test   %al,%al
je     805baf0 <__sprintf_chk@plt+0x11be0>
mov    %ebp,%edx
add    $0x1,%ebx
test   %dl,%dl
je     805babf <__sprintf_chk@plt+0x11baf>
jmp    805baeb <__sprintf_chk@plt+0x11bdb>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805baf0 <__sprintf_chk@plt+0x11be0>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    805bab8 <__sprintf_chk@plt+0x11ba8>
cmp    $0x2f,%al
je     805babc <__sprintf_chk@plt+0x11bac>
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %cl
test   %al,%al
je     805bafa <__sprintf_chk@plt+0x11bea>
test   %cl,%cl
je     805babc <__sprintf_chk@plt+0x11bac>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%ebp
jmp    805baf0 <__sprintf_chk@plt+0x11be0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805bd2e <__sprintf_chk@plt+0x11e1e>
mov    0x14(%esp),%eax
xor    %ebp,%ebp
mov    %ebp,%edi
mov    0x4(%eax),%edx
test   %edx,%edx
jne    805bc1d <__sprintf_chk@plt+0x11d0d>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     805bd10 <__sprintf_chk@plt+0x11e00>
mov    0x14(%esp),%ecx
mov    0x44(%esp),%esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ebx
mov    %eax,%ebp
and    $0x40000000,%eax
and    $0x8,%ebp
mov    %eax,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049a20 <strcpy@plt>
test   %ebp,%ebp
je     805bbc1 <__sprintf_chk@plt+0x11cb1>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805c780 <__sprintf_chk@plt+0x12870>
test   %eax,%eax
jne    805bb9b <__sprintf_chk@plt+0x11c8b>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049d40 <strrchr@plt>
test   %eax,%eax
je     805bbd8 <__sprintf_chk@plt+0x11cc8>
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805c780 <__sprintf_chk@plt+0x12870>
test   %eax,%eax
je     805bb74 <__sprintf_chk@plt+0x11c64>
mov    %edi,%ebp
xor    %ebx,%ebx
mov    %ebp,(%esp)
call   8049800 <free@plt>
mov    0x14(%esp),%eax
mov    0x8(%eax),%eax
add    $0x2c,%esp
shr    $0x1d,%eax
xor    $0x1,%eax
and    $0x1,%eax
xor    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805c780 <__sprintf_chk@plt+0x12870>
test   %eax,%eax
jne    805bb9b <__sprintf_chk@plt+0x11c8b>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
test   %eax,%eax
jne    805bc00 <__sprintf_chk@plt+0x11cf0>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
je     805bc00 <__sprintf_chk@plt+0x11cf0>
add    $0x1,%eax
mov    %eax,%esi
jne    805bb54 <__sprintf_chk@plt+0x11c44>
nop
mov    0x14(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     805bd04 <__sprintf_chk@plt+0x11df4>
mov    0x4(%eax),%edx
mov    %eax,0x14(%esp)
test   %edx,%edx
je     805bb30 <__sprintf_chk@plt+0x11c20>
mov    %eax,%ecx
mov    0xc(%eax),%eax
mov    0x14(%ecx),%ecx
test   %ecx,%ecx
mov    %ecx,0x18(%esp)
je     805bc00 <__sprintf_chk@plt+0x11cf0>
mov    %eax,%esi
movl   $0x0,0xc(%esp)
mov    %edi,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%ebp
mov    $0x805b4a0,%ecx
mov    $0x8049990,%edi
mov    (%esi),%eax
test   $0x10000000,%ebp
cmove  %ecx,%edi
mov    0x44(%esp),%ecx
mov    %eax,0x10(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edi
test   %eax,%eax
sete   %dl
test   $0x40000000,%ebp
mov    %edx,%ecx
jne    805bcd8 <__sprintf_chk@plt+0x11dc8>
mov    0x44(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     805bcd8 <__sprintf_chk@plt+0x11dc8>
test   %dl,%dl
jne    805bccd <__sprintf_chk@plt+0x11dbd>
mov    0x44(%esp),%ecx
lea    0x1(%ecx),%ebx
jmp    805bc9f <__sprintf_chk@plt+0x11d8f>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805bcdc <__sprintf_chk@plt+0x11dcc>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    805bc98 <__sprintf_chk@plt+0x11d88>
cmp    $0x2f,%al
je     805bc9c <__sprintf_chk@plt+0x11d8c>
mov    0x10(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %dl
mov    %edx,%ecx
test   %al,%al
je     805bcd8 <__sprintf_chk@plt+0x11dc8>
test   %dl,%dl
je     805bc9c <__sprintf_chk@plt+0x11d8c>
mov    0x1c(%esp),%ebp
jmp    805bb9d <__sprintf_chk@plt+0x11c8d>
xchg   %ax,%ax
test   %cl,%cl
jne    805bccd <__sprintf_chk@plt+0x11dbd>
addl   $0x1,0xc(%esp)
add    $0x8,%esi
mov    0x18(%esp),%eax
cmp    %eax,0xc(%esp)
jne    805bc40 <__sprintf_chk@plt+0x11d30>
mov    0x14(%esp),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%eax
test   %eax,%eax
jne    805bc0e <__sprintf_chk@plt+0x11cfe>
mov    %edi,%ebp
mov    $0x1,%ebx
jmp    805bb9f <__sprintf_chk@plt+0x11c8f>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %eax,%edi
jmp    805bb38 <__sprintf_chk@plt+0x11c28>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x44(%esp),%ebp
test   $0x10000000,%ebx
je     805bde8 <__sprintf_chk@plt+0x11ed8>
mov    %ebx,%edx
movzbl 0x0(%ebp),%eax
and    $0x2,%edx
test   $0x20,%bl
jne    805beb8 <__sprintf_chk@plt+0x11fa8>
test   %edx,%edx
mov    %ebp,%edx
je     805bf30 <__sprintf_chk@plt+0x12020>
add    $0x1,%edx
cmp    $0x2b,%al
je     805bd9e <__sprintf_chk@plt+0x11e8e>
jle    805c010 <__sprintf_chk@plt+0x12100>
cmp    $0x40,%al
je     805bd9e <__sprintf_chk@plt+0x11e8e>
lea    0x0(%esi,%eiz,1),%esi
jle    805c088 <__sprintf_chk@plt+0x12178>
cmp    $0x5b,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
movzbl (%edx),%eax
jmp    805bd7b <__sprintf_chk@plt+0x11e6b>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805c0c8 <__sprintf_chk@plt+0x121b8>
jle    805bf58 <__sprintf_chk@plt+0x12048>
cmp    $0x5b,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
movzbl (%edx),%eax
add    $0x1,%edx
cmp    $0x2b,%al
je     805c0c8 <__sprintf_chk@plt+0x121b8>
jg     805bda8 <__sprintf_chk@plt+0x11e98>
cmp    $0x21,%al
je     805c0c8 <__sprintf_chk@plt+0x121b8>
cmp    $0x2a,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
test   %al,%al
jne    805bdbe <__sprintf_chk@plt+0x11eae>
lea    0x0(%esi),%esi
mov    (%edi),%esi
test   %esi,%esi
je     805bdf9 <__sprintf_chk@plt+0x11ee9>
mov    0x4(%esi),%eax
test   %eax,%eax
je     805bea0 <__sprintf_chk@plt+0x11f90>
movl   $0x18,(%esp)
call   8064380 <__sprintf_chk@plt+0x1a470>
mov    %ebx,%ecx
mov    $0x805b470,%edx
and    $0x10,%ecx
mov    $0x805b5a0,%ecx
movl   $0x0,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    $0x805b450,%eax
cmovne %eax,%edx
mov    $0x805b490,%eax
cmovne %ecx,%eax
movl   $0x805b440,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   805ca00 <__sprintf_chk@plt+0x12af0>
mov    %eax,0xc(%esi)
mov    (%edi),%eax
mov    %eax,(%esi)
mov    %esi,(%edi)
mov    %ebp,(%esp)
and    $0x10000002,%ebx
call   8064430 <__sprintf_chk@plt+0x1a520>
cmp    $0x10000000,%ebx
mov    %eax,%edi
je     805bfb8 <__sprintf_chk@plt+0x120a8>
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   805d320 <__sprintf_chk@plt+0x13410>
cmp    %edi,%eax
je     805bfab <__sprintf_chk@plt+0x1209b>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049800 <free@plt>
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x60000018,%eax
je     805be5d <__sprintf_chk@plt+0x11f4d>
jmp    805bdf9 <__sprintf_chk@plt+0x11ee9>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
mov    %ebp,%edx
jne    805bdc1 <__sprintf_chk@plt+0x11eb1>
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805c0e0 <__sprintf_chk@plt+0x121d0>
jle    805bfe8 <__sprintf_chk@plt+0x120d8>
cmp    $0x40,%al
je     805c0e0 <__sprintf_chk@plt+0x121d0>
nop
lea    0x0(%esi,%eiz,1),%esi
jle    805c0b0 <__sprintf_chk@plt+0x121a0>
cmp    $0x5b,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
cmp    $0x5c,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805c000 <__sprintf_chk@plt+0x120f0>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
jmp    805bec2 <__sprintf_chk@plt+0x11fb2>
nop
cmp    $0x40,%al
je     805bf4a <__sprintf_chk@plt+0x1203a>
jle    805c098 <__sprintf_chk@plt+0x12188>
cmp    $0x5b,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
cmp    $0x5c,%al
jne    805bf4a <__sprintf_chk@plt+0x1203a>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805bf4a <__sprintf_chk@plt+0x1203a>
jg     805bf08 <__sprintf_chk@plt+0x11ff8>
cmp    $0x21,%al
je     805bf4a <__sprintf_chk@plt+0x1203a>
cmp    $0x2a,%al
nop
je     805bf60 <__sprintf_chk@plt+0x12050>
test   %al,%al
je     805bde8 <__sprintf_chk@plt+0x11ed8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805bf30 <__sprintf_chk@plt+0x12020>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    805bdbe <__sprintf_chk@plt+0x11eae>
mov    (%edi),%esi
test   %esi,%esi
je     805bf70 <__sprintf_chk@plt+0x12060>
cmpl   $0x1,0x4(%esi)
je     805c070 <__sprintf_chk@plt+0x12160>
movl   $0x18,(%esp)
call   8064380 <__sprintf_chk@plt+0x1a470>
mov    (%edi),%edx
movl   $0x1,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    %edx,(%eax)
mov    %eax,(%edi)
mov    0x14(%esi),%edx
cmp    0x10(%esi),%edx
je     805c030 <__sprintf_chk@plt+0x12120>
mov    0xc(%esi),%eax
lea    (%eax,%edx,8),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%esi)
mov    %ebp,(%eax)
mov    %ebx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,%ecx
jmp    805bfd6 <__sprintf_chk@plt+0x120c6>
xchg   %ax,%ax
add    %edx,%ebx
add    $0x1,%ecx
lea    0x1(%ebx),%edx
movzbl (%ebx),%ebx
test   %bl,%bl
mov    %bl,-0x1(%ecx)
je     805be79 <__sprintf_chk@plt+0x11f69>
xor    %ebx,%ebx
cmpb   $0x5c,(%edx)
jne    805bfc0 <__sprintf_chk@plt+0x120b0>
xor    %ebx,%ebx
cmpb   $0x0,0x1(%edx)
setne  %bl
jmp    805bfc0 <__sprintf_chk@plt+0x120b0>
cmp    $0x21,%al
je     805c0e0 <__sprintf_chk@plt+0x121d0>
cmp    $0x2a,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
test   %al,%al
je     805bde8 <__sprintf_chk@plt+0x11ed8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805bec2 <__sprintf_chk@plt+0x11fb2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x21,%al
je     805bd9e <__sprintf_chk@plt+0x11e8e>
cmp    $0x2a,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
test   %al,%al
je     805bde8 <__sprintf_chk@plt+0x11ed8>
jmp    805bd9e <__sprintf_chk@plt+0x11e8e>
lea    0x0(%esi),%esi
mov    0xc(%esi),%ecx
test   %ecx,%ecx
je     805c0f5 <__sprintf_chk@plt+0x121e5>
cmp    $0x15555554,%edx
ja     805c10c <__sprintf_chk@plt+0x121fc>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,8),%eax
mov    %edx,0x10(%esi)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x14(%esi),%edx
mov    %eax,0xc(%esi)
jmp    805bf9d <__sprintf_chk@plt+0x1208d>
nop
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x20000000,%eax
je     805bf8e <__sprintf_chk@plt+0x1207e>
jmp    805bf70 <__sprintf_chk@plt+0x12060>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
jmp    805bd9e <__sprintf_chk@plt+0x11e8e>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     805bf60 <__sprintf_chk@plt+0x12050>
jmp    805bf4a <__sprintf_chk@plt+0x1203a>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805c000 <__sprintf_chk@plt+0x120f0>
lea    0x0(%esi),%esi
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    805bdc1 <__sprintf_chk@plt+0x11eb1>
jmp    805bf60 <__sprintf_chk@plt+0x12050>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     805bf60 <__sprintf_chk@plt+0x12050>
mov    %ecx,%edx
xchg   %ax,%ax
jmp    805bec2 <__sprintf_chk@plt+0x11fb2>
test   %edx,%edx
jne    805c04e <__sprintf_chk@plt+0x1213e>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    805c055 <__sprintf_chk@plt+0x12145>
call   8064470 <__sprintf_chk@plt+0x1a560>
jmp    805c120 <__sprintf_chk@plt+0x12210>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%eax
mov    0x70(%esp),%edi
cmpb   $0x2d,(%eax)
mov    %edi,%ecx
mov    %edi,0x18(%esp)
mov    %cl,0x2f(%esp)
je     805c1a8 <__sprintf_chk@plt+0x12298>
movl   $0x806b64c,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x3c(%esp)
call   80499b0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     805c1c3 <__sprintf_chk@plt+0x122b3>
movb   $0x0,0x1c(%esp)
xor    %ebx,%ebx
xor    %ebp,%ebp
lea    0x3c(%esp),%edi
jmp    805c177 <__sprintf_chk@plt+0x12267>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %dl,0x0(%ebp,%ebx,1)
add    $0x1,%ebx
mov    0x4(%esi),%edx
cmp    0x8(%esi),%edx
jae    805c1d0 <__sprintf_chk@plt+0x122c0>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%esi)
movzbl (%edx),%edx
cmp    0x3c(%esp),%ebx
jne    805c170 <__sprintf_chk@plt+0x12260>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x14(%esp)
call   8064310 <__sprintf_chk@plt+0x1a400>
mov    0x14(%esp),%edx
mov    %eax,%ebp
jmp    805c170 <__sprintf_chk@plt+0x12260>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    805c13e <__sprintf_chk@plt+0x1222e>
movl   $0x0,0x3c(%esp)
mov    0x80732e4,%esi
movb   $0x1,0x1c(%esp)
jmp    805c161 <__sprintf_chk@plt+0x12251>
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   8049d10 <__uflow@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edx
jne    805c188 <__sprintf_chk@plt+0x12278>
testb  $0x20,(%esi)
jne    805c310 <__sprintf_chk@plt+0x12400>
call   8049c80 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
je     805c32a <__sprintf_chk@plt+0x1241a>
lea    0x1(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
test   %ebx,%ebx
mov    %eax,%ebp
movzbl 0x18(%esp),%eax
mov    %al,0x0(%ebp,%ebx,1)
je     805c2c8 <__sprintf_chk@plt+0x123b8>
mov    0x18(%esp),%edi
mov    %edi,%eax
cmp    -0x1(%ebp,%ebx,1),%al
setne  %al
movzbl %al,%eax
add    %eax,%ebx
lea    0x0(%ebp,%ebx,1),%eax
cmp    %eax,%ebp
mov    %eax,0x14(%esp)
jae    805c2c8 <__sprintf_chk@plt+0x123b8>
mov    %edi,%eax
movzbl 0x2f(%esp),%edx
movzbl %al,%eax
add    %eax,%eax
mov    %eax,0x20(%esp)
lea    0x1(%ebp),%esi
jmp    805c269 <__sprintf_chk@plt+0x12359>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %edi,0x14(%esp)
jbe    805c2c8 <__sprintf_chk@plt+0x123b8>
cmp    %dl,-0x1(%esi)
mov    %esi,%edi
lea    -0x1(%esi),%ebx
jne    805c260 <__sprintf_chk@plt+0x12350>
mov    %edx,0x1c(%esp)
call   8049ef0 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
mov    0x20(%esp),%eax
movzwl (%ecx,%eax,1),%eax
test   $0x20,%ah
mov    %ax,0x18(%esp)
je     805c2e8 <__sprintf_chk@plt+0x123d8>
cmp    %ebp,%ebx
je     805c2ba <__sprintf_chk@plt+0x123aa>
movzbl -0x2(%esi),%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    805c2b3 <__sprintf_chk@plt+0x123a3>
jmp    805c2e8 <__sprintf_chk@plt+0x123d8>
lea    0x0(%esi),%esi
movzbl -0x1(%ebx),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     805c2e8 <__sprintf_chk@plt+0x123d8>
sub    $0x1,%ebx
cmp    %ebp,%ebx
jne    805c2a8 <__sprintf_chk@plt+0x12398>
mov    %esi,%ebp
add    $0x1,%esi
cmp    %edi,0x14(%esp)
ja     805c269 <__sprintf_chk@plt+0x12359>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %eax,(%edi)
setne  %al
add    $0x4c,%esp
movzbl %al,%eax
pop    %ebx
neg    %eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
movb   $0x0,(%ebx)
mov    %edx,0x18(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   *0x60(%esp)
mov    0x18(%esp),%edx
jmp    805c2bc <__sprintf_chk@plt+0x123ac>
xchg   %ax,%ax
call   8049c80 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jne    805c204 <__sprintf_chk@plt+0x122f4>
mov    %esi,(%esp)
call   8049870 <fclose@plt>
test   %eax,%eax
je     805c204 <__sprintf_chk@plt+0x122f4>
mov    0x28(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jmp    805c204 <__sprintf_chk@plt+0x122f4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x8(%eax),%eax
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
mov    0xc(%esp),%ecx
cmp    0x8(%esi),%eax
jae    805c448 <__sprintf_chk@plt+0x12538>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    %ebx,(%ecx)
mov    (%ebx),%eax
test   %eax,%eax
je     805c40e <__sprintf_chk@plt+0x124fe>
cmp    %eax,%edi
je     805c3be <__sprintf_chk@plt+0x124ae>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     805c407 <__sprintf_chk@plt+0x124f7>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805c3e4 <__sprintf_chk@plt+0x124d4>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     805c440 <__sprintf_chk@plt+0x12530>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
cmp    %edi,%eax
je     805c41d <__sprintf_chk@plt+0x1250d>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    805c418 <__sprintf_chk@plt+0x12508>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    805c3f0 <__sprintf_chk@plt+0x124e0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805c3e4 <__sprintf_chk@plt+0x124d4>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    805c3e4 <__sprintf_chk@plt+0x124d4>
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
mov    0x4(%edx),%eax
mov    %edx,0xc(%esp)
mov    %cl,0xb(%esp)
cmp    %eax,%edi
jae    805c4fa <__sprintf_chk@plt+0x125ea>
xchg   %ax,%ax
mov    (%edi),%ebp
test   %ebp,%ebp
je     805c4ef <__sprintf_chk@plt+0x125df>
mov    0x4(%edi),%ebx
test   %ebx,%ebx
je     805c4da <__sprintf_chk@plt+0x125ca>
mov    0x8(%esi),%edx
jmp    805c497 <__sprintf_chk@plt+0x12587>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     805c4d8 <__sprintf_chk@plt+0x125c8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%esi)
mov    0x8(%esi),%edx
cmp    %edx,%eax
jae    805c57e <__sprintf_chk@plt+0x1266e>
mov    (%esi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    805c488 <__sprintf_chk@plt+0x12578>
mov    %ebp,(%eax)
addl   $0x1,0xc(%esi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805c495 <__sprintf_chk@plt+0x12585>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebp
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     805c508 <__sprintf_chk@plt+0x125f8>
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
add    $0x8,%edi
cmp    %eax,%edi
jb     805c470 <__sprintf_chk@plt+0x12560>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    805c57e <__sprintf_chk@plt+0x1266e>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805c55c <__sprintf_chk@plt+0x1264c>
mov    0x24(%esi),%eax
test   %eax,%eax
je     805c564 <__sprintf_chk@plt+0x12654>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %ebp,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    0xc(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%eax),%eax
cmp    %eax,%edi
jb     805c470 <__sprintf_chk@plt+0x12560>
jmp    805c4fa <__sprintf_chk@plt+0x125ea>
mov    %ebp,(%ebx)
addl   $0x1,0xc(%esi)
jmp    805c53d <__sprintf_chk@plt+0x1262d>
movl   $0x8,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
jne    805c532 <__sprintf_chk@plt+0x12622>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    805c606 <__sprintf_chk@plt+0x126f6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     805c5ff <__sprintf_chk@plt+0x126ef>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     805c5fa <__sprintf_chk@plt+0x126ea>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    805c5f0 <__sprintf_chk@plt+0x126e0>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     805c5d8 <__sprintf_chk@plt+0x126c8>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    805c651 <__sprintf_chk@plt+0x12741>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805c64a <__sprintf_chk@plt+0x1273a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     805c64a <__sprintf_chk@plt+0x1273a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805c640 <__sprintf_chk@plt+0x12730>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     805c628 <__sprintf_chk@plt+0x12718>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     805c65c <__sprintf_chk@plt+0x1274c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    805c6ce <__sprintf_chk@plt+0x127be>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805c6c7 <__sprintf_chk@plt+0x127b7>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     805c6c2 <__sprintf_chk@plt+0x127b2>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805c6b8 <__sprintf_chk@plt+0x127a8>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     805c6a0 <__sprintf_chk@plt+0x12790>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x806d548,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806d560,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x806d590,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x806d5c8
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   8049df0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806d578,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
cmp    0x8(%edi),%eax
jae    805c7e1 <__sprintf_chk@plt+0x128d1>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    805c7b2 <__sprintf_chk@plt+0x128a2>
jmp    805c7cb <__sprintf_chk@plt+0x128bb>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
cmp    %eax,%esi
je     805c7cd <__sprintf_chk@plt+0x128bd>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805c7d8 <__sprintf_chk@plt+0x128c8>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805c7b0 <__sprintf_chk@plt+0x128a0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     805c821 <__sprintf_chk@plt+0x12911>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     805c817 <__sprintf_chk@plt+0x12907>
jmp    805c827 <__sprintf_chk@plt+0x12917>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    805c827 <__sprintf_chk@plt+0x12917>
mov    (%edx),%eax
test   %eax,%eax
je     805c810 <__sprintf_chk@plt+0x12900>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
mov    0x8(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    805c88d <__sprintf_chk@plt+0x1297d>
mov    (%esi),%edx
lea    (%edx,%eax,8),%edx
mov    %edx,%eax
jmp    805c85c <__sprintf_chk@plt+0x1294c>
test   %eax,%eax
je     805c867 <__sprintf_chk@plt+0x12957>
cmp    %ebx,(%eax)
mov    0x4(%eax),%eax
jne    805c858 <__sprintf_chk@plt+0x12948>
test   %eax,%eax
jne    805c885 <__sprintf_chk@plt+0x12975>
mov    0x4(%esi),%ecx
jmp    805c876 <__sprintf_chk@plt+0x12966>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
test   %eax,%eax
jne    805c87f <__sprintf_chk@plt+0x1296f>
add    $0x8,%edx
cmp    %edx,%ecx
ja     805c870 <__sprintf_chk@plt+0x12960>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%eax),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
mov    (%eax),%ebx
mov    0x4(%eax),%ebp
cmp    %ebx,%ebp
jbe    805c905 <__sprintf_chk@plt+0x129f5>
xor    %esi,%esi
mov    (%ebx),%edi
test   %edi,%edi
je     805c8f5 <__sprintf_chk@plt+0x129e5>
cmp    %esi,%edx
jbe    805c8fc <__sprintf_chk@plt+0x129ec>
lea    0x1(%esi),%eax
mov    %edi,(%ecx,%esi,4)
mov    0x4(%ebx),%esi
test   %esi,%esi
je     805c8ec <__sprintf_chk@plt+0x129dc>
lea    0x0(%esi),%esi
cmp    %edx,%eax
je     805c900 <__sprintf_chk@plt+0x129f0>
mov    (%esi),%edi
add    $0x1,%eax
mov    %edi,-0x4(%ecx,%eax,4)
mov    0x4(%esi),%esi
test   %esi,%esi
jne    805c8d8 <__sprintf_chk@plt+0x129c8>
mov    0x14(%esp),%edi
mov    %eax,%esi
mov    0x4(%edi),%ebp
add    $0x8,%ebx
cmp    %ebp,%ebx
jb     805c8bb <__sprintf_chk@plt+0x129ab>
mov    %esi,%eax
xchg   %ax,%ax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805c900 <__sprintf_chk@plt+0x129f0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
mov    0x4(%ecx),%edx
mov    %eax,0xc(%esp)
cmp    %eax,%edx
jbe    805c978 <__sprintf_chk@plt+0x12a68>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805c94b <__sprintf_chk@plt+0x12a3b>
jmp    805c969 <__sprintf_chk@plt+0x12a59>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     805c978 <__sprintf_chk@plt+0x12a68>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    805c948 <__sprintf_chk@plt+0x12a38>
mov    0x30(%esp),%eax
mov    0x4(%eax),%edx
addl   $0x8,0xc(%esp)
cmp    0xc(%esp),%edx
ja     805c936 <__sprintf_chk@plt+0x12a26>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     805c9c2 <__sprintf_chk@plt+0x12ab2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    805c9a8 <__sprintf_chk@plt+0x12a98>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x28,(%esp)
mov    0x40(%esp),%ebx
mov    0x44(%esp),%esi
test   %eax,%eax
mov    $0x805c350,%eax
cmovne 0x48(%esp),%eax
test   %edx,%edx
mov    %eax,0x48(%esp)
mov    $0x805c360,%eax
cmovne 0x4c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805cc58 <__sprintf_chk@plt+0x12d48>
test   %esi,%esi
je     805caf9 <__sprintf_chk@plt+0x12be9>
cmp    $0x806d5b4,%esi
mov    %esi,0x14(%eax)
je     805cc5f <__sprintf_chk@plt+0x12d4f>
flds   0x8(%esi)
flds   0x806d5d0
fxch   %st(1)
fucomi %st(1),%st
jbe    805cab8 <__sprintf_chk@plt+0x12ba8>
flds   0x806d5d4
fucomip %st(1),%st
jbe    805cabe <__sprintf_chk@plt+0x12bae>
flds   0xc(%esi)
flds   0x806d5d8
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805cac4 <__sprintf_chk@plt+0x12bb4>
flds   (%esi)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805caca <__sprintf_chk@plt+0x12bba>
faddp  %st,%st(2)
flds   0x4(%esi)
fucomi %st(2),%st
jbe    805cad2 <__sprintf_chk@plt+0x12bc2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805cc44 <__sprintf_chk@plt+0x12d34>
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805cae0 <__sprintf_chk@plt+0x12bd0>
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806d5b4,0x14(%ebp)
mov    %ebp,(%esp)
call   8049800 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806d5b4,0x14(%eax)
flds   0x806d5cc
mov    $0x806d5b4,%esi
cmpb   $0x0,0x10(%esi)
jne    805cb57 <__sprintf_chk@plt+0x12c47>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806d5dc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805cbba <__sprintf_chk@plt+0x12caa>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    805cb59 <__sprintf_chk@plt+0x12c49>
fstp   %st(0)
cmp    $0x9,%ebx
ja     805cbc8 <__sprintf_chk@plt+0x12cb8>
mov    $0xb,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805cbd5 <__sprintf_chk@plt+0x12cc5>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     805cbb0 <__sprintf_chk@plt+0x12ca0>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805cb9d <__sprintf_chk@plt+0x12c8d>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     805cbb0 <__sprintf_chk@plt+0x12ca0>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     805cb90 <__sprintf_chk@plt+0x12c80>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    805cbe4 <__sprintf_chk@plt+0x12cd4>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    805cb68 <__sprintf_chk@plt+0x12c58>
jmp    805cbbc <__sprintf_chk@plt+0x12cac>
fstp   %st(0)
movl   $0x0,0x8(%ebp)
jmp    805cae7 <__sprintf_chk@plt+0x12bd7>
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     805cbbc <__sprintf_chk@plt+0x12cac>
cmp    $0x9,%ebx
ja     805cb6d <__sprintf_chk@plt+0x12c5d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     805cbb0 <__sprintf_chk@plt+0x12ca0>
cmp    $0x3fffffff,%ebx
ja     805cbbc <__sprintf_chk@plt+0x12cac>
mov    %ebx,0x8(%ebp)
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   8049f00 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     805cae7 <__sprintf_chk@plt+0x12bd7>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x48(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
movl   $0x0,0x24(%ebp)
mov    %eax,0x18(%ebp)
mov    0x4c(%esp),%eax
mov    %eax,0x1c(%ebp)
mov    0x50(%esp),%eax
mov    %eax,0x20(%ebp)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
fucomi %st(1),%st
fstp   %st(1)
jbe    805cada <__sprintf_chk@plt+0x12bca>
jmp    805cb0b <__sprintf_chk@plt+0x12bfb>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805caf1 <__sprintf_chk@plt+0x12be1>
flds   0x806d5cc
jmp    805cb0b <__sprintf_chk@plt+0x12bfb>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
mov    0x4(%esi),%eax
cmp    %eax,%edi
jae    805cce8 <__sprintf_chk@plt+0x12dd8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
test   %edx,%edx
je     805cce1 <__sprintf_chk@plt+0x12dd1>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    805cca2 <__sprintf_chk@plt+0x12d92>
jmp    805ccc6 <__sprintf_chk@plt+0x12db6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     805ccb0 <__sprintf_chk@plt+0x12da0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805cca0 <__sprintf_chk@plt+0x12d90>
test   %edx,%edx
je     805ccd1 <__sprintf_chk@plt+0x12dc1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x4(%esi),%eax
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %eax,%edi
jb     805cc88 <__sprintf_chk@plt+0x12d78>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     805cd53 <__sprintf_chk@plt+0x12e43>
mov    0x10(%esi),%eax
test   %eax,%eax
je     805cd53 <__sprintf_chk@plt+0x12e43>
mov    (%esi),%edi
mov    0x4(%esi),%edx
cmp    %edx,%edi
jae    805cd8b <__sprintf_chk@plt+0x12e7b>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     805cd4a <__sprintf_chk@plt+0x12e3a>
mov    %edi,%ebx
jmp    805cd3a <__sprintf_chk@plt+0x12e2a>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805cd38 <__sprintf_chk@plt+0x12e28>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edi,%edx
ja     805cd28 <__sprintf_chk@plt+0x12e18>
jmp    805cd56 <__sprintf_chk@plt+0x12e46>
mov    0x4(%esi),%edx
mov    (%esi),%edi
cmp    %edi,%edx
jbe    805cd8b <__sprintf_chk@plt+0x12e7b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    805cd72 <__sprintf_chk@plt+0x12e62>
jmp    805cd84 <__sprintf_chk@plt+0x12e74>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
jne    805cd70 <__sprintf_chk@plt+0x12e60>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edx,%edi
jb     805cd60 <__sprintf_chk@plt+0x12e50>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    805cd9a <__sprintf_chk@plt+0x12e8a>
jmp    805cda9 <__sprintf_chk@plt+0x12e99>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
jne    805cd98 <__sprintf_chk@plt+0x12e88>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049800 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
mov    0x14(%edi),%eax
cmpb   $0x0,0x10(%eax)
mov    %eax,0x18(%esp)
flds   0x8(%eax)
jne    805ce35 <__sprintf_chk@plt+0x12f25>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806d5dc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805ce9a <__sprintf_chk@plt+0x12f8a>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    805ce37 <__sprintf_chk@plt+0x12f27>
fstp   %st(0)
cmp    $0x9,%ebx
ja     805ceae <__sprintf_chk@plt+0x12f9e>
mov    $0xb,%ebx
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805cebb <__sprintf_chk@plt+0x12fab>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     805ce90 <__sprintf_chk@plt+0x12f80>
mov    $0x10,%ebp
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805ce7d <__sprintf_chk@plt+0x12f6d>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%ebp
test   %edx,%edx
je     805ce90 <__sprintf_chk@plt+0x12f80>
add    %ebp,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     805ce70 <__sprintf_chk@plt+0x12f60>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    805ceca <__sprintf_chk@plt+0x12fba>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    805ce48 <__sprintf_chk@plt+0x12f38>
jmp    805ce9c <__sprintf_chk@plt+0x12f8c>
fstp   %st(0)
movb   $0x0,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     805ce9c <__sprintf_chk@plt+0x12f8c>
cmp    $0x9,%ebx
ja     805ce4d <__sprintf_chk@plt+0x12f3d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     805ce90 <__sprintf_chk@plt+0x12f80>
lea    -0x1(%ebx),%eax
cmp    $0x3ffffffe,%eax
ja     805ce9c <__sprintf_chk@plt+0x12f8c>
cmp    %ebx,0x8(%edi)
je     805d004 <__sprintf_chk@plt+0x130f4>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   8049f00 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805ce9c <__sprintf_chk@plt+0x12f8c>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mov    %edi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    0x18(%edi),%eax
mov    %eax,0x40(%esp)
mov    0x1c(%edi),%eax
mov    %eax,0x44(%esp)
mov    0x20(%edi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%edi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   805c450 <__sprintf_chk@plt+0x12540>
test   %al,%al
mov    %al,0x18(%esp)
jne    805d016 <__sprintf_chk@plt+0x13106>
mov    0x4c(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x24(%edi)
mov    0x2c(%esp),%eax
cmp    %eax,%esi
jae    805cfda <__sprintf_chk@plt+0x130ca>
mov    (%esi),%edx
test   %edx,%edx
je     805cfd3 <__sprintf_chk@plt+0x130c3>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     805cfcc <__sprintf_chk@plt+0x130bc>
mov    0x8(%edi),%edx
jmp    805cf87 <__sprintf_chk@plt+0x13077>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     805cfc8 <__sprintf_chk@plt+0x130b8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%edx
cmp    %edx,%eax
jae    805d04f <__sprintf_chk@plt+0x1313f>
mov    (%edi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    805cf78 <__sprintf_chk@plt+0x13068>
mov    %ebp,(%eax)
addl   $0x1,0xc(%edi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%edi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%edi)
jne    805cf85 <__sprintf_chk@plt+0x13075>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esi)
add    $0x8,%esi
cmp    %eax,%esi
jb     805cf60 <__sprintf_chk@plt+0x13050>
xor    %ecx,%ecx
mov    %edi,%eax
lea    0x28(%esp),%edx
call   805c450 <__sprintf_chk@plt+0x12540>
test   %al,%al
je     805d04f <__sprintf_chk@plt+0x1313f>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x1,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%edi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%edi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%edi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%edi)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
mov    0x50(%esp),%edi
mov    0x58(%esp),%ebx
test   %esi,%esi
je     805d2b9 <__sprintf_chk@plt+0x133a9>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    805d2b9 <__sprintf_chk@plt+0x133a9>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebp
mov    0x0(%ebp),%eax
mov    %ebp,0x2c(%esp)
test   %eax,%eax
je     805d0fd <__sprintf_chk@plt+0x131ed>
cmp    %eax,%esi
je     805d0b8 <__sprintf_chk@plt+0x131a8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     805d0f3 <__sprintf_chk@plt+0x131e3>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     805d0fa <__sprintf_chk@plt+0x131ea>
test   %ebx,%ebx
xchg   %ax,%ax
je     805d180 <__sprintf_chk@plt+0x13270>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%eax),%eax
cmp    %eax,%esi
je     805d0b8 <__sprintf_chk@plt+0x131a8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805d190 <__sprintf_chk@plt+0x13280>
mov    0x4(%ebp),%ebp
mov    0x4(%ebp),%eax
test   %eax,%eax
jne    805d0d8 <__sprintf_chk@plt+0x131c8>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     805d1a0 <__sprintf_chk@plt+0x13290>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805d140 <__sprintf_chk@plt+0x13230>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805d2c0 <__sprintf_chk@plt+0x133b0>
mov    0x24(%edi),%eax
test   %eax,%eax
je     805d2d4 <__sprintf_chk@plt+0x133c4>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%ebp),%eax
mov    (%eax),%eax
jmp    805d0b8 <__sprintf_chk@plt+0x131a8>
lea    0x0(%esi),%esi
cmp    $0x806d5b4,%eax
je     805d24c <__sprintf_chk@plt+0x1333c>
flds   0x806d5d0
fxch   %st(2)
fucomi %st(2),%st
jbe    805d200 <__sprintf_chk@plt+0x132f0>
flds   0x806d5d4
fucomip %st(1),%st
jbe    805d206 <__sprintf_chk@plt+0x132f6>
flds   0xc(%eax)
flds   0x806d5d8
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d20c <__sprintf_chk@plt+0x132fc>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805d212 <__sprintf_chk@plt+0x13302>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    805d21a <__sprintf_chk@plt+0x1330a>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805d2f6 <__sprintf_chk@plt+0x133e6>
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d228 <__sprintf_chk@plt+0x13318>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x806d5cc
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x806d5b4,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    805d136 <__sprintf_chk@plt+0x13226>
mov    $0x806d5b4,%eax
jmp    805d250 <__sprintf_chk@plt+0x13340>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    805d25d <__sprintf_chk@plt+0x1334d>
fmulp  %st,%st(1)
jmp    805d25f <__sprintf_chk@plt+0x1334f>
fstp   %st(1)
flds   0x806d5dc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805d2ea <__sprintf_chk@plt+0x133da>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   805cdd0 <__sprintf_chk@plt+0x12ec0>
test   %al,%al
je     805d2ec <__sprintf_chk@plt+0x133dc>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   805c370 <__sprintf_chk@plt+0x12460>
test   %eax,%eax
je     805d140 <__sprintf_chk@plt+0x13230>
call   8049e60 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    805d0ca <__sprintf_chk@plt+0x131ba>
movl   $0x8,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
jne    805d15f <__sprintf_chk@plt+0x1324f>
jmp    805d2ec <__sprintf_chk@plt+0x133dc>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    805d0ca <__sprintf_chk@plt+0x131ba>
fucomi %st(2),%st
fstp   %st(2)
jbe    805d222 <__sprintf_chk@plt+0x13312>
fstp   %st(2)
fxch   %st(1)
jmp    805d250 <__sprintf_chk@plt+0x13340>
lea    0x0(%esi,%eiz,1),%esi
jmp    805d060 <__sprintf_chk@plt+0x13150>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%esi
mov    0x40(%esp),%edi
test   %esi,%esi
je     805d551 <__sprintf_chk@plt+0x13641>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    805d551 <__sprintf_chk@plt+0x13641>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
mov    %ebx,0x2c(%esp)
test   %eax,%eax
je     805d3a9 <__sprintf_chk@plt+0x13499>
cmp    %eax,%esi
je     805d420 <__sprintf_chk@plt+0x13510>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     805d39f <__sprintf_chk@plt+0x1348f>
mov    (%ebx),%eax
test   %eax,%eax
je     805d3a6 <__sprintf_chk@plt+0x13496>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%eax),%eax
cmp    %eax,%esi
je     805d420 <__sprintf_chk@plt+0x13510>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805d428 <__sprintf_chk@plt+0x13518>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    805d380 <__sprintf_chk@plt+0x13470>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     805d438 <__sprintf_chk@plt+0x13528>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805d3e8 <__sprintf_chk@plt+0x134d8>
fstp   %st(0)
fstp   %st(0)
xchg   %ax,%ax
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805d558 <__sprintf_chk@plt+0x13648>
mov    0x24(%edi),%eax
test   %eax,%eax
je     805d569 <__sprintf_chk@plt+0x13659>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,%eax
jmp    805d375 <__sprintf_chk@plt+0x13465>
nop
mov    0x4(%ebx),%eax
mov    (%eax),%eax
jmp    805d375 <__sprintf_chk@plt+0x13465>
lea    0x0(%esi),%esi
cmp    $0x806d5b4,%eax
je     805d4e4 <__sprintf_chk@plt+0x135d4>
flds   0x806d5d0
fxch   %st(2)
fucomi %st(2),%st
jbe    805d498 <__sprintf_chk@plt+0x13588>
flds   0x806d5d4
fucomip %st(1),%st
jbe    805d49e <__sprintf_chk@plt+0x1358e>
flds   0xc(%eax)
flds   0x806d5d8
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d4a4 <__sprintf_chk@plt+0x13594>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805d4aa <__sprintf_chk@plt+0x1359a>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    805d4b2 <__sprintf_chk@plt+0x135a2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805d588 <__sprintf_chk@plt+0x13678>
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d4c0 <__sprintf_chk@plt+0x135b0>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x806d5cc
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x806d5b4,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    805d3e2 <__sprintf_chk@plt+0x134d2>
mov    $0x806d5b4,%eax
jmp    805d4e8 <__sprintf_chk@plt+0x135d8>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    805d4f5 <__sprintf_chk@plt+0x135e5>
fmulp  %st,%st(1)
jmp    805d4f7 <__sprintf_chk@plt+0x135e7>
fstp   %st(1)
flds   0x806d5dc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805d57f <__sprintf_chk@plt+0x1366f>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   805cdd0 <__sprintf_chk@plt+0x12ec0>
test   %al,%al
je     805d581 <__sprintf_chk@plt+0x13671>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   805c370 <__sprintf_chk@plt+0x12460>
test   %eax,%eax
je     805d3e8 <__sprintf_chk@plt+0x134d8>
call   8049e60 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    805d418 <__sprintf_chk@plt+0x13508>
movl   $0x8,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
jne    805d407 <__sprintf_chk@plt+0x134f7>
jmp    805d581 <__sprintf_chk@plt+0x13671>
fstp   %st(0)
xor    %eax,%eax
jmp    805d379 <__sprintf_chk@plt+0x13469>
fucomi %st(2),%st
fstp   %st(2)
jbe    805d4ba <__sprintf_chk@plt+0x135aa>
fstp   %st(2)
fxch   %st(1)
jmp    805d4e8 <__sprintf_chk@plt+0x135d8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebp
mov    0x8(%eax),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
call   *0x18(%eax)
mov    0x40(%esp),%edi
cmp    0x8(%edi),%eax
jae    805d865 <__sprintf_chk@plt+0x13955>
mov    (%edi),%edx
lea    (%edx,%eax,8),%eax
mov    (%eax),%ebx
mov    %eax,0x18(%esp)
test   %ebx,%ebx
je     805d830 <__sprintf_chk@plt+0x13920>
cmp    %ebx,%ebp
je     805d65e <__sprintf_chk@plt+0x1374e>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805d658 <__sprintf_chk@plt+0x13748>
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     805d830 <__sprintf_chk@plt+0x13920>
mov    (%eax),%ebx
cmp    %ebx,%ebp
jne    805d624 <__sprintf_chk@plt+0x13714>
jmp    805d84b <__sprintf_chk@plt+0x1393b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     805d830 <__sprintf_chk@plt+0x13920>
mov    (%eax),%ebx
cmp    %ebx,%ebp
je     805d63b <__sprintf_chk@plt+0x1372b>
mov    0x40(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%eax)
test   %al,%al
je     805d610 <__sprintf_chk@plt+0x13700>
mov    0x4(%esi),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%ecx
mov    0x40(%esp),%edi
mov    %ecx,0x4(%esi)
movl   $0x0,(%eax)
mov    0x24(%edi),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%edi)
jmp    805d68a <__sprintf_chk@plt+0x1377a>
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    (%eax),%ebx
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%eax
test   %eax,%eax
je     805d840 <__sprintf_chk@plt+0x13930>
mov    (%eax),%esi
mov    0x4(%eax),%edi
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x40(%esp),%ecx
movl   $0x0,(%eax)
mov    0x24(%ecx),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%ecx)
test   %ebx,%ebx
je     805d6b8 <__sprintf_chk@plt+0x137a8>
mov    0x40(%esp),%eax
subl   $0x1,0x10(%eax)
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    805d6b8 <__sprintf_chk@plt+0x137a8>
jmp    805d6c8 <__sprintf_chk@plt+0x137b8>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805d6b8 <__sprintf_chk@plt+0x137a8>
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    0x40(%esp),%edx
mov    0xc(%eax),%eax
sub    $0x1,%eax
mov    %eax,0xc(%edx)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
xor    %edx,%edx
fildll 0x10(%esp)
mov    0x14(%eax),%ecx
mov    0x8(%eax),%eax
flds   (%ecx)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fucomip %st(3),%st
jbe    805d6a8 <__sprintf_chk@plt+0x13798>
cmp    $0x806d5b4,%ecx
je     805d7b0 <__sprintf_chk@plt+0x138a0>
flds   0x8(%ecx)
flds   0x806d5d0
fxch   %st(1)
fucomi %st(1),%st
jbe    805d768 <__sprintf_chk@plt+0x13858>
flds   0x806d5d4
fucomip %st(1),%st
jbe    805d770 <__sprintf_chk@plt+0x13860>
flds   0xc(%ecx)
flds   0x806d5d8
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d778 <__sprintf_chk@plt+0x13868>
fldz
fxch   %st(4)
fucomi %st(4),%st
fstp   %st(4)
jb     805d780 <__sprintf_chk@plt+0x13870>
fxch   %st(1)
faddp  %st,%st(3)
flds   0x4(%ecx)
fucomi %st(3),%st
jbe    805d788 <__sprintf_chk@plt+0x13878>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805d854 <__sprintf_chk@plt+0x13944>
fstp   %st(0)
fstp   %st(1)
jmp    805d790 <__sprintf_chk@plt+0x13880>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d790 <__sprintf_chk@plt+0x13880>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d790 <__sprintf_chk@plt+0x13880>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d790 <__sprintf_chk@plt+0x13880>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805d790 <__sprintf_chk@plt+0x13880>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
xchg   %ax,%ax
fldz
mov    0x40(%esp),%eax
fmul   %st(1),%st
movl   $0x806d5b4,0x14(%eax)
fucomip %st(2),%st
fstp   %st(1)
jbe    805d6b0 <__sprintf_chk@plt+0x137a0>
mov    $0x806d5b4,%ecx
jmp    805d7b4 <__sprintf_chk@plt+0x138a4>
fstp   %st(1)
fstp   %st(1)
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
jne    805d7c0 <__sprintf_chk@plt+0x138b0>
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   805cdd0 <__sprintf_chk@plt+0x12ec0>
test   %al,%al
jne    805d6b8 <__sprintf_chk@plt+0x137a8>
mov    0x40(%esp),%eax
mov    0x24(%eax),%eax
test   %eax,%eax
jne    805d80a <__sprintf_chk@plt+0x138fa>
jmp    805d819 <__sprintf_chk@plt+0x13909>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    0x4(%eax),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    805d808 <__sprintf_chk@plt+0x138f8>
mov    0x40(%esp),%eax
movl   $0x0,0x24(%eax)
jmp    805d6b8 <__sprintf_chk@plt+0x137a8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%ecx)
jmp    805d68a <__sprintf_chk@plt+0x1377a>
mov    0x18(%esp),%esi
jmp    805d63b <__sprintf_chk@plt+0x1372b>
fucomip %st(2),%st
fstp   %st(1)
jbe    805d790 <__sprintf_chk@plt+0x13880>
fstp   %st(1)
jmp    805d7b4 <__sprintf_chk@plt+0x138a4>
call   8049e60 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80497e0 <wcwidth@plt>
test   %eax,%eax
jns    805d894 <__sprintf_chk@plt+0x13984>
mov    %ebx,(%esp)
call   8049950 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     805d8d8 <__sprintf_chk@plt+0x139c8>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     805d8d0 <__sprintf_chk@plt+0x139c0>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   8049820 <memcpy@plt>
mov    %edi,(%esi)
jmp    805d8b9 <__sprintf_chk@plt+0x139a9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x806d5e0(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%esi
mov    0xc4(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
cmp    %edi,%esi
je     805de20 <__sprintf_chk@plt+0x13f10>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805da28 <__sprintf_chk@plt+0x13b18>
movb   $0x0,0x2c(%esp)
mov    %esi,%eax
cmpb   $0x0,0x2c(%esp)
mov    %esi,0x3c(%esp)
lea    0x30(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x38(%esp)
mov    %edi,0x74(%esp)
movb   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
jne    805dbcc <__sprintf_chk@plt+0x13cbc>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    805dd00 <__sprintf_chk@plt+0x13df0>
movl   $0x1,0x40(%esp)
movsbl (%eax),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    805daaa <__sprintf_chk@plt+0x13b9a>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    805de28 <__sprintf_chk@plt+0x13f18>
mov    $0x1,%eax
lea    0x0(%esi),%esi
mov    0x9c(%esp),%esi
xor    %gs:0x14,%esi
jne    805e03f <__sprintf_chk@plt+0x1412f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    805da46 <__sprintf_chk@plt+0x13b36>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0x1,%edi
cmp    %dl,%bl
jne    805dfb0 <__sprintf_chk@plt+0x140a0>
movzbl (%esi),%ebx
movzbl %bl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     805da66 <__sprintf_chk@plt+0x13b56>
mov    %ecx,0x1c(%esp)
call   8049ed0 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%ebx
movzbl (%edi),%edx
movzbl %dl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     805da86 <__sprintf_chk@plt+0x13b76>
mov    %ecx,0x1c(%esp)
call   8049ed0 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%edx
test   %bl,%bl
jne    805da38 <__sprintf_chk@plt+0x13b28>
xor    %eax,%eax
sub    %edx,%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
movb   $0x1,0x38(%esp)
movzbl 0x70(%esp),%ebx
test   %bl,%bl
je     805db10 <__sprintf_chk@plt+0x13c00>
movzbl 0x7c(%esp),%ebx
test   %bl,%bl
jne    805db67 <__sprintf_chk@plt+0x13c57>
cmpb   $0x0,0x44(%esp)
jne    805dfc0 <__sprintf_chk@plt+0x140b0>
mov    0x40(%esp),%eax
mov    0x78(%esp),%edx
cmp    %edx,%eax
je     805dd60 <__sprintf_chk@plt+0x13e50>
cmp    %eax,%edx
jbe    805dd38 <__sprintf_chk@plt+0x13e28>
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
lea    -0x1(%eax,%eax,1),%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    805dc71 <__sprintf_chk@plt+0x13d61>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805dc58 <__sprintf_chk@plt+0x13d48>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
test   %bl,%bl
movb   $0x1,0x70(%esp)
je     805dac0 <__sprintf_chk@plt+0x13bb0>
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     805ddc0 <__sprintf_chk@plt+0x13eb0>
cmpb   $0x0,0x44(%esp)
je     805d9fd <__sprintf_chk@plt+0x13aed>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049850 <towlower@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049850 <towlower@plt>
sub    %eax,%ebx
mov    %ebx,%eax
test   %eax,%eax
jne    805da08 <__sprintf_chk@plt+0x13af8>
mov    0x3c(%esp),%eax
mov    0x78(%esp),%edx
add    0x40(%esp),%eax
add    %edx,0x74(%esp)
cmpb   $0x0,0x2c(%esp)
mov    %eax,0x3c(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     805d9b0 <__sprintf_chk@plt+0x13aa0>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805da98 <__sprintf_chk@plt+0x13b88>
cmp    $0xfffffffe,%eax
je     805dd80 <__sprintf_chk@plt+0x13e70>
test   %eax,%eax
jne    805dc34 <__sprintf_chk@plt+0x13d24>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805e044 <__sprintf_chk@plt+0x14134>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805e068 <__sprintf_chk@plt+0x14158>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805d9df <__sprintf_chk@plt+0x13acf>
movb   $0x0,0x2c(%esp)
jmp    805d9df <__sprintf_chk@plt+0x13acf>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e01b <__sprintf_chk@plt+0x1410b>
movb   $0x1,0x64(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     805dd20 <__sprintf_chk@plt+0x13e10>
cmp    $0xfffffffe,%eax
je     805dda0 <__sprintf_chk@plt+0x13e90>
test   %eax,%eax
jne    805dcdb <__sprintf_chk@plt+0x13dcb>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805e044 <__sprintf_chk@plt+0x14134>
mov    0x80(%esp),%eax
test   %eax,%eax
jne    805e068 <__sprintf_chk@plt+0x14158>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805db5a <__sprintf_chk@plt+0x13c4a>
movb   $0x0,0x64(%esp)
jmp    805db5a <__sprintf_chk@plt+0x13c4a>
nop
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e01b <__sprintf_chk@plt+0x1410b>
movb   $0x1,0x2c(%esp)
jmp    805dbcc <__sprintf_chk@plt+0x13cbc>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
jmp    805db5a <__sprintf_chk@plt+0x13c4a>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
sar    $0x1f,%eax
or     $0x1,%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
jmp    805db9b <__sprintf_chk@plt+0x13c8b>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805daa5 <__sprintf_chk@plt+0x13b95>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    805db5a <__sprintf_chk@plt+0x13c4a>
lea    0x0(%esi),%esi
cmpb   $0x0,0x38(%esp)
jne    805d9f0 <__sprintf_chk@plt+0x13ae0>
cmpb   $0x0,0x2c(%esp)
lea    0x30(%esp),%esi
jne    805df26 <__sprintf_chk@plt+0x14016>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805df0d <__sprintf_chk@plt+0x13ffd>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     805d9fd <__sprintf_chk@plt+0x13aed>
jmp    805de28 <__sprintf_chk@plt+0x13f18>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
nop
mov    0x48(%esp),%esi
test   %esi,%esi
xchg   %ax,%ax
jne    805d9fd <__sprintf_chk@plt+0x13aed>
cmpb   $0x0,0x70(%esp)
jne    805dfca <__sprintf_chk@plt+0x140ba>
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    805de84 <__sprintf_chk@plt+0x13f74>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jb     805dfd4 <__sprintf_chk@plt+0x140c4>
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e01b <__sprintf_chk@plt+0x1410b>
movb   $0x1,0x64(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
mov    %eax,0x78(%esp)
jbe    805dfc0 <__sprintf_chk@plt+0x140b0>
test   %eax,%eax
jne    805def0 <__sprintf_chk@plt+0x13fe0>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805e044 <__sprintf_chk@plt+0x14134>
mov    0x80(%esp),%ecx
test   %ecx,%ecx
jne    805e068 <__sprintf_chk@plt+0x14158>
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     805dfc0 <__sprintf_chk@plt+0x140b0>
mov    0x80(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
neg    %eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e01b <__sprintf_chk@plt+0x1410b>
movb   $0x1,0x2c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e007 <__sprintf_chk@plt+0x140f7>
cmp    $0xfffffffe,%eax
je     805dfeb <__sprintf_chk@plt+0x140db>
test   %eax,%eax
jne    805df8e <__sprintf_chk@plt+0x1407e>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805e044 <__sprintf_chk@plt+0x14134>
mov    0x48(%esp),%edi
test   %edi,%edi
jne    805e068 <__sprintf_chk@plt+0x14158>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805de0d <__sprintf_chk@plt+0x13efd>
movb   $0x0,0x2c(%esp)
jmp    805de0d <__sprintf_chk@plt+0x13efd>
lea    0x0(%esi),%esi
movzbl %bl,%eax
sub    %edx,%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    805da08 <__sprintf_chk@plt+0x13af8>
movzbl 0x7c(%esp),%ebx
jmp    805def0 <__sprintf_chk@plt+0x13fe0>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    %eax,0x80(%esp)
jmp    805def0 <__sprintf_chk@plt+0x13fe0>
mov    0x3c(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805de0d <__sprintf_chk@plt+0x13efd>
movl   $0x1,0x40(%esp)
xor    %ebx,%ebx
movb   $0x0,0x44(%esp)
jmp    805de0d <__sprintf_chk@plt+0x13efd>
movl   $0x806d600,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806d600,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d600,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x28(%esp),%edx
test   $0x40,%dl
cmovne 0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049bb0 <openat64@plt>
mov    %eax,(%esp)
call   8062850 <__sprintf_chk@plt+0x18940>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     805e153 <__sprintf_chk@plt+0x14243>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strrchr@plt>
test   %eax,%eax
je     805e13f <__sprintf_chk@plt+0x1422f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    805e13f <__sprintf_chk@plt+0x1422f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x806d64c,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    805e13f <__sprintf_chk@plt+0x1422f>
mov    $0x3,%ecx
mov    $0x806d654,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    805e13f <__sprintf_chk@plt+0x1422f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80732a0
mov    %ebx,0x8073ae8
mov    %ebx,0x80732c0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80732a4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806d614,(%esp)
mov    %eax,0xc(%esp)
call   80499c0 <fwrite@plt>
call   8049e60 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
movl   $0x2,0x4(%esp)
lea    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   8062280 <__sprintf_chk@plt+0x18370>
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
je     805e4ab <__sprintf_chk@plt+0x1459b>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8069530 <fts_children+0x1470>
test   %eax,%eax
mov    %eax,%esi
je     805e4ab <__sprintf_chk@plt+0x1459b>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805e7b0 <__sprintf_chk@plt+0x148a0>
cmp    %esi,%ebx
movl   $0x0,0x4(%ebp)
mov    %ebx,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
jae    805e810 <__sprintf_chk@plt+0x14900>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805e26d <__sprintf_chk@plt+0x1435d>
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    805e258 <__sprintf_chk@plt+0x14348>
movl   $0x1,0x40(%esp)
movsbl (%ebx),%edi
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
test   %edi,%edi
movb   $0x1,0x38(%esp)
jne    805e302 <__sprintf_chk@plt+0x143f2>
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e9ba <__sprintf_chk@plt+0x14aaa>
movb   $0x1,0x2c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e710 <__sprintf_chk@plt+0x14800>
cmp    $0xfffffffe,%eax
je     805e780 <__sprintf_chk@plt+0x14870>
test   %eax,%eax
jne    805e770 <__sprintf_chk@plt+0x14860>
mov    0x3c(%esp),%ebx
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%ebx)
jne    805e9de <__sprintf_chk@plt+0x14ace>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805ea07 <__sprintf_chk@plt+0x14af7>
xor    %edi,%edi
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e242 <__sprintf_chk@plt+0x14332>
test   %edi,%edi
movb   $0x0,0x2c(%esp)
movb   $0x1,0x38(%esp)
je     805e24f <__sprintf_chk@plt+0x1433f>
mov    0x3c(%esp),%ebx
add    0x40(%esp),%ebx
movzbl 0x44(%esp),%eax
movb   $0x0,0x38(%esp)
cmp    %ebx,%esi
mov    %ebx,0x3c(%esp)
ja     805e210 <__sprintf_chk@plt+0x14300>
test   %al,%al
je     805e810 <__sprintf_chk@plt+0x14900>
mov    %edi,(%esp)
call   8049c60 <iswalnum@plt>
test   %eax,%eax
sete   0x1f(%esp)
movb   $0x0,0x64(%esp)
movzbl 0x64(%esp),%ebx
lea    0x68(%esp),%edi
mov    0x18(%esp),%eax
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
test   %bl,%bl
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
mov    %esi,0x14(%esp)
jne    805e547 <__sprintf_chk@plt+0x14637>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    805e6d8 <__sprintf_chk@plt+0x147c8>
movl   $0x1,0x78(%esp)
movsbl (%eax),%eax
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
mov    0x80(%esp),%edx
movb   $0x1,0x70(%esp)
test   %edx,%edx
jne    805e507 <__sprintf_chk@plt+0x145f7>
test   %bl,%bl
mov    0x14(%esp),%esi
jne    805e7a0 <__sprintf_chk@plt+0x14890>
cmpb   $0x0,0x2c(%esp)
jne    805e8d1 <__sprintf_chk@plt+0x149c1>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805e8bc <__sprintf_chk@plt+0x149ac>
movl   $0x1,0x40(%esp)
movsbl (%edx),%edi
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
movb   $0x1,0x38(%esp)
test   %bl,%bl
je     805e432 <__sprintf_chk@plt+0x14522>
test   %edi,%edi
je     805e448 <__sprintf_chk@plt+0x14538>
cmpb   $0x0,0x44(%esp)
je     805e448 <__sprintf_chk@plt+0x14538>
mov    %edi,(%esp)
call   8049c60 <iswalnum@plt>
test   %eax,%eax
jne    805e453 <__sprintf_chk@plt+0x14543>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1f(%esp)
jne    805e9b0 <__sprintf_chk@plt+0x14aa0>
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
movzbl (%esi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    805e820 <__sprintf_chk@plt+0x14910>
movl   $0x1,0x40(%esp)
movsbl (%esi),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    805e4e2 <__sprintf_chk@plt+0x145d2>
xor    %ebx,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %ebx,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    805ea02 <__sprintf_chk@plt+0x14af2>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    805e1b8 <__sprintf_chk@plt+0x142a8>
lea    0x0(%esi),%esi
movzbl 0x38(%esp),%ebx
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
movb   $0x1,0x70(%esp)
test   %bl,%bl
je     805e5d8 <__sprintf_chk@plt+0x146c8>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    805e620 <__sprintf_chk@plt+0x14710>
mov    0x40(%esp),%eax
movzbl 0x64(%esp),%ebx
add    %eax,0x3c(%esp)
mov    0x74(%esp),%eax
add    0x78(%esp),%eax
test   %bl,%bl
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movb   $0x0,0x70(%esp)
je     805e390 <__sprintf_chk@plt+0x14480>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     805e4f0 <__sprintf_chk@plt+0x145e0>
cmp    $0xfffffffe,%eax
je     805e730 <__sprintf_chk@plt+0x14820>
test   %eax,%eax
jne    805e5b5 <__sprintf_chk@plt+0x146a5>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805e9de <__sprintf_chk@plt+0x14ace>
mov    0x80(%esp),%esi
test   %esi,%esi
jne    805ea07 <__sprintf_chk@plt+0x14af7>
mov    %edi,(%esp)
movb   $0x1,0x7c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e5cb <__sprintf_chk@plt+0x146bb>
movb   $0x0,0x64(%esp)
movzbl 0x38(%esp),%ebx
jmp    805e3c2 <__sprintf_chk@plt+0x144b2>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805e64d <__sprintf_chk@plt+0x1473d>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805e638 <__sprintf_chk@plt+0x14728>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     805e51c <__sprintf_chk@plt+0x1460c>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805e51c <__sprintf_chk@plt+0x1460c>
jmp    805e24f <__sprintf_chk@plt+0x1433f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e9ba <__sprintf_chk@plt+0x14aaa>
movb   $0x1,0x2c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e6f8 <__sprintf_chk@plt+0x147e8>
cmp    $0xfffffffe,%eax
je     805e750 <__sprintf_chk@plt+0x14840>
test   %eax,%eax
jne    805e6b1 <__sprintf_chk@plt+0x147a1>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805e9de <__sprintf_chk@plt+0x14ace>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805ea07 <__sprintf_chk@plt+0x14af7>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e613 <__sprintf_chk@plt+0x14703>
movb   $0x0,0x2c(%esp)
jmp    805e613 <__sprintf_chk@plt+0x14703>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e9ba <__sprintf_chk@plt+0x14aaa>
movb   $0x1,0x64(%esp)
jmp    805e547 <__sprintf_chk@plt+0x14637>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
jmp    805e613 <__sprintf_chk@plt+0x14703>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    0x3c(%esp),%ebx
jmp    805e306 <__sprintf_chk@plt+0x143f6>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movzbl 0x38(%esp),%ebx
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    805e502 <__sprintf_chk@plt+0x145f2>
nop
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805e613 <__sprintf_chk@plt+0x14703>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edi
jmp    805e2db <__sprintf_chk@plt+0x143cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805e306 <__sprintf_chk@plt+0x143f6>
xchg   %ax,%ax
mov    0x48(%esp),%edi
movzbl 0x44(%esp),%ebx
jmp    805e42a <__sprintf_chk@plt+0x1451a>
xchg   %ax,%ax
cmp    %esi,%ebx
mov    $0x1,%edi
jae    805e7d2 <__sprintf_chk@plt+0x148c2>
call   8049ef0 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edi
shr    $0x3,%di
xor    $0x1,%edi
and    $0x1,%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movzbl (%esi,%eax,1),%ebx
test   %bl,%bl
je     805e7f3 <__sprintf_chk@plt+0x148e3>
call   8049ef0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%ebx,2)
jne    805e7fd <__sprintf_chk@plt+0x148ed>
mov    %edi,%eax
test   %al,%al
jne    805e9b0 <__sprintf_chk@plt+0x14aa0>
cmpb   $0x0,(%esi)
je     805e4ab <__sprintf_chk@plt+0x1459b>
lea    0x1(%esi),%ebx
jmp    805e1b8 <__sprintf_chk@plt+0x142a8>
xchg   %ax,%ax
movb   $0x1,0x1f(%esp)
jmp    805e337 <__sprintf_chk@plt+0x14427>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e9ba <__sprintf_chk@plt+0x14aaa>
movb   $0x1,0x2c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e4da <__sprintf_chk@plt+0x145ca>
cmp    $0xfffffffe,%eax
je     805e961 <__sprintf_chk@plt+0x14a51>
test   %eax,%eax
jne    805e89d <__sprintf_chk@plt+0x1498d>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805e9de <__sprintf_chk@plt+0x14ace>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    805ea07 <__sprintf_chk@plt+0x14af7>
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e49e <__sprintf_chk@plt+0x1458e>
movb   $0x0,0x2c(%esp)
jmp    805e49e <__sprintf_chk@plt+0x1458e>
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e9ba <__sprintf_chk@plt+0x14aaa>
movb   $0x1,0x2c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e97c <__sprintf_chk@plt+0x14a6c>
cmp    $0xfffffffe,%eax
je     805e992 <__sprintf_chk@plt+0x14a82>
test   %eax,%eax
jne    805e939 <__sprintf_chk@plt+0x14a29>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805e9de <__sprintf_chk@plt+0x14ace>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
jne    805ea07 <__sprintf_chk@plt+0x14af7>
xor    %edi,%edi
jmp    805e93d <__sprintf_chk@plt+0x14a2d>
mov    0x48(%esp),%edi
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805e425 <__sprintf_chk@plt+0x14515>
movb   $0x0,0x2c(%esp)
jmp    805e425 <__sprintf_chk@plt+0x14515>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    805e1b8 <__sprintf_chk@plt+0x142a8>
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
jmp    805e425 <__sprintf_chk@plt+0x14515>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805e425 <__sprintf_chk@plt+0x14515>
mov    $0x1,%ebx
jmp    805e4ad <__sprintf_chk@plt+0x1459d>
movl   $0x806d660,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d660,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806d660,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %esi,0x4(%esp)
call   80498c0 <dcgettext@plt>
cmp    %esi,%eax
mov    %eax,%ebx
je     805ea63 <__sprintf_chk@plt+0x14b53>
mov    %esi,%edx
call   805e180 <__sprintf_chk@plt+0x14270>
test   %al,%al
je     805ea70 <__sprintf_chk@plt+0x14b60>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049b80 <strlen@plt>
lea    0x4(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x806d658,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
mov    %edi,%ebx
call   8049f10 <__sprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,%ebp
mov    %eax,0x18(%esp)
call   8068670 <fts_children+0x5b0>
movl   $0x806d334,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   80682e0 <fts_children+0x220>
test   %eax,%eax
jne    805ebe8 <__sprintf_chk@plt+0x14cd8>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     805eca8 <__sprintf_chk@plt+0x14d98>
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
jne    805eb78 <__sprintf_chk@plt+0x14c68>
cmp    %ebx,%esi
jne    805ecc8 <__sprintf_chk@plt+0x14db8>
cmp    %ebx,%edi
xchg   %ax,%ax
jne    805eb60 <__sprintf_chk@plt+0x14c50>
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     805eb52 <__sprintf_chk@plt+0x14c42>
mov    %edi,(%esp)
call   8049800 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
call   805e180 <__sprintf_chk@plt+0x14270>
test   %al,%al
jne    805ebc0 <__sprintf_chk@plt+0x14cb0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     805eba2 <__sprintf_chk@plt+0x14c92>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
call   805e180 <__sprintf_chk@plt+0x14270>
test   %al,%al
jne    805ebc0 <__sprintf_chk@plt+0x14cb0>
test   %ebp,%ebp
je     805ece0 <__sprintf_chk@plt+0x14dd0>
mov    0x18(%esp),%eax
mov    %ebp,%edx
call   805e180 <__sprintf_chk@plt+0x14270>
test   %al,%al
je     805ece0 <__sprintf_chk@plt+0x14dd0>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805ebcc <__sprintf_chk@plt+0x14cbc>
mov    %esi,(%esp)
call   8049800 <free@plt>
test   %edi,%edi
mov    0x18(%esp),%eax
je     805eb54 <__sprintf_chk@plt+0x14c44>
mov    %edi,(%esp)
call   8049800 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x8(%esp)
movl   $0x806d334,0x4(%esp)
mov    %ebx,(%esp)
call   8064550 <__sprintf_chk@plt+0x1a640>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049b80 <strlen@plt>
mov    %eax,%ebp
lea    0xb(%eax),%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049820 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    $0x5449,%ecx
add    %edx,%ebp
mov    %cx,0x8(%ebp)
movl   $0x52542f2f,0x0(%ebp)
movl   $0x4c534e41,0x4(%ebp)
movb   $0x0,0xa(%ebp)
mov    %edx,0x8(%esp)
movl   $0x806d334,0x4(%esp)
mov    %ebx,(%esp)
call   8064550 <__sprintf_chk@plt+0x1a640>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   8049800 <free@plt>
test   %ebp,%ebp
je     805ed60 <__sprintf_chk@plt+0x14e50>
movl   $0x3f,0x4(%esp)
mov    %ebp,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
je     805ed4f <__sprintf_chk@plt+0x14e3f>
mov    %ebp,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   8049800 <free@plt>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
jne    805eb2c <__sprintf_chk@plt+0x14c1c>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     805ed68 <__sprintf_chk@plt+0x14e58>
mov    %ebx,%edi
mov    %ebp,%ebx
movl   $0x0,0x1c(%esp)
jmp    805eb2c <__sprintf_chk@plt+0x14c1c>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     805eb4c <__sprintf_chk@plt+0x14c3c>
mov    %esi,(%esp)
call   8049800 <free@plt>
jmp    805eb4c <__sprintf_chk@plt+0x14c3c>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049b80 <strlen@plt>
lea    0x4(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    %ebx,0x14(%esp)
movl   $0x806d658,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   8049f10 <__sprintf_chk@plt>
test   %esi,%esi
je     805ed3c <__sprintf_chk@plt+0x14e2c>
mov    %esi,(%esp)
call   8049800 <free@plt>
test   %edi,%edi
mov    %ebp,%eax
je     805eb54 <__sprintf_chk@plt+0x14c44>
mov    %ebp,0x18(%esp)
jmp    805ebd4 <__sprintf_chk@plt+0x14cc4>
test   %esi,%esi
je     805ed77 <__sprintf_chk@plt+0x14e67>
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %esi,%ebx
jmp    805eb2c <__sprintf_chk@plt+0x14c1c>
mov    %esi,%ebx
jmp    805eb1e <__sprintf_chk@plt+0x14c0e>
nop
mov    %ebp,0x1c(%esp)
mov    %ebp,%edi
mov    0x40(%esp),%ebx
jmp    805eb2c <__sprintf_chk@plt+0x14c1c>
mov    %ebp,%ebx
jmp    805ecb0 <__sprintf_chk@plt+0x14da0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
lea    -0x41(%ecx),%ebx
sub    $0x1c,%esp
cmp    $0x19,%ebx
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    0x34(%esp),%ebp
ja     805ee38 <__sprintf_chk@plt+0x14f28>
movzbl 0x6(%eax),%ebx
and    $0xffffffdf,%ebx
cmp    %cl,%bl
sete   %dl
mov    %edx,%esi
mov    %esi,%edx
xor    %ebx,%ebx
test   %dl,%dl
je     805ee28 <__sprintf_chk@plt+0x14f18>
test   %cl,%cl
mov    $0x1,%bl
je     805ee28 <__sprintf_chk@plt+0x14f18>
mov    %edi,%edx
movsbl %dl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
jbe    805ee48 <__sprintf_chk@plt+0x14f38>
mov    %edi,%edx
cmp    0x7(%eax),%dl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     805ee28 <__sprintf_chk@plt+0x14f18>
mov    %edi,%edx
mov    $0x1,%bl
test   %dl,%dl
je     805ee28 <__sprintf_chk@plt+0x14f18>
mov    %ebp,%ebx
movsbl %bl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
ja     805ee60 <__sprintf_chk@plt+0x14f50>
movzbl 0x8(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%bl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     805ee28 <__sprintf_chk@plt+0x14f18>
mov    %ebp,%edx
mov    $0x1,%bl
test   %dl,%dl
je     805ee28 <__sprintf_chk@plt+0x14f18>
mov    0xc(%esp),%edx
add    $0x9,%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
add    $0x9,%edx
mov    %edx,0x4(%esp)
call   80682e0 <fts_children+0x220>
test   %eax,%eax
sete   %bl
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %cl,0x6(%eax)
sete   %dl
mov    %edx,%esi
jmp    805edad <__sprintf_chk@plt+0x14e9d>
lea    0x0(%esi),%esi
movzbl 0x7(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%dl
sete   %cl
jmp    805edd4 <__sprintf_chk@plt+0x14ec4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ebx
cmp    0x8(%eax),%bl
sete   %cl
jmp    805edfb <__sprintf_chk@plt+0x14eeb>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     805eea0 <__sprintf_chk@plt+0x14f90>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8068670 <fts_children+0x5b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    805ef08 <__sprintf_chk@plt+0x14ff8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x2d,0x3(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x38,0x4(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x0,0x5(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x60,(%esi)
mov    $0x806d67e,%eax
mov    $0x806d673,%edx
cmovne %edx,%eax
jmp    805ee98 <__sprintf_chk@plt+0x14f88>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806d3b1,%eax
cmp    $0x7,%edi
mov    $0x806d521,%edx
cmovne %edx,%eax
jmp    805ee98 <__sprintf_chk@plt+0x14f88>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x31,0x2(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x38,0x3(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x30,0x4(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x33,0x5(%eax)
jne    805eef0 <__sprintf_chk@plt+0x14fe0>
movl   $0x0,0x4(%esp)
mov    $0x30,%ecx
mov    $0x806d682,%edx
movl   $0x0,(%esp)
call   805ed80 <__sprintf_chk@plt+0x14e70>
test   %eax,%eax
je     805eef0 <__sprintf_chk@plt+0x14fe0>
cmpb   $0x60,(%esi)
mov    $0x806d67a,%eax
mov    $0x806d677,%edx
cmovne %edx,%eax
jmp    805ee98 <__sprintf_chk@plt+0x14f88>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %eax,0x30(%esp)
mov    0xac(%esp),%eax
mov    %edx,0x24(%esp)
mov    0xa0(%esp),%esi
mov    %ecx,0x28(%esp)
mov    %eax,0x3c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4c(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x48(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x54(%esp)
mov    0xa8(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0xa4(%esp)
mov    %al,0x39(%esp)
ja     805f898 <__sprintf_chk@plt+0x15988>
mov    0xa4(%esp),%eax
jmp    *0x806d6c0(,%eax,4)
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
movzbl 0x39(%esp),%ecx
test   %ebx,%ebx
movzbl 0x3b(%esp),%ebx
setne  %dl
mov    %dl,0x69(%esp)
and    %ebx,%edx
mov    %dl,0x3a(%esp)
mov    0xa8(%esp),%edx
and    $0x1,%edx
mov    %edx,0x5c(%esp)
mov    0xa8(%esp),%edx
and    $0x4,%edx
mov    %edx,0x60(%esp)
mov    %ecx,%edx
and    %ebx,%edx
cmpl   $0x2,0xa4(%esp)
mov    %dl,0x68(%esp)
sete   %bl
xor    %edi,%edi
mov    %bl,0x53(%esp)
and    %ecx,%ebx
xor    $0x1,%ecx
and    %ecx,%eax
mov    %bl,0x51(%esp)
mov    %cl,0x6a(%esp)
mov    %al,0x50(%esp)
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
je     805f1e3 <__sprintf_chk@plt+0x152d3>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805f1f6 <__sprintf_chk@plt+0x152e6>
cmpb   $0x0,0x3a(%esp)
jne    805f678 <__sprintf_chk@plt+0x15768>
mov    0x28(%esp),%eax
movb   $0x0,0x2c(%esp)
lea    (%eax,%edi,1),%ecx
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     805f428 <__sprintf_chk@plt+0x15518>
movzbl %bl,%eax
jmp    *0x806d6e4(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x2,0xa4(%esp)
je     805f878 <__sprintf_chk@plt+0x15968>
cmpl   $0x3,0xa4(%esp)
jne    805f180 <__sprintf_chk@plt+0x15270>
mov    0x60(%esp),%edx
test   %edx,%edx
je     805f180 <__sprintf_chk@plt+0x15270>
lea    0x2(%edi),%edx
cmp    %edx,%esi
jbe    805f180 <__sprintf_chk@plt+0x15270>
mov    0x28(%esp),%eax
cmpb   $0x3f,0x1(%eax,%edi,1)
jne    805f180 <__sprintf_chk@plt+0x15270>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x44(%esp)
ja     805f180 <__sprintf_chk@plt+0x15270>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     805f180 <__sprintf_chk@plt+0x15270>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmp    0x24(%esp),%ebp
jae    805f13d <__sprintf_chk@plt+0x1522d>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f14f <__sprintf_chk@plt+0x1523f>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f161 <__sprintf_chk@plt+0x15251>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f173 <__sprintf_chk@plt+0x15263>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x44(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%edi
lea    0x0(%esi),%esi
cmpb   $0x0,0x50(%esp)
jne    805f19f <__sprintf_chk@plt+0x1528f>
mov    0x3c(%esp),%edx
test   %edx,%edx
je     805f19f <__sprintf_chk@plt+0x1528f>
mov    %ebx,%eax
shr    $0x5,%al
movzbl %al,%eax
mov    (%edx,%eax,4),%eax
bt     %ebx,%eax
jb     805f1a6 <__sprintf_chk@plt+0x15296>
cmpb   $0x0,0x2c(%esp)
je     805f1c2 <__sprintf_chk@plt+0x152b2>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmp    0x24(%esp),%ebp
jae    805f1bf <__sprintf_chk@plt+0x152af>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    0x24(%esp),%ebp
jae    805f1d2 <__sprintf_chk@plt+0x152c2>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
jne    805f090 <__sprintf_chk@plt+0x15180>
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax,%edi,1)
setne  %al
test   %al,%al
jne    805f098 <__sprintf_chk@plt+0x15188>
cmpb   $0x0,0x53(%esp)
je     805f20c <__sprintf_chk@plt+0x152fc>
test   %ebp,%ebp
jne    805f20c <__sprintf_chk@plt+0x152fc>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmpb   $0x0,0x6a(%esp)
je     805f242 <__sprintf_chk@plt+0x15332>
mov    0x40(%esp),%eax
test   %eax,%eax
je     805f242 <__sprintf_chk@plt+0x15332>
mov    0x40(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805f242 <__sprintf_chk@plt+0x15332>
mov    0x30(%esp),%ebx
sub    %ebp,%edx
mov    0x24(%esp),%ecx
cmp    %ebp,%ecx
jbe    805f237 <__sprintf_chk@plt+0x15327>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    805f230 <__sprintf_chk@plt+0x15320>
cmp    0x24(%esp),%ebp
mov    %ebp,%eax
jae    805f2cd <__sprintf_chk@plt+0x153bd>
mov    0x30(%esp),%esi
movb   $0x0,(%esi,%ebp,1)
jmp    805f2cd <__sprintf_chk@plt+0x153bd>
cmp    $0x1,%esi
setne  %al
cmp    $0xffffffff,%esi
je     805f888 <__sprintf_chk@plt+0x15978>
test   %al,%al
jne    805f180 <__sprintf_chk@plt+0x15270>
test   %edi,%edi
jne    805f180 <__sprintf_chk@plt+0x15270>
cmpb   $0x0,0x51(%esp)
je     805f180 <__sprintf_chk@plt+0x15270>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0xa8(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
jne    805f925 <__sprintf_chk@plt+0x15a15>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpb   $0x0,0x51(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmpb   $0x0,0x3b(%esp)
je     805f180 <__sprintf_chk@plt+0x15270>
mov    %eax,%ebx
jmp    805f1a6 <__sprintf_chk@plt+0x15296>
xchg   %ax,%ax
mov    $0x62,%eax
jmp    805f2fc <__sprintf_chk@plt+0x153ec>
nop
mov    $0x66,%eax
jmp    805f2fc <__sprintf_chk@plt+0x153ec>
nop
mov    $0x76,%eax
jmp    805f2fc <__sprintf_chk@plt+0x153ec>
nop
mov    $0x61,%eax
jmp    805f2fc <__sprintf_chk@plt+0x153ec>
nop
mov    $0x6e,%eax
jmp    805f2f5 <__sprintf_chk@plt+0x153e5>
nop
mov    $0x74,%eax
jmp    805f2f5 <__sprintf_chk@plt+0x153e5>
nop
cmpb   $0x0,0x3b(%esp)
je     805f860 <__sprintf_chk@plt+0x15950>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmp    0x24(%esp),%ebp
jae    805f364 <__sprintf_chk@plt+0x15454>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%edi),%edx
cmp    %edx,%esi
lea    0x1(%ebp),%eax
jbe    805f3a8 <__sprintf_chk@plt+0x15498>
mov    0x28(%esp),%ecx
movzbl 0x1(%ecx,%edi,1),%edx
mov    %edx,%ecx
mov    %dl,0x44(%esp)
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
ja     805f3a8 <__sprintf_chk@plt+0x15498>
cmp    %eax,0x24(%esp)
ja     805f8b8 <__sprintf_chk@plt+0x159a8>
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f3a1 <__sprintf_chk@plt+0x15491>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    805f187 <__sprintf_chk@plt+0x15277>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x68(%esp)
je     805f3ca <__sprintf_chk@plt+0x154ba>
cmpb   $0x0,0x69(%esp)
jne    805f1c2 <__sprintf_chk@plt+0x152b2>
mov    %ebx,%eax
jmp    805f2f5 <__sprintf_chk@plt+0x153e5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x53(%esp)
je     805f180 <__sprintf_chk@plt+0x15270>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
cmp    0x24(%esp),%ebp
jae    805f3fc <__sprintf_chk@plt+0x154ec>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f40e <__sprintf_chk@plt+0x154fe>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805f420 <__sprintf_chk@plt+0x15510>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    805f180 <__sprintf_chk@plt+0x15270>
cmpl   $0x1,0x54(%esp)
jne    805f6f0 <__sprintf_chk@plt+0x157e0>
call   8049ef0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x44(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
shr    $0xe,%ax
xor    $0x1,%eax
and    0x3b(%esp),%al
test   %al,%al
je     805f180 <__sprintf_chk@plt+0x15270>
mov    0x44(%esp),%edx
add    %edi,%edx
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
mov    0x30(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x24(%esp),%edx
mov    %esi,0xa0(%esp)
mov    0x28(%esp),%esi
add    %ebp,%eax
jmp    805f499 <__sprintf_chk@plt+0x15589>
cmp    %edx,%ecx
jae    805f48f <__sprintf_chk@plt+0x1557f>
mov    %bl,0x3(%eax)
movzbl (%esi,%edi,1),%ebx
add    $0x4,%ebp
add    $0x4,%eax
cmp    %ebp,%edx
jbe    805f4a0 <__sprintf_chk@plt+0x15590>
movb   $0x5c,(%eax)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edx
jbe    805f4b2 <__sprintf_chk@plt+0x155a2>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edx
jbe    805f4c7 <__sprintf_chk@plt+0x155b7>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax)
and    $0x7,%ebx
add    $0x1,%edi
add    $0x30,%ebx
cmp    0x2c(%esp),%edi
lea    0x3(%ebp),%ecx
jb     805f488 <__sprintf_chk@plt+0x15578>
mov    0xa0(%esp),%esi
mov    %ecx,%ebp
jmp    805f1c5 <__sprintf_chk@plt+0x152b5>
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d521,0x40(%esp)
movl   $0x2,0xa4(%esp)
00
jmp    805f018 <__sprintf_chk@plt+0x15108>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
jne    805f95c <__sprintf_chk@plt+0x15a4c>
mov    0x24(%esp),%edi
test   %edi,%edi
je     805f53a <__sprintf_chk@plt+0x1562a>
mov    0x30(%esp),%eax
movb   $0x27,(%eax)
mov    $0x1,%eax
mov    $0x1,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d521,0x40(%esp)
jmp    805f018 <__sprintf_chk@plt+0x15108>
xchg   %ax,%ax
cmpb   $0x0,0x39(%esp)
jne    805f92a <__sprintf_chk@plt+0x15a1a>
mov    0x24(%esp),%ebp
test   %ebp,%ebp
je     805f57a <__sprintf_chk@plt+0x1566a>
mov    0x30(%esp),%eax
movb   $0x22,(%eax)
xor    %eax,%eax
mov    $0x1,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d3b1,0x40(%esp)
jmp    805f018 <__sprintf_chk@plt+0x15108>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d3b1,0x40(%esp)
movl   $0x3,0xa4(%esp)
00
jmp    805f018 <__sprintf_chk@plt+0x15108>
xchg   %ax,%ax
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
jmp    805f018 <__sprintf_chk@plt+0x15108>
nop
lea    0x0(%esi,%eiz,1),%esi
je     805f624 <__sprintf_chk@plt+0x15714>
mov    0xa4(%esp),%edx
mov    $0x806d68a,%eax
call   805ee70 <__sprintf_chk@plt+0x14f60>
mov    0xa4(%esp),%edx
mov    %eax,0x4c(%esp)
mov    $0x806d521,%eax
call   805ee70 <__sprintf_chk@plt+0x14f60>
mov    %eax,0x48(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x39(%esp)
jne    805f652 <__sprintf_chk@plt+0x15742>
mov    0x4c(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     805f652 <__sprintf_chk@plt+0x15742>
mov    0x30(%esp),%ebx
mov    0x24(%esp),%edx
cmp    %edx,%ebp
jae    805f647 <__sprintf_chk@plt+0x15737>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%ecx,%ebp,1),%eax
test   %al,%al
jne    805f640 <__sprintf_chk@plt+0x15730>
mov    0x48(%esp),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,0x40(%esp)
movb   $0x1,0x3b(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
jmp    805f018 <__sprintf_chk@plt+0x15108>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
cmp    $0xffffffff,%esi
lea    (%edi,%eax,1),%ebx
jne    805f697 <__sprintf_chk@plt+0x15787>
cmp    $0x1,%eax
jbe    805f697 <__sprintf_chk@plt+0x15787>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%esi
mov    0x28(%esp),%eax
cmp    %ebx,%esi
lea    (%eax,%edi,1),%ecx
jb     805f6e0 <__sprintf_chk@plt+0x157d0>
mov    0x34(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   8049880 <memcmp@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    805f6e0 <__sprintf_chk@plt+0x157d0>
cmpb   $0x0,0x39(%esp)
jne    805f288 <__sprintf_chk@plt+0x15378>
movb   $0x1,0x2c(%esp)
jmp    805f0af <__sprintf_chk@plt+0x1519f>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2c(%esp)
jmp    805f0af <__sprintf_chk@plt+0x1519f>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%esi
movl   $0x0,0x74(%esp)
movl   $0x0,0x78(%esp)
je     805f89d <__sprintf_chk@plt+0x1598d>
movb   $0x1,0x52(%esp)
movl   $0x0,0x44(%esp)
mov    %edi,0x58(%esp)
mov    %ebp,0x64(%esp)
mov    %bl,0x6b(%esp)
mov    %ecx,0x6c(%esp)
mov    0x28(%esp),%eax
mov    0x44(%esp),%edi
add    0x58(%esp),%edi
lea    (%eax,%edi,1),%ebx
lea    0x74(%esp),%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x70(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805f7d6 <__sprintf_chk@plt+0x158c6>
cmp    $0xffffffff,%eax
je     805f90e <__sprintf_chk@plt+0x159fe>
cmp    $0xfffffffe,%eax
je     805f8c5 <__sprintf_chk@plt+0x159b5>
cmpb   $0x0,0x51(%esp)
je     805f79f <__sprintf_chk@plt+0x1588f>
cmp    $0x1,%eax
je     805f79f <__sprintf_chk@plt+0x1588f>
mov    $0x1,%edx
xchg   %ax,%ax
movzbl (%ebx,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     805f798 <__sprintf_chk@plt+0x15888>
movzbl %al,%eax
jmp    *0x806d8e0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    805f780 <__sprintf_chk@plt+0x15870>
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   80499a0 <iswprint@plt>
mov    $0x0,%ecx
test   %eax,%eax
movzbl 0x52(%esp),%eax
cmove  %ecx,%eax
mov    %al,0x52(%esp)
lea    0x74(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x44(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     805f726 <__sprintf_chk@plt+0x15816>
movzbl 0x52(%esp),%eax
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
xor    $0x1,%eax
and    0x3b(%esp),%al
cmpl   $0x1,0x44(%esp)
jbe    805f454 <__sprintf_chk@plt+0x15544>
mov    0x44(%esp),%edx
add    %edi,%edx
test   %al,%al
jne    805f462 <__sprintf_chk@plt+0x15552>
cmpb   $0x0,0x2c(%esp)
je     805f948 <__sprintf_chk@plt+0x15a38>
cmp    0x24(%esp),%ebp
jae    805f821 <__sprintf_chk@plt+0x15911>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    805f84a <__sprintf_chk@plt+0x1593a>
lea    0x0(%esi),%esi
cmp    %ebp,%ecx
jbe    805f843 <__sprintf_chk@plt+0x15933>
mov    0x30(%esp),%esi
mov    %bl,(%esi,%ebp,1)
movzbl (%eax,%edi,1),%ebx
add    $0x1,%ebp
add    $0x1,%edi
cmp    %edi,%edx
ja     805f838 <__sprintf_chk@plt+0x15928>
mov    0xa0(%esp),%esi
jmp    805f1c5 <__sprintf_chk@plt+0x152b5>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%ecx
test   %ecx,%ecx
je     805f180 <__sprintf_chk@plt+0x15270>
add    $0x1,%edi
jmp    805f07d <__sprintf_chk@plt+0x1516d>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
je     805f180 <__sprintf_chk@plt+0x15270>
jmp    805f288 <__sprintf_chk@plt+0x15378>
mov    0x28(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    805f267 <__sprintf_chk@plt+0x15357>
call   8049e60 <abort@plt>
mov    0x28(%esp),%eax
mov    %ecx,0x44(%esp)
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    0x44(%esp),%ecx
mov    %eax,%esi
jmp    805f709 <__sprintf_chk@plt+0x157f9>
mov    0x30(%esp),%ecx
movb   $0x30,(%ecx,%eax,1)
jmp    805f38f <__sprintf_chk@plt+0x1547f>
mov    %edi,%edx
mov    %ebx,%eax
mov    0x64(%esp),%ebp
cmp    %edx,%esi
mov    0x58(%esp),%edi
movzbl 0x6b(%esp),%ebx
mov    0x6c(%esp),%ecx
jbe    805f904 <__sprintf_chk@plt+0x159f4>
cmpb   $0x0,(%eax)
je     805f904 <__sprintf_chk@plt+0x159f4>
mov    0x44(%esp),%eax
jmp    805f8f6 <__sprintf_chk@plt+0x159e6>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     805f900 <__sprintf_chk@plt+0x159f0>
add    $0x1,%eax
lea    (%edi,%eax,1),%edx
cmp    %edx,%esi
ja     805f8f0 <__sprintf_chk@plt+0x159e0>
mov    %eax,0x44(%esp)
movzbl 0x3b(%esp),%eax
jmp    805f7ef <__sprintf_chk@plt+0x158df>
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
movzbl 0x3b(%esp),%eax
jmp    805f7ef <__sprintf_chk@plt+0x158df>
call   80498f0 <__stack_chk_fail@plt>
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d3b1,0x40(%esp)
jmp    805f018 <__sprintf_chk@plt+0x15108>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    805f84a <__sprintf_chk@plt+0x1593a>
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806d521,0x40(%esp)
jmp    805f018 <__sprintf_chk@plt+0x15108>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049c80 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8073c00,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   80643f0 <__sprintf_chk@plt+0x1a4e0>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8073c00,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    805f9e0 <__sprintf_chk@plt+0x15ad0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8073c00,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8073c00,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8073c00,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8073c00,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     805fa93 <__sprintf_chk@plt+0x15b83>
test   %ecx,%ecx
je     805fa93 <__sprintf_chk@plt+0x15b83>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049e60 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8073c00,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049c80 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8073c00,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049c80 <__errno_location@plt>
mov    0x4(%ebx),%esi
lea    0x8(%ebx),%ebp
mov    0x54(%esp),%ecx
xor    %edx,%edx
or     $0x1,%esi
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x54(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %eax,0x28(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    0x28(%esp),%esi
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x24(%esp),%eax
mov    %eax,(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x8073c00,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049c80 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     805fc88 <__sprintf_chk@plt+0x15d78>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x807329c,%edi
mov    0x8073290,%esi
cmp    $0x1,%edi
jbe    805fcd3 <__sprintf_chk@plt+0x15dc3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
cmp    %edi,%ebx
jne    805fcc0 <__sprintf_chk@plt+0x15db0>
mov    0x4(%esi),%eax
cmp    $0x8073b00,%eax
je     805fcf9 <__sprintf_chk@plt+0x15de9>
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x100,0x8073294
00
movl   $0x8073b00,0x8073298
08
cmp    $0x8073294,%esi
je     805fd13 <__sprintf_chk@plt+0x15e03>
mov    %esi,(%esp)
call   8049800 <free@plt>
movl   $0x8073294,0x8073290
08
movl   $0x1,0x807329c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8073290,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     805feac <__sprintf_chk@plt+0x15f9c>
cmp    0x807329c,%esi
jb     805fdbe <__sprintf_chk@plt+0x15eae>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     805feb1 <__sprintf_chk@plt+0x15fa1>
cmp    $0x8073294,%ebx
lea    0x0(,%edi,8),%eax
je     805fe80 <__sprintf_chk@plt+0x15f70>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x8073c2c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8073c04,%esi
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073c08,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     805fe6b <__sprintf_chk@plt+0x15f5b>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     805fe23 <__sprintf_chk@plt+0x15f13>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x8073c2c,%eax
movl   $0x8073c08,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    805fd95 <__sprintf_chk@plt+0x15e85>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8073290,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     806003c <__sprintf_chk@plt+0x1612c>
cmp    0x807329c,%esi
jb     805ff4e <__sprintf_chk@plt+0x1603e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8060041 <__sprintf_chk@plt+0x16131>
cmp    $0x8073294,%ebx
lea    0x0(,%edi,8),%eax
je     8060010 <__sprintf_chk@plt+0x16100>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x8073c2c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8073c04,%esi
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073c08,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     805fffb <__sprintf_chk@plt+0x160eb>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     805ffb3 <__sprintf_chk@plt+0x160a3>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x8073c2c,%eax
movl   $0x8073c08,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    805ff25 <__sprintf_chk@plt+0x16015>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    80600db <__sprintf_chk@plt+0x161cb>
cmp    $0x8073294,%ebx
jne    80601b0 <__sprintf_chk@plt+0x162a0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x8073c04,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x8073c2c,%eax
movl   $0x8073c08,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,0x1c(%esp)
ja     8060199 <__sprintf_chk@plt+0x16289>
lea    0x1(%eax),%edx
cmp    $0x8073b00,%esi
mov    %edx,(%ebx)
je     806014b <__sprintf_chk@plt+0x1623b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049800 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x8073c2c,%eax
movl   $0x8073c08,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    80600aa <__sprintf_chk@plt+0x1619a>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    806025d <__sprintf_chk@plt+0x1634d>
cmp    $0x8073294,%ebx
jne    8060320 <__sprintf_chk@plt+0x16410>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x8073c2c,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x8073c04,%edi
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073c08,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060307 <__sprintf_chk@plt+0x163f7>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     80602bf <__sprintf_chk@plt+0x163af>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x8073c2c,%eax
movl   $0x8073c08,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073c28,%eax
mov    %eax,0x10(%esp)
mov    0x8073c00,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    806022c <__sprintf_chk@plt+0x1631c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8060544 <__sprintf_chk@plt+0x16634>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049c80 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8073290,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8060544 <__sprintf_chk@plt+0x16634>
cmp    0x807329c,%ebx
jb     8060451 <__sprintf_chk@plt+0x16541>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8060549 <__sprintf_chk@plt+0x16639>
cmp    $0x8073294,%esi
lea    0x0(,%edi,8),%eax
je     8060518 <__sprintf_chk@plt+0x16608>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     80604fc <__sprintf_chk@plt+0x165ec>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     80604b4 <__sprintf_chk@plt+0x165a4>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8060428 <__sprintf_chk@plt+0x16518>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
xchg   %ax,%ax
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     806075c <__sprintf_chk@plt+0x1684c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049c80 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8073290,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     806075c <__sprintf_chk@plt+0x1684c>
cmp    0x807329c,%ebx
jb     8060661 <__sprintf_chk@plt+0x16751>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8060761 <__sprintf_chk@plt+0x16851>
cmp    $0x8073294,%esi
lea    0x0(,%edi,8),%eax
je     8060730 <__sprintf_chk@plt+0x16820>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060712 <__sprintf_chk@plt+0x16802>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     80606c7 <__sprintf_chk@plt+0x167b7>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8060638 <__sprintf_chk@plt+0x16728>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     806095c <__sprintf_chk@plt+0x16a4c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    806087d <__sprintf_chk@plt+0x1696d>
cmp    $0x8073294,%ebx
jne    8060940 <__sprintf_chk@plt+0x16a30>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060925 <__sprintf_chk@plt+0x16a15>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     80608dd <__sprintf_chk@plt+0x169cd>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    806084c <__sprintf_chk@plt+0x1693c>
call   8049e60 <abort@plt>
jmp    8060970 <__sprintf_chk@plt+0x16a60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8060b64 <__sprintf_chk@plt+0x16c54>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8060a7d <__sprintf_chk@plt+0x16b6d>
cmp    $0x8073294,%ebx
jne    8060b48 <__sprintf_chk@plt+0x16c38>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060b2b <__sprintf_chk@plt+0x16c1b>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     8060ae0 <__sprintf_chk@plt+0x16bd0>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8060a4c <__sprintf_chk@plt+0x16b3c>
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c00,%eax
mov    0x78(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8073c04,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
mov    %eax,0x28(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x2c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8060c8e <__sprintf_chk@plt+0x16d7e>
cmp    $0x8073294,%ebx
jne    8060d48 <__sprintf_chk@plt+0x16e38>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060d30 <__sprintf_chk@plt+0x16e20>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     8060ceb <__sprintf_chk@plt+0x16ddb>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8060c5d <__sprintf_chk@plt+0x16d4d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c00,%eax
mov    0x74(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8073c04,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
mov    %eax,0x28(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x2c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8060e8e <__sprintf_chk@plt+0x16f7e>
cmp    $0x8073294,%ebx
jne    8060f48 <__sprintf_chk@plt+0x17038>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8060f30 <__sprintf_chk@plt+0x17020>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     8060eeb <__sprintf_chk@plt+0x16fdb>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8060e5d <__sprintf_chk@plt+0x16f4d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c00,%eax
mov    0x8073c0c,%edx
mov    %eax,0x20(%esp)
mov    0x8073c04,%eax
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
mov    %eax,0x28(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8061075 <__sprintf_chk@plt+0x17165>
cmp    $0x8073294,%ebx
jne    8061130 <__sprintf_chk@plt+0x17220>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8061117 <__sprintf_chk@plt+0x17207>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     80610d2 <__sprintf_chk@plt+0x171c2>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8061044 <__sprintf_chk@plt+0x17134>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c00,%eax
mov    0x8073c0c,%edx
mov    %eax,0x20(%esp)
mov    0x8073c04,%eax
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
mov    %eax,0x28(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8061255 <__sprintf_chk@plt+0x17345>
cmp    $0x8073294,%ebx
jne    8061310 <__sprintf_chk@plt+0x17400>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     80612f7 <__sprintf_chk@plt+0x173e7>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     80612b2 <__sprintf_chk@plt+0x173a2>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8061224 <__sprintf_chk@plt+0x17314>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8073c04,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8073c08,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x40(%esp)
mov    0x8073c14,%eax
mov    %eax,0x44(%esp)
mov    0x8073c18,%eax
mov    %eax,0x48(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x4c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x50(%esp)
mov    0x8073c24,%eax
mov    %eax,0x54(%esp)
mov    0x8073c28,%eax
mov    %eax,0x58(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x5c(%esp)
je     806155c <__sprintf_chk@plt+0x1764c>
test   %ebp,%ebp
je     806155c <__sprintf_chk@plt+0x1764c>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   8049c80 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8073290,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     806155c <__sprintf_chk@plt+0x1764c>
cmp    0x807329c,%ebx
jb     8061550 <__sprintf_chk@plt+0x17640>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8061561 <__sprintf_chk@plt+0x17651>
cmp    $0x8073294,%esi
lea    0x0(,%edi,8),%eax
je     8061520 <__sprintf_chk@plt+0x17610>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x807329c
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,%eax
movl   $0xffffffff,(%esp)
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%edi
ja     806150b <__sprintf_chk@plt+0x175fb>
lea    0x1(%eax),%edi
cmp    $0x8073b00,%ebx
mov    %edi,(%esi)
je     80614c3 <__sprintf_chk@plt+0x175b3>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %edi,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    806142d <__sprintf_chk@plt+0x1751d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    8061462 <__sprintf_chk@plt+0x17552>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8073c04,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8073c08,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x40(%esp)
mov    0x8073c14,%eax
mov    %eax,0x44(%esp)
mov    0x8073c18,%eax
mov    %eax,0x48(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x4c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x50(%esp)
mov    0x8073c24,%eax
mov    %eax,0x54(%esp)
mov    0x8073c28,%eax
mov    %eax,0x58(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x5c(%esp)
je     80617a4 <__sprintf_chk@plt+0x17894>
test   %ebp,%ebp
je     80617a4 <__sprintf_chk@plt+0x17894>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   8049c80 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8073290,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     80617a4 <__sprintf_chk@plt+0x17894>
cmp    0x807329c,%ebx
jb     8061798 <__sprintf_chk@plt+0x17888>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     80617a9 <__sprintf_chk@plt+0x17899>
cmp    $0x8073294,%esi
lea    0x0(,%edi,8),%eax
je     8061768 <__sprintf_chk@plt+0x17858>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x807329c
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%edi
ja     8061751 <__sprintf_chk@plt+0x17841>
lea    0x1(%eax),%edi
cmp    $0x8073b00,%ebx
mov    %edi,(%esi)
je     8061706 <__sprintf_chk@plt+0x177f6>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %edi,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%esi
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    806166d <__sprintf_chk@plt+0x1775d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    80616a2 <__sprintf_chk@plt+0x17792>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c04,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x2c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
je     80619b6 <__sprintf_chk@plt+0x17aa6>
test   %edi,%edi
je     80619b6 <__sprintf_chk@plt+0x17aa6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    80619a8 <__sprintf_chk@plt+0x17a98>
cmp    $0x8073294,%ebx
jne    8061988 <__sprintf_chk@plt+0x17a78>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x807329c
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
or     $0x1,%ebp
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%edi
ja     806196e <__sprintf_chk@plt+0x17a5e>
lea    0x1(%eax),%edi
cmp    $0x8073b00,%esi
mov    %edi,(%ebx)
je     8061929 <__sprintf_chk@plt+0x17a19>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %edi,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    806189b <__sprintf_chk@plt+0x1798b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    80618d8 <__sprintf_chk@plt+0x179c8>
call   8049e60 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8073c04,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8073c08,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x8073c0c,%eax
mov    %eax,0x2c(%esp)
mov    0x8073c10,%eax
mov    %eax,0x30(%esp)
mov    0x8073c14,%eax
mov    %eax,0x34(%esp)
mov    0x8073c18,%eax
mov    %eax,0x38(%esp)
mov    0x8073c1c,%eax
mov    %eax,0x3c(%esp)
mov    0x8073c20,%eax
mov    %eax,0x40(%esp)
mov    0x8073c24,%eax
mov    %eax,0x44(%esp)
mov    0x8073c28,%eax
mov    %eax,0x48(%esp)
mov    0x8073c2c,%eax
mov    %eax,0x4c(%esp)
je     8061bc6 <__sprintf_chk@plt+0x17cb6>
test   %edi,%edi
je     8061bc6 <__sprintf_chk@plt+0x17cb6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8061bb8 <__sprintf_chk@plt+0x17ca8>
cmp    $0x8073294,%ebx
jne    8061b98 <__sprintf_chk@plt+0x17c88>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x807329c
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
or     $0x1,%ebp
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%edi
ja     8061b7e <__sprintf_chk@plt+0x17c6e>
lea    0x1(%eax),%edi
cmp    $0x8073b00,%esi
mov    %edi,(%ebx)
je     8061b39 <__sprintf_chk@plt+0x17c29>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %edi,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8061aab <__sprintf_chk@plt+0x17b9b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    8061ae8 <__sprintf_chk@plt+0x17bd8>
call   8049e60 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8073290,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8061d4c <__sprintf_chk@plt+0x17e3c>
cmp    0x807329c,%esi
jb     8061c5e <__sprintf_chk@plt+0x17d4e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8061d51 <__sprintf_chk@plt+0x17e41>
cmp    $0x8073294,%ebx
lea    0x0(,%edi,8),%eax
je     8061d20 <__sprintf_chk@plt+0x17e10>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x807328c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8073264,%esi
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073268,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8061d0b <__sprintf_chk@plt+0x17dfb>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     8061cc3 <__sprintf_chk@plt+0x17db3>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x807328c,%eax
movl   $0x8073268,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8061c35 <__sprintf_chk@plt+0x17d25>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    8061ded <__sprintf_chk@plt+0x17edd>
cmp    $0x8073294,%ebx
jne    8061eb0 <__sprintf_chk@plt+0x17fa0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    0x807328c,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x8073264,%edi
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073268,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     8061e97 <__sprintf_chk@plt+0x17f87>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%esi
mov    %ebp,(%ebx)
je     8061e4f <__sprintf_chk@plt+0x17f3f>
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x807328c,%eax
movl   $0x8073268,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    8061dbc <__sprintf_chk@plt+0x17eac>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8073290,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     806204c <__sprintf_chk@plt+0x1813c>
cmp    0x807329c,%esi
jb     8061f5e <__sprintf_chk@plt+0x1804e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8062051 <__sprintf_chk@plt+0x18141>
cmp    $0x8073294,%ebx
lea    0x0(,%edi,8),%eax
je     8062020 <__sprintf_chk@plt+0x18110>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x807329c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
mov    %edi,0x807329c
mov    0x807328c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8073264,%esi
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8073268,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,%ebp
ja     806200b <__sprintf_chk@plt+0x180fb>
lea    0x1(%eax),%ebp
cmp    $0x8073b00,%ebx
mov    %ebp,(%edi)
je     8061fc3 <__sprintf_chk@plt+0x180b3>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x807328c,%eax
movl   $0x8073268,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8061f35 <__sprintf_chk@plt+0x18025>
call   8049e60 <abort@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049c80 <__errno_location@plt>
mov    0x8073290,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x807329c,%eax
test   %eax,%eax
jne    80620eb <__sprintf_chk@plt+0x181db>
cmp    $0x8073294,%ebx
jne    80621c0 <__sprintf_chk@plt+0x182b0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    0x8073298,%edx
mov    %eax,%ebx
mov    %eax,0x8073290
mov    0x8073294,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x807329c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049c40 <memset@plt>
movl   $0x1,0x807329c
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x8073264,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x807328c,%eax
movl   $0x8073268,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
cmp    %eax,0x1c(%esp)
ja     80621a9 <__sprintf_chk@plt+0x18299>
lea    0x1(%eax),%edx
cmp    $0x8073b00,%esi
mov    %edx,(%ebx)
je     806215b <__sprintf_chk@plt+0x1824b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049800 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8064290 <__sprintf_chk@plt+0x1a380>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x807328c,%eax
movl   $0x8073268,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8073288,%eax
mov    %eax,0x10(%esp)
mov    0x8073260,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805ef70 <__sprintf_chk@plt+0x15060>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   80642c0 <__sprintf_chk@plt+0x1a3b0>
mov    %eax,%ebx
mov    %eax,0x8073290
jmp    80620ba <__sprintf_chk@plt+0x181aa>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80497b0 <read@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8062230 <__sprintf_chk@plt+0x18320>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     80621f8 <__sprintf_chk@plt+0x182e8>
cmp    $0x16,%edx
jne    8062230 <__sprintf_chk@plt+0x18320>
cmp    $0x7fffe000,%ebx
jbe    8062230 <__sprintf_chk@plt+0x18320>
mov    $0x7fffe000,%ebx
jmp    80621f8 <__sprintf_chk@plt+0x182e8>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   8049c90 <memchr@plt>
test   %eax,%eax
je     8062270 <__sprintf_chk@plt+0x18360>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049c70 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80627f5 <__sprintf_chk@plt+0x188e5>
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8062568 <__sprintf_chk@plt+0x18658>
mov    0x84(%esp),%eax
test   %eax,%eax
jne    8062618 <__sprintf_chk@plt+0x18708>
mov    0x18(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    %esi,0x34(%esp)
call   8049b80 <strlen@plt>
mov    %esi,%ecx
movb   $0x0,0x24(%esp)
mov    %ecx,%edi
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%esi,%eax,1),%esi
cmp    %esi,%ecx
mov    %esi,0x20(%esp)
jb     806239b <__sprintf_chk@plt+0x1848b>
jmp    8062477 <__sprintf_chk@plt+0x18567>
nop
movzbl (%edi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    8062498 <__sprintf_chk@plt+0x18588>
movl   $0x1,0x38(%esp)
movsbl (%edi),%eax
mov    %edi,%ebp
movb   $0x1,0x3c(%esp)
mov    $0x1,%edi
mov    %eax,0x40(%esp)
test   %ebx,%ebx
movb   $0x1,0x30(%esp)
je     8062438 <__sprintf_chk@plt+0x18528>
cmp    $0x1,%ebx
je     80624b8 <__sprintf_chk@plt+0x185a8>
cmp    $0x2,%ebx
jne    80624f0 <__sprintf_chk@plt+0x185e0>
cmpb   $0x0,0x3c(%esp)
je     80624f0 <__sprintf_chk@plt+0x185e0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049ae0 <iswspace@plt>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebx
xchg   %ax,%ax
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
movb   $0x0,0x30(%esp)
jae    806246e <__sprintf_chk@plt+0x1855e>
cmpb   $0x0,0x24(%esp)
lea    0x28(%esp),%ebp
je     8062310 <__sprintf_chk@plt+0x18400>
sub    %edi,%esi
lea    0x40(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8062500 <__sprintf_chk@plt+0x185f0>
cmp    $0xfffffffe,%eax
je     8062548 <__sprintf_chk@plt+0x18638>
test   %eax,%eax
jne    8062538 <__sprintf_chk@plt+0x18628>
mov    0x34(%esp),%edx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%edx)
jne    8062823 <__sprintf_chk@plt+0x18913>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    80627ff <__sprintf_chk@plt+0x188ef>
mov    $0x1,%edi
mov    %ebp,(%esp)
mov    %edx,0x14(%esp)
movb   $0x1,0x3c(%esp)
call   8049830 <mbsinit@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
jne    8062520 <__sprintf_chk@plt+0x18610>
test   %ebx,%ebx
mov    0x20(%esp),%esi
mov    %edx,%ebp
movb   $0x1,0x30(%esp)
jne    8062353 <__sprintf_chk@plt+0x18443>
cmpb   $0x0,0x3c(%esp)
mov    $0x1,%ebx
je     8062388 <__sprintf_chk@plt+0x18478>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049ae0 <iswspace@plt>
movb   $0x0,0x30(%esp)
test   %eax,%eax
sete   %bl
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
jb     806239b <__sprintf_chk@plt+0x1848b>
cmp    $0x2,%ebx
je     80627c5 <__sprintf_chk@plt+0x188b5>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x18(%esp),%eax
jne    80627fa <__sprintf_chk@plt+0x188ea>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%ebp
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80627d1 <__sprintf_chk@plt+0x188c1>
movb   $0x1,0x24(%esp)
jmp    80623aa <__sprintf_chk@plt+0x1849a>
xchg   %ax,%ax
cmpb   $0x0,0x3c(%esp)
je     8062388 <__sprintf_chk@plt+0x18478>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049ae0 <iswspace@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    $0x2,%eax
cmovne %ebp,%ecx
cmovne %eax,%ebx
mov    %ecx,0x1c(%esp)
jmp    8062388 <__sprintf_chk@plt+0x18478>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8062388 <__sprintf_chk@plt+0x18478>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
mov    0x20(%esp),%esi
mov    $0x1,%edi
movb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
jmp    8062346 <__sprintf_chk@plt+0x18436>
nop
movb   $0x0,0x24(%esp)
mov    0x20(%esp),%esi
mov    %edx,%ebp
mov    0x38(%esp),%edi
jmp    8062346 <__sprintf_chk@plt+0x18436>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,%edi
jmp    8062408 <__sprintf_chk@plt+0x184f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%esi
mov    0x34(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %esi,%edi
sub    %edx,%edi
mov    %edx,%ebp
mov    %edi,0x38(%esp)
jmp    8062346 <__sprintf_chk@plt+0x18436>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     80625d1 <__sprintf_chk@plt+0x186c1>
mov    0x18(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
mov    %edx,0x14(%esp)
je     80625a4 <__sprintf_chk@plt+0x18694>
call   8049ef0 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%eax
jmp    806259a <__sprintf_chk@plt+0x1868a>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     80625a4 <__sprintf_chk@plt+0x18694>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8062590 <__sprintf_chk@plt+0x18680>
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80497f0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8062477 <__sprintf_chk@plt+0x18567>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     8062477 <__sprintf_chk@plt+0x18567>
call   8049ef0 <__ctype_b_loc@plt>
xchg   %ax,%ax
jmp    8062606 <__sprintf_chk@plt+0x186f6>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     8062477 <__sprintf_chk@plt+0x18567>
movzbl (%ebx),%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
jne    80625f8 <__sprintf_chk@plt+0x186e8>
jmp    8062477 <__sprintf_chk@plt+0x18567>
nop
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %ebx,0x34(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
mov    %edx,0x20(%esp)
jae    806276e <__sprintf_chk@plt+0x1885e>
lea    0x40(%esp),%edi
mov    %edx,%ebp
lea    0x28(%esp),%esi
jmp    80626c1 <__sprintf_chk@plt+0x187b1>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    8062738 <__sprintf_chk@plt+0x18828>
movl   $0x1,0x38(%esp)
movsbl (%ebx),%eax
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,(%esp)
call   8049ae0 <iswspace@plt>
test   %eax,%eax
je     806276e <__sprintf_chk@plt+0x1885e>
mov    0x20(%esp),%ebp
add    0x38(%esp),%ebx
movb   $0x0,0x30(%esp)
cmp    %ebx,%ebp
mov    %ebx,0x34(%esp)
jbe    806276e <__sprintf_chk@plt+0x1885e>
cmpb   $0x0,0x24(%esp)
je     8062660 <__sprintf_chk@plt+0x18750>
sub    %ebx,%ebp
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8062758 <__sprintf_chk@plt+0x18848>
cmp    $0xfffffffe,%eax
je     80627b0 <__sprintf_chk@plt+0x188a0>
test   %eax,%eax
jne    80627a0 <__sprintf_chk@plt+0x18890>
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ebx)
jne    8062823 <__sprintf_chk@plt+0x18913>
mov    0x40(%esp),%ebp
test   %ebp,%ebp
jne    80627ff <__sprintf_chk@plt+0x188ef>
mov    %esi,(%esp)
movb   $0x1,0x3c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806268f <__sprintf_chk@plt+0x1877f>
movb   $0x0,0x24(%esp)
jmp    806268f <__sprintf_chk@plt+0x1877f>
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80627d1 <__sprintf_chk@plt+0x188c1>
movb   $0x1,0x24(%esp)
jmp    80626c8 <__sprintf_chk@plt+0x187b8>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80497f0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8062477 <__sprintf_chk@plt+0x18567>
jmp    80622cb <__sprintf_chk@plt+0x183bb>
mov    0x34(%esp),%ebx
jmp    8062719 <__sprintf_chk@plt+0x18809>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x20(%esp),%eax
movb   $0x0,0x3c(%esp)
sub    %ebx,%eax
mov    %eax,0x38(%esp)
jmp    8062769 <__sprintf_chk@plt+0x18859>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
jmp    8062477 <__sprintf_chk@plt+0x18567>
movl   $0x806d9cd,0xc(%esp)
movl   $0x8e,0x8(%esp)
movl   $0x806d9c4,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
call   8064470 <__sprintf_chk@plt+0x1a560>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806d9cd,0xc(%esp)
movl   $0xaa,0x8(%esp)
movl   $0x806d9c4,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806d9cd,0xc(%esp)
movl   $0xa9,0x8(%esp)
movl   $0x806d9c4,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     806287f <__sprintf_chk@plt+0x1896f>
mov    %ebx,(%esp)
call   806aac0 <fts_children+0x2a00>
mov    %eax,%edi
call   8049c80 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049eb0 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     8062d48 <__sprintf_chk@plt+0x18e38>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x806d9df,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d9f2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806dd00,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806da50,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8062d70 <__sprintf_chk@plt+0x18e60>
jmp    *0x806dc54(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806dbb4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806dbe4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   80498c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806d9f6,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806da06,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806da1d,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db1c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    80629ef <__sprintf_chk@plt+0x18adf>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db3c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    80629ef <__sprintf_chk@plt+0x18adf>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db60,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    80629ef <__sprintf_chk@plt+0x18adf>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db88,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    80629ef <__sprintf_chk@plt+0x18adf>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806d9eb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    80628e1 <__sprintf_chk@plt+0x189d1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806dc18,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   80498c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    8062a7a <__sprintf_chk@plt+0x18b6a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x80(%esp),%ebx
mov    0x70(%esp),%esi
mov    0x74(%esp),%eax
mov    0x78(%esp),%edx
mov    (%ebx),%ebp
mov    0x7c(%esp),%ecx
test   %ebp,%ebp
je     8062e32 <__sprintf_chk@plt+0x18f22>
xchg   %ax,%ax
add    $0x1,%edi
mov    (%ebx,%edi,4),%ebp
test   %ebp,%ebp
jne    8062e28 <__sprintf_chk@plt+0x18f18>
test   %eax,%eax
je     80632a8 <__sprintf_chk@plt+0x19398>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x806d9df,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d9f2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806dd00,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806da50,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     80632cd <__sprintf_chk@plt+0x193bd>
jmp    *0x806dc7c(,%edi,4)
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%eax
mov    0x1c(%ebx),%ecx
mov    0x14(%ebx),%ebp
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806dbb4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   80498c0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x10(%esp)
call   8049df0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dbe4,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e60 <abort@plt>
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806d9f6,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806da06,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806da1d,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062f68 <__sprintf_chk@plt+0x19058>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db1c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062f68 <__sprintf_chk@plt+0x19058>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db3c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062f68 <__sprintf_chk@plt+0x19058>
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db60,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062f68 <__sprintf_chk@plt+0x19058>
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806db88,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062f68 <__sprintf_chk@plt+0x19058>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806d9eb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8062e5e <__sprintf_chk@plt+0x18f4e>
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dc18,0x4(%esp)
jmp    8062fb2 <__sprintf_chk@plt+0x190a2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebx
mov    0xa4(%esp),%ecx
mov    0xa8(%esp),%edi
mov    (%eax),%edx
mov    0xac(%esp),%ebp
test   %edx,%edx
mov    %edx,0x58(%esp)
je     8063948 <__sprintf_chk@plt+0x19a38>
mov    0x4(%eax),%edx
test   %edx,%edx
mov    %edx,0x5c(%esp)
je     8063950 <__sprintf_chk@plt+0x19a40>
mov    0x8(%eax),%edx
test   %edx,%edx
mov    %edx,0x60(%esp)
je     8063960 <__sprintf_chk@plt+0x19a50>
mov    0xc(%eax),%edx
test   %edx,%edx
mov    %edx,0x64(%esp)
je     8063970 <__sprintf_chk@plt+0x19a60>
mov    0x10(%eax),%edx
test   %edx,%edx
mov    %edx,0x68(%esp)
je     8063980 <__sprintf_chk@plt+0x19a70>
mov    0x14(%eax),%edx
test   %edx,%edx
mov    %edx,0x6c(%esp)
je     8063990 <__sprintf_chk@plt+0x19a80>
mov    0x18(%eax),%edx
test   %edx,%edx
mov    %edx,0x70(%esp)
je     80639a0 <__sprintf_chk@plt+0x19a90>
mov    0x1c(%eax),%edx
test   %edx,%edx
mov    %edx,0x74(%esp)
je     80639b0 <__sprintf_chk@plt+0x19aa0>
mov    0x20(%eax),%edx
test   %edx,%edx
mov    %edx,0x78(%esp)
je     80639c0 <__sprintf_chk@plt+0x19ab0>
cmpl   $0x1,0x24(%eax)
sbb    %esi,%esi
add    $0xa,%esi
test   %ecx,%ecx
je     80638c8 <__sprintf_chk@plt+0x199b8>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x806d9df,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d9f2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806dd00,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806da50,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
cmp    $0x9,%esi
ja     80638f0 <__sprintf_chk@plt+0x199e0>
jmp    *0x806dca4(,%esi,4)
mov    0x74(%esp),%ecx
mov    0x70(%esp),%edx
mov    0x60(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %ecx,0x48(%esp)
mov    0x5c(%esp),%ecx
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x806dbb4,0x4(%esp)
mov    0x6c(%esp),%ebp
movl   $0x0,(%esp)
mov    0x64(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x20(%esp)
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    0x58(%esp),%esi
mov    %eax,0x38(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dbe4,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %edi,0x20(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
mov    %edi,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%esi
movl   $0x806d9f6,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
nop
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%edi
movl   $0x806da06,0x4(%esp)
mov    0x58(%esp),%esi
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %edi,0xb0(%esp)
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049df0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806da1d,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
call   80498c0 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063518 <__sprintf_chk@plt+0x19608>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806db1c,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063518 <__sprintf_chk@plt+0x19608>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ecx
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806db3c,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063518 <__sprintf_chk@plt+0x19608>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x58(%esp),%eax
mov    0x60(%esp),%edi
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%ebp
movl   $0x806db60,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x18(%esp)
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063518 <__sprintf_chk@plt+0x19608>
lea    0x0(%esi),%esi
mov    0x70(%esp),%ecx
mov    0x6c(%esp),%edx
mov    0x5c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%edi
mov    %ecx,0x44(%esp)
mov    0x58(%esp),%ecx
movl   $0x806db88,0x4(%esp)
mov    0x68(%esp),%ebp
movl   $0x0,(%esp)
mov    0x60(%esp),%esi
mov    %edx,0x40(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %edi,0x18(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x1c(%esp)
mov    %ecx,0x24(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x20(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063518 <__sprintf_chk@plt+0x19608>
lea    0x0(%esi),%esi
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x806d9eb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063408 <__sprintf_chk@plt+0x194f8>
lea    0x0(%esi),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    %eax,0x38(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dc18,0x4(%esp)
jmp    8063574 <__sprintf_chk@plt+0x19664>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
nop
mov    $0x1,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x2,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x3,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x4,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x5,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x6,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x7,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
mov    $0x8,%esi
jmp    80633dc <__sprintf_chk@plt+0x194cc>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebp
mov    0xa4(%esp),%edx
mov    0xa8(%esp),%ecx
test   %eax,%eax
mov    0xac(%esp),%esi
mov    %eax,0x58(%esp)
je     8063ff8 <__sprintf_chk@plt+0x1a0e8>
mov    0xb4(%esp),%eax
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     8064000 <__sprintf_chk@plt+0x1a0f0>
mov    0xb8(%esp),%eax
test   %eax,%eax
mov    %eax,0x60(%esp)
je     8064010 <__sprintf_chk@plt+0x1a100>
mov    0xbc(%esp),%eax
test   %eax,%eax
mov    %eax,0x64(%esp)
je     8064020 <__sprintf_chk@plt+0x1a110>
mov    0xc0(%esp),%eax
test   %eax,%eax
mov    %eax,0x68(%esp)
je     8064030 <__sprintf_chk@plt+0x1a120>
mov    0xc4(%esp),%eax
test   %eax,%eax
mov    %eax,0x6c(%esp)
je     8064040 <__sprintf_chk@plt+0x1a130>
mov    0xc8(%esp),%eax
test   %eax,%eax
mov    %eax,0x70(%esp)
je     8064050 <__sprintf_chk@plt+0x1a140>
mov    0xcc(%esp),%eax
test   %eax,%eax
mov    %eax,0x74(%esp)
je     8064060 <__sprintf_chk@plt+0x1a150>
mov    0xd0(%esp),%eax
test   %eax,%eax
mov    %eax,0x78(%esp)
je     8064070 <__sprintf_chk@plt+0x1a160>
cmpl   $0x1,0xd4(%esp)
sbb    %ebx,%ebx
add    $0xa,%ebx
test   %edx,%edx
je     8063f78 <__sprintf_chk@plt+0x1a068>
mov    %esi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806d9df,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d9f2,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806dd00,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   8049df0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806da50,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
cmp    $0x9,%ebx
ja     8063fa0 <__sprintf_chk@plt+0x1a090>
jmp    *0x806dccc(,%ebx,4)
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%eax
mov    0x60(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x6c(%esp),%edi
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x58(%esp),%eax
movl   $0x806dbb4,0x4(%esp)
mov    0x68(%esp),%esi
movl   $0x0,(%esp)
mov    0x64(%esp),%ebx
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   80498c0 <dcgettext@plt>
mov    0x48(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x20(%esp)
mov    0x40(%esp),%edi
mov    %esi,0x1c(%esp)
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x24(%esp)
mov    0x44(%esp),%ecx
mov    %ebx,0x18(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    0x58(%esp),%ebx
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dbe4,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    0x4c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x24(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0x20(%esp)
mov    %edx,0x2c(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x28(%esp)
mov    0x48(%esp),%ecx
mov    %edi,0x18(%esp)
mov    0x44(%esp),%edi
mov    %ebx,0xc(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edi,0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049df0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e60 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%ebx
movl   $0x806d9f6,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%esi
movl   $0x806da06,0x4(%esp)
mov    0x58(%esp),%ebx
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806da1d,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
call   80498c0 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806db1c,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
mov    0x68(%esp),%edx
mov    0x64(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806db3c,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x64(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806db60,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
mov    0x70(%esp),%edx
mov    0x5c(%esp),%ecx
mov    0x6c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x806db88,0x4(%esp)
mov    0x64(%esp),%esi
movl   $0x0,(%esp)
mov    0x60(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80498c0 <dcgettext@plt>
mov    0x44(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x1c(%esp)
mov    %esi,0x18(%esp)
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063bf0 <__sprintf_chk@plt+0x19ce0>
lea    0x0(%esi),%esi
mov    %esi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x806d9eb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8049df0 <__fprintf_chk@plt>
jmp    8063ada <__sprintf_chk@plt+0x19bca>
lea    0x0(%esi),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    %ecx,0x48(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806dc18,0x4(%esp)
jmp    8063c4c <__sprintf_chk@plt+0x19d3c>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
nop
mov    $0x1,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x2,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x3,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x4,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x5,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x6,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x7,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
mov    $0x8,%ebx
jmp    8063aae <__sprintf_chk@plt+0x19b9e>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x806b400,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806b415,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806da39,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
movl   $0x806c744,0xc(%esp)
movl   $0x806b51c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
mov    0x8073300,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806c768,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049b20 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
xor    %edx,%edx
sub    $0x18,%esp
mov    $0xffffffff,%eax
mov    0x24(%esp),%ecx
mov    0x20(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8064162 <__sprintf_chk@plt+0x1a252>
imul   %ecx,%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     806415d <__sprintf_chk@plt+0x1a24d>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
nop
je     8064158 <__sprintf_chk@plt+0x1a248>
call   8064470 <__sprintf_chk@plt+0x1a560>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x14,%esp
mov    0x28(%esp),%ecx
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     80641c8 <__sprintf_chk@plt+0x1a2b8>
imul   %ecx,%ebx
test   %ebx,%ebx
je     80641b0 <__sprintf_chk@plt+0x1a2a0>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     80641c4 <__sprintf_chk@plt+0x1a2b4>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     8064195 <__sprintf_chk@plt+0x1a285>
mov    %esi,(%esp)
call   8049800 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
test   %ebx,%ebx
je     80641a5 <__sprintf_chk@plt+0x1a295>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8064220 <__sprintf_chk@plt+0x1a310>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8064255 <__sprintf_chk@plt+0x1a345>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
imul   %ecx,%ebx
mov    %ecx,(%edi)
test   %ebx,%ebx
je     8064240 <__sprintf_chk@plt+0x1a330>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049aa0 <realloc@plt>
test   %ebx,%ebx
jne    8064251 <__sprintf_chk@plt+0x1a341>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jne    8064236 <__sprintf_chk@plt+0x1a326>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ecx,%ebx
jmp    8064205 <__sprintf_chk@plt+0x1a2f5>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8049800 <free@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %eax,%eax
jne    8064215 <__sprintf_chk@plt+0x1a305>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     8064279 <__sprintf_chk@plt+0x1a369>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8064274 <__sprintf_chk@plt+0x1a364>
lea    0x0(%esi),%esi
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     80642a9 <__sprintf_chk@plt+0x1a399>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     80642a4 <__sprintf_chk@plt+0x1a394>
lea    0x0(%esi),%esi
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     80642e8 <__sprintf_chk@plt+0x1a3d8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     80642fb <__sprintf_chk@plt+0x1a3eb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     80642d0 <__sprintf_chk@plt+0x1a3c0>
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     80642e0 <__sprintf_chk@plt+0x1a3d0>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8064350 <__sprintf_chk@plt+0x1a440>
cmp    $0xaaaaaaa9,%eax
ja     8064377 <__sprintf_chk@plt+0x1a467>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
test   %eax,%eax
mov    %eax,(%ebx)
je     8064368 <__sprintf_chk@plt+0x1a458>
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     8064377 <__sprintf_chk@plt+0x1a467>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    8064336 <__sprintf_chk@plt+0x1a426>
movl   $0x40,(%ebx)
mov    $0x40,%eax
jmp    8064336 <__sprintf_chk@plt+0x1a426>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   8049800 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     80643ad <__sprintf_chk@plt+0x1a49d>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c40 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8064394 <__sprintf_chk@plt+0x1a484>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049f00 <calloc@plt>
test   %eax,%eax
je     80643df <__sprintf_chk@plt+0x1a4cf>
add    $0x1c,%esp
ret
nop
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     806441d <__sprintf_chk@plt+0x1a50d>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049820 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8064404 <__sprintf_chk@plt+0x1a4f4>
call   8064470 <__sprintf_chk@plt+0x1a560>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
lea    0x1(%eax),%ebx
mov    %ebx,(%esp)
call   8049ab0 <malloc@plt>
test   %ebx,%ebx
jne    8064466 <__sprintf_chk@plt+0x1a556>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049820 <memcpy@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
test   %eax,%eax
jne    8064450 <__sprintf_chk@plt+0x1a540>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806ceb0,0x4(%esp)
movl   $0x0,(%esp)
call   80498c0 <dcgettext@plt>
mov    0x807324c,%edx
movl   $0x806d4e8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049a60 <error@plt>
call   8049e60 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806a510 <fts_children+0x2450>
test   %eax,%eax
mov    %eax,%ebx
js     8064500 <__sprintf_chk@plt+0x1a5f0>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    80644f6 <__sprintf_chk@plt+0x1a5e6>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806a800 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     8064538 <__sprintf_chk@plt+0x1a628>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    806452e <__sprintf_chk@plt+0x1a61e>
call   8064470 <__sprintf_chk@plt+0x1a560>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806a9f0 <fts_children+0x2930>
test   %eax,%eax
mov    %eax,%ebx
je     8064580 <__sprintf_chk@plt+0x1a670>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8064576 <__sprintf_chk@plt+0x1a666>
call   8064470 <__sprintf_chk@plt+0x1a560>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%ebp
mov    0x70(%esp),%esi
mov    0x74(%esp),%ebx
cmp    $0x24,%ebp
ja     8065851 <__sprintf_chk@plt+0x1b941>
test   %ebx,%ebx
lea    0x4c(%esp),%eax
cmove  %eax,%ebx
call   8049c80 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
mov    %ebp,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049dd0 <__strtoll_internal@plt>
mov    (%ebx),%ebp
cmp    %esi,%ebp
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8064700 <__sprintf_chk@plt+0x1a7f0>
mov    (%edi),%eax
test   %eax,%eax
jne    8064628 <__sprintf_chk@plt+0x1a718>
xor    %edi,%edi
mov    0x80(%esp),%esi
test   %esi,%esi
je     806460b <__sprintf_chk@plt+0x1a6fb>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
jne    8064648 <__sprintf_chk@plt+0x1a738>
mov    0x7c(%esp),%eax
mov    %edi,%esi
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x22,%eax
mov    $0x4,%esi
mov    $0x1,%edi
je     80645f4 <__sprintf_chk@plt+0x1a6e4>
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
je     80646e0 <__sprintf_chk@plt+0x1a7d0>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <strchr@plt>
test   %eax,%eax
je     806469a <__sprintf_chk@plt+0x1a78a>
movzbl 0x1(%ebp),%eax
cmp    $0x44,%al
je     8064758 <__sprintf_chk@plt+0x1a848>
cmp    $0x69,%al
je     8064c70 <__sprintf_chk@plt+0x1ad60>
cmp    $0x42,%al
je     8064758 <__sprintf_chk@plt+0x1a848>
movl   $0xffffffff,0x38(%esp)
mov    $0x1,%esi
movl   $0x1fffff,0x28(%esp)
movl   $0x0,0x34(%esp)
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
movzbl 0x24(%esp),%eax
sub    $0x42,%eax
cmp    $0x35,%al
ja     80646e0 <__sprintf_chk@plt+0x1a7d0>
movzbl %al,%eax
jmp    *0x806dd64(,%eax,4)
lea    0x0(%esi),%esi
mov    0x7c(%esp),%eax
or     $0x2,%edi
mov    0x18(%esp),%edx
mov    %edi,%esi
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80(%esp),%edi
mov    $0x4,%esi
test   %edi,%edi
je     806461e <__sprintf_chk@plt+0x1a70e>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
je     806461e <__sprintf_chk@plt+0x1a70e>
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8049b50 <strchr@plt>
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    8064663 <__sprintf_chk@plt+0x1a753>
jmp    806461e <__sprintf_chk@plt+0x1a70e>
xchg   %ax,%ax
movl   $0xa5e353f7,0x38(%esp)
mov    $0x2,%esi
movl   $0x20c49b,0x28(%esp)
movl   $0x5a1cac09,0x34(%esp)
movl   $0xffdf3b64,0x2c(%esp)
movl   $0x3e8,0x30(%esp)
jmp    80646c7 <__sprintf_chk@plt+0x1a7b7>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
or     %eax,%edi
add    %esi,%ebp
mov    %edi,%eax
or     $0x2,%eax
mov    %ebp,(%ebx)
cmpb   $0x0,0x0(%ebp)
cmovne %eax,%edi
jmp    806460b <__sprintf_chk@plt+0x1a6fb>
cmpl   $0xffc00000,0x1c(%esp)
jl     8064cb0 <__sprintf_chk@plt+0x1ada0>
cmpl   $0x3fffff,0x1c(%esp)
jg     8064cca <__sprintf_chk@plt+0x1adba>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8064790 <__sprintf_chk@plt+0x1a880>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064cee <__sprintf_chk@plt+0x1adde>
jl     80647fc <__sprintf_chk@plt+0x1a8ec>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064cee <__sprintf_chk@plt+0x1adde>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065486 <__sprintf_chk@plt+0x1b576>
jg     806481a <__sprintf_chk@plt+0x1a90a>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065486 <__sprintf_chk@plt+0x1b576>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    8065785 <__sprintf_chk@plt+0x1b875>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
or     0x24(%esp),%eax
jmp    8064790 <__sprintf_chk@plt+0x1a880>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064ce4 <__sprintf_chk@plt+0x1add4>
jl     80648a6 <__sprintf_chk@plt+0x1a996>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064ce4 <__sprintf_chk@plt+0x1add4>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8064da4 <__sprintf_chk@plt+0x1ae94>
jg     80648c4 <__sprintf_chk@plt+0x1a9b4>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8064da4 <__sprintf_chk@plt+0x1ae94>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    80657a3 <__sprintf_chk@plt+0x1b893>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
jmp    8064856 <__sprintf_chk@plt+0x1a946>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064d16 <__sprintf_chk@plt+0x1ae06>
jl     8064928 <__sprintf_chk@plt+0x1aa18>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064d16 <__sprintf_chk@plt+0x1ae06>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065707 <__sprintf_chk@plt+0x1b7f7>
jg     8064946 <__sprintf_chk@plt+0x1aa36>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065707 <__sprintf_chk@plt+0x1b7f7>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    8065834 <__sprintf_chk@plt+0x1b924>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    8064865 <__sprintf_chk@plt+0x1a955>
cmpl   $0xc0000000,0x1c(%esp)
jl     8064cb0 <__sprintf_chk@plt+0x1ada0>
cmpl   $0x3fffffff,0x1c(%esp)
jg     8064cca <__sprintf_chk@plt+0x1adba>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8064790 <__sprintf_chk@plt+0x1a880>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064d0c <__sprintf_chk@plt+0x1adfc>
jl     80649de <__sprintf_chk@plt+0x1aace>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064d0c <__sprintf_chk@plt+0x1adfc>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80651ba <__sprintf_chk@plt+0x1b2aa>
jg     80649fc <__sprintf_chk@plt+0x1aaec>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80651ba <__sprintf_chk@plt+0x1b2aa>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    80657fa <__sprintf_chk@plt+0x1b8ea>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    8064860 <__sprintf_chk@plt+0x1a950>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064d20 <__sprintf_chk@plt+0x1ae10>
jl     8064a5b <__sprintf_chk@plt+0x1ab4b>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064d20 <__sprintf_chk@plt+0x1ae10>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8064d42 <__sprintf_chk@plt+0x1ae32>
jg     8064a79 <__sprintf_chk@plt+0x1ab69>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8064d42 <__sprintf_chk@plt+0x1ae32>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    80657c0 <__sprintf_chk@plt+0x1b8b0>
movl   $0x0,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    806487f <__sprintf_chk@plt+0x1a96f>
xchg   %ax,%ax
cmpl   $0xffe00000,0x1c(%esp)
jl     8064cb0 <__sprintf_chk@plt+0x1ada0>
cmpl   $0x1fffff,0x1c(%esp)
jg     8064cca <__sprintf_chk@plt+0x1adba>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8064790 <__sprintf_chk@plt+0x1a880>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064d02 <__sprintf_chk@plt+0x1adf2>
jl     8064b28 <__sprintf_chk@plt+0x1ac18>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064d02 <__sprintf_chk@plt+0x1adf2>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806540a <__sprintf_chk@plt+0x1b4fa>
jg     8064b46 <__sprintf_chk@plt+0x1ac36>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806540a <__sprintf_chk@plt+0x1b4fa>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    80657dd <__sprintf_chk@plt+0x1b8cd>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    806486a <__sprintf_chk@plt+0x1a95a>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064cf8 <__sprintf_chk@plt+0x1ade8>
jl     8064ba5 <__sprintf_chk@plt+0x1ac95>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064cf8 <__sprintf_chk@plt+0x1ade8>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806501a <__sprintf_chk@plt+0x1b10a>
jg     8064bc3 <__sprintf_chk@plt+0x1acb3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806501a <__sprintf_chk@plt+0x1b10a>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    8065817 <__sprintf_chk@plt+0x1b907>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    806485b <__sprintf_chk@plt+0x1a94b>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064cb0 <__sprintf_chk@plt+0x1ada0>
jl     8064c22 <__sprintf_chk@plt+0x1ad12>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064cb0 <__sprintf_chk@plt+0x1ada0>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8064cca <__sprintf_chk@plt+0x1adba>
jg     8064c40 <__sprintf_chk@plt+0x1ad30>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8064cca <__sprintf_chk@plt+0x1adba>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    %ecx,%eax
mull   0x18(%esp)
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    8064790 <__sprintf_chk@plt+0x1a880>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x42,0x2(%ebp)
movl   $0xffffffff,0x38(%esp)
movl   $0x1fffff,0x28(%esp)
sete   %al
mov    %eax,%esi
movl   $0x0,0x34(%esp)
lea    0x1(%esi,%esi,1),%esi
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
jmp    80646c7 <__sprintf_chk@plt+0x1a7b7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
jmp    8064790 <__sprintf_chk@plt+0x1a880>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    8064790 <__sprintf_chk@plt+0x1a880>
mov    $0x1,%eax
jmp    80648f9 <__sprintf_chk@plt+0x1a9e9>
mov    $0x1,%eax
jmp    806484f <__sprintf_chk@plt+0x1a93f>
mov    $0x1,%eax
jmp    8064bf8 <__sprintf_chk@plt+0x1ace8>
mov    $0x1,%eax
jmp    8064b7b <__sprintf_chk@plt+0x1ac6b>
mov    $0x1,%eax
jmp    8064a31 <__sprintf_chk@plt+0x1ab21>
mov    $0x1,%eax
jmp    806497b <__sprintf_chk@plt+0x1aa6b>
movl   $0x1,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    806487f <__sprintf_chk@plt+0x1a96f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065000 <__sprintf_chk@plt+0x1b0f0>
jg     8064d78 <__sprintf_chk@plt+0x1ae68>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065000 <__sprintf_chk@plt+0x1b0f0>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    806487f <__sprintf_chk@plt+0x1a96f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80653f0 <__sprintf_chk@plt+0x1b4e0>
jg     8064dda <__sprintf_chk@plt+0x1aeca>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80653f0 <__sprintf_chk@plt+0x1b4e0>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064900 <__sprintf_chk@plt+0x1a9f0>
jl     8064e17 <__sprintf_chk@plt+0x1af07>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064900 <__sprintf_chk@plt+0x1a9f0>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80653d6 <__sprintf_chk@plt+0x1b4c6>
jg     8064e35 <__sprintf_chk@plt+0x1af25>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80653d6 <__sprintf_chk@plt+0x1b4c6>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064856 <__sprintf_chk@plt+0x1a946>
jl     8064e72 <__sprintf_chk@plt+0x1af62>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064856 <__sprintf_chk@plt+0x1a946>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80653bc <__sprintf_chk@plt+0x1b4ac>
jg     8064e90 <__sprintf_chk@plt+0x1af80>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80653bc <__sprintf_chk@plt+0x1b4ac>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806485b <__sprintf_chk@plt+0x1a94b>
jl     8064ecd <__sprintf_chk@plt+0x1afbd>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806485b <__sprintf_chk@plt+0x1a94b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80653a2 <__sprintf_chk@plt+0x1b492>
jg     8064eeb <__sprintf_chk@plt+0x1afdb>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80653a2 <__sprintf_chk@plt+0x1b492>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064860 <__sprintf_chk@plt+0x1a950>
jl     8064f28 <__sprintf_chk@plt+0x1b018>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064860 <__sprintf_chk@plt+0x1a950>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065388 <__sprintf_chk@plt+0x1b478>
jg     8064f46 <__sprintf_chk@plt+0x1b036>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065388 <__sprintf_chk@plt+0x1b478>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064865 <__sprintf_chk@plt+0x1a955>
jl     8064f83 <__sprintf_chk@plt+0x1b073>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064865 <__sprintf_chk@plt+0x1a955>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806536e <__sprintf_chk@plt+0x1b45e>
jg     8064fa1 <__sprintf_chk@plt+0x1b091>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806536e <__sprintf_chk@plt+0x1b45e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806486a <__sprintf_chk@plt+0x1a95a>
jl     8064fde <__sprintf_chk@plt+0x1b0ce>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806486a <__sprintf_chk@plt+0x1a95a>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065000 <__sprintf_chk@plt+0x1b0f0>
jg     8065194 <__sprintf_chk@plt+0x1b284>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jae    8065194 <__sprintf_chk@plt+0x1b284>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    806487f <__sprintf_chk@plt+0x1a96f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065320 <__sprintf_chk@plt+0x1b410>
jg     8065050 <__sprintf_chk@plt+0x1b140>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065320 <__sprintf_chk@plt+0x1b410>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     806485b <__sprintf_chk@plt+0x1a94b>
jg     806508d <__sprintf_chk@plt+0x1b17d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806485b <__sprintf_chk@plt+0x1a94b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065306 <__sprintf_chk@plt+0x1b3f6>
jg     80650ab <__sprintf_chk@plt+0x1b19b>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065306 <__sprintf_chk@plt+0x1b3f6>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     8064860 <__sprintf_chk@plt+0x1a950>
jg     80650e8 <__sprintf_chk@plt+0x1b1d8>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064860 <__sprintf_chk@plt+0x1a950>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     80652ec <__sprintf_chk@plt+0x1b3dc>
jl     8065106 <__sprintf_chk@plt+0x1b1f6>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     80652ec <__sprintf_chk@plt+0x1b3dc>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     8064865 <__sprintf_chk@plt+0x1a955>
jg     8065143 <__sprintf_chk@plt+0x1b233>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064865 <__sprintf_chk@plt+0x1a955>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     8065161 <__sprintf_chk@plt+0x1b251>
jl     80652a6 <__sprintf_chk@plt+0x1b396>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
jbe    80652a6 <__sprintf_chk@plt+0x1b396>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     8065000 <__sprintf_chk@plt+0x1b0f0>
jl     8065194 <__sprintf_chk@plt+0x1b284>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     8065000 <__sprintf_chk@plt+0x1b0f0>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
jmp    806487f <__sprintf_chk@plt+0x1a96f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065354 <__sprintf_chk@plt+0x1b444>
jg     80651f0 <__sprintf_chk@plt+0x1b2e0>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065354 <__sprintf_chk@plt+0x1b444>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     8064860 <__sprintf_chk@plt+0x1a950>
jg     806522d <__sprintf_chk@plt+0x1b31d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064860 <__sprintf_chk@plt+0x1a950>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806533a <__sprintf_chk@plt+0x1b42a>
jg     806524b <__sprintf_chk@plt+0x1b33b>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806533a <__sprintf_chk@plt+0x1b42a>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     8064865 <__sprintf_chk@plt+0x1a955>
jg     8065288 <__sprintf_chk@plt+0x1b378>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064865 <__sprintf_chk@plt+0x1a955>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065161 <__sprintf_chk@plt+0x1b251>
jg     80652a6 <__sprintf_chk@plt+0x1b396>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065161 <__sprintf_chk@plt+0x1b251>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     806486a <__sprintf_chk@plt+0x1a95a>
jg     8065176 <__sprintf_chk@plt+0x1b266>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806486a <__sprintf_chk@plt+0x1a95a>
jmp    8065176 <__sprintf_chk@plt+0x1b266>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065143 <__sprintf_chk@plt+0x1b233>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    80650e8 <__sprintf_chk@plt+0x1b1d8>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    806508d <__sprintf_chk@plt+0x1b17d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065288 <__sprintf_chk@plt+0x1b378>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    806522d <__sprintf_chk@plt+0x1b31d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064fde <__sprintf_chk@plt+0x1b0ce>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064f83 <__sprintf_chk@plt+0x1b073>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064f28 <__sprintf_chk@plt+0x1b018>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064ecd <__sprintf_chk@plt+0x1afbd>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064e72 <__sprintf_chk@plt+0x1af62>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064e17 <__sprintf_chk@plt+0x1af07>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806536e <__sprintf_chk@plt+0x1b45e>
jg     8065440 <__sprintf_chk@plt+0x1b530>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806536e <__sprintf_chk@plt+0x1b45e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     806486a <__sprintf_chk@plt+0x1a95a>
jg     8064fde <__sprintf_chk@plt+0x1b0ce>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806486a <__sprintf_chk@plt+0x1a95a>
jmp    8064fde <__sprintf_chk@plt+0x1b0ce>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80656ed <__sprintf_chk@plt+0x1b7dd>
jg     80654bc <__sprintf_chk@plt+0x1b5ac>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80656ed <__sprintf_chk@plt+0x1b7dd>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064856 <__sprintf_chk@plt+0x1a946>
jl     80654ff <__sprintf_chk@plt+0x1b5ef>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064856 <__sprintf_chk@plt+0x1a946>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80656d3 <__sprintf_chk@plt+0x1b7c3>
jg     806551d <__sprintf_chk@plt+0x1b60d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80656d3 <__sprintf_chk@plt+0x1b7c3>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806485b <__sprintf_chk@plt+0x1a94b>
jl     8065560 <__sprintf_chk@plt+0x1b650>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806485b <__sprintf_chk@plt+0x1a94b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80656b9 <__sprintf_chk@plt+0x1b7a9>
jg     806557e <__sprintf_chk@plt+0x1b66e>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80656b9 <__sprintf_chk@plt+0x1b7a9>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064860 <__sprintf_chk@plt+0x1a950>
jl     80655c1 <__sprintf_chk@plt+0x1b6b1>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064860 <__sprintf_chk@plt+0x1a950>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806569f <__sprintf_chk@plt+0x1b78f>
jg     80655df <__sprintf_chk@plt+0x1b6cf>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806569f <__sprintf_chk@plt+0x1b78f>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8064865 <__sprintf_chk@plt+0x1a955>
jl     8065622 <__sprintf_chk@plt+0x1b712>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8064865 <__sprintf_chk@plt+0x1a955>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065685 <__sprintf_chk@plt+0x1b775>
jg     8065638 <__sprintf_chk@plt+0x1b728>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065685 <__sprintf_chk@plt+0x1b775>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806486a <__sprintf_chk@plt+0x1a95a>
jl     8064d5a <__sprintf_chk@plt+0x1ae4a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806486a <__sprintf_chk@plt+0x1a95a>
nop
jmp    8064d5a <__sprintf_chk@plt+0x1ae4a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8064d5a <__sprintf_chk@plt+0x1ae4a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065622 <__sprintf_chk@plt+0x1b712>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    80655c1 <__sprintf_chk@plt+0x1b6b1>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065560 <__sprintf_chk@plt+0x1b650>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    80654ff <__sprintf_chk@plt+0x1b5ef>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065388 <__sprintf_chk@plt+0x1b478>
jg     806573d <__sprintf_chk@plt+0x1b82d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065388 <__sprintf_chk@plt+0x1b478>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     8064865 <__sprintf_chk@plt+0x1a955>
jg     8064f83 <__sprintf_chk@plt+0x1b073>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064865 <__sprintf_chk@plt+0x1a955>
xchg   %ax,%ax
jmp    8064f83 <__sprintf_chk@plt+0x1b073>
jl     8065796 <__sprintf_chk@plt+0x1b886>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
nop
ja     806484d <__sprintf_chk@plt+0x1a93d>
movl   $0x0,0x24(%esp)
jmp    806549e <__sprintf_chk@plt+0x1b58e>
jl     80657b3 <__sprintf_chk@plt+0x1b8a3>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80648f7 <__sprintf_chk@plt+0x1a9e7>
movl   $0x0,0x24(%esp)
jmp    8064dbc <__sprintf_chk@plt+0x1aeac>
jg     80657d0 <__sprintf_chk@plt+0x1b8c0>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064aac <__sprintf_chk@plt+0x1ab9c>
movl   $0x0,0x24(%esp)
jmp    8064d5a <__sprintf_chk@plt+0x1ae4a>
jg     80657ed <__sprintf_chk@plt+0x1b8dd>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064b79 <__sprintf_chk@plt+0x1ac69>
movl   $0x0,0x24(%esp)
jmp    8065422 <__sprintf_chk@plt+0x1b512>
jg     806580a <__sprintf_chk@plt+0x1b8fa>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064a2f <__sprintf_chk@plt+0x1ab1f>
movl   $0x0,0x24(%esp)
jmp    80651d2 <__sprintf_chk@plt+0x1b2c2>
jg     8065827 <__sprintf_chk@plt+0x1b917>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064bf6 <__sprintf_chk@plt+0x1ace6>
movl   $0x0,0x24(%esp)
jmp    8065032 <__sprintf_chk@plt+0x1b122>
jg     8065844 <__sprintf_chk@plt+0x1b934>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8064979 <__sprintf_chk@plt+0x1aa69>
movl   $0x0,0x24(%esp)
jmp    806571f <__sprintf_chk@plt+0x1b80f>
movl   $0x806de3c,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x806dd2f,0x4(%esp)
movl   $0x806dd3c,(%esp)
call   8049ee0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
sub    $0x14,%esp
movl   $0x806de47,(%esp)
call   8049a90 <getenv@plt>
test   %eax,%eax
je     80658b0 <__sprintf_chk@plt+0x1b9a0>
mov    %eax,%esi
mov    $0x806de4c,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
setne  %al
add    $0x14,%esp
movzbl %al,%eax
pop    %esi
pop    %edi
ret
nop
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ce0 <__printf_chk@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8073300,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049e90 <fputs@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
xor    0xc(%ebx),%ecx
xor    0x8(%ebx),%edx
or     %edx,%ecx
je     8065940 <__sprintf_chk@plt+0x1ba30>
pop    %ebx
pop    %esi
ret
nop
mov    (%esi),%edx
mov    0x4(%esi),%eax
xor    0x4(%ebx),%eax
xor    (%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806b030 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806b030 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%ecx
mov    0x9c(%eax),%ebx
mov    0x10(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%edx
mov    0x9c(%eax),%esi
cmp    %edx,%ecx
jae    8065a18 <__sprintf_chk@plt+0x1bb08>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    8065a38 <__sprintf_chk@plt+0x1bb28>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     8065a10 <__sprintf_chk@plt+0x1bb00>
jb     8065a29 <__sprintf_chk@plt+0x1bb19>
cmp    %esi,%ebx
ja     8065a10 <__sprintf_chk@plt+0x1bb00>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
jb     8065a0a <__sprintf_chk@plt+0x1bafa>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     8065a10 <__sprintf_chk@plt+0x1bb00>
jmp    8065a23 <__sprintf_chk@plt+0x1bb13>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x2c,%esp
mov    0x30(%ecx),%ebp
lea    0x44(%ecx),%edi
mov    0x40(%esp),%edx
mov    (%esi),%ecx
test   %ebp,%ebp
jne    8065a70 <__sprintf_chk@plt+0x1bb60>
test   $0x1,%cl
jne    8065a79 <__sprintf_chk@plt+0x1bb69>
and    $0x2,%ecx
jne    8065a79 <__sprintf_chk@plt+0x1bb69>
test   %dl,%dl
je     8065af8 <__sprintf_chk@plt+0x1bbe8>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049e70 <__xstat64@plt>
test   %eax,%eax
je     8065b20 <__sprintf_chk@plt+0x1bc10>
call   8049c80 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
cmp    $0x2,%esi
je     8065bf0 <__sprintf_chk@plt+0x1bce0>
mov    %esi,0x20(%ebx)
test   $0x1,%edi
mov    $0x60,%edx
jne    8065be0 <__sprintf_chk@plt+0x1bcd0>
test   $0x2,%edi
jne    8065bc8 <__sprintf_chk@plt+0x1bcb8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8065ae1 <__sprintf_chk@plt+0x1bbd1>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8065ae9 <__sprintf_chk@plt+0x1bbd9>
movb   $0x0,(%edi)
mov    $0xa,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%ebx),%edx
movl   $0x100,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
call   8049980 <__fxstatat64@plt>
test   %eax,%eax
jne    8065b58 <__sprintf_chk@plt+0x1bc48>
nop
mov    0x54(%ebx),%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     8065b68 <__sprintf_chk@plt+0x1bc58>
cmp    $0xa000,%ecx
mov    $0xc,%eax
je     8065aee <__sprintf_chk@plt+0x1bbde>
xor    %eax,%eax
cmp    $0x8000,%ecx
sete   %al
add    $0x2c,%esp
pop    %ebx
lea    0x3(%eax,%eax,4),%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
jmp    8065aad <__sprintf_chk@plt+0x1bb9d>
nop
mov    (%esi),%edx
mov    0x58(%ebx),%eax
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0x2,%edx
sub    %edx,%eax
cmpb   $0x2e,0xa4(%ebx)
mov    %eax,0x38(%ebx)
mov    $0x1,%eax
jne    8065aee <__sprintf_chk@plt+0x1bbde>
cmpb   $0x0,0xa5(%ebx)
je     8065bb0 <__sprintf_chk@plt+0x1bca0>
mov    0xa4(%ebx),%edx
and    $0xffff00,%edx
cmp    $0x2e00,%edx
jne    8065aee <__sprintf_chk@plt+0x1bbde>
cmpl   $0x1,0x30(%ebx)
sbb    %eax,%eax
and    $0xfffffffc,%eax
add    $0x5,%eax
jmp    8065aee <__sprintf_chk@plt+0x1bbde>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    8065aca <__sprintf_chk@plt+0x1bbba>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x44(%ebx)
add    $0x1,%edi
mov    $0x5f,%dl
jmp    8065abe <__sprintf_chk@plt+0x1bbae>
xchg   %ax,%ax
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <__lxstat64@plt>
test   %eax,%eax
jne    8065aaa <__sprintf_chk@plt+0x1bb9a>
movl   $0x0,0x0(%ebp)
mov    $0xd,%al
jmp    8065aee <__sprintf_chk@plt+0x1bbde>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
test   $0x102,%eax
jne    8065c68 <__sprintf_chk@plt+0x1bd58>
mov    0x4(%ecx),%esi
test   %esi,%esi
je     8065c5d <__sprintf_chk@plt+0x1bd4d>
mov    0x30(%esi),%eax
test   %eax,%eax
js     8065c5d <__sprintf_chk@plt+0x1bd4d>
mov    (%edx),%ebx
mov    0x14(%ebx),%eax
or     0x10(%ebx),%eax
je     8065ce2 <__sprintf_chk@plt+0x1bdd2>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
xor    0xa0(%ecx),%edx
xor    0x9c(%ecx),%eax
or     %eax,%edx
je     8065cb0 <__sprintf_chk@plt+0x1bda0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ecx),%ebx
lea    0x1c(%esp),%eax
mov    0x48(%ecx),%esi
mov    %ebx,0x1c(%esp)
mov    0xa0(%ecx),%ebx
mov    0x9c(%ecx),%ecx
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %esi,0x20(%esp)
mov    %ebx,0x28(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   805d5a0 <__sprintf_chk@plt+0x13690>
test   %eax,%eax
je     8065ce2 <__sprintf_chk@plt+0x1bdd2>
mov    %eax,(%esp)
call   8049800 <free@plt>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
xor    0x48(%ecx),%edx
xor    0x44(%ecx),%eax
or     %eax,%edx
jne    8065c5d <__sprintf_chk@plt+0x1bd4d>
mov    0x44(%esi),%eax
mov    0x48(%esi),%edx
mov    %eax,0x8(%ebx)
mov    0x9c(%esi),%eax
mov    %edx,0xc(%ebx)
mov    0xa0(%esi),%edx
mov    %eax,(%ebx)
mov    %edx,0x4(%ebx)
jmp    8065c5d <__sprintf_chk@plt+0x1bd4d>
call   8049e60 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%eax),%eax
lea    0x38(%edi),%ebx
test   $0x4,%al
jne    8065d4c <__sprintf_chk@plt+0x1be3c>
test   $0x2,%ah
je     8065d78 <__sprintf_chk@plt+0x1be68>
mov    0x1c(%edi),%eax
lea    0x38(%edi),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80685f0 <fts_children+0x530>
test   %eax,%eax
js     8065d27 <__sprintf_chk@plt+0x1be17>
mov    %eax,(%esp)
call   8049eb0 <close@plt>
movl   $0xffffff9c,0x1c(%edi)
xor    %esi,%esi
mov    %ebx,(%esp)
call   80685e0 <fts_children+0x520>
test   %al,%al
jne    8065d58 <__sprintf_chk@plt+0x1be48>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8068630 <fts_children+0x570>
test   %eax,%eax
jns    8065d68 <__sprintf_chk@plt+0x1be58>
mov    %ebx,(%esp)
call   80685e0 <fts_children+0x520>
test   %al,%al
je     8065d40 <__sprintf_chk@plt+0x1be30>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049eb0 <close@plt>
jmp    8065d4c <__sprintf_chk@plt+0x1be3c>
lea    0x0(%esi),%esi
mov    0x18(%edi),%eax
lea    0x38(%edi),%ebx
mov    %eax,(%esp)
call   8049d80 <fchdir@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
jmp    8065d4c <__sprintf_chk@plt+0x1be3c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    %edx,0xc(%esp)
test   %esi,%esi
je     8065dd1 <__sprintf_chk@plt+0x1bec1>
cmpb   $0x2e,(%esi)
jne    8065dd1 <__sprintf_chk@plt+0x1bec1>
cmpb   $0x2e,0x1(%esi)
jne    8065dd1 <__sprintf_chk@plt+0x1bec1>
cmpb   $0x0,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    0x2c(%edi),%ebx
mov    %ebx,%edx
and    $0x4,%edx
je     8065e10 <__sprintf_chk@plt+0x1bf00>
and    $0x200,%ebx
mov    %ebx,%edx
je     8065e00 <__sprintf_chk@plt+0x1bef0>
xor    %edx,%edx
test   %ecx,%ecx
js     8065e00 <__sprintf_chk@plt+0x1bef0>
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   8049eb0 <close@plt>
mov    0xc(%esp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,%eax
shr    $0x1f,%eax
mov    %eax,0x10(%esp)
mov    %ebp,%eax
test   %al,%al
jne    8065ec8 <__sprintf_chk@plt+0x1bfb8>
cmpb   $0x0,0x10(%esp)
jne    80660f2 <__sprintf_chk@plt+0x1c1e2>
mov    %ecx,0x10(%esp)
test   $0x2,%bl
jne    8065e5c <__sprintf_chk@plt+0x1bf4c>
test   %esi,%esi
je     8065fa8 <__sprintf_chk@plt+0x1c098>
cmpb   $0x2e,(%esi)
jne    8065fa8 <__sprintf_chk@plt+0x1c098>
cmpb   $0x2e,0x1(%esi)
jne    8065fa8 <__sprintf_chk@plt+0x1c098>
cmpb   $0x0,0x2(%esi)
jne    8065fa8 <__sprintf_chk@plt+0x1c098>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x3,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   80499d0 <__fxstat64@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
je     8065fd0 <__sprintf_chk@plt+0x1c0c0>
mov    $0xffffffff,%eax
test   %ecx,%ecx
mov    %eax,%edx
jns    8065e00 <__sprintf_chk@plt+0x1bef0>
mov    %eax,0xc(%esp)
call   8049c80 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    0xc(%esp),%edx
mov    %esi,(%ebx)
jmp    8065e00 <__sprintf_chk@plt+0x1bef0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x10(%esp)
je     8065e2e <__sprintf_chk@plt+0x1bf1e>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jne    8066000 <__sprintf_chk@plt+0x1c0f0>
mov    $0x1,%ebp
mov    0x1c(%edi),%eax
mov    %eax,0x1c(%esp)
mov    %ebx,%eax
and    $0x10,%eax
cmp    $0x1,%eax
mov    %eax,0x18(%esp)
sbb    %eax,%eax
mov    %eax,0x14(%esp)
and    $0xfffe0000,%eax
andl   $0xfffe0000,0x14(%esp)
add    $0x30900,%eax
addl   $0x70900,0x14(%esp)
and    $0x8,%bh
mov    0x10(%esp),%ebx
cmovne 0x14(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
test   %ebx,%ebx
je     8066098 <__sprintf_chk@plt+0x1c188>
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    %eax,0x10(%esp)
test   %eax,%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
js     80660d8 <__sprintf_chk@plt+0x1c1c8>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8068340 <fts_children+0x280>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
jmp    8065e32 <__sprintf_chk@plt+0x1bf22>
mov    0x9c(%esi),%eax
mov    0xa0(%esi),%ebx
xor    0x7c(%esp),%ebx
xor    0x78(%esp),%eax
or     %eax,%ebx
jne    8065fe6 <__sprintf_chk@plt+0x1c0d6>
mov    0x2c(%edi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x2,%bh
jne    8066060 <__sprintf_chk@plt+0x1c150>
mov    0x10(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   8049d80 <fchdir@plt>
mov    0xc(%esp),%ecx
jmp    8065e95 <__sprintf_chk@plt+0x1bf85>
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x44(%esi),%eax
mov    0x48(%esi),%ebx
xor    0x24(%esp),%ebx
xor    0x20(%esp),%eax
or     %eax,%ebx
je     8065f88 <__sprintf_chk@plt+0x1c078>
mov    %ecx,0xc(%esp)
call   8049c80 <__errno_location@plt>
mov    0xc(%esp),%ecx
movl   $0x2,(%eax)
jmp    8065e90 <__sprintf_chk@plt+0x1bf80>
xchg   %ax,%ax
lea    0x38(%edi),%ebp
mov    %ebp,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   80685e0 <fts_children+0x520>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %al,%al
jne    8065ee4 <__sprintf_chk@plt+0x1bfd4>
mov    %ebp,(%esp)
call   8068630 <fts_children+0x570>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,0x10(%esp)
js     80660e2 <__sprintf_chk@plt+0x1c1d2>
test   $0x2,%bl
mov    0x10(%esp),%ecx
mov    $0x1,%ebp
je     8065fa8 <__sprintf_chk@plt+0x1c098>
jmp    8065e5c <__sprintf_chk@plt+0x1bf4c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%edi),%eax
cmp    %eax,0x10(%esp)
je     8066102 <__sprintf_chk@plt+0x1c1f2>
mov    %ebp,%ecx
test   %cl,%cl
je     80660b8 <__sprintf_chk@plt+0x1c1a8>
and    $0x4,%ebx
jne    806608c <__sprintf_chk@plt+0x1c17c>
test   %eax,%eax
js     806608c <__sprintf_chk@plt+0x1c17c>
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    %eax,0x1c(%edi)
jmp    8065e00 <__sprintf_chk@plt+0x1bef0>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8068570 <fts_children+0x4b0>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    %eax,0x10(%esp)
jmp    8065f58 <__sprintf_chk@plt+0x1c048>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
lea    0x38(%edi),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   80685f0 <fts_children+0x530>
mov    0xc(%esp),%edx
test   %eax,%eax
jns    8066080 <__sprintf_chk@plt+0x1c170>
jmp    806608c <__sprintf_chk@plt+0x1c17c>
lea    0x0(%esi),%esi
mov    $0xffffffff,%edx
jmp    8065e00 <__sprintf_chk@plt+0x1bef0>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    8065ee4 <__sprintf_chk@plt+0x1bfd4>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    8065ee9 <__sprintf_chk@plt+0x1bfd9>
cmp    $0xffffff9c,%eax
je     806606d <__sprintf_chk@plt+0x1c15d>
call   8049e60 <abort@plt>
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    (%eax),%eax
mov    %edx,0x48(%esp)
mov    %eax,0x24(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
setne  0x4e(%esp)
jne    8066848 <__sprintf_chk@plt+0x1c938>
mov    0x2c(%ebp),%edx
test   $0x10,%dl
jne    8066478 <__sprintf_chk@plt+0x1c568>
mov    $0x50900,%ecx
mov    $0x10900,%eax
and    $0x8,%dh
mov    0x2c(%ebp),%edx
mov    0x24(%esp),%edi
cmovne %ecx,%eax
mov    $0xffffff9c,%ecx
and    $0x204,%edx
cmp    $0x200,%edx
mov    0x18(%edi),%ebx
je     8066980 <__sprintf_chk@plt+0x1ca70>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
test   %eax,%eax
mov    %eax,%ebx
js     8066b0d <__sprintf_chk@plt+0x1cbfd>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8068340 <fts_children+0x280>
mov    %ebx,(%esp)
call   8049d70 <fdopendir@plt>
test   %eax,%eax
je     8066afa <__sprintf_chk@plt+0x1cbea>
mov    0x24(%esp),%edi
cmpw   $0xb,0x3c(%edi)
mov    %eax,0xc(%edi)
je     8066b41 <__sprintf_chk@plt+0x1cc31>
mov    0x2c(%ebp),%eax
test   $0x1,%ah
jne    8066a40 <__sprintf_chk@plt+0x1cb30>
cmpl   $0x1,0x28(%ebp)
sbb    %edi,%edi
xor    %ecx,%ecx
mov    %edi,0x38(%esp)
andl   $0x186a1,0x38(%esp)
subl   $0x1,0x38(%esp)
cmpl   $0x2,0x48(%esp)
je     80661ff <__sprintf_chk@plt+0x1c2ef>
mov    0x2c(%ebp),%edx
mov    $0xffffffff,%ecx
and    $0x18,%edx
cmp    $0x18,%edx
je     8066a20 <__sprintf_chk@plt+0x1cb10>
cmpb   $0x0,0x4e(%esp)
movb   $0x1,0x4f(%esp)
jne    8066238 <__sprintf_chk@plt+0x1c328>
test   %ecx,%ecx
setne  %dl
cmpl   $0x3,0x48(%esp)
mov    %edx,%esi
sete   %dl
mov    %edx,%edi
mov    %esi,%edx
test   %dl,%dl
jne    8066490 <__sprintf_chk@plt+0x1c580>
mov    %edi,%edx
test   %dl,%dl
movb   $0x0,0x4f(%esp)
jne    8066490 <__sprintf_chk@plt+0x1c580>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
movl   $0x0,0x40(%esp)
mov    0x28(%edi),%edx
mov    0x1c(%edi),%ebx
lea    -0x1(%edx),%ecx
cmpb   $0x2f,-0x1(%ebx,%edx,1)
cmove  %ecx,%edx
test   $0x4,%al
je     8066268 <__sprintf_chk@plt+0x1c358>
mov    0x14(%ebp),%eax
add    %edx,%eax
lea    0x1(%eax),%esi
mov    %esi,0x40(%esp)
movb   $0x2f,(%eax)
mov    0x20(%ebp),%esi
lea    0x1(%edx),%eax
mov    %eax,0x2c(%esp)
movb   $0x0,0x4d(%esp)
movl   $0x0,0x20(%esp)
mov    %esi,0x30(%esp)
sub    %eax,0x30(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x34(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x18(%esp)
add    $0x1,%eax
mov    %eax,0x3c(%esp)
lea    0x2c(%ebp),%eax
mov    %eax,0x44(%esp)
jmp    806634b <__sprintf_chk@plt+0x1c43b>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    %eax,0x18(%ebx)
mov    0x28(%ebp),%eax
test   %eax,%eax
je     80662d0 <__sprintf_chk@plt+0x1c3c0>
testb  $0x4,0x2d(%ebp)
je     80665b0 <__sprintf_chk@plt+0x1c6a0>
mov    0x2c(%ebp),%eax
xor    %ecx,%ecx
and    $0x18,%eax
cmp    $0x18,%eax
je     8066700 <__sprintf_chk@plt+0x1c7f0>
mov    $0xb,%edi
xor    %eax,%eax
mov    %di,0x3c(%ebx)
movzbl 0x12(%esi),%edx
sub    $0x1,%edx
cmp    $0xb,%edx
ja     80662ff <__sprintf_chk@plt+0x1c3ef>
mov    0x806de60(,%edx,4),%eax
xor    %edx,%edx
test   %ecx,%ecx
mov    %eax,0x54(%ebx)
mov    $0x1,%eax
jne    8066314 <__sprintf_chk@plt+0x1c404>
mov    $0x2,%eax
xor    %edx,%edx
mov    0x34(%esp),%esi
mov    %eax,0x70(%ebx)
mov    %edx,0x74(%ebx)
movl   $0x0,0x8(%ebx)
test   %esi,%esi
je     80665dc <__sprintf_chk@plt+0x1c6cc>
mov    0x20(%esp),%eax
addl   $0x1,0x1c(%esp)
mov    %ebx,0x8(%eax)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jbe    80665f8 <__sprintf_chk@plt+0x1c6e8>
mov    %ebx,0x20(%esp)
mov    0x24(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     80665f8 <__sprintf_chk@plt+0x1c6e8>
mov    %eax,(%esp)
call   8049db0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8066988 <__sprintf_chk@plt+0x1ca78>
testb  $0x20,0x2c(%ebp)
jne    806637c <__sprintf_chk@plt+0x1c46c>
cmpb   $0x2e,0x13(%eax)
je     80666e0 <__sprintf_chk@plt+0x1c7d0>
lea    0x13(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%edi
lea    0xa8(%eax),%eax
mov    %eax,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8066838 <__sprintf_chk@plt+0x1c928>
lea    0xa4(%eax),%edx
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
call   8049820 <memcpy@plt>
xor    %eax,%eax
movb   $0x0,0xa4(%ebx,%edi,1)
mov    %edi,0x34(%ebx)
mov    0x14(%ebp),%edi
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
mov    0x18(%esp),%eax
mov    %ebp,0x2c(%ebx)
mov    %edi,0x1c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
cmp    %eax,0x30(%esp)
mov    %eax,%ecx
jbe    80664c8 <__sprintf_chk@plt+0x1c5b8>
add    0x2c(%esp),%ecx
jb     8066538 <__sprintf_chk@plt+0x1c628>
mov    0x3c(%esp),%eax
mov    0x4(%esi),%edx
testb  $0x4,0x2c(%ebp)
mov    %eax,0x30(%ebx)
mov    0x0(%ebp),%eax
mov    %ecx,0x28(%ebx)
mov    %eax,0x4(%ebx)
mov    (%esi),%eax
mov    %edx,0xa0(%ebx)
mov    %eax,0x9c(%ebx)
je     80662b8 <__sprintf_chk@plt+0x1c3a8>
mov    0x1c(%ebx),%eax
mov    %eax,0x18(%ebx)
mov    0x34(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80497f0 <memmove@plt>
jmp    80662bf <__sprintf_chk@plt+0x1c3af>
test   $0x1,%dl
jne    80668c8 <__sprintf_chk@plt+0x1c9b8>
mov    $0x70900,%ecx
mov    $0x30900,%eax
jmp    806614c <__sprintf_chk@plt+0x1c23c>
test   $0x2,%ah
jne    80668f3 <__sprintf_chk@plt+0x1c9e3>
mov    0x24(%esp),%edx
mov    %ebx,%ecx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   8065da0 <__sprintf_chk@plt+0x1be90>
test   %eax,%eax
jne    8066918 <__sprintf_chk@plt+0x1ca08>
mov    0x2c(%ebp),%eax
movb   $0x1,0x4f(%esp)
jmp    8066238 <__sprintf_chk@plt+0x1c328>
lea    0x0(%esi),%esi
mov    0x20(%ebp),%edx
mov    0x2c(%esp),%ecx
lea    0x101(%ecx,%edx,1),%ecx
add    %ecx,%eax
cmp    %eax,%edx
ja     8066710 <__sprintf_chk@plt+0x1c800>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     8066bb7 <__sprintf_chk@plt+0x1cca7>
cmp    %eax,%edi
mov    %eax,0x14(%ebp)
je     8066511 <__sprintf_chk@plt+0x1c601>
testb  $0x4,0x2c(%ebp)
movb   $0x1,0x4d(%esp)
je     8066511 <__sprintf_chk@plt+0x1c601>
add    0x2c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x20(%ebp),%eax
mov    %eax,0x30(%esp)
mov    0x2c(%esp),%eax
sub    %eax,0x30(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%ecx
add    0x2c(%esp),%ecx
jae    8066424 <__sprintf_chk@plt+0x1c514>
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    0x34(%esp),%ecx
mov    0x34(%esp),%ebx
test   %ecx,%ecx
jne    8066552 <__sprintf_chk@plt+0x1c642>
jmp    8066570 <__sprintf_chk@plt+0x1c660>
xchg   %ax,%ax
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     8066564 <__sprintf_chk@plt+0x1c654>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    8066550 <__sprintf_chk@plt+0x1c640>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    $0x7,%edx
movl   $0x0,0xc(%edi)
mov    %dx,0x3c(%edi)
orl    $0x4000,0x2c(%ebp)
call   8049c80 <__errno_location@plt>
movl   $0x24,(%eax)
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x44(%esp),%edx
movl   $0x0,(%esp)
call   8065a50 <__sprintf_chk@plt+0x1bb40>
mov    0x34(%esp),%esi
movl   $0x0,0x8(%ebx)
test   %esi,%esi
mov    %ax,0x3c(%ebx)
jne    806632d <__sprintf_chk@plt+0x1c41d>
addl   $0x1,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
mov    %ebx,0x34(%esp)
ja     8066347 <__sprintf_chk@plt+0x1c437>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x4d(%esp)
jne    80669b1 <__sprintf_chk@plt+0x1caa1>
testb  $0x4,0x2c(%ebp)
je     8066626 <__sprintf_chk@plt+0x1c716>
mov    0x2c(%esp),%eax
cmp    %eax,0x20(%ebp)
je     806661a <__sprintf_chk@plt+0x1c70a>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    806661f <__sprintf_chk@plt+0x1c70f>
subl   $0x1,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x0,(%eax)
cmpb   $0x0,0x4f(%esp)
je     8066638 <__sprintf_chk@plt+0x1c728>
cmpb   $0x0,0x4e(%esp)
je     80667b0 <__sprintf_chk@plt+0x1c8a0>
mov    0x1c(%esp),%ebx
test   %ebx,%ebx
je     8066bd7 <__sprintf_chk@plt+0x1ccc7>
cmpl   $0x2710,0x1c(%esp)
jbe    8066868 <__sprintf_chk@plt+0x1c958>
mov    0x28(%ebp),%ebx
test   %ebx,%ebx
je     8066c17 <__sprintf_chk@plt+0x1cd07>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
ja     8066890 <__sprintf_chk@plt+0x1c980>
mov    0x8(%ebp),%eax
mov    0x34(%esp),%edx
test   %edx,%edx
je     8066688 <__sprintf_chk@plt+0x1c778>
lea    0x0(%esi),%esi
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    8066678 <__sprintf_chk@plt+0x1c768>
mov    0x8(%ebp),%eax
mov    0x1c(%esp),%esi
mov    %eax,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %esi,0x4(%esp)
call   8049dc0 <qsort@plt>
mov    0x8(%ebp),%edi
lea    -0x1(%esi),%ecx
mov    (%edi),%eax
mov    %edi,%edx
xchg   %ax,%ax
mov    (%edx),%ebx
add    $0x4,%edx
mov    (%edx),%esi
sub    $0x1,%ecx
mov    %esi,0x8(%ebx)
jne    80666b0 <__sprintf_chk@plt+0x1c7a0>
mov    0x1c(%esp),%esi
mov    -0x4(%edi,%esi,4),%edx
movl   $0x0,0x8(%edx)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x14(%eax)
je     80666f1 <__sprintf_chk@plt+0x1c7e1>
cmpw   $0x2e,0x14(%eax)
jne    806637c <__sprintf_chk@plt+0x1c46c>
mov    0x20(%esp),%ebx
jmp    8066347 <__sprintf_chk@plt+0x1c437>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
testb  $0xfb,0x12(%esi)
setne  %cl
jmp    80662e1 <__sprintf_chk@plt+0x1c3d1>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    $0x24,%edi
call   8049800 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049c80 <__errno_location@plt>
mov    %eax,%esi
movl   $0x24,(%eax)
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    0x34(%esp),%eax
test   %eax,%eax
je     8066774 <__sprintf_chk@plt+0x1c864>
mov    %esi,0x18(%esp)
mov    0x34(%esp),%esi
jmp    8066752 <__sprintf_chk@plt+0x1c842>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    0xc(%esi),%eax
mov    0x8(%esi),%ebx
test   %eax,%eax
je     8066764 <__sprintf_chk@plt+0x1c854>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %esi,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
jne    8066750 <__sprintf_chk@plt+0x1c840>
mov    0x18(%esp),%esi
mov    0x24(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,%eax
movl   $0x0,0xc(%ebx)
mov    $0x7,%ebx
mov    %bx,0x3c(%eax)
xor    %eax,%eax
orl    $0x4000,0x2c(%ebp)
mov    %edi,(%esi)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80667c3 <__sprintf_chk@plt+0x1c8b3>
cmpl   $0x1,0x48(%esp)
jne    8066644 <__sprintf_chk@plt+0x1c734>
mov    0x24(%esp),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jne    8066b97 <__sprintf_chk@plt+0x1cc87>
mov    %ebp,%eax
call   8065cf0 <__sprintf_chk@plt+0x1bde0>
test   %eax,%eax
setne  %al
test   %al,%al
je     8066638 <__sprintf_chk@plt+0x1c728>
mov    0x24(%esp),%eax
mov    $0x7,%esi
mov    0x34(%esp),%ebx
mov    %si,0x3c(%eax)
orl    $0x4000,0x2c(%ebp)
test   %ebx,%ebx
jne    806680a <__sprintf_chk@plt+0x1c8fa>
jmp    8066828 <__sprintf_chk@plt+0x1c918>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     806681c <__sprintf_chk@plt+0x1c90c>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    8066808 <__sprintf_chk@plt+0x1c8f8>
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
xor    %ebx,%ebx
mov    %eax,%esi
mov    (%eax),%edi
jmp    8066731 <__sprintf_chk@plt+0x1c821>
mov    %eax,(%esp)
call   80497d0 <dirfd@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8066c5b <__sprintf_chk@plt+0x1cd4b>
mov    0x2c(%ebp),%eax
jmp    80661cb <__sprintf_chk@plt+0x1c2bb>
lea    0x0(%esi),%esi
mov    0x28(%ebp),%ebx
mov    0x34(%esp),%eax
test   %ebx,%ebx
je     80665a3 <__sprintf_chk@plt+0x1c693>
cmpl   $0x1,0x1c(%esp)
ja     806665d <__sprintf_chk@plt+0x1c74d>
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     8066c39 <__sprintf_chk@plt+0x1cd29>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     8066c39 <__sprintf_chk@plt+0x1cd29>
mov    %eax,0x8(%ebp)
jmp    806666d <__sprintf_chk@plt+0x1c75d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
cmpl   $0x1,0x30(%eax)
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmpl   $0x1,0x30(%eax)
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
jmp    806614c <__sprintf_chk@plt+0x1c23c>
mov    %ebx,(%esp)
call   806aac0 <fts_children+0x2a00>
test   %eax,%eax
mov    %eax,%ebx
js     8066918 <__sprintf_chk@plt+0x1ca08>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8068340 <fts_children+0x280>
jmp    8066499 <__sprintf_chk@plt+0x1c589>
xchg   %ax,%ax
mov    %esi,%eax
test   %al,%al
je     8066924 <__sprintf_chk@plt+0x1ca14>
mov    %edi,%eax
test   %al,%al
jne    806696b <__sprintf_chk@plt+0x1ca5b>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
orw    $0x1,0x3e(%edi)
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    0x2c(%ebp),%eax
movl   $0x0,0xc(%edi)
test   $0x2,%ah
je     8066956 <__sprintf_chk@plt+0x1ca46>
test   %ebx,%ebx
js     8066956 <__sprintf_chk@plt+0x1ca46>
mov    %ebx,(%esp)
call   8049eb0 <close@plt>
mov    0x2c(%ebp),%eax
mov    0x24(%esp),%edi
movb   $0x0,0x4f(%esp)
movl   $0x0,0xc(%edi)
jmp    8066238 <__sprintf_chk@plt+0x1c328>
call   8049c80 <__errno_location@plt>
mov    0x24(%esp),%edi
mov    (%eax),%eax
mov    %eax,0x20(%edi)
jmp    8066924 <__sprintf_chk@plt+0x1ca14>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%ecx
jmp    8066173 <__sprintf_chk@plt+0x1c263>
mov    0x24(%esp),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     80665f8 <__sprintf_chk@plt+0x1c6e8>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
cmpb   $0x0,0x4d(%esp)
movl   $0x0,0xc(%esi)
je     8066603 <__sprintf_chk@plt+0x1c6f3>
mov    0x4(%ebp),%eax
mov    0x14(%ebp),%edx
test   %eax,%eax
je     80669df <__sprintf_chk@plt+0x1cacf>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     80669d5 <__sprintf_chk@plt+0x1cac5>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    %edx,0x1c(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    80669c0 <__sprintf_chk@plt+0x1cab0>
mov    0x34(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%eax),%ecx
test   %ecx,%ecx
js     8066603 <__sprintf_chk@plt+0x1c6f3>
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     8066a08 <__sprintf_chk@plt+0x1caf8>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    0x8(%eax),%ecx
mov    %edx,0x1c(%eax)
test   %ecx,%ecx
je     8066af0 <__sprintf_chk@plt+0x1cbe0>
mov    %ecx,%eax
jmp    80669e8 <__sprintf_chk@plt+0x1cad8>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
mov    %eax,%edx
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
mov    0x58(%edi),%ecx
and    $0x2,%edx
sub    %edx,%ecx
jmp    80661ff <__sprintf_chk@plt+0x1c2ef>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edi
lea    0x34(%ebp),%edx
mov    %edi,%ecx
call   8065c20 <__sprintf_chk@plt+0x1bd10>
mov    0x1c(%ebp),%eax
lea    0x2c(%ebp),%edx
movl   $0x0,(%esp)
mov    %edi,%ecx
call   8065a50 <__sprintf_chk@plt+0x1bb40>
testl  $0x102,0x2c(%ebp)
je     8066b65 <__sprintf_chk@plt+0x1cc55>
movl   $0x14,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8066c9a <__sprintf_chk@plt+0x1cd8a>
mov    0x24(%esp),%edi
mov    0x48(%edi),%edx
mov    0x44(%edi),%eax
mov    %edx,0x4(%esi)
mov    0xa0(%edi),%edx
mov    %eax,(%esi)
mov    0x9c(%edi),%eax
mov    %edi,0x10(%esi)
mov    %edx,0xc(%esi)
mov    %eax,0x8(%esi)
mov    %esi,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   805d320 <__sprintf_chk@plt+0x13410>
cmp    %eax,%esi
mov    %eax,%edi
je     806685a <__sprintf_chk@plt+0x1c94a>
mov    %esi,(%esp)
call   8049800 <free@plt>
test   %edi,%edi
je     8066c9a <__sprintf_chk@plt+0x1cd8a>
mov    0x10(%edi),%eax
mov    $0x2,%ecx
mov    0x24(%esp),%esi
mov    %eax,(%esi)
mov    %cx,0x3c(%esi)
jmp    806685a <__sprintf_chk@plt+0x1c94a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
mov    %ecx,%eax
jmp    80669e8 <__sprintf_chk@plt+0x1cad8>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049eb0 <close@plt>
mov    %edi,(%esi)
mov    0x24(%esp),%eax
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%eax)
jne    8066828 <__sprintf_chk@plt+0x1c918>
mov    0x24(%esp),%esi
mov    $0x4,%ebx
mov    %bx,0x3c(%esi)
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%esi)
xor    %eax,%eax
jmp    80665a3 <__sprintf_chk@plt+0x1c693>
mov    0x24(%esp),%esi
lea    0x2c(%ebp),%edx
mov    0x1c(%ebp),%eax
movl   $0x0,(%esp)
mov    %esi,%ecx
call   8065a50 <__sprintf_chk@plt+0x1bb40>
mov    %ax,0x3c(%esi)
mov    0x2c(%ebp),%eax
jmp    80661cb <__sprintf_chk@plt+0x1c2bb>
mov    0x24(%esp),%edi
mov    %edi,%eax
add    $0x44,%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   8068480 <fts_children+0x3c0>
test   %al,%al
je     806685a <__sprintf_chk@plt+0x1c94a>
mov    %edi,%eax
mov    $0x2,%edx
mov    %edi,(%eax)
mov    %dx,0x3c(%edi)
jmp    806685a <__sprintf_chk@plt+0x1c94a>
mov    0x4(%eax),%edx
mov    $0xffffffff,%ecx
mov    %ebp,%eax
movl   $0x806de51,(%esp)
call   8065da0 <__sprintf_chk@plt+0x1be90>
test   %eax,%eax
setne  %al
jmp    80667de <__sprintf_chk@plt+0x1c8ce>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049c80 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    8066731 <__sprintf_chk@plt+0x1c821>
cmpl   $0x3,0x48(%esp)
je     8066c2a <__sprintf_chk@plt+0x1cd1a>
mov    0x34(%esp),%ebx
test   %ebx,%ebx
jne    8066bf2 <__sprintf_chk@plt+0x1cce2>
xor    %eax,%eax
jmp    806682a <__sprintf_chk@plt+0x1c91a>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     8066c04 <__sprintf_chk@plt+0x1ccf4>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
jne    8066bf0 <__sprintf_chk@plt+0x1cce0>
xor    %eax,%eax
jmp    806682a <__sprintf_chk@plt+0x1c91a>
testb  $0x2,0x2d(%ebp)
jne    8066cac <__sprintf_chk@plt+0x1cd9c>
mov    0x34(%esp),%eax
jmp    80665a3 <__sprintf_chk@plt+0x1c693>
mov    0x24(%esp),%eax
mov    $0x6,%ecx
mov    %cx,0x3c(%eax)
jmp    8066bde <__sprintf_chk@plt+0x1ccce>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x34(%esp),%eax
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    80665a3 <__sprintf_chk@plt+0x1c693>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%edi)
jne    8066828 <__sprintf_chk@plt+0x1c918>
mov    0x24(%esp),%edi
mov    $0x4,%esi
mov    %si,0x3c(%edi)
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%edi)
xor    %eax,%eax
jmp    806682a <__sprintf_chk@plt+0x1c91a>
call   8049c80 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    80665a3 <__sprintf_chk@plt+0x1c693>
lea    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   8049b40 <fstatfs64@plt>
test   %eax,%eax
jne    8066cdd <__sprintf_chk@plt+0x1cdcd>
mov    0x5c(%esp),%eax
cmp    $0x6969,%eax
je     8066868 <__sprintf_chk@plt+0x1c958>
cmp    $0x1021994,%eax
je     8066868 <__sprintf_chk@plt+0x1c958>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
movl   $0x80659e0,0x28(%ebp)
jbe    8066d8f <__sprintf_chk@plt+0x1ce7f>
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     8066d94 <__sprintf_chk@plt+0x1ce84>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     8066d94 <__sprintf_chk@plt+0x1ce84>
mov    %eax,0x8(%ebp)
mov    0x34(%esp),%edx
test   %edx,%edx
je     8066d34 <__sprintf_chk@plt+0x1ce24>
mov    0x34(%esp),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    8066d27 <__sprintf_chk@plt+0x1ce17>
mov    0x1c(%esp),%edi
movl   $0x80659e0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049dc0 <qsort@plt>
mov    0x8(%ebp),%ecx
lea    -0x1(%edi),%edx
mov    (%ecx),%eax
mov    %eax,0x34(%esp)
mov    %ecx,%eax
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%esi
sub    $0x1,%edx
mov    %esi,0x8(%ebx)
jne    8066d65 <__sprintf_chk@plt+0x1ce55>
mov    0x1c(%esp),%eax
mov    -0x4(%ecx,%eax,4),%eax
movl   $0x0,0x8(%eax)
movl   $0x0,0x28(%ebp)
jmp    8066c21 <__sprintf_chk@plt+0x1cd11>
mov    0x8(%ebp),%eax
jmp    8066d1b <__sprintf_chk@plt+0x1ce0b>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    8066d83 <__sprintf_chk@plt+0x1ce73>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%ebx
mov    %ebx,%esi
and    $0xffffe000,%esi
jne    8067130 <fts_open+0x380>
mov    %ebx,%eax
and    $0x204,%eax
cmp    $0x204,%eax
je     8067130 <fts_open+0x380>
test   $0x12,%bl
je     8067130 <fts_open+0x380>
movl   $0x58,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     806740e <fts_open+0x65e>
mov    %eax,%edi
mov    $0x16,%ecx
mov    %esi,%eax
test   $0x2,%bl
rep stos %eax,%es:(%edi)
mov    0x68(%esp),%eax
mov    %eax,0x28(%ebp)
jne    80670c0 <fts_open+0x310>
mov    %ebx,0x2c(%ebp)
mov    0x60(%esp),%eax
movl   $0xffffff9c,0x1c(%ebp)
mov    (%eax),%eax
test   %eax,%eax
je     806737a <fts_open+0x5ca>
mov    0x60(%esp),%edi
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
cmp    %eax,%esi
cmovb  %eax,%esi
add    $0x4,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    8066e38 <fts_open+0x88>
add    $0x1,%esi
mov    $0x1000,%ax
cmp    $0x1000,%esi
cmovb  %eax,%esi
mov    0x20(%ebp),%edx
lea    0x100(%edx,%esi,1),%eax
cmp    %eax,%edx
ja     8067218 <fts_open+0x468>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806743a <fts_open+0x68a>
mov    %eax,0x14(%ebp)
mov    0x60(%esp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     8067360 <fts_open+0x5b0>
movl   $0xa8,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     806710f <fts_open+0x35f>
mov    $0x3,%edx
xor    %edi,%edi
mov    %dx,0x40(%eax)
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %esi,0x1c(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %di,0x3e(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0xffffffff,0x30(%eax)
mov    0x60(%esp),%eax
mov    (%eax),%edx
mov    0x68(%esp),%esi
test   %esi,%esi
je     8067370 <fts_open+0x5c0>
mov    0x2c(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
mov    %al,0x37(%esp)
test   %edx,%edx
je     8067415 <fts_open+0x665>
xor    %edi,%edi
and    $0x1000,%ebx
lea    0x2c(%ebp),%eax
mov    %edi,0x20(%esp)
mov    %edx,%edi
mov    %ebx,0x2c(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x38(%esp)
jmp    8066fa3 <fts_open+0x1f3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x37(%esp)
je     806705a <fts_open+0x2aa>
mov    $0xb,%eax
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
movl   $0x2,0x70(%ebx)
movl   $0x0,0x74(%ebx)
test   %eax,%eax
je     806707f <fts_open+0x2cf>
mov    0x20(%esp),%eax
mov    %ebx,0x20(%esp)
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
lea    0x1(%eax),%ebx
mov    0x60(%esp),%eax
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8067148 <fts_open+0x398>
mov    %ebx,0x24(%esp)
mov    %edi,(%esp)
call   8049b80 <strlen@plt>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%esi
jne    8066fc8 <fts_open+0x218>
cmp    $0x2,%eax
jbe    8066fc8 <fts_open+0x218>
cmpb   $0x2f,-0x1(%edi,%eax,1)
je     80670a8 <fts_open+0x2f8>
lea    0x0(%esi),%esi
lea    0xa8(%esi),%eax
mov    %eax,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80670d0 <fts_open+0x320>
lea    0xa4(%eax),%ecx
mov    %ecx,(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x28(%esp)
call   8049820 <memcpy@plt>
mov    0x14(%ebp),%eax
movb   $0x0,0xa4(%ebx,%esi,1)
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
mov    %esi,0x34(%ebx)
mov    %eax,0x1c(%ebx)
xor    %eax,%eax
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
test   %edx,%edx
mov    %ax,0x40(%ebx)
mov    0x30(%esp),%eax
mov    %ebp,0x2c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
movl   $0x0,0x30(%ebx)
mov    %eax,0x4(%ebx)
mov    %ecx,0x18(%ebx)
jne    8066f50 <fts_open+0x1a0>
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x38(%esp),%edx
movl   $0x0,(%esp)
call   8065a50 <__sprintf_chk@plt+0x1bb40>
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
test   %eax,%eax
jne    8066f7e <fts_open+0x1ce>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%ebx)
test   %eax,%eax
je     8067350 <fts_open+0x5a0>
mov    0x3c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    %ebx,0x8(%eax)
jmp    8066f89 <fts_open+0x1d9>
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x2(%edi,%esi,1)
jne    8066fc8 <fts_open+0x218>
sub    $0x1,%esi
cmp    $0x1,%esi
jne    80670a8 <fts_open+0x2f8>
jmp    8066fc8 <fts_open+0x218>
mov    %ebx,%eax
and    $0xfd,%ah
or     $0x4,%eax
mov    %eax,0x2c(%ebp)
jmp    8066e18 <fts_open+0x68>
mov    0x20(%esp),%edi
test   %edi,%edi
jne    80670e2 <fts_open+0x332>
jmp    8067100 <fts_open+0x350>
lea    0x0(%esi),%esi
mov    %ebx,%edi
mov    0xc(%edi),%eax
mov    0x8(%edi),%ebx
test   %eax,%eax
je     80670f4 <fts_open+0x344>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %edi,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
jne    80670e0 <fts_open+0x330>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esp)
call   8049800 <free@plt>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x1,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
ja     80672f8 <fts_open+0x548>
movl   $0xa8,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
je     8067451 <fts_open+0x6a1>
mov    0x14(%ebp),%edx
mov    $0x3,%ecx
mov    $0x9,%ebx
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %edx,0x1c(%eax)
xor    %edx,%edx
testl  $0x102,0x2c(%ebp)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %dx,0x3e(%eax)
mov    %cx,0x40(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
mov    %eax,0x0(%ebp)
mov    %edi,0x8(%eax)
mov    %bx,0x3c(%eax)
jne    8067240 <fts_open+0x490>
movl   $0x1c,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     80670d4 <fts_open+0x324>
mov    %eax,(%esp)
call   8068460 <fts_children+0x3a0>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
je     8067285 <fts_open+0x4d5>
lea    0x38(%ebp),%eax
mov    %eax,(%esp)
movl   $0xffffffff,0x4(%esp)
call   80685b0 <fts_children+0x4f0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049c80 <__errno_location@plt>
movl   $0x24,(%eax)
jmp    8067117 <fts_open+0x367>
lea    0x0(%esi),%esi
movl   $0x8049800,0x10(%esp)
movl   $0x8065920,0xc(%esp)
movl   $0x8065960,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   805ca00 <__sprintf_chk@plt+0x12af0>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     80670d4 <fts_open+0x324>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
jne    80671f4 <fts_open+0x444>
mov    %eax,%edx
mov    0x1c(%ebp),%ebx
and    $0x10,%edx
cmp    $0x1,%edx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x30900,%edx
test   $0x8,%ah
cmovne %ecx,%edx
test   $0x2,%ah
je     8067384 <fts_open+0x5d4>
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
movl   $0x806de52,0x4(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
mov    %eax,%ebx
test   %ebx,%ebx
js     8067402 <fts_open+0x652>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8068340 <fts_children+0x280>
mov    %ebx,0x18(%ebp)
jmp    80671f4 <fts_open+0x444>
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
test   %eax,%eax
je     8067159 <fts_open+0x3a9>
cmp    %ebx,0x24(%ebp)
mov    0x28(%ebp),%edx
jae    806739b <fts_open+0x5eb>
mov    0x24(%esp),%eax
add    $0x29,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     806741c <fts_open+0x66c>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
je     806741c <fts_open+0x66c>
mov    %eax,0x8(%ebp)
mov    0x20(%esp),%edx
jmp    80673a0 <fts_open+0x5f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x3c(%esp)
mov    %ebx,0x20(%esp)
jmp    8066f89 <fts_open+0x1d9>
lea    0x0(%esi),%esi
xor    %edx,%edx
movl   $0x0,0x30(%esp)
jmp    8066f01 <fts_open+0x151>
nop
movb   $0x1,0x37(%esp)
jmp    8066f1a <fts_open+0x16a>
mov    $0x1000,%esi
jmp    8066e5e <fts_open+0xae>
mov    %edx,0x4(%esp)
movl   $0x806de52,(%esp)
call   8068570 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    80672d4 <fts_open+0x524>
mov    0x8(%ebp),%eax
xchg   %ax,%ax
add    $0x4,%eax
mov    %edi,-0x4(%eax)
mov    0x8(%edi),%edi
test   %edi,%edi
jne    80673a0 <fts_open+0x5f0>
mov    %edx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049dc0 <qsort@plt>
mov    0x24(%esp),%edx
mov    0x8(%ebp),%ecx
test   %edx,%edx
mov    (%ecx),%edi
je     806745d <fts_open+0x6ad>
mov    %ecx,%eax
mov    %ecx,0x20(%esp)
nop
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%ecx
sub    $0x1,%edx
mov    %ecx,0x8(%ebx)
jne    80673e0 <fts_open+0x630>
mov    0x20(%esp),%ecx
mov    (%ecx,%esi,4),%eax
movl   $0x0,0x8(%eax)
jmp    8067159 <fts_open+0x3a9>
mov    %ebx,0x18(%ebp)
orl    $0x4,0x2c(%ebp)
jmp    80671f4 <fts_open+0x444>
xor    %eax,%eax
jmp    8067121 <fts_open+0x371>
xor    %edi,%edi
jmp    8067159 <fts_open+0x3a9>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    8067159 <fts_open+0x3a9>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
movl   $0x0,0x14(%ebp)
jmp    8067117 <fts_open+0x367>
movl   $0x0,0x0(%ebp)
jmp    80670d4 <fts_open+0x324>
mov    %edi,%eax
jmp    80673f6 <fts_open+0x646>
jmp    8067470 <fts_close>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     80674c8 <fts_close+0x58>
mov    0x30(%eax),%edx
test   %edx,%edx
jns    80674a1 <fts_close+0x31>
jmp    80675f6 <fts_close+0x186>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
js     80674c0 <fts_close+0x50>
mov    %ebx,%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
jne    8067490 <fts_close+0x20>
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
jns    806749f <fts_close+0x2f>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049800 <free@plt>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    80674da <fts_close+0x6a>
jmp    80674f8 <fts_close+0x88>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%edi
test   %eax,%eax
je     80674ec <fts_close+0x7c>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %edi,%edi
jne    80674d8 <fts_close+0x68>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    0x2c(%esi),%eax
test   $0x2,%ah
je     80675a8 <fts_close+0x138>
mov    0x1c(%esi),%eax
test   %eax,%eax
js     8067538 <fts_close+0xc8>
mov    %eax,(%esp)
call   8049eb0 <close@plt>
test   %eax,%eax
jne    80675ea <fts_close+0x17a>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
lea    0x38(%esi),%ebx
jmp    806754c <fts_close+0xdc>
nop
mov    %ebx,(%esp)
call   8068630 <fts_children+0x570>
test   %eax,%eax
jns    8067598 <fts_close+0x128>
mov    %ebx,(%esp)
call   80685e0 <fts_children+0x520>
test   %al,%al
je     8067540 <fts_close+0xd0>
mov    0x30(%esi),%eax
test   %eax,%eax
je     8067567 <fts_close+0xf7>
mov    %eax,(%esp)
call   805cd00 <__sprintf_chk@plt+0x12df0>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     80675e0 <fts_close+0x170>
test   %eax,%eax
je     806757f <fts_close+0x10f>
mov    %eax,(%esp)
call   805cd00 <__sprintf_chk@plt+0x12df0>
mov    %esi,(%esp)
call   8049800 <free@plt>
xor    %eax,%eax
test   %edi,%edi
jne    806762b <fts_close+0x1bb>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,(%esp)
call   8049eb0 <close@plt>
jmp    806754c <fts_close+0xdc>
lea    0x0(%esi),%esi
test   $0x4,%al
jne    8067538 <fts_close+0xc8>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049d80 <fchdir@plt>
test   %eax,%eax
jne    80675fd <fts_close+0x18d>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
test   %eax,%eax
je     8067538 <fts_close+0xc8>
call   8049c80 <__errno_location@plt>
mov    %eax,%ebx
mov    (%ebx),%edi
jmp    806753a <fts_close+0xca>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049800 <free@plt>
jmp    806757f <fts_close+0x10f>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
jmp    806753a <fts_close+0xca>
mov    %eax,%ebx
jmp    80674c0 <fts_close+0x50>
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
test   %eax,%eax
je     806753a <fts_close+0xca>
test   %edi,%edi
jne    806753a <fts_close+0xca>
mov    (%ebx),%edi
jmp    806753a <fts_close+0xca>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
mov    %edi,(%eax)
mov    $0xffffffff,%eax
jmp    8067591 <fts_close+0x121>
jmp    8067650 <fts_read>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    (%esi),%edi
test   %edi,%edi
je     806778a <fts_read+0x13a>
mov    0x2c(%esi),%edx
test   $0x40,%dh
jne    806778a <fts_read+0x13a>
movzwl 0x40(%edi),%eax
mov    $0x3,%ebp
mov    %bp,0x40(%edi)
cmp    $0x1,%ax
je     8067b00 <fts_read+0x4b0>
cmp    $0x2,%ax
je     8067798 <fts_read+0x148>
cmpw   $0x1,0x3c(%edi)
jne    80676cd <fts_read+0x7d>
nop
jmp    8067832 <fts_read+0x1e2>
lea    0x0(%esi),%esi
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049800 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8067870 <fts_read+0x220>
movzwl 0x40(%ebx),%eax
cmp    $0x4,%ax
jne    8067a00 <fts_read+0x3b0>
mov    %ebx,%edi
mov    0x8(%edi),%ebx
test   %ebx,%ebx
jne    80676a8 <fts_read+0x58>
mov    0x4(%edi),%ebx
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    8067d08 <fts_read+0x6b8>
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049800 <free@plt>
cmpl   $0xffffffff,0x30(%ebx)
je     8067be8 <fts_read+0x598>
cmpw   $0xb,0x3c(%ebx)
je     806800e <fts_read+0x9be>
mov    0x14(%esi),%edx
mov    0x28(%ebx),%eax
movb   $0x0,(%edx,%eax,1)
mov    0x30(%ebx),%ecx
test   %ecx,%ecx
je     8067b85 <fts_read+0x535>
movzwl 0x3e(%ebx),%eax
test   $0x2,%al
je     8067b47 <fts_read+0x4f7>
mov    0x2c(%esi),%eax
test   $0x4,%al
jne    806775f <fts_read+0x10f>
test   $0x2,%ah
je     8067d5f <fts_read+0x70f>
mov    0x1c(%esi),%eax
mov    0x24(%ebx),%edi
cmp    $0xffffff9c,%eax
jne    8068059 <fts_read+0xa09>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   80685f0 <fts_children+0x530>
test   %eax,%eax
js     806775c <fts_read+0x10c>
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    %edi,0x1c(%esi)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    0x2c(%esi),%eax
mov    0x20(%ebx),%edx
test   %edx,%edx
je     8067ae0 <fts_read+0x490>
mov    $0x7,%edx
mov    %dx,0x3c(%ebx)
test   $0x40,%ah
je     8067861 <fts_read+0x211>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzwl 0x3c(%edi),%eax
lea    -0xc(%eax),%ecx
cmp    $0x1,%cx
jbe    8067b9d <fts_read+0x54d>
sub    $0x1,%ax
jne    80676cd <fts_read+0x7d>
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x40,%dl
je     8067a78 <fts_read+0x428>
mov    0x44(%edi),%eax
mov    0x48(%edi),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%eax
or     %eax,%ecx
je     8067a78 <fts_read+0x428>
testb  $0x2,0x3e(%edi)
jne    8067cf8 <fts_read+0x6a8>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    80677ea <fts_read+0x19a>
jmp    806780f <fts_read+0x1bf>
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     80677fc <fts_read+0x1ac>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %ebp,%ebp
jne    80677e8 <fts_read+0x198>
movl   $0x0,0x4(%esi)
mov    0x2c(%esi),%eax
mov    $0x6,%ebx
mov    %edi,%ecx
mov    %bx,0x3c(%edi)
lea    0x34(%esi),%edx
call   8065c20 <__sprintf_chk@plt+0x1bd10>
add    $0x8c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x4,%ax
jne    80677b8 <fts_read+0x168>
jmp    80677d5 <fts_read+0x185>
lea    0x0(%esi),%esi
lea    0x44(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8068480 <fts_children+0x3c0>
test   %al,%al
je     8067861 <fts_read+0x211>
mov    $0x2,%esi
mov    %ebx,(%ebx)
mov    %si,0x3c(%ebx)
mov    %ebx,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,%eax
call   8065cf0 <__sprintf_chk@plt+0x1bde0>
test   %eax,%eax
jne    8067c65 <fts_read+0x615>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     8067c08 <fts_read+0x5b8>
test   %eax,%eax
je     806789b <fts_read+0x24b>
mov    %eax,(%esp)
call   805cd00 <__sprintf_chk@plt+0x12df0>
mov    0x34(%ebx),%eax
lea    0xa4(%ebx),%edi
mov    %eax,0x28(%ebx)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   80497f0 <memmove@plt>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049d40 <strrchr@plt>
test   %eax,%eax
je     8067904 <fts_read+0x2b4>
cmp    %eax,%edi
je     8067c73 <fts_read+0x623>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   8049b80 <strlen@plt>
mov    0x18(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%ebp
lea    0x1(%eax),%eax
mov    %eax,0x8(%esp)
call   80497f0 <memmove@plt>
mov    %ebp,0x34(%ebx)
mov    0x14(%esi),%eax
mov    %eax,0x1c(%ebx)
mov    %eax,0x18(%ebx)
testl  $0x102,0x2c(%esi)
je     8067b1f <fts_read+0x4cf>
movl   $0x8049800,0x10(%esp)
movl   $0x8065920,0xc(%esp)
movl   $0x8065960,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   805ca00 <__sprintf_chk@plt+0x12af0>
movzwl 0x3c(%ebx),%edx
mov    %eax,0x34(%esi)
cmp    $0xb,%dx
mov    %ebx,(%esi)
je     8067a53 <fts_read+0x403>
cmp    $0x1,%dx
mov    %ebx,%eax
jne    806778c <fts_read+0x13c>
mov    0x30(%ebx),%ebp
test   %ebp,%ebp
jne    8067978 <fts_read+0x328>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x10(%esi)
testl  $0x102,0x2c(%esi)
je     8067840 <fts_read+0x1f0>
movl   $0x14,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8067bd8 <fts_read+0x588>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,(%edi)
mov    0x9c(%ebx),%eax
mov    %edx,0x4(%edi)
mov    0xa0(%ebx),%edx
mov    %ebx,0x10(%edi)
mov    %eax,0x8(%edi)
mov    %edx,0xc(%edi)
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805d320 <__sprintf_chk@plt+0x13410>
cmp    %eax,%edi
mov    %eax,%esi
je     8067861 <fts_read+0x211>
mov    %edi,(%esp)
call   8049800 <free@plt>
test   %esi,%esi
je     8067bd8 <fts_read+0x588>
mov    0x10(%esi),%eax
mov    $0x2,%edi
mov    %di,0x3c(%ebx)
mov    %eax,(%ebx)
mov    %ebx,%eax
jmp    8067863 <fts_read+0x213>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%ax
je     8067d33 <fts_read+0x6e3>
mov    0x4(%ebx),%ecx
mov    0x28(%ecx),%edx
mov    0x1c(%ecx),%ecx
lea    -0x1(%edx),%eax
cmpb   $0x2f,-0x1(%ecx,%edx,1)
cmovne %edx,%eax
add    0x14(%esi),%eax
movb   $0x2f,(%eax)
mov    0x34(%ebx),%ecx
add    $0x1,%eax
mov    %eax,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x8(%esp)
lea    0xa4(%ebx),%edx
mov    %edx,0x4(%esp)
call   80497f0 <memmove@plt>
movzwl 0x3c(%ebx),%edx
mov    %ebx,(%esi)
cmp    $0xb,%dx
jne    8067959 <fts_read+0x309>
mov    0x70(%ebx),%edx
mov    0x74(%ebx),%eax
mov    %edx,%ecx
xor    $0x2,%ecx
or     %eax,%ecx
je     8067c85 <fts_read+0x635>
xor    $0x1,%edx
or     %eax,%edx
jne    806800e <fts_read+0x9be>
mov    %ebx,%eax
jmp    8067863 <fts_read+0x213>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     8067c47 <fts_read+0x5f7>
test   $0x20,%dh
jne    8067c15 <fts_read+0x5c5>
mov    0x18(%edi),%eax
mov    $0xffffffff,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8065da0 <__sprintf_chk@plt+0x1be90>
test   %eax,%eax
je     8067b95 <fts_read+0x545>
call   8049c80 <__errno_location@plt>
mov    0x4(%esi),%edx
mov    %edx,%ebx
mov    (%eax),%eax
orw    $0x1,0x3e(%edi)
test   %edx,%edx
mov    %eax,0x20(%edi)
je     8067ad2 <fts_read+0x482>
mov    0x4(%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    8067ac0 <fts_read+0x470>
mov    %edx,%ebx
movl   $0x0,0x4(%esi)
jmp    8067a0a <fts_read+0x3ba>
xchg   %ax,%ax
mov    $0x6,%ecx
mov    %cx,0x3c(%ebx)
lea    0x34(%esi),%edx
mov    %ebx,%ecx
call   8065c20 <__sprintf_chk@plt+0x1bd10>
mov    0x2c(%esi),%eax
jmp    8067781 <fts_read+0x131>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x0,(%esp)
call   8065a50 <__sprintf_chk@plt+0x1bb40>
mov    %ax,0x3c(%edi)
mov    %edi,%eax
jmp    806778c <fts_read+0x13c>
movl   $0x1c,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%esi)
je     8067a43 <fts_read+0x3f3>
mov    %eax,(%esp)
call   8068460 <fts_children+0x3a0>
movzwl 0x3c(%ebx),%edx
jmp    806794d <fts_read+0x2fd>
test   $0x1,%al
jne    806776a <fts_read+0x11a>
mov    0x4(%ebx),%edx
mov    $0xffffffff,%ecx
mov    %esi,%eax
movl   $0x806de51,(%esp)
call   8065da0 <__sprintf_chk@plt+0x1be90>
test   %eax,%eax
je     806776a <fts_read+0x11a>
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
mov    0x2c(%esi),%eax
or     $0x40,%ah
mov    %eax,0x2c(%esi)
jmp    806776d <fts_read+0x11d>
mov    %esi,%eax
call   8065cf0 <__sprintf_chk@plt+0x1bde0>
test   %eax,%eax
jne    8067b6d <fts_read+0x51d>
jmp    806776a <fts_read+0x11a>
mov    0x4(%esi),%ebx
jmp    8067ad2 <fts_read+0x482>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x1,(%esp)
mov    %edi,%ebx
call   8065a50 <__sprintf_chk@plt+0x1bb40>
cmp    $0x1,%ax
mov    %eax,%edx
mov    %ax,0x3c(%edi)
jne    806794d <fts_read+0x2fd>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
je     8067eb3 <fts_read+0x863>
mov    %edi,(%esi)
mov    %edi,%ebx
jmp    8067959 <fts_read+0x309>
call   8049c80 <__errno_location@plt>
movl   $0xc,(%eax)
jmp    806778a <fts_read+0x13a>
mov    %ebx,(%esp)
call   8049800 <free@plt>
call   8049c80 <__errno_location@plt>
movl   $0x0,(%eax)
xor    %eax,%eax
movl   $0x0,(%esi)
jmp    806778c <fts_read+0x13c>
mov    %eax,(%esp)
call   8049800 <free@plt>
jmp    806789b <fts_read+0x24b>
and    $0xdf,%dh
mov    %edx,0x2c(%esi)
jmp    8067c22 <fts_read+0x5d2>
lea    0x0(%esi),%esi
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     8067c34 <fts_read+0x5e4>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebx,(%esp)
call   8049800 <free@plt>
test   %ebp,%ebp
jne    8067c20 <fts_read+0x5d0>
movl   $0x0,0x4(%esi)
mov    $0x3,%edx
mov    %esi,%eax
call   8066110 <__sprintf_chk@plt+0x1c200>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     8067e7f <fts_read+0x82f>
mov    %eax,%ebx
jmp    8067ad2 <fts_read+0x482>
orl    $0x4000,0x2c(%esi)
xor    %eax,%eax
jmp    806778c <fts_read+0x13c>
cmpb   $0x0,0xa5(%ebx)
jne    80678d9 <fts_read+0x289>
jmp    8067904 <fts_read+0x2b4>
mov    0x30(%ebx),%eax
mov    0x4(%ebx),%edi
test   %eax,%eax
jle    8067ca5 <fts_read+0x655>
mov    0x38(%edi),%eax
test   %eax,%eax
jne    8067ca5 <fts_read+0x655>
mov    0x2c(%esi),%eax
and    $0x18,%eax
cmp    $0x18,%eax
je     8067e24 <fts_read+0x7d4>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x0,(%esp)
call   8065a50 <__sprintf_chk@plt+0x1bb40>
mov    %eax,%edx
mov    %ax,0x3c(%ebx)
mov    0x54(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8067959 <fts_read+0x309>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8067959 <fts_read+0x309>
mov    0x38(%edi),%eax
test   %eax,%eax
je     8067959 <fts_read+0x309>
sub    $0x1,%eax
mov    %eax,0x38(%edi)
jmp    8067959 <fts_read+0x309>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
jmp    80677df <fts_read+0x18f>
mov    0x28(%ebx),%eax
mov    0x14(%esi),%edx
mov    %ebx,(%esi)
movb   $0x0,(%edx,%eax,1)
mov    $0x3,%edx
mov    %esi,%eax
call   8066110 <__sprintf_chk@plt+0x1c200>
test   %eax,%eax
mov    %eax,%ebx
je     8067d98 <fts_read+0x748>
mov    %edi,(%esp)
call   8049800 <free@plt>
jmp    8067a0a <fts_read+0x3ba>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x1,(%esp)
call   8065a50 <__sprintf_chk@plt+0x1bb40>
cmp    $0x1,%ax
mov    %ax,0x3c(%ebx)
je     8067daa <fts_read+0x75a>
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
jmp    8067a0a <fts_read+0x3ba>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049d80 <fchdir@plt>
test   %eax,%eax
je     806775f <fts_read+0x10f>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebp
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    %edi,0x0(%ebp)
mov    %edi,0x20(%ebx)
orl    $0x4000,0x2c(%esi)
jmp    806775f <fts_read+0x10f>
testb  $0x40,0x2d(%esi)
jne    806778a <fts_read+0x13a>
mov    0x4(%edi),%ebx
jmp    80676e2 <fts_read+0x92>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
jne    8067d51 <fts_read+0x701>
mov    %ecx,%eax
mov    0x1c(%esi),%edi
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     8067f42 <fts_read+0x8f2>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x806de52,0x4(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
mov    %eax,%edi
test   %edi,%edi
js     8067f27 <fts_read+0x8d7>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8068340 <fts_children+0x280>
mov    %edi,0x24(%ebx)
orw    $0x2,0x3e(%ebx)
jmp    8067d51 <fts_read+0x701>
mov    0x2c(%edi),%edx
testb  $0x2,0x2d(%edx)
mov    0x30(%edx),%ebp
je     8067ca5 <fts_read+0x655>
test   %ebp,%ebp
je     8068013 <fts_read+0x9c3>
mov    0x44(%edi),%eax
mov    %edx,0x18(%esp)
mov    0x48(%edi),%edx
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,0x24(%esp)
call   805c780 <__sprintf_chk@plt+0x12870>
mov    0x18(%esp),%edx
test   %eax,%eax
je     8067f90 <fts_read+0x940>
movzbl 0x8(%eax),%edx
test   %dl,%dl
je     8067ca5 <fts_read+0x655>
movzwl 0x3c(%ebx),%edx
jmp    8067959 <fts_read+0x309>
mov    0x2c(%esi),%eax
test   $0x40,%ah
jne    806778a <fts_read+0x13a>
mov    0x20(%edi),%ecx
test   %ecx,%ecx
je     8067ea2 <fts_read+0x852>
cmpw   $0x4,0x3c(%edi)
je     8067ea2 <fts_read+0x852>
mov    $0x7,%edx
mov    %dx,0x3c(%edi)
lea    0x34(%esi),%edx
mov    %edi,%ecx
call   8065c20 <__sprintf_chk@plt+0x1bd10>
mov    %edi,%eax
jmp    806778c <fts_read+0x13c>
mov    %ecx,%eax
mov    0x1c(%esi),%ebx
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     8067f79 <fts_read+0x929>
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x806de52,0x4(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
mov    %eax,%ebx
test   %ebx,%ebx
js     8067f59 <fts_read+0x909>
mov    %ebx,(%esp)
movl   $0x1,0x4(%esp)
call   8068340 <fts_children+0x280>
movzwl 0x3c(%edi),%edx
mov    %ebx,0x24(%edi)
mov    %edi,%ebx
orw    $0x2,0x3e(%edi)
jmp    806794d <fts_read+0x2fd>
mov    %edi,0x24(%ebx)
mov    $0x7,%edi
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
mov    %di,0x3c(%ebx)
mov    %eax,0x20(%ebx)
jmp    8067d51 <fts_read+0x701>
mov    %eax,0x4(%esp)
movl   $0x806de52,(%esp)
call   8068570 <fts_children+0x4b0>
mov    %eax,%edi
jmp    8067dff <fts_read+0x7af>
mov    %ebx,0x24(%edi)
mov    $0x7,%ebp
call   8049c80 <__errno_location@plt>
mov    $0x7,%edx
mov    (%eax),%eax
mov    %bp,0x3c(%edi)
mov    %eax,0x20(%edi)
jmp    8067bcf <fts_read+0x57f>
mov    %eax,0x4(%esp)
movl   $0x806de52,(%esp)
call   8068570 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    8067f00 <fts_read+0x8b0>
movl   $0xc,(%esp)
mov    %edx,0x1c(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8067ca5 <fts_read+0x655>
mov    0x1c(%esp),%edx
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%edx),%eax
mov    %eax,(%esp)
call   8049b40 <fstatfs64@plt>
xor    %edx,%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    8067fd8 <fts_read+0x988>
cmpl   $0x52654973,0x2c(%esp)
sete   %dl
mov    %dl,0x8(%ecx)
mov    0x44(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x48(%edi),%edx
mov    %ecx,0x18(%esp)
mov    %eax,(%ecx)
mov    %edx,0x4(%ecx)
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   805d320 <__sprintf_chk@plt+0x13410>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8068063 <fts_read+0xa13>
cmp    %eax,%ecx
je     8067e6e <fts_read+0x81e>
call   8049e60 <abort@plt>
movl   $0x8049800,0x10(%esp)
movl   $0x80659c0,0xc(%esp)
movl   $0x8065990,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
mov    %edx,0x18(%esp)
call   805ca00 <__sprintf_chk@plt+0x12af0>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x30(%edx)
jne    8067e3c <fts_read+0x7ec>
jmp    8067ca5 <fts_read+0x655>
cmp    %eax,%edi
jne    8067741 <fts_read+0xf1>
jmp    806800e <fts_read+0x9be>
mov    %ecx,(%esp)
call   8049800 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8067ca5 <fts_read+0x655>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x18(%esp),%eax
cmp    $0x4,%eax
ja     80680a0 <fts_set+0x20>
mov    0x14(%esp),%edx
mov    %ax,0x40(%edx)
xor    %eax,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
testl  $0xffffdfff,0x34(%esp)
mov    0x30(%esp),%esi
jne    8068290 <fts_children+0x1d0>
call   8049c80 <__errno_location@plt>
mov    (%esi),%edi
movl   $0x0,(%eax)
testb  $0x40,0x2d(%esi)
mov    %eax,0xc(%esp)
jne    8068190 <fts_children+0xd0>
movzwl 0x3c(%edi),%eax
cmp    $0x9,%ax
je     8068280 <fts_children+0x1c0>
cmp    $0x1,%ax
jne    8068190 <fts_children+0xd0>
mov    0x4(%esi),%ebp
test   %ebp,%ebp
jne    8068152 <fts_children+0x92>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
je     80681a0 <fts_children+0xe0>
mov    0x30(%edi),%eax
test   %eax,%eax
jne    806813c <fts_children+0x7c>
mov    0x18(%edi),%eax
cmpb   $0x2f,(%eax)
je     806813c <fts_children+0x7c>
mov    0x2c(%esi),%eax
test   $0x4,%al
je     80681c0 <fts_children+0x100>
mov    %ebx,%edx
mov    %esi,%eax
call   8066110 <__sprintf_chk@plt+0x1c200>
mov    %eax,0x4(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,%ebp
mov    0xc(%ebp),%eax
mov    0x8(%ebp),%ebx
test   %eax,%eax
je     8068164 <fts_children+0xa4>
mov    %eax,(%esp)
call   8049ec0 <closedir@plt>
mov    %ebp,(%esp)
call   8049800 <free@plt>
test   %ebx,%ebx
jne    8068150 <fts_children+0x90>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
jne    8068122 <fts_children+0x62>
jmp    80681a0 <fts_children+0xe0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%edi),%eax
mov    $0x2,%ebx
orl    $0x2000,0x2c(%esi)
test   %eax,%eax
je     8068129 <fts_children+0x69>
jmp    806813c <fts_children+0x7c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
mov    0x1c(%esi),%edi
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x30900,%ecx
test   $0x8,%ah
cmovne %edx,%ecx
test   $0x2,%ah
je     80682a8 <fts_children+0x1e8>
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
movl   $0x806de52,0x4(%esp)
call   805e090 <__sprintf_chk@plt+0x14180>
mov    %eax,%edi
test   %edi,%edi
js     8068188 <fts_children+0xc8>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8068340 <fts_children+0x280>
mov    %ebx,%edx
mov    %esi,%eax
call   8066110 <__sprintf_chk@plt+0x1c200>
testb  $0x2,0x2d(%esi)
mov    %eax,0x4(%esi)
jne    8068258 <fts_children+0x198>
mov    %edi,(%esp)
call   8049d80 <fchdir@plt>
test   %eax,%eax
jne    80682bf <fts_children+0x1ff>
mov    %edi,(%esp)
call   8049eb0 <close@plt>
mov    0x4(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esi),%eax
cmp    %eax,%edi
je     80682d6 <fts_children+0x216>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   80685f0 <fts_children+0x530>
test   %eax,%eax
js     806827a <fts_children+0x1ba>
mov    %eax,(%esp)
call   8049eb0 <close@plt>
mov    %edi,0x1c(%esi)
jmp    806824d <fts_children+0x18d>
nop
mov    0x8(%edi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
movl   $0x806de52,(%esp)
call   8068570 <fts_children+0x4b0>
mov    %eax,%edi
jmp    806820f <fts_children+0x14f>
mov    0xc(%esp),%esi
mov    (%esi),%ebx
mov    %edi,(%esp)
call   8049eb0 <close@plt>
xor    %eax,%eax
mov    %ebx,(%esi)
jmp    8068148 <fts_children+0x88>
cmp    $0xffffff9c,%eax
je     806825f <fts_children+0x19f>
call   8049e60 <abort@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    8068302 <fts_children+0x242>
jmp    8068335 <fts_children+0x275>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    8068326 <fts_children+0x266>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    80682f8 <fts_children+0x238>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   806aaf0 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%edx
js     80683a8 <fts_children+0x2e8>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     80683a0 <fts_children+0x2e0>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   806aaf0 <fts_children+0x2a30>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    80683a0 <fts_children+0x2e0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   806aaf0 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049a30 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   8049870 <fclose@plt>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8068420 <fts_children+0x360>
test   %dl,%dl
je     8068417 <fts_children+0x357>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     8068440 <fts_children+0x380>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    8068417 <fts_children+0x357>
call   8049c80 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049c80 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x95f616,0x18(%eax)
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
cmpl   $0x95f616,0x18(%esi)
jne    806853d <fts_children+0x47d>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
mov    %edx,%ebx
or     %eax,%ebx
je     80684f0 <fts_children+0x430>
mov    0x58(%edi),%ebx
mov    %ebx,%ecx
mov    %ebx,0x18(%esp)
mov    0x5c(%edi),%ebx
xor    (%esi),%ecx
mov    %ebx,0x1c(%esp)
xor    0x4(%esi),%ebx
or     %ecx,%ebx
je     8068520 <fts_children+0x460>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,%ebp
and    %eax,%ebp
and    %ebx,%edx
xor    %eax,%eax
or     %ebp,%edx
mov    %ecx,0x10(%esi)
mov    %ebx,0x14(%esi)
jne    8068516 <fts_children+0x456>
mov    %ebx,%eax
or     %ecx,%eax
je     8068530 <fts_children+0x470>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%ecx
jmp    8068504 <fts_children+0x444>
lea    0x0(%esi),%esi
mov    0x58(%edi),%ebx
mov    0x5c(%edi),%ecx
movl   $0x1,0x10(%esi)
movl   $0x0,0x14(%esi)
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %ebx,(%esi)
mov    %ecx,0x4(%esi)
mov    %eax,0x8(%esi)
xor    %eax,%eax
mov    %edx,0xc(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%edi),%ecx
mov    0x4(%edi),%ebx
xor    0xc(%esi),%ebx
xor    0x8(%esi),%ecx
or     %ecx,%ebx
jne    80684c1 <fts_children+0x401>
nop
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806deb6,0xc(%esp)
movl   $0x3c,0x8(%esp)
movl   $0x806de90,0x4(%esp)
movl   $0x806de9e,(%esp)
call   8049ee0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80497a0 <open64@plt>
mov    %eax,(%esp)
call   8062850 <__sprintf_chk@plt+0x18940>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movb   $0x1,0x1c(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    %edx,(%eax)
mov    %edx,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x1c(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
mov    0x14(%esp),%edi
movzbl 0x1c(%edx),%eax
mov    0x14(%edx),%ecx
xor    $0x1,%eax
movzbl %al,%esi
add    %esi,%ecx
and    $0x3,%ecx
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %edi,(%ebx)
mov    0x18(%edx),%ebx
mov    %ecx,0x14(%edx)
cmp    %ecx,%ebx
jne    8068626 <fts_children+0x566>
add    %esi,%ebx
and    $0x3,%ebx
mov    %ebx,0x18(%edx)
movb   $0x0,0x1c(%edx)
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
cmpb   $0x0,0x1c(%edx)
jne    806866a <fts_children+0x5aa>
mov    0x14(%edx),%ecx
mov    0x10(%edx),%esi
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %esi,(%ebx)
cmp    0x18(%edx),%ecx
je     8068660 <fts_children+0x5a0>
add    $0x3,%ecx
and    $0x3,%ecx
mov    %ecx,0x14(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
movb   $0x1,0x1c(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
call   8049e60 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049d20 <nl_langinfo@plt>
mov    0x8073c30,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x806b38e,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     806873c <fts_children+0x67c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8068707 <fts_children+0x647>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    80686e0 <fts_children+0x620>
nop
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049b80 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     8068738 <fts_children+0x678>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8049790 <strcmp@plt>
test   %eax,%eax
je     80686fb <fts_children+0x63b>
cmp    $0x2a,%bl
jne    80686c0 <fts_children+0x600>
cmpb   $0x0,0x1(%ebp)
jne    80686c0 <fts_children+0x600>
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x806dec8,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    80689fd <fts_children+0x93d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8068707 <fts_children+0x647>
movl   $0x806dece,(%esp)
call   8049a90 <getenv@plt>
test   %eax,%eax
je     8068755 <fts_children+0x695>
cmpb   $0x0,(%eax)
jne    8068963 <fts_children+0x8a3>
mov    $0x4,%eax
mov    $0x5,%esi
mov    $0x806dec2,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     8068954 <fts_children+0x894>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     80689f3 <fts_children+0x933>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049820 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     80687bc <fts_children+0x6fc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8068938 <fts_children+0x878>
movl   $0x806b64c,0x4(%esp)
mov    %eax,(%esp)
call   8049b10 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8068930 <fts_children+0x870>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8068916 <fts_children+0x856>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     8068820 <fts_children+0x760>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    8068820 <fts_children+0x760>
cmp    $0x23,%eax
je     806898d <fts_children+0x8cd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049c50 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x806dede,0x4(%esp)
mov    %esi,(%esp)
call   8049b70 <fscanf@plt>
cmp    $0x1,%eax
jle    80689b0 <fts_children+0x8f0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    80689ce <fts_children+0x90e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049ab0 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8068a02 <fts_children+0x942>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049a20 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049a20 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     806882c <fts_children+0x76c>
mov    %esi,(%esp)
call   8049d10 <__uflow@plt>
cmp    $0xffffffff,%eax
je     80689b0 <fts_children+0x8f0>
jmp    8068835 <fts_children+0x775>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049eb0 <close@plt>
mov    $0x806b38e,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049800 <free@plt>
mov    %ebp,0x8073c30
jmp    80686af <fts_children+0x5ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    806877b <fts_children+0x6bb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049b80 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8068954 <fts_children+0x894>
lea    -0x1(%eax),%eax
jmp    8068764 <fts_children+0x6a4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     80689a7 <fts_children+0x8e7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8068a1c <fts_children+0x95c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    8068988 <fts_children+0x8c8>
cmp    $0xffffffff,%eax
jne    8068820 <fts_children+0x760>
mov    %esi,(%esp)
call   8049870 <fclose@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8068938 <fts_children+0x878>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    806893d <fts_children+0x87d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049aa0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    80688cc <fts_children+0x80c>
mov    $0x806b38e,%ebp
jmp    8068949 <fts_children+0x889>
call   80498f0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x806b38e,%ebp
call   8049800 <free@plt>
mov    %esi,(%esp)
call   8049870 <fclose@plt>
jmp    806893d <fts_children+0x87d>
mov    %esi,(%esp)
call   8049d10 <__uflow@plt>
jmp    80689a2 <fts_children+0x8e2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8(%ebp),%eax
mov    %ecx,-0x30(%ebp)
mov    %eax,-0x34(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmp    $0x3fffffff,%ecx
jbe    8068a71 <fts_children+0x9b1>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    8068b7e <fts_children+0xabe>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%eax
shl    $0x2,%eax
cmp    $0xfb7,%eax
jbe    8068b19 <fts_children+0xa59>
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   806ac10 <fts_children+0x2b50>
mov    -0x2c(%ebp),%edx
test   %eax,%eax
je     8068a57 <fts_children+0x997>
xor    %ecx,%ecx
mov    $0x2,%esi
cmpl   $0x2,-0x30(%ebp)
movl   $0x1,0x4(%eax)
jbe    8068adb <fts_children+0xa1b>
mov    %edi,-0x2c(%ebp)
mov    -0x30(%ebp),%edi
lea    0x0(%esi),%esi
movzbl -0x1(%edx,%esi,1),%ebx
cmp    %bl,(%edx,%ecx,1)
jne    8068ac8 <fts_children+0xa08>
jmp    8068b40 <fts_children+0xa80>
nop
sub    (%eax,%ecx,4),%ecx
cmp    %bl,(%edx,%ecx,1)
je     8068b40 <fts_children+0xa80>
test   %ecx,%ecx
jne    8068ac0 <fts_children+0xa00>
mov    %esi,(%eax,%esi,4)
xor    %ecx,%ecx
add    $0x1,%esi
cmp    %edi,%esi
jne    8068ab0 <fts_children+0x9f0>
mov    -0x2c(%ebp),%edi
mov    -0x34(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,(%esi)
movzbl (%edi),%ebx
mov    %edi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8068b07 <fts_children+0xa47>
cmp    %bl,(%edx,%ecx,1)
je     8068b50 <fts_children+0xa90>
test   %ecx,%ecx
je     8068b30 <fts_children+0xa70>
add    (%eax,%ecx,4),%edi
sub    (%eax,%ecx,4),%ecx
test   %bl,%bl
jne    8068af4 <fts_children+0xa34>
mov    %eax,(%esp)
call   806ac70 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8068a59 <fts_children+0x999>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x13(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
jmp    8068a8f <fts_children+0x9cf>
movzbl 0x1(%esi),%ebx
add    $0x1,%edi
add    $0x1,%esi
jmp    8068af0 <fts_children+0xa30>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
mov    %esi,%ebx
sub    %ecx,%ebx
mov    %ebx,(%eax,%esi,4)
jmp    8068ad1 <fts_children+0xa11>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,-0x30(%ebp)
lea    0x1(%esi),%ebx
mov    %ebx,-0x2c(%ebp)
je     8068b67 <fts_children+0xaa7>
movzbl 0x1(%esi),%ebx
mov    -0x2c(%ebp),%esi
jmp    8068af0 <fts_children+0xa30>
mov    -0x34(%ebp),%esi
mov    %edi,(%esi)
mov    %eax,(%esp)
call   806ac70 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8068a59 <fts_children+0x999>
call   80498f0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0xec,%esp
mov    %edx,(%esp)
mov    %eax,-0xe8(%ebp)
mov    %ecx,-0xe4(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   806ace0 <fts_children+0x2c20>
cmp    $0x5d1745d,%eax
mov    %eax,-0xdc(%ebp)
jbe    8068be4 <fts_children+0xb24>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    8069507 <fts_children+0x1447>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
imul   $0x2c,-0xdc(%ebp),%eax
cmp    $0xfb7,%eax
jbe    8068eef <fts_children+0xe2f>
mov    %eax,(%esp)
call   806ac10 <fts_children+0x2b50>
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
test   %edi,%edi
je     8068bca <fts_children+0xb0a>
mov    -0xdc(%ebp),%eax
mov    %esi,%edx
mov    %esi,-0xb4(%ebp)
lea    0x10(%edi),%ebx
movb   $0x0,-0xc4(%ebp)
lea    -0xc0(%ebp),%esi
movl   $0x0,-0xc0(%ebp)
00
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
mov    %eax,-0xd4(%ebp)
movl   $0x0,-0xbc(%ebp)
00
movb   $0x0,-0xb8(%ebp)
nop
cmpb   $0x0,-0xc4(%ebp)
jne    8068f4f <fts_children+0xe8f>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8068f38 <fts_children+0xe78>
movl   $0x1,-0xb0(%ebp)
00
movsbl (%edx),%eax
movb   $0x1,-0xac(%ebp)
mov    %eax,-0xa8(%ebp)
mov    -0xa8(%ebp),%eax
movb   $0x1,-0xb8(%ebp)
test   %eax,%eax
jne    8069210 <fts_children+0x1150>
mov    -0xd4(%ebp),%eax
cmpl   $0x2,-0xdc(%ebp)
movl   $0x1,0x4(%eax)
jbe    8068d75 <fts_children+0xcb5>
mov    -0xd8(%ebp),%eax
mov    $0x2,%esi
xor    %ebx,%ebx
mov    %esi,-0xcc(%ebp)
mov    %eax,%edi
mov    %eax,%esi
cmpb   $0x0,0x30(%edi)
jne    8068e9a <fts_children+0xdda>
mov    0x2c(%edi),%edx
mov    %edi,%ecx
mov    %esi,%edi
mov    %edx,%esi
mov    -0xd4(%ebp),%edx
jmp    8068d03 <fts_children+0xc43>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80692a9 <fts_children+0x11e9>
sub    (%edx,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%edi,%eax,8),%eax
cmp    0x4(%eax),%esi
jne    8068cf8 <fts_children+0xc38>
mov    %esi,0x8(%esp)
mov    (%eax),%eax
mov    %edx,-0xe0(%ebp)
mov    %ecx,-0xd0(%ebp)
mov    %eax,0x4(%esp)
mov    0x28(%ecx),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
mov    -0xd0(%ebp),%ecx
mov    -0xe0(%ebp),%edx
test   %eax,%eax
jne    8068cf8 <fts_children+0xc38>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ecx
add    $0x1,%ebx
mov    -0xd4(%ebp),%edx
mov    %ecx,%eax
sub    %ebx,%eax
mov    %eax,(%edx,%ecx,4)
addl   $0x1,-0xcc(%ebp)
add    $0x28,%edi
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xcc(%ebp)
jne    8068cd8 <fts_children+0xc18>
mov    -0xe4(%ebp),%eax
xor    %ebx,%ebx
movb   $0x0,-0x8c(%ebp)
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,(%eax)
mov    -0xe8(%ebp),%eax
movb   $0x0,-0x80(%ebp)
movb   $0x0,-0x54(%ebp)
movl   $0x0,-0x50(%ebp)
mov    %eax,-0x7c(%ebp)
mov    %eax,-0x44(%ebp)
movl   $0x0,-0x4c(%ebp)
movb   $0x0,-0x48(%ebp)
movl   $0x0,-0xd0(%ebp)
00
xchg   %ax,%ax
test   %bl,%bl
je     8068e2f <fts_children+0xd6f>
movzbl -0x3c(%ebp),%ebx
mov    -0xd0(%ebp),%eax
test   %bl,%bl
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
jne    80693b3 <fts_children+0x12f3>
mov    0x4(%eax),%ecx
xor    %edx,%edx
cmp    -0x40(%ebp),%ecx
je     8068ed0 <fts_children+0xe10>
mov    %edx,%eax
test   %al,%al
je     8068fe8 <fts_children+0xf28>
mov    -0x40(%ebp),%eax
add    %eax,-0x44(%ebp)
addl   $0x1,-0xd0(%ebp)
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd0(%ebp)
movb   $0x0,-0x48(%ebp)
je     8068f0e <fts_children+0xe4e>
xor    %ebx,%ebx
cmpb   $0x0,-0x54(%ebp)
jne    806917f <fts_children+0x10bf>
mov    -0x44(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069168 <fts_children+0x10a8>
movl   $0x1,-0x40(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x3c(%ebp)
mov    %eax,-0x38(%ebp)
movb   $0x1,-0x48(%ebp)
jmp    8068dd8 <fts_children+0xd18>
xchg   %ax,%ax
mov    0xc(%eax),%eax
cmp    %eax,0x34(%edi)
sete   %dl
test   %dl,%dl
jne    8068d43 <fts_children+0xc83>
test   %ebx,%ebx
je     80692ad <fts_children+0x11ed>
mov    -0xd4(%ebp),%eax
sub    (%eax,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%esi,%eax,8),%eax
movzbl 0x8(%eax),%edx
test   %dl,%dl
jne    8068e78 <fts_children+0xdb8>
mov    0x2c(%edi),%ecx
cmp    0x4(%eax),%ecx
jne    8068e81 <fts_children+0xdc1>
mov    %ecx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%edi),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8068e81 <fts_children+0xdc1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x44(%ebp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8068e00 <fts_children+0xd40>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
jmp    8068c06 <fts_children+0xb46>
mov    -0x7c(%ebp),%eax
mov    -0xe4(%ebp),%edi
mov    %eax,(%edi)
mov    -0xd8(%ebp),%eax
mov    %eax,(%esp)
call   806ac70 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8068bcc <fts_children+0xb0c>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80694bf <fts_children+0x13ff>
movb   $0x1,-0xc4(%ebp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    -0xb4(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0xb0(%ebp)
je     80692c8 <fts_children+0x1208>
cmp    $0xfffffffe,%eax
je     8069383 <fts_children+0x12c3>
test   %eax,%eax
jne    8068fc3 <fts_children+0xf03>
mov    -0xb4(%ebp),%eax
movl   $0x1,-0xb0(%ebp)
00
cmpb   $0x0,(%eax)
jne    806950c <fts_children+0x144c>
mov    -0xa8(%ebp),%eax
test   %eax,%eax
jne    80694e3 <fts_children+0x1423>
mov    %esi,(%esp)
movb   $0x1,-0xac(%ebp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8068c92 <fts_children+0xbd2>
movb   $0x0,-0xc4(%ebp)
jmp    8068c92 <fts_children+0xbd2>
xchg   %ax,%ax
mov    -0xd0(%ebp),%eax
test   %eax,%eax
je     8069268 <fts_children+0x11a8>
mov    -0xd0(%ebp),%edi
mov    -0xd4(%ebp),%eax
mov    (%eax,%edi,4),%ebx
sub    %ebx,-0xd0(%ebp)
test   %ebx,%ebx
je     8068dd4 <fts_children+0xd14>
movzbl -0x80(%ebp),%esi
lea    -0x88(%ebp),%edi
mov    %esi,%eax
test   %al,%al
je     8069042 <fts_children+0xf82>
movzbl -0x74(%ebp),%esi
mov    %esi,%eax
test   %al,%al
jne    8069085 <fts_children+0xfc5>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
sub    $0x1,%ebx
movb   $0x0,-0x80(%ebp)
je     80692a0 <fts_children+0x11e0>
xor    %esi,%esi
cmpb   $0x0,-0x8c(%ebp)
jne    80690af <fts_children+0xfef>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069098 <fts_children+0xfd8>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
mov    %esi,%eax
test   %al,%al
movb   $0x1,-0x80(%ebp)
je     806902d <fts_children+0xf6d>
mov    -0x70(%ebp),%esi
test   %esi,%esi
jne    806902d <fts_children+0xf6d>
call   8049e60 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80694bf <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    -0xcc(%ebp),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8069140 <fts_children+0x1080>
cmp    $0xfffffffe,%eax
je     8069150 <fts_children+0x1090>
test   %eax,%eax
jne    8069115 <fts_children+0x1055>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    806950c <fts_children+0x144c>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    80694e3 <fts_children+0x1423>
mov    %edi,(%esp)
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806907b <fts_children+0xfbb>
movb   $0x0,-0x8c(%ebp)
jmp    806907b <fts_children+0xfbb>
lea    0x0(%esi),%esi
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    806907b <fts_children+0xfbb>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    806907b <fts_children+0xfbb>
nop
lea    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80694bf <fts_children+0x13ff>
movb   $0x1,-0x54(%ebp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    -0x44(%ebp),%esi
lea    -0x50(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x40(%ebp)
je     80693a3 <fts_children+0x12e3>
cmp    $0xfffffffe,%eax
je     8069481 <fts_children+0x13c1>
test   %eax,%eax
jne    80691e4 <fts_children+0x1124>
mov    -0x44(%ebp),%eax
movl   $0x1,-0x40(%ebp)
cmpb   $0x0,(%eax)
jne    806950c <fts_children+0x144c>
mov    -0x38(%ebp),%edx
test   %edx,%edx
jne    80694e3 <fts_children+0x1423>
lea    -0x50(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
movb   $0x1,-0x3c(%ebp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8068e6d <fts_children+0xdad>
movb   $0x0,-0x54(%ebp)
jmp    8068e6d <fts_children+0xdad>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
mov    $0x1,%eax
cmp    %ecx,%edx
je     80692f6 <fts_children+0x1236>
mov    %edx,-0x10(%ebx)
mov    -0xb0(%ebp),%edx
test   %al,%al
mov    %al,-0x8(%ebx)
mov    %edx,-0xc(%ebx)
je     8069245 <fts_children+0x1185>
mov    -0xa8(%ebp),%eax
mov    %eax,-0x4(%ebx)
mov    -0xb4(%ebp),%edx
add    $0x28,%ebx
add    -0xb0(%ebp),%edx
movb   $0x0,-0xb8(%ebp)
mov    %edx,-0xb4(%ebp)
jmp    8068c50 <fts_children+0xb90>
xchg   %ax,%ax
movzbl -0x80(%ebp),%ebx
test   %bl,%bl
je     8069320 <fts_children+0x1260>
movzbl -0x74(%ebp),%ebx
test   %bl,%bl
jne    8069373 <fts_children+0x12b3>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
mov    -0x40(%ebp),%eax
movb   $0x0,-0x80(%ebp)
add    %eax,-0x44(%ebp)
movb   $0x0,-0x48(%ebp)
jmp    8068e2d <fts_children+0xd6d>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x48(%ebp),%ebx
jmp    8068dd0 <fts_children+0xd10>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ebx
mov    -0xd4(%ebp),%eax
mov    %ebx,(%eax,%ebx,4)
xor    %ebx,%ebx
jmp    8068d59 <fts_children+0xc99>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,-0xb0(%ebp)
00
movb   $0x0,-0xac(%ebp)
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
xor    %eax,%eax
movb   $0x1,-0xb8(%ebp)
cmp    %ecx,%edx
jne    8069229 <fts_children+0x1169>
mov    -0xb0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049820 <memcpy@plt>
mov    %ebx,-0x10(%ebx)
movzbl -0xac(%ebp),%eax
jmp    806922c <fts_children+0x116c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x8c(%ebp)
lea    -0x88(%ebp),%esi
jne    8069402 <fts_children+0x1342>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80693e5 <fts_children+0x1325>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
test   %bl,%bl
movb   $0x1,-0x80(%ebp)
je     8069280 <fts_children+0x11c0>
mov    -0x70(%ebp),%ecx
test   %ecx,%ecx
jne    8069280 <fts_children+0x11c0>
jmp    806908c <fts_children+0xfcc>
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,-0xac(%ebp)
mov    %eax,-0xb0(%ebp)
jmp    80692d9 <fts_children+0x1219>
movl   $0x1,-0x40(%ebp)
movb   $0x0,-0x3c(%ebp)
jmp    8068e6d <fts_children+0xdad>
mov    -0x38(%ebp),%edx
test   %edx,%edx
je     8068f19 <fts_children+0xe59>
mov    -0xd0(%ebp),%eax
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
cmpb   $0x0,0x8(%eax)
je     8068df2 <fts_children+0xd32>
cmp    0xc(%eax),%edx
sete   %al
jmp    8068e02 <fts_children+0xd42>
lea    -0x88(%ebp),%esi
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80694bf <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8069498 <fts_children+0x13d8>
cmp    $0xfffffffe,%eax
je     80694a8 <fts_children+0x13e8>
test   %eax,%eax
jne    806945c <fts_children+0x139c>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    806950c <fts_children+0x144c>
mov    -0x70(%ebp),%ebx
test   %ebx,%ebx
jne    80694e3 <fts_children+0x1423>
mov    %esi,(%esp)
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8069367 <fts_children+0x12a7>
movb   $0x0,-0x8c(%ebp)
jmp    8069367 <fts_children+0x12a7>
mov    -0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,-0x3c(%ebp)
mov    %eax,-0x40(%ebp)
jmp    8068e6d <fts_children+0xdad>
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8069367 <fts_children+0x12a7>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8069367 <fts_children+0x12a7>
movl   $0x806dee8,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806dee8,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806dee8,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x174(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%edi
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8069970 <fts_children+0x18b0>
movsbl (%edi),%eax
lea    0x38(%esp),%ebx
mov    %edi,0x44(%esp)
movb   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
movl   $0x0,0x3c(%esp)
movb   $0x0,0x40(%esp)
bt     %eax,%edx
jae    80698d0 <fts_children+0x1810>
movl   $0x1,0x48(%esp)
mov    %eax,0x50(%esp)
movb   $0x1,0x4c(%esp)
mov    0x50(%esp),%ebx
movb   $0x1,0x40(%esp)
test   %ebx,%ebx
je     8069b68 <fts_children+0x1aa8>
mov    0x20(%esp),%eax
movb   $0x0,0xa4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0x6c(%esp)
mov    %eax,0x7c(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x78(%esp)
mov    %eax,0xb4(%esp)
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
movb   $0x0,0xb0(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
movb   $0x1,0x28(%esp)
jne    8069820 <fts_children+0x1760>
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    8069b78 <fts_children+0x1ab8>
movl   $0x1,0xb8(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0xbc(%esp)
mov    %eax,0xc0(%esp)
mov    0xc0(%esp),%ecx
movb   $0x1,0xb0(%esp)
test   %ecx,%ecx
je     8069b60 <fts_children+0x1aa0>
mov    $0x1,%edx
cmpl   $0x9,0x24(%esp)
seta   %al
and    0x28(%esp),%al
mov    %al,0x14(%esp)
je     8069e35 <fts_children+0x1d75>
mov    0x24(%esp),%eax
lea    (%eax,%eax,4),%eax
cmp    %eax,0x1c(%esp)
jb     8069e30 <fts_children+0x1d70>
mov    0x1c(%esp),%esi
sub    0x2c(%esp),%esi
je     8069f7f <fts_children+0x1ebf>
movzbl 0x78(%esp),%ebx
lea    0x70(%esp),%edi
test   %bl,%bl
je     8069709 <fts_children+0x1649>
movzbl 0x84(%esp),%ebx
test   %bl,%bl
jne    806975e <fts_children+0x169e>
mov    0x80(%esp),%eax
add    %eax,0x7c(%esp)
sub    $0x1,%esi
movb   $0x0,0x78(%esp)
je     8069f90 <fts_children+0x1ed0>
xor    %ebx,%ebx
cmpb   $0x0,0x6c(%esp)
jne    8069bfd <fts_children+0x1b3d>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069be8 <fts_children+0x1b28>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movzbl 0x14(%esp),%ebx
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
test   %bl,%bl
movb   $0x1,0x78(%esp)
je     80696ee <fts_children+0x162e>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    80696ee <fts_children+0x162e>
movzbl 0x84(%esp),%eax
mov    %al,0x14(%esp)
cmpb   $0x0,0x14(%esp)
je     8069e78 <fts_children+0x1db8>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8069e78 <fts_children+0x1db8>
mov    0x20(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x18(%esp),%eax
call   8068b90 <fts_children+0xad0>
test   %al,%al
jne    806a4d5 <fts_children+0x2415>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi),%esi
addl   $0x1,0x24(%esp)
test   %dl,%dl
lea    0x1(%eax),%ebx
je     8069c98 <fts_children+0x1bd8>
cmpb   $0x0,0x4c(%esp)
je     8069c98 <fts_children+0x1bd8>
mov    0x50(%esp),%eax
cmp    %eax,0xc0(%esp)
sete   %al
test   %al,%al
jne    8069cd3 <fts_children+0x1c13>
mov    0xb4(%esp),%eax
add    0xb8(%esp),%eax
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0xb0(%esp)
mov    %eax,0xb4(%esp)
mov    %ebx,0x1c(%esp)
je     806964c <fts_children+0x158c>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0xb4(%esp),%ebx
lea    0xa8(%esp),%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xb8(%esp)
je     806a350 <fts_children+0x2290>
cmp    $0xfffffffe,%eax
je     8069bb8 <fts_children+0x1af8>
test   %eax,%eax
jne    80698a1 <fts_children+0x17e1>
mov    0xb4(%esp),%eax
movl   $0x1,0xb8(%esp)
00
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0xc0(%esp),%ecx
test   %ecx,%ecx
jne    8069f26 <fts_children+0x1e66>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
movb   $0x1,0xbc(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8069684 <fts_children+0x15c4>
movb   $0x0,0xa4(%esp)
jmp    8069684 <fts_children+0x15c4>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0x34(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x44(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     8069ba0 <fts_children+0x1ae0>
cmp    $0xfffffffe,%eax
je     806a413 <fts_children+0x2353>
test   %eax,%eax
jne    806994d <fts_children+0x188d>
mov    0x44(%esp),%eax
movl   $0x1,0x48(%esp)
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0x50(%esp),%esi
test   %esi,%esi
jne    8069f26 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x4c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     80695bd <fts_children+0x14fd>
movb   $0x0,0x34(%esp)
jmp    80695bd <fts_children+0x14fd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%edi
movzbl (%ecx),%eax
mov    %eax,%ebx
test   %bl,%bl
mov    %al,0x14(%esp)
mov    %edi,%eax
je     8069ae8 <fts_children+0x1a28>
cmpb   $0x0,(%edi)
je     8069b60 <fts_children+0x1aa0>
lea    0x1(%edi),%esi
xor    %ebx,%ebx
mov    %ecx,0x28(%esp)
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movb   $0x1,0x24(%esp)
mov    0x18(%esp),%eax
add    %ebx,%eax
add    $0x1,%ebx
mov    %eax,0x1c(%esp)
movzbl 0x14(%esp),%eax
cmp    -0x1(%esi),%al
je     8069b08 <fts_children+0x1a48>
cmpb   $0x0,(%esi)
je     8069b60 <fts_children+0x1aa0>
add    $0x1,%edi
cmp    $0x9,%ebx
jbe    8069a4d <fts_children+0x198d>
cmpb   $0x0,0x24(%esp)
je     8069a4d <fts_children+0x198d>
lea    (%ebx,%ebx,4),%eax
cmp    %eax,%edi
jb     8069a48 <fts_children+0x1988>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     8069a11 <fts_children+0x1951>
mov    %edi,%eax
sub    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049d00 <strnlen@plt>
mov    %edi,0x2c(%esp)
add    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax)
jne    8069a48 <fts_children+0x1988>
mov    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
lea    0x30(%esp),%ecx
mov    %ebp,%edx
mov    %ecx,(%esp)
mov    %eax,%ecx
mov    %esi,%eax
call   8068a30 <fts_children+0x970>
test   %al,%al
jne    806a4d5 <fts_children+0x2415>
movl   $0x0,0x28(%esp)
movb   $0x0,0x24(%esp)
jmp    8069a4d <fts_children+0x198d>
xchg   %ax,%ax
movb   $0x1,0x24(%esp)
add    $0x1,%esi
jmp    80699ac <fts_children+0x18ec>
lea    0x0(%esi),%esi
mov    0x124(%esp),%ebx
mov    0x128(%esp),%eax
movb   $0x0,0x120(%esp)
add    %ebx,%eax
mov    0x1c(%esp),%ebx
mov    %eax,0x124(%esp)
add    $0x2,%ebx
cmpb   $0x0,0x114(%esp)
mov    %ebx,%esi
jne    806a08a <fts_children+0x1fca>
xchg   %ax,%ax
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    806a2c0 <fts_children+0x2200>
movl   $0x1,0x128(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0x12c(%esp)
mov    %eax,0x130(%esp)
mov    0x130(%esp),%eax
movb   $0x1,0x120(%esp)
test   %eax,%eax
jne    806a003 <fts_children+0x1f43>
mov    0xb4(%esp),%eax
xchg   %ax,%ax
mov    0x14c(%esp),%edi
xor    %gs:0x14,%edi
jne    806a4de <fts_children+0x241e>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
movzbl 0x1(%ebp),%eax
test   %al,%al
je     8069b54 <fts_children+0x1a94>
movzbl (%esi),%ecx
test   %cl,%cl
je     8069b60 <fts_children+0x1aa0>
cmp    %cl,%al
lea    0x2(%edi),%edx
jne    8069f78 <fts_children+0x1eb8>
neg    %edi
lea    0x0(%ebp,%edi,1),%ebp
add    0x1c(%esp),%edi
jmp    8069b4b <fts_children+0x1a8b>
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
je     8069b60 <fts_children+0x1aa0>
add    $0x1,%edx
cmp    %cl,%al
jne    8069f78 <fts_children+0x1eb8>
movzbl 0x0(%ebp,%edx,1),%eax
test   %al,%al
jne    8069b38 <fts_children+0x1a78>
mov    0x1c(%esp),%eax
jmp    8069ae8 <fts_children+0x1a28>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8069ae8 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
jmp    8069ae8 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0xa4(%esp)
jmp    8069820 <fts_children+0x1760>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x48(%esp)
movb   $0x0,0x4c(%esp)
movb   $0x1,0x40(%esp)
jmp    80695ce <fts_children+0x150e>
nop
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0xbc(%esp)
mov    %eax,0xb8(%esp)
movb   $0x1,0xb0(%esp)
xor    %edx,%edx
jmp    80696a0 <fts_children+0x15e0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     8069e40 <fts_children+0x1d80>
cmp    $0xfffffffe,%eax
je     8069e58 <fts_children+0x1d98>
test   %eax,%eax
jne    8069c71 <fts_children+0x1bb1>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0x88(%esp),%edx
test   %edx,%edx
jne    8069f26 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x84(%esp)
call   8049830 <mbsinit@plt>
movzbl 0x14(%esp),%ebx
test   %eax,%eax
je     8069755 <fts_children+0x1695>
movb   $0x0,0x6c(%esp)
jmp    8069755 <fts_children+0x1695>
mov    0xb8(%esp),%edx
xor    %eax,%eax
cmp    0x48(%esp),%edx
jne    80697e9 <fts_children+0x1729>
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     80697f1 <fts_children+0x1731>
mov    0xbc(%esp),%edx
lea    0x118(%esp),%edi
mov    0xa4(%esp),%eax
mov    %edx,0xf4(%esp)
mov    0xc0(%esp),%edx
mov    %eax,0xdc(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0xf8(%esp)
mov    0xc4(%esp),%edx
mov    %eax,0xe0(%esp)
mov    0xac(%esp),%eax
mov    %edx,0xfc(%esp)
mov    0xc8(%esp),%edx
mov    %eax,0xe4(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x100(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0xe8(%esp)
mov    0xb4(%esp),%eax
movb   $0x0,0xe8(%esp)
mov    %edx,0x104(%esp)
mov    0xd0(%esp),%edx
mov    %eax,0xec(%esp)
mov    0xb8(%esp),%eax
add    %eax,0xec(%esp)
mov    %edx,0x108(%esp)
mov    0xd4(%esp),%edx
mov    %eax,0xf0(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x10c(%esp)
mov    0xd8(%esp),%edx
mov    %eax,0x124(%esp)
mov    %edx,0x110(%esp)
movb   $0x0,0x114(%esp)
movsbl (%eax),%eax
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movb   $0x0,0x120(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806d5e0(,%edx,4),%edx
bt     %eax,%edx
jae    8069e98 <fts_children+0x1dd8>
movl   $0x1,0x128(%esp)
00
mov    %eax,0x130(%esp)
movb   $0x1,0x12c(%esp)
mov    0x130(%esp),%edx
movb   $0x1,0x120(%esp)
test   %edx,%edx
jne    8069a58 <fts_children+0x1998>
call   8049e60 <abort@plt>
nop
movb   $0x1,0x28(%esp)
mov    0x1c(%esp),%eax
jmp    80697c0 <fts_children+0x1700>
xchg   %ax,%ax
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
jmp    8069755 <fts_children+0x1695>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x84(%esp)
mov    %eax,0x80(%esp)
jmp    8069755 <fts_children+0x1695>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x1,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    80697c0 <fts_children+0x1700>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     806a452 <fts_children+0x2392>
cmp    $0xfffffffe,%eax
je     806a471 <fts_children+0x23b1>
test   %eax,%eax
jne    8069f50 <fts_children+0x1e90>
mov    0x124(%esp),%ebx
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%ebx)
jne    806a4e3 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
je     8069f50 <fts_children+0x1e90>
movl   $0x806dee8,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8069e13 <fts_children+0x1d53>
movb   $0x0,0x114(%esp)
jmp    8069e13 <fts_children+0x1d53>
lea    0x0(%esi),%esi
mov    %edx,%edi
jmp    80699d3 <fts_children+0x1913>
cmpb   $0x0,0x78(%esp)
jne    8069769 <fts_children+0x16a9>
lea    0x0(%esi),%esi
cmpb   $0x0,0x6c(%esp)
lea    0x70(%esp),%ebx
jne    806a381 <fts_children+0x22c1>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806a368 <fts_children+0x22a8>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
movb   $0x1,0x78(%esp)
jmp    8069775 <fts_children+0x16b5>
lea    0x0(%esi),%esi
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
movb   $0x1,0x120(%esp)
movzbl 0xe8(%esp),%ebx
test   %bl,%bl
je     806a130 <fts_children+0x2070>
movzbl 0xf4(%esp),%ebx
test   %bl,%bl
jne    806a195 <fts_children+0x20d5>
mov    0xf0(%esp),%edx
mov    $0x1,%eax
cmp    0x128(%esp),%edx
je     806a298 <fts_children+0x21d8>
test   %al,%al
lea    0x1(%esi),%edx
jne    806a348 <fts_children+0x2288>
mov    0xf0(%esp),%eax
mov    %edx,%esi
add    %eax,0xec(%esp)
mov    0x124(%esp),%eax
add    0x128(%esp),%eax
cmpb   $0x0,0x114(%esp)
movb   $0x0,0xe8(%esp)
mov    %eax,0x124(%esp)
movb   $0x0,0x120(%esp)
je     8069a90 <fts_children+0x19d0>
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     8069fe8 <fts_children+0x1f28>
cmp    $0xfffffffe,%eax
je     806a2f8 <fts_children+0x2238>
test   %eax,%eax
jne    806a104 <fts_children+0x2044>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
jne    8069f26 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8069ac8 <fts_children+0x1a08>
movb   $0x0,0x114(%esp)
jmp    8069ac8 <fts_children+0x1a08>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0xdc(%esp)
lea    0xe0(%esp),%ebp
jne    806a1e7 <fts_children+0x2127>
mov    0xec(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806a1c8 <fts_children+0x2108>
movl   $0x1,0xf0(%esp)
00
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
mov    %eax,0xf8(%esp)
test   %bl,%bl
movb   $0x1,0xe8(%esp)
je     806a023 <fts_children+0x1f63>
mov    0xf8(%esp),%eax
test   %eax,%eax
je     8069ae8 <fts_children+0x1a28>
cmpb   $0x0,0x12c(%esp)
je     806a023 <fts_children+0x1f63>
cmp    0x130(%esp),%eax
setne  %al
jmp    806a03c <fts_children+0x1f7c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe0(%esp),%ebp
mov    %ebp,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0xdc(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0xec(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xf0(%esp)
je     806a2e0 <fts_children+0x2220>
cmp    $0xfffffffe,%eax
je     806a320 <fts_children+0x2260>
test   %eax,%eax
jne    806a269 <fts_children+0x21a9>
mov    0xec(%esp),%eax
movl   $0x1,0xf0(%esp)
00
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0xf8(%esp),%eax
test   %eax,%eax
jne    8069f26 <fts_children+0x1e66>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a185 <fts_children+0x20c5>
movb   $0x0,0xdc(%esp)
jmp    806a185 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x124(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049880 <memcmp@plt>
test   %eax,%eax
setne  %al
jmp    806a03c <fts_children+0x1f7c>
mov    %edi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
jmp    806a08a <fts_children+0x1fca>
lea    0x0(%esi),%esi
movl   $0x1,0xf0(%esp)
00
movb   $0x0,0xf4(%esp)
jmp    806a185 <fts_children+0x20c5>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    8069ffb <fts_children+0x1f3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0xf4(%esp)
mov    %eax,0xf0(%esp)
jmp    806a185 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    80697f1 <fts_children+0x1731>
nop
movl   $0x1,0xb8(%esp)
00
movb   $0x0,0xbc(%esp)
jmp    8069bd6 <fts_children+0x1b16>
lea    0x70(%esp),%ebx
mov    %ebx,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806a4b1 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     806a494 <fts_children+0x23d4>
cmp    $0xfffffffe,%eax
je     806a42d <fts_children+0x236d>
test   %eax,%eax
jne    806a3f1 <fts_children+0x2331>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    806a4e3 <fts_children+0x2423>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8069f26 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x84(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     8069fdb <fts_children+0x1f1b>
movb   $0x0,0x6c(%esp)
jmp    8069fdb <fts_children+0x1f1b>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
jmp    8069bad <fts_children+0x1aed>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
mov    %eax,0x80(%esp)
jmp    8069fdb <fts_children+0x1f1b>
movl   $0x1,0x128(%esp)
00
mov    0x124(%esp),%ebx
movb   $0x0,0x12c(%esp)
jmp    8069a5f <fts_children+0x199f>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    8069a5f <fts_children+0x199f>
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
jmp    8069fdb <fts_children+0x1f1b>
movl   $0x806dee8,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
mov    0x30(%esp),%eax
jmp    8069ae8 <fts_children+0x1a28>
call   80498f0 <__stack_chk_fail@plt>
movl   $0x806dee8,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
lea    0x4c(%esp),%ebx
mov    0x1078(%esp),%edi
lea    0x44(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0x107c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
mov    0x1080(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
call   8049b90 <iconv@plt>
mov    0x1074(%esp),%eax
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    %eax,0x40(%esp)
test   %eax,%eax
lea    0x48(%esp),%eax
mov    %eax,0x18(%esp)
jne    806a5b8 <fts_children+0x24f8>
jmp    806a608 <fts_children+0x2548>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x40(%esp),%edx
sub    %ebx,%eax
add    %eax,%esi
test   %edx,%edx
je     806a608 <fts_children+0x2548>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1000,0x48(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
jne    806a5a8 <fts_children+0x24e8>
call   8049c80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x7,%eax
je     806a5a8 <fts_children+0x24e8>
cmp    $0x16,%eax
jne    806a79b <fts_children+0x26db>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
movl   $0x1000,0x48(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
je     806a79b <fts_children+0x26db>
mov    0x44(%esp),%eax
sub    %ebx,%eax
add    %eax,%esi
mov    %esi,0x1c(%esp)
je     806a7a8 <fts_children+0x26e8>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     806a778 <fts_children+0x26b8>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edx
cmp    (%eax),%edx
ja     806a778 <fts_children+0x26b8>
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x0,0xc(%esp)
lea    0x3c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049b90 <iconv@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x1074(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x1074(%esp),%eax
jmp    806a701 <fts_children+0x2641>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
je     806a7b8 <fts_children+0x26f8>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    806a6d8 <fts_children+0x2618>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
je     806a7c6 <fts_children+0x2706>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    806a7f3 <fts_children+0x2733>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    0x20(%esp),%eax
mov    %ecx,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    806a7f8 <fts_children+0x2738>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    806a675 <fts_children+0x25b5>
call   8049c80 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%ebx
jmp    806a754 <fts_children+0x2694>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
xor    %ebx,%ebx
movl   $0x0,(%eax)
jmp    806a754 <fts_children+0x2694>
xchg   %ax,%ax
call   8049c80 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     806a705 <fts_children+0x2645>
mov    0x24(%esp),%ecx
mov    $0xffffffff,%ebx
mov    0x28(%esp),%edi
cmp    %edi,(%ecx)
je     806a754 <fts_children+0x2694>
call   8049c80 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %edi,(%esp)
call   8049800 <free@plt>
mov    %ebp,(%esi)
jmp    806a754 <fts_children+0x2694>
call   8049e60 <abort@plt>
call   80498f0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8049b80 <strlen@plt>
mov    %eax,%ebx
shl    $0x4,%ebx
cmp    $0xfff,%eax
cmova  %eax,%ebx
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806a9c9 <fts_children+0x2909>
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049b90 <iconv@plt>
mov    %esi,0x28(%esp)
mov    %ebx,0x2c(%esp)
jmp    806a8d4 <fts_children+0x2814>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     806a95b <fts_children+0x289b>
cmp    $0x7,%ebx
jne    806a9b4 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    806a9a8 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049aa0 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806a9a8 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
je     806a878 <fts_children+0x27b8>
jmp    806a95b <fts_children+0x289b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049c80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x7,%ebx
jne    806a9b4 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    806a9a8 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049aa0 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806a9a8 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049b90 <iconv@plt>
cmp    $0xffffffff,%eax
je     806a910 <fts_children+0x2850>
mov    0x28(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
movb   $0x0,(%eax)
mov    0x28(%esp),%eax
sub    %esi,%eax
cmp    %edi,%eax
jb     806a9d8 <fts_children+0x2918>
mov    %esi,%eax
jmp    806a9c1 <fts_children+0x2901>
movl   $0xc,0x0(%ebp)
mov    $0xc,%ebx
mov    %esi,(%esp)
call   8049800 <free@plt>
xor    %eax,%eax
mov    %ebx,0x0(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049c80 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    806a9c1 <fts_children+0x2901>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049aa0 <realloc@plt>
test   %eax,%eax
cmove  %esi,%eax
jmp    806a9c1 <fts_children+0x2901>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     806aa17 <fts_children+0x2957>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80682e0 <fts_children+0x220>
test   %eax,%eax
jne    806aa30 <fts_children+0x2970>
mov    %ebx,(%esp)
call   8049c70 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     806aa80 <fts_children+0x29c0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049e80 <iconv_open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     806aa94 <fts_children+0x29d4>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806a800 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     806aa98 <fts_children+0x29d8>
mov    %esi,(%esp)
call   8049ba0 <iconv_close@plt>
test   %eax,%eax
jns    806aa25 <fts_children+0x2965>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049800 <free@plt>
mov    %edi,(%esi)
jmp    806aa25 <fts_children+0x2965>
call   8049c80 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %ebx,%ebx
jmp    806aa25 <fts_children+0x2965>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   8049ba0 <iconv_close@plt>
mov    %edi,(%ebx)
xor    %ebx,%ebx
jmp    806aa25 <fts_children+0x2965>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806aaf0 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    806ab50 <fts_children+0x2a90>
mov    0x8073c34,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     806abf8 <fts_children+0x2b38>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049c30 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     806ab70 <fts_children+0x2ab0>
movl   $0x1,0x8073c34
00
test   %ebx,%ebx
js     806ab47 <fts_children+0x2a87>
cmpl   $0xffffffff,0x8073c34
je     806aba0 <fts_children+0x2ae0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049c30 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049c80 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    806ab30 <fts_children+0x2a70>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806aaf0 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%ebx
js     806ab47 <fts_children+0x2a87>
movl   $0xffffffff,0x8073c34
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049c30 <fcntl@plt>
test   %eax,%eax
js     806abd4 <fts_children+0x2b14>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049c30 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    806ab47 <fts_children+0x2a87>
call   8049c80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049eb0 <close@plt>
mov    %edi,(%esi)
jmp    806ab47 <fts_children+0x2a87>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806aaf0 <fts_children+0x2a30>
mov    %eax,%ebx
jmp    806ab3a <fts_children+0x2a7a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
lea    0x8(%eax),%edx
cmp    %edx,%eax
ja     806ac68 <fts_children+0x2ba8>
mov    %edx,(%esp)
call   8049ab0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     806ac68 <fts_children+0x2ba8>
lea    0x8(%eax),%ebx
mov    $0xff00ff01,%edx
movl   $0x1415fb4a,0x4(%eax)
mov    %ebx,%eax
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    %eax,%edx
mov    0x8073c40(,%eax,4),%eax
mov    %ebx,0x8073c40(,%edx,4)
mov    %eax,(%ecx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%ebx
test   %ebx,%ebx
je     806ac82 <fts_children+0x2bc2>
cmpl   $0x1415fb4a,-0x4(%ebx)
je     806ac88 <fts_children+0x2bc8>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    $0xff00ff01,%edx
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    0x8073c40(,%eax,4),%ecx
test   %ecx,%ecx
je     806ac82 <fts_children+0x2bc2>
cmp    %ecx,%ebx
jne    806acb6 <fts_children+0x2bf6>
jmp    806acd5 <fts_children+0x2c15>
cmp    %edx,%ebx
je     806acc0 <fts_children+0x2c00>
mov    %edx,%ecx
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    806acb0 <fts_children+0x2bf0>
jmp    806ac82 <fts_children+0x2bc2>
nop
sub    $0x8,%ecx
mov    -0x8(%ebx),%eax
sub    $0x8,%ebx
mov    %eax,(%ecx)
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8049800 <free@plt>
lea    0x8073c40(,%eax,4),%ecx
jmp    806acc3 <fts_children+0x2c03>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
call   80499e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    806ae80 <fts_children+0x2dc0>
mov    %ebx,0x24(%esp)
mov    %ebx,%edx
xor    %ebx,%ebx
movb   $0x0,0x14(%esp)
lea    0x30(%esp),%edi
movl   $0x0,0x18(%esp)
lea    0x18(%esp),%esi
movl   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
nop
cmpb   $0x0,0x14(%esp)
jne    806ada5 <fts_children+0x2ce5>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806d5e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806ad90 <fts_children+0x2cd0>
movl   $0x1,0x28(%esp)
movsbl (%edx),%eax
movb   $0x1,0x2c(%esp)
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
movb   $0x1,0x20(%esp)
test   %eax,%eax
jne    806ae31 <fts_children+0x2d71>
mov    %ebx,%eax
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    806aef9 <fts_children+0x2e39>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806ae8d <fts_children+0x2dcd>
movb   $0x1,0x14(%esp)
call   80499e0 <__ctype_get_mb_cur_max@plt>
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8062240 <__sprintf_chk@plt+0x18330>
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049a40 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x28(%esp)
je     806ae50 <fts_children+0x2d90>
cmp    $0xfffffffe,%eax
je     806ae68 <fts_children+0x2da8>
test   %eax,%eax
jne    806ae06 <fts_children+0x2d46>
mov    0x24(%esp),%ebp
movl   $0x1,0x28(%esp)
cmpb   $0x0,0x0(%ebp)
jne    806aed5 <fts_children+0x2e15>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    806aeb1 <fts_children+0x2df1>
mov    %esi,(%esp)
movb   $0x1,0x2c(%esp)
call   8049830 <mbsinit@plt>
test   %eax,%eax
je     806ad62 <fts_children+0x2ca2>
mov    0x30(%esp),%eax
movb   $0x0,0x14(%esp)
movb   $0x1,0x20(%esp)
test   %eax,%eax
je     806ad73 <fts_children+0x2cb3>
mov    0x24(%esp),%ebp
mov    0x28(%esp),%edx
add    $0x1,%ebx
movb   $0x0,0x20(%esp)
add    %ebp,%edx
mov    %edx,0x24(%esp)
jmp    806ad30 <fts_children+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x28(%esp)
mov    0x24(%esp),%ebp
movb   $0x0,0x2c(%esp)
jmp    806ae35 <fts_children+0x2d75>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8049b80 <strlen@plt>
movb   $0x0,0x2c(%esp)
mov    %eax,0x28(%esp)
jmp    806ae35 <fts_children+0x2d75>
nop
mov    %ebx,(%esp)
call   8049b80 <strlen@plt>
jmp    806ad75 <fts_children+0x2cb5>
movl   $0x806defb,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d4f5,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806defb,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d523,(%esp)
call   8049ee0 <__assert_fail@plt>
movl   $0x806defb,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806d4eb,0x4(%esp)
movl   $0x806d50c,(%esp)
call   8049ee0 <__assert_fail@plt>
call   80498f0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    806af50 <fts_children+0x2e90>
cmp    %ebp,%ecx
ja     806af88 <fts_children+0x2ec8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    806af38 <fts_children+0x2e78>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     806af78 <fts_children+0x2eb8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806af98 <fts_children+0x2ed8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    806b008 <fts_children+0x2f48>
cmp    %edx,%eax
jb     806b008 <fts_children+0x2f48>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     806b018 <fts_children+0x2f58>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    806aff9 <fts_children+0x2f39>
cmp    (%esp),%esi
je     806b018 <fts_children+0x2f58>
mov    %edi,%eax
xor    %edx,%edx
jmp    806af7c <fts_children+0x2ebc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    806af7c <fts_children+0x2ebc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    806b078 <fts_children+0x2fb8>
cmp    %edi,%esi
jbe    806b0b0 <fts_children+0x2ff0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     806b0d0 <fts_children+0x3010>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806b0e0 <fts_children+0x3020>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     806b178 <fts_children+0x30b8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    806b0c1 <fts_children+0x3001>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    806b06b <fts_children+0x2fab>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     806b164 <fts_children+0x30a4>
cmp    %eax,0xc(%esp)
jb     806b160 <fts_children+0x30a0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    806b13e <fts_children+0x307e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    806b13e <fts_children+0x307e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     806b091 <fts_children+0x2fd1>
jmp    806b0a1 <fts_children+0x2fe1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804af40 <__sprintf_chk@plt+0x1030>
add    $0x7e65,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   8049730 <__ctype_toupper_loc@plt-0x40>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     806b1e9 <fts_children+0x3129>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    806b1c8 <fts_children+0x3108>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    806b200 <fts_children+0x3140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804af40 <__sprintf_chk@plt+0x1030>
add    $0x7dea,%ebx
sub    $0x18,%esp
lea    0x204(%ebx),%eax
test   %eax,%eax
je     806b248 <fts_children+0x3188>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a50 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    806b22b <fts_children+0x316b>
push   %ebx
sub    $0x8,%esp
call   804af40 <__sprintf_chk@plt+0x1030>
add    $0x7dab,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    806b2f3 <_IO_stdin_used+0x8f>
arpl   %sp,0x74(%ecx)
imul   $0x20736120,0x6e(%edi),%ebp
daa
gs
addr16 jb 806b2f8 <_IO_stdin_used+0x94>
jo     806b2bc <_IO_stdin_used+0x58>
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     806b303 <_IO_stdin_used+0x9f>
arpl   %sp,0x74(%ecx)
gs cmp %fs:%gs:(%eax),%esp
jne    806b31a <_IO_stdin_used+0xb6>
and    %ah,%gs:(%edi)
addr16 jb 806b312 <_IO_stdin_used+0xae>
jo     806b2cf <_IO_stdin_used+0x6b>
sub    $0x69202745,%eax
outsb  %ds:(%esi),(%dx)
jae    806b32b <_IO_stdin_used+0xc7>
gs
popa
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
je     806b337 <_IO_stdin_used+0xd3>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x65(%edx)
addr16 jne 806b348 <_IO_stdin_used+0xe4>
popa
jb     806b2ff <_IO_stdin_used+0x9b>
gs
js     806b352 <_IO_stdin_used+0xee>
jb     806b349 <_IO_stdin_used+0xe5>
jae    806b359 <_IO_stdin_used+0xf5>
imul   $0x52452820,0x6e(%edi),%ebp
inc    %ebp
sub    %ebp,(%esi)
or     (%eax),%al
add    %al,(%eax)
or     $0xb3,%al
push   %es
or     %dl,(%eax)
mov    $0x4,%al
or     %al,%al
mov    $0x4,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x67(%ebp)
jb     806b375 <_IO_stdin_used+0x111>
jo     806b312 <_IO_stdin_used+0xae>
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %ch,(%ecx)
sub    %bl,0x5e(%ebx)
pop    %ebx
cmp    0x6c(%ecx),%ah
outsb  %ds:(%esi),(%dx)
jne    806b39a <_IO_stdin_used+0x136>
cmp    0x5f(%ebp),%bl
pop    %ebp
jl     806b357 <_IO_stdin_used+0xf3>
sub    %eax,(%eax)
pop    %esp
sub    %ebx,0x5b(%eax,%ebp,1)
pop    %esi
pop    %ebx
cmp    0x6c(%ecx),%ah
outsb  %ds:(%esi),(%dx)
jne    806b3af <_IO_stdin_used+0x14b>
cmp    0x5f(%ebp),%bl
pop    %ebp
pop    %esp
jl     806b36d <_IO_stdin_used+0x109>
pop    %esp
sub    %eax,(%eax)
sub    %esp,(%eax,%eax,1)
pop    %esp
sub    %esp,(%eax,%eax,1)
sbb    0x25(%ebx),%ebx
jae    806b3c5 <_IO_stdin_used+0x161>
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
add    %ch,0x6e(%ecx)
jbe    806b3c2 <_IO_stdin_used+0x15e>
insb   (%dx),%es:(%edi)
imul   $0x68637461,0x6d(%eax,%eiz,1),%esp
gs
jb     806b38d <_IO_stdin_used+0x129>
and    $0x6e690073,%eax
jo     806b3e9 <_IO_stdin_used+0x185>
je     806b396 <_IO_stdin_used+0x132>
imul   $0x206f6f74,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
popa
jb     806b3e8 <_IO_stdin_used+0x184>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806b38c <_IO_stdin_used+0x128>
or     %ecx,(%eax)
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     806b39b <_IO_stdin_used+0x137>
jb     806b402 <_IO_stdin_used+0x19e>
arpl   %si,0x72(%ebp)
jae    806b40b <_IO_stdin_used+0x1a7>
jbe    806b409 <_IO_stdin_used+0x1a5>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806b3cf <_IO_stdin_used+0x16b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     806b3b4 <_IO_stdin_used+0x150>
ja     806b417 <_IO_stdin_used+0x1b3>
jb     806b426 <_IO_stdin_used+0x1c2>
imul   $0x7325203a,0x67(%esi),%ebp
cmp    (%eax),%ah
and    $0x736c0073,%eax
gs imul $0x66,%gs:(%eax),%esp
popa
imul   $0x6e694200,0x64(%ebp,%eiz,2),%ebp
popa
jb     806b450 <_IO_stdin_used+0x1ec>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x616d2073
je     806b447 <_IO_stdin_used+0x1e3>
push   $0xa7365
and    $0xa646c6c,%eax
add    %ch,(%eax)
jae    806b466 <_IO_stdin_used+0x202>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806b45c <_IO_stdin_used+0x1f8>
and    %ch,0x6e(%ecx)
jo     806b472 <_IO_stdin_used+0x20e>
je     806b428 <_IO_stdin_used+0x1c4>
add    %cl,(%edx)
push   %edx
gs
jo     806b474 <_IO_stdin_used+0x210>
jb     806b47b <_IO_stdin_used+0x217>
and    %ah,0x75(%edx)
addr16 jae 806b42d <_IO_stdin_used+0x1c9>
je     806b47e <_IO_stdin_used+0x21a>
cmp    (%eax),%ah
and    $0x62000a73,%eax
jne    806b47f <_IO_stdin_used+0x21b>
sub    $0x70657267,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    806b450 <_IO_stdin_used+0x1ec>
outsl  %ds:(%esi),(%dx)
jb     806b48c <_IO_stdin_used+0x228>
add    %al,0x4e(%edi)
push   %ebp
and    %al,0x72(%edi)
gs
jo     806b44f <_IO_stdin_used+0x1eb>
push   $0x20656d6f
jo     806b497 <_IO_stdin_used+0x233>
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    806b47c <_IO_stdin_used+0x218>
or     (%eax),%al
insl   (%dx),%es:(%edi)
je     806b443 <_IO_stdin_used+0x1df>
das
jne    806b4b9 <_IO_stdin_used+0x255>
jb     806b477 <_IO_stdin_used+0x213>
jae    806b4b2 <_IO_stdin_used+0x24e>
popa
jb     806b4b2 <_IO_stdin_used+0x24e>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %dh,0x65(%edx)
popa
add    %dh,%fs:0x6b(%ebx)
imul   $0x6e6b6e75,0x0(%eax),%esi
outsl  %ds:(%esi),(%dx)
ja     806b4e1 <_IO_stdin_used+0x27d>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x656d2073,0x65(%ebx),%esp
je     806b4e8 <_IO_stdin_used+0x284>
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x67(%esi)
jb     806b4ec <_IO_stdin_used+0x288>
jo     806b489 <_IO_stdin_used+0x225>
jo     806b4f0 <_IO_stdin_used+0x28c>
jb     806b4f9 <_IO_stdin_used+0x295>
add    %ch,0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x766e6900,0x73(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x63207861,0x6d(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jne    806b51a <_IO_stdin_used+0x2b6>
je     806b4ae <_IO_stdin_used+0x24a>
bound  %ebp,0x6e(%ecx)
popa
jb     806b52d <_IO_stdin_used+0x2c9>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     806b53c <_IO_stdin_used+0x2d8>
sub    $0x656c6966,%eax
jae    806b4ea <_IO_stdin_used+0x286>
je     806b545 <_IO_stdin_used+0x2e1>
jo     806b533 <_IO_stdin_used+0x2cf>
add    %bh,0x65(%ecx)
jae    806b4d3 <_IO_stdin_used+0x26f>
outsw  %ds:(%esi),(%dx)
jb     806b53a <_IO_stdin_used+0x2d6>
add    %ch,%gs:0x65(%esi)
jbe    806b542 <_IO_stdin_used+0x2de>
jb     806b4df <_IO_stdin_used+0x27b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x75(%ecx)
je     806b55a <_IO_stdin_used+0x2f6>
add    %ch,0x66(%ecx)
sub    $0x797474,%eax
inc    %edi
push   %edx
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
add    %al,0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
push   %ebx
add    %cl,0x69(%ebp)
imul   $0x48,0x20(%ebp),%esp
popa
gs
jb     806b588 <_IO_stdin_used+0x324>
gs
insb   (%dx),%es:(%edi)
add    %dh,(%edx)
xor    %esi,%cs:(%esi)
add    %al,0x4e(%edi)
push   %ebp
and    %ah,0x72(%edi)
gs
jo     806b525 <_IO_stdin_used+0x2c1>
jb     806b58c <_IO_stdin_used+0x328>
arpl   %si,0x72(%ebp)
jae    806b591 <_IO_stdin_used+0x32d>
add    %ah,0x61(%edx)
jae    806b59a <_IO_stdin_used+0x336>
arpl   %bp,0x65676572
js     806b5a9 <_IO_stdin_used+0x345>
add    %ah,0x78(%ebp)
je     806b5a3 <_IO_stdin_used+0x33f>
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     806b5b9 <_IO_stdin_used+0x355>
add    %ah,0x69(%esi)
js     806b5b3 <_IO_stdin_used+0x34f>
fs
sub    $0x65676572,%eax
js     806b5c6 <_IO_stdin_used+0x362>
add    %ah,0x69(%esi)
js     806b5c0 <_IO_stdin_used+0x35c>
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 806b565 <_IO_stdin_used+0x301>
jo     806b5cc <_IO_stdin_used+0x368>
jb     806b5d5 <_IO_stdin_used+0x371>
sub    $0x65676572,%eax
js     806b5e0 <_IO_stdin_used+0x37c>
add    %ah,0x66(%ecx)
je     806b5da <_IO_stdin_used+0x376>
jb     806b5a4 <_IO_stdin_used+0x340>
arpl   %bp,0x6e(%edi)
je     806b5e1 <_IO_stdin_used+0x37d>
js     806b5f2 <_IO_stdin_used+0x38e>
add    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     806b5ea <_IO_stdin_used+0x386>
sub    $0x746e6f63,%eax
gs
js     806b601 <_IO_stdin_used+0x39d>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     806b60d <_IO_stdin_used+0x3a9>
sub    $0x656c6966,%eax
jae    806b59b <_IO_stdin_used+0x337>
bound  %edi,0x74(%ecx)
gs
sub    $0x7366666f,%eax
gs
je     806b5a7 <_IO_stdin_used+0x343>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806b5ad <_IO_stdin_used+0x349>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jne    806b625 <_IO_stdin_used+0x3c1>
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x78650073,0x65(%ebx),%esp
arpl   %bp,0x64(%ebp,%esi,2)
add    %ah,%gs:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x6d6f7266,%eax
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x726964,%eax
imul   $0x6966,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
gs
jae    806b615 <_IO_stdin_used+0x3b1>
ja     806b653 <_IO_stdin_used+0x3ef>
je     806b654 <_IO_stdin_used+0x3f0>
sub    $0x6374616d,%eax
push   $0x66007365
imul   $0x7469772d,0x73(%ebp,%eiz,2),%ebp
push   $0x2d74756f
insl   (%dx),%es:(%edi)
popa
je     806b66a <_IO_stdin_used+0x406>
push   $0x6c656800
jo     806b60e <_IO_stdin_used+0x3aa>
imul   $0x6564756c,0x63(%esi),%ebp
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806b681 <_IO_stdin_used+0x41d>
sub    $0x65736163,%eax
add    %ch,0x6e(%ecx)
imul   $0x61742d6c,0x61(%ecx,%ebp,2),%esi
bound  %eax,(%eax)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %ch,0x6e(%ecx,%ebp,2)
gs
sub    $0x66667562,%eax
gs
jb     806b6a5 <_IO_stdin_used+0x441>
add    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
sub    $0x626d756e,%eax
gs
jb     806b64e <_IO_stdin_used+0x3ea>
insb   (%dx),%es:(%edi)
imul   $0x6765722d,0x65(%esi),%ebp
gs
js     806b6c9 <_IO_stdin_used+0x465>
add    %ch,0x61(%ebp)
js     806b68b <_IO_stdin_used+0x427>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806b664 <_IO_stdin_used+0x400>
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jo     806b669 <_IO_stdin_used+0x405>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
sub    $0x756f7267,%eax
jo     806b6ab <_IO_stdin_used+0x447>
jae    806b6e5 <_IO_stdin_used+0x481>
jo     806b6e3 <_IO_stdin_used+0x47f>
jb     806b6e5 <_IO_stdin_used+0x481>
je     806b6f5 <_IO_stdin_used+0x491>
jb     806b688 <_IO_stdin_used+0x424>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7373656d,%eax
popa
addr16
gs
jae    806b694 <_IO_stdin_used+0x430>
outsb  %ds:(%esi),(%dx)
jne    806b703 <_IO_stdin_used+0x49f>
insb   (%dx),%es:(%edi)
add    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61746164,%eax
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806b6d5 <_IO_stdin_used+0x471>
insl   (%dx),%es:(%edi)
popa
je     806b70f <_IO_stdin_used+0x4ab>
push   $0x676e69
jno    806b728 <_IO_stdin_used+0x4c4>
imul   $0x72656400,0x74(%ebp),%esp
gs
data16
gs
jb     806b724 <_IO_stdin_used+0x4c0>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     806b72a <_IO_stdin_used+0x4c6>
arpl   %si,0x72(%ebp)
jae    806b733 <_IO_stdin_used+0x4cf>
jbe    806b731 <_IO_stdin_used+0x4cd>
add    %ch,0x6e(%ecx)
jbe    806b736 <_IO_stdin_used+0x4d2>
jb     806b747 <_IO_stdin_used+0x4e3>
sub    $0x6374616d,%eax
push   $0x6c697300
outsb  %gs:(%esi),(%dx)
je     806b6e1 <_IO_stdin_used+0x47d>
jne    806b751 <_IO_stdin_used+0x4ed>
imul   $0x65747962,0x2d(%eax),%edi
sub    $0x7366666f,%eax
gs
je     806b765 <_IO_stdin_used+0x501>
add    %dh,0x65(%esi)
jb     806b76a <_IO_stdin_used+0x506>
imul   $0x74697700,0x6e(%edi),%ebp
push   $0x6c69662d
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x6f(%edi)
jb     806b771 <_IO_stdin_used+0x50d>
sub    $0x65676572,%eax
js     806b784 <_IO_stdin_used+0x520>
add    %ch,0x73(%ebp)
add    %ch,0x63(%ebp)
add    %ah,0x6e(%esi)
add    %ch,0x0(%esi,%ebp,2)
bound  %ebp,0x0(%esi)
jae    806b792 <_IO_stdin_used+0x52e>
add    %ah,0x78(%ebx)
add    %dh,0x76(%edx)
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
sbb    0x4b(%ebx),%ebx
add    %bl,(%ebx)
pop    %ebx
and    $0x5b1b6d73,%eax
dec    %ebx
add    %dh,(%ebx)
add    %dh,%ss:(%ebx)
xor    (%eax),%al
xor    0x3b313000,%esi
xor    (%ecx),%esi
add    %ch,0x2500002d
jae    806b773 <_IO_stdin_used+0x50f>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806b77c <_IO_stdin_used+0x518>
jne    806b7d1 <_IO_stdin_used+0x56d>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x61702073
je     806b7df <_IO_stdin_used+0x57b>
gs
jb     806b7dc <_IO_stdin_used+0x578>
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806b7d5 <_IO_stdin_used+0x571>
js     806b776 <_IO_stdin_used+0x512>
add    %al,(%eax)
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
insl   (%dx),%es:(%edi)
popa
je     806b7eb <_IO_stdin_used+0x587>
push   $0x20737265
jae    806b7ff <_IO_stdin_used+0x59b>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e690000,0x64(%ebp),%esp
jbe    806b7fd <_IO_stdin_used+0x599>
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
js     806b81b <_IO_stdin_used+0x5b7>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 806b816 <_IO_stdin_used+0x5b2>
and    %ah,0x72(%ecx)
addr16 jne 806b821 <_IO_stdin_used+0x5bd>
outsb  %gs:(%esi),(%dx)
je     806b7b8 <_IO_stdin_used+0x554>
imul   $0x66207475,0x70(%esi),%ebp
imul   $0x69207325,0x20(%ebp,%eiz,2),%ebp
jae    806b7e9 <_IO_stdin_used+0x585>
popa
insb   (%dx),%es:(%edi)
jae    806b83c <_IO_stdin_used+0x5d8>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     806b846 <_IO_stdin_used+0x5e2>
jne    806b84c <_IO_stdin_used+0x5e8>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    806b840 <_IO_stdin_used+0x5dc>
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %bl,0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x79(%edx,%esi,2)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     806b83c <_IO_stdin_used+0x5d8>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806b885 <_IO_stdin_used+0x621>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     806b894 <_IO_stdin_used+0x630>
popa
je     806b893 <_IO_stdin_used+0x62f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x65(%ebx)
popa
jb     806b898 <_IO_stdin_used+0x634>
push   $0x726f6620
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x6e(%ecx)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x72(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806b8bf <_IO_stdin_used+0x65b>
and    %ch,0x6e(%ecx)
jo     806b8d5 <_IO_stdin_used+0x671>
je     806b890 <_IO_stdin_used+0x62c>
or     (%eax),%al
inc    %ebp
js     806b8c8 <_IO_stdin_used+0x664>
insl   (%dx),%es:(%edi)
jo     806b8d6 <_IO_stdin_used+0x672>
cmp    %gs:(%eax),%ah
and    $0x692d2073,%eax
and    %ah,(%edi)
push   $0x6f6c6c65
and    %dh,0x6f(%edi)
jb     806b8ea <_IO_stdin_used+0x686>
fs
daa
and    %ch,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
jne    806b8b4 <_IO_stdin_used+0x650>
push   $0x69616d20
outsb  %ds:(%esi),(%dx)
arpl   %cx,%cs:(%edx)
or     0x65(%edx),%dl
addr16
gs
js     806b906 <_IO_stdin_used+0x6a2>
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x6e(%ecx)
je     806b90e <_IO_stdin_used+0x6aa>
jb     806b91b <_IO_stdin_used+0x6b7>
jb     806b912 <_IO_stdin_used+0x6ae>
je     806b910 <_IO_stdin_used+0x6ac>
je     806b91a <_IO_stdin_used+0x6b6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c45
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     806b93f <_IO_stdin_used+0x6db>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
je     806b94b <_IO_stdin_used+0x6e7>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x65(%edx)
addr16 jne 806b95c <_IO_stdin_used+0x6f8>
popa
jb     806b913 <_IO_stdin_used+0x6af>
gs
js     806b966 <_IO_stdin_used+0x702>
jb     806b95d <_IO_stdin_used+0x6f9>
jae    806b96d <_IO_stdin_used+0x709>
imul   $0x52452820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c46,%eax
sub    $0x65786966,%eax
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 806b93a <_IO_stdin_used+0x6d6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    806b994 <_IO_stdin_used+0x730>
je     806b951 <_IO_stdin_used+0x6ed>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%esi)
ja     806b9a4 <_IO_stdin_used+0x740>
imul   $0x7065732d,0x65(%esi),%ebp
popa
jb     806b9a3 <_IO_stdin_used+0x73f>
je     806b9a9 <_IO_stdin_used+0x745>
and    %ah,%fs:0x69(%esi)
js     806b9af <_IO_stdin_used+0x74b>
and    %dh,%fs:0x74(%ebx)
jb     806b9b9 <_IO_stdin_used+0x755>
outsb  %ds:(%esi),(%dx)
addr16 jae 806b95e <_IO_stdin_used+0x6fa>
and    %ah,(%eax)
sub    $0x2d202c47,%eax
sub    $0x69736162,%eax
arpl   %bp,0x65676572
js     806b9d8 <_IO_stdin_used+0x774>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
bound  %esp,0x73(%ecx)
imul   $0x75676572,0x20(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
jb     806b9ab <_IO_stdin_used+0x747>
gs
js     806b9fe <_IO_stdin_used+0x79a>
jb     806b9f5 <_IO_stdin_used+0x791>
jae    806ba05 <_IO_stdin_used+0x7a1>
imul   $0x52422820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x6c726570,%eax
sub    $0x65676572,%eax
js     806ba1f <_IO_stdin_used+0x7bb>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
push   %eax
gs
jb     806ba35 <_IO_stdin_used+0x7d1>
and    %dh,0x65(%edx)
addr16 jne 806ba3b <_IO_stdin_used+0x7d7>
popa
jb     806b9f2 <_IO_stdin_used+0x78e>
gs
js     806ba45 <_IO_stdin_used+0x7e1>
jb     806ba3c <_IO_stdin_used+0x7d8>
jae    806ba4c <_IO_stdin_used+0x7e8>
imul   $0xa,0x6e(%edi),%ebp
and    %ah,(%eax)
sub    $0x2d202c65,%eax
sub    $0x65676572,%eax
js     806ba5e <_IO_stdin_used+0x7fa>
cmp    $0x54544150,%eax
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    806ba71 <_IO_stdin_used+0x80d>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x6f(%esi)
jb     806ba2c <_IO_stdin_used+0x7c8>
insl   (%dx),%es:(%edi)
popa
je     806ba73 <_IO_stdin_used+0x80f>
push   $0xa676e69
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x656c6966,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62(%edi)
je     806ba96 <_IO_stdin_used+0x832>
imul   $0x54544150,0x20(%esi),%ebp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c69
sub    $0x6f6e6769,%eax
jb     806babd <_IO_stdin_used+0x859>
sub    $0x65736163,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806bad1 <_IO_stdin_used+0x86d>
and    %ah,0x61(%ebx)
jae    806bad6 <_IO_stdin_used+0x872>
and    %ah,0x73(%ecx,%ebp,2)
je     806bae0 <_IO_stdin_used+0x87c>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    806ba89 <_IO_stdin_used+0x825>
and    %ah,(%eax)
sub    $0x2d202c77,%eax
sub    $0x64726f77,%eax
sub    $0x65676572,%eax
js     806bb02 <_IO_stdin_used+0x89e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     806bb02 <_IO_stdin_used+0x89e>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     806bb13 <_IO_stdin_used+0x8af>
push   $0x6c6e6f20
jns    806bad7 <_IO_stdin_used+0x873>
ja     806bb21 <_IO_stdin_used+0x8bd>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi)
jb     806bb25 <_IO_stdin_used+0x8c1>
jae    806bacd <_IO_stdin_used+0x869>
and    %ah,(%eax)
sub    $0x2d202c78,%eax
sub    $0x656e696c,%eax
sub    $0x65676572,%eax
js     806bb46 <_IO_stdin_used+0x8e2>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     806bb46 <_IO_stdin_used+0x8e2>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     806bb57 <_IO_stdin_used+0x8f3>
push   $0x6c6e6f20
jns    806bb1b <_IO_stdin_used+0x8b7>
ja     806bb65 <_IO_stdin_used+0x901>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
gs
jae    806bb11 <_IO_stdin_used+0x8ad>
and    %ah,(%eax)
sub    $0x2d202c7a,%eax
sub    $0x6c6c756e,%eax
sub    $0x61746164,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%ecx)
fs
popa
je     806bb8a <_IO_stdin_used+0x926>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6e(%ebp)
fs
jae    806bb54 <_IO_stdin_used+0x8f0>
imul   $0x79622030,0x20(%esi),%ebp
je     806bba2 <_IO_stdin_used+0x93e>
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806bb63 <_IO_stdin_used+0x8ff>
outsb  %ds:(%esi),(%dx)
gs
ja     806bbb3 <_IO_stdin_used+0x94f>
imul   $0x4d0a000a,0x65(%esi),%ebp
imul   $0x616c6c65,0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %gs:(%esi),(%dx)
jne    806bbcd <_IO_stdin_used+0x969>
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x6d2d6f6e,%eax
gs
jae    806bbde <_IO_stdin_used+0x97a>
popa
addr16
gs
jae    806bb90 <_IO_stdin_used+0x92c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    806bbef <_IO_stdin_used+0x98b>
jo     806bbec <_IO_stdin_used+0x988>
jb     806bbe3 <_IO_stdin_used+0x97f>
jae    806bbf3 <_IO_stdin_used+0x98f>
and    %ah,0x72(%ebp)
jb     806bbf4 <_IO_stdin_used+0x990>
jb     806bba7 <_IO_stdin_used+0x943>
insl   (%dx),%es:(%edi)
gs
jae    806bbfe <_IO_stdin_used+0x99a>
popa
addr16
gs
jae    806bb9a <_IO_stdin_used+0x936>
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x65766e69,%eax
jb     806bc12 <_IO_stdin_used+0x9ae>
sub    $0x6374616d,%eax
push   $0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
jae    806bc13 <_IO_stdin_used+0x9af>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6e(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x6374616d,%eax
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a73,0x65(%esi),%ebp
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x72657620,0x74(%esi),%ebp
jae    806bc56 <_IO_stdin_used+0x9f2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     806bc63 <_IO_stdin_used+0x9ff>
popa
je     806bc62 <_IO_stdin_used+0x9fe>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x6c65682d
jo     806bc32 <_IO_stdin_used+0x9ce>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     806bc92 <_IO_stdin_used+0xa2e>
popa
jns    806bc49 <_IO_stdin_used+0x9e5>
je     806bc93 <_IO_stdin_used+0xa2f>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x616d6d2d
jo     806bc69 <_IO_stdin_used+0xa05>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x70(%ebp,%eiz,2)
jb     806bcc2 <_IO_stdin_used+0xa5e>
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x6f(%esi)
sub    $0x203b706f,%eax
gs
jbe    806bcdc <_IO_stdin_used+0xa78>
imul   $0x20,0x73(%ebp),%esp
popa
and    %dh,0x61(%edi)
jb     806bce5 <_IO_stdin_used+0xa81>
imul   $0x4f0a000a,0x67(%esi),%ebp
jne    806bcf4 <_IO_stdin_used+0xa90>
jo     806bcf7 <_IO_stdin_used+0xa93>
je     806bca4 <_IO_stdin_used+0xa40>
arpl   %bp,0x6e(%edi)
je     806bcfb <_IO_stdin_used+0xa97>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c6d,%eax
sub    $0x2d78616d,%eax
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806bcdc <_IO_stdin_used+0xa78>
dec    %esi
push   %ebp
dec    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     806bcce <_IO_stdin_used+0xa6a>
popa
data16
je     806bd17 <_IO_stdin_used+0xab3>
jb     806bcd4 <_IO_stdin_used+0xa70>
dec    %esi
push   %ebp
dec    %ebp
and    %ch,0x61(%ebp)
je     806bd1f <_IO_stdin_used+0xabb>
push   $0x200a7365
and    %ch,0x2d202c62
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     806bcf4 <_IO_stdin_used+0xa90>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806bd50 <_IO_stdin_used+0xaec>
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x79(%edx)
je     806bd4f <_IO_stdin_used+0xaeb>
and    %ch,0x66(%edi)
data16
jae    806bd55 <_IO_stdin_used+0xaf1>
je     806bd12 <_IO_stdin_used+0xaae>
ja     806bd5d <_IO_stdin_used+0xaf9>
je     806bd5e <_IO_stdin_used+0xafa>
and    %ch,0x75(%edi)
je     806bd6b <_IO_stdin_used+0xb07>
jne    806bd71 <_IO_stdin_used+0xb0d>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806bd0e <_IO_stdin_used+0xaaa>
and    %ah,(%eax)
sub    $0x2d202c6e,%eax
sub    $0x656e696c,%eax
sub    $0x626d756e,%eax
gs
jb     806bd38 <_IO_stdin_used+0xad4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806bd94 <_IO_stdin_used+0xb30>
imul   $0x6e696c20,0x74(%esi),%ebp
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x69(%edi)
je     806bd9e <_IO_stdin_used+0xb3a>
and    %ch,0x75(%edi)
je     806bdab <_IO_stdin_used+0xb47>
jne    806bdb1 <_IO_stdin_used+0xb4d>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806bd4e <_IO_stdin_used+0xaea>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e696c2d,%eax
gs
sub    $0x66667562,%eax
gs
jb     806bdbd <_IO_stdin_used+0xb59>
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%esi)
jne    806bdd7 <_IO_stdin_used+0xb73>
push   $0x74756f20
jo     806bde0 <_IO_stdin_used+0xb7c>
je     806bd8d <_IO_stdin_used+0xb29>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp)
gs
jb     806bdee <_IO_stdin_used+0xb8a>
and    %ch,0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%ah
and    %ch,0x2d202c48
sub    $0x68746977,%eax
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     806bdcf <_IO_stdin_used+0xb6b>
gs
popa
arpl   %bp,0x20(%eax)
insl   (%dx),%es:(%edi)
popa
je     806be1b <_IO_stdin_used+0xbb7>
push   $0x2d20200a
push   $0x2d2d202c
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     806be4a <_IO_stdin_used+0xbe6>
jb     806be41 <_IO_stdin_used+0xbdd>
jae    806be51 <_IO_stdin_used+0xbed>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x6e6f,%gs:0x20(%eax),%di
and    %ch,0x75(%edi)
je     806be6b <_IO_stdin_used+0xc07>
jne    806be71 <_IO_stdin_used+0xc0d>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62616c2d
gs
insb   (%dx),%es:(%edi)
cmp    $0x4542414c,%eax
dec    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %cl,%gs:0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
and    %ah,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806be97 <_IO_stdin_used+0xc33>
and    %ch,0x6e(%ecx)
jo     806bead <_IO_stdin_used+0xc49>
je     806be5a <_IO_stdin_used+0xbf6>
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x2000,%gs:0xa(%eax),%di
and    %ch,0x2d202c6f
sub    $0x796c6e6f,%eax
sub    $0x6374616d,%eax
push   $0x20676e69
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    806bed2 <_IO_stdin_used+0xc6e>
outsl  %ds:(%esi),(%dx)
ja     806be8d <_IO_stdin_used+0xc29>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806be92 <_IO_stdin_used+0xc2e>
je     806bedc <_IO_stdin_used+0xc78>
and    %dh,%gs:0x61(%eax)
jb     806beee <_IO_stdin_used+0xc8a>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x74616d20,0x65(%esi),%ebp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %dl,0x41(%bx,%si)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     806bed0 <_IO_stdin_used+0xc6c>
and    %ch,0x6c69732d
outsb  %gs:(%esi),(%dx)
je     806bece <_IO_stdin_used+0xc6a>
and    %ah,(%eax)
and    %ah,(%eax)
jae    806bf29 <_IO_stdin_used+0xcc5>
jo     806bf26 <_IO_stdin_used+0xcc2>
jb     806bf1d <_IO_stdin_used+0xcb9>
jae    806bf2d <_IO_stdin_used+0xcc9>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
jb     806bf30 <_IO_stdin_used+0xccc>
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     806bf3a <_IO_stdin_used+0xcd6>
jne    806bf40 <_IO_stdin_used+0xcdc>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e69622d
popa
jb     806bf54 <_IO_stdin_used+0xcf0>
sub    $0x656c6966,%eax
jae    806bf1f <_IO_stdin_used+0xcbb>
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ah,(%eax)
and    %ah,0x73(%ecx)
jae    806bf62 <_IO_stdin_used+0xcfe>
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax,%ebp,2)
je     806bf15 <_IO_stdin_used+0xcb1>
bound  %ebp,0x6e(%ecx)
popa
jb     806bf74 <_IO_stdin_used+0xd10>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806bf22 <_IO_stdin_used+0xcbe>
popa
jb     806bf6a <_IO_stdin_used+0xd06>
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ch,0x73(%ecx)
and    %ah,(%edi)
bound  %ebp,0x6e(%ecx)
popa
jb     806bfb0 <_IO_stdin_used+0xd4c>
daa
sub    $0x20,%al
daa
je     806bfa2 <_IO_stdin_used+0xd3e>
js     806bfb3 <_IO_stdin_used+0xd4f>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806bf65 <_IO_stdin_used+0xd01>
daa
ja     806bfb1 <_IO_stdin_used+0xd4d>
je     806bfb2 <_IO_stdin_used+0xd4e>
outsl  %ds:(%esi),(%dx)
jne    806bfc1 <_IO_stdin_used+0xd5d>
sub    $0x6374616d,%eax
push   $0x20200a27
sub    $0x2d202c61,%eax
sub    $0x74786574,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jno    806bfe9 <_IO_stdin_used+0xd85>
imul   $0x746e656c,0x61(%esi),%esi
and    %dh,0x20(%edi,%ebp,2)
sub    $0x6e69622d,%eax
popa
jb     806c000 <_IO_stdin_used+0xd9c>
sub    $0x656c6966,%eax
jae    806bfcb <_IO_stdin_used+0xd67>
je     806bff5 <_IO_stdin_used+0xd91>
js     806c006 <_IO_stdin_used+0xda2>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x20202049,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x71(%ebp)
jne    806c01d <_IO_stdin_used+0xdb9>
jbe    806c017 <_IO_stdin_used+0xdb3>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     806bfdb <_IO_stdin_used+0xd77>
je     806c02c <_IO_stdin_used+0xdc8>
and    %ch,0x6e69622d
popa
jb     806c03f <_IO_stdin_used+0xddb>
sub    $0x656c6966,%eax
jae    806c00a <_IO_stdin_used+0xda6>
ja     806c038 <_IO_stdin_used+0xdd4>
je     806c039 <_IO_stdin_used+0xdd5>
outsl  %ds:(%esi),(%dx)
jne    806c048 <_IO_stdin_used+0xde4>
sub    $0x6374616d,%eax
push   $0x2d20200a
fs
sub    $0x20,%al
sub    $0x7269642d,%eax
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x5443413d,0x73(%ebp),%esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x20200a3b,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     806c0a0 <_IO_stdin_used+0xe3c>
popa
fs
daa
sub    $0x20,%al
daa
jb     806c0a8 <_IO_stdin_used+0xe44>
arpl   %si,0x72(%ebp)
jae    806c0ad <_IO_stdin_used+0xe49>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806c06e <_IO_stdin_used+0xe0a>
daa
jae    806c0bc <_IO_stdin_used+0xe58>
imul   $0x2d20200a,0x27(%eax),%esi
inc    %esp
sub    $0x20,%al
sub    $0x7665642d,%eax
imul   $0x43413d73,0x65(%ebx),%esp
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x46202c73,0x65(%ebx),%esp
dec    %ecx
inc    %esi
dec    %edi
jae    806c0ae <_IO_stdin_used+0xe4a>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     806c10c <_IO_stdin_used+0xea8>
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     806c129 <_IO_stdin_used+0xec5>
popa
fs
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
jae    806c139 <_IO_stdin_used+0xed5>
imul   $0x2d20200a,0x27(%eax),%esi
jb     806c103 <_IO_stdin_used+0xe9f>
and    %ch,0x6365722d
jne    806c151 <_IO_stdin_used+0xeed>
jae    806c14a <_IO_stdin_used+0xee6>
jbe    806c148 <_IO_stdin_used+0xee4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ecx,%ebp,2)
and    %ch,%gs:0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6365723d,0x73(%ebp),%esp
jne    806c178 <_IO_stdin_used+0xf14>
jae    806c16d <_IO_stdin_used+0xf09>
or     (%eax),%ah
and    %ch,0x2d202c52
sub    $0x65726564,%eax
data16
gs
jb     806c17e <_IO_stdin_used+0xf1a>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     806c184 <_IO_stdin_used+0xf20>
arpl   %si,0x72(%ebp)
jae    806c18d <_IO_stdin_used+0xf29>
jbe    806c18b <_IO_stdin_used+0xf27>
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x65736977,0x65(%ebx),%ebp
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806c15d <_IO_stdin_used+0xef9>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa73,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x636e692d,%eax
insb   (%dx),%es:(%edi)
jne    806c1be <_IO_stdin_used+0xf5a>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    806c1d1 <_IO_stdin_used+0xf6d>
popa
jb     806c1d2 <_IO_stdin_used+0xf6e>
push   $0x6c6e6f20
jns    806c196 <_IO_stdin_used+0xf32>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
push   $0x6d207461
popa
je     806c1e8 <_IO_stdin_used+0xf84>
push   $0x4c494620
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806c206 <_IO_stdin_used+0xfa2>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    806c21f <_IO_stdin_used+0xfbb>
imul   $0x656c6966,0x20(%eax),%esi
jae    806c1dd <_IO_stdin_used+0xf79>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x74616d20,0x73(%ebp),%esp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%bp)
dec    %esp
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806c255 <_IO_stdin_used+0xff1>
gs
sub    $0x6d6f7266,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %dh,0x6b(%ebx)
imul   $0x656c6966,0x20(%eax),%esi
jae    806c22a <_IO_stdin_used+0xfc6>
insl   (%dx),%es:(%edi)
popa
je     806c271 <_IO_stdin_used+0x100d>
push   $0x20676e69
popa
outsb  %ds:(%esi),(%dx)
jns    806c237 <_IO_stdin_used+0xfd3>
imul   $0x6170,0x20(%ebp,%eiz,2),%bp
je     806c294 <_IO_stdin_used+0x1030>
gs
jb     806c291 <_IO_stdin_used+0x102d>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806c2a0 <_IO_stdin_used+0x103c>
gs
sub    $0x3d726964,%eax
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x61687420,0x73(%ebp),%esp
je     806c27c <_IO_stdin_used+0x1018>
insl   (%dx),%es:(%edi)
popa
je     806c2c3 <_IO_stdin_used+0x105f>
push   $0x54415020
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x6b(%ebx)
imul   $0xa2e6465,0x70(%eax),%esi
add    %ah,(%eax)
and    %ch,0x2d202c4c
sub    $0x656c6966,%eax
jae    806c2b7 <_IO_stdin_used+0x1053>
ja     806c2f5 <_IO_stdin_used+0x1091>
je     806c2f6 <_IO_stdin_used+0x1092>
outsl  %ds:(%esi),(%dx)
jne    806c305 <_IO_stdin_used+0x10a1>
sub    $0x6374616d,%eax
push   $0x72702020
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806c2c4 <_IO_stdin_used+0x1060>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806c2ca <_IO_stdin_used+0x1066>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806c2d3 <_IO_stdin_used+0x106f>
arpl   %bp,0x6e(%edi)
je     806c319 <_IO_stdin_used+0x10b5>
imul   $0x6e20676e,0x69(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     806c328 <_IO_stdin_used+0x10c4>
push   $0x2d20200a
insb   (%dx),%es:(%edi)
sub    $0x20,%al
sub    $0x6c69662d,%eax
gs
jae    806c302 <_IO_stdin_used+0x109e>
ja     806c340 <_IO_stdin_used+0x10dc>
je     806c341 <_IO_stdin_used+0x10dd>
sub    $0x6374616d,%eax
push   $0x20207365
jo     806c357 <_IO_stdin_used+0x10f3>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806c30e <_IO_stdin_used+0x10aa>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806c314 <_IO_stdin_used+0x10b0>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806c31d <_IO_stdin_used+0x10b9>
arpl   %bp,0x6e(%edi)
je     806c363 <_IO_stdin_used+0x10ff>
imul   $0x6d20676e,0x69(%esi),%ebp
popa
je     806c36f <_IO_stdin_used+0x110b>
push   $0x200a7365
and    %ch,0x2d202c63
sub    $0x6e756f63,%eax
je     806c33e <_IO_stdin_used+0x10da>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806c3a0 <_IO_stdin_used+0x113c>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806c357 <_IO_stdin_used+0x10f3>
popa
and    %ah,0x6f(%ebx)
jne    806c3ab <_IO_stdin_used+0x1147>
je     806c35f <_IO_stdin_used+0x10fb>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp)
je     806c3a9 <_IO_stdin_used+0x1145>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x65702073,0x65(%esi),%ebp
jb     806c375 <_IO_stdin_used+0x1111>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x74696e69,%eax
imul   $0x6261742d,0x6c(%ecx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x74,0x20(%ebp),%esp
popa
bound  %esi,0x20(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x20707520,0x65(%esi),%ebp
sub    %ch,0x66(%ecx)
and    %ch,0x65(%esi)
gs fs gs sub %ecx,%fs:%gs:(%edx)
and    %ah,(%eax)
sub    $0x2d202c5a,%eax
sub    $0x6c6c756e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806c424 <_IO_stdin_used+0x11c0>
imul   $0x62203020,0x74(%esi),%ebp
jns    806c42f <_IO_stdin_used+0x11cb>
and    %ah,%gs:0x66(%ecx)
je     806c426 <_IO_stdin_used+0x11c2>
jb     806c3e3 <_IO_stdin_used+0x117f>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
or     0x6f(%ebx),%al
outsb  %ds:(%esi),(%dx)
je     806c43b <_IO_stdin_used+0x11d7>
js     806c44c <_IO_stdin_used+0x11e8>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806c450 <_IO_stdin_used+0x11ec>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c42,%eax
sub    $0x6f666562,%eax
jb     806c455 <_IO_stdin_used+0x11f1>
sub    $0x746e6f63,%eax
gs
js     806c46c <_IO_stdin_used+0x1208>
cmp    $0x204d554e,%eax
and    %dh,0x72(%eax)
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806c42e <_IO_stdin_used+0x11ca>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x6e6f6320,%fs:0x67(%esi),%ebp
je     806c483 <_IO_stdin_used+0x121f>
js     806c494 <_IO_stdin_used+0x1230>
or     (%eax),%ah
and    %ch,0x2d202c41
sub    $0x65746661,%eax
jb     806c45c <_IO_stdin_used+0x11f8>
arpl   %bp,0x6e(%edi)
je     806c499 <_IO_stdin_used+0x1235>
js     806c4aa <_IO_stdin_used+0x1246>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
jo     806c4b1 <_IO_stdin_used+0x124d>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806c46d <_IO_stdin_used+0x1209>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx,%esi,2)
imul   $0x6f632067,0x6e(%ecx,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     806c4c3 <_IO_stdin_used+0x125f>
js     806c4d4 <_IO_stdin_used+0x1270>
or     (%eax),%ah
and    %ch,0x2d202c43
sub    $0x746e6f63,%eax
gs
js     806c4e4 <_IO_stdin_used+0x1280>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806c4f1 <_IO_stdin_used+0x128d>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806c4ad <_IO_stdin_used+0x1249>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x75(%edi)
je     806c504 <_IO_stdin_used+0x12a0>
jne    806c50a <_IO_stdin_used+0x12a6>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806c501 <_IO_stdin_used+0x129d>
js     806c512 <_IO_stdin_used+0x12ae>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e6f632d
je     806c530 <_IO_stdin_used+0x12cc>
js     806c541 <_IO_stdin_used+0x12dd>
cmp    $0xa4d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jb     806c53b <_IO_stdin_used+0x12d7>
cmp    $0x4e454857,%eax
pop    %ebp
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jne    806c568 <_IO_stdin_used+0x1304>
pop    %ebx
cmp    $0x4e454857,%eax
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x61(%ebp)
jb     806c577 <_IO_stdin_used+0x1313>
gs
jb     806c582 <_IO_stdin_used+0x131e>
and    %dh,0x20(%edi,%ebp,2)
push   $0x6c686769
imul   $0x68742074,0x68(%edi),%esp
and    %ch,%gs:0x61(%ebp)
je     806c588 <_IO_stdin_used+0x1324>
push   $0x20676e69
jae    806c5a0 <_IO_stdin_used+0x133c>
jb     806c597 <_IO_stdin_used+0x1333>
outsb  %ds:(%esi),(%dx)
addr16 jae 806c56d <_IO_stdin_used+0x1309>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x48(%edi)
inc    %ebp
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
popa
insb   (%dx),%es:(%edi)
ja     806c5bd <_IO_stdin_used+0x1359>
jns    806c5d1 <_IO_stdin_used+0x136d>
daa
sub    $0x20,%al
daa
outsb  %ds:(%esi),(%dx)
gs
jbe    806c5cb <_IO_stdin_used+0x1367>
jb     806c58f <_IO_stdin_used+0x132b>
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806c58d <_IO_stdin_used+0x1329>
daa
popa
jne    806c5e5 <_IO_stdin_used+0x1381>
outsl  %ds:(%esi),(%dx)
daa
or     (%eax),%ah
and    %ch,0x2d202c55
sub    $0x616e6962,%eax
jb     806c5fb <_IO_stdin_used+0x1397>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     806c5b7 <_IO_stdin_used+0x1353>
jae    806c60d <_IO_stdin_used+0x13a9>
jb     806c604 <_IO_stdin_used+0x13a0>
jo     806c5bd <_IO_stdin_used+0x1359>
inc    %ebx
push   %edx
and    %ah,0x68(%ebx)
popa
jb     806c606 <_IO_stdin_used+0x13a2>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806c5cb <_IO_stdin_used+0x1367>
popa
je     806c5ce <_IO_stdin_used+0x136a>
inc    %ebp
dec    %edi
dec    %esp
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%eax),%ah
and    %ch,0x2d202c75
sub    $0x78696e75,%eax
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     806c64e <_IO_stdin_used+0x13ea>
and    %ah,(%eax)
and    %dh,0x65(%edx)
jo     806c651 <_IO_stdin_used+0x13ed>
jb     806c658 <_IO_stdin_used+0x13f4>
and    %ch,0x66(%edi)
data16
jae    806c64f <_IO_stdin_used+0x13eb>
je     806c65f <_IO_stdin_used+0x13fb>
and    %ah,0x73(%ecx)
and    %ch,0x66(%ecx)
and    %al,0x52(%ebx)
jae    806c617 <_IO_stdin_used+0x13b3>
ja     806c65e <_IO_stdin_used+0x13fa>
jb     806c660 <_IO_stdin_used+0x13fc>
and    %ch,0x6f(%esi)
je     806c620 <_IO_stdin_used+0x13bc>
je     806c66a <_IO_stdin_used+0x1406>
gs
jb     806c66a <_IO_stdin_used+0x1406>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%edx),%cl
add    %dl,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %ch,0x73(%ecx)
and    %ch,0x6572202c
popa
and    %dh,%fs:0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806c6b5 <_IO_stdin_used+0x1451>
and    %ch,0x6e(%ecx)
jo     806c6cb <_IO_stdin_used+0x1467>
je     806c686 <_IO_stdin_used+0x1422>
and    %ah,(%eax)
push   %edi
imul   $0x46206f6e,0x20(%eax,%ebp,2),%esi
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x20,%al
jb     806c6cf <_IO_stdin_used+0x146b>
popa
and    %ch,%fs:(%esi)
and    %ch,0x66(%ecx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
sub    $0x656e696c,%eax
or     0x73692072,%ch
and    %ah,0x69(%edi)
jbe    806c6f0 <_IO_stdin_used+0x148c>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
sub    $0x68746f20,%eax
gs
jb     806c70d <_IO_stdin_used+0x14a9>
imul   $0x4920202e,0x65(%ebx),%esi
data16
and    %ah,0x65(%esi)
ja     806c708 <_IO_stdin_used+0x14a4>
jb     806c6c5 <_IO_stdin_used+0x1461>
je     806c70f <_IO_stdin_used+0x14ab>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%edi,%esi,2)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806c6d4 <_IO_stdin_used+0x1470>
popa
jb     806c71c <_IO_stdin_used+0x14b8>
and    %ah,0x69(%edi)
jbe    806c721 <_IO_stdin_used+0x14bd>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
popa
jae    806c735 <_IO_stdin_used+0x14d1>
jne    806c731 <_IO_stdin_used+0x14cd>
and    %ch,%gs:0x450a2e68
js     806c736 <_IO_stdin_used+0x14d2>
je     806c6ef <_IO_stdin_used+0x148b>
jae    806c745 <_IO_stdin_used+0x14e1>
popa
je     806c749 <_IO_stdin_used+0x14e5>
jae    806c6f6 <_IO_stdin_used+0x1492>
imul   $0x66692030,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    806c702 <_IO_stdin_used+0x149e>
insb   (%dx),%es:(%edi)
imul   $0x20736920,0x65(%esi),%ebp
jae    806c751 <_IO_stdin_used+0x14ed>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
xor    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
je     806c761 <_IO_stdin_used+0x14fd>
gs
jb     806c773 <_IO_stdin_used+0x150f>
imul   $0x66690a3b,0x65(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    806c728 <_IO_stdin_used+0x14c4>
gs
jb     806c77d <_IO_stdin_used+0x1519>
outsl  %ds:(%esi),(%dx)
jb     806c72e <_IO_stdin_used+0x14ca>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x75(%ebx)
jb     806c787 <_IO_stdin_used+0x1523>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x73692071
and    %ch,0x6f(%esi)
je     806c743 <_IO_stdin_used+0x14df>
imul   $0x74202c6e,0x65(%bp),%esi
push   $0x78652065
imul   $0x75746174,0x73(%eax,%eiz,1),%esi
jae    806c75a <_IO_stdin_used+0x14f6>
imul   $0xa2e32,0x20(%ebx),%esi
add    %al,(%eax)
add    %ch,0x74(%eax)
je     806c7b8 <_IO_stdin_used+0x1554>
cmp    (%edi),%ch
das
ja     806c7c4 <_IO_stdin_used+0x1560>
ja     806c77d <_IO_stdin_used+0x1519>
outsb  %ds:(%si),(%dx)
jne    806c781 <_IO_stdin_used+0x151d>
outsl  %ds:(%esi),(%dx)
jb     806c7bd <_IO_stdin_used+0x1559>
das
jae    806c7c8 <_IO_stdin_used+0x1564>
data16
je     806c7d3 <_IO_stdin_used+0x156f>
popa
jb     806c7c4 <_IO_stdin_used+0x1560>
das
addr16 jb 806c7c8 <_IO_stdin_used+0x1564>
jo     806c794 <_IO_stdin_used+0x1530>
add    %al,(%eax)
add    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     806c7cf <_IO_stdin_used+0x156b>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806c795 <_IO_stdin_used+0x1531>
jne    806c7ea <_IO_stdin_used+0x1586>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     806c7fb <_IO_stdin_used+0x1597>
popa
jb     806c7ec <_IO_stdin_used+0x1588>
cmp    (%eax),%ah
cmp    $0x68,%al
je     806c801 <_IO_stdin_used+0x159d>
jo     806c7c9 <_IO_stdin_used+0x1565>
das
das
ja     806c80a <_IO_stdin_used+0x15a6>
ja     806c7c3 <_IO_stdin_used+0x155f>
outsb  %ds:(%si),(%dx)
jne    806c7c7 <_IO_stdin_used+0x1563>
outsl  %ds:(%esi),(%dx)
jb     806c803 <_IO_stdin_used+0x159f>
das
addr16
gs
je     806c809 <_IO_stdin_used+0x15a5>
gs
insb   (%dx),%es:(%edi)
jo     806c7d4 <_IO_stdin_used+0x1570>
or     %ds:(%eax),%al
je     806c812 <_IO_stdin_used+0x15ae>
and    %ch,%gs:0x616d6d2d
jo     806c7d3 <_IO_stdin_used+0x156f>
outsl  %ds:(%esi),(%dx)
jo     806c82a <_IO_stdin_used+0x15c6>
imul   $0x73616820,0x6e(%edi),%ebp
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7320706f,%eax
imul   $0x30322065,0x63(%esi),%ebp
xor    %esi,(%eax)
add    %al,(%eax)
add    %ch,0x74(%edi)
push   $0x2c737265
and    %dh,0x65(%ebx)
and    %bh,%gs:(%eax,%ebp,2)
je     806c85c <_IO_stdin_used+0x15f8>
jo     806c824 <_IO_stdin_used+0x15c0>
das
das
imul   $0x672e7673,0x2e(%si),%esi
outsb  %ds:(%esi),(%dx)
jne    806c825 <_IO_stdin_used+0x15c1>
outsl  %ds:(%esi),(%dx)
jb     806c861 <_IO_stdin_used+0x15fd>
das
arpl   %sp,0x69(%edi)
je     806c82f <_IO_stdin_used+0x15cb>
addr16 jb 806c868 <_IO_stdin_used+0x1604>
jo     806c833 <_IO_stdin_used+0x15cf>
imul   $0x65657274,0x2f(%si),%esi
das
inc    %ecx
push   %ebp
push   %esp
dec    %eax
dec    %edi
push   %edx
push   %ebx
add    %al,%ds:(%eax)
xor    %ch,%ah
add    $0x8,%al
stos   %eax,%es:(%edi)
ljmp   $0x804,$0xea3a0804
cmp    $0xd30804e8,%eax
jmp    ed38d03a <optarg+0xe5319d36>
add    $0x8,%al
xor    %ch,%ah
add    $0x8,%al
shr    %cl,%ecx
add    $0x8,%al
shr    %eax
add    $0x8,%al
xor    %ch,%ah
add    $0x8,%al
shr    %cl,%ecx
add    $0x8,%al
cmp    $0xc10804e8,%eax
loope  806c857 <_IO_stdin_used+0x15f3>
or     %dl,%cl
call   e9c7d05e <optarg+0xe1c09d5a>
add    $0x8,%al
pusha
mov    0xaa640804,%al
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
inc    %ecx
stos   %al,%es:(%edi)
add    $0x8,%al
sub    $0x1a0804aa,%eax
stos   %al,%es:(%edi)
add    $0x8,%al
in     (%dx),%eax
test   $0xa9de0804,%eax
add    $0x8,%al
iret
test   $0xa9c00804,%eax
add    $0x8,%al
test   $0xd30804a9,%eax
mov    0xaa640804,%eax
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
lcall  $0x4aa,$0x640804a9
or     %ah,0x4(%edx,%ebp,4)
or     %ah,0x4(%edx,%ebp,4)
or     %cl,0x640804a9(%ebx)
stos   %al,%es:(%edi)
add    $0x8,%al
ja     806c947 <_IO_stdin_used+0x16e3>
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
jl     806c957 <_IO_stdin_used+0x16f3>
add    $0x8,%al
pusha
mov    0xa96d0804,%al
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
pop    %esi
test   $0xaa640804,%eax
add    $0x8,%al
dec    %edi
test   $0xaa640804,%eax
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
mov    0xa9400804,%eax
add    $0x8,%al
xor    %ebp,-0x5725f7fc(%ecx)
add    $0x8,%al
xchg   %ch,-0x5858f7fc(%eax)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
nop
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
andl   $0xaa640804,-0x559bf7fc(%edi)
aa
add    $0x8,%al
jb     806c9b5 <_IO_stdin_used+0x1751>
add    $0x8,%al
add    -0x590bf7fc(%edi),%esp
add    $0x8,%al
in     $0xa6,%eax
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
int3
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
andl   $0xaa640804,-0x5942f7fc(%ecx)
aa
add    $0x8,%al
pusha
mov    0xa6750804,%al
add    $0x8,%al
data16
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %edi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
andl   $0xaa640804,-0x59b4f7fc(%edi)
aa
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
fs
stos   %al,%es:(%edi)
add    $0x8,%al
push   %ds
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
sub    %esp,-0x5b15f7fc(%ebp)
add    $0x8,%al
ljmp   $0x4a4,$0x790804a4
or     %ch,-0x5c(%edx)
add    $0x8,%al
pop    %ebx
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
sub    0x4aa5508(%esp,%eax,1),%esp
or     %al,0x20804(%esi,%eiz,4)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
bound  %esi,0x6b52508(%esi,%eax,1)
or     %ah,-0x4c(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x806b5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
cmp    0x806(%ebp),%dh
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
add    %al,(%eax)
add    %cl,-0x4b(%edx)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
push   %edi
mov    $0x6,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
gs
mov    $0x6,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
jno    806caa7 <_IO_stdin_used+0x1843>
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
jg     806cab7 <_IO_stdin_used+0x1853>
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
mov    0x10806(%ebp),%?
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %bl,0x806b5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
xchg   %dh,0x10806(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
add    %al,(%eax)
add    %ah,0x20806b5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x53000000(%ecx)
mov    $0x6,%ch
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x7a000000(%ecx)
mov    $0x6,%bl
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
mov    $0xb5,%ah
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dl,0x10806b4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %bh,0x10806(%ebp,%esi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addl   $0x0,(%eax)
add    %al,%ah
mov    $0x6,%ch
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x4a2f0000(%eax,%eax,1)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x23000000(%edi)
mov    $0x6,%ch
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
loop   806cb87 <_IO_stdin_used+0x1923>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dh,%ch
mov    $0x6,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %bh,-0x4a(%eax)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x9000000(%eax)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x34(%eax)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,(%esi)
mov    $0x6,%dh
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x16000000(%edx)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
and    0x806(%esi),%dh
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%esi)
mov    $0x6,%dh
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x34000000(%esi)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x42000000(%ebp)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
dec    %esi
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
pop    %edx
mov    $0x6,%dh
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
fs
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x69000000(%ecx)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
jne    806cc68 <_IO_stdin_used+0x1a04>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0x78000000(%eax)
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
cltd
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
mov    %eax,0x806b6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
mov    $0xb6,%cl
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
ret
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
mov    $0xb6,%bh
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
xor    0x10806(%ebp),%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %cl,%ch
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
fidivl 0x806(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jno    806cd5e <_IO_stdin_used+0x1afa>
add    %al,(%eax)
mov    %esi,0x806(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %ch,0x806b4(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
loope  806cd38 <_IO_stdin_used+0x1ad4>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
repz mov $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
sti
mov    $0x6,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
or     %esi,0x806(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
ja     806cdbe <_IO_stdin_used+0x1b5a>
add    %al,(%eax)
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
inc    %ecx
cmp    0x3a(%edx),%al
inc    %ebx
cmp    0x45(%edx,%edi,1),%al
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
push   %eax
push   %esp
push   %ebp
push   %esi
pop    %eax
cmp    0x62(%ecx),%ah
arpl   %sp,0x65(%edx,%edi,1)
cmp    0x3a(%esi),%ah
push   $0x6d6c4c69
cmp    0x6f(%esi),%ch
jno    806ce62 <_IO_stdin_used+0x1bfe>
jb     806ce85 <_IO_stdin_used+0x1c21>
jne    806ce8a <_IO_stdin_used+0x1c26>
ja     806ce8e <_IO_stdin_used+0x1c2a>
jns    806ce72 <_IO_stdin_used+0x1c0e>
jp     806ce1a <_IO_stdin_used+0x1bb6>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
mov    $0x6,%ah
or     %bh,(%eax)
xor    (%edi),%al
or     %al,-0x44(%eax)
add    $0x8,%al
adc    $0x380806b7,%eax
xor    (%edi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
mov    $0x6,%bh
or     %dh,(%edx,%esi,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%ebx)
mov    $0x6,%bh
or     %dh,(%eax)
xor    (%edi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%esi)
mov    $0x6,%bh
or     %ch,(%edx,%esi,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
mov    $0x6,%bh
or     %ch,(%eax)
xor    (%edi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%edi)
mov    $0x6,%dh
or     %ah,(%edx,%esi,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi,%esi,4)
push   %es
or     %ah,(%eax)
xor    (%edi),%al
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi)
mov    $0x6,%bh
or     %bl,(%edx,%esi,1)
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%edx)
mov    $0x6,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x44(%eax)
add    $0x8,%al
in     $0xb4,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x44(%eax)
add    $0x8,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806cf2f <_IO_stdin_used+0x1ccb>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
in     $0x2c,%al
add    $0x52ce008,%eax
or     %ah,%al
sub    $0x5,%al
or     %ah,%al
sub    $0x5,%al
or     %ah,%al
sub    $0x5,%al
or     %ah,%al
sub    $0x5,%al
or     %ah,%al
sub    $0x5,%al
or     %ah,%al
sub    $0x5,%al
or     %bl,(%eax)
sub    $0x2d180805,%eax
add    $0x52d1808,%eax
or     %ah,%al
sub    $0x5,%al
or     %cl,(%eax)
sub    $0x2d080805,%eax
add    $0x54d5808,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x77f7faae(%eax)
dec    %ebp
add    $0x5528008,%eax
or     %al,-0x4ff7faae(%eax)
dec    %ebp
add    $0x54dc808,%eax
or     %cl,(%eax)
dec    %esi
add    $0x54e5808,%eax
or     %bh,%al
dec    %edi
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
dec    %edi
add    $0x5528008,%eax
or     %al,-0x3ff7faae(%eax)
dec    %edi
add    $0x54fc008,%eax
or     %al,%al
dec    %edi
add    $0x54fc008,%eax
or     %al,%al
dec    %edi
add    $0x54fc008,%eax
or     %al,%al
dec    %edi
add    $0x54fc008,%eax
or     %al,%al
dec    %edi
add    $0x5528008,%eax
or     %al,0x8080552(%eax)
dec    %edi
add    $0x5528008,%eax
or     %ah,0x38080550(%eax)
push   %eax
add    $0x5528008,%eax
or     %al,-0x2ff7faae(%eax)
push   %eax
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %cl,-0x7ff7fab2(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,0x80552(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5507808,%eax
or     %ah,0x52(%eax)
add    $0x5528008,%eax
or     %bh,(%eax)
dec    %edi
add    $0x5528008,%eax
or     %ch,0x4f(%eax)
add    $0x5528008,%eax
or     %al,(%eax)
push   %ecx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5528008,%eax
or     %cl,-0x7ff7fab2(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,0x80552(%eax)
push   %edx
add    $0x5528008,%eax
or     %al,-0x7ff7faae(%eax)
push   %edx
add    $0x5513008,%eax
or     %cl,(%eax)
dec    %ebp
add    $0x55db108,%eax
or     %dh,0x5f(%ebx)
add    $0x55f6908,%eax
or     %bl,0x5(%edi,%ebx,2)
or     %cl,0x5f(%edi)
add    $0x55f8008,%eax
or     %ah,-0x62f7fa90(%edx)
jae    806d108 <_IO_stdin_used+0x1ea4>
or     %bl,-0x62f7fa8d(%ebp)
jae    806d110 <_IO_stdin_used+0x1eac>
or     %bl,-0x62f7fa8d(%ebp)
jae    806d118 <_IO_stdin_used+0x1eb4>
or     %bl,-0x62f7fa8d(%ebp)
jae    806d120 <_IO_stdin_used+0x1ebc>
or     %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    $0x5726d08,%eax
or     %ch,0x72(%ebp)
add    $0x5739d08,%eax
or     %ah,(%esi)
jno    806d134 <_IO_stdin_used+0x1ed0>
or     %bl,%dl
jo     806d138 <_IO_stdin_used+0x1ed4>
or     %ah,0x61(%esi,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806d1ad <_IO_stdin_used+0x1f49>
je     806d13c <_IO_stdin_used+0x1ed8>
popa
fs
fs
je     806d1b0 <_IO_stdin_used+0x1f4c>
imul   $0x0,(%eax),%eax
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%ah
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
add    %dh,0x61(%eax)
jb     806d277 <_IO_stdin_used+0x2013>
gs
pop    %edi
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     806d26d <_IO_stdin_used+0x2009>
gs
js     806d281 <_IO_stdin_used+0x201d>
add    %al,(%eax)
add    %bh,-0x630ff7fa(%edx,%edx,8)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
iret
rolb   %cl,(%esi)
or     %dl,(%eax)
sahf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
aad    $0xd2
push   %es
or     %ah,%al
cwtl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
mov    $0xd3,%ah
push   %es
or     %dl,(%eax)
pushf
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
mov    $0xd3,%bl
push   %es
or     %al,(%eax)
cltd
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
mov    $0x600806d3,%edx
cwtl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
rcl    $0x6,%bl
or     %dh,(%eax)
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
roll   %cl,(%esi)
or     %dl,(%eax)
lcall  $0x0,$0x804
int3
roll   %cl,(%esi)
or     %dl,0x80498(%eax)
add    %al,(%eax)
add    %dl,%dl
roll   %cl,(%esi)
or     %dl,%al
lcall  $0x0,$0x804
fcom   %st(3)
push   %es
or     %dl,0x8049d(%eax)
add    %al,(%eax)
add    %bl,%dh
roll   %cl,(%esi)
or     %al,-0x68(%eax)
add    $0x8,%al
popa
insb   (%dx),%es:(%edi)
jo     806d328 <_IO_stdin_used+0x20c4>
popa
add    %dh,0x6e(%ebp)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %bl,0x0(%ebx)
jne    806d341 <_IO_stdin_used+0x20dd>
jo     806d338 <_IO_stdin_used+0x20d4>
jb     806d2d5 <_IO_stdin_used+0x2071>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d33e <_IO_stdin_used+0x20da>
jb     806d2db <_IO_stdin_used+0x2077>
fs
popaw
arpl   %ax,%cs:(%eax)
pop    %esi
pop    %ebx
cmp    0x70(%ebx),%dh
popa
arpl   %sp,0x3a(%ebp)
pop    %ebp
pop    %ebp
add    %dh,0x6e(%ebp)
imul   $0x6873,0x69(%esi),%bp
gs and %bl,%fs:%gs:0x65(%eax,%eiz,1)
jae    806d360 <_IO_stdin_used+0x20fc>
popa
jo     806d365 <_IO_stdin_used+0x2101>
add    %cl,0x6e(%ecx)
jbe    806d366 <_IO_stdin_used+0x2102>
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
je     806d331 <_IO_stdin_used+0x20cd>
outsl  %ds:(%esi),(%dx)
data16
and    %bl,0x5c(%ebx,%edi,2)
jge    806d319 <_IO_stdin_used+0x20b5>
push   %edx
gs
addr16 jne 806d38a <_IO_stdin_used+0x2126>
popa
jb     806d341 <_IO_stdin_used+0x20dd>
gs
js     806d394 <_IO_stdin_used+0x2130>
jb     806d38b <_IO_stdin_used+0x2127>
jae    806d39b <_IO_stdin_used+0x2137>
imul   $0x6f6f7420,0x6e(%edi),%ebp
and    %ah,0x69(%edx)
add    %dl,0x54(%di)
inc    %esi
sub    $0x73750038,%eax
imul   $0x6674755f,0x67(%esi),%ebp
cmp    %ah,(%eax)
sub    %ch,(%ecx)
add    %dh,0x6e(%ebp)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ch,(%eax)
add    %ch,0x6f(%esi)
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806d3be <_IO_stdin_used+0x215a>
js     806d37f <_IO_stdin_used+0x211b>
jae    806d3d1 <_IO_stdin_used+0x216d>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x626e7500,0x64(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ch,(%ecx)
add    %ch,0x75(%ebp)
jae    806d3ee <_IO_stdin_used+0x218a>
jae    806d39c <_IO_stdin_used+0x2138>
cmp    $0x20,%al
insl   (%dx),%es:(%edi)
jo     806d381 <_IO_stdin_used+0x211d>
es
insl   (%dx),%es:(%edi)
jne    806d3f8 <_IO_stdin_used+0x2194>
je     806d3fa <_IO_stdin_used+0x2196>
pop    %ebx
xor    0x20(%ebp),%bl
cmp    $0x3d,%al
and    %ch,0x70(%ebp)
add    %ch,0x70(%ebp)
and    %bh,0x6d26203d
jne    806d40e <_IO_stdin_used+0x21aa>
je     806d410 <_IO_stdin_used+0x21ac>
pop    %ebx
xor    %ebx,0x0(%ebp)
and    %esp,(%edx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     806d41a <_IO_stdin_used+0x21b6>
and    %esp,(%eax)
je     806d3cb <_IO_stdin_used+0x2167>
ds
cmp    $0x444e4520,%eax
and    (%eax),%al
js     806d419 <_IO_stdin_used+0x21b5>
imul   $0x70730074,0x69(%edi),%esp
popa
arpl   %sp,0x0(%ebp)
jo     806d437 <_IO_stdin_used+0x21d3>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x61(%eax,%eax,1)
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jne    806d438 <_IO_stdin_used+0x21d4>
add    %dh,0x72(%eax)
imul   $0x61726700,0x74(%esi),%ebp
jo     806d43f <_IO_stdin_used+0x21db>
add    %ah,0x6e(%ebx)
je     806d44e <_IO_stdin_used+0x21ea>
insb   (%dx),%es:(%edi)
add    %ah,0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x63,(%eax),%eax
push   $0x63617261
je     806d451 <_IO_stdin_used+0x21ed>
jb     806d40e <_IO_stdin_used+0x21aa>
arpl   %bp,0x73(%ecx,%eiz,2)
jae    806d414 <_IO_stdin_used+0x21b0>
jae    806d46f <_IO_stdin_used+0x220b>
outsb  %ds:(%esi),(%dx)
je     806d45a <_IO_stdin_used+0x21f6>
js     806d41b <_IO_stdin_used+0x21b7>
imul   $0x733a5b5b,0x20(%ebx),%esi
jo     806d465 <_IO_stdin_used+0x2201>
arpl   %sp,0x3a(%ebp)
pop    %ebp
pop    %ebp
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806d42f <_IO_stdin_used+0x21cb>
pop    %ebx
cmp    0x70(%ebx),%dh
popa
arpl   %sp,0x3a(%ebp)
pop    %ebp
add    %al,(%eax)
add    %al,(%eax)
sub    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     806d488 <_IO_stdin_used+0x2224>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    806d4a1 <_IO_stdin_used+0x223d>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     806d454 <_IO_stdin_used+0x21f0>
sub    %ch,(%ecx)
sub    %esp,(%eax)
cmp    $0x31203d,%eax
add    %al,(%eax)
add    %ah,(%ecx)
and    0x65(%esi),%ch
imul   $0x504c2072,0x65(%eax,%ebp,2),%esi
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
and    %ch,0x6f(%esi)
jb     806d475 <_IO_stdin_used+0x2211>
push   %edx
push   %eax
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
and    %ch,0x61(%ebp)
jns    806d480 <_IO_stdin_used+0x221c>
popa
jo     806d4d3 <_IO_stdin_used+0x226f>
gs
popa
jb     806d487 <_IO_stdin_used+0x2223>
push   $0x22657265
add    %dh,0x65(%ebx)
popa
jb     806d4d5 <_IO_stdin_used+0x2271>
push   $0x6c697475
jae    806d4a7 <_IO_stdin_used+0x2243>
arpl   %ax,(%eax)
outsl  %ds:(%esi),(%dx)
jne    806d4f2 <_IO_stdin_used+0x228e>
add    %ch,0x6e(%ebp,%eiz,2)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     806d487 <_IO_stdin_used+0x2223>
insl   (%dx),%es:(%edi)
bound  %esi,0x6c(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     806d4f4 <_IO_stdin_used+0x2290>
jb     806d491 <_IO_stdin_used+0x222d>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%ecx)
addr16 jne 806d50b <_IO_stdin_used+0x22a7>
outsb  %gs:(%esi),(%dx)
je     806d4c2 <_IO_stdin_used+0x225e>
and    $0x6f662073,%eax
jb     806d4c9 <_IO_stdin_used+0x2265>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    806d522 <_IO_stdin_used+0x22be>
jne    806d528 <_IO_stdin_used+0x22c4>
and    %ah,0x72(%ecx)
addr16 jne 806d528 <_IO_stdin_used+0x22c4>
outsb  %gs:(%esi),(%dx)
je     806d4df <_IO_stdin_used+0x227b>
and    $0x6f662073,%eax
jb     806d4e6 <_IO_stdin_used+0x2282>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     806d54b <_IO_stdin_used+0x22e7>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x626d0073,%eax
jne    806d558 <_IO_stdin_used+0x22f4>
je     806d556 <_IO_stdin_used+0x22f2>
jb     806d521 <_IO_stdin_used+0x22bd>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     806d56f <_IO_stdin_used+0x230b>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     806d53f <_IO_stdin_used+0x22db>
arpl   %si,%ds:0x72(%ebp)
jo,pn  806d58d <_IO_stdin_used+0x2329>
jb     806d53b <_IO_stdin_used+0x22d7>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     806d555 <_IO_stdin_used+0x22f1>
arpl   %si,%ds:0x72(%ebp)
ja,pn  806d592 <_IO_stdin_used+0x232e>
and    %bh,0x30203d
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     806d5a0 <_IO_stdin_used+0x233c>
jb     806d59c <_IO_stdin_used+0x2338>
insl   (%dx),%es:(%edi)
jne    806d5ac <_IO_stdin_used+0x2348>
je     806d5ab <_IO_stdin_used+0x2347>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806d5bb <_IO_stdin_used+0x2357>
add    %ah,(%ebx)
and    %ah,0x6e(%ebp)
je     806d5c0 <_IO_stdin_used+0x235c>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     806d59c <_IO_stdin_used+0x2338>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 806d5f1 <_IO_stdin_used+0x238d>
cmp    (%eax),%ah
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
enter  $0xcd42,$0xcc
dec    %esp
aas
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
orb    $0x1a,0x0(%edi)
add    %al,(%eax)
out    %eax,(%dx)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     806d5f1 <_IO_stdin_used+0x238d>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    806d66d <_IO_stdin_used+0x2409>
je     806d66b <_IO_stdin_used+0x2407>
jb     806d667 <_IO_stdin_used+0x2403>
insl   (%dx),%es:(%edi)
jne    806d677 <_IO_stdin_used+0x2413>
je     806d676 <_IO_stdin_used+0x2412>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806d686 <_IO_stdin_used+0x2422>
add    %al,(%eax)
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 806d67b <_IO_stdin_used+0x2417>
xor    %bl,0x20(%ebp)
ja     806d686 <_IO_stdin_used+0x2422>
jae    806d647 <_IO_stdin_used+0x23e3>
jo     806d68a <_IO_stdin_used+0x2426>
jae    806d69e <_IO_stdin_used+0x243a>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    806d69b <_IO_stdin_used+0x2437>
push   $0x206e6120
gs
js     806d6a1 <_IO_stdin_used+0x243d>
arpl   %sp,(%eax)
jae    806d6b9 <_IO_stdin_used+0x2455>
jae    806d6b6 <_IO_stdin_used+0x2452>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x20732500,%eax
sub    %ah,0x6d002973
bound  %esi,0x69(%ebp)
je     806d6cb <_IO_stdin_used+0x2467>
jb     806d6c7 <_IO_stdin_used+0x2463>
insl   (%dx),%es:(%edi)
jne    806d6d7 <_IO_stdin_used+0x2473>
je     806d6d6 <_IO_stdin_used+0x2472>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806d6e6 <_IO_stdin_used+0x2482>
add    %ah,%dl
sbbb   $0xa1,0xafa100(%ecx)
pop    %es
gs
add    %ah,%dl
sbbb   $0x38,0x31424700(%eax)
xor    %dh,(%ebx)
xor    %al,(%eax)
pusha
add    %ch,0x74(%ecx,%ebp,2)
gs
jb     806d6f3 <_IO_stdin_used+0x248f>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    806d719 <_IO_stdin_used+0x24b5>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    806d70f <_IO_stdin_used+0x24ab>
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
lock out %eax,(%dx)
add    $0x5f4e808,%eax
or     %ah,(%eax)
cmc
add    $0x5f56008,%eax
or     %ah,-0x2ff7fa0b(%eax)
cmc
add    $0x5f5f808,%eax
or     %bh,%al
cmc
add    $0x5f5f808,%eax
or     %al,-0xd(%eax)
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f32808,%eax
or     %dl,(%eax)
repz add $0x5f33808,%eax
or     %dh,(%eax)
repz add $0x5f32008,%eax
or     %bl,(%eax)
repz add $0x5f2f008,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %ch,(%eax)
hlt
add    $0x5f42808,%eax
or     %dh,-0xe(%edi)
add    $0x5f27708,%eax
or     %dh,-0xe(%edi)
add    $0x5f26f08,%eax
or     %dh,-0xe(%edi)
add    $0x5f18008,%eax
or     %dh,-0xe(%edi)
add    $0x5f3d808,%eax
or     %dh,-0xe(%edi)
add    $0x5f27708,%eax
or     %dh,-0xe(%edi)
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %dh,-0xe(%edi)
add    $0x5f27708,%eax
or     %dh,-0xe(%edi)
add    $0x5f27708,%eax
or     %cl,%al
lock add $0x5f42808,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f27708,%eax
or     %bh,-0x7ff7fa0d(%eax)
icebp
add    $0x5f27708,%eax
or     %al,0x770805f1(%eax)
repnz add $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,-0x7ff7fa0f(%eax)
icebp
add    $0x5f18008,%eax
or     %al,0x580805f1(%eax)
repnz add $0x5f27708,%eax
or     %bl,-0xe(%eax)
add    $0x5f26f08,%eax
or     %cl,-0x77f7fa0e(%eax)
repnz add $0x5f79808,%eax
or     %cl,-0x67f7fa0e(%eax)
testl  $0x5f79808,0x5f28808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x5f79808,0x5f79808
05
or     %bl,-0x67f7fa09(%eax)
testl  $0x8,0x5f28808
00
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,-0x296bf7fa(%esi,%edx,8)
push   %es
or     %bl,-0x20f7f92a(%edx)
rolb   %cl,(%esi)
or     %ah,-0x5f7f92a(%edi)
rolb   %cl,(%esi)
or     %cl,-0x4c(%esi)
push   %es
or     %ch,0x806d6(%edi)
add    %al,(%eax)
add    %ch,0x62(%ebp)
imul   $0x6d00682e,0x72(%ebp,%eiz,2),%esi
bound  %ebp,0x74(%ecx)
gs
jb     806da33 <_IO_stdin_used+0x27cf>
insl   (%dx),%es:(%edi)
jne    806da43 <_IO_stdin_used+0x27df>
je     806da42 <_IO_stdin_used+0x27de>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806da52 <_IO_stdin_used+0x27ee>
add    %ah,0x25282073
jae    806da0f <_IO_stdin_used+0x27ab>
and    %ah,0x25000a73
jae    806da0e <_IO_stdin_used+0x27aa>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     806da62 <_IO_stdin_used+0x27fe>
je     806da6f <_IO_stdin_used+0x280b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     806da72 <_IO_stdin_used+0x280e>
je     806da7f <_IO_stdin_used+0x281b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     806da89 <_IO_stdin_used+0x2825>
je     806da96 <_IO_stdin_used+0x2832>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806da5b <_IO_stdin_used+0x27f7>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
and    $0x6f682073,%eax
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    806da89 <_IO_stdin_used+0x2825>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    806da91 <_IO_stdin_used+0x282d>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     806dae0 <_IO_stdin_used+0x287c>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     806da96 <_IO_stdin_used+0x2832>
insb   (%dx),%es:(%edi)
popa
je     806dadf <_IO_stdin_used+0x287b>
jb     806da9c <_IO_stdin_used+0x2838>
cmp    $0x68,%al
je     806daf4 <_IO_stdin_used+0x2890>
jo     806dabc <_IO_stdin_used+0x2858>
das
das
outsb  %ds:(%si),(%dx)
jne    806dab6 <_IO_stdin_used+0x2852>
outsl  %ds:(%esi),(%dx)
jb     806daf2 <_IO_stdin_used+0x288e>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 806db04 <_IO_stdin_used+0x28a0>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    806dac5 <_IO_stdin_used+0x2861>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     806db29 <_IO_stdin_used+0x28c5>
popa
jb     806db1a <_IO_stdin_used+0x28b6>
cmp    (%eax),%ah
jns    806db28 <_IO_stdin_used+0x28c4>
jne    806dadb <_IO_stdin_used+0x2877>
popa
jb     806db23 <_IO_stdin_used+0x28bf>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     806db43 <_IO_stdin_used+0x28df>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     806db4d <_IO_stdin_used+0x28e9>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     806db6a <_IO_stdin_used+0x2906>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     806db69 <_IO_stdin_used+0x2905>
outsb  %ds:(%esi),(%dx)
je     806db27 <_IO_stdin_used+0x28c3>
jo     806db6e <_IO_stdin_used+0x290a>
jb     806db78 <_IO_stdin_used+0x2914>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     806db88 <_IO_stdin_used+0x2924>
je     806db95 <_IO_stdin_used+0x2931>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806db5a <_IO_stdin_used+0x28f6>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dba8 <_IO_stdin_used+0x2944>
je     806dbb5 <_IO_stdin_used+0x2951>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806db7a <_IO_stdin_used+0x2916>
and    %ah,0x250a2c73
jae    806db82 <_IO_stdin_used+0x291e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dbcc <_IO_stdin_used+0x2968>
je     806dbd9 <_IO_stdin_used+0x2975>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806db9e <_IO_stdin_used+0x293a>
and    %ah,0x250a2c73
jae    806dba6 <_IO_stdin_used+0x2942>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dbf4 <_IO_stdin_used+0x2990>
je     806dc01 <_IO_stdin_used+0x299d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806dbc6 <_IO_stdin_used+0x2962>
and    %ah,0x250a2c73
jae    806dbce <_IO_stdin_used+0x296a>
and    %ah,0x25202c73
jae    806dbd6 <_IO_stdin_used+0x2972>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dc20 <_IO_stdin_used+0x29bc>
je     806dc2d <_IO_stdin_used+0x29c9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806dbf2 <_IO_stdin_used+0x298e>
and    %ah,0x250a2c73
jae    806dbfa <_IO_stdin_used+0x2996>
and    %ah,0x25202c73
jae    806dc02 <_IO_stdin_used+0x299e>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dc50 <_IO_stdin_used+0x29ec>
je     806dc5d <_IO_stdin_used+0x29f9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806dc22 <_IO_stdin_used+0x29be>
and    %ah,0x250a2c73
jae    806dc2a <_IO_stdin_used+0x29c6>
and    %ah,0x25202c73
jae    806dc32 <_IO_stdin_used+0x29ce>
and    %ah,0x250a2c73
jae    806dc3a <_IO_stdin_used+0x29d6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806dc84 <_IO_stdin_used+0x2a20>
je     806dc91 <_IO_stdin_used+0x2a2d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806dc56 <_IO_stdin_used+0x29f2>
and    %ah,0x250a2c73
jae    806dc5e <_IO_stdin_used+0x29fa>
and    %ah,0x25202c73
jae    806dc66 <_IO_stdin_used+0x2a02>
and    %ah,0x250a2c73
jae    806dc6e <_IO_stdin_used+0x2a0a>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
mov    0xa808062a,%al
sub    (%esi),%al
or     %ch,%al
sub    (%esi),%al
or     %dh,(%eax)
sub    (%esi),%eax
or     %cl,-0x1ff7f9d5(%eax)
sub    (%esi),%eax
or     %cl,0x2c(%eax)
push   %es
or     %al,%al
sub    $0x6,%al
or     %ah,0x29(%eax)
push   %es
or     %bh,%al
sub    %eax,(%esi)
or     %dl,(%esi)
xor    %al,(%esi)
or     %bl,(%ebx)
xor    %al,(%esi)
or     %bl,0x30(%ecx)
push   %es
or     %ah,-0x15f7f9d0(%ecx)
xor    %al,(%esi)
or     %al,0x31(%edx)
push   %es
or     %ch,0x1f080631(%ecx)
xor    (%esi),%al
or     %dl,%dh
cs
push   %es
or     %dh,0x2f(%eax)
push   %es
or     %ah,%al
xor    $0x35e80806,%eax
push   %es
or     %bh,(%eax)
ss
push   %es
or     %bl,-0x17f7f9ca(%eax)
ss
push   %es
or     %cl,0x37(%eax)
push   %es
or     %bh,0x38080637(%eax)
cmp    %al,(%esi)
or     %al,0x28080634(%eax)
xor    $0x3cb80806,%eax
push   %es
or     %al,%al
cmp    $0x6,%al
or     %al,(%eax)
cmp    $0x3d480806,%eax
push   %es
or     %bl,-0x7f7f9c3(%eax)
cmp    $0x3e680806,%eax
push   %es
or     %ch,%al
ds
push   %es
or     %bl,0x3b(%eax)
push   %es
or     %al,(%eax)
cmp    $0x6,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     806dd7d <_IO_stdin_used+0x2b19>
jb     806dd6f <_IO_stdin_used+0x2b0b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     806dd91 <_IO_stdin_used+0x2b2d>
popa
jb     806dd82 <_IO_stdin_used+0x2b1e>
and    %al,0x6f(%esi)
jne    806dd90 <_IO_stdin_used+0x2b2c>
fs
popa
je     806dd8f <_IO_stdin_used+0x2b2b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %bh,0x73(%eax)
je     806dda5 <_IO_stdin_used+0x2b41>
je     806dda4 <_IO_stdin_used+0x2b40>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,(%eax)
and    %bh,0x72747320(,%edi,1)
je     806ddb5 <_IO_stdin_used+0x2b51>
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     806ddc8 <_IO_stdin_used+0x2b64>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
rorb   0x6(%edx)
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,-0x1ff7f9b5(%edi)
inc    %esi
push   %es
or     %cl,(%edx)
dec    %ebx
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,(%esp,%ecx,2)
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %bh,0xe008064a
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,%al
dec    %ecx
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %cl,(%edx)
dec    %ecx
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %cl,-0x21f7f9b8(%eax)
inc    %edi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,-0x75f7f9b9(%edi)
inc    %edi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %cl,(%edx)
dec    %ebx
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,(%esp,%ecx,2)
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %bh,0xe008064a
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %cl,(%edx)
dec    %ecx
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,0x78080649(%edi)
jae    806deb3 <_IO_stdin_used+0x2c4f>
jb     806deb5 <_IO_stdin_used+0x2c51>
outsl  %ds:(%esi),(%dx)
imul   $0x45540078,0x61(%ebp),%ebp
push   %edx
dec    %ebp
add    %ah,0x6d(%ebp,%esi,2)
bound  %eax,(%eax)
cs add %al,%cs:(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
sub    $0x63656863,%eax
imul   $0x63,(%esi),%ebp
add    %dh,0x74(%ebx)
popa
je     806df08 <_IO_stdin_used+0x2ca4>
sub    $0x67616d3e,%eax
imul   $0x39203d3d,0x20(%ebx),%esp
cmp    %dh,(%edx)
aaa
cmp    %dh,(%esi)
xor    (%eax),%al
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x0(%ebx)
das
das
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     806df53 <_IO_stdin_used+0x2cef>
jb     806df4f <_IO_stdin_used+0x2ceb>
insl   (%dx),%es:(%edi)
jne    806df5f <_IO_stdin_used+0x2cfb>
je     806df5e <_IO_stdin_used+0x2cfa>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806df6e <_IO_stdin_used+0x2d0a>
add    %ch,0x62(%ebp)
jne    806df68 <_IO_stdin_used+0x2d04>
je     806df66 <_IO_stdin_used+0x2d02>
jb     806df62 <_IO_stdin_used+0x2cfe>
insl   (%dx),%es:(%edi)
jne    806df72 <_IO_stdin_used+0x2d0e>
je     806df71 <_IO_stdin_used+0x2d0d>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806df81 <_IO_stdin_used+0x2d1d>
add    %ebx,(%ebx)
add    (%ebx),%edi
inc    %eax
pop    %es
add    %al,(%eax)
out    %eax,$0x0
add    %al,(%eax)
push   %eax
mov    $0x75cfffd,%eax
add    %al,(%eax)
adc    %al,%al
std
incl   (%eax)
or     $0x0,%al
add    %al,(%eax)
sar    %ebp
incl   0x30000007(%eax)
sar    %ebp
lcall  *0x60000007(%eax)
sar    %ebp
ljmp   *-0x2e500000(%edi,%eax,1)
std
dec    %eax
pop    %es
add    %al,(%eax)
mov    $0xd6,%al
std
decl   (%eax)
or     %al,(%eax)
add    %dh,(%eax)
(bad)
jmp    *0x8(%eax)
add    %al,(%eax)
inc    %eax
(bad)
pushl  0x0(%eax,%ecx,1)
add    %dl,-0x23(%eax)
std
decl   0x70000008(%eax)
(bad)
lcall  *-0x21e00000(%eax,%ecx,1)
std
(bad)
fmull  (%eax)
add    %al,(%eax)
mov    $0xdf,%al
std
decl   (%ecx,%ecx,1)
add    %al,(%eax)
rcr    %bh
std
jmp    *(%eax)
or     %eax,(%eax)
add    %ah,(%eax)
loop   806df8c <_IO_stdin_used+0x2d28>
jmp    *0x9(%eax)
add    %al,(%eax)
mov    $0xe2,%al
std
lcall  *0x10000009(%eax)
in     $0xfd,%al
(bad)
fmuls  (%ecx)
add    %al,(%eax)
shr    $0xfd,%cl
lcall  *(%eax)
or     (%eax),%al
add    %dl,-0x12(%eax)
std
lcall  *0xa(%eax)
add    %al,(%eax)
mov    0xb0fffdef,%al
or     (%eax),%al
add    %dl,-0xd(%eax)
std
push   %eax
or     (%eax),%al
add    %dl,(%eax)
clc
std
jmp    *0xb(%eax)
add    %al,(%eax)
loopne 806dfd9 <_IO_stdin_used+0x2d75>
(bad)
(bad)
mov    $0xb000000b,%eax
or     $0xfe,%al
jmp    *%eax
or     (%eax),%eax
add    %dh,0x20fffe10(%eax)
or     $0x0,%al
add    %al,0x18(%eax)
(bad)
jmp    *0xc(%eax)
add    %al,(%eax)
rcrb   0xca0fffe
add    %al,(%eax)
add    %ah,(%ebx)
(bad)
jmp    *%eax
or     $0x0,%al
add    %dh,(%eax)
sub    $0xd38fffe,%eax
add    %al,(%eax)
adc    %dh,(%esi)
(bad)
call   *0x6000000d(%eax)
aaa
(bad)
call   *%eax
or     $0x3e300000,%eax
(bad)
ljmp   *(%eax)
push   %cs
add    %al,(%eax)
and    %al,-0x2(%ebx)
ljmp   *0x0(%esi,%ecx,1)
add    %dh,(%eax)
dec    %ecx
(bad)
(bad)
fmull  (%esi)
add    %al,(%eax)
pusha
dec    %ecx
(bad)
(bad)
cld
push   %cs
add    %al,(%eax)
mov    $0x4a,%al
(bad)
(bad)
cmp    $0xf,%al
add    %al,(%eax)
lock dec %ebx
(bad)
call   *0x4ce00000(%edi,%ecx,1)
(bad)
inc    %esp
sldt   (%eax)
push   %eax
dec    %esi
(bad)
incl   (%eax,%edx,1)
add    %al,(%eax)
nop
dec    %edi
(bad)
lcall  *0x0(%eax,%edx,1)
add    %dl,-0x670001b0(%eax)
adc    %al,(%eax)
add    %al,%al
push   %ecx
(bad)
call   *%eax
adc    %al,(%eax)
add    %dh,%al
push   %edx
(bad)
decl   (%eax)
adc    %eax,(%eax)
add    %dh,0x4cfffe57(%eax)
adc    %eax,(%eax)
add    %ah,-0x730001a5(%eax)
adc    %eax,(%eax)
add    %dl,%al
insb   (%dx),%es:(%edi)
(bad)
call   *%eax
adc    %eax,(%eax)
add    %dl,(%eax)
js     806e08d <_IO_stdin_used+0x2e29>
call   *(%eax)
adc    (%eax),%al
add    %dl,%al
jns    806e095 <_IO_stdin_used+0x2e31>
ljmp   *0x12(%eax)
add    %al,(%eax)
pusha
jge    806e09d <_IO_stdin_used+0x2e39>
ljmp   *-0x5fffffee(%eax)
cmp    $0xff,%dh
call   b806e0bf <optarg+0xafffadbb>
(bad)
(bad)
ljmp   *(%eax)
adc    (%eax),%eax
add    %dl,%al
(bad)
(bad)
incl   0x13(%eax)
add    %al,(%eax)
mov    0xb0fffe84,%al
adc    (%eax),%eax
add    %al,%al
test   %bh,%dh
dec    %eax
adc    (%eax),%eax
add    %ah,%al
mov    %edi,%esi
decl   (%eax)
adc    $0x0,%al
add    %dh,0x40fffe8a(%eax)
adc    $0x0,%al
add    %dh,(%eax)
mov    %?,%esi
ljmp   *0x14(%eax)
add    %al,(%eax)
xor    %bl,0x14acfffe(%eax)
add    %al,(%eax)
push   %eax
test   $0xfe,%al
push   %eax
adc    $0x0,%al
add    %ah,%al
stos   %al,%es:(%edi)
(bad)
decl   0x15(%eax)
add    %al,(%eax)
pusha
scas   %es:(%edi),%eax
(bad)
decl   -0x2fffffeb(%eax)
mov    $0xfe,%bl
jmp    *%eax
adc    $0xb9200000,%eax
(bad)
call   *0x16(%eax)
add    %al,(%eax)
add    %bh,0x1680fffe(%edx)
add    %al,(%eax)
ror    $0xfe,%al
inc    %eax
push   %ss
add    %al,(%eax)
lock leave
(bad)
push   %esp
push   %ss
add    %al,(%eax)
adc    %cl,%dl
(bad)
decl   (%edi,%edx,1)
add    %al,(%eax)
and    %cl,%dl
(bad)
jmp    *(%eax)
pop    %ss
add    %al,(%eax)
nop
lret   $0xfffe
cmp    $0x17,%al
add    %al,(%eax)
nop
int    $0xfe
(bad)
jl     806e161 <_IO_stdin_used+0x2efd>
add    %al,(%eax)
nop
into
(bad)
(bad)
mov    $0xb0000017,%esp
into
(bad)
call   *%esp
pop    %ss
add    %al,(%eax)
adc    %dl,%al
(bad)
ljmp   *(%eax,%ebx,1)
add    %al,(%eax)
mov    $0xd0,%al
(bad)
lcall  *0x0(%eax,%ebx,1)
add    %dl,%al
sar    %esi
pushl  -0xfffffe8(%eax)
sar    %cl,%esi
decl   (%eax)
sbb    %eax,(%eax)
add    %al,-0x2c(%eax)
(bad)
incl   0x0(%ecx,%ebx,1)
add    %dl,-0x2c(%eax)
(bad)
lcall  *0x19(%eax)
add    %al,(%eax)
pusha
aam    $0xfe
ljmp   *0x0(%ecx,%ebx,1)
add    %dh,(%eax)
aad    $0xfe
lcall  *0x40000019(%eax)
aad    $0xfe
ljmp   *-0x2aa00000(%ecx,%ebx,1)
(bad)
inc    %esp
sbb    %eax,(%eax)
add    %al,-0x2300012b(%eax)
sbb    %eax,(%eax)
add    %dl,-0xf00012b(%eax)
sbb    %eax,(%eax)
add    %dl,-0x7b00012a(%eax)
sbb    (%eax),%al
add    %ah,%al
fdivr  %st(6),%st
inc    %esp
sbb    (%eax),%al
add    %al,%al
(bad)
(bad)
in     (%dx),%al
sbb    (%eax),%al
add    %ah,%al
(bad)
incl   (%ebx,%ebx,1)
add    %al,(%eax)
push   %eax
(bad)
(bad)
cmp    %bl,(%ebx)
add    %al,(%eax)
lock (bad)
(bad)
js     806e205 <_IO_stdin_used+0x2fa1>
add    %al,(%eax)
xor    %bl,%dh
(bad)
dec    %esp
sbb    (%eax),%eax
add    %dl,(%eax)
loop   806e1f5 <_IO_stdin_used+0x2f91>
jmp    *(%esp,%ebx,1)
add    %al,(%eax)
inc    %eax
in     $0xfe,%al
(bad)
jl     806e21e <_IO_stdin_used+0x2fba>
add    %al,(%eax)
push   %eax
in     $0xfe,%al
call   *0x6000001c(%eax)
in     $0xfe,%al
jmp    *-0x1ac00000(%esp,%ebx,1)
(bad)
call   *(%eax)
sbb    $0xe6800000,%eax
(bad)
ljmp   *0x1d(%eax)
add    %al,(%eax)
nop
out    %al,$0xfe
(bad)
jl     806e247 <_IO_stdin_used+0x2fe3>
add    %al,(%eax)
mov    0x90fffee6,%al
sbb    $0xe6b00000,%eax
(bad)
jmp    *-0x19000000(%ebp,%ebx,1)
(bad)
dec    %eax
sbb    $0xe7600000,%eax
(bad)
incl   (%esi,%ebx,1)
add    %al,(%eax)
jo     806e236 <_IO_stdin_used+0x2fd2>
(bad)
incl   0x1e(%eax)
add    %al,(%eax)
loopne 806e23e <_IO_stdin_used+0x2fda>
(bad)
decl   0x2000001e(%eax)
jmp    26afe260 <optarg+0x1ea8af5c>
add    %al,(%eax)
nop
jmp    26ebe268 <optarg+0x1ee4af64>
add    %al,(%eax)
add    %ch,%dl
(bad)
jmp    *(%eax)
pop    %ds
add    %al,(%eax)
sub    $0xfe,%dl
lcall  *0x0(%edi,%ebx,1)
add    %al,%al
ljmp   $0x0,$0x1f80fffe
lock ljmp $0x0,$0x1f94fffe
pusha
in     (%dx),%eax
(bad)
(bad)
in     (%dx),%al
pop    %ds
add    %al,(%eax)
lock in (%dx),%eax
(bad)
jmp    *(%eax)
and    %al,(%eax)
add    %al,%al
out    %al,(%dx)
(bad)
call   *0x0(%eax,%eiz,1)
add    %dl,-0xf(%eax)
(bad)
(bad)
fsubs  (%eax)
add    %al,(%eax)
add    %dh,%ah
(bad)
incl   0x0(%ecx,%eiz,1)
add    %dl,(%eax)
hlt
(bad)
lcall  *0x21(%eax)
add    %al,(%eax)
nop
idiv   %dh
jmp    *-0x6a00000(%ecx,%eiz,1)
(bad)
(bad)
cld
and    %eax,(%eax)
add    %dl,0x1cfffef9(%eax)
and    (%eax),%al
add    %dh,%al
stc
(bad)
call   *0x0(%edx,%eiz,1)
add    %dl,(%eax)
cli
(bad)
ljmp   *0x22(%eax)
add    %al,(%eax)
addb   $0xff,(%ecx)
ljmp   *-0x3fffffde(%eax)
add    %edi,%edi
inc    %eax
and    (%eax),%al
add    %dh,0x2(%eax)
(bad)
incl   (%eax)
and    (%eax),%eax
add    %ah,(%eax)
or     %edi,%edi
incl   0x0(%ebx,%eiz,1)
add    %al,%al
or     %edi,%edi
decl   0xe700000(%ebx,%eiz,1)
(bad)
(bad)
clc
and    (%eax),%eax
add    %ah,0xf(%eax)
(bad)
(bad)
cmp    %ah,(%eax,%eax,1)
add    %ah,0x10(%eax)
(bad)
pushl  0x24(%eax)
add    %al,(%eax)
jo     806e340 <_IO_stdin_used+0x30dc>
(bad)
pushl  0x1ab00000(%esp)
(bad)
(bad)
call   d806e359 <optarg+0xcfffb055>
sbb    %bh,%bh
(bad)
cld
and    $0x0,%al
add    %dh,%al
sbb    %bh,%bh
call   *(%eax)
and    $0x1b300000,%eax
(bad)
pushl  0x1b500000(,%eiz,1)
(bad)
decl   0x25(%eax)
add    %al,(%eax)
nop
sbb    %edi,%edi
ljmp   *0x0(%ebp,%eiz,1)
add    %dh,%al
sbb    %edi,%edi
jmp    *-0x4fffffdb(%eax)
sbb    $0xff,%al
(bad)
fsubl  0x1d900000
(bad)
lcall  *(%eax)
add    %al,%es:(%eax)
and    %bl,(%esi)
(bad)
decl   0x0(%esi,%eiz,1)
add    %dh,-0x730000e1(%eax)
add    %al,%es:(%eax)
inc    %eax
and    %edi,%edi
dec    %esp
add    %al,%es:(%eax)
shlb   $0xff,(%edx)
decl   (%edi,%eiz,1)
add    %al,(%eax)
xor    %ah,(%edi,%edi,8)
decl   0x0(%edi,%eiz,1)
add    %al,0x26(%eax)
(bad)
call   *0x60000027(%eax)
sub    %bh,%bh
call   *%esp
daa
add    %al,(%eax)
pusha
sub    %bh,%bh
lcall  *(%eax)
sub    %al,(%eax)
add    %ah,0x2c(%eax)
(bad)
lcall  *0x0(%eax,%ebp,1)
add    %ah,0x2e(%eax)
(bad)
lcall  *0x30600000(%eax,%ebp,1)
(bad)
(bad)
fsubrl (%eax)
add    %al,(%eax)
inc    %eax
xor    %bh,%bh
lcall  *(%ecx,%ebp,1)
add    %al,(%eax)
and    %dh,(%edi,%edi,8)
lcall  *0x0(%ecx,%ebp,1)
add    %ah,0x36(%eax)
(bad)
jmp    *-0x5fffffd7(%eax)
cmp    %bh,%bh
jmp    *%esp
sub    %eax,(%eax)
add    %dh,0x24ffff3a(%eax)
sub    (%eax),%al
add    %al,%al
cmp    $0xff,%al
jmp    *0x0(%edx,%ebp,1)
add    %dl,0x3e(%eax)
(bad)
jmp    *0x3fc00000(%edx,%ebp,1)
(bad)
jmp    *%esp
sub    (%eax),%al
add    %dl,0x41(%eax)
(bad)
jmp    *(%ebx,%ebp,1)
add    %al,(%eax)
rolb   -0x1(%edx)
jmp    *0x0(%ebx,%ebp,1)
add    %dh,(%eax)
inc    %ebx
(bad)
jmp    *0x7000002b(%eax)
inc    %ebx
(bad)
(bad)
fsubrs (%ebx)
add    %al,(%eax)
inc    %eax
dec    %ecx
(bad)
lcall  *(%esp,%ebp,1)
add    %al,(%eax)
orb    $0xff,-0x1(%ecx)
pop    %eax
sub    $0x0,%al
add    %dh,%al
dec    %esi
(bad)
push   %esp
sub    $0x0,%al
add    %dl,(%eax)
push   %esp
(bad)
(bad)
js     806e477 <_IO_stdin_used+0x3213>
add    %al,(%eax)
rcrb   $0xff,-0x1(%edx)
add    %ch,(%esi)
add    %al,(%eax)
jo     806e4b7 <_IO_stdin_used+0x3253>
(bad)
lcall  *0x2e(%eax)
add    %al,(%eax)
and    %ah,-0x1(%edx)
(bad)
jl     806e490 <_IO_stdin_used+0x322c>
add    %al,(%eax)
pusha
(bad)
(bad)
jmp    *-0x3fffffd2(%eax)
(bad)
(bad)
(bad)
fsubrl (%esi)
add    %al,(%eax)
push   %eax
arpl   %di,%di
jmp    *(%edi,%ebp,1)
add    %al,(%eax)
andb   $0xff,-0x1(%ebx)
dec    %eax
das
add    %al,(%eax)
mov    $0x63,%al
(bad)
ljmp   *0x0(%edi,%ebp,1)
add    %al,(%eax)
fs
(bad)
lcall  *0x64700000(%edi,%ebp,1)
(bad)
dec    %esp
das
add    %al,(%eax)
mov    $0x64,%al
(bad)
push   %eax
das
add    %al,(%eax)
loopne 806e50a <_IO_stdin_used+0x32a6>
(bad)
decl   (%eax,%esi,1)
add    %al,(%eax)
and    %ah,-0x1(%ebp)
pushl  (%eax)
xor    %al,(%eax)
add    %ah,0x65(%eax)
(bad)
lcall  *0x0(%eax,%esi,1)
add    %dh,0x70ffff65(%eax)
xor    %al,(%eax)
add    %al,(%eax)
data16
(bad)
call   *0x66400000(%eax,%esi,1)
(bad)
(bad)
mov    $0x80000030,%eax
data16
(bad)
(bad)
fdivl  (%eax)
add    %al,(%eax)
jo     806e557 <_IO_stdin_used+0x32f3>
(bad)
decl   0x31(%eax)
add    %al,(%eax)
mov    $0x79,%al
(bad)
incl   -0x3fffffcf(%eax)
jns    806e4ee <_IO_stdin_used+0x328a>
call   *0x79f00000(%ecx,%esi,1)
(bad)
ljmp   *0x7a100000(%ecx,%esi,1)
(bad)
inc    %esp
xor    %eax,(%eax)
add    %dl,0x7a(%eax)
(bad)
push   %esp
xor    %eax,(%eax)
add    %al,0xcffff7a(%eax)
xor    (%eax),%al
add    %dh,0x24ffff7a(%eax)
xor    (%eax),%al
add    %dl,%al
jp     806e51e <_IO_stdin_used+0x32ba>
(bad)
cmp    %dh,(%edx)
add    %al,(%eax)
inc    %eax
jnp    806e526 <_IO_stdin_used+0x32c2>
ljmp   *0x0(%edx,%esi,1)
add    %dl,(%eax)
jge    806e52e <_IO_stdin_used+0x32ca>
inc    %esp
xor    (%eax),%al
add    %ah,%al
jge    806e536 <_IO_stdin_used+0x32d2>
incl   (%eax)
xor    (%eax),%eax
add    %dl,0x38ffff7e(%eax)
xor    (%eax),%eax
add    %al,(%eax)
(bad)
(bad)
(bad)
js     806e57d <_IO_stdin_used+0x3319>
add    %al,(%eax)
mov    0x18ffff8e,%al
xor    $0x0,%al
add    %ah,-0x6b(%eax)
(bad)
decl   0x40000034(%eax)
xchg   %eax,%edi
(bad)
inc    %eax
xor    $0x0,%al
add    %dh,-0x5f(%eax)
(bad)
pushl  (%eax)
xor    $0xa1b00000,%eax
(bad)
call   *0x35(%eax)
add    %al,(%eax)
shlb   0x35ecffff(%ebx)
add    %al,(%eax)
xor    %ah,0x3638ff(%edi,%edi,8)
add    %ah,0x70ffffa4(%eax)
add    %al,%ss:(%eax)
shlb   0x3688ff(%edi,%edi,8)
add    %dl,-0x5b(%eax)
(bad)
jmp    *%eax
add    %al,%ss:(%eax)
jo     806e543 <_IO_stdin_used+0x32df>
(bad)
push   %esp
add    %al,%ss:(%eax)
pusha
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
decl   0x0(%edi,%esi,1)
add    %ah,0x64ffffa6(%eax)
aaa
add    %al,(%eax)
shlb   0x3778ffff(%esi)
add    %al,(%eax)
loopne 806e564 <_IO_stdin_used+0x3300>
(bad)
decl   -0x58e00000(%edi,%esi,1)
(bad)
(bad)
mov    $0x60000037,%eax
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
push   %esp
aaa
add    %al,(%eax)
and    %ch,0x3834ffff(%ebx)
add    %al,(%eax)
subb   $0x0,0x3864ff(%edi,%edi,8)
and    %dh,0x3894ffff(%esi)
add    %al,(%eax)
add    %al,%dh
(bad)
(bad)
fdivrs (%eax)
add    %al,(%eax)
lock enter $0xffff,$0x1c
cmp    %eax,(%eax)
add    %ah,%al
lret   $0xffff
pop    %esp
cmp    %eax,(%eax)
add    %dh,-0x5b000035(%eax)
cmp    %eax,(%eax)
add    %ah,%al
lret
(bad)
(bad)
mov    $0x39,%esp
int    $0xff
incl   (%edx,%edi,1)
add    %al,(%eax)
pusha
int    $0xff
pushl  (%eax)
cmp    (%eax),%al
add    %dl,%al
int    $0xff
lcall  *0x3a(%eax)
add    %al,(%eax)
lock iret
(bad)
lcall  *0x2000003a(%eax)
sar    %edi
incl   (%ebx,%edi,1)
add    %al,(%eax)
adc    $0xff,%dl
pushl  0x3b(%eax)
add    %al,(%eax)
lock sar %cl,%bh
ljmp   *-0x2d000000(%ebx,%edi,1)
(bad)
inc    %eax
cmp    (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     806e66b <_IO_stdin_used+0x3407>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
mov    $0xfd,%al
inc    %eax
pop    %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     806e68b <_IO_stdin_used+0x3427>
js     806e689 <_IO_stdin_used+0x3425>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,-0x37(%eax)
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dl,0x2cfffdc9(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ch,0x41fffd(%ecx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
loopne 806e6ab <_IO_stdin_used+0x3447>
std
(bad)
stc
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x3500e43
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,%al
add    %al,(%eax)
add    %ah,0x7efffdce(%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
in     (%dx),%al
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %cl,%al
aam    $0xfd
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%ecx,%eax,1)
add    %al,(%eax)
(bad)
aam    $0xfd
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
rcl    $0xfd,%ah
call   *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
add    %eax,(%eax)
add    %cl,%ah
aam    $0xfd
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9b,0x2180e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
pushf
add    %eax,(%eax)
add    %bh,0x185fffd(,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
add    %eax,(%eax)
add    %bl,0x15fffd(%esi,%edx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loopne 806e837 <_IO_stdin_used+0x35d3>
add    %al,(%eax)
test   $0xd6,%al
std
decl   0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
and    %al,(%edx)
add    %al,(%eax)
mov    $0x86fffdd8,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    %bl,%cl
std
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1900e45
out    %eax,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cwtl
add    (%eax),%al
add    %dh,(%eax)
(bad)
jmp    *0x5(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fadds  (%edx)
add    %al,(%eax)
mov    0x8cfffddf,%al
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbf,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,(%eax)
add    (%eax),%eax
add    %dh,%al
jecxz  806e970 <_IO_stdin_used+0x370c>
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffe,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     806e9c9 <_IO_stdin_used+0x3765>
add    %al,(%eax)
call   b206e7b1 <optarg+0xa9ffb4ad>
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,0x58000003(%eax)
call   cc4ea0b <optarg+0x4bdb707>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc0,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x1,%ch
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
incl   (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
add    $0x0,%al
add    %ch,-0x33000214(%eax)
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2b00e46
adc    0x43140e0a,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%edx),%cs
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
js     806ead2 <_IO_stdin_used+0x386e>
add    %al,(%eax)
and    %al,(%eax)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ebx
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    0xc8000004,%al
add    %bh,%dh
push   %edx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
or     %dh,0xffcff(%ebp,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x3c,%eax
loopne 806eb3a <_IO_stdin_used+0x38d6>
add    %al,(%eax)
mov    %al,(%esi,%edi,8)
incl   0x7(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffae,0x3300e43
push   %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    %al,0xbd80000
(bad)
decl   0x5(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pusha
add    $0x11280000,%eax
(bad)
ljmp   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1e,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x18000005(%eax)
push   %ss
(bad)
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
sti
add    $0xa,%al
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,%al
add    $0x1ff00000,%eax
(bad)
(bad)
fisttpll (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x9,0x3400e43
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x41140e03,%edi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %eax
push   %es
add    %al,(%eax)
js     806ecd2 <_IO_stdin_used+0x3a6e>
(bad)
call   *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,-0x77fffffa(%eax)
sub    %edi,%esi
inc    %ecx
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jmp    806ed2e <_IO_stdin_used+0x3aca>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%eax
add    %al,(%eax)
call   806ed47 <_IO_stdin_used+0x3ae3>
xor    %bh,%dh
jmp    *%ebx
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xad00e46
js     806ed66 <_IO_stdin_used+0x3b02>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,(%edi,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
xor    $0xfe,%al
decl   (%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    0x140e0a02,%eax
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
lock add %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pushf
pop    %es
add    %al,(%eax)
dec    %esp
cmp    %dh,%bh
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x3a5c0000(%edi,%eax,1)
(bad)
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffde,0x2600e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,%ah
pop    %es
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmp    %esi,%edi
pushl  (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff7,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %dl,-0x2(%esp,%edi,1)
(bad)
jmp    806eeb5 <_IO_stdin_used+0x3c51>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
fimull (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   %cl,(%eax)
add    %al,(%eax)
adc    $0x3d,%al
(bad)
jmp    *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x1,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %al,%ah
or     %al,(%eax)
add    %al,-0x2(%esi,%edi,1)
pushl  (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x42,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
stos   %al,%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,(%ecx,%ecx,1)
add    %al,(%eax)
sub    $0x3f,%al
(bad)
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe7,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,0x9(%eax)
add    %al,(%eax)
lock aas
(bad)
ljmp   *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %dh,%ch
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
nop
or     %eax,(%eax)
add    %ch,%al
inc    %eax
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ecx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
enter  $0x9,$0x0
loopne 806f063 <_IO_stdin_used+0x3dff>
(bad)
pushl  0x4(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2800e46
stc
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     $0xa,%al
add    %al,(%eax)
pop    %esp
inc    %esi
(bad)
(bad)
jmp    806f06d <_IO_stdin_used+0x3e09>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x3600e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x42,%al
or     0x0(%eax),%eax
add    %al,(%eax)
dec    %esp
or     (%eax),%al
add    %cl,(%edx,%ecx,2)
(bad)
ljmp   *(%ebx)
adc    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
dec    %ebx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
or     (%eax),%al
add    %bh,%al
pop    %edx
(bad)
pushl  (%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%al
or     (%eax),%al
add    %bh,%al
gs
(bad)
pushl  0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sub    %cl,(%ebx)
add    %al,(%eax)
pusha
addr16 (bad)
decl   0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   $0xb000000b
push   $0xfffffffe
pushl  0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   $0xb,%al
add    %al,(%eax)
mov    $0x6d,%al
(bad)
decl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc1,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
call   8806f24c <optarg+0x7fffbf48>
outsl  %ds:(%esi),(%dx)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%edx)
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %cl,-0x3e000191(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x2300e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jne    806f2b3 <_IO_stdin_used+0x404f>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jo     806f2d2 <_IO_stdin_used+0x406e>
add    %al,(%eax)
call   2306f13d <optarg+0x1affbe39>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%edx)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
mov    %cl,(%eax,%eax,1)
add    %dh,%al
jo     806f2e1 <_IO_stdin_used+0x407d>
call   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
enter  $0xc,$0x0
(bad)
jne    806f321 <_IO_stdin_used+0x40bd>
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%esi),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
add    %cl,0x76680000
(bad)
(bad)
jns    806f35f <_IO_stdin_used+0x40fb>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    (%ebx),%ebp
add    %ecx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,(%eax)
or     $0x77c00000,%eax
(bad)
(bad)
sti
or     (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
push   %esi
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x0(%ebp,%ecx,1)
add    %bh,-0x2(%ebx,%eax,4)
lcall  *(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
xchg   %eax,%esi
or     (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x5800000d(%eax)
xchg   %eax,%ebx
(bad)
decl   0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
nop
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
or     %cl,(%esi)
add    %al,(%eax)
nop
xchg   %eax,%ebp
(bad)
(bad)
jle    806f46a <_IO_stdin_used+0x4206>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff9,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,0xe(%eax)
add    %al,(%eax)
rcrb   0x46ffffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
data16
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
lret   $0xa03
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %ah,-0x17fffff2(%eax)
popf
(bad)
decl   0x0(%ebp,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0x43140e0a,%ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
insl   (%dx),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
adc    %cl,(%edi)
add    %al,(%eax)
enter  $0xfea2,$0xff
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    0x410c0e0a,%eax
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
sldt   (%eax)
js     806f53d <_IO_stdin_used+0x42d9>
(bad)
(bad)
mov    $0xe,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6b,0x3700e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esi
add    %al,(%eax)
add    %al,-0x7fffff1(%eax)
mov    $0xfe,%cl
ljmp   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%ecx),%esp
add    %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,-0x4d0c0000(%edi,%ecx,1)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
int3
sldt   (%eax)
cld
mov    $0xfe,%dl
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,%al
sldt   (%eax)
clc
mov    $0xfe,%dl
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cld
sldt   (%eax)
dec    %esp
mov    $0xfe,%bl
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x10,%al
add    %al,(%eax)
or     $0xb6,%al
(bad)
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
jl     806f6e2 <_IO_stdin_used+0x447e>
add    %al,(%eax)
int3
mov    $0xfe,%dh
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,-0x492c0000(%eax,%edx,1)
(bad)
lcall  *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
adc    %al,(%eax)
add    %bl,%ah
mov    $0xfe,%bh
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     806f767 <_IO_stdin_used+0x4503>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bl,(%ecx,%edx,1)
add    %al,(%eax)
dec    %esp
mov    $0x11efffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x11(%eax)
add    %al,(%eax)
sbb    %bh,0x215fffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
enter  $0x11,$0x0
loopne 806f7dc <_IO_stdin_used+0x4578>
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0x12,%al
add    %al,(%eax)
hlt
mov    $0xafffe,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %dl,(%edx)
add    %al,(%eax)
lock mov $0xafffe,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    $0x12,%al
add    %al,(%eax)
in     (%dx),%al
mov    $0xcafffe,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x12(%eax)
add    %al,(%eax)
nop
mov    $0x5fffe,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    (%eax),%al
add    %cl,0x20fffe(%ebx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
test   %dl,(%edx)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x20fffe,%ebx
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x44640000(%edx,%edx,1)
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,-0x50000000(%eax)
adc    (%eax),%al
add    %bl,-0xb000145(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,0x0(%ebx,%edx,1)
add    %al,(%esp,%edi,4)
(bad)
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
xchg   %eax,%ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
test   %dl,(%ebx)
add    %al,(%eax)
adc    $0xbe,%al
(bad)
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xab00202(%ebx)
ret
push   %cs
add    $0x47,%al
or     (%edx),%eax
into
or     %bl,%al
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    (%eax),%eax
add    %cl,%ah
mov    $0x13fffe,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
les    (%ebx),%edx
add    %al,(%eax)
aam    $0xbf
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
clc
adc    (%eax),%eax
add    %dl,(%eax)
sar    $0xff,%dh
sahf
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bh,(%eax)
adc    $0x0,%al
add    %dh,-0x40(%eax)
(bad)
(bad)
cmp    %al,(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaa,0x2400e43
or     (%esi),%cl
adc    $0x4c,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
jo     806facb <_IO_stdin_used+0x4867>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,-0x3da40000(%esp,%edx,1)
(bad)
call   *%ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,%ah
adc    $0x0,%al
add    %ah,%ah
(bad)
sub    %eax,(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x15,%al
add    %al,(%eax)
mov    $0x10fffec7,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x15(%eax)
add    %al,(%eax)
mov    $0xcfffec7,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
fs
adc    $0xc7b40000,%eax
(bad)
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,%al
adc    $0xc8280000,%eax
(bad)
pushl  (%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa4,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
push   %ss
add    %al,(%eax)
adc    %cl,%cl
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%esi,%edx,1)
add    %al,(%eax)
or     $0xc9,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x16(%eax)
add    %al,(%eax)
or     %cl,%cl
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi,%edx,1)
add    %al,(%ecx,%ecx,8)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,0x30000016(%eax)
leave
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %al,%ah
push   %ss
add    %al,(%eax)
push   %esp
leave
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
sub    %cl,%dl
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
dec    %eax
pop    %ss
add    %al,(%eax)
push   %eax
lret   $0xfffe
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,0x17(%eax)
add    %al,(%eax)
jo     806fd8c <_IO_stdin_used+0x4b28>
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %ss
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lret   $0xfffe
imul   $0x41000000,(%eax),%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a5d02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
loopne 806fe4d <_IO_stdin_used+0x4be9>
add    %al,(%eax)
fmul   %st(2),%st
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bl,(%eax,%ebx,1)
add    %al,(%eax)
sbb    $0xcb,%al
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
sbb    %al,(%eax)
add    %bh,(%eax)
lret
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x0(%eax,%ebx,1)
add    %dl,-0x2(%ebx,%ecx,8)
ljmp   *0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
inc    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    %al,(%eax)
add    %ch,-0x2(%ebp,%ecx,8)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ebx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
loopne 806ff4e <_IO_stdin_used+0x4cea>
add    %al,(%eax)
enter  $0xfecd,$0xff
ret    $0x0
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xec34110(%esi,%ecx,1),%dh
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %dl,(%ecx,%ebx,1)
add    %al,(%eax)
fs
into
(bad)
incl   0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
push   %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0x98000000
sbb    %eax,(%eax)
add    %dh,-0x30(%eax)
(bad)
ljmp   *0x2(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,(%edx,%ebx,1)
add    %al,(%eax)
mov    $0xd2,%ah
(bad)
incl   0x0
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
sbb    %bl,(%edx)
add    %al,(%eax)
mov    $0xd2,%al
(bad)
(bad)
jnp    8070078 <_IO_stdin_used+0x4e14>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
fwait
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x0(%edx,%ebx,1)
add    %ah,%ah
aam    $0xfe
dec    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
imul   $0xa,(%ecx),%eax
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x5c00001a,%esp
xlat   %ds:(%ebx)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,%ah
sbb    (%eax),%al
add    %ch,-0x2(%edi,%edx,8)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x1b,%al
add    %al,(%eax)
xchg   %eax,%esp
xlat   %ds:(%ebx)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %bl,(%ebx)
add    %al,(%eax)
mov    0x6cfffed7,%al
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
clc
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
push   $0xd000001b
fdivrp %st,%st(6)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%ebp)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbbb   $0x0,(%ebx)
add    %bh,%al
fdivrp %st,%st(6)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %al,%al
sbb    (%eax),%eax
add    %ch,-0x21(%eax)
(bad)
ljmp   *0x8(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
dec    %ecx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,(%esp,%ebx,1)
add    %al,(%eax)
aam    $0xe7
(bad)
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jo     8070283 <_IO_stdin_used+0x501f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x4c000000
sbb    $0x0,%al
add    %ch,(%eax,%ebp,8)
(bad)
ljmp   *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x7000001c,%eax
ljmp   $0x0,$0xeafffe
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
clc
sbb    $0x0,%al
add    %ah,(%eax)
jmp    8070351 <_IO_stdin_used+0x50ed>
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%eax)
sbb    $0xebe80000,%eax
(bad)
decl   0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
push   $0x3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
je     80703e7 <_IO_stdin_used+0x5183>
add    %al,(%eax)
mov    $0xf5,%ah
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x3fffffe3(%eax)
cmc
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0xa340000(%ebp,%ebx,1)
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%al
sbb    $0xf5d80000,%eax
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
hlt
sbb    $0xf5f40000,%eax
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
push   %ds
add    %al,(%eax)
add    %dh,%dh
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
sub    $0x1e,%al
add    %al,(%eax)
sbb    $0xf6,%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
pusha
push   %ds
add    %al,(%eax)
dec    %eax
idiv   %dh
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,-0x9340000(%esi,%ebx,1)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bl,%al
push   %ds
add    %al,(%eax)
jo     8070529 <_IO_stdin_used+0x52c5>
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     $0x1f,%al
add    %al,(%eax)
int3
idiv   %esi
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %esp
pop    %ds
add    %al,(%eax)
sbb    $0xf9,%al
(bad)
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    %ds,(%edi)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cli
(bad)
(bad)
jl     80705eb <_IO_stdin_used+0x5387>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
int3
pop    %ds
add    %al,(%eax)
lods   %ds:(%esi),%al
sti
(bad)
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
or     $0x20,%al
add    %al,(%eax)
fdivr  %st,%st(4)
(bad)
decl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%ebx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x20(%eax)
add    %al,(%eax)
test   $0xfe,%al
(bad)
call   *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
roll   $0xa,(%ecx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x840000(%eax,%eiz,1)
(bad)
push   %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x1,%ah
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,%al
and    %al,(%eax)
add    %al,0x2(%eax)
(bad)
(bad)
stc
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%edx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    $0x21,%al
add    %al,(%eax)
cld
add    %edi,%edi
push   %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %esp
and    %eax,(%eax)
add    %bh,0x1f4ffff(%ebp,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pushf
and    %eax,(%eax)
add    %bh,-0x1(%edi,%eax,1)
(bad)
faddl  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fsubl  (%ecx)
add    %al,(%eax)
sbb    $0x9,%al
(bad)
(bad)
faddl  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
sbb    $0x22,%al
add    %al,(%eax)
mov    $0x36ffff0a,%esp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
loope  8070899 <_IO_stdin_used+0x5635>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x22(%eax)
add    %al,(%eax)
mov    $0x3effff0c,%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
out    %eax,$0x1
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    (%eax),%al
add    %dh,0x20bffff(%esi,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     $0x22,%al
add    %al,(%eax)
test   %dl,(%eax)
(bad)
decl   (%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0x23,%al
add    %al,(%eax)
push   %esp
adc    %bh,%bh
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    %fs:(%eax),%eax
add    %ah,0x16cffff(%ebx,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    (%eax),%eax
add    %dl,%ah
adc    $0xff,%al
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     $0x23,%al
add    %al,(%eax)
and    $0x16,%al
(bad)
(bad)
jl     8070a43 <_IO_stdin_used+0x57df>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,(%esp)
add    %al,(%eax)
fs
pop    %ss
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ah,0x24(%eax)
add    %al,(%eax)
mov    %dl,(%edi)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,-0x6fffffdc(%eax)
pop    %ss
(bad)
inc    %edi
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
or     %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
fsubl  (%eax,%eax,1)
add    %bl,0x39ffff(,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %bl,(%eax)
and    $0x1d200000,%eax
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,-0x4c000000(%eax)
and    $0x21f40000,%eax
(bad)
call   *0x41000000(,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
test   %al,(%eax)
add    %al,(%eax)
cmp    %ah,(%esi)
add    %al,(%eax)
nop
es
(bad)
ljmp   *0x6(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
hlt
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,%al
add    %al,%es:(%eax)
mov    $0xaaffff2c,%eax
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
sbb    $0x2,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bl,(%eax)
daa
add    %al,(%eax)
adc    %dh,(%ebx)
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cmp    $0x27,%al
add    %al,(%eax)
pushf
xor    %edi,%edi
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
pusha
daa
add    %al,(%eax)
mov    $0x5dffff33,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %ch,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bl,0x33dc0000(%edi,%eiz,1)
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ah,%ah
daa
add    %al,(%eax)
and    $0x34,%al
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
or     %ch,(%eax)
add    %al,(%eax)
xor    %dh,(%edi,%edi,8)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
sub    $0x28,%al
add    %al,(%eax)
cmp    $0x34,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
pop    %esp
sub    %al,(%eax)
add    %bl,-0x1(%esp,%esi,1)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jne    8070ed1 <_IO_stdin_used+0x5c6d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    %gs,(%eax)
add    %al,(%eax)
pushf
xor    $0xff,%al
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0x28,%al
add    %al,(%eax)
mov    $0x25ffff34,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%ah
sub    %al,(%eax)
add    %cl,%ah
xor    $0xff,%al
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
lock sub %al,(%eax)
add    %ch,%al
xor    $0xff,%al
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,(%ecx,%ebp,1)
add    %al,(%eax)
cld
xor    $0xff,%al
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
sub    %eax,(%eax)
add    %bh,(%eax)
xor    $0x4fffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jne    8070fa5 <_IO_stdin_used+0x5d41>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
push   %esp
sub    %eax,(%eax)
add    %ah,-0x1(%ebp,%esi,1)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
js     8070ff7 <_IO_stdin_used+0x5d93>
add    %al,(%eax)
xorb   $0x0,0x3fffff
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x9c000000
sub    %eax,(%eax)
add    %bl,0x12e5ffff(%ebp,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
mov    $0xa,%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
or     %ch,(%edx)
add    %al,(%eax)
and    %cl,-0x1(%eax)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
sub    (%eax),%al
add    %ch,(%eax)
dec    %eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
sub    (%eax),%al
add    %ah,(%eax,%ecx,2)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    (%eax),%al
add    %bh,(%eax,%ecx,2)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
test   %ch,(%edx)
add    %al,(%eax)
inc    %esp
dec    %eax
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x59,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ebx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x2a,%ah
add    %al,(%eax)
push   %esp
dec    %eax
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
int3
sub    (%eax),%al
add    %ch,-0x1(%eax,%ecx,2)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
in     $0x2a,%al
add    %al,(%eax)
test   %cl,-0x1(%eax)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,%al
sub    (%eax),%al
add    %dl,0x67ffff48(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x6f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%ebx,%ebp,1)
add    %al,(%eax)
int3
dec    %eax
(bad)
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff96,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %al,0x4a440000(%ebx,%ebp,1)
(bad)
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jnp    80711fe <_IO_stdin_used+0x5f9a>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
shrb   $0x0,(%ebx)
add    %bl,%al
dec    %edx
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
clc
sub    (%eax),%eax
add    %dl,0x4b(%eax)
(bad)
pushl  0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
pop    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x2c380000(%eax,%eax,1),%ebx
add    %al,(%eax)
orb    $0xff,-0x1(%esi)
lahf
or     $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
lea    (%edx,%ecx,1),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
orb    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %bl,%al
sub    $0x0,%al
add    %al,-0x4e0000a6(%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x3600e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
ret    $0xe0a
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
dec    %eax
sub    $0x60d00000,%eax
(bad)
call   *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%esi),%ebx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,0x7800002d(%eax)
(bad)
(bad)
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
cmp    %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
xchg   %eax,%ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
lock sub $0x6c380000,%eax
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%edx
add    $0x0,%al
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %dl,(%eax)
add    %al,%cs:(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
(bad)
jmp    *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff84,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %ch,0x6ddc0000(%esi,%ebp,1)
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
clc
add    %al,%cs:(%eax)
lock insl (%dx),%es:(%edi)
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    %ch,(%edi)
add    %al,(%eax)
sub    %ch,-0x1(%esi)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,0x2f(%eax)
add    %al,(%eax)
inc    %eax
outsb  %ds:(%esi),(%dx)
(bad)
(bad)
js     80715a6 <_IO_stdin_used+0x6342>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     80715c7 <_IO_stdin_used+0x6363>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x6800002f(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x6e740000(%edi,%ebp,1)
(bad)
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     $0x30,%al
add    %al,(%eax)
or     $0x6f,%al
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    $0x30,%al
add    %al,(%eax)
xor    $0x6f,%al
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    %al,(%eax)
add    %dl,0x6f(%eax)
(bad)
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%esi,1)
add    %cl,-0x1(%edi,%ebp,2)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37804(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bh,0x30(%eax)
add    %al,(%eax)
pusha
outsl  %ds:(%esi),(%dx)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x30,%ah
add    %al,(%eax)
outsl  %fs:(%esi),(%dx)
(bad)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
hlt
xor    %al,(%eax)
add    %ah,%ah
jb     807174e <_IO_stdin_used+0x64ea>
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
and    $0x31,%al
add    %al,(%eax)
adc    $0x74,%al
(bad)
jmp    *0x9(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0x41,0xc30a4202
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
push   %esp
xor    %eax,(%eax)
add    %al,0xfd7ffff(%ebp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
enter  $0xa05,$0xe
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,0x20000031(%eax)
(bad)
(bad)
(bad)
in     (%dx),%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
push   %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
fdivl  (%ecx)
add    %al,(%eax)
int3
(bad)
(bad)
(bad)
jmp    807183b <_IO_stdin_used+0x65d7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %bl,(%edx,%esi,1)
add    %al,(%eax)
jl     8071807 <_IO_stdin_used+0x65a3>
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     807189b <_IO_stdin_used+0x6637>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
xor    %fs:(%eax),%al
add    %al,(%edx,%edx,4)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bh,0x0(%edx,%esi,1)
add    %bl,(%edx,%edx,4)
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,%ah
xor    (%eax),%al
add    %dh,%ah
xchg   %eax,%edx
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
lock xor (%eax),%al
add    %ch,(%eax)
xchg   %eax,%ebx
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5adfe(%ebx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %eax
or     %bl,%al
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    %dh,(%ebx)
add    %al,(%eax)
jo     8071905 <_IO_stdin_used+0x66a1>
(bad)
lcall  *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   $0x58000000
xor    (%eax),%eax
add    %dl,-0x6b(%eax)
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
les    (%ebx),%esi
add    %al,(%eax)
adc    $0x96,%al
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8071a43 <_IO_stdin_used+0x67df>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8071a7a <_IO_stdin_used+0x6816>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,(%eax)
xor    $0x0,%al
add    %cl,(%eax)
xchg   %eax,%edi
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,0x0(%esp,%esi,1)
add    %bh,(%edi,%edx,4)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x38000034(%eax)
xchg   %eax,%edi
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
loopne 8072eb1 <_IO_stdin_used+0x7c4d>
add    $0x8,%al
.byte 0xc0
scas   %es:(%edi),%eax
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
xor    %dl,0xd0804(%edi)
add    %al,(%eax)
dec    %esp
mov    $0x6,%dl
or     %bl,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
das
pop    %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x2f,%al
pop    %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
je     8072ee5 <_IO_stdin_used+0x7c81>
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %dl,0xa0804(%edx,%eax,4)
add    %al,(%eax)
cmc
add    $0xb0000,%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%edi)
or     %al,(%edx)
add    %al,(%eax)
add    %bl,%al
add    (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,-0x6d(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
sbb    %dl,0x120804(%ebx)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x78(%edi)
xchg   %eax,%edx
add    $0x8,%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x6a(%edi)
xchg   %eax,%ecx
add    $0x8,%al
add    %al,(%eax)
or     $0x2f,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x69(%esi)
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    8072fe6 <_IO_stdin_used+0x7d82>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    8073027 <_IO_stdin_used+0x7dc3>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    8073068 <_IO_stdin_used+0x7e04>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    80730a9 <_IO_stdin_used+0x7e45>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    80730ea <_IO_stdin_used+0x7e86>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    807312b <_IO_stdin_used+0x7ec7>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    807316c <_IO_stdin_used+0x7f08>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
(bad)
(bad)
(bad)
lcall  *(%ecx)
add    (%eax),%eax
add    %al,(%edx)
add    %al,(%eax)
add    %ch,0x340806b7
mov    $0x6,%bh
or     %cl,-0x71f7f94d(%esi)
mov    $0x6,%bl
or     %bh,0x400806b7
mov    $0x6,%bh
or     %al,-0x49(%eax)
push   %es
or     %al,-0x49(%ebx)
push   %es
or     %al,-0x49(%esi)
push   %es
or     %al,-0x49(%esi)
push   %es
or     %cl,0x6(%edi,%esi,4)
or     %bh,%bh
(bad)
(bad)
incl   (%ecx)
add    %al,(%eax)
add    %ah,0x10805ad(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,0x1000807(%edx,%esi,1)
add    %al,(%eax)
add    %bh,(%ebx)
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
gs
addr16 jb 69 <__ctype_toupper_loc@plt-0x8049707>
jo     6 <__ctype_toupper_loc@plt-0x804976a>
add    %al,(%eax)
.byte 0xb9
out    %eax,$0xed
.byte 0xbe
